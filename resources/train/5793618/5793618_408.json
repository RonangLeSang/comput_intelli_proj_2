{"test_class": {"identifier": "PlainTextTokenTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String NEW_LINE = System.lineSeparator();", "modifier": "private static final", "type": "String", "declarator": "NEW_LINE = System.lineSeparator()", "var_name": "NEW_LINE"}], "file": "tinylog-impl/src/test/java/org/tinylog/pattern/PlainTextTokenTest.java"}, "test_case": {"identifier": "applyUnixNewLines", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void applyUnixNewLines() throws SQLException {\n\t\tLogEntry logEntry = LogEntryBuilder.empty().create();\n\n\t\tPreparedStatement statement = mock(PreparedStatement.class);\n\t\tnew PlainTextToken(\"\\n\").apply(logEntry, statement, 1);\n\t\tverify(statement).setString(1, NEW_LINE);\n\t}", "signature": "void applyUnixNewLines()", "full_signature": "@Test public void applyUnixNewLines()", "class_method_signature": "PlainTextTokenTest.applyUnixNewLines()", "testcase": true, "constructor": false, "invocations": ["create", "empty", "mock", "apply", "setString", "verify"]}, "focal_class": {"identifier": "PlainTextToken", "superclass": "", "interfaces": "implements Token", "fields": [{"original_string": "private static final Pattern NEW_LINE_PATTERN = Pattern.compile(\"\\r\\n|\\n|\\r\");", "modifier": "private static final", "type": "Pattern", "declarator": "NEW_LINE_PATTERN = Pattern.compile(\"\\r\\n|\\n|\\r\")", "var_name": "NEW_LINE_PATTERN"}, {"original_string": "private static final String NEW_LINE = System.getProperty(\"line.separator\");", "modifier": "private static final", "type": "String", "declarator": "NEW_LINE = System.getProperty(\"line.separator\")", "var_name": "NEW_LINE"}, {"original_string": "private final String text;", "modifier": "private final", "type": "String", "declarator": "text", "var_name": "text"}], "methods": [{"identifier": "PlainTextToken", "parameters": "(final String text)", "modifiers": "", "return": "", "signature": " PlainTextToken(final String text)", "full_signature": "  PlainTextToken(final String text)", "class_method_signature": "PlainTextToken.PlainTextToken(final String text)", "testcase": false, "constructor": true}, {"identifier": "getRequiredLogEntryValues", "parameters": "()", "modifiers": "@Override public", "return": "Collection<LogEntryValue>", "signature": "Collection<LogEntryValue> getRequiredLogEntryValues()", "full_signature": "@Override public Collection<LogEntryValue> getRequiredLogEntryValues()", "class_method_signature": "PlainTextToken.getRequiredLogEntryValues()", "testcase": false, "constructor": false}, {"identifier": "render", "parameters": "(final LogEntry logEntry, final StringBuilder builder)", "modifiers": "@Override public", "return": "void", "signature": "void render(final LogEntry logEntry, final StringBuilder builder)", "full_signature": "@Override public void render(final LogEntry logEntry, final StringBuilder builder)", "class_method_signature": "PlainTextToken.render(final LogEntry logEntry, final StringBuilder builder)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(final LogEntry logEntry, final PreparedStatement statement, final int index)", "modifiers": "@Override public", "return": "void", "signature": "void apply(final LogEntry logEntry, final PreparedStatement statement, final int index)", "full_signature": "@Override public void apply(final LogEntry logEntry, final PreparedStatement statement, final int index)", "class_method_signature": "PlainTextToken.apply(final LogEntry logEntry, final PreparedStatement statement, final int index)", "testcase": false, "constructor": false}], "file": "tinylog-impl/src/main/java/org/tinylog/pattern/PlainTextToken.java"}, "focal_method": {"identifier": "apply", "parameters": "(final LogEntry logEntry, final PreparedStatement statement, final int index)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void apply(final LogEntry logEntry, final PreparedStatement statement, final int index) throws SQLException {\n\t\tstatement.setString(index, text);\n\t}", "signature": "void apply(final LogEntry logEntry, final PreparedStatement statement, final int index)", "full_signature": "@Override public void apply(final LogEntry logEntry, final PreparedStatement statement, final int index)", "class_method_signature": "PlainTextToken.apply(final LogEntry logEntry, final PreparedStatement statement, final int index)", "testcase": false, "constructor": false, "invocations": ["setString"]}, "repository": {"repo_id": 5793618, "url": "https://github.com/pmwmedia/tinylog", "stars": 274, "created": "9/13/2012 11:21:42 AM +00:00", "updates": "2020-01-23T21:53:25+00:00", "fork": "False", "license": "licensed"}}