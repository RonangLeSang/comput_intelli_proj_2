{"test_class": {"identifier": "ThreadNameTokenTest", "superclass": "", "interfaces": "", "fields": [], "file": "tinylog-impl/src/test/java/org/tinylog/pattern/ThreadNameTokenTest.java"}, "test_case": {"identifier": "renderThreadName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void renderThreadName() {\n\t\tThreadNameToken token = new ThreadNameToken();\n\t\tThread thread = new Thread(\"MyThread\");\n\t\tassertThat(render(token, thread)).isEqualTo(\"MyThread\");\n\t}", "signature": "void renderThreadName()", "full_signature": "@Test public void renderThreadName()", "class_method_signature": "ThreadNameTokenTest.renderThreadName()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "render"]}, "focal_class": {"identifier": "ThreadNameToken", "superclass": "", "interfaces": "implements Token", "fields": [], "methods": [{"identifier": "ThreadNameToken", "parameters": "()", "modifiers": "", "return": "", "signature": " ThreadNameToken()", "full_signature": "  ThreadNameToken()", "class_method_signature": "ThreadNameToken.ThreadNameToken()", "testcase": false, "constructor": true}, {"identifier": "getRequiredLogEntryValues", "parameters": "()", "modifiers": "@Override public", "return": "Collection<LogEntryValue>", "signature": "Collection<LogEntryValue> getRequiredLogEntryValues()", "full_signature": "@Override public Collection<LogEntryValue> getRequiredLogEntryValues()", "class_method_signature": "ThreadNameToken.getRequiredLogEntryValues()", "testcase": false, "constructor": false}, {"identifier": "render", "parameters": "(final LogEntry logEntry, final StringBuilder builder)", "modifiers": "@Override public", "return": "void", "signature": "void render(final LogEntry logEntry, final StringBuilder builder)", "full_signature": "@Override public void render(final LogEntry logEntry, final StringBuilder builder)", "class_method_signature": "ThreadNameToken.render(final LogEntry logEntry, final StringBuilder builder)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(final LogEntry logEntry, final PreparedStatement statement, final int index)", "modifiers": "@Override public", "return": "void", "signature": "void apply(final LogEntry logEntry, final PreparedStatement statement, final int index)", "full_signature": "@Override public void apply(final LogEntry logEntry, final PreparedStatement statement, final int index)", "class_method_signature": "ThreadNameToken.apply(final LogEntry logEntry, final PreparedStatement statement, final int index)", "testcase": false, "constructor": false}], "file": "tinylog-impl/src/main/java/org/tinylog/pattern/ThreadNameToken.java"}, "focal_method": {"identifier": "render", "parameters": "(final LogEntry logEntry, final StringBuilder builder)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void render(final LogEntry logEntry, final StringBuilder builder) {\n\t\tThread thread = logEntry.getThread();\n\t\tbuilder.append(thread == null ? null : thread.getName());\n\t}", "signature": "void render(final LogEntry logEntry, final StringBuilder builder)", "full_signature": "@Override public void render(final LogEntry logEntry, final StringBuilder builder)", "class_method_signature": "ThreadNameToken.render(final LogEntry logEntry, final StringBuilder builder)", "testcase": false, "constructor": false, "invocations": ["getThread", "append", "getName"]}, "repository": {"repo_id": 5793618, "url": "https://github.com/pmwmedia/tinylog", "stars": 274, "created": "9/13/2012 11:21:42 AM +00:00", "updates": "2020-01-23T21:53:25+00:00", "fork": "False", "license": "licensed"}}