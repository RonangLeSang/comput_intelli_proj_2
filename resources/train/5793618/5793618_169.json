{"test_class": {"identifier": "AndroidRuntimeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic final SystemStreamCollector systemStream = new SystemStreamCollector(true);", "modifier": "@Rule\n\tpublic final", "type": "SystemStreamCollector", "declarator": "systemStream = new SystemStreamCollector(true)", "var_name": "systemStream"}], "file": "tinylog-api/src/test/java/org/tinylog/runtime/AndroidRuntimeTest.java"}, "test_case": {"identifier": "stackTraceElementsFillerThrowsException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void stackTraceElementsFillerThrowsException() {\n\t\tAndroidRuntime runtime = new AndroidRuntime();\n\n\t\tMethod method = Whitebox.getMethod(AndroidRuntimeTest.class, \"throwException\", Thread.class, StackTraceElement[].class);\n\t\tWhitebox.setInternalState(runtime, Method.class, method);\n\t\tWhitebox.setInternalState(runtime, int.class, 5);\n\n\t\tassertThat(runtime.getCallerStackTraceElement(1)).isEqualTo(new Throwable().getStackTrace()[0]);\n\t\tassertThat(systemStream.consumeErrorOutput())\n\t\t\t.containsOnlyOnce(\"ERROR\")\n\t\t\t.containsOnlyOnce(UnsupportedOperationException.class.getName());\n\t}", "signature": "void stackTraceElementsFillerThrowsException()", "full_signature": "@Test public void stackTraceElementsFillerThrowsException()", "class_method_signature": "AndroidRuntimeTest.stackTraceElementsFillerThrowsException()", "testcase": true, "constructor": false, "invocations": ["getMethod", "setInternalState", "setInternalState", "isEqualTo", "assertThat", "getCallerStackTraceElement", "getStackTrace", "containsOnlyOnce", "containsOnlyOnce", "assertThat", "consumeErrorOutput", "getName"]}, "focal_class": {"identifier": "AndroidRuntime", "superclass": "", "interfaces": "implements RuntimeDialect", "fields": [{"original_string": "private static final int STACK_TRACE_SIZE = 10;", "modifier": "private static final", "type": "int", "declarator": "STACK_TRACE_SIZE = 10", "var_name": "STACK_TRACE_SIZE"}, {"original_string": "private static final Timestamp startTime = new LegacyTimestamp();", "modifier": "private static final", "type": "Timestamp", "declarator": "startTime = new LegacyTimestamp()", "var_name": "startTime"}, {"original_string": "private final Method stackTraceElementsFiller;", "modifier": "private final", "type": "Method", "declarator": "stackTraceElementsFiller", "var_name": "stackTraceElementsFiller"}, {"original_string": "private final int stackTraceOffset;", "modifier": "private final", "type": "int", "declarator": "stackTraceOffset", "var_name": "stackTraceOffset"}], "methods": [{"identifier": "AndroidRuntime", "parameters": "()", "modifiers": "", "return": "", "signature": " AndroidRuntime()", "full_signature": "  AndroidRuntime()", "class_method_signature": "AndroidRuntime.AndroidRuntime()", "testcase": false, "constructor": true}, {"identifier": "isAndroid", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAndroid()", "full_signature": "@Override public boolean isAndroid()", "class_method_signature": "AndroidRuntime.isAndroid()", "testcase": false, "constructor": false}, {"identifier": "getDefaultWriter", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDefaultWriter()", "full_signature": "@Override public String getDefaultWriter()", "class_method_signature": "AndroidRuntime.getDefaultWriter()", "testcase": false, "constructor": false}, {"identifier": "getProcessId", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getProcessId()", "full_signature": "@Override public long getProcessId()", "class_method_signature": "AndroidRuntime.getProcessId()", "testcase": false, "constructor": false}, {"identifier": "getStartTime", "parameters": "()", "modifiers": "@Override public", "return": "Timestamp", "signature": "Timestamp getStartTime()", "full_signature": "@Override public Timestamp getStartTime()", "class_method_signature": "AndroidRuntime.getStartTime()", "testcase": false, "constructor": false}, {"identifier": "getCallerClassName", "parameters": "(final int depth)", "modifiers": "@Override public", "return": "String", "signature": "String getCallerClassName(final int depth)", "full_signature": "@Override public String getCallerClassName(final int depth)", "class_method_signature": "AndroidRuntime.getCallerClassName(final int depth)", "testcase": false, "constructor": false}, {"identifier": "getCallerClassName", "parameters": "(final String loggerClassName)", "modifiers": "@Override public", "return": "String", "signature": "String getCallerClassName(final String loggerClassName)", "full_signature": "@Override public String getCallerClassName(final String loggerClassName)", "class_method_signature": "AndroidRuntime.getCallerClassName(final String loggerClassName)", "testcase": false, "constructor": false}, {"identifier": "getCallerStackTraceElement", "parameters": "(final int depth)", "modifiers": "@Override public", "return": "StackTraceElement", "signature": "StackTraceElement getCallerStackTraceElement(final int depth)", "full_signature": "@Override public StackTraceElement getCallerStackTraceElement(final int depth)", "class_method_signature": "AndroidRuntime.getCallerStackTraceElement(final int depth)", "testcase": false, "constructor": false}, {"identifier": "getCallerStackTraceElement", "parameters": "(final String loggerClassName)", "modifiers": "@Override public", "return": "StackTraceElement", "signature": "StackTraceElement getCallerStackTraceElement(final String loggerClassName)", "full_signature": "@Override public StackTraceElement getCallerStackTraceElement(final String loggerClassName)", "class_method_signature": "AndroidRuntime.getCallerStackTraceElement(final String loggerClassName)", "testcase": false, "constructor": false}, {"identifier": "createTimestamp", "parameters": "()", "modifiers": "@Override public", "return": "Timestamp", "signature": "Timestamp createTimestamp()", "full_signature": "@Override public Timestamp createTimestamp()", "class_method_signature": "AndroidRuntime.createTimestamp()", "testcase": false, "constructor": false}, {"identifier": "createTimestampFormatter", "parameters": "(final String pattern, final Locale locale)", "modifiers": "@Override public", "return": "TimestampFormatter", "signature": "TimestampFormatter createTimestampFormatter(final String pattern, final Locale locale)", "full_signature": "@Override public TimestampFormatter createTimestampFormatter(final String pattern, final Locale locale)", "class_method_signature": "AndroidRuntime.createTimestampFormatter(final String pattern, final Locale locale)", "testcase": false, "constructor": false}, {"identifier": "getStackTraceElementsFiller", "parameters": "()", "modifiers": "private static", "return": "StackTraceElementsFiller", "signature": "StackTraceElementsFiller getStackTraceElementsFiller()", "full_signature": "private static StackTraceElementsFiller getStackTraceElementsFiller()", "class_method_signature": "AndroidRuntime.getStackTraceElementsFiller()", "testcase": false, "constructor": false}, {"identifier": "findStackTraceElement", "parameters": "(final String loggerClassName, final StackTraceElement[] trace)", "modifiers": "private static", "return": "StackTraceElement", "signature": "StackTraceElement findStackTraceElement(final String loggerClassName, final StackTraceElement[] trace)", "full_signature": "private static StackTraceElement findStackTraceElement(final String loggerClassName, final StackTraceElement[] trace)", "class_method_signature": "AndroidRuntime.findStackTraceElement(final String loggerClassName, final StackTraceElement[] trace)", "testcase": false, "constructor": false}, {"identifier": "extractCallerStackTraceElements", "parameters": "(final int count)", "modifiers": "private", "return": "StackTraceElement[]", "signature": "StackTraceElement[] extractCallerStackTraceElements(final int count)", "full_signature": "private StackTraceElement[] extractCallerStackTraceElements(final int count)", "class_method_signature": "AndroidRuntime.extractCallerStackTraceElements(final int count)", "testcase": false, "constructor": false}], "file": "tinylog-api/src/main/java/org/tinylog/runtime/AndroidRuntime.java"}, "focal_method": {"identifier": "getCallerStackTraceElement", "parameters": "(final int depth)", "modifiers": "@Override public", "return": "StackTraceElement", "body": "@Override\n\tpublic StackTraceElement getCallerStackTraceElement(final int depth) {\n\t\tStackTraceElement[] trace = extractCallerStackTraceElements(depth + stackTraceOffset + 1);\n\t\treturn trace == null ? new Throwable().getStackTrace()[depth] : trace[trace.length - 1];\n\t}", "signature": "StackTraceElement getCallerStackTraceElement(final int depth)", "full_signature": "@Override public StackTraceElement getCallerStackTraceElement(final int depth)", "class_method_signature": "AndroidRuntime.getCallerStackTraceElement(final int depth)", "testcase": false, "constructor": false, "invocations": ["extractCallerStackTraceElements", "getStackTrace"]}, "repository": {"repo_id": 5793618, "url": "https://github.com/pmwmedia/tinylog", "stars": 274, "created": "9/13/2012 11:21:42 AM +00:00", "updates": "2020-01-23T21:53:25+00:00", "fork": "False", "license": "licensed"}}