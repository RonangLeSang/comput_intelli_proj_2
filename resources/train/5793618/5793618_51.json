{"test_class": {"identifier": "ServiceLoaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SERVICE_PREFIX = \"META-INF/services/\";", "modifier": "private static final", "type": "String", "declarator": "SERVICE_PREFIX = \"META-INF/services/\"", "var_name": "SERVICE_PREFIX"}, {"original_string": "@Rule\n\tpublic final SystemStreamCollector systemStream = new SystemStreamCollector(true);", "modifier": "@Rule\n\tpublic final", "type": "SystemStreamCollector", "declarator": "systemStream = new SystemStreamCollector(true)", "var_name": "systemStream"}], "file": "tinylog-api/src/test/java/org/tinylog/configuration/ServiceLoaderTest.java"}, "test_case": {"identifier": "wrongNumberOfArguments", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void wrongNumberOfArguments() {\n\t\tServiceLoader<?> loader = new ServiceLoader<>(List.class, int.class);\n\t\tassertThat(loader.create(ArrayList.class.getName())).isNull();\n\t\tassertThat(systemStream.consumeErrorOutput()).contains(\"ERROR\").containsOnlyOnce(ArrayList.class.getName());\n\t}", "signature": "void wrongNumberOfArguments()", "full_signature": "@Test public void wrongNumberOfArguments()", "class_method_signature": "ServiceLoaderTest.wrongNumberOfArguments()", "testcase": true, "constructor": false, "invocations": ["isNull", "assertThat", "create", "getName", "containsOnlyOnce", "contains", "assertThat", "consumeErrorOutput", "getName"]}, "focal_class": {"identifier": "ServiceLoader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SERVICE_PREFIX = \"META-INF/services/\";", "modifier": "private static final", "type": "String", "declarator": "SERVICE_PREFIX = \"META-INF/services/\"", "var_name": "SERVICE_PREFIX"}, {"original_string": "private static final Pattern SPLIT_PATTERN = Pattern.compile(\" \");", "modifier": "private static final", "type": "Pattern", "declarator": "SPLIT_PATTERN = Pattern.compile(\" \")", "var_name": "SPLIT_PATTERN"}, {"original_string": "private final Class<? extends T> service;", "modifier": "private final", "type": "Class<? extends T>", "declarator": "service", "var_name": "service"}, {"original_string": "private final Class<?>[] argumentTypes;", "modifier": "private final", "type": "Class<?>[]", "declarator": "argumentTypes", "var_name": "argumentTypes"}, {"original_string": "private final ClassLoader classLoader;", "modifier": "private final", "type": "ClassLoader", "declarator": "classLoader", "var_name": "classLoader"}, {"original_string": "private final Collection<String> classes;", "modifier": "private final", "type": "Collection<String>", "declarator": "classes", "var_name": "classes"}], "methods": [{"identifier": "ServiceLoader", "parameters": "(final Class<? extends T> service, final Class<?>... argumentTypes)", "modifiers": "public", "return": "", "signature": " ServiceLoader(final Class<? extends T> service, final Class<?>... argumentTypes)", "full_signature": "public  ServiceLoader(final Class<? extends T> service, final Class<?>... argumentTypes)", "class_method_signature": "ServiceLoader.ServiceLoader(final Class<? extends T> service, final Class<?>... argumentTypes)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(final String name, final Object... arguments)", "modifiers": "public", "return": "T", "signature": "T create(final String name, final Object... arguments)", "full_signature": "public T create(final String name, final Object... arguments)", "class_method_signature": "ServiceLoader.create(final String name, final Object... arguments)", "testcase": false, "constructor": false}, {"identifier": "createList", "parameters": "(final String list)", "modifiers": "public", "return": "List<T>", "signature": "List<T> createList(final String list)", "full_signature": "public List<T> createList(final String list)", "class_method_signature": "ServiceLoader.createList(final String list)", "testcase": false, "constructor": false}, {"identifier": "createAll", "parameters": "(final Object... arguments)", "modifiers": "public", "return": "Collection<T>", "signature": "Collection<T> createAll(final Object... arguments)", "full_signature": "public Collection<T> createAll(final Object... arguments)", "class_method_signature": "ServiceLoader.createAll(final Object... arguments)", "testcase": false, "constructor": false}, {"identifier": "loadClasses", "parameters": "(final ClassLoader classLoader, final Class<? extends T> service)", "modifiers": "private static", "return": "Collection<String>", "signature": "Collection<String> loadClasses(final ClassLoader classLoader, final Class<? extends T> service)", "full_signature": "private static Collection<String> loadClasses(final ClassLoader classLoader, final Class<? extends T> service)", "class_method_signature": "ServiceLoader.loadClasses(final ClassLoader classLoader, final Class<? extends T> service)", "testcase": false, "constructor": false}, {"identifier": "toSimpleClassName", "parameters": "(final String name)", "modifiers": "public", "return": "String", "signature": "String toSimpleClassName(final String name)", "full_signature": "public String toSimpleClassName(final String name)", "class_method_signature": "ServiceLoader.toSimpleClassName(final String name)", "testcase": false, "constructor": false}, {"identifier": "createInstance", "parameters": "(final String className, final Object... arguments)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "T", "signature": "T createInstance(final String className, final Object... arguments)", "full_signature": "@SuppressWarnings(\"unchecked\") private T createInstance(final String className, final Object... arguments)", "class_method_signature": "ServiceLoader.createInstance(final String className, final Object... arguments)", "testcase": false, "constructor": false}], "file": "tinylog-api/src/main/java/org/tinylog/configuration/ServiceLoader.java"}, "focal_method": {"identifier": "create", "parameters": "(final String name, final Object... arguments)", "modifiers": "public", "return": "T", "body": "public T create(final String name, final Object... arguments) {\n\t\tif (name.indexOf('.') == -1) {\n\t\t\tString expectingClassName = toSimpleClassName(name);\n\t\t\tfor (String className : classes) {\n\t\t\t\tint split = className.lastIndexOf('.');\n\t\t\t\tString simpleClassName = split == -1 ? className : className.substring(split + 1);\n\t\t\t\tif (expectingClassName.equals(simpleClassName)) {\n\t\t\t\t\treturn createInstance(className, arguments);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tInternalLogger.log(Level.ERROR, \"Service implementation '\" + name + \"' not found\");\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn createInstance(name, arguments);\n\t\t}\n\t}", "signature": "T create(final String name, final Object... arguments)", "full_signature": "public T create(final String name, final Object... arguments)", "class_method_signature": "ServiceLoader.create(final String name, final Object... arguments)", "testcase": false, "constructor": false, "invocations": ["indexOf", "toSimpleClassName", "lastIndexOf", "substring", "equals", "createInstance", "log", "createInstance"]}, "repository": {"repo_id": 5793618, "url": "https://github.com/pmwmedia/tinylog", "stars": 274, "created": "9/13/2012 11:21:42 AM +00:00", "updates": "2020-01-23T21:53:25+00:00", "fork": "False", "license": "licensed"}}