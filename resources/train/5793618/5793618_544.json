{"test_class": {"identifier": "DynamicPathTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic final TemporaryFolder folder = new TemporaryFolder();", "modifier": "@Rule\n\tpublic final", "type": "TemporaryFolder", "declarator": "folder = new TemporaryFolder()", "var_name": "folder"}], "file": "tinylog-impl/src/test/java/org/tinylog/path/DynamicPathTest.java"}, "test_case": {"identifier": "validateFileWithPrefix", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void validateFileWithPrefix() {\n\t\tString pattern = new File(folder.getRoot(), \"log_{count}.txt\").getAbsolutePath();\n\t\tDynamicPath path = new DynamicPath(pattern);\n\t\tassertThat(path.isValid(new File(folder.getRoot(), \"log_42.txt\"))).isTrue();\n\t}", "signature": "void validateFileWithPrefix()", "full_signature": "@Test public void validateFileWithPrefix()", "class_method_signature": "DynamicPathTest.validateFileWithPrefix()", "testcase": true, "constructor": false, "invocations": ["getAbsolutePath", "getRoot", "isTrue", "assertThat", "isValid", "getRoot"]}, "focal_class": {"identifier": "DynamicPath", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_DATE_FORMAT_PATTERN = \"yyyy-MM-dd_HH-mm-ss\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_DATE_FORMAT_PATTERN = \"yyyy-MM-dd_HH-mm-ss\"", "var_name": "DEFAULT_DATE_FORMAT_PATTERN"}, {"original_string": "private final List<Segment> segments;", "modifier": "private final", "type": "List<Segment>", "declarator": "segments", "var_name": "segments"}, {"original_string": "private final File folder;", "modifier": "private final", "type": "File", "declarator": "folder", "var_name": "folder"}, {"original_string": "private final List<String> plainTexts;", "modifier": "private final", "type": "List<String>", "declarator": "plainTexts", "var_name": "plainTexts"}, {"original_string": "private final String suffix;", "modifier": "private final", "type": "String", "declarator": "suffix", "var_name": "suffix"}], "methods": [{"identifier": "DynamicPath", "parameters": "(final String path)", "modifiers": "public", "return": "", "signature": " DynamicPath(final String path)", "full_signature": "public  DynamicPath(final String path)", "class_method_signature": "DynamicPath.DynamicPath(final String path)", "testcase": false, "constructor": true}, {"identifier": "resolve", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String resolve()", "full_signature": "public String resolve()", "class_method_signature": "DynamicPath.resolve()", "testcase": false, "constructor": false}, {"identifier": "getAllFiles", "parameters": "(final String backupSuffix)", "modifiers": "public", "return": "List<FileTuple>", "signature": "List<FileTuple> getAllFiles(final String backupSuffix)", "full_signature": "public List<FileTuple> getAllFiles(final String backupSuffix)", "class_method_signature": "DynamicPath.getAllFiles(final String backupSuffix)", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "(final File file)", "modifiers": "public", "return": "boolean", "signature": "boolean isValid(final File file)", "full_signature": "public boolean isValid(final File file)", "class_method_signature": "DynamicPath.isValid(final File file)", "testcase": false, "constructor": false}, {"identifier": "collectFiles", "parameters": "(final File folder, final String suffix, final Collection<File> found)", "modifiers": "private", "return": "void", "signature": "void collectFiles(final File folder, final String suffix, final Collection<File> found)", "full_signature": "private void collectFiles(final File folder, final String suffix, final Collection<File> found)", "class_method_signature": "DynamicPath.collectFiles(final File folder, final String suffix, final Collection<File> found)", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "(final String path, final int pathPosition, final int segmentIndex)", "modifiers": "private", "return": "boolean", "signature": "boolean isValid(final String path, final int pathPosition, final int segmentIndex)", "full_signature": "private boolean isValid(final String path, final int pathPosition, final int segmentIndex)", "class_method_signature": "DynamicPath.isValid(final String path, final int pathPosition, final int segmentIndex)", "testcase": false, "constructor": false}, {"identifier": "parseSegment", "parameters": "(final String path, final String token)", "modifiers": "private static", "return": "Segment", "signature": "Segment parseSegment(final String path, final String token)", "full_signature": "private static Segment parseSegment(final String path, final String token)", "class_method_signature": "DynamicPath.parseSegment(final String path, final String token)", "testcase": false, "constructor": false}], "file": "tinylog-impl/src/main/java/org/tinylog/path/DynamicPath.java"}, "focal_method": {"identifier": "isValid", "parameters": "(final File file)", "modifiers": "public", "return": "boolean", "body": "public boolean isValid(final File file) {\n\t\treturn isValid(file.getAbsolutePath(), 0, 0);\n\t}", "signature": "boolean isValid(final File file)", "full_signature": "public boolean isValid(final File file)", "class_method_signature": "DynamicPath.isValid(final File file)", "testcase": false, "constructor": false, "invocations": ["isValid", "getAbsolutePath"]}, "repository": {"repo_id": 5793618, "url": "https://github.com/pmwmedia/tinylog", "stars": 274, "created": "9/13/2012 11:21:42 AM +00:00", "updates": "2020-01-23T21:53:25+00:00", "fork": "False", "license": "licensed"}}