{"test_class": {"identifier": "FileTupleTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic final SystemStreamCollector systemStream = new SystemStreamCollector(true);", "modifier": "@Rule\n\tpublic final", "type": "SystemStreamCollector", "declarator": "systemStream = new SystemStreamCollector(true)", "var_name": "systemStream"}], "file": "tinylog-impl/src/test/java/org/tinylog/path/FileTupleTest.java"}, "test_case": {"identifier": "deleteBothFiles", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void deleteBothFiles() throws IOException {\n\t\tFile originalFile = new File(FileSystem.createTemporaryFile());\n\t\tFile backupFile = new File(FileSystem.createTemporaryFile());\n\n\t\tnew FileTuple(originalFile, backupFile).delete();\n\n\t\tassertThat(originalFile).doesNotExist();\n\t\tassertThat(backupFile).doesNotExist();\n\t}", "signature": "void deleteBothFiles()", "full_signature": "@Test public void deleteBothFiles()", "class_method_signature": "FileTupleTest.deleteBothFiles()", "testcase": true, "constructor": false, "invocations": ["createTemporaryFile", "createTemporaryFile", "delete", "doesNotExist", "assertThat", "doesNotExist", "assertThat"]}, "focal_class": {"identifier": "FileTuple", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final File original;", "modifier": "private final", "type": "File", "declarator": "original", "var_name": "original"}, {"original_string": "private final File backup;", "modifier": "private final", "type": "File", "declarator": "backup", "var_name": "backup"}], "methods": [{"identifier": "FileTuple", "parameters": "(final File original, final File backup)", "modifiers": "public", "return": "", "signature": " FileTuple(final File original, final File backup)", "full_signature": "public  FileTuple(final File original, final File backup)", "class_method_signature": "FileTuple.FileTuple(final File original, final File backup)", "testcase": false, "constructor": true}, {"identifier": "getOriginal", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getOriginal()", "full_signature": "public File getOriginal()", "class_method_signature": "FileTuple.getOriginal()", "testcase": false, "constructor": false}, {"identifier": "getBackup", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getBackup()", "full_signature": "public File getBackup()", "class_method_signature": "FileTuple.getBackup()", "testcase": false, "constructor": false}, {"identifier": "getLastModified", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLastModified()", "full_signature": "public long getLastModified()", "class_method_signature": "FileTuple.getLastModified()", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void delete()", "full_signature": "public void delete()", "class_method_signature": "FileTuple.delete()", "testcase": false, "constructor": false}], "file": "tinylog-impl/src/main/java/org/tinylog/path/FileTuple.java"}, "focal_method": {"identifier": "delete", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void delete() {\n\t\tif (original.isFile() && !original.delete()) {\n\t\t\tInternalLogger.log(Level.WARN, \"Failed to delete log file '\" + original + \"'\");\n\t\t}\n\t\tif (!backup.equals(original) && backup.isFile() && !backup.delete()) {\n\t\t\tInternalLogger.log(Level.WARN, \"Failed to delete backup file '\" + backup + \"'\");\n\t\t}\n\t}", "signature": "void delete()", "full_signature": "public void delete()", "class_method_signature": "FileTuple.delete()", "testcase": false, "constructor": false, "invocations": ["isFile", "delete", "log", "equals", "isFile", "delete", "log"]}, "repository": {"repo_id": 5793618, "url": "https://github.com/pmwmedia/tinylog", "stars": 274, "created": "9/13/2012 11:21:42 AM +00:00", "updates": "2020-01-23T21:53:25+00:00", "fork": "False", "license": "licensed"}}