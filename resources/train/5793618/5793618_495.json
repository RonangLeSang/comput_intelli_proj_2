{"test_class": {"identifier": "ConfigurationParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic final SystemStreamCollector systemStream = new SystemStreamCollector(true);", "modifier": "@Rule\n\tpublic final", "type": "SystemStreamCollector", "declarator": "systemStream = new SystemStreamCollector(true)", "var_name": "systemStream"}], "file": "tinylog-impl/src/test/java/org/tinylog/core/ConfigurationParserTest.java"}, "test_case": {"identifier": "writerWithMinusTag", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void writerWithMinusTag() {\n\t\tConfiguration.set(\"writer\", \"console\");\n\t\tConfiguration.set(\"writer.tag\", \"-\");\n\n\t\tList<String> tags = ConfigurationParser.getTags();\n\t\tassertThat(tags).isEmpty();\n\t}", "signature": "void writerWithMinusTag()", "full_signature": "@Test public void writerWithMinusTag()", "class_method_signature": "ConfigurationParserTest.writerWithMinusTag()", "testcase": true, "constructor": false, "invocations": ["set", "set", "getTags", "isEmpty", "assertThat"]}, "focal_class": {"identifier": "ConfigurationParser", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ConfigurationParser", "parameters": "()", "modifiers": "private", "return": "", "signature": " ConfigurationParser()", "full_signature": "private  ConfigurationParser()", "class_method_signature": "ConfigurationParser.ConfigurationParser()", "testcase": false, "constructor": true}, {"identifier": "getGlobalLevel", "parameters": "()", "modifiers": "public static", "return": "Level", "signature": "Level getGlobalLevel()", "full_signature": "public static Level getGlobalLevel()", "class_method_signature": "ConfigurationParser.getGlobalLevel()", "testcase": false, "constructor": false}, {"identifier": "getCustomLevels", "parameters": "()", "modifiers": "public static", "return": "Map<String, Level>", "signature": "Map<String, Level> getCustomLevels()", "full_signature": "public static Map<String, Level> getCustomLevels()", "class_method_signature": "ConfigurationParser.getCustomLevels()", "testcase": false, "constructor": false}, {"identifier": "getTags", "parameters": "()", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getTags()", "full_signature": "public static List<String> getTags()", "class_method_signature": "ConfigurationParser.getTags()", "testcase": false, "constructor": false}, {"identifier": "isWritingThreadEnabled", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isWritingThreadEnabled()", "full_signature": "public static boolean isWritingThreadEnabled()", "class_method_signature": "ConfigurationParser.isWritingThreadEnabled()", "testcase": false, "constructor": false}, {"identifier": "isAutoShutdownEnabled", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isAutoShutdownEnabled()", "full_signature": "public static boolean isAutoShutdownEnabled()", "class_method_signature": "ConfigurationParser.isAutoShutdownEnabled()", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(final String property, final Level defaultValue)", "modifiers": "public static", "return": "Level", "signature": "Level parse(final String property, final Level defaultValue)", "full_signature": "public static Level parse(final String property, final Level defaultValue)", "class_method_signature": "ConfigurationParser.parse(final String property, final Level defaultValue)", "testcase": false, "constructor": false}], "file": "tinylog-impl/src/main/java/org/tinylog/core/ConfigurationParser.java"}, "focal_method": {"identifier": "getTags", "parameters": "()", "modifiers": "public static", "return": "List<String>", "body": "public static List<String> getTags() {\n\t\tList<String> tags = new ArrayList<String>();\n\t\tfor (String writerProperty : Configuration.getSiblings(\"writer\").keySet()) {\n\t\t\tString tag = Configuration.get(writerProperty + \".tag\");\n\t\t\tif (tag != null && !tag.isEmpty() && !tag.equals(\"-\")) {\n\t\t\t\tString[] tagArray = tag.split(\",\");\n\t\t\t\tfor (String tagArrayItem : tagArray) {\n\t\t\t\t\ttagArrayItem = tagArrayItem.replaceAll(\"@.*\", \"\").trim();\n\t\t\t\t\tif (!tags.contains(tagArrayItem) && !tagArrayItem.isEmpty()) {\n\t\t\t\t\t\ttags.add(tagArrayItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn tags;\n\t}", "signature": "List<String> getTags()", "full_signature": "public static List<String> getTags()", "class_method_signature": "ConfigurationParser.getTags()", "testcase": false, "constructor": false, "invocations": ["keySet", "getSiblings", "get", "isEmpty", "equals", "split", "trim", "replaceAll", "contains", "isEmpty", "add"]}, "repository": {"repo_id": 5793618, "url": "https://github.com/pmwmedia/tinylog", "stars": 274, "created": "9/13/2012 11:21:42 AM +00:00", "updates": "2020-01-23T21:53:25+00:00", "fork": "False", "license": "licensed"}}