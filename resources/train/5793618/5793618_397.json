{"test_class": {"identifier": "SimpleClassNameTokenTest", "superclass": "", "interfaces": "", "fields": [], "file": "tinylog-impl/src/test/java/org/tinylog/pattern/SimpleClassNameTokenTest.java"}, "test_case": {"identifier": "renderClassWithPackage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void renderClassWithPackage() {\n\t\tSimpleClassNameToken token = new SimpleClassNameToken();\n\t\tassertThat(render(token, \"my.package.TestClass\")).isEqualTo(\"TestClass\");\n\t}", "signature": "void renderClassWithPackage()", "full_signature": "@Test public void renderClassWithPackage()", "class_method_signature": "SimpleClassNameTokenTest.renderClassWithPackage()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "render"]}, "focal_class": {"identifier": "SimpleClassNameToken", "superclass": "", "interfaces": "implements Token", "fields": [], "methods": [{"identifier": "SimpleClassNameToken", "parameters": "()", "modifiers": "", "return": "", "signature": " SimpleClassNameToken()", "full_signature": "  SimpleClassNameToken()", "class_method_signature": "SimpleClassNameToken.SimpleClassNameToken()", "testcase": false, "constructor": true}, {"identifier": "getRequiredLogEntryValues", "parameters": "()", "modifiers": "@Override public", "return": "Collection<LogEntryValue>", "signature": "Collection<LogEntryValue> getRequiredLogEntryValues()", "full_signature": "@Override public Collection<LogEntryValue> getRequiredLogEntryValues()", "class_method_signature": "SimpleClassNameToken.getRequiredLogEntryValues()", "testcase": false, "constructor": false}, {"identifier": "render", "parameters": "(final LogEntry logEntry, final StringBuilder builder)", "modifiers": "@Override public", "return": "void", "signature": "void render(final LogEntry logEntry, final StringBuilder builder)", "full_signature": "@Override public void render(final LogEntry logEntry, final StringBuilder builder)", "class_method_signature": "SimpleClassNameToken.render(final LogEntry logEntry, final StringBuilder builder)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(final LogEntry logEntry, final PreparedStatement statement, final int index)", "modifiers": "@Override public", "return": "void", "signature": "void apply(final LogEntry logEntry, final PreparedStatement statement, final int index)", "full_signature": "@Override public void apply(final LogEntry logEntry, final PreparedStatement statement, final int index)", "class_method_signature": "SimpleClassNameToken.apply(final LogEntry logEntry, final PreparedStatement statement, final int index)", "testcase": false, "constructor": false}, {"identifier": "getSimpleClassName", "parameters": "(final String fullyQualifiedClassName)", "modifiers": "private static", "return": "String", "signature": "String getSimpleClassName(final String fullyQualifiedClassName)", "full_signature": "private static String getSimpleClassName(final String fullyQualifiedClassName)", "class_method_signature": "SimpleClassNameToken.getSimpleClassName(final String fullyQualifiedClassName)", "testcase": false, "constructor": false}], "file": "tinylog-impl/src/main/java/org/tinylog/pattern/SimpleClassNameToken.java"}, "focal_method": {"identifier": "render", "parameters": "(final LogEntry logEntry, final StringBuilder builder)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void render(final LogEntry logEntry, final StringBuilder builder) {\n\t\tbuilder.append(getSimpleClassName(logEntry.getClassName()));\n\t}", "signature": "void render(final LogEntry logEntry, final StringBuilder builder)", "full_signature": "@Override public void render(final LogEntry logEntry, final StringBuilder builder)", "class_method_signature": "SimpleClassNameToken.render(final LogEntry logEntry, final StringBuilder builder)", "testcase": false, "constructor": false, "invocations": ["append", "getSimpleClassName", "getClassName"]}, "repository": {"repo_id": 5793618, "url": "https://github.com/pmwmedia/tinylog", "stars": 274, "created": "9/13/2012 11:21:42 AM +00:00", "updates": "2020-01-23T21:53:25+00:00", "fork": "False", "license": "licensed"}}