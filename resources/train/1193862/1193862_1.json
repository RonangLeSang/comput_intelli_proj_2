{"test_class": {"identifier": "SunConventionsProfileTest", "superclass": "", "interfaces": "", "fields": [], "file": "sonar-intellij-plugin/src/test/java/org/sonar/plugins/ideainspections/SunConventionsProfileTest.java"}, "test_case": {"identifier": "shouldCreateProfile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldCreateProfile()\n    {\n        ProfileDefinition  definition = new SunConventionsProfile(new XMLProfileParser(newRuleFinder()));\n        ValidationMessages validation = ValidationMessages.create();\n        RulesProfile       sunProfile = definition.createProfile(validation);\n        assertThat(sunProfile.getActiveRulesByRepository(IdeaConstants.REPOSITORY_KEY).size(),\n                   greaterThan(1));\n        assertThat(validation.hasErrors(), Is.is(false));\n    }", "signature": "void shouldCreateProfile()", "full_signature": "@Test public void shouldCreateProfile()", "class_method_signature": "SunConventionsProfileTest.shouldCreateProfile()", "testcase": true, "constructor": false, "invocations": ["newRuleFinder", "create", "createProfile", "assertThat", "size", "getActiveRulesByRepository", "greaterThan", "assertThat", "hasErrors", "is"]}, "focal_class": {"identifier": "SunConventionsProfile", "superclass": "extends ProfileDefinition", "interfaces": "", "fields": [{"original_string": "private XMLProfileParser xmlProfileParser;", "modifier": "private", "type": "XMLProfileParser", "declarator": "xmlProfileParser", "var_name": "xmlProfileParser"}], "methods": [{"identifier": "SunConventionsProfile", "parameters": "(XMLProfileParser xmlProfileParser)", "modifiers": "public", "return": "", "signature": " SunConventionsProfile(XMLProfileParser xmlProfileParser)", "full_signature": "public  SunConventionsProfile(XMLProfileParser xmlProfileParser)", "class_method_signature": "SunConventionsProfile.SunConventionsProfile(XMLProfileParser xmlProfileParser)", "testcase": false, "constructor": true}, {"identifier": "createProfile", "parameters": "(ValidationMessages messages)", "modifiers": "public", "return": "RulesProfile", "signature": "RulesProfile createProfile(ValidationMessages messages)", "full_signature": "public RulesProfile createProfile(ValidationMessages messages)", "class_method_signature": "SunConventionsProfile.createProfile(ValidationMessages messages)", "testcase": false, "constructor": false}], "file": "sonar-intellij-plugin/src/main/java/org/sonar/plugins/ideainspections/SunConventionsProfile.java"}, "focal_method": {"identifier": "createProfile", "parameters": "(ValidationMessages messages)", "modifiers": "public", "return": "RulesProfile", "body": "public RulesProfile createProfile(ValidationMessages messages) {\n    return xmlProfileParser.parseResource(getClass().getClassLoader(), \"org/sonar/plugins/ideainspections/profile-sun-conventions.xml\", messages);\n  }", "signature": "RulesProfile createProfile(ValidationMessages messages)", "full_signature": "public RulesProfile createProfile(ValidationMessages messages)", "class_method_signature": "SunConventionsProfile.createProfile(ValidationMessages messages)", "testcase": false, "constructor": false, "invocations": ["parseResource", "getClassLoader", "getClass"]}, "repository": {"repo_id": 1193862, "url": "https://github.com/emiliolg/IdeaInspectionsSonar", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 6, "size": 505, "license": "licensed"}}