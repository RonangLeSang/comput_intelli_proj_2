{"test_class": {"identifier": "TransientServiceStatementManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TransientServiceStatementManager serviceStatementManager;", "modifier": "private", "type": "TransientServiceStatementManager", "declarator": "serviceStatementManager", "var_name": "serviceStatementManager"}, {"original_string": "private final List<ServiceStatement> statements = new ArrayList<ServiceStatement>();", "modifier": "private final", "type": "List<ServiceStatement>", "declarator": "statements = new ArrayList<ServiceStatement>()", "var_name": "statements"}, {"original_string": "private final Uuid recordingUuid = UuidFactory.generate();", "modifier": "private final", "type": "Uuid", "declarator": "recordingUuid = UuidFactory.generate()", "var_name": "recordingUuid"}, {"original_string": "private final String[] names = new String[]{\"Spanky\",\n                                                \"Alfalfa\",\n                                                \"Darla\",\n                                                \"Stymie\",\n                                                \"Froggy\",\n                                                \"Porky\",\n                                                \"Buckwheat\",\n                                                \"Butch\",\n                                                \"Waldo\"};", "modifier": "private final", "type": "String[]", "declarator": "names = new String[]{\"Spanky\",\n                                                \"Alfalfa\",\n                                                \"Darla\",\n                                                \"Stymie\",\n                                                \"Froggy\",\n                                                \"Porky\",\n                                                \"Buckwheat\",\n                                                \"Butch\",\n                                                \"Waldo\"}", "var_name": "names"}], "file": "rio-services/cybernode/cybernode-service/src/test/java/org/rioproject/cybernode/service/TransientServiceStatementManagerTest.java"}, "test_case": {"identifier": "testGetActiveServiceStatements", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetActiveServiceStatements() throws Exception {\n        ServiceStatement[] statements = serviceStatementManager.get();\n        List<ServiceRecord> list = new ArrayList<ServiceRecord>();\n        for (ServiceStatement statement : statements) {\n            ServiceRecord[] records = statement.getServiceRecords(recordingUuid, ServiceRecord.ACTIVE_SERVICE_RECORD);\n            list.addAll(Arrays.asList(records));\n        }\n        Assert.assertEquals(names.length, list.size());\n    }", "signature": "void testGetActiveServiceStatements()", "full_signature": "@Test public void testGetActiveServiceStatements()", "class_method_signature": "TransientServiceStatementManagerTest.testGetActiveServiceStatements()", "testcase": true, "constructor": false, "invocations": ["get", "getServiceRecords", "addAll", "asList", "assertEquals", "size"]}, "focal_class": {"identifier": "TransientServiceStatementManager", "superclass": "", "interfaces": "implements ServiceStatementManager", "fields": [{"original_string": "private final Map<ServiceElement,ServiceStatement> statementMap = new HashMap<ServiceElement,ServiceStatement>();", "modifier": "private final", "type": "Map<ServiceElement,ServiceStatement>", "declarator": "statementMap = new HashMap<ServiceElement,ServiceStatement>()", "var_name": "statementMap"}, {"original_string": "private static final Logger logger = LoggerFactory.getLogger(TransientServiceStatementManager.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(TransientServiceStatementManager.class)", "var_name": "logger"}], "methods": [{"identifier": "TransientServiceStatementManager", "parameters": "(Configuration config)", "modifiers": "public", "return": "", "signature": " TransientServiceStatementManager(Configuration config)", "full_signature": "public  TransientServiceStatementManager(Configuration config)", "class_method_signature": "TransientServiceStatementManager.TransientServiceStatementManager(Configuration config)", "testcase": false, "constructor": true}, {"identifier": "terminate", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void terminate()", "full_signature": "public void terminate()", "class_method_signature": "TransientServiceStatementManager.terminate()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "public", "return": "ServiceStatement[]", "signature": "ServiceStatement[] get()", "full_signature": "public ServiceStatement[] get()", "class_method_signature": "TransientServiceStatementManager.get()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(ServiceElement sElem)", "modifiers": "public", "return": "ServiceStatement", "signature": "ServiceStatement get(ServiceElement sElem)", "full_signature": "public ServiceStatement get(ServiceElement sElem)", "class_method_signature": "TransientServiceStatementManager.get(ServiceElement sElem)", "testcase": false, "constructor": false}, {"identifier": "record", "parameters": "(ServiceStatement statement)", "modifiers": "public", "return": "void", "signature": "void record(ServiceStatement statement)", "full_signature": "public void record(ServiceStatement statement)", "class_method_signature": "TransientServiceStatementManager.record(ServiceStatement statement)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(ServiceElement key)", "modifiers": "private", "return": "void", "signature": "void remove(ServiceElement key)", "full_signature": "private void remove(ServiceElement key)", "class_method_signature": "TransientServiceStatementManager.remove(ServiceElement key)", "testcase": false, "constructor": false}], "file": "rio-services/cybernode/cybernode-service/src/main/java/org/rioproject/cybernode/service/TransientServiceStatementManager.java"}, "focal_method": {"identifier": "get", "parameters": "()", "modifiers": "public", "return": "ServiceStatement[]", "body": "public ServiceStatement[] get() {\n        ServiceStatement[] statements;\n        synchronized (statementMap) {\n            statements = statementMap.values().toArray(new ServiceStatement[statementMap.values().size()]);\n        }\n        return statements;\n    }", "signature": "ServiceStatement[] get()", "full_signature": "public ServiceStatement[] get()", "class_method_signature": "TransientServiceStatementManager.get()", "testcase": false, "constructor": false, "invocations": ["toArray", "values", "size", "values"]}, "repository": {"repo_id": 1068402, "url": "https://github.com/dreedyman/Rio", "stars": 20, "created": "11/10/2010 2:26:52 PM +00:00", "updates": "2019-10-24T20:28:18+00:00", "fork": "False", "license": "licensed"}}