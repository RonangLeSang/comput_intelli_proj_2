{"test_class": {"identifier": "TestFork", "superclass": "extends TestNodeBase<Fork>", "interfaces": "", "fields": [{"original_string": "@Rule\n    public final ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public final", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}], "file": "fluent-job/fluent-job-api/src/test/java/org/apache/oozie/fluentjob/api/dag/TestFork.java"}, "test_case": {"identifier": "testClose", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testClose() {\n        final Fork instance = getInstance(\"instance\");\n\n        final Join join = new Join(\"join\", instance);\n\n        assertEquals(join, instance.getClosingJoin());\n        assertTrue(instance.isClosed());\n    }", "signature": "void testClose()", "full_signature": "@Test public void testClose()", "class_method_signature": "TestFork.testClose()", "testcase": true, "constructor": false, "invocations": ["getInstance", "assertEquals", "getClosingJoin", "assertTrue", "isClosed"]}, "focal_class": {"identifier": "Fork", "superclass": "extends NodeBase", "interfaces": "", "fields": [{"original_string": "private NodeBase parent;", "modifier": "private", "type": "NodeBase", "declarator": "parent", "var_name": "parent"}, {"original_string": "private final List<NodeBase> children;", "modifier": "private final", "type": "List<NodeBase>", "declarator": "children", "var_name": "children"}, {"original_string": "private final ModifyOnce<Join> closingJoin;", "modifier": "private final", "type": "ModifyOnce<Join>", "declarator": "closingJoin", "var_name": "closingJoin"}], "methods": [{"identifier": "Fork", "parameters": "(final String name)", "modifiers": "public", "return": "", "signature": " Fork(final String name)", "full_signature": "public  Fork(final String name)", "class_method_signature": "Fork.Fork(final String name)", "testcase": false, "constructor": true}, {"identifier": "getParent", "parameters": "()", "modifiers": "public", "return": "NodeBase", "signature": "NodeBase getParent()", "full_signature": "public NodeBase getParent()", "class_method_signature": "Fork.getParent()", "testcase": false, "constructor": false}, {"identifier": "addParent", "parameters": "(final NodeBase parent)", "modifiers": "@Override public", "return": "void", "signature": "void addParent(final NodeBase parent)", "full_signature": "@Override public void addParent(final NodeBase parent)", "class_method_signature": "Fork.addParent(final NodeBase parent)", "testcase": false, "constructor": false}, {"identifier": "addParentWithCondition", "parameters": "(final Decision parent, final Condition condition)", "modifiers": "@Override public", "return": "void", "signature": "void addParentWithCondition(final Decision parent, final Condition condition)", "full_signature": "@Override public void addParentWithCondition(final Decision parent, final Condition condition)", "class_method_signature": "Fork.addParentWithCondition(final Decision parent, final Condition condition)", "testcase": false, "constructor": false}, {"identifier": "addParentDefaultConditional", "parameters": "(Decision parent)", "modifiers": "@Override public", "return": "void", "signature": "void addParentDefaultConditional(Decision parent)", "full_signature": "@Override public void addParentDefaultConditional(Decision parent)", "class_method_signature": "Fork.addParentDefaultConditional(Decision parent)", "testcase": false, "constructor": false}, {"identifier": "removeParent", "parameters": "(final NodeBase parent)", "modifiers": "@Override public", "return": "void", "signature": "void removeParent(final NodeBase parent)", "full_signature": "@Override public void removeParent(final NodeBase parent)", "class_method_signature": "Fork.removeParent(final NodeBase parent)", "testcase": false, "constructor": false}, {"identifier": "clearParents", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clearParents()", "full_signature": "@Override public void clearParents()", "class_method_signature": "Fork.clearParents()", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "@Override public", "return": "List<NodeBase>", "signature": "List<NodeBase> getChildren()", "full_signature": "@Override public List<NodeBase> getChildren()", "class_method_signature": "Fork.getChildren()", "testcase": false, "constructor": false}, {"identifier": "getClosingJoin", "parameters": "()", "modifiers": "", "return": "Join", "signature": "Join getClosingJoin()", "full_signature": " Join getClosingJoin()", "class_method_signature": "Fork.getClosingJoin()", "testcase": false, "constructor": false}, {"identifier": "isClosed", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isClosed()", "full_signature": " boolean isClosed()", "class_method_signature": "Fork.isClosed()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "(final Join join)", "modifiers": "", "return": "void", "signature": "void close(final Join join)", "full_signature": " void close(final Join join)", "class_method_signature": "Fork.close(final Join join)", "testcase": false, "constructor": false}, {"identifier": "addChild", "parameters": "(final NodeBase child)", "modifiers": "@Override protected", "return": "void", "signature": "void addChild(final NodeBase child)", "full_signature": "@Override protected void addChild(final NodeBase child)", "class_method_signature": "Fork.addChild(final NodeBase child)", "testcase": false, "constructor": false}, {"identifier": "removeChild", "parameters": "(final NodeBase child)", "modifiers": "@Override protected", "return": "void", "signature": "void removeChild(final NodeBase child)", "full_signature": "@Override protected void removeChild(final NodeBase child)", "class_method_signature": "Fork.removeChild(final NodeBase child)", "testcase": false, "constructor": false}], "file": "fluent-job/fluent-job-api/src/main/java/org/apache/oozie/fluentjob/api/dag/Fork.java"}, "focal_method": {"identifier": "close", "parameters": "(final Join join)", "modifiers": "", "return": "void", "body": "void close(final Join join) {\n        closingJoin.set(join);\n    }", "signature": "void close(final Join join)", "full_signature": " void close(final Join join)", "class_method_signature": "Fork.close(final Join join)", "testcase": false, "constructor": false, "invocations": ["set"]}, "repository": {"repo_id": 2383782, "url": "https://github.com/apache/oozie", "stars": 542, "created": "9/14/2011 7:00:10 AM +00:00", "updates": "2020-01-18T12:54:24+00:00", "fork": "False", "license": "licensed"}}