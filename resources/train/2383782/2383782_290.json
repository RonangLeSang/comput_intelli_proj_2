{"test_class": {"identifier": "TestParamChecker", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/apache/oozie/util/TestParamChecker.java"}, "test_case": {"identifier": "testNotEmptyElements", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNotEmptyElements() {\n        ParamChecker.notEmptyElements(new ArrayList<String>(), \"name\");\n        ParamChecker.notEmptyElements(Arrays.asList(\"a\"), \"name\");\n        try {\n            ParamChecker.notEmptyElements(null, \"name\");\n            fail();\n        }\n        catch (IllegalArgumentException | NullPointerException ex) {\n            // nop\n        }\n        try {\n            ParamChecker.notEmptyElements(Arrays.asList(\"a\", null), \"name\");\n            fail();\n        }\n        catch (IllegalArgumentException ex) {\n            // nop\n        }\n    }", "signature": "void testNotEmptyElements()", "full_signature": "@Test public void testNotEmptyElements()", "class_method_signature": "TestParamChecker.testNotEmptyElements()", "testcase": true, "constructor": false, "invocations": ["notEmptyElements", "notEmptyElements", "asList", "notEmptyElements", "fail", "notEmptyElements", "asList", "fail"]}, "focal_class": {"identifier": "ParamChecker", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int MAX_NODE_NAME_LEN = 128;", "modifier": "private static final", "type": "int", "declarator": "MAX_NODE_NAME_LEN = 128", "var_name": "MAX_NODE_NAME_LEN"}], "methods": [{"identifier": "notEmpty", "parameters": "(String str, String name)", "modifiers": "public static", "return": "String", "signature": "String notEmpty(String str, String name)", "full_signature": "public static String notEmpty(String str, String name)", "class_method_signature": "ParamChecker.notEmpty(String str, String name)", "testcase": false, "constructor": false}, {"identifier": "notEmpty", "parameters": "(String str, String name, String info)", "modifiers": "public static", "return": "String", "signature": "String notEmpty(String str, String name, String info)", "full_signature": "public static String notEmpty(String str, String name, String info)", "class_method_signature": "ParamChecker.notEmpty(String str, String name, String info)", "testcase": false, "constructor": false}, {"identifier": "notEmptyElements", "parameters": "(List<String> list, String name)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> notEmptyElements(List<String> list, String name)", "full_signature": "public static List<String> notEmptyElements(List<String> list, String name)", "class_method_signature": "ParamChecker.notEmptyElements(List<String> list, String name)", "testcase": false, "constructor": false}, {"identifier": "validateActionName", "parameters": "(String actionName)", "modifiers": "public static", "return": "String", "signature": "String validateActionName(String actionName)", "full_signature": "public static String validateActionName(String actionName)", "class_method_signature": "ParamChecker.validateActionName(String actionName)", "testcase": false, "constructor": false}, {"identifier": "isValidIdentifier", "parameters": "(String token)", "modifiers": "public static", "return": "boolean", "signature": "boolean isValidIdentifier(String token)", "full_signature": "public static boolean isValidIdentifier(String token)", "class_method_signature": "ParamChecker.isValidIdentifier(String token)", "testcase": false, "constructor": false}, {"identifier": "checkGTZero", "parameters": "(int value, String name)", "modifiers": "public static", "return": "int", "signature": "int checkGTZero(int value, String name)", "full_signature": "public static int checkGTZero(int value, String name)", "class_method_signature": "ParamChecker.checkGTZero(int value, String name)", "testcase": false, "constructor": false}, {"identifier": "checkGEZero", "parameters": "(int value, String name)", "modifiers": "public static", "return": "int", "signature": "int checkGEZero(int value, String name)", "full_signature": "public static int checkGEZero(int value, String name)", "class_method_signature": "ParamChecker.checkGEZero(int value, String name)", "testcase": false, "constructor": false}, {"identifier": "checkLEZero", "parameters": "(int value, String name)", "modifiers": "public static", "return": "int", "signature": "int checkLEZero(int value, String name)", "full_signature": "public static int checkLEZero(int value, String name)", "class_method_signature": "ParamChecker.checkLEZero(int value, String name)", "testcase": false, "constructor": false}, {"identifier": "checkInteger", "parameters": "(String val, String name)", "modifiers": "public static", "return": "int", "signature": "int checkInteger(String val, String name)", "full_signature": "public static int checkInteger(String val, String name)", "class_method_signature": "ParamChecker.checkInteger(String val, String name)", "testcase": false, "constructor": false}, {"identifier": "checkFrequency", "parameters": "(String val)", "modifiers": "public static", "return": "String", "signature": "String checkFrequency(String val)", "full_signature": "public static String checkFrequency(String val)", "class_method_signature": "ParamChecker.checkFrequency(String val)", "testcase": false, "constructor": false}, {"identifier": "checkDateOozieTZ", "parameters": "(String date, String name)", "modifiers": "public static", "return": "Date", "signature": "Date checkDateOozieTZ(String date, String name)", "full_signature": "public static Date checkDateOozieTZ(String date, String name)", "class_method_signature": "ParamChecker.checkDateOozieTZ(String date, String name)", "testcase": false, "constructor": false}, {"identifier": "checkTimeZone", "parameters": "(String tzStr, String name)", "modifiers": "public static", "return": "TimeZone", "signature": "TimeZone checkTimeZone(String tzStr, String name)", "full_signature": "public static TimeZone checkTimeZone(String tzStr, String name)", "class_method_signature": "ParamChecker.checkTimeZone(String tzStr, String name)", "testcase": false, "constructor": false}, {"identifier": "isMember", "parameters": "(String item, String[] members, String name)", "modifiers": "public static", "return": "boolean", "signature": "boolean isMember(String item, String[] members, String name)", "full_signature": "public static boolean isMember(String item, String[] members, String name)", "class_method_signature": "ParamChecker.isMember(String item, String[] members, String name)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/apache/oozie/util/ParamChecker.java"}, "focal_method": {"identifier": "notEmptyElements", "parameters": "(List<String> list, String name)", "modifiers": "public static", "return": "List<String>", "body": "public static List<String> notEmptyElements(List<String> list, String name) {\n        Objects.requireNonNull(list, () -> String.format(\"%s cannot be null\", name));\n        for (int i = 0; i < list.size(); i++) {\n            notEmpty(list.get(i), XLog.format(\"list [{0}] element [{1}]\", name, i));\n        }\n        return list;\n    }", "signature": "List<String> notEmptyElements(List<String> list, String name)", "full_signature": "public static List<String> notEmptyElements(List<String> list, String name)", "class_method_signature": "ParamChecker.notEmptyElements(List<String> list, String name)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "format", "size", "notEmpty", "get", "format"]}, "repository": {"repo_id": 2383782, "url": "https://github.com/apache/oozie", "stars": 542, "created": "9/14/2011 7:00:10 AM +00:00", "updates": "2020-01-18T12:54:24+00:00", "fork": "False", "license": "licensed"}}