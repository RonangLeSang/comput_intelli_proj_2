{"test_class": {"identifier": "TestStreamingBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public final ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public final", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}], "file": "fluent-job/fluent-job-api/src/test/java/org/apache/oozie/fluentjob/api/action/TestStreamingBuilder.java"}, "test_case": {"identifier": "testWithRecordReaderCalledTwiceThrows", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWithRecordReaderCalledTwiceThrows() {\n        final String recordReaderName1 = \"record-reader-name1.sh\";\n        final String recordReaderName2 = \"record-reader-name2.sh\";\n\n        final StreamingBuilder builder = new StreamingBuilder();\n        builder.withRecordReader(recordReaderName1);\n\n        expectedException.expect(IllegalStateException.class);\n        builder.withRecordReader(recordReaderName2);\n    }", "signature": "void testWithRecordReaderCalledTwiceThrows()", "full_signature": "@Test public void testWithRecordReaderCalledTwiceThrows()", "class_method_signature": "TestStreamingBuilder.testWithRecordReaderCalledTwiceThrows()", "testcase": true, "constructor": false, "invocations": ["withRecordReader", "expect", "withRecordReader"]}, "focal_class": {"identifier": "StreamingBuilder", "superclass": "", "interfaces": "implements Builder<Streaming>", "fields": [{"original_string": "private final ModifyOnce<String> mapper;", "modifier": "private final", "type": "ModifyOnce<String>", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "private final ModifyOnce<String> reducer;", "modifier": "private final", "type": "ModifyOnce<String>", "declarator": "reducer", "var_name": "reducer"}, {"original_string": "private final ModifyOnce<String> recordReader;", "modifier": "private final", "type": "ModifyOnce<String>", "declarator": "recordReader", "var_name": "recordReader"}, {"original_string": "private final ImmutableList.Builder<String> recordReaderMappings;", "modifier": "private final", "type": "ImmutableList.Builder<String>", "declarator": "recordReaderMappings", "var_name": "recordReaderMappings"}, {"original_string": "private final ImmutableList.Builder<String> envs;", "modifier": "private final", "type": "ImmutableList.Builder<String>", "declarator": "envs", "var_name": "envs"}], "methods": [{"identifier": "StreamingBuilder", "parameters": "()", "modifiers": "public", "return": "", "signature": " StreamingBuilder()", "full_signature": "public  StreamingBuilder()", "class_method_signature": "StreamingBuilder.StreamingBuilder()", "testcase": false, "constructor": true}, {"identifier": "withMapper", "parameters": "(final String mapper)", "modifiers": "public", "return": "StreamingBuilder", "signature": "StreamingBuilder withMapper(final String mapper)", "full_signature": "public StreamingBuilder withMapper(final String mapper)", "class_method_signature": "StreamingBuilder.withMapper(final String mapper)", "testcase": false, "constructor": false}, {"identifier": "withReducer", "parameters": "(final String reducer)", "modifiers": "public", "return": "StreamingBuilder", "signature": "StreamingBuilder withReducer(final String reducer)", "full_signature": "public StreamingBuilder withReducer(final String reducer)", "class_method_signature": "StreamingBuilder.withReducer(final String reducer)", "testcase": false, "constructor": false}, {"identifier": "withRecordReader", "parameters": "(final String recordReader)", "modifiers": "public", "return": "StreamingBuilder", "signature": "StreamingBuilder withRecordReader(final String recordReader)", "full_signature": "public StreamingBuilder withRecordReader(final String recordReader)", "class_method_signature": "StreamingBuilder.withRecordReader(final String recordReader)", "testcase": false, "constructor": false}, {"identifier": "withRecordReaderMapping", "parameters": "(final String recordReaderMapping)", "modifiers": "public", "return": "StreamingBuilder", "signature": "StreamingBuilder withRecordReaderMapping(final String recordReaderMapping)", "full_signature": "public StreamingBuilder withRecordReaderMapping(final String recordReaderMapping)", "class_method_signature": "StreamingBuilder.withRecordReaderMapping(final String recordReaderMapping)", "testcase": false, "constructor": false}, {"identifier": "withEnv", "parameters": "(final String env)", "modifiers": "public", "return": "StreamingBuilder", "signature": "StreamingBuilder withEnv(final String env)", "full_signature": "public StreamingBuilder withEnv(final String env)", "class_method_signature": "StreamingBuilder.withEnv(final String env)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "@Override public", "return": "Streaming", "signature": "Streaming build()", "full_signature": "@Override public Streaming build()", "class_method_signature": "StreamingBuilder.build()", "testcase": false, "constructor": false}], "file": "fluent-job/fluent-job-api/src/main/java/org/apache/oozie/fluentjob/api/action/StreamingBuilder.java"}, "focal_method": {"identifier": "withRecordReader", "parameters": "(final String recordReader)", "modifiers": "public", "return": "StreamingBuilder", "body": "public StreamingBuilder withRecordReader(final String recordReader) {\n        this.recordReader.set(recordReader);\n        return this;\n    }", "signature": "StreamingBuilder withRecordReader(final String recordReader)", "full_signature": "public StreamingBuilder withRecordReader(final String recordReader)", "class_method_signature": "StreamingBuilder.withRecordReader(final String recordReader)", "testcase": false, "constructor": false, "invocations": ["set"]}, "repository": {"repo_id": 2383782, "url": "https://github.com/apache/oozie", "stars": 542, "created": "9/14/2011 7:00:10 AM +00:00", "updates": "2020-01-18T12:54:24+00:00", "fork": "False", "license": "licensed"}}