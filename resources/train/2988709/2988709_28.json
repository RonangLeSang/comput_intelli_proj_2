{"test_class": {"identifier": "TestNodeFactory", "superclass": "", "interfaces": "", "fields": [], "file": "nuxeo-platform-relations/nuxeo-platform-relations-api/src/test/java/org/nuxeo/ecm/platform/relations/api/impl/TestNodeFactory.java"}, "test_case": {"identifier": "testCreateTypedLiteral", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateTypedLiteral() {\n        LiteralImpl lit = NodeFactory.createTypedLiteral(\"Hello\", \"myType\");\n        assertNotNull(lit);\n        assertTrue(lit.isLiteral());\n        assertFalse(lit.isBlank());\n        assertFalse(lit.isResource());\n        assertEquals(\"Hello\", lit.getValue());\n        assertNull(lit.getLanguage());\n        assertEquals(\"myType\", lit.getType());\n    }", "signature": "void testCreateTypedLiteral()", "full_signature": "@Test public void testCreateTypedLiteral()", "class_method_signature": "TestNodeFactory.testCreateTypedLiteral()", "testcase": true, "constructor": false, "invocations": ["createTypedLiteral", "assertNotNull", "assertTrue", "isLiteral", "assertFalse", "isBlank", "assertFalse", "isResource", "assertEquals", "getValue", "assertNull", "getLanguage", "assertEquals", "getType"]}, "focal_class": {"identifier": "NodeFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "NodeFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " NodeFactory()", "full_signature": "private  NodeFactory()", "class_method_signature": "NodeFactory.NodeFactory()", "testcase": false, "constructor": true}, {"identifier": "createLiteral", "parameters": "(String value)", "modifiers": "public static", "return": "LiteralImpl", "signature": "LiteralImpl createLiteral(String value)", "full_signature": "public static LiteralImpl createLiteral(String value)", "class_method_signature": "NodeFactory.createLiteral(String value)", "testcase": false, "constructor": false}, {"identifier": "createLiteral", "parameters": "(String value, String language)", "modifiers": "public static", "return": "LiteralImpl", "signature": "LiteralImpl createLiteral(String value, String language)", "full_signature": "public static LiteralImpl createLiteral(String value, String language)", "class_method_signature": "NodeFactory.createLiteral(String value, String language)", "testcase": false, "constructor": false}, {"identifier": "createTypedLiteral", "parameters": "(String value, String type)", "modifiers": "public static", "return": "LiteralImpl", "signature": "LiteralImpl createTypedLiteral(String value, String type)", "full_signature": "public static LiteralImpl createTypedLiteral(String value, String type)", "class_method_signature": "NodeFactory.createTypedLiteral(String value, String type)", "testcase": false, "constructor": false}, {"identifier": "createBlank", "parameters": "()", "modifiers": "public static", "return": "BlankImpl", "signature": "BlankImpl createBlank()", "full_signature": "public static BlankImpl createBlank()", "class_method_signature": "NodeFactory.createBlank()", "testcase": false, "constructor": false}, {"identifier": "createBlank", "parameters": "(String id)", "modifiers": "public static", "return": "BlankImpl", "signature": "BlankImpl createBlank(String id)", "full_signature": "public static BlankImpl createBlank(String id)", "class_method_signature": "NodeFactory.createBlank(String id)", "testcase": false, "constructor": false}, {"identifier": "createResource", "parameters": "(String uri)", "modifiers": "public static", "return": "Resource", "signature": "Resource createResource(String uri)", "full_signature": "public static Resource createResource(String uri)", "class_method_signature": "NodeFactory.createResource(String uri)", "testcase": false, "constructor": false}, {"identifier": "createQNameResource", "parameters": "(String namespace,\n            String localName)", "modifiers": "public static", "return": "QNameResource", "signature": "QNameResource createQNameResource(String namespace,\n            String localName)", "full_signature": "public static QNameResource createQNameResource(String namespace,\n            String localName)", "class_method_signature": "NodeFactory.createQNameResource(String namespace,\n            String localName)", "testcase": false, "constructor": false}], "file": "nuxeo-platform-relations/nuxeo-platform-relations-api/src/main/java/org/nuxeo/ecm/platform/relations/api/impl/NodeFactory.java"}, "focal_method": {"identifier": "createTypedLiteral", "parameters": "(String value, String type)", "modifiers": "public static", "return": "LiteralImpl", "body": "public static LiteralImpl createTypedLiteral(String value, String type) {\n        LiteralImpl lit = new LiteralImpl(value);\n        lit.setType(type);\n        return lit;\n    }", "signature": "LiteralImpl createTypedLiteral(String value, String type)", "full_signature": "public static LiteralImpl createTypedLiteral(String value, String type)", "class_method_signature": "NodeFactory.createTypedLiteral(String value, String type)", "testcase": false, "constructor": false, "invocations": ["setType"]}, "repository": {"repo_id": 2988709, "url": "https://github.com/nuxeo-archives/nuxeo-features", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 13, "size": 135542, "license": "licensed"}}