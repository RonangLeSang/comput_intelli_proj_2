{"test_class": {"identifier": "InstancedConfigurationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private  InstancedConfiguration mConfiguration = ConfigurationTestUtils.defaults();", "modifier": "private", "type": "InstancedConfiguration", "declarator": "mConfiguration = ConfigurationTestUtils.defaults()", "var_name": "mConfiguration"}, {"original_string": "@Rule\n  public final ExpectedException mThrown = ExpectedException.none();", "modifier": "@Rule\n  public final", "type": "ExpectedException", "declarator": "mThrown = ExpectedException.none()", "var_name": "mThrown"}, {"original_string": "@Rule\n  public final TemporaryFolder mFolder = new TemporaryFolder();", "modifier": "@Rule\n  public final", "type": "TemporaryFolder", "declarator": "mFolder = new TemporaryFolder()", "var_name": "mFolder"}, {"original_string": "@Rule\n  public final TestLoggerRule mLogger = new TestLoggerRule();", "modifier": "@Rule\n  public final", "type": "TestLoggerRule", "declarator": "mLogger = new TestLoggerRule()", "var_name": "mLogger"}], "file": "core/common/src/test/java/alluxio/conf/InstancedConfigurationTest.java"}, "test_case": {"identifier": "systemVariableSubstitution", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void systemVariableSubstitution() throws Exception {\n    try (Closeable p =\n        new SystemPropertyRule(PropertyKey.MASTER_HOSTNAME.toString(), \"new_master\").toResource()) {\n\n      resetConf();\n      assertEquals(\"new_master\", mConfiguration.get(PropertyKey.MASTER_HOSTNAME));\n    }\n  }", "signature": "void systemVariableSubstitution()", "full_signature": "@Test public void systemVariableSubstitution()", "class_method_signature": "InstancedConfigurationTest.systemVariableSubstitution()", "testcase": true, "constructor": false, "invocations": ["toResource", "toString", "resetConf", "assertEquals", "get"]}, "focal_class": {"identifier": "InstancedConfiguration", "superclass": "", "interfaces": "implements AlluxioConfiguration", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(InstancedConfiguration.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(InstancedConfiguration.class)", "var_name": "LOG"}, {"original_string": "private static final String REGEX_STRING = \"(\\\\$\\\\{([^{}]*)\\\\})\";", "modifier": "private static final", "type": "String", "declarator": "REGEX_STRING = \"(\\\\$\\\\{([^{}]*)\\\\})\"", "var_name": "REGEX_STRING"}, {"original_string": "private static final Pattern CONF_REGEX = Pattern.compile(REGEX_STRING);", "modifier": "private static final", "type": "Pattern", "declarator": "CONF_REGEX = Pattern.compile(REGEX_STRING)", "var_name": "CONF_REGEX"}, {"original_string": "protected AlluxioProperties mProperties;", "modifier": "protected", "type": "AlluxioProperties", "declarator": "mProperties", "var_name": "mProperties"}, {"original_string": "private final boolean mClusterDefaultsLoaded;", "modifier": "private final", "type": "boolean", "declarator": "mClusterDefaultsLoaded", "var_name": "mClusterDefaultsLoaded"}], "methods": [{"identifier": "defaults", "parameters": "()", "modifiers": "public static", "return": "InstancedConfiguration", "signature": "InstancedConfiguration defaults()", "full_signature": "public static InstancedConfiguration defaults()", "class_method_signature": "InstancedConfiguration.defaults()", "testcase": false, "constructor": false}, {"identifier": "InstancedConfiguration", "parameters": "(AlluxioProperties properties)", "modifiers": "public", "return": "", "signature": " InstancedConfiguration(AlluxioProperties properties)", "full_signature": "public  InstancedConfiguration(AlluxioProperties properties)", "class_method_signature": "InstancedConfiguration.InstancedConfiguration(AlluxioProperties properties)", "testcase": false, "constructor": true}, {"identifier": "InstancedConfiguration", "parameters": "(AlluxioProperties properties, boolean clusterDefaultsLoaded)", "modifiers": "public", "return": "", "signature": " InstancedConfiguration(AlluxioProperties properties, boolean clusterDefaultsLoaded)", "full_signature": "public  InstancedConfiguration(AlluxioProperties properties, boolean clusterDefaultsLoaded)", "class_method_signature": "InstancedConfiguration.InstancedConfiguration(AlluxioProperties properties, boolean clusterDefaultsLoaded)", "testcase": false, "constructor": true}, {"identifier": "InstancedConfiguration", "parameters": "(AlluxioConfiguration conf)", "modifiers": "public", "return": "", "signature": " InstancedConfiguration(AlluxioConfiguration conf)", "full_signature": "public  InstancedConfiguration(AlluxioConfiguration conf)", "class_method_signature": "InstancedConfiguration.InstancedConfiguration(AlluxioConfiguration conf)", "testcase": false, "constructor": true}, {"identifier": "copyProperties", "parameters": "()", "modifiers": "public", "return": "AlluxioProperties", "signature": "AlluxioProperties copyProperties()", "full_signature": "public AlluxioProperties copyProperties()", "class_method_signature": "InstancedConfiguration.copyProperties()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(PropertyKey key)", "modifiers": "@Override public", "return": "String", "signature": "String get(PropertyKey key)", "full_signature": "@Override public String get(PropertyKey key)", "class_method_signature": "InstancedConfiguration.get(PropertyKey key)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(PropertyKey key, ConfigurationValueOptions options)", "modifiers": "@Override public", "return": "String", "signature": "String get(PropertyKey key, ConfigurationValueOptions options)", "full_signature": "@Override public String get(PropertyKey key, ConfigurationValueOptions options)", "class_method_signature": "InstancedConfiguration.get(PropertyKey key, ConfigurationValueOptions options)", "testcase": false, "constructor": false}, {"identifier": "isResolvable", "parameters": "(PropertyKey key)", "modifiers": "private", "return": "boolean", "signature": "boolean isResolvable(PropertyKey key)", "full_signature": "private boolean isResolvable(PropertyKey key)", "class_method_signature": "InstancedConfiguration.isResolvable(PropertyKey key)", "testcase": false, "constructor": false}, {"identifier": "isSet", "parameters": "(PropertyKey key)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSet(PropertyKey key)", "full_signature": "@Override public boolean isSet(PropertyKey key)", "class_method_signature": "InstancedConfiguration.isSet(PropertyKey key)", "testcase": false, "constructor": false}, {"identifier": "isSetByUser", "parameters": "(PropertyKey key)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSetByUser(PropertyKey key)", "full_signature": "@Override public boolean isSetByUser(PropertyKey key)", "class_method_signature": "InstancedConfiguration.isSetByUser(PropertyKey key)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(PropertyKey key, Object value)", "modifiers": "public", "return": "void", "signature": "void set(PropertyKey key, Object value)", "full_signature": "public void set(PropertyKey key, Object value)", "class_method_signature": "InstancedConfiguration.set(PropertyKey key, Object value)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(@Nonnull PropertyKey key, @Nonnull Object value, @Nonnull Source source)", "modifiers": "public", "return": "void", "signature": "void set(@Nonnull PropertyKey key, @Nonnull Object value, @Nonnull Source source)", "full_signature": "public void set(@Nonnull PropertyKey key, @Nonnull Object value, @Nonnull Source source)", "class_method_signature": "InstancedConfiguration.set(@Nonnull PropertyKey key, @Nonnull Object value, @Nonnull Source source)", "testcase": false, "constructor": false}, {"identifier": "unset", "parameters": "(PropertyKey key)", "modifiers": "public", "return": "void", "signature": "void unset(PropertyKey key)", "full_signature": "public void unset(PropertyKey key)", "class_method_signature": "InstancedConfiguration.unset(PropertyKey key)", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(Map<?, ?> properties, Source source)", "modifiers": "public", "return": "void", "signature": "void merge(Map<?, ?> properties, Source source)", "full_signature": "public void merge(Map<?, ?> properties, Source source)", "class_method_signature": "InstancedConfiguration.merge(Map<?, ?> properties, Source source)", "testcase": false, "constructor": false}, {"identifier": "keySet", "parameters": "()", "modifiers": "@Override public", "return": "Set<PropertyKey>", "signature": "Set<PropertyKey> keySet()", "full_signature": "@Override public Set<PropertyKey> keySet()", "class_method_signature": "InstancedConfiguration.keySet()", "testcase": false, "constructor": false}, {"identifier": "userKeySet", "parameters": "()", "modifiers": "@Override public", "return": "Set<PropertyKey>", "signature": "Set<PropertyKey> userKeySet()", "full_signature": "@Override public Set<PropertyKey> userKeySet()", "class_method_signature": "InstancedConfiguration.userKeySet()", "testcase": false, "constructor": false}, {"identifier": "getInt", "parameters": "(PropertyKey key)", "modifiers": "@Override public", "return": "int", "signature": "int getInt(PropertyKey key)", "full_signature": "@Override public int getInt(PropertyKey key)", "class_method_signature": "InstancedConfiguration.getInt(PropertyKey key)", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "(PropertyKey key)", "modifiers": "@Override public", "return": "long", "signature": "long getLong(PropertyKey key)", "full_signature": "@Override public long getLong(PropertyKey key)", "class_method_signature": "InstancedConfiguration.getLong(PropertyKey key)", "testcase": false, "constructor": false}, {"identifier": "getDouble", "parameters": "(PropertyKey key)", "modifiers": "@Override public", "return": "double", "signature": "double getDouble(PropertyKey key)", "full_signature": "@Override public double getDouble(PropertyKey key)", "class_method_signature": "InstancedConfiguration.getDouble(PropertyKey key)", "testcase": false, "constructor": false}, {"identifier": "getFloat", "parameters": "(PropertyKey key)", "modifiers": "@Override public", "return": "float", "signature": "float getFloat(PropertyKey key)", "full_signature": "@Override public float getFloat(PropertyKey key)", "class_method_signature": "InstancedConfiguration.getFloat(PropertyKey key)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(PropertyKey key)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getBoolean(PropertyKey key)", "full_signature": "@Override public boolean getBoolean(PropertyKey key)", "class_method_signature": "InstancedConfiguration.getBoolean(PropertyKey key)", "testcase": false, "constructor": false}, {"identifier": "getList", "parameters": "(PropertyKey key, String delimiter)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getList(PropertyKey key, String delimiter)", "full_signature": "@Override public List<String> getList(PropertyKey key, String delimiter)", "class_method_signature": "InstancedConfiguration.getList(PropertyKey key, String delimiter)", "testcase": false, "constructor": false}, {"identifier": "getEnum", "parameters": "(PropertyKey key, Class<T> enumType)", "modifiers": "@Override public", "return": "T", "signature": "T getEnum(PropertyKey key, Class<T> enumType)", "full_signature": "@Override public T getEnum(PropertyKey key, Class<T> enumType)", "class_method_signature": "InstancedConfiguration.getEnum(PropertyKey key, Class<T> enumType)", "testcase": false, "constructor": false}, {"identifier": "getBytes", "parameters": "(PropertyKey key)", "modifiers": "@Override public", "return": "long", "signature": "long getBytes(PropertyKey key)", "full_signature": "@Override public long getBytes(PropertyKey key)", "class_method_signature": "InstancedConfiguration.getBytes(PropertyKey key)", "testcase": false, "constructor": false}, {"identifier": "getMs", "parameters": "(PropertyKey key)", "modifiers": "@Override public", "return": "long", "signature": "long getMs(PropertyKey key)", "full_signature": "@Override public long getMs(PropertyKey key)", "class_method_signature": "InstancedConfiguration.getMs(PropertyKey key)", "testcase": false, "constructor": false}, {"identifier": "getDuration", "parameters": "(PropertyKey key)", "modifiers": "@Override public", "return": "Duration", "signature": "Duration getDuration(PropertyKey key)", "full_signature": "@Override public Duration getDuration(PropertyKey key)", "class_method_signature": "InstancedConfiguration.getDuration(PropertyKey key)", "testcase": false, "constructor": false}, {"identifier": "getClass", "parameters": "(PropertyKey key)", "modifiers": "@Override public", "return": "Class<T>", "signature": "Class<T> getClass(PropertyKey key)", "full_signature": "@Override public Class<T> getClass(PropertyKey key)", "class_method_signature": "InstancedConfiguration.getClass(PropertyKey key)", "testcase": false, "constructor": false}, {"identifier": "getNestedProperties", "parameters": "(PropertyKey prefixKey)", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getNestedProperties(PropertyKey prefixKey)", "full_signature": "@Override public Map<String, String> getNestedProperties(PropertyKey prefixKey)", "class_method_signature": "InstancedConfiguration.getNestedProperties(PropertyKey prefixKey)", "testcase": false, "constructor": false}, {"identifier": "getSource", "parameters": "(PropertyKey key)", "modifiers": "@Override public", "return": "Source", "signature": "Source getSource(PropertyKey key)", "full_signature": "@Override public Source getSource(PropertyKey key)", "class_method_signature": "InstancedConfiguration.getSource(PropertyKey key)", "testcase": false, "constructor": false}, {"identifier": "toMap", "parameters": "(ConfigurationValueOptions opts)", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> toMap(ConfigurationValueOptions opts)", "full_signature": "@Override public Map<String, String> toMap(ConfigurationValueOptions opts)", "class_method_signature": "InstancedConfiguration.toMap(ConfigurationValueOptions opts)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void validate()", "full_signature": "@Override public void validate()", "class_method_signature": "InstancedConfiguration.validate()", "testcase": false, "constructor": false}, {"identifier": "clusterDefaultsLoaded", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean clusterDefaultsLoaded()", "full_signature": "@Override public boolean clusterDefaultsLoaded()", "class_method_signature": "InstancedConfiguration.clusterDefaultsLoaded()", "testcase": false, "constructor": false}, {"identifier": "hash", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String hash()", "full_signature": "@Override public String hash()", "class_method_signature": "InstancedConfiguration.hash()", "testcase": false, "constructor": false}, {"identifier": "lookup", "parameters": "(final String base)", "modifiers": "private", "return": "String", "signature": "String lookup(final String base)", "full_signature": "private String lookup(final String base)", "class_method_signature": "InstancedConfiguration.lookup(final String base)", "testcase": false, "constructor": false}, {"identifier": "lookupRecursively", "parameters": "(String base, Set<String> seen)", "modifiers": "private", "return": "String", "signature": "String lookupRecursively(String base, Set<String> seen)", "full_signature": "private String lookupRecursively(String base, Set<String> seen)", "class_method_signature": "InstancedConfiguration.lookupRecursively(String base, Set<String> seen)", "testcase": false, "constructor": false}, {"identifier": "checkWorkerPorts", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkWorkerPorts()", "full_signature": "private void checkWorkerPorts()", "class_method_signature": "InstancedConfiguration.checkWorkerPorts()", "testcase": false, "constructor": false}, {"identifier": "checkTimeouts", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkTimeouts()", "full_signature": "private void checkTimeouts()", "class_method_signature": "InstancedConfiguration.checkTimeouts()", "testcase": false, "constructor": false}, {"identifier": "checkHeartbeatTimeout", "parameters": "(PropertyKey intervalKey, PropertyKey timeoutKey)", "modifiers": "private", "return": "void", "signature": "void checkHeartbeatTimeout(PropertyKey intervalKey, PropertyKey timeoutKey)", "full_signature": "private void checkHeartbeatTimeout(PropertyKey intervalKey, PropertyKey timeoutKey)", "class_method_signature": "InstancedConfiguration.checkHeartbeatTimeout(PropertyKey intervalKey, PropertyKey timeoutKey)", "testcase": false, "constructor": false}, {"identifier": "checkUserFileBufferBytes", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkUserFileBufferBytes()", "full_signature": "private void checkUserFileBufferBytes()", "class_method_signature": "InstancedConfiguration.checkUserFileBufferBytes()", "testcase": false, "constructor": false}, {"identifier": "checkZkConfiguration", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkZkConfiguration()", "full_signature": "private void checkZkConfiguration()", "class_method_signature": "InstancedConfiguration.checkZkConfiguration()", "testcase": false, "constructor": false}, {"identifier": "checkTieredLocality", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkTieredLocality()", "full_signature": "private void checkTieredLocality()", "class_method_signature": "InstancedConfiguration.checkTieredLocality()", "testcase": false, "constructor": false}, {"identifier": "checkTieredStorage", "parameters": "()", "modifiers": "@VisibleForTesting", "return": "void", "signature": "void checkTieredStorage()", "full_signature": "@VisibleForTesting void checkTieredStorage()", "class_method_signature": "InstancedConfiguration.checkTieredStorage()", "testcase": false, "constructor": false}], "file": "core/common/src/main/java/alluxio/conf/InstancedConfiguration.java"}, "focal_method": {"identifier": "get", "parameters": "(PropertyKey key)", "modifiers": "@Override public", "return": "String", "body": "@Override\n  public String get(PropertyKey key) {\n    return get(key, ConfigurationValueOptions.defaults());\n  }", "signature": "String get(PropertyKey key)", "full_signature": "@Override public String get(PropertyKey key)", "class_method_signature": "InstancedConfiguration.get(PropertyKey key)", "testcase": false, "constructor": false, "invocations": ["get", "defaults"]}, "repository": {"repo_id": 7276954, "url": "https://github.com/Alluxio/alluxio", "stars": 4494, "created": "12/21/2012 5:43:46 PM +00:00", "updates": "2020-01-24T20:27:46+00:00", "fork": "False", "license": "licensed"}}