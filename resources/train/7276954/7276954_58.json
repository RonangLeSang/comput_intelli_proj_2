{"test_class": {"identifier": "HdfsVersionValidationTaskTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static InstancedConfiguration sConf;", "modifier": "private static", "type": "InstancedConfiguration", "declarator": "sConf", "var_name": "sConf"}], "file": "integration/tools/validation/src/test/java/alluxio/cli/hdfs/HdfsVersionValidationTaskTest.java"}, "test_case": {"identifier": "versionMatched", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void versionMatched() throws Exception {\n    PowerMockito.mockStatic(ShellUtils.class);\n    String[] cmd = new String[]{\"hadoop\", \"version\"};\n    BDDMockito.given(ShellUtils.execCommand(cmd)).willReturn(\"Hadoop 2.6\");\n    sConf.set(PropertyKey.UNDERFS_VERSION, \"2.6\");\n\n    HdfsVersionValidationTask task = new HdfsVersionValidationTask(sConf);\n    ValidationTaskResult result = task.validateImpl(ImmutableMap.of());\n    assertEquals(ValidationUtils.State.OK, result.getState());\n  }", "signature": "void versionMatched()", "full_signature": "@Test public void versionMatched()", "class_method_signature": "HdfsVersionValidationTaskTest.versionMatched()", "testcase": true, "constructor": false, "invocations": ["mockStatic", "willReturn", "given", "execCommand", "set", "validateImpl", "of", "assertEquals", "getState"]}, "focal_class": {"identifier": "HdfsVersionValidationTask", "superclass": "extends AbstractValidationTask", "interfaces": "", "fields": [{"original_string": "private final AlluxioConfiguration mConf;", "modifier": "private final", "type": "AlluxioConfiguration", "declarator": "mConf", "var_name": "mConf"}, {"original_string": "private static final Pattern HADOOP_PATTERN =\n          Pattern.compile(\"Hadoop\\\\s+(?<version>([0-9]\\\\.)+[0-9]+)\");", "modifier": "private static final", "type": "Pattern", "declarator": "HADOOP_PATTERN =\n          Pattern.compile(\"Hadoop\\\\s+(?<version>([0-9]\\\\.)+[0-9]+)\")", "var_name": "HADOOP_PATTERN"}, {"original_string": "private static final Pattern CDH_PATTERN =\n          Pattern.compile(\"cdh(?<cdhVersion>([0-9]+\\\\.)+[0-9]+)\");", "modifier": "private static final", "type": "Pattern", "declarator": "CDH_PATTERN =\n          Pattern.compile(\"cdh(?<cdhVersion>([0-9]+\\\\.)+[0-9]+)\")", "var_name": "CDH_PATTERN"}], "methods": [{"identifier": "HdfsVersionValidationTask", "parameters": "(AlluxioConfiguration conf)", "modifiers": "public", "return": "", "signature": " HdfsVersionValidationTask(AlluxioConfiguration conf)", "full_signature": "public  HdfsVersionValidationTask(AlluxioConfiguration conf)", "class_method_signature": "HdfsVersionValidationTask.HdfsVersionValidationTask(AlluxioConfiguration conf)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "HdfsVersionValidationTask.getName()", "testcase": false, "constructor": false}, {"identifier": "parseVersion", "parameters": "(String output)", "modifiers": "protected", "return": "String", "signature": "String parseVersion(String output)", "full_signature": "protected String parseVersion(String output)", "class_method_signature": "HdfsVersionValidationTask.parseVersion(String output)", "testcase": false, "constructor": false}, {"identifier": "validateImpl", "parameters": "(Map<String, String> optionMap)", "modifiers": "@Override public", "return": "ValidationTaskResult", "signature": "ValidationTaskResult validateImpl(Map<String, String> optionMap)", "full_signature": "@Override public ValidationTaskResult validateImpl(Map<String, String> optionMap)", "class_method_signature": "HdfsVersionValidationTask.validateImpl(Map<String, String> optionMap)", "testcase": false, "constructor": false}, {"identifier": "getHadoopVersion", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getHadoopVersion()", "full_signature": "protected String getHadoopVersion()", "class_method_signature": "HdfsVersionValidationTask.getHadoopVersion()", "testcase": false, "constructor": false}], "file": "integration/tools/validation/src/main/java/alluxio/cli/hdfs/HdfsVersionValidationTask.java"}, "focal_method": {"identifier": "validateImpl", "parameters": "(Map<String, String> optionMap)", "modifiers": "@Override public", "return": "ValidationTaskResult", "body": "@Override\n  public ValidationTaskResult validateImpl(Map<String, String> optionMap)\n          throws InterruptedException {\n    String hadoopVersion;\n    try {\n      hadoopVersion = getHadoopVersion();\n    } catch (IOException e) {\n      return new ValidationTaskResult(ValidationUtils.State.FAILED, getName(),\n              String.format(\"Failed to get hadoop version:%n%s.\", ValidationUtils.getErrorInfo(e)),\n              \"Please check if hadoop is on your PATH.\");\n    }\n\n    String version = mConf.get(PropertyKey.UNDERFS_VERSION);\n    if (hadoopVersion.contains(version)) {\n      return new ValidationTaskResult(ValidationUtils.State.OK, getName(),\n              String.format(\"Hadoop version %s contains UFS version defined in alluxio %s=%s.\",\n                      hadoopVersion, PropertyKey.UNDERFS_VERSION.toString(), version),\n              \"\");\n    }\n\n    return new ValidationTaskResult(ValidationUtils.State.FAILED, getName(),\n            String.format(\"Hadoop version %s does not match %s=%s.\",\n                    hadoopVersion, PropertyKey.UNDERFS_VERSION.toString(), version),\n            String.format(\"Please configure %s to match the HDFS version.\",\n                    PropertyKey.UNDERFS_VERSION.toString()));\n  }", "signature": "ValidationTaskResult validateImpl(Map<String, String> optionMap)", "full_signature": "@Override public ValidationTaskResult validateImpl(Map<String, String> optionMap)", "class_method_signature": "HdfsVersionValidationTask.validateImpl(Map<String, String> optionMap)", "testcase": false, "constructor": false, "invocations": ["getHadoopVersion", "getName", "format", "getErrorInfo", "get", "contains", "getName", "format", "toString", "getName", "format", "toString", "format", "toString"]}, "repository": {"repo_id": 7276954, "url": "https://github.com/Alluxio/alluxio", "stars": 4494, "created": "12/21/2012 5:43:46 PM +00:00", "updates": "2020-01-24T20:27:46+00:00", "fork": "False", "license": "licensed"}}