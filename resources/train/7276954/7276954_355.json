{"test_class": {"identifier": "HadoopConfigurationUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_S3_ACCCES_KEY = \"TEST ACCESS KEY\";", "modifier": "private static final", "type": "String", "declarator": "TEST_S3_ACCCES_KEY = \"TEST ACCESS KEY\"", "var_name": "TEST_S3_ACCCES_KEY"}, {"original_string": "private static final String TEST_S3_SECRET_KEY = \"TEST SECRET KEY\";", "modifier": "private static final", "type": "String", "declarator": "TEST_S3_SECRET_KEY = \"TEST SECRET KEY\"", "var_name": "TEST_S3_SECRET_KEY"}, {"original_string": "private static final String TEST_ALLUXIO_PROPERTY = \"alluxio.unsupported.parameter\";", "modifier": "private static final", "type": "String", "declarator": "TEST_ALLUXIO_PROPERTY = \"alluxio.unsupported.parameter\"", "var_name": "TEST_ALLUXIO_PROPERTY"}, {"original_string": "private static final String TEST_ALLUXIO_VALUE = \"alluxio.unsupported.value\";", "modifier": "private static final", "type": "String", "declarator": "TEST_ALLUXIO_VALUE = \"alluxio.unsupported.value\"", "var_name": "TEST_ALLUXIO_VALUE"}, {"original_string": "private InstancedConfiguration mConf = ConfigurationTestUtils.defaults();", "modifier": "private", "type": "InstancedConfiguration", "declarator": "mConf = ConfigurationTestUtils.defaults()", "var_name": "mConf"}], "file": "core/client/hdfs/src/test/java/alluxio/hadoop/HadoopConfigurationUtilsTest.java"}, "test_case": {"identifier": "mergeEmptyHadoopConfiguration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void mergeEmptyHadoopConfiguration() {\n    org.apache.hadoop.conf.Configuration hadoopConfig = new org.apache.hadoop.conf.Configuration();\n    mConf.merge(\n        HadoopConfigurationUtils.getConfigurationFromHadoop(hadoopConfig), Source.RUNTIME);\n    assertFalse(mConf.getBoolean(PropertyKey.ZOOKEEPER_ENABLED));\n  }", "signature": "void mergeEmptyHadoopConfiguration()", "full_signature": "@Test public void mergeEmptyHadoopConfiguration()", "class_method_signature": "HadoopConfigurationUtilsTest.mergeEmptyHadoopConfiguration()", "testcase": true, "constructor": false, "invocations": ["merge", "getConfigurationFromHadoop", "assertFalse", "getBoolean"]}, "focal_class": {"identifier": "HadoopConfigurationUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(HadoopConfigurationUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(HadoopConfigurationUtils.class)", "var_name": "LOG"}], "methods": [{"identifier": "HadoopConfigurationUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " HadoopConfigurationUtils()", "full_signature": "private  HadoopConfigurationUtils()", "class_method_signature": "HadoopConfigurationUtils.HadoopConfigurationUtils()", "testcase": false, "constructor": true}, {"identifier": "getConfigurationFromHadoop", "parameters": "(\n      org.apache.hadoop.conf.Configuration hadoopConf)", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> getConfigurationFromHadoop(\n      org.apache.hadoop.conf.Configuration hadoopConf)", "full_signature": "public static Map<String, Object> getConfigurationFromHadoop(\n      org.apache.hadoop.conf.Configuration hadoopConf)", "class_method_signature": "HadoopConfigurationUtils.getConfigurationFromHadoop(\n      org.apache.hadoop.conf.Configuration hadoopConf)", "testcase": false, "constructor": false}, {"identifier": "mergeAlluxioConfiguration", "parameters": "(\n      org.apache.hadoop.conf.Configuration source, AlluxioConfiguration alluxioConf)", "modifiers": "public static", "return": "org.apache.hadoop.conf.Configuration", "signature": "org.apache.hadoop.conf.Configuration mergeAlluxioConfiguration(\n      org.apache.hadoop.conf.Configuration source, AlluxioConfiguration alluxioConf)", "full_signature": "public static org.apache.hadoop.conf.Configuration mergeAlluxioConfiguration(\n      org.apache.hadoop.conf.Configuration source, AlluxioConfiguration alluxioConf)", "class_method_signature": "HadoopConfigurationUtils.mergeAlluxioConfiguration(\n      org.apache.hadoop.conf.Configuration source, AlluxioConfiguration alluxioConf)", "testcase": false, "constructor": false}], "file": "core/client/hdfs/src/main/java/alluxio/hadoop/HadoopConfigurationUtils.java"}, "focal_method": {"identifier": "getConfigurationFromHadoop", "parameters": "(\n      org.apache.hadoop.conf.Configuration hadoopConf)", "modifiers": "public static", "return": "Map<String, Object>", "body": "public static Map<String, Object> getConfigurationFromHadoop(\n      org.apache.hadoop.conf.Configuration hadoopConf) {\n    Map<String, Object> alluxioConfProperties = new HashMap<>();\n    // Load any Alluxio configuration parameters in the Hadoop configuration.\n    for (Map.Entry<String, String> entry : hadoopConf) {\n      String propertyName = entry.getKey();\n      if (PropertyKey.isValid(propertyName)) {\n        alluxioConfProperties.put(propertyName, entry.getValue());\n      }\n    }\n    return alluxioConfProperties;\n  }", "signature": "Map<String, Object> getConfigurationFromHadoop(\n      org.apache.hadoop.conf.Configuration hadoopConf)", "full_signature": "public static Map<String, Object> getConfigurationFromHadoop(\n      org.apache.hadoop.conf.Configuration hadoopConf)", "class_method_signature": "HadoopConfigurationUtils.getConfigurationFromHadoop(\n      org.apache.hadoop.conf.Configuration hadoopConf)", "testcase": false, "constructor": false, "invocations": ["getKey", "isValid", "put", "getValue"]}, "repository": {"repo_id": 7276954, "url": "https://github.com/Alluxio/alluxio", "stars": 4494, "created": "12/21/2012 5:43:46 PM +00:00", "updates": "2020-01-24T20:27:46+00:00", "fork": "False", "license": "licensed"}}