{"test_class": {"identifier": "TtlBucketTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TtlBucket mBucket;", "modifier": "private", "type": "TtlBucket", "declarator": "mBucket", "var_name": "mBucket"}], "file": "core/server/master/src/test/java/alluxio/master/file/meta/TtlBucketTest.java"}, "test_case": {"identifier": "hashCodeTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void hashCodeTest() {\n    TtlBucket firstBucket = new TtlBucket(0);\n    TtlBucket secondBucket = new TtlBucket(0);\n    TtlBucket thirdBucket = new TtlBucket(1);\n\n    Assert.assertEquals(firstBucket.hashCode(), firstBucket.hashCode());\n    Assert.assertEquals(firstBucket.hashCode(), secondBucket.hashCode());\n    Assert.assertNotEquals(firstBucket.hashCode(), thirdBucket.hashCode());\n  }", "signature": "void hashCodeTest()", "full_signature": "@Test public void hashCodeTest()", "class_method_signature": "TtlBucketTest.hashCodeTest()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "hashCode", "hashCode", "assertEquals", "hashCode", "hashCode", "assertNotEquals", "hashCode", "hashCode"]}, "focal_class": {"identifier": "TtlBucket", "superclass": "", "interfaces": "implements Comparable<TtlBucket>", "fields": [{"original_string": "private static long sTtlIntervalMs =\n      ServerConfiguration.getMs(PropertyKey.MASTER_TTL_CHECKER_INTERVAL_MS);", "modifier": "private static", "type": "long", "declarator": "sTtlIntervalMs =\n      ServerConfiguration.getMs(PropertyKey.MASTER_TTL_CHECKER_INTERVAL_MS)", "var_name": "sTtlIntervalMs"}, {"original_string": "private final long mTtlIntervalStartTimeMs;", "modifier": "private final", "type": "long", "declarator": "mTtlIntervalStartTimeMs", "var_name": "mTtlIntervalStartTimeMs"}, {"original_string": "private final ConcurrentHashMap<Long, Inode> mInodes;", "modifier": "private final", "type": "ConcurrentHashMap<Long, Inode>", "declarator": "mInodes", "var_name": "mInodes"}], "methods": [{"identifier": "TtlBucket", "parameters": "(long startTimeMs)", "modifiers": "public", "return": "", "signature": " TtlBucket(long startTimeMs)", "full_signature": "public  TtlBucket(long startTimeMs)", "class_method_signature": "TtlBucket.TtlBucket(long startTimeMs)", "testcase": false, "constructor": true}, {"identifier": "getTtlIntervalStartTimeMs", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getTtlIntervalStartTimeMs()", "full_signature": "public long getTtlIntervalStartTimeMs()", "class_method_signature": "TtlBucket.getTtlIntervalStartTimeMs()", "testcase": false, "constructor": false}, {"identifier": "getTtlIntervalEndTimeMs", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getTtlIntervalEndTimeMs()", "full_signature": "public long getTtlIntervalEndTimeMs()", "class_method_signature": "TtlBucket.getTtlIntervalEndTimeMs()", "testcase": false, "constructor": false}, {"identifier": "getTtlIntervalMs", "parameters": "()", "modifiers": "public static", "return": "long", "signature": "long getTtlIntervalMs()", "full_signature": "public static long getTtlIntervalMs()", "class_method_signature": "TtlBucket.getTtlIntervalMs()", "testcase": false, "constructor": false}, {"identifier": "getInodes", "parameters": "()", "modifiers": "public", "return": "Collection<Inode>", "signature": "Collection<Inode> getInodes()", "full_signature": "public Collection<Inode> getInodes()", "class_method_signature": "TtlBucket.getInodes()", "testcase": false, "constructor": false}, {"identifier": "addInode", "parameters": "(Inode inode)", "modifiers": "public", "return": "void", "signature": "void addInode(Inode inode)", "full_signature": "public void addInode(Inode inode)", "class_method_signature": "TtlBucket.addInode(Inode inode)", "testcase": false, "constructor": false}, {"identifier": "removeInode", "parameters": "(InodeView inode)", "modifiers": "public", "return": "void", "signature": "void removeInode(InodeView inode)", "full_signature": "public void removeInode(InodeView inode)", "class_method_signature": "TtlBucket.removeInode(InodeView inode)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(TtlBucket ttlBucket)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(TtlBucket ttlBucket)", "full_signature": "@Override public int compareTo(TtlBucket ttlBucket)", "class_method_signature": "TtlBucket.compareTo(TtlBucket ttlBucket)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "TtlBucket.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "TtlBucket.hashCode()", "testcase": false, "constructor": false}], "file": "core/server/master/src/main/java/alluxio/master/file/meta/TtlBucket.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n  public int hashCode() {\n    return Objects.hashCode(mTtlIntervalStartTimeMs);\n  }", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "TtlBucket.hashCode()", "testcase": false, "constructor": false, "invocations": ["hashCode"]}, "repository": {"repo_id": 7276954, "url": "https://github.com/Alluxio/alluxio", "stars": 4494, "created": "12/21/2012 5:43:46 PM +00:00", "updates": "2020-01-24T20:27:46+00:00", "fork": "False", "license": "licensed"}}