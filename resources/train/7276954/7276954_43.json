{"test_class": {"identifier": "HdfsProxyUserValidationTaskTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static File sTestDir;", "modifier": "private static", "type": "File", "declarator": "sTestDir", "var_name": "sTestDir"}, {"original_string": "private InstancedConfiguration mConf;", "modifier": "private", "type": "InstancedConfiguration", "declarator": "mConf", "var_name": "mConf"}], "file": "integration/tools/validation/src/test/java/alluxio/cli/hdfs/HdfsProxyUserValidationTaskTest.java"}, "test_case": {"identifier": "skipped", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void skipped() {\n    mConf.set(PropertyKey.SECURITY_AUTHENTICATION_TYPE, AuthType.NOSASL.getAuthName());\n    HdfsProxyUserValidationTask task =\n            new HdfsProxyUserValidationTask(\"hdfs://namenode:9000/alluxio\", mConf);\n    ValidationTaskResult result = task.validateImpl(ImmutableMap.of());\n    assertEquals(ValidationUtils.State.SKIPPED, result.getState());\n  }", "signature": "void skipped()", "full_signature": "@Test public void skipped()", "class_method_signature": "HdfsProxyUserValidationTaskTest.skipped()", "testcase": true, "constructor": false, "invocations": ["set", "getAuthName", "validateImpl", "of", "assertEquals", "getState"]}, "focal_class": {"identifier": "HdfsProxyUserValidationTask", "superclass": "extends HdfsConfValidationTask", "interfaces": "", "fields": [], "methods": [{"identifier": "HdfsProxyUserValidationTask", "parameters": "(String path, AlluxioConfiguration conf)", "modifiers": "public", "return": "", "signature": " HdfsProxyUserValidationTask(String path, AlluxioConfiguration conf)", "full_signature": "public  HdfsProxyUserValidationTask(String path, AlluxioConfiguration conf)", "class_method_signature": "HdfsProxyUserValidationTask.HdfsProxyUserValidationTask(String path, AlluxioConfiguration conf)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "HdfsProxyUserValidationTask.getName()", "testcase": false, "constructor": false}, {"identifier": "getCurrentUser", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getCurrentUser()", "full_signature": "private String getCurrentUser()", "class_method_signature": "HdfsProxyUserValidationTask.getCurrentUser()", "testcase": false, "constructor": false}, {"identifier": "validateProxyUsers", "parameters": "(String userName)", "modifiers": "private", "return": "ValidationTaskResult", "signature": "ValidationTaskResult validateProxyUsers(String userName)", "full_signature": "private ValidationTaskResult validateProxyUsers(String userName)", "class_method_signature": "HdfsProxyUserValidationTask.validateProxyUsers(String userName)", "testcase": false, "constructor": false}, {"identifier": "validateImpl", "parameters": "(Map<String, String> optionMap)", "modifiers": "@Override public", "return": "ValidationTaskResult", "signature": "ValidationTaskResult validateImpl(Map<String, String> optionMap)", "full_signature": "@Override public ValidationTaskResult validateImpl(Map<String, String> optionMap)", "class_method_signature": "HdfsProxyUserValidationTask.validateImpl(Map<String, String> optionMap)", "testcase": false, "constructor": false}], "file": "integration/tools/validation/src/main/java/alluxio/cli/hdfs/HdfsProxyUserValidationTask.java"}, "focal_method": {"identifier": "validateImpl", "parameters": "(Map<String, String> optionMap)", "modifiers": "@Override public", "return": "ValidationTaskResult", "body": "@Override\n  public ValidationTaskResult validateImpl(Map<String, String> optionMap) {\n    // Skip this test if NOSASL\n    if (mConf.get(PropertyKey.SECURITY_AUTHENTICATION_TYPE)\n            .equals(AuthType.NOSASL.getAuthName())) {\n      return new ValidationTaskResult(ValidationUtils.State.SKIPPED, getName(),\n              String.format(\"Impersonation validation is skipped for NOSASL\"), \"\");\n    }\n\n    ValidationTaskResult loadConfig = loadHdfsConfig();\n    if (loadConfig.getState() != ValidationUtils.State.OK) {\n      return loadConfig;\n    }\n\n    // TODO(jiacheng): validate proxyuser.hosts for the cluster\n\n    // Validate proxyuser config for the current Alluxio user\n    try {\n      String alluxioUser = getCurrentUser();\n      return validateProxyUsers(alluxioUser);\n    } catch (UnauthenticatedException e) {\n      mMsg.append(String.format(\"Failed to authenticate in Alluxio: \"));\n      mMsg.append(ValidationUtils.getErrorInfo(e));\n      mAdvice.append(\"Please fix the authentication issue.\");\n      return new ValidationTaskResult(ValidationUtils.State.FAILED, getName(),\n              mMsg.toString(), mAdvice.toString());\n    }\n  }", "signature": "ValidationTaskResult validateImpl(Map<String, String> optionMap)", "full_signature": "@Override public ValidationTaskResult validateImpl(Map<String, String> optionMap)", "class_method_signature": "HdfsProxyUserValidationTask.validateImpl(Map<String, String> optionMap)", "testcase": false, "constructor": false, "invocations": ["equals", "get", "getAuthName", "getName", "format", "loadHdfsConfig", "getState", "getCurrentUser", "validateProxyUsers", "append", "format", "append", "getErrorInfo", "append", "getName", "toString", "toString"]}, "repository": {"repo_id": 7276954, "url": "https://github.com/Alluxio/alluxio", "stars": 4494, "created": "12/21/2012 5:43:46 PM +00:00", "updates": "2020-01-24T20:27:46+00:00", "fork": "False", "license": "licensed"}}