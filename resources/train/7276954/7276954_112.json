{"test_class": {"identifier": "MetricsSystemTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/common/src/test/java/alluxio/metrics/MetricsSystemTest.java"}, "test_case": {"identifier": "stripInstanceAndHostTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void stripInstanceAndHostTest() {\n    assertEquals(\"name\", MetricsSystem.stripInstanceAndHost(\"Master.name\"));\n    assertEquals(\"name\", MetricsSystem.stripInstanceAndHost(\"Worker.name.10_0_0_136\"));\n    assertEquals(\"name.UFS:ufs\", MetricsSystem.stripInstanceAndHost(\"Client.name.UFS:ufs.0_0_0_0\"));\n    assertEquals(\"name.UFS:ufs.UFS_TYPE:local\",\n        MetricsSystem.stripInstanceAndHost(\"Worker.name.UFS:ufs.UFS_TYPE:local.0_0_0_0\"));\n  }", "signature": "void stripInstanceAndHostTest()", "full_signature": "@Test public void stripInstanceAndHostTest()", "class_method_signature": "MetricsSystemTest.stripInstanceAndHostTest()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "stripInstanceAndHost", "assertEquals", "stripInstanceAndHost", "assertEquals", "stripInstanceAndHost", "assertEquals", "stripInstanceAndHost"]}, "focal_class": {"identifier": "MetricsSystem", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(MetricsSystem.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(MetricsSystem.class)", "var_name": "LOG"}, {"original_string": "private static final ConcurrentHashMap<String, String> CACHED_METRICS = new ConcurrentHashMap<>();", "modifier": "private static final", "type": "ConcurrentHashMap<String, String>", "declarator": "CACHED_METRICS = new ConcurrentHashMap<>()", "var_name": "CACHED_METRICS"}, {"original_string": "private static int sResolveTimeout =\n      (int) new InstancedConfiguration(ConfigurationUtils.defaults())\n          .getMs(PropertyKey.NETWORK_HOST_RESOLUTION_TIMEOUT_MS);", "modifier": "private static", "type": "int", "declarator": "sResolveTimeout =\n      (int) new InstancedConfiguration(ConfigurationUtils.defaults())\n          .getMs(PropertyKey.NETWORK_HOST_RESOLUTION_TIMEOUT_MS)", "var_name": "sResolveTimeout"}, {"original_string": "private static final ConcurrentHashMap<AlluxioURI, String> CACHED_ESCAPED_PATH\n      = new ConcurrentHashMap<>();", "modifier": "private static final", "type": "ConcurrentHashMap<AlluxioURI, String>", "declarator": "CACHED_ESCAPED_PATH\n      = new ConcurrentHashMap<>()", "var_name": "CACHED_ESCAPED_PATH"}, {"original_string": "private static final Map<String, Long> LAST_REPORTED_METRICS = new HashMap<>();", "modifier": "private static final", "type": "Map<String, Long>", "declarator": "LAST_REPORTED_METRICS = new HashMap<>()", "var_name": "LAST_REPORTED_METRICS"}, {"original_string": "private static final Map<String, MetricType> SHOULD_REPORT_METRICS = new ConcurrentHashMap<>();", "modifier": "private static final", "type": "Map<String, MetricType>", "declarator": "SHOULD_REPORT_METRICS = new ConcurrentHashMap<>()", "var_name": "SHOULD_REPORT_METRICS"}, {"original_string": "private static final Pattern METRIC_NAME_PATTERN = Pattern.compile(\"^(.*?[.].*?)[.].*\");", "modifier": "private static final", "type": "Pattern", "declarator": "METRIC_NAME_PATTERN = Pattern.compile(\"^(.*?[.].*?)[.].*\")", "var_name": "METRIC_NAME_PATTERN"}, {"original_string": "private static boolean sReported = false;", "modifier": "private static", "type": "boolean", "declarator": "sReported = false", "var_name": "sReported"}, {"original_string": "private static Supplier<String> sSourceNameSupplier =\n      CommonUtils.memoize(() -> constructSourceName());", "modifier": "private static", "type": "Supplier<String>", "declarator": "sSourceNameSupplier =\n      CommonUtils.memoize(() -> constructSourceName())", "var_name": "sSourceNameSupplier"}, {"original_string": "public static final String CLUSTER = \"Cluster\";", "modifier": "public static final", "type": "String", "declarator": "CLUSTER = \"Cluster\"", "var_name": "CLUSTER"}, {"original_string": "public static final MetricRegistry METRIC_REGISTRY;", "modifier": "public static final", "type": "MetricRegistry", "declarator": "METRIC_REGISTRY", "var_name": "METRIC_REGISTRY"}, {"original_string": "@GuardedBy(\"MetricsSystem\")\n  private static List<Sink> sSinks;", "modifier": "@GuardedBy(\"MetricsSystem\")\n  private static", "type": "List<Sink>", "declarator": "sSinks", "var_name": "sSinks"}, {"original_string": "public static final String SINK_REGEX = \"^sink\\\\.(.+)\\\\.(.+)\";", "modifier": "public static final", "type": "String", "declarator": "SINK_REGEX = \"^sink\\\\.(.+)\\\\.(.+)\"", "var_name": "SINK_REGEX"}, {"original_string": "private static final TimeUnit MINIMAL_POLL_UNIT = TimeUnit.SECONDS;", "modifier": "private static final", "type": "TimeUnit", "declarator": "MINIMAL_POLL_UNIT = TimeUnit.SECONDS", "var_name": "MINIMAL_POLL_UNIT"}, {"original_string": "private static final int MINIMAL_POLL_PERIOD = 1;", "modifier": "private static final", "type": "int", "declarator": "MINIMAL_POLL_PERIOD = 1", "var_name": "MINIMAL_POLL_PERIOD"}], "methods": [{"identifier": "startSinks", "parameters": "(String metricsConfFile)", "modifiers": "public static", "return": "void", "signature": "void startSinks(String metricsConfFile)", "full_signature": "public static void startSinks(String metricsConfFile)", "class_method_signature": "MetricsSystem.startSinks(String metricsConfFile)", "testcase": false, "constructor": false}, {"identifier": "constructSourceName", "parameters": "()", "modifiers": "private static", "return": "String", "signature": "String constructSourceName()", "full_signature": "private static String constructSourceName()", "class_method_signature": "MetricsSystem.constructSourceName()", "testcase": false, "constructor": false}, {"identifier": "startSinksFromConfig", "parameters": "(MetricsConfig config)", "modifiers": "public static synchronized", "return": "void", "signature": "void startSinksFromConfig(MetricsConfig config)", "full_signature": "public static synchronized void startSinksFromConfig(MetricsConfig config)", "class_method_signature": "MetricsSystem.startSinksFromConfig(MetricsConfig config)", "testcase": false, "constructor": false}, {"identifier": "stopSinks", "parameters": "()", "modifiers": "public static synchronized", "return": "void", "signature": "void stopSinks()", "full_signature": "public static synchronized void stopSinks()", "class_method_signature": "MetricsSystem.stopSinks()", "testcase": false, "constructor": false}, {"identifier": "getNumSinks", "parameters": "()", "modifiers": "public static synchronized", "return": "int", "signature": "int getNumSinks()", "full_signature": "public static synchronized int getNumSinks()", "class_method_signature": "MetricsSystem.getNumSinks()", "testcase": false, "constructor": false}, {"identifier": "getMetricName", "parameters": "(String name)", "modifiers": "public static", "return": "String", "signature": "String getMetricName(String name)", "full_signature": "public static String getMetricName(String name)", "class_method_signature": "MetricsSystem.getMetricName(String name)", "testcase": false, "constructor": false}, {"identifier": "getMasterMetricName", "parameters": "(String name)", "modifiers": "public static", "return": "String", "signature": "String getMasterMetricName(String name)", "full_signature": "public static String getMasterMetricName(String name)", "class_method_signature": "MetricsSystem.getMasterMetricName(String name)", "testcase": false, "constructor": false}, {"identifier": "getWorkerMetricName", "parameters": "(String name)", "modifiers": "private static", "return": "String", "signature": "String getWorkerMetricName(String name)", "full_signature": "private static String getWorkerMetricName(String name)", "class_method_signature": "MetricsSystem.getWorkerMetricName(String name)", "testcase": false, "constructor": false}, {"identifier": "getClientMetricName", "parameters": "(String name)", "modifiers": "private static", "return": "String", "signature": "String getClientMetricName(String name)", "full_signature": "private static String getClientMetricName(String name)", "class_method_signature": "MetricsSystem.getClientMetricName(String name)", "testcase": false, "constructor": false}, {"identifier": "getProxyMetricName", "parameters": "(String name)", "modifiers": "private static", "return": "String", "signature": "String getProxyMetricName(String name)", "full_signature": "private static String getProxyMetricName(String name)", "class_method_signature": "MetricsSystem.getProxyMetricName(String name)", "testcase": false, "constructor": false}, {"identifier": "getJobMasterMetricName", "parameters": "(String name)", "modifiers": "private static", "return": "String", "signature": "String getJobMasterMetricName(String name)", "full_signature": "private static String getJobMasterMetricName(String name)", "class_method_signature": "MetricsSystem.getJobMasterMetricName(String name)", "testcase": false, "constructor": false}, {"identifier": "getJobWorkerMetricName", "parameters": "(String name)", "modifiers": "public static", "return": "String", "signature": "String getJobWorkerMetricName(String name)", "full_signature": "public static String getJobWorkerMetricName(String name)", "class_method_signature": "MetricsSystem.getJobWorkerMetricName(String name)", "testcase": false, "constructor": false}, {"identifier": "getMetricNameWithUniqueId", "parameters": "(InstanceType instance, String name)", "modifiers": "private static", "return": "String", "signature": "String getMetricNameWithUniqueId(InstanceType instance, String name)", "full_signature": "private static String getMetricNameWithUniqueId(InstanceType instance, String name)", "class_method_signature": "MetricsSystem.getMetricNameWithUniqueId(InstanceType instance, String name)", "testcase": false, "constructor": false}, {"identifier": "checkMinimalPollingPeriod", "parameters": "(TimeUnit pollUnit, int pollPeriod)", "modifiers": "public static", "return": "void", "signature": "void checkMinimalPollingPeriod(TimeUnit pollUnit, int pollPeriod)", "full_signature": "public static void checkMinimalPollingPeriod(TimeUnit pollUnit, int pollPeriod)", "class_method_signature": "MetricsSystem.checkMinimalPollingPeriod(TimeUnit pollUnit, int pollPeriod)", "testcase": false, "constructor": false}, {"identifier": "stripInstanceAndHost", "parameters": "(String metricsName)", "modifiers": "public static", "return": "String", "signature": "String stripInstanceAndHost(String metricsName)", "full_signature": "public static String stripInstanceAndHost(String metricsName)", "class_method_signature": "MetricsSystem.stripInstanceAndHost(String metricsName)", "testcase": false, "constructor": false}, {"identifier": "escape", "parameters": "(AlluxioURI uri)", "modifiers": "public static", "return": "String", "signature": "String escape(AlluxioURI uri)", "full_signature": "public static String escape(AlluxioURI uri)", "class_method_signature": "MetricsSystem.escape(AlluxioURI uri)", "testcase": false, "constructor": false}, {"identifier": "unescape", "parameters": "(String uri)", "modifiers": "public static", "return": "String", "signature": "String unescape(String uri)", "full_signature": "public static String unescape(String uri)", "class_method_signature": "MetricsSystem.unescape(String uri)", "testcase": false, "constructor": false}, {"identifier": "counter", "parameters": "(String name)", "modifiers": "public static", "return": "Counter", "signature": "Counter counter(String name)", "full_signature": "public static Counter counter(String name)", "class_method_signature": "MetricsSystem.counter(String name)", "testcase": false, "constructor": false}, {"identifier": "counterWithTags", "parameters": "(String name, boolean shouldReport, String... tags)", "modifiers": "public static", "return": "Counter", "signature": "Counter counterWithTags(String name, boolean shouldReport, String... tags)", "full_signature": "public static Counter counterWithTags(String name, boolean shouldReport, String... tags)", "class_method_signature": "MetricsSystem.counterWithTags(String name, boolean shouldReport, String... tags)", "testcase": false, "constructor": false}, {"identifier": "meter", "parameters": "(String name)", "modifiers": "public static", "return": "Meter", "signature": "Meter meter(String name)", "full_signature": "public static Meter meter(String name)", "class_method_signature": "MetricsSystem.meter(String name)", "testcase": false, "constructor": false}, {"identifier": "meterWithTags", "parameters": "(String name, boolean shouldReport, String... tags)", "modifiers": "public static", "return": "Meter", "signature": "Meter meterWithTags(String name, boolean shouldReport, String... tags)", "full_signature": "public static Meter meterWithTags(String name, boolean shouldReport, String... tags)", "class_method_signature": "MetricsSystem.meterWithTags(String name, boolean shouldReport, String... tags)", "testcase": false, "constructor": false}, {"identifier": "timer", "parameters": "(String name)", "modifiers": "public static", "return": "Timer", "signature": "Timer timer(String name)", "full_signature": "public static Timer timer(String name)", "class_method_signature": "MetricsSystem.timer(String name)", "testcase": false, "constructor": false}, {"identifier": "registerGaugeIfAbsent", "parameters": "(String name, Gauge<T> metric)", "modifiers": "public static synchronized", "return": "void", "signature": "void registerGaugeIfAbsent(String name, Gauge<T> metric)", "full_signature": "public static synchronized void registerGaugeIfAbsent(String name, Gauge<T> metric)", "class_method_signature": "MetricsSystem.registerGaugeIfAbsent(String name, Gauge<T> metric)", "testcase": false, "constructor": false}, {"identifier": "reportMetrics", "parameters": "(InstanceType instanceType)", "modifiers": "private static synchronized", "return": "List<alluxio.grpc.Metric>", "signature": "List<alluxio.grpc.Metric> reportMetrics(InstanceType instanceType)", "full_signature": "private static synchronized List<alluxio.grpc.Metric> reportMetrics(InstanceType instanceType)", "class_method_signature": "MetricsSystem.reportMetrics(InstanceType instanceType)", "testcase": false, "constructor": false}, {"identifier": "reportWorkerMetrics", "parameters": "()", "modifiers": "public static", "return": "List<alluxio.grpc.Metric>", "signature": "List<alluxio.grpc.Metric> reportWorkerMetrics()", "full_signature": "public static List<alluxio.grpc.Metric> reportWorkerMetrics()", "class_method_signature": "MetricsSystem.reportWorkerMetrics()", "testcase": false, "constructor": false}, {"identifier": "reportClientMetrics", "parameters": "()", "modifiers": "public static", "return": "List<alluxio.grpc.Metric>", "signature": "List<alluxio.grpc.Metric> reportClientMetrics()", "full_signature": "public static List<alluxio.grpc.Metric> reportClientMetrics()", "class_method_signature": "MetricsSystem.reportClientMetrics()", "testcase": false, "constructor": false}, {"identifier": "getMasterMetrics", "parameters": "(Set<String> metricNames)", "modifiers": "public static", "return": "Map<String, Set<Metric>>", "signature": "Map<String, Set<Metric>> getMasterMetrics(Set<String> metricNames)", "full_signature": "public static Map<String, Set<Metric>> getMasterMetrics(Set<String> metricNames)", "class_method_signature": "MetricsSystem.getMasterMetrics(Set<String> metricNames)", "testcase": false, "constructor": false}, {"identifier": "getMetricValue", "parameters": "(String fullName)", "modifiers": "@Nullable public static", "return": "Metric", "signature": "Metric getMetricValue(String fullName)", "full_signature": "@Nullable public static Metric getMetricValue(String fullName)", "class_method_signature": "MetricsSystem.getMetricValue(String fullName)", "testcase": false, "constructor": false}, {"identifier": "getAlluxioMetricFromCodahaleMetric", "parameters": "(String name,\n      com.codahale.metrics.Metric metric)", "modifiers": "@Nullable private static", "return": "Metric", "signature": "Metric getAlluxioMetricFromCodahaleMetric(String name,\n      com.codahale.metrics.Metric metric)", "full_signature": "@Nullable private static Metric getAlluxioMetricFromCodahaleMetric(String name,\n      com.codahale.metrics.Metric metric)", "class_method_signature": "MetricsSystem.getAlluxioMetricFromCodahaleMetric(String name,\n      com.codahale.metrics.Metric metric)", "testcase": false, "constructor": false}, {"identifier": "allMetrics", "parameters": "()", "modifiers": "public static", "return": "Map<String, MetricValue>", "signature": "Map<String, MetricValue> allMetrics()", "full_signature": "public static Map<String, MetricValue> allMetrics()", "class_method_signature": "MetricsSystem.allMetrics()", "testcase": false, "constructor": false}, {"identifier": "initShouldReportMetrics", "parameters": "(InstanceType instanceType)", "modifiers": "@VisibleForTesting public static", "return": "void", "signature": "void initShouldReportMetrics(InstanceType instanceType)", "full_signature": "@VisibleForTesting public static void initShouldReportMetrics(InstanceType instanceType)", "class_method_signature": "MetricsSystem.initShouldReportMetrics(InstanceType instanceType)", "testcase": false, "constructor": false}, {"identifier": "resetAllMetrics", "parameters": "()", "modifiers": "public static synchronized", "return": "void", "signature": "void resetAllMetrics()", "full_signature": "public static synchronized void resetAllMetrics()", "class_method_signature": "MetricsSystem.resetAllMetrics()", "testcase": false, "constructor": false}, {"identifier": "clearAllMetrics", "parameters": "()", "modifiers": "@VisibleForTesting public static", "return": "void", "signature": "void clearAllMetrics()", "full_signature": "@VisibleForTesting public static void clearAllMetrics()", "class_method_signature": "MetricsSystem.clearAllMetrics()", "testcase": false, "constructor": false}, {"identifier": "resetCountersAndGauges", "parameters": "()", "modifiers": "@VisibleForTesting public static", "return": "void", "signature": "void resetCountersAndGauges()", "full_signature": "@VisibleForTesting public static void resetCountersAndGauges()", "class_method_signature": "MetricsSystem.resetCountersAndGauges()", "testcase": false, "constructor": false}, {"identifier": "MetricsSystem", "parameters": "()", "modifiers": "private", "return": "", "signature": " MetricsSystem()", "full_signature": "private  MetricsSystem()", "class_method_signature": "MetricsSystem.MetricsSystem()", "testcase": false, "constructor": true}], "file": "core/common/src/main/java/alluxio/metrics/MetricsSystem.java"}, "focal_method": {"identifier": "stripInstanceAndHost", "parameters": "(String metricsName)", "modifiers": "public static", "return": "String", "body": "public static String stripInstanceAndHost(String metricsName) {\n    String[] pieces = metricsName.split(\"\\\\.\");\n    int len = pieces.length;\n    if (len <= 1) {\n      return metricsName;\n    }\n    // Master metrics doesn't have hostname included.\n    if (!pieces[0].equals(MetricsSystem.InstanceType.MASTER.toString())\n        && !pieces[0].equals(InstanceType.CLUSTER.toString())\n        && pieces.length > 2) {\n      pieces[len - 1] = null;\n    }\n    pieces[0] = null;\n    return Joiner.on(\".\").skipNulls().join(pieces);\n  }", "signature": "String stripInstanceAndHost(String metricsName)", "full_signature": "public static String stripInstanceAndHost(String metricsName)", "class_method_signature": "MetricsSystem.stripInstanceAndHost(String metricsName)", "testcase": false, "constructor": false, "invocations": ["split", "equals", "toString", "equals", "toString", "join", "skipNulls", "on"]}, "repository": {"repo_id": 7276954, "url": "https://github.com/Alluxio/alluxio", "stars": 4494, "created": "12/21/2012 5:43:46 PM +00:00", "updates": "2020-01-24T20:27:46+00:00", "fork": "False", "license": "licensed"}}