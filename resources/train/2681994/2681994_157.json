{"test_class": {"identifier": "TestMITREidDataService_1_1", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n\tprivate OAuth2ClientRepository clientRepository;", "modifier": "@Mock\n\tprivate", "type": "OAuth2ClientRepository", "declarator": "clientRepository", "var_name": "clientRepository"}, {"original_string": "@Mock\n\tprivate ApprovedSiteRepository approvedSiteRepository;", "modifier": "@Mock\n\tprivate", "type": "ApprovedSiteRepository", "declarator": "approvedSiteRepository", "var_name": "approvedSiteRepository"}, {"original_string": "@Mock\n\tprivate WhitelistedSiteRepository wlSiteRepository;", "modifier": "@Mock\n\tprivate", "type": "WhitelistedSiteRepository", "declarator": "wlSiteRepository", "var_name": "wlSiteRepository"}, {"original_string": "@Mock\n\tprivate BlacklistedSiteRepository blSiteRepository;", "modifier": "@Mock\n\tprivate", "type": "BlacklistedSiteRepository", "declarator": "blSiteRepository", "var_name": "blSiteRepository"}, {"original_string": "@Mock\n\tprivate AuthenticationHolderRepository authHolderRepository;", "modifier": "@Mock\n\tprivate", "type": "AuthenticationHolderRepository", "declarator": "authHolderRepository", "var_name": "authHolderRepository"}, {"original_string": "@Mock\n\tprivate OAuth2TokenRepository tokenRepository;", "modifier": "@Mock\n\tprivate", "type": "OAuth2TokenRepository", "declarator": "tokenRepository", "var_name": "tokenRepository"}, {"original_string": "@Mock\n\tprivate SystemScopeRepository sysScopeRepository;", "modifier": "@Mock\n\tprivate", "type": "SystemScopeRepository", "declarator": "sysScopeRepository", "var_name": "sysScopeRepository"}, {"original_string": "@Captor\n\tprivate ArgumentCaptor<OAuth2RefreshTokenEntity> capturedRefreshTokens;", "modifier": "@Captor\n\tprivate", "type": "ArgumentCaptor<OAuth2RefreshTokenEntity>", "declarator": "capturedRefreshTokens", "var_name": "capturedRefreshTokens"}, {"original_string": "@Captor\n\tprivate ArgumentCaptor<OAuth2AccessTokenEntity> capturedAccessTokens;", "modifier": "@Captor\n\tprivate", "type": "ArgumentCaptor<OAuth2AccessTokenEntity>", "declarator": "capturedAccessTokens", "var_name": "capturedAccessTokens"}, {"original_string": "@Captor\n\tprivate ArgumentCaptor<ClientDetailsEntity> capturedClients;", "modifier": "@Captor\n\tprivate", "type": "ArgumentCaptor<ClientDetailsEntity>", "declarator": "capturedClients", "var_name": "capturedClients"}, {"original_string": "@Captor\n\tprivate ArgumentCaptor<BlacklistedSite> capturedBlacklistedSites;", "modifier": "@Captor\n\tprivate", "type": "ArgumentCaptor<BlacklistedSite>", "declarator": "capturedBlacklistedSites", "var_name": "capturedBlacklistedSites"}, {"original_string": "@Captor\n\tprivate ArgumentCaptor<WhitelistedSite> capturedWhitelistedSites;", "modifier": "@Captor\n\tprivate", "type": "ArgumentCaptor<WhitelistedSite>", "declarator": "capturedWhitelistedSites", "var_name": "capturedWhitelistedSites"}, {"original_string": "@Captor\n\tprivate ArgumentCaptor<ApprovedSite> capturedApprovedSites;", "modifier": "@Captor\n\tprivate", "type": "ArgumentCaptor<ApprovedSite>", "declarator": "capturedApprovedSites", "var_name": "capturedApprovedSites"}, {"original_string": "@Captor\n\tprivate ArgumentCaptor<AuthenticationHolderEntity> capturedAuthHolders;", "modifier": "@Captor\n\tprivate", "type": "ArgumentCaptor<AuthenticationHolderEntity>", "declarator": "capturedAuthHolders", "var_name": "capturedAuthHolders"}, {"original_string": "@Captor\n\tprivate ArgumentCaptor<SystemScope> capturedScope;", "modifier": "@Captor\n\tprivate", "type": "ArgumentCaptor<SystemScope>", "declarator": "capturedScope", "var_name": "capturedScope"}, {"original_string": "@InjectMocks\n\tprivate MITREidDataService_1_1 dataService;", "modifier": "@InjectMocks\n\tprivate", "type": "MITREidDataService_1_1", "declarator": "dataService", "var_name": "dataService"}, {"original_string": "private DateFormatter formatter;", "modifier": "private", "type": "DateFormatter", "declarator": "formatter", "var_name": "formatter"}], "file": "openid-connect-server/src/test/java/org/mitre/openid/connect/service/impl/TestMITREidDataService_1_1.java"}, "test_case": {"identifier": "testExportDisabled", "parameters": "()", "modifiers": "@Test(expected = UnsupportedOperationException.class) public", "return": "void", "body": "@Test(expected = UnsupportedOperationException.class)\n\tpublic void testExportDisabled() throws IOException {\n\t\tJsonWriter writer = new JsonWriter(new StringWriter());\n\t\tdataService.exportData(writer);\n\t}", "signature": "void testExportDisabled()", "full_signature": "@Test(expected = UnsupportedOperationException.class) public void testExportDisabled()", "class_method_signature": "TestMITREidDataService_1_1.testExportDisabled()", "testcase": true, "constructor": false, "invocations": ["exportData"]}, "focal_class": {"identifier": "MITREidDataService_1_1", "superclass": "extends MITREidDataServiceSupport", "interfaces": "implements MITREidDataService", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(MITREidDataService_1_1.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(MITREidDataService_1_1.class)", "var_name": "logger"}, {"original_string": "@Autowired\n\tprivate OAuth2ClientRepository clientRepository;", "modifier": "@Autowired\n\tprivate", "type": "OAuth2ClientRepository", "declarator": "clientRepository", "var_name": "clientRepository"}, {"original_string": "@Autowired\n\tprivate ApprovedSiteRepository approvedSiteRepository;", "modifier": "@Autowired\n\tprivate", "type": "ApprovedSiteRepository", "declarator": "approvedSiteRepository", "var_name": "approvedSiteRepository"}, {"original_string": "@Autowired\n\tprivate WhitelistedSiteRepository wlSiteRepository;", "modifier": "@Autowired\n\tprivate", "type": "WhitelistedSiteRepository", "declarator": "wlSiteRepository", "var_name": "wlSiteRepository"}, {"original_string": "@Autowired\n\tprivate BlacklistedSiteRepository blSiteRepository;", "modifier": "@Autowired\n\tprivate", "type": "BlacklistedSiteRepository", "declarator": "blSiteRepository", "var_name": "blSiteRepository"}, {"original_string": "@Autowired\n\tprivate AuthenticationHolderRepository authHolderRepository;", "modifier": "@Autowired\n\tprivate", "type": "AuthenticationHolderRepository", "declarator": "authHolderRepository", "var_name": "authHolderRepository"}, {"original_string": "@Autowired\n\tprivate OAuth2TokenRepository tokenRepository;", "modifier": "@Autowired\n\tprivate", "type": "OAuth2TokenRepository", "declarator": "tokenRepository", "var_name": "tokenRepository"}, {"original_string": "@Autowired\n\tprivate SystemScopeRepository sysScopeRepository;", "modifier": "@Autowired\n\tprivate", "type": "SystemScopeRepository", "declarator": "sysScopeRepository", "var_name": "sysScopeRepository"}, {"original_string": "@Autowired(required = false)\n\tprivate List<MITREidDataServiceExtension> extensions = Collections.emptyList();", "modifier": "@Autowired(required = false)\n\tprivate", "type": "List<MITREidDataServiceExtension>", "declarator": "extensions = Collections.emptyList()", "var_name": "extensions"}, {"original_string": "private static final String THIS_VERSION = MITREID_CONNECT_1_1;", "modifier": "private static final", "type": "String", "declarator": "THIS_VERSION = MITREID_CONNECT_1_1", "var_name": "THIS_VERSION"}, {"original_string": "private MITREidDataServiceMaps maps = new MITREidDataServiceMaps();", "modifier": "private", "type": "MITREidDataServiceMaps", "declarator": "maps = new MITREidDataServiceMaps()", "var_name": "maps"}], "methods": [{"identifier": "supportsVersion", "parameters": "(String version)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsVersion(String version)", "full_signature": "@Override public boolean supportsVersion(String version)", "class_method_signature": "MITREidDataService_1_1.supportsVersion(String version)", "testcase": false, "constructor": false}, {"identifier": "exportData", "parameters": "(JsonWriter writer)", "modifiers": "@Override public", "return": "void", "signature": "void exportData(JsonWriter writer)", "full_signature": "@Override public void exportData(JsonWriter writer)", "class_method_signature": "MITREidDataService_1_1.exportData(JsonWriter writer)", "testcase": false, "constructor": false}, {"identifier": "importData", "parameters": "(JsonReader reader)", "modifiers": "@Override public", "return": "void", "signature": "void importData(JsonReader reader)", "full_signature": "@Override public void importData(JsonReader reader)", "class_method_signature": "MITREidDataService_1_1.importData(JsonReader reader)", "testcase": false, "constructor": false}, {"identifier": "readRefreshTokens", "parameters": "(JsonReader reader)", "modifiers": "private", "return": "void", "signature": "void readRefreshTokens(JsonReader reader)", "full_signature": "private void readRefreshTokens(JsonReader reader)", "class_method_signature": "MITREidDataService_1_1.readRefreshTokens(JsonReader reader)", "testcase": false, "constructor": false}, {"identifier": "readAccessTokens", "parameters": "(JsonReader reader)", "modifiers": "private", "return": "void", "signature": "void readAccessTokens(JsonReader reader)", "full_signature": "private void readAccessTokens(JsonReader reader)", "class_method_signature": "MITREidDataService_1_1.readAccessTokens(JsonReader reader)", "testcase": false, "constructor": false}, {"identifier": "readAuthenticationHolders", "parameters": "(JsonReader reader)", "modifiers": "private", "return": "void", "signature": "void readAuthenticationHolders(JsonReader reader)", "full_signature": "private void readAuthenticationHolders(JsonReader reader)", "class_method_signature": "MITREidDataService_1_1.readAuthenticationHolders(JsonReader reader)", "testcase": false, "constructor": false}, {"identifier": "readAuthorizationRequest", "parameters": "(JsonReader reader)", "modifiers": "private", "return": "OAuth2Request", "signature": "OAuth2Request readAuthorizationRequest(JsonReader reader)", "full_signature": "private OAuth2Request readAuthorizationRequest(JsonReader reader)", "class_method_signature": "MITREidDataService_1_1.readAuthorizationRequest(JsonReader reader)", "testcase": false, "constructor": false}, {"identifier": "readSavedUserAuthentication", "parameters": "(JsonReader reader)", "modifiers": "private", "return": "SavedUserAuthentication", "signature": "SavedUserAuthentication readSavedUserAuthentication(JsonReader reader)", "full_signature": "private SavedUserAuthentication readSavedUserAuthentication(JsonReader reader)", "class_method_signature": "MITREidDataService_1_1.readSavedUserAuthentication(JsonReader reader)", "testcase": false, "constructor": false}, {"identifier": "readGrants", "parameters": "(JsonReader reader)", "modifiers": "private", "return": "void", "signature": "void readGrants(JsonReader reader)", "full_signature": "private void readGrants(JsonReader reader)", "class_method_signature": "MITREidDataService_1_1.readGrants(JsonReader reader)", "testcase": false, "constructor": false}, {"identifier": "readWhitelistedSites", "parameters": "(JsonReader reader)", "modifiers": "private", "return": "void", "signature": "void readWhitelistedSites(JsonReader reader)", "full_signature": "private void readWhitelistedSites(JsonReader reader)", "class_method_signature": "MITREidDataService_1_1.readWhitelistedSites(JsonReader reader)", "testcase": false, "constructor": false}, {"identifier": "readBlacklistedSites", "parameters": "(JsonReader reader)", "modifiers": "private", "return": "void", "signature": "void readBlacklistedSites(JsonReader reader)", "full_signature": "private void readBlacklistedSites(JsonReader reader)", "class_method_signature": "MITREidDataService_1_1.readBlacklistedSites(JsonReader reader)", "testcase": false, "constructor": false}, {"identifier": "readClients", "parameters": "(JsonReader reader)", "modifiers": "private", "return": "void", "signature": "void readClients(JsonReader reader)", "full_signature": "private void readClients(JsonReader reader)", "class_method_signature": "MITREidDataService_1_1.readClients(JsonReader reader)", "testcase": false, "constructor": false}, {"identifier": "readSystemScopes", "parameters": "(JsonReader reader)", "modifiers": "private", "return": "void", "signature": "void readSystemScopes(JsonReader reader)", "full_signature": "private void readSystemScopes(JsonReader reader)", "class_method_signature": "MITREidDataService_1_1.readSystemScopes(JsonReader reader)", "testcase": false, "constructor": false}, {"identifier": "fixObjectReferences", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void fixObjectReferences()", "full_signature": "private void fixObjectReferences()", "class_method_signature": "MITREidDataService_1_1.fixObjectReferences()", "testcase": false, "constructor": false}], "file": "openid-connect-server/src/main/java/org/mitre/openid/connect/service/impl/MITREidDataService_1_1.java"}, "focal_method": {"identifier": "exportData", "parameters": "(JsonWriter writer)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void exportData(JsonWriter writer) throws IOException {\n\t\tthrow new UnsupportedOperationException(\"Can not export 1.1 format from this version.\");\n\t}", "signature": "void exportData(JsonWriter writer)", "full_signature": "@Override public void exportData(JsonWriter writer)", "class_method_signature": "MITREidDataService_1_1.exportData(JsonWriter writer)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2681994, "url": "https://github.com/mitreid-connect/OpenID-Connect-Java-Spring-Server", "language": "Java", "is_fork": false, "fork_count": 709, "stargazer_count": 1206, "size": 15055, "license": "licensed"}}