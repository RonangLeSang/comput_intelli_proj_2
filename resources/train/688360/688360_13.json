{"test_class": {"identifier": "IoUtilsTest", "superclass": "extends JUnitTestSupport", "interfaces": "", "fields": [], "file": "sshd-common/src/test/java/org/apache/sshd/common/util/io/IoUtilsTest.java"}, "test_case": {"identifier": "testFollowLinks", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFollowLinks() {\n        assertTrue(\"Null ?\", IoUtils.followLinks((LinkOption[]) null));\n        assertTrue(\"Empty ?\", IoUtils.followLinks(IoUtils.EMPTY_LINK_OPTIONS));\n        assertFalse(\"No-follow ?\", IoUtils.followLinks(IoUtils.getLinkOptions(false)));\n    }", "signature": "void testFollowLinks()", "full_signature": "@Test public void testFollowLinks()", "class_method_signature": "IoUtilsTest.testFollowLinks()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "followLinks", "assertTrue", "followLinks", "assertFalse", "followLinks", "getLinkOptions"]}, "focal_class": {"identifier": "IoUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final OpenOption[] EMPTY_OPEN_OPTIONS = new OpenOption[0];", "modifier": "public static final", "type": "OpenOption[]", "declarator": "EMPTY_OPEN_OPTIONS = new OpenOption[0]", "var_name": "EMPTY_OPEN_OPTIONS"}, {"original_string": "public static final CopyOption[] EMPTY_COPY_OPTIONS = new CopyOption[0];", "modifier": "public static final", "type": "CopyOption[]", "declarator": "EMPTY_COPY_OPTIONS = new CopyOption[0]", "var_name": "EMPTY_COPY_OPTIONS"}, {"original_string": "public static final LinkOption[] EMPTY_LINK_OPTIONS = new LinkOption[0];", "modifier": "public static final", "type": "LinkOption[]", "declarator": "EMPTY_LINK_OPTIONS = new LinkOption[0]", "var_name": "EMPTY_LINK_OPTIONS"}, {"original_string": "public static final FileAttribute<?>[] EMPTY_FILE_ATTRIBUTES = new FileAttribute<?>[0];", "modifier": "public static final", "type": "FileAttribute<?>[]", "declarator": "EMPTY_FILE_ATTRIBUTES = new FileAttribute<?>[0]", "var_name": "EMPTY_FILE_ATTRIBUTES"}, {"original_string": "public static final List<String> WINDOWS_EXECUTABLE_EXTENSIONS\n            = Collections.unmodifiableList(Arrays.asList(\".bat\", \".exe\", \".cmd\"));", "modifier": "public static final", "type": "List<String>", "declarator": "WINDOWS_EXECUTABLE_EXTENSIONS\n            = Collections.unmodifiableList(Arrays.asList(\".bat\", \".exe\", \".cmd\"))", "var_name": "WINDOWS_EXECUTABLE_EXTENSIONS"}, {"original_string": "public static final int DEFAULT_COPY_SIZE = 8192;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_COPY_SIZE = 8192", "var_name": "DEFAULT_COPY_SIZE"}, {"original_string": "public static final String EOL = System.lineSeparator();", "modifier": "public static final", "type": "String", "declarator": "EOL = System.lineSeparator()", "var_name": "EOL"}, {"original_string": "public static final Set<StandardOpenOption> WRITEABLE_OPEN_OPTIONS = Collections.unmodifiableSet(\n            EnumSet.of(\n                    StandardOpenOption.APPEND, StandardOpenOption.CREATE,\n                    StandardOpenOption.CREATE_NEW, StandardOpenOption.DELETE_ON_CLOSE,\n                    StandardOpenOption.DSYNC, StandardOpenOption.SYNC,\n                    StandardOpenOption.TRUNCATE_EXISTING, StandardOpenOption.WRITE));", "modifier": "public static final", "type": "Set<StandardOpenOption>", "declarator": "WRITEABLE_OPEN_OPTIONS = Collections.unmodifiableSet(\n            EnumSet.of(\n                    StandardOpenOption.APPEND, StandardOpenOption.CREATE,\n                    StandardOpenOption.CREATE_NEW, StandardOpenOption.DELETE_ON_CLOSE,\n                    StandardOpenOption.DSYNC, StandardOpenOption.SYNC,\n                    StandardOpenOption.TRUNCATE_EXISTING, StandardOpenOption.WRITE))", "var_name": "WRITEABLE_OPEN_OPTIONS"}, {"original_string": "private static final byte[] EOL_BYTES = EOL.getBytes(StandardCharsets.UTF_8);", "modifier": "private static final", "type": "byte[]", "declarator": "EOL_BYTES = EOL.getBytes(StandardCharsets.UTF_8)", "var_name": "EOL_BYTES"}, {"original_string": "private static final LinkOption[] NO_FOLLOW_OPTIONS = new LinkOption[] { LinkOption.NOFOLLOW_LINKS };", "modifier": "private static final", "type": "LinkOption[]", "declarator": "NO_FOLLOW_OPTIONS = new LinkOption[] { LinkOption.NOFOLLOW_LINKS }", "var_name": "NO_FOLLOW_OPTIONS"}], "methods": [{"identifier": "IoUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " IoUtils()", "full_signature": "private  IoUtils()", "class_method_signature": "IoUtils.IoUtils()", "testcase": false, "constructor": true}, {"identifier": "getEOLBytes", "parameters": "()", "modifiers": "public static", "return": "byte[]", "signature": "byte[] getEOLBytes()", "full_signature": "public static byte[] getEOLBytes()", "class_method_signature": "IoUtils.getEOLBytes()", "testcase": false, "constructor": false}, {"identifier": "getLinkOptions", "parameters": "(boolean followLinks)", "modifiers": "public static", "return": "LinkOption[]", "signature": "LinkOption[] getLinkOptions(boolean followLinks)", "full_signature": "public static LinkOption[] getLinkOptions(boolean followLinks)", "class_method_signature": "IoUtils.getLinkOptions(boolean followLinks)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(InputStream source, OutputStream sink)", "modifiers": "public static", "return": "long", "signature": "long copy(InputStream source, OutputStream sink)", "full_signature": "public static long copy(InputStream source, OutputStream sink)", "class_method_signature": "IoUtils.copy(InputStream source, OutputStream sink)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(InputStream source, OutputStream sink, int bufferSize)", "modifiers": "public static", "return": "long", "signature": "long copy(InputStream source, OutputStream sink, int bufferSize)", "full_signature": "public static long copy(InputStream source, OutputStream sink, int bufferSize)", "class_method_signature": "IoUtils.copy(InputStream source, OutputStream sink, int bufferSize)", "testcase": false, "constructor": false}, {"identifier": "closeQuietly", "parameters": "(Closeable... closeables)", "modifiers": "@SuppressWarnings(\"ThrowableResultOfMethodCallIgnored\") public static", "return": "IOException", "signature": "IOException closeQuietly(Closeable... closeables)", "full_signature": "@SuppressWarnings(\"ThrowableResultOfMethodCallIgnored\") public static IOException closeQuietly(Closeable... closeables)", "class_method_signature": "IoUtils.closeQuietly(Closeable... closeables)", "testcase": false, "constructor": false}, {"identifier": "closeQuietly", "parameters": "(Closeable c)", "modifiers": "@SuppressWarnings(\"ThrowableResultOfMethodCallIgnored\") public static", "return": "IOException", "signature": "IOException closeQuietly(Closeable c)", "full_signature": "@SuppressWarnings(\"ThrowableResultOfMethodCallIgnored\") public static IOException closeQuietly(Closeable c)", "class_method_signature": "IoUtils.closeQuietly(Closeable c)", "testcase": false, "constructor": false}, {"identifier": "closeQuietly", "parameters": "(Collection<? extends Closeable> closeables)", "modifiers": "@SuppressWarnings(\"ThrowableResultOfMethodCallIgnored\") public static", "return": "IOException", "signature": "IOException closeQuietly(Collection<? extends Closeable> closeables)", "full_signature": "@SuppressWarnings(\"ThrowableResultOfMethodCallIgnored\") public static IOException closeQuietly(Collection<? extends Closeable> closeables)", "class_method_signature": "IoUtils.closeQuietly(Collection<? extends Closeable> closeables)", "testcase": false, "constructor": false}, {"identifier": "isWindowsExecutable", "parameters": "(String fileName)", "modifiers": "public static", "return": "boolean", "signature": "boolean isWindowsExecutable(String fileName)", "full_signature": "public static boolean isWindowsExecutable(String fileName)", "class_method_signature": "IoUtils.isWindowsExecutable(String fileName)", "testcase": false, "constructor": false}, {"identifier": "getPermissions", "parameters": "(Path path, LinkOption... options)", "modifiers": "public static", "return": "Set<PosixFilePermission>", "signature": "Set<PosixFilePermission> getPermissions(Path path, LinkOption... options)", "full_signature": "public static Set<PosixFilePermission> getPermissions(Path path, LinkOption... options)", "class_method_signature": "IoUtils.getPermissions(Path path, LinkOption... options)", "testcase": false, "constructor": false}, {"identifier": "getPermissionsFromFile", "parameters": "(File f)", "modifiers": "public static", "return": "Set<PosixFilePermission>", "signature": "Set<PosixFilePermission> getPermissionsFromFile(File f)", "full_signature": "public static Set<PosixFilePermission> getPermissionsFromFile(File f)", "class_method_signature": "IoUtils.getPermissionsFromFile(File f)", "testcase": false, "constructor": false}, {"identifier": "isExecutable", "parameters": "(File f)", "modifiers": "public static", "return": "boolean", "signature": "boolean isExecutable(File f)", "full_signature": "public static boolean isExecutable(File f)", "class_method_signature": "IoUtils.isExecutable(File f)", "testcase": false, "constructor": false}, {"identifier": "setPermissions", "parameters": "(Path path, Set<PosixFilePermission> perms)", "modifiers": "public static", "return": "void", "signature": "void setPermissions(Path path, Set<PosixFilePermission> perms)", "full_signature": "public static void setPermissions(Path path, Set<PosixFilePermission> perms)", "class_method_signature": "IoUtils.setPermissions(Path path, Set<PosixFilePermission> perms)", "testcase": false, "constructor": false}, {"identifier": "setPermissionsToFile", "parameters": "(File f, Collection<PosixFilePermission> perms)", "modifiers": "public static", "return": "void", "signature": "void setPermissionsToFile(File f, Collection<PosixFilePermission> perms)", "full_signature": "public static void setPermissionsToFile(File f, Collection<PosixFilePermission> perms)", "class_method_signature": "IoUtils.setPermissionsToFile(File f, Collection<PosixFilePermission> perms)", "testcase": false, "constructor": false}, {"identifier": "getFileOwner", "parameters": "(Path path, LinkOption... options)", "modifiers": "public static", "return": "String", "signature": "String getFileOwner(Path path, LinkOption... options)", "full_signature": "public static String getFileOwner(Path path, LinkOption... options)", "class_method_signature": "IoUtils.getFileOwner(Path path, LinkOption... options)", "testcase": false, "constructor": false}, {"identifier": "checkFileExists", "parameters": "(Path path, LinkOption... options)", "modifiers": "public static", "return": "Boolean", "signature": "Boolean checkFileExists(Path path, LinkOption... options)", "full_signature": "public static Boolean checkFileExists(Path path, LinkOption... options)", "class_method_signature": "IoUtils.checkFileExists(Path path, LinkOption... options)", "testcase": false, "constructor": false}, {"identifier": "readFully", "parameters": "(InputStream input, byte[] buffer)", "modifiers": "public static", "return": "void", "signature": "void readFully(InputStream input, byte[] buffer)", "full_signature": "public static void readFully(InputStream input, byte[] buffer)", "class_method_signature": "IoUtils.readFully(InputStream input, byte[] buffer)", "testcase": false, "constructor": false}, {"identifier": "readFully", "parameters": "(\n            InputStream input, byte[] buffer, int offset, int length)", "modifiers": "public static", "return": "void", "signature": "void readFully(\n            InputStream input, byte[] buffer, int offset, int length)", "full_signature": "public static void readFully(\n            InputStream input, byte[] buffer, int offset, int length)", "class_method_signature": "IoUtils.readFully(\n            InputStream input, byte[] buffer, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(InputStream input, byte[] buffer)", "modifiers": "public static", "return": "int", "signature": "int read(InputStream input, byte[] buffer)", "full_signature": "public static int read(InputStream input, byte[] buffer)", "class_method_signature": "IoUtils.read(InputStream input, byte[] buffer)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(\n            InputStream input, byte[] buffer, int offset, int length)", "modifiers": "public static", "return": "int", "signature": "int read(\n            InputStream input, byte[] buffer, int offset, int length)", "full_signature": "public static int read(\n            InputStream input, byte[] buffer, int offset, int length)", "class_method_signature": "IoUtils.read(\n            InputStream input, byte[] buffer, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "validateExcludedPermissions", "parameters": "(\n            Collection<PosixFilePermission> perms, Collection<PosixFilePermission> excluded)", "modifiers": "public static", "return": "PosixFilePermission", "signature": "PosixFilePermission validateExcludedPermissions(\n            Collection<PosixFilePermission> perms, Collection<PosixFilePermission> excluded)", "full_signature": "public static PosixFilePermission validateExcludedPermissions(\n            Collection<PosixFilePermission> perms, Collection<PosixFilePermission> excluded)", "class_method_signature": "IoUtils.validateExcludedPermissions(\n            Collection<PosixFilePermission> perms, Collection<PosixFilePermission> excluded)", "testcase": false, "constructor": false}, {"identifier": "ensureDirectory", "parameters": "(Path path, LinkOption... options)", "modifiers": "public static", "return": "Path", "signature": "Path ensureDirectory(Path path, LinkOption... options)", "full_signature": "public static Path ensureDirectory(Path path, LinkOption... options)", "class_method_signature": "IoUtils.ensureDirectory(Path path, LinkOption... options)", "testcase": false, "constructor": false}, {"identifier": "followLinks", "parameters": "(LinkOption... options)", "modifiers": "public static", "return": "boolean", "signature": "boolean followLinks(LinkOption... options)", "full_signature": "public static boolean followLinks(LinkOption... options)", "class_method_signature": "IoUtils.followLinks(LinkOption... options)", "testcase": false, "constructor": false}, {"identifier": "appendPathComponent", "parameters": "(String prefix, String component)", "modifiers": "public static", "return": "String", "signature": "String appendPathComponent(String prefix, String component)", "full_signature": "public static String appendPathComponent(String prefix, String component)", "class_method_signature": "IoUtils.appendPathComponent(String prefix, String component)", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "(InputStream inStream)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toByteArray(InputStream inStream)", "full_signature": "public static byte[] toByteArray(InputStream inStream)", "class_method_signature": "IoUtils.toByteArray(InputStream inStream)", "testcase": false, "constructor": false}, {"identifier": "readAllLines", "parameters": "(URL url)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> readAllLines(URL url)", "full_signature": "public static List<String> readAllLines(URL url)", "class_method_signature": "IoUtils.readAllLines(URL url)", "testcase": false, "constructor": false}, {"identifier": "readAllLines", "parameters": "(InputStream stream)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> readAllLines(InputStream stream)", "full_signature": "public static List<String> readAllLines(InputStream stream)", "class_method_signature": "IoUtils.readAllLines(InputStream stream)", "testcase": false, "constructor": false}, {"identifier": "readAllLines", "parameters": "(Reader reader)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> readAllLines(Reader reader)", "full_signature": "public static List<String> readAllLines(Reader reader)", "class_method_signature": "IoUtils.readAllLines(Reader reader)", "testcase": false, "constructor": false}, {"identifier": "readAllLines", "parameters": "(BufferedReader reader)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> readAllLines(BufferedReader reader)", "full_signature": "public static List<String> readAllLines(BufferedReader reader)", "class_method_signature": "IoUtils.readAllLines(BufferedReader reader)", "testcase": false, "constructor": false}, {"identifier": "readAllLines", "parameters": "(BufferedReader reader, int lineCountHint)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> readAllLines(BufferedReader reader, int lineCountHint)", "full_signature": "public static List<String> readAllLines(BufferedReader reader, int lineCountHint)", "class_method_signature": "IoUtils.readAllLines(BufferedReader reader, int lineCountHint)", "testcase": false, "constructor": false}], "file": "sshd-common/src/main/java/org/apache/sshd/common/util/io/IoUtils.java"}, "focal_method": {"identifier": "followLinks", "parameters": "(LinkOption... options)", "modifiers": "public static", "return": "boolean", "body": "public static boolean followLinks(LinkOption... options) {\n        if (GenericUtils.isEmpty(options)) {\n            return true;\n        }\n\n        for (LinkOption localLinkOption : options) {\n            if (localLinkOption == LinkOption.NOFOLLOW_LINKS) {\n                return false;\n            }\n        }\n        return true;\n    }", "signature": "boolean followLinks(LinkOption... options)", "full_signature": "public static boolean followLinks(LinkOption... options)", "class_method_signature": "IoUtils.followLinks(LinkOption... options)", "testcase": false, "constructor": false, "invocations": ["isEmpty"]}, "repository": {"repo_id": 688360, "url": "https://github.com/apache/mina-sshd", "stars": 235, "created": "5/26/2010 11:38:08 PM +00:00", "updates": "2020-01-27T13:12:10+00:00", "fork": "False", "license": "licensed"}}