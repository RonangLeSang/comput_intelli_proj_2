{"test_class": {"identifier": "FormTest", "superclass": "extends AbstractPresenterTest", "interfaces": "", "fields": [{"original_string": "private final Binder b = new Binder();", "modifier": "private final", "type": "Binder", "declarator": "b = new Binder()", "var_name": "b"}, {"original_string": "private final Form form = new Form();", "modifier": "private final", "type": "Form", "declarator": "form = new Form()", "var_name": "form"}, {"original_string": "private final StubFormView v = (StubFormView) form.getView();", "modifier": "private final", "type": "StubFormView", "declarator": "v = (StubFormView) form.getView()", "var_name": "v"}], "file": "bootstrap/src/test/java/org/tessell/bootstrap/FormTest.java"}, "test_case": {"identifier": "autoFocusFirstLineOnAttach", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void autoFocusFirstLineOnAttach() {\n    // Given two lines\n    final TextLine line1 = new TextLine();\n    final TextLine line2 = new TextLine();\n    form.add(line1);\n    form.add(line2);\n    // When the form is attached\n    AttachEvent.fire(form, true);\n    // Then the line1 is focused\n    assertThat(((StubTextBox) line1.getTextBox()).isFocused(), is(true));\n    // And line2 is not\n    assertThat(((StubTextBox) line2.getTextBox()).isFocused(), is(false));\n  }", "signature": "void autoFocusFirstLineOnAttach()", "full_signature": "@Test public void autoFocusFirstLineOnAttach()", "class_method_signature": "FormTest.autoFocusFirstLineOnAttach()", "testcase": true, "constructor": false, "invocations": ["add", "add", "fire", "assertThat", "isFocused", "getTextBox", "is", "assertThat", "isFocused", "getTextBox", "is"]}, "focal_class": {"identifier": "Form", "superclass": "extends CompositeHasIsWidgets", "interfaces": "", "fields": [{"original_string": "private final IsFormView view = newFormView();", "modifier": "private final", "type": "IsFormView", "declarator": "view = newFormView()", "var_name": "view"}, {"original_string": "private final BooleanProperty loading = booleanProperty(\"loading\", false);", "modifier": "private final", "type": "BooleanProperty", "declarator": "loading = booleanProperty(\"loading\", false)", "var_name": "loading"}, {"original_string": "private final BooleanProperty active = booleanProperty(\"active\", false);", "modifier": "private final", "type": "BooleanProperty", "declarator": "active = booleanProperty(\"active\", false)", "var_name": "active"}, {"original_string": "private final PropertyGroup valid = new PropertyGroup(\"valid\", \"Form is invalid\");", "modifier": "private final", "type": "PropertyGroup", "declarator": "valid = new PropertyGroup(\"valid\", \"Form is invalid\")", "var_name": "valid"}, {"original_string": "private final Binder b = new Binder();", "modifier": "private final", "type": "Binder", "declarator": "b = new Binder()", "var_name": "b"}, {"original_string": "private final List<AbstractLine> lines = new ArrayList<AbstractLine>();", "modifier": "private final", "type": "List<AbstractLine>", "declarator": "lines = new ArrayList<AbstractLine>()", "var_name": "lines"}, {"original_string": "private final List<Button> buttons = new ArrayList<Button>();", "modifier": "private final", "type": "List<Button>", "declarator": "buttons = new ArrayList<Button>()", "var_name": "buttons"}, {"original_string": "private boolean autoFocus = true;", "modifier": "private", "type": "boolean", "declarator": "autoFocus = true", "var_name": "autoFocus"}], "methods": [{"identifier": "Form", "parameters": "()", "modifiers": "public", "return": "", "signature": " Form()", "full_signature": "public  Form()", "class_method_signature": "Form.Form()", "testcase": false, "constructor": true}, {"identifier": "setTitle", "parameters": "(final String title)", "modifiers": "public", "return": "void", "signature": "void setTitle(final String title)", "full_signature": "public void setTitle(final String title)", "class_method_signature": "Form.setTitle(final String title)", "testcase": false, "constructor": false}, {"identifier": "setAutoFocus", "parameters": "(final boolean autoFocus)", "modifiers": "public", "return": "void", "signature": "void setAutoFocus(final boolean autoFocus)", "full_signature": "public void setAutoFocus(final boolean autoFocus)", "class_method_signature": "Form.setAutoFocus(final boolean autoFocus)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final Button button)", "modifiers": "public", "return": "void", "signature": "void add(final Button button)", "full_signature": "public void add(final Button button)", "class_method_signature": "Form.add(final Button button)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final AbstractLine line)", "modifiers": "public", "return": "void", "signature": "void add(final AbstractLine line)", "full_signature": "public void add(final AbstractLine line)", "class_method_signature": "Form.add(final AbstractLine line)", "testcase": false, "constructor": false}, {"identifier": "watch", "parameters": "(final Property<?> property)", "modifiers": "public", "return": "void", "signature": "void watch(final Property<?> property)", "full_signature": "public void watch(final Property<?> property)", "class_method_signature": "Form.watch(final Property<?> property)", "testcase": false, "constructor": false}, {"identifier": "watch", "parameters": "(final Model model)", "modifiers": "public", "return": "void", "signature": "void watch(final Model model)", "full_signature": "public void watch(final Model model)", "class_method_signature": "Form.watch(final Model model)", "testcase": false, "constructor": false}, {"identifier": "watch", "parameters": "(final UiCommand command)", "modifiers": "public", "return": "void", "signature": "void watch(final UiCommand command)", "full_signature": "public void watch(final UiCommand command)", "class_method_signature": "Form.watch(final UiCommand command)", "testcase": false, "constructor": false}, {"identifier": "valid", "parameters": "()", "modifiers": "public", "return": "Property<Boolean>", "signature": "Property<Boolean> valid()", "full_signature": "public Property<Boolean> valid()", "class_method_signature": "Form.valid()", "testcase": false, "constructor": false}, {"identifier": "loading", "parameters": "()", "modifiers": "public", "return": "BooleanProperty", "signature": "BooleanProperty loading()", "full_signature": "public BooleanProperty loading()", "class_method_signature": "Form.loading()", "testcase": false, "constructor": false}, {"identifier": "active", "parameters": "()", "modifiers": "public", "return": "Property<Boolean>", "signature": "Property<Boolean> active()", "full_signature": "public Property<Boolean> active()", "class_method_signature": "Form.active()", "testcase": false, "constructor": false}, {"identifier": "getView", "parameters": "()", "modifiers": "@VisibleForTesting public", "return": "IsFormView", "signature": "IsFormView getView()", "full_signature": "@VisibleForTesting public IsFormView getView()", "class_method_signature": "Form.getView()", "testcase": false, "constructor": false}, {"identifier": "addIsWidget", "parameters": "(final IsWidget w)", "modifiers": "@Override protected", "return": "void", "signature": "void addIsWidget(final IsWidget w)", "full_signature": "@Override protected void addIsWidget(final IsWidget w)", "class_method_signature": "Form.addIsWidget(final IsWidget w)", "testcase": false, "constructor": false}, {"identifier": "triggerDefaultAction", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void triggerDefaultAction()", "full_signature": "private void triggerDefaultAction()", "class_method_signature": "Form.triggerDefaultAction()", "testcase": false, "constructor": false}, {"identifier": "setupFocusHandlers", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setupFocusHandlers()", "full_signature": "private void setupFocusHandlers()", "class_method_signature": "Form.setupFocusHandlers()", "testcase": false, "constructor": false}, {"identifier": "triggerAutoFocus", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void triggerAutoFocus()", "full_signature": "private void triggerAutoFocus()", "class_method_signature": "Form.triggerAutoFocus()", "testcase": false, "constructor": false}, {"identifier": "deferIfInGwt", "parameters": "(ScheduledCommand command)", "modifiers": "private static", "return": "void", "signature": "void deferIfInGwt(ScheduledCommand command)", "full_signature": "private static void deferIfInGwt(ScheduledCommand command)", "class_method_signature": "Form.deferIfInGwt(ScheduledCommand command)", "testcase": false, "constructor": false}], "file": "bootstrap/src/main/java/org/tessell/bootstrap/Form.java"}, "focal_method": {"identifier": "add", "parameters": "(final Button button)", "modifiers": "public", "return": "void", "body": "public void add(final Button button) {\n    button.setForm(this);\n    buttons.add(button);\n    if (\"left\".equals(button.getSide())) {\n      view.leftActions().add(button);\n    } else {\n      view.rightActions().add(button);\n    }\n  }", "signature": "void add(final Button button)", "full_signature": "public void add(final Button button)", "class_method_signature": "Form.add(final Button button)", "testcase": false, "constructor": false, "invocations": ["setForm", "add", "equals", "getSide", "add", "leftActions", "add", "rightActions"]}, "repository": {"repo_id": 766240, "url": "https://github.com/stephenh/tessell", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 38, "size": 4399, "license": "licensed"}}