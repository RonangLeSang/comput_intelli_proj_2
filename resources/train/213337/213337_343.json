{"test_class": {"identifier": "RelativeEffectFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Study d_s;", "modifier": "private", "type": "Study", "declarator": "d_s", "var_name": "d_s"}, {"original_string": "private Endpoint d_eCont;", "modifier": "private", "type": "Endpoint", "declarator": "d_eCont", "var_name": "d_eCont"}, {"original_string": "private TreatmentDefinition d_fluox;", "modifier": "private", "type": "TreatmentDefinition", "declarator": "d_fluox", "var_name": "d_fluox"}, {"original_string": "private TreatmentDefinition d_parox;", "modifier": "private", "type": "TreatmentDefinition", "declarator": "d_parox", "var_name": "d_parox"}, {"original_string": "private Arm d_pBase;", "modifier": "private", "type": "Arm", "declarator": "d_pBase", "var_name": "d_pBase"}, {"original_string": "private Arm d_pSubj;", "modifier": "private", "type": "Arm", "declarator": "d_pSubj", "var_name": "d_pSubj"}, {"original_string": "private Endpoint d_eRate;", "modifier": "private", "type": "Endpoint", "declarator": "d_eRate", "var_name": "d_eRate"}], "file": "application/src/test/java/org/drugis/addis/entities/relativeeffect/RelativeEffectFactoryTest.java"}, "test_case": {"identifier": "testGetRiskRatioCont", "parameters": "()", "modifiers": "@Test(expected=IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected=IllegalArgumentException.class)\n\tpublic void testGetRiskRatioCont() {\n\t\tRelativeEffectFactory.buildRelativeEffect(d_s, d_eCont, d_parox, d_fluox, BasicRiskRatio.class);\n\t}", "signature": "void testGetRiskRatioCont()", "full_signature": "@Test(expected=IllegalArgumentException.class) public void testGetRiskRatioCont()", "class_method_signature": "RelativeEffectFactoryTest.testGetRiskRatioCont()", "testcase": true, "constructor": false, "invocations": ["buildRelativeEffect"]}, "focal_class": {"identifier": "RelativeEffectFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "buildRelativeEffect", "parameters": "(\n\t\t\tStudy s, OutcomeMeasure om, TreatmentDefinition baseline, TreatmentDefinition subject, Class<T> type, boolean isCorrected)", "modifiers": "public static", "return": "RelativeEffect<?>", "signature": "RelativeEffect<?> buildRelativeEffect(\n\t\t\tStudy s, OutcomeMeasure om, TreatmentDefinition baseline, TreatmentDefinition subject, Class<T> type, boolean isCorrected)", "full_signature": "public static RelativeEffect<?> buildRelativeEffect(\n\t\t\tStudy s, OutcomeMeasure om, TreatmentDefinition baseline, TreatmentDefinition subject, Class<T> type, boolean isCorrected)", "class_method_signature": "RelativeEffectFactory.buildRelativeEffect(\n\t\t\tStudy s, OutcomeMeasure om, TreatmentDefinition baseline, TreatmentDefinition subject, Class<T> type, boolean isCorrected)", "testcase": false, "constructor": false}, {"identifier": "buildRelativeEffect", "parameters": "(\n\t\t\tStudy s, OutcomeMeasure om, TreatmentDefinition baseline, TreatmentDefinition subject, Class<T> type)", "modifiers": "public static", "return": "RelativeEffect<?>", "signature": "RelativeEffect<?> buildRelativeEffect(\n\t\t\tStudy s, OutcomeMeasure om, TreatmentDefinition baseline, TreatmentDefinition subject, Class<T> type)", "full_signature": "public static RelativeEffect<?> buildRelativeEffect(\n\t\t\tStudy s, OutcomeMeasure om, TreatmentDefinition baseline, TreatmentDefinition subject, Class<T> type)", "class_method_signature": "RelativeEffectFactory.buildRelativeEffect(\n\t\t\tStudy s, OutcomeMeasure om, TreatmentDefinition baseline, TreatmentDefinition subject, Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "findFirstArm", "parameters": "(Study s, TreatmentDefinition d)", "modifiers": "public static", "return": "Arm", "signature": "Arm findFirstArm(Study s, TreatmentDefinition d)", "full_signature": "public static Arm findFirstArm(Study s, TreatmentDefinition d)", "class_method_signature": "RelativeEffectFactory.findFirstArm(Study s, TreatmentDefinition d)", "testcase": false, "constructor": false}, {"identifier": "buildRelativeEffect", "parameters": "(\n\t\t\tStudyArmsEntry studyArmsEntry, OutcomeMeasure om,\n\t\t\tClass<? extends RelativeEffect<? extends Measurement>> type, boolean isCorrected)", "modifiers": "public static", "return": "RelativeEffect<? extends Measurement>", "signature": "RelativeEffect<? extends Measurement> buildRelativeEffect(\n\t\t\tStudyArmsEntry studyArmsEntry, OutcomeMeasure om,\n\t\t\tClass<? extends RelativeEffect<? extends Measurement>> type, boolean isCorrected)", "full_signature": "public static RelativeEffect<? extends Measurement> buildRelativeEffect(\n\t\t\tStudyArmsEntry studyArmsEntry, OutcomeMeasure om,\n\t\t\tClass<? extends RelativeEffect<? extends Measurement>> type, boolean isCorrected)", "class_method_signature": "RelativeEffectFactory.buildRelativeEffect(\n\t\t\tStudyArmsEntry studyArmsEntry, OutcomeMeasure om,\n\t\t\tClass<? extends RelativeEffect<? extends Measurement>> type, boolean isCorrected)", "testcase": false, "constructor": false}, {"identifier": "buildRiskDifference", "parameters": "(Study s, OutcomeMeasure om, Arm base, Arm subj)", "modifiers": "private static", "return": "RelativeEffect<?>", "signature": "RelativeEffect<?> buildRiskDifference(Study s, OutcomeMeasure om, Arm base, Arm subj)", "full_signature": "private static RelativeEffect<?> buildRiskDifference(Study s, OutcomeMeasure om, Arm base, Arm subj)", "class_method_signature": "RelativeEffectFactory.buildRiskDifference(Study s, OutcomeMeasure om, Arm base, Arm subj)", "testcase": false, "constructor": false}, {"identifier": "buildRiskRatio", "parameters": "(Study s, OutcomeMeasure om, Arm base, Arm subj)", "modifiers": "private static", "return": "RelativeEffect<?>", "signature": "RelativeEffect<?> buildRiskRatio(Study s, OutcomeMeasure om, Arm base, Arm subj)", "full_signature": "private static RelativeEffect<?> buildRiskRatio(Study s, OutcomeMeasure om, Arm base, Arm subj)", "class_method_signature": "RelativeEffectFactory.buildRiskRatio(Study s, OutcomeMeasure om, Arm base, Arm subj)", "testcase": false, "constructor": false}, {"identifier": "buildOddsRatio", "parameters": "(Study s, OutcomeMeasure om, Arm base, Arm subj)", "modifiers": "private static", "return": "RelativeEffect<?>", "signature": "RelativeEffect<?> buildOddsRatio(Study s, OutcomeMeasure om, Arm base, Arm subj)", "full_signature": "private static RelativeEffect<?> buildOddsRatio(Study s, OutcomeMeasure om, Arm base, Arm subj)", "class_method_signature": "RelativeEffectFactory.buildOddsRatio(Study s, OutcomeMeasure om, Arm base, Arm subj)", "testcase": false, "constructor": false}, {"identifier": "buildMeanDifference", "parameters": "(Study s, OutcomeMeasure om, Arm base, Arm subj)", "modifiers": "private static", "return": "RelativeEffect<?>", "signature": "RelativeEffect<?> buildMeanDifference(Study s, OutcomeMeasure om, Arm base, Arm subj)", "full_signature": "private static RelativeEffect<?> buildMeanDifference(Study s, OutcomeMeasure om, Arm base, Arm subj)", "class_method_signature": "RelativeEffectFactory.buildMeanDifference(Study s, OutcomeMeasure om, Arm base, Arm subj)", "testcase": false, "constructor": false}, {"identifier": "buildStandardisedMeanDifference", "parameters": "(Study s, OutcomeMeasure e, Arm base, Arm subj)", "modifiers": "private static", "return": "RelativeEffect<?>", "signature": "RelativeEffect<?> buildStandardisedMeanDifference(Study s, OutcomeMeasure e, Arm base, Arm subj)", "full_signature": "private static RelativeEffect<?> buildStandardisedMeanDifference(Study s, OutcomeMeasure e, Arm base, Arm subj)", "class_method_signature": "RelativeEffectFactory.buildStandardisedMeanDifference(Study s, OutcomeMeasure e, Arm base, Arm subj)", "testcase": false, "constructor": false}, {"identifier": "findContinuousMeasurement", "parameters": "(Study s, OutcomeMeasure om, Arm arm)", "modifiers": "private static", "return": "ContinuousMeasurement", "signature": "ContinuousMeasurement findContinuousMeasurement(Study s, OutcomeMeasure om, Arm arm)", "full_signature": "private static ContinuousMeasurement findContinuousMeasurement(Study s, OutcomeMeasure om, Arm arm)", "class_method_signature": "RelativeEffectFactory.findContinuousMeasurement(Study s, OutcomeMeasure om, Arm arm)", "testcase": false, "constructor": false}, {"identifier": "findRateMeasurement", "parameters": "(Study s, OutcomeMeasure om, Arm arm)", "modifiers": "private static", "return": "RateMeasurement", "signature": "RateMeasurement findRateMeasurement(Study s, OutcomeMeasure om, Arm arm)", "full_signature": "private static RateMeasurement findRateMeasurement(Study s, OutcomeMeasure om, Arm arm)", "class_method_signature": "RelativeEffectFactory.findRateMeasurement(Study s, OutcomeMeasure om, Arm arm)", "testcase": false, "constructor": false}, {"identifier": "checkMeasurementPresent", "parameters": "(Study s, OutcomeMeasure om, Arm arm)", "modifiers": "private static", "return": "void", "signature": "void checkMeasurementPresent(Study s, OutcomeMeasure om, Arm arm)", "full_signature": "private static void checkMeasurementPresent(Study s, OutcomeMeasure om, Arm arm)", "class_method_signature": "RelativeEffectFactory.checkMeasurementPresent(Study s, OutcomeMeasure om, Arm arm)", "testcase": false, "constructor": false}], "file": "application/src/main/java/org/drugis/addis/entities/relativeeffect/RelativeEffectFactory.java"}, "focal_method": {"identifier": "buildRelativeEffect", "parameters": "(\n\t\t\tStudy s, OutcomeMeasure om, TreatmentDefinition baseline, TreatmentDefinition subject, Class<T> type, boolean isCorrected)", "modifiers": "public static", "return": "RelativeEffect<?>", "body": "public static <T extends RelativeEffect<?>> RelativeEffect<?> buildRelativeEffect(\n\t\t\tStudy s, OutcomeMeasure om, TreatmentDefinition baseline, TreatmentDefinition subject, Class<T> type, boolean isCorrected) {\n\t\t\n\t\tArm base = findFirstArm(s, baseline);\n\t\tArm subj = findFirstArm(s, subject);\n\t\t\n\t\tif (type.equals(BasicStandardisedMeanDifference.class)) {\n\t\t\treturn buildStandardisedMeanDifference(s, om, base, subj);\n\t\t}\n\t\tif (type.equals(BasicMeanDifference.class)) {\n\t\t\treturn buildMeanDifference(s, om, base, subj);\n\t\t}\n\t\tif (type.equals(BasicOddsRatio.class)) {\n\t\t\treturn isCorrected ? ((BasicOddsRatio) buildOddsRatio(s, om, base, subj)).getCorrected() : buildOddsRatio(s, om, base, subj);\n\t\t}\n\t\tif (type.equals(BasicRiskRatio.class)) {\n\t\t\treturn isCorrected ? ((BasicRiskRatio) buildRiskRatio(s, om, base, subj)).getCorrected() : buildRiskRatio(s, om, base, subj);\n\t\t}\n\t\tif (type.equals(BasicRiskDifference.class)) {\n\t\t\treturn isCorrected ? ((BasicRiskDifference) buildRiskDifference(s, om, base, subj)).getCorrected() : buildRiskDifference(s, om, base, subj);\n\t\t}\n\t\t\n\t\treturn null;\n\t}", "signature": "RelativeEffect<?> buildRelativeEffect(\n\t\t\tStudy s, OutcomeMeasure om, TreatmentDefinition baseline, TreatmentDefinition subject, Class<T> type, boolean isCorrected)", "full_signature": "public static RelativeEffect<?> buildRelativeEffect(\n\t\t\tStudy s, OutcomeMeasure om, TreatmentDefinition baseline, TreatmentDefinition subject, Class<T> type, boolean isCorrected)", "class_method_signature": "RelativeEffectFactory.buildRelativeEffect(\n\t\t\tStudy s, OutcomeMeasure om, TreatmentDefinition baseline, TreatmentDefinition subject, Class<T> type, boolean isCorrected)", "testcase": false, "constructor": false, "invocations": ["findFirstArm", "findFirstArm", "equals", "buildStandardisedMeanDifference", "equals", "buildMeanDifference", "equals", "getCorrected", "buildOddsRatio", "buildOddsRatio", "equals", "getCorrected", "buildRiskRatio", "buildRiskRatio", "equals", "getCorrected", "buildRiskDifference", "buildRiskDifference"]}, "repository": {"repo_id": 213337, "url": "https://github.com/drugis/addis", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 10, "size": 13133, "license": "licensed"}}