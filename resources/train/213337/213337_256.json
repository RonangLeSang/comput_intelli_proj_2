{"test_class": {"identifier": "InverseLogitArgumentMakerTest", "superclass": "", "interfaces": "", "fields": [], "file": "application/src/test/java/org/drugis/addis/mcmcmodel/InverseLogitArgumentMakerTest.java"}, "test_case": {"identifier": "testGetArgumentFirstArray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetArgumentFirstArray() {\n\t\tInverseLogitArgumentMaker am = new InverseLogitArgumentMaker(0);\n\t\tdouble[] inputs = new double[] { -2.3, 3.5, -0.1, 0.0, 8.4, 3.5 };\n\t\tdouble[] expected = new double[inputs.length];\n\t\tfor (int i = 0; i < inputs.length; ++i) {\n\t\t\texpected[i] = MathUtil.ilogit(inputs[i]);\n\t\t}\n\t\tdouble[] actual = am.getArgument(new double[][] { inputs });\n\t\tfor (int i = 0; i < inputs.length; ++i) {\n\t\t\tassertEquals(expected[i], actual[i], 0.0000001);\n\t\t}\n\t}", "signature": "void testGetArgumentFirstArray()", "full_signature": "@Test public void testGetArgumentFirstArray()", "class_method_signature": "InverseLogitArgumentMakerTest.testGetArgumentFirstArray()", "testcase": true, "constructor": false, "invocations": ["ilogit", "getArgument", "assertEquals"]}, "focal_class": {"identifier": "InverseLogitArgumentMaker", "superclass": "", "interfaces": "implements ArgumentMaker", "fields": [{"original_string": "private final int d_idx;", "modifier": "private final", "type": "int", "declarator": "d_idx", "var_name": "d_idx"}], "methods": [{"identifier": "InverseLogitArgumentMaker", "parameters": "(int idx)", "modifiers": "public", "return": "", "signature": " InverseLogitArgumentMaker(int idx)", "full_signature": "public  InverseLogitArgumentMaker(int idx)", "class_method_signature": "InverseLogitArgumentMaker.InverseLogitArgumentMaker(int idx)", "testcase": false, "constructor": true}, {"identifier": "getArgument", "parameters": "(double[][] params)", "modifiers": "public", "return": "double[]", "signature": "double[] getArgument(double[][] params)", "full_signature": "public double[] getArgument(double[][] params)", "class_method_signature": "InverseLogitArgumentMaker.getArgument(double[][] params)", "testcase": false, "constructor": false}], "file": "application/src/main/java/org/drugis/addis/mcmcmodel/InverseLogitArgumentMaker.java"}, "focal_method": {"identifier": "getArgument", "parameters": "(double[][] params)", "modifiers": "public", "return": "double[]", "body": "public double[] getArgument(double[][] params) {\n\t\tdouble[] result = new double[params[d_idx].length];\n\t\tfor (int i = 0; i < result.length; ++i) {\n\t\t\tresult[i] =  MathUtil.ilogit(params[d_idx][i]);\n\t\t}\n\t\treturn result;\n\t}", "signature": "double[] getArgument(double[][] params)", "full_signature": "public double[] getArgument(double[][] params)", "class_method_signature": "InverseLogitArgumentMaker.getArgument(double[][] params)", "testcase": false, "constructor": false, "invocations": ["ilogit"]}, "repository": {"repo_id": 213337, "url": "https://github.com/drugis/addis", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 10, "size": 13133, "license": "licensed"}}