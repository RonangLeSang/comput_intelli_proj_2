{"test_class": {"identifier": "BRBaselineMeasurementTableModelTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BRBaselineMeasurementTableModel d_pm;", "modifier": "private", "type": "BRBaselineMeasurementTableModel", "declarator": "d_pm", "var_name": "d_pm"}, {"original_string": "private MetaBenefitRiskAnalysis d_brAnalysis;", "modifier": "private", "type": "MetaBenefitRiskAnalysis", "declarator": "d_brAnalysis", "var_name": "d_brAnalysis"}], "file": "application/src/test/java/org/drugis/addis/presentation/BRBaselineMeasurementTableModelTest.java"}, "test_case": {"identifier": "testGetRowNames", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetRowNames() {\n\t\tfor (int i = 0; i < d_brAnalysis.getCriteria().size(); ++i) {\n\t\t\tassertEquals(d_brAnalysis.getCriteria().get(i).getName(), d_pm.getValueAt(i, 0));\n\t\t}\n\t}", "signature": "void testGetRowNames()", "full_signature": "@Test public void testGetRowNames()", "class_method_signature": "BRBaselineMeasurementTableModelTest.testGetRowNames()", "testcase": true, "constructor": false, "invocations": ["size", "getCriteria", "assertEquals", "getName", "get", "getCriteria", "getValueAt"]}, "focal_class": {"identifier": "BRBaselineMeasurementTableModel", "superclass": "extends AbstractTableModel", "interfaces": "", "fields": [{"original_string": "protected final MetaBenefitRiskAnalysis d_br;", "modifier": "protected final", "type": "MetaBenefitRiskAnalysis", "declarator": "d_br", "var_name": "d_br"}], "methods": [{"identifier": "BRBaselineMeasurementTableModel", "parameters": "(MetaBenefitRiskAnalysis bra)", "modifiers": "public", "return": "", "signature": " BRBaselineMeasurementTableModel(MetaBenefitRiskAnalysis bra)", "full_signature": "public  BRBaselineMeasurementTableModel(MetaBenefitRiskAnalysis bra)", "class_method_signature": "BRBaselineMeasurementTableModel.BRBaselineMeasurementTableModel(MetaBenefitRiskAnalysis bra)", "testcase": false, "constructor": true}, {"identifier": "getColumnCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getColumnCount()", "full_signature": "public int getColumnCount()", "class_method_signature": "BRBaselineMeasurementTableModel.getColumnCount()", "testcase": false, "constructor": false}, {"identifier": "getRowCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRowCount()", "full_signature": "public int getRowCount()", "class_method_signature": "BRBaselineMeasurementTableModel.getRowCount()", "testcase": false, "constructor": false}, {"identifier": "isCellEditable", "parameters": "(int row, int col)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isCellEditable(int row, int col)", "full_signature": "@Override public boolean isCellEditable(int row, int col)", "class_method_signature": "BRBaselineMeasurementTableModel.isCellEditable(int row, int col)", "testcase": false, "constructor": false}, {"identifier": "getColumnName", "parameters": "(int index)", "modifiers": "@Override public", "return": "String", "signature": "String getColumnName(int index)", "full_signature": "@Override public String getColumnName(int index)", "class_method_signature": "BRBaselineMeasurementTableModel.getColumnName(int index)", "testcase": false, "constructor": false}, {"identifier": "getColumnClass", "parameters": "(int index)", "modifiers": "@Override public", "return": "Class<?>", "signature": "Class<?> getColumnClass(int index)", "full_signature": "@Override public Class<?> getColumnClass(int index)", "class_method_signature": "BRBaselineMeasurementTableModel.getColumnClass(int index)", "testcase": false, "constructor": false}, {"identifier": "getValueAt", "parameters": "(int rowIndex, int columnIndex)", "modifiers": "public", "return": "Object", "signature": "Object getValueAt(int rowIndex, int columnIndex)", "full_signature": "public Object getValueAt(int rowIndex, int columnIndex)", "class_method_signature": "BRBaselineMeasurementTableModel.getValueAt(int rowIndex, int columnIndex)", "testcase": false, "constructor": false}], "file": "application/src/main/java/org/drugis/addis/presentation/BRBaselineMeasurementTableModel.java"}, "focal_method": {"identifier": "getValueAt", "parameters": "(int rowIndex, int columnIndex)", "modifiers": "public", "return": "Object", "body": "public Object getValueAt(int rowIndex, int columnIndex) {\n\t\tOutcomeMeasure om = d_br.getCriteria().get(rowIndex);\n\t\tif (columnIndex == 0) return om.toString();\n\t\telse return d_br.getBaselineDistribution(om);\n\t}", "signature": "Object getValueAt(int rowIndex, int columnIndex)", "full_signature": "public Object getValueAt(int rowIndex, int columnIndex)", "class_method_signature": "BRBaselineMeasurementTableModel.getValueAt(int rowIndex, int columnIndex)", "testcase": false, "constructor": false, "invocations": ["get", "getCriteria", "toString", "getBaselineDistribution"]}, "repository": {"repo_id": 213337, "url": "https://github.com/drugis/addis", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 10, "size": 13133, "license": "licensed"}}