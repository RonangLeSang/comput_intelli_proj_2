{"test_class": {"identifier": "WhenTakenTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Epoch d_epoch1;", "modifier": "private", "type": "Epoch", "declarator": "d_epoch1", "var_name": "d_epoch1"}, {"original_string": "private Epoch d_epoch2;", "modifier": "private", "type": "Epoch", "declarator": "d_epoch2", "var_name": "d_epoch2"}, {"original_string": "private WhenTaken d_wt;", "modifier": "private", "type": "WhenTaken", "declarator": "d_wt", "var_name": "d_wt"}, {"original_string": "private Duration d_duration1;", "modifier": "private", "type": "Duration", "declarator": "d_duration1", "var_name": "d_duration1"}], "file": "application/src/test/java/org/drugis/addis/entities/WhenTakenTest.java"}, "test_case": {"identifier": "testSetRelativeTo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSetRelativeTo() {\n\t\tJUnitUtil.testSetter(d_wt, WhenTaken.PROPERTY_RELATIVE_TO, RelativeTo.FROM_EPOCH_START, RelativeTo.BEFORE_EPOCH_END);\n\t}", "signature": "void testSetRelativeTo()", "full_signature": "@Test public void testSetRelativeTo()", "class_method_signature": "WhenTakenTest.testSetRelativeTo()", "testcase": true, "constructor": false, "invocations": ["testSetter"]}, "focal_class": {"identifier": "WhenTaken", "superclass": "extends AbstractEntity", "interfaces": "implements Entity, Comparable<WhenTaken>, TypeWithDuration", "fields": [{"original_string": "public static final String PROPERTY_EPOCH = \"epoch\";", "modifier": "public static final", "type": "String", "declarator": "PROPERTY_EPOCH = \"epoch\"", "var_name": "PROPERTY_EPOCH"}, {"original_string": "public static final String PROPERTY_RELATIVE_TO = \"relativeTo\";", "modifier": "public static final", "type": "String", "declarator": "PROPERTY_RELATIVE_TO = \"relativeTo\"", "var_name": "PROPERTY_RELATIVE_TO"}, {"original_string": "public static final String PROPERTY_OFFSET = \"offset\";", "modifier": "public static final", "type": "String", "declarator": "PROPERTY_OFFSET = \"offset\"", "var_name": "PROPERTY_OFFSET"}, {"original_string": "private Duration d_offset;", "modifier": "private", "type": "Duration", "declarator": "d_offset", "var_name": "d_offset"}, {"original_string": "private RelativeTo d_relativeTo;", "modifier": "private", "type": "RelativeTo", "declarator": "d_relativeTo", "var_name": "d_relativeTo"}, {"original_string": "private Epoch d_epoch;", "modifier": "private", "type": "Epoch", "declarator": "d_epoch", "var_name": "d_epoch"}, {"original_string": "private boolean d_committed = false;", "modifier": "private", "type": "boolean", "declarator": "d_committed = false", "var_name": "d_committed"}], "methods": [{"identifier": "WhenTaken", "parameters": "(Duration offset, RelativeTo relativeTo, Epoch epoch)", "modifiers": "public", "return": "", "signature": " WhenTaken(Duration offset, RelativeTo relativeTo, Epoch epoch)", "full_signature": "public  WhenTaken(Duration offset, RelativeTo relativeTo, Epoch epoch)", "class_method_signature": "WhenTaken.WhenTaken(Duration offset, RelativeTo relativeTo, Epoch epoch)", "testcase": false, "constructor": true}, {"identifier": "getOffset", "parameters": "()", "modifiers": "public", "return": "Duration", "signature": "Duration getOffset()", "full_signature": "public Duration getOffset()", "class_method_signature": "WhenTaken.getOffset()", "testcase": false, "constructor": false}, {"identifier": "setOffset", "parameters": "(Duration duration)", "modifiers": "public", "return": "void", "signature": "void setOffset(Duration duration)", "full_signature": "public void setOffset(Duration duration)", "class_method_signature": "WhenTaken.setOffset(Duration duration)", "testcase": false, "constructor": false}, {"identifier": "checkCommited", "parameters": "(String source)", "modifiers": "private", "return": "void", "signature": "void checkCommited(String source)", "full_signature": "private void checkCommited(String source)", "class_method_signature": "WhenTaken.checkCommited(String source)", "testcase": false, "constructor": false}, {"identifier": "getRelativeTo", "parameters": "()", "modifiers": "public", "return": "RelativeTo", "signature": "RelativeTo getRelativeTo()", "full_signature": "public RelativeTo getRelativeTo()", "class_method_signature": "WhenTaken.getRelativeTo()", "testcase": false, "constructor": false}, {"identifier": "setRelativeTo", "parameters": "(RelativeTo relativeTo)", "modifiers": "public", "return": "void", "signature": "void setRelativeTo(RelativeTo relativeTo)", "full_signature": "public void setRelativeTo(RelativeTo relativeTo)", "class_method_signature": "WhenTaken.setRelativeTo(RelativeTo relativeTo)", "testcase": false, "constructor": false}, {"identifier": "getEpoch", "parameters": "()", "modifiers": "public", "return": "Epoch", "signature": "Epoch getEpoch()", "full_signature": "public Epoch getEpoch()", "class_method_signature": "WhenTaken.getEpoch()", "testcase": false, "constructor": false}, {"identifier": "setEpoch", "parameters": "(Epoch epoch)", "modifiers": "public", "return": "void", "signature": "void setEpoch(Epoch epoch)", "full_signature": "public void setEpoch(Epoch epoch)", "class_method_signature": "WhenTaken.setEpoch(Epoch epoch)", "testcase": false, "constructor": false}, {"identifier": "getDuration", "parameters": "()", "modifiers": "public", "return": "Duration", "signature": "Duration getDuration()", "full_signature": "public Duration getDuration()", "class_method_signature": "WhenTaken.getDuration()", "testcase": false, "constructor": false}, {"identifier": "setDuration", "parameters": "(Duration duration)", "modifiers": "public", "return": "void", "signature": "void setDuration(Duration duration)", "full_signature": "public void setDuration(Duration duration)", "class_method_signature": "WhenTaken.setDuration(Duration duration)", "testcase": false, "constructor": false}, {"identifier": "getDependencies", "parameters": "()", "modifiers": "public", "return": "Set<? extends Entity>", "signature": "Set<? extends Entity> getDependencies()", "full_signature": "public Set<? extends Entity> getDependencies()", "class_method_signature": "WhenTaken.getDependencies()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "WhenTaken.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "WhenTaken.toString()", "testcase": false, "constructor": false}, {"identifier": "formatRelativeTo", "parameters": "(RelativeTo relativeTo)", "modifiers": "private", "return": "String", "signature": "String formatRelativeTo(RelativeTo relativeTo)", "full_signature": "private String formatRelativeTo(RelativeTo relativeTo)", "class_method_signature": "WhenTaken.formatRelativeTo(RelativeTo relativeTo)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(WhenTaken o)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(WhenTaken o)", "full_signature": "@Override public int compareTo(WhenTaken o)", "class_method_signature": "WhenTaken.compareTo(WhenTaken o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "WhenTaken.hashCode()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "WhenTaken", "signature": "WhenTaken clone()", "full_signature": "@Override public WhenTaken clone()", "class_method_signature": "WhenTaken.clone()", "testcase": false, "constructor": false}, {"identifier": "commit", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void commit()", "full_signature": "public void commit()", "class_method_signature": "WhenTaken.commit()", "testcase": false, "constructor": false}, {"identifier": "isCommitted", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCommitted()", "full_signature": "public boolean isCommitted()", "class_method_signature": "WhenTaken.isCommitted()", "testcase": false, "constructor": false}], "file": "application/src/main/java/org/drugis/addis/entities/WhenTaken.java"}, "focal_method": {"identifier": "setRelativeTo", "parameters": "(RelativeTo relativeTo)", "modifiers": "public", "return": "void", "body": "public void setRelativeTo(RelativeTo relativeTo) {\n\t\tcheckCommited(\"relativeTo\");\n\t\tRelativeTo oldValue = d_relativeTo;\n\t\td_relativeTo = relativeTo;\n\t\tfirePropertyChange(PROPERTY_RELATIVE_TO, oldValue, d_relativeTo);\n\t}", "signature": "void setRelativeTo(RelativeTo relativeTo)", "full_signature": "public void setRelativeTo(RelativeTo relativeTo)", "class_method_signature": "WhenTaken.setRelativeTo(RelativeTo relativeTo)", "testcase": false, "constructor": false, "invocations": ["checkCommited", "firePropertyChange"]}, "repository": {"repo_id": 213337, "url": "https://github.com/drugis/addis", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 10, "size": 13133, "license": "licensed"}}