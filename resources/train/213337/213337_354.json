{"test_class": {"identifier": "BasicRiskRatioTest", "superclass": "extends RelativeEffectTestBase", "interfaces": "", "fields": [{"original_string": "BasicMeasurement d_numerator;", "modifier": "", "type": "BasicMeasurement", "declarator": "d_numerator", "var_name": "d_numerator"}, {"original_string": "BasicMeasurement d_denominator;", "modifier": "", "type": "BasicMeasurement", "declarator": "d_denominator", "var_name": "d_denominator"}, {"original_string": "RelativeEffect<RateMeasurement> d_ratio;", "modifier": "", "type": "RelativeEffect<RateMeasurement>", "declarator": "d_ratio", "var_name": "d_ratio"}, {"original_string": "private RelativeEffect<?> d_ratioBennie;", "modifier": "private", "type": "RelativeEffect<?>", "declarator": "d_ratioBennie", "var_name": "d_ratioBennie"}, {"original_string": "private RelativeEffect<?> d_ratioBoyer;", "modifier": "private", "type": "RelativeEffect<?>", "declarator": "d_ratioBoyer", "var_name": "d_ratioBoyer"}, {"original_string": "private RelativeEffect<?> d_ratioFava;", "modifier": "private", "type": "RelativeEffect<?>", "declarator": "d_ratioFava", "var_name": "d_ratioFava"}, {"original_string": "private RelativeEffect<?> d_ratioNewhouse;", "modifier": "private", "type": "RelativeEffect<?>", "declarator": "d_ratioNewhouse", "var_name": "d_ratioNewhouse"}, {"original_string": "private RelativeEffect<?> d_ratioSechter;", "modifier": "private", "type": "RelativeEffect<?>", "declarator": "d_ratioSechter", "var_name": "d_ratioSechter"}], "file": "application/src/test/java/org/drugis/addis/entities/relativeeffect/BasicRiskRatioTest.java"}, "test_case": {"identifier": "testFullBaselineRateShouldBeDefined", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testFullBaselineRateShouldBeDefined() {\n\t\tRateMeasurement base = new BasicRateMeasurement(100, 100);\n\t\tRateMeasurement subj = new BasicRateMeasurement(50, 100);\n\t\tBasicRiskRatio or = new BasicRiskRatio(base, subj);\n\t\tassertTrue(or.isDefined());\n\t}", "signature": "void testFullBaselineRateShouldBeDefined()", "full_signature": "@Test public void testFullBaselineRateShouldBeDefined()", "class_method_signature": "BasicRiskRatioTest.testFullBaselineRateShouldBeDefined()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isDefined"]}, "focal_class": {"identifier": "BasicRiskRatio", "superclass": "extends BasicRatio", "interfaces": "", "fields": [], "methods": [{"identifier": "BasicRiskRatio", "parameters": "(RateMeasurement baseline, RateMeasurement subject)", "modifiers": "public", "return": "", "signature": " BasicRiskRatio(RateMeasurement baseline, RateMeasurement subject)", "full_signature": "public  BasicRiskRatio(RateMeasurement baseline, RateMeasurement subject)", "class_method_signature": "BasicRiskRatio.BasicRiskRatio(RateMeasurement baseline, RateMeasurement subject)", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BasicRiskRatio.toString()", "testcase": false, "constructor": false}, {"identifier": "getError", "parameters": "()", "modifiers": "@Override public", "return": "Double", "signature": "Double getError()", "full_signature": "@Override public Double getError()", "class_method_signature": "BasicRiskRatio.getError()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "BasicRiskRatio.getName()", "testcase": false, "constructor": false}, {"identifier": "isDefined", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDefined()", "full_signature": "@Override public boolean isDefined()", "class_method_signature": "BasicRiskRatio.isDefined()", "testcase": false, "constructor": false}, {"identifier": "getMu", "parameters": "()", "modifiers": "@Override protected", "return": "double", "signature": "double getMu()", "full_signature": "@Override protected double getMu()", "class_method_signature": "BasicRiskRatio.getMu()", "testcase": false, "constructor": false}, {"identifier": "getDegreesOfFreedom", "parameters": "()", "modifiers": "@Override protected", "return": "Integer", "signature": "Integer getDegreesOfFreedom()", "full_signature": "@Override protected Integer getDegreesOfFreedom()", "class_method_signature": "BasicRiskRatio.getDegreesOfFreedom()", "testcase": false, "constructor": false}, {"identifier": "getSigma", "parameters": "()", "modifiers": "@Override protected", "return": "double", "signature": "double getSigma()", "full_signature": "@Override protected double getSigma()", "class_method_signature": "BasicRiskRatio.getSigma()", "testcase": false, "constructor": false}, {"identifier": "getCorrected", "parameters": "()", "modifiers": "public", "return": "RelativeEffect<RateMeasurement>", "signature": "RelativeEffect<RateMeasurement> getCorrected()", "full_signature": "public RelativeEffect<RateMeasurement> getCorrected()", "class_method_signature": "BasicRiskRatio.getCorrected()", "testcase": false, "constructor": false}, {"identifier": "getA", "parameters": "()", "modifiers": "protected", "return": "double", "signature": "double getA()", "full_signature": "protected double getA()", "class_method_signature": "BasicRiskRatio.getA()", "testcase": false, "constructor": false}, {"identifier": "getB", "parameters": "()", "modifiers": "protected", "return": "double", "signature": "double getB()", "full_signature": "protected double getB()", "class_method_signature": "BasicRiskRatio.getB()", "testcase": false, "constructor": false}, {"identifier": "getC", "parameters": "()", "modifiers": "protected", "return": "double", "signature": "double getC()", "full_signature": "protected double getC()", "class_method_signature": "BasicRiskRatio.getC()", "testcase": false, "constructor": false}, {"identifier": "getD", "parameters": "()", "modifiers": "protected", "return": "double", "signature": "double getD()", "full_signature": "protected double getD()", "class_method_signature": "BasicRiskRatio.getD()", "testcase": false, "constructor": false}], "file": "application/src/main/java/org/drugis/addis/entities/relativeeffect/BasicRiskRatio.java"}, "focal_method": {"identifier": "isDefined", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean isDefined() {\n\t\treturn super.isDefined() && d_baseline.getRate() > 0 && d_subject.getRate() > 0;\n\t}", "signature": "boolean isDefined()", "full_signature": "@Override public boolean isDefined()", "class_method_signature": "BasicRiskRatio.isDefined()", "testcase": false, "constructor": false, "invocations": ["isDefined", "getRate", "getRate"]}, "repository": {"repo_id": 213337, "url": "https://github.com/drugis/addis", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 10, "size": 13133, "license": "licensed"}}