{"test_class": {"identifier": "FrequencyMeasurementTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PopulationCharacteristic d_cv;", "modifier": "private", "type": "PopulationCharacteristic", "declarator": "d_cv", "var_name": "d_cv"}, {"original_string": "private FrequencyMeasurement d_meas;", "modifier": "private", "type": "FrequencyMeasurement", "declarator": "d_meas", "var_name": "d_meas"}], "file": "application/src/test/java/org/drugis/addis/entities/FrequencyMeasurementTest.java"}, "test_case": {"identifier": "testGetCategories", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetCategories() {\n\t\tassertArrayEquals(((CategoricalVariableType) d_cv.getVariableType()).getCategories().toArray(), d_meas.getCategories());\n\t}", "signature": "void testGetCategories()", "full_signature": "@Test public void testGetCategories()", "class_method_signature": "FrequencyMeasurementTest.testGetCategories()", "testcase": true, "constructor": false, "invocations": ["assertArrayEquals", "toArray", "getCategories", "getVariableType", "getCategories"]}, "focal_class": {"identifier": "FrequencyMeasurement", "superclass": "extends BasicMeasurement", "interfaces": "", "fields": [{"original_string": "private Map<String, Integer> d_frequencies = new HashMap<String, Integer>();", "modifier": "private", "type": "Map<String, Integer>", "declarator": "d_frequencies = new HashMap<String, Integer>()", "var_name": "d_frequencies"}, {"original_string": "private List<String> d_categories = new ArrayList<String>();", "modifier": "private", "type": "List<String>", "declarator": "d_categories = new ArrayList<String>()", "var_name": "d_categories"}, {"original_string": "public static final String PROPERTY_FREQUENCIES = \"frequencies\";", "modifier": "public static final", "type": "String", "declarator": "PROPERTY_FREQUENCIES = \"frequencies\"", "var_name": "PROPERTY_FREQUENCIES"}], "methods": [{"identifier": "FrequencyMeasurement", "parameters": "()", "modifiers": "private", "return": "", "signature": " FrequencyMeasurement()", "full_signature": "private  FrequencyMeasurement()", "class_method_signature": "FrequencyMeasurement.FrequencyMeasurement()", "testcase": false, "constructor": true}, {"identifier": "FrequencyMeasurement", "parameters": "(PopulationCharacteristic cv)", "modifiers": "public", "return": "", "signature": " FrequencyMeasurement(PopulationCharacteristic cv)", "full_signature": "public  FrequencyMeasurement(PopulationCharacteristic cv)", "class_method_signature": "FrequencyMeasurement.FrequencyMeasurement(PopulationCharacteristic cv)", "testcase": false, "constructor": true}, {"identifier": "FrequencyMeasurement", "parameters": "(List<String> categories, Map<String, Integer> map)", "modifiers": "public", "return": "", "signature": " FrequencyMeasurement(List<String> categories, Map<String, Integer> map)", "full_signature": "public  FrequencyMeasurement(List<String> categories, Map<String, Integer> map)", "class_method_signature": "FrequencyMeasurement.FrequencyMeasurement(List<String> categories, Map<String, Integer> map)", "testcase": false, "constructor": true}, {"identifier": "updateSampleSize", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void updateSampleSize()", "full_signature": "private void updateSampleSize()", "class_method_signature": "FrequencyMeasurement.updateSampleSize()", "testcase": false, "constructor": false}, {"identifier": "setFrequency", "parameters": "(String category, Integer freq)", "modifiers": "public", "return": "void", "signature": "void setFrequency(String category, Integer freq)", "full_signature": "public void setFrequency(String category, Integer freq)", "class_method_signature": "FrequencyMeasurement.setFrequency(String category, Integer freq)", "testcase": false, "constructor": false}, {"identifier": "getFrequency", "parameters": "(String category)", "modifiers": "public", "return": "Integer", "signature": "Integer getFrequency(String category)", "full_signature": "public Integer getFrequency(String category)", "class_method_signature": "FrequencyMeasurement.getFrequency(String category)", "testcase": false, "constructor": false}, {"identifier": "checkCategory", "parameters": "(String category)", "modifiers": "private", "return": "void", "signature": "void checkCategory(String category)", "full_signature": "private void checkCategory(String category)", "class_method_signature": "FrequencyMeasurement.checkCategory(String category)", "testcase": false, "constructor": false}, {"identifier": "getCategories", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getCategories()", "full_signature": "public String[] getCategories()", "class_method_signature": "FrequencyMeasurement.getCategories()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(FrequencyMeasurement other)", "modifiers": "public", "return": "void", "signature": "void add(FrequencyMeasurement other)", "full_signature": "public void add(FrequencyMeasurement other)", "class_method_signature": "FrequencyMeasurement.add(FrequencyMeasurement other)", "testcase": false, "constructor": false}, {"identifier": "isOfType", "parameters": "(VariableType type)", "modifiers": "public", "return": "boolean", "signature": "boolean isOfType(VariableType type)", "full_signature": "public boolean isOfType(VariableType type)", "class_method_signature": "FrequencyMeasurement.isOfType(VariableType type)", "testcase": false, "constructor": false}, {"identifier": "getDependencies", "parameters": "()", "modifiers": "@Override public", "return": "Set<Entity>", "signature": "Set<Entity> getDependencies()", "full_signature": "@Override public Set<Entity> getDependencies()", "class_method_signature": "FrequencyMeasurement.getDependencies()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "FrequencyMeasurement.toString()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "FrequencyMeasurement", "signature": "FrequencyMeasurement clone()", "full_signature": "@Override public FrequencyMeasurement clone()", "class_method_signature": "FrequencyMeasurement.clone()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "FrequencyMeasurement.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "frequenciesEqual", "parameters": "(Map<String, Integer> frequencies,\n\t\t\tMap<String, Integer> frequencies2)", "modifiers": "private", "return": "boolean", "signature": "boolean frequenciesEqual(Map<String, Integer> frequencies,\n\t\t\tMap<String, Integer> frequencies2)", "full_signature": "private boolean frequenciesEqual(Map<String, Integer> frequencies,\n\t\t\tMap<String, Integer> frequencies2)", "class_method_signature": "FrequencyMeasurement.frequenciesEqual(Map<String, Integer> frequencies,\n\t\t\tMap<String, Integer> frequencies2)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "FrequencyMeasurement.hashCode()", "testcase": false, "constructor": false}, {"identifier": "getFrequencies", "parameters": "()", "modifiers": "", "return": "Map<String, Integer>", "signature": "Map<String, Integer> getFrequencies()", "full_signature": " Map<String, Integer> getFrequencies()", "class_method_signature": "FrequencyMeasurement.getFrequencies()", "testcase": false, "constructor": false}], "file": "application/src/main/java/org/drugis/addis/entities/FrequencyMeasurement.java"}, "focal_method": {"identifier": "getCategories", "parameters": "()", "modifiers": "public", "return": "String[]", "body": "public String[] getCategories() {\n\t\treturn d_categories.toArray(new String[]{});\n\t}", "signature": "String[] getCategories()", "full_signature": "public String[] getCategories()", "class_method_signature": "FrequencyMeasurement.getCategories()", "testcase": false, "constructor": false, "invocations": ["toArray"]}, "repository": {"repo_id": 213337, "url": "https://github.com/drugis/addis", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 10, "size": 13133, "license": "licensed"}}