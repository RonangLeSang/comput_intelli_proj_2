{"test_class": {"identifier": "StudyMeasurementTableModelTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Study d_standardStudy;", "modifier": "private", "type": "Study", "declarator": "d_standardStudy", "var_name": "d_standardStudy"}, {"original_string": "private PresentationModelFactory d_pmf;", "modifier": "private", "type": "PresentationModelFactory", "declarator": "d_pmf", "var_name": "d_pmf"}, {"original_string": "private StudyMeasurementTableModel d_model;", "modifier": "private", "type": "StudyMeasurementTableModel", "declarator": "d_model", "var_name": "d_model"}, {"original_string": "private PopulationCharTableModel d_popcharTablemodel;", "modifier": "private", "type": "PopulationCharTableModel", "declarator": "d_popcharTablemodel", "var_name": "d_popcharTablemodel"}, {"original_string": "private Study d_popcharStudy;", "modifier": "private", "type": "Study", "declarator": "d_popcharStudy", "var_name": "d_popcharStudy"}], "file": "application/src/test/java/org/drugis/addis/presentation/StudyMeasurementTableModelTest.java"}, "test_case": {"identifier": "testGetRowCount", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetRowCount() {\n\t\t// DeWilde has 2 measurement moments per endpoint\n\t\tassertEquals(d_standardStudy.getEndpoints().size() * 2, d_model.getRowCount());\n\t}", "signature": "void testGetRowCount()", "full_signature": "@Test public void testGetRowCount()", "class_method_signature": "StudyMeasurementTableModelTest.testGetRowCount()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "size", "getEndpoints", "getRowCount"]}, "focal_class": {"identifier": "StudyMeasurementTableModel", "superclass": "extends AbstractTableModel", "interfaces": "", "fields": [{"original_string": "protected Study d_study;", "modifier": "protected", "type": "Study", "declarator": "d_study", "var_name": "d_study"}, {"original_string": "private PresentationModelFactory d_pmf;", "modifier": "private", "type": "PresentationModelFactory", "declarator": "d_pmf", "var_name": "d_pmf"}, {"original_string": "private Class<? extends Variable> d_type;", "modifier": "private", "type": "Class<? extends Variable>", "declarator": "d_type", "var_name": "d_type"}, {"original_string": "protected MyMeasurementListener d_measurementListener = new MyMeasurementListener();", "modifier": "protected", "type": "MyMeasurementListener", "declarator": "d_measurementListener = new MyMeasurementListener()", "var_name": "d_measurementListener"}, {"original_string": "private Map<MeasurementKey, MissingMeasurementPresentation> d_mmpMap = new HashMap<MeasurementKey, MissingMeasurementPresentation>();", "modifier": "private", "type": "Map<MeasurementKey, MissingMeasurementPresentation>", "declarator": "d_mmpMap = new HashMap<MeasurementKey, MissingMeasurementPresentation>()", "var_name": "d_mmpMap"}, {"original_string": "private final boolean d_hasOverallColumn;", "modifier": "private final", "type": "boolean", "declarator": "d_hasOverallColumn", "var_name": "d_hasOverallColumn"}], "methods": [{"identifier": "StudyMeasurementTableModel", "parameters": "(Study study, PresentationModelFactory pmf, Class<? extends Variable> type, boolean hasOverallColumn)", "modifiers": "public", "return": "", "signature": " StudyMeasurementTableModel(Study study, PresentationModelFactory pmf, Class<? extends Variable> type, boolean hasOverallColumn)", "full_signature": "public  StudyMeasurementTableModel(Study study, PresentationModelFactory pmf, Class<? extends Variable> type, boolean hasOverallColumn)", "class_method_signature": "StudyMeasurementTableModel.StudyMeasurementTableModel(Study study, PresentationModelFactory pmf, Class<? extends Variable> type, boolean hasOverallColumn)", "testcase": false, "constructor": true}, {"identifier": "getColumnClass", "parameters": "(int columnIndex)", "modifiers": "@Override public", "return": "Class<?>", "signature": "Class<?> getColumnClass(int columnIndex)", "full_signature": "@Override public Class<?> getColumnClass(int columnIndex)", "class_method_signature": "StudyMeasurementTableModel.getColumnClass(int columnIndex)", "testcase": false, "constructor": false}, {"identifier": "initTable", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initTable()", "full_signature": "private void initTable()", "class_method_signature": "StudyMeasurementTableModel.initTable()", "testcase": false, "constructor": false}, {"identifier": "initVariables", "parameters": "(Arm a)", "modifiers": "private", "return": "void", "signature": "void initVariables(Arm a)", "full_signature": "private void initVariables(Arm a)", "class_method_signature": "StudyMeasurementTableModel.initVariables(Arm a)", "testcase": false, "constructor": false}, {"identifier": "getColumnCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getColumnCount()", "full_signature": "public int getColumnCount()", "class_method_signature": "StudyMeasurementTableModel.getColumnCount()", "testcase": false, "constructor": false}, {"identifier": "getRowCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRowCount()", "full_signature": "public int getRowCount()", "class_method_signature": "StudyMeasurementTableModel.getRowCount()", "testcase": false, "constructor": false}, {"identifier": "isCellEditable", "parameters": "(int row, int col)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isCellEditable(int row, int col)", "full_signature": "@Override public boolean isCellEditable(int row, int col)", "class_method_signature": "StudyMeasurementTableModel.isCellEditable(int row, int col)", "testcase": false, "constructor": false}, {"identifier": "getColumnName", "parameters": "(int col)", "modifiers": "@Override public", "return": "String", "signature": "String getColumnName(int col)", "full_signature": "@Override public String getColumnName(int col)", "class_method_signature": "StudyMeasurementTableModel.getColumnName(int col)", "testcase": false, "constructor": false}, {"identifier": "isOverallColumn", "parameters": "(int col)", "modifiers": "private", "return": "boolean", "signature": "boolean isOverallColumn(int col)", "full_signature": "private boolean isOverallColumn(int col)", "class_method_signature": "StudyMeasurementTableModel.isOverallColumn(int col)", "testcase": false, "constructor": false}, {"identifier": "isVariableColumn", "parameters": "(int col)", "modifiers": "private", "return": "boolean", "signature": "boolean isVariableColumn(int col)", "full_signature": "private boolean isVariableColumn(int col)", "class_method_signature": "StudyMeasurementTableModel.isVariableColumn(int col)", "testcase": false, "constructor": false}, {"identifier": "isMeasurementMomentColumn", "parameters": "(int col)", "modifiers": "private", "return": "boolean", "signature": "boolean isMeasurementMomentColumn(int col)", "full_signature": "private boolean isMeasurementMomentColumn(int col)", "class_method_signature": "StudyMeasurementTableModel.isMeasurementMomentColumn(int col)", "testcase": false, "constructor": false}, {"identifier": "getValueAt", "parameters": "(int rowIndex, int columnIndex)", "modifiers": "public", "return": "Object", "signature": "Object getValueAt(int rowIndex, int columnIndex)", "full_signature": "public Object getValueAt(int rowIndex, int columnIndex)", "class_method_signature": "StudyMeasurementTableModel.getValueAt(int rowIndex, int columnIndex)", "testcase": false, "constructor": false}, {"identifier": "getKeyAt", "parameters": "(int rowIndex, int columnIndex)", "modifiers": "private", "return": "Key", "signature": "Key getKeyAt(int rowIndex, int columnIndex)", "full_signature": "private Key getKeyAt(int rowIndex, int columnIndex)", "class_method_signature": "StudyMeasurementTableModel.getKeyAt(int rowIndex, int columnIndex)", "testcase": false, "constructor": false}, {"identifier": "isArmColumn", "parameters": "(int columnIndex)", "modifiers": "private", "return": "boolean", "signature": "boolean isArmColumn(int columnIndex)", "full_signature": "private boolean isArmColumn(int columnIndex)", "class_method_signature": "StudyMeasurementTableModel.isArmColumn(int columnIndex)", "testcase": false, "constructor": false}], "file": "application/src/main/java/org/drugis/addis/presentation/StudyMeasurementTableModel.java"}, "focal_method": {"identifier": "getRowCount", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int getRowCount() {\n\t\tint n = 0;\n\t\tfor (StudyOutcomeMeasure<? extends Variable> var : d_study.getStudyOutcomeMeasures(d_type)) {\n\t\t\tn += var.getWhenTaken().size();\n\t\t}\n\t\treturn n;\n\t}", "signature": "int getRowCount()", "full_signature": "public int getRowCount()", "class_method_signature": "StudyMeasurementTableModel.getRowCount()", "testcase": false, "constructor": false, "invocations": ["getStudyOutcomeMeasures", "size", "getWhenTaken"]}, "repository": {"repo_id": 213337, "url": "https://github.com/drugis/addis", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 10, "size": 13133, "license": "licensed"}}