{"test_class": {"identifier": "ClasspathTransporterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DefaultRepositorySystemSession session;", "modifier": "private", "type": "DefaultRepositorySystemSession", "declarator": "session", "var_name": "session"}, {"original_string": "private TransporterFactory factory;", "modifier": "private", "type": "TransporterFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "private Transporter transporter;", "modifier": "private", "type": "Transporter", "declarator": "transporter", "var_name": "transporter"}], "file": "aether-transport-classpath/src/test/java/org/eclipse/aether/transport/classpath/ClasspathTransporterTest.java"}, "test_case": {"identifier": "testPut", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPut()\n        throws Exception\n    {\n        try\n        {\n            transporter.put( new PutTask( URI.create( \"missing.txt\" ) ) );\n            fail( \"Expected error\" );\n        }\n        catch ( UnsupportedOperationException e )\n        {\n            assertEquals( Transporter.ERROR_OTHER, transporter.classify( e ) );\n        }\n    }", "signature": "void testPut()", "full_signature": "@Test public void testPut()", "class_method_signature": "ClasspathTransporterTest.testPut()", "testcase": true, "constructor": false, "invocations": ["put", "create", "fail", "assertEquals", "classify"]}, "focal_class": {"identifier": "ClasspathTransporter", "superclass": "extends AbstractTransporter", "interfaces": "", "fields": [{"original_string": "private final String resourceBase;", "modifier": "private final", "type": "String", "declarator": "resourceBase", "var_name": "resourceBase"}, {"original_string": "private final ClassLoader classLoader;", "modifier": "private final", "type": "ClassLoader", "declarator": "classLoader", "var_name": "classLoader"}], "methods": [{"identifier": "ClasspathTransporter", "parameters": "( RepositorySystemSession session, RemoteRepository repository, Logger logger )", "modifiers": "public", "return": "", "signature": " ClasspathTransporter( RepositorySystemSession session, RemoteRepository repository, Logger logger )", "full_signature": "public  ClasspathTransporter( RepositorySystemSession session, RemoteRepository repository, Logger logger )", "class_method_signature": "ClasspathTransporter.ClasspathTransporter( RepositorySystemSession session, RemoteRepository repository, Logger logger )", "testcase": false, "constructor": true}, {"identifier": "getResource", "parameters": "( TransportTask task )", "modifiers": "private", "return": "URL", "signature": "URL getResource( TransportTask task )", "full_signature": "private URL getResource( TransportTask task )", "class_method_signature": "ClasspathTransporter.getResource( TransportTask task )", "testcase": false, "constructor": false}, {"identifier": "classify", "parameters": "( Throwable error )", "modifiers": "public", "return": "int", "signature": "int classify( Throwable error )", "full_signature": "public int classify( Throwable error )", "class_method_signature": "ClasspathTransporter.classify( Throwable error )", "testcase": false, "constructor": false}, {"identifier": "implPeek", "parameters": "( PeekTask task )", "modifiers": "@Override protected", "return": "void", "signature": "void implPeek( PeekTask task )", "full_signature": "@Override protected void implPeek( PeekTask task )", "class_method_signature": "ClasspathTransporter.implPeek( PeekTask task )", "testcase": false, "constructor": false}, {"identifier": "implGet", "parameters": "( GetTask task )", "modifiers": "@Override protected", "return": "void", "signature": "void implGet( GetTask task )", "full_signature": "@Override protected void implGet( GetTask task )", "class_method_signature": "ClasspathTransporter.implGet( GetTask task )", "testcase": false, "constructor": false}, {"identifier": "implPut", "parameters": "( PutTask task )", "modifiers": "@Override protected", "return": "void", "signature": "void implPut( PutTask task )", "full_signature": "@Override protected void implPut( PutTask task )", "class_method_signature": "ClasspathTransporter.implPut( PutTask task )", "testcase": false, "constructor": false}, {"identifier": "implClose", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void implClose()", "full_signature": "@Override protected void implClose()", "class_method_signature": "ClasspathTransporter.implClose()", "testcase": false, "constructor": false}], "file": "aether-transport-classpath/src/main/java/org/eclipse/aether/transport/classpath/ClasspathTransporter.java"}, "focal_method": {"identifier": "classify", "parameters": "( Throwable error )", "modifiers": "public", "return": "int", "body": "public int classify( Throwable error )\n    {\n        if ( error instanceof ResourceNotFoundException )\n        {\n            return ERROR_NOT_FOUND;\n        }\n        return ERROR_OTHER;\n    }", "signature": "int classify( Throwable error )", "full_signature": "public int classify( Throwable error )", "class_method_signature": "ClasspathTransporter.classify( Throwable error )", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2666578, "url": "https://github.com/eclipse/aether-core", "language": "Java", "is_fork": false, "fork_count": 27, "stargazer_count": 55, "size": 3219, "license": "licensed"}}