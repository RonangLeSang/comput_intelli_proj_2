{"test_class": {"identifier": "ColorTest", "superclass": "", "interfaces": "", "fields": [], "file": "gameengine/src/test/java/de/mirkosertic/gameengine/type/ColorTest.java"}, "test_case": {"identifier": "testHashCode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHashCode() {\n        Color theColor1 = new Color(1,2,3);\n        Color theColor2 = new Color(1,2,4);\n        assertTrue(theColor1.hashCode() == theColor2.hashCode());\n        assertFalse(theColor1.hashCode() == Color.WHITE.hashCode());\n    }", "signature": "void testHashCode()", "full_signature": "@Test public void testHashCode()", "class_method_signature": "ColorTest.testHashCode()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "hashCode", "hashCode", "assertFalse", "hashCode", "hashCode"]}, "focal_class": {"identifier": "Color", "superclass": "", "interfaces": "implements Reflectable<ColorClassInformation>, Distributable", "fields": [{"original_string": "private static final ColorClassInformation CIINSTANCE = new ColorClassInformation();", "modifier": "private static final", "type": "ColorClassInformation", "declarator": "CIINSTANCE = new ColorClassInformation()", "var_name": "CIINSTANCE"}, {"original_string": "public static final Color WHITE = new Color(255, 255, 255);", "modifier": "public static final", "type": "Color", "declarator": "WHITE = new Color(255, 255, 255)", "var_name": "WHITE"}, {"original_string": "public static final Color BLACK = new Color(0, 0, 0);", "modifier": "public static final", "type": "Color", "declarator": "BLACK = new Color(0, 0, 0)", "var_name": "BLACK"}, {"original_string": "public static final Color RED = new Color(255, 0, 0);", "modifier": "public static final", "type": "Color", "declarator": "RED = new Color(255, 0, 0)", "var_name": "RED"}, {"original_string": "public static final Color YELLOW = new Color(255, 255, 0);", "modifier": "public static final", "type": "Color", "declarator": "YELLOW = new Color(255, 255, 0)", "var_name": "YELLOW"}, {"original_string": "@ReflectiveField\n    public final int r;", "modifier": "@ReflectiveField\n    public final", "type": "int", "declarator": "r", "var_name": "r"}, {"original_string": "@ReflectiveField\n    public final int g;", "modifier": "@ReflectiveField\n    public final", "type": "int", "declarator": "g", "var_name": "g"}, {"original_string": "@ReflectiveField\n    public final int b;", "modifier": "@ReflectiveField\n    public final", "type": "int", "declarator": "b", "var_name": "b"}], "methods": [{"identifier": "Color", "parameters": "(int aR, int aG, int aB)", "modifiers": "public", "return": "", "signature": " Color(int aR, int aG, int aB)", "full_signature": "public  Color(int aR, int aG, int aB)", "class_method_signature": "Color.Color(int aR, int aG, int aB)", "testcase": false, "constructor": true}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Color.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Color.hashCode()", "testcase": false, "constructor": false}, {"identifier": "getClassInformation", "parameters": "()", "modifiers": "@Override public", "return": "ColorClassInformation", "signature": "ColorClassInformation getClassInformation()", "full_signature": "@Override public ColorClassInformation getClassInformation()", "class_method_signature": "Color.getClassInformation()", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> serialize()", "full_signature": "@Override public Map<String, Object> serialize()", "class_method_signature": "Color.serialize()", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(Map<String, Object> aSerializedData)", "modifiers": "public static", "return": "Color", "signature": "Color deserialize(Map<String, Object> aSerializedData)", "full_signature": "public static Color deserialize(Map<String, Object> aSerializedData)", "class_method_signature": "Color.deserialize(Map<String, Object> aSerializedData)", "testcase": false, "constructor": false}], "file": "gameengine/src/main/java/de/mirkosertic/gameengine/type/Color.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int hashCode() {\n        return r;\n    }", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Color.hashCode()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 13907695, "url": "https://github.com/mirkosertic/GameComposer", "stars": 57, "created": "10/27/2013 6:24:00 PM +00:00", "updates": "2019-12-24T13:09:01+00:00", "fork": "False", "license": "licensed"}}