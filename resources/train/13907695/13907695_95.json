{"test_class": {"identifier": "PositionTest", "superclass": "", "interfaces": "", "fields": [], "file": "gameengine/src/test/java/de/mirkosertic/gameengine/type/PositionTest.java"}, "test_case": {"identifier": "testGetClassInformation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetClassInformation() throws Exception {\n        Position thePosition = new Position(10, 20);\n        assertTrue(thePosition.getClassInformation() instanceof PositionClassInformation);\n    }", "signature": "void testGetClassInformation()", "full_signature": "@Test public void testGetClassInformation()", "class_method_signature": "PositionTest.testGetClassInformation()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "getClassInformation"]}, "focal_class": {"identifier": "Position", "superclass": "", "interfaces": "implements Reflectable<PositionClassInformation>, Distributable", "fields": [{"original_string": "private static final PositionClassInformation CIINSTANCE = new PositionClassInformation();", "modifier": "private static final", "type": "PositionClassInformation", "declarator": "CIINSTANCE = new PositionClassInformation()", "var_name": "CIINSTANCE"}, {"original_string": "@ReflectiveField\n    public final float x;", "modifier": "@ReflectiveField\n    public final", "type": "float", "declarator": "x", "var_name": "x"}, {"original_string": "@ReflectiveField\n    public final float y;", "modifier": "@ReflectiveField\n    public final", "type": "float", "declarator": "y", "var_name": "y"}], "methods": [{"identifier": "Position", "parameters": "()", "modifiers": "public", "return": "", "signature": " Position()", "full_signature": "public  Position()", "class_method_signature": "Position.Position()", "testcase": false, "constructor": true}, {"identifier": "Position", "parameters": "(float aX, float aY)", "modifiers": "public", "return": "", "signature": " Position(float aX, float aY)", "full_signature": "public  Position(float aX, float aY)", "class_method_signature": "Position.Position(float aX, float aY)", "testcase": false, "constructor": true}, {"identifier": "Position", "parameters": "(double aX, double aY)", "modifiers": "public", "return": "", "signature": " Position(double aX, double aY)", "full_signature": "public  Position(double aX, double aY)", "class_method_signature": "Position.Position(double aX, double aY)", "testcase": false, "constructor": true}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Position.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Position.hashCode()", "testcase": false, "constructor": false}, {"identifier": "getClassInformation", "parameters": "()", "modifiers": "@Override public", "return": "PositionClassInformation", "signature": "PositionClassInformation getClassInformation()", "full_signature": "@Override public PositionClassInformation getClassInformation()", "class_method_signature": "Position.getClassInformation()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Position aOffset)", "modifiers": "@ReflectiveMethod public", "return": "Position", "signature": "Position add(Position aOffset)", "full_signature": "@ReflectiveMethod public Position add(Position aOffset)", "class_method_signature": "Position.add(Position aOffset)", "testcase": false, "constructor": false}, {"identifier": "changeX", "parameters": "(Float aNewX)", "modifiers": "@ReflectiveMethod public", "return": "Position", "signature": "Position changeX(Float aNewX)", "full_signature": "@ReflectiveMethod public Position changeX(Float aNewX)", "class_method_signature": "Position.changeX(Float aNewX)", "testcase": false, "constructor": false}, {"identifier": "changeY", "parameters": "(Float aNewY)", "modifiers": "@ReflectiveMethod public", "return": "Position", "signature": "Position changeY(Float aNewY)", "full_signature": "@ReflectiveMethod public Position changeY(Float aNewY)", "class_method_signature": "Position.changeY(Float aNewY)", "testcase": false, "constructor": false}, {"identifier": "snapToGrid", "parameters": "(int aGridWidth, int aGridHeight)", "modifiers": "@ReflectiveMethod public", "return": "Position", "signature": "Position snapToGrid(int aGridWidth, int aGridHeight)", "full_signature": "@ReflectiveMethod public Position snapToGrid(int aGridWidth, int aGridHeight)", "class_method_signature": "Position.snapToGrid(int aGridWidth, int aGridHeight)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> serialize()", "full_signature": "@Override public Map<String, Object> serialize()", "class_method_signature": "Position.serialize()", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(Map<String, Object> aSerializedStructure)", "modifiers": "public static", "return": "Position", "signature": "Position deserialize(Map<String, Object> aSerializedStructure)", "full_signature": "public static Position deserialize(Map<String, Object> aSerializedStructure)", "class_method_signature": "Position.deserialize(Map<String, Object> aSerializedStructure)", "testcase": false, "constructor": false}, {"identifier": "translate", "parameters": "(Angle aAngle, double aDistance)", "modifiers": "public", "return": "Position", "signature": "Position translate(Angle aAngle, double aDistance)", "full_signature": "public Position translate(Angle aAngle, double aDistance)", "class_method_signature": "Position.translate(Angle aAngle, double aDistance)", "testcase": false, "constructor": false}], "file": "gameengine/src/main/java/de/mirkosertic/gameengine/type/Position.java"}, "focal_method": {"identifier": "getClassInformation", "parameters": "()", "modifiers": "@Override public", "return": "PositionClassInformation", "body": "@Override\n    public PositionClassInformation getClassInformation() {\n        return CIINSTANCE;\n    }", "signature": "PositionClassInformation getClassInformation()", "full_signature": "@Override public PositionClassInformation getClassInformation()", "class_method_signature": "Position.getClassInformation()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 13907695, "url": "https://github.com/mirkosertic/GameComposer", "stars": 57, "created": "10/27/2013 6:24:00 PM +00:00", "updates": "2019-12-24T13:09:01+00:00", "fork": "False", "license": "licensed"}}