{"test_class": {"identifier": "SpeedTest", "superclass": "", "interfaces": "", "fields": [], "file": "gameengine/src/test/java/de/mirkosertic/gameengine/type/SpeedTest.java"}, "test_case": {"identifier": "testResetToZero", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testResetToZero() {\n        Speed theSpeed = new Speed(10);\n        Speed theOtherSpeed = theSpeed.resetToZero();\n        assertEquals(0l, theOtherSpeed.get(), 0);\n        assertNotSame(theSpeed, theOtherSpeed);\n    }", "signature": "void testResetToZero()", "full_signature": "@Test public void testResetToZero()", "class_method_signature": "SpeedTest.testResetToZero()", "testcase": true, "constructor": false, "invocations": ["resetToZero", "assertEquals", "get", "assertNotSame"]}, "focal_class": {"identifier": "Speed", "superclass": "", "interfaces": "implements Reflectable, Distributable", "fields": [{"original_string": "private static final SpeedClassInformation CIINSTANCE = new SpeedClassInformation();", "modifier": "private static final", "type": "SpeedClassInformation", "declarator": "CIINSTANCE = new SpeedClassInformation()", "var_name": "CIINSTANCE"}, {"original_string": "public final long speed;", "modifier": "public final", "type": "long", "declarator": "speed", "var_name": "speed"}], "methods": [{"identifier": "Speed", "parameters": "(long aSpeed)", "modifiers": "public", "return": "", "signature": " Speed(long aSpeed)", "full_signature": "public  Speed(long aSpeed)", "class_method_signature": "Speed.Speed(long aSpeed)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "()", "modifiers": "public", "return": "Long", "signature": "Long get()", "full_signature": "public Long get()", "class_method_signature": "Speed.get()", "testcase": false, "constructor": false}, {"identifier": "incrementBy", "parameters": "(int aAmount)", "modifiers": "@ReflectiveMethod public", "return": "Speed", "signature": "Speed incrementBy(int aAmount)", "full_signature": "@ReflectiveMethod public Speed incrementBy(int aAmount)", "class_method_signature": "Speed.incrementBy(int aAmount)", "testcase": false, "constructor": false}, {"identifier": "resetToZero", "parameters": "()", "modifiers": "@ReflectiveMethod public", "return": "Speed", "signature": "Speed resetToZero()", "full_signature": "@ReflectiveMethod public Speed resetToZero()", "class_method_signature": "Speed.resetToZero()", "testcase": false, "constructor": false}, {"identifier": "getClassInformation", "parameters": "()", "modifiers": "@Override public", "return": "SpeedClassInformation", "signature": "SpeedClassInformation getClassInformation()", "full_signature": "@Override public SpeedClassInformation getClassInformation()", "class_method_signature": "Speed.getClassInformation()", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> serialize()", "full_signature": "@Override public Map<String, Object> serialize()", "class_method_signature": "Speed.serialize()", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(Map<String, Object> aSerializedData)", "modifiers": "public static", "return": "Speed", "signature": "Speed deserialize(Map<String, Object> aSerializedData)", "full_signature": "public static Speed deserialize(Map<String, Object> aSerializedData)", "class_method_signature": "Speed.deserialize(Map<String, Object> aSerializedData)", "testcase": false, "constructor": false}], "file": "gameengine/src/main/java/de/mirkosertic/gameengine/type/Speed.java"}, "focal_method": {"identifier": "resetToZero", "parameters": "()", "modifiers": "@ReflectiveMethod public", "return": "Speed", "body": "@ReflectiveMethod\n    public Speed resetToZero() {\n        return new Speed(0);\n    }", "signature": "Speed resetToZero()", "full_signature": "@ReflectiveMethod public Speed resetToZero()", "class_method_signature": "Speed.resetToZero()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 13907695, "url": "https://github.com/mirkosertic/GameComposer", "stars": 57, "created": "10/27/2013 6:24:00 PM +00:00", "updates": "2019-12-24T13:09:01+00:00", "fork": "False", "license": "licensed"}}