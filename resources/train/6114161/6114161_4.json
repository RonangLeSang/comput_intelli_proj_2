{"test_class": {"identifier": "MathUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "im-log-stats-project/src/test/java/net/mikaboshi/intra_mart/tools/log_stats/util/MathUtilTest.java"}, "test_case": {"identifier": "test_getMedian_", "parameters": "", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test_getMedian_\u8981\u7d20\u65703() {\n\n\t\tList<Long> list = Arrays.asList(new Long[] { 10L, 12L, 14L });\n\n\t\tassertEquals(12L, MathUtil.getMedian(list, 0L));\n\t}", "signature": "void test_getMedian_", "full_signature": "@Test public void test_getMedian_", "class_method_signature": "MathUtilTest.test_getMedian_", "testcase": true, "constructor": false, "invocations": ["asList", "assertEquals", "getMedian"]}, "focal_class": {"identifier": "MathUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "MathUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " MathUtil()", "full_signature": "private  MathUtil()", "class_method_signature": "MathUtil.MathUtil()", "testcase": false, "constructor": true}, {"identifier": "getSum", "parameters": "(List<Long> longList)", "modifiers": "public static", "return": "long", "signature": "long getSum(List<Long> longList)", "full_signature": "public static long getSum(List<Long> longList)", "class_method_signature": "MathUtil.getSum(List<Long> longList)", "testcase": false, "constructor": false}, {"identifier": "getAverage", "parameters": "(List<Long> longList, long sum, long devByZero)", "modifiers": "public static", "return": "long", "signature": "long getAverage(List<Long> longList, long sum, long devByZero)", "full_signature": "public static long getAverage(List<Long> longList, long sum, long devByZero)", "class_method_signature": "MathUtil.getAverage(List<Long> longList, long sum, long devByZero)", "testcase": false, "constructor": false}, {"identifier": "getStandardDeviation", "parameters": "(List<Long> longList, long average, long devByZero)", "modifiers": "public static", "return": "long", "signature": "long getStandardDeviation(List<Long> longList, long average, long devByZero)", "full_signature": "public static long getStandardDeviation(List<Long> longList, long average, long devByZero)", "class_method_signature": "MathUtil.getStandardDeviation(List<Long> longList, long average, long devByZero)", "testcase": false, "constructor": false}, {"identifier": "getRate", "parameters": "(long numerator, long denominator, double devByZeroValue)", "modifiers": "public static", "return": "double", "signature": "double getRate(long numerator, long denominator, double devByZeroValue)", "full_signature": "public static double getRate(long numerator, long denominator, double devByZeroValue)", "class_method_signature": "MathUtil.getRate(long numerator, long denominator, double devByZeroValue)", "testcase": false, "constructor": false}, {"identifier": "getMedian", "parameters": "(List<Long> longList, long defaultValue)", "modifiers": "public static", "return": "long", "signature": "long getMedian(List<Long> longList, long defaultValue)", "full_signature": "public static long getMedian(List<Long> longList, long defaultValue)", "class_method_signature": "MathUtil.getMedian(List<Long> longList, long defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getPercentile", "parameters": "(List<Long> longList, int p, long defaultValue)", "modifiers": "public static", "return": "long", "signature": "long getPercentile(List<Long> longList, int p, long defaultValue)", "full_signature": "public static long getPercentile(List<Long> longList, int p, long defaultValue)", "class_method_signature": "MathUtil.getPercentile(List<Long> longList, int p, long defaultValue)", "testcase": false, "constructor": false}], "file": "im-log-stats-project/src/main/java/net/mikaboshi/intra_mart/tools/log_stats/util/MathUtil.java"}, "focal_method": {"identifier": "getMedian", "parameters": "(List<Long> longList, long defaultValue)", "modifiers": "public static", "return": "long", "body": "public static long getMedian(List<Long> longList, long defaultValue) {\n\n\t\tif (longList == null || longList.isEmpty()) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\tint size = longList.size();\n\n\t\tif (size % 2 == 0) {\n\n\t\t\tlong a = longList.get(size / 2 - 1);\n\t\t\tlong b = longList.get(size / 2);\n\n\t\t\treturn (a + b) / 2L;\n\n\t\t} else {\n\t\t\treturn longList.get((size - 1) / 2);\n\t\t}\n\t}", "signature": "long getMedian(List<Long> longList, long defaultValue)", "full_signature": "public static long getMedian(List<Long> longList, long defaultValue)", "class_method_signature": "MathUtil.getMedian(List<Long> longList, long defaultValue)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "size", "get", "get", "get"]}, "repository": {"repo_id": 6114161, "url": "https://github.com/cwan/im-log-stats", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 5837, "license": "licensed"}}