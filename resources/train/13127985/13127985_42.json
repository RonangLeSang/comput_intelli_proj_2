{"test_class": {"identifier": "AbstractArchiveTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String BASE_URL = \"http://example.org/files\";", "modifier": "private static final", "type": "String", "declarator": "BASE_URL = \"http://example.org/files\"", "var_name": "BASE_URL"}, {"original_string": "private static final String ARCHIVE_NAME = \"phantomjs-2.0.zip\";", "modifier": "private static final", "type": "String", "declarator": "ARCHIVE_NAME = \"phantomjs-2.0.zip\"", "var_name": "ARCHIVE_NAME"}, {"original_string": "private static final String FULL_URL = BASE_URL + '/' + ARCHIVE_NAME;", "modifier": "private static final", "type": "String", "declarator": "FULL_URL = BASE_URL + '/' + ARCHIVE_NAME", "var_name": "FULL_URL"}], "file": "phantomjs-maven-core/src/test/java/com/github/klieber/phantomjs/archive/AbstractArchiveTest.java"}, "test_case": {"identifier": "getUrlWithNoSlashAtEndOfBaseUrl", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getUrlWithNoSlashAtEndOfBaseUrl() {\n    AbstractArchive archive = new MockArchive(BASE_URL, ARCHIVE_NAME);\n    assertThat(archive.getUrl()).isEqualTo(FULL_URL);\n  }", "signature": "void getUrlWithNoSlashAtEndOfBaseUrl()", "full_signature": "@Test public void getUrlWithNoSlashAtEndOfBaseUrl()", "class_method_signature": "AbstractArchiveTest.getUrlWithNoSlashAtEndOfBaseUrl()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "getUrl"]}, "focal_class": {"identifier": "AbstractArchive", "superclass": "", "interfaces": "implements Archive", "fields": [], "methods": [{"identifier": "getBaseUrl", "parameters": "()", "modifiers": "protected abstract", "return": "String", "signature": "String getBaseUrl()", "full_signature": "protected abstract String getBaseUrl()", "class_method_signature": "AbstractArchive.getBaseUrl()", "testcase": false, "constructor": false}, {"identifier": "getUrl", "parameters": "()", "modifiers": "@Override public final", "return": "String", "signature": "String getUrl()", "full_signature": "@Override public final String getUrl()", "class_method_signature": "AbstractArchive.getUrl()", "testcase": false, "constructor": false}], "file": "phantomjs-maven-core/src/main/java/com/github/klieber/phantomjs/archive/AbstractArchive.java"}, "focal_method": {"identifier": "getUrl", "parameters": "()", "modifiers": "@Override public final", "return": "String", "body": "@Override\n  public final String getUrl() {\n    String baseUrl = this.getBaseUrl();\n    StringBuilder url = new StringBuilder();\n    url.append(baseUrl);\n    if (!baseUrl.endsWith(\"/\")) {\n      url.append('/');\n    }\n    url.append(this.getArchiveName());\n    return url.toString();\n  }", "signature": "String getUrl()", "full_signature": "@Override public final String getUrl()", "class_method_signature": "AbstractArchive.getUrl()", "testcase": false, "constructor": false, "invocations": ["getBaseUrl", "append", "endsWith", "append", "append", "getArchiveName", "toString"]}, "repository": {"repo_id": 13127985, "url": "https://github.com/klieber/phantomjs-maven-plugin", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 62, "size": 1863, "license": "licensed"}}