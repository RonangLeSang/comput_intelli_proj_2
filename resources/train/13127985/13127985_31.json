{"test_class": {"identifier": "CustomBaseUrlArchiveTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String BASE_URL = \"http://example.org/files\";", "modifier": "private static final", "type": "String", "declarator": "BASE_URL = \"http://example.org/files\"", "var_name": "BASE_URL"}, {"original_string": "private static final String ARCHIVE_NAME = \"archive-name\";", "modifier": "private static final", "type": "String", "declarator": "ARCHIVE_NAME = \"archive-name\"", "var_name": "ARCHIVE_NAME"}, {"original_string": "private static final String CLASSIFIER = \"classifier\";", "modifier": "private static final", "type": "String", "declarator": "CLASSIFIER = \"classifier\"", "var_name": "CLASSIFIER"}, {"original_string": "private static final String EXTENSION = \"ext\";", "modifier": "private static final", "type": "String", "declarator": "EXTENSION = \"ext\"", "var_name": "EXTENSION"}, {"original_string": "private static final String PATH_TO_EXECUTABLE = \"bin/phantomjs\";", "modifier": "private static final", "type": "String", "declarator": "PATH_TO_EXECUTABLE = \"bin/phantomjs\"", "var_name": "PATH_TO_EXECUTABLE"}, {"original_string": "private static final String VERSION = \"2.0.0\";", "modifier": "private static final", "type": "String", "declarator": "VERSION = \"2.0.0\"", "var_name": "VERSION"}, {"original_string": "@Mock\n  private Archive delegate;", "modifier": "@Mock\n  private", "type": "Archive", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private CustomBaseUrlArchive archive;", "modifier": "private", "type": "CustomBaseUrlArchive", "declarator": "archive", "var_name": "archive"}], "file": "phantomjs-maven-core/src/test/java/com/github/klieber/phantomjs/archive/CustomBaseUrlArchiveTest.java"}, "test_case": {"identifier": "testGetExtension", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetExtension() {\n    when(delegate.getExtension()).thenReturn(EXTENSION);\n    assertThat(archive.getExtension()).isEqualTo(EXTENSION);\n  }", "signature": "void testGetExtension()", "full_signature": "@Test public void testGetExtension()", "class_method_signature": "CustomBaseUrlArchiveTest.testGetExtension()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getExtension", "isEqualTo", "assertThat", "getExtension"]}, "focal_class": {"identifier": "CustomBaseUrlArchive", "superclass": "extends AbstractArchive", "interfaces": "", "fields": [{"original_string": "private final Archive delegate;", "modifier": "private final", "type": "Archive", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private final String baseUrl;", "modifier": "private final", "type": "String", "declarator": "baseUrl", "var_name": "baseUrl"}], "methods": [{"identifier": "CustomBaseUrlArchive", "parameters": "(Archive delegate, String baseUrl)", "modifiers": "public", "return": "", "signature": " CustomBaseUrlArchive(Archive delegate, String baseUrl)", "full_signature": "public  CustomBaseUrlArchive(Archive delegate, String baseUrl)", "class_method_signature": "CustomBaseUrlArchive.CustomBaseUrlArchive(Archive delegate, String baseUrl)", "testcase": false, "constructor": true}, {"identifier": "getBaseUrl", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getBaseUrl()", "full_signature": "@Override protected String getBaseUrl()", "class_method_signature": "CustomBaseUrlArchive.getBaseUrl()", "testcase": false, "constructor": false}, {"identifier": "getExtension", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getExtension()", "full_signature": "@Override public String getExtension()", "class_method_signature": "CustomBaseUrlArchive.getExtension()", "testcase": false, "constructor": false}, {"identifier": "getArchiveName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getArchiveName()", "full_signature": "@Override public String getArchiveName()", "class_method_signature": "CustomBaseUrlArchive.getArchiveName()", "testcase": false, "constructor": false}, {"identifier": "getPathToExecutable", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPathToExecutable()", "full_signature": "@Override public String getPathToExecutable()", "class_method_signature": "CustomBaseUrlArchive.getPathToExecutable()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getVersion()", "full_signature": "@Override public String getVersion()", "class_method_signature": "CustomBaseUrlArchive.getVersion()", "testcase": false, "constructor": false}, {"identifier": "getClassifier", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getClassifier()", "full_signature": "@Override public String getClassifier()", "class_method_signature": "CustomBaseUrlArchive.getClassifier()", "testcase": false, "constructor": false}], "file": "phantomjs-maven-core/src/main/java/com/github/klieber/phantomjs/archive/CustomBaseUrlArchive.java"}, "focal_method": {"identifier": "getExtension", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n  public String getExtension() {\n    return delegate.getExtension();\n  }", "signature": "String getExtension()", "full_signature": "@Override public String getExtension()", "class_method_signature": "CustomBaseUrlArchive.getExtension()", "testcase": false, "constructor": false, "invocations": ["getExtension"]}, "repository": {"repo_id": 13127985, "url": "https://github.com/klieber/phantomjs-maven-plugin", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 62, "size": 1863, "license": "licensed"}}