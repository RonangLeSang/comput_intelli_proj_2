{"test_class": {"identifier": "DummyParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "jADT-core/src/test/java/com/pogofish/jadt/parser/DummyParserTest.java"}, "test_case": {"identifier": "testWrongExtraSource", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWrongExtraSource() {\n        final ParseResult testResult = new ParseResult(new Doc(\"some source\", EMPTY_PKG, NO_IMPORTS,Collections.<DataType>emptyList()), Util.<SyntaxError>list());\n\n        final Parser parser = new DummyParser(testResult, \"some source\", \"some string\");\n        try {\n            final ParseResult result = parser.parse(new StringSource(\"some source\", \"some string\\nmore string\"));\n            fail(\"did not get exception, got \" + result);\n        } catch (RuntimeException e) {\n            // yay\n        }\n    }", "signature": "void testWrongExtraSource()", "full_signature": "@Test public void testWrongExtraSource()", "class_method_signature": "DummyParserTest.testWrongExtraSource()", "testcase": true, "constructor": false, "invocations": ["emptyList", "list", "parse", "fail"]}, "focal_class": {"identifier": "DummyParser", "superclass": "", "interfaces": "implements Parser", "fields": [{"original_string": "private final ParseResult testResult;", "modifier": "private final", "type": "ParseResult", "declarator": "testResult", "var_name": "testResult"}, {"original_string": "private final String testSrcInfo;", "modifier": "private final", "type": "String", "declarator": "testSrcInfo", "var_name": "testSrcInfo"}, {"original_string": "private final String testString;", "modifier": "private final", "type": "String", "declarator": "testString", "var_name": "testString"}], "methods": [{"identifier": "DummyParser", "parameters": "(ParseResult testResult, String testSrcInfo, String testString)", "modifiers": "public", "return": "", "signature": " DummyParser(ParseResult testResult, String testSrcInfo, String testString)", "full_signature": "public  DummyParser(ParseResult testResult, String testSrcInfo, String testString)", "class_method_signature": "DummyParser.DummyParser(ParseResult testResult, String testSrcInfo, String testString)", "testcase": false, "constructor": true}, {"identifier": "parse", "parameters": "(Source source)", "modifiers": "@Override public", "return": "ParseResult", "signature": "ParseResult parse(Source source)", "full_signature": "@Override public ParseResult parse(Source source)", "class_method_signature": "DummyParser.parse(Source source)", "testcase": false, "constructor": false}], "file": "jADT-core/src/main/java/com/pogofish/jadt/parser/DummyParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(Source source)", "modifiers": "@Override public", "return": "ParseResult", "body": "@Override\n    public ParseResult parse(Source source) {\n        if (!testSrcInfo.equals(source.getSrcInfo())) {\n            throw new RuntimeException(\"testSrcInfo and source.getSrcInfo were not equal. testSrcInfo = \" + testSrcInfo + \", source.getSrcInfo = \" + source.getSrcInfo());\n        }\n        try {\n            BufferedReader reader = source.createReader();\n            try {\n                if (!testString.equals(reader.readLine())) {\n                    throw new RuntimeException(\"testString and reader.readLine() were not equal\");\n                }\n                final String secondLine = reader.readLine();\n                if (secondLine != null) {\n                    throw new RuntimeException(\"got a second line '\" + secondLine + \"' from the reader\");\n                }\n            } finally {\n                reader.close();\n            }\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n        return testResult;\n    }", "signature": "ParseResult parse(Source source)", "full_signature": "@Override public ParseResult parse(Source source)", "class_method_signature": "DummyParser.parse(Source source)", "testcase": false, "constructor": false, "invocations": ["equals", "getSrcInfo", "getSrcInfo", "createReader", "equals", "readLine", "readLine", "close"]}, "repository": {"repo_id": 4389698, "url": "https://github.com/JamesIry/jADT", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 50, "size": 9055, "license": "licensed"}}