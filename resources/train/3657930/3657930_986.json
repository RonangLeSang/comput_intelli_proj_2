{"test_class": {"identifier": "PrivilegeInitializerTest", "superclass": "extends AbstractSecurityTest", "interfaces": "", "fields": [{"original_string": "private PrivilegeInitializer initializer;", "modifier": "private", "type": "PrivilegeInitializer", "declarator": "initializer", "var_name": "initializer"}], "file": "oak-core/src/test/java/org/apache/jackrabbit/oak/security/privilege/PrivilegeInitializerTest.java"}, "test_case": {"identifier": "testMissingJcrSystem", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n    public void testMissingJcrSystem() {\n        initializer.initialize(mock(NodeBuilder.class));\n    }", "signature": "void testMissingJcrSystem()", "full_signature": "@Test(expected = IllegalStateException.class) public void testMissingJcrSystem()", "class_method_signature": "PrivilegeInitializerTest.testMissingJcrSystem()", "testcase": true, "constructor": false, "invocations": ["initialize", "mock"]}, "focal_class": {"identifier": "PrivilegeInitializer", "superclass": "", "interfaces": "implements RepositoryInitializer, PrivilegeConstants", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(PrivilegeInitializer.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(PrivilegeInitializer.class)", "var_name": "log"}, {"original_string": "private final RootProvider rootProvider;", "modifier": "private final", "type": "RootProvider", "declarator": "rootProvider", "var_name": "rootProvider"}], "methods": [{"identifier": "PrivilegeInitializer", "parameters": "(@NotNull RootProvider rootProvider)", "modifiers": "", "return": "", "signature": " PrivilegeInitializer(@NotNull RootProvider rootProvider)", "full_signature": "  PrivilegeInitializer(@NotNull RootProvider rootProvider)", "class_method_signature": "PrivilegeInitializer.PrivilegeInitializer(@NotNull RootProvider rootProvider)", "testcase": false, "constructor": true}, {"identifier": "initialize", "parameters": "(@NotNull NodeBuilder builder)", "modifiers": "@Override public", "return": "void", "signature": "void initialize(@NotNull NodeBuilder builder)", "full_signature": "@Override public void initialize(@NotNull NodeBuilder builder)", "class_method_signature": "PrivilegeInitializer.initialize(@NotNull NodeBuilder builder)", "testcase": false, "constructor": false}], "file": "oak-core/src/main/java/org/apache/jackrabbit/oak/security/privilege/PrivilegeInitializer.java"}, "focal_method": {"identifier": "initialize", "parameters": "(@NotNull NodeBuilder builder)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void initialize(@NotNull NodeBuilder builder) {\n        if (!builder.hasChildNode(JcrConstants.JCR_SYSTEM)) {\n            throw new IllegalStateException(\"Missing \" + JcrConstants.JCR_SYSTEM + \" node, NodeStore not initialized.\");\n        }\n        NodeBuilder system = builder.getChildNode(JcrConstants.JCR_SYSTEM);\n        if (!system.hasChildNode(REP_PRIVILEGES)) {\n            NodeBuilder privileges = system.child(REP_PRIVILEGES);\n            privileges.setProperty(JcrConstants.JCR_PRIMARYTYPE, NT_REP_PRIVILEGES, Type.NAME);\n\n            // squeeze node state before it is passed to store (OAK-2411)\n            NodeState base = squeeze(builder.getNodeState());\n            NodeStore store = new MemoryNodeStore(base);\n            try {\n                Root systemRoot = rootProvider.createSystemRoot(store, null);\n                new PrivilegeDefinitionWriter(systemRoot).writeBuiltInDefinitions();\n            } catch (RepositoryException e) {\n                log.error(\"Failed to register built-in privileges\", e);\n                throw new RuntimeException(e);\n            }\n            NodeState target = store.getRoot();\n            target.compareAgainstBaseState(base, new ApplyDiff(builder));\n        }\n    }", "signature": "void initialize(@NotNull NodeBuilder builder)", "full_signature": "@Override public void initialize(@NotNull NodeBuilder builder)", "class_method_signature": "PrivilegeInitializer.initialize(@NotNull NodeBuilder builder)", "testcase": false, "constructor": false, "invocations": ["hasChildNode", "getChildNode", "hasChildNode", "child", "setProperty", "squeeze", "getNodeState", "createSystemRoot", "writeBuiltInDefinitions", "error", "getRoot", "compareAgainstBaseState"]}, "repository": {"repo_id": 3657930, "url": "https://github.com/apache/jackrabbit-oak", "stars": 291, "created": "3/8/2012 8:00:14 AM +00:00", "updates": "2020-01-27T10:53:13+00:00", "fork": "False", "license": "licensed"}}