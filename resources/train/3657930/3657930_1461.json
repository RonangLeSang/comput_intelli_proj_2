{"test_class": {"identifier": "PrincipalPermissionEntriesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final PermissionEntry permissionEntry = new PermissionEntry(\"/path\", true, 0, PrivilegeBits.BUILT_IN.get(PrivilegeBits.JCR_READ), RestrictionPattern.EMPTY);", "modifier": "private final", "type": "PermissionEntry", "declarator": "permissionEntry = new PermissionEntry(\"/path\", true, 0, PrivilegeBits.BUILT_IN.get(PrivilegeBits.JCR_READ), RestrictionPattern.EMPTY)", "var_name": "permissionEntry"}], "file": "oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/PrincipalPermissionEntriesTest.java"}, "test_case": {"identifier": "testPutEntriesByPath", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPutEntriesByPath() {\n        PrincipalPermissionEntries ppe = new PrincipalPermissionEntries(2);\n        ppe.putEntriesByPath(\"/path\", ImmutableSet.of(permissionEntry));\n\n        assertEquals(1, ppe.getEntries().size());\n        assertEquals(1, ppe.getSize());\n    }", "signature": "void testPutEntriesByPath()", "full_signature": "@Test public void testPutEntriesByPath()", "class_method_signature": "PrincipalPermissionEntriesTest.testPutEntriesByPath()", "testcase": true, "constructor": false, "invocations": ["putEntriesByPath", "of", "assertEquals", "size", "getEntries", "assertEquals", "getSize"]}, "focal_class": {"identifier": "PrincipalPermissionEntries", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static int MAX_SIZE = Integer.getInteger(\"oak.PrincipalPermissionEntries.maxSize\", 1000);", "modifier": "private static", "type": "int", "declarator": "MAX_SIZE = Integer.getInteger(\"oak.PrincipalPermissionEntries.maxSize\", 1000)", "var_name": "MAX_SIZE"}, {"original_string": "private final long expectedSize;", "modifier": "private final", "type": "long", "declarator": "expectedSize", "var_name": "expectedSize"}, {"original_string": "private boolean fullyLoaded;", "modifier": "private", "type": "boolean", "declarator": "fullyLoaded", "var_name": "fullyLoaded"}, {"original_string": "private Map<String, Collection<PermissionEntry>> entries = new HashMap<>();", "modifier": "private", "type": "Map<String, Collection<PermissionEntry>>", "declarator": "entries = new HashMap<>()", "var_name": "entries"}, {"original_string": "private final Map<String, Boolean> emptyPaths;", "modifier": "private final", "type": "Map<String, Boolean>", "declarator": "emptyPaths", "var_name": "emptyPaths"}], "methods": [{"identifier": "PrincipalPermissionEntries", "parameters": "()", "modifiers": "", "return": "", "signature": " PrincipalPermissionEntries()", "full_signature": "  PrincipalPermissionEntries()", "class_method_signature": "PrincipalPermissionEntries.PrincipalPermissionEntries()", "testcase": false, "constructor": true}, {"identifier": "PrincipalPermissionEntries", "parameters": "(long expectedSize)", "modifiers": "", "return": "", "signature": " PrincipalPermissionEntries(long expectedSize)", "full_signature": "  PrincipalPermissionEntries(long expectedSize)", "class_method_signature": "PrincipalPermissionEntries.PrincipalPermissionEntries(long expectedSize)", "testcase": false, "constructor": true}, {"identifier": "getSize", "parameters": "()", "modifiers": "", "return": "long", "signature": "long getSize()", "full_signature": " long getSize()", "class_method_signature": "PrincipalPermissionEntries.getSize()", "testcase": false, "constructor": false}, {"identifier": "isFullyLoaded", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isFullyLoaded()", "full_signature": " boolean isFullyLoaded()", "class_method_signature": "PrincipalPermissionEntries.isFullyLoaded()", "testcase": false, "constructor": false}, {"identifier": "setFullyLoaded", "parameters": "(boolean fullyLoaded)", "modifiers": "", "return": "void", "signature": "void setFullyLoaded(boolean fullyLoaded)", "full_signature": " void setFullyLoaded(boolean fullyLoaded)", "class_method_signature": "PrincipalPermissionEntries.setFullyLoaded(boolean fullyLoaded)", "testcase": false, "constructor": false}, {"identifier": "getEntries", "parameters": "()", "modifiers": "@NotNull", "return": "Map<String, Collection<PermissionEntry>>", "signature": "Map<String, Collection<PermissionEntry>> getEntries()", "full_signature": "@NotNull Map<String, Collection<PermissionEntry>> getEntries()", "class_method_signature": "PrincipalPermissionEntries.getEntries()", "testcase": false, "constructor": false}, {"identifier": "getEntriesByPath", "parameters": "(@NotNull String path)", "modifiers": "@Nullable", "return": "Collection<PermissionEntry>", "signature": "Collection<PermissionEntry> getEntriesByPath(@NotNull String path)", "full_signature": "@Nullable Collection<PermissionEntry> getEntriesByPath(@NotNull String path)", "class_method_signature": "PrincipalPermissionEntries.getEntriesByPath(@NotNull String path)", "testcase": false, "constructor": false}, {"identifier": "putEntriesByPath", "parameters": "(@NotNull String path, @NotNull Collection<PermissionEntry> pathEntries)", "modifiers": "", "return": "void", "signature": "void putEntriesByPath(@NotNull String path, @NotNull Collection<PermissionEntry> pathEntries)", "full_signature": " void putEntriesByPath(@NotNull String path, @NotNull Collection<PermissionEntry> pathEntries)", "class_method_signature": "PrincipalPermissionEntries.putEntriesByPath(@NotNull String path, @NotNull Collection<PermissionEntry> pathEntries)", "testcase": false, "constructor": false}, {"identifier": "rememberNotAccessControlled", "parameters": "(@NotNull String path)", "modifiers": "", "return": "void", "signature": "void rememberNotAccessControlled(@NotNull String path)", "full_signature": " void rememberNotAccessControlled(@NotNull String path)", "class_method_signature": "PrincipalPermissionEntries.rememberNotAccessControlled(@NotNull String path)", "testcase": false, "constructor": false}, {"identifier": "putAllEntries", "parameters": "(@NotNull Map<String, Collection<PermissionEntry>> allEntries)", "modifiers": "", "return": "void", "signature": "void putAllEntries(@NotNull Map<String, Collection<PermissionEntry>> allEntries)", "full_signature": " void putAllEntries(@NotNull Map<String, Collection<PermissionEntry>> allEntries)", "class_method_signature": "PrincipalPermissionEntries.putAllEntries(@NotNull Map<String, Collection<PermissionEntry>> allEntries)", "testcase": false, "constructor": false}], "file": "oak-core/src/main/java/org/apache/jackrabbit/oak/security/authorization/permission/PrincipalPermissionEntries.java"}, "focal_method": {"identifier": "putEntriesByPath", "parameters": "(@NotNull String path, @NotNull Collection<PermissionEntry> pathEntries)", "modifiers": "", "return": "void", "body": "void putEntriesByPath(@NotNull String path, @NotNull Collection<PermissionEntry> pathEntries) {\n        entries.put(path, pathEntries);\n        if (entries.size() >= expectedSize) {\n            setFullyLoaded(true);\n        }\n    }", "signature": "void putEntriesByPath(@NotNull String path, @NotNull Collection<PermissionEntry> pathEntries)", "full_signature": " void putEntriesByPath(@NotNull String path, @NotNull Collection<PermissionEntry> pathEntries)", "class_method_signature": "PrincipalPermissionEntries.putEntriesByPath(@NotNull String path, @NotNull Collection<PermissionEntry> pathEntries)", "testcase": false, "constructor": false, "invocations": ["put", "size", "setFullyLoaded"]}, "repository": {"repo_id": 3657930, "url": "https://github.com/apache/jackrabbit-oak", "stars": 291, "created": "3/8/2012 8:00:14 AM +00:00", "updates": "2020-01-27T10:53:13+00:00", "fork": "False", "license": "licensed"}}