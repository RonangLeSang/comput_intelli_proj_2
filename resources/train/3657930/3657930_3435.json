{"test_class": {"identifier": "CommunicationObserverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TestCommunicationObserver observer;", "modifier": "private", "type": "TestCommunicationObserver", "declarator": "observer", "var_name": "observer"}], "file": "oak-segment-tar/src/test/java/org/apache/jackrabbit/oak/segment/standby/store/CommunicationObserverTest.java"}, "test_case": {"identifier": "shouldRegisterObservablePartnerMBean", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldRegisterObservablePartnerMBean() throws Exception {\n        observer.gotMessageFrom(\"client\", \"request\", \"127.0.0.1\", 8080);\n        assertEquals(1, observer.communicationPartners.size());\n    }", "signature": "void shouldRegisterObservablePartnerMBean()", "full_signature": "@Test public void shouldRegisterObservablePartnerMBean()", "class_method_signature": "CommunicationObserverTest.shouldRegisterObservablePartnerMBean()", "testcase": true, "constructor": false, "invocations": ["gotMessageFrom", "assertEquals", "size"]}, "focal_class": {"identifier": "CommunicationObserver", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int DEFAULT_MAX_CLIENT_MBEANS = 10;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_MAX_CLIENT_MBEANS = 10", "var_name": "DEFAULT_MAX_CLIENT_MBEANS"}, {"original_string": "private static final Logger log = LoggerFactory.getLogger(CommunicationObserver.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(CommunicationObserver.class)", "var_name": "log"}, {"original_string": "private final Map<String, CommunicationPartnerMBean> beans = new HashMap<>();", "modifier": "private final", "type": "Map<String, CommunicationPartnerMBean>", "declarator": "beans = new HashMap<>()", "var_name": "beans"}, {"original_string": "private final int maxClientMBeans;", "modifier": "private final", "type": "int", "declarator": "maxClientMBeans", "var_name": "maxClientMBeans"}, {"original_string": "private final String id;", "modifier": "private final", "type": "String", "declarator": "id", "var_name": "id"}], "methods": [{"identifier": "getMBeanName", "parameters": "(CommunicationPartnerMBean bean)", "modifiers": "private static", "return": "ObjectName", "signature": "ObjectName getMBeanName(CommunicationPartnerMBean bean)", "full_signature": "private static ObjectName getMBeanName(CommunicationPartnerMBean bean)", "class_method_signature": "CommunicationObserver.getMBeanName(CommunicationPartnerMBean bean)", "testcase": false, "constructor": false}, {"identifier": "oldest", "parameters": "(Map<String, CommunicationPartnerMBean> beans)", "modifiers": "private static", "return": "String", "signature": "String oldest(Map<String, CommunicationPartnerMBean> beans)", "full_signature": "private static String oldest(Map<String, CommunicationPartnerMBean> beans)", "class_method_signature": "CommunicationObserver.oldest(Map<String, CommunicationPartnerMBean> beans)", "testcase": false, "constructor": false}, {"identifier": "CommunicationObserver", "parameters": "(String id)", "modifiers": "public", "return": "", "signature": " CommunicationObserver(String id)", "full_signature": "public  CommunicationObserver(String id)", "class_method_signature": "CommunicationObserver.CommunicationObserver(String id)", "testcase": false, "constructor": true}, {"identifier": "CommunicationObserver", "parameters": "(String id, int maxClientMBeans)", "modifiers": "", "return": "", "signature": " CommunicationObserver(String id, int maxClientMBeans)", "full_signature": "  CommunicationObserver(String id, int maxClientMBeans)", "class_method_signature": "CommunicationObserver.CommunicationObserver(String id, int maxClientMBeans)", "testcase": false, "constructor": true}, {"identifier": "registerCommunicationPartner", "parameters": "(CommunicationPartnerMBean m)", "modifiers": "", "return": "void", "signature": "void registerCommunicationPartner(CommunicationPartnerMBean m)", "full_signature": " void registerCommunicationPartner(CommunicationPartnerMBean m)", "class_method_signature": "CommunicationObserver.registerCommunicationPartner(CommunicationPartnerMBean m)", "testcase": false, "constructor": false}, {"identifier": "safeRegisterCommunicationPartner", "parameters": "(CommunicationPartnerMBean m)", "modifiers": "private", "return": "void", "signature": "void safeRegisterCommunicationPartner(CommunicationPartnerMBean m)", "full_signature": "private void safeRegisterCommunicationPartner(CommunicationPartnerMBean m)", "class_method_signature": "CommunicationObserver.safeRegisterCommunicationPartner(CommunicationPartnerMBean m)", "testcase": false, "constructor": false}, {"identifier": "unregisterCommunicationPartner", "parameters": "(CommunicationPartnerMBean m)", "modifiers": "", "return": "void", "signature": "void unregisterCommunicationPartner(CommunicationPartnerMBean m)", "full_signature": " void unregisterCommunicationPartner(CommunicationPartnerMBean m)", "class_method_signature": "CommunicationObserver.unregisterCommunicationPartner(CommunicationPartnerMBean m)", "testcase": false, "constructor": false}, {"identifier": "safeUnregisterCommunicationPartner", "parameters": "(CommunicationPartnerMBean m)", "modifiers": "private", "return": "void", "signature": "void safeUnregisterCommunicationPartner(CommunicationPartnerMBean m)", "full_signature": "private void safeUnregisterCommunicationPartner(CommunicationPartnerMBean m)", "class_method_signature": "CommunicationObserver.safeUnregisterCommunicationPartner(CommunicationPartnerMBean m)", "testcase": false, "constructor": false}, {"identifier": "unregister", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void unregister()", "full_signature": "public void unregister()", "class_method_signature": "CommunicationObserver.unregister()", "testcase": false, "constructor": false}, {"identifier": "gotMessageFrom", "parameters": "(String client, String request, String address, int port)", "modifiers": "public", "return": "void", "signature": "void gotMessageFrom(String client, String request, String address, int port)", "full_signature": "public void gotMessageFrom(String client, String request, String address, int port)", "class_method_signature": "CommunicationObserver.gotMessageFrom(String client, String request, String address, int port)", "testcase": false, "constructor": false}, {"identifier": "didSendSegmentBytes", "parameters": "(String client, int size)", "modifiers": "public", "return": "void", "signature": "void didSendSegmentBytes(String client, int size)", "full_signature": "public void didSendSegmentBytes(String client, int size)", "class_method_signature": "CommunicationObserver.didSendSegmentBytes(String client, int size)", "testcase": false, "constructor": false}, {"identifier": "didSendBinariesBytes", "parameters": "(String client, long size)", "modifiers": "public", "return": "void", "signature": "void didSendBinariesBytes(String client, long size)", "full_signature": "public void didSendBinariesBytes(String client, long size)", "class_method_signature": "CommunicationObserver.didSendBinariesBytes(String client, long size)", "testcase": false, "constructor": false}, {"identifier": "getID", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getID()", "full_signature": "public String getID()", "class_method_signature": "CommunicationObserver.getID()", "testcase": false, "constructor": false}, {"identifier": "createOrUpdateClientMBean", "parameters": "(String clientName, String remoteAddress, int remotePort, Consumer<CommunicationPartnerMBean> update)", "modifiers": "private", "return": "void", "signature": "void createOrUpdateClientMBean(String clientName, String remoteAddress, int remotePort, Consumer<CommunicationPartnerMBean> update)", "full_signature": "private void createOrUpdateClientMBean(String clientName, String remoteAddress, int remotePort, Consumer<CommunicationPartnerMBean> update)", "class_method_signature": "CommunicationObserver.createOrUpdateClientMBean(String clientName, String remoteAddress, int remotePort, Consumer<CommunicationPartnerMBean> update)", "testcase": false, "constructor": false}, {"identifier": "updateClientMBean", "parameters": "(String id, Consumer<CommunicationPartnerMBean> update)", "modifiers": "private", "return": "void", "signature": "void updateClientMBean(String id, Consumer<CommunicationPartnerMBean> update)", "full_signature": "private void updateClientMBean(String id, Consumer<CommunicationPartnerMBean> update)", "class_method_signature": "CommunicationObserver.updateClientMBean(String id, Consumer<CommunicationPartnerMBean> update)", "testcase": false, "constructor": false}], "file": "oak-segment-tar/src/main/java/org/apache/jackrabbit/oak/segment/standby/store/CommunicationObserver.java"}, "focal_method": {"identifier": "gotMessageFrom", "parameters": "(String client, String request, String address, int port)", "modifiers": "public", "return": "void", "body": "public void gotMessageFrom(String client, String request, String address, int port) throws MalformedObjectNameException {\n        log.debug(\"Message '{}' received from client {}\", request, client);\n        createOrUpdateClientMBean(client, address, port, m -> m.onMessageReceived(new Date(), request));\n    }", "signature": "void gotMessageFrom(String client, String request, String address, int port)", "full_signature": "public void gotMessageFrom(String client, String request, String address, int port)", "class_method_signature": "CommunicationObserver.gotMessageFrom(String client, String request, String address, int port)", "testcase": false, "constructor": false, "invocations": ["debug", "createOrUpdateClientMBean", "onMessageReceived"]}, "repository": {"repo_id": 3657930, "url": "https://github.com/apache/jackrabbit-oak", "stars": 291, "created": "3/8/2012 8:00:14 AM +00:00", "updates": "2020-01-27T10:53:13+00:00", "fork": "False", "license": "licensed"}}