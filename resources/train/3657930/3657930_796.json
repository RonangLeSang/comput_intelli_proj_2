{"test_class": {"identifier": "UserManagerImplTest", "superclass": "extends AbstractSecurityTest", "interfaces": "", "fields": [{"original_string": "private UserManagerImpl userMgr;", "modifier": "private", "type": "UserManagerImpl", "declarator": "userMgr", "var_name": "userMgr"}, {"original_string": "private String testUserId = \"testUser\";", "modifier": "private", "type": "String", "declarator": "testUserId = \"testUser\"", "var_name": "testUserId"}], "file": "oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/UserManagerImplTest.java"}, "test_case": {"identifier": "testAuthorizableByUnresolvablePath", "parameters": "()", "modifiers": "@Test(expected = RepositoryException.class) public", "return": "void", "body": "@Test(expected = RepositoryException.class)\n    public void testAuthorizableByUnresolvablePath() throws Exception {\n        NamePathMapper mapper = new NamePathMapperImpl(new LocalNameMapper(root, ImmutableMap.of(\"a\",\"internal\")));\n        UserManagerImpl um = new UserManagerImpl(root, new PartialValueFactory(mapper), getSecurityProvider());\n        um.getAuthorizableByPath(getTestUser().getPath());\n    }", "signature": "void testAuthorizableByUnresolvablePath()", "full_signature": "@Test(expected = RepositoryException.class) public void testAuthorizableByUnresolvablePath()", "class_method_signature": "UserManagerImplTest.testAuthorizableByUnresolvablePath()", "testcase": true, "constructor": false, "invocations": ["of", "getSecurityProvider", "getAuthorizableByPath", "getPath", "getTestUser"]}, "focal_class": {"identifier": "UserManagerImpl", "superclass": "", "interfaces": "implements UserManager", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(UserManagerImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(UserManagerImpl.class)", "var_name": "log"}, {"original_string": "private final Root root;", "modifier": "private final", "type": "Root", "declarator": "root", "var_name": "root"}, {"original_string": "private final PartialValueFactory valueFactory;", "modifier": "private final", "type": "PartialValueFactory", "declarator": "valueFactory", "var_name": "valueFactory"}, {"original_string": "private final NamePathMapper namePathMapper;", "modifier": "private final", "type": "NamePathMapper", "declarator": "namePathMapper", "var_name": "namePathMapper"}, {"original_string": "private final SecurityProvider securityProvider;", "modifier": "private final", "type": "SecurityProvider", "declarator": "securityProvider", "var_name": "securityProvider"}, {"original_string": "private final UserProvider userProvider;", "modifier": "private final", "type": "UserProvider", "declarator": "userProvider", "var_name": "userProvider"}, {"original_string": "private final MembershipProvider membershipProvider;", "modifier": "private final", "type": "MembershipProvider", "declarator": "membershipProvider", "var_name": "membershipProvider"}, {"original_string": "private final ConfigurationParameters config;", "modifier": "private final", "type": "ConfigurationParameters", "declarator": "config", "var_name": "config"}, {"original_string": "private final AuthorizableActionProvider actionProvider;", "modifier": "private final", "type": "AuthorizableActionProvider", "declarator": "actionProvider", "var_name": "actionProvider"}, {"original_string": "private UserQueryManager queryManager;", "modifier": "private", "type": "UserQueryManager", "declarator": "queryManager", "var_name": "queryManager"}, {"original_string": "private ReadOnlyNodeTypeManager ntMgr;", "modifier": "private", "type": "ReadOnlyNodeTypeManager", "declarator": "ntMgr", "var_name": "ntMgr"}], "methods": [{"identifier": "UserManagerImpl", "parameters": "(@NotNull Root root,\n                           @NotNull PartialValueFactory valueFactory,\n                           @NotNull SecurityProvider securityProvider)", "modifiers": "public", "return": "", "signature": " UserManagerImpl(@NotNull Root root,\n                           @NotNull PartialValueFactory valueFactory,\n                           @NotNull SecurityProvider securityProvider)", "full_signature": "public  UserManagerImpl(@NotNull Root root,\n                           @NotNull PartialValueFactory valueFactory,\n                           @NotNull SecurityProvider securityProvider)", "class_method_signature": "UserManagerImpl.UserManagerImpl(@NotNull Root root,\n                           @NotNull PartialValueFactory valueFactory,\n                           @NotNull SecurityProvider securityProvider)", "testcase": false, "constructor": true}, {"identifier": "getActionProvider", "parameters": "(@NotNull ConfigurationParameters config)", "modifiers": "@NotNull private static", "return": "AuthorizableActionProvider", "signature": "AuthorizableActionProvider getActionProvider(@NotNull ConfigurationParameters config)", "full_signature": "@NotNull private static AuthorizableActionProvider getActionProvider(@NotNull ConfigurationParameters config)", "class_method_signature": "UserManagerImpl.getActionProvider(@NotNull ConfigurationParameters config)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizable", "parameters": "(@NotNull String id)", "modifiers": "@Nullable @Override public", "return": "Authorizable", "signature": "Authorizable getAuthorizable(@NotNull String id)", "full_signature": "@Nullable @Override public Authorizable getAuthorizable(@NotNull String id)", "class_method_signature": "UserManagerImpl.getAuthorizable(@NotNull String id)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizable", "parameters": "(@NotNull String id, @NotNull Class<T> authorizableClass)", "modifiers": "@Nullable @Override public", "return": "T", "signature": "T getAuthorizable(@NotNull String id, @NotNull Class<T> authorizableClass)", "full_signature": "@Nullable @Override public T getAuthorizable(@NotNull String id, @NotNull Class<T> authorizableClass)", "class_method_signature": "UserManagerImpl.getAuthorizable(@NotNull String id, @NotNull Class<T> authorizableClass)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizable", "parameters": "(@NotNull Principal principal)", "modifiers": "@Nullable @Override public", "return": "Authorizable", "signature": "Authorizable getAuthorizable(@NotNull Principal principal)", "full_signature": "@Nullable @Override public Authorizable getAuthorizable(@NotNull Principal principal)", "class_method_signature": "UserManagerImpl.getAuthorizable(@NotNull Principal principal)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizableByPath", "parameters": "(@NotNull String path)", "modifiers": "@Nullable @Override public", "return": "Authorizable", "signature": "Authorizable getAuthorizableByPath(@NotNull String path)", "full_signature": "@Nullable @Override public Authorizable getAuthorizableByPath(@NotNull String path)", "class_method_signature": "UserManagerImpl.getAuthorizableByPath(@NotNull String path)", "testcase": false, "constructor": false}, {"identifier": "findAuthorizables", "parameters": "(@NotNull String relPath, @Nullable String value)", "modifiers": "@NotNull @Override public", "return": "Iterator<Authorizable>", "signature": "Iterator<Authorizable> findAuthorizables(@NotNull String relPath, @Nullable String value)", "full_signature": "@NotNull @Override public Iterator<Authorizable> findAuthorizables(@NotNull String relPath, @Nullable String value)", "class_method_signature": "UserManagerImpl.findAuthorizables(@NotNull String relPath, @Nullable String value)", "testcase": false, "constructor": false}, {"identifier": "findAuthorizables", "parameters": "(@NotNull String relPath, @Nullable String value, int searchType)", "modifiers": "@NotNull @Override public", "return": "Iterator<Authorizable>", "signature": "Iterator<Authorizable> findAuthorizables(@NotNull String relPath, @Nullable String value, int searchType)", "full_signature": "@NotNull @Override public Iterator<Authorizable> findAuthorizables(@NotNull String relPath, @Nullable String value, int searchType)", "class_method_signature": "UserManagerImpl.findAuthorizables(@NotNull String relPath, @Nullable String value, int searchType)", "testcase": false, "constructor": false}, {"identifier": "findAuthorizables", "parameters": "(@NotNull Query query)", "modifiers": "@NotNull @Override public", "return": "Iterator<Authorizable>", "signature": "Iterator<Authorizable> findAuthorizables(@NotNull Query query)", "full_signature": "@NotNull @Override public Iterator<Authorizable> findAuthorizables(@NotNull Query query)", "class_method_signature": "UserManagerImpl.findAuthorizables(@NotNull Query query)", "testcase": false, "constructor": false}, {"identifier": "createUser", "parameters": "(@NotNull final String userID, @Nullable String password)", "modifiers": "@NotNull @Override public", "return": "User", "signature": "User createUser(@NotNull final String userID, @Nullable String password)", "full_signature": "@NotNull @Override public User createUser(@NotNull final String userID, @Nullable String password)", "class_method_signature": "UserManagerImpl.createUser(@NotNull final String userID, @Nullable String password)", "testcase": false, "constructor": false}, {"identifier": "createUser", "parameters": "(@NotNull String userID, @Nullable String password, @NotNull Principal principal,\n                           @Nullable String intermediatePath)", "modifiers": "@NotNull @Override public", "return": "User", "signature": "User createUser(@NotNull String userID, @Nullable String password, @NotNull Principal principal,\n                           @Nullable String intermediatePath)", "full_signature": "@NotNull @Override public User createUser(@NotNull String userID, @Nullable String password, @NotNull Principal principal,\n                           @Nullable String intermediatePath)", "class_method_signature": "UserManagerImpl.createUser(@NotNull String userID, @Nullable String password, @NotNull Principal principal,\n                           @Nullable String intermediatePath)", "testcase": false, "constructor": false}, {"identifier": "createSystemUser", "parameters": "(@NotNull String userID, @Nullable String intermediatePath)", "modifiers": "@NotNull @Override public", "return": "User", "signature": "User createSystemUser(@NotNull String userID, @Nullable String intermediatePath)", "full_signature": "@NotNull @Override public User createSystemUser(@NotNull String userID, @Nullable String intermediatePath)", "class_method_signature": "UserManagerImpl.createSystemUser(@NotNull String userID, @Nullable String intermediatePath)", "testcase": false, "constructor": false}, {"identifier": "createGroup", "parameters": "(@NotNull String groupId)", "modifiers": "@NotNull @Override public", "return": "Group", "signature": "Group createGroup(@NotNull String groupId)", "full_signature": "@NotNull @Override public Group createGroup(@NotNull String groupId)", "class_method_signature": "UserManagerImpl.createGroup(@NotNull String groupId)", "testcase": false, "constructor": false}, {"identifier": "createGroup", "parameters": "(@NotNull Principal principal)", "modifiers": "@NotNull @Override public", "return": "Group", "signature": "Group createGroup(@NotNull Principal principal)", "full_signature": "@NotNull @Override public Group createGroup(@NotNull Principal principal)", "class_method_signature": "UserManagerImpl.createGroup(@NotNull Principal principal)", "testcase": false, "constructor": false}, {"identifier": "createGroup", "parameters": "(@NotNull Principal principal, @Nullable String intermediatePath)", "modifiers": "@NotNull @Override public", "return": "Group", "signature": "Group createGroup(@NotNull Principal principal, @Nullable String intermediatePath)", "full_signature": "@NotNull @Override public Group createGroup(@NotNull Principal principal, @Nullable String intermediatePath)", "class_method_signature": "UserManagerImpl.createGroup(@NotNull Principal principal, @Nullable String intermediatePath)", "testcase": false, "constructor": false}, {"identifier": "createGroup", "parameters": "(@NotNull String groupID, @NotNull Principal principal, @Nullable String intermediatePath)", "modifiers": "@NotNull @Override public", "return": "Group", "signature": "Group createGroup(@NotNull String groupID, @NotNull Principal principal, @Nullable String intermediatePath)", "full_signature": "@NotNull @Override public Group createGroup(@NotNull String groupID, @NotNull Principal principal, @Nullable String intermediatePath)", "class_method_signature": "UserManagerImpl.createGroup(@NotNull String groupID, @NotNull Principal principal, @Nullable String intermediatePath)", "testcase": false, "constructor": false}, {"identifier": "isAutoSave", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAutoSave()", "full_signature": "@Override public boolean isAutoSave()", "class_method_signature": "UserManagerImpl.isAutoSave()", "testcase": false, "constructor": false}, {"identifier": "autoSave", "parameters": "(boolean enable)", "modifiers": "@Override public", "return": "void", "signature": "void autoSave(boolean enable)", "full_signature": "@Override public void autoSave(boolean enable)", "class_method_signature": "UserManagerImpl.autoSave(boolean enable)", "testcase": false, "constructor": false}, {"identifier": "onCreate", "parameters": "(@NotNull User user, @Nullable String password)", "modifiers": "", "return": "void", "signature": "void onCreate(@NotNull User user, @Nullable String password)", "full_signature": " void onCreate(@NotNull User user, @Nullable String password)", "class_method_signature": "UserManagerImpl.onCreate(@NotNull User user, @Nullable String password)", "testcase": false, "constructor": false}, {"identifier": "onCreate", "parameters": "(@NotNull Group group)", "modifiers": "", "return": "void", "signature": "void onCreate(@NotNull Group group)", "full_signature": " void onCreate(@NotNull Group group)", "class_method_signature": "UserManagerImpl.onCreate(@NotNull Group group)", "testcase": false, "constructor": false}, {"identifier": "onRemove", "parameters": "(@NotNull Authorizable authorizable)", "modifiers": "", "return": "void", "signature": "void onRemove(@NotNull Authorizable authorizable)", "full_signature": " void onRemove(@NotNull Authorizable authorizable)", "class_method_signature": "UserManagerImpl.onRemove(@NotNull Authorizable authorizable)", "testcase": false, "constructor": false}, {"identifier": "onPasswordChange", "parameters": "(@NotNull User user, @NotNull String password)", "modifiers": "", "return": "void", "signature": "void onPasswordChange(@NotNull User user, @NotNull String password)", "full_signature": " void onPasswordChange(@NotNull User user, @NotNull String password)", "class_method_signature": "UserManagerImpl.onPasswordChange(@NotNull User user, @NotNull String password)", "testcase": false, "constructor": false}, {"identifier": "onDisable", "parameters": "(@NotNull User user, @Nullable String disableReason)", "modifiers": "", "return": "void", "signature": "void onDisable(@NotNull User user, @Nullable String disableReason)", "full_signature": " void onDisable(@NotNull User user, @Nullable String disableReason)", "class_method_signature": "UserManagerImpl.onDisable(@NotNull User user, @Nullable String disableReason)", "testcase": false, "constructor": false}, {"identifier": "onImpersonation", "parameters": "(@NotNull User user, @NotNull Principal principal, boolean granting)", "modifiers": "", "return": "void", "signature": "void onImpersonation(@NotNull User user, @NotNull Principal principal, boolean granting)", "full_signature": " void onImpersonation(@NotNull User user, @NotNull Principal principal, boolean granting)", "class_method_signature": "UserManagerImpl.onImpersonation(@NotNull User user, @NotNull Principal principal, boolean granting)", "testcase": false, "constructor": false}, {"identifier": "onGroupUpdate", "parameters": "(@NotNull Group group, boolean isRemove, @NotNull Authorizable member)", "modifiers": "", "return": "void", "signature": "void onGroupUpdate(@NotNull Group group, boolean isRemove, @NotNull Authorizable member)", "full_signature": " void onGroupUpdate(@NotNull Group group, boolean isRemove, @NotNull Authorizable member)", "class_method_signature": "UserManagerImpl.onGroupUpdate(@NotNull Group group, boolean isRemove, @NotNull Authorizable member)", "testcase": false, "constructor": false}, {"identifier": "onGroupUpdate", "parameters": "(@NotNull Group group, boolean isRemove, boolean isContentId, @NotNull Set<String> memberIds, @NotNull Set<String> failedIds)", "modifiers": "", "return": "void", "signature": "void onGroupUpdate(@NotNull Group group, boolean isRemove, boolean isContentId, @NotNull Set<String> memberIds, @NotNull Set<String> failedIds)", "full_signature": " void onGroupUpdate(@NotNull Group group, boolean isRemove, boolean isContentId, @NotNull Set<String> memberIds, @NotNull Set<String> failedIds)", "class_method_signature": "UserManagerImpl.onGroupUpdate(@NotNull Group group, boolean isRemove, boolean isContentId, @NotNull Set<String> memberIds, @NotNull Set<String> failedIds)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizable", "parameters": "(@Nullable Tree tree)", "modifiers": "@Nullable public", "return": "Authorizable", "signature": "Authorizable getAuthorizable(@Nullable Tree tree)", "full_signature": "@Nullable public Authorizable getAuthorizable(@Nullable Tree tree)", "class_method_signature": "UserManagerImpl.getAuthorizable(@Nullable Tree tree)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizableByOakPath", "parameters": "(@NotNull String oakPath)", "modifiers": "@Nullable", "return": "Authorizable", "signature": "Authorizable getAuthorizableByOakPath(@NotNull String oakPath)", "full_signature": "@Nullable Authorizable getAuthorizableByOakPath(@NotNull String oakPath)", "class_method_signature": "UserManagerImpl.getAuthorizableByOakPath(@NotNull String oakPath)", "testcase": false, "constructor": false}, {"identifier": "getNamePathMapper", "parameters": "()", "modifiers": "@NotNull", "return": "NamePathMapper", "signature": "NamePathMapper getNamePathMapper()", "full_signature": "@NotNull NamePathMapper getNamePathMapper()", "class_method_signature": "UserManagerImpl.getNamePathMapper()", "testcase": false, "constructor": false}, {"identifier": "getPartialValueFactory", "parameters": "()", "modifiers": "@NotNull", "return": "PartialValueFactory", "signature": "PartialValueFactory getPartialValueFactory()", "full_signature": "@NotNull PartialValueFactory getPartialValueFactory()", "class_method_signature": "UserManagerImpl.getPartialValueFactory()", "testcase": false, "constructor": false}, {"identifier": "getNodeTypeManager", "parameters": "()", "modifiers": "@NotNull", "return": "ReadOnlyNodeTypeManager", "signature": "ReadOnlyNodeTypeManager getNodeTypeManager()", "full_signature": "@NotNull ReadOnlyNodeTypeManager getNodeTypeManager()", "class_method_signature": "UserManagerImpl.getNodeTypeManager()", "testcase": false, "constructor": false}, {"identifier": "getMembershipProvider", "parameters": "()", "modifiers": "@NotNull", "return": "MembershipProvider", "signature": "MembershipProvider getMembershipProvider()", "full_signature": "@NotNull MembershipProvider getMembershipProvider()", "class_method_signature": "UserManagerImpl.getMembershipProvider()", "testcase": false, "constructor": false}, {"identifier": "getPrincipalManager", "parameters": "()", "modifiers": "@NotNull", "return": "PrincipalManager", "signature": "PrincipalManager getPrincipalManager()", "full_signature": "@NotNull PrincipalManager getPrincipalManager()", "class_method_signature": "UserManagerImpl.getPrincipalManager()", "testcase": false, "constructor": false}, {"identifier": "getConfig", "parameters": "()", "modifiers": "@NotNull", "return": "ConfigurationParameters", "signature": "ConfigurationParameters getConfig()", "full_signature": "@NotNull ConfigurationParameters getConfig()", "class_method_signature": "UserManagerImpl.getConfig()", "testcase": false, "constructor": false}, {"identifier": "checkValidId", "parameters": "(@Nullable String id)", "modifiers": "private", "return": "void", "signature": "void checkValidId(@Nullable String id)", "full_signature": "private void checkValidId(@Nullable String id)", "class_method_signature": "UserManagerImpl.checkValidId(@Nullable String id)", "testcase": false, "constructor": false}, {"identifier": "checkValidPrincipal", "parameters": "(@Nullable Principal principal, boolean isGroup)", "modifiers": "", "return": "void", "signature": "void checkValidPrincipal(@Nullable Principal principal, boolean isGroup)", "full_signature": " void checkValidPrincipal(@Nullable Principal principal, boolean isGroup)", "class_method_signature": "UserManagerImpl.checkValidPrincipal(@Nullable Principal principal, boolean isGroup)", "testcase": false, "constructor": false}, {"identifier": "setPrincipal", "parameters": "(@NotNull Tree authorizableTree, @NotNull Principal principal)", "modifiers": "", "return": "void", "signature": "void setPrincipal(@NotNull Tree authorizableTree, @NotNull Principal principal)", "full_signature": " void setPrincipal(@NotNull Tree authorizableTree, @NotNull Principal principal)", "class_method_signature": "UserManagerImpl.setPrincipal(@NotNull Tree authorizableTree, @NotNull Principal principal)", "testcase": false, "constructor": false}, {"identifier": "setPassword", "parameters": "(@NotNull Tree userTree, @NotNull String userId, @NotNull String password, boolean isImport)", "modifiers": "", "return": "void", "signature": "void setPassword(@NotNull Tree userTree, @NotNull String userId, @NotNull String password, boolean isImport)", "full_signature": " void setPassword(@NotNull Tree userTree, @NotNull String userId, @NotNull String password, boolean isImport)", "class_method_signature": "UserManagerImpl.setPassword(@NotNull Tree userTree, @NotNull String userId, @NotNull String password, boolean isImport)", "testcase": false, "constructor": false}, {"identifier": "setPasswordLastModified", "parameters": "(@NotNull Tree userTree, boolean isImport)", "modifiers": "private", "return": "boolean", "signature": "boolean setPasswordLastModified(@NotNull Tree userTree, boolean isImport)", "full_signature": "private boolean setPasswordLastModified(@NotNull Tree userTree, boolean isImport)", "class_method_signature": "UserManagerImpl.setPasswordLastModified(@NotNull Tree userTree, boolean isImport)", "testcase": false, "constructor": false}, {"identifier": "passwordExpiryEnabled", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean passwordExpiryEnabled()", "full_signature": "private boolean passwordExpiryEnabled()", "class_method_signature": "UserManagerImpl.passwordExpiryEnabled()", "testcase": false, "constructor": false}, {"identifier": "forceInitialPasswordChangeEnabled", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean forceInitialPasswordChangeEnabled()", "full_signature": "private boolean forceInitialPasswordChangeEnabled()", "class_method_signature": "UserManagerImpl.forceInitialPasswordChangeEnabled()", "testcase": false, "constructor": false}, {"identifier": "getQueryManager", "parameters": "()", "modifiers": "@NotNull private", "return": "UserQueryManager", "signature": "UserQueryManager getQueryManager()", "full_signature": "@NotNull private UserQueryManager getQueryManager()", "class_method_signature": "UserManagerImpl.getQueryManager()", "testcase": false, "constructor": false}, {"identifier": "filterGroupActions", "parameters": "()", "modifiers": "@NotNull private", "return": "Iterable<GroupAction>", "signature": "Iterable<GroupAction> filterGroupActions()", "full_signature": "@NotNull private Iterable<GroupAction> filterGroupActions()", "class_method_signature": "UserManagerImpl.filterGroupActions()", "testcase": false, "constructor": false}, {"identifier": "filterUserActions", "parameters": "()", "modifiers": "@NotNull private", "return": "Iterable<UserAction>", "signature": "Iterable<UserAction> filterUserActions()", "full_signature": "@NotNull private Iterable<UserAction> filterUserActions()", "class_method_signature": "UserManagerImpl.filterUserActions()", "testcase": false, "constructor": false}], "file": "oak-core/src/main/java/org/apache/jackrabbit/oak/security/user/UserManagerImpl.java"}, "focal_method": {"identifier": "getAuthorizableByPath", "parameters": "(@NotNull String path)", "modifiers": "@Nullable @Override public", "return": "Authorizable", "body": "@Nullable\n    @Override\n    public Authorizable getAuthorizableByPath(@NotNull String path) throws RepositoryException {\n        String oakPath = namePathMapper.getOakPath(path);\n        if (oakPath == null) {\n            throw new RepositoryException(\"Invalid path \" + path);\n        }\n        return getAuthorizableByOakPath(oakPath);\n    }", "signature": "Authorizable getAuthorizableByPath(@NotNull String path)", "full_signature": "@Nullable @Override public Authorizable getAuthorizableByPath(@NotNull String path)", "class_method_signature": "UserManagerImpl.getAuthorizableByPath(@NotNull String path)", "testcase": false, "constructor": false, "invocations": ["getOakPath", "getAuthorizableByOakPath"]}, "repository": {"repo_id": 3657930, "url": "https://github.com/apache/jackrabbit-oak", "stars": 291, "created": "3/8/2012 8:00:14 AM +00:00", "updates": "2020-01-27T10:53:13+00:00", "fork": "False", "license": "licensed"}}