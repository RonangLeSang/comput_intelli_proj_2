{"test_class": {"identifier": "OpenSecurityProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final OpenSecurityProvider securityProvider = new OpenSecurityProvider();", "modifier": "private final", "type": "OpenSecurityProvider", "declarator": "securityProvider = new OpenSecurityProvider()", "var_name": "securityProvider"}], "file": "oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/OpenSecurityProviderTest.java"}, "test_case": {"identifier": "testGetAuthenticationConfiguration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetAuthenticationConfiguration() {\n        assertTrue(securityProvider.getConfiguration(AuthenticationConfiguration.class) instanceof OpenAuthenticationConfiguration);\n    }", "signature": "void testGetAuthenticationConfiguration()", "full_signature": "@Test public void testGetAuthenticationConfiguration()", "class_method_signature": "OpenSecurityProviderTest.testGetAuthenticationConfiguration()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "getConfiguration"]}, "focal_class": {"identifier": "OpenSecurityProvider", "superclass": "", "interfaces": "implements SecurityProvider", "fields": [], "methods": [{"identifier": "getParameters", "parameters": "(@Nullable String name)", "modifiers": "@NotNull @Override public", "return": "ConfigurationParameters", "signature": "ConfigurationParameters getParameters(@Nullable String name)", "full_signature": "@NotNull @Override public ConfigurationParameters getParameters(@Nullable String name)", "class_method_signature": "OpenSecurityProvider.getParameters(@Nullable String name)", "testcase": false, "constructor": false}, {"identifier": "getConfigurations", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "Iterable<? extends SecurityConfiguration>", "signature": "Iterable<? extends SecurityConfiguration> getConfigurations()", "full_signature": "@NotNull @Override public Iterable<? extends SecurityConfiguration> getConfigurations()", "class_method_signature": "OpenSecurityProvider.getConfigurations()", "testcase": false, "constructor": false}, {"identifier": "getConfiguration", "parameters": "(@NotNull Class<T> configClass)", "modifiers": "@NotNull @Override public", "return": "T", "signature": "T getConfiguration(@NotNull Class<T> configClass)", "full_signature": "@NotNull @Override public T getConfiguration(@NotNull Class<T> configClass)", "class_method_signature": "OpenSecurityProvider.getConfiguration(@NotNull Class<T> configClass)", "testcase": false, "constructor": false}], "file": "oak-security-spi/src/main/java/org/apache/jackrabbit/oak/spi/security/OpenSecurityProvider.java"}, "focal_method": {"identifier": "getConfiguration", "parameters": "(@NotNull Class<T> configClass)", "modifiers": "@NotNull @Override public", "return": "T", "body": "@NotNull\n    @Override\n    public <T> T getConfiguration(@NotNull Class<T> configClass) {\n        if (AuthenticationConfiguration.class == configClass) {\n            return (T) new OpenAuthenticationConfiguration();\n        } else if (AuthorizationConfiguration.class == configClass) {\n            return (T) new OpenAuthorizationConfiguration();\n        } else {\n            throw new IllegalArgumentException(\"Unsupported security configuration class \" + configClass);\n        }\n    }", "signature": "T getConfiguration(@NotNull Class<T> configClass)", "full_signature": "@NotNull @Override public T getConfiguration(@NotNull Class<T> configClass)", "class_method_signature": "OpenSecurityProvider.getConfiguration(@NotNull Class<T> configClass)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 3657930, "url": "https://github.com/apache/jackrabbit-oak", "stars": 291, "created": "3/8/2012 8:00:14 AM +00:00", "updates": "2020-01-27T10:53:13+00:00", "fork": "False", "license": "licensed"}}