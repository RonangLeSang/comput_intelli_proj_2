{"test_class": {"identifier": "PrincipalImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Principal principal = new PrincipalImpl(\"name\");", "modifier": "private", "type": "Principal", "declarator": "principal = new PrincipalImpl(\"name\")", "var_name": "principal"}], "file": "oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/principal/PrincipalImplTest.java"}, "test_case": {"identifier": "testNotEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNotEquals() {\n        List<Principal> principals = new ArrayList<>();\n        principals.add(new PrincipalImpl(\"otherName\"));\n        principals.add(new Principal() {\n            @Override\n            public String getName() {\n                return \"name\";\n            }\n        });\n\n        for (Principal p : principals) {\n            assertFalse(principal.equals(p));\n        }\n    }", "signature": "void testNotEquals()", "full_signature": "@Test public void testNotEquals()", "class_method_signature": "PrincipalImplTest.testNotEquals()", "testcase": true, "constructor": false, "invocations": ["add", "add", "assertFalse", "equals"]}, "focal_class": {"identifier": "PrincipalImpl", "superclass": "", "interfaces": "implements JackrabbitPrincipal", "fields": [{"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}], "methods": [{"identifier": "PrincipalImpl", "parameters": "(String name)", "modifiers": "public", "return": "", "signature": " PrincipalImpl(String name)", "full_signature": "public  PrincipalImpl(String name)", "class_method_signature": "PrincipalImpl.PrincipalImpl(String name)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "PrincipalImpl.getName()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "PrincipalImpl.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "PrincipalImpl.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PrincipalImpl.toString()", "testcase": false, "constructor": false}], "file": "oak-security-spi/src/main/java/org/apache/jackrabbit/oak/spi/security/principal/PrincipalImpl.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object obj) {\n        if (this == obj) {\n            return true;\n        }\n        if (obj instanceof JackrabbitPrincipal) {\n            return name.equals(((JackrabbitPrincipal) obj).getName());\n        }\n        return false;\n    }", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "PrincipalImpl.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equals", "getName"]}, "repository": {"repo_id": 3657930, "url": "https://github.com/apache/jackrabbit-oak", "stars": 291, "created": "3/8/2012 8:00:14 AM +00:00", "updates": "2020-01-27T10:53:13+00:00", "fork": "False", "license": "licensed"}}