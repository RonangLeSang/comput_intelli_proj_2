{"test_class": {"identifier": "ExternalSortTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_FILE1_TXT = \"test-file-1.txt\";", "modifier": "private static final", "type": "String", "declarator": "TEST_FILE1_TXT = \"test-file-1.txt\"", "var_name": "TEST_FILE1_TXT"}, {"original_string": "private static final String TEST_FILE2_TXT = \"test-file-2.txt\";", "modifier": "private static final", "type": "String", "declarator": "TEST_FILE2_TXT = \"test-file-2.txt\"", "var_name": "TEST_FILE2_TXT"}, {"original_string": "private static final String TEST_FILE1_CSV = \"test-file-1.csv\";", "modifier": "private static final", "type": "String", "declarator": "TEST_FILE1_CSV = \"test-file-1.csv\"", "var_name": "TEST_FILE1_CSV"}, {"original_string": "private static final String TEST_FILE2_CSV = \"test-file-2.csv\";", "modifier": "private static final", "type": "String", "declarator": "TEST_FILE2_CSV = \"test-file-2.csv\"", "var_name": "TEST_FILE2_CSV"}, {"original_string": "private static final String[] EXPECTED_SORT_RESULTS = { \"a\", \"b\", \"b\", \"e\",\n            \"f\", \"i\", \"m\", \"o\", \"u\", \"u\", \"x\", \"y\", \"z\" };", "modifier": "private static final", "type": "String[]", "declarator": "EXPECTED_SORT_RESULTS = { \"a\", \"b\", \"b\", \"e\",\n            \"f\", \"i\", \"m\", \"o\", \"u\", \"u\", \"x\", \"y\", \"z\" }", "var_name": "EXPECTED_SORT_RESULTS"}, {"original_string": "private static final String[] EXPECTED_MERGE_RESULTS = { \"a\", \"a\", \"b\",\n            \"c\", \"c\", \"d\", \"e\", \"e\", \"f\", \"g\", \"g\", \"h\", \"i\", \"j\", \"k\" };", "modifier": "private static final", "type": "String[]", "declarator": "EXPECTED_MERGE_RESULTS = { \"a\", \"a\", \"b\",\n            \"c\", \"c\", \"d\", \"e\", \"e\", \"f\", \"g\", \"g\", \"h\", \"i\", \"j\", \"k\" }", "var_name": "EXPECTED_MERGE_RESULTS"}, {"original_string": "private static final String[] EXPECTED_MERGE_DISTINCT_RESULTS = { \"a\", \"b\",\n            \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\" };", "modifier": "private static final", "type": "String[]", "declarator": "EXPECTED_MERGE_DISTINCT_RESULTS = { \"a\", \"b\",\n            \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\" }", "var_name": "EXPECTED_MERGE_DISTINCT_RESULTS"}, {"original_string": "private static final String[] EXPECTED_HEADER_RESULTS = { \"HEADER, HEADER\",\n            \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\" };", "modifier": "private static final", "type": "String[]", "declarator": "EXPECTED_HEADER_RESULTS = { \"HEADER, HEADER\",\n            \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\" }", "var_name": "EXPECTED_HEADER_RESULTS"}, {"original_string": "private static final String[] EXPECTED_DISTINCT_RESULTS = { \"a\", \"b\", \"e\",\n            \"f\", \"i\", \"m\", \"o\", \"u\", \"x\", \"y\", \"z\" };", "modifier": "private static final", "type": "String[]", "declarator": "EXPECTED_DISTINCT_RESULTS = { \"a\", \"b\", \"e\",\n            \"f\", \"i\", \"m\", \"o\", \"u\", \"x\", \"y\", \"z\" }", "var_name": "EXPECTED_DISTINCT_RESULTS"}, {"original_string": "private static final String[] SAMPLE = { \"f\", \"m\", \"b\", \"e\", \"i\", \"o\", \"u\",\n            \"x\", \"a\", \"y\", \"z\", \"b\", \"u\" };", "modifier": "private static final", "type": "String[]", "declarator": "SAMPLE = { \"f\", \"m\", \"b\", \"e\", \"i\", \"o\", \"u\",\n            \"x\", \"a\", \"y\", \"z\", \"b\", \"u\" }", "var_name": "SAMPLE"}, {"original_string": "private static final String[] EXPECTED_CSV_DISTINCT_RESULTS = { \"a,1\", \"b,2a\", \"e,3\", \"f,4\", \"i,5\", \"m,6\", \"o,7\", \n                                                                      \"u,8a\", \"x,9\", \"y,10\", \"z,11\"};", "modifier": "private static final", "type": "String[]", "declarator": "EXPECTED_CSV_DISTINCT_RESULTS = { \"a,1\", \"b,2a\", \"e,3\", \"f,4\", \"i,5\", \"m,6\", \"o,7\", \n                                                                      \"u,8a\", \"x,9\", \"y,10\", \"z,11\"}", "var_name": "EXPECTED_CSV_DISTINCT_RESULTS"}, {"original_string": "private static final String[] EXPECTED_CSV_RESULTS = { \"a,1\", \"b,2a\", \"b,2b\", \"e,3\", \"f,4\", \"i,5\", \"m,6\", \"o,7\",\n                                                             \"u,8a\", \"u,8b\", \"x,9\", \"y,10\", \"z,11\"};", "modifier": "private static final", "type": "String[]", "declarator": "EXPECTED_CSV_RESULTS = { \"a,1\", \"b,2a\", \"b,2b\", \"e,3\", \"f,4\", \"i,5\", \"m,6\", \"o,7\",\n                                                             \"u,8a\", \"u,8b\", \"x,9\", \"y,10\", \"z,11\"}", "var_name": "EXPECTED_CSV_RESULTS"}, {"original_string": "private File file1;", "modifier": "private", "type": "File", "declarator": "file1", "var_name": "file1"}, {"original_string": "private File file2;", "modifier": "private", "type": "File", "declarator": "file2", "var_name": "file2"}, {"original_string": "private File csvFile;", "modifier": "private", "type": "File", "declarator": "csvFile", "var_name": "csvFile"}, {"original_string": "private File csvFile2;", "modifier": "private", "type": "File", "declarator": "csvFile2", "var_name": "csvFile2"}, {"original_string": "private List<File> fileList;", "modifier": "private", "type": "List<File>", "declarator": "fileList", "var_name": "fileList"}, {"original_string": "@Rule\n    public TemporaryFolder folder = new TemporaryFolder(new File(\"target\"));", "modifier": "@Rule\n    public", "type": "TemporaryFolder", "declarator": "folder = new TemporaryFolder(new File(\"target\"))", "var_name": "folder"}], "file": "oak-commons/src/test/java/org/apache/jackrabbit/oak/commons/sort/ExternalSortTest.java"}, "test_case": {"identifier": "testSortInBatch", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSortInBatch() throws Exception {\n        Comparator<String> cmp = new Comparator<String>() {\n            @Override\n            public int compare(String o1, String o2) {\n                return o1.compareTo(o2);\n            }\n        };\n\n        List<File> listOfFiles = ExternalSort.sortInBatch(this.csvFile, cmp,\n                ExternalSort.DEFAULTMAXTEMPFILES, ExternalSort.DEFAULT_MAX_MEM_BYTES, \n                Charset.defaultCharset(),\n                null, false, 1, false);\n        assertEquals(1, listOfFiles.size());\n\n        ArrayList<String> result = readLines(listOfFiles.get(0));\n        assertArrayEquals(Arrays.toString(result.toArray()),\n                EXPECTED_MERGE_DISTINCT_RESULTS, result.toArray());\n    }", "signature": "void testSortInBatch()", "full_signature": "@Test public void testSortInBatch()", "class_method_signature": "ExternalSortTest.testSortInBatch()", "testcase": true, "constructor": false, "invocations": ["compareTo", "sortInBatch", "defaultCharset", "assertEquals", "size", "readLines", "get", "assertArrayEquals", "toString", "toArray", "toArray"]}, "focal_class": {"identifier": "ExternalSort", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final int DEFAULTMAXTEMPFILES = 1024;", "modifier": "static final", "type": "int", "declarator": "DEFAULTMAXTEMPFILES = 1024", "var_name": "DEFAULTMAXTEMPFILES"}, {"original_string": "static final long DEFAULT_MAX_MEM_BYTES = 8388608L;", "modifier": "static final", "type": "long", "declarator": "DEFAULT_MAX_MEM_BYTES = 8388608L", "var_name": "DEFAULT_MAX_MEM_BYTES"}, {"original_string": "public static Comparator<String> defaultcomparator = new Comparator<String>() {\n        @Override\n        public int compare(String r1, String r2) {\n            return r1.compareTo(r2);\n        }\n    };", "modifier": "public static", "type": "Comparator<String>", "declarator": "defaultcomparator = new Comparator<String>() {\n        @Override\n        public int compare(String r1, String r2) {\n            return r1.compareTo(r2);\n        }\n    }", "var_name": "defaultcomparator"}], "methods": [{"identifier": "sort", "parameters": "(File input, File output)", "modifiers": "public static", "return": "void", "signature": "void sort(File input, File output)", "full_signature": "public static void sort(File input, File output)", "class_method_signature": "ExternalSort.sort(File input, File output)", "testcase": false, "constructor": false}, {"identifier": "estimateBestSizeOfBlocks", "parameters": "(File filetobesorted,\n            int maxtmpfiles, long maxMemory)", "modifiers": "public static", "return": "long", "signature": "long estimateBestSizeOfBlocks(File filetobesorted,\n            int maxtmpfiles, long maxMemory)", "full_signature": "public static long estimateBestSizeOfBlocks(File filetobesorted,\n            int maxtmpfiles, long maxMemory)", "class_method_signature": "ExternalSort.estimateBestSizeOfBlocks(File filetobesorted,\n            int maxtmpfiles, long maxMemory)", "testcase": false, "constructor": false}, {"identifier": "estimateBestSizeOfBlocks", "parameters": "(long sizeoffile, int maxtmpfiles, long maxMemory)", "modifiers": "private static", "return": "long", "signature": "long estimateBestSizeOfBlocks(long sizeoffile, int maxtmpfiles, long maxMemory)", "full_signature": "private static long estimateBestSizeOfBlocks(long sizeoffile, int maxtmpfiles, long maxMemory)", "class_method_signature": "ExternalSort.estimateBestSizeOfBlocks(long sizeoffile, int maxtmpfiles, long maxMemory)", "testcase": false, "constructor": false}, {"identifier": "sortInBatch", "parameters": "(File file)", "modifiers": "public static", "return": "List<File>", "signature": "List<File> sortInBatch(File file)", "full_signature": "public static List<File> sortInBatch(File file)", "class_method_signature": "ExternalSort.sortInBatch(File file)", "testcase": false, "constructor": false}, {"identifier": "sortInBatch", "parameters": "(File file, Comparator<String> cmp)", "modifiers": "public static", "return": "List<File>", "signature": "List<File> sortInBatch(File file, Comparator<String> cmp)", "full_signature": "public static List<File> sortInBatch(File file, Comparator<String> cmp)", "class_method_signature": "ExternalSort.sortInBatch(File file, Comparator<String> cmp)", "testcase": false, "constructor": false}, {"identifier": "sortInBatch", "parameters": "(File file, Comparator<String> cmp,\n            boolean distinct)", "modifiers": "public static", "return": "List<File>", "signature": "List<File> sortInBatch(File file, Comparator<String> cmp,\n            boolean distinct)", "full_signature": "public static List<File> sortInBatch(File file, Comparator<String> cmp,\n            boolean distinct)", "class_method_signature": "ExternalSort.sortInBatch(File file, Comparator<String> cmp,\n            boolean distinct)", "testcase": false, "constructor": false}, {"identifier": "sortInBatch", "parameters": "(File file, Comparator<String> cmp,\n                                         int maxtmpfiles, long maxMemory, Charset cs, File tmpdirectory,\n                                         boolean distinct, int numHeader, boolean usegzip)", "modifiers": "public static", "return": "List<File>", "signature": "List<File> sortInBatch(File file, Comparator<String> cmp,\n                                         int maxtmpfiles, long maxMemory, Charset cs, File tmpdirectory,\n                                         boolean distinct, int numHeader, boolean usegzip)", "full_signature": "public static List<File> sortInBatch(File file, Comparator<String> cmp,\n                                         int maxtmpfiles, long maxMemory, Charset cs, File tmpdirectory,\n                                         boolean distinct, int numHeader, boolean usegzip)", "class_method_signature": "ExternalSort.sortInBatch(File file, Comparator<String> cmp,\n                                         int maxtmpfiles, long maxMemory, Charset cs, File tmpdirectory,\n                                         boolean distinct, int numHeader, boolean usegzip)", "testcase": false, "constructor": false}, {"identifier": "sortInBatch", "parameters": "(File file, Comparator<T> cmp,\n                                             int maxtmpfiles, long maxMemory, Charset cs, File tmpdirectory,\n                                             boolean distinct, int numHeader, boolean usegzip,\n                                             Function<T, String> typeToString, Function<String, T> stringToType)", "modifiers": "public static", "return": "List<File>", "signature": "List<File> sortInBatch(File file, Comparator<T> cmp,\n                                             int maxtmpfiles, long maxMemory, Charset cs, File tmpdirectory,\n                                             boolean distinct, int numHeader, boolean usegzip,\n                                             Function<T, String> typeToString, Function<String, T> stringToType)", "full_signature": "public static List<File> sortInBatch(File file, Comparator<T> cmp,\n                                             int maxtmpfiles, long maxMemory, Charset cs, File tmpdirectory,\n                                             boolean distinct, int numHeader, boolean usegzip,\n                                             Function<T, String> typeToString, Function<String, T> stringToType)", "class_method_signature": "ExternalSort.sortInBatch(File file, Comparator<T> cmp,\n                                             int maxtmpfiles, long maxMemory, Charset cs, File tmpdirectory,\n                                             boolean distinct, int numHeader, boolean usegzip,\n                                             Function<T, String> typeToString, Function<String, T> stringToType)", "testcase": false, "constructor": false}, {"identifier": "sortInBatch", "parameters": "(BufferedReader fbr, long actualFileSize, Comparator<T> cmp,\n                                             int maxtmpfiles, long maxMemory, Charset cs, File tmpdirectory,\n                                             boolean distinct, int numHeader, boolean usegzip,\n                                             Function<T, String> typeToString, Function<String, T> stringToType)", "modifiers": "public static", "return": "List<File>", "signature": "List<File> sortInBatch(BufferedReader fbr, long actualFileSize, Comparator<T> cmp,\n                                             int maxtmpfiles, long maxMemory, Charset cs, File tmpdirectory,\n                                             boolean distinct, int numHeader, boolean usegzip,\n                                             Function<T, String> typeToString, Function<String, T> stringToType)", "full_signature": "public static List<File> sortInBatch(BufferedReader fbr, long actualFileSize, Comparator<T> cmp,\n                                             int maxtmpfiles, long maxMemory, Charset cs, File tmpdirectory,\n                                             boolean distinct, int numHeader, boolean usegzip,\n                                             Function<T, String> typeToString, Function<String, T> stringToType)", "class_method_signature": "ExternalSort.sortInBatch(BufferedReader fbr, long actualFileSize, Comparator<T> cmp,\n                                             int maxtmpfiles, long maxMemory, Charset cs, File tmpdirectory,\n                                             boolean distinct, int numHeader, boolean usegzip,\n                                             Function<T, String> typeToString, Function<String, T> stringToType)", "testcase": false, "constructor": false}, {"identifier": "sortInBatch", "parameters": "(BufferedReader fbr, long blocksize, Comparator<T> cmp,\n                                             Charset cs, File tmpdirectory,\n                                             boolean distinct, int numHeader, boolean usegzip,\n                                             Function<T, String> typeToString, Function<String, T> stringToType)", "modifiers": "private static", "return": "List<File>", "signature": "List<File> sortInBatch(BufferedReader fbr, long blocksize, Comparator<T> cmp,\n                                             Charset cs, File tmpdirectory,\n                                             boolean distinct, int numHeader, boolean usegzip,\n                                             Function<T, String> typeToString, Function<String, T> stringToType)", "full_signature": "private static List<File> sortInBatch(BufferedReader fbr, long blocksize, Comparator<T> cmp,\n                                             Charset cs, File tmpdirectory,\n                                             boolean distinct, int numHeader, boolean usegzip,\n                                             Function<T, String> typeToString, Function<String, T> stringToType)", "class_method_signature": "ExternalSort.sortInBatch(BufferedReader fbr, long blocksize, Comparator<T> cmp,\n                                             Charset cs, File tmpdirectory,\n                                             boolean distinct, int numHeader, boolean usegzip,\n                                             Function<T, String> typeToString, Function<String, T> stringToType)", "testcase": false, "constructor": false}, {"identifier": "sortInBatch", "parameters": "(File file, Comparator<String> cmp,\n            int maxtmpfiles, long maxMemory, Charset cs, File tmpdirectory, boolean distinct)", "modifiers": "public static", "return": "List<File>", "signature": "List<File> sortInBatch(File file, Comparator<String> cmp,\n            int maxtmpfiles, long maxMemory, Charset cs, File tmpdirectory, boolean distinct)", "full_signature": "public static List<File> sortInBatch(File file, Comparator<String> cmp,\n            int maxtmpfiles, long maxMemory, Charset cs, File tmpdirectory, boolean distinct)", "class_method_signature": "ExternalSort.sortInBatch(File file, Comparator<String> cmp,\n            int maxtmpfiles, long maxMemory, Charset cs, File tmpdirectory, boolean distinct)", "testcase": false, "constructor": false}, {"identifier": "sortAndSave", "parameters": "(List<String> tmplist,\n                                   Comparator<String> cmp, Charset cs, File tmpdirectory,\n                                   boolean distinct, boolean usegzip)", "modifiers": "public static", "return": "File", "signature": "File sortAndSave(List<String> tmplist,\n                                   Comparator<String> cmp, Charset cs, File tmpdirectory,\n                                   boolean distinct, boolean usegzip)", "full_signature": "public static File sortAndSave(List<String> tmplist,\n                                   Comparator<String> cmp, Charset cs, File tmpdirectory,\n                                   boolean distinct, boolean usegzip)", "class_method_signature": "ExternalSort.sortAndSave(List<String> tmplist,\n                                   Comparator<String> cmp, Charset cs, File tmpdirectory,\n                                   boolean distinct, boolean usegzip)", "testcase": false, "constructor": false}, {"identifier": "sortAndSave", "parameters": "(List<T> tmplist,\n                                   Comparator<T> cmp, Charset cs, File tmpdirectory,\n                                   boolean distinct, boolean usegzip, Function<T, String> typeToString)", "modifiers": "public static", "return": "File", "signature": "File sortAndSave(List<T> tmplist,\n                                   Comparator<T> cmp, Charset cs, File tmpdirectory,\n                                   boolean distinct, boolean usegzip, Function<T, String> typeToString)", "full_signature": "public static File sortAndSave(List<T> tmplist,\n                                   Comparator<T> cmp, Charset cs, File tmpdirectory,\n                                   boolean distinct, boolean usegzip, Function<T, String> typeToString)", "class_method_signature": "ExternalSort.sortAndSave(List<T> tmplist,\n                                   Comparator<T> cmp, Charset cs, File tmpdirectory,\n                                   boolean distinct, boolean usegzip, Function<T, String> typeToString)", "testcase": false, "constructor": false}, {"identifier": "sortAndSave", "parameters": "(List<String> tmplist,\n            Comparator<String> cmp, Charset cs, File tmpdirectory)", "modifiers": "public static", "return": "File", "signature": "File sortAndSave(List<String> tmplist,\n            Comparator<String> cmp, Charset cs, File tmpdirectory)", "full_signature": "public static File sortAndSave(List<String> tmplist,\n            Comparator<String> cmp, Charset cs, File tmpdirectory)", "class_method_signature": "ExternalSort.sortAndSave(List<String> tmplist,\n            Comparator<String> cmp, Charset cs, File tmpdirectory)", "testcase": false, "constructor": false}, {"identifier": "mergeSortedFiles", "parameters": "(List<File> files, File outputfile)", "modifiers": "public static", "return": "int", "signature": "int mergeSortedFiles(List<File> files, File outputfile)", "full_signature": "public static int mergeSortedFiles(List<File> files, File outputfile)", "class_method_signature": "ExternalSort.mergeSortedFiles(List<File> files, File outputfile)", "testcase": false, "constructor": false}, {"identifier": "mergeSortedFiles", "parameters": "(List<File> files, File outputfile,\n            final Comparator<String> cmp)", "modifiers": "public static", "return": "int", "signature": "int mergeSortedFiles(List<File> files, File outputfile,\n            final Comparator<String> cmp)", "full_signature": "public static int mergeSortedFiles(List<File> files, File outputfile,\n            final Comparator<String> cmp)", "class_method_signature": "ExternalSort.mergeSortedFiles(List<File> files, File outputfile,\n            final Comparator<String> cmp)", "testcase": false, "constructor": false}, {"identifier": "mergeSortedFiles", "parameters": "(List<File> files, File outputfile,\n            final Comparator<String> cmp, boolean distinct)", "modifiers": "public static", "return": "int", "signature": "int mergeSortedFiles(List<File> files, File outputfile,\n            final Comparator<String> cmp, boolean distinct)", "full_signature": "public static int mergeSortedFiles(List<File> files, File outputfile,\n            final Comparator<String> cmp, boolean distinct)", "class_method_signature": "ExternalSort.mergeSortedFiles(List<File> files, File outputfile,\n            final Comparator<String> cmp, boolean distinct)", "testcase": false, "constructor": false}, {"identifier": "mergeSortedFiles", "parameters": "(List<File> files, File outputfile,\n                                           final Comparator<String> cmp, Charset cs, boolean distinct,\n                                           boolean append, boolean usegzip)", "modifiers": "public static", "return": "int", "signature": "int mergeSortedFiles(List<File> files, File outputfile,\n                                           final Comparator<String> cmp, Charset cs, boolean distinct,\n                                           boolean append, boolean usegzip)", "full_signature": "public static int mergeSortedFiles(List<File> files, File outputfile,\n                                           final Comparator<String> cmp, Charset cs, boolean distinct,\n                                           boolean append, boolean usegzip)", "class_method_signature": "ExternalSort.mergeSortedFiles(List<File> files, File outputfile,\n                                           final Comparator<String> cmp, Charset cs, boolean distinct,\n                                           boolean append, boolean usegzip)", "testcase": false, "constructor": false}, {"identifier": "mergeSortedFiles", "parameters": "(List<File> files, File outputfile,\n                                           final Comparator<T> cmp, Charset cs, boolean distinct,\n                                           boolean append, boolean usegzip, Function<T, String> typeToString,\n                                           Function<String, T> stringToType)", "modifiers": "public static", "return": "int", "signature": "int mergeSortedFiles(List<File> files, File outputfile,\n                                           final Comparator<T> cmp, Charset cs, boolean distinct,\n                                           boolean append, boolean usegzip, Function<T, String> typeToString,\n                                           Function<String, T> stringToType)", "full_signature": "public static int mergeSortedFiles(List<File> files, File outputfile,\n                                           final Comparator<T> cmp, Charset cs, boolean distinct,\n                                           boolean append, boolean usegzip, Function<T, String> typeToString,\n                                           Function<String, T> stringToType)", "class_method_signature": "ExternalSort.mergeSortedFiles(List<File> files, File outputfile,\n                                           final Comparator<T> cmp, Charset cs, boolean distinct,\n                                           boolean append, boolean usegzip, Function<T, String> typeToString,\n                                           Function<String, T> stringToType)", "testcase": false, "constructor": false}, {"identifier": "mergeSortedFiles", "parameters": "(List<File> files,\n                                           BufferedWriter fbw, final Comparator<T> cmp, Charset cs, boolean distinct,\n                                           boolean usegzip, Function<T, String> typeToString,\n                                           Function<String, T> stringToType)", "modifiers": "public static", "return": "int", "signature": "int mergeSortedFiles(List<File> files,\n                                           BufferedWriter fbw, final Comparator<T> cmp, Charset cs, boolean distinct,\n                                           boolean usegzip, Function<T, String> typeToString,\n                                           Function<String, T> stringToType)", "full_signature": "public static int mergeSortedFiles(List<File> files,\n                                           BufferedWriter fbw, final Comparator<T> cmp, Charset cs, boolean distinct,\n                                           boolean usegzip, Function<T, String> typeToString,\n                                           Function<String, T> stringToType)", "class_method_signature": "ExternalSort.mergeSortedFiles(List<File> files,\n                                           BufferedWriter fbw, final Comparator<T> cmp, Charset cs, boolean distinct,\n                                           boolean usegzip, Function<T, String> typeToString,\n                                           Function<String, T> stringToType)", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(BufferedWriter fbw, final Comparator<T> cmp, boolean distinct,\n                            List<BinaryFileBuffer<T>> buffers, Function<T, String> typeToString)", "modifiers": "public static", "return": "int", "signature": "int merge(BufferedWriter fbw, final Comparator<T> cmp, boolean distinct,\n                            List<BinaryFileBuffer<T>> buffers, Function<T, String> typeToString)", "full_signature": "public static int merge(BufferedWriter fbw, final Comparator<T> cmp, boolean distinct,\n                            List<BinaryFileBuffer<T>> buffers, Function<T, String> typeToString)", "class_method_signature": "ExternalSort.merge(BufferedWriter fbw, final Comparator<T> cmp, boolean distinct,\n                            List<BinaryFileBuffer<T>> buffers, Function<T, String> typeToString)", "testcase": false, "constructor": false}, {"identifier": "mergeSortedFiles", "parameters": "(List<File> files, File outputfile,\n            final Comparator<String> cmp, Charset cs, boolean distinct)", "modifiers": "public static", "return": "int", "signature": "int mergeSortedFiles(List<File> files, File outputfile,\n            final Comparator<String> cmp, Charset cs, boolean distinct)", "full_signature": "public static int mergeSortedFiles(List<File> files, File outputfile,\n            final Comparator<String> cmp, Charset cs, boolean distinct)", "class_method_signature": "ExternalSort.mergeSortedFiles(List<File> files, File outputfile,\n            final Comparator<String> cmp, Charset cs, boolean distinct)", "testcase": false, "constructor": false}, {"identifier": "mergeSortedFiles", "parameters": "(List<File> files, File outputfile,\n            final Comparator<String> cmp, Charset cs)", "modifiers": "public static", "return": "int", "signature": "int mergeSortedFiles(List<File> files, File outputfile,\n            final Comparator<String> cmp, Charset cs)", "full_signature": "public static int mergeSortedFiles(List<File> files, File outputfile,\n            final Comparator<String> cmp, Charset cs)", "class_method_signature": "ExternalSort.mergeSortedFiles(List<File> files, File outputfile,\n            final Comparator<String> cmp, Charset cs)", "testcase": false, "constructor": false}, {"identifier": "displayUsage", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void displayUsage()", "full_signature": "public static void displayUsage()", "class_method_signature": "ExternalSort.displayUsage()", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "ExternalSort.main(String[] args)", "testcase": false, "constructor": false}], "file": "oak-commons/src/main/java/org/apache/jackrabbit/oak/commons/sort/ExternalSort.java"}, "focal_method": {"identifier": "sortInBatch", "parameters": "(File file)", "modifiers": "public static", "return": "List<File>", "body": "public static List<File> sortInBatch(File file)\n            throws IOException {\n        return sortInBatch(file, defaultcomparator, DEFAULTMAXTEMPFILES, DEFAULT_MAX_MEM_BYTES,\n                Charset.defaultCharset(), null, false);\n    }", "signature": "List<File> sortInBatch(File file)", "full_signature": "public static List<File> sortInBatch(File file)", "class_method_signature": "ExternalSort.sortInBatch(File file)", "testcase": false, "constructor": false, "invocations": ["sortInBatch", "defaultCharset"]}, "repository": {"repo_id": 3657930, "url": "https://github.com/apache/jackrabbit-oak", "stars": 291, "created": "3/8/2012 8:00:14 AM +00:00", "updates": "2020-01-27T10:53:13+00:00", "fork": "False", "license": "licensed"}}