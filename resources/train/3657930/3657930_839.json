{"test_class": {"identifier": "RepMembersConflictHandlerTest", "superclass": "extends AbstractSecurityTest", "interfaces": "", "fields": [{"original_string": "private static final String GROUP_ID = \"test-groupId\";", "modifier": "private static final", "type": "String", "declarator": "GROUP_ID = \"test-groupId\"", "var_name": "GROUP_ID"}, {"original_string": "private final int count;", "modifier": "private final", "type": "int", "declarator": "count", "var_name": "count"}, {"original_string": "private Group group;", "modifier": "private", "type": "Group", "declarator": "group", "var_name": "group"}, {"original_string": "private User[] users;", "modifier": "private", "type": "User[]", "declarator": "users", "var_name": "users"}], "file": "oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/RepMembersConflictHandlerTest.java"}, "test_case": {"identifier": "testChangeDeletedPropertyOther", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testChangeDeletedPropertyOther() {\n        RepMembersConflictHandler handler = new RepMembersConflictHandler();\n        PropertyState ours = PropertyStates.createProperty(\"any\", \"value\");\n        assertSame(ThreeWayConflictHandler.Resolution.IGNORED, handler.changeDeletedProperty(mock(NodeBuilder.class), ours, mock(PropertyState.class)));\n    }", "signature": "void testChangeDeletedPropertyOther()", "full_signature": "@Test public void testChangeDeletedPropertyOther()", "class_method_signature": "RepMembersConflictHandlerTest.testChangeDeletedPropertyOther()", "testcase": true, "constructor": false, "invocations": ["createProperty", "assertSame", "changeDeletedProperty", "mock", "mock"]}, "focal_class": {"identifier": "RepMembersConflictHandler", "superclass": "", "interfaces": "implements ThreeWayConflictHandler", "fields": [], "methods": [{"identifier": "addExistingProperty", "parameters": "(@NotNull NodeBuilder parent, @NotNull PropertyState ours,\n            @NotNull PropertyState theirs)", "modifiers": "@NotNull @Override public", "return": "Resolution", "signature": "Resolution addExistingProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours,\n            @NotNull PropertyState theirs)", "full_signature": "@NotNull @Override public Resolution addExistingProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours,\n            @NotNull PropertyState theirs)", "class_method_signature": "RepMembersConflictHandler.addExistingProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours,\n            @NotNull PropertyState theirs)", "testcase": false, "constructor": false}, {"identifier": "changeDeletedProperty", "parameters": "(@NotNull NodeBuilder parent, @NotNull PropertyState ours,\n            @NotNull PropertyState base)", "modifiers": "@Override @NotNull public", "return": "Resolution", "signature": "Resolution changeDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours,\n            @NotNull PropertyState base)", "full_signature": "@Override @NotNull public Resolution changeDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours,\n            @NotNull PropertyState base)", "class_method_signature": "RepMembersConflictHandler.changeDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours,\n            @NotNull PropertyState base)", "testcase": false, "constructor": false}, {"identifier": "changeChangedProperty", "parameters": "(@NotNull NodeBuilder parent, @NotNull PropertyState ours,\n            @NotNull PropertyState theirs, @NotNull PropertyState base)", "modifiers": "@NotNull @Override public", "return": "Resolution", "signature": "Resolution changeChangedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours,\n            @NotNull PropertyState theirs, @NotNull PropertyState base)", "full_signature": "@NotNull @Override public Resolution changeChangedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours,\n            @NotNull PropertyState theirs, @NotNull PropertyState base)", "class_method_signature": "RepMembersConflictHandler.changeChangedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours,\n            @NotNull PropertyState theirs, @NotNull PropertyState base)", "testcase": false, "constructor": false}, {"identifier": "deleteDeletedProperty", "parameters": "(@NotNull NodeBuilder parent, @NotNull PropertyState base)", "modifiers": "@NotNull @Override public", "return": "Resolution", "signature": "Resolution deleteDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState base)", "full_signature": "@NotNull @Override public Resolution deleteDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState base)", "class_method_signature": "RepMembersConflictHandler.deleteDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState base)", "testcase": false, "constructor": false}, {"identifier": "deleteChangedProperty", "parameters": "(@NotNull NodeBuilder parent, @NotNull PropertyState theirs,\n            @NotNull PropertyState base)", "modifiers": "@NotNull @Override public", "return": "Resolution", "signature": "Resolution deleteChangedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState theirs,\n            @NotNull PropertyState base)", "full_signature": "@NotNull @Override public Resolution deleteChangedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState theirs,\n            @NotNull PropertyState base)", "class_method_signature": "RepMembersConflictHandler.deleteChangedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState theirs,\n            @NotNull PropertyState base)", "testcase": false, "constructor": false}, {"identifier": "addExistingNode", "parameters": "(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState ours,\n            @NotNull NodeState theirs)", "modifiers": "@NotNull @Override public", "return": "Resolution", "signature": "Resolution addExistingNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState ours,\n            @NotNull NodeState theirs)", "full_signature": "@NotNull @Override public Resolution addExistingNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState ours,\n            @NotNull NodeState theirs)", "class_method_signature": "RepMembersConflictHandler.addExistingNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState ours,\n            @NotNull NodeState theirs)", "testcase": false, "constructor": false}, {"identifier": "changeDeletedNode", "parameters": "(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState ours,\n            @NotNull NodeState base)", "modifiers": "@NotNull @Override public", "return": "Resolution", "signature": "Resolution changeDeletedNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState ours,\n            @NotNull NodeState base)", "full_signature": "@NotNull @Override public Resolution changeDeletedNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState ours,\n            @NotNull NodeState base)", "class_method_signature": "RepMembersConflictHandler.changeDeletedNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState ours,\n            @NotNull NodeState base)", "testcase": false, "constructor": false}, {"identifier": "deleteChangedNode", "parameters": "(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState theirs,\n            @NotNull NodeState base)", "modifiers": "@NotNull @Override public", "return": "Resolution", "signature": "Resolution deleteChangedNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState theirs,\n            @NotNull NodeState base)", "full_signature": "@NotNull @Override public Resolution deleteChangedNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState theirs,\n            @NotNull NodeState base)", "class_method_signature": "RepMembersConflictHandler.deleteChangedNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState theirs,\n            @NotNull NodeState base)", "testcase": false, "constructor": false}, {"identifier": "deleteDeletedNode", "parameters": "(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState base)", "modifiers": "@NotNull @Override public", "return": "Resolution", "signature": "Resolution deleteDeletedNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState base)", "full_signature": "@NotNull @Override public Resolution deleteDeletedNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState base)", "class_method_signature": "RepMembersConflictHandler.deleteDeletedNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState base)", "testcase": false, "constructor": false}, {"identifier": "mergeChange", "parameters": "(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState theirs, @NotNull Set<String> base)", "modifiers": "private static", "return": "void", "signature": "void mergeChange(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState theirs, @NotNull Set<String> base)", "full_signature": "private static void mergeChange(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState theirs, @NotNull Set<String> base)", "class_method_signature": "RepMembersConflictHandler.mergeChange(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState theirs, @NotNull Set<String> base)", "testcase": false, "constructor": false}, {"identifier": "isRepMembersProperty", "parameters": "(PropertyState p)", "modifiers": "private static", "return": "boolean", "signature": "boolean isRepMembersProperty(PropertyState p)", "full_signature": "private static boolean isRepMembersProperty(PropertyState p)", "class_method_signature": "RepMembersConflictHandler.isRepMembersProperty(PropertyState p)", "testcase": false, "constructor": false}, {"identifier": "isMemberRefType", "parameters": "(NodeState base)", "modifiers": "private static", "return": "boolean", "signature": "boolean isMemberRefType(NodeState base)", "full_signature": "private static boolean isMemberRefType(NodeState base)", "class_method_signature": "RepMembersConflictHandler.isMemberRefType(NodeState base)", "testcase": false, "constructor": false}], "file": "oak-core/src/main/java/org/apache/jackrabbit/oak/security/user/RepMembersConflictHandler.java"}, "focal_method": {"identifier": "changeDeletedProperty", "parameters": "(@NotNull NodeBuilder parent, @NotNull PropertyState ours,\n            @NotNull PropertyState base)", "modifiers": "@Override @NotNull public", "return": "Resolution", "body": "@Override\n    @NotNull\n    public Resolution changeDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours,\n            @NotNull PropertyState base) {\n        if (isRepMembersProperty(ours)) {\n            // removing the members property takes precedence\n            return Resolution.THEIRS;\n        } else {\n            return Resolution.IGNORED;\n        }\n    }", "signature": "Resolution changeDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours,\n            @NotNull PropertyState base)", "full_signature": "@Override @NotNull public Resolution changeDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours,\n            @NotNull PropertyState base)", "class_method_signature": "RepMembersConflictHandler.changeDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours,\n            @NotNull PropertyState base)", "testcase": false, "constructor": false, "invocations": ["isRepMembersProperty"]}, "repository": {"repo_id": 3657930, "url": "https://github.com/apache/jackrabbit-oak", "stars": 291, "created": "3/8/2012 8:00:14 AM +00:00", "updates": "2020-01-27T10:53:13+00:00", "fork": "False", "license": "licensed"}}