{"test_class": {"identifier": "MgrProviderImplTest", "superclass": "extends AbstractPrincipalBasedTest", "interfaces": "", "fields": [{"original_string": "private MgrProviderImpl mgrProvider;", "modifier": "private", "type": "MgrProviderImpl", "declarator": "mgrProvider", "var_name": "mgrProvider"}], "file": "oak-authorization-principalbased/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/MgrProviderImplTest.java"}, "test_case": {"identifier": "testGetNamePathMapper", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetNamePathMapper() {\n        assertSame(getNamePathMapper(), mgrProvider.getNamePathMapper());\n    }", "signature": "void testGetNamePathMapper()", "full_signature": "@Test public void testGetNamePathMapper()", "class_method_signature": "MgrProviderImplTest.testGetNamePathMapper()", "testcase": true, "constructor": false, "invocations": ["assertSame", "getNamePathMapper", "getNamePathMapper"]}, "focal_class": {"identifier": "MgrProviderImpl", "superclass": "", "interfaces": "implements MgrProvider", "fields": [{"original_string": "private final PrincipalBasedAuthorizationConfiguration config;", "modifier": "private final", "type": "PrincipalBasedAuthorizationConfiguration", "declarator": "config", "var_name": "config"}, {"original_string": "private NamePathMapper namePathMapper;", "modifier": "private", "type": "NamePathMapper", "declarator": "namePathMapper", "var_name": "namePathMapper"}, {"original_string": "private Root root;", "modifier": "private", "type": "Root", "declarator": "root", "var_name": "root"}, {"original_string": "private Context ctx;", "modifier": "private", "type": "Context", "declarator": "ctx", "var_name": "ctx"}, {"original_string": "private RestrictionProvider restrictionProvider;", "modifier": "private", "type": "RestrictionProvider", "declarator": "restrictionProvider", "var_name": "restrictionProvider"}, {"original_string": "private PrincipalManager principalManager;", "modifier": "private", "type": "PrincipalManager", "declarator": "principalManager", "var_name": "principalManager"}, {"original_string": "private PrivilegeManager privilegeManager;", "modifier": "private", "type": "PrivilegeManager", "declarator": "privilegeManager", "var_name": "privilegeManager"}, {"original_string": "private PrivilegeBitsProvider privilegeBitsProvider;", "modifier": "private", "type": "PrivilegeBitsProvider", "declarator": "privilegeBitsProvider", "var_name": "privilegeBitsProvider"}], "methods": [{"identifier": "MgrProviderImpl", "parameters": "(@NotNull PrincipalBasedAuthorizationConfiguration config)", "modifiers": "", "return": "", "signature": " MgrProviderImpl(@NotNull PrincipalBasedAuthorizationConfiguration config)", "full_signature": "  MgrProviderImpl(@NotNull PrincipalBasedAuthorizationConfiguration config)", "class_method_signature": "MgrProviderImpl.MgrProviderImpl(@NotNull PrincipalBasedAuthorizationConfiguration config)", "testcase": false, "constructor": true}, {"identifier": "MgrProviderImpl", "parameters": "(@NotNull PrincipalBasedAuthorizationConfiguration config, @NotNull Root root, @NotNull NamePathMapper namePathMapper)", "modifiers": "", "return": "", "signature": " MgrProviderImpl(@NotNull PrincipalBasedAuthorizationConfiguration config, @NotNull Root root, @NotNull NamePathMapper namePathMapper)", "full_signature": "  MgrProviderImpl(@NotNull PrincipalBasedAuthorizationConfiguration config, @NotNull Root root, @NotNull NamePathMapper namePathMapper)", "class_method_signature": "MgrProviderImpl.MgrProviderImpl(@NotNull PrincipalBasedAuthorizationConfiguration config, @NotNull Root root, @NotNull NamePathMapper namePathMapper)", "testcase": false, "constructor": true}, {"identifier": "getSecurityProvider", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "SecurityProvider", "signature": "SecurityProvider getSecurityProvider()", "full_signature": "@NotNull @Override public SecurityProvider getSecurityProvider()", "class_method_signature": "MgrProviderImpl.getSecurityProvider()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "(@NotNull Root root, NamePathMapper namePathMapper)", "modifiers": "@Override public", "return": "void", "signature": "void reset(@NotNull Root root, NamePathMapper namePathMapper)", "full_signature": "@Override public void reset(@NotNull Root root, NamePathMapper namePathMapper)", "class_method_signature": "MgrProviderImpl.reset(@NotNull Root root, NamePathMapper namePathMapper)", "testcase": false, "constructor": false}, {"identifier": "getRoot", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "Root", "signature": "Root getRoot()", "full_signature": "@NotNull @Override public Root getRoot()", "class_method_signature": "MgrProviderImpl.getRoot()", "testcase": false, "constructor": false}, {"identifier": "getNamePathMapper", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "NamePathMapper", "signature": "NamePathMapper getNamePathMapper()", "full_signature": "@NotNull @Override public NamePathMapper getNamePathMapper()", "class_method_signature": "MgrProviderImpl.getNamePathMapper()", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "Context", "signature": "Context getContext()", "full_signature": "@NotNull @Override public Context getContext()", "class_method_signature": "MgrProviderImpl.getContext()", "testcase": false, "constructor": false}, {"identifier": "getPrivilegeManager", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "PrivilegeManager", "signature": "PrivilegeManager getPrivilegeManager()", "full_signature": "@NotNull @Override public PrivilegeManager getPrivilegeManager()", "class_method_signature": "MgrProviderImpl.getPrivilegeManager()", "testcase": false, "constructor": false}, {"identifier": "getPrivilegeBitsProvider", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "PrivilegeBitsProvider", "signature": "PrivilegeBitsProvider getPrivilegeBitsProvider()", "full_signature": "@NotNull @Override public PrivilegeBitsProvider getPrivilegeBitsProvider()", "class_method_signature": "MgrProviderImpl.getPrivilegeBitsProvider()", "testcase": false, "constructor": false}, {"identifier": "getPrincipalManager", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "PrincipalManager", "signature": "PrincipalManager getPrincipalManager()", "full_signature": "@NotNull @Override public PrincipalManager getPrincipalManager()", "class_method_signature": "MgrProviderImpl.getPrincipalManager()", "testcase": false, "constructor": false}, {"identifier": "getRestrictionProvider", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "RestrictionProvider", "signature": "RestrictionProvider getRestrictionProvider()", "full_signature": "@NotNull @Override public RestrictionProvider getRestrictionProvider()", "class_method_signature": "MgrProviderImpl.getRestrictionProvider()", "testcase": false, "constructor": false}, {"identifier": "getTreeProvider", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "TreeProvider", "signature": "TreeProvider getTreeProvider()", "full_signature": "@NotNull @Override public TreeProvider getTreeProvider()", "class_method_signature": "MgrProviderImpl.getTreeProvider()", "testcase": false, "constructor": false}, {"identifier": "getRootProvider", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "RootProvider", "signature": "RootProvider getRootProvider()", "full_signature": "@NotNull @Override public RootProvider getRootProvider()", "class_method_signature": "MgrProviderImpl.getRootProvider()", "testcase": false, "constructor": false}, {"identifier": "checkRootInitialized", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkRootInitialized()", "full_signature": "private void checkRootInitialized()", "class_method_signature": "MgrProviderImpl.checkRootInitialized()", "testcase": false, "constructor": false}], "file": "oak-authorization-principalbased/src/main/java/org/apache/jackrabbit/oak/spi/security/authorization/principalbased/impl/MgrProviderImpl.java"}, "focal_method": {"identifier": "getNamePathMapper", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "NamePathMapper", "body": "@NotNull\n    @Override\n    public NamePathMapper getNamePathMapper() {\n        return namePathMapper;\n    }", "signature": "NamePathMapper getNamePathMapper()", "full_signature": "@NotNull @Override public NamePathMapper getNamePathMapper()", "class_method_signature": "MgrProviderImpl.getNamePathMapper()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 3657930, "url": "https://github.com/apache/jackrabbit-oak", "stars": 291, "created": "3/8/2012 8:00:14 AM +00:00", "updates": "2020-01-27T10:53:13+00:00", "fork": "False", "license": "licensed"}}