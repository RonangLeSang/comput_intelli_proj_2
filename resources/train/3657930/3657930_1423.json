{"test_class": {"identifier": "MoveAwarePermissionValidatorTest", "superclass": "extends AbstractSecurityTest", "interfaces": "", "fields": [{"original_string": "private Tree t;", "modifier": "private", "type": "Tree", "declarator": "t", "var_name": "t"}, {"original_string": "private PermissionProvider pp;", "modifier": "private", "type": "PermissionProvider", "declarator": "pp", "var_name": "pp"}, {"original_string": "private JackrabbitAccessControlList acl;", "modifier": "private", "type": "JackrabbitAccessControlList", "declarator": "acl", "var_name": "acl"}], "file": "oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/permission/MoveAwarePermissionValidatorTest.java"}, "test_case": {"identifier": "testChildNodeAddedNoMatchingMove", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testChildNodeAddedNoMatchingMove() throws Exception {\n        MoveAwarePermissionValidator maValidator = spy(createRootValidator(adminSession.getAuthInfo().getPrincipals(), new MoveTracker()));\n        Validator validator = maValidator.childNodeAdded(\"name\", mock(NodeState.class));\n\n        assertTrue(validator instanceof VisibleValidator);\n        verify(maValidator, times(1)).checkPermissions(t.getChild(\"name\"), false, Permissions.ADD_NODE);\n    }", "signature": "void testChildNodeAddedNoMatchingMove()", "full_signature": "@Test public void testChildNodeAddedNoMatchingMove()", "class_method_signature": "MoveAwarePermissionValidatorTest.testChildNodeAddedNoMatchingMove()", "testcase": true, "constructor": false, "invocations": ["spy", "createRootValidator", "getPrincipals", "getAuthInfo", "childNodeAdded", "mock", "assertTrue", "checkPermissions", "verify", "times", "getChild"]}, "focal_class": {"identifier": "MoveAwarePermissionValidator", "superclass": "extends PermissionValidator", "interfaces": "", "fields": [{"original_string": "private final MoveContext moveCtx;", "modifier": "private final", "type": "MoveContext", "declarator": "moveCtx", "var_name": "moveCtx"}], "methods": [{"identifier": "MoveAwarePermissionValidator", "parameters": "(@NotNull NodeState rootBefore,\n                                 @NotNull NodeState rootAfter,\n                                 @NotNull PermissionProvider permissionProvider,\n                                 @NotNull PermissionValidatorProvider provider,\n                                 @NotNull MoveTracker moveTracker)", "modifiers": "", "return": "", "signature": " MoveAwarePermissionValidator(@NotNull NodeState rootBefore,\n                                 @NotNull NodeState rootAfter,\n                                 @NotNull PermissionProvider permissionProvider,\n                                 @NotNull PermissionValidatorProvider provider,\n                                 @NotNull MoveTracker moveTracker)", "full_signature": "  MoveAwarePermissionValidator(@NotNull NodeState rootBefore,\n                                 @NotNull NodeState rootAfter,\n                                 @NotNull PermissionProvider permissionProvider,\n                                 @NotNull PermissionValidatorProvider provider,\n                                 @NotNull MoveTracker moveTracker)", "class_method_signature": "MoveAwarePermissionValidator.MoveAwarePermissionValidator(@NotNull NodeState rootBefore,\n                                 @NotNull NodeState rootAfter,\n                                 @NotNull PermissionProvider permissionProvider,\n                                 @NotNull PermissionValidatorProvider provider,\n                                 @NotNull MoveTracker moveTracker)", "testcase": false, "constructor": true}, {"identifier": "MoveAwarePermissionValidator", "parameters": "(@Nullable Tree parentBefore,\n                                         @Nullable Tree parentAfter,\n                                         @NotNull TreePermission parentPermission,\n                                         @NotNull PermissionValidator parentValidator)", "modifiers": "private", "return": "", "signature": " MoveAwarePermissionValidator(@Nullable Tree parentBefore,\n                                         @Nullable Tree parentAfter,\n                                         @NotNull TreePermission parentPermission,\n                                         @NotNull PermissionValidator parentValidator)", "full_signature": "private  MoveAwarePermissionValidator(@Nullable Tree parentBefore,\n                                         @Nullable Tree parentAfter,\n                                         @NotNull TreePermission parentPermission,\n                                         @NotNull PermissionValidator parentValidator)", "class_method_signature": "MoveAwarePermissionValidator.MoveAwarePermissionValidator(@Nullable Tree parentBefore,\n                                         @Nullable Tree parentAfter,\n                                         @NotNull TreePermission parentPermission,\n                                         @NotNull PermissionValidator parentValidator)", "testcase": false, "constructor": true}, {"identifier": "createValidator", "parameters": "(@Nullable Tree parentBefore,\n                                        @Nullable Tree parentAfter,\n                                        @NotNull TreePermission parentPermission,\n                                        @NotNull PermissionValidator parentValidator)", "modifiers": "@NotNull @Override", "return": "PermissionValidator", "signature": "PermissionValidator createValidator(@Nullable Tree parentBefore,\n                                        @Nullable Tree parentAfter,\n                                        @NotNull TreePermission parentPermission,\n                                        @NotNull PermissionValidator parentValidator)", "full_signature": "@NotNull @Override PermissionValidator createValidator(@Nullable Tree parentBefore,\n                                        @Nullable Tree parentAfter,\n                                        @NotNull TreePermission parentPermission,\n                                        @NotNull PermissionValidator parentValidator)", "class_method_signature": "MoveAwarePermissionValidator.createValidator(@Nullable Tree parentBefore,\n                                        @Nullable Tree parentAfter,\n                                        @NotNull TreePermission parentPermission,\n                                        @NotNull PermissionValidator parentValidator)", "testcase": false, "constructor": false}, {"identifier": "visibleValidator", "parameters": "(@NotNull Tree source,\n                                       @NotNull Tree dest)", "modifiers": "private", "return": "Validator", "signature": "Validator visibleValidator(@NotNull Tree source,\n                                       @NotNull Tree dest)", "full_signature": "private Validator visibleValidator(@NotNull Tree source,\n                                       @NotNull Tree dest)", "class_method_signature": "MoveAwarePermissionValidator.visibleValidator(@NotNull Tree source,\n                                       @NotNull Tree dest)", "testcase": false, "constructor": false}, {"identifier": "childNodeAdded", "parameters": "(String name, NodeState after)", "modifiers": "@Override public", "return": "Validator", "signature": "Validator childNodeAdded(String name, NodeState after)", "full_signature": "@Override public Validator childNodeAdded(String name, NodeState after)", "class_method_signature": "MoveAwarePermissionValidator.childNodeAdded(String name, NodeState after)", "testcase": false, "constructor": false}, {"identifier": "childNodeDeleted", "parameters": "(String name, NodeState before)", "modifiers": "@Override public", "return": "Validator", "signature": "Validator childNodeDeleted(String name, NodeState before)", "full_signature": "@Override public Validator childNodeDeleted(String name, NodeState before)", "class_method_signature": "MoveAwarePermissionValidator.childNodeDeleted(String name, NodeState before)", "testcase": false, "constructor": false}], "file": "oak-core/src/main/java/org/apache/jackrabbit/oak/security/authorization/permission/MoveAwarePermissionValidator.java"}, "focal_method": {"identifier": "childNodeAdded", "parameters": "(String name, NodeState after)", "modifiers": "@Override public", "return": "Validator", "body": "@Override\n    public Validator childNodeAdded(String name, NodeState after) throws CommitFailedException {\n        if (moveCtx.processAdd(getParentAfter(), name, this)) {\n            return null;\n        } else {\n            return super.childNodeAdded(name, after);\n        }\n    }", "signature": "Validator childNodeAdded(String name, NodeState after)", "full_signature": "@Override public Validator childNodeAdded(String name, NodeState after)", "class_method_signature": "MoveAwarePermissionValidator.childNodeAdded(String name, NodeState after)", "testcase": false, "constructor": false, "invocations": ["processAdd", "getParentAfter", "childNodeAdded"]}, "repository": {"repo_id": 3657930, "url": "https://github.com/apache/jackrabbit-oak", "stars": 291, "created": "3/8/2012 8:00:14 AM +00:00", "updates": "2020-01-27T10:53:13+00:00", "fork": "False", "license": "licensed"}}