{"test_class": {"identifier": "WhiteboardUserAuthenticationFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Root root = Mockito.mock(Root.class);", "modifier": "private final", "type": "Root", "declarator": "root = Mockito.mock(Root.class)", "var_name": "root"}, {"original_string": "private final UserConfiguration userConfiguration = Mockito.mock(UserConfiguration.class);", "modifier": "private final", "type": "UserConfiguration", "declarator": "userConfiguration = Mockito.mock(UserConfiguration.class)", "var_name": "userConfiguration"}], "file": "oak-core/src/test/java/org/apache/jackrabbit/oak/security/user/whiteboard/WhiteboardUserAuthenticationFactoryTest.java"}, "test_case": {"identifier": "testMultipleServiceAndDefault", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMultipleServiceAndDefault() {\n        WhiteboardUserAuthenticationFactory factory = createFactory(new TestUserAuthenticationFactory(\"abc\"), \"test\", \"test2\");\n\n        assertNull(factory.getAuthentication(getUserConfiguration(), root, \"abc\"));\n\n        assertNotNull(factory.getAuthentication(getUserConfiguration(), root, \"test\"));\n        assertNotNull(factory.getAuthentication(getUserConfiguration(), root, \"test2\"));\n\n        assertNull(factory.getAuthentication(getUserConfiguration(), root, \"another\"));\n    }", "signature": "void testMultipleServiceAndDefault()", "full_signature": "@Test public void testMultipleServiceAndDefault()", "class_method_signature": "WhiteboardUserAuthenticationFactoryTest.testMultipleServiceAndDefault()", "testcase": true, "constructor": false, "invocations": ["createFactory", "assertNull", "getAuthentication", "getUserConfiguration", "assertNotNull", "getAuthentication", "getUserConfiguration", "assertNotNull", "getAuthentication", "getUserConfiguration", "assertNull", "getAuthentication", "getUserConfiguration"]}, "focal_class": {"identifier": "WhiteboardUserAuthenticationFactory", "superclass": "extends AbstractServiceTracker<UserAuthenticationFactory>", "interfaces": "implements UserAuthenticationFactory", "fields": [{"original_string": "private final UserAuthenticationFactory defaultFactory;", "modifier": "private final", "type": "UserAuthenticationFactory", "declarator": "defaultFactory", "var_name": "defaultFactory"}], "methods": [{"identifier": "WhiteboardUserAuthenticationFactory", "parameters": "(@Nullable UserAuthenticationFactory defaultFactory)", "modifiers": "public", "return": "", "signature": " WhiteboardUserAuthenticationFactory(@Nullable UserAuthenticationFactory defaultFactory)", "full_signature": "public  WhiteboardUserAuthenticationFactory(@Nullable UserAuthenticationFactory defaultFactory)", "class_method_signature": "WhiteboardUserAuthenticationFactory.WhiteboardUserAuthenticationFactory(@Nullable UserAuthenticationFactory defaultFactory)", "testcase": false, "constructor": true}, {"identifier": "getAuthentication", "parameters": "(@NotNull UserConfiguration userConfiguration, @NotNull Root root, @Nullable String userId)", "modifiers": "@Nullable @Override public", "return": "Authentication", "signature": "Authentication getAuthentication(@NotNull UserConfiguration userConfiguration, @NotNull Root root, @Nullable String userId)", "full_signature": "@Nullable @Override public Authentication getAuthentication(@NotNull UserConfiguration userConfiguration, @NotNull Root root, @Nullable String userId)", "class_method_signature": "WhiteboardUserAuthenticationFactory.getAuthentication(@NotNull UserConfiguration userConfiguration, @NotNull Root root, @Nullable String userId)", "testcase": false, "constructor": false}], "file": "oak-core/src/main/java/org/apache/jackrabbit/oak/security/user/whiteboard/WhiteboardUserAuthenticationFactory.java"}, "focal_method": {"identifier": "getAuthentication", "parameters": "(@NotNull UserConfiguration userConfiguration, @NotNull Root root, @Nullable String userId)", "modifiers": "@Nullable @Override public", "return": "Authentication", "body": "@Nullable\n    @Override\n    public Authentication getAuthentication(@NotNull UserConfiguration userConfiguration, @NotNull Root root, @Nullable String userId) {\n        List<UserAuthenticationFactory> services = getServices();\n        if (services.isEmpty() && defaultFactory != null) {\n            return defaultFactory.getAuthentication(userConfiguration, root, userId);\n\n        }\n        for (UserAuthenticationFactory factory : services) {\n            Authentication authentication = factory.getAuthentication(userConfiguration, root, userId);\n            if (authentication != null) {\n                return authentication;\n            }\n        }\n        return null;\n    }", "signature": "Authentication getAuthentication(@NotNull UserConfiguration userConfiguration, @NotNull Root root, @Nullable String userId)", "full_signature": "@Nullable @Override public Authentication getAuthentication(@NotNull UserConfiguration userConfiguration, @NotNull Root root, @Nullable String userId)", "class_method_signature": "WhiteboardUserAuthenticationFactory.getAuthentication(@NotNull UserConfiguration userConfiguration, @NotNull Root root, @Nullable String userId)", "testcase": false, "constructor": false, "invocations": ["getServices", "isEmpty", "getAuthentication", "getAuthentication"]}, "repository": {"repo_id": 3657930, "url": "https://github.com/apache/jackrabbit-oak", "stars": 291, "created": "3/8/2012 8:00:14 AM +00:00", "updates": "2020-01-27T10:53:13+00:00", "fork": "False", "license": "licensed"}}