{"test_class": {"identifier": "PrivilegeUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/privilege/PrivilegeUtilTest.java"}, "test_case": {"identifier": "testGetPrivilegesTree", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetPrivilegesTree() {\n        Root root = when(mock(Root.class).getTree(PRIVILEGES_PATH)).thenReturn(mock(Tree.class)).getMock();\n\n        PrivilegeUtil.getPrivilegesTree(root);\n        verify(root, times(1)).getTree(PRIVILEGES_PATH);\n    }", "signature": "void testGetPrivilegesTree()", "full_signature": "@Test public void testGetPrivilegesTree()", "class_method_signature": "PrivilegeUtilTest.testGetPrivilegesTree()", "testcase": true, "constructor": false, "invocations": ["getMock", "thenReturn", "when", "getTree", "mock", "mock", "getPrivilegesTree", "getTree", "verify", "times"]}, "focal_class": {"identifier": "PrivilegeUtil", "superclass": "", "interfaces": "implements PrivilegeConstants", "fields": [], "methods": [{"identifier": "PrivilegeUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " PrivilegeUtil()", "full_signature": "private  PrivilegeUtil()", "class_method_signature": "PrivilegeUtil.PrivilegeUtil()", "testcase": false, "constructor": true}, {"identifier": "getPrivilegesTree", "parameters": "(Root root)", "modifiers": "@NotNull public static", "return": "Tree", "signature": "Tree getPrivilegesTree(Root root)", "full_signature": "@NotNull public static Tree getPrivilegesTree(Root root)", "class_method_signature": "PrivilegeUtil.getPrivilegesTree(Root root)", "testcase": false, "constructor": false}, {"identifier": "readDefinition", "parameters": "(@NotNull Tree definitionTree)", "modifiers": "@NotNull public static", "return": "PrivilegeDefinition", "signature": "PrivilegeDefinition readDefinition(@NotNull Tree definitionTree)", "full_signature": "@NotNull public static PrivilegeDefinition readDefinition(@NotNull Tree definitionTree)", "class_method_signature": "PrivilegeUtil.readDefinition(@NotNull Tree definitionTree)", "testcase": false, "constructor": false}], "file": "oak-security-spi/src/main/java/org/apache/jackrabbit/oak/spi/security/privilege/PrivilegeUtil.java"}, "focal_method": {"identifier": "getPrivilegesTree", "parameters": "(Root root)", "modifiers": "@NotNull public static", "return": "Tree", "body": "@NotNull\n    public static Tree getPrivilegesTree(Root root) {\n        return root.getTree(PRIVILEGES_PATH);\n    }", "signature": "Tree getPrivilegesTree(Root root)", "full_signature": "@NotNull public static Tree getPrivilegesTree(Root root)", "class_method_signature": "PrivilegeUtil.getPrivilegesTree(Root root)", "testcase": false, "constructor": false, "invocations": ["getTree"]}, "repository": {"repo_id": 3657930, "url": "https://github.com/apache/jackrabbit-oak", "stars": 291, "created": "3/8/2012 8:00:14 AM +00:00", "updates": "2020-01-27T10:53:13+00:00", "fork": "False", "license": "licensed"}}