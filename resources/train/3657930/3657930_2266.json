{"test_class": {"identifier": "ExternalIdentityConflictHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ExternalIdentityConflictHandler handler = new ExternalIdentityConflictHandler();", "modifier": "private", "type": "ExternalIdentityConflictHandler", "declarator": "handler = new ExternalIdentityConflictHandler()", "var_name": "handler"}], "file": "oak-auth-external/src/test/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/principal/ExternalIdentityConflictHandlerTest.java"}, "test_case": {"identifier": "testChangeDeletedProperty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testChangeDeletedProperty() {\n        assertSame(ThreeWayConflictHandler.Resolution.IGNORED, handler.changeDeletedProperty(mock(NodeBuilder.class), mock(PropertyState.class), mock(PropertyState.class)));\n    }", "signature": "void testChangeDeletedProperty()", "full_signature": "@Test public void testChangeDeletedProperty()", "class_method_signature": "ExternalIdentityConflictHandlerTest.testChangeDeletedProperty()", "testcase": true, "constructor": false, "invocations": ["assertSame", "changeDeletedProperty", "mock", "mock", "mock"]}, "focal_class": {"identifier": "ExternalIdentityConflictHandler", "superclass": "", "interfaces": "implements ThreeWayConflictHandler", "fields": [], "methods": [{"identifier": "addExistingProperty", "parameters": "(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState theirs)", "modifiers": "@NotNull @Override public", "return": "Resolution", "signature": "Resolution addExistingProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState theirs)", "full_signature": "@NotNull @Override public Resolution addExistingProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState theirs)", "class_method_signature": "ExternalIdentityConflictHandler.addExistingProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState theirs)", "testcase": false, "constructor": false}, {"identifier": "changeChangedProperty", "parameters": "(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState theirs,\n                                            @NotNull PropertyState base)", "modifiers": "@NotNull @Override public", "return": "Resolution", "signature": "Resolution changeChangedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState theirs,\n                                            @NotNull PropertyState base)", "full_signature": "@NotNull @Override public Resolution changeChangedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState theirs,\n                                            @NotNull PropertyState base)", "class_method_signature": "ExternalIdentityConflictHandler.changeChangedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState theirs,\n                                            @NotNull PropertyState base)", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState theirs)", "modifiers": "private static", "return": "Resolution", "signature": "Resolution merge(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState theirs)", "full_signature": "private static Resolution merge(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState theirs)", "class_method_signature": "ExternalIdentityConflictHandler.merge(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState theirs)", "testcase": false, "constructor": false}, {"identifier": "changeDeletedProperty", "parameters": "(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState base)", "modifiers": "@Override @NotNull public", "return": "Resolution", "signature": "Resolution changeDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState base)", "full_signature": "@Override @NotNull public Resolution changeDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState base)", "class_method_signature": "ExternalIdentityConflictHandler.changeDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState base)", "testcase": false, "constructor": false}, {"identifier": "deleteDeletedProperty", "parameters": "(@NotNull NodeBuilder parent, @NotNull PropertyState base)", "modifiers": "@Override @NotNull public", "return": "Resolution", "signature": "Resolution deleteDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState base)", "full_signature": "@Override @NotNull public Resolution deleteDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState base)", "class_method_signature": "ExternalIdentityConflictHandler.deleteDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState base)", "testcase": false, "constructor": false}, {"identifier": "deleteChangedProperty", "parameters": "(@NotNull NodeBuilder parent, @NotNull PropertyState theirs,\n            @NotNull PropertyState base)", "modifiers": "@Override @NotNull public", "return": "Resolution", "signature": "Resolution deleteChangedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState theirs,\n            @NotNull PropertyState base)", "full_signature": "@Override @NotNull public Resolution deleteChangedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState theirs,\n            @NotNull PropertyState base)", "class_method_signature": "ExternalIdentityConflictHandler.deleteChangedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState theirs,\n            @NotNull PropertyState base)", "testcase": false, "constructor": false}, {"identifier": "addExistingNode", "parameters": "(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState ours,\n            @NotNull NodeState theirs)", "modifiers": "@Override @NotNull public", "return": "Resolution", "signature": "Resolution addExistingNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState ours,\n            @NotNull NodeState theirs)", "full_signature": "@Override @NotNull public Resolution addExistingNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState ours,\n            @NotNull NodeState theirs)", "class_method_signature": "ExternalIdentityConflictHandler.addExistingNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState ours,\n            @NotNull NodeState theirs)", "testcase": false, "constructor": false}, {"identifier": "changeDeletedNode", "parameters": "(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState ours,\n            @NotNull NodeState base)", "modifiers": "@Override @NotNull public", "return": "Resolution", "signature": "Resolution changeDeletedNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState ours,\n            @NotNull NodeState base)", "full_signature": "@Override @NotNull public Resolution changeDeletedNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState ours,\n            @NotNull NodeState base)", "class_method_signature": "ExternalIdentityConflictHandler.changeDeletedNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState ours,\n            @NotNull NodeState base)", "testcase": false, "constructor": false}, {"identifier": "deleteChangedNode", "parameters": "(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState theirs,\n            @NotNull NodeState base)", "modifiers": "@Override @NotNull public", "return": "Resolution", "signature": "Resolution deleteChangedNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState theirs,\n            @NotNull NodeState base)", "full_signature": "@Override @NotNull public Resolution deleteChangedNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState theirs,\n            @NotNull NodeState base)", "class_method_signature": "ExternalIdentityConflictHandler.deleteChangedNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState theirs,\n            @NotNull NodeState base)", "testcase": false, "constructor": false}, {"identifier": "deleteDeletedNode", "parameters": "(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState base)", "modifiers": "@Override @NotNull public", "return": "Resolution", "signature": "Resolution deleteDeletedNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState base)", "full_signature": "@Override @NotNull public Resolution deleteDeletedNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState base)", "class_method_signature": "ExternalIdentityConflictHandler.deleteDeletedNode(@NotNull NodeBuilder parent, @NotNull String name, @NotNull NodeState base)", "testcase": false, "constructor": false}], "file": "oak-auth-external/src/main/java/org/apache/jackrabbit/oak/spi/security/authentication/external/impl/principal/ExternalIdentityConflictHandler.java"}, "focal_method": {"identifier": "changeDeletedProperty", "parameters": "(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState base)", "modifiers": "@Override @NotNull public", "return": "Resolution", "body": "@Override\n    @NotNull\n    public Resolution changeDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState base) {\n        return Resolution.IGNORED;\n    }", "signature": "Resolution changeDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState base)", "full_signature": "@Override @NotNull public Resolution changeDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState base)", "class_method_signature": "ExternalIdentityConflictHandler.changeDeletedProperty(@NotNull NodeBuilder parent, @NotNull PropertyState ours, @NotNull PropertyState base)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 3657930, "url": "https://github.com/apache/jackrabbit-oak", "stars": 291, "created": "3/8/2012 8:00:14 AM +00:00", "updates": "2020-01-27T10:53:13+00:00", "fork": "False", "license": "licensed"}}