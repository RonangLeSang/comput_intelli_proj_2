{"test_class": {"identifier": "FulltextIndexTest", "superclass": "", "interfaces": "", "fields": [], "file": "oak-search/src/test/java/org/apache/jackrabbit/oak/plugins/index/search/spi/query/FulltextIndexTest.java"}, "test_case": {"identifier": "testParseFacetField", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParseFacetField() {\n        String field = FulltextIndex.parseFacetField(\"rep:facet(text)\");\n        assertNotNull(field);\n        assertEquals(\"text\", field);\n        field = FulltextIndex.parseFacetField(\"rep:facet(jcr:title)\");\n        assertNotNull(field);\n        assertEquals(\"jcr:title\", field);\n        field = FulltextIndex.parseFacetField(\"rep:facet(jcr:primaryType)\");\n        assertNotNull(field);\n        assertEquals(\"jcr:primaryType\", field);\n\n    }", "signature": "void testParseFacetField()", "full_signature": "@Test public void testParseFacetField()", "class_method_signature": "FulltextIndexTest.testParseFacetField()", "testcase": true, "constructor": false, "invocations": ["parseFacetField", "assertNotNull", "assertEquals", "parseFacetField", "assertNotNull", "assertEquals", "parseFacetField", "assertNotNull", "assertEquals"]}, "focal_class": {"identifier": "FulltextIndex", "superclass": "", "interfaces": "implements AdvancedQueryIndex, QueryIndex, NativeQueryIndex,\n        AdvanceFulltextQueryIndex", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(FulltextIndex.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(FulltextIndex.class)", "var_name": "LOG"}, {"original_string": "public static final String ATTR_PLAN_RESULT = \"oak.fulltext.planResult\";", "modifier": "public static final", "type": "String", "declarator": "ATTR_PLAN_RESULT = \"oak.fulltext.planResult\"", "var_name": "ATTR_PLAN_RESULT"}, {"original_string": "private static final char[] QUERY_OPERATORS = {':' , '/', '!', '&', '|', '='};", "modifier": "private static final", "type": "char[]", "declarator": "QUERY_OPERATORS = {':' , '/', '!', '&', '|', '='}", "var_name": "QUERY_OPERATORS"}], "methods": [{"identifier": "acquireIndexNode", "parameters": "(String indexPath)", "modifiers": "protected abstract", "return": "IndexNode", "signature": "IndexNode acquireIndexNode(String indexPath)", "full_signature": "protected abstract IndexNode acquireIndexNode(String indexPath)", "class_method_signature": "FulltextIndex.acquireIndexNode(String indexPath)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "protected abstract", "return": "String", "signature": "String getType()", "full_signature": "protected abstract String getType()", "class_method_signature": "FulltextIndex.getType()", "testcase": false, "constructor": false}, {"identifier": "getSizeEstimator", "parameters": "(IndexPlan plan)", "modifiers": "protected abstract", "return": "SizeEstimator", "signature": "SizeEstimator getSizeEstimator(IndexPlan plan)", "full_signature": "protected abstract SizeEstimator getSizeEstimator(IndexPlan plan)", "class_method_signature": "FulltextIndex.getSizeEstimator(IndexPlan plan)", "testcase": false, "constructor": false}, {"identifier": "getIndexDefinitionPredicate", "parameters": "()", "modifiers": "protected abstract", "return": "Predicate<NodeState>", "signature": "Predicate<NodeState> getIndexDefinitionPredicate()", "full_signature": "protected abstract Predicate<NodeState> getIndexDefinitionPredicate()", "class_method_signature": "FulltextIndex.getIndexDefinitionPredicate()", "testcase": false, "constructor": false}, {"identifier": "getFulltextRequestString", "parameters": "(IndexPlan plan, IndexNode indexNode)", "modifiers": "protected abstract", "return": "String", "signature": "String getFulltextRequestString(IndexPlan plan, IndexNode indexNode)", "full_signature": "protected abstract String getFulltextRequestString(IndexPlan plan, IndexNode indexNode)", "class_method_signature": "FulltextIndex.getFulltextRequestString(IndexPlan plan, IndexNode indexNode)", "testcase": false, "constructor": false}, {"identifier": "filterReplacedIndexes", "parameters": "()", "modifiers": "protected abstract", "return": "boolean", "signature": "boolean filterReplacedIndexes()", "full_signature": "protected abstract boolean filterReplacedIndexes()", "class_method_signature": "FulltextIndex.filterReplacedIndexes()", "testcase": false, "constructor": false}, {"identifier": "getPlanner", "parameters": "(IndexNode indexNode, String path, Filter filter, List<OrderEntry> sortOrder)", "modifiers": "protected", "return": "FulltextIndexPlanner", "signature": "FulltextIndexPlanner getPlanner(IndexNode indexNode, String path, Filter filter, List<OrderEntry> sortOrder)", "full_signature": "protected FulltextIndexPlanner getPlanner(IndexNode indexNode, String path, Filter filter, List<OrderEntry> sortOrder)", "class_method_signature": "FulltextIndex.getPlanner(IndexNode indexNode, String path, Filter filter, List<OrderEntry> sortOrder)", "testcase": false, "constructor": false}, {"identifier": "getPlans", "parameters": "(Filter filter, List<OrderEntry> sortOrder, NodeState rootState)", "modifiers": "@Override public", "return": "List<IndexPlan>", "signature": "List<IndexPlan> getPlans(Filter filter, List<OrderEntry> sortOrder, NodeState rootState)", "full_signature": "@Override public List<IndexPlan> getPlans(Filter filter, List<OrderEntry> sortOrder, NodeState rootState)", "class_method_signature": "FulltextIndex.getPlans(Filter filter, List<OrderEntry> sortOrder, NodeState rootState)", "testcase": false, "constructor": false}, {"identifier": "getCost", "parameters": "(Filter filter, NodeState root)", "modifiers": "@Override public", "return": "double", "signature": "double getCost(Filter filter, NodeState root)", "full_signature": "@Override public double getCost(Filter filter, NodeState root)", "class_method_signature": "FulltextIndex.getCost(Filter filter, NodeState root)", "testcase": false, "constructor": false}, {"identifier": "getPlan", "parameters": "(Filter filter, NodeState root)", "modifiers": "@Override public", "return": "String", "signature": "String getPlan(Filter filter, NodeState root)", "full_signature": "@Override public String getPlan(Filter filter, NodeState root)", "class_method_signature": "FulltextIndex.getPlan(Filter filter, NodeState root)", "testcase": false, "constructor": false}, {"identifier": "getPlanDescription", "parameters": "(IndexPlan plan, NodeState root)", "modifiers": "@Override public", "return": "String", "signature": "String getPlanDescription(IndexPlan plan, NodeState root)", "full_signature": "@Override public String getPlanDescription(IndexPlan plan, NodeState root)", "class_method_signature": "FulltextIndex.getPlanDescription(IndexPlan plan, NodeState root)", "testcase": false, "constructor": false}, {"identifier": "addSyncIndexPlan", "parameters": "(IndexPlan plan, StringBuilder sb)", "modifiers": "protected static", "return": "void", "signature": "void addSyncIndexPlan(IndexPlan plan, StringBuilder sb)", "full_signature": "protected static void addSyncIndexPlan(IndexPlan plan, StringBuilder sb)", "class_method_signature": "FulltextIndex.addSyncIndexPlan(IndexPlan plan, StringBuilder sb)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(final Filter filter, final NodeState root)", "modifiers": "@Override public", "return": "Cursor", "signature": "Cursor query(final Filter filter, final NodeState root)", "full_signature": "@Override public Cursor query(final Filter filter, final NodeState root)", "class_method_signature": "FulltextIndex.query(final Filter filter, final NodeState root)", "testcase": false, "constructor": false}, {"identifier": "shouldInclude", "parameters": "(String docPath, IndexPlan plan)", "modifiers": "protected static", "return": "boolean", "signature": "boolean shouldInclude(String docPath, IndexPlan plan)", "full_signature": "protected static boolean shouldInclude(String docPath, IndexPlan plan)", "class_method_signature": "FulltextIndex.shouldInclude(String docPath, IndexPlan plan)", "testcase": false, "constructor": false}, {"identifier": "getNodeAggregator", "parameters": "()", "modifiers": "@Override public", "return": "NodeAggregator", "signature": "NodeAggregator getNodeAggregator()", "full_signature": "@Override public NodeAggregator getNodeAggregator()", "class_method_signature": "FulltextIndex.getNodeAggregator()", "testcase": false, "constructor": false}, {"identifier": "isNodePath", "parameters": "(String fulltextTermPath)", "modifiers": "public static", "return": "boolean", "signature": "boolean isNodePath(String fulltextTermPath)", "full_signature": "public static boolean isNodePath(String fulltextTermPath)", "class_method_signature": "FulltextIndex.isNodePath(String fulltextTermPath)", "testcase": false, "constructor": false}, {"identifier": "acquireIndexNode", "parameters": "(IndexPlan plan)", "modifiers": "protected", "return": "IndexNode", "signature": "IndexNode acquireIndexNode(IndexPlan plan)", "full_signature": "protected IndexNode acquireIndexNode(IndexPlan plan)", "class_method_signature": "FulltextIndex.acquireIndexNode(IndexPlan plan)", "testcase": false, "constructor": false}, {"identifier": "getIndexName", "parameters": "(IndexPlan plan)", "modifiers": "protected static", "return": "String", "signature": "String getIndexName(IndexPlan plan)", "full_signature": "protected static String getIndexName(IndexPlan plan)", "class_method_signature": "FulltextIndex.getIndexName(IndexPlan plan)", "testcase": false, "constructor": false}, {"identifier": "determinePropertyType", "parameters": "(PropertyDefinition defn, PropertyRestriction pr)", "modifiers": "public static", "return": "int", "signature": "int determinePropertyType(PropertyDefinition defn, PropertyRestriction pr)", "full_signature": "public static int determinePropertyType(PropertyDefinition defn, PropertyRestriction pr)", "class_method_signature": "FulltextIndex.determinePropertyType(PropertyDefinition defn, PropertyRestriction pr)", "testcase": false, "constructor": false}, {"identifier": "getPropertyType", "parameters": "(PropertyDefinition defn, String name, int defaultVal)", "modifiers": "protected static", "return": "int", "signature": "int getPropertyType(PropertyDefinition defn, String name, int defaultVal)", "full_signature": "protected static int getPropertyType(PropertyDefinition defn, String name, int defaultVal)", "class_method_signature": "FulltextIndex.getPropertyType(PropertyDefinition defn, String name, int defaultVal)", "testcase": false, "constructor": false}, {"identifier": "getPlanResult", "parameters": "(IndexPlan plan)", "modifiers": "protected static", "return": "PlanResult", "signature": "PlanResult getPlanResult(IndexPlan plan)", "full_signature": "protected static PlanResult getPlanResult(IndexPlan plan)", "class_method_signature": "FulltextIndex.getPlanResult(IndexPlan plan)", "testcase": false, "constructor": false}, {"identifier": "rewriteQueryText", "parameters": "(String textsearch)", "modifiers": "protected static", "return": "String", "signature": "String rewriteQueryText(String textsearch)", "full_signature": "protected static String rewriteQueryText(String textsearch)", "class_method_signature": "FulltextIndex.rewriteQueryText(String textsearch)", "testcase": false, "constructor": false}, {"identifier": "getPathRestriction", "parameters": "(IndexPlan plan)", "modifiers": "public static", "return": "String", "signature": "String getPathRestriction(IndexPlan plan)", "full_signature": "public static String getPathRestriction(IndexPlan plan)", "class_method_signature": "FulltextIndex.getPathRestriction(IndexPlan plan)", "testcase": false, "constructor": false}, {"identifier": "parseFacetField", "parameters": "(String columnName)", "modifiers": "public static", "return": "String", "signature": "String parseFacetField(String columnName)", "full_signature": "public static String parseFacetField(String columnName)", "class_method_signature": "FulltextIndex.parseFacetField(String columnName)", "testcase": false, "constructor": false}], "file": "oak-search/src/main/java/org/apache/jackrabbit/oak/plugins/index/search/spi/query/FulltextIndex.java"}, "focal_method": {"identifier": "parseFacetField", "parameters": "(String columnName)", "modifiers": "public static", "return": "String", "body": "public static String parseFacetField(String columnName) {\n        return columnName.substring(QueryConstants.REP_FACET.length() + 1, columnName.length() - 1);\n    }", "signature": "String parseFacetField(String columnName)", "full_signature": "public static String parseFacetField(String columnName)", "class_method_signature": "FulltextIndex.parseFacetField(String columnName)", "testcase": false, "constructor": false, "invocations": ["substring", "length", "length"]}, "repository": {"repo_id": 3657930, "url": "https://github.com/apache/jackrabbit-oak", "stars": 291, "created": "3/8/2012 8:00:14 AM +00:00", "updates": "2020-01-27T10:53:13+00:00", "fork": "False", "license": "licensed"}}