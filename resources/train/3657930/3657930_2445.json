{"test_class": {"identifier": "CugContextTest", "superclass": "extends AbstractCugTest", "interfaces": "implements NodeTypeConstants", "fields": [{"original_string": "private static String CUG_PATH = \"/content/a/rep:cugPolicy\";", "modifier": "private static", "type": "String", "declarator": "CUG_PATH = \"/content/a/rep:cugPolicy\"", "var_name": "CUG_PATH"}, {"original_string": "private static List<String> NO_CUG_PATH = ImmutableList.of(\n            \"/content\",\n            \"/content/a\",\n            \"/content/rep:policy\",\n            \"/content/rep:cugPolicy\",\n            \"/content/a/rep:cugPolicy/rep:principalNames\",\n            UNSUPPORTED_PATH + \"/rep:cugPolicy\"\n    );", "modifier": "private static", "type": "List<String>", "declarator": "NO_CUG_PATH = ImmutableList.of(\n            \"/content\",\n            \"/content/a\",\n            \"/content/rep:policy\",\n            \"/content/rep:cugPolicy\",\n            \"/content/a/rep:cugPolicy/rep:principalNames\",\n            UNSUPPORTED_PATH + \"/rep:cugPolicy\"\n    )", "var_name": "NO_CUG_PATH"}], "file": "oak-authorization-cug/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugContextTest.java"}, "test_case": {"identifier": "testDefinesTree", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDefinesTree() {\n        assertTrue(CugContext.INSTANCE.definesTree(root.getTree(CUG_PATH)));\n\n        for (String path : NO_CUG_PATH) {\n            assertFalse(path, CugContext.INSTANCE.definesTree(root.getTree(path)));\n        }\n    }", "signature": "void testDefinesTree()", "full_signature": "@Test public void testDefinesTree()", "class_method_signature": "CugContextTest.testDefinesTree()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "definesTree", "getTree", "assertFalse", "definesTree", "getTree"]}, "focal_class": {"identifier": "CugContext", "superclass": "", "interfaces": "implements Context, CugConstants", "fields": [{"original_string": "static final Context INSTANCE = new CugContext();", "modifier": "static final", "type": "Context", "declarator": "INSTANCE = new CugContext()", "var_name": "INSTANCE"}], "methods": [{"identifier": "CugContext", "parameters": "()", "modifiers": "private", "return": "", "signature": " CugContext()", "full_signature": "private  CugContext()", "class_method_signature": "CugContext.CugContext()", "testcase": false, "constructor": true}, {"identifier": "definesProperty", "parameters": "(@NotNull Tree parent, @NotNull PropertyState property)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean definesProperty(@NotNull Tree parent, @NotNull PropertyState property)", "full_signature": "@Override public boolean definesProperty(@NotNull Tree parent, @NotNull PropertyState property)", "class_method_signature": "CugContext.definesProperty(@NotNull Tree parent, @NotNull PropertyState property)", "testcase": false, "constructor": false}, {"identifier": "definesContextRoot", "parameters": "(@NotNull Tree tree)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean definesContextRoot(@NotNull Tree tree)", "full_signature": "@Override public boolean definesContextRoot(@NotNull Tree tree)", "class_method_signature": "CugContext.definesContextRoot(@NotNull Tree tree)", "testcase": false, "constructor": false}, {"identifier": "definesTree", "parameters": "(@NotNull Tree tree)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean definesTree(@NotNull Tree tree)", "full_signature": "@Override public boolean definesTree(@NotNull Tree tree)", "class_method_signature": "CugContext.definesTree(@NotNull Tree tree)", "testcase": false, "constructor": false}, {"identifier": "definesLocation", "parameters": "(@NotNull TreeLocation location)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean definesLocation(@NotNull TreeLocation location)", "full_signature": "@Override public boolean definesLocation(@NotNull TreeLocation location)", "class_method_signature": "CugContext.definesLocation(@NotNull TreeLocation location)", "testcase": false, "constructor": false}, {"identifier": "definesInternal", "parameters": "(@NotNull Tree tree)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean definesInternal(@NotNull Tree tree)", "full_signature": "@Override public boolean definesInternal(@NotNull Tree tree)", "class_method_signature": "CugContext.definesInternal(@NotNull Tree tree)", "testcase": false, "constructor": false}], "file": "oak-authorization-cug/src/main/java/org/apache/jackrabbit/oak/spi/security/authorization/cug/impl/CugContext.java"}, "focal_method": {"identifier": "definesTree", "parameters": "(@NotNull Tree tree)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean definesTree(@NotNull Tree tree) {\n        return CugUtil.definesCug(tree);\n    }", "signature": "boolean definesTree(@NotNull Tree tree)", "full_signature": "@Override public boolean definesTree(@NotNull Tree tree)", "class_method_signature": "CugContext.definesTree(@NotNull Tree tree)", "testcase": false, "constructor": false, "invocations": ["definesCug"]}, "repository": {"repo_id": 3657930, "url": "https://github.com/apache/jackrabbit-oak", "stars": 291, "created": "3/8/2012 8:00:14 AM +00:00", "updates": "2020-01-27T10:53:13+00:00", "fork": "False", "license": "licensed"}}