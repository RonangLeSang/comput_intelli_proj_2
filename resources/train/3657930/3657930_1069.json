{"test_class": {"identifier": "InternalSecurityProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ConfigurationParameters PARAMS = ConfigurationParameters.of(\"a\", \"value\");", "modifier": "private static final", "type": "ConfigurationParameters", "declarator": "PARAMS = ConfigurationParameters.of(\"a\", \"value\")", "var_name": "PARAMS"}, {"original_string": "private InternalSecurityProvider securityProvider = new InternalSecurityProvider();", "modifier": "private", "type": "InternalSecurityProvider", "declarator": "securityProvider = new InternalSecurityProvider()", "var_name": "securityProvider"}], "file": "oak-core/src/test/java/org/apache/jackrabbit/oak/security/internal/InternalSecurityProviderTest.java"}, "test_case": {"identifier": "testSetPrincipalConfiguration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetPrincipalConfiguration() {\n        PrincipalConfiguration pc = Mockito.mock(PrincipalConfiguration.class);\n        when(pc.getParameters()).thenReturn(PARAMS);\n\n        securityProvider.setPrincipalConfiguration(pc);\n\n        assertSame(pc, securityProvider.getConfiguration(PrincipalConfiguration.class));\n\n        for (SecurityConfiguration sc : securityProvider.getConfigurations()) {\n            if (sc instanceof PrincipalConfiguration) {\n                assertSame(pc, sc);\n            }\n        }\n        assertTrue(Iterables.contains(securityProvider.getConfigurations(), pc));\n\n        assertEquals(PARAMS, securityProvider.getParameters(PrincipalConfiguration.NAME));\n    }", "signature": "void testSetPrincipalConfiguration()", "full_signature": "@Test public void testSetPrincipalConfiguration()", "class_method_signature": "InternalSecurityProviderTest.testSetPrincipalConfiguration()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getParameters", "setPrincipalConfiguration", "assertSame", "getConfiguration", "getConfigurations", "assertSame", "assertTrue", "contains", "getConfigurations", "assertEquals", "getParameters"]}, "focal_class": {"identifier": "InternalSecurityProvider", "superclass": "", "interfaces": "implements SecurityProvider, WhiteboardAware", "fields": [{"original_string": "private AuthenticationConfiguration authenticationConfiguration;", "modifier": "private", "type": "AuthenticationConfiguration", "declarator": "authenticationConfiguration", "var_name": "authenticationConfiguration"}, {"original_string": "private AuthorizationConfiguration authorizationConfiguration;", "modifier": "private", "type": "AuthorizationConfiguration", "declarator": "authorizationConfiguration", "var_name": "authorizationConfiguration"}, {"original_string": "private UserConfiguration userConfiguration;", "modifier": "private", "type": "UserConfiguration", "declarator": "userConfiguration", "var_name": "userConfiguration"}, {"original_string": "private PrivilegeConfiguration privilegeConfiguration;", "modifier": "private", "type": "PrivilegeConfiguration", "declarator": "privilegeConfiguration", "var_name": "privilegeConfiguration"}, {"original_string": "private PrincipalConfiguration principalConfiguration;", "modifier": "private", "type": "PrincipalConfiguration", "declarator": "principalConfiguration", "var_name": "principalConfiguration"}, {"original_string": "private TokenConfiguration tokenConfiguration;", "modifier": "private", "type": "TokenConfiguration", "declarator": "tokenConfiguration", "var_name": "tokenConfiguration"}, {"original_string": "private Whiteboard whiteboard;", "modifier": "private", "type": "Whiteboard", "declarator": "whiteboard", "var_name": "whiteboard"}], "methods": [{"identifier": "getParameters", "parameters": "(@Nullable String name)", "modifiers": "@NotNull @Override public", "return": "ConfigurationParameters", "signature": "ConfigurationParameters getParameters(@Nullable String name)", "full_signature": "@NotNull @Override public ConfigurationParameters getParameters(@Nullable String name)", "class_method_signature": "InternalSecurityProvider.getParameters(@Nullable String name)", "testcase": false, "constructor": false}, {"identifier": "getSecurityConfigurationByName", "parameters": "(String name)", "modifiers": "private", "return": "SecurityConfiguration", "signature": "SecurityConfiguration getSecurityConfigurationByName(String name)", "full_signature": "private SecurityConfiguration getSecurityConfigurationByName(String name)", "class_method_signature": "InternalSecurityProvider.getSecurityConfigurationByName(String name)", "testcase": false, "constructor": false}, {"identifier": "getConfigurations", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "Iterable<? extends SecurityConfiguration>", "signature": "Iterable<? extends SecurityConfiguration> getConfigurations()", "full_signature": "@NotNull @Override public Iterable<? extends SecurityConfiguration> getConfigurations()", "class_method_signature": "InternalSecurityProvider.getConfigurations()", "testcase": false, "constructor": false}, {"identifier": "getConfiguration", "parameters": "(@NotNull Class<T> configurationClass)", "modifiers": "@NotNull @Override @SuppressWarnings(\"unchecked\") public", "return": "T", "signature": "T getConfiguration(@NotNull Class<T> configurationClass)", "full_signature": "@NotNull @Override @SuppressWarnings(\"unchecked\") public T getConfiguration(@NotNull Class<T> configurationClass)", "class_method_signature": "InternalSecurityProvider.getConfiguration(@NotNull Class<T> configurationClass)", "testcase": false, "constructor": false}, {"identifier": "setWhiteboard", "parameters": "(@NotNull Whiteboard whiteboard)", "modifiers": "@Override public", "return": "void", "signature": "void setWhiteboard(@NotNull Whiteboard whiteboard)", "full_signature": "@Override public void setWhiteboard(@NotNull Whiteboard whiteboard)", "class_method_signature": "InternalSecurityProvider.setWhiteboard(@NotNull Whiteboard whiteboard)", "testcase": false, "constructor": false}, {"identifier": "getWhiteboard", "parameters": "()", "modifiers": "@Override public", "return": "Whiteboard", "signature": "Whiteboard getWhiteboard()", "full_signature": "@Override public Whiteboard getWhiteboard()", "class_method_signature": "InternalSecurityProvider.getWhiteboard()", "testcase": false, "constructor": false}, {"identifier": "setAuthenticationConfiguration", "parameters": "(AuthenticationConfiguration authenticationConfiguration)", "modifiers": "public", "return": "void", "signature": "void setAuthenticationConfiguration(AuthenticationConfiguration authenticationConfiguration)", "full_signature": "public void setAuthenticationConfiguration(AuthenticationConfiguration authenticationConfiguration)", "class_method_signature": "InternalSecurityProvider.setAuthenticationConfiguration(AuthenticationConfiguration authenticationConfiguration)", "testcase": false, "constructor": false}, {"identifier": "setAuthorizationConfiguration", "parameters": "(AuthorizationConfiguration authorizationConfiguration)", "modifiers": "public", "return": "void", "signature": "void setAuthorizationConfiguration(AuthorizationConfiguration authorizationConfiguration)", "full_signature": "public void setAuthorizationConfiguration(AuthorizationConfiguration authorizationConfiguration)", "class_method_signature": "InternalSecurityProvider.setAuthorizationConfiguration(AuthorizationConfiguration authorizationConfiguration)", "testcase": false, "constructor": false}, {"identifier": "setUserConfiguration", "parameters": "(UserConfiguration userConfiguration)", "modifiers": "public", "return": "void", "signature": "void setUserConfiguration(UserConfiguration userConfiguration)", "full_signature": "public void setUserConfiguration(UserConfiguration userConfiguration)", "class_method_signature": "InternalSecurityProvider.setUserConfiguration(UserConfiguration userConfiguration)", "testcase": false, "constructor": false}, {"identifier": "setPrivilegeConfiguration", "parameters": "(PrivilegeConfiguration privilegeConfiguration)", "modifiers": "public", "return": "void", "signature": "void setPrivilegeConfiguration(PrivilegeConfiguration privilegeConfiguration)", "full_signature": "public void setPrivilegeConfiguration(PrivilegeConfiguration privilegeConfiguration)", "class_method_signature": "InternalSecurityProvider.setPrivilegeConfiguration(PrivilegeConfiguration privilegeConfiguration)", "testcase": false, "constructor": false}, {"identifier": "setPrincipalConfiguration", "parameters": "(PrincipalConfiguration principalConfiguration)", "modifiers": "public", "return": "void", "signature": "void setPrincipalConfiguration(PrincipalConfiguration principalConfiguration)", "full_signature": "public void setPrincipalConfiguration(PrincipalConfiguration principalConfiguration)", "class_method_signature": "InternalSecurityProvider.setPrincipalConfiguration(PrincipalConfiguration principalConfiguration)", "testcase": false, "constructor": false}, {"identifier": "setTokenConfiguration", "parameters": "(TokenConfiguration tokenConfiguration)", "modifiers": "public", "return": "void", "signature": "void setTokenConfiguration(TokenConfiguration tokenConfiguration)", "full_signature": "public void setTokenConfiguration(TokenConfiguration tokenConfiguration)", "class_method_signature": "InternalSecurityProvider.setTokenConfiguration(TokenConfiguration tokenConfiguration)", "testcase": false, "constructor": false}], "file": "oak-core/src/main/java/org/apache/jackrabbit/oak/security/internal/InternalSecurityProvider.java"}, "focal_method": {"identifier": "setPrincipalConfiguration", "parameters": "(PrincipalConfiguration principalConfiguration)", "modifiers": "public", "return": "void", "body": "public void setPrincipalConfiguration(PrincipalConfiguration principalConfiguration) {\n        this.principalConfiguration = principalConfiguration;\n    }", "signature": "void setPrincipalConfiguration(PrincipalConfiguration principalConfiguration)", "full_signature": "public void setPrincipalConfiguration(PrincipalConfiguration principalConfiguration)", "class_method_signature": "InternalSecurityProvider.setPrincipalConfiguration(PrincipalConfiguration principalConfiguration)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 3657930, "url": "https://github.com/apache/jackrabbit-oak", "stars": 291, "created": "3/8/2012 8:00:14 AM +00:00", "updates": "2020-01-27T10:53:13+00:00", "fork": "False", "license": "licensed"}}