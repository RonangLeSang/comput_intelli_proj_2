{"test_class": {"identifier": "LocalIndexDirTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public TemporaryFolder temporaryFolder = new TemporaryFolder(new File(\"target\"));", "modifier": "@Rule\n    public", "type": "TemporaryFolder", "declarator": "temporaryFolder = new TemporaryFolder(new File(\"target\"))", "var_name": "temporaryFolder"}], "file": "oak-lucene/src/test/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/LocalIndexDirTest.java"}, "test_case": {"identifier": "comparison", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void comparison() throws Exception{\n        LocalIndexDir dir = new LocalIndexDir(createDirWithIndexMetaFile(new IndexMeta(\"/a/b\", 100)));\n        LocalIndexDir dir2 = new LocalIndexDir(createDirWithIndexMetaFile(new IndexMeta(\"/a/b/c\", 200)));\n        LocalIndexDir dir3 = new LocalIndexDir(createDirWithIndexMetaFile(new IndexMeta(\"/a\", 300)));\n\n        List<LocalIndexDir> dirs = Lists.newArrayList();\n        dirs.add(dir2);\n        dirs.add(dir);\n        dirs.add(dir3);\n\n        Collections.sort(dirs, Collections.<LocalIndexDir>reverseOrder());\n\n        assertEquals(\"/a\", dirs.get(0).getJcrPath());\n        assertEquals(\"/a/b/c\", dirs.get(1).getJcrPath());\n        assertEquals(\"/a/b\", dirs.get(2).getJcrPath());\n    }", "signature": "void comparison()", "full_signature": "@Test public void comparison()", "class_method_signature": "LocalIndexDirTest.comparison()", "testcase": true, "constructor": false, "invocations": ["createDirWithIndexMetaFile", "createDirWithIndexMetaFile", "createDirWithIndexMetaFile", "newArrayList", "add", "add", "add", "sort", "reverseOrder", "assertEquals", "getJcrPath", "get", "assertEquals", "getJcrPath", "get", "assertEquals", "getJcrPath", "get"]}, "focal_class": {"identifier": "LocalIndexDir", "superclass": "", "interfaces": "implements Comparable<LocalIndexDir>", "fields": [{"original_string": "final File dir;", "modifier": "final", "type": "File", "declarator": "dir", "var_name": "dir"}, {"original_string": "final IndexMeta indexMeta;", "modifier": "final", "type": "IndexMeta", "declarator": "indexMeta", "var_name": "indexMeta"}], "methods": [{"identifier": "LocalIndexDir", "parameters": "(File dir)", "modifiers": "public", "return": "", "signature": " LocalIndexDir(File dir)", "full_signature": "public  LocalIndexDir(File dir)", "class_method_signature": "LocalIndexDir.LocalIndexDir(File dir)", "testcase": false, "constructor": true}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long size()", "full_signature": "public long size()", "class_method_signature": "LocalIndexDir.size()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "LocalIndexDir.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "getJcrPath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getJcrPath()", "full_signature": "public String getJcrPath()", "class_method_signature": "LocalIndexDir.getJcrPath()", "testcase": false, "constructor": false}, {"identifier": "getFSPath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFSPath()", "full_signature": "public String getFSPath()", "class_method_signature": "LocalIndexDir.getFSPath()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(LocalIndexDir o)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(LocalIndexDir o)", "full_signature": "@Override public int compareTo(LocalIndexDir o)", "class_method_signature": "LocalIndexDir.compareTo(LocalIndexDir o)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "LocalIndexDir.toString()", "testcase": false, "constructor": false}, {"identifier": "isIndexDir", "parameters": "(File file)", "modifiers": "static", "return": "boolean", "signature": "boolean isIndexDir(File file)", "full_signature": "static boolean isIndexDir(File file)", "class_method_signature": "LocalIndexDir.isIndexDir(File file)", "testcase": false, "constructor": false}], "file": "oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/directory/LocalIndexDir.java"}, "focal_method": {"identifier": "getJcrPath", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getJcrPath() {\n        return indexMeta.indexPath;\n    }", "signature": "String getJcrPath()", "full_signature": "public String getJcrPath()", "class_method_signature": "LocalIndexDir.getJcrPath()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 3657930, "url": "https://github.com/apache/jackrabbit-oak", "stars": 291, "created": "3/8/2012 8:00:14 AM +00:00", "updates": "2020-01-27T10:53:13+00:00", "fork": "False", "license": "licensed"}}