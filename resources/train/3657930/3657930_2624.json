{"test_class": {"identifier": "DataStoreCacheUpgradeUtilsTest", "superclass": "extends AbstractDataStoreCacheTest", "interfaces": "", "fields": [{"original_string": "@Rule\n    public TemporaryFolder folder = new TemporaryFolder(new File(\"target\"));", "modifier": "@Rule\n    public", "type": "TemporaryFolder", "declarator": "folder = new TemporaryFolder(new File(\"target\"))", "var_name": "folder"}, {"original_string": "File homeDir;", "modifier": "", "type": "File", "declarator": "homeDir", "var_name": "homeDir"}, {"original_string": "File path;", "modifier": "", "type": "File", "declarator": "path", "var_name": "path"}, {"original_string": "File pendingUploads;", "modifier": "", "type": "File", "declarator": "pendingUploads", "var_name": "pendingUploads"}], "file": "oak-blob-plugins/src/test/java/org/apache/jackrabbit/oak/plugins/blob/DataStoreCacheUpgradeUtilsTest.java"}, "test_case": {"identifier": "upgrade", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void upgrade() throws Exception {\n        upgrade(true);\n    }", "signature": "void upgrade()", "full_signature": "@Test public void upgrade()", "class_method_signature": "DataStoreCacheUpgradeUtilsTest.upgrade()", "testcase": true, "constructor": false, "invocations": ["upgrade"]}, "focal_class": {"identifier": "DataStoreCacheUpgradeUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(DataStoreCacheUpgradeUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(DataStoreCacheUpgradeUtils.class)", "var_name": "LOG"}, {"original_string": "static final String UPLOAD_MAP = \"async-pending-uploads.ser\";", "modifier": "static final", "type": "String", "declarator": "UPLOAD_MAP = \"async-pending-uploads.ser\"", "var_name": "UPLOAD_MAP"}, {"original_string": "static final String UPLOAD_STAGING_DIR = UploadStagingCache.UPLOAD_STAGING_DIR;", "modifier": "static final", "type": "String", "declarator": "UPLOAD_STAGING_DIR = UploadStagingCache.UPLOAD_STAGING_DIR", "var_name": "UPLOAD_STAGING_DIR"}, {"original_string": "static final String DOWNLOAD_DIR = FileCache.DOWNLOAD_DIR;", "modifier": "static final", "type": "String", "declarator": "DOWNLOAD_DIR = FileCache.DOWNLOAD_DIR", "var_name": "DOWNLOAD_DIR"}], "methods": [{"identifier": "deSerializeUploadMap", "parameters": "(File homeDir)", "modifiers": "private static", "return": "Map<String, Long>", "signature": "Map<String, Long> deSerializeUploadMap(File homeDir)", "full_signature": "private static Map<String, Long> deSerializeUploadMap(File homeDir)", "class_method_signature": "DataStoreCacheUpgradeUtils.deSerializeUploadMap(File homeDir)", "testcase": false, "constructor": false}, {"identifier": "deleteSerializedUploadMap", "parameters": "(File homeDir)", "modifiers": "private static", "return": "void", "signature": "void deleteSerializedUploadMap(File homeDir)", "full_signature": "private static void deleteSerializedUploadMap(File homeDir)", "class_method_signature": "DataStoreCacheUpgradeUtils.deleteSerializedUploadMap(File homeDir)", "testcase": false, "constructor": false}, {"identifier": "notInExceptions", "parameters": "(File file, List<String> exceptions)", "modifiers": "private static", "return": "boolean", "signature": "boolean notInExceptions(File file, List<String> exceptions)", "full_signature": "private static boolean notInExceptions(File file, List<String> exceptions)", "class_method_signature": "DataStoreCacheUpgradeUtils.notInExceptions(File file, List<String> exceptions)", "testcase": false, "constructor": false}, {"identifier": "moveDownloadCache", "parameters": "(final File path)", "modifiers": "public static", "return": "void", "signature": "void moveDownloadCache(final File path)", "full_signature": "public static void moveDownloadCache(final File path)", "class_method_signature": "DataStoreCacheUpgradeUtils.moveDownloadCache(final File path)", "testcase": false, "constructor": false}, {"identifier": "movePendingUploadsToStaging", "parameters": "(File homeDir, File path, boolean deleteMap)", "modifiers": "public static", "return": "void", "signature": "void movePendingUploadsToStaging(File homeDir, File path, boolean deleteMap)", "full_signature": "public static void movePendingUploadsToStaging(File homeDir, File path, boolean deleteMap)", "class_method_signature": "DataStoreCacheUpgradeUtils.movePendingUploadsToStaging(File homeDir, File path, boolean deleteMap)", "testcase": false, "constructor": false}, {"identifier": "upgrade", "parameters": "(File homeDir, File path, boolean moveCache, boolean deleteMap)", "modifiers": "public static", "return": "void", "signature": "void upgrade(File homeDir, File path, boolean moveCache, boolean deleteMap)", "full_signature": "public static void upgrade(File homeDir, File path, boolean moveCache, boolean deleteMap)", "class_method_signature": "DataStoreCacheUpgradeUtils.upgrade(File homeDir, File path, boolean moveCache, boolean deleteMap)", "testcase": false, "constructor": false}], "file": "oak-blob-plugins/src/main/java/org/apache/jackrabbit/oak/plugins/blob/DataStoreCacheUpgradeUtils.java"}, "focal_method": {"identifier": "upgrade", "parameters": "(File homeDir, File path, boolean moveCache, boolean deleteMap)", "modifiers": "public static", "return": "void", "body": "public static void upgrade(File homeDir, File path, boolean moveCache, boolean deleteMap) {\n        movePendingUploadsToStaging(homeDir, path, deleteMap);\n\n        if (moveCache) {\n            moveDownloadCache(path);\n        }\n    }", "signature": "void upgrade(File homeDir, File path, boolean moveCache, boolean deleteMap)", "full_signature": "public static void upgrade(File homeDir, File path, boolean moveCache, boolean deleteMap)", "class_method_signature": "DataStoreCacheUpgradeUtils.upgrade(File homeDir, File path, boolean moveCache, boolean deleteMap)", "testcase": false, "constructor": false, "invocations": ["movePendingUploadsToStaging", "moveDownloadCache"]}, "repository": {"repo_id": 3657930, "url": "https://github.com/apache/jackrabbit-oak", "stars": 291, "created": "3/8/2012 8:00:14 AM +00:00", "updates": "2020-01-27T10:53:13+00:00", "fork": "False", "license": "licensed"}}