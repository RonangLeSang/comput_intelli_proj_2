{"test_class": {"identifier": "OpenAuthorizationConfigurationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final OpenAuthorizationConfiguration config = new OpenAuthorizationConfiguration();", "modifier": "private final", "type": "OpenAuthorizationConfiguration", "declarator": "config = new OpenAuthorizationConfiguration()", "var_name": "config"}], "file": "oak-security-spi/src/test/java/org/apache/jackrabbit/oak/spi/security/authorization/OpenAuthorizationConfigurationTest.java"}, "test_case": {"identifier": "testGetRestrictionProvider", "parameters": "()", "modifiers": "@Test(expected = UnsupportedOperationException.class) public", "return": "void", "body": "@Test(expected = UnsupportedOperationException.class)\n    public void testGetRestrictionProvider() {\n        config.getRestrictionProvider();\n    }", "signature": "void testGetRestrictionProvider()", "full_signature": "@Test(expected = UnsupportedOperationException.class) public void testGetRestrictionProvider()", "class_method_signature": "OpenAuthorizationConfigurationTest.testGetRestrictionProvider()", "testcase": true, "constructor": false, "invocations": ["getRestrictionProvider"]}, "focal_class": {"identifier": "OpenAuthorizationConfiguration", "superclass": "extends SecurityConfiguration.Default", "interfaces": "implements AuthorizationConfiguration", "fields": [], "methods": [{"identifier": "getAccessControlManager", "parameters": "(@NotNull Root root, @NotNull NamePathMapper namePathMapper)", "modifiers": "@NotNull @Override public", "return": "AccessControlManager", "signature": "AccessControlManager getAccessControlManager(@NotNull Root root, @NotNull NamePathMapper namePathMapper)", "full_signature": "@NotNull @Override public AccessControlManager getAccessControlManager(@NotNull Root root, @NotNull NamePathMapper namePathMapper)", "class_method_signature": "OpenAuthorizationConfiguration.getAccessControlManager(@NotNull Root root, @NotNull NamePathMapper namePathMapper)", "testcase": false, "constructor": false}, {"identifier": "getRestrictionProvider", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "RestrictionProvider", "signature": "RestrictionProvider getRestrictionProvider()", "full_signature": "@NotNull @Override public RestrictionProvider getRestrictionProvider()", "class_method_signature": "OpenAuthorizationConfiguration.getRestrictionProvider()", "testcase": false, "constructor": false}, {"identifier": "getPermissionProvider", "parameters": "(@NotNull Root root, @NotNull String workspaceName, @NotNull Set<Principal> principals)", "modifiers": "@NotNull @Override public", "return": "PermissionProvider", "signature": "PermissionProvider getPermissionProvider(@NotNull Root root, @NotNull String workspaceName, @NotNull Set<Principal> principals)", "full_signature": "@NotNull @Override public PermissionProvider getPermissionProvider(@NotNull Root root, @NotNull String workspaceName, @NotNull Set<Principal> principals)", "class_method_signature": "OpenAuthorizationConfiguration.getPermissionProvider(@NotNull Root root, @NotNull String workspaceName, @NotNull Set<Principal> principals)", "testcase": false, "constructor": false}], "file": "oak-security-spi/src/main/java/org/apache/jackrabbit/oak/spi/security/authorization/OpenAuthorizationConfiguration.java"}, "focal_method": {"identifier": "getRestrictionProvider", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "RestrictionProvider", "body": "@NotNull\n    @Override\n    public RestrictionProvider getRestrictionProvider() {\n        throw new UnsupportedOperationException();\n    }", "signature": "RestrictionProvider getRestrictionProvider()", "full_signature": "@NotNull @Override public RestrictionProvider getRestrictionProvider()", "class_method_signature": "OpenAuthorizationConfiguration.getRestrictionProvider()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 3657930, "url": "https://github.com/apache/jackrabbit-oak", "stars": 291, "created": "3/8/2012 8:00:14 AM +00:00", "updates": "2020-01-27T10:53:13+00:00", "fork": "False", "license": "licensed"}}