{"test_class": {"identifier": "DBURITest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String C_TEST_DEFAULTS = \"jdbc:oracle:testdefault://192.168.100.21:1521/ORCL\";", "modifier": "static final", "type": "String", "declarator": "C_TEST_DEFAULTS = \"jdbc:oracle:testdefault://192.168.100.21:1521/ORCL\"", "var_name": "C_TEST_DEFAULTS"}, {"original_string": "static final String C_DEFAULT_USER = \"scott\";", "modifier": "static final", "type": "String", "declarator": "C_DEFAULT_USER = \"scott\"", "var_name": "C_DEFAULT_USER"}, {"original_string": "static final String C_DEFAULT_PASSWORD = \"tiger\";", "modifier": "static final", "type": "String", "declarator": "C_DEFAULT_PASSWORD = \"tiger\"", "var_name": "C_DEFAULT_PASSWORD"}, {"original_string": "static final String C_DEFAULT_LANGUAGES = \"java,plsql\";", "modifier": "static final", "type": "String", "declarator": "C_DEFAULT_LANGUAGES = \"java,plsql\"", "var_name": "C_DEFAULT_LANGUAGES"}, {"original_string": "static final String C_DEFAULT_SCHEMAS = \"scott,system\";", "modifier": "static final", "type": "String", "declarator": "C_DEFAULT_SCHEMAS = \"scott,system\"", "var_name": "C_DEFAULT_SCHEMAS"}, {"original_string": "static final String C_DEFAULT_SOURCE_CODE_TYPES = \"table,view\";", "modifier": "static final", "type": "String", "declarator": "C_DEFAULT_SOURCE_CODE_TYPES = \"table,view\"", "var_name": "C_DEFAULT_SOURCE_CODE_TYPES"}, {"original_string": "static final String C_DEFAULT_SOURCE_CODE_NAMES = \"emp,dept\";", "modifier": "static final", "type": "String", "declarator": "C_DEFAULT_SOURCE_CODE_NAMES = \"emp,dept\"", "var_name": "C_DEFAULT_SOURCE_CODE_NAMES"}, {"original_string": "static final String C_DEFAULT_CHARACTERSET = \"utf8\";", "modifier": "static final", "type": "String", "declarator": "C_DEFAULT_CHARACTERSET = \"utf8\"", "var_name": "C_DEFAULT_CHARACTERSET"}, {"original_string": "static final String C_TEST_EXPLICIT = \"jdbc:oracle:testdefault:system/oracle@//192.168.100.21:1521/ORCL?characterset=us7ascii&schemas=scott,hr,sh,system&sourcecodetypes=procedures,functions,triggers,package,types&languages=plsql,java&sourcecodenames=PKG_%25%25,PRC_%25%25\";", "modifier": "static final", "type": "String", "declarator": "C_TEST_EXPLICIT = \"jdbc:oracle:testdefault:system/oracle@//192.168.100.21:1521/ORCL?characterset=us7ascii&schemas=scott,hr,sh,system&sourcecodetypes=procedures,functions,triggers,package,types&languages=plsql,java&sourcecodenames=PKG_%25%25,PRC_%25%25\"", "var_name": "C_TEST_EXPLICIT"}, {"original_string": "static final String C_EXPLICIT_USER = \"system\";", "modifier": "static final", "type": "String", "declarator": "C_EXPLICIT_USER = \"system\"", "var_name": "C_EXPLICIT_USER"}, {"original_string": "static final String C_EXPLICIT_PASSWORD = \"oracle\";", "modifier": "static final", "type": "String", "declarator": "C_EXPLICIT_PASSWORD = \"oracle\"", "var_name": "C_EXPLICIT_PASSWORD"}, {"original_string": "static final String C_EXPLICIT_LANGUAGES = \"plsql,java\";", "modifier": "static final", "type": "String", "declarator": "C_EXPLICIT_LANGUAGES = \"plsql,java\"", "var_name": "C_EXPLICIT_LANGUAGES"}, {"original_string": "static final String C_EXPLICIT_SCHEMAS = \"scott,hr,sh,system\";", "modifier": "static final", "type": "String", "declarator": "C_EXPLICIT_SCHEMAS = \"scott,hr,sh,system\"", "var_name": "C_EXPLICIT_SCHEMAS"}, {"original_string": "static final String C_EXPLICIT_SOURCE_CODE_TYPES = \"procedures,functions,triggers,package,types\";", "modifier": "static final", "type": "String", "declarator": "C_EXPLICIT_SOURCE_CODE_TYPES = \"procedures,functions,triggers,package,types\"", "var_name": "C_EXPLICIT_SOURCE_CODE_TYPES"}, {"original_string": "static final String C_EXPLICIT_SOURCE_CODE_NAMES = \"PKG_%%,PRC_%%\";", "modifier": "static final", "type": "String", "declarator": "C_EXPLICIT_SOURCE_CODE_NAMES = \"PKG_%%,PRC_%%\"", "var_name": "C_EXPLICIT_SOURCE_CODE_NAMES"}, {"original_string": "static final String C_EXPLICIT_CHARACTERSET = \"us7ascii\";", "modifier": "static final", "type": "String", "declarator": "C_EXPLICIT_CHARACTERSET = \"us7ascii\"", "var_name": "C_EXPLICIT_CHARACTERSET"}, {"original_string": "static final String C_TEST_URI = \"test?param1=x%261&param2=&param3=\";", "modifier": "static final", "type": "String", "declarator": "C_TEST_URI = \"test?param1=x%261&param2=&param3=\"", "var_name": "C_TEST_URI"}, {"original_string": "static final String C_ORACLE_OCI_1 = \"jdbc:oracle:oci:system/oracle@//192.168.100.21:1521/ORCL\";", "modifier": "static final", "type": "String", "declarator": "C_ORACLE_OCI_1 = \"jdbc:oracle:oci:system/oracle@//192.168.100.21:1521/ORCL\"", "var_name": "C_ORACLE_OCI_1"}, {"original_string": "static final String C_ORACLE_OCI_2 = \"jdbc:oracle:oci:system/oracle@//192.168.100.21:1521/ORCL?characterset=utf8&schemas=scott,hr,sh,system&sourcecodetypes=procedures,functions,triggers,package,types&languages=plsql,java\";", "modifier": "static final", "type": "String", "declarator": "C_ORACLE_OCI_2 = \"jdbc:oracle:oci:system/oracle@//192.168.100.21:1521/ORCL?characterset=utf8&schemas=scott,hr,sh,system&sourcecodetypes=procedures,functions,triggers,package,types&languages=plsql,java\"", "var_name": "C_ORACLE_OCI_2"}, {"original_string": "static final String C_ORACLE_OCI_3 = \"jdbc:oracle:oci:system/oracle@//myserver.com:1521/customer_db?characterset=utf8&schemas=scott,hr,sh,system&sourcecodetypes=procedures,functions,triggers,package,types&languages=plsql,java&sourcecodenames=PKG_%25%25,PRC_%25%25\";", "modifier": "static final", "type": "String", "declarator": "C_ORACLE_OCI_3 = \"jdbc:oracle:oci:system/oracle@//myserver.com:1521/customer_db?characterset=utf8&schemas=scott,hr,sh,system&sourcecodetypes=procedures,functions,triggers,package,types&languages=plsql,java&sourcecodenames=PKG_%25%25,PRC_%25%25\"", "var_name": "C_ORACLE_OCI_3"}, {"original_string": "static final String C_ORACLE_THIN_1 = \"jdbc:oracle:thin:system/oracle@//192.168.100.21:1521/ORCL\";", "modifier": "static final", "type": "String", "declarator": "C_ORACLE_THIN_1 = \"jdbc:oracle:thin:system/oracle@//192.168.100.21:1521/ORCL\"", "var_name": "C_ORACLE_THIN_1"}, {"original_string": "static final String C_ORACLE_THIN_2 = \"jdbc:oracle:thin:system/oracle@//192.168.100.21:1521/ORCL?characterset=utf8&schemas=scott,hr,sh,system&sourcecodetypes=procedures,functions,triggers,package,types&languages=plsql,java\";", "modifier": "static final", "type": "String", "declarator": "C_ORACLE_THIN_2 = \"jdbc:oracle:thin:system/oracle@//192.168.100.21:1521/ORCL?characterset=utf8&schemas=scott,hr,sh,system&sourcecodetypes=procedures,functions,triggers,package,types&languages=plsql,java\"", "var_name": "C_ORACLE_THIN_2"}, {"original_string": "static final String C_ORACLE_THIN_3 = \"jdbc:oracle:thin:system/oracle@//myserver.com:1521/customer_db?characterset=utf8&schemas=scott,hr,sh,system&sourcecodetypes=procedures,functions,triggers,package,types&languages=plsql,java&sourcecodenames=PKG_%25%25,PRC_%25%25\";", "modifier": "static final", "type": "String", "declarator": "C_ORACLE_THIN_3 = \"jdbc:oracle:thin:system/oracle@//myserver.com:1521/customer_db?characterset=utf8&schemas=scott,hr,sh,system&sourcecodetypes=procedures,functions,triggers,package,types&languages=plsql,java&sourcecodenames=PKG_%25%25,PRC_%25%25\"", "var_name": "C_ORACLE_THIN_3"}, {"original_string": "static final String C_POSTGRES_1 = \"jdbc:postgresql://host/database\";", "modifier": "static final", "type": "String", "declarator": "C_POSTGRES_1 = \"jdbc:postgresql://host/database\"", "var_name": "C_POSTGRES_1"}, {"original_string": "static final String C_HTTP = \"http://localhost:80?characterset=utf8&schemas=scott,hr,sh,system&sourcecodetypes=procedures,functions,triggers,package,types&languages=plsql,java\";", "modifier": "static final", "type": "String", "declarator": "C_HTTP = \"http://localhost:80?characterset=utf8&schemas=scott,hr,sh,system&sourcecodetypes=procedures,functions,triggers,package,types&languages=plsql,java\"", "var_name": "C_HTTP"}], "file": "pmd-core/src/test/java/net/sourceforge/pmd/util/database/DBURITest.java"}, "test_case": {"identifier": "testSetSourceCodeTypesList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetSourceCodeTypesList() throws URISyntaxException, Exception {\n        System.out.println(\"setSourceCodeTypesList\");\n        List<String> sourcecodetypesList = Arrays.asList(\"procedures,functions,triggers,package,types\".split(\",\"));\n        DBURI instance = new DBURI(C_ORACLE_OCI_1);\n        instance.setSourceCodeTypesList(sourcecodetypesList);\n        // TODO review the generated test code and remove the default call to\n        // fail.\n        // fail(\"The test case is a prototype.\");\n    }", "signature": "void testSetSourceCodeTypesList()", "full_signature": "@Test public void testSetSourceCodeTypesList()", "class_method_signature": "DBURITest.testSetSourceCodeTypesList()", "testcase": true, "constructor": false, "invocations": ["println", "asList", "split", "setSourceCodeTypesList"]}, "focal_class": {"identifier": "DBURI", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CLASS_NAME = DBURI.class.getCanonicalName();", "modifier": "private static final", "type": "String", "declarator": "CLASS_NAME = DBURI.class.getCanonicalName()", "var_name": "CLASS_NAME"}, {"original_string": "private static final Logger LOGGER = Logger.getLogger(CLASS_NAME);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(CLASS_NAME)", "var_name": "LOGGER"}, {"original_string": "private URI uri;", "modifier": "private", "type": "URI", "declarator": "uri", "var_name": "uri"}, {"original_string": "private DBType dbType;", "modifier": "private", "type": "DBType", "declarator": "dbType", "var_name": "dbType"}, {"original_string": "private String url;", "modifier": "private", "type": "String", "declarator": "url", "var_name": "url"}, {"original_string": "private String subprotocol;", "modifier": "private", "type": "String", "declarator": "subprotocol", "var_name": "subprotocol"}, {"original_string": "private String subnamePrefix;", "modifier": "private", "type": "String", "declarator": "subnamePrefix", "var_name": "subnamePrefix"}, {"original_string": "private Map<String, String> parameters;", "modifier": "private", "type": "Map<String, String>", "declarator": "parameters", "var_name": "parameters"}, {"original_string": "private List<String> schemasList;", "modifier": "private", "type": "List<String>", "declarator": "schemasList", "var_name": "schemasList"}, {"original_string": "private List<String> sourceCodeTypesList;", "modifier": "private", "type": "List<String>", "declarator": "sourceCodeTypesList", "var_name": "sourceCodeTypesList"}, {"original_string": "private List<String> sourceCodeNamesList;", "modifier": "private", "type": "List<String>", "declarator": "sourceCodeNamesList", "var_name": "sourceCodeNamesList"}, {"original_string": "private List<String> languagesList;", "modifier": "private", "type": "List<String>", "declarator": "languagesList", "var_name": "languagesList"}, {"original_string": "private String driverClass;", "modifier": "private", "type": "String", "declarator": "driverClass", "var_name": "driverClass"}, {"original_string": "private String characterSet;", "modifier": "private", "type": "String", "declarator": "characterSet", "var_name": "characterSet"}, {"original_string": "private String sourceCodeTypes;", "modifier": "private", "type": "String", "declarator": "sourceCodeTypes", "var_name": "sourceCodeTypes"}, {"original_string": "private String sourceCodeNames;", "modifier": "private", "type": "String", "declarator": "sourceCodeNames", "var_name": "sourceCodeNames"}, {"original_string": "private String languages;", "modifier": "private", "type": "String", "declarator": "languages", "var_name": "languages"}, {"original_string": "private int sourceCodeType;", "modifier": "private", "type": "int", "declarator": "sourceCodeType", "var_name": "sourceCodeType"}], "methods": [{"identifier": "DBURI", "parameters": "(String string)", "modifiers": "public", "return": "", "signature": " DBURI(String string)", "full_signature": "public  DBURI(String string)", "class_method_signature": "DBURI.DBURI(String string)", "testcase": false, "constructor": true}, {"identifier": "DBURI", "parameters": "(String scheme, String userInfo, String host, int port, String path, String query, String fragment)", "modifiers": "public", "return": "", "signature": " DBURI(String scheme, String userInfo, String host, int port, String path, String query, String fragment)", "full_signature": "public  DBURI(String scheme, String userInfo, String host, int port, String path, String query, String fragment)", "class_method_signature": "DBURI.DBURI(String scheme, String userInfo, String host, int port, String path, String query, String fragment)", "testcase": false, "constructor": true}, {"identifier": "getParameterMap", "parameters": "(URI dburi)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> getParameterMap(URI dburi)", "full_signature": "private Map<String, String> getParameterMap(URI dburi)", "class_method_signature": "DBURI.getParameterMap(URI dburi)", "testcase": false, "constructor": false}, {"identifier": "dump", "parameters": "(String description, URI dburi)", "modifiers": "static", "return": "void", "signature": "void dump(String description, URI dburi)", "full_signature": "static void dump(String description, URI dburi)", "class_method_signature": "DBURI.dump(String description, URI dburi)", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "()", "modifiers": "public", "return": "URI", "signature": "URI getUri()", "full_signature": "public URI getUri()", "class_method_signature": "DBURI.getUri()", "testcase": false, "constructor": false}, {"identifier": "setUri", "parameters": "(URI uri)", "modifiers": "public", "return": "void", "signature": "void setUri(URI uri)", "full_signature": "public void setUri(URI uri)", "class_method_signature": "DBURI.setUri(URI uri)", "testcase": false, "constructor": false}, {"identifier": "getDbType", "parameters": "()", "modifiers": "public", "return": "DBType", "signature": "DBType getDbType()", "full_signature": "public DBType getDbType()", "class_method_signature": "DBURI.getDbType()", "testcase": false, "constructor": false}, {"identifier": "setDbType", "parameters": "(DBType dbType)", "modifiers": "public", "return": "void", "signature": "void setDbType(DBType dbType)", "full_signature": "public void setDbType(DBType dbType)", "class_method_signature": "DBURI.setDbType(DBType dbType)", "testcase": false, "constructor": false}, {"identifier": "getSchemasList", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getSchemasList()", "full_signature": "public List<String> getSchemasList()", "class_method_signature": "DBURI.getSchemasList()", "testcase": false, "constructor": false}, {"identifier": "setSchemasList", "parameters": "(List<String> schemasList)", "modifiers": "public", "return": "void", "signature": "void setSchemasList(List<String> schemasList)", "full_signature": "public void setSchemasList(List<String> schemasList)", "class_method_signature": "DBURI.setSchemasList(List<String> schemasList)", "testcase": false, "constructor": false}, {"identifier": "getSourceCodeTypesList", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getSourceCodeTypesList()", "full_signature": "public List<String> getSourceCodeTypesList()", "class_method_signature": "DBURI.getSourceCodeTypesList()", "testcase": false, "constructor": false}, {"identifier": "setSourceCodeTypesList", "parameters": "(List<String> sourceCodeTypesList)", "modifiers": "public", "return": "void", "signature": "void setSourceCodeTypesList(List<String> sourceCodeTypesList)", "full_signature": "public void setSourceCodeTypesList(List<String> sourceCodeTypesList)", "class_method_signature": "DBURI.setSourceCodeTypesList(List<String> sourceCodeTypesList)", "testcase": false, "constructor": false}, {"identifier": "getSourceCodeNamesList", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getSourceCodeNamesList()", "full_signature": "public List<String> getSourceCodeNamesList()", "class_method_signature": "DBURI.getSourceCodeNamesList()", "testcase": false, "constructor": false}, {"identifier": "setSourceCodeNamesList", "parameters": "(List<String> sourceCodeNamesList)", "modifiers": "public", "return": "void", "signature": "void setSourceCodeNamesList(List<String> sourceCodeNamesList)", "full_signature": "public void setSourceCodeNamesList(List<String> sourceCodeNamesList)", "class_method_signature": "DBURI.setSourceCodeNamesList(List<String> sourceCodeNamesList)", "testcase": false, "constructor": false}, {"identifier": "getLanguagesList", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getLanguagesList()", "full_signature": "public List<String> getLanguagesList()", "class_method_signature": "DBURI.getLanguagesList()", "testcase": false, "constructor": false}, {"identifier": "setLanguagesList", "parameters": "(List<String> languagesList)", "modifiers": "public", "return": "void", "signature": "void setLanguagesList(List<String> languagesList)", "full_signature": "public void setLanguagesList(List<String> languagesList)", "class_method_signature": "DBURI.setLanguagesList(List<String> languagesList)", "testcase": false, "constructor": false}, {"identifier": "getDriverClass", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDriverClass()", "full_signature": "public String getDriverClass()", "class_method_signature": "DBURI.getDriverClass()", "testcase": false, "constructor": false}, {"identifier": "setDriverClass", "parameters": "(String driverClass)", "modifiers": "public", "return": "void", "signature": "void setDriverClass(String driverClass)", "full_signature": "public void setDriverClass(String driverClass)", "class_method_signature": "DBURI.setDriverClass(String driverClass)", "testcase": false, "constructor": false}, {"identifier": "getCharacterSet", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCharacterSet()", "full_signature": "public String getCharacterSet()", "class_method_signature": "DBURI.getCharacterSet()", "testcase": false, "constructor": false}, {"identifier": "setCharacterSet", "parameters": "(String characterSet)", "modifiers": "public", "return": "void", "signature": "void setCharacterSet(String characterSet)", "full_signature": "public void setCharacterSet(String characterSet)", "class_method_signature": "DBURI.setCharacterSet(String characterSet)", "testcase": false, "constructor": false}, {"identifier": "getSourceCodeType", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSourceCodeType()", "full_signature": "public int getSourceCodeType()", "class_method_signature": "DBURI.getSourceCodeType()", "testcase": false, "constructor": false}, {"identifier": "setSourceCodeType", "parameters": "(int sourceCodeType)", "modifiers": "public", "return": "void", "signature": "void setSourceCodeType(int sourceCodeType)", "full_signature": "public void setSourceCodeType(int sourceCodeType)", "class_method_signature": "DBURI.setSourceCodeType(int sourceCodeType)", "testcase": false, "constructor": false}, {"identifier": "getSubprotocol", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSubprotocol()", "full_signature": "public String getSubprotocol()", "class_method_signature": "DBURI.getSubprotocol()", "testcase": false, "constructor": false}, {"identifier": "setSubprotocol", "parameters": "(String subprotocol)", "modifiers": "public", "return": "void", "signature": "void setSubprotocol(String subprotocol)", "full_signature": "public void setSubprotocol(String subprotocol)", "class_method_signature": "DBURI.setSubprotocol(String subprotocol)", "testcase": false, "constructor": false}, {"identifier": "getSubnamePrefix", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSubnamePrefix()", "full_signature": "public String getSubnamePrefix()", "class_method_signature": "DBURI.getSubnamePrefix()", "testcase": false, "constructor": false}, {"identifier": "setSubnamePrefix", "parameters": "(String subnamePrefix)", "modifiers": "public", "return": "void", "signature": "void setSubnamePrefix(String subnamePrefix)", "full_signature": "public void setSubnamePrefix(String subnamePrefix)", "class_method_signature": "DBURI.setSubnamePrefix(String subnamePrefix)", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getParameters()", "full_signature": "public Map<String, String> getParameters()", "class_method_signature": "DBURI.getParameters()", "testcase": false, "constructor": false}, {"identifier": "setParameters", "parameters": "(Map<String, String> parameters)", "modifiers": "public", "return": "void", "signature": "void setParameters(Map<String, String> parameters)", "full_signature": "public void setParameters(Map<String, String> parameters)", "class_method_signature": "DBURI.setParameters(Map<String, String> parameters)", "testcase": false, "constructor": false}, {"identifier": "getURL", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getURL()", "full_signature": "public String getURL()", "class_method_signature": "DBURI.getURL()", "testcase": false, "constructor": false}, {"identifier": "setURL", "parameters": "(String jdbcURL)", "modifiers": "public", "return": "void", "signature": "void setURL(String jdbcURL)", "full_signature": "public void setURL(String jdbcURL)", "class_method_signature": "DBURI.setURL(String jdbcURL)", "testcase": false, "constructor": false}, {"identifier": "setFields", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setFields()", "full_signature": "private void setFields()", "class_method_signature": "DBURI.setFields()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DBURI.toString()", "testcase": false, "constructor": false}], "file": "pmd-core/src/main/java/net/sourceforge/pmd/util/database/DBURI.java"}, "focal_method": {"identifier": "setSourceCodeTypesList", "parameters": "(List<String> sourceCodeTypesList)", "modifiers": "public", "return": "void", "body": "public void setSourceCodeTypesList(List<String> sourceCodeTypesList) {\n        this.sourceCodeTypesList = sourceCodeTypesList;\n    }", "signature": "void setSourceCodeTypesList(List<String> sourceCodeTypesList)", "full_signature": "public void setSourceCodeTypesList(List<String> sourceCodeTypesList)", "class_method_signature": "DBURI.setSourceCodeTypesList(List<String> sourceCodeTypesList)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4992906, "url": "https://github.com/pmd/pmd", "stars": 2677, "created": "7/11/2012 6:03:00 PM +00:00", "updates": "2020-01-27T18:49:43+00:00", "fork": "False", "license": "licensed"}}