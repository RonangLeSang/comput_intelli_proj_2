{"test_class": {"identifier": "JavaQualifiedNameTest", "superclass": "", "interfaces": "", "fields": [], "file": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/JavaQualifiedNameTest.java"}, "test_case": {"identifier": "testGetType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetType() {\n        JavaTypeQualifiedName qname = QualifiedNameFactory.ofClass(ASTAdditiveExpression.class);\n        assertEquals(qname.getType(), ASTAdditiveExpression.class);\n    }", "signature": "void testGetType()", "full_signature": "@Test public void testGetType()", "class_method_signature": "JavaQualifiedNameTest.testGetType()", "testcase": true, "constructor": false, "invocations": ["ofClass", "assertEquals", "getType"]}, "focal_class": {"identifier": "JavaQualifiedName", "superclass": "", "interfaces": "implements QualifiedName", "fields": [{"original_string": "private String toString;", "modifier": "private", "type": "String", "declarator": "toString", "var_name": "toString"}, {"original_string": "private int hashCode;", "modifier": "private", "type": "int", "declarator": "hashCode", "var_name": "hashCode"}], "methods": [{"identifier": "getClassName", "parameters": "()", "modifiers": "@Override public abstract", "return": "JavaTypeQualifiedName", "signature": "JavaTypeQualifiedName getClassName()", "full_signature": "@Override public abstract JavaTypeQualifiedName getClassName()", "class_method_signature": "JavaQualifiedName.getClassName()", "testcase": false, "constructor": false}, {"identifier": "isLocalClass", "parameters": "()", "modifiers": "@Deprecated public", "return": "boolean", "signature": "boolean isLocalClass()", "full_signature": "@Deprecated public boolean isLocalClass()", "class_method_signature": "JavaQualifiedName.isLocalClass()", "testcase": false, "constructor": false}, {"identifier": "getClassSimpleName", "parameters": "()", "modifiers": "@Deprecated public", "return": "String", "signature": "String getClassSimpleName()", "full_signature": "@Deprecated public String getClassSimpleName()", "class_method_signature": "JavaQualifiedName.getClassSimpleName()", "testcase": false, "constructor": false}, {"identifier": "isUnnamedPackage", "parameters": "()", "modifiers": "@Deprecated public", "return": "boolean", "signature": "boolean isUnnamedPackage()", "full_signature": "@Deprecated public boolean isUnnamedPackage()", "class_method_signature": "JavaQualifiedName.isUnnamedPackage()", "testcase": false, "constructor": false}, {"identifier": "getOperation", "parameters": "()", "modifiers": "@Deprecated public", "return": "String", "signature": "String getOperation()", "full_signature": "@Deprecated public String getOperation()", "class_method_signature": "JavaQualifiedName.getOperation()", "testcase": false, "constructor": false}, {"identifier": "getPackages", "parameters": "()", "modifiers": "@Deprecated public", "return": "String[]", "signature": "String[] getPackages()", "full_signature": "@Deprecated public String[] getPackages()", "class_method_signature": "JavaQualifiedName.getPackages()", "testcase": false, "constructor": false}, {"identifier": "getClasses", "parameters": "()", "modifiers": "@Deprecated public", "return": "String[]", "signature": "String[] getClasses()", "full_signature": "@Deprecated public String[] getClasses()", "class_method_signature": "JavaQualifiedName.getClasses()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public final boolean equals(Object o)", "class_method_signature": "JavaQualifiedName.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "structurallyEquals", "parameters": "(JavaQualifiedName qname)", "modifiers": "protected abstract", "return": "boolean", "signature": "boolean structurallyEquals(JavaQualifiedName qname)", "full_signature": "protected abstract boolean structurallyEquals(JavaQualifiedName qname)", "class_method_signature": "JavaQualifiedName.structurallyEquals(JavaQualifiedName qname)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public final", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public final int hashCode()", "class_method_signature": "JavaQualifiedName.hashCode()", "testcase": false, "constructor": false}, {"identifier": "buildHashCode", "parameters": "()", "modifiers": "protected abstract", "return": "int", "signature": "int buildHashCode()", "full_signature": "protected abstract int buildHashCode()", "class_method_signature": "JavaQualifiedName.buildHashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public final", "return": "String", "signature": "String toString()", "full_signature": "@Override public final String toString()", "class_method_signature": "JavaQualifiedName.toString()", "testcase": false, "constructor": false}, {"identifier": "ofString", "parameters": "(String name)", "modifiers": "@Deprecated public static", "return": "JavaQualifiedName", "signature": "JavaQualifiedName ofString(String name)", "full_signature": "@Deprecated public static JavaQualifiedName ofString(String name)", "class_method_signature": "JavaQualifiedName.ofString(String name)", "testcase": false, "constructor": false}, {"identifier": "ofClass", "parameters": "(Class<?> clazz)", "modifiers": "@Deprecated public static", "return": "JavaQualifiedName", "signature": "JavaQualifiedName ofClass(Class<?> clazz)", "full_signature": "@Deprecated public static JavaQualifiedName ofClass(Class<?> clazz)", "class_method_signature": "JavaQualifiedName.ofClass(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "buildToString", "parameters": "()", "modifiers": "protected abstract", "return": "String", "signature": "String buildToString()", "full_signature": "protected abstract String buildToString()", "class_method_signature": "JavaQualifiedName.buildToString()", "testcase": false, "constructor": false}], "file": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/JavaQualifiedName.java"}, "focal_method": {"identifier": "ofClass", "parameters": "(Class<?> clazz)", "modifiers": "@Deprecated public static", "return": "JavaQualifiedName", "body": "@Deprecated\n    public static JavaQualifiedName ofClass(Class<?> clazz) {\n        return QualifiedNameFactory.ofClass(clazz);\n    }", "signature": "JavaQualifiedName ofClass(Class<?> clazz)", "full_signature": "@Deprecated public static JavaQualifiedName ofClass(Class<?> clazz)", "class_method_signature": "JavaQualifiedName.ofClass(Class<?> clazz)", "testcase": false, "constructor": false, "invocations": ["ofClass"]}, "repository": {"repo_id": 4992906, "url": "https://github.com/pmd/pmd", "stars": 2677, "created": "7/11/2012 6:03:00 PM +00:00", "updates": "2020-01-27T18:49:43+00:00", "fork": "False", "license": "licensed"}}