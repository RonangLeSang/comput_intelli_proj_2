{"test_class": {"identifier": "AccumulatingMetricsScopeTest", "superclass": "", "interfaces": "", "fields": [], "file": "amazon-kinesis-client/src/test/java/software/amazon/kinesis/metrics/AccumulatingMetricsScopeTest.java"}, "test_case": {"identifier": "testAccumulate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAccumulate() {\n        TestScope scope = new TestScope();\n\n        scope.addData(\"name\", 2.0, StandardUnit.COUNT);\n        scope.addData(\"name\", 3.0, StandardUnit.COUNT);\n        scope.assertMetrics(TestHelper.constructDatum(\"name\", StandardUnit.COUNT, 3.0, 2.0, 5.0, 2));\n    }", "signature": "void testAccumulate()", "full_signature": "@Test public void testAccumulate()", "class_method_signature": "AccumulatingMetricsScopeTest.testAccumulate()", "testcase": true, "constructor": false, "invocations": ["addData", "addData", "assertMetrics", "constructDatum"]}, "focal_class": {"identifier": "AccumulatingMetricsScope", "superclass": "extends EndingMetricsScope", "interfaces": "", "fields": [{"original_string": "protected Map<KeyType, MetricDatum> data = new HashMap<>();", "modifier": "protected", "type": "Map<KeyType, MetricDatum>", "declarator": "data = new HashMap<>()", "var_name": "data"}], "methods": [{"identifier": "addData", "parameters": "(String name, double value, StandardUnit unit)", "modifiers": "@Override public", "return": "void", "signature": "void addData(String name, double value, StandardUnit unit)", "full_signature": "@Override public void addData(String name, double value, StandardUnit unit)", "class_method_signature": "AccumulatingMetricsScope.addData(String name, double value, StandardUnit unit)", "testcase": false, "constructor": false}, {"identifier": "addData", "parameters": "(String name, double value, StandardUnit unit, MetricsLevel level)", "modifiers": "@Override public", "return": "void", "signature": "void addData(String name, double value, StandardUnit unit, MetricsLevel level)", "full_signature": "@Override public void addData(String name, double value, StandardUnit unit, MetricsLevel level)", "class_method_signature": "AccumulatingMetricsScope.addData(String name, double value, StandardUnit unit, MetricsLevel level)", "testcase": false, "constructor": false}, {"identifier": "getKey", "parameters": "(String name)", "modifiers": "protected abstract", "return": "KeyType", "signature": "KeyType getKey(String name)", "full_signature": "protected abstract KeyType getKey(String name)", "class_method_signature": "AccumulatingMetricsScope.getKey(String name)", "testcase": false, "constructor": false}, {"identifier": "addData", "parameters": "(KeyType key, String name, double value, StandardUnit unit)", "modifiers": "public", "return": "void", "signature": "void addData(KeyType key, String name, double value, StandardUnit unit)", "full_signature": "public void addData(KeyType key, String name, double value, StandardUnit unit)", "class_method_signature": "AccumulatingMetricsScope.addData(KeyType key, String name, double value, StandardUnit unit)", "testcase": false, "constructor": false}], "file": "amazon-kinesis-client/src/main/java/software/amazon/kinesis/metrics/AccumulatingMetricsScope.java"}, "focal_method": {"identifier": "addData", "parameters": "(String name, double value, StandardUnit unit)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void addData(String name, double value, StandardUnit unit) {\n        addData(getKey(name), name, value, unit);\n    }", "signature": "void addData(String name, double value, StandardUnit unit)", "full_signature": "@Override public void addData(String name, double value, StandardUnit unit)", "class_method_signature": "AccumulatingMetricsScope.addData(String name, double value, StandardUnit unit)", "testcase": false, "constructor": false, "invocations": ["addData", "getKey"]}, "repository": {"repo_id": 14212940, "url": "https://github.com/awslabs/amazon-kinesis-client", "language": "Java", "is_fork": false, "fork_count": 373, "stargazer_count": 504, "size": 2381, "license": "licensed"}}