{"test_class": {"identifier": "KinesisClientLibConfiguratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String credentialName1 = \"software.amazon.kinesis.multilang.config.KinesisClientLibConfiguratorTest$AlwaysSucceedCredentialsProvider\";", "modifier": "private", "type": "String", "declarator": "credentialName1 = \"software.amazon.kinesis.multilang.config.KinesisClientLibConfiguratorTest$AlwaysSucceedCredentialsProvider\"", "var_name": "credentialName1"}, {"original_string": "private String credentialName2 = \"software.amazon.kinesis.multilang.config.KinesisClientLibConfiguratorTest$AlwaysFailCredentialsProvider\";", "modifier": "private", "type": "String", "declarator": "credentialName2 = \"software.amazon.kinesis.multilang.config.KinesisClientLibConfiguratorTest$AlwaysFailCredentialsProvider\"", "var_name": "credentialName2"}, {"original_string": "private String credentialNameKinesis = \"software.amazon.kinesis.multilang.config.KinesisClientLibConfiguratorTest$AlwaysSucceedCredentialsProviderKinesis\";", "modifier": "private", "type": "String", "declarator": "credentialNameKinesis = \"software.amazon.kinesis.multilang.config.KinesisClientLibConfiguratorTest$AlwaysSucceedCredentialsProviderKinesis\"", "var_name": "credentialNameKinesis"}, {"original_string": "private String credentialNameDynamoDB = \"software.amazon.kinesis.multilang.config.KinesisClientLibConfiguratorTest$AlwaysSucceedCredentialsProviderDynamoDB\";", "modifier": "private", "type": "String", "declarator": "credentialNameDynamoDB = \"software.amazon.kinesis.multilang.config.KinesisClientLibConfiguratorTest$AlwaysSucceedCredentialsProviderDynamoDB\"", "var_name": "credentialNameDynamoDB"}, {"original_string": "private String credentialNameCloudWatch = \"software.amazon.kinesis.multilang.config.KinesisClientLibConfiguratorTest$AlwaysSucceedCredentialsProviderCloudWatch\";", "modifier": "private", "type": "String", "declarator": "credentialNameCloudWatch = \"software.amazon.kinesis.multilang.config.KinesisClientLibConfiguratorTest$AlwaysSucceedCredentialsProviderCloudWatch\"", "var_name": "credentialNameCloudWatch"}, {"original_string": "private KinesisClientLibConfigurator configurator = new KinesisClientLibConfigurator();", "modifier": "private", "type": "KinesisClientLibConfigurator", "declarator": "configurator = new KinesisClientLibConfigurator()", "var_name": "configurator"}, {"original_string": "@Rule\n    public final ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public final", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "@Mock\n    private ShardRecordProcessorFactory shardRecordProcessorFactory;", "modifier": "@Mock\n    private", "type": "ShardRecordProcessorFactory", "declarator": "shardRecordProcessorFactory", "var_name": "shardRecordProcessorFactory"}], "file": "amazon-kinesis-client-multilang/src/test/java/software/amazon/kinesis/multilang/config/KinesisClientLibConfiguratorTest.java"}, "test_case": {"identifier": "testWithMissingApplicationName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWithMissingApplicationName() {\n        thrown.expect(NullPointerException.class);\n        thrown.expectMessage(\"Application name is required\");\n\n        String test = StringUtils.join(new String[] { \"streamName = a\", \"AWSCredentialsProvider = \" + credentialName1,\n                \"workerId = 123\", \"failoverTimeMillis = 100\" }, '\\n');\n        InputStream input = new ByteArrayInputStream(test.getBytes());\n        configurator.getConfiguration(input);\n    }", "signature": "void testWithMissingApplicationName()", "full_signature": "@Test public void testWithMissingApplicationName()", "class_method_signature": "KinesisClientLibConfiguratorTest.testWithMissingApplicationName()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "join", "getBytes", "getConfiguration"]}, "focal_class": {"identifier": "KinesisClientLibConfigurator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ConvertUtilsBean convertUtilsBean;", "modifier": "private final", "type": "ConvertUtilsBean", "declarator": "convertUtilsBean", "var_name": "convertUtilsBean"}, {"original_string": "private final BeanUtilsBean utilsBean;", "modifier": "private final", "type": "BeanUtilsBean", "declarator": "utilsBean", "var_name": "utilsBean"}, {"original_string": "private final MultiLangDaemonConfiguration configuration;", "modifier": "private final", "type": "MultiLangDaemonConfiguration", "declarator": "configuration", "var_name": "configuration"}], "methods": [{"identifier": "KinesisClientLibConfigurator", "parameters": "()", "modifiers": "public", "return": "", "signature": " KinesisClientLibConfigurator()", "full_signature": "public  KinesisClientLibConfigurator()", "class_method_signature": "KinesisClientLibConfigurator.KinesisClientLibConfigurator()", "testcase": false, "constructor": true}, {"identifier": "getConfiguration", "parameters": "(Properties properties)", "modifiers": "public", "return": "MultiLangDaemonConfiguration", "signature": "MultiLangDaemonConfiguration getConfiguration(Properties properties)", "full_signature": "public MultiLangDaemonConfiguration getConfiguration(Properties properties)", "class_method_signature": "KinesisClientLibConfigurator.getConfiguration(Properties properties)", "testcase": false, "constructor": false}, {"identifier": "getConfiguration", "parameters": "(InputStream configStream)", "modifiers": "public", "return": "MultiLangDaemonConfiguration", "signature": "MultiLangDaemonConfiguration getConfiguration(InputStream configStream)", "full_signature": "public MultiLangDaemonConfiguration getConfiguration(InputStream configStream)", "class_method_signature": "KinesisClientLibConfigurator.getConfiguration(InputStream configStream)", "testcase": false, "constructor": false}], "file": "amazon-kinesis-client-multilang/src/main/java/software/amazon/kinesis/multilang/config/KinesisClientLibConfigurator.java"}, "focal_method": {"identifier": "getConfiguration", "parameters": "(Properties properties)", "modifiers": "public", "return": "MultiLangDaemonConfiguration", "body": "public MultiLangDaemonConfiguration getConfiguration(Properties properties) {\n        properties.entrySet().forEach(e -> {\n            try {\n                utilsBean.setProperty(configuration, (String) e.getKey(), e.getValue());\n            } catch (IllegalAccessException | InvocationTargetException ex) {\n                throw new RuntimeException(ex);\n            }\n        });\n\n        Validate.notBlank(configuration.getApplicationName(), \"Application name is required\");\n        Validate.notBlank(configuration.getStreamName(), \"Stream name is required\");\n        Validate.isTrue(configuration.getKinesisCredentialsProvider().isDirty(), \"A basic set of AWS credentials must be provided\");\n        return configuration;\n    }", "signature": "MultiLangDaemonConfiguration getConfiguration(Properties properties)", "full_signature": "public MultiLangDaemonConfiguration getConfiguration(Properties properties)", "class_method_signature": "KinesisClientLibConfigurator.getConfiguration(Properties properties)", "testcase": false, "constructor": false, "invocations": ["forEach", "entrySet", "setProperty", "getKey", "getValue", "notBlank", "getApplicationName", "notBlank", "getStreamName", "isTrue", "isDirty", "getKinesisCredentialsProvider"]}, "repository": {"repo_id": 14212940, "url": "https://github.com/awslabs/amazon-kinesis-client", "language": "Java", "is_fork": false, "fork_count": 373, "stargazer_count": 504, "size": 2381, "license": "licensed"}}