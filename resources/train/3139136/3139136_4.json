{"test_class": {"identifier": "DefaultResourceFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "trove/src/test/java/org/teatrove/trove/util/resources/DefaultResourceFactoryTest.java"}, "test_case": {"identifier": "testGetPropertiesClasspath", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetPropertiesClasspath() throws Exception {\n        System.setProperty(\"substitution\", \"TEST\");\n        ResourceFactory factory = \n            new DefaultResourceFactory(SubstitutionFactory.getDefaults());\n        PropertyMap properties = factory.getResourceAsProperties(\n            \"classpath:/org/teatrove/trove/util/resources/\".concat(\n                \"DefaultResourceFactoryTest.properties\"\n            )\n        );\n        \n        // verify properties\n        assertEquals(\"expected classpath type property\", \n                     \"classpath\", properties.getString(\"type\"));\n        \n        assertEquals(\"expected substitution properties\",\n                     \"TEST\", properties.getString(\"substitution\"));\n        \n        assertEquals(\"expected default properties\",\n                     \"VALID\", properties.getString(\"invalid\"));\n    }", "signature": "void testGetPropertiesClasspath()", "full_signature": "@Test public void testGetPropertiesClasspath()", "class_method_signature": "DefaultResourceFactoryTest.testGetPropertiesClasspath()", "testcase": true, "constructor": false, "invocations": ["setProperty", "getDefaults", "getResourceAsProperties", "concat", "assertEquals", "getString", "assertEquals", "getString", "assertEquals", "getString"]}, "focal_class": {"identifier": "DefaultResourceFactory", "superclass": "", "interfaces": "implements ResourceFactory", "fields": [{"original_string": "private static final DefaultResourceFactory INSTANCE = \n        new DefaultResourceFactory();", "modifier": "private static final", "type": "DefaultResourceFactory", "declarator": "INSTANCE = \n        new DefaultResourceFactory()", "var_name": "INSTANCE"}, {"original_string": "private PropertyMap substitutions;", "modifier": "private", "type": "PropertyMap", "declarator": "substitutions", "var_name": "substitutions"}], "methods": [{"identifier": "DefaultResourceFactory", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultResourceFactory()", "full_signature": "public  DefaultResourceFactory()", "class_method_signature": "DefaultResourceFactory.DefaultResourceFactory()", "testcase": false, "constructor": true}, {"identifier": "DefaultResourceFactory", "parameters": "(PropertyMap substitutions)", "modifiers": "public", "return": "", "signature": " DefaultResourceFactory(PropertyMap substitutions)", "full_signature": "public  DefaultResourceFactory(PropertyMap substitutions)", "class_method_signature": "DefaultResourceFactory.DefaultResourceFactory(PropertyMap substitutions)", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "DefaultResourceFactory", "signature": "DefaultResourceFactory getInstance()", "full_signature": "public static DefaultResourceFactory getInstance()", "class_method_signature": "DefaultResourceFactory.getInstance()", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "(String path)", "modifiers": "@Override public", "return": "URL", "signature": "URL getResource(String path)", "full_signature": "@Override public URL getResource(String path)", "class_method_signature": "DefaultResourceFactory.getResource(String path)", "testcase": false, "constructor": false}, {"identifier": "getResourceAsStream", "parameters": "(String path)", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream getResourceAsStream(String path)", "full_signature": "@Override public InputStream getResourceAsStream(String path)", "class_method_signature": "DefaultResourceFactory.getResourceAsStream(String path)", "testcase": false, "constructor": false}, {"identifier": "getResourceAsProperties", "parameters": "(String path)", "modifiers": "@Override public", "return": "PropertyMap", "signature": "PropertyMap getResourceAsProperties(String path)", "full_signature": "@Override public PropertyMap getResourceAsProperties(String path)", "class_method_signature": "DefaultResourceFactory.getResourceAsProperties(String path)", "testcase": false, "constructor": false}, {"identifier": "getResourceAsProperties", "parameters": "(String path, InputStream input)", "modifiers": "@Override public", "return": "PropertyMap", "signature": "PropertyMap getResourceAsProperties(String path, InputStream input)", "full_signature": "@Override public PropertyMap getResourceAsProperties(String path, InputStream input)", "class_method_signature": "DefaultResourceFactory.getResourceAsProperties(String path, InputStream input)", "testcase": false, "constructor": false}, {"identifier": "getResourceAsProperties", "parameters": "(String path, \n                                               PropertyMap substitutions)", "modifiers": "@Override public", "return": "PropertyMap", "signature": "PropertyMap getResourceAsProperties(String path, \n                                               PropertyMap substitutions)", "full_signature": "@Override public PropertyMap getResourceAsProperties(String path, \n                                               PropertyMap substitutions)", "class_method_signature": "DefaultResourceFactory.getResourceAsProperties(String path, \n                                               PropertyMap substitutions)", "testcase": false, "constructor": false}, {"identifier": "getResourceAsProperties", "parameters": "(String path, InputStream input,\n                                               PropertyMap substitutions)", "modifiers": "@Override public", "return": "PropertyMap", "signature": "PropertyMap getResourceAsProperties(String path, InputStream input,\n                                               PropertyMap substitutions)", "full_signature": "@Override public PropertyMap getResourceAsProperties(String path, InputStream input,\n                                               PropertyMap substitutions)", "class_method_signature": "DefaultResourceFactory.getResourceAsProperties(String path, InputStream input,\n                                               PropertyMap substitutions)", "testcase": false, "constructor": false}], "file": "trove/src/main/java/org/teatrove/trove/util/resources/DefaultResourceFactory.java"}, "focal_method": {"identifier": "getResourceAsProperties", "parameters": "(String path)", "modifiers": "@Override public", "return": "PropertyMap", "body": "@Override\n    public PropertyMap getResourceAsProperties(String path) \n        throws IOException {\n        \n        return getResourceAsProperties(path, this.substitutions);\n    }", "signature": "PropertyMap getResourceAsProperties(String path)", "full_signature": "@Override public PropertyMap getResourceAsProperties(String path)", "class_method_signature": "DefaultResourceFactory.getResourceAsProperties(String path)", "testcase": false, "constructor": false, "invocations": ["getResourceAsProperties"]}, "repository": {"repo_id": 3139136, "url": "https://github.com/teatrove/teatrove", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 41, "size": 10629, "license": "licensed"}}