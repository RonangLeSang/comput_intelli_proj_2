{"test_class": {"identifier": "AWSClientErrorRetryHandlerTest", "superclass": "", "interfaces": "", "fields": [], "file": "apis/sts/src/test/java/org/jclouds/aws/handlers/AWSClientErrorRetryHandlerTest.java"}, "test_case": {"identifier": "test409DoesBackoffAndRetryForCode", "parameters": "(String code)", "modifiers": "@Test(dataProvider = \"codes\") public", "return": "void", "body": "@Test(dataProvider = \"codes\")\n   public void test409DoesBackoffAndRetryForCode(String code) {\n\n      AWSUtils utils = createMock(AWSUtils.class);\n      BackoffLimitedRetryHandler backoffLimitedRetryHandler = createMock(BackoffLimitedRetryHandler.class);\n      HttpCommand command = createMock(HttpCommand.class);\n\n      HttpRequest putBucket = HttpRequest.builder().method(PUT)\n            .endpoint(\"https://adriancole-blobstore113.s3.amazonaws.com/\").build();\n\n      HttpResponse operationAborted = HttpResponse.builder().statusCode(CONFLICT.getStatusCode())\n            .payload(Payloads.newStringPayload(String.format(\"<Error><Code>%s</Code></Error>\", code))).build();\n\n      expect(command.getCurrentRequest()).andReturn(putBucket);\n\n      AWSError error = new AWSError();\n      error.setCode(code);\n\n      expect(utils.parseAWSErrorFromContent(putBucket, operationAborted)).andReturn(error);\n\n      expect(backoffLimitedRetryHandler.shouldRetryRequest(command, operationAborted)).andReturn(Boolean.TRUE);\n\n      replay(utils, backoffLimitedRetryHandler, command);\n\n      AWSClientErrorRetryHandler retry = new AWSClientErrorRetryHandler(utils, backoffLimitedRetryHandler,\n            ImmutableSet.<String> of(\"RequestTimeout\", \"OperationAborted\", \"SignatureDoesNotMatch\"));\n\n      assert retry.shouldRetryRequest(command, operationAborted);\n\n      verify(utils, backoffLimitedRetryHandler, command);\n\n   }", "signature": "void test409DoesBackoffAndRetryForCode(String code)", "full_signature": "@Test(dataProvider = \"codes\") public void test409DoesBackoffAndRetryForCode(String code)", "class_method_signature": "AWSClientErrorRetryHandlerTest.test409DoesBackoffAndRetryForCode(String code)", "testcase": true, "constructor": false, "invocations": ["createMock", "createMock", "createMock", "build", "endpoint", "method", "builder", "build", "payload", "statusCode", "builder", "getStatusCode", "newStringPayload", "format", "andReturn", "expect", "getCurrentRequest", "setCode", "andReturn", "expect", "parseAWSErrorFromContent", "andReturn", "expect", "shouldRetryRequest", "replay", "of", "shouldRetryRequest", "verify"]}, "focal_class": {"identifier": "AWSClientErrorRetryHandler", "superclass": "", "interfaces": "implements HttpRetryHandler", "fields": [{"original_string": "private final AWSUtils utils;", "modifier": "private final", "type": "AWSUtils", "declarator": "utils", "var_name": "utils"}, {"original_string": "private final BackoffLimitedRetryHandler backoffLimitedRetryHandler;", "modifier": "private final", "type": "BackoffLimitedRetryHandler", "declarator": "backoffLimitedRetryHandler", "var_name": "backoffLimitedRetryHandler"}, {"original_string": "private final Set<String> retryableCodes;", "modifier": "private final", "type": "Set<String>", "declarator": "retryableCodes", "var_name": "retryableCodes"}], "methods": [{"identifier": "AWSClientErrorRetryHandler", "parameters": "(AWSUtils utils, BackoffLimitedRetryHandler backoffLimitedRetryHandler,\n         @ClientError Set<String> retryableCodes)", "modifiers": "@Inject public", "return": "", "signature": " AWSClientErrorRetryHandler(AWSUtils utils, BackoffLimitedRetryHandler backoffLimitedRetryHandler,\n         @ClientError Set<String> retryableCodes)", "full_signature": "@Inject public  AWSClientErrorRetryHandler(AWSUtils utils, BackoffLimitedRetryHandler backoffLimitedRetryHandler,\n         @ClientError Set<String> retryableCodes)", "class_method_signature": "AWSClientErrorRetryHandler.AWSClientErrorRetryHandler(AWSUtils utils, BackoffLimitedRetryHandler backoffLimitedRetryHandler,\n         @ClientError Set<String> retryableCodes)", "testcase": false, "constructor": true}, {"identifier": "shouldRetryRequest", "parameters": "(HttpCommand command, HttpResponse response)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean shouldRetryRequest(HttpCommand command, HttpResponse response)", "full_signature": "@Override public boolean shouldRetryRequest(HttpCommand command, HttpResponse response)", "class_method_signature": "AWSClientErrorRetryHandler.shouldRetryRequest(HttpCommand command, HttpResponse response)", "testcase": false, "constructor": false}, {"identifier": "shouldRetryRequestOnError", "parameters": "(HttpCommand command, HttpResponse response, AWSError error)", "modifiers": "protected", "return": "boolean", "signature": "boolean shouldRetryRequestOnError(HttpCommand command, HttpResponse response, AWSError error)", "full_signature": "protected boolean shouldRetryRequestOnError(HttpCommand command, HttpResponse response, AWSError error)", "class_method_signature": "AWSClientErrorRetryHandler.shouldRetryRequestOnError(HttpCommand command, HttpResponse response, AWSError error)", "testcase": false, "constructor": false}], "file": "apis/sts/src/main/java/org/jclouds/aws/handlers/AWSClientErrorRetryHandler.java"}, "focal_method": {"identifier": "shouldRetryRequest", "parameters": "(HttpCommand command, HttpResponse response)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n   public boolean shouldRetryRequest(HttpCommand command, HttpResponse response) {\n      if (response.getStatusCode() == 400 || response.getStatusCode() == 403 || response.getStatusCode() == 409) {\n         // Content can be null in the case of HEAD requests\n         if (response.getPayload() != null) {\n            closeClientButKeepContentStream(response);\n            AWSError error = utils.parseAWSErrorFromContent(command.getCurrentRequest(), response);\n            if (error != null) {\n               return shouldRetryRequestOnError(command, response, error);\n            }\n         }\n      }\n      return false;\n   }", "signature": "boolean shouldRetryRequest(HttpCommand command, HttpResponse response)", "full_signature": "@Override public boolean shouldRetryRequest(HttpCommand command, HttpResponse response)", "class_method_signature": "AWSClientErrorRetryHandler.shouldRetryRequest(HttpCommand command, HttpResponse response)", "testcase": false, "constructor": false, "invocations": ["getStatusCode", "getStatusCode", "getStatusCode", "getPayload", "closeClientButKeepContentStream", "parseAWSErrorFromContent", "getCurrentRequest", "shouldRetryRequestOnError"]}, "repository": {"repo_id": 489859, "url": "https://github.com/jclouds/legacy-jclouds", "language": "Java", "is_fork": false, "fork_count": 231, "stargazer_count": 477, "size": 74892, "license": "licensed"}}