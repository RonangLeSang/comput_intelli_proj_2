{"test_class": {"identifier": "ObjectMD5Test", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ObjectMD5 fn = new ObjectMD5();", "modifier": "private", "type": "ObjectMD5", "declarator": "fn = new ObjectMD5()", "var_name": "fn"}], "file": "blobstore/src/test/java/org/jclouds/blobstore/functions/ObjectMD5Test.java"}, "test_case": {"identifier": "testAlreadyHasMD5", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testAlreadyHasMD5() {\n      Payload payload = Payloads.newPayload(\"foo\");\n      payload.getContentMetadata().setContentMD5(new byte[] {});\n      HttpMessage payloadEnclosing = HttpMessage.builder().payload(payload).build();\n      assertEquals(fn.apply(payloadEnclosing), new byte[] {});\n   }", "signature": "void testAlreadyHasMD5()", "full_signature": "@Test public void testAlreadyHasMD5()", "class_method_signature": "ObjectMD5Test.testAlreadyHasMD5()", "testcase": true, "constructor": false, "invocations": ["newPayload", "setContentMD5", "getContentMetadata", "build", "payload", "builder", "assertEquals", "apply"]}, "focal_class": {"identifier": "ObjectMD5", "superclass": "", "interfaces": "implements Function<Object, byte[]>", "fields": [], "methods": [{"identifier": "apply", "parameters": "(Object from)", "modifiers": "public", "return": "byte[]", "signature": "byte[] apply(Object from)", "full_signature": "public byte[] apply(Object from)", "class_method_signature": "ObjectMD5.apply(Object from)", "testcase": false, "constructor": false}], "file": "blobstore/src/main/java/org/jclouds/blobstore/functions/ObjectMD5.java"}, "focal_method": {"identifier": "apply", "parameters": "(Object from)", "modifiers": "public", "return": "byte[]", "body": "public byte[] apply(Object from) {\n      checkNotNull(from, \"thing to md5\");\n      PayloadEnclosing payloadEnclosing;\n      if (from instanceof PayloadEnclosing) {\n         payloadEnclosing = (PayloadEnclosing) from;\n      } else {\n         payloadEnclosing = HttpMessage.builder().payload(Payloads.newPayload(from)).build();\n      }\n      if (payloadEnclosing.getPayload().getContentMetadata().getContentMD5() == null)\n         try {\n            Payloads.calculateMD5(payloadEnclosing);\n         } catch (IOException e) {\n            Throwables.propagate(e);\n         }\n      return payloadEnclosing.getPayload().getContentMetadata().getContentMD5();\n   }", "signature": "byte[] apply(Object from)", "full_signature": "public byte[] apply(Object from)", "class_method_signature": "ObjectMD5.apply(Object from)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "build", "payload", "builder", "newPayload", "getContentMD5", "getContentMetadata", "getPayload", "calculateMD5", "propagate", "getContentMD5", "getContentMetadata", "getPayload"]}, "repository": {"repo_id": 489859, "url": "https://github.com/jclouds/legacy-jclouds", "language": "Java", "is_fork": false, "fork_count": 231, "stargazer_count": 477, "size": 74892, "license": "licensed"}}