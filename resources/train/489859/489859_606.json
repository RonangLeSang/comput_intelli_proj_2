{"test_class": {"identifier": "MetadataBundleListenerTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/jclouds/osgi/MetadataBundleListenerTest.java"}, "test_case": {"identifier": "testGetApiMetadataFromMultipleClassLoaders", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testGetApiMetadataFromMultipleClassLoaders() throws Exception {\n      ClassLoader isolatedClassLoader = createIsolatedClassLoader();\n      MetadataBundleListener listener = new MetadataBundleListener();\n      Bundle bundle = createMock(Bundle.class);\n      expect(bundle.getEntry(\"/META-INF/services/org.jclouds.apis.ApiMetadata\")).andReturn(\n            getClass().getResource(\"/META-INF/services/org.jclouds.apis.ApiMetadata\")).anyTimes();\n      expect(bundle.loadClass(\"org.jclouds.apis.JcloudsTestBlobStoreApiMetadata\")).andReturn(\n            isolatedClassLoader.loadClass(JcloudsTestBlobStoreApiMetadata.class.getName())).anyTimes();\n      expect(bundle.loadClass(\"org.jclouds.apis.JcloudsTestComputeApiMetadata\")).andReturn(\n            JcloudsTestComputeApiMetadata.class).anyTimes();\n      expect(bundle.loadClass(\"org.jclouds.apis.JcloudsTestYetAnotherComputeApiMetadata\")).andReturn(\n            JcloudsTestYetAnotherComputeApiMetadata.class).anyTimes();\n\n      replay(bundle);\n\n      List<ApiMetadata> apiMetadataList = Lists.newArrayList(listener.listApiMetadata(bundle));\n      assertNotNull(apiMetadataList);\n      assertEquals(2, apiMetadataList.size());\n      assertFalse(apiMetadataList.contains(new JcloudsTestBlobStoreApiMetadata()));\n      assertTrue(apiMetadataList.contains(new JcloudsTestComputeApiMetadata()));\n      assertTrue(apiMetadataList.contains(new JcloudsTestYetAnotherComputeApiMetadata()));\n      verify(bundle);\n   }", "signature": "void testGetApiMetadataFromMultipleClassLoaders()", "full_signature": "@Test public void testGetApiMetadataFromMultipleClassLoaders()", "class_method_signature": "MetadataBundleListenerTest.testGetApiMetadataFromMultipleClassLoaders()", "testcase": true, "constructor": false, "invocations": ["createIsolatedClassLoader", "createMock", "anyTimes", "andReturn", "expect", "getEntry", "getResource", "getClass", "anyTimes", "andReturn", "expect", "loadClass", "loadClass", "getName", "anyTimes", "andReturn", "expect", "loadClass", "anyTimes", "andReturn", "expect", "loadClass", "replay", "newArrayList", "listApiMetadata", "assertNotNull", "assertEquals", "size", "assertFalse", "contains", "assertTrue", "contains", "assertTrue", "contains", "verify"]}, "focal_class": {"identifier": "MetadataBundleListener", "superclass": "", "interfaces": "implements BundleListener", "fields": [{"original_string": "private final Multimap<Long, ProviderMetadata> providerMetadataMap = ArrayListMultimap.create();", "modifier": "private final", "type": "Multimap<Long, ProviderMetadata>", "declarator": "providerMetadataMap = ArrayListMultimap.create()", "var_name": "providerMetadataMap"}, {"original_string": "private final Multimap<Long, ApiMetadata> apiMetadataMap = ArrayListMultimap.create();", "modifier": "private final", "type": "Multimap<Long, ApiMetadata>", "declarator": "apiMetadataMap = ArrayListMultimap.create()", "var_name": "apiMetadataMap"}, {"original_string": "private final List<ProviderListener> providerListeners = Lists.newArrayList();", "modifier": "private final", "type": "List<ProviderListener>", "declarator": "providerListeners = Lists.newArrayList()", "var_name": "providerListeners"}, {"original_string": "private final List<ApiListener> apiListeners = Lists.newArrayList();", "modifier": "private final", "type": "List<ApiListener>", "declarator": "apiListeners = Lists.newArrayList()", "var_name": "apiListeners"}], "methods": [{"identifier": "start", "parameters": "(BundleContext bundleContext)", "modifiers": "public synchronized", "return": "void", "signature": "void start(BundleContext bundleContext)", "full_signature": "public synchronized void start(BundleContext bundleContext)", "class_method_signature": "MetadataBundleListener.start(BundleContext bundleContext)", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "(BundleContext bundleContext)", "modifiers": "public", "return": "void", "signature": "void stop(BundleContext bundleContext)", "full_signature": "public void stop(BundleContext bundleContext)", "class_method_signature": "MetadataBundleListener.stop(BundleContext bundleContext)", "testcase": false, "constructor": false}, {"identifier": "bundleChanged", "parameters": "(BundleEvent event)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void bundleChanged(BundleEvent event)", "full_signature": "@Override public synchronized void bundleChanged(BundleEvent event)", "class_method_signature": "MetadataBundleListener.bundleChanged(BundleEvent event)", "testcase": false, "constructor": false}, {"identifier": "addBundle", "parameters": "(Bundle bundle)", "modifiers": "private synchronized", "return": "void", "signature": "void addBundle(Bundle bundle)", "full_signature": "private synchronized void addBundle(Bundle bundle)", "class_method_signature": "MetadataBundleListener.addBundle(Bundle bundle)", "testcase": false, "constructor": false}, {"identifier": "removeBundle", "parameters": "(Bundle bundle)", "modifiers": "private synchronized", "return": "void", "signature": "void removeBundle(Bundle bundle)", "full_signature": "private synchronized void removeBundle(Bundle bundle)", "class_method_signature": "MetadataBundleListener.removeBundle(Bundle bundle)", "testcase": false, "constructor": false}, {"identifier": "listProviderMetadata", "parameters": "(Bundle bundle)", "modifiers": "public", "return": "Iterable<ProviderMetadata>", "signature": "Iterable<ProviderMetadata> listProviderMetadata(Bundle bundle)", "full_signature": "public Iterable<ProviderMetadata> listProviderMetadata(Bundle bundle)", "class_method_signature": "MetadataBundleListener.listProviderMetadata(Bundle bundle)", "testcase": false, "constructor": false}, {"identifier": "listApiMetadata", "parameters": "(Bundle bundle)", "modifiers": "public", "return": "Iterable<ApiMetadata>", "signature": "Iterable<ApiMetadata> listApiMetadata(Bundle bundle)", "full_signature": "public Iterable<ApiMetadata> listApiMetadata(Bundle bundle)", "class_method_signature": "MetadataBundleListener.listApiMetadata(Bundle bundle)", "testcase": false, "constructor": false}, {"identifier": "addProviderListener", "parameters": "(ProviderListener listener)", "modifiers": "public synchronized", "return": "void", "signature": "void addProviderListener(ProviderListener listener)", "full_signature": "public synchronized void addProviderListener(ProviderListener listener)", "class_method_signature": "MetadataBundleListener.addProviderListener(ProviderListener listener)", "testcase": false, "constructor": false}, {"identifier": "removeProviderListener", "parameters": "(ProviderListener listener)", "modifiers": "public synchronized", "return": "void", "signature": "void removeProviderListener(ProviderListener listener)", "full_signature": "public synchronized void removeProviderListener(ProviderListener listener)", "class_method_signature": "MetadataBundleListener.removeProviderListener(ProviderListener listener)", "testcase": false, "constructor": false}, {"identifier": "addApiListenerListener", "parameters": "(ApiListener listener)", "modifiers": "public synchronized", "return": "void", "signature": "void addApiListenerListener(ApiListener listener)", "full_signature": "public synchronized void addApiListenerListener(ApiListener listener)", "class_method_signature": "MetadataBundleListener.addApiListenerListener(ApiListener listener)", "testcase": false, "constructor": false}, {"identifier": "removeApiListenerListener", "parameters": "(ApiListener listener)", "modifiers": "public synchronized", "return": "void", "signature": "void removeApiListenerListener(ApiListener listener)", "full_signature": "public synchronized void removeApiListenerListener(ApiListener listener)", "class_method_signature": "MetadataBundleListener.removeApiListenerListener(ApiListener listener)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/jclouds/osgi/MetadataBundleListener.java"}, "focal_method": {"identifier": "listApiMetadata", "parameters": "(Bundle bundle)", "modifiers": "public", "return": "Iterable<ApiMetadata>", "body": "public Iterable<ApiMetadata> listApiMetadata(Bundle bundle) {\n      Iterable<String> classNames = stringsForResourceInBundle(\"/META-INF/services/org.jclouds.apis.ApiMetadata\", bundle);\n      return instantiateAvailableClasses(bundle, classNames, ApiMetadata.class);\n   }", "signature": "Iterable<ApiMetadata> listApiMetadata(Bundle bundle)", "full_signature": "public Iterable<ApiMetadata> listApiMetadata(Bundle bundle)", "class_method_signature": "MetadataBundleListener.listApiMetadata(Bundle bundle)", "testcase": false, "constructor": false, "invocations": ["stringsForResourceInBundle", "instantiateAvailableClasses"]}, "repository": {"repo_id": 489859, "url": "https://github.com/jclouds/legacy-jclouds", "language": "Java", "is_fork": false, "fork_count": 231, "stargazer_count": 477, "size": 74892, "license": "licensed"}}