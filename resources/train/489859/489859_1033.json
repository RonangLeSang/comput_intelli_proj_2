{"test_class": {"identifier": "BindUserIdGroupPairToSourceSecurityGroupFormParamsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Injector injector = Guice.createInjector();", "modifier": "", "type": "Injector", "declarator": "injector = Guice.createInjector()", "var_name": "injector"}, {"original_string": "BindUserIdGroupPairToSourceSecurityGroupFormParams binder = injector\n         .getInstance(BindUserIdGroupPairToSourceSecurityGroupFormParams.class);", "modifier": "", "type": "BindUserIdGroupPairToSourceSecurityGroupFormParams", "declarator": "binder = injector\n         .getInstance(BindUserIdGroupPairToSourceSecurityGroupFormParams.class)", "var_name": "binder"}], "file": "apis/ec2/src/test/java/org/jclouds/ec2/binders/BindUserIdGroupPairToSourceSecurityGroupFormParamsTest.java"}, "test_case": {"identifier": "testMustBeUserIdGroupPair", "parameters": "()", "modifiers": "@Test(expectedExceptions = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expectedExceptions = IllegalArgumentException.class)\n   public void testMustBeUserIdGroupPair() {\n      HttpRequest request = HttpRequest.builder().method(\"POST\").endpoint(\"http://localhost\").build();;\n      binder.bindToRequest(request, new File(\"foo\"));\n   }", "signature": "void testMustBeUserIdGroupPair()", "full_signature": "@Test(expectedExceptions = IllegalArgumentException.class) public void testMustBeUserIdGroupPair()", "class_method_signature": "BindUserIdGroupPairToSourceSecurityGroupFormParamsTest.testMustBeUserIdGroupPair()", "testcase": true, "constructor": false, "invocations": ["build", "endpoint", "method", "builder", "bindToRequest"]}, "focal_class": {"identifier": "BindUserIdGroupPairToSourceSecurityGroupFormParams", "superclass": "", "interfaces": "implements Binder", "fields": [], "methods": [{"identifier": "bindToRequest", "parameters": "(R request, Object input)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "R", "signature": "R bindToRequest(R request, Object input)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public R bindToRequest(R request, Object input)", "class_method_signature": "BindUserIdGroupPairToSourceSecurityGroupFormParams.bindToRequest(R request, Object input)", "testcase": false, "constructor": false}], "file": "apis/ec2/src/main/java/org/jclouds/ec2/binders/BindUserIdGroupPairToSourceSecurityGroupFormParams.java"}, "focal_method": {"identifier": "bindToRequest", "parameters": "(R request, Object input)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "R", "body": "@SuppressWarnings(\"unchecked\")\n   @Override\n   public <R extends HttpRequest> R bindToRequest(R request, Object input) {\n      checkArgument(checkNotNull(input, \"input\") instanceof UserIdGroupPair,\n            \"this binder is only valid for UserIdGroupPair!\");\n      UserIdGroupPair pair = (UserIdGroupPair) input;\n      Builder<String, String> builder = ImmutableMultimap.builder();\n      builder.put(\"SourceSecurityGroupOwnerId\", pair.getUserId());\n      builder.put(\"SourceSecurityGroupName\", pair.getGroupName());\n      return (R) request.toBuilder().replaceFormParams(builder.build()).build();\n   }", "signature": "R bindToRequest(R request, Object input)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public R bindToRequest(R request, Object input)", "class_method_signature": "BindUserIdGroupPairToSourceSecurityGroupFormParams.bindToRequest(R request, Object input)", "testcase": false, "constructor": false, "invocations": ["checkArgument", "checkNotNull", "builder", "put", "getUserId", "put", "getGroupName", "build", "replaceFormParams", "toBuilder", "build"]}, "repository": {"repo_id": 489859, "url": "https://github.com/jclouds/legacy-jclouds", "language": "Java", "is_fork": false, "fork_count": 231, "stargazer_count": 477, "size": 74892, "license": "licensed"}}