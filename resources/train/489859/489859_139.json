{"test_class": {"identifier": "ProductItemToImageTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final List<String> operatingSystems = Arrays.asList(\n         \"CentOS 5 - LAMP Install (32 bit)\",\n         \"CentOS 5 - LAMP Install (64 bit)\",\n         \"CentOS 5 - Minimal Install (32 bit)\",\n         \"CentOS 5 - Minimal Install (64 bit)\",\n         \"CentOS 6.0 - LAMP Install (32 bit)\",\n         \"CentOS 6.0 - LAMP Install (64 bit)\",\n         \"CentOS 6.0 - Minimal Install (32 bit)\",\n         \"CentOS 6.0 - Minimal Install (64 bit)\",\n         \"Debian GNU/Linux 5.0 Lenny/Stable - LAMP Install (32 bit)\",\n         \"Debian GNU/Linux 5.0 Lenny/Stable - LAMP Install (64 bit)\",\n         \"Debian GNU/Linux 5.0 Lenny/Stable - Minimal Install (32 bit)\",\n         \"Debian GNU/Linux 5.0 Lenny/Stable - Minimal Install (64 bit)\",\n         \"Fedora Release 13 (32bit) - LAMP Install\",\n         \"Fedora Release 13 (32bit) - Minimal Install\",\n         \"Fedora Release 13 (64bit) - LAMP Install\",\n         \"Fedora Release 13 (64bit) - Minimal Install\",\n         \"Fedora Release 15 (32bit) - LAMP Install\",\n         \"Fedora Release 15 (32bit) - Minimal Install\",\n         \"Fedora Release 15 (64bit) - LAMP Install\",\n         \"Fedora Release 15 (64bit) - Minimal Install\",\n         \"Red Hat Enterprise Linux 5 - LAMP Install (32 bit)\",\n         \"Red Hat Enterprise Linux 5 - LAMP Install (64 bit)\",\n         \"Red Hat Enterprise Linux 5 - Minimal Install (64 bit)\",\n         \"Red Hat Enterprise Linux 6 - LAMP Install (32 bit)\",\n         \"Red Hat Enterprise Linux 6 - LAMP Install (64 bit)\",\n         \"Red Hat Enterprise Linux 6 - Minimal Install (32 bit)\",\n         \"Red Hat Enterprise Linux 6 - Minimal Install (64 bit)\",\n         \"Ubuntu Linux 10.04 LTS Lucid Lynx - LAMP Install (32 bit)\",\n         \"Ubuntu Linux 10.04 LTS Lucid Lynx - LAMP Install (64 bit)\",\n         \"Ubuntu Linux 10.04 LTS Lucid Lynx - Minimal Install (32 bit)\",\n         \"Ubuntu Linux 10.04 LTS Lucid Lynx - Minimal Install (64 bit)\",\n         \"Ubuntu Linux 8 LTS Hardy Heron - LAMP Install (32 bit)\",\n         \"Ubuntu Linux 8 LTS Hardy Heron - LAMP Install (64 bit)\",\n         \"Ubuntu Linux 8 LTS Hardy Heron - Minimal Install (32 bit)\",\n         \"Ubuntu Linux 8 LTS Hardy Heron - Minimal Install (64 bit)\",\n         \"CloudLinux 6 (32 bit)\", \n         \"CloudLinux 6 (64 bit)\",          \n         \"Windows Server 2003 Datacenter SP2 with R2 (32 bit)\",\n         \"Windows Server 2003 Datacenter SP2 with R2 (64 bit)\",\n         \"Windows Server 2003 Enterprise SP2 with R2 (64 bit)\",\n         \"Windows Server 2003 Standard SP2 with R2 (64 bit)\",\n         \"Windows Server 2008 Datacenter Edition SP2 (32bit)\",\n         \"Windows Server 2008 Datacenter Edition SP2 (64bit)\",\n         \"Windows Server 2008 Enterprise Edition SP2 (32bit)\",\n         \"Windows Server 2008 Enterprise Edition SP2 (64bit)\",\n         \"Windows Server 2008 R2 Datacenter Edition (64bit)\",\n         \"Windows Server 2008 R2 Enterprise Edition (64bit)\",\n         \"Windows Server 2008 R2 Standard Edition (64bit)\",\n         \"Windows Server 2008 Standard Edition SP2 (32bit)\",\n         \"Windows Server 2008 Standard Edition SP2 (64bit)\");", "modifier": "private static final", "type": "List<String>", "declarator": "operatingSystems = Arrays.asList(\n         \"CentOS 5 - LAMP Install (32 bit)\",\n         \"CentOS 5 - LAMP Install (64 bit)\",\n         \"CentOS 5 - Minimal Install (32 bit)\",\n         \"CentOS 5 - Minimal Install (64 bit)\",\n         \"CentOS 6.0 - LAMP Install (32 bit)\",\n         \"CentOS 6.0 - LAMP Install (64 bit)\",\n         \"CentOS 6.0 - Minimal Install (32 bit)\",\n         \"CentOS 6.0 - Minimal Install (64 bit)\",\n         \"Debian GNU/Linux 5.0 Lenny/Stable - LAMP Install (32 bit)\",\n         \"Debian GNU/Linux 5.0 Lenny/Stable - LAMP Install (64 bit)\",\n         \"Debian GNU/Linux 5.0 Lenny/Stable - Minimal Install (32 bit)\",\n         \"Debian GNU/Linux 5.0 Lenny/Stable - Minimal Install (64 bit)\",\n         \"Fedora Release 13 (32bit) - LAMP Install\",\n         \"Fedora Release 13 (32bit) - Minimal Install\",\n         \"Fedora Release 13 (64bit) - LAMP Install\",\n         \"Fedora Release 13 (64bit) - Minimal Install\",\n         \"Fedora Release 15 (32bit) - LAMP Install\",\n         \"Fedora Release 15 (32bit) - Minimal Install\",\n         \"Fedora Release 15 (64bit) - LAMP Install\",\n         \"Fedora Release 15 (64bit) - Minimal Install\",\n         \"Red Hat Enterprise Linux 5 - LAMP Install (32 bit)\",\n         \"Red Hat Enterprise Linux 5 - LAMP Install (64 bit)\",\n         \"Red Hat Enterprise Linux 5 - Minimal Install (64 bit)\",\n         \"Red Hat Enterprise Linux 6 - LAMP Install (32 bit)\",\n         \"Red Hat Enterprise Linux 6 - LAMP Install (64 bit)\",\n         \"Red Hat Enterprise Linux 6 - Minimal Install (32 bit)\",\n         \"Red Hat Enterprise Linux 6 - Minimal Install (64 bit)\",\n         \"Ubuntu Linux 10.04 LTS Lucid Lynx - LAMP Install (32 bit)\",\n         \"Ubuntu Linux 10.04 LTS Lucid Lynx - LAMP Install (64 bit)\",\n         \"Ubuntu Linux 10.04 LTS Lucid Lynx - Minimal Install (32 bit)\",\n         \"Ubuntu Linux 10.04 LTS Lucid Lynx - Minimal Install (64 bit)\",\n         \"Ubuntu Linux 8 LTS Hardy Heron - LAMP Install (32 bit)\",\n         \"Ubuntu Linux 8 LTS Hardy Heron - LAMP Install (64 bit)\",\n         \"Ubuntu Linux 8 LTS Hardy Heron - Minimal Install (32 bit)\",\n         \"Ubuntu Linux 8 LTS Hardy Heron - Minimal Install (64 bit)\",\n         \"CloudLinux 6 (32 bit)\", \n         \"CloudLinux 6 (64 bit)\",          \n         \"Windows Server 2003 Datacenter SP2 with R2 (32 bit)\",\n         \"Windows Server 2003 Datacenter SP2 with R2 (64 bit)\",\n         \"Windows Server 2003 Enterprise SP2 with R2 (64 bit)\",\n         \"Windows Server 2003 Standard SP2 with R2 (64 bit)\",\n         \"Windows Server 2008 Datacenter Edition SP2 (32bit)\",\n         \"Windows Server 2008 Datacenter Edition SP2 (64bit)\",\n         \"Windows Server 2008 Enterprise Edition SP2 (32bit)\",\n         \"Windows Server 2008 Enterprise Edition SP2 (64bit)\",\n         \"Windows Server 2008 R2 Datacenter Edition (64bit)\",\n         \"Windows Server 2008 R2 Enterprise Edition (64bit)\",\n         \"Windows Server 2008 R2 Standard Edition (64bit)\",\n         \"Windows Server 2008 Standard Edition SP2 (32bit)\",\n         \"Windows Server 2008 Standard Edition SP2 (64bit)\")", "var_name": "operatingSystems"}], "file": "providers/softlayer/src/test/java/org/jclouds/softlayer/compute/functions/ProductItemToImageTest.java"}, "test_case": {"identifier": "testNull", "parameters": "()", "modifiers": "@Test(expectedExceptions = NullPointerException.class) public", "return": "void", "body": "@Test(expectedExceptions = NullPointerException.class)\n   public void testNull() {\n      new ProductItemToImage().apply(null);\n   }", "signature": "void testNull()", "full_signature": "@Test(expectedExceptions = NullPointerException.class) public void testNull()", "class_method_signature": "ProductItemToImageTest.testNull()", "testcase": true, "constructor": false, "invocations": ["apply"]}, "focal_class": {"identifier": "ProductItemToImage", "superclass": "", "interfaces": "implements Function<ProductItem, Image>", "fields": [{"original_string": "private static final Pattern OS_BITS_PATTERN = Pattern.compile(\".*\\\\((\\\\d+) ?bit\\\\).*\");", "modifier": "private static final", "type": "Pattern", "declarator": "OS_BITS_PATTERN = Pattern.compile(\".*\\\\((\\\\d+) ?bit\\\\).*\")", "var_name": "OS_BITS_PATTERN"}, {"original_string": "private static final String CENTOS = \"CentOS\";", "modifier": "private static final", "type": "String", "declarator": "CENTOS = \"CentOS\"", "var_name": "CENTOS"}, {"original_string": "private static final String DEBIAN = \"Debian GNU/Linux\";", "modifier": "private static final", "type": "String", "declarator": "DEBIAN = \"Debian GNU/Linux\"", "var_name": "DEBIAN"}, {"original_string": "private static final String FEDORA = \"Fedora Release\";", "modifier": "private static final", "type": "String", "declarator": "FEDORA = \"Fedora Release\"", "var_name": "FEDORA"}, {"original_string": "private static final String RHEL = \"Red Hat Enterprise Linux\";", "modifier": "private static final", "type": "String", "declarator": "RHEL = \"Red Hat Enterprise Linux\"", "var_name": "RHEL"}, {"original_string": "private static final String UBUNTU = \"Ubuntu Linux\";", "modifier": "private static final", "type": "String", "declarator": "UBUNTU = \"Ubuntu Linux\"", "var_name": "UBUNTU"}, {"original_string": "private static final String WINDOWS = \"Windows Server\";", "modifier": "private static final", "type": "String", "declarator": "WINDOWS = \"Windows Server\"", "var_name": "WINDOWS"}, {"original_string": "private static final String CLOUD_LINUX = \"CloudLinux\";", "modifier": "private static final", "type": "String", "declarator": "CLOUD_LINUX = \"CloudLinux\"", "var_name": "CLOUD_LINUX"}, {"original_string": "@Resource\n   @Named(ComputeServiceConstants.COMPUTE_LOGGER)\n   protected Logger logger = Logger.NULL;", "modifier": "@Resource\n   @Named(ComputeServiceConstants.COMPUTE_LOGGER)\n   protected", "type": "Logger", "declarator": "logger = Logger.NULL", "var_name": "logger"}], "methods": [{"identifier": "apply", "parameters": "(ProductItem productItem)", "modifiers": "@Override public", "return": "Image", "signature": "Image apply(ProductItem productItem)", "full_signature": "@Override public Image apply(ProductItem productItem)", "class_method_signature": "ProductItemToImage.apply(ProductItem productItem)", "testcase": false, "constructor": false}, {"identifier": "osFamily", "parameters": "()", "modifiers": "public static", "return": "Function<String, OsFamily>", "signature": "Function<String, OsFamily> osFamily()", "full_signature": "public static Function<String, OsFamily> osFamily()", "class_method_signature": "ProductItemToImage.osFamily()", "testcase": false, "constructor": false}, {"identifier": "osVersion", "parameters": "()", "modifiers": "public static", "return": "Function<String, String>", "signature": "Function<String, String> osVersion()", "full_signature": "public static Function<String, String> osVersion()", "class_method_signature": "ProductItemToImage.osVersion()", "testcase": false, "constructor": false}, {"identifier": "parseVersion", "parameters": "(String description, String os)", "modifiers": "private static", "return": "String", "signature": "String parseVersion(String description, String os)", "full_signature": "private static String parseVersion(String description, String os)", "class_method_signature": "ProductItemToImage.parseVersion(String description, String os)", "testcase": false, "constructor": false}, {"identifier": "osBits", "parameters": "()", "modifiers": "public static", "return": "Function<String, Integer>", "signature": "Function<String, Integer> osBits()", "full_signature": "public static Function<String, Integer> osBits()", "class_method_signature": "ProductItemToImage.osBits()", "testcase": false, "constructor": false}, {"identifier": "imageId", "parameters": "()", "modifiers": "public static", "return": "Function<ProductItem, String>", "signature": "Function<ProductItem, String> imageId()", "full_signature": "public static Function<ProductItem, String> imageId()", "class_method_signature": "ProductItemToImage.imageId()", "testcase": false, "constructor": false}], "file": "providers/softlayer/src/main/java/org/jclouds/softlayer/compute/functions/ProductItemToImage.java"}, "focal_method": {"identifier": "apply", "parameters": "(ProductItem productItem)", "modifiers": "@Override public", "return": "Image", "body": "@Override\n   public Image apply(ProductItem productItem) {\n      checkNotNull(productItem, \"productItem\");\n      String description = checkNotNull(productItem.getDescription(), \"productItem.description\");\n\n      OsFamily osFamily = osFamily().apply(description);\n      if (osFamily == OsFamily.UNRECOGNIZED) {\n         logger.debug(\"Cannot determine os family for item: %s\", productItem);\n      }\n      Integer bits = osBits().apply(description);\n      if (bits == null) {\n         logger.debug(\"Cannot determine os bits for item: %s\", productItem);\n      }\n      String osVersion = osVersion().apply(description);\n      if (osVersion == null) {\n         logger.debug(\"Cannot determine os version for item: %s\", productItem);\n      }\n      OperatingSystem os = OperatingSystem.builder()\n            .description(description)\n            .family(osFamily)\n            .version(osVersion)\n            .is64Bit(Objects.equal(bits, 64))\n            .build();\n\n      return new ImageBuilder()\n            .ids(imageId().apply(productItem))\n            .description(description)\n            .operatingSystem(os)\n            .status(Image.Status.AVAILABLE)\n            .build();\n   }", "signature": "Image apply(ProductItem productItem)", "full_signature": "@Override public Image apply(ProductItem productItem)", "class_method_signature": "ProductItemToImage.apply(ProductItem productItem)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "checkNotNull", "getDescription", "apply", "osFamily", "debug", "apply", "osBits", "debug", "apply", "osVersion", "debug", "build", "is64Bit", "version", "family", "description", "builder", "equal", "build", "status", "operatingSystem", "description", "ids", "apply", "imageId"]}, "repository": {"repo_id": 489859, "url": "https://github.com/jclouds/legacy-jclouds", "language": "Java", "is_fork": false, "fork_count": 231, "stargazer_count": 477, "size": 74892, "license": "licensed"}}