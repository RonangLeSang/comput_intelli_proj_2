{"test_class": {"identifier": "GetOptionsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String etag;", "modifier": "private", "type": "String", "declarator": "etag", "var_name": "etag"}, {"original_string": "private Date now;", "modifier": "private", "type": "Date", "declarator": "now", "var_name": "now"}, {"original_string": "private String nowExpected;", "modifier": "private", "type": "String", "declarator": "nowExpected", "var_name": "nowExpected"}], "file": "core/src/test/java/org/jclouds/http/options/GetOptionsTest.java"}, "test_case": {"identifier": "testRangeNegative1", "parameters": "()", "modifiers": "@Test(expectedExceptions = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expectedExceptions = IllegalArgumentException.class)\n   public void testRangeNegative1() {\n      range(-1, 0);\n   }", "signature": "void testRangeNegative1()", "full_signature": "@Test(expectedExceptions = IllegalArgumentException.class) public void testRangeNegative1()", "class_method_signature": "GetOptionsTest.testRangeNegative1()", "testcase": true, "constructor": false, "invocations": ["range"]}, "focal_class": {"identifier": "GetOptions", "superclass": "extends BaseHttpRequestOptions", "interfaces": "", "fields": [{"original_string": "private static final DateService dateService = new SimpleDateFormatDateService();", "modifier": "private static final", "type": "DateService", "declarator": "dateService = new SimpleDateFormatDateService()", "var_name": "dateService"}, {"original_string": "public static final GetOptions NONE = new GetOptions();", "modifier": "public static final", "type": "GetOptions", "declarator": "NONE = new GetOptions()", "var_name": "NONE"}, {"original_string": "private final List<String> ranges = Lists.newArrayList();", "modifier": "private final", "type": "List<String>", "declarator": "ranges = Lists.newArrayList()", "var_name": "ranges"}], "methods": [{"identifier": "buildRequestHeaders", "parameters": "()", "modifiers": "@Override public", "return": "Multimap<String, String>", "signature": "Multimap<String, String> buildRequestHeaders()", "full_signature": "@Override public Multimap<String, String> buildRequestHeaders()", "class_method_signature": "GetOptions.buildRequestHeaders()", "testcase": false, "constructor": false}, {"identifier": "range", "parameters": "(long start, long end)", "modifiers": "public", "return": "GetOptions", "signature": "GetOptions range(long start, long end)", "full_signature": "public GetOptions range(long start, long end)", "class_method_signature": "GetOptions.range(long start, long end)", "testcase": false, "constructor": false}, {"identifier": "startAt", "parameters": "(long start)", "modifiers": "public", "return": "GetOptions", "signature": "GetOptions startAt(long start)", "full_signature": "public GetOptions startAt(long start)", "class_method_signature": "GetOptions.startAt(long start)", "testcase": false, "constructor": false}, {"identifier": "tail", "parameters": "(long count)", "modifiers": "public", "return": "GetOptions", "signature": "GetOptions tail(long count)", "full_signature": "public GetOptions tail(long count)", "class_method_signature": "GetOptions.tail(long count)", "testcase": false, "constructor": false}, {"identifier": "getRange", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRange()", "full_signature": "public String getRange()", "class_method_signature": "GetOptions.getRange()", "testcase": false, "constructor": false}, {"identifier": "ifModifiedSince", "parameters": "(Date ifModifiedSince)", "modifiers": "public", "return": "GetOptions", "signature": "GetOptions ifModifiedSince(Date ifModifiedSince)", "full_signature": "public GetOptions ifModifiedSince(Date ifModifiedSince)", "class_method_signature": "GetOptions.ifModifiedSince(Date ifModifiedSince)", "testcase": false, "constructor": false}, {"identifier": "getIfModifiedSince", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIfModifiedSince()", "full_signature": "public String getIfModifiedSince()", "class_method_signature": "GetOptions.getIfModifiedSince()", "testcase": false, "constructor": false}, {"identifier": "ifUnmodifiedSince", "parameters": "(Date ifUnmodifiedSince)", "modifiers": "public", "return": "GetOptions", "signature": "GetOptions ifUnmodifiedSince(Date ifUnmodifiedSince)", "full_signature": "public GetOptions ifUnmodifiedSince(Date ifUnmodifiedSince)", "class_method_signature": "GetOptions.ifUnmodifiedSince(Date ifUnmodifiedSince)", "testcase": false, "constructor": false}, {"identifier": "getIfUnmodifiedSince", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIfUnmodifiedSince()", "full_signature": "public String getIfUnmodifiedSince()", "class_method_signature": "GetOptions.getIfUnmodifiedSince()", "testcase": false, "constructor": false}, {"identifier": "ifETagMatches", "parameters": "(String eTag)", "modifiers": "public", "return": "GetOptions", "signature": "GetOptions ifETagMatches(String eTag)", "full_signature": "public GetOptions ifETagMatches(String eTag)", "class_method_signature": "GetOptions.ifETagMatches(String eTag)", "testcase": false, "constructor": false}, {"identifier": "getIfMatch", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIfMatch()", "full_signature": "public String getIfMatch()", "class_method_signature": "GetOptions.getIfMatch()", "testcase": false, "constructor": false}, {"identifier": "ifETagDoesntMatch", "parameters": "(String eTag)", "modifiers": "public", "return": "GetOptions", "signature": "GetOptions ifETagDoesntMatch(String eTag)", "full_signature": "public GetOptions ifETagDoesntMatch(String eTag)", "class_method_signature": "GetOptions.ifETagDoesntMatch(String eTag)", "testcase": false, "constructor": false}, {"identifier": "getIfNoneMatch", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIfNoneMatch()", "full_signature": "public String getIfNoneMatch()", "class_method_signature": "GetOptions.getIfNoneMatch()", "testcase": false, "constructor": false}, {"identifier": "getRanges", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getRanges()", "full_signature": "public List<String> getRanges()", "class_method_signature": "GetOptions.getRanges()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "GetOptions.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "GetOptions.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "GetOptions.toString()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/jclouds/http/options/GetOptions.java"}, "focal_method": {"identifier": "range", "parameters": "(long start, long end)", "modifiers": "public", "return": "GetOptions", "body": "public GetOptions range(long start, long end) {\n      checkArgument(start >= 0, \"start must be >= 0\");\n      checkArgument(end >= 0, \"end must be >= 0\");\n      ranges.add(String.format(\"%d-%d\", start, end));\n      return this;\n   }", "signature": "GetOptions range(long start, long end)", "full_signature": "public GetOptions range(long start, long end)", "class_method_signature": "GetOptions.range(long start, long end)", "testcase": false, "constructor": false, "invocations": ["checkArgument", "checkArgument", "add", "format"]}, "repository": {"repo_id": 489859, "url": "https://github.com/jclouds/legacy-jclouds", "language": "Java", "is_fork": false, "fork_count": 231, "stargazer_count": 477, "size": 74892, "license": "licensed"}}