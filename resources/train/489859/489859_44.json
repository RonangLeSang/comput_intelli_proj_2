{"test_class": {"identifier": "ParseSystemAndUserMetadataFromHeadersTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ParseSystemAndUserMetadataFromHeaders parser;", "modifier": "private", "type": "ParseSystemAndUserMetadataFromHeaders", "declarator": "parser", "var_name": "parser"}, {"original_string": "private Provider<MutableBlobMetadata> blobMetadataProvider = new Provider<MutableBlobMetadata>() {\n\n      public MutableBlobMetadata get() {\n         return new MutableBlobMetadataImpl();\n      }\n\n   };", "modifier": "private", "type": "Provider<MutableBlobMetadata>", "declarator": "blobMetadataProvider = new Provider<MutableBlobMetadata>() {\n\n      public MutableBlobMetadata get() {\n         return new MutableBlobMetadataImpl();\n      }\n\n   }", "var_name": "blobMetadataProvider"}], "file": "blobstore/src/test/java/org/jclouds/blobstore/functions/ParseSystemAndUserMetadataFromHeadersTest.java"}, "test_case": {"identifier": "testSetLastModifiedIso8601", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testSetLastModifiedIso8601() {\n      HttpResponse from = HttpResponse.builder()\n                                      .statusCode(200).message(\"ok\")\n                                      .payload(\"\")\n                                      .addHeader(HttpHeaders.LAST_MODIFIED, \"2011-01-28T17:35:08.000Z\").build(); \n      MutableBlobMetadata metadata = blobMetadataProvider.get();\n      parser.parseLastModifiedOrThrowException(from, metadata);\n      assertEquals(metadata.getLastModified(), new SimpleDateFormatDateService()\n               .iso8601DateParse(\"2011-01-28T17:35:08.000Z\"));\n   }", "signature": "void testSetLastModifiedIso8601()", "full_signature": "@Test public void testSetLastModifiedIso8601()", "class_method_signature": "ParseSystemAndUserMetadataFromHeadersTest.testSetLastModifiedIso8601()", "testcase": true, "constructor": false, "invocations": ["build", "addHeader", "payload", "message", "statusCode", "builder", "get", "parseLastModifiedOrThrowException", "assertEquals", "getLastModified", "iso8601DateParse"]}, "focal_class": {"identifier": "ParseSystemAndUserMetadataFromHeaders", "superclass": "", "interfaces": "implements Function<HttpResponse, MutableBlobMetadata>,\n         InvocationContext<ParseSystemAndUserMetadataFromHeaders>", "fields": [{"original_string": "private final String metadataPrefix;", "modifier": "private final", "type": "String", "declarator": "metadataPrefix", "var_name": "metadataPrefix"}, {"original_string": "private final DateService dateParser;", "modifier": "private final", "type": "DateService", "declarator": "dateParser", "var_name": "dateParser"}, {"original_string": "private final Provider<MutableBlobMetadata> metadataFactory;", "modifier": "private final", "type": "Provider<MutableBlobMetadata>", "declarator": "metadataFactory", "var_name": "metadataFactory"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private URI endpoint;", "modifier": "private", "type": "URI", "declarator": "endpoint", "var_name": "endpoint"}], "methods": [{"identifier": "ParseSystemAndUserMetadataFromHeaders", "parameters": "(Provider<MutableBlobMetadata> metadataFactory, DateService dateParser,\n            @Named(PROPERTY_USER_METADATA_PREFIX) String metadataPrefix)", "modifiers": "@Inject public", "return": "", "signature": " ParseSystemAndUserMetadataFromHeaders(Provider<MutableBlobMetadata> metadataFactory, DateService dateParser,\n            @Named(PROPERTY_USER_METADATA_PREFIX) String metadataPrefix)", "full_signature": "@Inject public  ParseSystemAndUserMetadataFromHeaders(Provider<MutableBlobMetadata> metadataFactory, DateService dateParser,\n            @Named(PROPERTY_USER_METADATA_PREFIX) String metadataPrefix)", "class_method_signature": "ParseSystemAndUserMetadataFromHeaders.ParseSystemAndUserMetadataFromHeaders(Provider<MutableBlobMetadata> metadataFactory, DateService dateParser,\n            @Named(PROPERTY_USER_METADATA_PREFIX) String metadataPrefix)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(HttpResponse from)", "modifiers": "public", "return": "MutableBlobMetadata", "signature": "MutableBlobMetadata apply(HttpResponse from)", "full_signature": "public MutableBlobMetadata apply(HttpResponse from)", "class_method_signature": "ParseSystemAndUserMetadataFromHeaders.apply(HttpResponse from)", "testcase": false, "constructor": false}, {"identifier": "addUserMetadataTo", "parameters": "(HttpResponse from, MutableBlobMetadata metadata)", "modifiers": "@VisibleForTesting", "return": "void", "signature": "void addUserMetadataTo(HttpResponse from, MutableBlobMetadata metadata)", "full_signature": "@VisibleForTesting void addUserMetadataTo(HttpResponse from, MutableBlobMetadata metadata)", "class_method_signature": "ParseSystemAndUserMetadataFromHeaders.addUserMetadataTo(HttpResponse from, MutableBlobMetadata metadata)", "testcase": false, "constructor": false}, {"identifier": "parseLastModifiedOrThrowException", "parameters": "(HttpResponse from, MutableBlobMetadata metadata)", "modifiers": "@VisibleForTesting", "return": "void", "signature": "void parseLastModifiedOrThrowException(HttpResponse from, MutableBlobMetadata metadata)", "full_signature": "@VisibleForTesting void parseLastModifiedOrThrowException(HttpResponse from, MutableBlobMetadata metadata)", "class_method_signature": "ParseSystemAndUserMetadataFromHeaders.parseLastModifiedOrThrowException(HttpResponse from, MutableBlobMetadata metadata)", "testcase": false, "constructor": false}, {"identifier": "addETagTo", "parameters": "(HttpResponse from, MutableBlobMetadata metadata)", "modifiers": "protected", "return": "void", "signature": "void addETagTo(HttpResponse from, MutableBlobMetadata metadata)", "full_signature": "protected void addETagTo(HttpResponse from, MutableBlobMetadata metadata)", "class_method_signature": "ParseSystemAndUserMetadataFromHeaders.addETagTo(HttpResponse from, MutableBlobMetadata metadata)", "testcase": false, "constructor": false}, {"identifier": "setContext", "parameters": "(HttpRequest request)", "modifiers": "public", "return": "ParseSystemAndUserMetadataFromHeaders", "signature": "ParseSystemAndUserMetadataFromHeaders setContext(HttpRequest request)", "full_signature": "public ParseSystemAndUserMetadataFromHeaders setContext(HttpRequest request)", "class_method_signature": "ParseSystemAndUserMetadataFromHeaders.setContext(HttpRequest request)", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "public", "return": "ParseSystemAndUserMetadataFromHeaders", "signature": "ParseSystemAndUserMetadataFromHeaders setName(String name)", "full_signature": "public ParseSystemAndUserMetadataFromHeaders setName(String name)", "class_method_signature": "ParseSystemAndUserMetadataFromHeaders.setName(String name)", "testcase": false, "constructor": false}], "file": "blobstore/src/main/java/org/jclouds/blobstore/functions/ParseSystemAndUserMetadataFromHeaders.java"}, "focal_method": {"identifier": "parseLastModifiedOrThrowException", "parameters": "(HttpResponse from, MutableBlobMetadata metadata)", "modifiers": "@VisibleForTesting", "return": "void", "body": "@VisibleForTesting\n   void parseLastModifiedOrThrowException(HttpResponse from, MutableBlobMetadata metadata) throws HttpException {\n      String lastModified = from.getFirstHeaderOrNull(HttpHeaders.LAST_MODIFIED);\n      if (lastModified == null) {\n         // scaleup-storage uses the wrong case for the last modified header\n         if ((lastModified = from.getFirstHeaderOrNull(\"Last-modified\")) == null)\n            throw new HttpException(HttpHeaders.LAST_MODIFIED + \" header not present in response: \" + from);\n      }\n\n      // Walrus\n      if (lastModified.startsWith(\"20\")) {\n         metadata.setLastModified(dateParser.iso8601DateParse(lastModified.replace(\"+0000\", \"Z\")));\n      } else {\n         metadata.setLastModified(dateParser.rfc822DateParse(lastModified));\n      }\n\n      if (metadata.getLastModified() == null)\n         throw new HttpException(\"could not parse: \" + HttpHeaders.LAST_MODIFIED + \": \" + lastModified);\n   }", "signature": "void parseLastModifiedOrThrowException(HttpResponse from, MutableBlobMetadata metadata)", "full_signature": "@VisibleForTesting void parseLastModifiedOrThrowException(HttpResponse from, MutableBlobMetadata metadata)", "class_method_signature": "ParseSystemAndUserMetadataFromHeaders.parseLastModifiedOrThrowException(HttpResponse from, MutableBlobMetadata metadata)", "testcase": false, "constructor": false, "invocations": ["getFirstHeaderOrNull", "getFirstHeaderOrNull", "startsWith", "setLastModified", "iso8601DateParse", "replace", "setLastModified", "rfc822DateParse", "getLastModified"]}, "repository": {"repo_id": 489859, "url": "https://github.com/jclouds/legacy-jclouds", "language": "Java", "is_fork": false, "fork_count": 231, "stargazer_count": 477, "size": 74892, "license": "licensed"}}