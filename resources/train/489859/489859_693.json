{"test_class": {"identifier": "CopyObjectOptionsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String etag;", "modifier": "private", "type": "String", "declarator": "etag", "var_name": "etag"}, {"original_string": "private Date now;", "modifier": "private", "type": "Date", "declarator": "now", "var_name": "now"}, {"original_string": "private String nowExpected;", "modifier": "private", "type": "String", "declarator": "nowExpected", "var_name": "nowExpected"}, {"original_string": "private Map<String, String> goodMeta;", "modifier": "private", "type": "Map<String, String>", "declarator": "goodMeta", "var_name": "goodMeta"}], "file": "apis/s3/src/test/java/org/jclouds/s3/options/CopyObjectOptionsTest.java"}, "test_case": {"identifier": "testBuildRequestHeaders", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n   void testBuildRequestHeaders() {\n      CopyObjectOptions options = ifSourceModifiedSince(now).ifSourceETagDoesntMatch(etag).overrideMetadataWith(\n               goodMeta);\n      options.setHeaderTag(DEFAULT_AMAZON_HEADERTAG);\n\n      options.setMetadataPrefix(USER_METADATA_PREFIX);\n\n      Multimap<String, String> headers = options.buildRequestHeaders();\n      assertEquals(getOnlyElement(headers.get(COPY_SOURCE_IF_MODIFIED_SINCE)), new SimpleDateFormatDateService()\n               .rfc822DateFormat(now));\n      assertEquals(getOnlyElement(headers.get(COPY_SOURCE_IF_NO_MATCH)), \"\\\"\" + etag + \"\\\"\");\n      for (String value : goodMeta.values())\n         assertTrue(headers.containsValue(value));\n\n   }", "signature": "void testBuildRequestHeaders()", "full_signature": "@Test void testBuildRequestHeaders()", "class_method_signature": "CopyObjectOptionsTest.testBuildRequestHeaders()", "testcase": true, "constructor": false, "invocations": ["overrideMetadataWith", "ifSourceETagDoesntMatch", "ifSourceModifiedSince", "setHeaderTag", "setMetadataPrefix", "buildRequestHeaders", "assertEquals", "getOnlyElement", "get", "rfc822DateFormat", "assertEquals", "getOnlyElement", "get", "values", "assertTrue", "containsValue"]}, "focal_class": {"identifier": "CopyObjectOptions", "superclass": "extends BaseHttpRequestOptions", "interfaces": "", "fields": [{"original_string": "private static final DateService dateService = new SimpleDateFormatDateService();", "modifier": "private static final", "type": "DateService", "declarator": "dateService = new SimpleDateFormatDateService()", "var_name": "dateService"}, {"original_string": "public static final CopyObjectOptions NONE = new CopyObjectOptions();", "modifier": "public static final", "type": "CopyObjectOptions", "declarator": "NONE = new CopyObjectOptions()", "var_name": "NONE"}, {"original_string": "private Map<String, String> metadata;", "modifier": "private", "type": "Map<String, String>", "declarator": "metadata", "var_name": "metadata"}, {"original_string": "private CannedAccessPolicy acl = CannedAccessPolicy.PRIVATE;", "modifier": "private", "type": "CannedAccessPolicy", "declarator": "acl = CannedAccessPolicy.PRIVATE", "var_name": "acl"}, {"original_string": "private String metadataPrefix;", "modifier": "private", "type": "String", "declarator": "metadataPrefix", "var_name": "metadataPrefix"}, {"original_string": "private String headerTag;", "modifier": "private", "type": "String", "declarator": "headerTag", "var_name": "headerTag"}], "methods": [{"identifier": "setMetadataPrefix", "parameters": "(@Named(PROPERTY_USER_METADATA_PREFIX) String metadataPrefix)", "modifiers": "@Inject public", "return": "void", "signature": "void setMetadataPrefix(@Named(PROPERTY_USER_METADATA_PREFIX) String metadataPrefix)", "full_signature": "@Inject public void setMetadataPrefix(@Named(PROPERTY_USER_METADATA_PREFIX) String metadataPrefix)", "class_method_signature": "CopyObjectOptions.setMetadataPrefix(@Named(PROPERTY_USER_METADATA_PREFIX) String metadataPrefix)", "testcase": false, "constructor": false}, {"identifier": "setHeaderTag", "parameters": "(@Named(PROPERTY_HEADER_TAG) String headerTag)", "modifiers": "@Inject public", "return": "void", "signature": "void setHeaderTag(@Named(PROPERTY_HEADER_TAG) String headerTag)", "full_signature": "@Inject public void setHeaderTag(@Named(PROPERTY_HEADER_TAG) String headerTag)", "class_method_signature": "CopyObjectOptions.setHeaderTag(@Named(PROPERTY_HEADER_TAG) String headerTag)", "testcase": false, "constructor": false}, {"identifier": "overrideAcl", "parameters": "(CannedAccessPolicy acl)", "modifiers": "public", "return": "CopyObjectOptions", "signature": "CopyObjectOptions overrideAcl(CannedAccessPolicy acl)", "full_signature": "public CopyObjectOptions overrideAcl(CannedAccessPolicy acl)", "class_method_signature": "CopyObjectOptions.overrideAcl(CannedAccessPolicy acl)", "testcase": false, "constructor": false}, {"identifier": "getAcl", "parameters": "()", "modifiers": "public", "return": "CannedAccessPolicy", "signature": "CannedAccessPolicy getAcl()", "full_signature": "public CannedAccessPolicy getAcl()", "class_method_signature": "CopyObjectOptions.getAcl()", "testcase": false, "constructor": false}, {"identifier": "getIfModifiedSince", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIfModifiedSince()", "full_signature": "public String getIfModifiedSince()", "class_method_signature": "CopyObjectOptions.getIfModifiedSince()", "testcase": false, "constructor": false}, {"identifier": "getIfUnmodifiedSince", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIfUnmodifiedSince()", "full_signature": "public String getIfUnmodifiedSince()", "class_method_signature": "CopyObjectOptions.getIfUnmodifiedSince()", "testcase": false, "constructor": false}, {"identifier": "getIfMatch", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIfMatch()", "full_signature": "public String getIfMatch()", "class_method_signature": "CopyObjectOptions.getIfMatch()", "testcase": false, "constructor": false}, {"identifier": "getIfNoneMatch", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIfNoneMatch()", "full_signature": "public String getIfNoneMatch()", "class_method_signature": "CopyObjectOptions.getIfNoneMatch()", "testcase": false, "constructor": false}, {"identifier": "getMetadata", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getMetadata()", "full_signature": "public Map<String, String> getMetadata()", "class_method_signature": "CopyObjectOptions.getMetadata()", "testcase": false, "constructor": false}, {"identifier": "ifSourceModifiedSince", "parameters": "(Date ifModifiedSince)", "modifiers": "public", "return": "CopyObjectOptions", "signature": "CopyObjectOptions ifSourceModifiedSince(Date ifModifiedSince)", "full_signature": "public CopyObjectOptions ifSourceModifiedSince(Date ifModifiedSince)", "class_method_signature": "CopyObjectOptions.ifSourceModifiedSince(Date ifModifiedSince)", "testcase": false, "constructor": false}, {"identifier": "ifSourceUnmodifiedSince", "parameters": "(Date ifUnmodifiedSince)", "modifiers": "public", "return": "CopyObjectOptions", "signature": "CopyObjectOptions ifSourceUnmodifiedSince(Date ifUnmodifiedSince)", "full_signature": "public CopyObjectOptions ifSourceUnmodifiedSince(Date ifUnmodifiedSince)", "class_method_signature": "CopyObjectOptions.ifSourceUnmodifiedSince(Date ifUnmodifiedSince)", "testcase": false, "constructor": false}, {"identifier": "ifSourceETagMatches", "parameters": "(String eTag)", "modifiers": "public", "return": "CopyObjectOptions", "signature": "CopyObjectOptions ifSourceETagMatches(String eTag)", "full_signature": "public CopyObjectOptions ifSourceETagMatches(String eTag)", "class_method_signature": "CopyObjectOptions.ifSourceETagMatches(String eTag)", "testcase": false, "constructor": false}, {"identifier": "ifSourceETagDoesntMatch", "parameters": "(String eTag)", "modifiers": "public", "return": "CopyObjectOptions", "signature": "CopyObjectOptions ifSourceETagDoesntMatch(String eTag)", "full_signature": "public CopyObjectOptions ifSourceETagDoesntMatch(String eTag)", "class_method_signature": "CopyObjectOptions.ifSourceETagDoesntMatch(String eTag)", "testcase": false, "constructor": false}, {"identifier": "buildRequestHeaders", "parameters": "()", "modifiers": "@Override public", "return": "Multimap<String, String>", "signature": "Multimap<String, String> buildRequestHeaders()", "full_signature": "@Override public Multimap<String, String> buildRequestHeaders()", "class_method_signature": "CopyObjectOptions.buildRequestHeaders()", "testcase": false, "constructor": false}, {"identifier": "overrideMetadataWith", "parameters": "(Map<String, String> metadata)", "modifiers": "public", "return": "CopyObjectOptions", "signature": "CopyObjectOptions overrideMetadataWith(Map<String, String> metadata)", "full_signature": "public CopyObjectOptions overrideMetadataWith(Map<String, String> metadata)", "class_method_signature": "CopyObjectOptions.overrideMetadataWith(Map<String, String> metadata)", "testcase": false, "constructor": false}], "file": "apis/s3/src/main/java/org/jclouds/s3/options/CopyObjectOptions.java"}, "focal_method": {"identifier": "buildRequestHeaders", "parameters": "()", "modifiers": "@Override public", "return": "Multimap<String, String>", "body": "@Override\n   public Multimap<String, String> buildRequestHeaders() {\n      checkState(headerTag != null, \"headerTag should have been injected!\");\n      checkState(metadataPrefix != null, \"metadataPrefix should have been injected!\");\n      ImmutableMultimap.Builder<String, String> returnVal = ImmutableMultimap.builder();\n      for (Entry<String, String> entry : headers.entries()) {\n         returnVal.put(entry.getKey().replace(DEFAULT_AMAZON_HEADERTAG, headerTag), entry.getValue());\n      }\n      if (metadata != null) {\n         returnVal.put(METADATA_DIRECTIVE.replace(DEFAULT_AMAZON_HEADERTAG, headerTag), \"REPLACE\");\n         for (Map.Entry<String, String> entry : metadata.entrySet()) {\n            String key = entry.getKey();\n            returnVal.put(key.startsWith(metadataPrefix) ? key : metadataPrefix + key, entry.getValue());\n         }\n      }\n      return returnVal.build();\n   }", "signature": "Multimap<String, String> buildRequestHeaders()", "full_signature": "@Override public Multimap<String, String> buildRequestHeaders()", "class_method_signature": "CopyObjectOptions.buildRequestHeaders()", "testcase": false, "constructor": false, "invocations": ["checkState", "checkState", "builder", "entries", "put", "replace", "getKey", "getValue", "put", "replace", "entrySet", "getKey", "put", "startsWith", "getValue", "build"]}, "repository": {"repo_id": 489859, "url": "https://github.com/jclouds/legacy-jclouds", "language": "Java", "is_fork": false, "fork_count": 231, "stargazer_count": 477, "size": 74892, "license": "licensed"}}