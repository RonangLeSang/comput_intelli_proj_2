{"test_class": {"identifier": "UploadIdFromHttpResponseViaRegexTest", "superclass": "", "interfaces": "", "fields": [], "file": "providers/aws-s3/src/test/java/org/jclouds/aws/s3/functions/UploadIdFromHttpResponseViaRegexTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void test() {\n\n      HttpResponse response = HttpResponse.builder().statusCode(200).payload(\n               Payloads.newInputStreamPayload(getClass().getResourceAsStream(\"/initiate-multipart-upload.xml\")))\n               .build();\n      UploadIdFromHttpResponseViaRegex parser = new UploadIdFromHttpResponseViaRegex(new ReturnStringIf2xx());\n\n      assertEquals(parser.apply(response), \"VXBsb2FkIElEIGZvciA2aWWpbmcncyBteS1tb3ZpZS5tMnRzIHVwbG9hZA\");\n   }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "UploadIdFromHttpResponseViaRegexTest.test()", "testcase": true, "constructor": false, "invocations": ["build", "payload", "statusCode", "builder", "newInputStreamPayload", "getResourceAsStream", "getClass", "assertEquals", "apply"]}, "focal_class": {"identifier": "UploadIdFromHttpResponseViaRegex", "superclass": "", "interfaces": "implements Function<HttpResponse, String>", "fields": [{"original_string": "Pattern pattern = Pattern.compile(\"<UploadId>([\\\\S&&[^<]]+)</UploadId>\");", "modifier": "", "type": "Pattern", "declarator": "pattern = Pattern.compile(\"<UploadId>([\\\\S&&[^<]]+)</UploadId>\")", "var_name": "pattern"}, {"original_string": "private final ReturnStringIf2xx returnStringIf200;", "modifier": "private final", "type": "ReturnStringIf2xx", "declarator": "returnStringIf200", "var_name": "returnStringIf200"}], "methods": [{"identifier": "UploadIdFromHttpResponseViaRegex", "parameters": "(ReturnStringIf2xx returnStringIf200)", "modifiers": "@Inject", "return": "", "signature": " UploadIdFromHttpResponseViaRegex(ReturnStringIf2xx returnStringIf200)", "full_signature": "@Inject  UploadIdFromHttpResponseViaRegex(ReturnStringIf2xx returnStringIf200)", "class_method_signature": "UploadIdFromHttpResponseViaRegex.UploadIdFromHttpResponseViaRegex(ReturnStringIf2xx returnStringIf200)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(HttpResponse response)", "modifiers": "@Override public", "return": "String", "signature": "String apply(HttpResponse response)", "full_signature": "@Override public String apply(HttpResponse response)", "class_method_signature": "UploadIdFromHttpResponseViaRegex.apply(HttpResponse response)", "testcase": false, "constructor": false}], "file": "providers/aws-s3/src/main/java/org/jclouds/aws/s3/functions/UploadIdFromHttpResponseViaRegex.java"}, "focal_method": {"identifier": "apply", "parameters": "(HttpResponse response)", "modifiers": "@Override public", "return": "String", "body": "@Override\n   public String apply(HttpResponse response) {\n      String value = null;\n      String content = returnStringIf200.apply(response);\n      if (content != null) {\n         Matcher matcher = pattern.matcher(content);\n         if (matcher.find()) {\n            value = matcher.group(1);\n         }\n      }\n      return value;\n   }", "signature": "String apply(HttpResponse response)", "full_signature": "@Override public String apply(HttpResponse response)", "class_method_signature": "UploadIdFromHttpResponseViaRegex.apply(HttpResponse response)", "testcase": false, "constructor": false, "invocations": ["apply", "matcher", "find", "group"]}, "repository": {"repo_id": 489859, "url": "https://github.com/jclouds/legacy-jclouds", "language": "Java", "is_fork": false, "fork_count": 231, "stargazer_count": 477, "size": 74892, "license": "licensed"}}