{"test_class": {"identifier": "AddInternetServiceOptionsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Injector injector = Guice.createInjector(new SaxParserModule());", "modifier": "", "type": "Injector", "declarator": "injector = Guice.createInjector(new SaxParserModule())", "var_name": "injector"}], "file": "common/trmk/src/test/java/org/jclouds/trmk/vcloud_0_8/options/AddInternetServiceOptionsTest.java"}, "test_case": {"identifier": "testWithDescriptionStatic", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testWithDescriptionStatic() {\n      AddInternetServiceOptions options = withDescription(\"yallo\");\n      assertEquals(options.description, \"yallo\");\n   }", "signature": "void testWithDescriptionStatic()", "full_signature": "@Test public void testWithDescriptionStatic()", "class_method_signature": "AddInternetServiceOptionsTest.testWithDescriptionStatic()", "testcase": true, "constructor": false, "invocations": ["withDescription", "assertEquals"]}, "focal_class": {"identifier": "AddInternetServiceOptions", "superclass": "extends BindAddInternetServiceToXmlPayload", "interfaces": "", "fields": [{"original_string": "@VisibleForTesting\n   String description = null;", "modifier": "@VisibleForTesting", "type": "String", "declarator": "description = null", "var_name": "description"}, {"original_string": "@VisibleForTesting\n   String enabled = \"true\";", "modifier": "@VisibleForTesting", "type": "String", "declarator": "enabled = \"true\"", "var_name": "enabled"}, {"original_string": "@VisibleForTesting\n   Boolean monitorEnabled = null;", "modifier": "@VisibleForTesting", "type": "Boolean", "declarator": "monitorEnabled = null", "var_name": "monitorEnabled"}], "methods": [{"identifier": "bindToRequest", "parameters": "(R request, Map<String, Object> postParams)", "modifiers": "@Override public", "return": "R", "signature": "R bindToRequest(R request, Map<String, Object> postParams)", "full_signature": "@Override public R bindToRequest(R request, Map<String, Object> postParams)", "class_method_signature": "AddInternetServiceOptions.bindToRequest(R request, Map<String, Object> postParams)", "testcase": false, "constructor": false}, {"identifier": "disabled", "parameters": "()", "modifiers": "public", "return": "AddInternetServiceOptions", "signature": "AddInternetServiceOptions disabled()", "full_signature": "public AddInternetServiceOptions disabled()", "class_method_signature": "AddInternetServiceOptions.disabled()", "testcase": false, "constructor": false}, {"identifier": "monitorDisabled", "parameters": "()", "modifiers": "public", "return": "AddInternetServiceOptions", "signature": "AddInternetServiceOptions monitorDisabled()", "full_signature": "public AddInternetServiceOptions monitorDisabled()", "class_method_signature": "AddInternetServiceOptions.monitorDisabled()", "testcase": false, "constructor": false}, {"identifier": "withDescription", "parameters": "(String description)", "modifiers": "public", "return": "AddInternetServiceOptions", "signature": "AddInternetServiceOptions withDescription(String description)", "full_signature": "public AddInternetServiceOptions withDescription(String description)", "class_method_signature": "AddInternetServiceOptions.withDescription(String description)", "testcase": false, "constructor": false}], "file": "common/trmk/src/main/java/org/jclouds/trmk/vcloud_0_8/options/AddInternetServiceOptions.java"}, "focal_method": {"identifier": "withDescription", "parameters": "(String description)", "modifiers": "public", "return": "AddInternetServiceOptions", "body": "public AddInternetServiceOptions withDescription(String description) {\n      this.description = description;\n      return this;\n   }", "signature": "AddInternetServiceOptions withDescription(String description)", "full_signature": "public AddInternetServiceOptions withDescription(String description)", "class_method_signature": "AddInternetServiceOptions.withDescription(String description)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 489859, "url": "https://github.com/jclouds/legacy-jclouds", "language": "Java", "is_fork": false, "fork_count": 231, "stargazer_count": 477, "size": 74892, "license": "licensed"}}