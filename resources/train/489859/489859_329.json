{"test_class": {"identifier": "ParseLoginResponseFromHeadersTest", "superclass": "extends BaseHandlerTest", "interfaces": "", "fields": [{"original_string": "private ParseLoginResponseFromHeaders parser;", "modifier": "private", "type": "ParseLoginResponseFromHeaders", "declarator": "parser", "var_name": "parser"}], "file": "common/trmk/src/test/java/org/jclouds/trmk/vcloud_0_8/functions/ParseLoginResponseFromHeadersTest.java"}, "test_case": {"identifier": "testApplyTerremark", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testApplyTerremark() {\n      HttpResponse response = HttpResponse.builder().statusCode(200).message(\"OK\")\n                                          .payload(getClass().getResourceAsStream(\"/orglist.xml\"))\n                                          .addHeader(\"Set-Cookie\", \"vcloud-token=37ce2715-9aba-4f48-8e45-2db8a8da702d; path=/\").build();\n      response.getPayload().getContentMetadata().setContentType(\"Content-Type: application/xml; charset=utf-8\");\n      response.getPayload().getContentMetadata().setContentLength(307l);\n\n      VCloudSession reply = parser.apply(response);\n      assertEquals(reply.getVCloudToken(), \"37ce2715-9aba-4f48-8e45-2db8a8da702d\");\n      assertEquals(reply.getOrgs(), ImmutableMap.of(\"adrian@jclouds.org\", new ReferenceTypeImpl(\"adrian@jclouds.org\",\n               TerremarkVCloudMediaType.ORG_XML, URI.create(\"https://services.vcloudexpress.terremark.com/api/v0.8/org/48\"))));\n\n   }", "signature": "void testApplyTerremark()", "full_signature": "@Test public void testApplyTerremark()", "class_method_signature": "ParseLoginResponseFromHeadersTest.testApplyTerremark()", "testcase": true, "constructor": false, "invocations": ["build", "addHeader", "payload", "message", "statusCode", "builder", "getResourceAsStream", "getClass", "setContentType", "getContentMetadata", "getPayload", "setContentLength", "getContentMetadata", "getPayload", "apply", "assertEquals", "getVCloudToken", "assertEquals", "getOrgs", "of", "create"]}, "focal_class": {"identifier": "ParseLoginResponseFromHeaders", "superclass": "", "interfaces": "implements Function<HttpResponse, VCloudSession>", "fields": [{"original_string": "static final Pattern pattern = Pattern.compile(\"(vcloud-token)=?([^;]+)(;.*)?\");", "modifier": "static final", "type": "Pattern", "declarator": "pattern = Pattern.compile(\"(vcloud-token)=?([^;]+)(;.*)?\")", "var_name": "pattern"}, {"original_string": "private final ParseSax.Factory factory;", "modifier": "private final", "type": "ParseSax.Factory", "declarator": "factory", "var_name": "factory"}, {"original_string": "private final Provider<OrgListHandler> orgHandlerProvider;", "modifier": "private final", "type": "Provider<OrgListHandler>", "declarator": "orgHandlerProvider", "var_name": "orgHandlerProvider"}], "methods": [{"identifier": "ParseLoginResponseFromHeaders", "parameters": "(Factory factory, Provider<OrgListHandler> orgHandlerProvider)", "modifiers": "@Inject private", "return": "", "signature": " ParseLoginResponseFromHeaders(Factory factory, Provider<OrgListHandler> orgHandlerProvider)", "full_signature": "@Inject private  ParseLoginResponseFromHeaders(Factory factory, Provider<OrgListHandler> orgHandlerProvider)", "class_method_signature": "ParseLoginResponseFromHeaders.ParseLoginResponseFromHeaders(Factory factory, Provider<OrgListHandler> orgHandlerProvider)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(HttpResponse from)", "modifiers": "public", "return": "VCloudSession", "signature": "VCloudSession apply(HttpResponse from)", "full_signature": "public VCloudSession apply(HttpResponse from)", "class_method_signature": "ParseLoginResponseFromHeaders.apply(HttpResponse from)", "testcase": false, "constructor": false}, {"identifier": "parseTokenFromHeaders", "parameters": "(HttpResponse from)", "modifiers": "public", "return": "String", "signature": "String parseTokenFromHeaders(HttpResponse from)", "full_signature": "public String parseTokenFromHeaders(HttpResponse from)", "class_method_signature": "ParseLoginResponseFromHeaders.parseTokenFromHeaders(HttpResponse from)", "testcase": false, "constructor": false}], "file": "common/trmk/src/main/java/org/jclouds/trmk/vcloud_0_8/functions/ParseLoginResponseFromHeaders.java"}, "focal_method": {"identifier": "apply", "parameters": "(HttpResponse from)", "modifiers": "public", "return": "VCloudSession", "body": "public VCloudSession apply(HttpResponse from) {\n      try {\n         final String token = parseTokenFromHeaders(from);\n         final Map<String, ReferenceType> org = factory.create(orgHandlerProvider.get()).parse(\n               checkNotNull(from.getPayload().getInput(), \"no payload in http response to login request %s\", from));\n\n         return new VCloudSession() {\n            @VCloudToken\n            public String getVCloudToken() {\n               return token;\n            }\n\n            @Org\n            public Map<String, ReferenceType> getOrgs() {\n               return org;\n            }\n         };\n      } finally {\n         releasePayload(from);\n      }\n   }", "signature": "VCloudSession apply(HttpResponse from)", "full_signature": "public VCloudSession apply(HttpResponse from)", "class_method_signature": "ParseLoginResponseFromHeaders.apply(HttpResponse from)", "testcase": false, "constructor": false, "invocations": ["parseTokenFromHeaders", "parse", "create", "get", "checkNotNull", "getInput", "getPayload", "releasePayload"]}, "repository": {"repo_id": 489859, "url": "https://github.com/jclouds/legacy-jclouds", "language": "Java", "is_fork": false, "fork_count": 231, "stargazer_count": 477, "size": 74892, "license": "licensed"}}