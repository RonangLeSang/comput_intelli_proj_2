{"test_class": {"identifier": "DefaultRopContextTest", "superclass": "", "interfaces": "", "fields": [], "file": "rop/src/test/java/com/rop/impl/DefaultRopContextTest.java"}, "test_case": {"identifier": "testWithoutGroupService", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWithoutGroupService() {\n        ApplicationContext context = mock(ApplicationContext.class);\n        when(context.getBeanNamesForType(Object.class)).thenReturn(new String[]{\"service1\"});\n        Class withoutGroupServiceClass = WithoutGroupService.class;\n        when(context.getType(\"service1\")).thenReturn(withoutGroupServiceClass);\n\n        RopContext registryMethod = new DefaultRopContext(context);\n        ServiceMethodHandler handler = registryMethod.getServiceMethodHandler(\"service.method1\", \"1.0\");\n        ServiceMethodDefinition definition = handler.getServiceMethodDefinition();\n        assertNotNull(definition);\n        assertEquals(definition.getMethod(), \"service.method1\");\n        assertEquals(definition.getMethodTitle(), \"\u6d4b\u8bd5\u65b9\u6cd51\");\n        assertEquals(definition.getMethodGroup(), \"GROUP1\");\n        assertEquals(definition.getMethodGroupTitle(), \"\u5206\u7ec41\");\n\n        assertEquals(definition.getTags(), new String[]{\"TAG1\", \"TAG2\"});\n        assertEquals(definition.isIgnoreSign(), true);\n        assertEquals(definition.isNeedInSession(), false);\n        assertEquals(definition.getTimeout(), 100);\n        assertEquals(definition.getVersion(), \"1.0\");\n    }", "signature": "void testWithoutGroupService()", "full_signature": "@Test public void testWithoutGroupService()", "class_method_signature": "DefaultRopContextTest.testWithoutGroupService()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getBeanNamesForType", "thenReturn", "when", "getType", "getServiceMethodHandler", "getServiceMethodDefinition", "assertNotNull", "assertEquals", "getMethod", "assertEquals", "getMethodTitle", "assertEquals", "getMethodGroup", "assertEquals", "getMethodGroupTitle", "assertEquals", "getTags", "assertEquals", "isIgnoreSign", "assertEquals", "isNeedInSession", "assertEquals", "getTimeout", "assertEquals", "getVersion"]}, "focal_class": {"identifier": "DefaultRopContext", "superclass": "", "interfaces": "implements RopContext", "fields": [{"original_string": "protected static Logger logger = LoggerFactory.getLogger(DefaultRopContext.class);", "modifier": "protected static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(DefaultRopContext.class)", "var_name": "logger"}, {"original_string": "private final Map<String, ServiceMethodHandler> serviceHandlerMap = new HashMap<String, ServiceMethodHandler>();", "modifier": "private final", "type": "Map<String, ServiceMethodHandler>", "declarator": "serviceHandlerMap = new HashMap<String, ServiceMethodHandler>()", "var_name": "serviceHandlerMap"}, {"original_string": "private final Set<String> serviceMethods = new HashSet<String>();", "modifier": "private final", "type": "Set<String>", "declarator": "serviceMethods = new HashSet<String>()", "var_name": "serviceMethods"}, {"original_string": "private boolean signEnable;", "modifier": "private", "type": "boolean", "declarator": "signEnable", "var_name": "signEnable"}, {"original_string": "private SessionManager sessionManager;", "modifier": "private", "type": "SessionManager", "declarator": "sessionManager", "var_name": "sessionManager"}], "methods": [{"identifier": "DefaultRopContext", "parameters": "(ApplicationContext context)", "modifiers": "public", "return": "", "signature": " DefaultRopContext(ApplicationContext context)", "full_signature": "public  DefaultRopContext(ApplicationContext context)", "class_method_signature": "DefaultRopContext.DefaultRopContext(ApplicationContext context)", "testcase": false, "constructor": true}, {"identifier": "addServiceMethod", "parameters": "(String methodName, String version, ServiceMethodHandler serviceMethodHandler)", "modifiers": "public", "return": "void", "signature": "void addServiceMethod(String methodName, String version, ServiceMethodHandler serviceMethodHandler)", "full_signature": "public void addServiceMethod(String methodName, String version, ServiceMethodHandler serviceMethodHandler)", "class_method_signature": "DefaultRopContext.addServiceMethod(String methodName, String version, ServiceMethodHandler serviceMethodHandler)", "testcase": false, "constructor": false}, {"identifier": "getServiceMethodHandler", "parameters": "(String methodName, String version)", "modifiers": "public", "return": "ServiceMethodHandler", "signature": "ServiceMethodHandler getServiceMethodHandler(String methodName, String version)", "full_signature": "public ServiceMethodHandler getServiceMethodHandler(String methodName, String version)", "class_method_signature": "DefaultRopContext.getServiceMethodHandler(String methodName, String version)", "testcase": false, "constructor": false}, {"identifier": "isValidMethod", "parameters": "(String methodName)", "modifiers": "public", "return": "boolean", "signature": "boolean isValidMethod(String methodName)", "full_signature": "public boolean isValidMethod(String methodName)", "class_method_signature": "DefaultRopContext.isValidMethod(String methodName)", "testcase": false, "constructor": false}, {"identifier": "isValidVersion", "parameters": "(String methodName, String version)", "modifiers": "public", "return": "boolean", "signature": "boolean isValidVersion(String methodName, String version)", "full_signature": "public boolean isValidVersion(String methodName, String version)", "class_method_signature": "DefaultRopContext.isValidVersion(String methodName, String version)", "testcase": false, "constructor": false}, {"identifier": "isVersionObsoleted", "parameters": "(String methodName, String version)", "modifiers": "public", "return": "boolean", "signature": "boolean isVersionObsoleted(String methodName, String version)", "full_signature": "public boolean isVersionObsoleted(String methodName, String version)", "class_method_signature": "DefaultRopContext.isVersionObsoleted(String methodName, String version)", "testcase": false, "constructor": false}, {"identifier": "getAllServiceMethodHandlers", "parameters": "()", "modifiers": "public", "return": "Map<String, ServiceMethodHandler>", "signature": "Map<String, ServiceMethodHandler> getAllServiceMethodHandlers()", "full_signature": "public Map<String, ServiceMethodHandler> getAllServiceMethodHandlers()", "class_method_signature": "DefaultRopContext.getAllServiceMethodHandlers()", "testcase": false, "constructor": false}, {"identifier": "isSignEnable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSignEnable()", "full_signature": "public boolean isSignEnable()", "class_method_signature": "DefaultRopContext.isSignEnable()", "testcase": false, "constructor": false}, {"identifier": "getSessionManager", "parameters": "()", "modifiers": "public", "return": "SessionManager", "signature": "SessionManager getSessionManager()", "full_signature": "public SessionManager getSessionManager()", "class_method_signature": "DefaultRopContext.getSessionManager()", "testcase": false, "constructor": false}, {"identifier": "setSessionManager", "parameters": "(SessionManager sessionManager)", "modifiers": "public", "return": "void", "signature": "void setSessionManager(SessionManager sessionManager)", "full_signature": "public void setSessionManager(SessionManager sessionManager)", "class_method_signature": "DefaultRopContext.setSessionManager(SessionManager sessionManager)", "testcase": false, "constructor": false}, {"identifier": "setSignEnable", "parameters": "(boolean signEnable)", "modifiers": "public", "return": "void", "signature": "void setSignEnable(boolean signEnable)", "full_signature": "public void setSignEnable(boolean signEnable)", "class_method_signature": "DefaultRopContext.setSignEnable(boolean signEnable)", "testcase": false, "constructor": false}, {"identifier": "registerFromContext", "parameters": "(final ApplicationContext context)", "modifiers": "private", "return": "void", "signature": "void registerFromContext(final ApplicationContext context)", "full_signature": "private void registerFromContext(final ApplicationContext context)", "class_method_signature": "DefaultRopContext.registerFromContext(final ApplicationContext context)", "testcase": false, "constructor": false}, {"identifier": "buildServiceMethodDefinition", "parameters": "(ServiceMethod serviceMethod)", "modifiers": "private", "return": "ServiceMethodDefinition", "signature": "ServiceMethodDefinition buildServiceMethodDefinition(ServiceMethod serviceMethod)", "full_signature": "private ServiceMethodDefinition buildServiceMethodDefinition(ServiceMethod serviceMethod)", "class_method_signature": "DefaultRopContext.buildServiceMethodDefinition(ServiceMethod serviceMethod)", "testcase": false, "constructor": false}, {"identifier": "buildServiceMethodDefinition", "parameters": "(ServiceMethodBean serviceMethodBean, ServiceMethod serviceMethod)", "modifiers": "private", "return": "ServiceMethodDefinition", "signature": "ServiceMethodDefinition buildServiceMethodDefinition(ServiceMethodBean serviceMethodBean, ServiceMethod serviceMethod)", "full_signature": "private ServiceMethodDefinition buildServiceMethodDefinition(ServiceMethodBean serviceMethodBean, ServiceMethod serviceMethod)", "class_method_signature": "DefaultRopContext.buildServiceMethodDefinition(ServiceMethodBean serviceMethodBean, ServiceMethod serviceMethod)", "testcase": false, "constructor": false}, {"identifier": "getIgnoreSignFieldNames", "parameters": "(Class<? extends RopRequest> requestType)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getIgnoreSignFieldNames(Class<? extends RopRequest> requestType)", "full_signature": "public static List<String> getIgnoreSignFieldNames(Class<? extends RopRequest> requestType)", "class_method_signature": "DefaultRopContext.getIgnoreSignFieldNames(Class<? extends RopRequest> requestType)", "testcase": false, "constructor": false}, {"identifier": "getFileItemFieldNames", "parameters": "(Class<? extends RopRequest> requestType)", "modifiers": "private", "return": "List<String>", "signature": "List<String> getFileItemFieldNames(Class<? extends RopRequest> requestType)", "full_signature": "private List<String> getFileItemFieldNames(Class<? extends RopRequest> requestType)", "class_method_signature": "DefaultRopContext.getFileItemFieldNames(Class<? extends RopRequest> requestType)", "testcase": false, "constructor": false}], "file": "rop/src/main/java/com/rop/impl/DefaultRopContext.java"}, "focal_method": {"identifier": "getServiceMethodHandler", "parameters": "(String methodName, String version)", "modifiers": "public", "return": "ServiceMethodHandler", "body": "public ServiceMethodHandler getServiceMethodHandler(String methodName, String version) {\n        return serviceHandlerMap.get(ServiceMethodHandler.methodWithVersion(methodName, version));\n    }", "signature": "ServiceMethodHandler getServiceMethodHandler(String methodName, String version)", "full_signature": "public ServiceMethodHandler getServiceMethodHandler(String methodName, String version)", "class_method_signature": "DefaultRopContext.getServiceMethodHandler(String methodName, String version)", "testcase": false, "constructor": false, "invocations": ["get", "methodWithVersion"]}, "repository": {"repo_id": 3590026, "url": "https://github.com/itstamen/rop", "language": "Java", "is_fork": false, "fork_count": 347, "stargazer_count": 414, "size": 20019, "license": "licensed"}}