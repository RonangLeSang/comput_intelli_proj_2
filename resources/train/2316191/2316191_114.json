{"test_class": {"identifier": "InMemoryConnectionServiceImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/pentaho/platform/dataaccess/datasource/wizard/service/impl/InMemoryConnectionServiceImplTest.java"}, "test_case": {"identifier": "testGetConnections", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetConnections() {\n    try {\n      InMemoryConnectionServiceImpl serv = new InMemoryConnectionServiceImpl();\n      List<IDatabaseConnection> conns = serv.getConnections();\n      assertTrue( conns != null && conns.size() == 0 );\n      IDatabaseConnection connection = new DatabaseConnection();\n      connection.setName( \"Connection 1\" );\n      serv.addConnection( connection );\n      conns = serv.getConnections();\n      assertTrue( conns != null && conns.size() > 0 );\n    } catch ( Exception ex ) {\n      fail();\n    }\n  }", "signature": "void testGetConnections()", "full_signature": "@Test public void testGetConnections()", "class_method_signature": "InMemoryConnectionServiceImplTest.testGetConnections()", "testcase": true, "constructor": false, "invocations": ["getConnections", "assertTrue", "size", "setName", "addConnection", "getConnections", "assertTrue", "size", "fail"]}, "focal_class": {"identifier": "InMemoryConnectionServiceImpl", "superclass": "", "interfaces": "implements IConnectionService", "fields": [{"original_string": "private List<IDatabaseConnection> connectionList = new ArrayList<IDatabaseConnection>();", "modifier": "private", "type": "List<IDatabaseConnection>", "declarator": "connectionList = new ArrayList<IDatabaseConnection>()", "var_name": "connectionList"}, {"original_string": "private static final Log logger = LogFactory.getLog( InMemoryConnectionServiceImpl.class );", "modifier": "private static final", "type": "Log", "declarator": "logger = LogFactory.getLog( InMemoryConnectionServiceImpl.class )", "var_name": "logger"}], "methods": [{"identifier": "InMemoryConnectionServiceImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " InMemoryConnectionServiceImpl()", "full_signature": "public  InMemoryConnectionServiceImpl()", "class_method_signature": "InMemoryConnectionServiceImpl.InMemoryConnectionServiceImpl()", "testcase": false, "constructor": true}, {"identifier": "getConnections", "parameters": "()", "modifiers": "public", "return": "List<IDatabaseConnection>", "signature": "List<IDatabaseConnection> getConnections()", "full_signature": "public List<IDatabaseConnection> getConnections()", "class_method_signature": "InMemoryConnectionServiceImpl.getConnections()", "testcase": false, "constructor": false}, {"identifier": "getConnectionByName", "parameters": "( String name )", "modifiers": "public", "return": "IDatabaseConnection", "signature": "IDatabaseConnection getConnectionByName( String name )", "full_signature": "public IDatabaseConnection getConnectionByName( String name )", "class_method_signature": "InMemoryConnectionServiceImpl.getConnectionByName( String name )", "testcase": false, "constructor": false}, {"identifier": "addConnection", "parameters": "( IDatabaseConnection connection )", "modifiers": "public", "return": "boolean", "signature": "boolean addConnection( IDatabaseConnection connection )", "full_signature": "public boolean addConnection( IDatabaseConnection connection )", "class_method_signature": "InMemoryConnectionServiceImpl.addConnection( IDatabaseConnection connection )", "testcase": false, "constructor": false}, {"identifier": "updateConnection", "parameters": "( IDatabaseConnection connection )", "modifiers": "public", "return": "boolean", "signature": "boolean updateConnection( IDatabaseConnection connection )", "full_signature": "public boolean updateConnection( IDatabaseConnection connection )", "class_method_signature": "InMemoryConnectionServiceImpl.updateConnection( IDatabaseConnection connection )", "testcase": false, "constructor": false}, {"identifier": "deleteConnection", "parameters": "( IDatabaseConnection connection )", "modifiers": "public", "return": "boolean", "signature": "boolean deleteConnection( IDatabaseConnection connection )", "full_signature": "public boolean deleteConnection( IDatabaseConnection connection )", "class_method_signature": "InMemoryConnectionServiceImpl.deleteConnection( IDatabaseConnection connection )", "testcase": false, "constructor": false}, {"identifier": "deleteConnection", "parameters": "( String name )", "modifiers": "public", "return": "boolean", "signature": "boolean deleteConnection( String name )", "full_signature": "public boolean deleteConnection( String name )", "class_method_signature": "InMemoryConnectionServiceImpl.deleteConnection( String name )", "testcase": false, "constructor": false}, {"identifier": "testConnection", "parameters": "( IDatabaseConnection connection )", "modifiers": "public", "return": "boolean", "signature": "boolean testConnection( IDatabaseConnection connection )", "full_signature": "public boolean testConnection( IDatabaseConnection connection )", "class_method_signature": "InMemoryConnectionServiceImpl.testConnection( IDatabaseConnection connection )", "testcase": false, "constructor": false}, {"identifier": "getConnection", "parameters": "( IDatabaseConnection connection )", "modifiers": "private static", "return": "java.sql.Connection", "signature": "java.sql.Connection getConnection( IDatabaseConnection connection )", "full_signature": "private static java.sql.Connection getConnection( IDatabaseConnection connection )", "class_method_signature": "InMemoryConnectionServiceImpl.getConnection( IDatabaseConnection connection )", "testcase": false, "constructor": false}, {"identifier": "isConnectionExist", "parameters": "( String connectionName )", "modifiers": "public", "return": "boolean", "signature": "boolean isConnectionExist( String connectionName )", "full_signature": "public boolean isConnectionExist( String connectionName )", "class_method_signature": "InMemoryConnectionServiceImpl.isConnectionExist( String connectionName )", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/pentaho/platform/dataaccess/datasource/wizard/service/impl/InMemoryConnectionServiceImpl.java"}, "focal_method": {"identifier": "getConnections", "parameters": "()", "modifiers": "public", "return": "List<IDatabaseConnection>", "body": "public List<IDatabaseConnection> getConnections() throws ConnectionServiceException {\n    return connectionList;\n  }", "signature": "List<IDatabaseConnection> getConnections()", "full_signature": "public List<IDatabaseConnection> getConnections()", "class_method_signature": "InMemoryConnectionServiceImpl.getConnections()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2316191, "url": "https://github.com/pentaho/data-access", "language": "Java", "is_fork": false, "fork_count": 138, "stargazer_count": 31, "size": 7276, "license": "licensed"}}