{"test_class": {"identifier": "RelationalServiceInfoTest", "superclass": "", "interfaces": "", "fields": [], "file": "spring-cloud-core/src/test/java/org/springframework/cloud/service/common/RelationalServiceInfoTest.java"}, "test_case": {"identifier": "jdbcUrlNoPassword", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void jdbcUrlNoPassword() {\n\t\tRelationalServiceInfo serviceInfo = createServiceInfo(\"dbtype://username@hostname/database\");\n\n\t\tassertEquals(\"jdbc:jdbcdbtype://hostname/database?user=username\", serviceInfo.getJdbcUrl());\n\t}", "signature": "void jdbcUrlNoPassword()", "full_signature": "@Test public void jdbcUrlNoPassword()", "class_method_signature": "RelationalServiceInfoTest.jdbcUrlNoPassword()", "testcase": true, "constructor": false, "invocations": ["createServiceInfo", "assertEquals", "getJdbcUrl"]}, "focal_class": {"identifier": "RelationalServiceInfo", "superclass": "extends UriBasedServiceInfo", "interfaces": "", "fields": [{"original_string": "public static final String JDBC_PREFIX = \"jdbc:\";", "modifier": "public static final", "type": "String", "declarator": "JDBC_PREFIX = \"jdbc:\"", "var_name": "JDBC_PREFIX"}, {"original_string": "protected final String jdbcUrl;", "modifier": "protected final", "type": "String", "declarator": "jdbcUrl", "var_name": "jdbcUrl"}, {"original_string": "protected final String jdbcUrlDatabaseType;", "modifier": "protected final", "type": "String", "declarator": "jdbcUrlDatabaseType", "var_name": "jdbcUrlDatabaseType"}], "methods": [{"identifier": "RelationalServiceInfo", "parameters": "(String id, String uriString, String jdbcUrlDatabaseType)", "modifiers": "public", "return": "", "signature": " RelationalServiceInfo(String id, String uriString, String jdbcUrlDatabaseType)", "full_signature": "public  RelationalServiceInfo(String id, String uriString, String jdbcUrlDatabaseType)", "class_method_signature": "RelationalServiceInfo.RelationalServiceInfo(String id, String uriString, String jdbcUrlDatabaseType)", "testcase": false, "constructor": true}, {"identifier": "RelationalServiceInfo", "parameters": "(String id, String uriString, String jdbcUrl, String jdbcUrlDatabaseType)", "modifiers": "public", "return": "", "signature": " RelationalServiceInfo(String id, String uriString, String jdbcUrl, String jdbcUrlDatabaseType)", "full_signature": "public  RelationalServiceInfo(String id, String uriString, String jdbcUrl, String jdbcUrlDatabaseType)", "class_method_signature": "RelationalServiceInfo.RelationalServiceInfo(String id, String uriString, String jdbcUrl, String jdbcUrlDatabaseType)", "testcase": false, "constructor": true}, {"identifier": "getJdbcUrl", "parameters": "()", "modifiers": "@ServiceProperty(category = \"connection\") public", "return": "String", "signature": "String getJdbcUrl()", "full_signature": "@ServiceProperty(category = \"connection\") public String getJdbcUrl()", "class_method_signature": "RelationalServiceInfo.getJdbcUrl()", "testcase": false, "constructor": false}, {"identifier": "buildJdbcUrl", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String buildJdbcUrl()", "full_signature": "protected String buildJdbcUrl()", "class_method_signature": "RelationalServiceInfo.buildJdbcUrl()", "testcase": false, "constructor": false}, {"identifier": "formatPort", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String formatPort()", "full_signature": "private String formatPort()", "class_method_signature": "RelationalServiceInfo.formatPort()", "testcase": false, "constructor": false}, {"identifier": "formatUserinfo", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String formatUserinfo()", "full_signature": "private String formatUserinfo()", "class_method_signature": "RelationalServiceInfo.formatUserinfo()", "testcase": false, "constructor": false}, {"identifier": "formatQuery", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String formatQuery()", "full_signature": "private String formatQuery()", "class_method_signature": "RelationalServiceInfo.formatQuery()", "testcase": false, "constructor": false}], "file": "spring-cloud-core/src/main/java/org/springframework/cloud/service/common/RelationalServiceInfo.java"}, "focal_method": {"identifier": "getJdbcUrl", "parameters": "()", "modifiers": "@ServiceProperty(category = \"connection\") public", "return": "String", "body": "@ServiceProperty(category = \"connection\")\n\tpublic String getJdbcUrl() {\n\t\treturn jdbcUrl == null ? buildJdbcUrl() : jdbcUrl;\n\t}", "signature": "String getJdbcUrl()", "full_signature": "@ServiceProperty(category = \"connection\") public String getJdbcUrl()", "class_method_signature": "RelationalServiceInfo.getJdbcUrl()", "testcase": false, "constructor": false, "invocations": ["buildJdbcUrl"]}, "repository": {"repo_id": 9917257, "url": "https://github.com/spring-cloud/spring-cloud-connectors", "language": "Java", "is_fork": false, "fork_count": 155, "stargazer_count": 159, "size": 2712, "license": "licensed"}}