{"test_class": {"identifier": "AnnotationPartitionContextSupplierTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/bazaarvoice/ostrich/pool/AnnotationPartitionContextSupplierTest.java"}, "test_case": {"identifier": "testNamedKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNamedKey() throws Exception {\n        PartitionContextSupplier contextSupplier =\n                new AnnotationPartitionContextSupplier(MyService.class, MyServiceImpl.class);\n\n        // Call unnamed(int)\n        assertEquals(ImmutableMap.<String, Object>of(\"n\", \"named\"),\n                contextSupplier.forCall(MyService.class.getMethod(\"named\", String.class), \"named\").asMap());\n    }", "signature": "void testNamedKey()", "full_signature": "@Test public void testNamedKey()", "class_method_signature": "AnnotationPartitionContextSupplierTest.testNamedKey()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "of", "asMap", "forCall", "getMethod"]}, "focal_class": {"identifier": "AnnotationPartitionContextSupplier", "superclass": "", "interfaces": "implements PartitionContextSupplier", "fields": [{"original_string": "private final Map<Method, String[]> _keyMappings;", "modifier": "private final", "type": "Map<Method, String[]>", "declarator": "_keyMappings", "var_name": "_keyMappings"}], "methods": [{"identifier": "AnnotationPartitionContextSupplier", "parameters": "(Class<S> ifc, Class<? extends S> impl)", "modifiers": "", "return": "<S>", "signature": "<S> AnnotationPartitionContextSupplier(Class<S> ifc, Class<? extends S> impl)", "full_signature": " <S> AnnotationPartitionContextSupplier(Class<S> ifc, Class<? extends S> impl)", "class_method_signature": "AnnotationPartitionContextSupplier.AnnotationPartitionContextSupplier(Class<S> ifc, Class<? extends S> impl)", "testcase": false, "constructor": true}, {"identifier": "forCall", "parameters": "(Method method, Object... args)", "modifiers": "@Override public", "return": "PartitionContext", "signature": "PartitionContext forCall(Method method, Object... args)", "full_signature": "@Override public PartitionContext forCall(Method method, Object... args)", "class_method_signature": "AnnotationPartitionContextSupplier.forCall(Method method, Object... args)", "testcase": false, "constructor": false}, {"identifier": "collectPartitionKeyAnnotations", "parameters": "(Method method)", "modifiers": "private", "return": "String[]", "signature": "String[] collectPartitionKeyAnnotations(Method method)", "full_signature": "private String[] collectPartitionKeyAnnotations(Method method)", "class_method_signature": "AnnotationPartitionContextSupplier.collectPartitionKeyAnnotations(Method method)", "testcase": false, "constructor": false}, {"identifier": "findPartitionKeyAnnotation", "parameters": "(Annotation[] annotations)", "modifiers": "private static", "return": "PartitionKey", "signature": "PartitionKey findPartitionKeyAnnotation(Annotation[] annotations)", "full_signature": "private static PartitionKey findPartitionKeyAnnotation(Annotation[] annotations)", "class_method_signature": "AnnotationPartitionContextSupplier.findPartitionKeyAnnotation(Annotation[] annotations)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/bazaarvoice/ostrich/pool/AnnotationPartitionContextSupplier.java"}, "focal_method": {"identifier": "forCall", "parameters": "(Method method, Object... args)", "modifiers": "@Override public", "return": "PartitionContext", "body": "@Override\n    public PartitionContext forCall(Method method, Object... args) {\n        String[] mappings = _keyMappings.get(method);\n        if (mappings == null) {\n            return PartitionContextBuilder.empty();\n        }\n\n        PartitionContextBuilder builder = new PartitionContextBuilder();\n        for (int i = 0; i < mappings.length; i++) {\n            if (mappings[i] != null && args[i] != null) {\n                builder.put(mappings[i], args[i]);\n            }\n        }\n        return builder.build();\n    }", "signature": "PartitionContext forCall(Method method, Object... args)", "full_signature": "@Override public PartitionContext forCall(Method method, Object... args)", "class_method_signature": "AnnotationPartitionContextSupplier.forCall(Method method, Object... args)", "testcase": false, "constructor": false, "invocations": ["get", "empty", "put", "build"]}, "repository": {"repo_id": 4341250, "url": "https://github.com/bazaarvoice/ostrich", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 26, "size": 1577, "license": "licensed"}}