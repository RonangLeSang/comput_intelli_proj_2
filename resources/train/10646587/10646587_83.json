{"test_class": {"identifier": "CouchDBDataStoreTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static CouchDBDataStore datastore;", "modifier": "private static", "type": "CouchDBDataStore", "declarator": "datastore", "var_name": "datastore"}], "file": "datastores/couchdb/src/test/java/org/jboss/aerogear/simplepush/server/datastore/CouchDBDataStoreTest.java"}, "test_case": {"identifier": "saveUnacknowledged", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void saveUnacknowledged() throws ChannelNotFoundException {\n        final String uaid = UUIDUtil.newUAID();\n        final Channel channel = newChannel(uaid, UUID.randomUUID().toString(), 10);\n        datastore.saveChannel(channel);\n        final String savedUaid = datastore.saveUnacknowledged(channel.getChannelId(), channel.getVersion());\n        assertThat(savedUaid, is(equalTo(uaid)));\n    }", "signature": "void saveUnacknowledged()", "full_signature": "@Test public void saveUnacknowledged()", "class_method_signature": "CouchDBDataStoreTest.saveUnacknowledged()", "testcase": true, "constructor": false, "invocations": ["newUAID", "newChannel", "toString", "randomUUID", "saveChannel", "saveUnacknowledged", "getChannelId", "getVersion", "assertThat", "is", "equalTo"]}, "focal_class": {"identifier": "CouchDBDataStore", "superclass": "", "interfaces": "implements DataStore", "fields": [{"original_string": "private static final String UAID_FIELD = \"uaid\";", "modifier": "private static final", "type": "String", "declarator": "UAID_FIELD = \"uaid\"", "var_name": "UAID_FIELD"}, {"original_string": "private static final String TYPE_FIELD = \"type\";", "modifier": "private static final", "type": "String", "declarator": "TYPE_FIELD = \"type\"", "var_name": "TYPE_FIELD"}, {"original_string": "private static final String TOKEN_FIELD = \"token\";", "modifier": "private static final", "type": "String", "declarator": "TOKEN_FIELD = \"token\"", "var_name": "TOKEN_FIELD"}, {"original_string": "private static final String CHID_FIELD = \"chid\";", "modifier": "private static final", "type": "String", "declarator": "CHID_FIELD = \"chid\"", "var_name": "CHID_FIELD"}, {"original_string": "private static final String VERSION_FIELD = \"version\";", "modifier": "private static final", "type": "String", "declarator": "VERSION_FIELD = \"version\"", "var_name": "VERSION_FIELD"}, {"original_string": "private static final String DOC_FIELD = \"doc\";", "modifier": "private static final", "type": "String", "declarator": "DOC_FIELD = \"doc\"", "var_name": "DOC_FIELD"}, {"original_string": "private final HttpClient httpClient;", "modifier": "private final", "type": "HttpClient", "declarator": "httpClient", "var_name": "httpClient"}, {"original_string": "private final StdCouchDbInstance stdCouchDbInstance;", "modifier": "private final", "type": "StdCouchDbInstance", "declarator": "stdCouchDbInstance", "var_name": "stdCouchDbInstance"}, {"original_string": "private final StdCouchDbConnector db;", "modifier": "private final", "type": "StdCouchDbConnector", "declarator": "db", "var_name": "db"}, {"original_string": "private final DesignDocument designDocument;", "modifier": "private final", "type": "DesignDocument", "declarator": "designDocument", "var_name": "designDocument"}, {"original_string": "private final static Charset UTF_8 = Charset.forName(\"UTF-8\");", "modifier": "private final static", "type": "Charset", "declarator": "UTF_8 = Charset.forName(\"UTF-8\")", "var_name": "UTF_8"}], "methods": [{"identifier": "CouchDBDataStore", "parameters": "(final String url, final String dbName)", "modifiers": "public", "return": "", "signature": " CouchDBDataStore(final String url, final String dbName)", "full_signature": "public  CouchDBDataStore(final String url, final String dbName)", "class_method_signature": "CouchDBDataStore.CouchDBDataStore(final String url, final String dbName)", "testcase": false, "constructor": true}, {"identifier": "addView", "parameters": "(final DesignDocument doc, final Views view)", "modifiers": "private", "return": "void", "signature": "void addView(final DesignDocument doc, final Views view)", "full_signature": "private void addView(final DesignDocument doc, final Views view)", "class_method_signature": "CouchDBDataStore.addView(final DesignDocument doc, final Views view)", "testcase": false, "constructor": false}, {"identifier": "savePrivateKeySalt", "parameters": "(final byte[] salt)", "modifiers": "@Override public", "return": "void", "signature": "void savePrivateKeySalt(final byte[] salt)", "full_signature": "@Override public void savePrivateKeySalt(final byte[] salt)", "class_method_signature": "CouchDBDataStore.savePrivateKeySalt(final byte[] salt)", "testcase": false, "constructor": false}, {"identifier": "getPrivateKeySalt", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] getPrivateKeySalt()", "full_signature": "@Override public byte[] getPrivateKeySalt()", "class_method_signature": "CouchDBDataStore.getPrivateKeySalt()", "testcase": false, "constructor": false}, {"identifier": "saveChannel", "parameters": "(final Channel channel)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean saveChannel(final Channel channel)", "full_signature": "@Override public boolean saveChannel(final Channel channel)", "class_method_signature": "CouchDBDataStore.saveChannel(final Channel channel)", "testcase": false, "constructor": false}, {"identifier": "channelAsMap", "parameters": "(final Channel channel)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> channelAsMap(final Channel channel)", "full_signature": "private Map<String, String> channelAsMap(final Channel channel)", "class_method_signature": "CouchDBDataStore.channelAsMap(final Channel channel)", "testcase": false, "constructor": false}, {"identifier": "getChannel", "parameters": "(final String channelId)", "modifiers": "@Override public", "return": "Channel", "signature": "Channel getChannel(final String channelId)", "full_signature": "@Override public Channel getChannel(final String channelId)", "class_method_signature": "CouchDBDataStore.getChannel(final String channelId)", "testcase": false, "constructor": false}, {"identifier": "getChannelJson", "parameters": "(final String channelId)", "modifiers": "private", "return": "JsonNode", "signature": "JsonNode getChannelJson(final String channelId)", "full_signature": "private JsonNode getChannelJson(final String channelId)", "class_method_signature": "CouchDBDataStore.getChannelJson(final String channelId)", "testcase": false, "constructor": false}, {"identifier": "channelFromJson", "parameters": "(final JsonNode node)", "modifiers": "private", "return": "Channel", "signature": "Channel channelFromJson(final JsonNode node)", "full_signature": "private Channel channelFromJson(final JsonNode node)", "class_method_signature": "CouchDBDataStore.channelFromJson(final JsonNode node)", "testcase": false, "constructor": false}, {"identifier": "removeChannels", "parameters": "(final String uaid)", "modifiers": "@Override public", "return": "void", "signature": "void removeChannels(final String uaid)", "full_signature": "@Override public void removeChannels(final String uaid)", "class_method_signature": "CouchDBDataStore.removeChannels(final String uaid)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(final String viewName, final String key)", "modifiers": "private", "return": "ViewQuery", "signature": "ViewQuery query(final String viewName, final String key)", "full_signature": "private ViewQuery query(final String viewName, final String key)", "class_method_signature": "CouchDBDataStore.query(final String viewName, final String key)", "testcase": false, "constructor": false}, {"identifier": "removeChannels", "parameters": "(final Set<String> channelIds)", "modifiers": "@Override public", "return": "void", "signature": "void removeChannels(final Set<String> channelIds)", "full_signature": "@Override public void removeChannels(final Set<String> channelIds)", "class_method_signature": "CouchDBDataStore.removeChannels(final Set<String> channelIds)", "testcase": false, "constructor": false}, {"identifier": "channelsQuery", "parameters": "(final Set<String> keys)", "modifiers": "private", "return": "ViewQuery", "signature": "ViewQuery channelsQuery(final Set<String> keys)", "full_signature": "private ViewQuery channelsQuery(final Set<String> keys)", "class_method_signature": "CouchDBDataStore.channelsQuery(final Set<String> keys)", "testcase": false, "constructor": false}, {"identifier": "getChannelIds", "parameters": "(final String uaid)", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getChannelIds(final String uaid)", "full_signature": "@Override public Set<String> getChannelIds(final String uaid)", "class_method_signature": "CouchDBDataStore.getChannelIds(final String uaid)", "testcase": false, "constructor": false}, {"identifier": "updateVersion", "parameters": "(final String endpointToken, final long version)", "modifiers": "@Override public", "return": "String", "signature": "String updateVersion(final String endpointToken, final long version)", "full_signature": "@Override public String updateVersion(final String endpointToken, final long version)", "class_method_signature": "CouchDBDataStore.updateVersion(final String endpointToken, final long version)", "testcase": false, "constructor": false}, {"identifier": "saveUnacknowledged", "parameters": "(final String channelId, final long version)", "modifiers": "@Override public", "return": "String", "signature": "String saveUnacknowledged(final String channelId, final long version)", "full_signature": "@Override public String saveUnacknowledged(final String channelId, final long version)", "class_method_signature": "CouchDBDataStore.saveUnacknowledged(final String channelId, final long version)", "testcase": false, "constructor": false}, {"identifier": "docToAckMap", "parameters": "(final ObjectNode doc, final long version)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> docToAckMap(final ObjectNode doc, final long version)", "full_signature": "private Map<String, String> docToAckMap(final ObjectNode doc, final long version)", "class_method_signature": "CouchDBDataStore.docToAckMap(final ObjectNode doc, final long version)", "testcase": false, "constructor": false}, {"identifier": "getUnacknowledged", "parameters": "(final String uaid)", "modifiers": "@Override public", "return": "Set<Ack>", "signature": "Set<Ack> getUnacknowledged(final String uaid)", "full_signature": "@Override public Set<Ack> getUnacknowledged(final String uaid)", "class_method_signature": "CouchDBDataStore.getUnacknowledged(final String uaid)", "testcase": false, "constructor": false}, {"identifier": "removeAcknowledged", "parameters": "(final String uaid, final Set<Ack> acked)", "modifiers": "@Override public", "return": "Set<Ack>", "signature": "Set<Ack> removeAcknowledged(final String uaid, final Set<Ack> acked)", "full_signature": "@Override public Set<Ack> removeAcknowledged(final String uaid, final Set<Ack> acked)", "class_method_signature": "CouchDBDataStore.removeAcknowledged(final String uaid, final Set<Ack> acked)", "testcase": false, "constructor": false}, {"identifier": "rowsToAcks", "parameters": "(final List<Row> rows)", "modifiers": "private", "return": "Set<Ack>", "signature": "Set<Ack> rowsToAcks(final List<Row> rows)", "full_signature": "private Set<Ack> rowsToAcks(final List<Row> rows)", "class_method_signature": "CouchDBDataStore.rowsToAcks(final List<Row> rows)", "testcase": false, "constructor": false}], "file": "datastores/couchdb/src/main/java/org/jboss/aerogear/simplepush/server/datastore/CouchDBDataStore.java"}, "focal_method": {"identifier": "saveUnacknowledged", "parameters": "(final String channelId, final long version)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String saveUnacknowledged(final String channelId, final long version) throws ChannelNotFoundException {\n        final JsonNode json = getChannelJson(channelId);\n        final Map<String, String> unack = docToAckMap((ObjectNode) json.get(DOC_FIELD), version);\n        db.create(unack);\n        return unack.get(UAID_FIELD);\n    }", "signature": "String saveUnacknowledged(final String channelId, final long version)", "full_signature": "@Override public String saveUnacknowledged(final String channelId, final long version)", "class_method_signature": "CouchDBDataStore.saveUnacknowledged(final String channelId, final long version)", "testcase": false, "constructor": false, "invocations": ["getChannelJson", "docToAckMap", "get", "create", "get"]}, "repository": {"repo_id": 10646587, "url": "https://github.com/aerogear-attic/aerogear-simplepush-server", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 31, "size": 2569, "license": "licensed"}}