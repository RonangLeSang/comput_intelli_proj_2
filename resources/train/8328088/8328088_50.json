{"test_class": {"identifier": "ClientFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static ClientFactory factory;", "modifier": "private static", "type": "ClientFactory", "declarator": "factory", "var_name": "factory"}], "file": "moviedatabase-api-client/src/test/java/name/abhijitsarkar/moviedatabase/api/client/dao/ClientFactoryTest.java"}, "test_case": {"identifier": "testClients", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testClients() {\n\t\tClient omdbApiClient = factory.getClient(ClientType.THE_OMDB_API);\n\t\tClient deanClatworthyClient = factory\n\t\t\t\t.getClient(ClientType.DEAN_CLATWORTHY);\n\t\tassertNotNull(omdbApiClient);\n\t\tassertTrue(omdbApiClient instanceof OmdbApiClient);\n\t\tassertNotNull(deanClatworthyClient);\n\t\tassertTrue(deanClatworthyClient instanceof DeanClatworthyClient);\n\t\tassertEquals(\"http://www.omdbapi.com\", omdbApiClient.getEndpoint());\n\t\tassertEquals(\"http://deanclatworthy.com/imdb\",\n\t\t\t\tdeanClatworthyClient.getEndpoint());\n\t}", "signature": "void testClients()", "full_signature": "@Test public void testClients()", "class_method_signature": "ClientFactoryTest.testClients()", "testcase": true, "constructor": false, "invocations": ["getClient", "getClient", "assertNotNull", "assertTrue", "assertNotNull", "assertTrue", "assertEquals", "getEndpoint", "assertEquals", "getEndpoint"]}, "focal_class": {"identifier": "ClientFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Map<ClientType, Client> clients;", "modifier": "private static", "type": "Map<ClientType, Client>", "declarator": "clients", "var_name": "clients"}, {"original_string": "private static ClientFactory factory;", "modifier": "private static", "type": "ClientFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "private static AnnotationConfigApplicationContext ctx;", "modifier": "private static", "type": "AnnotationConfigApplicationContext", "declarator": "ctx", "var_name": "ctx"}], "methods": [{"identifier": "ClientFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " ClientFactory()", "full_signature": "private  ClientFactory()", "class_method_signature": "ClientFactory.ClientFactory()", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static final", "return": "ClientFactory", "signature": "ClientFactory getInstance()", "full_signature": "public static final ClientFactory getInstance()", "class_method_signature": "ClientFactory.getInstance()", "testcase": false, "constructor": false}, {"identifier": "getClient", "parameters": "(ClientType type)", "modifiers": "public final", "return": "Client", "signature": "Client getClient(ClientType type)", "full_signature": "public final Client getClient(ClientType type)", "class_method_signature": "ClientFactory.getClient(ClientType type)", "testcase": false, "constructor": false}], "file": "moviedatabase-api-client/src/main/java/name/abhijitsarkar/moviedatabase/api/client/dao/ClientFactory.java"}, "focal_method": {"identifier": "getClient", "parameters": "(ClientType type)", "modifiers": "public final", "return": "Client", "body": "public final Client getClient(ClientType type) {\n\t\tif (clients.get(type) == null) {\n\t\t\tswitch (type) {\n\t\t\tcase THE_OMDB_API:\n\t\t\t\tclients.put(type, ctx.getBean(\"omdbApiClient\", Client.class));\n\t\t\t\tbreak;\n\t\t\tcase DEAN_CLATWORTHY:\n\t\t\t\tclients.put(type,\n\t\t\t\t\t\tctx.getBean(\"deanClatworthyClient\", Client.class));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn clients.get(type);\n\t}", "signature": "Client getClient(ClientType type)", "full_signature": "public final Client getClient(ClientType type)", "class_method_signature": "ClientFactory.getClient(ClientType type)", "testcase": false, "constructor": false, "invocations": ["get", "put", "getBean", "put", "getBean", "get"]}, "repository": {"repo_id": 8328088, "url": "https://github.com/asarkar/java", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 9, "size": 1575, "license": "licensed"}}