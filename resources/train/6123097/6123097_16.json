{"test_class": {"identifier": "BibTeXToBibEntryReaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final BibTeXToBibEntryReader reader = new BibTeXToBibEntryReader();", "modifier": "private final", "type": "BibTeXToBibEntryReader", "declarator": "reader = new BibTeXToBibEntryReader()", "var_name": "reader"}, {"original_string": "private final List<String> bibtex = StandardDataExamples.getReferencesAsBibTeX();", "modifier": "private final", "type": "List<String>", "declarator": "bibtex = StandardDataExamples.getReferencesAsBibTeX()", "var_name": "bibtex"}, {"original_string": "private final List<BibEntry> entries = StandardDataExamples.getReferencesAsBibEntry();", "modifier": "private final", "type": "List<BibEntry>", "declarator": "entries = StandardDataExamples.getReferencesAsBibEntry()", "var_name": "entries"}], "file": "cermine-impl/src/test/java/pl/edu/icm/cermine/bibref/transformers/BibTeXToBibEntryReaderTest.java"}, "test_case": {"identifier": "testRead", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRead() throws TransformationException {\n        assertEquals(entries.get(0), reader.read(bibtex.get(0)));\n        \n        StringReader sr = new StringReader(bibtex.get(0));\n        assertEquals(entries.get(0), reader.read(sr));\n    }", "signature": "void testRead()", "full_signature": "@Test public void testRead()", "class_method_signature": "BibTeXToBibEntryReaderTest.testRead()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "get", "read", "get", "get", "assertEquals", "get", "read"]}, "focal_class": {"identifier": "BibTeXToBibEntryReader", "superclass": "", "interfaces": "implements FormatToModelReader<BibEntry>", "fields": [], "methods": [{"identifier": "read", "parameters": "(String string, Object... hints)", "modifiers": "@Override public", "return": "BibEntry", "signature": "BibEntry read(String string, Object... hints)", "full_signature": "@Override public BibEntry read(String string, Object... hints)", "class_method_signature": "BibTeXToBibEntryReader.read(String string, Object... hints)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(Reader reader, Object... hints)", "modifiers": "@Override public", "return": "BibEntry", "signature": "BibEntry read(Reader reader, Object... hints)", "full_signature": "@Override public BibEntry read(Reader reader, Object... hints)", "class_method_signature": "BibTeXToBibEntryReader.read(Reader reader, Object... hints)", "testcase": false, "constructor": false}, {"identifier": "readAll", "parameters": "(String string, Object... hints)", "modifiers": "@Override public", "return": "List<BibEntry>", "signature": "List<BibEntry> readAll(String string, Object... hints)", "full_signature": "@Override public List<BibEntry> readAll(String string, Object... hints)", "class_method_signature": "BibTeXToBibEntryReader.readAll(String string, Object... hints)", "testcase": false, "constructor": false}, {"identifier": "readAll", "parameters": "(Reader reader, Object... hints)", "modifiers": "@Override public", "return": "List<BibEntry>", "signature": "List<BibEntry> readAll(Reader reader, Object... hints)", "full_signature": "@Override public List<BibEntry> readAll(Reader reader, Object... hints)", "class_method_signature": "BibTeXToBibEntryReader.readAll(Reader reader, Object... hints)", "testcase": false, "constructor": false}, {"identifier": "processBibteX", "parameters": "(String bibteX)", "modifiers": "protected", "return": "BibEntry", "signature": "BibEntry processBibteX(String bibteX)", "full_signature": "protected BibEntry processBibteX(String bibteX)", "class_method_signature": "BibTeXToBibEntryReader.processBibteX(String bibteX)", "testcase": false, "constructor": false}, {"identifier": "revertEscape", "parameters": "(String text)", "modifiers": "protected", "return": "String", "signature": "String revertEscape(String text)", "full_signature": "protected String revertEscape(String text)", "class_method_signature": "BibTeXToBibEntryReader.revertEscape(String text)", "testcase": false, "constructor": false}], "file": "cermine-impl/src/main/java/pl/edu/icm/cermine/bibref/transformers/BibTeXToBibEntryReader.java"}, "focal_method": {"identifier": "read", "parameters": "(String string, Object... hints)", "modifiers": "@Override public", "return": "BibEntry", "body": "@Override\n    public BibEntry read(String string, Object... hints) throws TransformationException {\n        return processBibteX(string);\n    }", "signature": "BibEntry read(String string, Object... hints)", "full_signature": "@Override public BibEntry read(String string, Object... hints)", "class_method_signature": "BibTeXToBibEntryReader.read(String string, Object... hints)", "testcase": false, "constructor": false, "invocations": ["processBibteX"]}, "repository": {"repo_id": 6123097, "url": "https://github.com/CeON/CERMINE", "language": "Java", "is_fork": false, "fork_count": 76, "stargazer_count": 320, "size": 244644, "license": "licensed"}}