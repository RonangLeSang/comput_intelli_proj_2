{"test_class": {"identifier": "TestScheduledTaskImpl", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ScheduledTaskImpl task;", "modifier": "private", "type": "ScheduledTaskImpl", "declarator": "task", "var_name": "task"}, {"original_string": "private Identity defaultIdentity = new Identity() {\n        public String getName() { return \"\"; }\n        public void notifyLoggedIn() {}\n        public void notifyLoggedOut() {}\n    };", "modifier": "private", "type": "Identity", "declarator": "defaultIdentity = new Identity() {\n        public String getName() { return \"\"; }\n        public void notifyLoggedIn() {}\n        public void notifyLoggedOut() {}\n    }", "var_name": "defaultIdentity"}, {"original_string": "private KernelRunnable runnable = new KernelRunnable() {\n        public String getBaseTaskType() { return \"\"; }\n        public void run() throws Exception { }\n    };", "modifier": "private", "type": "KernelRunnable", "declarator": "runnable = new KernelRunnable() {\n        public String getBaseTaskType() { return \"\"; }\n        public void run() throws Exception { }\n    }", "var_name": "runnable"}], "file": "sgs-server/src/test/java/com/sun/sgs/impl/kernel/TestScheduledTaskImpl.java"}, "test_case": {"identifier": "setDoneWhenCancelled", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setDoneWhenCancelled() throws Exception {\n        setTaskState(\"CANCELLED\");\n        task.setDone(null);\n        Assert.assertEquals(\"CANCELLED\", getTaskState());\n    }", "signature": "void setDoneWhenCancelled()", "full_signature": "@Test public void setDoneWhenCancelled()", "class_method_signature": "TestScheduledTaskImpl.setDoneWhenCancelled()", "testcase": true, "constructor": false, "invocations": ["setTaskState", "setDone", "assertEquals", "getTaskState"]}, "focal_class": {"identifier": "ScheduledTaskImpl", "superclass": "", "interfaces": "implements ScheduledTask", "fields": [{"original_string": "private final KernelRunnable task;", "modifier": "private final", "type": "KernelRunnable", "declarator": "task", "var_name": "task"}, {"original_string": "private final Identity owner;", "modifier": "private final", "type": "Identity", "declarator": "owner", "var_name": "owner"}, {"original_string": "private final long period;", "modifier": "private final", "type": "long", "declarator": "period", "var_name": "period"}, {"original_string": "private volatile Priority priority;", "modifier": "private volatile", "type": "Priority", "declarator": "priority", "var_name": "priority"}, {"original_string": "private volatile long startTime;", "modifier": "private volatile", "type": "long", "declarator": "startTime", "var_name": "startTime"}, {"original_string": "private RecurringTaskHandle recurringTaskHandle = null;", "modifier": "private", "type": "RecurringTaskHandle", "declarator": "recurringTaskHandle = null", "var_name": "recurringTaskHandle"}, {"original_string": "private int tryCount = 0;", "modifier": "private", "type": "int", "declarator": "tryCount = 0", "var_name": "tryCount"}, {"original_string": "private TaskQueue queue = null;", "modifier": "private", "type": "TaskQueue", "declarator": "queue = null", "var_name": "queue"}, {"original_string": "private volatile long timeout;", "modifier": "private volatile", "type": "long", "declarator": "timeout", "var_name": "timeout"}, {"original_string": "private volatile Throwable lastFailure = null;", "modifier": "private volatile", "type": "Throwable", "declarator": "lastFailure = null", "var_name": "lastFailure"}, {"original_string": "private State state = State.RUNNABLE;", "modifier": "private", "type": "State", "declarator": "state = State.RUNNABLE", "var_name": "state"}, {"original_string": "private Throwable result = null;", "modifier": "private", "type": "Throwable", "declarator": "result = null", "var_name": "result"}], "methods": [{"identifier": "ScheduledTaskImpl", "parameters": "(Builder builder)", "modifiers": "private", "return": "", "signature": " ScheduledTaskImpl(Builder builder)", "full_signature": "private  ScheduledTaskImpl(Builder builder)", "class_method_signature": "ScheduledTaskImpl.ScheduledTaskImpl(Builder builder)", "testcase": false, "constructor": true}, {"identifier": "getTask", "parameters": "()", "modifiers": "public", "return": "KernelRunnable", "signature": "KernelRunnable getTask()", "full_signature": "public KernelRunnable getTask()", "class_method_signature": "ScheduledTaskImpl.getTask()", "testcase": false, "constructor": false}, {"identifier": "getOwner", "parameters": "()", "modifiers": "public", "return": "Identity", "signature": "Identity getOwner()", "full_signature": "public Identity getOwner()", "class_method_signature": "ScheduledTaskImpl.getOwner()", "testcase": false, "constructor": false}, {"identifier": "getPriority", "parameters": "()", "modifiers": "public", "return": "Priority", "signature": "Priority getPriority()", "full_signature": "public Priority getPriority()", "class_method_signature": "ScheduledTaskImpl.getPriority()", "testcase": false, "constructor": false}, {"identifier": "getStartTime", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getStartTime()", "full_signature": "public long getStartTime()", "class_method_signature": "ScheduledTaskImpl.getStartTime()", "testcase": false, "constructor": false}, {"identifier": "getPeriod", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getPeriod()", "full_signature": "public long getPeriod()", "class_method_signature": "ScheduledTaskImpl.getPeriod()", "testcase": false, "constructor": false}, {"identifier": "getTryCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTryCount()", "full_signature": "public int getTryCount()", "class_method_signature": "ScheduledTaskImpl.getTryCount()", "testcase": false, "constructor": false}, {"identifier": "getTimeout", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getTimeout()", "full_signature": "public long getTimeout()", "class_method_signature": "ScheduledTaskImpl.getTimeout()", "testcase": false, "constructor": false}, {"identifier": "getLastFailure", "parameters": "()", "modifiers": "public", "return": "Throwable", "signature": "Throwable getLastFailure()", "full_signature": "public Throwable getLastFailure()", "class_method_signature": "ScheduledTaskImpl.getLastFailure()", "testcase": false, "constructor": false}, {"identifier": "setPriority", "parameters": "(Priority priority)", "modifiers": "public", "return": "void", "signature": "void setPriority(Priority priority)", "full_signature": "public void setPriority(Priority priority)", "class_method_signature": "ScheduledTaskImpl.setPriority(Priority priority)", "testcase": false, "constructor": false}, {"identifier": "isRecurring", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRecurring()", "full_signature": "public boolean isRecurring()", "class_method_signature": "ScheduledTaskImpl.isRecurring()", "testcase": false, "constructor": false}, {"identifier": "getRecurringTaskHandle", "parameters": "()", "modifiers": "public", "return": "RecurringTaskHandle", "signature": "RecurringTaskHandle getRecurringTaskHandle()", "full_signature": "public RecurringTaskHandle getRecurringTaskHandle()", "class_method_signature": "ScheduledTaskImpl.getRecurringTaskHandle()", "testcase": false, "constructor": false}, {"identifier": "isCancelled", "parameters": "()", "modifiers": "public synchronized", "return": "boolean", "signature": "boolean isCancelled()", "full_signature": "public synchronized boolean isCancelled()", "class_method_signature": "ScheduledTaskImpl.isCancelled()", "testcase": false, "constructor": false}, {"identifier": "cancel", "parameters": "(boolean block)", "modifiers": "public synchronized", "return": "boolean", "signature": "boolean cancel(boolean block)", "full_signature": "public synchronized boolean cancel(boolean block)", "class_method_signature": "ScheduledTaskImpl.cancel(boolean block)", "testcase": false, "constructor": false}, {"identifier": "cancel", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void cancel()", "full_signature": "private void cancel()", "class_method_signature": "ScheduledTaskImpl.cancel()", "testcase": false, "constructor": false}, {"identifier": "setTimeout", "parameters": "(long timeout)", "modifiers": "public", "return": "void", "signature": "void setTimeout(long timeout)", "full_signature": "public void setTimeout(long timeout)", "class_method_signature": "ScheduledTaskImpl.setTimeout(long timeout)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "synchronized", "return": "Throwable", "signature": "Throwable get()", "full_signature": "synchronized Throwable get()", "class_method_signature": "ScheduledTaskImpl.get()", "testcase": false, "constructor": false}, {"identifier": "resetStartTime", "parameters": "()", "modifiers": "", "return": "void", "signature": "void resetStartTime()", "full_signature": " void resetStartTime()", "class_method_signature": "ScheduledTaskImpl.resetStartTime()", "testcase": false, "constructor": false}, {"identifier": "isDone", "parameters": "()", "modifiers": "synchronized", "return": "boolean", "signature": "boolean isDone()", "full_signature": "synchronized boolean isDone()", "class_method_signature": "ScheduledTaskImpl.isDone()", "testcase": false, "constructor": false}, {"identifier": "setRunning", "parameters": "(boolean running)", "modifiers": "synchronized", "return": "boolean", "signature": "boolean setRunning(boolean running)", "full_signature": "synchronized boolean setRunning(boolean running)", "class_method_signature": "ScheduledTaskImpl.setRunning(boolean running)", "testcase": false, "constructor": false}, {"identifier": "setInterrupted", "parameters": "()", "modifiers": "synchronized", "return": "boolean", "signature": "boolean setInterrupted()", "full_signature": "synchronized boolean setInterrupted()", "class_method_signature": "ScheduledTaskImpl.setInterrupted()", "testcase": false, "constructor": false}, {"identifier": "isRunning", "parameters": "()", "modifiers": "synchronized", "return": "boolean", "signature": "boolean isRunning()", "full_signature": "synchronized boolean isRunning()", "class_method_signature": "ScheduledTaskImpl.isRunning()", "testcase": false, "constructor": false}, {"identifier": "setDone", "parameters": "(Throwable result)", "modifiers": "synchronized", "return": "void", "signature": "void setDone(Throwable result)", "full_signature": "synchronized void setDone(Throwable result)", "class_method_signature": "ScheduledTaskImpl.setDone(Throwable result)", "testcase": false, "constructor": false}, {"identifier": "setRecurringTaskHandle", "parameters": "(RecurringTaskHandle handle)", "modifiers": "", "return": "void", "signature": "void setRecurringTaskHandle(RecurringTaskHandle handle)", "full_signature": " void setRecurringTaskHandle(RecurringTaskHandle handle)", "class_method_signature": "ScheduledTaskImpl.setRecurringTaskHandle(RecurringTaskHandle handle)", "testcase": false, "constructor": false}, {"identifier": "incrementTryCount", "parameters": "()", "modifiers": "", "return": "void", "signature": "void incrementTryCount()", "full_signature": " void incrementTryCount()", "class_method_signature": "ScheduledTaskImpl.incrementTryCount()", "testcase": false, "constructor": false}, {"identifier": "setLastFailure", "parameters": "(Throwable lastFailure)", "modifiers": "", "return": "void", "signature": "void setLastFailure(Throwable lastFailure)", "full_signature": " void setLastFailure(Throwable lastFailure)", "class_method_signature": "ScheduledTaskImpl.setLastFailure(Throwable lastFailure)", "testcase": false, "constructor": false}, {"identifier": "setTaskQueue", "parameters": "(TaskQueue queue)", "modifiers": "", "return": "void", "signature": "void setTaskQueue(TaskQueue queue)", "full_signature": " void setTaskQueue(TaskQueue queue)", "class_method_signature": "ScheduledTaskImpl.setTaskQueue(TaskQueue queue)", "testcase": false, "constructor": false}, {"identifier": "getTaskQueue", "parameters": "()", "modifiers": "", "return": "TaskQueue", "signature": "TaskQueue getTaskQueue()", "full_signature": " TaskQueue getTaskQueue()", "class_method_signature": "ScheduledTaskImpl.getTaskQueue()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "ScheduledTaskImpl.toString()", "testcase": false, "constructor": false}], "file": "sgs-server/src/main/java/com/sun/sgs/impl/kernel/ScheduledTaskImpl.java"}, "focal_method": {"identifier": "setDone", "parameters": "(Throwable result)", "modifiers": "synchronized", "return": "void", "body": "synchronized void setDone(Throwable result) {\n        if ((state != State.RUNNING) && (state != State.INTERRUPTED)) {\n            return;\n        }\n        state = State.COMPLETED;\n        this.result = result;\n        notifyAll();\n    }", "signature": "void setDone(Throwable result)", "full_signature": "synchronized void setDone(Throwable result)", "class_method_signature": "ScheduledTaskImpl.setDone(Throwable result)", "testcase": false, "constructor": false, "invocations": ["notifyAll"]}, "repository": {"repo_id": 5598875, "url": "https://github.com/dworkin/reddwarf", "language": "Java", "is_fork": false, "fork_count": 49, "stargazer_count": 30, "size": 144063, "license": "licensed"}}