{"test_class": {"identifier": "SessionValidityInfoTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/de/javakaffee/web/msm/SessionValidityInfoTest.java"}, "test_case": {"identifier": "negativeInactivityAlwaysValid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void negativeInactivityAlwaysValid() {\n        final SessionValidityInfo info = new SessionValidityInfo(-1, 0, 0);\n        assertTrue(info.isValid());\n    }", "signature": "void negativeInactivityAlwaysValid()", "full_signature": "@Test public void negativeInactivityAlwaysValid()", "class_method_signature": "SessionValidityInfoTest.negativeInactivityAlwaysValid()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isValid"]}, "focal_class": {"identifier": "SessionValidityInfo", "superclass": "", "interfaces": "", "fields": [{"original_string": "@SuppressWarnings( \"unused\" )\n    private static final Log LOG = LogFactory.getLog( SessionValidityInfo.class );", "modifier": "@SuppressWarnings( \"unused\" )\n    private static final", "type": "Log", "declarator": "LOG = LogFactory.getLog( SessionValidityInfo.class )", "var_name": "LOG"}, {"original_string": "private final int _maxInactiveInterval;", "modifier": "private final", "type": "int", "declarator": "_maxInactiveInterval", "var_name": "_maxInactiveInterval"}, {"original_string": "private final long _lastAccessedTime;", "modifier": "private final", "type": "long", "declarator": "_lastAccessedTime", "var_name": "_lastAccessedTime"}, {"original_string": "private final long _thisAccessedTime;", "modifier": "private final", "type": "long", "declarator": "_thisAccessedTime", "var_name": "_thisAccessedTime"}], "methods": [{"identifier": "SessionValidityInfo", "parameters": "( final int maxInactiveInterval, final long lastAccessedTime, final long thisAccessedTime )", "modifiers": "public", "return": "", "signature": " SessionValidityInfo( final int maxInactiveInterval, final long lastAccessedTime, final long thisAccessedTime )", "full_signature": "public  SessionValidityInfo( final int maxInactiveInterval, final long lastAccessedTime, final long thisAccessedTime )", "class_method_signature": "SessionValidityInfo.SessionValidityInfo( final int maxInactiveInterval, final long lastAccessedTime, final long thisAccessedTime )", "testcase": false, "constructor": true}, {"identifier": "encode", "parameters": "( final long maxInactiveInterval, final long lastAccessedTime, final long thisAccessedTime )", "modifiers": "@Nonnull public static", "return": "byte[]", "signature": "byte[] encode( final long maxInactiveInterval, final long lastAccessedTime, final long thisAccessedTime )", "full_signature": "@Nonnull public static byte[] encode( final long maxInactiveInterval, final long lastAccessedTime, final long thisAccessedTime )", "class_method_signature": "SessionValidityInfo.encode( final long maxInactiveInterval, final long lastAccessedTime, final long thisAccessedTime )", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "( @Nonnull final byte[] data )", "modifiers": "@Nonnull public static", "return": "SessionValidityInfo", "signature": "SessionValidityInfo decode( @Nonnull final byte[] data )", "full_signature": "@Nonnull public static SessionValidityInfo decode( @Nonnull final byte[] data )", "class_method_signature": "SessionValidityInfo.decode( @Nonnull final byte[] data )", "testcase": false, "constructor": false}, {"identifier": "getMaxInactiveInterval", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxInactiveInterval()", "full_signature": "public int getMaxInactiveInterval()", "class_method_signature": "SessionValidityInfo.getMaxInactiveInterval()", "testcase": false, "constructor": false}, {"identifier": "getLastAccessedTime", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLastAccessedTime()", "full_signature": "public long getLastAccessedTime()", "class_method_signature": "SessionValidityInfo.getLastAccessedTime()", "testcase": false, "constructor": false}, {"identifier": "getThisAccessedTime", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getThisAccessedTime()", "full_signature": "public long getThisAccessedTime()", "class_method_signature": "SessionValidityInfo.getThisAccessedTime()", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isValid()", "full_signature": "public boolean isValid()", "class_method_signature": "SessionValidityInfo.isValid()", "testcase": false, "constructor": false}], "file": "core/src/main/java/de/javakaffee/web/msm/SessionValidityInfo.java"}, "focal_method": {"identifier": "isValid", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isValid() {\n        final long timeNow = System.currentTimeMillis();\n        final int timeIdle = (int) ((timeNow - _thisAccessedTime) / 1000L);\n        // if tomcat session inactivity is negative or 0, session\n        // should not expire\n        return _maxInactiveInterval <= 0 || timeIdle < _maxInactiveInterval;\n    }", "signature": "boolean isValid()", "full_signature": "public boolean isValid()", "class_method_signature": "SessionValidityInfo.isValid()", "testcase": false, "constructor": false, "invocations": ["currentTimeMillis"]}, "repository": {"repo_id": 152812, "url": "https://github.com/magro/memcached-session-manager", "language": "Java", "is_fork": false, "fork_count": 352, "stargazer_count": 743, "size": 5794, "license": "licensed"}}