{"test_class": {"identifier": "TestSimpleXTime", "superclass": "", "interfaces": "", "fields": [], "file": "xnet/xsim/src/test/java/com/xtructure/xsim/impl/TestSimpleXTime.java"}, "test_case": {"identifier": "hashCodeIdentical", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n    public final void hashCodeIdentical()\n    {\n        final SimpleXTime<PhaseImpl> time = new SimpleXTime<PhaseImpl>(1,\n            PhaseImpl.PHASE_1);\n\n        assertThat(time.hashCode(), is(time.hashCode()));\n    }", "signature": "void hashCodeIdentical()", "full_signature": "@Test public final void hashCodeIdentical()", "class_method_signature": "TestSimpleXTime.hashCodeIdentical()", "testcase": true, "constructor": false, "invocations": ["assertThat", "hashCode", "is", "hashCode"]}, "focal_class": {"identifier": "SimpleXTime", "superclass": "", "interfaces": "implements XTime<F>", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory\n        .getLogger(SimpleXTime.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory\n        .getLogger(SimpleXTime.class)", "var_name": "LOGGER"}, {"original_string": "private final long _tick;", "modifier": "private final", "type": "long", "declarator": "_tick", "var_name": "_tick"}, {"original_string": "private final F _phase;", "modifier": "private final", "type": "F", "declarator": "_phase", "var_name": "_phase"}], "methods": [{"identifier": "SimpleXTime", "parameters": "(\n            final long tick,\n            final F phase)", "modifiers": "public", "return": "", "signature": " SimpleXTime(\n            final long tick,\n            final F phase)", "full_signature": "public  SimpleXTime(\n            final long tick,\n            final F phase)", "class_method_signature": "SimpleXTime.SimpleXTime(\n            final long tick,\n            final F phase)", "testcase": false, "constructor": true}, {"identifier": "getTick", "parameters": "()", "modifiers": "@Override public final", "return": "long", "signature": "long getTick()", "full_signature": "@Override public final long getTick()", "class_method_signature": "SimpleXTime.getTick()", "testcase": false, "constructor": false}, {"identifier": "getPhase", "parameters": "()", "modifiers": "@Override public final", "return": "F", "signature": "F getPhase()", "full_signature": "@Override public final F getPhase()", "class_method_signature": "SimpleXTime.getPhase()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(\n            final XTime<F> other)", "modifiers": "@Override public final", "return": "int", "signature": "int compareTo(\n            final XTime<F> other)", "full_signature": "@Override public final int compareTo(\n            final XTime<F> other)", "class_method_signature": "SimpleXTime.compareTo(\n            final XTime<F> other)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(\n            final Object obj)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean equals(\n            final Object obj)", "full_signature": "@Override public final boolean equals(\n            final Object obj)", "class_method_signature": "SimpleXTime.equals(\n            final Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public final", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public final int hashCode()", "class_method_signature": "SimpleXTime.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public final", "return": "String", "signature": "String toString()", "full_signature": "@Override public final String toString()", "class_method_signature": "SimpleXTime.toString()", "testcase": false, "constructor": false}], "file": "xnet/xsim/src/main/java/com/xtructure/xsim/impl/SimpleXTime.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public final", "return": "int", "body": "@Override\n    public final int hashCode()\n    {\n        LOGGER.trace(\"begin {}.hashCode()\", getClass().getSimpleName());\n\n        final int rval = new HashCodeBuilder() //\n            .append(_tick) //\n            .append(_phase) //\n            .toHashCode();\n\n        LOGGER.trace(\"will return: {}\", rval);\n        LOGGER.trace(\"end {}.hashCode()\", getClass().getSimpleName());\n\n        return rval;\n    }", "signature": "int hashCode()", "full_signature": "@Override public final int hashCode()", "class_method_signature": "SimpleXTime.hashCode()", "testcase": false, "constructor": false, "invocations": ["trace", "getSimpleName", "getClass", "toHashCode", "append", "append", "trace", "trace", "getSimpleName", "getClass"]}, "repository": {"repo_id": 3432124, "url": "https://github.com/xtructure/xnet-public", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 7, "size": 5582, "license": "licensed"}}