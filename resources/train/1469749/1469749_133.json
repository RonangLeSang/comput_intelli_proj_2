{"test_class": {"identifier": "BitstreamFormatTest", "superclass": "extends AbstractUnitTest", "interfaces": "", "fields": [{"original_string": "private final static Logger log = Logger.getLogger(BitstreamFormatTest.class);", "modifier": "private final static", "type": "Logger", "declarator": "log = Logger.getLogger(BitstreamFormatTest.class)", "var_name": "log"}, {"original_string": "private BitstreamFormat bf;", "modifier": "private", "type": "BitstreamFormat", "declarator": "bf", "var_name": "bf"}, {"original_string": "private BitstreamFormat bunknown;", "modifier": "private", "type": "BitstreamFormat", "declarator": "bunknown", "var_name": "bunknown"}], "file": "dspace-api/src/test/java/org/dspace/content/BitstreamFormatTest.java"}, "test_case": {"identifier": "testDeleteNotAdmin", "parameters": "()", "modifiers": "@Test(expected=AuthorizeException.class) public", "return": "void", "body": "@Test(expected=AuthorizeException.class)\n    public void testDeleteNotAdmin() throws SQLException, AuthorizeException\n    {\n\n        new NonStrictExpectations()\n        {\n            AuthorizeManager authManager;\n            {\n                AuthorizeManager.isAdmin((Context)any); result = false;\n            }\n        };\n\n        bf.delete();\n        fail(\"Exception should have been thrown\");\n    }", "signature": "void testDeleteNotAdmin()", "full_signature": "@Test(expected=AuthorizeException.class) public void testDeleteNotAdmin()", "class_method_signature": "BitstreamFormatTest.testDeleteNotAdmin()", "testcase": true, "constructor": false, "invocations": ["isAdmin", "delete", "fail"]}, "focal_class": {"identifier": "BitstreamFormat", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger log = Logger.getLogger(BitstreamFormat.class);", "modifier": "private static", "type": "Logger", "declarator": "log = Logger.getLogger(BitstreamFormat.class)", "var_name": "log"}, {"original_string": "public static final int UNKNOWN = 0;", "modifier": "public static final", "type": "int", "declarator": "UNKNOWN = 0", "var_name": "UNKNOWN"}, {"original_string": "public static final int KNOWN = 1;", "modifier": "public static final", "type": "int", "declarator": "KNOWN = 1", "var_name": "KNOWN"}, {"original_string": "public static final int SUPPORTED = 2;", "modifier": "public static final", "type": "int", "declarator": "SUPPORTED = 2", "var_name": "SUPPORTED"}, {"original_string": "private static final String supportLevelText[] =\n        { \"UNKNOWN\", \"KNOWN\", \"SUPPORTED\" };", "modifier": "private static final", "type": "String", "declarator": "supportLevelText[] =\n        { \"UNKNOWN\", \"KNOWN\", \"SUPPORTED\" }", "var_name": "supportLevelText"}, {"original_string": "private Context bfContext;", "modifier": "private", "type": "Context", "declarator": "bfContext", "var_name": "bfContext"}, {"original_string": "private TableRow bfRow;", "modifier": "private", "type": "TableRow", "declarator": "bfRow", "var_name": "bfRow"}, {"original_string": "private List<String> extensions;", "modifier": "private", "type": "List<String>", "declarator": "extensions", "var_name": "extensions"}], "methods": [{"identifier": "BitstreamFormat", "parameters": "(Context context, TableRow row)", "modifiers": "", "return": "", "signature": " BitstreamFormat(Context context, TableRow row)", "full_signature": "  BitstreamFormat(Context context, TableRow row)", "class_method_signature": "BitstreamFormat.BitstreamFormat(Context context, TableRow row)", "testcase": false, "constructor": true}, {"identifier": "find", "parameters": "(Context context, int id)", "modifiers": "public static", "return": "BitstreamFormat", "signature": "BitstreamFormat find(Context context, int id)", "full_signature": "public static BitstreamFormat find(Context context, int id)", "class_method_signature": "BitstreamFormat.find(Context context, int id)", "testcase": false, "constructor": false}, {"identifier": "findByMIMEType", "parameters": "(Context context,\n            String mimeType)", "modifiers": "public static", "return": "BitstreamFormat", "signature": "BitstreamFormat findByMIMEType(Context context,\n            String mimeType)", "full_signature": "public static BitstreamFormat findByMIMEType(Context context,\n            String mimeType)", "class_method_signature": "BitstreamFormat.findByMIMEType(Context context,\n            String mimeType)", "testcase": false, "constructor": false}, {"identifier": "findByShortDescription", "parameters": "(Context context,\n            String desc)", "modifiers": "public static", "return": "BitstreamFormat", "signature": "BitstreamFormat findByShortDescription(Context context,\n            String desc)", "full_signature": "public static BitstreamFormat findByShortDescription(Context context,\n            String desc)", "class_method_signature": "BitstreamFormat.findByShortDescription(Context context,\n            String desc)", "testcase": false, "constructor": false}, {"identifier": "findByFinish", "parameters": "(Context context,\n                                                TableRow formatRow)", "modifiers": "private static", "return": "BitstreamFormat", "signature": "BitstreamFormat findByFinish(Context context,\n                                                TableRow formatRow)", "full_signature": "private static BitstreamFormat findByFinish(Context context,\n                                                TableRow formatRow)", "class_method_signature": "BitstreamFormat.findByFinish(Context context,\n                                                TableRow formatRow)", "testcase": false, "constructor": false}, {"identifier": "findUnknown", "parameters": "(Context context)", "modifiers": "public static", "return": "BitstreamFormat", "signature": "BitstreamFormat findUnknown(Context context)", "full_signature": "public static BitstreamFormat findUnknown(Context context)", "class_method_signature": "BitstreamFormat.findUnknown(Context context)", "testcase": false, "constructor": false}, {"identifier": "findAll", "parameters": "(Context context)", "modifiers": "public static", "return": "BitstreamFormat[]", "signature": "BitstreamFormat[] findAll(Context context)", "full_signature": "public static BitstreamFormat[] findAll(Context context)", "class_method_signature": "BitstreamFormat.findAll(Context context)", "testcase": false, "constructor": false}, {"identifier": "findNonInternal", "parameters": "(Context context)", "modifiers": "public static", "return": "BitstreamFormat[]", "signature": "BitstreamFormat[] findNonInternal(Context context)", "full_signature": "public static BitstreamFormat[] findNonInternal(Context context)", "class_method_signature": "BitstreamFormat.findNonInternal(Context context)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Context context)", "modifiers": "public static", "return": "BitstreamFormat", "signature": "BitstreamFormat create(Context context)", "full_signature": "public static BitstreamFormat create(Context context)", "class_method_signature": "BitstreamFormat.create(Context context)", "testcase": false, "constructor": false}, {"identifier": "getID", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int getID()", "full_signature": "public final int getID()", "class_method_signature": "BitstreamFormat.getID()", "testcase": false, "constructor": false}, {"identifier": "getShortDescription", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String getShortDescription()", "full_signature": "public final String getShortDescription()", "class_method_signature": "BitstreamFormat.getShortDescription()", "testcase": false, "constructor": false}, {"identifier": "setShortDescription", "parameters": "(String s)", "modifiers": "public final", "return": "void", "signature": "void setShortDescription(String s)", "full_signature": "public final void setShortDescription(String s)", "class_method_signature": "BitstreamFormat.setShortDescription(String s)", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String getDescription()", "full_signature": "public final String getDescription()", "class_method_signature": "BitstreamFormat.getDescription()", "testcase": false, "constructor": false}, {"identifier": "setDescription", "parameters": "(String s)", "modifiers": "public final", "return": "void", "signature": "void setDescription(String s)", "full_signature": "public final void setDescription(String s)", "class_method_signature": "BitstreamFormat.setDescription(String s)", "testcase": false, "constructor": false}, {"identifier": "getMIMEType", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String getMIMEType()", "full_signature": "public final String getMIMEType()", "class_method_signature": "BitstreamFormat.getMIMEType()", "testcase": false, "constructor": false}, {"identifier": "setMIMEType", "parameters": "(String s)", "modifiers": "public final", "return": "void", "signature": "void setMIMEType(String s)", "full_signature": "public final void setMIMEType(String s)", "class_method_signature": "BitstreamFormat.setMIMEType(String s)", "testcase": false, "constructor": false}, {"identifier": "getSupportLevel", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int getSupportLevel()", "full_signature": "public final int getSupportLevel()", "class_method_signature": "BitstreamFormat.getSupportLevel()", "testcase": false, "constructor": false}, {"identifier": "getSupportLevelText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSupportLevelText()", "full_signature": "public String getSupportLevelText()", "class_method_signature": "BitstreamFormat.getSupportLevelText()", "testcase": false, "constructor": false}, {"identifier": "setSupportLevel", "parameters": "(int sl)", "modifiers": "public final", "return": "void", "signature": "void setSupportLevel(int sl)", "full_signature": "public final void setSupportLevel(int sl)", "class_method_signature": "BitstreamFormat.setSupportLevel(int sl)", "testcase": false, "constructor": false}, {"identifier": "isInternal", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean isInternal()", "full_signature": "public final boolean isInternal()", "class_method_signature": "BitstreamFormat.isInternal()", "testcase": false, "constructor": false}, {"identifier": "setInternal", "parameters": "(boolean b)", "modifiers": "public final", "return": "void", "signature": "void setInternal(boolean b)", "full_signature": "public final void setInternal(boolean b)", "class_method_signature": "BitstreamFormat.setInternal(boolean b)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void update()", "full_signature": "public void update()", "class_method_signature": "BitstreamFormat.update()", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void delete()", "full_signature": "public void delete()", "class_method_signature": "BitstreamFormat.delete()", "testcase": false, "constructor": false}, {"identifier": "getExtensions", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getExtensions()", "full_signature": "public String[] getExtensions()", "class_method_signature": "BitstreamFormat.getExtensions()", "testcase": false, "constructor": false}, {"identifier": "setExtensions", "parameters": "(String[] exts)", "modifiers": "public", "return": "void", "signature": "void setExtensions(String[] exts)", "full_signature": "public void setExtensions(String[] exts)", "class_method_signature": "BitstreamFormat.setExtensions(String[] exts)", "testcase": false, "constructor": false}, {"identifier": "getSupportLevelID", "parameters": "(String slevel)", "modifiers": "public static", "return": "int", "signature": "int getSupportLevelID(String slevel)", "full_signature": "public static int getSupportLevelID(String slevel)", "class_method_signature": "BitstreamFormat.getSupportLevelID(String slevel)", "testcase": false, "constructor": false}], "file": "dspace-api/src/main/java/org/dspace/content/BitstreamFormat.java"}, "focal_method": {"identifier": "delete", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void delete() throws SQLException, AuthorizeException\n    {\n        // Check authorisation - only administrators can delete formats\n        if (!AuthorizeManager.isAdmin(bfContext))\n        {\n            throw new AuthorizeException(\n                    \"Only administrators can delete bitstream formats\");\n        }\n\n        // Find \"unknown\" type\n        BitstreamFormat unknown = findUnknown(bfContext);\n\n        if (unknown.getID() == getID())\n        {\n            throw new IllegalArgumentException(\"The Unknown bitstream format may not be deleted.\");\n        }\n\n        // Remove from cache\n        bfContext.removeCached(this, getID());\n\n        // Set bitstreams with this format to \"unknown\"\n        int numberChanged = DatabaseManager.updateQuery(bfContext,\n                \"UPDATE bitstream SET bitstream_format_id= ? \" + \n                \" WHERE bitstream_format_id= ? \", \n                unknown.getID(),getID());\n\n        // Delete extensions\n        DatabaseManager.updateQuery(bfContext,\n                \"DELETE FROM fileextension WHERE bitstream_format_id= ? \",\n                getID());\n\n        // Delete this format from database\n        DatabaseManager.delete(bfContext, bfRow);\n\n        log.info(LogManager.getHeader(bfContext, \"delete_bitstream_format\",\n                \"bitstream_format_id=\" + getID() + \",bitstreams_changed=\"\n                        + numberChanged));\n    }", "signature": "void delete()", "full_signature": "public void delete()", "class_method_signature": "BitstreamFormat.delete()", "testcase": false, "constructor": false, "invocations": ["isAdmin", "findUnknown", "getID", "getID", "removeCached", "getID", "updateQuery", "getID", "getID", "updateQuery", "getID", "delete", "info", "getHeader", "getID"]}, "repository": {"repo_id": 1469749, "url": "https://github.com/DSpace/DSpace-SVN-Deprecated", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 10, "size": 81375, "license": "licensed"}}