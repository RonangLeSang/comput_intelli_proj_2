{"test_class": {"identifier": "ItemTest", "superclass": "extends AbstractDSpaceObjectTest", "interfaces": "", "fields": [{"original_string": "private static final Logger log = Logger.getLogger(ItemTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = Logger.getLogger(ItemTest.class)", "var_name": "log"}, {"original_string": "private Item it;", "modifier": "private", "type": "Item", "declarator": "it", "var_name": "it"}], "file": "dspace-api/src/test/java/org/dspace/content/ItemTest.java"}, "test_case": {"identifier": "testGetCollections", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetCollections() throws Exception\n    {\n        assertThat(\"testGetCollections 0\", it.getCollections(), notNullValue());\n        assertTrue(\"testGetCollections 1\", it.getCollections().length == 0);\n    }", "signature": "void testGetCollections()", "full_signature": "@Test public void testGetCollections()", "class_method_signature": "ItemTest.testGetCollections()", "testcase": true, "constructor": false, "invocations": ["assertThat", "getCollections", "notNullValue", "assertTrue", "getCollections"]}, "focal_class": {"identifier": "Item", "superclass": "extends DSpaceObject", "interfaces": "", "fields": [{"original_string": "public static final String ANY = \"*\";", "modifier": "public static final", "type": "String", "declarator": "ANY = \"*\"", "var_name": "ANY"}, {"original_string": "private static final Logger log = Logger.getLogger(Item.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = Logger.getLogger(Item.class)", "var_name": "log"}, {"original_string": "private Context ourContext;", "modifier": "private", "type": "Context", "declarator": "ourContext", "var_name": "ourContext"}, {"original_string": "private TableRow itemRow;", "modifier": "private", "type": "TableRow", "declarator": "itemRow", "var_name": "itemRow"}, {"original_string": "private EPerson submitter;", "modifier": "private", "type": "EPerson", "declarator": "submitter", "var_name": "submitter"}, {"original_string": "private List<Bundle> bundles;", "modifier": "private", "type": "List<Bundle>", "declarator": "bundles", "var_name": "bundles"}, {"original_string": "MetadataCache dublinCore = new MetadataCache();", "modifier": "", "type": "MetadataCache", "declarator": "dublinCore = new MetadataCache()", "var_name": "dublinCore"}, {"original_string": "private String handle;", "modifier": "private", "type": "String", "declarator": "handle", "var_name": "handle"}, {"original_string": "private boolean dublinCoreChanged;", "modifier": "private", "type": "boolean", "declarator": "dublinCoreChanged", "var_name": "dublinCoreChanged"}, {"original_string": "private boolean modified;", "modifier": "private", "type": "boolean", "declarator": "modified", "var_name": "modified"}, {"original_string": "private transient MetadataField[] allMetadataFields = null;", "modifier": "private transient", "type": "MetadataField[]", "declarator": "allMetadataFields = null", "var_name": "allMetadataFields"}], "methods": [{"identifier": "Item", "parameters": "(Context context, TableRow row)", "modifiers": "", "return": "", "signature": " Item(Context context, TableRow row)", "full_signature": "  Item(Context context, TableRow row)", "class_method_signature": "Item.Item(Context context, TableRow row)", "testcase": false, "constructor": true}, {"identifier": "retrieveMetadata", "parameters": "()", "modifiers": "private", "return": "TableRowIterator", "signature": "TableRowIterator retrieveMetadata()", "full_signature": "private TableRowIterator retrieveMetadata()", "class_method_signature": "Item.retrieveMetadata()", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "(Context context, int id)", "modifiers": "public static", "return": "Item", "signature": "Item find(Context context, int id)", "full_signature": "public static Item find(Context context, int id)", "class_method_signature": "Item.find(Context context, int id)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Context context)", "modifiers": "static", "return": "Item", "signature": "Item create(Context context)", "full_signature": "static Item create(Context context)", "class_method_signature": "Item.create(Context context)", "testcase": false, "constructor": false}, {"identifier": "findAll", "parameters": "(Context context)", "modifiers": "public static", "return": "ItemIterator", "signature": "ItemIterator findAll(Context context)", "full_signature": "public static ItemIterator findAll(Context context)", "class_method_signature": "Item.findAll(Context context)", "testcase": false, "constructor": false}, {"identifier": "findBySubmitter", "parameters": "(Context context, EPerson eperson)", "modifiers": "public static", "return": "ItemIterator", "signature": "ItemIterator findBySubmitter(Context context, EPerson eperson)", "full_signature": "public static ItemIterator findBySubmitter(Context context, EPerson eperson)", "class_method_signature": "Item.findBySubmitter(Context context, EPerson eperson)", "testcase": false, "constructor": false}, {"identifier": "getID", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getID()", "full_signature": "public int getID()", "class_method_signature": "Item.getID()", "testcase": false, "constructor": false}, {"identifier": "getHandle", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getHandle()", "full_signature": "public String getHandle()", "class_method_signature": "Item.getHandle()", "testcase": false, "constructor": false}, {"identifier": "isArchived", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isArchived()", "full_signature": "public boolean isArchived()", "class_method_signature": "Item.isArchived()", "testcase": false, "constructor": false}, {"identifier": "isWithdrawn", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isWithdrawn()", "full_signature": "public boolean isWithdrawn()", "class_method_signature": "Item.isWithdrawn()", "testcase": false, "constructor": false}, {"identifier": "getLastModified", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getLastModified()", "full_signature": "public Date getLastModified()", "class_method_signature": "Item.getLastModified()", "testcase": false, "constructor": false}, {"identifier": "updateLastModified", "parameters": "()", "modifiers": "", "return": "void", "signature": "void updateLastModified()", "full_signature": " void updateLastModified()", "class_method_signature": "Item.updateLastModified()", "testcase": false, "constructor": false}, {"identifier": "setArchived", "parameters": "(boolean isArchived)", "modifiers": "public", "return": "void", "signature": "void setArchived(boolean isArchived)", "full_signature": "public void setArchived(boolean isArchived)", "class_method_signature": "Item.setArchived(boolean isArchived)", "testcase": false, "constructor": false}, {"identifier": "setOwningCollection", "parameters": "(Collection c)", "modifiers": "public", "return": "void", "signature": "void setOwningCollection(Collection c)", "full_signature": "public void setOwningCollection(Collection c)", "class_method_signature": "Item.setOwningCollection(Collection c)", "testcase": false, "constructor": false}, {"identifier": "getOwningCollection", "parameters": "()", "modifiers": "public", "return": "Collection", "signature": "Collection getOwningCollection()", "full_signature": "public Collection getOwningCollection()", "class_method_signature": "Item.getOwningCollection()", "testcase": false, "constructor": false}, {"identifier": "getOwningCollectionID", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int getOwningCollectionID()", "full_signature": "private int getOwningCollectionID()", "class_method_signature": "Item.getOwningCollectionID()", "testcase": false, "constructor": false}, {"identifier": "getDC", "parameters": "(String element, String qualifier, String lang)", "modifiers": "@Deprecated public", "return": "DCValue[]", "signature": "DCValue[] getDC(String element, String qualifier, String lang)", "full_signature": "@Deprecated public DCValue[] getDC(String element, String qualifier, String lang)", "class_method_signature": "Item.getDC(String element, String qualifier, String lang)", "testcase": false, "constructor": false}, {"identifier": "getMetadata", "parameters": "(String schema, String element, String qualifier,\n            String lang)", "modifiers": "public", "return": "DCValue[]", "signature": "DCValue[] getMetadata(String schema, String element, String qualifier,\n            String lang)", "full_signature": "public DCValue[] getMetadata(String schema, String element, String qualifier,\n            String lang)", "class_method_signature": "Item.getMetadata(String schema, String element, String qualifier,\n            String lang)", "testcase": false, "constructor": false}, {"identifier": "getMetadata", "parameters": "(String mdString)", "modifiers": "public", "return": "DCValue[]", "signature": "DCValue[] getMetadata(String mdString)", "full_signature": "public DCValue[] getMetadata(String mdString)", "class_method_signature": "Item.getMetadata(String mdString)", "testcase": false, "constructor": false}, {"identifier": "addDC", "parameters": "(String element, String qualifier, String lang,\n            String[] values)", "modifiers": "@Deprecated public", "return": "void", "signature": "void addDC(String element, String qualifier, String lang,\n            String[] values)", "full_signature": "@Deprecated public void addDC(String element, String qualifier, String lang,\n            String[] values)", "class_method_signature": "Item.addDC(String element, String qualifier, String lang,\n            String[] values)", "testcase": false, "constructor": false}, {"identifier": "addDC", "parameters": "(String element, String qualifier, String lang,\n            String value)", "modifiers": "@Deprecated public", "return": "void", "signature": "void addDC(String element, String qualifier, String lang,\n            String value)", "full_signature": "@Deprecated public void addDC(String element, String qualifier, String lang,\n            String value)", "class_method_signature": "Item.addDC(String element, String qualifier, String lang,\n            String value)", "testcase": false, "constructor": false}, {"identifier": "addMetadata", "parameters": "(String schema, String element, String qualifier, String lang,\n            String[] values)", "modifiers": "public", "return": "void", "signature": "void addMetadata(String schema, String element, String qualifier, String lang,\n            String[] values)", "full_signature": "public void addMetadata(String schema, String element, String qualifier, String lang,\n            String[] values)", "class_method_signature": "Item.addMetadata(String schema, String element, String qualifier, String lang,\n            String[] values)", "testcase": false, "constructor": false}, {"identifier": "addMetadata", "parameters": "(String schema, String element, String qualifier, String lang,\n            String[] values, String authorities[], int confidences[])", "modifiers": "public", "return": "void", "signature": "void addMetadata(String schema, String element, String qualifier, String lang,\n            String[] values, String authorities[], int confidences[])", "full_signature": "public void addMetadata(String schema, String element, String qualifier, String lang,\n            String[] values, String authorities[], int confidences[])", "class_method_signature": "Item.addMetadata(String schema, String element, String qualifier, String lang,\n            String[] values, String authorities[], int confidences[])", "testcase": false, "constructor": false}, {"identifier": "addMetadata", "parameters": "(String schema, String element, String qualifier,\n            String lang, String value)", "modifiers": "public", "return": "void", "signature": "void addMetadata(String schema, String element, String qualifier,\n            String lang, String value)", "full_signature": "public void addMetadata(String schema, String element, String qualifier,\n            String lang, String value)", "class_method_signature": "Item.addMetadata(String schema, String element, String qualifier,\n            String lang, String value)", "testcase": false, "constructor": false}, {"identifier": "addMetadata", "parameters": "(String schema, String element, String qualifier,\n            String lang, String value, String authority, int confidence)", "modifiers": "public", "return": "void", "signature": "void addMetadata(String schema, String element, String qualifier,\n            String lang, String value, String authority, int confidence)", "full_signature": "public void addMetadata(String schema, String element, String qualifier,\n            String lang, String value, String authority, int confidence)", "class_method_signature": "Item.addMetadata(String schema, String element, String qualifier,\n            String lang, String value, String authority, int confidence)", "testcase": false, "constructor": false}, {"identifier": "clearDC", "parameters": "(String element, String qualifier, String lang)", "modifiers": "@Deprecated public", "return": "void", "signature": "void clearDC(String element, String qualifier, String lang)", "full_signature": "@Deprecated public void clearDC(String element, String qualifier, String lang)", "class_method_signature": "Item.clearDC(String element, String qualifier, String lang)", "testcase": false, "constructor": false}, {"identifier": "clearMetadata", "parameters": "(String schema, String element, String qualifier,\n            String lang)", "modifiers": "public", "return": "void", "signature": "void clearMetadata(String schema, String element, String qualifier,\n            String lang)", "full_signature": "public void clearMetadata(String schema, String element, String qualifier,\n            String lang)", "class_method_signature": "Item.clearMetadata(String schema, String element, String qualifier,\n            String lang)", "testcase": false, "constructor": false}, {"identifier": "match", "parameters": "(String schema, String element, String qualifier,\n            String language, DCValue dcv)", "modifiers": "private", "return": "boolean", "signature": "boolean match(String schema, String element, String qualifier,\n            String language, DCValue dcv)", "full_signature": "private boolean match(String schema, String element, String qualifier,\n            String language, DCValue dcv)", "class_method_signature": "Item.match(String schema, String element, String qualifier,\n            String language, DCValue dcv)", "testcase": false, "constructor": false}, {"identifier": "getSubmitter", "parameters": "()", "modifiers": "public", "return": "EPerson", "signature": "EPerson getSubmitter()", "full_signature": "public EPerson getSubmitter()", "class_method_signature": "Item.getSubmitter()", "testcase": false, "constructor": false}, {"identifier": "setSubmitter", "parameters": "(EPerson sub)", "modifiers": "public", "return": "void", "signature": "void setSubmitter(EPerson sub)", "full_signature": "public void setSubmitter(EPerson sub)", "class_method_signature": "Item.setSubmitter(EPerson sub)", "testcase": false, "constructor": false}, {"identifier": "isIn", "parameters": "(Collection collection)", "modifiers": "public", "return": "boolean", "signature": "boolean isIn(Collection collection)", "full_signature": "public boolean isIn(Collection collection)", "class_method_signature": "Item.isIn(Collection collection)", "testcase": false, "constructor": false}, {"identifier": "getCollections", "parameters": "()", "modifiers": "public", "return": "Collection[]", "signature": "Collection[] getCollections()", "full_signature": "public Collection[] getCollections()", "class_method_signature": "Item.getCollections()", "testcase": false, "constructor": false}, {"identifier": "getCommunities", "parameters": "()", "modifiers": "public", "return": "Community[]", "signature": "Community[] getCommunities()", "full_signature": "public Community[] getCommunities()", "class_method_signature": "Item.getCommunities()", "testcase": false, "constructor": false}, {"identifier": "getBundles", "parameters": "()", "modifiers": "public", "return": "Bundle[]", "signature": "Bundle[] getBundles()", "full_signature": "public Bundle[] getBundles()", "class_method_signature": "Item.getBundles()", "testcase": false, "constructor": false}, {"identifier": "getBundles", "parameters": "(String name)", "modifiers": "public", "return": "Bundle[]", "signature": "Bundle[] getBundles(String name)", "full_signature": "public Bundle[] getBundles(String name)", "class_method_signature": "Item.getBundles(String name)", "testcase": false, "constructor": false}, {"identifier": "createBundle", "parameters": "(String name)", "modifiers": "public", "return": "Bundle", "signature": "Bundle createBundle(String name)", "full_signature": "public Bundle createBundle(String name)", "class_method_signature": "Item.createBundle(String name)", "testcase": false, "constructor": false}, {"identifier": "addBundle", "parameters": "(Bundle b)", "modifiers": "public", "return": "void", "signature": "void addBundle(Bundle b)", "full_signature": "public void addBundle(Bundle b)", "class_method_signature": "Item.addBundle(Bundle b)", "testcase": false, "constructor": false}, {"identifier": "removeBundle", "parameters": "(Bundle b)", "modifiers": "public", "return": "void", "signature": "void removeBundle(Bundle b)", "full_signature": "public void removeBundle(Bundle b)", "class_method_signature": "Item.removeBundle(Bundle b)", "testcase": false, "constructor": false}, {"identifier": "createSingleBitstream", "parameters": "(InputStream is, String name)", "modifiers": "public", "return": "Bitstream", "signature": "Bitstream createSingleBitstream(InputStream is, String name)", "full_signature": "public Bitstream createSingleBitstream(InputStream is, String name)", "class_method_signature": "Item.createSingleBitstream(InputStream is, String name)", "testcase": false, "constructor": false}, {"identifier": "createSingleBitstream", "parameters": "(InputStream is)", "modifiers": "public", "return": "Bitstream", "signature": "Bitstream createSingleBitstream(InputStream is)", "full_signature": "public Bitstream createSingleBitstream(InputStream is)", "class_method_signature": "Item.createSingleBitstream(InputStream is)", "testcase": false, "constructor": false}, {"identifier": "getNonInternalBitstreams", "parameters": "()", "modifiers": "public", "return": "Bitstream[]", "signature": "Bitstream[] getNonInternalBitstreams()", "full_signature": "public Bitstream[] getNonInternalBitstreams()", "class_method_signature": "Item.getNonInternalBitstreams()", "testcase": false, "constructor": false}, {"identifier": "removeDSpaceLicense", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void removeDSpaceLicense()", "full_signature": "public void removeDSpaceLicense()", "class_method_signature": "Item.removeDSpaceLicense()", "testcase": false, "constructor": false}, {"identifier": "removeLicenses", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void removeLicenses()", "full_signature": "public void removeLicenses()", "class_method_signature": "Item.removeLicenses()", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void update()", "full_signature": "public void update()", "class_method_signature": "Item.update()", "testcase": false, "constructor": false}, {"identifier": "getMetadataField", "parameters": "(DCValue dcv)", "modifiers": "private", "return": "MetadataField", "signature": "MetadataField getMetadataField(DCValue dcv)", "full_signature": "private MetadataField getMetadataField(DCValue dcv)", "class_method_signature": "Item.getMetadataField(DCValue dcv)", "testcase": false, "constructor": false}, {"identifier": "getMetadataSchemaID", "parameters": "(DCValue dcv)", "modifiers": "private", "return": "int", "signature": "int getMetadataSchemaID(DCValue dcv)", "full_signature": "private int getMetadataSchemaID(DCValue dcv)", "class_method_signature": "Item.getMetadataSchemaID(DCValue dcv)", "testcase": false, "constructor": false}, {"identifier": "withdraw", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void withdraw()", "full_signature": "public void withdraw()", "class_method_signature": "Item.withdraw()", "testcase": false, "constructor": false}, {"identifier": "reinstate", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reinstate()", "full_signature": "public void reinstate()", "class_method_signature": "Item.reinstate()", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "()", "modifiers": "", "return": "void", "signature": "void delete()", "full_signature": " void delete()", "class_method_signature": "Item.delete()", "testcase": false, "constructor": false}, {"identifier": "decache", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void decache()", "full_signature": "public void decache()", "class_method_signature": "Item.decache()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Item.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Item.hashCode()", "testcase": false, "constructor": false}, {"identifier": "isOwningCollection", "parameters": "(Collection c)", "modifiers": "public", "return": "boolean", "signature": "boolean isOwningCollection(Collection c)", "full_signature": "public boolean isOwningCollection(Collection c)", "class_method_signature": "Item.isOwningCollection(Collection c)", "testcase": false, "constructor": false}, {"identifier": "removeMetadataFromDatabase", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void removeMetadataFromDatabase()", "full_signature": "private void removeMetadataFromDatabase()", "class_method_signature": "Item.removeMetadataFromDatabase()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getType()", "full_signature": "public int getType()", "class_method_signature": "Item.getType()", "testcase": false, "constructor": false}, {"identifier": "replaceAllItemPolicies", "parameters": "(List<ResourcePolicy> newpolicies)", "modifiers": "public", "return": "void", "signature": "void replaceAllItemPolicies(List<ResourcePolicy> newpolicies)", "full_signature": "public void replaceAllItemPolicies(List<ResourcePolicy> newpolicies)", "class_method_signature": "Item.replaceAllItemPolicies(List<ResourcePolicy> newpolicies)", "testcase": false, "constructor": false}, {"identifier": "replaceAllBitstreamPolicies", "parameters": "(List<ResourcePolicy> newpolicies)", "modifiers": "public", "return": "void", "signature": "void replaceAllBitstreamPolicies(List<ResourcePolicy> newpolicies)", "full_signature": "public void replaceAllBitstreamPolicies(List<ResourcePolicy> newpolicies)", "class_method_signature": "Item.replaceAllBitstreamPolicies(List<ResourcePolicy> newpolicies)", "testcase": false, "constructor": false}, {"identifier": "removeGroupPolicies", "parameters": "(Group g)", "modifiers": "public", "return": "void", "signature": "void removeGroupPolicies(Group g)", "full_signature": "public void removeGroupPolicies(Group g)", "class_method_signature": "Item.removeGroupPolicies(Group g)", "testcase": false, "constructor": false}, {"identifier": "inheritCollectionDefaultPolicies", "parameters": "(Collection c)", "modifiers": "public", "return": "void", "signature": "void inheritCollectionDefaultPolicies(Collection c)", "full_signature": "public void inheritCollectionDefaultPolicies(Collection c)", "class_method_signature": "Item.inheritCollectionDefaultPolicies(Collection c)", "testcase": false, "constructor": false}, {"identifier": "move", "parameters": "(Collection from, Collection to)", "modifiers": "public", "return": "void", "signature": "void move(Collection from, Collection to)", "full_signature": "public void move(Collection from, Collection to)", "class_method_signature": "Item.move(Collection from, Collection to)", "testcase": false, "constructor": false}, {"identifier": "move", "parameters": "(Collection from, Collection to, boolean inheritDefaultPolicies)", "modifiers": "public", "return": "void", "signature": "void move(Collection from, Collection to, boolean inheritDefaultPolicies)", "full_signature": "public void move(Collection from, Collection to, boolean inheritDefaultPolicies)", "class_method_signature": "Item.move(Collection from, Collection to, boolean inheritDefaultPolicies)", "testcase": false, "constructor": false}, {"identifier": "hasUploadedFiles", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasUploadedFiles()", "full_signature": "public boolean hasUploadedFiles()", "class_method_signature": "Item.hasUploadedFiles()", "testcase": false, "constructor": false}, {"identifier": "getCollectionsNotLinked", "parameters": "()", "modifiers": "public", "return": "Collection[]", "signature": "Collection[] getCollectionsNotLinked()", "full_signature": "public Collection[] getCollectionsNotLinked()", "class_method_signature": "Item.getCollectionsNotLinked()", "testcase": false, "constructor": false}, {"identifier": "canEdit", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean canEdit()", "full_signature": "public boolean canEdit()", "class_method_signature": "Item.canEdit()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "Item.getName()", "testcase": false, "constructor": false}, {"identifier": "findByMetadataField", "parameters": "(Context context,\n               String schema, String element, String qualifier, String value)", "modifiers": "public static", "return": "ItemIterator", "signature": "ItemIterator findByMetadataField(Context context,\n               String schema, String element, String qualifier, String value)", "full_signature": "public static ItemIterator findByMetadataField(Context context,\n               String schema, String element, String qualifier, String value)", "class_method_signature": "Item.findByMetadataField(Context context,\n               String schema, String element, String qualifier, String value)", "testcase": false, "constructor": false}, {"identifier": "getAdminObject", "parameters": "(int action)", "modifiers": "public", "return": "DSpaceObject", "signature": "DSpaceObject getAdminObject(int action)", "full_signature": "public DSpaceObject getAdminObject(int action)", "class_method_signature": "Item.getAdminObject(int action)", "testcase": false, "constructor": false}, {"identifier": "getParentObject", "parameters": "()", "modifiers": "public", "return": "DSpaceObject", "signature": "DSpaceObject getParentObject()", "full_signature": "public DSpaceObject getParentObject()", "class_method_signature": "Item.getParentObject()", "testcase": false, "constructor": false}, {"identifier": "findByAuthorityValue", "parameters": "(Context context,\n            String schema, String element, String qualifier, String value)", "modifiers": "public static", "return": "ItemIterator", "signature": "ItemIterator findByAuthorityValue(Context context,\n            String schema, String element, String qualifier, String value)", "full_signature": "public static ItemIterator findByAuthorityValue(Context context,\n            String schema, String element, String qualifier, String value)", "class_method_signature": "Item.findByAuthorityValue(Context context,\n            String schema, String element, String qualifier, String value)", "testcase": false, "constructor": false}, {"identifier": "getMetadata", "parameters": "()", "modifiers": "private", "return": "List<DCValue>", "signature": "List<DCValue> getMetadata()", "full_signature": "private List<DCValue> getMetadata()", "class_method_signature": "Item.getMetadata()", "testcase": false, "constructor": false}, {"identifier": "setMetadata", "parameters": "(List<DCValue> metadata)", "modifiers": "private", "return": "void", "signature": "void setMetadata(List<DCValue> metadata)", "full_signature": "private void setMetadata(List<DCValue> metadata)", "class_method_signature": "Item.setMetadata(List<DCValue> metadata)", "testcase": false, "constructor": false}], "file": "dspace-api/src/main/java/org/dspace/content/Item.java"}, "focal_method": {"identifier": "getCollections", "parameters": "()", "modifiers": "public", "return": "Collection[]", "body": "public Collection[] getCollections() throws SQLException\n    {\n        List<Collection> collections = new ArrayList<Collection>();\n\n        // Get collection table rows\n        TableRowIterator tri = DatabaseManager.queryTable(ourContext,\"collection\",\n                        \"SELECT collection.* FROM collection, collection2item WHERE \" +\n                        \"collection2item.collection_id=collection.collection_id AND \" +\n                        \"collection2item.item_id= ? \",\n                        itemRow.getIntColumn(\"item_id\"));\n\n        try\n        {\n            while (tri.hasNext())\n            {\n                TableRow row = tri.next();\n\n                // First check the cache\n                Collection fromCache = (Collection) ourContext.fromCache(\n                        Collection.class, row.getIntColumn(\"collection_id\"));\n\n                if (fromCache != null)\n                {\n                    collections.add(fromCache);\n                }\n                else\n                {\n                    collections.add(new Collection(ourContext, row));\n                }\n            }\n        }\n        finally\n        {\n            // close the TableRowIterator to free up resources\n            if (tri != null)\n            {\n                tri.close();\n            }\n        }\n\n        Collection[] collectionArray = new Collection[collections.size()];\n        collectionArray = (Collection[]) collections.toArray(collectionArray);\n\n        return collectionArray;\n    }", "signature": "Collection[] getCollections()", "full_signature": "public Collection[] getCollections()", "class_method_signature": "Item.getCollections()", "testcase": false, "constructor": false, "invocations": ["queryTable", "getIntColumn", "hasNext", "next", "fromCache", "getIntColumn", "add", "add", "close", "size", "toArray"]}, "repository": {"repo_id": 1469749, "url": "https://github.com/DSpace/DSpace-SVN-Deprecated", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 10, "size": 81375, "license": "licensed"}}