{"test_class": {"identifier": "DefaultBatchFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Map<String, String> props = new HashMap<>();", "modifier": "private", "type": "Map<String, String>", "declarator": "props = new HashMap<>()", "var_name": "props"}, {"original_string": "private BatchFactory factory = new DefaultBatchFactory();", "modifier": "private", "type": "BatchFactory", "declarator": "factory = new DefaultBatchFactory()", "var_name": "factory"}], "file": "batch/src/test/java/org/sonarsource/scanner/api/internal/batch/DefaultBatchFactoryTest.java"}, "test_case": {"identifier": "should_create_batch", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void should_create_batch() {\n    props.put(\"sonar.projectBaseDir\", \"src/test/java_sample\");\n    props.put(\"sonar.projectKey\", \"sample\");\n    props.put(\"sonar.projectName\", \"Sample\");\n    props.put(\"sonar.projectVersion\", \"1.0\");\n    props.put(\"sonar.sources\", \"src\");\n    Batch batch = factory.createBatch(props, (m, l) -> {\n    });\n\n    assertThat(batch).isNotNull();\n  }", "signature": "void should_create_batch()", "full_signature": "@Test public void should_create_batch()", "class_method_signature": "DefaultBatchFactoryTest.should_create_batch()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "put", "put", "createBatch", "isNotNull", "assertThat"]}, "focal_class": {"identifier": "DefaultBatchFactory", "superclass": "", "interfaces": "implements BatchFactory", "fields": [{"original_string": "private static final String SCANNER_APP_KEY = \"sonar.scanner.app\";", "modifier": "private static final", "type": "String", "declarator": "SCANNER_APP_KEY = \"sonar.scanner.app\"", "var_name": "SCANNER_APP_KEY"}, {"original_string": "private static final String SCANNER_APP_VERSION_KEY = \"sonar.scanner.appVersion\";", "modifier": "private static final", "type": "String", "declarator": "SCANNER_APP_VERSION_KEY = \"sonar.scanner.appVersion\"", "var_name": "SCANNER_APP_VERSION_KEY"}], "methods": [{"identifier": "createBatch", "parameters": "(Map<String, String> properties, final org.sonarsource.scanner.api.internal.batch.LogOutput logOutput)", "modifiers": "@Override public", "return": "Batch", "signature": "Batch createBatch(Map<String, String> properties, final org.sonarsource.scanner.api.internal.batch.LogOutput logOutput)", "full_signature": "@Override public Batch createBatch(Map<String, String> properties, final org.sonarsource.scanner.api.internal.batch.LogOutput logOutput)", "class_method_signature": "DefaultBatchFactory.createBatch(Map<String, String> properties, final org.sonarsource.scanner.api.internal.batch.LogOutput logOutput)", "testcase": false, "constructor": false}], "file": "batch/src/main/java/org/sonarsource/scanner/api/internal/batch/DefaultBatchFactory.java"}, "focal_method": {"identifier": "createBatch", "parameters": "(Map<String, String> properties, final org.sonarsource.scanner.api.internal.batch.LogOutput logOutput)", "modifiers": "@Override public", "return": "Batch", "body": "@Override\n  public Batch createBatch(Map<String, String> properties, final org.sonarsource.scanner.api.internal.batch.LogOutput logOutput) {\n    EnvironmentInformation env = new EnvironmentInformation(properties.get(SCANNER_APP_KEY), properties.get(SCANNER_APP_VERSION_KEY));\n    return Batch.builder()\n      .setEnvironment(env)\n      .setGlobalProperties(properties)\n      .setLogOutput((formattedMessage, level) -> logOutput.log(formattedMessage, LogOutput.Level.valueOf(level.name())))\n      .build();\n  }", "signature": "Batch createBatch(Map<String, String> properties, final org.sonarsource.scanner.api.internal.batch.LogOutput logOutput)", "full_signature": "@Override public Batch createBatch(Map<String, String> properties, final org.sonarsource.scanner.api.internal.batch.LogOutput logOutput)", "class_method_signature": "DefaultBatchFactory.createBatch(Map<String, String> properties, final org.sonarsource.scanner.api.internal.batch.LogOutput logOutput)", "testcase": false, "constructor": false, "invocations": ["get", "get", "build", "setLogOutput", "setGlobalProperties", "setEnvironment", "builder", "log", "valueOf", "name"]}, "repository": {"repo_id": 5686301, "url": "https://github.com/SonarSource/sonar-scanner-api", "language": "Java", "is_fork": false, "fork_count": 69, "stargazer_count": 85, "size": 1395, "license": "licensed"}}