{"test_class": {"identifier": "ExtensionObjectMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LoadBalancer unMarshalledLb;", "modifier": "private", "type": "LoadBalancer", "declarator": "unMarshalledLb", "var_name": "unMarshalledLb"}], "file": "extensions/rax/api/src/test/java/org/openstack/atlas/rax/api/mapper/dozer/converter/ExtensionObjectMapperTest.java"}, "test_case": {"identifier": "shouldUnmarshallAccessListFromAniesList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldUnmarshallAccessListFromAniesList() throws JAXBException, ParserConfigurationException, IOException, SAXException {\n        AccessList accessList = ExtensionObjectMapper.getAnyElement(unMarshalledLb.getAnies(), AccessList.class);\n\n        Assert.assertNotNull(accessList);\n        Assert.assertEquals(\"1.1.1.1\", accessList.getNetworkItems().get(0).getAddress());\n        Assert.assertEquals(IpVersion.IPV4, accessList.getNetworkItems().get(0).getIpVersion());\n        Assert.assertEquals(NetworkItemType.DENY, accessList.getNetworkItems().get(0).getType());\n    }", "signature": "void shouldUnmarshallAccessListFromAniesList()", "full_signature": "@Test public void shouldUnmarshallAccessListFromAniesList()", "class_method_signature": "ExtensionObjectMapperTest.shouldUnmarshallAccessListFromAniesList()", "testcase": true, "constructor": false, "invocations": ["getAnyElement", "getAnies", "assertNotNull", "assertEquals", "getAddress", "get", "getNetworkItems", "assertEquals", "getIpVersion", "get", "getNetworkItems", "assertEquals", "getType", "get", "getNetworkItems"]}, "focal_class": {"identifier": "ExtensionObjectMapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Log LOG = LogFactory.getLog(ExtensionObjectMapper.class.getName());", "modifier": "private static", "type": "Log", "declarator": "LOG = LogFactory.getLog(ExtensionObjectMapper.class.getName())", "var_name": "LOG"}], "methods": [{"identifier": "getOtherAttribute", "parameters": "(Map<QName, String> otherAttributes, String attributeName)", "modifiers": "public static", "return": "T", "signature": "T getOtherAttribute(Map<QName, String> otherAttributes, String attributeName)", "full_signature": "public static T getOtherAttribute(Map<QName, String> otherAttributes, String attributeName)", "class_method_signature": "ExtensionObjectMapper.getOtherAttribute(Map<QName, String> otherAttributes, String attributeName)", "testcase": false, "constructor": false}, {"identifier": "getAnyElement", "parameters": "(List<Object> anies, Class<T> classType)", "modifiers": "public static", "return": "T", "signature": "T getAnyElement(List<Object> anies, Class<T> classType)", "full_signature": "public static T getAnyElement(List<Object> anies, Class<T> classType)", "class_method_signature": "ExtensionObjectMapper.getAnyElement(List<Object> anies, Class<T> classType)", "testcase": false, "constructor": false}], "file": "extensions/rax/api/src/main/java/org/openstack/atlas/rax/api/mapper/dozer/converter/ExtensionObjectMapper.java"}, "focal_method": {"identifier": "getAnyElement", "parameters": "(List<Object> anies, Class<T> classType)", "modifiers": "public static", "return": "T", "body": "public static <T> T getAnyElement(List<Object> anies, Class<T> classType) {\n        for (Object any : anies) {\n            LOG.debug(\"Class: \" + any.getClass());\n\n            if (any instanceof Element) {\n                Element element = (Element) any;\n                try {\n                    JAXBContext jc = JAXBContext.newInstance(ObjectFactory.class.getPackage().getName());\n                    Unmarshaller unmarshaller = jc.createUnmarshaller();\n                    Object o = unmarshaller.unmarshal(element);\n                    if(classType.isInstance(o)) {\n                        return classType.cast(o);\n                    }\n                } catch (JAXBException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        \n        return null;\n    }", "signature": "T getAnyElement(List<Object> anies, Class<T> classType)", "full_signature": "public static T getAnyElement(List<Object> anies, Class<T> classType)", "class_method_signature": "ExtensionObjectMapper.getAnyElement(List<Object> anies, Class<T> classType)", "testcase": false, "constructor": false, "invocations": ["debug", "getClass", "newInstance", "getName", "getPackage", "createUnmarshaller", "unmarshal", "isInstance", "cast", "printStackTrace"]}, "repository": {"repo_id": 3765814, "url": "https://github.com/openstack-atlas/atlas-lb", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 5, "size": 96203, "license": "licensed"}}