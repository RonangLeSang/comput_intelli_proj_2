{"test_class": {"identifier": "DefaultRenderableVariationResolverTest", "superclass": "extends AbstractMagnoliaTestCase", "interfaces": "", "fields": [{"original_string": "private static final String CHANNEL = \"smartphone\";", "modifier": "private static final", "type": "String", "declarator": "CHANNEL = \"smartphone\"", "var_name": "CHANNEL"}, {"original_string": "private static final String EXTENSION = \"html\";", "modifier": "private static final", "type": "String", "declarator": "EXTENSION = \"html\"", "var_name": "EXTENSION"}, {"original_string": "private static final String CHANNEL_EXTENSION = CHANNEL + \"-\" + EXTENSION;", "modifier": "private static final", "type": "String", "declarator": "CHANNEL_EXTENSION = CHANNEL + \"-\" + EXTENSION", "var_name": "CHANNEL_EXTENSION"}, {"original_string": "private ConfiguredTemplateDefinition templateDefinition;", "modifier": "private", "type": "ConfiguredTemplateDefinition", "declarator": "templateDefinition", "var_name": "templateDefinition"}], "file": "magnolia-rendering/src/test/java/info/magnolia/rendering/template/variation/DefaultRenderableVariationResolverTest.java"}, "test_case": {"identifier": "testDoesNothingWhenVariationDoesntExist", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDoesNothingWhenVariationDoesntExist() throws Exception {\n        // GIVEN\n        MockWebContext mockContext = (MockWebContext) MockUtil.initMockContext();\n        final Channel channel = new Channel();\n        channel.setName(\"channelDoesNotExist\");\n        mockContext.getAggregationState().setChannel(channel);\n        mockContext.getAggregationState().setExtension(\"extensionDoesNotExist\");\n        final DefaultRenderableVariationResolver resolver = new DefaultRenderableVariationResolver();\n\n        // WHEN\n        RenderableDefinition result = resolver.resolveVariation(templateDefinition);\n\n        // THEN\n        assertNull(result);\n    }", "signature": "void testDoesNothingWhenVariationDoesntExist()", "full_signature": "@Test public void testDoesNothingWhenVariationDoesntExist()", "class_method_signature": "DefaultRenderableVariationResolverTest.testDoesNothingWhenVariationDoesntExist()", "testcase": true, "constructor": false, "invocations": ["initMockContext", "setName", "setChannel", "getAggregationState", "setExtension", "getAggregationState", "resolveVariation", "assertNull"]}, "focal_class": {"identifier": "DefaultRenderableVariationResolver", "superclass": "", "interfaces": "implements RenderableVariationResolver", "fields": [], "methods": [{"identifier": "resolveVariation", "parameters": "(RenderableDefinition renderableDefinition)", "modifiers": "@Override public", "return": "RenderableDefinition", "signature": "RenderableDefinition resolveVariation(RenderableDefinition renderableDefinition)", "full_signature": "@Override public RenderableDefinition resolveVariation(RenderableDefinition renderableDefinition)", "class_method_signature": "DefaultRenderableVariationResolver.resolveVariation(RenderableDefinition renderableDefinition)", "testcase": false, "constructor": false}, {"identifier": "getAggregationStateSafely", "parameters": "()", "modifiers": "protected", "return": "AggregationState", "signature": "AggregationState getAggregationStateSafely()", "full_signature": "protected AggregationState getAggregationStateSafely()", "class_method_signature": "DefaultRenderableVariationResolver.getAggregationStateSafely()", "testcase": false, "constructor": false}], "file": "magnolia-rendering/src/main/java/info/magnolia/rendering/template/variation/DefaultRenderableVariationResolver.java"}, "focal_method": {"identifier": "resolveVariation", "parameters": "(RenderableDefinition renderableDefinition)", "modifiers": "@Override public", "return": "RenderableDefinition", "body": "@Override\n    public RenderableDefinition resolveVariation(RenderableDefinition renderableDefinition) {\n\n        AggregationState aggregationState = getAggregationStateSafely();\n        if (aggregationState == null) {\n            return null;\n        }\n\n        final String channelName = aggregationState.getChannel().getName();\n        final String extensionName = aggregationState.getExtension();\n        final String channelExtensionName = channelName + \"-\" + extensionName;\n        \n        RenderableDefinition defVariation = renderableDefinition.getVariations().get(channelExtensionName);\n        if (defVariation != null) {\n            return BeanMergerUtil.merge(defVariation, renderableDefinition);\n        }\n        \n        defVariation = renderableDefinition.getVariations().get(extensionName);\n        if (defVariation != null) {\n            return BeanMergerUtil.merge(defVariation, renderableDefinition);\n        }\n        \n        defVariation = renderableDefinition.getVariations().get(channelName);\n        if (defVariation != null) {\n            return BeanMergerUtil.merge(defVariation, renderableDefinition);\n        }\n        \n        return null;\n    }", "signature": "RenderableDefinition resolveVariation(RenderableDefinition renderableDefinition)", "full_signature": "@Override public RenderableDefinition resolveVariation(RenderableDefinition renderableDefinition)", "class_method_signature": "DefaultRenderableVariationResolver.resolveVariation(RenderableDefinition renderableDefinition)", "testcase": false, "constructor": false, "invocations": ["getAggregationStateSafely", "getName", "getChannel", "getExtension", "get", "getVariations", "merge", "get", "getVariations", "merge", "get", "getVariations", "merge"]}, "repository": {"repo_id": 8731044, "url": "https://github.com/ekirkilevics/Magnolia", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 5, "size": 133884, "license": "licensed"}}