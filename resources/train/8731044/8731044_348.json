{"test_class": {"identifier": "NodeBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CHILD_NAME = \"child\";", "modifier": "private static final", "type": "String", "declarator": "CHILD_NAME = \"child\"", "var_name": "CHILD_NAME"}, {"original_string": "private static final String PROPERTY_NAME = \"property1\";", "modifier": "private static final", "type": "String", "declarator": "PROPERTY_NAME = \"property1\"", "var_name": "PROPERTY_NAME"}, {"original_string": "private static final String PROPERTY_VALUE = \"propertValue\";", "modifier": "private static final", "type": "String", "declarator": "PROPERTY_VALUE = \"propertValue\"", "var_name": "PROPERTY_VALUE"}, {"original_string": "private MockSession session;", "modifier": "private", "type": "MockSession", "declarator": "session", "var_name": "session"}, {"original_string": "private MockValue propertyValue;", "modifier": "private", "type": "MockValue", "declarator": "propertyValue", "var_name": "propertyValue"}], "file": "magnolia-core/src/test/java/info/magnolia/jcr/nodebuilder/NodeBuilderTest.java"}, "test_case": {"identifier": "testExecWithSeveralChildOps", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecWithSeveralChildOps() throws Exception {\n        final NodeOperation addNodeOp = Ops.addNode(CHILD_NAME);\n        final NodeOperation addPropertyOp = Ops.addProperty(PROPERTY_NAME, PROPERTY_VALUE);\n\n        final Node rootNode = session.getRootNode();\n\n        NodeBuilder builder = new NodeBuilder(rootNode, addNodeOp, addPropertyOp);\n        builder.exec();\n\n        assertTrue(\"AddNode Operation failed!\", rootNode.hasNode(CHILD_NAME));\n        assertEquals(\"AddProperty Operation failed!\", propertyValue, rootNode.getProperty(PROPERTY_NAME).getValue());\n    }", "signature": "void testExecWithSeveralChildOps()", "full_signature": "@Test public void testExecWithSeveralChildOps()", "class_method_signature": "NodeBuilderTest.testExecWithSeveralChildOps()", "testcase": true, "constructor": false, "invocations": ["addNode", "addProperty", "getRootNode", "exec", "assertTrue", "hasNode", "assertEquals", "getValue", "getProperty"]}, "focal_class": {"identifier": "NodeBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ErrorHandler errorHandler;", "modifier": "private final", "type": "ErrorHandler", "declarator": "errorHandler", "var_name": "errorHandler"}, {"original_string": "private final Node root;", "modifier": "private final", "type": "Node", "declarator": "root", "var_name": "root"}, {"original_string": "private final NodeOperation[] childrenOps;", "modifier": "private final", "type": "NodeOperation[]", "declarator": "childrenOps", "var_name": "childrenOps"}], "methods": [{"identifier": "NodeBuilder", "parameters": "(Node root, NodeOperation... childrenOps)", "modifiers": "public", "return": "", "signature": " NodeBuilder(Node root, NodeOperation... childrenOps)", "full_signature": "public  NodeBuilder(Node root, NodeOperation... childrenOps)", "class_method_signature": "NodeBuilder.NodeBuilder(Node root, NodeOperation... childrenOps)", "testcase": false, "constructor": true}, {"identifier": "NodeBuilder", "parameters": "(ErrorHandler errorHandler, Node root, NodeOperation... childrenOps)", "modifiers": "public", "return": "", "signature": " NodeBuilder(ErrorHandler errorHandler, Node root, NodeOperation... childrenOps)", "full_signature": "public  NodeBuilder(ErrorHandler errorHandler, Node root, NodeOperation... childrenOps)", "class_method_signature": "NodeBuilder.NodeBuilder(ErrorHandler errorHandler, Node root, NodeOperation... childrenOps)", "testcase": false, "constructor": true}, {"identifier": "exec", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void exec()", "full_signature": "public void exec()", "class_method_signature": "NodeBuilder.exec()", "testcase": false, "constructor": false}], "file": "magnolia-core/src/main/java/info/magnolia/jcr/nodebuilder/NodeBuilder.java"}, "focal_method": {"identifier": "exec", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void exec() throws NodeOperationException {\n        for (NodeOperation childrenOp : childrenOps) {\n            childrenOp.exec(root, errorHandler);\n        }\n    }", "signature": "void exec()", "full_signature": "public void exec()", "class_method_signature": "NodeBuilder.exec()", "testcase": false, "constructor": false, "invocations": ["exec"]}, "repository": {"repo_id": 8731044, "url": "https://github.com/ekirkilevics/Magnolia", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 5, "size": 133884, "license": "licensed"}}