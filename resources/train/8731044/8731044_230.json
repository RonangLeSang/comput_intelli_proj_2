{"test_class": {"identifier": "ComponentProviderConfigurationBuilderTest", "superclass": "extends AbstractMagnoliaTestCase", "interfaces": "", "fields": [{"original_string": "private static Deque<String> events = new LinkedList<String>();", "modifier": "private static", "type": "Deque<String>", "declarator": "events = new LinkedList<String>()", "var_name": "events"}, {"original_string": "private MockContext mockContext;", "modifier": "private", "type": "MockContext", "declarator": "mockContext", "var_name": "mockContext"}], "file": "magnolia-core/src/test/java/info/magnolia/objectfactory/configuration/ComponentProviderConfigurationBuilderTest.java"}, "test_case": {"identifier": "testSingletonScopedComponentFactory", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSingletonScopedComponentFactory() {\n        GuiceComponentProvider componentProvider = getComponentProvider(\"test-components-componentfactory-singleton.xml\");\n        assertNoMoreEvents();\n\n        SimpleComponent simpleComponent = componentProvider.getComponent(SimpleComponent.class);\n        assertEvent(\"SimpleComponent\");\n        assertNoMoreEvents();\n\n        SimpleComponent simpleComponent2 = componentProvider.getComponent(SimpleComponent.class);\n        assertNoMoreEvents();\n        assertSame(simpleComponent, simpleComponent2);\n\n        componentProvider.destroy();\n        assertNoMoreEvents();\n    }", "signature": "void testSingletonScopedComponentFactory()", "full_signature": "@Test public void testSingletonScopedComponentFactory()", "class_method_signature": "ComponentProviderConfigurationBuilderTest.testSingletonScopedComponentFactory()", "testcase": true, "constructor": false, "invocations": ["getComponentProvider", "assertNoMoreEvents", "getComponent", "assertEvent", "assertNoMoreEvents", "getComponent", "assertNoMoreEvents", "assertSame", "destroy", "assertNoMoreEvents"]}, "focal_class": {"identifier": "ComponentProviderConfigurationBuilder", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "readConfiguration", "parameters": "(List<String> resourcePaths, String id)", "modifiers": "public", "return": "ComponentProviderConfiguration", "signature": "ComponentProviderConfiguration readConfiguration(List<String> resourcePaths, String id)", "full_signature": "public ComponentProviderConfiguration readConfiguration(List<String> resourcePaths, String id)", "class_method_signature": "ComponentProviderConfigurationBuilder.readConfiguration(List<String> resourcePaths, String id)", "testcase": false, "constructor": false}, {"identifier": "getComponentsFromModules", "parameters": "(String id, List<ModuleDefinition> moduleDefinitions)", "modifiers": "public", "return": "ComponentProviderConfiguration", "signature": "ComponentProviderConfiguration getComponentsFromModules(String id, List<ModuleDefinition> moduleDefinitions)", "full_signature": "public ComponentProviderConfiguration getComponentsFromModules(String id, List<ModuleDefinition> moduleDefinitions)", "class_method_signature": "ComponentProviderConfigurationBuilder.getComponentsFromModules(String id, List<ModuleDefinition> moduleDefinitions)", "testcase": false, "constructor": false}, {"identifier": "addComponents", "parameters": "(ComponentProviderConfiguration configuration, ComponentsDefinition componentsDefinition)", "modifiers": "public", "return": "void", "signature": "void addComponents(ComponentProviderConfiguration configuration, ComponentsDefinition componentsDefinition)", "full_signature": "public void addComponents(ComponentProviderConfiguration configuration, ComponentsDefinition componentsDefinition)", "class_method_signature": "ComponentProviderConfigurationBuilder.addComponents(ComponentProviderConfiguration configuration, ComponentsDefinition componentsDefinition)", "testcase": false, "constructor": false}, {"identifier": "getConfigurer", "parameters": "(ConfigurerDefinition configurerDefinition)", "modifiers": "protected", "return": "ComponentConfigurer", "signature": "ComponentConfigurer getConfigurer(ConfigurerDefinition configurerDefinition)", "full_signature": "protected ComponentConfigurer getConfigurer(ConfigurerDefinition configurerDefinition)", "class_method_signature": "ComponentProviderConfigurationBuilder.getConfigurer(ConfigurerDefinition configurerDefinition)", "testcase": false, "constructor": false}, {"identifier": "getComponent", "parameters": "(ComponentDefinition definition)", "modifiers": "protected", "return": "ComponentConfiguration", "signature": "ComponentConfiguration getComponent(ComponentDefinition definition)", "full_signature": "protected ComponentConfiguration getComponent(ComponentDefinition definition)", "class_method_signature": "ComponentProviderConfigurationBuilder.getComponent(ComponentDefinition definition)", "testcase": false, "constructor": false}, {"identifier": "getImplementation", "parameters": "(ComponentDefinition definition)", "modifiers": "protected", "return": "ImplementationConfiguration", "signature": "ImplementationConfiguration getImplementation(ComponentDefinition definition)", "full_signature": "protected ImplementationConfiguration getImplementation(ComponentDefinition definition)", "class_method_signature": "ComponentProviderConfigurationBuilder.getImplementation(ComponentDefinition definition)", "testcase": false, "constructor": false}, {"identifier": "getProvider", "parameters": "(ComponentDefinition definition)", "modifiers": "protected", "return": "ComponentConfiguration", "signature": "ComponentConfiguration getProvider(ComponentDefinition definition)", "full_signature": "protected ComponentConfiguration getProvider(ComponentDefinition definition)", "class_method_signature": "ComponentProviderConfigurationBuilder.getProvider(ComponentDefinition definition)", "testcase": false, "constructor": false}, {"identifier": "getConfigured", "parameters": "(ComponentDefinition definition)", "modifiers": "protected", "return": "ComponentConfiguration", "signature": "ComponentConfiguration getConfigured(ComponentDefinition definition)", "full_signature": "protected ComponentConfiguration getConfigured(ComponentDefinition definition)", "class_method_signature": "ComponentProviderConfigurationBuilder.getConfigured(ComponentDefinition definition)", "testcase": false, "constructor": false}, {"identifier": "getObserved", "parameters": "(ComponentDefinition definition)", "modifiers": "protected", "return": "ComponentConfiguration", "signature": "ComponentConfiguration getObserved(ComponentDefinition definition)", "full_signature": "protected ComponentConfiguration getObserved(ComponentDefinition definition)", "class_method_signature": "ComponentProviderConfigurationBuilder.getObserved(ComponentDefinition definition)", "testcase": false, "constructor": false}, {"identifier": "isImplementation", "parameters": "(ComponentDefinition definition)", "modifiers": "protected", "return": "boolean", "signature": "boolean isImplementation(ComponentDefinition definition)", "full_signature": "protected boolean isImplementation(ComponentDefinition definition)", "class_method_signature": "ComponentProviderConfigurationBuilder.isImplementation(ComponentDefinition definition)", "testcase": false, "constructor": false}, {"identifier": "isProvider", "parameters": "(ComponentDefinition definition)", "modifiers": "protected", "return": "boolean", "signature": "boolean isProvider(ComponentDefinition definition)", "full_signature": "protected boolean isProvider(ComponentDefinition definition)", "class_method_signature": "ComponentProviderConfigurationBuilder.isProvider(ComponentDefinition definition)", "testcase": false, "constructor": false}, {"identifier": "isConfigured", "parameters": "(ComponentDefinition definition)", "modifiers": "protected", "return": "boolean", "signature": "boolean isConfigured(ComponentDefinition definition)", "full_signature": "protected boolean isConfigured(ComponentDefinition definition)", "class_method_signature": "ComponentProviderConfigurationBuilder.isConfigured(ComponentDefinition definition)", "testcase": false, "constructor": false}, {"identifier": "isObserved", "parameters": "(ComponentDefinition definition)", "modifiers": "protected", "return": "boolean", "signature": "boolean isObserved(ComponentDefinition definition)", "full_signature": "protected boolean isObserved(ComponentDefinition definition)", "class_method_signature": "ComponentProviderConfigurationBuilder.isObserved(ComponentDefinition definition)", "testcase": false, "constructor": false}, {"identifier": "parseLazyFlag", "parameters": "(ComponentDefinition definition)", "modifiers": "protected", "return": "boolean", "signature": "boolean parseLazyFlag(ComponentDefinition definition)", "full_signature": "protected boolean parseLazyFlag(ComponentDefinition definition)", "class_method_signature": "ComponentProviderConfigurationBuilder.parseLazyFlag(ComponentDefinition definition)", "testcase": false, "constructor": false}, {"identifier": "classForName", "parameters": "(String className)", "modifiers": "protected", "return": "Class<?>", "signature": "Class<?> classForName(String className)", "full_signature": "protected Class<?> classForName(String className)", "class_method_signature": "ComponentProviderConfigurationBuilder.classForName(String className)", "testcase": false, "constructor": false}], "file": "magnolia-core/src/main/java/info/magnolia/objectfactory/configuration/ComponentProviderConfigurationBuilder.java"}, "focal_method": {"identifier": "getComponent", "parameters": "(ComponentDefinition definition)", "modifiers": "protected", "return": "ComponentConfiguration", "body": "protected ComponentConfiguration getComponent(ComponentDefinition definition) {\n        if (isProvider(definition)) {\n            return getProvider(definition);\n        } else if (isImplementation(definition)) {\n            return getImplementation(definition);\n        } else if (isConfigured(definition)) {\n            return getConfigured(definition);\n        } else if (isObserved(definition)) {\n            return getObserved(definition);\n        } else {\n            throw new ComponentConfigurationException(\"Unable to add component with key \" + definition.getType());\n        }\n    }", "signature": "ComponentConfiguration getComponent(ComponentDefinition definition)", "full_signature": "protected ComponentConfiguration getComponent(ComponentDefinition definition)", "class_method_signature": "ComponentProviderConfigurationBuilder.getComponent(ComponentDefinition definition)", "testcase": false, "constructor": false, "invocations": ["isProvider", "getProvider", "isImplementation", "getImplementation", "isConfigured", "getConfigured", "isObserved", "getObserved", "getType"]}, "repository": {"repo_id": 8731044, "url": "https://github.com/ekirkilevics/Magnolia", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 5, "size": 133884, "license": "licensed"}}