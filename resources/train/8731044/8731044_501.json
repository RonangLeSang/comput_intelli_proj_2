{"test_class": {"identifier": "SimpleUrlPatternTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final byte[] MACROMAN_BYTES = new byte[]{47, 121, -118, -118, -118, -118, -118};", "modifier": "private static final", "type": "byte[]", "declarator": "MACROMAN_BYTES = new byte[]{47, 121, -118, -118, -118, -118, -118}", "var_name": "MACROMAN_BYTES"}, {"original_string": "private static final byte[] NFC_BYTES = new byte[]{47, 121, -61, -92, -61, -92, -61, -92, -61, -92, -61, -92};", "modifier": "private static final", "type": "byte[]", "declarator": "NFC_BYTES = new byte[]{47, 121, -61, -92, -61, -92, -61, -92, -61, -92, -61, -92}", "var_name": "NFC_BYTES"}, {"original_string": "private static final byte[] NFD_BYTES = new byte[]{47, 121, 97, -52, -120, 97, -52, -120, 97, -52, -120, 97, -52, -120, 97, -52, -120};", "modifier": "private static final", "type": "byte[]", "declarator": "NFD_BYTES = new byte[]{47, 121, 97, -52, -120, 97, -52, -120, 97, -52, -120, 97, -52, -120, 97, -52, -120}", "var_name": "NFD_BYTES"}, {"original_string": "private static final String MACROMAN;", "modifier": "private static final", "type": "String", "declarator": "MACROMAN", "var_name": "MACROMAN"}, {"original_string": "private static final String NFC;", "modifier": "private static final", "type": "String", "declarator": "NFC", "var_name": "NFC"}, {"original_string": "private static final String NFD;", "modifier": "private static final", "type": "String", "declarator": "NFD", "var_name": "NFD"}], "file": "magnolia-core/src/test/java/info/magnolia/cms/util/SimpleUrlPatternTest.java"}, "test_case": {"identifier": "testStarMatch", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testStarMatch() {\n        assertTrue(new SimpleUrlPattern(\"/test/*.html\").match(\"/test/url.html\"));\n    }", "signature": "void testStarMatch()", "full_signature": "@Test public void testStarMatch()", "class_method_signature": "SimpleUrlPatternTest.testStarMatch()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "match"]}, "focal_class": {"identifier": "SimpleUrlPattern", "superclass": "", "interfaces": "implements UrlPattern", "fields": [{"original_string": "private static final long serialVersionUID = 223L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 223L", "var_name": "serialVersionUID"}, {"original_string": "public static final String URL_CHAR_PATTERN = \".\";", "modifier": "public static final", "type": "String", "declarator": "URL_CHAR_PATTERN = \".\"", "var_name": "URL_CHAR_PATTERN"}, {"original_string": "public static final String MULTIPLE_CHAR_PATTERN = URL_CHAR_PATTERN + \"*\";", "modifier": "public static final", "type": "String", "declarator": "MULTIPLE_CHAR_PATTERN = URL_CHAR_PATTERN + \"*\"", "var_name": "MULTIPLE_CHAR_PATTERN"}, {"original_string": "public static final String SINGLE_CHAR_PATTERN = URL_CHAR_PATTERN + \"?\";", "modifier": "public static final", "type": "String", "declarator": "SINGLE_CHAR_PATTERN = URL_CHAR_PATTERN + \"?\"", "var_name": "SINGLE_CHAR_PATTERN"}, {"original_string": "private Pattern pattern;", "modifier": "private", "type": "Pattern", "declarator": "pattern", "var_name": "pattern"}, {"original_string": "private int length;", "modifier": "private", "type": "int", "declarator": "length", "var_name": "length"}, {"original_string": "private String patternString;", "modifier": "private", "type": "String", "declarator": "patternString", "var_name": "patternString"}], "methods": [{"identifier": "SimpleUrlPattern", "parameters": "()", "modifiers": "public", "return": "", "signature": " SimpleUrlPattern()", "full_signature": "public  SimpleUrlPattern()", "class_method_signature": "SimpleUrlPattern.SimpleUrlPattern()", "testcase": false, "constructor": true}, {"identifier": "SimpleUrlPattern", "parameters": "(String string)", "modifiers": "public", "return": "", "signature": " SimpleUrlPattern(String string)", "full_signature": "public  SimpleUrlPattern(String string)", "class_method_signature": "SimpleUrlPattern.SimpleUrlPattern(String string)", "testcase": false, "constructor": true}, {"identifier": "getEncodedString", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String getEncodedString(String str)", "full_signature": "public static String getEncodedString(String str)", "class_method_signature": "SimpleUrlPattern.getEncodedString(String str)", "testcase": false, "constructor": false}, {"identifier": "match", "parameters": "(String str)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean match(String str)", "full_signature": "@Override public boolean match(String str)", "class_method_signature": "SimpleUrlPattern.match(String str)", "testcase": false, "constructor": false}, {"identifier": "getLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getLength()", "full_signature": "@Override public int getLength()", "class_method_signature": "SimpleUrlPattern.getLength()", "testcase": false, "constructor": false}, {"identifier": "getPatternString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPatternString()", "full_signature": "@Override public String getPatternString()", "class_method_signature": "SimpleUrlPattern.getPatternString()", "testcase": false, "constructor": false}, {"identifier": "setPatternString", "parameters": "(String patternString)", "modifiers": "public", "return": "void", "signature": "void setPatternString(String patternString)", "full_signature": "public void setPatternString(String patternString)", "class_method_signature": "SimpleUrlPattern.setPatternString(String patternString)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SimpleUrlPattern.toString()", "testcase": false, "constructor": false}], "file": "magnolia-core/src/main/java/info/magnolia/cms/util/SimpleUrlPattern.java"}, "focal_method": {"identifier": "match", "parameters": "(String str)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean match(String str) {\n        return this.pattern.matcher(str).matches();\n    }", "signature": "boolean match(String str)", "full_signature": "@Override public boolean match(String str)", "class_method_signature": "SimpleUrlPattern.match(String str)", "testcase": false, "constructor": false, "invocations": ["matches", "matcher"]}, "repository": {"repo_id": 8731044, "url": "https://github.com/ekirkilevics/Magnolia", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 5, "size": 133884, "license": "licensed"}}