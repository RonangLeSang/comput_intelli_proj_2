{"test_class": {"identifier": "TemplatingFunctionsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CONTEXT_PATH = \"/manual_set_context_path\";", "modifier": "private static final", "type": "String", "declarator": "CONTEXT_PATH = \"/manual_set_context_path\"", "var_name": "CONTEXT_PATH"}, {"original_string": "private static final String DEPTH_1_FIRST_PAGE_NAME = \"page-L1-1\";", "modifier": "private static final", "type": "String", "declarator": "DEPTH_1_FIRST_PAGE_NAME = \"page-L1-1\"", "var_name": "DEPTH_1_FIRST_PAGE_NAME"}, {"original_string": "private static final String DEPTH_2_FIRST_PAGE_NAME = \"page-L2-1\";", "modifier": "private static final", "type": "String", "declarator": "DEPTH_2_FIRST_PAGE_NAME = \"page-L2-1\"", "var_name": "DEPTH_2_FIRST_PAGE_NAME"}, {"original_string": "private static final String DEPTH_2_FIRST_COMPONENT_NAME = \"comp-L2-1\";", "modifier": "private static final", "type": "String", "declarator": "DEPTH_2_FIRST_COMPONENT_NAME = \"comp-L2-1\"", "var_name": "DEPTH_2_FIRST_COMPONENT_NAME"}, {"original_string": "private static final String DEPTH_3_FIRST_PAGE_NAME = \"page-L3-1\";", "modifier": "private static final", "type": "String", "declarator": "DEPTH_3_FIRST_PAGE_NAME = \"page-L3-1\"", "var_name": "DEPTH_3_FIRST_PAGE_NAME"}, {"original_string": "private static final String DEPTH_3_FIRST_COMPONENT_NAME = \"comp-L3-1\";", "modifier": "private static final", "type": "String", "declarator": "DEPTH_3_FIRST_COMPONENT_NAME = \"comp-L3-1\"", "var_name": "DEPTH_3_FIRST_COMPONENT_NAME"}, {"original_string": "private static final String[] DEPTH_1_PAGE_NAMES = {DEPTH_1_FIRST_PAGE_NAME, \"page-L1-2\", \"page-L1-3\"};", "modifier": "private static final", "type": "String[]", "declarator": "DEPTH_1_PAGE_NAMES = {DEPTH_1_FIRST_PAGE_NAME, \"page-L1-2\", \"page-L1-3\"}", "var_name": "DEPTH_1_PAGE_NAMES"}, {"original_string": "private static final String[] DEPTH_2_PAGE_NAMES = {DEPTH_2_FIRST_PAGE_NAME, \"page-L2-2\", \"page-L2-3\"};", "modifier": "private static final", "type": "String[]", "declarator": "DEPTH_2_PAGE_NAMES = {DEPTH_2_FIRST_PAGE_NAME, \"page-L2-2\", \"page-L2-3\"}", "var_name": "DEPTH_2_PAGE_NAMES"}, {"original_string": "private static final String[] DEPTH_2_COMPONENT_NAMES = {DEPTH_2_FIRST_COMPONENT_NAME, \"comp-L2-2\", \"comp-L2-3\"};", "modifier": "private static final", "type": "String[]", "declarator": "DEPTH_2_COMPONENT_NAMES = {DEPTH_2_FIRST_COMPONENT_NAME, \"comp-L2-2\", \"comp-L2-3\"}", "var_name": "DEPTH_2_COMPONENT_NAMES"}, {"original_string": "private static final String[] DEPTH_3_PAGE_NAMES = {DEPTH_3_FIRST_PAGE_NAME, \"page-L3-2\", \"page-L3-3\"};", "modifier": "private static final", "type": "String[]", "declarator": "DEPTH_3_PAGE_NAMES = {DEPTH_3_FIRST_PAGE_NAME, \"page-L3-2\", \"page-L3-3\"}", "var_name": "DEPTH_3_PAGE_NAMES"}, {"original_string": "private static final String[] DEPTH_3_COMPONENT_NAMES = {DEPTH_3_FIRST_COMPONENT_NAME, \"comp-L3-2\", \"comp-L3-3\"};", "modifier": "private static final", "type": "String[]", "declarator": "DEPTH_3_COMPONENT_NAMES = {DEPTH_3_FIRST_COMPONENT_NAME, \"comp-L3-2\", \"comp-L3-3\"}", "var_name": "DEPTH_3_COMPONENT_NAMES"}, {"original_string": "private MockNode root;", "modifier": "private", "type": "MockNode", "declarator": "root", "var_name": "root"}, {"original_string": "private MockNode topPage;", "modifier": "private", "type": "MockNode", "declarator": "topPage", "var_name": "topPage"}, {"original_string": "private MockNode topPageComponent;", "modifier": "private", "type": "MockNode", "declarator": "topPageComponent", "var_name": "topPageComponent"}, {"original_string": "private MockNode childPage;", "modifier": "private", "type": "MockNode", "declarator": "childPage", "var_name": "childPage"}, {"original_string": "private MockNode childPageComponent;", "modifier": "private", "type": "MockNode", "declarator": "childPageComponent", "var_name": "childPageComponent"}, {"original_string": "private MockNode childPageSubPage;", "modifier": "private", "type": "MockNode", "declarator": "childPageSubPage", "var_name": "childPageSubPage"}, {"original_string": "private ContentMap rootContentMap;", "modifier": "private", "type": "ContentMap", "declarator": "rootContentMap", "var_name": "rootContentMap"}, {"original_string": "private ContentMap topPageContentMap;", "modifier": "private", "type": "ContentMap", "declarator": "topPageContentMap", "var_name": "topPageContentMap"}, {"original_string": "private ContentMap topPageComponentContentMap;", "modifier": "private", "type": "ContentMap", "declarator": "topPageComponentContentMap", "var_name": "topPageComponentContentMap"}, {"original_string": "private ContentMap childPageContentMap;", "modifier": "private", "type": "ContentMap", "declarator": "childPageContentMap", "var_name": "childPageContentMap"}, {"original_string": "private ContentMap childPageComponentContentMap;", "modifier": "private", "type": "ContentMap", "declarator": "childPageComponentContentMap", "var_name": "childPageComponentContentMap"}, {"original_string": "private ContentMap childPageSubPageContentMap;", "modifier": "private", "type": "ContentMap", "declarator": "childPageSubPageContentMap", "var_name": "childPageSubPageContentMap"}, {"original_string": "private TemplatingFunctions functions;", "modifier": "private", "type": "TemplatingFunctions", "declarator": "functions", "var_name": "functions"}], "file": "magnolia-templating/src/test/java/info/magnolia/templating/functions/TemplatingFunctionsTest.java"}, "test_case": {"identifier": "testAncestorsFromSubComponentNodeDepth5", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAncestorsFromSubComponentNodeDepth5() throws RepositoryException {\n        // GIVEN\n        Node subSubComponent = childPageComponent.addNode(\"subSubComponent\", NodeTypes.Component.NAME);\n\n        List<Node> compareList = new ArrayList<Node>();\n        compareList.add(topPage);\n        compareList.add(childPage);\n        compareList.add(childPageComponent);\n        Iterator<Node> itCompare = compareList.iterator();\n\n        // WHEN\n        List<Node> resultList = functions.ancestors(subSubComponent);\n\n        // THEN\n        assertEquals(compareList.size(), resultList.size());\n        for (Iterator<Node> itResult = resultList.iterator(); itResult.hasNext();) {\n            assertNodeEqualsNode(itResult.next(), itCompare.next());\n        }\n    }", "signature": "void testAncestorsFromSubComponentNodeDepth5()", "full_signature": "@Test public void testAncestorsFromSubComponentNodeDepth5()", "class_method_signature": "TemplatingFunctionsTest.testAncestorsFromSubComponentNodeDepth5()", "testcase": true, "constructor": false, "invocations": ["addNode", "add", "add", "add", "iterator", "ancestors", "assertEquals", "size", "size", "iterator", "hasNext", "assertNodeEqualsNode", "next", "next"]}, "focal_class": {"identifier": "TemplatingFunctions", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(TemplatingFunctions.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(TemplatingFunctions.class)", "var_name": "log"}, {"original_string": "private final Provider<AggregationState> aggregationStateProvider;", "modifier": "private final", "type": "Provider<AggregationState>", "declarator": "aggregationStateProvider", "var_name": "aggregationStateProvider"}], "methods": [{"identifier": "TemplatingFunctions", "parameters": "(Provider<AggregationState> aggregationStateProvider)", "modifiers": "@Inject public", "return": "", "signature": " TemplatingFunctions(Provider<AggregationState> aggregationStateProvider)", "full_signature": "@Inject public  TemplatingFunctions(Provider<AggregationState> aggregationStateProvider)", "class_method_signature": "TemplatingFunctions.TemplatingFunctions(Provider<AggregationState> aggregationStateProvider)", "testcase": false, "constructor": true}, {"identifier": "asJCRNode", "parameters": "(ContentMap contentMap)", "modifiers": "public", "return": "Node", "signature": "Node asJCRNode(ContentMap contentMap)", "full_signature": "public Node asJCRNode(ContentMap contentMap)", "class_method_signature": "TemplatingFunctions.asJCRNode(ContentMap contentMap)", "testcase": false, "constructor": false}, {"identifier": "asContentMap", "parameters": "(Node content)", "modifiers": "public", "return": "ContentMap", "signature": "ContentMap asContentMap(Node content)", "full_signature": "public ContentMap asContentMap(Node content)", "class_method_signature": "TemplatingFunctions.asContentMap(Node content)", "testcase": false, "constructor": false}, {"identifier": "children", "parameters": "(Node content)", "modifiers": "public", "return": "List<Node>", "signature": "List<Node> children(Node content)", "full_signature": "public List<Node> children(Node content)", "class_method_signature": "TemplatingFunctions.children(Node content)", "testcase": false, "constructor": false}, {"identifier": "children", "parameters": "(Node content, String nodeTypeName)", "modifiers": "public", "return": "List<Node>", "signature": "List<Node> children(Node content, String nodeTypeName)", "full_signature": "public List<Node> children(Node content, String nodeTypeName)", "class_method_signature": "TemplatingFunctions.children(Node content, String nodeTypeName)", "testcase": false, "constructor": false}, {"identifier": "children", "parameters": "(ContentMap content)", "modifiers": "public", "return": "List<ContentMap>", "signature": "List<ContentMap> children(ContentMap content)", "full_signature": "public List<ContentMap> children(ContentMap content)", "class_method_signature": "TemplatingFunctions.children(ContentMap content)", "testcase": false, "constructor": false}, {"identifier": "children", "parameters": "(ContentMap content, String nodeTypeName)", "modifiers": "public", "return": "List<ContentMap>", "signature": "List<ContentMap> children(ContentMap content, String nodeTypeName)", "full_signature": "public List<ContentMap> children(ContentMap content, String nodeTypeName)", "class_method_signature": "TemplatingFunctions.children(ContentMap content, String nodeTypeName)", "testcase": false, "constructor": false}, {"identifier": "root", "parameters": "(ContentMap contentMap)", "modifiers": "public", "return": "ContentMap", "signature": "ContentMap root(ContentMap contentMap)", "full_signature": "public ContentMap root(ContentMap contentMap)", "class_method_signature": "TemplatingFunctions.root(ContentMap contentMap)", "testcase": false, "constructor": false}, {"identifier": "root", "parameters": "(ContentMap contentMap, String nodeTypeName)", "modifiers": "public", "return": "ContentMap", "signature": "ContentMap root(ContentMap contentMap, String nodeTypeName)", "full_signature": "public ContentMap root(ContentMap contentMap, String nodeTypeName)", "class_method_signature": "TemplatingFunctions.root(ContentMap contentMap, String nodeTypeName)", "testcase": false, "constructor": false}, {"identifier": "root", "parameters": "(Node content)", "modifiers": "public", "return": "Node", "signature": "Node root(Node content)", "full_signature": "public Node root(Node content)", "class_method_signature": "TemplatingFunctions.root(Node content)", "testcase": false, "constructor": false}, {"identifier": "root", "parameters": "(Node content, String nodeTypeName)", "modifiers": "public", "return": "Node", "signature": "Node root(Node content, String nodeTypeName)", "full_signature": "public Node root(Node content, String nodeTypeName)", "class_method_signature": "TemplatingFunctions.root(Node content, String nodeTypeName)", "testcase": false, "constructor": false}, {"identifier": "parent", "parameters": "(ContentMap contentMap)", "modifiers": "public", "return": "ContentMap", "signature": "ContentMap parent(ContentMap contentMap)", "full_signature": "public ContentMap parent(ContentMap contentMap)", "class_method_signature": "TemplatingFunctions.parent(ContentMap contentMap)", "testcase": false, "constructor": false}, {"identifier": "parent", "parameters": "(ContentMap contentMap, String nodeTypeName)", "modifiers": "public", "return": "ContentMap", "signature": "ContentMap parent(ContentMap contentMap, String nodeTypeName)", "full_signature": "public ContentMap parent(ContentMap contentMap, String nodeTypeName)", "class_method_signature": "TemplatingFunctions.parent(ContentMap contentMap, String nodeTypeName)", "testcase": false, "constructor": false}, {"identifier": "parent", "parameters": "(Node content)", "modifiers": "public", "return": "Node", "signature": "Node parent(Node content)", "full_signature": "public Node parent(Node content)", "class_method_signature": "TemplatingFunctions.parent(Node content)", "testcase": false, "constructor": false}, {"identifier": "parent", "parameters": "(Node content, String nodeTypeName)", "modifiers": "public", "return": "Node", "signature": "Node parent(Node content, String nodeTypeName)", "full_signature": "public Node parent(Node content, String nodeTypeName)", "class_method_signature": "TemplatingFunctions.parent(Node content, String nodeTypeName)", "testcase": false, "constructor": false}, {"identifier": "page", "parameters": "(ContentMap content)", "modifiers": "public", "return": "ContentMap", "signature": "ContentMap page(ContentMap content)", "full_signature": "public ContentMap page(ContentMap content)", "class_method_signature": "TemplatingFunctions.page(ContentMap content)", "testcase": false, "constructor": false}, {"identifier": "page", "parameters": "(Node content)", "modifiers": "public", "return": "Node", "signature": "Node page(Node content)", "full_signature": "public Node page(Node content)", "class_method_signature": "TemplatingFunctions.page(Node content)", "testcase": false, "constructor": false}, {"identifier": "ancestors", "parameters": "(ContentMap contentMap)", "modifiers": "public", "return": "List<ContentMap>", "signature": "List<ContentMap> ancestors(ContentMap contentMap)", "full_signature": "public List<ContentMap> ancestors(ContentMap contentMap)", "class_method_signature": "TemplatingFunctions.ancestors(ContentMap contentMap)", "testcase": false, "constructor": false}, {"identifier": "ancestors", "parameters": "(ContentMap contentMap, String nodeTypeName)", "modifiers": "public", "return": "List<ContentMap>", "signature": "List<ContentMap> ancestors(ContentMap contentMap, String nodeTypeName)", "full_signature": "public List<ContentMap> ancestors(ContentMap contentMap, String nodeTypeName)", "class_method_signature": "TemplatingFunctions.ancestors(ContentMap contentMap, String nodeTypeName)", "testcase": false, "constructor": false}, {"identifier": "ancestors", "parameters": "(Node content)", "modifiers": "public", "return": "List<Node>", "signature": "List<Node> ancestors(Node content)", "full_signature": "public List<Node> ancestors(Node content)", "class_method_signature": "TemplatingFunctions.ancestors(Node content)", "testcase": false, "constructor": false}, {"identifier": "ancestors", "parameters": "(Node content, String nodeTypeName)", "modifiers": "public", "return": "List<Node>", "signature": "List<Node> ancestors(Node content, String nodeTypeName)", "full_signature": "public List<Node> ancestors(Node content, String nodeTypeName)", "class_method_signature": "TemplatingFunctions.ancestors(Node content, String nodeTypeName)", "testcase": false, "constructor": false}, {"identifier": "inherit", "parameters": "(Node content)", "modifiers": "public", "return": "Node", "signature": "Node inherit(Node content)", "full_signature": "public Node inherit(Node content)", "class_method_signature": "TemplatingFunctions.inherit(Node content)", "testcase": false, "constructor": false}, {"identifier": "inherit", "parameters": "(Node content, String relPath)", "modifiers": "public", "return": "Node", "signature": "Node inherit(Node content, String relPath)", "full_signature": "public Node inherit(Node content, String relPath)", "class_method_signature": "TemplatingFunctions.inherit(Node content, String relPath)", "testcase": false, "constructor": false}, {"identifier": "inherit", "parameters": "(ContentMap content)", "modifiers": "public", "return": "ContentMap", "signature": "ContentMap inherit(ContentMap content)", "full_signature": "public ContentMap inherit(ContentMap content)", "class_method_signature": "TemplatingFunctions.inherit(ContentMap content)", "testcase": false, "constructor": false}, {"identifier": "inherit", "parameters": "(ContentMap content, String relPath)", "modifiers": "public", "return": "ContentMap", "signature": "ContentMap inherit(ContentMap content, String relPath)", "full_signature": "public ContentMap inherit(ContentMap content, String relPath)", "class_method_signature": "TemplatingFunctions.inherit(ContentMap content, String relPath)", "testcase": false, "constructor": false}, {"identifier": "inheritProperty", "parameters": "(Node content, String relPath)", "modifiers": "public", "return": "Property", "signature": "Property inheritProperty(Node content, String relPath)", "full_signature": "public Property inheritProperty(Node content, String relPath)", "class_method_signature": "TemplatingFunctions.inheritProperty(Node content, String relPath)", "testcase": false, "constructor": false}, {"identifier": "inheritProperty", "parameters": "(ContentMap content, String relPath)", "modifiers": "public", "return": "Property", "signature": "Property inheritProperty(ContentMap content, String relPath)", "full_signature": "public Property inheritProperty(ContentMap content, String relPath)", "class_method_signature": "TemplatingFunctions.inheritProperty(ContentMap content, String relPath)", "testcase": false, "constructor": false}, {"identifier": "inheritList", "parameters": "(Node content, String relPath)", "modifiers": "public", "return": "List<Node>", "signature": "List<Node> inheritList(Node content, String relPath)", "full_signature": "public List<Node> inheritList(Node content, String relPath)", "class_method_signature": "TemplatingFunctions.inheritList(Node content, String relPath)", "testcase": false, "constructor": false}, {"identifier": "inheritList", "parameters": "(ContentMap content, String relPath)", "modifiers": "public", "return": "List<ContentMap>", "signature": "List<ContentMap> inheritList(ContentMap content, String relPath)", "full_signature": "public List<ContentMap> inheritList(ContentMap content, String relPath)", "class_method_signature": "TemplatingFunctions.inheritList(ContentMap content, String relPath)", "testcase": false, "constructor": false}, {"identifier": "isInherited", "parameters": "(Node content)", "modifiers": "public", "return": "boolean", "signature": "boolean isInherited(Node content)", "full_signature": "public boolean isInherited(Node content)", "class_method_signature": "TemplatingFunctions.isInherited(Node content)", "testcase": false, "constructor": false}, {"identifier": "isInherited", "parameters": "(ContentMap content)", "modifiers": "public", "return": "boolean", "signature": "boolean isInherited(ContentMap content)", "full_signature": "public boolean isInherited(ContentMap content)", "class_method_signature": "TemplatingFunctions.isInherited(ContentMap content)", "testcase": false, "constructor": false}, {"identifier": "isFromCurrentPage", "parameters": "(Node content)", "modifiers": "public", "return": "boolean", "signature": "boolean isFromCurrentPage(Node content)", "full_signature": "public boolean isFromCurrentPage(Node content)", "class_method_signature": "TemplatingFunctions.isFromCurrentPage(Node content)", "testcase": false, "constructor": false}, {"identifier": "isFromCurrentPage", "parameters": "(ContentMap content)", "modifiers": "public", "return": "boolean", "signature": "boolean isFromCurrentPage(ContentMap content)", "full_signature": "public boolean isFromCurrentPage(ContentMap content)", "class_method_signature": "TemplatingFunctions.isFromCurrentPage(ContentMap content)", "testcase": false, "constructor": false}, {"identifier": "link", "parameters": "(String workspace, String nodeIdentifier)", "modifiers": "public", "return": "String", "signature": "String link(String workspace, String nodeIdentifier)", "full_signature": "public String link(String workspace, String nodeIdentifier)", "class_method_signature": "TemplatingFunctions.link(String workspace, String nodeIdentifier)", "testcase": false, "constructor": false}, {"identifier": "link", "parameters": "(Property property)", "modifiers": "@Deprecated public", "return": "String", "signature": "String link(Property property)", "full_signature": "@Deprecated public String link(Property property)", "class_method_signature": "TemplatingFunctions.link(Property property)", "testcase": false, "constructor": false}, {"identifier": "link", "parameters": "(Node content)", "modifiers": "public", "return": "String", "signature": "String link(Node content)", "full_signature": "public String link(Node content)", "class_method_signature": "TemplatingFunctions.link(Node content)", "testcase": false, "constructor": false}, {"identifier": "link", "parameters": "(ContentMap contentMap)", "modifiers": "public", "return": "String", "signature": "String link(ContentMap contentMap)", "full_signature": "public String link(ContentMap contentMap)", "class_method_signature": "TemplatingFunctions.link(ContentMap contentMap)", "testcase": false, "constructor": false}, {"identifier": "language", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String language()", "full_signature": "public String language()", "class_method_signature": "TemplatingFunctions.language()", "testcase": false, "constructor": false}, {"identifier": "externalLink", "parameters": "(Node content, String linkPropertyName)", "modifiers": "public", "return": "String", "signature": "String externalLink(Node content, String linkPropertyName)", "full_signature": "public String externalLink(Node content, String linkPropertyName)", "class_method_signature": "TemplatingFunctions.externalLink(Node content, String linkPropertyName)", "testcase": false, "constructor": false}, {"identifier": "externalLink", "parameters": "(ContentMap content, String linkPropertyName)", "modifiers": "public", "return": "String", "signature": "String externalLink(ContentMap content, String linkPropertyName)", "full_signature": "public String externalLink(ContentMap content, String linkPropertyName)", "class_method_signature": "TemplatingFunctions.externalLink(ContentMap content, String linkPropertyName)", "testcase": false, "constructor": false}, {"identifier": "externalLinkTitle", "parameters": "(Node content, String linkPropertyName, String linkTitlePropertyName)", "modifiers": "public", "return": "String", "signature": "String externalLinkTitle(Node content, String linkPropertyName, String linkTitlePropertyName)", "full_signature": "public String externalLinkTitle(Node content, String linkPropertyName, String linkTitlePropertyName)", "class_method_signature": "TemplatingFunctions.externalLinkTitle(Node content, String linkPropertyName, String linkTitlePropertyName)", "testcase": false, "constructor": false}, {"identifier": "externalLinkTitle", "parameters": "(ContentMap content, String linkPropertyName, String linkTitlePropertyName)", "modifiers": "public", "return": "String", "signature": "String externalLinkTitle(ContentMap content, String linkPropertyName, String linkTitlePropertyName)", "full_signature": "public String externalLinkTitle(ContentMap content, String linkPropertyName, String linkTitlePropertyName)", "class_method_signature": "TemplatingFunctions.externalLinkTitle(ContentMap content, String linkPropertyName, String linkTitlePropertyName)", "testcase": false, "constructor": false}, {"identifier": "isEditMode", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEditMode()", "full_signature": "public boolean isEditMode()", "class_method_signature": "TemplatingFunctions.isEditMode()", "testcase": false, "constructor": false}, {"identifier": "isPreviewMode", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isPreviewMode()", "full_signature": "public boolean isPreviewMode()", "class_method_signature": "TemplatingFunctions.isPreviewMode()", "testcase": false, "constructor": false}, {"identifier": "isAuthorInstance", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAuthorInstance()", "full_signature": "public boolean isAuthorInstance()", "class_method_signature": "TemplatingFunctions.isAuthorInstance()", "testcase": false, "constructor": false}, {"identifier": "isPublicInstance", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isPublicInstance()", "full_signature": "public boolean isPublicInstance()", "class_method_signature": "TemplatingFunctions.isPublicInstance()", "testcase": false, "constructor": false}, {"identifier": "createHtmlAttribute", "parameters": "(String name, String value)", "modifiers": "public", "return": "String", "signature": "String createHtmlAttribute(String name, String value)", "full_signature": "public String createHtmlAttribute(String name, String value)", "class_method_signature": "TemplatingFunctions.createHtmlAttribute(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "siblings", "parameters": "(Node node)", "modifiers": "public", "return": "SiblingsHelper", "signature": "SiblingsHelper siblings(Node node)", "full_signature": "public SiblingsHelper siblings(Node node)", "class_method_signature": "TemplatingFunctions.siblings(Node node)", "testcase": false, "constructor": false}, {"identifier": "siblings", "parameters": "(ContentMap node)", "modifiers": "public", "return": "SiblingsHelper", "signature": "SiblingsHelper siblings(ContentMap node)", "full_signature": "public SiblingsHelper siblings(ContentMap node)", "class_method_signature": "TemplatingFunctions.siblings(ContentMap node)", "testcase": false, "constructor": false}, {"identifier": "content", "parameters": "(String path)", "modifiers": "public", "return": "Node", "signature": "Node content(String path)", "full_signature": "public Node content(String path)", "class_method_signature": "TemplatingFunctions.content(String path)", "testcase": false, "constructor": false}, {"identifier": "content", "parameters": "(String repository, String path)", "modifiers": "public", "return": "Node", "signature": "Node content(String repository, String path)", "full_signature": "public Node content(String repository, String path)", "class_method_signature": "TemplatingFunctions.content(String repository, String path)", "testcase": false, "constructor": false}, {"identifier": "contentByIdentifier", "parameters": "(String id)", "modifiers": "public", "return": "Node", "signature": "Node contentByIdentifier(String id)", "full_signature": "public Node contentByIdentifier(String id)", "class_method_signature": "TemplatingFunctions.contentByIdentifier(String id)", "testcase": false, "constructor": false}, {"identifier": "contentByIdentifier", "parameters": "(String repository, String id)", "modifiers": "public", "return": "Node", "signature": "Node contentByIdentifier(String repository, String id)", "full_signature": "public Node contentByIdentifier(String repository, String id)", "class_method_signature": "TemplatingFunctions.contentByIdentifier(String repository, String id)", "testcase": false, "constructor": false}, {"identifier": "asContentMapList", "parameters": "(Collection<Node> nodeList)", "modifiers": "public", "return": "List<ContentMap>", "signature": "List<ContentMap> asContentMapList(Collection<Node> nodeList)", "full_signature": "public List<ContentMap> asContentMapList(Collection<Node> nodeList)", "class_method_signature": "TemplatingFunctions.asContentMapList(Collection<Node> nodeList)", "testcase": false, "constructor": false}, {"identifier": "asNodeList", "parameters": "(Collection<ContentMap> contentMapList)", "modifiers": "public", "return": "List<Node>", "signature": "List<Node> asNodeList(Collection<ContentMap> contentMapList)", "full_signature": "public List<Node> asNodeList(Collection<ContentMap> contentMapList)", "class_method_signature": "TemplatingFunctions.asNodeList(Collection<ContentMap> contentMapList)", "testcase": false, "constructor": false}, {"identifier": "asNodeList", "parameters": "(Iterable<Node> nodes)", "modifiers": "protected", "return": "List<Node>", "signature": "List<Node> asNodeList(Iterable<Node> nodes)", "full_signature": "protected List<Node> asNodeList(Iterable<Node> nodes)", "class_method_signature": "TemplatingFunctions.asNodeList(Iterable<Node> nodes)", "testcase": false, "constructor": false}, {"identifier": "asContentMapList", "parameters": "(Iterable<Node> nodes)", "modifiers": "protected", "return": "List<ContentMap>", "signature": "List<ContentMap> asContentMapList(Iterable<Node> nodes)", "full_signature": "protected List<ContentMap> asContentMapList(Iterable<Node> nodes)", "class_method_signature": "TemplatingFunctions.asContentMapList(Iterable<Node> nodes)", "testcase": false, "constructor": false}, {"identifier": "hasProtocol", "parameters": "(String link)", "modifiers": "private", "return": "boolean", "signature": "boolean hasProtocol(String link)", "full_signature": "private boolean hasProtocol(String link)", "class_method_signature": "TemplatingFunctions.hasProtocol(String link)", "testcase": false, "constructor": false}, {"identifier": "isRoot", "parameters": "(Node content)", "modifiers": "private", "return": "boolean", "signature": "boolean isRoot(Node content)", "full_signature": "private boolean isRoot(Node content)", "class_method_signature": "TemplatingFunctions.isRoot(Node content)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(ContentMap content)", "modifiers": "public", "return": "ContentMap", "signature": "ContentMap decode(ContentMap content)", "full_signature": "public ContentMap decode(ContentMap content)", "class_method_signature": "TemplatingFunctions.decode(ContentMap content)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(Node content)", "modifiers": "public", "return": "Node", "signature": "Node decode(Node content)", "full_signature": "public Node decode(Node content)", "class_method_signature": "TemplatingFunctions.decode(Node content)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(Node content)", "modifiers": "public", "return": "Node", "signature": "Node encode(Node content)", "full_signature": "public Node encode(Node content)", "class_method_signature": "TemplatingFunctions.encode(Node content)", "testcase": false, "constructor": false}, {"identifier": "wrapForInheritance", "parameters": "(Node destination)", "modifiers": "private", "return": "Node", "signature": "Node wrapForInheritance(Node destination)", "full_signature": "private Node wrapForInheritance(Node destination)", "class_method_signature": "TemplatingFunctions.wrapForInheritance(Node destination)", "testcase": false, "constructor": false}, {"identifier": "metaData", "parameters": "(Node content, String property)", "modifiers": "public", "return": "String", "signature": "String metaData(Node content, String property)", "full_signature": "public String metaData(Node content, String property)", "class_method_signature": "TemplatingFunctions.metaData(Node content, String property)", "testcase": false, "constructor": false}, {"identifier": "metaData", "parameters": "(ContentMap content, String property)", "modifiers": "public", "return": "String", "signature": "String metaData(ContentMap content, String property)", "full_signature": "public String metaData(ContentMap content, String property)", "class_method_signature": "TemplatingFunctions.metaData(ContentMap content, String property)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(String workspace, String statement, String language, String returnItemType)", "modifiers": "public", "return": "Collection<Node>", "signature": "Collection<Node> search(String workspace, String statement, String language, String returnItemType)", "full_signature": "public Collection<Node> search(String workspace, String statement, String language, String returnItemType)", "class_method_signature": "TemplatingFunctions.search(String workspace, String statement, String language, String returnItemType)", "testcase": false, "constructor": false}, {"identifier": "simpleSearch", "parameters": "(String workspace, String statement, String returnItemType, String startPath)", "modifiers": "public", "return": "Collection<Node>", "signature": "Collection<Node> simpleSearch(String workspace, String statement, String returnItemType, String startPath)", "full_signature": "public Collection<Node> simpleSearch(String workspace, String statement, String returnItemType, String startPath)", "class_method_signature": "TemplatingFunctions.simpleSearch(String workspace, String statement, String returnItemType, String startPath)", "testcase": false, "constructor": false}], "file": "magnolia-templating/src/main/java/info/magnolia/templating/functions/TemplatingFunctions.java"}, "focal_method": {"identifier": "ancestors", "parameters": "(ContentMap contentMap)", "modifiers": "public", "return": "List<ContentMap>", "body": "public List<ContentMap> ancestors(ContentMap contentMap) throws RepositoryException {\n        return ancestors(contentMap, null);\n    }", "signature": "List<ContentMap> ancestors(ContentMap contentMap)", "full_signature": "public List<ContentMap> ancestors(ContentMap contentMap)", "class_method_signature": "TemplatingFunctions.ancestors(ContentMap contentMap)", "testcase": false, "constructor": false, "invocations": ["ancestors"]}, "repository": {"repo_id": 8731044, "url": "https://github.com/ekirkilevics/Magnolia", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 5, "size": 133884, "license": "licensed"}}