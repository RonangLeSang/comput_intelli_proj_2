{"test_class": {"identifier": "DependencyCheckerImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DependencyChecker depChecker;", "modifier": "private", "type": "DependencyChecker", "declarator": "depChecker", "var_name": "depChecker"}], "file": "magnolia-core/src/test/java/info/magnolia/module/model/reader/DependencyCheckerImplTest.java"}, "test_case": {"identifier": "testShouldFailWhenDependencyNotFound", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testShouldFailWhenDependencyNotFound() {\n        final Map modules = buildModulesMapWithDependencyOn(\"Q.W\");\n        modules.remove(\"module1\");\n        try {\n            depChecker.checkDependencies(modules);\n            fail(\"should have failed\");\n        } catch (ModuleDependencyException e) {\n            assertEquals(\"Module module2 (version 1.2.0) is dependent on module1 version Q.W, which was not found.\", e.getMessage());\n        }\n    }", "signature": "void testShouldFailWhenDependencyNotFound()", "full_signature": "@Test public void testShouldFailWhenDependencyNotFound()", "class_method_signature": "DependencyCheckerImplTest.testShouldFailWhenDependencyNotFound()", "testcase": true, "constructor": false, "invocations": ["buildModulesMapWithDependencyOn", "remove", "checkDependencies", "fail", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "DependencyCheckerImpl", "superclass": "", "interfaces": "implements DependencyChecker", "fields": [], "methods": [{"identifier": "checkDependencies", "parameters": "(Map<String, ModuleDefinition> moduleDefinitions)", "modifiers": "@Override public", "return": "void", "signature": "void checkDependencies(Map<String, ModuleDefinition> moduleDefinitions)", "full_signature": "@Override public void checkDependencies(Map<String, ModuleDefinition> moduleDefinitions)", "class_method_signature": "DependencyCheckerImpl.checkDependencies(Map<String, ModuleDefinition> moduleDefinitions)", "testcase": false, "constructor": false}, {"identifier": "sortByDependencyLevel", "parameters": "(Map<String, ModuleDefinition> moduleDefinitions)", "modifiers": "@Override public", "return": "List<ModuleDefinition>", "signature": "List<ModuleDefinition> sortByDependencyLevel(Map<String, ModuleDefinition> moduleDefinitions)", "full_signature": "@Override public List<ModuleDefinition> sortByDependencyLevel(Map<String, ModuleDefinition> moduleDefinitions)", "class_method_signature": "DependencyCheckerImpl.sortByDependencyLevel(Map<String, ModuleDefinition> moduleDefinitions)", "testcase": false, "constructor": false}, {"identifier": "checkSpecificDependency", "parameters": "(ModuleDefinition checkedModule, DependencyDefinition dependency, Map<String, ModuleDefinition> moduleDefinitions)", "modifiers": "protected", "return": "void", "signature": "void checkSpecificDependency(ModuleDefinition checkedModule, DependencyDefinition dependency, Map<String, ModuleDefinition> moduleDefinitions)", "full_signature": "protected void checkSpecificDependency(ModuleDefinition checkedModule, DependencyDefinition dependency, Map<String, ModuleDefinition> moduleDefinitions)", "class_method_signature": "DependencyCheckerImpl.checkSpecificDependency(ModuleDefinition checkedModule, DependencyDefinition dependency, Map<String, ModuleDefinition> moduleDefinitions)", "testcase": false, "constructor": false}], "file": "magnolia-core/src/main/java/info/magnolia/module/model/reader/DependencyCheckerImpl.java"}, "focal_method": {"identifier": "checkDependencies", "parameters": "(Map<String, ModuleDefinition> moduleDefinitions)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void checkDependencies(Map<String, ModuleDefinition> moduleDefinitions) throws ModuleDependencyException {\n        for (ModuleDefinition def : moduleDefinitions.values()) {\n            for (DependencyDefinition dep : def.getDependencies()) {\n                checkSpecificDependency(def, dep, moduleDefinitions);\n            }\n        }\n    }", "signature": "void checkDependencies(Map<String, ModuleDefinition> moduleDefinitions)", "full_signature": "@Override public void checkDependencies(Map<String, ModuleDefinition> moduleDefinitions)", "class_method_signature": "DependencyCheckerImpl.checkDependencies(Map<String, ModuleDefinition> moduleDefinitions)", "testcase": false, "constructor": false, "invocations": ["values", "getDependencies", "checkSpecificDependency"]}, "repository": {"repo_id": 8731044, "url": "https://github.com/ekirkilevics/Magnolia", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 5, "size": 133884, "license": "licensed"}}