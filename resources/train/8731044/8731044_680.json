{"test_class": {"identifier": "BootstrapUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final String MGNL_BOOTSTRAP_FILE = \"/mgnl-bootstrap/foo/config.server.i18n.xml\";", "modifier": "protected static final", "type": "String", "declarator": "MGNL_BOOTSTRAP_FILE = \"/mgnl-bootstrap/foo/config.server.i18n.xml\"", "var_name": "MGNL_BOOTSTRAP_FILE"}, {"original_string": "protected static final String MGNL_BOOTSTRAP_FILE_NEW_STYLE = \"/mgnl-bootstrap/foo/config.server.foo..i18n.xml\";", "modifier": "protected static final", "type": "String", "declarator": "MGNL_BOOTSTRAP_FILE_NEW_STYLE = \"/mgnl-bootstrap/foo/config.server.foo..i18n.xml\"", "var_name": "MGNL_BOOTSTRAP_FILE_NEW_STYLE"}, {"original_string": "protected static final String MGNL_BOOTSTRAP_FILE_NEW_STYLE_NO_SLASHES = \"config.server.foo..i18n.xml\";", "modifier": "protected static final", "type": "String", "declarator": "MGNL_BOOTSTRAP_FILE_NEW_STYLE_NO_SLASHES = \"config.server.foo..i18n.xml\"", "var_name": "MGNL_BOOTSTRAP_FILE_NEW_STYLE_NO_SLASHES"}], "file": "magnolia-core/src/test/java/info/magnolia/importexport/BootstrapUtilTest.java"}, "test_case": {"identifier": "testGetFullpathFromResource", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetFullpathFromResource() throws Exception {\n        String fullpath = BootstrapUtil.getFullpathFromResource(MGNL_BOOTSTRAP_FILE);\n        assertEquals(\"/server/i18n\", fullpath);\n\n        fullpath = BootstrapUtil.getFullpathFromResource(MGNL_BOOTSTRAP_FILE_NEW_STYLE);\n        assertEquals(\"/server/foo.i18n\", fullpath);\n\n        fullpath = BootstrapUtil.getFullpathFromResource(MGNL_BOOTSTRAP_FILE_NEW_STYLE_NO_SLASHES);\n        assertEquals(\"/server/foo.i18n\", fullpath);\n    }", "signature": "void testGetFullpathFromResource()", "full_signature": "@Test public void testGetFullpathFromResource()", "class_method_signature": "BootstrapUtilTest.testGetFullpathFromResource()", "testcase": true, "constructor": false, "invocations": ["getFullpathFromResource", "assertEquals", "getFullpathFromResource", "assertEquals", "getFullpathFromResource", "assertEquals"]}, "focal_class": {"identifier": "BootstrapUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(BootstrapUtil.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(BootstrapUtil.class)", "var_name": "log"}], "methods": [{"identifier": "bootstrap", "parameters": "(String[] resourceNames, int importUUIDBehavior)", "modifiers": "public static", "return": "void", "signature": "void bootstrap(String[] resourceNames, int importUUIDBehavior)", "full_signature": "public static void bootstrap(String[] resourceNames, int importUUIDBehavior)", "class_method_signature": "BootstrapUtil.bootstrap(String[] resourceNames, int importUUIDBehavior)", "testcase": false, "constructor": false}, {"identifier": "export", "parameters": "(Content content, File directory)", "modifiers": "public static", "return": "void", "signature": "void export(Content content, File directory)", "full_signature": "public static void export(Content content, File directory)", "class_method_signature": "BootstrapUtil.export(Content content, File directory)", "testcase": false, "constructor": false}, {"identifier": "getWorkspaceNameFromResource", "parameters": "(final String resourcePath)", "modifiers": "public static", "return": "String", "signature": "String getWorkspaceNameFromResource(final String resourcePath)", "full_signature": "public static String getWorkspaceNameFromResource(final String resourcePath)", "class_method_signature": "BootstrapUtil.getWorkspaceNameFromResource(final String resourcePath)", "testcase": false, "constructor": false}, {"identifier": "getFullpathFromResource", "parameters": "(final String resourcePath)", "modifiers": "public static", "return": "String", "signature": "String getFullpathFromResource(final String resourcePath)", "full_signature": "public static String getFullpathFromResource(final String resourcePath)", "class_method_signature": "BootstrapUtil.getFullpathFromResource(final String resourcePath)", "testcase": false, "constructor": false}, {"identifier": "getPathnameFromResource", "parameters": "(final String resourcePath)", "modifiers": "public static", "return": "String", "signature": "String getPathnameFromResource(final String resourcePath)", "full_signature": "public static String getPathnameFromResource(final String resourcePath)", "class_method_signature": "BootstrapUtil.getPathnameFromResource(final String resourcePath)", "testcase": false, "constructor": false}, {"identifier": "getFilenameFromResource", "parameters": "(final String resourcePath, final String extension)", "modifiers": "public static", "return": "String", "signature": "String getFilenameFromResource(final String resourcePath, final String extension)", "full_signature": "public static String getFilenameFromResource(final String resourcePath, final String extension)", "class_method_signature": "BootstrapUtil.getFilenameFromResource(final String resourcePath, final String extension)", "testcase": false, "constructor": false}], "file": "magnolia-core/src/main/java/info/magnolia/importexport/BootstrapUtil.java"}, "focal_method": {"identifier": "getFullpathFromResource", "parameters": "(final String resourcePath)", "modifiers": "public static", "return": "String", "body": "public static String getFullpathFromResource(final String resourcePath) {\n        String resourceName = StringUtils.replace(resourcePath, \"\\\\\", \"/\");\n\n        String name = getFilenameFromResource(resourceName, \".xml\");\n        String fullPath = DataTransporter.revertExportPath(name);\n        String repository = StringUtils.substringBefore(fullPath, \"/\");\n\n        return StringUtils.removeStart(fullPath, repository);\n    }", "signature": "String getFullpathFromResource(final String resourcePath)", "full_signature": "public static String getFullpathFromResource(final String resourcePath)", "class_method_signature": "BootstrapUtil.getFullpathFromResource(final String resourcePath)", "testcase": false, "constructor": false, "invocations": ["replace", "getFilenameFromResource", "revertExportPath", "substringBefore", "removeStart"]}, "repository": {"repo_id": 8731044, "url": "https://github.com/ekirkilevics/Magnolia", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 5, "size": 133884, "license": "licensed"}}