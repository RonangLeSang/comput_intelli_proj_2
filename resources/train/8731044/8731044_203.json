{"test_class": {"identifier": "SearchResultSnippetTagTest", "superclass": "", "interfaces": "", "fields": [], "file": "magnolia-templating-jsp/src/test/java/info/magnolia/templating/jsp/taglib/SearchResultSnippetTagTest.java"}, "test_case": {"identifier": "testStripHtmlNewLines", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testStripHtmlNewLines() {\n        String html = \"<div\\n class=\\\"abc\\\">uh!</div>\";\n        String text = \"uh!\";\n        String result = new SearchResultSnippetTag().stripHtmlTags(html);\n        assertEquals(text, result);\n    }", "signature": "void testStripHtmlNewLines()", "full_signature": "@Test public void testStripHtmlNewLines()", "class_method_signature": "SearchResultSnippetTagTest.testStripHtmlNewLines()", "testcase": true, "constructor": false, "invocations": ["stripHtmlTags", "assertEquals"]}, "focal_class": {"identifier": "SearchResultSnippetTag", "superclass": "extends TagSupport", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = -2788581584059109175L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -2788581584059109175L", "var_name": "serialVersionUID"}, {"original_string": "private static final Pattern HTML_STRIP = Pattern.compile(\"<.*?>\", Pattern.DOTALL);", "modifier": "private static final", "type": "Pattern", "declarator": "HTML_STRIP = Pattern.compile(\"<.*?>\", Pattern.DOTALL)", "var_name": "HTML_STRIP"}, {"original_string": "private static final Logger log = LoggerFactory.getLogger(SearchResultSnippetTag.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(SearchResultSnippetTag.class)", "var_name": "log"}, {"original_string": "private Node page;", "modifier": "private", "type": "Node", "declarator": "page", "var_name": "page"}, {"original_string": "private String query;", "modifier": "private", "type": "String", "declarator": "query", "var_name": "query"}, {"original_string": "private int chars = 100;", "modifier": "private", "type": "int", "declarator": "chars = 100", "var_name": "chars"}, {"original_string": "private int maxSnippets = 3;", "modifier": "private", "type": "int", "declarator": "maxSnippets = 3", "var_name": "maxSnippets"}], "methods": [{"identifier": "setQuery", "parameters": "(String query)", "modifiers": "public", "return": "void", "signature": "void setQuery(String query)", "full_signature": "public void setQuery(String query)", "class_method_signature": "SearchResultSnippetTag.setQuery(String query)", "testcase": false, "constructor": false}, {"identifier": "setChars", "parameters": "(int chars)", "modifiers": "public", "return": "void", "signature": "void setChars(int chars)", "full_signature": "public void setChars(int chars)", "class_method_signature": "SearchResultSnippetTag.setChars(int chars)", "testcase": false, "constructor": false}, {"identifier": "setMaxSnippets", "parameters": "(int maxSnippets)", "modifiers": "public", "return": "void", "signature": "void setMaxSnippets(int maxSnippets)", "full_signature": "public void setMaxSnippets(int maxSnippets)", "class_method_signature": "SearchResultSnippetTag.setMaxSnippets(int maxSnippets)", "testcase": false, "constructor": false}, {"identifier": "setPage", "parameters": "(Node page)", "modifiers": "public", "return": "void", "signature": "void setPage(Node page)", "full_signature": "public void setPage(Node page)", "class_method_signature": "SearchResultSnippetTag.setPage(Node page)", "testcase": false, "constructor": false}, {"identifier": "doStartTag", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int doStartTag()", "full_signature": "@Override public int doStartTag()", "class_method_signature": "SearchResultSnippetTag.doStartTag()", "testcase": false, "constructor": false}, {"identifier": "getSnippets", "parameters": "()", "modifiers": "public", "return": "Collection", "signature": "Collection getSnippets()", "full_signature": "public Collection getSnippets()", "class_method_signature": "SearchResultSnippetTag.getSnippets()", "testcase": false, "constructor": false}, {"identifier": "stripHtmlTags", "parameters": "(String input)", "modifiers": "protected", "return": "String", "signature": "String stripHtmlTags(String input)", "full_signature": "protected String stripHtmlTags(String input)", "class_method_signature": "SearchResultSnippetTag.stripHtmlTags(String input)", "testcase": false, "constructor": false}, {"identifier": "release", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void release()", "full_signature": "@Override public void release()", "class_method_signature": "SearchResultSnippetTag.release()", "testcase": false, "constructor": false}], "file": "magnolia-templating-jsp/src/main/java/info/magnolia/templating/jsp/taglib/SearchResultSnippetTag.java"}, "focal_method": {"identifier": "stripHtmlTags", "parameters": "(String input)", "modifiers": "protected", "return": "String", "body": "protected String stripHtmlTags(String input) {\n        return HTML_STRIP.matcher(input).replaceAll(\"\");\n    }", "signature": "String stripHtmlTags(String input)", "full_signature": "protected String stripHtmlTags(String input)", "class_method_signature": "SearchResultSnippetTag.stripHtmlTags(String input)", "testcase": false, "constructor": false, "invocations": ["replaceAll", "matcher"]}, "repository": {"repo_id": 8731044, "url": "https://github.com/ekirkilevics/Magnolia", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 5, "size": 133884, "license": "licensed"}}