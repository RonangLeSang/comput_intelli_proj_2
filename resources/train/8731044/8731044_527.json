{"test_class": {"identifier": "TextFileUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "magnolia-core/src/test/java/info/magnolia/cms/util/TextFileUtilTest.java"}, "test_case": {"identifier": "testGetTrimmedLinesMatchingWhenExpressionIsNotContained", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetTrimmedLinesMatchingWhenExpressionIsNotContained() {\n        final List<String> result = TextFileUtil.getTrimmedLinesMatching(\"src/test/resources/config/current-jaas.config\", \"^Jackrabbit.*\");\n        assertTrue(result.isEmpty());\n    }", "signature": "void testGetTrimmedLinesMatchingWhenExpressionIsNotContained()", "full_signature": "@Test public void testGetTrimmedLinesMatchingWhenExpressionIsNotContained()", "class_method_signature": "TextFileUtilTest.testGetTrimmedLinesMatchingWhenExpressionIsNotContained()", "testcase": true, "constructor": false, "invocations": ["getTrimmedLinesMatching", "assertTrue", "isEmpty"]}, "focal_class": {"identifier": "TextFileUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getTrimmedLinesMatching", "parameters": "(String fileName, String regExp)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getTrimmedLinesMatching(String fileName, String regExp)", "full_signature": "public static List<String> getTrimmedLinesMatching(String fileName, String regExp)", "class_method_signature": "TextFileUtil.getTrimmedLinesMatching(String fileName, String regExp)", "testcase": false, "constructor": false}, {"identifier": "getLines", "parameters": "(String fileName)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getLines(String fileName)", "full_signature": "public static List<String> getLines(String fileName)", "class_method_signature": "TextFileUtil.getLines(String fileName)", "testcase": false, "constructor": false}], "file": "magnolia-core/src/main/java/info/magnolia/cms/util/TextFileUtil.java"}, "focal_method": {"identifier": "getTrimmedLinesMatching", "parameters": "(String fileName, String regExp)", "modifiers": "public static", "return": "List<String>", "body": "public static List<String> getTrimmedLinesMatching(String fileName, String regExp) {\n        final List<String> lines = getLines(fileName);\n        final List<String> matchingLines = new ArrayList<String>();\n        String currentLine = null;\n        for (Iterator<String> iterator = lines.iterator(); iterator.hasNext();) {\n            currentLine = iterator.next().trim();\n            if (currentLine.matches(regExp)) {\n                matchingLines.add(currentLine);\n            }\n        }\n        return matchingLines;\n    }", "signature": "List<String> getTrimmedLinesMatching(String fileName, String regExp)", "full_signature": "public static List<String> getTrimmedLinesMatching(String fileName, String regExp)", "class_method_signature": "TextFileUtil.getTrimmedLinesMatching(String fileName, String regExp)", "testcase": false, "constructor": false, "invocations": ["getLines", "iterator", "hasNext", "trim", "next", "matches", "add"]}, "repository": {"repo_id": 8731044, "url": "https://github.com/ekirkilevics/Magnolia", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 5, "size": 133884, "license": "licensed"}}