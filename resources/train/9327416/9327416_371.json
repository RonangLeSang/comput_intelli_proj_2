{"test_class": {"identifier": "ContentTypeTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [], "file": "odata-core/src/test/java/com/sap/core/odata/core/commons/ContentTypeTest.java"}, "test_case": {"identifier": "testFormatParserInvalidParameterWithAllLws", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n  public void testFormatParserInvalidParameterWithAllLws() {\n    ContentType.create(\"aaa/bbb;x=\\t \\n \\ry;a\");\n  }", "signature": "void testFormatParserInvalidParameterWithAllLws()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testFormatParserInvalidParameterWithAllLws()", "class_method_signature": "ContentTypeTest.testFormatParserInvalidParameterWithAllLws()", "testcase": true, "constructor": false, "invocations": ["create"]}, "focal_class": {"identifier": "ContentType", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Set<String> KNOWN_MIME_TYPES = new HashSet<String>();", "modifier": "private static final", "type": "Set<String>", "declarator": "KNOWN_MIME_TYPES = new HashSet<String>()", "var_name": "KNOWN_MIME_TYPES"}, {"original_string": "private static final char WHITESPACE_CHAR = ' ';", "modifier": "private static final", "type": "char", "declarator": "WHITESPACE_CHAR = ' '", "var_name": "WHITESPACE_CHAR"}, {"original_string": "private static final String PARAMETER_SEPARATOR = \";\";", "modifier": "private static final", "type": "String", "declarator": "PARAMETER_SEPARATOR = \";\"", "var_name": "PARAMETER_SEPARATOR"}, {"original_string": "private static final String TYPE_SUBTYPE_SEPARATOR = \"/\";", "modifier": "private static final", "type": "String", "declarator": "TYPE_SUBTYPE_SEPARATOR = \"/\"", "var_name": "TYPE_SUBTYPE_SEPARATOR"}, {"original_string": "private static final String MEDIA_TYPE_WILDCARD = \"*\";", "modifier": "private static final", "type": "String", "declarator": "MEDIA_TYPE_WILDCARD = \"*\"", "var_name": "MEDIA_TYPE_WILDCARD"}, {"original_string": "private static final String VERBOSE = \"verbose\";", "modifier": "private static final", "type": "String", "declarator": "VERBOSE = \"verbose\"", "var_name": "VERBOSE"}, {"original_string": "public static final String PARAMETER_CHARSET = \"charset\";", "modifier": "public static final", "type": "String", "declarator": "PARAMETER_CHARSET = \"charset\"", "var_name": "PARAMETER_CHARSET"}, {"original_string": "public static final String PARAMETER_ODATA = \"odata\";", "modifier": "public static final", "type": "String", "declarator": "PARAMETER_ODATA = \"odata\"", "var_name": "PARAMETER_ODATA"}, {"original_string": "public static final String PARAMETER_Q = \"q\";", "modifier": "public static final", "type": "String", "declarator": "PARAMETER_Q = \"q\"", "var_name": "PARAMETER_Q"}, {"original_string": "public static final String CHARSET_UTF_8 = \"utf-8\";", "modifier": "public static final", "type": "String", "declarator": "CHARSET_UTF_8 = \"utf-8\"", "var_name": "CHARSET_UTF_8"}, {"original_string": "public static final ContentType WILDCARD = new ContentType(MEDIA_TYPE_WILDCARD, MEDIA_TYPE_WILDCARD);", "modifier": "public static final", "type": "ContentType", "declarator": "WILDCARD = new ContentType(MEDIA_TYPE_WILDCARD, MEDIA_TYPE_WILDCARD)", "var_name": "WILDCARD"}, {"original_string": "public static final ContentType APPLICATION_XML = new ContentType(\"application\", \"xml\", ODataFormat.XML);", "modifier": "public static final", "type": "ContentType", "declarator": "APPLICATION_XML = new ContentType(\"application\", \"xml\", ODataFormat.XML)", "var_name": "APPLICATION_XML"}, {"original_string": "public static final ContentType APPLICATION_XML_CS_UTF_8 = ContentType.create(APPLICATION_XML, PARAMETER_CHARSET, CHARSET_UTF_8);", "modifier": "public static final", "type": "ContentType", "declarator": "APPLICATION_XML_CS_UTF_8 = ContentType.create(APPLICATION_XML, PARAMETER_CHARSET, CHARSET_UTF_8)", "var_name": "APPLICATION_XML_CS_UTF_8"}, {"original_string": "public static final ContentType APPLICATION_ATOM_XML = new ContentType(\"application\", \"atom+xml\", ODataFormat.ATOM);", "modifier": "public static final", "type": "ContentType", "declarator": "APPLICATION_ATOM_XML = new ContentType(\"application\", \"atom+xml\", ODataFormat.ATOM)", "var_name": "APPLICATION_ATOM_XML"}, {"original_string": "public static final ContentType APPLICATION_ATOM_XML_CS_UTF_8 = ContentType.create(APPLICATION_ATOM_XML, PARAMETER_CHARSET, CHARSET_UTF_8);", "modifier": "public static final", "type": "ContentType", "declarator": "APPLICATION_ATOM_XML_CS_UTF_8 = ContentType.create(APPLICATION_ATOM_XML, PARAMETER_CHARSET, CHARSET_UTF_8)", "var_name": "APPLICATION_ATOM_XML_CS_UTF_8"}, {"original_string": "public static final ContentType APPLICATION_ATOM_XML_ENTRY = new ContentType(\"application\", \"atom+xml\", ODataFormat.ATOM, parameterMap(\"type\", \"entry\"));", "modifier": "public static final", "type": "ContentType", "declarator": "APPLICATION_ATOM_XML_ENTRY = new ContentType(\"application\", \"atom+xml\", ODataFormat.ATOM, parameterMap(\"type\", \"entry\"))", "var_name": "APPLICATION_ATOM_XML_ENTRY"}, {"original_string": "public static final ContentType APPLICATION_ATOM_XML_ENTRY_CS_UTF_8 = ContentType.create(APPLICATION_ATOM_XML_ENTRY, PARAMETER_CHARSET, CHARSET_UTF_8);", "modifier": "public static final", "type": "ContentType", "declarator": "APPLICATION_ATOM_XML_ENTRY_CS_UTF_8 = ContentType.create(APPLICATION_ATOM_XML_ENTRY, PARAMETER_CHARSET, CHARSET_UTF_8)", "var_name": "APPLICATION_ATOM_XML_ENTRY_CS_UTF_8"}, {"original_string": "public static final ContentType APPLICATION_ATOM_XML_FEED = new ContentType(\"application\", \"atom+xml\", ODataFormat.ATOM, parameterMap(\"type\", \"feed\"));", "modifier": "public static final", "type": "ContentType", "declarator": "APPLICATION_ATOM_XML_FEED = new ContentType(\"application\", \"atom+xml\", ODataFormat.ATOM, parameterMap(\"type\", \"feed\"))", "var_name": "APPLICATION_ATOM_XML_FEED"}, {"original_string": "public static final ContentType APPLICATION_ATOM_XML_FEED_CS_UTF_8 = ContentType.create(APPLICATION_ATOM_XML_FEED, PARAMETER_CHARSET, CHARSET_UTF_8);", "modifier": "public static final", "type": "ContentType", "declarator": "APPLICATION_ATOM_XML_FEED_CS_UTF_8 = ContentType.create(APPLICATION_ATOM_XML_FEED, PARAMETER_CHARSET, CHARSET_UTF_8)", "var_name": "APPLICATION_ATOM_XML_FEED_CS_UTF_8"}, {"original_string": "public static final ContentType APPLICATION_ATOM_SVC = new ContentType(\"application\", \"atomsvc+xml\", ODataFormat.ATOM);", "modifier": "public static final", "type": "ContentType", "declarator": "APPLICATION_ATOM_SVC = new ContentType(\"application\", \"atomsvc+xml\", ODataFormat.ATOM)", "var_name": "APPLICATION_ATOM_SVC"}, {"original_string": "public static final ContentType APPLICATION_ATOM_SVC_CS_UTF_8 = ContentType.create(APPLICATION_ATOM_SVC, PARAMETER_CHARSET, CHARSET_UTF_8);", "modifier": "public static final", "type": "ContentType", "declarator": "APPLICATION_ATOM_SVC_CS_UTF_8 = ContentType.create(APPLICATION_ATOM_SVC, PARAMETER_CHARSET, CHARSET_UTF_8)", "var_name": "APPLICATION_ATOM_SVC_CS_UTF_8"}, {"original_string": "public static final ContentType APPLICATION_JSON = new ContentType(\"application\", \"json\", ODataFormat.JSON);", "modifier": "public static final", "type": "ContentType", "declarator": "APPLICATION_JSON = new ContentType(\"application\", \"json\", ODataFormat.JSON)", "var_name": "APPLICATION_JSON"}, {"original_string": "public static final ContentType APPLICATION_JSON_ODATA_VERBOSE = ContentType.create(APPLICATION_JSON, PARAMETER_ODATA, VERBOSE);", "modifier": "public static final", "type": "ContentType", "declarator": "APPLICATION_JSON_ODATA_VERBOSE = ContentType.create(APPLICATION_JSON, PARAMETER_ODATA, VERBOSE)", "var_name": "APPLICATION_JSON_ODATA_VERBOSE"}, {"original_string": "public static final ContentType APPLICATION_JSON_CS_UTF_8 = ContentType.create(APPLICATION_JSON, PARAMETER_CHARSET, CHARSET_UTF_8);", "modifier": "public static final", "type": "ContentType", "declarator": "APPLICATION_JSON_CS_UTF_8 = ContentType.create(APPLICATION_JSON, PARAMETER_CHARSET, CHARSET_UTF_8)", "var_name": "APPLICATION_JSON_CS_UTF_8"}, {"original_string": "public static final ContentType APPLICATION_OCTET_STREAM = new ContentType(\"application\", \"octet-stream\");", "modifier": "public static final", "type": "ContentType", "declarator": "APPLICATION_OCTET_STREAM = new ContentType(\"application\", \"octet-stream\")", "var_name": "APPLICATION_OCTET_STREAM"}, {"original_string": "public static final ContentType TEXT_PLAIN = new ContentType(\"text\", \"plain\");", "modifier": "public static final", "type": "ContentType", "declarator": "TEXT_PLAIN = new ContentType(\"text\", \"plain\")", "var_name": "TEXT_PLAIN"}, {"original_string": "public static final ContentType TEXT_PLAIN_CS_UTF_8 = ContentType.create(TEXT_PLAIN, PARAMETER_CHARSET, CHARSET_UTF_8);", "modifier": "public static final", "type": "ContentType", "declarator": "TEXT_PLAIN_CS_UTF_8 = ContentType.create(TEXT_PLAIN, PARAMETER_CHARSET, CHARSET_UTF_8)", "var_name": "TEXT_PLAIN_CS_UTF_8"}, {"original_string": "public static final ContentType MULTIPART_MIXED = new ContentType(\"multipart\", \"mixed\");", "modifier": "public static final", "type": "ContentType", "declarator": "MULTIPART_MIXED = new ContentType(\"multipart\", \"mixed\")", "var_name": "MULTIPART_MIXED"}, {"original_string": "private String type;", "modifier": "private", "type": "String", "declarator": "type", "var_name": "type"}, {"original_string": "private String subtype;", "modifier": "private", "type": "String", "declarator": "subtype", "var_name": "subtype"}, {"original_string": "private Map<String, String> parameters;", "modifier": "private", "type": "Map<String, String>", "declarator": "parameters", "var_name": "parameters"}, {"original_string": "private ODataFormat odataFormat;", "modifier": "private", "type": "ODataFormat", "declarator": "odataFormat", "var_name": "odataFormat"}], "methods": [{"identifier": "ContentType", "parameters": "(final String type, final String subtype)", "modifiers": "private", "return": "", "signature": " ContentType(final String type, final String subtype)", "full_signature": "private  ContentType(final String type, final String subtype)", "class_method_signature": "ContentType.ContentType(final String type, final String subtype)", "testcase": false, "constructor": true}, {"identifier": "ContentType", "parameters": "(final String type, final String subtype, final ODataFormat odataFormat)", "modifiers": "private", "return": "", "signature": " ContentType(final String type, final String subtype, final ODataFormat odataFormat)", "full_signature": "private  ContentType(final String type, final String subtype, final ODataFormat odataFormat)", "class_method_signature": "ContentType.ContentType(final String type, final String subtype, final ODataFormat odataFormat)", "testcase": false, "constructor": true}, {"identifier": "ContentType", "parameters": "(final String type, final String subtype, final ODataFormat odataFormat, final Map<String, String> parameters)", "modifiers": "private", "return": "", "signature": " ContentType(final String type, final String subtype, final ODataFormat odataFormat, final Map<String, String> parameters)", "full_signature": "private  ContentType(final String type, final String subtype, final ODataFormat odataFormat, final Map<String, String> parameters)", "class_method_signature": "ContentType.ContentType(final String type, final String subtype, final ODataFormat odataFormat, final Map<String, String> parameters)", "testcase": false, "constructor": true}, {"identifier": "validateType", "parameters": "(final String type)", "modifiers": "private", "return": "String", "signature": "String validateType(final String type)", "full_signature": "private String validateType(final String type)", "class_method_signature": "ContentType.validateType(final String type)", "testcase": false, "constructor": false}, {"identifier": "isParseable", "parameters": "(final String format)", "modifiers": "public static", "return": "boolean", "signature": "boolean isParseable(final String format)", "full_signature": "public static boolean isParseable(final String format)", "class_method_signature": "ContentType.isParseable(final String format)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(final String type, final String subtype)", "modifiers": "public static", "return": "ContentType", "signature": "ContentType create(final String type, final String subtype)", "full_signature": "public static ContentType create(final String type, final String subtype)", "class_method_signature": "ContentType.create(final String type, final String subtype)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(final String type, final String subtype, final Map<String, String> parameters)", "modifiers": "public static", "return": "ContentType", "signature": "ContentType create(final String type, final String subtype, final Map<String, String> parameters)", "full_signature": "public static ContentType create(final String type, final String subtype, final Map<String, String> parameters)", "class_method_signature": "ContentType.create(final String type, final String subtype, final Map<String, String> parameters)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(final ContentType contentType, final String parameterKey, final String parameterValue)", "modifiers": "public static", "return": "ContentType", "signature": "ContentType create(final ContentType contentType, final String parameterKey, final String parameterValue)", "full_signature": "public static ContentType create(final ContentType contentType, final String parameterKey, final String parameterValue)", "class_method_signature": "ContentType.create(final ContentType contentType, final String parameterKey, final String parameterValue)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(final String format)", "modifiers": "public static", "return": "ContentType", "signature": "ContentType create(final String format)", "full_signature": "public static ContentType create(final String format)", "class_method_signature": "ContentType.create(final String format)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(final List<String> contentTypeStrings)", "modifiers": "public static", "return": "List<ContentType>", "signature": "List<ContentType> create(final List<String> contentTypeStrings)", "full_signature": "public static List<ContentType> create(final List<String> contentTypeStrings)", "class_method_signature": "ContentType.create(final List<String> contentTypeStrings)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(final String format)", "modifiers": "public static", "return": "ContentType", "signature": "ContentType parse(final String format)", "full_signature": "public static ContentType parse(final String format)", "class_method_signature": "ContentType.parse(final String format)", "testcase": false, "constructor": false}, {"identifier": "mapToODataFormat", "parameters": "(final String type, final String subtype)", "modifiers": "private static", "return": "ODataFormat", "signature": "ODataFormat mapToODataFormat(final String type, final String subtype)", "full_signature": "private static ODataFormat mapToODataFormat(final String type, final String subtype)", "class_method_signature": "ContentType.mapToODataFormat(final String type, final String subtype)", "testcase": false, "constructor": false}, {"identifier": "parameterMap", "parameters": "(final String... content)", "modifiers": "private static", "return": "Map<String, String>", "signature": "Map<String, String> parameterMap(final String... content)", "full_signature": "private static Map<String, String> parameterMap(final String... content)", "class_method_signature": "ContentType.parameterMap(final String... content)", "testcase": false, "constructor": false}, {"identifier": "parseParameters", "parameters": "(final String parameters)", "modifiers": "private static", "return": "Map<String, String>", "signature": "Map<String, String> parseParameters(final String parameters)", "full_signature": "private static Map<String, String> parseParameters(final String parameters)", "class_method_signature": "ContentType.parseParameters(final String parameters)", "testcase": false, "constructor": false}, {"identifier": "isLws", "parameters": "(final char character)", "modifiers": "private static", "return": "boolean", "signature": "boolean isLws(final char character)", "full_signature": "private static boolean isLws(final char character)", "class_method_signature": "ContentType.isLws(final char character)", "testcase": false, "constructor": false}, {"identifier": "isParameterAllowed", "parameters": "(final String key)", "modifiers": "private static", "return": "boolean", "signature": "boolean isParameterAllowed(final String key)", "full_signature": "private static boolean isParameterAllowed(final String key)", "class_method_signature": "ContentType.isParameterAllowed(final String key)", "testcase": false, "constructor": false}, {"identifier": "receiveWithCharsetParameter", "parameters": "(final String defaultCharset)", "modifiers": "public", "return": "ContentType", "signature": "ContentType receiveWithCharsetParameter(final String defaultCharset)", "full_signature": "public ContentType receiveWithCharsetParameter(final String defaultCharset)", "class_method_signature": "ContentType.receiveWithCharsetParameter(final String defaultCharset)", "testcase": false, "constructor": false}, {"identifier": "isContentTypeODataTextRelated", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isContentTypeODataTextRelated()", "full_signature": "public boolean isContentTypeODataTextRelated()", "class_method_signature": "ContentType.isContentTypeODataTextRelated()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getType()", "full_signature": "public String getType()", "class_method_signature": "ContentType.getType()", "testcase": false, "constructor": false}, {"identifier": "getSubtype", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSubtype()", "full_signature": "public String getSubtype()", "class_method_signature": "ContentType.getSubtype()", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getParameters()", "full_signature": "public Map<String, String> getParameters()", "class_method_signature": "ContentType.getParameters()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ContentType.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "ContentType.equals(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "isCompatible", "parameters": "(final ContentType obj)", "modifiers": "public", "return": "boolean", "signature": "boolean isCompatible(final ContentType obj)", "full_signature": "public boolean isCompatible(final ContentType obj)", "class_method_signature": "ContentType.isCompatible(final ContentType obj)", "testcase": false, "constructor": false}, {"identifier": "isEqualWithoutParameters", "parameters": "(final Object obj)", "modifiers": "private", "return": "Boolean", "signature": "Boolean isEqualWithoutParameters(final Object obj)", "full_signature": "private Boolean isEqualWithoutParameters(final Object obj)", "class_method_signature": "ContentType.isEqualWithoutParameters(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "areEqual", "parameters": "(final String first, final String second)", "modifiers": "private static", "return": "boolean", "signature": "boolean areEqual(final String first, final String second)", "full_signature": "private static boolean areEqual(final String first, final String second)", "class_method_signature": "ContentType.areEqual(final String first, final String second)", "testcase": false, "constructor": false}, {"identifier": "toContentTypeString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toContentTypeString()", "full_signature": "public String toContentTypeString()", "class_method_signature": "ContentType.toContentTypeString()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ContentType.toString()", "testcase": false, "constructor": false}, {"identifier": "getODataFormat", "parameters": "()", "modifiers": "public", "return": "ODataFormat", "signature": "ODataFormat getODataFormat()", "full_signature": "public ODataFormat getODataFormat()", "class_method_signature": "ContentType.getODataFormat()", "testcase": false, "constructor": false}, {"identifier": "match", "parameters": "(final List<ContentType> toMatchContentTypes)", "modifiers": "public", "return": "ContentType", "signature": "ContentType match(final List<ContentType> toMatchContentTypes)", "full_signature": "public ContentType match(final List<ContentType> toMatchContentTypes)", "class_method_signature": "ContentType.match(final List<ContentType> toMatchContentTypes)", "testcase": false, "constructor": false}, {"identifier": "matchCompatible", "parameters": "(final List<ContentType> toMatchContentTypes)", "modifiers": "public", "return": "ContentType", "signature": "ContentType matchCompatible(final List<ContentType> toMatchContentTypes)", "full_signature": "public ContentType matchCompatible(final List<ContentType> toMatchContentTypes)", "class_method_signature": "ContentType.matchCompatible(final List<ContentType> toMatchContentTypes)", "testcase": false, "constructor": false}, {"identifier": "hasCompatible", "parameters": "(final List<ContentType> toMatchContentTypes)", "modifiers": "public", "return": "boolean", "signature": "boolean hasCompatible(final List<ContentType> toMatchContentTypes)", "full_signature": "public boolean hasCompatible(final List<ContentType> toMatchContentTypes)", "class_method_signature": "ContentType.hasCompatible(final List<ContentType> toMatchContentTypes)", "testcase": false, "constructor": false}, {"identifier": "hasMatch", "parameters": "(final List<ContentType> toMatchContentTypes)", "modifiers": "public", "return": "boolean", "signature": "boolean hasMatch(final List<ContentType> toMatchContentTypes)", "full_signature": "public boolean hasMatch(final List<ContentType> toMatchContentTypes)", "class_method_signature": "ContentType.hasMatch(final List<ContentType> toMatchContentTypes)", "testcase": false, "constructor": false}, {"identifier": "compareWildcardCounts", "parameters": "(final ContentType otherContentType)", "modifiers": "public", "return": "int", "signature": "int compareWildcardCounts(final ContentType otherContentType)", "full_signature": "public int compareWildcardCounts(final ContentType otherContentType)", "class_method_signature": "ContentType.compareWildcardCounts(final ContentType otherContentType)", "testcase": false, "constructor": false}, {"identifier": "countWildcards", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int countWildcards()", "full_signature": "private int countWildcards()", "class_method_signature": "ContentType.countWildcards()", "testcase": false, "constructor": false}, {"identifier": "hasWildcard", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasWildcard()", "full_signature": "public boolean hasWildcard()", "class_method_signature": "ContentType.hasWildcard()", "testcase": false, "constructor": false}, {"identifier": "isWildcard", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isWildcard()", "full_signature": "public boolean isWildcard()", "class_method_signature": "ContentType.isWildcard()", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(final List<String> types)", "modifiers": "public static", "return": "List<ContentType>", "signature": "List<ContentType> convert(final List<String> types)", "full_signature": "public static List<ContentType> convert(final List<String> types)", "class_method_signature": "ContentType.convert(final List<String> types)", "testcase": false, "constructor": false}, {"identifier": "match", "parameters": "(final String toMatch, final ContentType... matchExamples)", "modifiers": "public static", "return": "boolean", "signature": "boolean match(final String toMatch, final ContentType... matchExamples)", "full_signature": "public static boolean match(final String toMatch, final ContentType... matchExamples)", "class_method_signature": "ContentType.match(final String toMatch, final ContentType... matchExamples)", "testcase": false, "constructor": false}], "file": "odata-core/src/main/java/com/sap/core/odata/core/commons/ContentType.java"}, "focal_method": {"identifier": "create", "parameters": "(final String type, final String subtype)", "modifiers": "public static", "return": "ContentType", "body": "public static ContentType create(final String type, final String subtype) {\n    return new ContentType(type, subtype, mapToODataFormat(type, subtype), null);\n  }", "signature": "ContentType create(final String type, final String subtype)", "full_signature": "public static ContentType create(final String type, final String subtype)", "class_method_signature": "ContentType.create(final String type, final String subtype)", "testcase": false, "constructor": false, "invocations": ["mapToODataFormat"]}, "repository": {"repo_id": 9327416, "url": "https://github.com/SAP/cloud-odata-java", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 45, "size": 20455, "license": "licensed"}}