{"test_class": {"identifier": "JsonServiceDocumentProducerTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [], "file": "odata-core/src/test/java/com/sap/core/odata/core/ep/producer/JsonServiceDocumentProducerTest.java"}, "test_case": {"identifier": "serviceDocumentEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void serviceDocumentEmpty() throws Exception {\n    Edm edm = mock(Edm.class);\n    EdmServiceMetadata metadata = mock(EdmServiceMetadata.class);\n    when(edm.getServiceMetadata()).thenReturn(metadata);\n    final ODataResponse response = new JsonEntityProvider().writeServiceDocument(edm, \"http://host:80/service/\");\n    assertNotNull(response);\n    assertNotNull(response.getEntity());\n    assertEquals(HttpContentType.APPLICATION_JSON, response.getContentHeader());\n    assertEquals(ODataServiceVersion.V10, response.getHeader(ODataHttpHeaders.DATASERVICEVERSION));\n\n    final String json = StringHelper.inputStreamToString((InputStream) response.getEntity());\n    assertNotNull(json);\n    assertEquals(\"{\\\"d\\\":{\\\"EntitySets\\\":[]}}\", json);\n  }", "signature": "void serviceDocumentEmpty()", "full_signature": "@Test public void serviceDocumentEmpty()", "class_method_signature": "JsonServiceDocumentProducerTest.serviceDocumentEmpty()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "getServiceMetadata", "writeServiceDocument", "assertNotNull", "assertNotNull", "getEntity", "assertEquals", "getContentHeader", "assertEquals", "getHeader", "inputStreamToString", "getEntity", "assertNotNull", "assertEquals"]}, "focal_class": {"identifier": "JsonServiceDocumentProducer", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "writeServiceDocument", "parameters": "(final Writer writer, final Edm edm)", "modifiers": "public static", "return": "void", "signature": "void writeServiceDocument(final Writer writer, final Edm edm)", "full_signature": "public static void writeServiceDocument(final Writer writer, final Edm edm)", "class_method_signature": "JsonServiceDocumentProducer.writeServiceDocument(final Writer writer, final Edm edm)", "testcase": false, "constructor": false}], "file": "odata-core/src/main/java/com/sap/core/odata/core/ep/producer/JsonServiceDocumentProducer.java"}, "focal_method": {"identifier": "writeServiceDocument", "parameters": "(final Writer writer, final Edm edm)", "modifiers": "public static", "return": "void", "body": "public static void writeServiceDocument(final Writer writer, final Edm edm) throws EntityProviderException {\n    final EdmServiceMetadata serviceMetadata = edm.getServiceMetadata();\n\n    JsonStreamWriter jsonStreamWriter = new JsonStreamWriter(writer);\n    try {\n      jsonStreamWriter.beginObject()\n          .name(FormatJson.D)\n          .beginObject()\n          .name(FormatJson.ENTITY_SETS)\n          .beginArray();\n\n      boolean first = true;\n      for (EdmEntitySetInfo info : serviceMetadata.getEntitySetInfos()) {\n        if (first) {\n          first = false;\n        } else {\n          jsonStreamWriter.separator();\n        }\n        jsonStreamWriter.stringValue(info.getEntitySetUri().toASCIIString());\n      }\n\n      jsonStreamWriter.endArray()\n          .endObject()\n          .endObject();\n    } catch (final IOException e) {\n      throw new EntityProviderException(EntityProviderException.EXCEPTION_OCCURRED.addContent(e.getClass().getSimpleName()), e);\n    } catch (final ODataException e) {\n      throw new EntityProviderException(EntityProviderException.EXCEPTION_OCCURRED.addContent(e.getClass().getSimpleName()), e);\n    }\n\n  }", "signature": "void writeServiceDocument(final Writer writer, final Edm edm)", "full_signature": "public static void writeServiceDocument(final Writer writer, final Edm edm)", "class_method_signature": "JsonServiceDocumentProducer.writeServiceDocument(final Writer writer, final Edm edm)", "testcase": false, "constructor": false, "invocations": ["getServiceMetadata", "beginArray", "name", "beginObject", "name", "beginObject", "getEntitySetInfos", "separator", "stringValue", "toASCIIString", "getEntitySetUri", "endObject", "endObject", "endArray", "addContent", "getSimpleName", "getClass", "addContent", "getSimpleName", "getClass"]}, "repository": {"repo_id": 9327416, "url": "https://github.com/SAP/cloud-odata-java", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 45, "size": 20455, "license": "licensed"}}