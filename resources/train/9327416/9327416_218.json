{"test_class": {"identifier": "ODataExceptionMapperImplTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [{"original_string": "ODataExceptionMapperImpl exceptionMapper;", "modifier": "", "type": "ODataExceptionMapperImpl", "declarator": "exceptionMapper", "var_name": "exceptionMapper"}, {"original_string": "URI uri;", "modifier": "", "type": "URI", "declarator": "uri", "var_name": "uri"}], "file": "odata-core/src/test/java/com/sap/core/odata/core/rest/ODataExceptionMapperImplTest.java"}, "test_case": {"identifier": "testODataException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testODataException() throws Exception {\n    // prepare\n    String exceptionMessage = \"Some odd exception\";\n    Exception exception = new ODataException(exceptionMessage);\n\n    // execute\n    Response response = exceptionMapper.toResponse(exception);\n\n    // verify\n    verifyResponse(response, exceptionMessage, HttpStatusCodes.INTERNAL_SERVER_ERROR);\n  }", "signature": "void testODataException()", "full_signature": "@Test public void testODataException()", "class_method_signature": "ODataExceptionMapperImplTest.testODataException()", "testcase": true, "constructor": false, "invocations": ["toResponse", "verifyResponse"]}, "focal_class": {"identifier": "ODataExceptionMapperImpl", "superclass": "", "interfaces": "implements ExceptionMapper<Exception>", "fields": [{"original_string": "private static final String DOLLAR_FORMAT = \"$format\";", "modifier": "private static final", "type": "String", "declarator": "DOLLAR_FORMAT = \"$format\"", "var_name": "DOLLAR_FORMAT"}, {"original_string": "private static final String DOLLAR_FORMAT_JSON = \"json\";", "modifier": "private static final", "type": "String", "declarator": "DOLLAR_FORMAT_JSON = \"json\"", "var_name": "DOLLAR_FORMAT_JSON"}, {"original_string": "private static final Locale DEFAULT_RESPONSE_LOCALE = Locale.ENGLISH;", "modifier": "private static final", "type": "Locale", "declarator": "DEFAULT_RESPONSE_LOCALE = Locale.ENGLISH", "var_name": "DEFAULT_RESPONSE_LOCALE"}, {"original_string": "@Context\n  UriInfo uriInfo;", "modifier": "@Context", "type": "UriInfo", "declarator": "uriInfo", "var_name": "uriInfo"}, {"original_string": "@Context\n  HttpHeaders httpHeaders;", "modifier": "@Context", "type": "HttpHeaders", "declarator": "httpHeaders", "var_name": "httpHeaders"}, {"original_string": "@Context\n  ServletConfig servletConfig;", "modifier": "@Context", "type": "ServletConfig", "declarator": "servletConfig", "var_name": "servletConfig"}, {"original_string": "@Context\n  HttpServletRequest servletRequest;", "modifier": "@Context", "type": "HttpServletRequest", "declarator": "servletRequest", "var_name": "servletRequest"}], "methods": [{"identifier": "toResponse", "parameters": "(final Exception exception)", "modifiers": "@Override public", "return": "Response", "signature": "Response toResponse(final Exception exception)", "full_signature": "@Override public Response toResponse(final Exception exception)", "class_method_signature": "ODataExceptionMapperImpl.toResponse(final Exception exception)", "testcase": false, "constructor": false}, {"identifier": "handleException", "parameters": "(final Exception exception)", "modifiers": "private", "return": "ODataResponse", "signature": "ODataResponse handleException(final Exception exception)", "full_signature": "private ODataResponse handleException(final Exception exception)", "class_method_signature": "ODataExceptionMapperImpl.handleException(final Exception exception)", "testcase": false, "constructor": false}, {"identifier": "handleWebApplicationException", "parameters": "(final Exception exception)", "modifiers": "private", "return": "ODataResponse", "signature": "ODataResponse handleWebApplicationException(final Exception exception)", "full_signature": "private ODataResponse handleWebApplicationException(final Exception exception)", "class_method_signature": "ODataExceptionMapperImpl.handleWebApplicationException(final Exception exception)", "testcase": false, "constructor": false}, {"identifier": "executeErrorCallback", "parameters": "(final ODataErrorContext errorContext, final ODataErrorCallback callback)", "modifiers": "private", "return": "ODataResponse", "signature": "ODataResponse executeErrorCallback(final ODataErrorContext errorContext, final ODataErrorCallback callback)", "full_signature": "private ODataResponse executeErrorCallback(final ODataErrorContext errorContext, final ODataErrorCallback callback)", "class_method_signature": "ODataExceptionMapperImpl.executeErrorCallback(final ODataErrorContext errorContext, final ODataErrorCallback callback)", "testcase": false, "constructor": false}, {"identifier": "createErrorContext", "parameters": "(final WebApplicationException exception)", "modifiers": "private", "return": "ODataErrorContext", "signature": "ODataErrorContext createErrorContext(final WebApplicationException exception)", "full_signature": "private ODataErrorContext createErrorContext(final WebApplicationException exception)", "class_method_signature": "ODataExceptionMapperImpl.createErrorContext(final WebApplicationException exception)", "testcase": false, "constructor": false}, {"identifier": "getContentType", "parameters": "()", "modifiers": "private", "return": "ContentType", "signature": "ContentType getContentType()", "full_signature": "private ContentType getContentType()", "class_method_signature": "ODataExceptionMapperImpl.getContentType()", "testcase": false, "constructor": false}, {"identifier": "getContentTypeByUriInfo", "parameters": "()", "modifiers": "private", "return": "ContentType", "signature": "ContentType getContentTypeByUriInfo()", "full_signature": "private ContentType getContentTypeByUriInfo()", "class_method_signature": "ODataExceptionMapperImpl.getContentTypeByUriInfo()", "testcase": false, "constructor": false}, {"identifier": "getContentTypeByAcceptHeader", "parameters": "()", "modifiers": "private", "return": "ContentType", "signature": "ContentType getContentTypeByAcceptHeader()", "full_signature": "private ContentType getContentTypeByAcceptHeader()", "class_method_signature": "ODataExceptionMapperImpl.getContentTypeByAcceptHeader()", "testcase": false, "constructor": false}, {"identifier": "getErrorHandlerCallback", "parameters": "()", "modifiers": "private", "return": "ODataErrorCallback", "signature": "ODataErrorCallback getErrorHandlerCallback()", "full_signature": "private ODataErrorCallback getErrorHandlerCallback()", "class_method_signature": "ODataExceptionMapperImpl.getErrorHandlerCallback()", "testcase": false, "constructor": false}], "file": "odata-core/src/main/java/com/sap/core/odata/core/rest/ODataExceptionMapperImpl.java"}, "focal_method": {"identifier": "toResponse", "parameters": "(final Exception exception)", "modifiers": "@Override public", "return": "Response", "body": "@Override\n  public Response toResponse(final Exception exception) {\n    ODataResponse response;\n    try {\n      if (exception instanceof WebApplicationException) {\n        response = handleWebApplicationException(exception);\n      } else {\n        response = handleException(exception);\n      }\n    } catch (Exception e) {\n      response = ODataResponse.entity(\"Exception during error handling occured!\")\n          .contentHeader(ContentType.TEXT_PLAIN.toContentTypeString())\n          .status(HttpStatusCodes.INTERNAL_SERVER_ERROR).build();\n    }\n    // Convert OData response to JAX-RS response.\n    return RestUtil.convertResponse(response);\n  }", "signature": "Response toResponse(final Exception exception)", "full_signature": "@Override public Response toResponse(final Exception exception)", "class_method_signature": "ODataExceptionMapperImpl.toResponse(final Exception exception)", "testcase": false, "constructor": false, "invocations": ["handleWebApplicationException", "handleException", "build", "status", "contentHeader", "entity", "toContentTypeString", "convertResponse"]}, "repository": {"repo_id": 9327416, "url": "https://github.com/SAP/cloud-odata-java", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 45, "size": 20455, "license": "licensed"}}