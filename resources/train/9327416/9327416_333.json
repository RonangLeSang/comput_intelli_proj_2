{"test_class": {"identifier": "EdmParserTest", "superclass": "extends AbstractXmlProducerTestHelper", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_VALUE = \"Photo\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_VALUE = \"Photo\"", "var_name": "DEFAULT_VALUE"}, {"original_string": "private static final String FC_TARGET_PATH = \"\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\";", "modifier": "private static final", "type": "String", "declarator": "FC_TARGET_PATH = \"\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\";", "var_name": "FC_TARGET_PATH"}, {"original_string": "private static final String FC_NS_URI = \"http://localhost\";", "modifier": "private static final", "type": "String", "declarator": "FC_NS_URI = \"http://localhost\"", "var_name": "FC_NS_URI"}, {"original_string": "private static final String FC_NS_PREFIX = \"\u0440\u0443\";", "modifier": "private static final", "type": "String", "declarator": "FC_NS_PREFIX = \"\u0440\u0443\";", "var_name": "FC_NS_PREFIX"}, {"original_string": "private static final Boolean FC_KEEP_IN_CONTENT = Boolean.FALSE;", "modifier": "private static final", "type": "Boolean", "declarator": "FC_KEEP_IN_CONTENT = Boolean.FALSE", "var_name": "FC_KEEP_IN_CONTENT"}, {"original_string": "private static final String NAMESPACE = \"RefScenario\";", "modifier": "private static final", "type": "String", "declarator": "NAMESPACE = \"RefScenario\"", "var_name": "NAMESPACE"}, {"original_string": "private static final String NAMESPACE2 = \"RefScenario2\";", "modifier": "private static final", "type": "String", "declarator": "NAMESPACE2 = \"RefScenario2\"", "var_name": "NAMESPACE2"}, {"original_string": "private static final String MIME_TYPE = \"image/jpeg\";", "modifier": "private static final", "type": "String", "declarator": "MIME_TYPE = \"image/jpeg\"", "var_name": "MIME_TYPE"}, {"original_string": "private static final String ASSOCIATION = \"ManagerEmployees\";", "modifier": "private static final", "type": "String", "declarator": "ASSOCIATION = \"ManagerEmployees\"", "var_name": "ASSOCIATION"}, {"original_string": "private static final int MAX_LENGTH = 4;", "modifier": "private static final", "type": "int", "declarator": "MAX_LENGTH = 4", "var_name": "MAX_LENGTH"}, {"original_string": "private final String[] propertyNames = { \"EmployeeId\", \"EmployeeName\", \"Location\" };", "modifier": "private final", "type": "String[]", "declarator": "propertyNames = { \"EmployeeId\", \"EmployeeName\", \"Location\" }", "var_name": "propertyNames"}, {"original_string": "private final String xml = \"<edmx:Edmx Version=\\\"1.0\\\" xmlns:edmx=\\\"\" + Edm.NAMESPACE_EDMX_2007_06 + \"\\\">\" + \"<edmx:DataServices m:DataServiceVersion=\\\"2.0\\\" xmlns:m=\\\"\" + Edm.NAMESPACE_M_2007_08 + \"\\\">\" + \"<Schema Namespace=\\\"\" + NAMESPACE + \"\\\" xmlns=\\\"\" + Edm.NAMESPACE_EDM_2008_09 + \"\\\">\" + \"<EntityType Name= \\\"Employee\\\" m:HasStream=\\\"true\\\">\" + \"<Key><PropertyRef Name=\\\"EmployeeId\\\"/></Key>\" + \"<Property Name=\\\"\" + propertyNames[0] + \"\\\" Type=\\\"Edm.String\\\" Nullable=\\\"false\\\"/>\" + \"<Property Name=\\\"\" + propertyNames[1] + \"\\\" Type=\\\"Edm.String\\\" m:FC_TargetPath=\\\"SyndicationTitle\\\"/>\" + \"<Property Name=\\\"\" + propertyNames[2] + \"\\\" Type=\\\"RefScenario.c_Location\\\" Nullable=\\\"false\\\"/>\" + \"</EntityType>\" + \"<ComplexType Name=\\\"c_Location\\\">\" + \"<Property Name=\\\"Country\\\" Type=\\\"Edm.String\\\"/>\" + \"</ComplexType>\" + \"</Schema>\" + \"</edmx:DataServices>\" + \"</edmx:Edmx>\";", "modifier": "private final", "type": "String", "declarator": "xml = \"<edmx:Edmx Version=\\\"1.0\\\" xmlns:edmx=\\\"\" + Edm.NAMESPACE_EDMX_2007_06 + \"\\\">\" + \"<edmx:DataServices m:DataServiceVersion=\\\"2.0\\\" xmlns:m=\\\"\" + Edm.NAMESPACE_M_2007_08 + \"\\\">\" + \"<Schema Namespace=\\\"\" + NAMESPACE + \"\\\" xmlns=\\\"\" + Edm.NAMESPACE_EDM_2008_09 + \"\\\">\" + \"<EntityType Name= \\\"Employee\\\" m:HasStream=\\\"true\\\">\" + \"<Key><PropertyRef Name=\\\"EmployeeId\\\"/></Key>\" + \"<Property Name=\\\"\" + propertyNames[0] + \"\\\" Type=\\\"Edm.String\\\" Nullable=\\\"false\\\"/>\" + \"<Property Name=\\\"\" + propertyNames[1] + \"\\\" Type=\\\"Edm.String\\\" m:FC_TargetPath=\\\"SyndicationTitle\\\"/>\" + \"<Property Name=\\\"\" + propertyNames[2] + \"\\\" Type=\\\"RefScenario.c_Location\\\" Nullable=\\\"false\\\"/>\" + \"</EntityType>\" + \"<ComplexType Name=\\\"c_Location\\\">\" + \"<Property Name=\\\"Country\\\" Type=\\\"Edm.String\\\"/>\" + \"</ComplexType>\" + \"</Schema>\" + \"</edmx:DataServices>\" + \"</edmx:Edmx>\"", "var_name": "xml"}, {"original_string": "private final String xmlWithBaseType = \"<edmx:Edmx Version=\\\"1.0\\\" xmlns:edmx=\\\"\" + Edm.NAMESPACE_EDMX_2007_06 + \"\\\">\" + \"<edmx:DataServices m:DataServiceVersion=\\\"2.0\\\" xmlns:m=\\\"\" + Edm.NAMESPACE_M_2007_08 + \"\\\">\" + \"<Schema Namespace=\\\"\" + NAMESPACE + \"\\\" xmlns=\\\"\" + Edm.NAMESPACE_EDM_2008_09 + \"\\\">\" + \"<EntityType Name= \\\"Employee\\\">\" + \"<Key><PropertyRef Name=\\\"EmployeeId\\\"/></Key>\" + \"<Property Name=\\\"\" + propertyNames[0] + \"\\\" Type=\\\"Edm.String\\\" Nullable=\\\"false\\\"/>\" + \"<Property Name=\\\"\" + propertyNames[1] + \"\\\" Type=\\\"Edm.String\\\" m:FC_TargetPath=\\\"SyndicationTitle\\\"/>\" + \"<Property Name=\\\"\" + propertyNames[2] + \"\\\" Type=\\\"RefScenario.c_Location\\\" Nullable=\\\"false\\\"/>\" + \"</EntityType>\" + \"<EntityType Name=\\\"Manager\\\" BaseType=\\\"RefScenario.Employee\\\" m:HasStream=\\\"true\\\">\" + \"</EntityType>\" + \"<ComplexType Name=\\\"c_Location\\\">\" + \"<Property Name=\\\"Country\\\" Type=\\\"Edm.String\\\"/>\" + \"</ComplexType>\" + \"</Schema>\" + \"</edmx:DataServices>\" + \"</edmx:Edmx>\";", "modifier": "private final", "type": "String", "declarator": "xmlWithBaseType = \"<edmx:Edmx Version=\\\"1.0\\\" xmlns:edmx=\\\"\" + Edm.NAMESPACE_EDMX_2007_06 + \"\\\">\" + \"<edmx:DataServices m:DataServiceVersion=\\\"2.0\\\" xmlns:m=\\\"\" + Edm.NAMESPACE_M_2007_08 + \"\\\">\" + \"<Schema Namespace=\\\"\" + NAMESPACE + \"\\\" xmlns=\\\"\" + Edm.NAMESPACE_EDM_2008_09 + \"\\\">\" + \"<EntityType Name= \\\"Employee\\\">\" + \"<Key><PropertyRef Name=\\\"EmployeeId\\\"/></Key>\" + \"<Property Name=\\\"\" + propertyNames[0] + \"\\\" Type=\\\"Edm.String\\\" Nullable=\\\"false\\\"/>\" + \"<Property Name=\\\"\" + propertyNames[1] + \"\\\" Type=\\\"Edm.String\\\" m:FC_TargetPath=\\\"SyndicationTitle\\\"/>\" + \"<Property Name=\\\"\" + propertyNames[2] + \"\\\" Type=\\\"RefScenario.c_Location\\\" Nullable=\\\"false\\\"/>\" + \"</EntityType>\" + \"<EntityType Name=\\\"Manager\\\" BaseType=\\\"RefScenario.Employee\\\" m:HasStream=\\\"true\\\">\" + \"</EntityType>\" + \"<ComplexType Name=\\\"c_Location\\\">\" + \"<Property Name=\\\"Country\\\" Type=\\\"Edm.String\\\"/>\" + \"</ComplexType>\" + \"</Schema>\" + \"</edmx:DataServices>\" + \"</edmx:Edmx>\"", "var_name": "xmlWithBaseType"}, {"original_string": "private final String xmlWithAssociation = \"<edmx:Edmx Version=\\\"1.0\\\" xmlns:edmx=\\\"\" + Edm.NAMESPACE_EDMX_2007_06 + \"\\\">\" + \"<edmx:DataServices m:DataServiceVersion=\\\"2.0\\\" xmlns:m=\\\"\" + Edm.NAMESPACE_M_2007_08 + \"\\\">\" + \"<Schema Namespace=\\\"\" + NAMESPACE + \"\\\" xmlns=\\\"\" + Edm.NAMESPACE_EDM_2008_09 + \"\\\">\" + \"<EntityType Name= \\\"Employee\\\">\" + \"<Key><PropertyRef Name=\\\"EmployeeId\\\"/></Key>\" + \"<Property Name=\\\"\" + propertyNames[0] + \"\\\" Type=\\\"Edm.String\\\" Nullable=\\\"false\\\"/>\" + \"<NavigationProperty Name=\\\"ne_Manager\\\" Relationship=\\\"RefScenario.ManagerEmployees\\\" FromRole=\\\"r_Employees\\\" ToRole=\\\"r_Manager\\\" />\" + \"</EntityType>\" + \"<EntityType Name=\\\"Manager\\\" BaseType=\\\"RefScenario.Employee\\\" m:HasStream=\\\"true\\\">\" + \"<NavigationProperty Name=\\\"nm_Employees\\\" Relationship=\\\"RefScenario.ManagerEmployees\\\" FromRole=\\\"r_Manager\\\" ToRole=\\\"r_Employees\\\" />\" + \"</EntityType>\" + \"<Association Name=\\\"\" + ASSOCIATION + \"\\\">\"\n      + \"<End Type=\\\"RefScenario.Employee\\\" Multiplicity=\\\"*\\\" Role=\\\"r_Employees\\\">\" + \"<OnDelete Action=\\\"Cascade\\\"/>\" + \"</End>\" + \"<End Type=\\\"RefScenario.Manager\\\" Multiplicity=\\\"1\\\" Role=\\\"r_Manager\\\"/>\" + \"</Association>\" + \"</Schema>\" + \"<Schema Namespace=\\\"\" + NAMESPACE2 + \"\\\" xmlns=\\\"\" + Edm.NAMESPACE_EDM_2008_09 + \"\\\">\" + \"<EntityContainer Name=\\\"Container1\\\" m:IsDefaultEntityContainer=\\\"true\\\">\" + \"<EntitySet Name=\\\"Employees\\\" EntityType=\\\"RefScenario.Employee\\\"/>\" + \"<EntitySet Name=\\\"Managers\\\" EntityType=\\\"RefScenario.Manager\\\"/>\" + \"<AssociationSet Name=\\\"\" + ASSOCIATION + \"\\\" Association=\\\"RefScenario.\" + ASSOCIATION + \"\\\">\" + \"<End EntitySet=\\\"Managers\\\" Role=\\\"r_Manager\\\"/>\" + \"<End EntitySet=\\\"Employees\\\" Role=\\\"r_Employees\\\"/>\" + \"</AssociationSet>\" + \"</EntityContainer>\" + \"</Schema>\" + \"</edmx:DataServices>\" + \"</edmx:Edmx>\";", "modifier": "private final", "type": "String", "declarator": "xmlWithAssociation = \"<edmx:Edmx Version=\\\"1.0\\\" xmlns:edmx=\\\"\" + Edm.NAMESPACE_EDMX_2007_06 + \"\\\">\" + \"<edmx:DataServices m:DataServiceVersion=\\\"2.0\\\" xmlns:m=\\\"\" + Edm.NAMESPACE_M_2007_08 + \"\\\">\" + \"<Schema Namespace=\\\"\" + NAMESPACE + \"\\\" xmlns=\\\"\" + Edm.NAMESPACE_EDM_2008_09 + \"\\\">\" + \"<EntityType Name= \\\"Employee\\\">\" + \"<Key><PropertyRef Name=\\\"EmployeeId\\\"/></Key>\" + \"<Property Name=\\\"\" + propertyNames[0] + \"\\\" Type=\\\"Edm.String\\\" Nullable=\\\"false\\\"/>\" + \"<NavigationProperty Name=\\\"ne_Manager\\\" Relationship=\\\"RefScenario.ManagerEmployees\\\" FromRole=\\\"r_Employees\\\" ToRole=\\\"r_Manager\\\" />\" + \"</EntityType>\" + \"<EntityType Name=\\\"Manager\\\" BaseType=\\\"RefScenario.Employee\\\" m:HasStream=\\\"true\\\">\" + \"<NavigationProperty Name=\\\"nm_Employees\\\" Relationship=\\\"RefScenario.ManagerEmployees\\\" FromRole=\\\"r_Manager\\\" ToRole=\\\"r_Employees\\\" />\" + \"</EntityType>\" + \"<Association Name=\\\"\" + ASSOCIATION + \"\\\">\"\n      + \"<End Type=\\\"RefScenario.Employee\\\" Multiplicity=\\\"*\\\" Role=\\\"r_Employees\\\">\" + \"<OnDelete Action=\\\"Cascade\\\"/>\" + \"</End>\" + \"<End Type=\\\"RefScenario.Manager\\\" Multiplicity=\\\"1\\\" Role=\\\"r_Manager\\\"/>\" + \"</Association>\" + \"</Schema>\" + \"<Schema Namespace=\\\"\" + NAMESPACE2 + \"\\\" xmlns=\\\"\" + Edm.NAMESPACE_EDM_2008_09 + \"\\\">\" + \"<EntityContainer Name=\\\"Container1\\\" m:IsDefaultEntityContainer=\\\"true\\\">\" + \"<EntitySet Name=\\\"Employees\\\" EntityType=\\\"RefScenario.Employee\\\"/>\" + \"<EntitySet Name=\\\"Managers\\\" EntityType=\\\"RefScenario.Manager\\\"/>\" + \"<AssociationSet Name=\\\"\" + ASSOCIATION + \"\\\" Association=\\\"RefScenario.\" + ASSOCIATION + \"\\\">\" + \"<End EntitySet=\\\"Managers\\\" Role=\\\"r_Manager\\\"/>\" + \"<End EntitySet=\\\"Employees\\\" Role=\\\"r_Employees\\\"/>\" + \"</AssociationSet>\" + \"</EntityContainer>\" + \"</Schema>\" + \"</edmx:DataServices>\" + \"</edmx:Edmx>\"", "var_name": "xmlWithAssociation"}, {"original_string": "private final String xmlWithTwoSchemas = \"<edmx:Edmx Version=\\\"1.0\\\" xmlns:edmx=\\\"\" + Edm.NAMESPACE_EDMX_2007_06 + \"\\\">\" + \"<edmx:DataServices m:DataServiceVersion=\\\"2.0\\\" xmlns:m=\\\"\" + Edm.NAMESPACE_M_2007_08 + \"\\\">\" + \"<Schema Namespace=\\\"\" + NAMESPACE + \"\\\" xmlns=\\\"\" + Edm.NAMESPACE_EDM_2008_09 + \"\\\">\" + \"<EntityType Name= \\\"Employee\\\">\" + \"<Key><PropertyRef Name=\\\"EmployeeId\\\"/></Key>\" + \"<Property Name=\\\"\" + propertyNames[0] + \"\\\" Type=\\\"Edm.String\\\" Nullable=\\\"false\\\"/>\" + \"<Property Name=\\\"\" + propertyNames[1] + \"\\\" Type=\\\"Edm.String\\\"/>\" + \"</EntityType>\" + \"</Schema>\" + \"<Schema Namespace=\\\"\" + NAMESPACE2 + \"\\\" xmlns=\\\"\" + Edm.NAMESPACE_EDM_2008_09 + \"\\\">\" + \"<EntityType Name= \\\"Photo\\\">\" + \"<Key><PropertyRef Name=\\\"Id\\\"/></Key>\" + \"<Property Name=\\\"Id\\\" Type=\\\"Edm.Int32\\\" Nullable=\\\"false\\\" ConcurrencyMode=\\\"Fixed\\\" MaxLength=\\\"\" + MAX_LENGTH + \"\\\"/>\" + \"<Property Name=\\\"Name\\\" Type=\\\"Edm.String\\\" Unicode=\\\"true\\\" DefaultValue=\\\"\" + DEFAULT_VALUE\n      + \"\\\" FixedLength=\\\"false\\\"/>\" + \"<Property Name=\\\"BinaryData\\\" Type=\\\"Edm.Binary\\\" m:MimeType=\\\"\" + MIME_TYPE + \"\\\"/>\" + \"<Property Name=\\\"\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\\\" Type=\\\"Edm.String\\\" m:FC_TargetPath=\\\"\" + FC_TARGET_PATH + \"\\\" m:FC_NsUri=\\\"\" + FC_NS_URI + \"\\\"\" + \" m:FC_NsPrefix=\\\"\" + FC_NS_PREFIX + \"\\\" m:FC_KeepInContent=\\\"\" + FC_KEEP_IN_CONTENT + \"\\\" m:FC_ContentKind=\\\"text\\\" >\" + \"</Property>\" + \"</EntityType>\" + \"</Schema>\" + \"</edmx:DataServices>\" + \"</edmx:Edmx>\";", "modifier": "private final", "type": "String", "declarator": "xmlWithTwoSchemas = \"<edmx:Edmx Version=\\\"1.0\\\" xmlns:edmx=\\\"\" + Edm.NAMESPACE_EDMX_2007_06 + \"\\\">\" + \"<edmx:DataServices m:DataServiceVersion=\\\"2.0\\\" xmlns:m=\\\"\" + Edm.NAMESPACE_M_2007_08 + \"\\\">\" + \"<Schema Namespace=\\\"\" + NAMESPACE + \"\\\" xmlns=\\\"\" + Edm.NAMESPACE_EDM_2008_09 + \"\\\">\" + \"<EntityType Name= \\\"Employee\\\">\" + \"<Key><PropertyRef Name=\\\"EmployeeId\\\"/></Key>\" + \"<Property Name=\\\"\" + propertyNames[0] + \"\\\" Type=\\\"Edm.String\\\" Nullable=\\\"false\\\"/>\" + \"<Property Name=\\\"\" + propertyNames[1] + \"\\\" Type=\\\"Edm.String\\\"/>\" + \"</EntityType>\" + \"</Schema>\" + \"<Schema Namespace=\\\"\" + NAMESPACE2 + \"\\\" xmlns=\\\"\" + Edm.NAMESPACE_EDM_2008_09 + \"\\\">\" + \"<EntityType Name= \\\"Photo\\\">\" + \"<Key><PropertyRef Name=\\\"Id\\\"/></Key>\" + \"<Property Name=\\\"Id\\\" Type=\\\"Edm.Int32\\\" Nullable=\\\"false\\\" ConcurrencyMode=\\\"Fixed\\\" MaxLength=\\\"\" + MAX_LENGTH + \"\\\"/>\" + \"<Property Name=\\\"Name\\\" Type=\\\"Edm.String\\\" Unicode=\\\"true\\\" DefaultValue=\\\"\" + DEFAULT_VALUE\n      + \"\\\" FixedLength=\\\"false\\\"/>\" + \"<Property Name=\\\"BinaryData\\\" Type=\\\"Edm.Binary\\\" m:MimeType=\\\"\" + MIME_TYPE + \"\\\"/>\" + \"<Property Name=\\\"\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\\\" Type=\\\"Edm.String\\\" m:FC_TargetPath=\\\"\" + FC_TARGET_PATH + \"\\\" m:FC_NsUri=\\\"\" + FC_NS_URI + \"\\\"\" + \" m:FC_NsPrefix=\\\"\" + FC_NS_PREFIX + \"\\\" m:FC_KeepInContent=\\\"\" + FC_KEEP_IN_CONTENT + \"\\\" m:FC_ContentKind=\\\"text\\\" >\" + \"</Property>\" + \"</EntityType>\" + \"</Schema>\" + \"</edmx:DataServices>\" + \"</edmx:Edmx>\";", "var_name": "xmlWithTwoSchemas"}], "file": "odata-core/src/test/java/com/sap/core/odata/core/edm/parser/EdmParserTest.java"}, "test_case": {"identifier": "testInvalidRelationship", "parameters": "()", "modifiers": "@Test(expected = EntityProviderException.class) public", "return": "void", "body": "@Test(expected = EntityProviderException.class)\n  public void testInvalidRelationship() throws XMLStreamException, EntityProviderException {\n    final String xmlWithInvalidAssociation = \"<edmx:Edmx Version=\\\"1.0\\\" xmlns:edmx=\\\"\" + Edm.NAMESPACE_EDMX_2007_06 + \"\\\">\" + \"<edmx:DataServices m:DataServiceVersion=\\\"2.0\\\" xmlns:m=\\\"\" + Edm.NAMESPACE_M_2007_08 + \"\\\">\" + \"<Schema Namespace=\\\"\" + NAMESPACE + \"\\\" xmlns=\\\"\" + Edm.NAMESPACE_EDM_2008_09 + \"\\\">\" + \"<EntityType Name= \\\"Employee\\\">\" + \"<Key><PropertyRef Name=\\\"EmployeeId\\\"/></Key>\" + \"<Property Name=\\\"\" + propertyNames[0] + \"\\\" Type=\\\"Edm.String\\\" Nullable=\\\"false\\\"/>\" + \"<NavigationProperty Name=\\\"ne_Manager\\\" Relationship=\\\"RefScenario.ManagerEmployee\\\" FromRole=\\\"r_Employees\\\" ToRole=\\\"r_Manager\\\" />\" + \"</EntityType>\" + \"<EntityType Name=\\\"Manager\\\" BaseType=\\\"RefScenario.Employee\\\" m:HasStream=\\\"true\\\">\" + \"</EntityType>\" + \"<Association Name=\\\"ManagerEmployees\\\">\" + \"<End Type=\\\"RefScenario.Employee\\\" Multiplicity=\\\"*\\\" Role=\\\"r_Employees\\\"/>\" + \"<End Type=\\\"RefScenario.Manager\\\" Multiplicity=\\\"1\\\" Role=\\\"r_Manager\\\"/>\" + \"</Association>\" + \"</Schema>\"\n        + \"</edmx:DataServices>\" + \"</edmx:Edmx>\";\n    EdmParser parser = new EdmParser();\n    XMLStreamReader reader = createStreamReader(xmlWithInvalidAssociation);\n    parser.readMetadata(reader, true);\n  }", "signature": "void testInvalidRelationship()", "full_signature": "@Test(expected = EntityProviderException.class) public void testInvalidRelationship()", "class_method_signature": "EdmParserTest.testInvalidRelationship()", "testcase": true, "constructor": false, "invocations": ["createStreamReader", "readMetadata"]}, "focal_class": {"identifier": "EdmParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Map<String, Set<String>> inscopeMap = new HashMap<String, Set<String>>();", "modifier": "private", "type": "Map<String, Set<String>>", "declarator": "inscopeMap = new HashMap<String, Set<String>>()", "var_name": "inscopeMap"}, {"original_string": "private Map<String, String> aliasNamespaceMap = new HashMap<String, String>();", "modifier": "private", "type": "Map<String, String>", "declarator": "aliasNamespaceMap = new HashMap<String, String>()", "var_name": "aliasNamespaceMap"}, {"original_string": "private Map<String, String> xmlNamespaceMap;", "modifier": "private", "type": "Map<String, String>", "declarator": "xmlNamespaceMap", "var_name": "xmlNamespaceMap"}, {"original_string": "private Map<String, String> mandatoryNamespaces;", "modifier": "private", "type": "Map<String, String>", "declarator": "mandatoryNamespaces", "var_name": "mandatoryNamespaces"}, {"original_string": "private Map<FullQualifiedName, EntityType> entityTypesMap = new HashMap<FullQualifiedName, EntityType>();", "modifier": "private", "type": "Map<FullQualifiedName, EntityType>", "declarator": "entityTypesMap = new HashMap<FullQualifiedName, EntityType>()", "var_name": "entityTypesMap"}, {"original_string": "private Map<FullQualifiedName, ComplexType> complexTypesMap = new HashMap<FullQualifiedName, ComplexType>();", "modifier": "private", "type": "Map<FullQualifiedName, ComplexType>", "declarator": "complexTypesMap = new HashMap<FullQualifiedName, ComplexType>()", "var_name": "complexTypesMap"}, {"original_string": "private Map<FullQualifiedName, Association> associationsMap = new HashMap<FullQualifiedName, Association>();", "modifier": "private", "type": "Map<FullQualifiedName, Association>", "declarator": "associationsMap = new HashMap<FullQualifiedName, Association>()", "var_name": "associationsMap"}, {"original_string": "private Map<FullQualifiedName, EntityContainer> containerMap = new HashMap<FullQualifiedName, EntityContainer>();", "modifier": "private", "type": "Map<FullQualifiedName, EntityContainer>", "declarator": "containerMap = new HashMap<FullQualifiedName, EntityContainer>()", "var_name": "containerMap"}, {"original_string": "private List<NavigationProperty> navProperties = new ArrayList<NavigationProperty>();", "modifier": "private", "type": "List<NavigationProperty>", "declarator": "navProperties = new ArrayList<NavigationProperty>()", "var_name": "navProperties"}, {"original_string": "private String currentHandledStartTagName;", "modifier": "private", "type": "String", "declarator": "currentHandledStartTagName", "var_name": "currentHandledStartTagName"}, {"original_string": "private String currentNamespace;", "modifier": "private", "type": "String", "declarator": "currentNamespace", "var_name": "currentNamespace"}], "methods": [{"identifier": "readMetadata", "parameters": "(final XMLStreamReader reader, final boolean validate)", "modifiers": "public", "return": "DataServices", "signature": "DataServices readMetadata(final XMLStreamReader reader, final boolean validate)", "full_signature": "public DataServices readMetadata(final XMLStreamReader reader, final boolean validate)", "class_method_signature": "EdmParser.readMetadata(final XMLStreamReader reader, final boolean validate)", "testcase": false, "constructor": false}, {"identifier": "readSchema", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "Schema", "signature": "Schema readSchema(final XMLStreamReader reader)", "full_signature": "private Schema readSchema(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readSchema(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readUsing", "parameters": "(final XMLStreamReader reader, final String schemaNamespace)", "modifiers": "private", "return": "Using", "signature": "Using readUsing(final XMLStreamReader reader, final String schemaNamespace)", "full_signature": "private Using readUsing(final XMLStreamReader reader, final String schemaNamespace)", "class_method_signature": "EdmParser.readUsing(final XMLStreamReader reader, final String schemaNamespace)", "testcase": false, "constructor": false}, {"identifier": "readEntityContainer", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "EntityContainer", "signature": "EntityContainer readEntityContainer(final XMLStreamReader reader)", "full_signature": "private EntityContainer readEntityContainer(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readEntityContainer(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readFunctionImport", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "FunctionImport", "signature": "FunctionImport readFunctionImport(final XMLStreamReader reader)", "full_signature": "private FunctionImport readFunctionImport(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readFunctionImport(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readFunctionImportParameter", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "FunctionImportParameter", "signature": "FunctionImportParameter readFunctionImportParameter(final XMLStreamReader reader)", "full_signature": "private FunctionImportParameter readFunctionImportParameter(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readFunctionImportParameter(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readAssociationSet", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "AssociationSet", "signature": "AssociationSet readAssociationSet(final XMLStreamReader reader)", "full_signature": "private AssociationSet readAssociationSet(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readAssociationSet(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readEntitySet", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "EntitySet", "signature": "EntitySet readEntitySet(final XMLStreamReader reader)", "full_signature": "private EntitySet readEntitySet(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readEntitySet(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readAssociation", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "Association", "signature": "Association readAssociation(final XMLStreamReader reader)", "full_signature": "private Association readAssociation(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readAssociation(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readReferentialConstraint", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "ReferentialConstraint", "signature": "ReferentialConstraint readReferentialConstraint(final XMLStreamReader reader)", "full_signature": "private ReferentialConstraint readReferentialConstraint(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readReferentialConstraint(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readReferentialConstraintRole", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "ReferentialConstraintRole", "signature": "ReferentialConstraintRole readReferentialConstraintRole(final XMLStreamReader reader)", "full_signature": "private ReferentialConstraintRole readReferentialConstraintRole(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readReferentialConstraintRole(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readComplexType", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "ComplexType", "signature": "ComplexType readComplexType(final XMLStreamReader reader)", "full_signature": "private ComplexType readComplexType(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readComplexType(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readEntityType", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "EntityType", "signature": "EntityType readEntityType(final XMLStreamReader reader)", "full_signature": "private EntityType readEntityType(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readEntityType(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readEntityTypeKey", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "Key", "signature": "Key readEntityTypeKey(final XMLStreamReader reader)", "full_signature": "private Key readEntityTypeKey(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readEntityTypeKey(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readPropertyRef", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "PropertyRef", "signature": "PropertyRef readPropertyRef(final XMLStreamReader reader)", "full_signature": "private PropertyRef readPropertyRef(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readPropertyRef(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readNavigationProperty", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "NavigationProperty", "signature": "NavigationProperty readNavigationProperty(final XMLStreamReader reader)", "full_signature": "private NavigationProperty readNavigationProperty(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readNavigationProperty(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readProperty", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "Property", "signature": "Property readProperty(final XMLStreamReader reader)", "full_signature": "private Property readProperty(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readProperty(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readComplexProperty", "parameters": "(final XMLStreamReader reader, final FullQualifiedName fqName)", "modifiers": "private", "return": "Property", "signature": "Property readComplexProperty(final XMLStreamReader reader, final FullQualifiedName fqName)", "full_signature": "private Property readComplexProperty(final XMLStreamReader reader, final FullQualifiedName fqName)", "class_method_signature": "EdmParser.readComplexProperty(final XMLStreamReader reader, final FullQualifiedName fqName)", "testcase": false, "constructor": false}, {"identifier": "readSimpleProperty", "parameters": "(final XMLStreamReader reader, final FullQualifiedName fqName)", "modifiers": "private", "return": "Property", "signature": "Property readSimpleProperty(final XMLStreamReader reader, final FullQualifiedName fqName)", "full_signature": "private Property readSimpleProperty(final XMLStreamReader reader, final FullQualifiedName fqName)", "class_method_signature": "EdmParser.readSimpleProperty(final XMLStreamReader reader, final FullQualifiedName fqName)", "testcase": false, "constructor": false}, {"identifier": "readFacets", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "Facets", "signature": "Facets readFacets(final XMLStreamReader reader)", "full_signature": "private Facets readFacets(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readFacets(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readCustomizableFeedMappings", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "CustomizableFeedMappings", "signature": "CustomizableFeedMappings readCustomizableFeedMappings(final XMLStreamReader reader)", "full_signature": "private CustomizableFeedMappings readCustomizableFeedMappings(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readCustomizableFeedMappings(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readAssociationEnd", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "AssociationEnd", "signature": "AssociationEnd readAssociationEnd(final XMLStreamReader reader)", "full_signature": "private AssociationEnd readAssociationEnd(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readAssociationEnd(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readAnnotationElement", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "AnnotationElement", "signature": "AnnotationElement readAnnotationElement(final XMLStreamReader reader)", "full_signature": "private AnnotationElement readAnnotationElement(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readAnnotationElement(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readAnnotationAttribute", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "List<AnnotationAttribute>", "signature": "List<AnnotationAttribute> readAnnotationAttribute(final XMLStreamReader reader)", "full_signature": "private List<AnnotationAttribute> readAnnotationAttribute(final XMLStreamReader reader)", "class_method_signature": "EdmParser.readAnnotationAttribute(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "isDefaultNamespace", "parameters": "(final String namespace)", "modifiers": "private", "return": "boolean", "signature": "boolean isDefaultNamespace(final String namespace)", "full_signature": "private boolean isDefaultNamespace(final String namespace)", "class_method_signature": "EdmParser.isDefaultNamespace(final String namespace)", "testcase": false, "constructor": false}, {"identifier": "checkAllMandatoryNamespacesAvailable", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkAllMandatoryNamespacesAvailable()", "full_signature": "private void checkAllMandatoryNamespacesAvailable()", "class_method_signature": "EdmParser.checkAllMandatoryNamespacesAvailable()", "testcase": false, "constructor": false}, {"identifier": "extractNamespaces", "parameters": "(final XMLStreamReader reader)", "modifiers": "private", "return": "void", "signature": "void extractNamespaces(final XMLStreamReader reader)", "full_signature": "private void extractNamespaces(final XMLStreamReader reader)", "class_method_signature": "EdmParser.extractNamespaces(final XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "extractFQName", "parameters": "(final String name)", "modifiers": "private", "return": "FullQualifiedName", "signature": "FullQualifiedName extractFQName(final String name)", "full_signature": "private FullQualifiedName extractFQName(final String name)", "class_method_signature": "EdmParser.extractFQName(final String name)", "testcase": false, "constructor": false}, {"identifier": "validateEntityTypeWithAlias", "parameters": "(final FullQualifiedName aliasName)", "modifiers": "private", "return": "FullQualifiedName", "signature": "FullQualifiedName validateEntityTypeWithAlias(final FullQualifiedName aliasName)", "full_signature": "private FullQualifiedName validateEntityTypeWithAlias(final FullQualifiedName aliasName)", "class_method_signature": "EdmParser.validateEntityTypeWithAlias(final FullQualifiedName aliasName)", "testcase": false, "constructor": false}, {"identifier": "validateEntityTypes", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void validateEntityTypes()", "full_signature": "private void validateEntityTypes()", "class_method_signature": "EdmParser.validateEntityTypes()", "testcase": false, "constructor": false}, {"identifier": "validateComplexTypeWithAlias", "parameters": "(final FullQualifiedName aliasName)", "modifiers": "private", "return": "FullQualifiedName", "signature": "FullQualifiedName validateComplexTypeWithAlias(final FullQualifiedName aliasName)", "full_signature": "private FullQualifiedName validateComplexTypeWithAlias(final FullQualifiedName aliasName)", "class_method_signature": "EdmParser.validateComplexTypeWithAlias(final FullQualifiedName aliasName)", "testcase": false, "constructor": false}, {"identifier": "validateComplexTypes", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void validateComplexTypes()", "full_signature": "private void validateComplexTypes()", "class_method_signature": "EdmParser.validateComplexTypes()", "testcase": false, "constructor": false}, {"identifier": "validateRelationship", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void validateRelationship()", "full_signature": "private void validateRelationship()", "class_method_signature": "EdmParser.validateRelationship()", "testcase": false, "constructor": false}, {"identifier": "validateAssociation", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void validateAssociation()", "full_signature": "private void validateAssociation()", "class_method_signature": "EdmParser.validateAssociation()", "testcase": false, "constructor": false}, {"identifier": "validateAssociationEnd", "parameters": "(final AssociationSetEnd end, final Association association)", "modifiers": "private", "return": "void", "signature": "void validateAssociationEnd(final AssociationSetEnd end, final Association association)", "full_signature": "private void validateAssociationEnd(final AssociationSetEnd end, final Association association)", "class_method_signature": "EdmParser.validateAssociationEnd(final AssociationSetEnd end, final Association association)", "testcase": false, "constructor": false}, {"identifier": "validateEntitySet", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void validateEntitySet()", "full_signature": "private void validateEntitySet()", "class_method_signature": "EdmParser.validateEntitySet()", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void validate()", "full_signature": "private void validate()", "class_method_signature": "EdmParser.validate()", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initialize()", "full_signature": "private void initialize()", "class_method_signature": "EdmParser.initialize()", "testcase": false, "constructor": false}], "file": "odata-core/src/main/java/com/sap/core/odata/core/edm/parser/EdmParser.java"}, "focal_method": {"identifier": "readMetadata", "parameters": "(final XMLStreamReader reader, final boolean validate)", "modifiers": "public", "return": "DataServices", "body": "public DataServices readMetadata(final XMLStreamReader reader, final boolean validate)\n      throws EntityProviderException {\n    try {\n      initialize();\n      DataServices dataServices = new DataServices();\n      List<Schema> schemas = new ArrayList<Schema>();\n\n      while (reader.hasNext()\n          && !(reader.isEndElement() && Edm.NAMESPACE_EDMX_2007_06.equals(reader.getNamespaceURI()) && EdmParserConstants.EDM_DATA_SERVICES.equals(reader.getLocalName()))) {\n        reader.next();\n        if (reader.isStartElement()) {\n          extractNamespaces(reader);\n          if (EdmParserConstants.EDM_SCHEMA.equals(reader.getLocalName())) {\n            schemas.add(readSchema(reader));\n          } else if (EdmParserConstants.EDM_DATA_SERVICES.equals(reader\n              .getLocalName())) {\n            dataServices.setDataServiceVersion(reader.getAttributeValue(Edm.NAMESPACE_M_2007_08, \"DataServiceVersion\"));\n          }\n        }\n      }\n      if (validate) {\n        validate();\n      }\n      dataServices.setSchemas(schemas);\n      reader.close();\n      return dataServices;\n    } catch (XMLStreamException e) {\n      throw new EntityProviderException(EntityProviderException.EXCEPTION_OCCURRED.addContent(e.getClass().getSimpleName()), e);\n    }\n\n  }", "signature": "DataServices readMetadata(final XMLStreamReader reader, final boolean validate)", "full_signature": "public DataServices readMetadata(final XMLStreamReader reader, final boolean validate)", "class_method_signature": "EdmParser.readMetadata(final XMLStreamReader reader, final boolean validate)", "testcase": false, "constructor": false, "invocations": ["initialize", "hasNext", "isEndElement", "equals", "getNamespaceURI", "equals", "getLocalName", "next", "isStartElement", "extractNamespaces", "equals", "getLocalName", "add", "readSchema", "equals", "getLocalName", "setDataServiceVersion", "getAttributeValue", "validate", "setSchemas", "close", "addContent", "getSimpleName", "getClass"]}, "repository": {"repo_id": 9327416, "url": "https://github.com/SAP/cloud-odata-java", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 45, "size": 20455, "license": "licensed"}}