{"test_class": {"identifier": "EdmServiceMetadataImplProvTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [{"original_string": "private static String metadata;", "modifier": "private static", "type": "String", "declarator": "metadata", "var_name": "metadata"}], "file": "odata-core/src/test/java/com/sap/core/odata/core/edm/provider/EdmServiceMetadataImplProvTest.java"}, "test_case": {"identifier": "oneEntitySetsOneContainerTwoSchemadForInfo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void oneEntitySetsOneContainerTwoSchemadForInfo() throws Exception {\n    List<EntitySet> entitySets = new ArrayList<EntitySet>();\n    EntitySet entitySet = new EntitySet().setName(\"Employees\");\n    entitySets.add(entitySet);\n\n    List<EntityContainer> entityContainers = new ArrayList<EntityContainer>();\n    EntityContainer container = new EntityContainer().setDefaultEntityContainer(true).setName(\"Container\").setEntitySets(entitySets);\n    entityContainers.add(container);\n\n    List<Schema> schemas = new ArrayList<Schema>();\n    schemas.add(new Schema().setEntityContainers(entityContainers));\n    schemas.add(new Schema().setEntityContainers(entityContainers));\n\n    EdmProvider edmProvider = mock(EdmProvider.class);\n    when(edmProvider.getSchemas()).thenReturn(schemas);\n\n    EdmServiceMetadata serviceMetadata = new EdmServiceMetadataImplProv(edmProvider);\n\n    List<EdmEntitySetInfo> infos = serviceMetadata.getEntitySetInfos();\n    assertNotNull(infos);\n    assertEquals(2, infos.size());\n  }", "signature": "void oneEntitySetsOneContainerTwoSchemadForInfo()", "full_signature": "@Test public void oneEntitySetsOneContainerTwoSchemadForInfo()", "class_method_signature": "EdmServiceMetadataImplProvTest.oneEntitySetsOneContainerTwoSchemadForInfo()", "testcase": true, "constructor": false, "invocations": ["setName", "add", "setEntitySets", "setName", "setDefaultEntityContainer", "add", "add", "setEntityContainers", "add", "setEntityContainers", "mock", "thenReturn", "when", "getSchemas", "getEntitySetInfos", "assertNotNull", "assertEquals", "size"]}, "focal_class": {"identifier": "EdmServiceMetadataImplProv", "superclass": "", "interfaces": "implements EdmServiceMetadata", "fields": [{"original_string": "private EdmProvider edmProvider;", "modifier": "private", "type": "EdmProvider", "declarator": "edmProvider", "var_name": "edmProvider"}, {"original_string": "private String dataServiceVersion;", "modifier": "private", "type": "String", "declarator": "dataServiceVersion", "var_name": "dataServiceVersion"}, {"original_string": "private List<Schema> schemas;", "modifier": "private", "type": "List<Schema>", "declarator": "schemas", "var_name": "schemas"}, {"original_string": "private List<EdmEntitySetInfo> entitySetInfos;", "modifier": "private", "type": "List<EdmEntitySetInfo>", "declarator": "entitySetInfos", "var_name": "entitySetInfos"}], "methods": [{"identifier": "EdmServiceMetadataImplProv", "parameters": "(final EdmProvider edmProvider)", "modifiers": "public", "return": "", "signature": " EdmServiceMetadataImplProv(final EdmProvider edmProvider)", "full_signature": "public  EdmServiceMetadataImplProv(final EdmProvider edmProvider)", "class_method_signature": "EdmServiceMetadataImplProv.EdmServiceMetadataImplProv(final EdmProvider edmProvider)", "testcase": false, "constructor": true}, {"identifier": "getMetadata", "parameters": "()", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream getMetadata()", "full_signature": "@Override public InputStream getMetadata()", "class_method_signature": "EdmServiceMetadataImplProv.getMetadata()", "testcase": false, "constructor": false}, {"identifier": "getDataServiceVersion", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDataServiceVersion()", "full_signature": "@Override public String getDataServiceVersion()", "class_method_signature": "EdmServiceMetadataImplProv.getDataServiceVersion()", "testcase": false, "constructor": false}, {"identifier": "getEntitySetInfos", "parameters": "()", "modifiers": "@Override public", "return": "List<EdmEntitySetInfo>", "signature": "List<EdmEntitySetInfo> getEntitySetInfos()", "full_signature": "@Override public List<EdmEntitySetInfo> getEntitySetInfos()", "class_method_signature": "EdmServiceMetadataImplProv.getEntitySetInfos()", "testcase": false, "constructor": false}], "file": "odata-core/src/main/java/com/sap/core/odata/core/edm/provider/EdmServiceMetadataImplProv.java"}, "focal_method": {"identifier": "getEntitySetInfos", "parameters": "()", "modifiers": "@Override public", "return": "List<EdmEntitySetInfo>", "body": "@Override\n  public List<EdmEntitySetInfo> getEntitySetInfos() throws ODataException {\n    if (entitySetInfos == null) {\n      entitySetInfos = new ArrayList<EdmEntitySetInfo>();\n\n      if (schemas == null) {\n        schemas = edmProvider.getSchemas();\n      }\n\n      for (Schema schema : schemas) {\n        for (EntityContainer entityContainer : schema.getEntityContainers()) {\n          for (EntitySet entitySet : entityContainer.getEntitySets()) {\n            EdmEntitySetInfo entitySetInfo = new EdmEntitySetInfoImplProv(entitySet, entityContainer);\n            entitySetInfos.add(entitySetInfo);\n          }\n        }\n      }\n\n    }\n\n    return entitySetInfos;\n  }", "signature": "List<EdmEntitySetInfo> getEntitySetInfos()", "full_signature": "@Override public List<EdmEntitySetInfo> getEntitySetInfos()", "class_method_signature": "EdmServiceMetadataImplProv.getEntitySetInfos()", "testcase": false, "constructor": false, "invocations": ["getSchemas", "getEntityContainers", "getEntitySets", "add"]}, "repository": {"repo_id": 9327416, "url": "https://github.com/SAP/cloud-odata-java", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 45, "size": 20455, "license": "licensed"}}