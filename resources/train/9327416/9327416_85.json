{"test_class": {"identifier": "JPAEdmSchemaTest", "superclass": "extends JPAEdmTestModelView", "interfaces": "", "fields": [{"original_string": "private JPAEdmSchemaTest objJPAEdmSchemaTest;", "modifier": "private", "type": "JPAEdmSchemaTest", "declarator": "objJPAEdmSchemaTest", "var_name": "objJPAEdmSchemaTest"}, {"original_string": "private JPAEdmSchema objJPAEdmSchema;", "modifier": "private", "type": "JPAEdmSchema", "declarator": "objJPAEdmSchema", "var_name": "objJPAEdmSchema"}], "file": "com.sap.core.odata.processor.core/src/test/java/com/sap/core/odata/processor/core/jpa/model/JPAEdmSchemaTest.java"}, "test_case": {"identifier": "testGetBuilder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetBuilder() {\n    assertNotNull(objJPAEdmSchema.getBuilder());\n  }", "signature": "void testGetBuilder()", "full_signature": "@Test public void testGetBuilder()", "class_method_signature": "JPAEdmSchemaTest.testGetBuilder()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "getBuilder"]}, "focal_class": {"identifier": "JPAEdmSchema", "superclass": "extends JPAEdmBaseViewImpl", "interfaces": "implements\n    JPAEdmSchemaView", "fields": [{"original_string": "private Schema schema;", "modifier": "private", "type": "Schema", "declarator": "schema", "var_name": "schema"}, {"original_string": "private JPAEdmComplexTypeView complexTypeView;", "modifier": "private", "type": "JPAEdmComplexTypeView", "declarator": "complexTypeView", "var_name": "complexTypeView"}, {"original_string": "private JPAEdmEntityContainerView entityContainerView;", "modifier": "private", "type": "JPAEdmEntityContainerView", "declarator": "entityContainerView", "var_name": "entityContainerView"}, {"original_string": "private JPAEdmAssociationView associationView = null;", "modifier": "private", "type": "JPAEdmAssociationView", "declarator": "associationView = null", "var_name": "associationView"}, {"original_string": "private List<String> nonKeyComplexList = null;", "modifier": "private", "type": "List<String>", "declarator": "nonKeyComplexList = null", "var_name": "nonKeyComplexList"}, {"original_string": "private HashMap<Class<?>, String[]> customOperations = null;", "modifier": "private", "type": "HashMap<Class<?>, String[]>", "declarator": "customOperations = null", "var_name": "customOperations"}], "methods": [{"identifier": "JPAEdmSchema", "parameters": "(final JPAEdmModelView modelView)", "modifiers": "public", "return": "", "signature": " JPAEdmSchema(final JPAEdmModelView modelView)", "full_signature": "public  JPAEdmSchema(final JPAEdmModelView modelView)", "class_method_signature": "JPAEdmSchema.JPAEdmSchema(final JPAEdmModelView modelView)", "testcase": false, "constructor": true}, {"identifier": "getNonKeyComplexTypeList", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getNonKeyComplexTypeList()", "full_signature": "@Override public List<String> getNonKeyComplexTypeList()", "class_method_signature": "JPAEdmSchema.getNonKeyComplexTypeList()", "testcase": false, "constructor": false}, {"identifier": "addNonKeyComplexName", "parameters": "(final String complexTypeName)", "modifiers": "@Override public", "return": "void", "signature": "void addNonKeyComplexName(final String complexTypeName)", "full_signature": "@Override public void addNonKeyComplexName(final String complexTypeName)", "class_method_signature": "JPAEdmSchema.addNonKeyComplexName(final String complexTypeName)", "testcase": false, "constructor": false}, {"identifier": "getEdmSchema", "parameters": "()", "modifiers": "@Override public", "return": "Schema", "signature": "Schema getEdmSchema()", "full_signature": "@Override public Schema getEdmSchema()", "class_method_signature": "JPAEdmSchema.getEdmSchema()", "testcase": false, "constructor": false}, {"identifier": "getJPAEdmEntityContainerView", "parameters": "()", "modifiers": "@Override public", "return": "JPAEdmEntityContainerView", "signature": "JPAEdmEntityContainerView getJPAEdmEntityContainerView()", "full_signature": "@Override public JPAEdmEntityContainerView getJPAEdmEntityContainerView()", "class_method_signature": "JPAEdmSchema.getJPAEdmEntityContainerView()", "testcase": false, "constructor": false}, {"identifier": "getJPAEdmComplexTypeView", "parameters": "()", "modifiers": "@Override public", "return": "JPAEdmComplexTypeView", "signature": "JPAEdmComplexTypeView getJPAEdmComplexTypeView()", "full_signature": "@Override public JPAEdmComplexTypeView getJPAEdmComplexTypeView()", "class_method_signature": "JPAEdmSchema.getJPAEdmComplexTypeView()", "testcase": false, "constructor": false}, {"identifier": "getBuilder", "parameters": "()", "modifiers": "@Override public", "return": "JPAEdmBuilder", "signature": "JPAEdmBuilder getBuilder()", "full_signature": "@Override public JPAEdmBuilder getBuilder()", "class_method_signature": "JPAEdmSchema.getBuilder()", "testcase": false, "constructor": false}, {"identifier": "clean", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clean()", "full_signature": "@Override public void clean()", "class_method_signature": "JPAEdmSchema.clean()", "testcase": false, "constructor": false}, {"identifier": "getJPAEdmAssociationView", "parameters": "()", "modifiers": "@Override public final", "return": "JPAEdmAssociationView", "signature": "JPAEdmAssociationView getJPAEdmAssociationView()", "full_signature": "@Override public final JPAEdmAssociationView getJPAEdmAssociationView()", "class_method_signature": "JPAEdmSchema.getJPAEdmAssociationView()", "testcase": false, "constructor": false}, {"identifier": "registerOperations", "parameters": "(final Class<?> customClass, final String[] methodNames)", "modifiers": "@Override public", "return": "void", "signature": "void registerOperations(final Class<?> customClass, final String[] methodNames)", "full_signature": "@Override public void registerOperations(final Class<?> customClass, final String[] methodNames)", "class_method_signature": "JPAEdmSchema.registerOperations(final Class<?> customClass, final String[] methodNames)", "testcase": false, "constructor": false}, {"identifier": "getRegisteredOperations", "parameters": "()", "modifiers": "@Override public", "return": "HashMap<Class<?>, String[]>", "signature": "HashMap<Class<?>, String[]> getRegisteredOperations()", "full_signature": "@Override public HashMap<Class<?>, String[]> getRegisteredOperations()", "class_method_signature": "JPAEdmSchema.getRegisteredOperations()", "testcase": false, "constructor": false}], "file": "com.sap.core.odata.processor.core/src/main/java/com/sap/core/odata/processor/core/jpa/model/JPAEdmSchema.java"}, "focal_method": {"identifier": "getBuilder", "parameters": "()", "modifiers": "@Override public", "return": "JPAEdmBuilder", "body": "@Override\n  public JPAEdmBuilder getBuilder() {\n    if (builder == null) {\n      builder = new JPAEdmSchemaBuilder();\n    }\n\n    return builder;\n  }", "signature": "JPAEdmBuilder getBuilder()", "full_signature": "@Override public JPAEdmBuilder getBuilder()", "class_method_signature": "JPAEdmSchema.getBuilder()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9327416, "url": "https://github.com/SAP/cloud-odata-java", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 45, "size": 20455, "license": "licensed"}}