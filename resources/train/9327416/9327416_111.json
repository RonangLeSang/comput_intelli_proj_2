{"test_class": {"identifier": "JPAEdmComplexTypeTest", "superclass": "extends JPAEdmTestModelView", "interfaces": "", "fields": [{"original_string": "private static JPAEdmComplexType objComplexType = null;", "modifier": "private static", "type": "JPAEdmComplexType", "declarator": "objComplexType = null", "var_name": "objComplexType"}, {"original_string": "private static JPAEdmComplexTypeTest localView = null;", "modifier": "private static", "type": "JPAEdmComplexTypeTest", "declarator": "localView = null", "var_name": "localView"}], "file": "com.sap.core.odata.processor.core/src/test/java/com/sap/core/odata/processor/core/jpa/model/JPAEdmComplexTypeTest.java"}, "test_case": {"identifier": "testGetEdmComplexType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetEdmComplexType() {\n    assertEquals(objComplexType.getEdmComplexType().getName(), \"String\");\n  }", "signature": "void testGetEdmComplexType()", "full_signature": "@Test public void testGetEdmComplexType()", "class_method_signature": "JPAEdmComplexTypeTest.testGetEdmComplexType()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getName", "getEdmComplexType"]}, "focal_class": {"identifier": "JPAEdmComplexType", "superclass": "extends JPAEdmBaseViewImpl", "interfaces": "implements\n    JPAEdmComplexTypeView", "fields": [{"original_string": "private JPAEdmSchemaView schemaView;", "modifier": "private", "type": "JPAEdmSchemaView", "declarator": "schemaView", "var_name": "schemaView"}, {"original_string": "private ComplexType currentComplexType = null;", "modifier": "private", "type": "ComplexType", "declarator": "currentComplexType = null", "var_name": "currentComplexType"}, {"original_string": "private EmbeddableType<?> currentEmbeddableType = null;", "modifier": "private", "type": "EmbeddableType<?>", "declarator": "currentEmbeddableType = null", "var_name": "currentEmbeddableType"}, {"original_string": "private HashMap<String, ComplexType> searchMap = null;", "modifier": "private", "type": "HashMap<String, ComplexType>", "declarator": "searchMap = null", "var_name": "searchMap"}, {"original_string": "private List<ComplexType> consistentComplextTypes = null;", "modifier": "private", "type": "List<ComplexType>", "declarator": "consistentComplextTypes = null", "var_name": "consistentComplextTypes"}, {"original_string": "private boolean directBuild;", "modifier": "private", "type": "boolean", "declarator": "directBuild", "var_name": "directBuild"}, {"original_string": "private EmbeddableType<?> nestedComplexType = null;", "modifier": "private", "type": "EmbeddableType<?>", "declarator": "nestedComplexType = null", "var_name": "nestedComplexType"}], "methods": [{"identifier": "JPAEdmComplexType", "parameters": "(final JPAEdmSchemaView view)", "modifiers": "public", "return": "", "signature": " JPAEdmComplexType(final JPAEdmSchemaView view)", "full_signature": "public  JPAEdmComplexType(final JPAEdmSchemaView view)", "class_method_signature": "JPAEdmComplexType.JPAEdmComplexType(final JPAEdmSchemaView view)", "testcase": false, "constructor": true}, {"identifier": "JPAEdmComplexType", "parameters": "(final JPAEdmSchemaView view, final Attribute<?, ?> complexAttribute)", "modifiers": "public", "return": "", "signature": " JPAEdmComplexType(final JPAEdmSchemaView view, final Attribute<?, ?> complexAttribute)", "full_signature": "public  JPAEdmComplexType(final JPAEdmSchemaView view, final Attribute<?, ?> complexAttribute)", "class_method_signature": "JPAEdmComplexType.JPAEdmComplexType(final JPAEdmSchemaView view, final Attribute<?, ?> complexAttribute)", "testcase": false, "constructor": true}, {"identifier": "getBuilder", "parameters": "()", "modifiers": "@Override public", "return": "JPAEdmBuilder", "signature": "JPAEdmBuilder getBuilder()", "full_signature": "@Override public JPAEdmBuilder getBuilder()", "class_method_signature": "JPAEdmComplexType.getBuilder()", "testcase": false, "constructor": false}, {"identifier": "getEdmComplexType", "parameters": "()", "modifiers": "@Override public", "return": "ComplexType", "signature": "ComplexType getEdmComplexType()", "full_signature": "@Override public ComplexType getEdmComplexType()", "class_method_signature": "JPAEdmComplexType.getEdmComplexType()", "testcase": false, "constructor": false}, {"identifier": "searchEdmComplexType", "parameters": "(final String embeddableTypeName)", "modifiers": "@Override public", "return": "ComplexType", "signature": "ComplexType searchEdmComplexType(final String embeddableTypeName)", "full_signature": "@Override public ComplexType searchEdmComplexType(final String embeddableTypeName)", "class_method_signature": "JPAEdmComplexType.searchEdmComplexType(final String embeddableTypeName)", "testcase": false, "constructor": false}, {"identifier": "getJPAEmbeddableType", "parameters": "()", "modifiers": "@Override public", "return": "EmbeddableType<?>", "signature": "EmbeddableType<?> getJPAEmbeddableType()", "full_signature": "@Override public EmbeddableType<?> getJPAEmbeddableType()", "class_method_signature": "JPAEdmComplexType.getJPAEmbeddableType()", "testcase": false, "constructor": false}, {"identifier": "getConsistentEdmComplexTypes", "parameters": "()", "modifiers": "@Override public", "return": "List<ComplexType>", "signature": "List<ComplexType> getConsistentEdmComplexTypes()", "full_signature": "@Override public List<ComplexType> getConsistentEdmComplexTypes()", "class_method_signature": "JPAEdmComplexType.getConsistentEdmComplexTypes()", "testcase": false, "constructor": false}, {"identifier": "searchEdmComplexType", "parameters": "(final FullQualifiedName type)", "modifiers": "@Override public", "return": "ComplexType", "signature": "ComplexType searchEdmComplexType(final FullQualifiedName type)", "full_signature": "@Override public ComplexType searchEdmComplexType(final FullQualifiedName type)", "class_method_signature": "JPAEdmComplexType.searchEdmComplexType(final FullQualifiedName type)", "testcase": false, "constructor": false}, {"identifier": "searchComplexTypeByName", "parameters": "(final String name)", "modifiers": "private", "return": "ComplexType", "signature": "ComplexType searchComplexTypeByName(final String name)", "full_signature": "private ComplexType searchComplexTypeByName(final String name)", "class_method_signature": "JPAEdmComplexType.searchComplexTypeByName(final String name)", "testcase": false, "constructor": false}, {"identifier": "addJPAEdmCompleTypeView", "parameters": "(final JPAEdmComplexTypeView view)", "modifiers": "@Override public", "return": "void", "signature": "void addJPAEdmCompleTypeView(final JPAEdmComplexTypeView view)", "full_signature": "@Override public void addJPAEdmCompleTypeView(final JPAEdmComplexTypeView view)", "class_method_signature": "JPAEdmComplexType.addJPAEdmCompleTypeView(final JPAEdmComplexTypeView view)", "testcase": false, "constructor": false}, {"identifier": "expandEdmComplexType", "parameters": "(final ComplexType complexType, List<Property> expandedList, final String embeddablePropertyName)", "modifiers": "@Override public", "return": "void", "signature": "void expandEdmComplexType(final ComplexType complexType, List<Property> expandedList, final String embeddablePropertyName)", "full_signature": "@Override public void expandEdmComplexType(final ComplexType complexType, List<Property> expandedList, final String embeddablePropertyName)", "class_method_signature": "JPAEdmComplexType.expandEdmComplexType(final ComplexType complexType, List<Property> expandedList, final String embeddablePropertyName)", "testcase": false, "constructor": false}], "file": "com.sap.core.odata.processor.core/src/main/java/com/sap/core/odata/processor/core/jpa/model/JPAEdmComplexType.java"}, "focal_method": {"identifier": "getEdmComplexType", "parameters": "()", "modifiers": "@Override public", "return": "ComplexType", "body": "@Override\n  public ComplexType getEdmComplexType() {\n    return currentComplexType;\n  }", "signature": "ComplexType getEdmComplexType()", "full_signature": "@Override public ComplexType getEdmComplexType()", "class_method_signature": "JPAEdmComplexType.getEdmComplexType()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9327416, "url": "https://github.com/SAP/cloud-odata-java", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 45, "size": 20455, "license": "licensed"}}