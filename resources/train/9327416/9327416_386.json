{"test_class": {"identifier": "DecoderTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [], "file": "odata-core/src/test/java/com/sap/core/odata/core/commons/DecoderTest.java"}, "test_case": {"identifier": "nullByte", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n  public void nullByte() {\n    Decoder.decode(\"%\\u0000ff\");\n  }", "signature": "void nullByte()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void nullByte()", "class_method_signature": "DecoderTest.nullByte()", "testcase": true, "constructor": false, "invocations": ["decode"]}, "focal_class": {"identifier": "Decoder", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "decode", "parameters": "(final String value)", "modifiers": "public static", "return": "String", "signature": "String decode(final String value)", "full_signature": "public static String decode(final String value)", "class_method_signature": "Decoder.decode(final String value)", "testcase": false, "constructor": false}], "file": "odata-core/src/main/java/com/sap/core/odata/core/commons/Decoder.java"}, "focal_method": {"identifier": "decode", "parameters": "(final String value)", "modifiers": "public static", "return": "String", "body": "public static String decode(final String value) throws IllegalArgumentException, NumberFormatException {\n    if (value == null) {\n      return value;\n    }\n\n    // Use a tiny finite-state machine to handle decoding on byte level.\n    // There are only three states:\n    //   -2: normal bytes\n    //   -1: a byte representing the percent character has been read\n    // >= 0: a byte representing the first half-byte of a percent-encoded byte has been read\n    // The variable holding the state is also used to store the value of the first half-byte.\n    byte[] result = new byte[value.length()];\n    int position = 0;\n    byte encodedPart = -2;\n    for (final char c : value.toCharArray()) {\n      if (c <= Byte.MAX_VALUE) {\n        if (c == '%') {\n          if (encodedPart == -2) {\n            encodedPart = -1;\n          } else {\n            throw new IllegalArgumentException();\n          }\n        } else if (encodedPart == -1) {\n          encodedPart = (byte) c;\n        } else if (encodedPart >= 0) {\n          final int i = Integer.parseInt(String.valueOf(new char[] { (char) encodedPart, c }), 16);\n          if (i >= 0) {\n            result[position++] = (byte) i;\n          } else {\n            throw new NumberFormatException();\n          }\n          encodedPart = -2;\n        } else {\n          result[position++] = (byte) c;\n        }\n      } else {\n        throw new IllegalArgumentException();\n      }\n    }\n\n    if (encodedPart >= 0) {\n      throw new IllegalArgumentException();\n    }\n\n    try {\n      return new String(result, 0, position, \"UTF-8\");\n    } catch (UnsupportedEncodingException e) {\n      throw new IllegalArgumentException(e);\n    }\n  }", "signature": "String decode(final String value)", "full_signature": "public static String decode(final String value)", "class_method_signature": "Decoder.decode(final String value)", "testcase": false, "constructor": false, "invocations": ["length", "toCharArray", "parseInt", "valueOf"]}, "repository": {"repo_id": 9327416, "url": "https://github.com/SAP/cloud-odata-java", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 45, "size": 20455, "license": "licensed"}}