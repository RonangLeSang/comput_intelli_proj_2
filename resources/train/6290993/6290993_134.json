{"test_class": {"identifier": "AvroTypeTest", "superclass": "", "interfaces": "", "fields": [], "file": "crunch-core/src/test/java/org/apache/crunch/types/avro/AvroTypeTest.java"}, "test_case": {"identifier": "testGetDetachedValue_NotInitialized", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n  public void testGetDetachedValue_NotInitialized() {\n    AvroType<Person> specificType = Avros.specifics(Person.class);\n    Person person = createPerson();\n    specificType.getDetachedValue(person);\n  }", "signature": "void testGetDetachedValue_NotInitialized()", "full_signature": "@Test(expected = IllegalStateException.class) public void testGetDetachedValue_NotInitialized()", "class_method_signature": "AvroTypeTest.testGetDetachedValue_NotInitialized()", "testcase": true, "constructor": false, "invocations": ["specifics", "createPerson", "getDetachedValue"]}, "focal_class": {"identifier": "AvroType", "superclass": "", "interfaces": "implements PType<T>", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(AvroType.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(AvroType.class)", "var_name": "LOG"}, {"original_string": "private static final Converter AVRO_CONVERTER = new AvroKeyConverter();", "modifier": "private static final", "type": "Converter", "declarator": "AVRO_CONVERTER = new AvroKeyConverter()", "var_name": "AVRO_CONVERTER"}, {"original_string": "private final Class<T> typeClass;", "modifier": "private final", "type": "Class<T>", "declarator": "typeClass", "var_name": "typeClass"}, {"original_string": "private final String schemaString;", "modifier": "private final", "type": "String", "declarator": "schemaString", "var_name": "schemaString"}, {"original_string": "private transient Schema schema;", "modifier": "private transient", "type": "Schema", "declarator": "schema", "var_name": "schema"}, {"original_string": "private final MapFn baseInputMapFn;", "modifier": "private final", "type": "MapFn", "declarator": "baseInputMapFn", "var_name": "baseInputMapFn"}, {"original_string": "private final MapFn baseOutputMapFn;", "modifier": "private final", "type": "MapFn", "declarator": "baseOutputMapFn", "var_name": "baseOutputMapFn"}, {"original_string": "private final List<PType> subTypes;", "modifier": "private final", "type": "List<PType>", "declarator": "subTypes", "var_name": "subTypes"}, {"original_string": "private AvroRecordType recordType;", "modifier": "private", "type": "AvroRecordType", "declarator": "recordType", "var_name": "recordType"}, {"original_string": "private DeepCopier<T> deepCopier;", "modifier": "private", "type": "DeepCopier<T>", "declarator": "deepCopier", "var_name": "deepCopier"}, {"original_string": "private transient boolean initialized = false;", "modifier": "private transient", "type": "boolean", "declarator": "initialized = false", "var_name": "initialized"}], "methods": [{"identifier": "AvroType", "parameters": "(Class<T> typeClass, Schema schema, DeepCopier<T> deepCopier, PType... ptypes)", "modifiers": "public", "return": "", "signature": " AvroType(Class<T> typeClass, Schema schema, DeepCopier<T> deepCopier, PType... ptypes)", "full_signature": "public  AvroType(Class<T> typeClass, Schema schema, DeepCopier<T> deepCopier, PType... ptypes)", "class_method_signature": "AvroType.AvroType(Class<T> typeClass, Schema schema, DeepCopier<T> deepCopier, PType... ptypes)", "testcase": false, "constructor": true}, {"identifier": "AvroType", "parameters": "(Class<T> typeClass, Schema schema, MapFn inputMapFn, MapFn outputMapFn,\n      DeepCopier<T> deepCopier, AvroRecordType recordType, PType... ptypes)", "modifiers": "public", "return": "", "signature": " AvroType(Class<T> typeClass, Schema schema, MapFn inputMapFn, MapFn outputMapFn,\n      DeepCopier<T> deepCopier, AvroRecordType recordType, PType... ptypes)", "full_signature": "public  AvroType(Class<T> typeClass, Schema schema, MapFn inputMapFn, MapFn outputMapFn,\n      DeepCopier<T> deepCopier, AvroRecordType recordType, PType... ptypes)", "class_method_signature": "AvroType.AvroType(Class<T> typeClass, Schema schema, MapFn inputMapFn, MapFn outputMapFn,\n      DeepCopier<T> deepCopier, AvroRecordType recordType, PType... ptypes)", "testcase": false, "constructor": true}, {"identifier": "determineRecordType", "parameters": "()", "modifiers": "private", "return": "AvroRecordType", "signature": "AvroRecordType determineRecordType()", "full_signature": "private AvroRecordType determineRecordType()", "class_method_signature": "AvroType.determineRecordType()", "testcase": false, "constructor": false}, {"identifier": "getRecordType", "parameters": "()", "modifiers": "public", "return": "AvroRecordType", "signature": "AvroRecordType getRecordType()", "full_signature": "public AvroRecordType getRecordType()", "class_method_signature": "AvroType.getRecordType()", "testcase": false, "constructor": false}, {"identifier": "getTypeClass", "parameters": "()", "modifiers": "@Override public", "return": "Class<T>", "signature": "Class<T> getTypeClass()", "full_signature": "@Override public Class<T> getTypeClass()", "class_method_signature": "AvroType.getTypeClass()", "testcase": false, "constructor": false}, {"identifier": "getFamily", "parameters": "()", "modifiers": "@Override public", "return": "PTypeFamily", "signature": "PTypeFamily getFamily()", "full_signature": "@Override public PTypeFamily getFamily()", "class_method_signature": "AvroType.getFamily()", "testcase": false, "constructor": false}, {"identifier": "getSubTypes", "parameters": "()", "modifiers": "@Override public", "return": "List<PType>", "signature": "List<PType> getSubTypes()", "full_signature": "@Override public List<PType> getSubTypes()", "class_method_signature": "AvroType.getSubTypes()", "testcase": false, "constructor": false}, {"identifier": "getSchema", "parameters": "()", "modifiers": "public", "return": "Schema", "signature": "Schema getSchema()", "full_signature": "public Schema getSchema()", "class_method_signature": "AvroType.getSchema()", "testcase": false, "constructor": false}, {"identifier": "hasSpecific", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasSpecific()", "full_signature": "public boolean hasSpecific()", "class_method_signature": "AvroType.hasSpecific()", "testcase": false, "constructor": false}, {"identifier": "checkSpecific", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean checkSpecific()", "full_signature": "private boolean checkSpecific()", "class_method_signature": "AvroType.checkSpecific()", "testcase": false, "constructor": false}, {"identifier": "isGeneric", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isGeneric()", "full_signature": "public boolean isGeneric()", "class_method_signature": "AvroType.isGeneric()", "testcase": false, "constructor": false}, {"identifier": "hasReflect", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasReflect()", "full_signature": "public boolean hasReflect()", "class_method_signature": "AvroType.hasReflect()", "testcase": false, "constructor": false}, {"identifier": "checkReflect", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean checkReflect()", "full_signature": "private boolean checkReflect()", "class_method_signature": "AvroType.checkReflect()", "testcase": false, "constructor": false}, {"identifier": "getInputMapFn", "parameters": "()", "modifiers": "public", "return": "MapFn<Object, T>", "signature": "MapFn<Object, T> getInputMapFn()", "full_signature": "public MapFn<Object, T> getInputMapFn()", "class_method_signature": "AvroType.getInputMapFn()", "testcase": false, "constructor": false}, {"identifier": "getOutputMapFn", "parameters": "()", "modifiers": "public", "return": "MapFn<T, Object>", "signature": "MapFn<T, Object> getOutputMapFn()", "full_signature": "public MapFn<T, Object> getOutputMapFn()", "class_method_signature": "AvroType.getOutputMapFn()", "testcase": false, "constructor": false}, {"identifier": "getConverter", "parameters": "()", "modifiers": "@Override public", "return": "Converter", "signature": "Converter getConverter()", "full_signature": "@Override public Converter getConverter()", "class_method_signature": "AvroType.getConverter()", "testcase": false, "constructor": false}, {"identifier": "getDefaultFileSource", "parameters": "(Path path)", "modifiers": "@Override public", "return": "ReadableSourceTarget<T>", "signature": "ReadableSourceTarget<T> getDefaultFileSource(Path path)", "full_signature": "@Override public ReadableSourceTarget<T> getDefaultFileSource(Path path)", "class_method_signature": "AvroType.getDefaultFileSource(Path path)", "testcase": false, "constructor": false}, {"identifier": "createSourceTarget", "parameters": "(Configuration conf, Path path, Iterable<T> contents, int parallelism)", "modifiers": "@Override public", "return": "ReadableSource<T>", "signature": "ReadableSource<T> createSourceTarget(Configuration conf, Path path, Iterable<T> contents, int parallelism)", "full_signature": "@Override public ReadableSource<T> createSourceTarget(Configuration conf, Path path, Iterable<T> contents, int parallelism)", "class_method_signature": "AvroType.createSourceTarget(Configuration conf, Path path, Iterable<T> contents, int parallelism)", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "(Configuration conf)", "modifiers": "@Override public", "return": "void", "signature": "void initialize(Configuration conf)", "full_signature": "@Override public void initialize(Configuration conf)", "class_method_signature": "AvroType.initialize(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "getDetachedValue", "parameters": "(T value)", "modifiers": "@Override public", "return": "T", "signature": "T getDetachedValue(T value)", "full_signature": "@Override public T getDetachedValue(T value)", "class_method_signature": "AvroType.getDetachedValue(T value)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "AvroType.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "AvroType.hashCode()", "testcase": false, "constructor": false}], "file": "crunch-core/src/main/java/org/apache/crunch/types/avro/AvroType.java"}, "focal_method": {"identifier": "getDetachedValue", "parameters": "(T value)", "modifiers": "@Override public", "return": "T", "body": "@Override\n  public T getDetachedValue(T value) {\n    if (!initialized) {\n      throw new IllegalStateException(\"Cannot call getDetachedValue on an uninitialized PType\");\n    }\n    return deepCopier.deepCopy(value);\n  }", "signature": "T getDetachedValue(T value)", "full_signature": "@Override public T getDetachedValue(T value)", "class_method_signature": "AvroType.getDetachedValue(T value)", "testcase": false, "constructor": false, "invocations": ["deepCopy"]}, "repository": {"repo_id": 6290993, "url": "https://github.com/apache/crunch", "language": "Java", "is_fork": false, "fork_count": 83, "stargazer_count": 99, "size": 7604, "license": "licensed"}}