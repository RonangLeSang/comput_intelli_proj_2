{"test_class": {"identifier": "HDFSOffsetWriterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ObjectMapper MAPPER = new ObjectMapper();", "modifier": "private static final", "type": "ObjectMapper", "declarator": "MAPPER = new ObjectMapper()", "var_name": "MAPPER"}, {"original_string": "@Rule\n  public TemporaryFolder tempFolder = new TemporaryFolder();", "modifier": "@Rule\n  public", "type": "TemporaryFolder", "declarator": "tempFolder = new TemporaryFolder()", "var_name": "tempFolder"}, {"original_string": "@Rule\n  public TestName testName = new TestName();", "modifier": "@Rule\n  public", "type": "TestName", "declarator": "testName = new TestName()", "var_name": "testName"}, {"original_string": "private Configuration config;", "modifier": "private", "type": "Configuration", "declarator": "config", "var_name": "config"}, {"original_string": "private Path basePath;", "modifier": "private", "type": "Path", "declarator": "basePath", "var_name": "basePath"}, {"original_string": "private FileSystem fileSystem;", "modifier": "private", "type": "FileSystem", "declarator": "fileSystem", "var_name": "fileSystem"}, {"original_string": "private HDFSOffsetWriter writer;", "modifier": "private", "type": "HDFSOffsetWriter", "declarator": "writer", "var_name": "writer"}], "file": "crunch-kafka/src/test/java/org/apache/crunch/kafka/offset/hdfs/HDFSOffsetWriterTest.java"}, "test_case": {"identifier": "getPersistedStoragePathNullBase", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n  public void getPersistedStoragePathNullBase() {\n    HDFSOffsetWriter.getPersistedTimeStoragePath(null, 10L);\n  }", "signature": "void getPersistedStoragePathNullBase()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void getPersistedStoragePathNullBase()", "class_method_signature": "HDFSOffsetWriterTest.getPersistedStoragePathNullBase()", "testcase": true, "constructor": false, "invocations": ["getPersistedTimeStoragePath"]}, "focal_class": {"identifier": "HDFSOffsetWriter", "superclass": "extends AbstractOffsetWriter", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(HDFSOffsetWriter.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(HDFSOffsetWriter.class)", "var_name": "LOG"}, {"original_string": "public static final String PERSIST_TIME_FORMAT = \"yyyy-MM-dd'T'HH-mm-ssZ\";", "modifier": "public static final", "type": "String", "declarator": "PERSIST_TIME_FORMAT = \"yyyy-MM-dd'T'HH-mm-ssZ\"", "var_name": "PERSIST_TIME_FORMAT"}, {"original_string": "public static final DateTimeFormatter FILE_FORMATTER = DateTimeFormat.forPattern(PERSIST_TIME_FORMAT).withZoneUTC();", "modifier": "public static final", "type": "DateTimeFormatter", "declarator": "FILE_FORMATTER = DateTimeFormat.forPattern(PERSIST_TIME_FORMAT).withZoneUTC()", "var_name": "FILE_FORMATTER"}, {"original_string": "public static final String FILE_FORMAT_EXTENSION = \".json\";", "modifier": "public static final", "type": "String", "declarator": "FILE_FORMAT_EXTENSION = \".json\"", "var_name": "FILE_FORMAT_EXTENSION"}, {"original_string": "private final Configuration config;", "modifier": "private final", "type": "Configuration", "declarator": "config", "var_name": "config"}, {"original_string": "private static final ObjectMapper MAPPER = new ObjectMapper();", "modifier": "private static final", "type": "ObjectMapper", "declarator": "MAPPER = new ObjectMapper()", "var_name": "MAPPER"}, {"original_string": "private final Path baseStoragePath;", "modifier": "private final", "type": "Path", "declarator": "baseStoragePath", "var_name": "baseStoragePath"}], "methods": [{"identifier": "HDFSOffsetWriter", "parameters": "(Configuration config, Path baseStoragePath)", "modifiers": "public", "return": "", "signature": " HDFSOffsetWriter(Configuration config, Path baseStoragePath)", "full_signature": "public  HDFSOffsetWriter(Configuration config, Path baseStoragePath)", "class_method_signature": "HDFSOffsetWriter.HDFSOffsetWriter(Configuration config, Path baseStoragePath)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(long asOfTime, Map<TopicPartition, Long> offsets)", "modifiers": "@Override public", "return": "void", "signature": "void write(long asOfTime, Map<TopicPartition, Long> offsets)", "full_signature": "@Override public void write(long asOfTime, Map<TopicPartition, Long> offsets)", "class_method_signature": "HDFSOffsetWriter.write(long asOfTime, Map<TopicPartition, Long> offsets)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "HDFSOffsetWriter.close()", "testcase": false, "constructor": false}, {"identifier": "getFileSystem", "parameters": "()", "modifiers": "protected", "return": "FileSystem", "signature": "FileSystem getFileSystem()", "full_signature": "protected FileSystem getFileSystem()", "class_method_signature": "HDFSOffsetWriter.getFileSystem()", "testcase": false, "constructor": false}, {"identifier": "getPersistedTimeStoragePath", "parameters": "(Path baseStoragePath, long persistedTime)", "modifiers": "public static", "return": "Path", "signature": "Path getPersistedTimeStoragePath(Path baseStoragePath, long persistedTime)", "full_signature": "public static Path getPersistedTimeStoragePath(Path baseStoragePath, long persistedTime)", "class_method_signature": "HDFSOffsetWriter.getPersistedTimeStoragePath(Path baseStoragePath, long persistedTime)", "testcase": false, "constructor": false}, {"identifier": "fileNameToPersistenceTime", "parameters": "(String fileName)", "modifiers": "public static", "return": "long", "signature": "long fileNameToPersistenceTime(String fileName)", "full_signature": "public static long fileNameToPersistenceTime(String fileName)", "class_method_signature": "HDFSOffsetWriter.fileNameToPersistenceTime(String fileName)", "testcase": false, "constructor": false}, {"identifier": "persistenceTimeToFileName", "parameters": "(long persistedTime)", "modifiers": "public static", "return": "String", "signature": "String persistenceTimeToFileName(long persistedTime)", "full_signature": "public static String persistenceTimeToFileName(long persistedTime)", "class_method_signature": "HDFSOffsetWriter.persistenceTimeToFileName(long persistedTime)", "testcase": false, "constructor": false}], "file": "crunch-kafka/src/main/java/org/apache/crunch/kafka/offset/hdfs/HDFSOffsetWriter.java"}, "focal_method": {"identifier": "getPersistedTimeStoragePath", "parameters": "(Path baseStoragePath, long persistedTime)", "modifiers": "public static", "return": "Path", "body": "public static Path getPersistedTimeStoragePath(Path baseStoragePath, long persistedTime) {\n    if (baseStoragePath == null) {\n      throw new IllegalArgumentException(\"The 'baseStoragePath' cannot be 'null'.\");\n    }\n    return new Path(baseStoragePath, persistenceTimeToFileName(persistedTime));\n  }", "signature": "Path getPersistedTimeStoragePath(Path baseStoragePath, long persistedTime)", "full_signature": "public static Path getPersistedTimeStoragePath(Path baseStoragePath, long persistedTime)", "class_method_signature": "HDFSOffsetWriter.getPersistedTimeStoragePath(Path baseStoragePath, long persistedTime)", "testcase": false, "constructor": false, "invocations": ["persistenceTimeToFileName"]}, "repository": {"repo_id": 6290993, "url": "https://github.com/apache/crunch", "language": "Java", "is_fork": false, "fork_count": 83, "stargazer_count": 99, "size": 7604, "license": "licensed"}}