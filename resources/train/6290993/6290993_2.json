{"test_class": {"identifier": "OffsetsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public TestName testName = new TestName();", "modifier": "@Rule\n  public", "type": "TestName", "declarator": "testName = new TestName()", "var_name": "testName"}, {"original_string": "private static ObjectMapper mapper;", "modifier": "private static", "type": "ObjectMapper", "declarator": "mapper", "var_name": "mapper"}], "file": "crunch-kafka/src/test/java/org/apache/crunch/kafka/offset/hdfs/OffsetsTest.java"}, "test_case": {"identifier": "partitionOffsetNotEqualDiffTopic", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void partitionOffsetNotEqualDiffTopic() {\n    Offsets.PartitionOffset partitionOffset1 = Offsets.PartitionOffset.Builder.newBuilder()\n        .setTopic(\"abc\").setOffset(10L).setPartition(1).build();\n\n    Offsets.PartitionOffset partitionOffset2 = Offsets.PartitionOffset.Builder.newBuilder()\n        .setTopic(testName.getMethodName()).setOffset(10L).setPartition(1).build();\n\n    assertThat(partitionOffset1.equals(partitionOffset2), is(false));\n    assertThat(partitionOffset1.compareTo(partitionOffset2), is(lessThan(0)));\n  }", "signature": "void partitionOffsetNotEqualDiffTopic()", "full_signature": "@Test public void partitionOffsetNotEqualDiffTopic()", "class_method_signature": "OffsetsTest.partitionOffsetNotEqualDiffTopic()", "testcase": true, "constructor": false, "invocations": ["build", "setPartition", "setOffset", "setTopic", "newBuilder", "build", "setPartition", "setOffset", "setTopic", "newBuilder", "getMethodName", "assertThat", "equals", "is", "assertThat", "compareTo", "is", "lessThan"]}, "focal_class": {"identifier": "Offsets", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final long offsetsAsOfTime;", "modifier": "private final", "type": "long", "declarator": "offsetsAsOfTime", "var_name": "offsetsAsOfTime"}, {"original_string": "private final List<PartitionOffset> offsets;", "modifier": "private final", "type": "List<PartitionOffset>", "declarator": "offsets", "var_name": "offsets"}], "methods": [{"identifier": "Offsets", "parameters": "(long asOfTime, List<PartitionOffset> offsets)", "modifiers": "private", "return": "", "signature": " Offsets(long asOfTime, List<PartitionOffset> offsets)", "full_signature": "private  Offsets(long asOfTime, List<PartitionOffset> offsets)", "class_method_signature": "Offsets.Offsets(long asOfTime, List<PartitionOffset> offsets)", "testcase": false, "constructor": true}, {"identifier": "getAsOfTime", "parameters": "()", "modifiers": "@JsonProperty(\"asOfTime\") public", "return": "long", "signature": "long getAsOfTime()", "full_signature": "@JsonProperty(\"asOfTime\") public long getAsOfTime()", "class_method_signature": "Offsets.getAsOfTime()", "testcase": false, "constructor": false}, {"identifier": "getOffsets", "parameters": "()", "modifiers": "@JsonProperty(\"offsets\") public", "return": "List<PartitionOffset>", "signature": "List<PartitionOffset> getOffsets()", "full_signature": "@JsonProperty(\"offsets\") public List<PartitionOffset> getOffsets()", "class_method_signature": "Offsets.getOffsets()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Offsets.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Offsets.equals(Object obj)", "testcase": false, "constructor": false}], "file": "crunch-kafka/src/main/java/org/apache/crunch/kafka/offset/hdfs/Offsets.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean equals(Object obj) {\n    if (obj == null) {\n      return false;\n    }\n\n    if (obj instanceof Offsets) {\n      Offsets that = (Offsets) obj;\n\n      return this.offsetsAsOfTime == that.offsetsAsOfTime\n          && this.offsets.equals(that.offsets);\n    }\n\n    return false;\n  }", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Offsets.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equals"]}, "repository": {"repo_id": 6290993, "url": "https://github.com/apache/crunch", "language": "Java", "is_fork": false, "fork_count": 83, "stargazer_count": 99, "size": 7604, "license": "licensed"}}