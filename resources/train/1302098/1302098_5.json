{"test_class": {"identifier": "URISupportTest", "superclass": "", "interfaces": "", "fields": [], "file": "apollo-util/src/test/scala/org/apache/activemq/apollo/util/URISupportTest.java"}, "test_case": {"identifier": "testParsingCompositeURI", "parameters": "()", "modifiers": "@Test() public", "return": "void", "body": "@Test()\n\tpublic void testParsingCompositeURI() throws URISyntaxException {\n        URISupport.parseComposite(new URI(\"broker://(tcp://localhost:61616)?name=foo\"));\n    }", "signature": "void testParsingCompositeURI()", "full_signature": "@Test() public void testParsingCompositeURI()", "class_method_signature": "URISupportTest.testParsingCompositeURI()", "testcase": true, "constructor": false, "invocations": ["parseComposite"]}, "focal_class": {"identifier": "URISupport", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "parseQuery", "parameters": "(String uri)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> parseQuery(String uri)", "full_signature": "public static Map<String, String> parseQuery(String uri)", "class_method_signature": "URISupport.parseQuery(String uri)", "testcase": false, "constructor": false}, {"identifier": "parseParamters", "parameters": "(URI uri)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> parseParamters(URI uri)", "full_signature": "public static Map<String, String> parseParamters(URI uri)", "class_method_signature": "URISupport.parseParamters(URI uri)", "testcase": false, "constructor": false}, {"identifier": "emptyMap", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") private static", "return": "Map<String, String>", "signature": "Map<String, String> emptyMap()", "full_signature": "@SuppressWarnings(\"unchecked\") private static Map<String, String> emptyMap()", "class_method_signature": "URISupport.emptyMap()", "testcase": false, "constructor": false}, {"identifier": "removeQuery", "parameters": "(URI uri)", "modifiers": "public static", "return": "URI", "signature": "URI removeQuery(URI uri)", "full_signature": "public static URI removeQuery(URI uri)", "class_method_signature": "URISupport.removeQuery(URI uri)", "testcase": false, "constructor": false}, {"identifier": "createURIWithQuery", "parameters": "(URI uri, String query)", "modifiers": "public static", "return": "URI", "signature": "URI createURIWithQuery(URI uri, String query)", "full_signature": "public static URI createURIWithQuery(URI uri, String query)", "class_method_signature": "URISupport.createURIWithQuery(URI uri, String query)", "testcase": false, "constructor": false}, {"identifier": "parseComposite", "parameters": "(URI uri)", "modifiers": "public static", "return": "CompositeData", "signature": "CompositeData parseComposite(URI uri)", "full_signature": "public static CompositeData parseComposite(URI uri)", "class_method_signature": "URISupport.parseComposite(URI uri)", "testcase": false, "constructor": false}, {"identifier": "parseComposite", "parameters": "(URI uri, CompositeData rc, String ssp)", "modifiers": "private static", "return": "void", "signature": "void parseComposite(URI uri, CompositeData rc, String ssp)", "full_signature": "private static void parseComposite(URI uri, CompositeData rc, String ssp)", "class_method_signature": "URISupport.parseComposite(URI uri, CompositeData rc, String ssp)", "testcase": false, "constructor": false}, {"identifier": "splitComponents", "parameters": "(String str)", "modifiers": "private static", "return": "String[]", "signature": "String[] splitComponents(String str)", "full_signature": "private static String[] splitComponents(String str)", "class_method_signature": "URISupport.splitComponents(String str)", "testcase": false, "constructor": false}, {"identifier": "stripPrefix", "parameters": "(String value, String prefix)", "modifiers": "public static", "return": "String", "signature": "String stripPrefix(String value, String prefix)", "full_signature": "public static String stripPrefix(String value, String prefix)", "class_method_signature": "URISupport.stripPrefix(String value, String prefix)", "testcase": false, "constructor": false}, {"identifier": "stripScheme", "parameters": "(URI uri)", "modifiers": "public static", "return": "URI", "signature": "URI stripScheme(URI uri)", "full_signature": "public static URI stripScheme(URI uri)", "class_method_signature": "URISupport.stripScheme(URI uri)", "testcase": false, "constructor": false}, {"identifier": "createQueryString", "parameters": "(Map options)", "modifiers": "public static", "return": "String", "signature": "String createQueryString(Map options)", "full_signature": "public static String createQueryString(Map options)", "class_method_signature": "URISupport.createQueryString(Map options)", "testcase": false, "constructor": false}, {"identifier": "createRemainingURI", "parameters": "(URI originalURI, Map params)", "modifiers": "public static", "return": "URI", "signature": "URI createRemainingURI(URI originalURI, Map params)", "full_signature": "public static URI createRemainingURI(URI originalURI, Map params)", "class_method_signature": "URISupport.createRemainingURI(URI originalURI, Map params)", "testcase": false, "constructor": false}, {"identifier": "changeScheme", "parameters": "(URI bindAddr, String scheme)", "modifiers": "public static", "return": "URI", "signature": "URI changeScheme(URI bindAddr, String scheme)", "full_signature": "public static URI changeScheme(URI bindAddr, String scheme)", "class_method_signature": "URISupport.changeScheme(URI bindAddr, String scheme)", "testcase": false, "constructor": false}, {"identifier": "checkParenthesis", "parameters": "(String str)", "modifiers": "public static", "return": "boolean", "signature": "boolean checkParenthesis(String str)", "full_signature": "public static boolean checkParenthesis(String str)", "class_method_signature": "URISupport.checkParenthesis(String str)", "testcase": false, "constructor": false}, {"identifier": "indexOfParenthesisMatch", "parameters": "(String str)", "modifiers": "public", "return": "int", "signature": "int indexOfParenthesisMatch(String str)", "full_signature": "public int indexOfParenthesisMatch(String str)", "class_method_signature": "URISupport.indexOfParenthesisMatch(String str)", "testcase": false, "constructor": false}], "file": "apollo-util/src/main/scala/org/apache/activemq/apollo/util/URISupport.java"}, "focal_method": {"identifier": "parseComposite", "parameters": "(URI uri)", "modifiers": "public static", "return": "CompositeData", "body": "public static CompositeData parseComposite(URI uri) throws URISyntaxException {\n\n        CompositeData rc = new CompositeData();\n        rc.scheme = uri.getScheme();\n        String ssp = stripPrefix(uri.getSchemeSpecificPart().trim(), \"//\").trim();\n\n        parseComposite(uri, rc, ssp);\n\n        rc.fragment = uri.getFragment();\n        return rc;\n    }", "signature": "CompositeData parseComposite(URI uri)", "full_signature": "public static CompositeData parseComposite(URI uri)", "class_method_signature": "URISupport.parseComposite(URI uri)", "testcase": false, "constructor": false, "invocations": ["getScheme", "trim", "stripPrefix", "trim", "getSchemeSpecificPart", "parseComposite", "getFragment"]}, "repository": {"repo_id": 1302098, "url": "https://github.com/apache/activemq-apollo", "language": "Java", "is_fork": false, "fork_count": 70, "stargazer_count": 138, "size": 11124, "license": "licensed"}}