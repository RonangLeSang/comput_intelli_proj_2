{"test_class": {"identifier": "CustomUrlRequestTest", "superclass": "", "interfaces": "", "fields": [], "file": "gpslogger/src/test/java/com/mendhak/gpslogger/loggers/customurl/CustomUrlRequestTest.java"}, "test_case": {"identifier": "getHeadersFromTextBlock_MultipleHeaders", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getHeadersFromTextBlock_MultipleHeaders(){\n        String headers = \"Content-Type: application/json\\nAuthorization: Basic 123984234=\\nApiToken: 12346\";\n        HashMap<String,String> expectedMap = new HashMap<>();\n        expectedMap.put(\"Content-Type\", \"application/json\");\n        expectedMap.put(\"Authorization\", \"Basic 123984234=\");\n        expectedMap.put(\"ApiToken\", \"12346\");\n\n        CustomUrlRequest cur = new CustomUrlRequest(\"http://example.com\", \"GET\", \"\", headers, \"\",\"\");\n\n        assertThat(\"Headers map created from text block\", cur.getHttpHeaders(), is(expectedMap));\n    }", "signature": "void getHeadersFromTextBlock_MultipleHeaders()", "full_signature": "@Test public void getHeadersFromTextBlock_MultipleHeaders()", "class_method_signature": "CustomUrlRequestTest.getHeadersFromTextBlock_MultipleHeaders()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "assertThat", "getHttpHeaders", "is"]}, "focal_class": {"identifier": "CustomUrlRequest", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private HashMap<String, String> httpHeaders = new HashMap<String, String>();", "modifier": "private", "type": "HashMap<String, String>", "declarator": "httpHeaders = new HashMap<String, String>()", "var_name": "httpHeaders"}, {"original_string": "private String logURL;", "modifier": "private", "type": "String", "declarator": "logURL", "var_name": "logURL"}, {"original_string": "private String httpMethod;", "modifier": "private", "type": "String", "declarator": "httpMethod", "var_name": "httpMethod"}, {"original_string": "private String httpBody;", "modifier": "private", "type": "String", "declarator": "httpBody", "var_name": "httpBody"}, {"original_string": "private String rawHeaders;", "modifier": "private", "type": "String", "declarator": "rawHeaders", "var_name": "rawHeaders"}], "methods": [{"identifier": "CustomUrlRequest", "parameters": "(String logUrl, String httpMethod)", "modifiers": "public", "return": "", "signature": " CustomUrlRequest(String logUrl, String httpMethod)", "full_signature": "public  CustomUrlRequest(String logUrl, String httpMethod)", "class_method_signature": "CustomUrlRequest.CustomUrlRequest(String logUrl, String httpMethod)", "testcase": false, "constructor": true}, {"identifier": "CustomUrlRequest", "parameters": "(String logUrl)", "modifiers": "public", "return": "", "signature": " CustomUrlRequest(String logUrl)", "full_signature": "public  CustomUrlRequest(String logUrl)", "class_method_signature": "CustomUrlRequest.CustomUrlRequest(String logUrl)", "testcase": false, "constructor": true}, {"identifier": "CustomUrlRequest", "parameters": "(String logURL, String httpMethod, String httpBody, String rawHeaders, String basicAuthUsername, String basicauthPassword)", "modifiers": "public", "return": "", "signature": " CustomUrlRequest(String logURL, String httpMethod, String httpBody, String rawHeaders, String basicAuthUsername, String basicauthPassword)", "full_signature": "public  CustomUrlRequest(String logURL, String httpMethod, String httpBody, String rawHeaders, String basicAuthUsername, String basicauthPassword)", "class_method_signature": "CustomUrlRequest.CustomUrlRequest(String logURL, String httpMethod, String httpBody, String rawHeaders, String basicAuthUsername, String basicauthPassword)", "testcase": false, "constructor": true}, {"identifier": "getHeadersFromTextBlock", "parameters": "(String rawHeaders)", "modifiers": "private", "return": "Map<String,String>", "signature": "Map<String,String> getHeadersFromTextBlock(String rawHeaders)", "full_signature": "private Map<String,String> getHeadersFromTextBlock(String rawHeaders)", "class_method_signature": "CustomUrlRequest.getHeadersFromTextBlock(String rawHeaders)", "testcase": false, "constructor": false}, {"identifier": "addAuthorizationHeader", "parameters": "(Pair<String, String> creds)", "modifiers": "private", "return": "void", "signature": "void addAuthorizationHeader(Pair<String, String> creds)", "full_signature": "private void addAuthorizationHeader(Pair<String, String> creds)", "class_method_signature": "CustomUrlRequest.addAuthorizationHeader(Pair<String, String> creds)", "testcase": false, "constructor": false}, {"identifier": "removeCredentialsFromUrl", "parameters": "(Pair<String, String> creds)", "modifiers": "private", "return": "void", "signature": "void removeCredentialsFromUrl(Pair<String, String> creds)", "full_signature": "private void removeCredentialsFromUrl(Pair<String, String> creds)", "class_method_signature": "CustomUrlRequest.removeCredentialsFromUrl(Pair<String, String> creds)", "testcase": false, "constructor": false}, {"identifier": "getBasicAuthCredentialsFromUrl", "parameters": "(String logURL)", "modifiers": "private", "return": "Pair<String, String>", "signature": "Pair<String, String> getBasicAuthCredentialsFromUrl(String logURL)", "full_signature": "private Pair<String, String> getBasicAuthCredentialsFromUrl(String logURL)", "class_method_signature": "CustomUrlRequest.getBasicAuthCredentialsFromUrl(String logURL)", "testcase": false, "constructor": false}, {"identifier": "getHttpMethod", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getHttpMethod()", "full_signature": " String getHttpMethod()", "class_method_signature": "CustomUrlRequest.getHttpMethod()", "testcase": false, "constructor": false}, {"identifier": "getLogURL", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getLogURL()", "full_signature": " String getLogURL()", "class_method_signature": "CustomUrlRequest.getLogURL()", "testcase": false, "constructor": false}, {"identifier": "getHttpHeaders", "parameters": "()", "modifiers": "", "return": "HashMap<String, String>", "signature": "HashMap<String, String> getHttpHeaders()", "full_signature": " HashMap<String, String> getHttpHeaders()", "class_method_signature": "CustomUrlRequest.getHttpHeaders()", "testcase": false, "constructor": false}, {"identifier": "getHttpBody", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getHttpBody()", "full_signature": " String getHttpBody()", "class_method_signature": "CustomUrlRequest.getHttpBody()", "testcase": false, "constructor": false}], "file": "gpslogger/src/main/java/com/mendhak/gpslogger/loggers/customurl/CustomUrlRequest.java"}, "focal_method": {"identifier": "getHttpHeaders", "parameters": "()", "modifiers": "", "return": "HashMap<String, String>", "body": "HashMap<String, String> getHttpHeaders(){\n        return this.httpHeaders;\n    }", "signature": "HashMap<String, String> getHttpHeaders()", "full_signature": " HashMap<String, String> getHttpHeaders()", "class_method_signature": "CustomUrlRequest.getHttpHeaders()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1925457, "url": "https://github.com/mendhak/gpslogger", "language": "Java", "is_fork": false, "fork_count": 502, "stargazer_count": 1195, "size": 23203, "license": "licensed"}}