{"test_class": {"identifier": "UpdateTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final File schema = new File(TestHelper.getTestFolder(), \"update-schema.xml\");", "modifier": "protected static final", "type": "File", "declarator": "schema = new File(TestHelper.getTestFolder(), \"update-schema.xml\")", "var_name": "schema"}, {"original_string": "protected static final File serialize = new File(TestHelper.getTestFolder(), \"update-serialize.xml\");", "modifier": "protected static final", "type": "File", "declarator": "serialize = new File(TestHelper.getTestFolder(), \"update-serialize.xml\")", "var_name": "serialize"}], "file": "maps4cim-core/src/test/java/de/nx42/maps4cim/update/UpdateTest.java"}, "test_case": {"identifier": "deserializeTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void deserializeTest() {\n        try {\n            Update u = Serializer.deserialize(Update.class, serialize, schema);\n            assertNotNull(u.getStable().version);\n        } catch (Exception e) {\n            fail(\"deserialization failed: \" + e);\n        }\n    }", "signature": "void deserializeTest()", "full_signature": "@Test public void deserializeTest()", "class_method_signature": "UpdateTest.deserializeTest()", "testcase": true, "constructor": false, "invocations": ["deserialize", "assertNotNull", "getStable", "fail"]}, "focal_class": {"identifier": "Update", "superclass": "", "interfaces": "", "fields": [{"original_string": "@XmlElementWrapper(name = \"releases\")\n    @XmlElement(name = \"release\")\n    public List<Release> releases;", "modifier": "@XmlElementWrapper(name = \"releases\")\n    @XmlElement(name = \"release\")\n    public", "type": "List<Release>", "declarator": "releases", "var_name": "releases"}, {"original_string": "@XmlElementWrapper(name = \"notifications\")\n    @XmlElement(name = \"notification\")\n    public List<Notification> notifications;", "modifier": "@XmlElementWrapper(name = \"notifications\")\n    @XmlElement(name = \"notification\")\n    public", "type": "List<Notification>", "declarator": "notifications", "var_name": "notifications"}, {"original_string": "@XmlElement(name = \"lastUpdate\")\n    public Date lastUpdate;", "modifier": "@XmlElement(name = \"lastUpdate\")\n    public", "type": "Date", "declarator": "lastUpdate", "var_name": "lastUpdate"}], "methods": [{"identifier": "getStable", "parameters": "()", "modifiers": "public", "return": "Release", "signature": "Release getStable()", "full_signature": "public Release getStable()", "class_method_signature": "Update.getStable()", "testcase": false, "constructor": false}, {"identifier": "getTesting", "parameters": "()", "modifiers": "public", "return": "Release", "signature": "Release getTesting()", "full_signature": "public Release getTesting()", "class_method_signature": "Update.getTesting()", "testcase": false, "constructor": false}, {"identifier": "getBranch", "parameters": "(Branch branch)", "modifiers": "public", "return": "Release", "signature": "Release getBranch(Branch branch)", "full_signature": "public Release getBranch(Branch branch)", "class_method_signature": "Update.getBranch(Branch branch)", "testcase": false, "constructor": false}, {"identifier": "getBranch", "parameters": "(String branch)", "modifiers": "public", "return": "Release", "signature": "Release getBranch(String branch)", "full_signature": "public Release getBranch(String branch)", "class_method_signature": "Update.getBranch(String branch)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Update.toString()", "testcase": false, "constructor": false}], "file": "maps4cim-core/src/main/java/de/nx42/maps4cim/update/Update.java"}, "focal_method": {"identifier": "getStable", "parameters": "()", "modifiers": "public", "return": "Release", "body": "public Release getStable() {\n        return getBranch(Branch.stable);\n    }", "signature": "Release getStable()", "full_signature": "public Release getStable()", "class_method_signature": "Update.getStable()", "testcase": false, "constructor": false, "invocations": ["getBranch"]}, "repository": {"repo_id": 11799054, "url": "https://github.com/klamann/maps4cim", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 1724, "license": "licensed"}}