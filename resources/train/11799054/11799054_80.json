{"test_class": {"identifier": "OsmHashTest", "superclass": "", "interfaces": "", "fields": [], "file": "maps4cim-core/src/test/java/de/nx42/maps4cim/map/texture/osm/OsmHashTest.java"}, "test_case": {"identifier": "testOsmHash", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOsmHash() throws Exception {\n        Area ar = new Area(48, 11, 49, 12);\n        OsmHash h = new OsmHash(ar);\n        \n        String expected = \"IcAInQB7wCHA-all\";\n        String actual = h.getQueryHash();\n        assertEquals(expected, actual);\n    }", "signature": "void testOsmHash()", "full_signature": "@Test public void testOsmHash()", "class_method_signature": "OsmHashTest.testOsmHash()", "testcase": true, "constructor": false, "invocations": ["getQueryHash", "assertEquals"]}, "focal_class": {"identifier": "OsmHash", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final HashFunction hf = Hashing.md5();", "modifier": "protected static final", "type": "HashFunction", "declarator": "hf = Hashing.md5()", "var_name": "hf"}, {"original_string": "protected static final Cache cache = new Cache();", "modifier": "protected static final", "type": "Cache", "declarator": "cache = new Cache()", "var_name": "cache"}, {"original_string": "protected static final int locationPrecision = 18;", "modifier": "protected static final", "type": "int", "declarator": "locationPrecision = 18", "var_name": "locationPrecision"}, {"original_string": "protected static final double locationMulti = 720;", "modifier": "protected static final", "type": "double", "declarator": "locationMulti = 720", "var_name": "locationMulti"}, {"original_string": "protected final String locationHash;", "modifier": "protected final", "type": "String", "declarator": "locationHash", "var_name": "locationHash"}, {"original_string": "protected final String entityHash;", "modifier": "protected final", "type": "String", "declarator": "entityHash", "var_name": "entityHash"}, {"original_string": "protected final boolean fullDataSet;", "modifier": "protected final", "type": "boolean", "declarator": "fullDataSet", "var_name": "fullDataSet"}, {"original_string": "protected final String queryHash;", "modifier": "protected final", "type": "String", "declarator": "queryHash", "var_name": "queryHash"}], "methods": [{"identifier": "OsmHash", "parameters": "(Area bounds, List<EntityDef> entities, boolean fullDataSet)", "modifiers": "public", "return": "", "signature": " OsmHash(Area bounds, List<EntityDef> entities, boolean fullDataSet)", "full_signature": "public  OsmHash(Area bounds, List<EntityDef> entities, boolean fullDataSet)", "class_method_signature": "OsmHash.OsmHash(Area bounds, List<EntityDef> entities, boolean fullDataSet)", "testcase": false, "constructor": true}, {"identifier": "OsmHash", "parameters": "(Area bounds, List<EntityDef> entities)", "modifiers": "public", "return": "", "signature": " OsmHash(Area bounds, List<EntityDef> entities)", "full_signature": "public  OsmHash(Area bounds, List<EntityDef> entities)", "class_method_signature": "OsmHash.OsmHash(Area bounds, List<EntityDef> entities)", "testcase": false, "constructor": true}, {"identifier": "OsmHash", "parameters": "(Area bounds)", "modifiers": "public", "return": "", "signature": " OsmHash(Area bounds)", "full_signature": "public  OsmHash(Area bounds)", "class_method_signature": "OsmHash.OsmHash(Area bounds)", "testcase": false, "constructor": true}, {"identifier": "getQueryHash", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getQueryHash()", "full_signature": "public String getQueryHash()", "class_method_signature": "OsmHash.getQueryHash()", "testcase": false, "constructor": false}, {"identifier": "hasFullDataSet", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasFullDataSet()", "full_signature": "public boolean hasFullDataSet()", "class_method_signature": "OsmHash.hasFullDataSet()", "testcase": false, "constructor": false}, {"identifier": "getHashedLocation", "parameters": "()", "modifiers": "public", "return": "Area", "signature": "Area getHashedLocation()", "full_signature": "public Area getHashedLocation()", "class_method_signature": "OsmHash.getHashedLocation()", "testcase": false, "constructor": false}, {"identifier": "getQueryHashLocation", "parameters": "(Area bounds)", "modifiers": "protected static", "return": "String", "signature": "String getQueryHashLocation(Area bounds)", "full_signature": "protected static String getQueryHashLocation(Area bounds)", "class_method_signature": "OsmHash.getQueryHashLocation(Area bounds)", "testcase": false, "constructor": false}, {"identifier": "parseLocationHash", "parameters": "(String locationHash)", "modifiers": "protected static", "return": "Area", "signature": "Area parseLocationHash(String locationHash)", "full_signature": "protected static Area parseLocationHash(String locationHash)", "class_method_signature": "OsmHash.parseLocationHash(String locationHash)", "testcase": false, "constructor": false}, {"identifier": "storeCoordinate", "parameters": "(double coordinate, BitOutput out)", "modifiers": "protected static", "return": "void", "signature": "void storeCoordinate(double coordinate, BitOutput out)", "full_signature": "protected static void storeCoordinate(double coordinate, BitOutput out)", "class_method_signature": "OsmHash.storeCoordinate(double coordinate, BitOutput out)", "testcase": false, "constructor": false}, {"identifier": "restoreCoordinate", "parameters": "(BitInput in)", "modifiers": "protected static", "return": "double", "signature": "double restoreCoordinate(BitInput in)", "full_signature": "protected static double restoreCoordinate(BitInput in)", "class_method_signature": "OsmHash.restoreCoordinate(BitInput in)", "testcase": false, "constructor": false}, {"identifier": "getQueryHashEntities", "parameters": "(List<EntityDef> entities)", "modifiers": "protected static", "return": "String", "signature": "String getQueryHashEntities(List<EntityDef> entities)", "full_signature": "protected static String getQueryHashEntities(List<EntityDef> entities)", "class_method_signature": "OsmHash.getQueryHashEntities(List<EntityDef> entities)", "testcase": false, "constructor": false}, {"identifier": "isCached", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCached()", "full_signature": "public boolean isCached()", "class_method_signature": "OsmHash.isCached()", "testcase": false, "constructor": false}, {"identifier": "getCached", "parameters": "()", "modifiers": "protected", "return": "File", "signature": "File getCached()", "full_signature": "protected File getCached()", "class_method_signature": "OsmHash.getCached()", "testcase": false, "constructor": false}, {"identifier": "getXmlFileName", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getXmlFileName()", "full_signature": "protected String getXmlFileName()", "class_method_signature": "OsmHash.getXmlFileName()", "testcase": false, "constructor": false}, {"identifier": "storeInCache", "parameters": "(File xml)", "modifiers": "protected", "return": "void", "signature": "void storeInCache(File xml)", "full_signature": "protected void storeInCache(File xml)", "class_method_signature": "OsmHash.storeInCache(File xml)", "testcase": false, "constructor": false}, {"identifier": "getXmlFileName", "parameters": "(String hash)", "modifiers": "protected static", "return": "String", "signature": "String getXmlFileName(String hash)", "full_signature": "protected static String getXmlFileName(String hash)", "class_method_signature": "OsmHash.getXmlFileName(String hash)", "testcase": false, "constructor": false}, {"identifier": "getCacheFileName", "parameters": "(String hash)", "modifiers": "protected static", "return": "String", "signature": "String getCacheFileName(String hash)", "full_signature": "protected static String getCacheFileName(String hash)", "class_method_signature": "OsmHash.getCacheFileName(String hash)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "OsmHash.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "OsmHash.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "OsmHash.toString()", "testcase": false, "constructor": false}], "file": "maps4cim-core/src/main/java/de/nx42/maps4cim/map/texture/osm/OsmHash.java"}, "focal_method": {"identifier": "OsmHash", "parameters": "(Area bounds, List<EntityDef> entities, boolean fullDataSet)", "modifiers": "public", "return": "", "body": "public OsmHash(Area bounds, List<EntityDef> entities, boolean fullDataSet) throws TextureProcessingException {\n        this.fullDataSet = fullDataSet;\n        this.entityHash = fullDataSet ? \"all\" : getQueryHashEntities(entities);\n        try {\n            this.locationHash = getQueryHashLocation(bounds);\n            this.queryHash = locationHash + \"-\" + entityHash;\n        } catch(IOException e) {\n            throw new TextureProcessingException(\"Unexpected Exception: Could not generate hash for this location\", e);\n        }\n    }", "signature": " OsmHash(Area bounds, List<EntityDef> entities, boolean fullDataSet)", "full_signature": "public  OsmHash(Area bounds, List<EntityDef> entities, boolean fullDataSet)", "class_method_signature": "OsmHash.OsmHash(Area bounds, List<EntityDef> entities, boolean fullDataSet)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 11799054, "url": "https://github.com/klamann/maps4cim", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 1724, "license": "licensed"}}