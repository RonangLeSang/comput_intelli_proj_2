{"test_class": {"identifier": "UpdateCenterDeserializerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}], "file": "sonar-update-center-common/src/test/java/org/sonar/updatecenter/common/UpdateCenterDeserializerTest.java"}, "test_case": {"identifier": "should_parse_lts", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void should_parse_lts() throws IOException {\n    try (InputStream input = getClass().getResourceAsStream(\"/org/sonar/updatecenter/common/UpdateCenterDeserializerTest/sonar-lts.properties\")) {\n      Properties props = new Properties();\n      props.load(input);\n      UpdateCenter center = new UpdateCenterDeserializer(Mode.PROD, false).fromProperties(props);\n      assertThat(center.getSonar().getLtsRelease().getVersion()).isEqualTo(Version.create(\"2.3\"));\n    }\n  }", "signature": "void should_parse_lts()", "full_signature": "@Test public void should_parse_lts()", "class_method_signature": "UpdateCenterDeserializerTest.should_parse_lts()", "testcase": true, "constructor": false, "invocations": ["getResourceAsStream", "getClass", "load", "fromProperties", "isEqualTo", "assertThat", "getVersion", "getLtsRelease", "getSonar", "create"]}, "focal_class": {"identifier": "UpdateCenterDeserializer", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String DATE_SUFFIX = \".date\";", "modifier": "public static final", "type": "String", "declarator": "DATE_SUFFIX = \".date\"", "var_name": "DATE_SUFFIX"}, {"original_string": "public static final String DESCRIPTION_SUFFIX = \".description\";", "modifier": "public static final", "type": "String", "declarator": "DESCRIPTION_SUFFIX = \".description\"", "var_name": "DESCRIPTION_SUFFIX"}, {"original_string": "public static final String MAVEN_GROUPID_SUFFIX = \".mavenGroupId\";", "modifier": "public static final", "type": "String", "declarator": "MAVEN_GROUPID_SUFFIX = \".mavenGroupId\"", "var_name": "MAVEN_GROUPID_SUFFIX"}, {"original_string": "public static final String MAVEN_ARTIFACTID_SUFFIX = \".mavenArtifactId\";", "modifier": "public static final", "type": "String", "declarator": "MAVEN_ARTIFACTID_SUFFIX = \".mavenArtifactId\"", "var_name": "MAVEN_ARTIFACTID_SUFFIX"}, {"original_string": "public static final String CHANGELOG_URL_SUFFIX = \".changelogUrl\";", "modifier": "public static final", "type": "String", "declarator": "CHANGELOG_URL_SUFFIX = \".changelogUrl\"", "var_name": "CHANGELOG_URL_SUFFIX"}, {"original_string": "public static final String DOWNLOAD_URL_SUFFIX = \".downloadUrl\";", "modifier": "public static final", "type": "String", "declarator": "DOWNLOAD_URL_SUFFIX = \".downloadUrl\"", "var_name": "DOWNLOAD_URL_SUFFIX"}, {"original_string": "public static final String DOWNLOAD_DEVELOPER_URL_SUFFIX = \".downloadDeveloperUrl\";", "modifier": "public static final", "type": "String", "declarator": "DOWNLOAD_DEVELOPER_URL_SUFFIX = \".downloadDeveloperUrl\"", "var_name": "DOWNLOAD_DEVELOPER_URL_SUFFIX"}, {"original_string": "public static final String DOWNLOAD_ENTERPRISE_URL_SUFFIX = \".downloadEnterpriseUrl\";", "modifier": "public static final", "type": "String", "declarator": "DOWNLOAD_ENTERPRISE_URL_SUFFIX = \".downloadEnterpriseUrl\"", "var_name": "DOWNLOAD_ENTERPRISE_URL_SUFFIX"}, {"original_string": "public static final String DOWNLOAD_DATACENTER_URL_SUFFIX = \".downloadDatacenterUrl\";", "modifier": "public static final", "type": "String", "declarator": "DOWNLOAD_DATACENTER_URL_SUFFIX = \".downloadDatacenterUrl\"", "var_name": "DOWNLOAD_DATACENTER_URL_SUFFIX"}, {"original_string": "public static final String DISPLAY_VERSION_SUFFIX = \".displayVersion\";", "modifier": "public static final", "type": "String", "declarator": "DISPLAY_VERSION_SUFFIX = \".displayVersion\"", "var_name": "DISPLAY_VERSION_SUFFIX"}, {"original_string": "public static final String SONAR_PREFIX = \"sonar.\";", "modifier": "public static final", "type": "String", "declarator": "SONAR_PREFIX = \"sonar.\"", "var_name": "SONAR_PREFIX"}, {"original_string": "public static final String DEFAULTS_PREFIX = \"defaults\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULTS_PREFIX = \"defaults\"", "var_name": "DEFAULTS_PREFIX"}, {"original_string": "public static final String PLUGINS = \"plugins\";", "modifier": "public static final", "type": "String", "declarator": "PLUGINS = \"plugins\"", "var_name": "PLUGINS"}, {"original_string": "public static final String SCANNERS = \"scanners\";", "modifier": "public static final", "type": "String", "declarator": "SCANNERS = \"scanners\"", "var_name": "SCANNERS"}, {"original_string": "private static final String PUBLIC_VERSIONS = \"publicVersions\";", "modifier": "private static final", "type": "String", "declarator": "PUBLIC_VERSIONS = \"publicVersions\"", "var_name": "PUBLIC_VERSIONS"}, {"original_string": "private static final String PRIVATE_VERSIONS = \"privateVersions\";", "modifier": "private static final", "type": "String", "declarator": "PRIVATE_VERSIONS = \"privateVersions\"", "var_name": "PRIVATE_VERSIONS"}, {"original_string": "private static final String ARCHIVED_VERSIONS = \"archivedVersions\";", "modifier": "private static final", "type": "String", "declarator": "ARCHIVED_VERSIONS = \"archivedVersions\"", "var_name": "ARCHIVED_VERSIONS"}, {"original_string": "private static final String DEV_VERSION = \"devVersion\";", "modifier": "private static final", "type": "String", "declarator": "DEV_VERSION = \"devVersion\"", "var_name": "DEV_VERSION"}, {"original_string": "private static final String LATEST_KEYWORD = \"LATEST\";", "modifier": "private static final", "type": "String", "declarator": "LATEST_KEYWORD = \"LATEST\"", "var_name": "LATEST_KEYWORD"}, {"original_string": "private static final String FLAVORS_PREFIX = \"flavors\";", "modifier": "private static final", "type": "String", "declarator": "FLAVORS_PREFIX = \"flavors\"", "var_name": "FLAVORS_PREFIX"}, {"original_string": "private Mode mode;", "modifier": "private", "type": "Mode", "declarator": "mode", "var_name": "mode"}, {"original_string": "private boolean ignoreError;", "modifier": "private", "type": "boolean", "declarator": "ignoreError", "var_name": "ignoreError"}, {"original_string": "private boolean includeArchives;", "modifier": "private", "type": "boolean", "declarator": "includeArchives", "var_name": "includeArchives"}], "methods": [{"identifier": "UpdateCenterDeserializer", "parameters": "(Mode mode, boolean ignoreError)", "modifiers": "public", "return": "", "signature": " UpdateCenterDeserializer(Mode mode, boolean ignoreError)", "full_signature": "public  UpdateCenterDeserializer(Mode mode, boolean ignoreError)", "class_method_signature": "UpdateCenterDeserializer.UpdateCenterDeserializer(Mode mode, boolean ignoreError)", "testcase": false, "constructor": true}, {"identifier": "UpdateCenterDeserializer", "parameters": "(Mode mode, boolean ignoreError, boolean includeArchives)", "modifiers": "public", "return": "", "signature": " UpdateCenterDeserializer(Mode mode, boolean ignoreError, boolean includeArchives)", "full_signature": "public  UpdateCenterDeserializer(Mode mode, boolean ignoreError, boolean includeArchives)", "class_method_signature": "UpdateCenterDeserializer.UpdateCenterDeserializer(Mode mode, boolean ignoreError, boolean includeArchives)", "testcase": false, "constructor": true}, {"identifier": "getDownloadUrlSuffix", "parameters": "(Release.Edition edition)", "modifiers": "public static", "return": "String", "signature": "String getDownloadUrlSuffix(Release.Edition edition)", "full_signature": "public static String getDownloadUrlSuffix(Release.Edition edition)", "class_method_signature": "UpdateCenterDeserializer.getDownloadUrlSuffix(Release.Edition edition)", "testcase": false, "constructor": false}, {"identifier": "fromManyFiles", "parameters": "(File mainFile)", "modifiers": "public", "return": "UpdateCenter", "signature": "UpdateCenter fromManyFiles(File mainFile)", "full_signature": "public UpdateCenter fromManyFiles(File mainFile)", "class_method_signature": "UpdateCenterDeserializer.fromManyFiles(File mainFile)", "testcase": false, "constructor": false}, {"identifier": "loadProperties", "parameters": "(File file, Properties props, String listKey)", "modifiers": "private static", "return": "void", "signature": "void loadProperties(File file, Properties props, String listKey)", "full_signature": "private static void loadProperties(File file, Properties props, String listKey)", "class_method_signature": "UpdateCenterDeserializer.loadProperties(File file, Properties props, String listKey)", "testcase": false, "constructor": false}, {"identifier": "fromProperties", "parameters": "(Properties p)", "modifiers": "public", "return": "UpdateCenter", "signature": "UpdateCenter fromProperties(Properties p)", "full_signature": "public UpdateCenter fromProperties(Properties p)", "class_method_signature": "UpdateCenterDeserializer.fromProperties(Properties p)", "testcase": false, "constructor": false}, {"identifier": "reportError", "parameters": "(String message)", "modifiers": "private", "return": "void", "signature": "void reportError(String message)", "full_signature": "private void reportError(String message)", "class_method_signature": "UpdateCenterDeserializer.reportError(String message)", "testcase": false, "constructor": false}, {"identifier": "validatePublicPluginSQVersionOverlap", "parameters": "(List<Plugin> plugins)", "modifiers": "private", "return": "void", "signature": "void validatePublicPluginSQVersionOverlap(List<Plugin> plugins)", "full_signature": "private void validatePublicPluginSQVersionOverlap(List<Plugin> plugins)", "class_method_signature": "UpdateCenterDeserializer.validatePublicPluginSQVersionOverlap(List<Plugin> plugins)", "testcase": false, "constructor": false}, {"identifier": "validatePublicPluginSQVersionOverlap", "parameters": "(Plugin plugin)", "modifiers": "private", "return": "void", "signature": "void validatePublicPluginSQVersionOverlap(Plugin plugin)", "full_signature": "private void validatePublicPluginSQVersionOverlap(Plugin plugin)", "class_method_signature": "UpdateCenterDeserializer.validatePublicPluginSQVersionOverlap(Plugin plugin)", "testcase": false, "constructor": false}, {"identifier": "validateLATESTonLatestPluginVersion", "parameters": "(List<Plugin> plugins)", "modifiers": "private", "return": "void", "signature": "void validateLATESTonLatestPluginVersion(List<Plugin> plugins)", "full_signature": "private void validateLATESTonLatestPluginVersion(List<Plugin> plugins)", "class_method_signature": "UpdateCenterDeserializer.validateLATESTonLatestPluginVersion(List<Plugin> plugins)", "testcase": false, "constructor": false}, {"identifier": "pluginName", "parameters": "(Component component)", "modifiers": "private static", "return": "String", "signature": "String pluginName(Component component)", "full_signature": "private static String pluginName(Component component)", "class_method_signature": "UpdateCenterDeserializer.pluginName(Component component)", "testcase": false, "constructor": false}, {"identifier": "parseScanners", "parameters": "(Properties p, Sonar sonar, List<Scanner> scanners)", "modifiers": "private", "return": "void", "signature": "void parseScanners(Properties p, Sonar sonar, List<Scanner> scanners)", "full_signature": "private void parseScanners(Properties p, Sonar sonar, List<Scanner> scanners)", "class_method_signature": "UpdateCenterDeserializer.parseScanners(Properties p, Sonar sonar, List<Scanner> scanners)", "testcase": false, "constructor": false}, {"identifier": "parseComponent", "parameters": "(Properties p, Sonar sonar, String key, Component c)", "modifiers": "private", "return": "void", "signature": "void parseComponent(Properties p, Sonar sonar, String key, Component c)", "full_signature": "private void parseComponent(Properties p, Sonar sonar, String key, Component c)", "class_method_signature": "UpdateCenterDeserializer.parseComponent(Properties p, Sonar sonar, String key, Component c)", "testcase": false, "constructor": false}, {"identifier": "parsePlugins", "parameters": "(Properties p, Sonar sonar, List<Plugin> plugins)", "modifiers": "private", "return": "void", "signature": "void parsePlugins(Properties p, Sonar sonar, List<Plugin> plugins)", "full_signature": "private void parsePlugins(Properties p, Sonar sonar, List<Plugin> plugins)", "class_method_signature": "UpdateCenterDeserializer.parsePlugins(Properties p, Sonar sonar, List<Plugin> plugins)", "testcase": false, "constructor": false}, {"identifier": "parseReleases", "parameters": "(Properties p, Sonar sonar, String pluginKey, Component component, String key,\n    HashMap<String, Map.Entry<String, Integer>> flavosLabel, boolean isPublicRelease, boolean isArchivedRelease)", "modifiers": "private", "return": "void", "signature": "void parseReleases(Properties p, Sonar sonar, String pluginKey, Component component, String key,\n    HashMap<String, Map.Entry<String, Integer>> flavosLabel, boolean isPublicRelease, boolean isArchivedRelease)", "full_signature": "private void parseReleases(Properties p, Sonar sonar, String pluginKey, Component component, String key,\n    HashMap<String, Map.Entry<String, Integer>> flavosLabel, boolean isPublicRelease, boolean isArchivedRelease)", "class_method_signature": "UpdateCenterDeserializer.parseReleases(Properties p, Sonar sonar, String pluginKey, Component component, String key,\n    HashMap<String, Map.Entry<String, Integer>> flavosLabel, boolean isPublicRelease, boolean isArchivedRelease)", "testcase": false, "constructor": false}, {"identifier": "parseFlavors", "parameters": "(Properties p, String pluginKey, HashMap<String, Map.Entry<String, Integer>> flavosLabel)", "modifiers": "private", "return": "void", "signature": "void parseFlavors(Properties p, String pluginKey, HashMap<String, Map.Entry<String, Integer>> flavosLabel)", "full_signature": "private void parseFlavors(Properties p, String pluginKey, HashMap<String, Map.Entry<String, Integer>> flavosLabel)", "class_method_signature": "UpdateCenterDeserializer.parseFlavors(Properties p, String pluginKey, HashMap<String, Map.Entry<String, Integer>> flavosLabel)", "testcase": false, "constructor": false}, {"identifier": "parseRelease", "parameters": "(Properties p, Sonar sonar, String pluginKey, Component component,\n    boolean isPublicRelease, boolean isArchivedRelease, String pluginVersion, HashMap<String, Map.Entry<String, Integer>> flavosLabel)", "modifiers": "private", "return": "Release", "signature": "Release parseRelease(Properties p, Sonar sonar, String pluginKey, Component component,\n    boolean isPublicRelease, boolean isArchivedRelease, String pluginVersion, HashMap<String, Map.Entry<String, Integer>> flavosLabel)", "full_signature": "private Release parseRelease(Properties p, Sonar sonar, String pluginKey, Component component,\n    boolean isPublicRelease, boolean isArchivedRelease, String pluginVersion, HashMap<String, Map.Entry<String, Integer>> flavosLabel)", "class_method_signature": "UpdateCenterDeserializer.parseRelease(Properties p, Sonar sonar, String pluginKey, Component component,\n    boolean isPublicRelease, boolean isArchivedRelease, String pluginVersion, HashMap<String, Map.Entry<String, Integer>> flavosLabel)", "testcase": false, "constructor": false}, {"identifier": "parseDownloadUrl", "parameters": "(Properties p, String pluginKey, String pluginVersion, boolean isPublicRelease,\n    HashMap<String, Map.Entry<String, Integer>> flavorLabel, Release release)", "modifiers": "private", "return": "void", "signature": "void parseDownloadUrl(Properties p, String pluginKey, String pluginVersion, boolean isPublicRelease,\n    HashMap<String, Map.Entry<String, Integer>> flavorLabel, Release release)", "full_signature": "private void parseDownloadUrl(Properties p, String pluginKey, String pluginVersion, boolean isPublicRelease,\n    HashMap<String, Map.Entry<String, Integer>> flavorLabel, Release release)", "class_method_signature": "UpdateCenterDeserializer.parseDownloadUrl(Properties p, String pluginKey, String pluginVersion, boolean isPublicRelease,\n    HashMap<String, Map.Entry<String, Integer>> flavorLabel, Release release)", "testcase": false, "constructor": false}, {"identifier": "parseDevVersions", "parameters": "(Properties p, Sonar sonar, String pluginKey, Component component, HashMap<String, Map.Entry<String, Integer>> flavosLabel)", "modifiers": "private", "return": "void", "signature": "void parseDevVersions(Properties p, Sonar sonar, String pluginKey, Component component, HashMap<String, Map.Entry<String, Integer>> flavosLabel)", "full_signature": "private void parseDevVersions(Properties p, Sonar sonar, String pluginKey, Component component, HashMap<String, Map.Entry<String, Integer>> flavosLabel)", "class_method_signature": "UpdateCenterDeserializer.parseDevVersions(Properties p, Sonar sonar, String pluginKey, Component component, HashMap<String, Map.Entry<String, Integer>> flavosLabel)", "testcase": false, "constructor": false}, {"identifier": "parseSonar", "parameters": "(Properties p, Sonar sonar)", "modifiers": "private", "return": "void", "signature": "void parseSonar(Properties p, Sonar sonar)", "full_signature": "private void parseSonar(Properties p, Sonar sonar)", "class_method_signature": "UpdateCenterDeserializer.parseSonar(Properties p, Sonar sonar)", "testcase": false, "constructor": false}, {"identifier": "parseSonarDevVersions", "parameters": "(Properties p, Sonar sonar)", "modifiers": "private", "return": "void", "signature": "void parseSonarDevVersions(Properties p, Sonar sonar)", "full_signature": "private void parseSonarDevVersions(Properties p, Sonar sonar)", "class_method_signature": "UpdateCenterDeserializer.parseSonarDevVersions(Properties p, Sonar sonar)", "testcase": false, "constructor": false}, {"identifier": "parseSonarLtsVersion", "parameters": "(Properties p, Sonar sonar)", "modifiers": "private", "return": "void", "signature": "void parseSonarLtsVersion(Properties p, Sonar sonar)", "full_signature": "private void parseSonarLtsVersion(Properties p, Sonar sonar)", "class_method_signature": "UpdateCenterDeserializer.parseSonarLtsVersion(Properties p, Sonar sonar)", "testcase": false, "constructor": false}, {"identifier": "parseSonarVersions", "parameters": "(Properties p, Sonar sonar)", "modifiers": "private", "return": "void", "signature": "void parseSonarVersions(Properties p, Sonar sonar)", "full_signature": "private void parseSonarVersions(Properties p, Sonar sonar)", "class_method_signature": "UpdateCenterDeserializer.parseSonarVersions(Properties p, Sonar sonar)", "testcase": false, "constructor": false}, {"identifier": "parseSonarVersions", "parameters": "(Properties p, Sonar sonar, String key, boolean isPublicRelease)", "modifiers": "private", "return": "void", "signature": "void parseSonarVersions(Properties p, Sonar sonar, String key, boolean isPublicRelease)", "full_signature": "private void parseSonarVersions(Properties p, Sonar sonar, String key, boolean isPublicRelease)", "class_method_signature": "UpdateCenterDeserializer.parseSonarVersions(Properties p, Sonar sonar, String key, boolean isPublicRelease)", "testcase": false, "constructor": false}, {"identifier": "parseSonarVersion", "parameters": "(Properties p, Sonar sonar, boolean isPublicRelease, String sonarVersion)", "modifiers": "private", "return": "Release", "signature": "Release parseSonarVersion(Properties p, Sonar sonar, boolean isPublicRelease, String sonarVersion)", "full_signature": "private Release parseSonarVersion(Properties p, Sonar sonar, boolean isPublicRelease, String sonarVersion)", "class_method_signature": "UpdateCenterDeserializer.parseSonarVersion(Properties p, Sonar sonar, boolean isPublicRelease, String sonarVersion)", "testcase": false, "constructor": false}, {"identifier": "getRequiredSonarVersions", "parameters": "(Properties p, String pluginKey, String pluginVersion,\n    Sonar sonar, boolean isArchived)", "modifiers": "private", "return": "Version[]", "signature": "Version[] getRequiredSonarVersions(Properties p, String pluginKey, String pluginVersion,\n    Sonar sonar, boolean isArchived)", "full_signature": "private Version[] getRequiredSonarVersions(Properties p, String pluginKey, String pluginVersion,\n    Sonar sonar, boolean isArchived)", "class_method_signature": "UpdateCenterDeserializer.getRequiredSonarVersions(Properties p, String pluginKey, String pluginVersion,\n    Sonar sonar, boolean isArchived)", "testcase": false, "constructor": false}, {"identifier": "resolveRangeOfRequiredSQVersion", "parameters": "(Sonar sonar, List<Version> result, final Version low, final Version high)", "modifiers": "private static", "return": "void", "signature": "void resolveRangeOfRequiredSQVersion(Sonar sonar, List<Version> result, final Version low, final Version high)", "full_signature": "private static void resolveRangeOfRequiredSQVersion(Sonar sonar, List<Version> result, final Version low, final Version high)", "class_method_signature": "UpdateCenterDeserializer.resolveRangeOfRequiredSQVersion(Sonar sonar, List<Version> result, final Version low, final Version high)", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "(String requiredSonarVersions)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> split(String requiredSonarVersions)", "full_signature": "private static List<String> split(String requiredSonarVersions)", "class_method_signature": "UpdateCenterDeserializer.split(String requiredSonarVersions)", "testcase": false, "constructor": false}, {"identifier": "resolveLowVersion", "parameters": "(String versionStr, String range, String pluginKey)", "modifiers": "private static", "return": "Version", "signature": "Version resolveLowVersion(String versionStr, String range, String pluginKey)", "full_signature": "private static Version resolveLowVersion(String versionStr, String range, String pluginKey)", "class_method_signature": "UpdateCenterDeserializer.resolveLowVersion(String versionStr, String range, String pluginKey)", "testcase": false, "constructor": false}, {"identifier": "resolveKeywordAndStar", "parameters": "(String versionStr, Sonar sonar, String pluginKey)", "modifiers": "private static", "return": "Version", "signature": "Version resolveKeywordAndStar(String versionStr, Sonar sonar, String pluginKey)", "full_signature": "private static Version resolveKeywordAndStar(String versionStr, Sonar sonar, String pluginKey)", "class_method_signature": "UpdateCenterDeserializer.resolveKeywordAndStar(String versionStr, Sonar sonar, String pluginKey)", "testcase": false, "constructor": false}, {"identifier": "resolveWithWildcard", "parameters": "(String versionStr, Sonar sonar, String pluginKey)", "modifiers": "private static", "return": "Version", "signature": "Version resolveWithWildcard(String versionStr, Sonar sonar, String pluginKey)", "full_signature": "private static Version resolveWithWildcard(String versionStr, Sonar sonar, String pluginKey)", "class_method_signature": "UpdateCenterDeserializer.resolveWithWildcard(String versionStr, Sonar sonar, String pluginKey)", "testcase": false, "constructor": false}, {"identifier": "getOrDefault", "parameters": "(Properties props, String sqVersion, String suffix, boolean required)", "modifiers": "private", "return": "String", "signature": "String getOrDefault(Properties props, String sqVersion, String suffix, boolean required)", "full_signature": "private String getOrDefault(Properties props, String sqVersion, String suffix, boolean required)", "class_method_signature": "UpdateCenterDeserializer.getOrDefault(Properties props, String sqVersion, String suffix, boolean required)", "testcase": false, "constructor": false}, {"identifier": "reportUndefined", "parameters": "(String key)", "modifiers": "private", "return": "void", "signature": "void reportUndefined(String key)", "full_signature": "private void reportUndefined(String key)", "class_method_signature": "UpdateCenterDeserializer.reportUndefined(String key)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Properties props, String key, boolean required)", "modifiers": "private", "return": "String", "signature": "String get(Properties props, String key, boolean required)", "full_signature": "private String get(Properties props, String key, boolean required)", "class_method_signature": "UpdateCenterDeserializer.get(Properties props, String key, boolean required)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Properties props, String key)", "modifiers": "private static", "return": "String", "signature": "String get(Properties props, String key)", "full_signature": "private static String get(Properties props, String key)", "class_method_signature": "UpdateCenterDeserializer.get(Properties props, String key)", "testcase": false, "constructor": false}, {"identifier": "getOrDefault", "parameters": "(Properties props, String key, String defaultKey)", "modifiers": "private static", "return": "String", "signature": "String getOrDefault(Properties props, String key, String defaultKey)", "full_signature": "private static String getOrDefault(Properties props, String key, String defaultKey)", "class_method_signature": "UpdateCenterDeserializer.getOrDefault(Properties props, String key, String defaultKey)", "testcase": false, "constructor": false}, {"identifier": "getOrDefault", "parameters": "(Properties props, String pluginKey, String version, String suffix, boolean required)", "modifiers": "private", "return": "String", "signature": "String getOrDefault(Properties props, String pluginKey, String version, String suffix, boolean required)", "full_signature": "private String getOrDefault(Properties props, String pluginKey, String version, String suffix, boolean required)", "class_method_signature": "UpdateCenterDeserializer.getOrDefault(Properties props, String pluginKey, String version, String suffix, boolean required)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Properties p, String pluginKey, String field, boolean required)", "modifiers": "private", "return": "String", "signature": "String get(Properties p, String pluginKey, String field, boolean required)", "full_signature": "private String get(Properties p, String pluginKey, String field, boolean required)", "class_method_signature": "UpdateCenterDeserializer.get(Properties p, String pluginKey, String field, boolean required)", "testcase": false, "constructor": false}, {"identifier": "getArray", "parameters": "(Properties props, String key)", "modifiers": "private static", "return": "String[]", "signature": "String[] getArray(Properties props, String key)", "full_signature": "private static String[] getArray(Properties props, String key)", "class_method_signature": "UpdateCenterDeserializer.getArray(Properties props, String key)", "testcase": false, "constructor": false}, {"identifier": "getArray", "parameters": "(Properties p, String pluginKey, String field)", "modifiers": "private static", "return": "String[]", "signature": "String[] getArray(Properties p, String pluginKey, String field)", "full_signature": "private static String[] getArray(Properties p, String pluginKey, String field)", "class_method_signature": "UpdateCenterDeserializer.getArray(Properties p, String pluginKey, String field)", "testcase": false, "constructor": false}], "file": "sonar-update-center-common/src/main/java/org/sonar/updatecenter/common/UpdateCenterDeserializer.java"}, "focal_method": {"identifier": "fromProperties", "parameters": "(Properties p)", "modifiers": "public", "return": "UpdateCenter", "body": "public UpdateCenter fromProperties(Properties p) {\n    Sonar sonar = new Sonar();\n    Date date = FormatUtils.toDate(p.getProperty(\"date\"), true);\n    List<Plugin> plugins = new ArrayList<>();\n    List<Scanner> scanners = new ArrayList<>();\n\n    parseSonar(p, sonar);\n\n    parsePlugins(p, sonar, plugins);\n    parseScanners(p, sonar, scanners);\n\n    validatePublicPluginSQVersionOverlap(plugins);\n\n    validateLATESTonLatestPluginVersion(plugins);\n\n    PluginReferential pluginReferential = PluginReferential.create(plugins);\n    for (Plugin plugin : pluginReferential.getPlugins()) {\n      for (Release release : plugin.getAllReleases()) {\n        String[] requiredReleases = StringUtils.split(StringUtils.defaultIfEmpty(get(p, plugin.getKey(), release.getVersion().getName() + \".requirePlugins\", false), \"\"), \",\");\n        for (String requiresPluginKey : requiredReleases) {\n          String[] split = requiresPluginKey.split(\":\");\n          String requiredPluginReleaseKey = split[0];\n          String requiredMinimumReleaseVersion = split[1];\n          pluginReferential.addOutgoingDependency(release, requiredPluginReleaseKey, requiredMinimumReleaseVersion);\n        }\n      }\n    }\n    return UpdateCenter.create(pluginReferential, scanners, sonar).setDate(date);\n  }", "signature": "UpdateCenter fromProperties(Properties p)", "full_signature": "public UpdateCenter fromProperties(Properties p)", "class_method_signature": "UpdateCenterDeserializer.fromProperties(Properties p)", "testcase": false, "constructor": false, "invocations": ["toDate", "getProperty", "parseSonar", "parsePlugins", "parseScanners", "validatePublicPluginSQVersionOverlap", "validateLATESTonLatestPluginVersion", "create", "getPlugins", "getAllReleases", "split", "defaultIfEmpty", "get", "getKey", "getName", "getVersion", "split", "addOutgoingDependency", "setDate", "create"]}, "repository": {"repo_id": 7015517, "url": "https://github.com/SonarSource/sonar-update-center", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 2219, "license": "licensed"}}