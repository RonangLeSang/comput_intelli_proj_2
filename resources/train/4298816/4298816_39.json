{"test_class": {"identifier": "MapToolsTest", "superclass": "", "interfaces": "", "fields": [], "file": "seqware-common/src/test/java/net/sourceforge/seqware/common/util/maptools/MapToolsTest.java"}, "test_case": {"identifier": "testExpandVariables", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExpandVariables() throws Exception {\n        String path = getClass().getResource(\"vars.ini\").getPath();\n        Map<String, String> raw = new HashMap<>();\n        MapTools.ini2Map(path, raw);\n        Map<String, String> provided = MapTools.providedMap(\"/u/seqware/provisioned-bundles\", \"1.0\");\n        Map<String, String> exp = MapTools.expandVariables(raw, provided);\n\n        assertEquals(raw.size(), exp.size());\n\n        assertEquals(\"b\", exp.get(\"foo\"));\n        assertEquals(\"d\", exp.get(\"bar\"));\n        assertEquals(\"abcde\", exp.get(\"test-multi\"));\n\n        assertEquals(\"1.0\", exp.get(\"test-bundle-seqware-version\"));\n        assertEquals(\"/u/seqware/provisioned-bundles\", exp.get(\"test-bundle-dir\"));\n        assertEquals(\"/u/seqware/provisioned-bundles\", exp.get(\"test-legacy-bundle-dir\"));\n\n        Integer.parseInt(exp.get(\"test-random\"));\n        Integer.parseInt(exp.get(\"test-legacy-random\"));\n\n        DatatypeConverter.parseDate(exp.get(\"test-date\"));\n        DatatypeConverter.parseDate(exp.get(\"test-legacy-date\"));\n\n        DatatypeConverter.parseDateTime(exp.get(\"test-datetime\"));\n\n        Long.parseLong(exp.get(\"test-timestamp\"));\n\n        UUID.fromString(exp.get(\"test-uuid\"));\n    }", "signature": "void testExpandVariables()", "full_signature": "@Test public void testExpandVariables()", "class_method_signature": "MapToolsTest.testExpandVariables()", "testcase": true, "constructor": false, "invocations": ["getPath", "getResource", "getClass", "ini2Map", "providedMap", "expandVariables", "assertEquals", "size", "size", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "parseInt", "get", "parseInt", "get", "parseDate", "get", "parseDate", "get", "parseDateTime", "get", "parseLong", "get", "fromString", "get"]}, "focal_class": {"identifier": "MapTools", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String VAR_RANDOM = \"sqw.random\";", "modifier": "public static final", "type": "String", "declarator": "VAR_RANDOM = \"sqw.random\"", "var_name": "VAR_RANDOM"}, {"original_string": "public static final String VAR_DATE = \"sqw.date\";", "modifier": "public static final", "type": "String", "declarator": "VAR_DATE = \"sqw.date\"", "var_name": "VAR_DATE"}, {"original_string": "public static final String VAR_DATETIME = \"sqw.datetime\";", "modifier": "public static final", "type": "String", "declarator": "VAR_DATETIME = \"sqw.datetime\"", "var_name": "VAR_DATETIME"}, {"original_string": "public static final String VAR_TIMESTAMP = \"sqw.timestamp\";", "modifier": "public static final", "type": "String", "declarator": "VAR_TIMESTAMP = \"sqw.timestamp\"", "var_name": "VAR_TIMESTAMP"}, {"original_string": "public static final String VAR_UUID = \"sqw.uuid\";", "modifier": "public static final", "type": "String", "declarator": "VAR_UUID = \"sqw.uuid\"", "var_name": "VAR_UUID"}, {"original_string": "public static final String VAR_BUNDLE_DIR = \"sqw.bundle-dir\";", "modifier": "public static final", "type": "String", "declarator": "VAR_BUNDLE_DIR = \"sqw.bundle-dir\"", "var_name": "VAR_BUNDLE_DIR"}, {"original_string": "public static final String LEGACY_VAR_RANDOM = \"random\";", "modifier": "public static final", "type": "String", "declarator": "LEGACY_VAR_RANDOM = \"random\"", "var_name": "LEGACY_VAR_RANDOM"}, {"original_string": "public static final String LEGACY_VAR_DATE = \"date\";", "modifier": "public static final", "type": "String", "declarator": "LEGACY_VAR_DATE = \"date\"", "var_name": "LEGACY_VAR_DATE"}, {"original_string": "public static final String LEGACY_VAR_BUNDLE_DIR = \"workflow_bundle_dir\";", "modifier": "public static final", "type": "String", "declarator": "LEGACY_VAR_BUNDLE_DIR = \"workflow_bundle_dir\"", "var_name": "LEGACY_VAR_BUNDLE_DIR"}, {"original_string": "public static final String VAR_WORKFLOW_VERSION = \"sqw.bundle-seqware-version\";", "modifier": "public static final", "type": "String", "declarator": "VAR_WORKFLOW_VERSION = \"sqw.bundle-seqware-version\"", "var_name": "VAR_WORKFLOW_VERSION"}, {"original_string": "private static final Pattern VAR = Pattern.compile(\"\\\\$\\\\{([^\\\\}]*)\\\\}\");", "modifier": "private static final", "type": "Pattern", "declarator": "VAR = Pattern.compile(\"\\\\$\\\\{([^\\\\}]*)\\\\}\")", "var_name": "VAR"}], "methods": [{"identifier": "ini2Map", "parameters": "(String iniFile, Map<String, String> hm)", "modifiers": "public static", "return": "void", "signature": "void ini2Map(String iniFile, Map<String, String> hm)", "full_signature": "public static void ini2Map(String iniFile, Map<String, String> hm)", "class_method_signature": "MapTools.ini2Map(String iniFile, Map<String, String> hm)", "testcase": false, "constructor": false}, {"identifier": "ini2RichMap", "parameters": "(String iniFile, Map<String, Map<String, String>> hm)", "modifiers": "public static", "return": "void", "signature": "void ini2RichMap(String iniFile, Map<String, Map<String, String>> hm)", "full_signature": "public static void ini2RichMap(String iniFile, Map<String, Map<String, String>> hm)", "class_method_signature": "MapTools.ini2RichMap(String iniFile, Map<String, Map<String, String>> hm)", "testcase": false, "constructor": false}, {"identifier": "ini2Map", "parameters": "(String iniFile, Map<String, String> hm, boolean keyToUpper)", "modifiers": "public static", "return": "void", "signature": "void ini2Map(String iniFile, Map<String, String> hm, boolean keyToUpper)", "full_signature": "public static void ini2Map(String iniFile, Map<String, String> hm, boolean keyToUpper)", "class_method_signature": "MapTools.ini2Map(String iniFile, Map<String, String> hm, boolean keyToUpper)", "testcase": false, "constructor": false}, {"identifier": "ini2Map", "parameters": "(InputStream iniFile, Map<String, String> hm, boolean keyToUpper)", "modifiers": "public static", "return": "void", "signature": "void ini2Map(InputStream iniFile, Map<String, String> hm, boolean keyToUpper)", "full_signature": "public static void ini2Map(InputStream iniFile, Map<String, String> hm, boolean keyToUpper)", "class_method_signature": "MapTools.ini2Map(InputStream iniFile, Map<String, String> hm, boolean keyToUpper)", "testcase": false, "constructor": false}, {"identifier": "cli2Map", "parameters": "(String[] args, Map<String, String> hm)", "modifiers": "public static", "return": "void", "signature": "void cli2Map(String[] args, Map<String, String> hm)", "full_signature": "public static void cli2Map(String[] args, Map<String, String> hm)", "class_method_signature": "MapTools.cli2Map(String[] args, Map<String, String> hm)", "testcase": false, "constructor": false}, {"identifier": "mapString2Int", "parameters": "(Map map)", "modifiers": "public static", "return": "Map", "signature": "Map mapString2Int(Map map)", "full_signature": "public static Map mapString2Int(Map map)", "class_method_signature": "MapTools.mapString2Int(Map map)", "testcase": false, "constructor": false}, {"identifier": "provideBundleVersion", "parameters": "(Map<String, String> m, String bundleVersion)", "modifiers": "public static", "return": "void", "signature": "void provideBundleVersion(Map<String, String> m, String bundleVersion)", "full_signature": "public static void provideBundleVersion(Map<String, String> m, String bundleVersion)", "class_method_signature": "MapTools.provideBundleVersion(Map<String, String> m, String bundleVersion)", "testcase": false, "constructor": false}, {"identifier": "provideBundleDir", "parameters": "(Map<String, String> m, String bundleDir)", "modifiers": "public static", "return": "void", "signature": "void provideBundleDir(Map<String, String> m, String bundleDir)", "full_signature": "public static void provideBundleDir(Map<String, String> m, String bundleDir)", "class_method_signature": "MapTools.provideBundleDir(Map<String, String> m, String bundleDir)", "testcase": false, "constructor": false}, {"identifier": "providedMap", "parameters": "(String bundleDir, String bundleSeqwareVersion)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> providedMap(String bundleDir, String bundleSeqwareVersion)", "full_signature": "public static Map<String, String> providedMap(String bundleDir, String bundleSeqwareVersion)", "class_method_signature": "MapTools.providedMap(String bundleDir, String bundleSeqwareVersion)", "testcase": false, "constructor": false}, {"identifier": "generatedValue", "parameters": "(String key)", "modifiers": "public static", "return": "String", "signature": "String generatedValue(String key)", "full_signature": "public static String generatedValue(String key)", "class_method_signature": "MapTools.generatedValue(String key)", "testcase": false, "constructor": false}, {"identifier": "expandVariables", "parameters": "(Map<String, String> raw)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> expandVariables(Map<String, String> raw)", "full_signature": "public static Map<String, String> expandVariables(Map<String, String> raw)", "class_method_signature": "MapTools.expandVariables(Map<String, String> raw)", "testcase": false, "constructor": false}, {"identifier": "expandVariables", "parameters": "(Map<String, String> raw, Map<String, String> provided)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> expandVariables(Map<String, String> raw, Map<String, String> provided)", "full_signature": "public static Map<String, String> expandVariables(Map<String, String> raw, Map<String, String> provided)", "class_method_signature": "MapTools.expandVariables(Map<String, String> raw, Map<String, String> provided)", "testcase": false, "constructor": false}, {"identifier": "expandVariables", "parameters": "(Map<String, String> raw, Map<String, String> provided, boolean allowMissingVars)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> expandVariables(Map<String, String> raw, Map<String, String> provided, boolean allowMissingVars)", "full_signature": "public static Map<String, String> expandVariables(Map<String, String> raw, Map<String, String> provided, boolean allowMissingVars)", "class_method_signature": "MapTools.expandVariables(Map<String, String> raw, Map<String, String> provided, boolean allowMissingVars)", "testcase": false, "constructor": false}, {"identifier": "iniString2Map", "parameters": "(String iniString)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> iniString2Map(String iniString)", "full_signature": "public static Map<String, String> iniString2Map(String iniString)", "class_method_signature": "MapTools.iniString2Map(String iniString)", "testcase": false, "constructor": false}, {"identifier": "isLineMatchesKeyValue", "parameters": "(String line)", "modifiers": "private static", "return": "boolean", "signature": "boolean isLineMatchesKeyValue(String line)", "full_signature": "private static boolean isLineMatchesKeyValue(String line)", "class_method_signature": "MapTools.isLineMatchesKeyValue(String line)", "testcase": false, "constructor": false}, {"identifier": "createWorkflowRunParameters", "parameters": "(HashMap<String, String> map)", "modifiers": "public static", "return": "SortedSet<WorkflowRunParam>", "signature": "SortedSet<WorkflowRunParam> createWorkflowRunParameters(HashMap<String, String> map)", "full_signature": "public static SortedSet<WorkflowRunParam> createWorkflowRunParameters(HashMap<String, String> map)", "class_method_signature": "MapTools.createWorkflowRunParameters(HashMap<String, String> map)", "testcase": false, "constructor": false}], "file": "seqware-common/src/main/java/net/sourceforge/seqware/common/util/maptools/MapTools.java"}, "focal_method": {"identifier": "expandVariables", "parameters": "(Map<String, String> raw)", "modifiers": "public static", "return": "Map<String, String>", "body": "public static Map<String, String> expandVariables(Map<String, String> raw) {\n        return expandVariables(raw, null);\n    }", "signature": "Map<String, String> expandVariables(Map<String, String> raw)", "full_signature": "public static Map<String, String> expandVariables(Map<String, String> raw)", "class_method_signature": "MapTools.expandVariables(Map<String, String> raw)", "testcase": false, "constructor": false, "invocations": ["expandVariables"]}, "repository": {"repo_id": 4298816, "url": "https://github.com/SeqWare/seqware", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 27, "size": 26902, "license": "licensed"}}