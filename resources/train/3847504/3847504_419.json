{"test_class": {"identifier": "PageletEditorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected PageletEditor editor = null;", "modifier": "protected", "type": "PageletEditor", "declarator": "editor = null", "var_name": "editor"}, {"original_string": "protected ResourceURI uri = null;", "modifier": "protected", "type": "ResourceURI", "declarator": "uri = null", "var_name": "uri"}, {"original_string": "protected String composerId = \"main\";", "modifier": "protected", "type": "String", "declarator": "composerId = \"main\"", "var_name": "composerId"}, {"original_string": "protected int pageletIndex = 0;", "modifier": "protected", "type": "int", "declarator": "pageletIndex = 0", "var_name": "pageletIndex"}], "file": "modules/weblounge-workbench/src/test/java/ch/entwine/weblounge/workbench/PageletEditorTest.java"}, "test_case": {"identifier": "testToXml", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testToXml() {\n    fail(\"Not yet implemented\"); // TODO\n  }", "signature": "void testToXml()", "full_signature": "@Test public void testToXml()", "class_method_signature": "PageletEditorTest.testToXml()", "testcase": true, "constructor": false, "invocations": ["fail"]}, "focal_class": {"identifier": "PageletEditor", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected Pagelet pagelet = null;", "modifier": "protected", "type": "Pagelet", "declarator": "pagelet = null", "var_name": "pagelet"}, {"original_string": "protected ResourceURI uri = null;", "modifier": "protected", "type": "ResourceURI", "declarator": "uri = null", "var_name": "uri"}, {"original_string": "protected String composerId = null;", "modifier": "protected", "type": "String", "declarator": "composerId = null", "var_name": "composerId"}, {"original_string": "protected int pageletIndex = -1;", "modifier": "protected", "type": "int", "declarator": "pageletIndex = -1", "var_name": "pageletIndex"}, {"original_string": "protected DataFlavor dataFlavor = DataFlavor.Xml;", "modifier": "protected", "type": "DataFlavor", "declarator": "dataFlavor = DataFlavor.Xml", "var_name": "dataFlavor"}, {"original_string": "protected PageletRenderer renderer = null;", "modifier": "protected", "type": "PageletRenderer", "declarator": "renderer = null", "var_name": "renderer"}, {"original_string": "protected String editorContents = null;", "modifier": "protected", "type": "String", "declarator": "editorContents = null", "var_name": "editorContents"}, {"original_string": "protected Environment environment = null;", "modifier": "protected", "type": "Environment", "declarator": "environment = null", "var_name": "environment"}], "methods": [{"identifier": "PageletEditor", "parameters": "(Pagelet pagelet, ResourceURI uri, String composer,\n      int pageletIndex, Environment environment)", "modifiers": "public", "return": "", "signature": " PageletEditor(Pagelet pagelet, ResourceURI uri, String composer,\n      int pageletIndex, Environment environment)", "full_signature": "public  PageletEditor(Pagelet pagelet, ResourceURI uri, String composer,\n      int pageletIndex, Environment environment)", "class_method_signature": "PageletEditor.PageletEditor(Pagelet pagelet, ResourceURI uri, String composer,\n      int pageletIndex, Environment environment)", "testcase": false, "constructor": true}, {"identifier": "getPagelet", "parameters": "()", "modifiers": "public", "return": "Pagelet", "signature": "Pagelet getPagelet()", "full_signature": "public Pagelet getPagelet()", "class_method_signature": "PageletEditor.getPagelet()", "testcase": false, "constructor": false}, {"identifier": "getURI", "parameters": "()", "modifiers": "public", "return": "ResourceURI", "signature": "ResourceURI getURI()", "full_signature": "public ResourceURI getURI()", "class_method_signature": "PageletEditor.getURI()", "testcase": false, "constructor": false}, {"identifier": "getComposer", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getComposer()", "full_signature": "public String getComposer()", "class_method_signature": "PageletEditor.getComposer()", "testcase": false, "constructor": false}, {"identifier": "getPageletIndex", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPageletIndex()", "full_signature": "public int getPageletIndex()", "class_method_signature": "PageletEditor.getPageletIndex()", "testcase": false, "constructor": false}, {"identifier": "setDataFlavor", "parameters": "(DataFlavor flavor)", "modifiers": "public", "return": "void", "signature": "void setDataFlavor(DataFlavor flavor)", "full_signature": "public void setDataFlavor(DataFlavor flavor)", "class_method_signature": "PageletEditor.setDataFlavor(DataFlavor flavor)", "testcase": false, "constructor": false}, {"identifier": "getDataFlavor", "parameters": "()", "modifiers": "public", "return": "DataFlavor", "signature": "DataFlavor getDataFlavor()", "full_signature": "public DataFlavor getDataFlavor()", "class_method_signature": "PageletEditor.getDataFlavor()", "testcase": false, "constructor": false}, {"identifier": "hasRenderer", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasRenderer()", "full_signature": "public boolean hasRenderer()", "class_method_signature": "PageletEditor.hasRenderer()", "testcase": false, "constructor": false}, {"identifier": "getRenderer", "parameters": "()", "modifiers": "public", "return": "URL", "signature": "URL getRenderer()", "full_signature": "public URL getRenderer()", "class_method_signature": "PageletEditor.getRenderer()", "testcase": false, "constructor": false}, {"identifier": "hasEditor", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasEditor()", "full_signature": "public boolean hasEditor()", "class_method_signature": "PageletEditor.hasEditor()", "testcase": false, "constructor": false}, {"identifier": "getEditorURL", "parameters": "()", "modifiers": "public", "return": "URL", "signature": "URL getEditorURL()", "full_signature": "public URL getEditorURL()", "class_method_signature": "PageletEditor.getEditorURL()", "testcase": false, "constructor": false}, {"identifier": "setEditor", "parameters": "(String contents)", "modifiers": "public", "return": "void", "signature": "void setEditor(String contents)", "full_signature": "public void setEditor(String contents)", "class_method_signature": "PageletEditor.setEditor(String contents)", "testcase": false, "constructor": false}, {"identifier": "toXml", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toXml()", "full_signature": "public String toXml()", "class_method_signature": "PageletEditor.toXml()", "testcase": false, "constructor": false}], "file": "modules/weblounge-workbench/src/main/java/ch/entwine/weblounge/workbench/PageletEditor.java"}, "focal_method": {"identifier": "toXml", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String toXml() {\n    StringBuffer buf = new StringBuffer();\n\n    // head\n    buf.append(\"<pageleteditor \");\n    buf.append(\"name=\\\"\").append(renderer.getName()).append(\"\\\" \");\n    buf.append(\"module=\\\"\").append(renderer.getModule().getName()).append(\"\\\" \");\n    buf.append(\"uri=\\\"\").append(uri.getIdentifier()).append(\"\\\" \");\n    buf.append(\"composer=\\\"\").append(composerId).append(\"\\\" \");\n    buf.append(\"index=\\\"\").append(pageletIndex).append(\"\\\">\");\n\n    // the pagelet\n    buf.append(\"<data flavor=\\\"\").append(dataFlavor.toString().toLowerCase()).append(\"\\\">\");\n    String data = null;\n    switch (dataFlavor) {\n      case Json:\n        try {\n          data = \"<![CDATA[\" + XML.toJSONObject(pagelet.toXml()).toString() + \"]]>\";\n        } catch (JSONException e) {\n          throw new IllegalStateException(\"Pagelet xml can't be converted to json: \" + e.getMessage(), e);\n        }\n        break;\n      case Xml:\n        data = pagelet.toXml();\n        break;\n      default:\n        throw new IllegalStateException(\"An unhandled flavor was found: \" + dataFlavor);\n    }\n    buf.append(data);\n    buf.append(\"</data>\");\n\n    // the editor\n    if (editorContents != null) {\n      buf.append(\"<editor type=\\\"xhtml\\\"><![CDATA[\");\n      buf.append(editorContents);\n      buf.append(\"]]></editor>\");\n    }\n\n    // HTML head elements\n    Module m = renderer.getModule();\n    for (HTMLHeadElement headElement : renderer.getHTMLHeaders()) {\n      buf.append(ConfigurationUtils.processTemplate(headElement.toXml(), m, environment));\n    }\n\n    buf.append(\"</pageleteditor>\");\n\n    return buf.toString();\n  }", "signature": "String toXml()", "full_signature": "public String toXml()", "class_method_signature": "PageletEditor.toXml()", "testcase": false, "constructor": false, "invocations": ["append", "append", "append", "append", "getName", "append", "append", "append", "getName", "getModule", "append", "append", "append", "getIdentifier", "append", "append", "append", "append", "append", "append", "append", "append", "append", "toLowerCase", "toString", "toString", "toJSONObject", "toXml", "getMessage", "toXml", "append", "append", "append", "append", "append", "getModule", "getHTMLHeaders", "append", "processTemplate", "toXml", "append", "toString"]}, "repository": {"repo_id": 3847504, "url": "https://github.com/digitalroastery/weblounge", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 11, "size": 111809, "license": "licensed"}}