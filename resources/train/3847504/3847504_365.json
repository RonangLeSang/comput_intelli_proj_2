{"test_class": {"identifier": "CacheableHttpServletResponseHeadersTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected CacheableHttpServletResponseHeaders headers = null;", "modifier": "protected", "type": "CacheableHttpServletResponseHeaders", "declarator": "headers = null", "var_name": "headers"}, {"original_string": "protected String headerName = \"Test-Header\";", "modifier": "protected", "type": "String", "declarator": "headerName = \"Test-Header\"", "var_name": "headerName"}, {"original_string": "protected String multivalueHeaderName = \"Test-Multivalue-Header\";", "modifier": "protected", "type": "String", "declarator": "multivalueHeaderName = \"Test-Multivalue-Header\"", "var_name": "multivalueHeaderName"}], "file": "modules/weblounge-cache/src/test/java/ch/entwine/weblounge/cache/impl/CacheableHttpServletResponseHeadersTest.java"}, "test_case": {"identifier": "testContainsHeader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testContainsHeader() {\n    assertTrue(headers.containsHeader(headerName));\n    assertTrue(headers.containsHeader(multivalueHeaderName));\n  }", "signature": "void testContainsHeader()", "full_signature": "@Test public void testContainsHeader()", "class_method_signature": "CacheableHttpServletResponseHeadersTest.testContainsHeader()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "containsHeader", "assertTrue", "containsHeader"]}, "focal_class": {"identifier": "CacheableHttpServletResponseHeaders", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 8273352269230366714L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 8273352269230366714L", "var_name": "serialVersionUID"}, {"original_string": "private Map<String, String> headers = new HashMap<String, String>(5);", "modifier": "private", "type": "Map<String, String>", "declarator": "headers = new HashMap<String, String>(5)", "var_name": "headers"}, {"original_string": "private static final List<String> ignoredHeaders = new ArrayList<String>();", "modifier": "private static final", "type": "List<String>", "declarator": "ignoredHeaders = new ArrayList<String>()", "var_name": "ignoredHeaders"}], "methods": [{"identifier": "apply", "parameters": "(HttpServletResponse response)", "modifiers": "", "return": "void", "signature": "void apply(HttpServletResponse response)", "full_signature": " void apply(HttpServletResponse response)", "class_method_signature": "CacheableHttpServletResponseHeaders.apply(HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "containsHeader", "parameters": "(String header)", "modifiers": "", "return": "boolean", "signature": "boolean containsHeader(String header)", "full_signature": " boolean containsHeader(String header)", "class_method_signature": "CacheableHttpServletResponseHeaders.containsHeader(String header)", "testcase": false, "constructor": false}, {"identifier": "setHeader", "parameters": "(String key, String value)", "modifiers": "", "return": "void", "signature": "void setHeader(String key, String value)", "full_signature": " void setHeader(String key, String value)", "class_method_signature": "CacheableHttpServletResponseHeaders.setHeader(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "addHeader", "parameters": "(String key, String value)", "modifiers": "", "return": "void", "signature": "void addHeader(String key, String value)", "full_signature": " void addHeader(String key, String value)", "class_method_signature": "CacheableHttpServletResponseHeaders.addHeader(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "getHeaders", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\")", "return": "Map<String, Object>", "signature": "Map<String, Object> getHeaders()", "full_signature": "@SuppressWarnings(\"unchecked\") Map<String, Object> getHeaders()", "class_method_signature": "CacheableHttpServletResponseHeaders.getHeaders()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "CacheableHttpServletResponseHeaders.size()", "testcase": false, "constructor": false}], "file": "modules/weblounge-cache/src/main/java/ch/entwine/weblounge/cache/impl/CacheableHttpServletResponseHeaders.java"}, "focal_method": {"identifier": "containsHeader", "parameters": "(String header)", "modifiers": "", "return": "boolean", "body": "boolean containsHeader(String header) {\n    return headers.containsKey(header);\n  }", "signature": "boolean containsHeader(String header)", "full_signature": " boolean containsHeader(String header)", "class_method_signature": "CacheableHttpServletResponseHeaders.containsHeader(String header)", "testcase": false, "constructor": false, "invocations": ["containsKey"]}, "repository": {"repo_id": 3847504, "url": "https://github.com/digitalroastery/weblounge", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 11, "size": 111809, "license": "licensed"}}