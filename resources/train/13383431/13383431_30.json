{"test_class": {"identifier": "PetriNetControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException expectedEx = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedEx = ExpectedException.none()", "var_name": "expectedEx"}, {"original_string": "private PetriNetController controller;", "modifier": "private", "type": "PetriNetController", "declarator": "controller", "var_name": "controller"}, {"original_string": "private PetriNet net;", "modifier": "private", "type": "PetriNet", "declarator": "net", "var_name": "net"}, {"original_string": "@Mock\n    private GUIAnimator mockAnimator;", "modifier": "@Mock\n    private", "type": "GUIAnimator", "declarator": "mockAnimator", "var_name": "mockAnimator"}, {"original_string": "@Mock\n    private PetriNetTab mocKTab;", "modifier": "@Mock\n    private", "type": "PetriNetTab", "declarator": "mocKTab", "var_name": "mocKTab"}, {"original_string": "@Mock\n    UndoableEditListener undoListener;", "modifier": "@Mock", "type": "UndoableEditListener", "declarator": "undoListener", "var_name": "undoListener"}], "file": "pipe-gui/src/test/java/pipe/controllers/PetriNetControllerTest.java"}, "test_case": {"identifier": "doesNotUpdateNameIfNotChanged", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void doesNotUpdateNameIfNotChanged() throws PetriNetComponentNotFoundException {\n        Token token = mock(Token.class);\n        String id = \"id\";\n        when(token.getId()).thenReturn(id);\n\n        boolean enabled = true;\n\n        Color color = new Color(255, 0, 0);\n        when(token.getColor()).thenReturn(color);\n        net.addToken(token);\n\n        controller.updateToken(id, id, color);\n        verify(token, never()).setId(anyString());\n    }", "signature": "void doesNotUpdateNameIfNotChanged()", "full_signature": "@Test public void doesNotUpdateNameIfNotChanged()", "class_method_signature": "PetriNetControllerTest.doesNotUpdateNameIfNotChanged()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getId", "thenReturn", "when", "getColor", "addToken", "updateToken", "setId", "verify", "never", "anyString"]}, "focal_class": {"identifier": "PetriNetController", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private final ZoomController zoomController;", "modifier": "private final", "type": "ZoomController", "declarator": "zoomController", "var_name": "zoomController"}, {"original_string": "private final UndoManager undoManager = new UndoManager();", "modifier": "private final", "type": "UndoManager", "declarator": "undoManager = new UndoManager()", "var_name": "undoManager"}, {"original_string": "private final PetriNet petriNet;", "modifier": "private final", "type": "PetriNet", "declarator": "petriNet", "var_name": "petriNet"}, {"original_string": "private final UndoableEditListener undoListener;", "modifier": "private final", "type": "UndoableEditListener", "declarator": "undoListener", "var_name": "undoListener"}, {"original_string": "private final PetriNetTab petriNetTab;", "modifier": "private final", "type": "PetriNetTab", "declarator": "petriNetTab", "var_name": "petriNetTab"}, {"original_string": "private final Set<PetriNetComponent> selectedComponents = new HashSet<>();", "modifier": "private final", "type": "Set<PetriNetComponent>", "declarator": "selectedComponents = new HashSet<>()", "var_name": "selectedComponents"}, {"original_string": "private final CopyPasteManager copyPasteManager;", "modifier": "private final", "type": "CopyPasteManager", "declarator": "copyPasteManager", "var_name": "copyPasteManager"}, {"original_string": "private final UniqueNamer placeNamer;", "modifier": "private final", "type": "UniqueNamer", "declarator": "placeNamer", "var_name": "placeNamer"}, {"original_string": "private final UniqueNamer transitionNamer;", "modifier": "private final", "type": "UniqueNamer", "declarator": "transitionNamer", "var_name": "transitionNamer"}, {"original_string": "private String selectedToken;", "modifier": "private", "type": "String", "declarator": "selectedToken", "var_name": "selectedToken"}, {"original_string": "private GUIAnimator animator;", "modifier": "private", "type": "GUIAnimator", "declarator": "animator", "var_name": "animator"}, {"original_string": "private DragManager dragManager = new DragManager(this);", "modifier": "private", "type": "DragManager", "declarator": "dragManager = new DragManager(this)", "var_name": "dragManager"}, {"original_string": "private String fileName = \"\";", "modifier": "private", "type": "String", "declarator": "fileName = \"\"", "var_name": "fileName"}, {"original_string": "private PetriNet lastSavedNet;", "modifier": "private", "type": "PetriNet", "declarator": "lastSavedNet", "var_name": "lastSavedNet"}, {"original_string": "private boolean animateMode = false;", "modifier": "private", "type": "boolean", "declarator": "animateMode = false", "var_name": "animateMode"}, {"original_string": "private SelectionManager selectionManager;", "modifier": "private", "type": "SelectionManager", "declarator": "selectionManager", "var_name": "selectionManager"}], "methods": [{"identifier": "PetriNetController", "parameters": "(PetriNet model, UndoableEditListener undoListener, GUIAnimator animator,\n                              CopyPasteManager copyPasteManager, ZoomController zoomController,\n                              PetriNetTab petriNetTab)", "modifiers": "public", "return": "", "signature": " PetriNetController(PetriNet model, UndoableEditListener undoListener, GUIAnimator animator,\n                              CopyPasteManager copyPasteManager, ZoomController zoomController,\n                              PetriNetTab petriNetTab)", "full_signature": "public  PetriNetController(PetriNet model, UndoableEditListener undoListener, GUIAnimator animator,\n                              CopyPasteManager copyPasteManager, ZoomController zoomController,\n                              PetriNetTab petriNetTab)", "class_method_signature": "PetriNetController.PetriNetController(PetriNet model, UndoableEditListener undoListener, GUIAnimator animator,\n                              CopyPasteManager copyPasteManager, ZoomController zoomController,\n                              PetriNetTab petriNetTab)", "testcase": false, "constructor": true}, {"identifier": "getPetriNetTab", "parameters": "()", "modifiers": "public", "return": "PetriNetTab", "signature": "PetriNetTab getPetriNetTab()", "full_signature": "public PetriNetTab getPetriNetTab()", "class_method_signature": "PetriNetController.getPetriNetTab()", "testcase": false, "constructor": false}, {"identifier": "getUniquePlaceName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUniquePlaceName()", "full_signature": "public String getUniquePlaceName()", "class_method_signature": "PetriNetController.getUniquePlaceName()", "testcase": false, "constructor": false}, {"identifier": "getUniqueTransitionName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUniqueTransitionName()", "full_signature": "public String getUniqueTransitionName()", "class_method_signature": "PetriNetController.getUniqueTransitionName()", "testcase": false, "constructor": false}, {"identifier": "isSelected", "parameters": "(PetriNetComponent component)", "modifiers": "public", "return": "boolean", "signature": "boolean isSelected(PetriNetComponent component)", "full_signature": "public boolean isSelected(PetriNetComponent component)", "class_method_signature": "PetriNetController.isSelected(PetriNetComponent component)", "testcase": false, "constructor": false}, {"identifier": "deselect", "parameters": "(PetriNetComponent component)", "modifiers": "public", "return": "void", "signature": "void deselect(PetriNetComponent component)", "full_signature": "public void deselect(PetriNetComponent component)", "class_method_signature": "PetriNetController.deselect(PetriNetComponent component)", "testcase": false, "constructor": false}, {"identifier": "deselectAll", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void deselectAll()", "full_signature": "public void deselectAll()", "class_method_signature": "PetriNetController.deselectAll()", "testcase": false, "constructor": false}, {"identifier": "translateSelected", "parameters": "(Point translation)", "modifiers": "public", "return": "void", "signature": "void translateSelected(Point translation)", "full_signature": "public void translateSelected(Point translation)", "class_method_signature": "PetriNetController.translateSelected(Point translation)", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(Rectangle selectionRectangle)", "modifiers": "public", "return": "void", "signature": "void select(Rectangle selectionRectangle)", "full_signature": "public void select(Rectangle selectionRectangle)", "class_method_signature": "PetriNetController.select(Rectangle selectionRectangle)", "testcase": false, "constructor": false}, {"identifier": "isArcSelected", "parameters": "(Arc<? extends Connectable, ? extends Connectable> arc, Rectangle selectionRectangle)", "modifiers": "private", "return": "boolean", "signature": "boolean isArcSelected(Arc<? extends Connectable, ? extends Connectable> arc, Rectangle selectionRectangle)", "full_signature": "private boolean isArcSelected(Arc<? extends Connectable, ? extends Connectable> arc, Rectangle selectionRectangle)", "class_method_signature": "PetriNetController.isArcSelected(Arc<? extends Connectable, ? extends Connectable> arc, Rectangle selectionRectangle)", "testcase": false, "constructor": false}, {"identifier": "createStraightPath", "parameters": "(Arc<? extends Connectable, ? extends Connectable> arc)", "modifiers": "private", "return": "GeneralPath", "signature": "GeneralPath createStraightPath(Arc<? extends Connectable, ? extends Connectable> arc)", "full_signature": "private GeneralPath createStraightPath(Arc<? extends Connectable, ? extends Connectable> arc)", "class_method_signature": "PetriNetController.createStraightPath(Arc<? extends Connectable, ? extends Connectable> arc)", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(PetriNetComponent component)", "modifiers": "public", "return": "void", "signature": "void select(PetriNetComponent component)", "full_signature": "public void select(PetriNetComponent component)", "class_method_signature": "PetriNetController.select(PetriNetComponent component)", "testcase": false, "constructor": false}, {"identifier": "selectPlaceable", "parameters": "(PlaceablePetriNetComponent placeable, Rectangle selectionRectangle)", "modifiers": "private", "return": "void", "signature": "void selectPlaceable(PlaceablePetriNetComponent placeable, Rectangle selectionRectangle)", "full_signature": "private void selectPlaceable(PlaceablePetriNetComponent placeable, Rectangle selectionRectangle)", "class_method_signature": "PetriNetController.selectPlaceable(PlaceablePetriNetComponent placeable, Rectangle selectionRectangle)", "testcase": false, "constructor": false}, {"identifier": "deleteSelection", "parameters": "()", "modifiers": "public", "return": "List<UndoableEdit>", "signature": "List<UndoableEdit> deleteSelection()", "full_signature": "public List<UndoableEdit> deleteSelection()", "class_method_signature": "PetriNetController.deleteSelection()", "testcase": false, "constructor": false}, {"identifier": "deleteComponent", "parameters": "(PetriNetComponent component)", "modifiers": "private", "return": "UndoableEdit", "signature": "UndoableEdit deleteComponent(PetriNetComponent component)", "full_signature": "private UndoableEdit deleteComponent(PetriNetComponent component)", "class_method_signature": "PetriNetController.deleteComponent(PetriNetComponent component)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(PetriNetComponent component)", "modifiers": "public", "return": "UndoableEdit", "signature": "UndoableEdit delete(PetriNetComponent component)", "full_signature": "public UndoableEdit delete(PetriNetComponent component)", "class_method_signature": "PetriNetController.delete(PetriNetComponent component)", "testcase": false, "constructor": false}, {"identifier": "createNewToken", "parameters": "(String name, Color color)", "modifiers": "public", "return": "void", "signature": "void createNewToken(String name, Color color)", "full_signature": "public void createNewToken(String name, Color color)", "class_method_signature": "PetriNetController.createNewToken(String name, Color color)", "testcase": false, "constructor": false}, {"identifier": "getNetTokens", "parameters": "()", "modifiers": "public", "return": "Collection<Token>", "signature": "Collection<Token> getNetTokens()", "full_signature": "public Collection<Token> getNetTokens()", "class_method_signature": "PetriNetController.getNetTokens()", "testcase": false, "constructor": false}, {"identifier": "updateToken", "parameters": "(String currentTokenName, String name, Color color)", "modifiers": "public", "return": "void", "signature": "void updateToken(String currentTokenName, String name, Color color)", "full_signature": "public void updateToken(String currentTokenName, String name, Color color)", "class_method_signature": "PetriNetController.updateToken(String currentTokenName, String name, Color color)", "testcase": false, "constructor": false}, {"identifier": "getPetriNet", "parameters": "()", "modifiers": "public", "return": "PetriNet", "signature": "PetriNet getPetriNet()", "full_signature": "public PetriNet getPetriNet()", "class_method_signature": "PetriNetController.getPetriNet()", "testcase": false, "constructor": false}, {"identifier": "getArcController", "parameters": "(Arc<S, T> arc)", "modifiers": "public", "return": "ArcController<S, T>", "signature": "ArcController<S, T> getArcController(Arc<S, T> arc)", "full_signature": "public ArcController<S, T> getArcController(Arc<S, T> arc)", "class_method_signature": "PetriNetController.getArcController(Arc<S, T> arc)", "testcase": false, "constructor": false}, {"identifier": "getPlaceController", "parameters": "(Place place)", "modifiers": "public", "return": "PlaceController", "signature": "PlaceController getPlaceController(Place place)", "full_signature": "public PlaceController getPlaceController(Place place)", "class_method_signature": "PetriNetController.getPlaceController(Place place)", "testcase": false, "constructor": false}, {"identifier": "getAnnotationController", "parameters": "(Annotation annotation)", "modifiers": "public", "return": "AnnotationController", "signature": "AnnotationController getAnnotationController(Annotation annotation)", "full_signature": "public AnnotationController getAnnotationController(Annotation annotation)", "class_method_signature": "PetriNetController.getAnnotationController(Annotation annotation)", "testcase": false, "constructor": false}, {"identifier": "getTransitionController", "parameters": "(final Transition transition)", "modifiers": "public", "return": "TransitionController", "signature": "TransitionController getTransitionController(final Transition transition)", "full_signature": "public TransitionController getTransitionController(final Transition transition)", "class_method_signature": "PetriNetController.getTransitionController(final Transition transition)", "testcase": false, "constructor": false}, {"identifier": "getRateParameterController", "parameters": "(final String rateParameter)", "modifiers": "public", "return": "RateParameterController", "signature": "RateParameterController getRateParameterController(final String rateParameter)", "full_signature": "public RateParameterController getRateParameterController(final String rateParameter)", "class_method_signature": "PetriNetController.getRateParameterController(final String rateParameter)", "testcase": false, "constructor": false}, {"identifier": "selectToken", "parameters": "(String tokenName)", "modifiers": "public", "return": "void", "signature": "void selectToken(String tokenName)", "full_signature": "public void selectToken(String tokenName)", "class_method_signature": "PetriNetController.selectToken(String tokenName)", "testcase": false, "constructor": false}, {"identifier": "getToken", "parameters": "(String name)", "modifiers": "public", "return": "Token", "signature": "Token getToken(String name)", "full_signature": "public Token getToken(String name)", "class_method_signature": "PetriNetController.getToken(String name)", "testcase": false, "constructor": false}, {"identifier": "copySelection", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void copySelection()", "full_signature": "public void copySelection()", "class_method_signature": "PetriNetController.copySelection()", "testcase": false, "constructor": false}, {"identifier": "isCopyInProgress", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCopyInProgress()", "full_signature": "public boolean isCopyInProgress()", "class_method_signature": "PetriNetController.isCopyInProgress()", "testcase": false, "constructor": false}, {"identifier": "cancelPaste", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void cancelPaste()", "full_signature": "public void cancelPaste()", "class_method_signature": "PetriNetController.cancelPaste()", "testcase": false, "constructor": false}, {"identifier": "getSelectedToken", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSelectedToken()", "full_signature": "public String getSelectedToken()", "class_method_signature": "PetriNetController.getSelectedToken()", "testcase": false, "constructor": false}, {"identifier": "getAnimator", "parameters": "()", "modifiers": "public", "return": "GUIAnimator", "signature": "GUIAnimator getAnimator()", "full_signature": "public GUIAnimator getAnimator()", "class_method_signature": "PetriNetController.getAnimator()", "testcase": false, "constructor": false}, {"identifier": "getZoomController", "parameters": "()", "modifiers": "public", "return": "ZoomController", "signature": "ZoomController getZoomController()", "full_signature": "public ZoomController getZoomController()", "class_method_signature": "PetriNetController.getZoomController()", "testcase": false, "constructor": false}, {"identifier": "paste", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void paste()", "full_signature": "public void paste()", "class_method_signature": "PetriNetController.paste()", "testcase": false, "constructor": false}, {"identifier": "getDragManager", "parameters": "()", "modifiers": "public", "return": "DragManager", "signature": "DragManager getDragManager()", "full_signature": "public DragManager getDragManager()", "class_method_signature": "PetriNetController.getDragManager()", "testcase": false, "constructor": false}, {"identifier": "getRateParameters", "parameters": "()", "modifiers": "public", "return": "Collection<RateParameter>", "signature": "Collection<RateParameter> getRateParameters()", "full_signature": "public Collection<RateParameter> getRateParameters()", "class_method_signature": "PetriNetController.getRateParameters()", "testcase": false, "constructor": false}, {"identifier": "isUniqueName", "parameters": "(String id)", "modifiers": "public", "return": "boolean", "signature": "boolean isUniqueName(String id)", "full_signature": "public boolean isUniqueName(String id)", "class_method_signature": "PetriNetController.isUniqueName(String id)", "testcase": false, "constructor": false}, {"identifier": "hasChanged", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasChanged()", "full_signature": "public boolean hasChanged()", "class_method_signature": "PetriNetController.hasChanged()", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void save()", "full_signature": "public void save()", "class_method_signature": "PetriNetController.save()", "testcase": false, "constructor": false}, {"identifier": "parseFunctionalExpression", "parameters": "(String expr)", "modifiers": "public", "return": "FunctionalResults<Double>", "signature": "FunctionalResults<Double> parseFunctionalExpression(String expr)", "full_signature": "public FunctionalResults<Double> parseFunctionalExpression(String expr)", "class_method_signature": "PetriNetController.parseFunctionalExpression(String expr)", "testcase": false, "constructor": false}, {"identifier": "getUndoManager", "parameters": "()", "modifiers": "public", "return": "UndoManager", "signature": "UndoManager getUndoManager()", "full_signature": "public UndoManager getUndoManager()", "class_method_signature": "PetriNetController.getUndoManager()", "testcase": false, "constructor": false}, {"identifier": "getSelectedComponents", "parameters": "()", "modifiers": "public", "return": "Set<PetriNetComponent>", "signature": "Set<PetriNetComponent> getSelectedComponents()", "full_signature": "public Set<PetriNetComponent> getSelectedComponents()", "class_method_signature": "PetriNetController.getSelectedComponents()", "testcase": false, "constructor": false}, {"identifier": "getUndoListener", "parameters": "()", "modifiers": "public", "return": "UndoableEditListener", "signature": "UndoableEditListener getUndoListener()", "full_signature": "public UndoableEditListener getUndoListener()", "class_method_signature": "PetriNetController.getUndoListener()", "testcase": false, "constructor": false}, {"identifier": "toggleAnimation", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean toggleAnimation()", "full_signature": "public boolean toggleAnimation()", "class_method_signature": "PetriNetController.toggleAnimation()", "testcase": false, "constructor": false}, {"identifier": "isInAnimationMode", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isInAnimationMode()", "full_signature": "public boolean isInAnimationMode()", "class_method_signature": "PetriNetController.isInAnimationMode()", "testcase": false, "constructor": false}, {"identifier": "getSelectionManager", "parameters": "()", "modifiers": "public", "return": "SelectionManager", "signature": "SelectionManager getSelectionManager()", "full_signature": "public SelectionManager getSelectionManager()", "class_method_signature": "PetriNetController.getSelectionManager()", "testcase": false, "constructor": false}], "file": "pipe-gui/src/main/java/pipe/controllers/PetriNetController.java"}, "focal_method": {"identifier": "updateToken", "parameters": "(String currentTokenName, String name, Color color)", "modifiers": "public", "return": "void", "body": "public void updateToken(String currentTokenName, String name, Color color)\n            throws PetriNetComponentNotFoundException {\n        Token token = petriNet.getComponent(currentTokenName, Token.class);\n        if (!token.getId().equals(name)) {\n            token.setId(name);\n        }\n        if (!token.getColor().equals(color)) {\n            token.setColor(color);\n        }\n    }", "signature": "void updateToken(String currentTokenName, String name, Color color)", "full_signature": "public void updateToken(String currentTokenName, String name, Color color)", "class_method_signature": "PetriNetController.updateToken(String currentTokenName, String name, Color color)", "testcase": false, "constructor": false, "invocations": ["getComponent", "equals", "getId", "setId", "equals", "getColor", "setColor"]}, "repository": {"repo_id": 13383431, "url": "https://github.com/sarahtattersall/PIPE", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 157, "size": 31480, "license": "licensed"}}