{"test_class": {"identifier": "ComponentWrapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ComponentWrapper instance = createWrapper(EmbedComponentConfig.defaultConfig());", "modifier": "private final", "type": "ComponentWrapper", "declarator": "instance = createWrapper(EmbedComponentConfig.defaultConfig())", "var_name": "instance"}], "file": "com.bsb.common.vaadin.embed/src/test/java/com/bsb/common/vaadin/embed/component/ComponentWrapperTest.java"}, "test_case": {"identifier": "wrapLayoutWithoutDevelopmentHeader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void wrapLayoutWithoutDevelopmentHeader() {\n        final HorizontalLayout layout = new HorizontalLayout();\n        // Wrap without development header should just set the layout as the main content of the window\n        final UI app = instance.wrap(layout);\n\n        assertNotNull(\"Main content must not be null\", app.getContent());\n        assertEquals(\"Layout should be set as the main layout since no header was expected\", layout,\n                app.getContent());\n    }", "signature": "void wrapLayoutWithoutDevelopmentHeader()", "full_signature": "@Test public void wrapLayoutWithoutDevelopmentHeader()", "class_method_signature": "ComponentWrapperTest.wrapLayoutWithoutDevelopmentHeader()", "testcase": true, "constructor": false, "invocations": ["wrap", "assertNotNull", "getContent", "assertEquals", "getContent"]}, "focal_class": {"identifier": "ComponentWrapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int SPLIT_POSITION = 20;", "modifier": "private static final", "type": "int", "declarator": "SPLIT_POSITION = 20", "var_name": "SPLIT_POSITION"}, {"original_string": "private final ComponentBasedVaadinServer server;", "modifier": "private final", "type": "ComponentBasedVaadinServer", "declarator": "server", "var_name": "server"}], "methods": [{"identifier": "ComponentWrapper", "parameters": "(ComponentBasedVaadinServer server)", "modifiers": "public", "return": "", "signature": " ComponentWrapper(ComponentBasedVaadinServer server)", "full_signature": "public  ComponentWrapper(ComponentBasedVaadinServer server)", "class_method_signature": "ComponentWrapper.ComponentWrapper(ComponentBasedVaadinServer server)", "testcase": false, "constructor": true}, {"identifier": "wrap", "parameters": "(Component component)", "modifiers": "public", "return": "UI", "signature": "UI wrap(Component component)", "full_signature": "public UI wrap(Component component)", "class_method_signature": "ComponentWrapper.wrap(Component component)", "testcase": false, "constructor": false}, {"identifier": "wrapLayout", "parameters": "(Layout layout)", "modifiers": "public", "return": "UI", "signature": "UI wrapLayout(Layout layout)", "full_signature": "public UI wrapLayout(Layout layout)", "class_method_signature": "ComponentWrapper.wrapLayout(Layout layout)", "testcase": false, "constructor": false}, {"identifier": "wrapWindow", "parameters": "(Window window)", "modifiers": "public", "return": "UI", "signature": "UI wrapWindow(Window window)", "full_signature": "public UI wrapWindow(Window window)", "class_method_signature": "ComponentWrapper.wrapWindow(Window window)", "testcase": false, "constructor": false}], "file": "com.bsb.common.vaadin.embed/src/main/java/com/bsb/common/vaadin/embed/component/ComponentWrapper.java"}, "focal_method": {"identifier": "wrap", "parameters": "(Component component)", "modifiers": "public", "return": "UI", "body": "public UI wrap(Component component) {\n        if (component instanceof UI) {\n            return (UI) component;\n        }\n        if (component instanceof Window) {\n            return wrapWindow((Window) component);\n        }\n        if (component instanceof Layout) {\n            return wrapLayout((Layout) component);\n        }\n\n        // Ok it's a component we cannot handle directly\n        final VerticalLayout layout = new VerticalLayout();\n        layout.setMargin(true);\n        layout.setSizeFull();\n        layout.addComponent(component);\n        layout.setExpandRatio(component, 1);\n        return wrapLayout(layout);\n    }", "signature": "UI wrap(Component component)", "full_signature": "public UI wrap(Component component)", "class_method_signature": "ComponentWrapper.wrap(Component component)", "testcase": false, "constructor": false, "invocations": ["wrapWindow", "wrapLayout", "setMargin", "setSizeFull", "addComponent", "setExpandRatio", "wrapLayout"]}, "repository": {"repo_id": 3687614, "url": "https://github.com/bsblabs/embed-for-vaadin", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 469, "license": "licensed"}}