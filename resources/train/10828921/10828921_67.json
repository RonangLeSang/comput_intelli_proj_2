{"test_class": {"identifier": "CriterionEntityTest", "superclass": "extends EntityTestBase", "interfaces": "", "fields": [], "file": "genie-web/src/test/java/com/netflix/genie/web/data/services/impl/jpa/entities/CriterionEntityTest.java"}, "test_case": {"identifier": "canSetTags", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void canSetTags() {\n        final CriterionEntity entity = new CriterionEntity();\n        Assertions.assertThat(entity.getTags()).isEmpty();\n        entity.setTags(null);\n        Assertions.assertThat(entity.getTags()).isEmpty();\n        final Set<TagEntity> tags = Sets.newHashSet();\n        entity.setTags(tags);\n        Assertions.assertThat(entity.getTags()).isEmpty();\n        tags.add(new TagEntity(UUID.randomUUID().toString()));\n        entity.setTags(tags);\n        Assertions.assertThat(entity.getTags()).isEqualTo(tags);\n    }", "signature": "void canSetTags()", "full_signature": "@Test void canSetTags()", "class_method_signature": "CriterionEntityTest.canSetTags()", "testcase": true, "constructor": false, "invocations": ["isEmpty", "assertThat", "getTags", "setTags", "isEmpty", "assertThat", "getTags", "newHashSet", "setTags", "isEmpty", "assertThat", "getTags", "add", "toString", "randomUUID", "setTags", "isEqualTo", "assertThat", "getTags"]}, "focal_class": {"identifier": "CriterionEntity", "superclass": "extends IdEntity", "interfaces": "", "fields": [{"original_string": "@Basic\n    @Column(name = \"unique_id\", updatable = false)\n    @Size(max = 255, message = \"The id part of the criterion can't be longer than 255 characters\")\n    private String uniqueId;", "modifier": "@Basic\n    @Column(name = \"unique_id\", updatable = false)\n    @Size(max = 255, message = \"The id part of the criterion can't be longer than 255 characters\")\n    private", "type": "String", "declarator": "uniqueId", "var_name": "uniqueId"}, {"original_string": "@Basic\n    @Column(name = \"name\", updatable = false)\n    @Size(max = 255, message = \"The name part of the criterion can't be longer than 255 characters\")\n    private String name;", "modifier": "@Basic\n    @Column(name = \"name\", updatable = false)\n    @Size(max = 255, message = \"The name part of the criterion can't be longer than 255 characters\")\n    private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "@Basic\n    @Column(name = \"version\", updatable = false)\n    @Size(max = 255, message = \"The version part of the criterion can't be longer than 255 characters\")\n    private String version;", "modifier": "@Basic\n    @Column(name = \"version\", updatable = false)\n    @Size(max = 255, message = \"The version part of the criterion can't be longer than 255 characters\")\n    private", "type": "String", "declarator": "version", "var_name": "version"}, {"original_string": "@Basic\n    @Column(name = \"status\", updatable = false)\n    @Size(max = 255, message = \"The status part of the criterion can't be longer than 255 characters\")\n    private String status;", "modifier": "@Basic\n    @Column(name = \"status\", updatable = false)\n    @Size(max = 255, message = \"The status part of the criterion can't be longer than 255 characters\")\n    private", "type": "String", "declarator": "status", "var_name": "status"}, {"original_string": "@ManyToMany(fetch = FetchType.LAZY)\n    @JoinTable(\n        name = \"criteria_tags\",\n        joinColumns = {\n            @JoinColumn(name = \"criterion_id\", referencedColumnName = \"id\", nullable = false, updatable = false)\n        },\n        inverseJoinColumns = {\n            @JoinColumn(name = \"tag_id\", referencedColumnName = \"id\", nullable = false, updatable = false)\n        }\n    )\n    @ToString.Exclude\n    private Set<TagEntity> tags = new HashSet<>();", "modifier": "@ManyToMany(fetch = FetchType.LAZY)\n    @JoinTable(\n        name = \"criteria_tags\",\n        joinColumns = {\n            @JoinColumn(name = \"criterion_id\", referencedColumnName = \"id\", nullable = false, updatable = false)\n        },\n        inverseJoinColumns = {\n            @JoinColumn(name = \"tag_id\", referencedColumnName = \"id\", nullable = false, updatable = false)\n        }\n    )\n    @ToString.Exclude\n    private", "type": "Set<TagEntity>", "declarator": "tags = new HashSet<>()", "var_name": "tags"}], "methods": [{"identifier": "CriterionEntity", "parameters": "(\n        @Nullable final String uniqueId,\n        @Nullable final String name,\n        @Nullable final String version,\n        @Nullable final String status,\n        @Nullable final Set<TagEntity> tags\n    )", "modifiers": "public", "return": "", "signature": " CriterionEntity(\n        @Nullable final String uniqueId,\n        @Nullable final String name,\n        @Nullable final String version,\n        @Nullable final String status,\n        @Nullable final Set<TagEntity> tags\n    )", "full_signature": "public  CriterionEntity(\n        @Nullable final String uniqueId,\n        @Nullable final String name,\n        @Nullable final String version,\n        @Nullable final String status,\n        @Nullable final Set<TagEntity> tags\n    )", "class_method_signature": "CriterionEntity.CriterionEntity(\n        @Nullable final String uniqueId,\n        @Nullable final String name,\n        @Nullable final String version,\n        @Nullable final String status,\n        @Nullable final Set<TagEntity> tags\n    )", "testcase": false, "constructor": true}, {"identifier": "getUniqueId", "parameters": "()", "modifiers": "public", "return": "Optional<String>", "signature": "Optional<String> getUniqueId()", "full_signature": "public Optional<String> getUniqueId()", "class_method_signature": "CriterionEntity.getUniqueId()", "testcase": false, "constructor": false}, {"identifier": "setUniqueId", "parameters": "(@Nullable final String uniqueId)", "modifiers": "public", "return": "void", "signature": "void setUniqueId(@Nullable final String uniqueId)", "full_signature": "public void setUniqueId(@Nullable final String uniqueId)", "class_method_signature": "CriterionEntity.setUniqueId(@Nullable final String uniqueId)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "Optional<String>", "signature": "Optional<String> getName()", "full_signature": "public Optional<String> getName()", "class_method_signature": "CriterionEntity.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(@Nullable final String name)", "modifiers": "public", "return": "void", "signature": "void setName(@Nullable final String name)", "full_signature": "public void setName(@Nullable final String name)", "class_method_signature": "CriterionEntity.setName(@Nullable final String name)", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "Optional<String>", "signature": "Optional<String> getVersion()", "full_signature": "public Optional<String> getVersion()", "class_method_signature": "CriterionEntity.getVersion()", "testcase": false, "constructor": false}, {"identifier": "setVersion", "parameters": "(@Nullable final String version)", "modifiers": "public", "return": "void", "signature": "void setVersion(@Nullable final String version)", "full_signature": "public void setVersion(@Nullable final String version)", "class_method_signature": "CriterionEntity.setVersion(@Nullable final String version)", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "()", "modifiers": "public", "return": "Optional<String>", "signature": "Optional<String> getStatus()", "full_signature": "public Optional<String> getStatus()", "class_method_signature": "CriterionEntity.getStatus()", "testcase": false, "constructor": false}, {"identifier": "setStatus", "parameters": "(@Nullable final String status)", "modifiers": "public", "return": "void", "signature": "void setStatus(@Nullable final String status)", "full_signature": "public void setStatus(@Nullable final String status)", "class_method_signature": "CriterionEntity.setStatus(@Nullable final String status)", "testcase": false, "constructor": false}, {"identifier": "setTags", "parameters": "(@Nullable final Set<TagEntity> tags)", "modifiers": "public", "return": "void", "signature": "void setTags(@Nullable final Set<TagEntity> tags)", "full_signature": "public void setTags(@Nullable final Set<TagEntity> tags)", "class_method_signature": "CriterionEntity.setTags(@Nullable final Set<TagEntity> tags)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "CriterionEntity.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "CriterionEntity.hashCode()", "testcase": false, "constructor": false}], "file": "genie-web/src/main/java/com/netflix/genie/web/data/services/impl/jpa/entities/CriterionEntity.java"}, "focal_method": {"identifier": "setTags", "parameters": "(@Nullable final Set<TagEntity> tags)", "modifiers": "public", "return": "void", "body": "public void setTags(@Nullable final Set<TagEntity> tags) {\n        this.tags.clear();\n        if (tags != null) {\n            this.tags.addAll(tags);\n        }\n    }", "signature": "void setTags(@Nullable final Set<TagEntity> tags)", "full_signature": "public void setTags(@Nullable final Set<TagEntity> tags)", "class_method_signature": "CriterionEntity.setTags(@Nullable final Set<TagEntity> tags)", "testcase": false, "constructor": false, "invocations": ["clear", "addAll"]}, "repository": {"repo_id": 10828921, "url": "https://github.com/Netflix/genie", "stars": 1273, "created": "6/20/2013 8:35:56 PM +00:00", "updates": "2020-01-27T17:49:42+00:00", "fork": "False", "license": "licensed"}}