{"test_class": {"identifier": "JobRestControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AgentRoutingService agentRoutingService;", "modifier": "private", "type": "AgentRoutingService", "declarator": "agentRoutingService", "var_name": "agentRoutingService"}, {"original_string": "private PersistenceService persistenceService;", "modifier": "private", "type": "PersistenceService", "declarator": "persistenceService", "var_name": "persistenceService"}, {"original_string": "private String hostname;", "modifier": "private", "type": "String", "declarator": "hostname", "var_name": "hostname"}, {"original_string": "private RestTemplate restTemplate;", "modifier": "private", "type": "RestTemplate", "declarator": "restTemplate", "var_name": "restTemplate"}, {"original_string": "private JobDirectoryServerService jobDirectoryServerService;", "modifier": "private", "type": "JobDirectoryServerService", "declarator": "jobDirectoryServerService", "var_name": "jobDirectoryServerService"}, {"original_string": "private JobsProperties jobsProperties;", "modifier": "private", "type": "JobsProperties", "declarator": "jobsProperties", "var_name": "jobsProperties"}, {"original_string": "private Environment environment;", "modifier": "private", "type": "Environment", "declarator": "environment", "var_name": "environment"}, {"original_string": "private JobKillService jobKillService;", "modifier": "private", "type": "JobKillService", "declarator": "jobKillService", "var_name": "jobKillService"}, {"original_string": "private JobRestController controller;", "modifier": "private", "type": "JobRestController", "declarator": "controller", "var_name": "controller"}], "file": "genie-web/src/test/java/com/netflix/genie/web/apis/rest/v3/controllers/JobRestControllerTest.java"}, "test_case": {"identifier": "wontThrow404ForJobOutputRequestIfAgentNotFound", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void wontThrow404ForJobOutputRequestIfAgentNotFound() throws GenieException, GenieCheckedException {\n        this.jobsProperties.getForwarding().setEnabled(true);\n        final String jobId = UUID.randomUUID().toString();\n        final HttpServletRequest request = Mockito.mock(HttpServletRequest.class);\n        final HttpServletResponse response = Mockito.mock(HttpServletResponse.class);\n\n        Mockito\n            .when(request.getRequestURL())\n            .thenReturn(new StringBuffer(\"https://\" + this.hostname + \"/api/v3/jobs/1234/output\"));\n\n        Mockito.when(this.persistenceService.getJobArchiveStatus(jobId)).thenReturn(ArchiveStatus.PENDING);\n        Mockito.when(this.agentRoutingService.getHostnameForAgentConnection(jobId)).thenReturn(Optional.empty());\n\n        Assertions.assertThatThrownBy(\n            () -> this.controller.getJobOutput(jobId, null, request, response)\n        ).isInstanceOf(GenieServerException.class);\n\n        Mockito.verify(this.agentRoutingService, Mockito.times(1)).getHostnameForAgentConnection(Mockito.eq(jobId));\n    }", "signature": "void wontThrow404ForJobOutputRequestIfAgentNotFound()", "full_signature": "@Test void wontThrow404ForJobOutputRequestIfAgentNotFound()", "class_method_signature": "JobRestControllerTest.wontThrow404ForJobOutputRequestIfAgentNotFound()", "testcase": true, "constructor": false, "invocations": ["setEnabled", "getForwarding", "toString", "randomUUID", "mock", "mock", "thenReturn", "when", "getRequestURL", "thenReturn", "when", "getJobArchiveStatus", "thenReturn", "when", "getHostnameForAgentConnection", "empty", "isInstanceOf", "assertThatThrownBy", "getJobOutput", "getHostnameForAgentConnection", "verify", "times", "eq"]}, "focal_class": {"identifier": "JobRestController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TRANSFER_ENCODING_HEADER = \"Transfer-Encoding\";", "modifier": "private static final", "type": "String", "declarator": "TRANSFER_ENCODING_HEADER = \"Transfer-Encoding\"", "var_name": "TRANSFER_ENCODING_HEADER"}, {"original_string": "private static final String FORWARDED_FOR_HEADER = \"X-Forwarded-For\";", "modifier": "private static final", "type": "String", "declarator": "FORWARDED_FOR_HEADER = \"X-Forwarded-For\"", "var_name": "FORWARDED_FOR_HEADER"}, {"original_string": "private static final String NAME_HEADER_COOKIE = \"cookie\";", "modifier": "private static final", "type": "String", "declarator": "NAME_HEADER_COOKIE = \"cookie\"", "var_name": "NAME_HEADER_COOKIE"}, {"original_string": "private static final String JOB_API_BASE_PATH = \"/api/v3/jobs/\";", "modifier": "private static final", "type": "String", "declarator": "JOB_API_BASE_PATH = \"/api/v3/jobs/\"", "var_name": "JOB_API_BASE_PATH"}, {"original_string": "private static final String COMMA = \",\";", "modifier": "private static final", "type": "String", "declarator": "COMMA = \",\"", "var_name": "COMMA"}, {"original_string": "private static final String USER_JOB_LIMIT_EXCEEDED_COUNTER_NAME = \"genie.jobs.submit.rejected.jobs-limit.counter\";", "modifier": "private static final", "type": "String", "declarator": "USER_JOB_LIMIT_EXCEEDED_COUNTER_NAME = \"genie.jobs.submit.rejected.jobs-limit.counter\"", "var_name": "USER_JOB_LIMIT_EXCEEDED_COUNTER_NAME"}, {"original_string": "private final JobLaunchService jobLaunchService;", "modifier": "private final", "type": "JobLaunchService", "declarator": "jobLaunchService", "var_name": "jobLaunchService"}, {"original_string": "private final ApplicationModelAssembler applicationModelAssembler;", "modifier": "private final", "type": "ApplicationModelAssembler", "declarator": "applicationModelAssembler", "var_name": "applicationModelAssembler"}, {"original_string": "private final ClusterModelAssembler clusterModelAssembler;", "modifier": "private final", "type": "ClusterModelAssembler", "declarator": "clusterModelAssembler", "var_name": "clusterModelAssembler"}, {"original_string": "private final CommandModelAssembler commandModelAssembler;", "modifier": "private final", "type": "CommandModelAssembler", "declarator": "commandModelAssembler", "var_name": "commandModelAssembler"}, {"original_string": "private final JobModelAssembler jobModelAssembler;", "modifier": "private final", "type": "JobModelAssembler", "declarator": "jobModelAssembler", "var_name": "jobModelAssembler"}, {"original_string": "private final JobRequestModelAssembler jobRequestModelAssembler;", "modifier": "private final", "type": "JobRequestModelAssembler", "declarator": "jobRequestModelAssembler", "var_name": "jobRequestModelAssembler"}, {"original_string": "private final JobExecutionModelAssembler jobExecutionModelAssembler;", "modifier": "private final", "type": "JobExecutionModelAssembler", "declarator": "jobExecutionModelAssembler", "var_name": "jobExecutionModelAssembler"}, {"original_string": "private final JobMetadataModelAssembler jobMetadataModelAssembler;", "modifier": "private final", "type": "JobMetadataModelAssembler", "declarator": "jobMetadataModelAssembler", "var_name": "jobMetadataModelAssembler"}, {"original_string": "private final JobSearchResultModelAssembler jobSearchResultModelAssembler;", "modifier": "private final", "type": "JobSearchResultModelAssembler", "declarator": "jobSearchResultModelAssembler", "var_name": "jobSearchResultModelAssembler"}, {"original_string": "private final String hostname;", "modifier": "private final", "type": "String", "declarator": "hostname", "var_name": "hostname"}, {"original_string": "private final RestTemplate restTemplate;", "modifier": "private final", "type": "RestTemplate", "declarator": "restTemplate", "var_name": "restTemplate"}, {"original_string": "private final JobDirectoryServerService jobDirectoryServerService;", "modifier": "private final", "type": "JobDirectoryServerService", "declarator": "jobDirectoryServerService", "var_name": "jobDirectoryServerService"}, {"original_string": "private final JobsProperties jobsProperties;", "modifier": "private final", "type": "JobsProperties", "declarator": "jobsProperties", "var_name": "jobsProperties"}, {"original_string": "private final AgentRoutingService agentRoutingService;", "modifier": "private final", "type": "AgentRoutingService", "declarator": "agentRoutingService", "var_name": "agentRoutingService"}, {"original_string": "private final PersistenceService persistenceService;", "modifier": "private final", "type": "PersistenceService", "declarator": "persistenceService", "var_name": "persistenceService"}, {"original_string": "private final Environment environment;", "modifier": "private final", "type": "Environment", "declarator": "environment", "var_name": "environment"}, {"original_string": "private final AttachmentService attachmentService;", "modifier": "private final", "type": "AttachmentService", "declarator": "attachmentService", "var_name": "attachmentService"}, {"original_string": "private final JobKillService jobKillService;", "modifier": "private final", "type": "JobKillService", "declarator": "jobKillService", "var_name": "jobKillService"}, {"original_string": "private final MeterRegistry registry;", "modifier": "private final", "type": "MeterRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "private final Counter submitJobWithoutAttachmentsRate;", "modifier": "private final", "type": "Counter", "declarator": "submitJobWithoutAttachmentsRate", "var_name": "submitJobWithoutAttachmentsRate"}, {"original_string": "private final Counter submitJobWithAttachmentsRate;", "modifier": "private final", "type": "Counter", "declarator": "submitJobWithAttachmentsRate", "var_name": "submitJobWithAttachmentsRate"}], "methods": [{"identifier": "JobRestController", "parameters": "(\n        final JobLaunchService jobLaunchService,\n        final DataServices dataServices,\n        final EntityModelAssemblers entityModelAssemblers,\n        final GenieHostInfo genieHostInfo,\n        @Qualifier(\"genieRestTemplate\") final RestTemplate restTemplate,\n        final JobDirectoryServerService jobDirectoryServerService,\n        final JobsProperties jobsProperties,\n        final MeterRegistry registry,\n        final AgentRoutingService agentRoutingService,\n        final Environment environment,\n        final AttachmentService attachmentService,\n        final JobKillService jobKillService\n    )", "modifiers": "@Autowired @SuppressWarnings(\"checkstyle:parameternumber\") public", "return": "", "signature": " JobRestController(\n        final JobLaunchService jobLaunchService,\n        final DataServices dataServices,\n        final EntityModelAssemblers entityModelAssemblers,\n        final GenieHostInfo genieHostInfo,\n        @Qualifier(\"genieRestTemplate\") final RestTemplate restTemplate,\n        final JobDirectoryServerService jobDirectoryServerService,\n        final JobsProperties jobsProperties,\n        final MeterRegistry registry,\n        final AgentRoutingService agentRoutingService,\n        final Environment environment,\n        final AttachmentService attachmentService,\n        final JobKillService jobKillService\n    )", "full_signature": "@Autowired @SuppressWarnings(\"checkstyle:parameternumber\") public  JobRestController(\n        final JobLaunchService jobLaunchService,\n        final DataServices dataServices,\n        final EntityModelAssemblers entityModelAssemblers,\n        final GenieHostInfo genieHostInfo,\n        @Qualifier(\"genieRestTemplate\") final RestTemplate restTemplate,\n        final JobDirectoryServerService jobDirectoryServerService,\n        final JobsProperties jobsProperties,\n        final MeterRegistry registry,\n        final AgentRoutingService agentRoutingService,\n        final Environment environment,\n        final AttachmentService attachmentService,\n        final JobKillService jobKillService\n    )", "class_method_signature": "JobRestController.JobRestController(\n        final JobLaunchService jobLaunchService,\n        final DataServices dataServices,\n        final EntityModelAssemblers entityModelAssemblers,\n        final GenieHostInfo genieHostInfo,\n        @Qualifier(\"genieRestTemplate\") final RestTemplate restTemplate,\n        final JobDirectoryServerService jobDirectoryServerService,\n        final JobsProperties jobsProperties,\n        final MeterRegistry registry,\n        final AgentRoutingService agentRoutingService,\n        final Environment environment,\n        final AttachmentService attachmentService,\n        final JobKillService jobKillService\n    )", "testcase": false, "constructor": true}, {"identifier": "submitJob", "parameters": "(\n        @Valid @RequestBody final JobRequest jobRequest,\n        @RequestHeader(value = FORWARDED_FOR_HEADER, required = false) @Nullable final String clientHost,\n        @RequestHeader(value = HttpHeaders.USER_AGENT, required = false) @Nullable final String userAgent,\n        final HttpServletRequest httpServletRequest\n    )", "modifiers": "@PostMapping(consumes = MediaType.APPLICATION_JSON_VALUE) @ResponseStatus(HttpStatus.ACCEPTED) public", "return": "ResponseEntity<Void>", "signature": "ResponseEntity<Void> submitJob(\n        @Valid @RequestBody final JobRequest jobRequest,\n        @RequestHeader(value = FORWARDED_FOR_HEADER, required = false) @Nullable final String clientHost,\n        @RequestHeader(value = HttpHeaders.USER_AGENT, required = false) @Nullable final String userAgent,\n        final HttpServletRequest httpServletRequest\n    )", "full_signature": "@PostMapping(consumes = MediaType.APPLICATION_JSON_VALUE) @ResponseStatus(HttpStatus.ACCEPTED) public ResponseEntity<Void> submitJob(\n        @Valid @RequestBody final JobRequest jobRequest,\n        @RequestHeader(value = FORWARDED_FOR_HEADER, required = false) @Nullable final String clientHost,\n        @RequestHeader(value = HttpHeaders.USER_AGENT, required = false) @Nullable final String userAgent,\n        final HttpServletRequest httpServletRequest\n    )", "class_method_signature": "JobRestController.submitJob(\n        @Valid @RequestBody final JobRequest jobRequest,\n        @RequestHeader(value = FORWARDED_FOR_HEADER, required = false) @Nullable final String clientHost,\n        @RequestHeader(value = HttpHeaders.USER_AGENT, required = false) @Nullable final String userAgent,\n        final HttpServletRequest httpServletRequest\n    )", "testcase": false, "constructor": false}, {"identifier": "submitJob", "parameters": "(\n        @Valid @RequestPart(\"request\") final JobRequest jobRequest,\n        @RequestPart(\"attachment\") final MultipartFile[] attachments,\n        @RequestHeader(value = FORWARDED_FOR_HEADER, required = false) @Nullable final String clientHost,\n        @RequestHeader(value = HttpHeaders.USER_AGENT, required = false) @Nullable final String userAgent,\n        final HttpServletRequest httpServletRequest\n    )", "modifiers": "@PostMapping(consumes = MediaType.MULTIPART_FORM_DATA_VALUE) @ResponseStatus(HttpStatus.ACCEPTED) public", "return": "ResponseEntity<Void>", "signature": "ResponseEntity<Void> submitJob(\n        @Valid @RequestPart(\"request\") final JobRequest jobRequest,\n        @RequestPart(\"attachment\") final MultipartFile[] attachments,\n        @RequestHeader(value = FORWARDED_FOR_HEADER, required = false) @Nullable final String clientHost,\n        @RequestHeader(value = HttpHeaders.USER_AGENT, required = false) @Nullable final String userAgent,\n        final HttpServletRequest httpServletRequest\n    )", "full_signature": "@PostMapping(consumes = MediaType.MULTIPART_FORM_DATA_VALUE) @ResponseStatus(HttpStatus.ACCEPTED) public ResponseEntity<Void> submitJob(\n        @Valid @RequestPart(\"request\") final JobRequest jobRequest,\n        @RequestPart(\"attachment\") final MultipartFile[] attachments,\n        @RequestHeader(value = FORWARDED_FOR_HEADER, required = false) @Nullable final String clientHost,\n        @RequestHeader(value = HttpHeaders.USER_AGENT, required = false) @Nullable final String userAgent,\n        final HttpServletRequest httpServletRequest\n    )", "class_method_signature": "JobRestController.submitJob(\n        @Valid @RequestPart(\"request\") final JobRequest jobRequest,\n        @RequestPart(\"attachment\") final MultipartFile[] attachments,\n        @RequestHeader(value = FORWARDED_FOR_HEADER, required = false) @Nullable final String clientHost,\n        @RequestHeader(value = HttpHeaders.USER_AGENT, required = false) @Nullable final String userAgent,\n        final HttpServletRequest httpServletRequest\n    )", "testcase": false, "constructor": false}, {"identifier": "handleSubmitJob", "parameters": "(\n        final JobRequest jobRequest,\n        @Nullable final MultipartFile[] attachments,\n        @Nullable final String clientHost,\n        @Nullable final String userAgent,\n        final HttpServletRequest httpServletRequest\n    )", "modifiers": "private", "return": "ResponseEntity<Void>", "signature": "ResponseEntity<Void> handleSubmitJob(\n        final JobRequest jobRequest,\n        @Nullable final MultipartFile[] attachments,\n        @Nullable final String clientHost,\n        @Nullable final String userAgent,\n        final HttpServletRequest httpServletRequest\n    )", "full_signature": "private ResponseEntity<Void> handleSubmitJob(\n        final JobRequest jobRequest,\n        @Nullable final MultipartFile[] attachments,\n        @Nullable final String clientHost,\n        @Nullable final String userAgent,\n        final HttpServletRequest httpServletRequest\n    )", "class_method_signature": "JobRestController.handleSubmitJob(\n        final JobRequest jobRequest,\n        @Nullable final MultipartFile[] attachments,\n        @Nullable final String clientHost,\n        @Nullable final String userAgent,\n        final HttpServletRequest httpServletRequest\n    )", "testcase": false, "constructor": false}, {"identifier": "checkRejectJob", "parameters": "(\n        final JobRequest jobRequest\n    )", "modifiers": "private", "return": "void", "signature": "void checkRejectJob(\n        final JobRequest jobRequest\n    )", "full_signature": "private void checkRejectJob(\n        final JobRequest jobRequest\n    )", "class_method_signature": "JobRestController.checkRejectJob(\n        final JobRequest jobRequest\n    )", "testcase": false, "constructor": false}, {"identifier": "getJob", "parameters": "(@PathVariable(\"id\") final String id)", "modifiers": "@GetMapping(value = \"/{id}\", produces = MediaTypes.HAL_JSON_VALUE) public", "return": "EntityModel<Job>", "signature": "EntityModel<Job> getJob(@PathVariable(\"id\") final String id)", "full_signature": "@GetMapping(value = \"/{id}\", produces = MediaTypes.HAL_JSON_VALUE) public EntityModel<Job> getJob(@PathVariable(\"id\") final String id)", "class_method_signature": "JobRestController.getJob(@PathVariable(\"id\") final String id)", "testcase": false, "constructor": false}, {"identifier": "getJobStatus", "parameters": "(@PathVariable(\"id\") final String id)", "modifiers": "@GetMapping(value = \"/{id}/status\", produces = MediaType.APPLICATION_JSON_VALUE) public", "return": "JsonNode", "signature": "JsonNode getJobStatus(@PathVariable(\"id\") final String id)", "full_signature": "@GetMapping(value = \"/{id}/status\", produces = MediaType.APPLICATION_JSON_VALUE) public JsonNode getJobStatus(@PathVariable(\"id\") final String id)", "class_method_signature": "JobRestController.getJobStatus(@PathVariable(\"id\") final String id)", "testcase": false, "constructor": false}, {"identifier": "findJobs", "parameters": "(\n        @RequestParam(value = \"id\", required = false) @Nullable final String id,\n        @RequestParam(value = \"name\", required = false) @Nullable final String name,\n        @RequestParam(value = \"user\", required = false) @Nullable final String user,\n        @RequestParam(value = \"status\", required = false) @Nullable final Set<String> statuses,\n        @RequestParam(value = \"tag\", required = false) @Nullable final Set<String> tags,\n        @RequestParam(value = \"clusterName\", required = false) @Nullable final String clusterName,\n        @RequestParam(value = \"clusterId\", required = false) @Nullable final String clusterId,\n        @RequestParam(value = \"commandName\", required = false) @Nullable final String commandName,\n        @RequestParam(value = \"commandId\", required = false) @Nullable final String commandId,\n        @RequestParam(value = \"minStarted\", required = false) @Nullable final Long minStarted,\n        @RequestParam(value = \"maxStarted\", required = false) @Nullable final Long maxStarted,\n        @RequestParam(value = \"minFinished\", required = false) @Nullable final Long minFinished,\n        @RequestParam(value = \"maxFinished\", required = false) @Nullable final Long maxFinished,\n        @RequestParam(value = \"grouping\", required = false) @Nullable final String grouping,\n        @RequestParam(value = \"groupingInstance\", required = false) @Nullable final String groupingInstance,\n        @PageableDefault(sort = {\"created\"}, direction = Sort.Direction.DESC) final Pageable page,\n        final PagedResourcesAssembler<JobSearchResult> assembler\n    )", "modifiers": "@GetMapping(produces = MediaTypes.HAL_JSON_VALUE) @ResponseStatus(HttpStatus.OK) @SuppressWarnings(\"checkstyle:parameternumber\") public", "return": "PagedModel<EntityModel<JobSearchResult>>", "signature": "PagedModel<EntityModel<JobSearchResult>> findJobs(\n        @RequestParam(value = \"id\", required = false) @Nullable final String id,\n        @RequestParam(value = \"name\", required = false) @Nullable final String name,\n        @RequestParam(value = \"user\", required = false) @Nullable final String user,\n        @RequestParam(value = \"status\", required = false) @Nullable final Set<String> statuses,\n        @RequestParam(value = \"tag\", required = false) @Nullable final Set<String> tags,\n        @RequestParam(value = \"clusterName\", required = false) @Nullable final String clusterName,\n        @RequestParam(value = \"clusterId\", required = false) @Nullable final String clusterId,\n        @RequestParam(value = \"commandName\", required = false) @Nullable final String commandName,\n        @RequestParam(value = \"commandId\", required = false) @Nullable final String commandId,\n        @RequestParam(value = \"minStarted\", required = false) @Nullable final Long minStarted,\n        @RequestParam(value = \"maxStarted\", required = false) @Nullable final Long maxStarted,\n        @RequestParam(value = \"minFinished\", required = false) @Nullable final Long minFinished,\n        @RequestParam(value = \"maxFinished\", required = false) @Nullable final Long maxFinished,\n        @RequestParam(value = \"grouping\", required = false) @Nullable final String grouping,\n        @RequestParam(value = \"groupingInstance\", required = false) @Nullable final String groupingInstance,\n        @PageableDefault(sort = {\"created\"}, direction = Sort.Direction.DESC) final Pageable page,\n        final PagedResourcesAssembler<JobSearchResult> assembler\n    )", "full_signature": "@GetMapping(produces = MediaTypes.HAL_JSON_VALUE) @ResponseStatus(HttpStatus.OK) @SuppressWarnings(\"checkstyle:parameternumber\") public PagedModel<EntityModel<JobSearchResult>> findJobs(\n        @RequestParam(value = \"id\", required = false) @Nullable final String id,\n        @RequestParam(value = \"name\", required = false) @Nullable final String name,\n        @RequestParam(value = \"user\", required = false) @Nullable final String user,\n        @RequestParam(value = \"status\", required = false) @Nullable final Set<String> statuses,\n        @RequestParam(value = \"tag\", required = false) @Nullable final Set<String> tags,\n        @RequestParam(value = \"clusterName\", required = false) @Nullable final String clusterName,\n        @RequestParam(value = \"clusterId\", required = false) @Nullable final String clusterId,\n        @RequestParam(value = \"commandName\", required = false) @Nullable final String commandName,\n        @RequestParam(value = \"commandId\", required = false) @Nullable final String commandId,\n        @RequestParam(value = \"minStarted\", required = false) @Nullable final Long minStarted,\n        @RequestParam(value = \"maxStarted\", required = false) @Nullable final Long maxStarted,\n        @RequestParam(value = \"minFinished\", required = false) @Nullable final Long minFinished,\n        @RequestParam(value = \"maxFinished\", required = false) @Nullable final Long maxFinished,\n        @RequestParam(value = \"grouping\", required = false) @Nullable final String grouping,\n        @RequestParam(value = \"groupingInstance\", required = false) @Nullable final String groupingInstance,\n        @PageableDefault(sort = {\"created\"}, direction = Sort.Direction.DESC) final Pageable page,\n        final PagedResourcesAssembler<JobSearchResult> assembler\n    )", "class_method_signature": "JobRestController.findJobs(\n        @RequestParam(value = \"id\", required = false) @Nullable final String id,\n        @RequestParam(value = \"name\", required = false) @Nullable final String name,\n        @RequestParam(value = \"user\", required = false) @Nullable final String user,\n        @RequestParam(value = \"status\", required = false) @Nullable final Set<String> statuses,\n        @RequestParam(value = \"tag\", required = false) @Nullable final Set<String> tags,\n        @RequestParam(value = \"clusterName\", required = false) @Nullable final String clusterName,\n        @RequestParam(value = \"clusterId\", required = false) @Nullable final String clusterId,\n        @RequestParam(value = \"commandName\", required = false) @Nullable final String commandName,\n        @RequestParam(value = \"commandId\", required = false) @Nullable final String commandId,\n        @RequestParam(value = \"minStarted\", required = false) @Nullable final Long minStarted,\n        @RequestParam(value = \"maxStarted\", required = false) @Nullable final Long maxStarted,\n        @RequestParam(value = \"minFinished\", required = false) @Nullable final Long minFinished,\n        @RequestParam(value = \"maxFinished\", required = false) @Nullable final Long maxFinished,\n        @RequestParam(value = \"grouping\", required = false) @Nullable final String grouping,\n        @RequestParam(value = \"groupingInstance\", required = false) @Nullable final String groupingInstance,\n        @PageableDefault(sort = {\"created\"}, direction = Sort.Direction.DESC) final Pageable page,\n        final PagedResourcesAssembler<JobSearchResult> assembler\n    )", "testcase": false, "constructor": false}, {"identifier": "killJob", "parameters": "(\n        @PathVariable(\"id\") final String id,\n        @RequestHeader(name = JobConstants.GENIE_FORWARDED_FROM_HEADER, required = false)\n        @Nullable final String forwardedFrom,\n        final HttpServletRequest request,\n        final HttpServletResponse response\n    )", "modifiers": "@DeleteMapping(value = \"/{id}\") @ResponseStatus(HttpStatus.ACCEPTED) public", "return": "void", "signature": "void killJob(\n        @PathVariable(\"id\") final String id,\n        @RequestHeader(name = JobConstants.GENIE_FORWARDED_FROM_HEADER, required = false)\n        @Nullable final String forwardedFrom,\n        final HttpServletRequest request,\n        final HttpServletResponse response\n    )", "full_signature": "@DeleteMapping(value = \"/{id}\") @ResponseStatus(HttpStatus.ACCEPTED) public void killJob(\n        @PathVariable(\"id\") final String id,\n        @RequestHeader(name = JobConstants.GENIE_FORWARDED_FROM_HEADER, required = false)\n        @Nullable final String forwardedFrom,\n        final HttpServletRequest request,\n        final HttpServletResponse response\n    )", "class_method_signature": "JobRestController.killJob(\n        @PathVariable(\"id\") final String id,\n        @RequestHeader(name = JobConstants.GENIE_FORWARDED_FROM_HEADER, required = false)\n        @Nullable final String forwardedFrom,\n        final HttpServletRequest request,\n        final HttpServletResponse response\n    )", "testcase": false, "constructor": false}, {"identifier": "getJobRequest", "parameters": "(\n        @PathVariable(\"id\") final String id)", "modifiers": "@GetMapping(value = \"/{id}/request\", produces = MediaTypes.HAL_JSON_VALUE) @ResponseStatus(HttpStatus.OK) public", "return": "EntityModel<JobRequest>", "signature": "EntityModel<JobRequest> getJobRequest(\n        @PathVariable(\"id\") final String id)", "full_signature": "@GetMapping(value = \"/{id}/request\", produces = MediaTypes.HAL_JSON_VALUE) @ResponseStatus(HttpStatus.OK) public EntityModel<JobRequest> getJobRequest(\n        @PathVariable(\"id\") final String id)", "class_method_signature": "JobRestController.getJobRequest(\n        @PathVariable(\"id\") final String id)", "testcase": false, "constructor": false}, {"identifier": "getJobExecution", "parameters": "(\n        @PathVariable(\"id\") final String id\n    )", "modifiers": "@GetMapping(value = \"/{id}/execution\", produces = MediaTypes.HAL_JSON_VALUE) @ResponseStatus(HttpStatus.OK) public", "return": "EntityModel<JobExecution>", "signature": "EntityModel<JobExecution> getJobExecution(\n        @PathVariable(\"id\") final String id\n    )", "full_signature": "@GetMapping(value = \"/{id}/execution\", produces = MediaTypes.HAL_JSON_VALUE) @ResponseStatus(HttpStatus.OK) public EntityModel<JobExecution> getJobExecution(\n        @PathVariable(\"id\") final String id\n    )", "class_method_signature": "JobRestController.getJobExecution(\n        @PathVariable(\"id\") final String id\n    )", "testcase": false, "constructor": false}, {"identifier": "getJobMetadata", "parameters": "(@PathVariable(\"id\") final String id)", "modifiers": "@GetMapping(value = \"/{id}/metadata\", produces = MediaTypes.HAL_JSON_VALUE) @ResponseStatus(HttpStatus.OK) public", "return": "EntityModel<JobMetadata>", "signature": "EntityModel<JobMetadata> getJobMetadata(@PathVariable(\"id\") final String id)", "full_signature": "@GetMapping(value = \"/{id}/metadata\", produces = MediaTypes.HAL_JSON_VALUE) @ResponseStatus(HttpStatus.OK) public EntityModel<JobMetadata> getJobMetadata(@PathVariable(\"id\") final String id)", "class_method_signature": "JobRestController.getJobMetadata(@PathVariable(\"id\") final String id)", "testcase": false, "constructor": false}, {"identifier": "getJobCluster", "parameters": "(@PathVariable(\"id\") final String id)", "modifiers": "@GetMapping(value = \"/{id}/cluster\", produces = MediaTypes.HAL_JSON_VALUE) @ResponseStatus(HttpStatus.OK) public", "return": "EntityModel<Cluster>", "signature": "EntityModel<Cluster> getJobCluster(@PathVariable(\"id\") final String id)", "full_signature": "@GetMapping(value = \"/{id}/cluster\", produces = MediaTypes.HAL_JSON_VALUE) @ResponseStatus(HttpStatus.OK) public EntityModel<Cluster> getJobCluster(@PathVariable(\"id\") final String id)", "class_method_signature": "JobRestController.getJobCluster(@PathVariable(\"id\") final String id)", "testcase": false, "constructor": false}, {"identifier": "getJobCommand", "parameters": "(@PathVariable(\"id\") final String id)", "modifiers": "@GetMapping(value = \"/{id}/command\", produces = MediaTypes.HAL_JSON_VALUE) @ResponseStatus(HttpStatus.OK) public", "return": "EntityModel<Command>", "signature": "EntityModel<Command> getJobCommand(@PathVariable(\"id\") final String id)", "full_signature": "@GetMapping(value = \"/{id}/command\", produces = MediaTypes.HAL_JSON_VALUE) @ResponseStatus(HttpStatus.OK) public EntityModel<Command> getJobCommand(@PathVariable(\"id\") final String id)", "class_method_signature": "JobRestController.getJobCommand(@PathVariable(\"id\") final String id)", "testcase": false, "constructor": false}, {"identifier": "getJobApplications", "parameters": "(\n        @PathVariable(\"id\") final String id\n    )", "modifiers": "@GetMapping(value = \"/{id}/applications\", produces = MediaTypes.HAL_JSON_VALUE) @ResponseStatus(HttpStatus.OK) public", "return": "List<EntityModel<Application>>", "signature": "List<EntityModel<Application>> getJobApplications(\n        @PathVariable(\"id\") final String id\n    )", "full_signature": "@GetMapping(value = \"/{id}/applications\", produces = MediaTypes.HAL_JSON_VALUE) @ResponseStatus(HttpStatus.OK) public List<EntityModel<Application>> getJobApplications(\n        @PathVariable(\"id\") final String id\n    )", "class_method_signature": "JobRestController.getJobApplications(\n        @PathVariable(\"id\") final String id\n    )", "testcase": false, "constructor": false}, {"identifier": "getJobOutput", "parameters": "(\n        @PathVariable(\"id\") final String id,\n        @RequestHeader(name = JobConstants.GENIE_FORWARDED_FROM_HEADER, required = false)\n        @Nullable final String forwardedFrom,\n        final HttpServletRequest request,\n        final HttpServletResponse response\n    )", "modifiers": "@GetMapping( value = { \"/{id}/output\", \"/{id}/output/\", \"/{id}/output/**\" } ) public", "return": "void", "signature": "void getJobOutput(\n        @PathVariable(\"id\") final String id,\n        @RequestHeader(name = JobConstants.GENIE_FORWARDED_FROM_HEADER, required = false)\n        @Nullable final String forwardedFrom,\n        final HttpServletRequest request,\n        final HttpServletResponse response\n    )", "full_signature": "@GetMapping( value = { \"/{id}/output\", \"/{id}/output/\", \"/{id}/output/**\" } ) public void getJobOutput(\n        @PathVariable(\"id\") final String id,\n        @RequestHeader(name = JobConstants.GENIE_FORWARDED_FROM_HEADER, required = false)\n        @Nullable final String forwardedFrom,\n        final HttpServletRequest request,\n        final HttpServletResponse response\n    )", "class_method_signature": "JobRestController.getJobOutput(\n        @PathVariable(\"id\") final String id,\n        @RequestHeader(name = JobConstants.GENIE_FORWARDED_FROM_HEADER, required = false)\n        @Nullable final String forwardedFrom,\n        final HttpServletRequest request,\n        final HttpServletResponse response\n    )", "testcase": false, "constructor": false}, {"identifier": "forwardRequest", "parameters": "(\n        final String id,\n        final String path,\n        final String jobHostname,\n        final HttpServletRequest request,\n        final HttpServletResponse response\n    )", "modifiers": "private", "return": "void", "signature": "void forwardRequest(\n        final String id,\n        final String path,\n        final String jobHostname,\n        final HttpServletRequest request,\n        final HttpServletResponse response\n    )", "full_signature": "private void forwardRequest(\n        final String id,\n        final String path,\n        final String jobHostname,\n        final HttpServletRequest request,\n        final HttpServletResponse response\n    )", "class_method_signature": "JobRestController.forwardRequest(\n        final String id,\n        final String path,\n        final String jobHostname,\n        final HttpServletRequest request,\n        final HttpServletResponse response\n    )", "testcase": false, "constructor": false}, {"identifier": "buildForwardHost", "parameters": "(final String jobHostname)", "modifiers": "private", "return": "String", "signature": "String buildForwardHost(final String jobHostname)", "full_signature": "private String buildForwardHost(final String jobHostname)", "class_method_signature": "JobRestController.buildForwardHost(final String jobHostname)", "testcase": false, "constructor": false}, {"identifier": "copyRequestHeaders", "parameters": "(final HttpServletRequest request, final ClientHttpRequest forwardRequest)", "modifiers": "private", "return": "void", "signature": "void copyRequestHeaders(final HttpServletRequest request, final ClientHttpRequest forwardRequest)", "full_signature": "private void copyRequestHeaders(final HttpServletRequest request, final ClientHttpRequest forwardRequest)", "class_method_signature": "JobRestController.copyRequestHeaders(final HttpServletRequest request, final ClientHttpRequest forwardRequest)", "testcase": false, "constructor": false}, {"identifier": "copyResponseHeaders", "parameters": "(final HttpServletResponse response, final ClientHttpResponse forwardResponse)", "modifiers": "private", "return": "void", "signature": "void copyResponseHeaders(final HttpServletResponse response, final ClientHttpResponse forwardResponse)", "full_signature": "private void copyResponseHeaders(final HttpServletResponse response, final ClientHttpResponse forwardResponse)", "class_method_signature": "JobRestController.copyResponseHeaders(final HttpServletResponse response, final ClientHttpResponse forwardResponse)", "testcase": false, "constructor": false}], "file": "genie-web/src/main/java/com/netflix/genie/web/apis/rest/v3/controllers/JobRestController.java"}, "focal_method": {"identifier": "getJobOutput", "parameters": "(\n        @PathVariable(\"id\") final String id,\n        @RequestHeader(name = JobConstants.GENIE_FORWARDED_FROM_HEADER, required = false)\n        @Nullable final String forwardedFrom,\n        final HttpServletRequest request,\n        final HttpServletResponse response\n    )", "modifiers": "@GetMapping( value = { \"/{id}/output\", \"/{id}/output/\", \"/{id}/output/**\" } ) public", "return": "void", "body": "@GetMapping(\n        value = {\n            \"/{id}/output\",\n            \"/{id}/output/\",\n            \"/{id}/output/**\"\n        }\n    )\n    public void getJobOutput(\n        @PathVariable(\"id\") final String id,\n        @RequestHeader(name = JobConstants.GENIE_FORWARDED_FROM_HEADER, required = false)\n        @Nullable final String forwardedFrom,\n        final HttpServletRequest request,\n        final HttpServletResponse response\n    ) throws GenieException, NotFoundException {\n\n        final String path = ControllerUtils.getRemainingPath(request);\n        log.info(\"[getJobOutput] Called to get output path \\\"{}\\\" for job with id \\\"{}\\\"\", path, id);\n\n        final URL baseUrl;\n        try {\n            baseUrl = forwardedFrom == null\n                ? ControllerUtils.getRequestRoot(request, path)\n                : ControllerUtils.getRequestRoot(new URL(forwardedFrom), path);\n        } catch (final MalformedURLException e) {\n            throw new GenieServerException(\"Unable to parse base request url\", e);\n        }\n\n        final ArchiveStatus archiveStatus = this.persistenceService.getJobArchiveStatus(id);\n\n        if (archiveStatus == ArchiveStatus.PENDING) {\n            final String jobHostname;\n            try {\n                jobHostname = this.agentRoutingService\n                    .getHostnameForAgentConnection(id)\n                    .orElseThrow(() -> new NotFoundException(\"No hostname found for job - \" + id));\n            } catch (NotFoundException e) {\n                throw new GenieServerException(\"Failed to route request\", e);\n            }\n\n            final boolean shouldForward = !this.hostname.equals(jobHostname);\n            final boolean canForward = forwardedFrom == null && this.jobsProperties.getForwarding().isEnabled();\n\n            if (shouldForward && canForward) {\n                // Forward request to another node\n                forwardRequest(id, path, jobHostname, request, response);\n                return;\n            } else if (!canForward && shouldForward) {\n                // Should forward but can't\n                throw new GenieServerException(\"Job files are not local, but forwarding is disabled\");\n            }\n        }\n\n        // In any other case, delegate the request to the service\n        log.debug(\"Fetching requested resource \\\"{}\\\" for job \\\"{}\\\"\", path, id);\n        this.jobDirectoryServerService.serveResource(id, baseUrl, path, request, response);\n    }", "signature": "void getJobOutput(\n        @PathVariable(\"id\") final String id,\n        @RequestHeader(name = JobConstants.GENIE_FORWARDED_FROM_HEADER, required = false)\n        @Nullable final String forwardedFrom,\n        final HttpServletRequest request,\n        final HttpServletResponse response\n    )", "full_signature": "@GetMapping( value = { \"/{id}/output\", \"/{id}/output/\", \"/{id}/output/**\" } ) public void getJobOutput(\n        @PathVariable(\"id\") final String id,\n        @RequestHeader(name = JobConstants.GENIE_FORWARDED_FROM_HEADER, required = false)\n        @Nullable final String forwardedFrom,\n        final HttpServletRequest request,\n        final HttpServletResponse response\n    )", "class_method_signature": "JobRestController.getJobOutput(\n        @PathVariable(\"id\") final String id,\n        @RequestHeader(name = JobConstants.GENIE_FORWARDED_FROM_HEADER, required = false)\n        @Nullable final String forwardedFrom,\n        final HttpServletRequest request,\n        final HttpServletResponse response\n    )", "testcase": false, "constructor": false, "invocations": ["getRemainingPath", "info", "getRequestRoot", "getRequestRoot", "getJobArchiveStatus", "orElseThrow", "getHostnameForAgentConnection", "equals", "isEnabled", "getForwarding", "forwardRequest", "debug", "serveResource"]}, "repository": {"repo_id": 10828921, "url": "https://github.com/Netflix/genie", "stars": 1273, "created": "6/20/2013 8:35:56 PM +00:00", "updates": "2020-01-27T17:49:42+00:00", "fork": "False", "license": "licensed"}}