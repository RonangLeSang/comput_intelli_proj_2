{"test_class": {"identifier": "DefaultDirectoryWriterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String REQUEST_URL_BASE\n        = \"http://genie.netflix.com:8080/api/v3/jobs/\" + UUID.randomUUID().toString() + \"/output\";", "modifier": "private static final", "type": "String", "declarator": "REQUEST_URL_BASE\n        = \"http://genie.netflix.com:8080/api/v3/jobs/\" + UUID.randomUUID().toString() + \"/output\"", "var_name": "REQUEST_URL_BASE"}, {"original_string": "private static final String REQUEST_URL_WITH_PARENT = REQUEST_URL_BASE + \"/\" + UUID.randomUUID().toString();", "modifier": "private static final", "type": "String", "declarator": "REQUEST_URL_WITH_PARENT = REQUEST_URL_BASE + \"/\" + UUID.randomUUID().toString()", "var_name": "REQUEST_URL_WITH_PARENT"}, {"original_string": "private static final long PARENT_SIZE = 0L;", "modifier": "private static final", "type": "long", "declarator": "PARENT_SIZE = 0L", "var_name": "PARENT_SIZE"}, {"original_string": "private static final Instant PARENT_LAST_MODIFIED = Instant.now().truncatedTo(ChronoUnit.MILLIS);", "modifier": "private static final", "type": "Instant", "declarator": "PARENT_LAST_MODIFIED = Instant.now().truncatedTo(ChronoUnit.MILLIS)", "var_name": "PARENT_LAST_MODIFIED"}, {"original_string": "private static final String PARENT_NAME = \"../\";", "modifier": "private static final", "type": "String", "declarator": "PARENT_NAME = \"../\"", "var_name": "PARENT_NAME"}, {"original_string": "private static final String PARENT_URL = REQUEST_URL_BASE;", "modifier": "private static final", "type": "String", "declarator": "PARENT_URL = REQUEST_URL_BASE", "var_name": "PARENT_URL"}, {"original_string": "private static final long DIR_1_SIZE = 0L;", "modifier": "private static final", "type": "long", "declarator": "DIR_1_SIZE = 0L", "var_name": "DIR_1_SIZE"}, {"original_string": "private static final Instant DIR_1_LAST_MODIFIED = Instant.now().plus(13142, ChronoUnit.MILLIS);", "modifier": "private static final", "type": "Instant", "declarator": "DIR_1_LAST_MODIFIED = Instant.now().plus(13142, ChronoUnit.MILLIS)", "var_name": "DIR_1_LAST_MODIFIED"}, {"original_string": "private static final String DIR_1_NAME = UUID.randomUUID().toString();", "modifier": "private static final", "type": "String", "declarator": "DIR_1_NAME = UUID.randomUUID().toString()", "var_name": "DIR_1_NAME"}, {"original_string": "private static final String DIR_1_URL = REQUEST_URL_WITH_PARENT + \"/\" + DIR_1_NAME;", "modifier": "private static final", "type": "String", "declarator": "DIR_1_URL = REQUEST_URL_WITH_PARENT + \"/\" + DIR_1_NAME", "var_name": "DIR_1_URL"}, {"original_string": "private static final long DIR_2_SIZE = 0L;", "modifier": "private static final", "type": "long", "declarator": "DIR_2_SIZE = 0L", "var_name": "DIR_2_SIZE"}, {"original_string": "private static final Instant DIR_2_LAST_MODIFIED = Instant.now().minus(1830, ChronoUnit.MILLIS);", "modifier": "private static final", "type": "Instant", "declarator": "DIR_2_LAST_MODIFIED = Instant.now().minus(1830, ChronoUnit.MILLIS)", "var_name": "DIR_2_LAST_MODIFIED"}, {"original_string": "private static final String DIR_2_NAME = UUID.randomUUID().toString();", "modifier": "private static final", "type": "String", "declarator": "DIR_2_NAME = UUID.randomUUID().toString()", "var_name": "DIR_2_NAME"}, {"original_string": "private static final String DIR_2_URL = REQUEST_URL_WITH_PARENT + \"/\" + DIR_2_NAME;", "modifier": "private static final", "type": "String", "declarator": "DIR_2_URL = REQUEST_URL_WITH_PARENT + \"/\" + DIR_2_NAME", "var_name": "DIR_2_URL"}, {"original_string": "private static final long FILE_1_SIZE = 73522431;", "modifier": "private static final", "type": "long", "declarator": "FILE_1_SIZE = 73522431", "var_name": "FILE_1_SIZE"}, {"original_string": "private static final Instant FILE_1_LAST_MODIFIED = Instant.now().plus(1832430, ChronoUnit.MILLIS);", "modifier": "private static final", "type": "Instant", "declarator": "FILE_1_LAST_MODIFIED = Instant.now().plus(1832430, ChronoUnit.MILLIS)", "var_name": "FILE_1_LAST_MODIFIED"}, {"original_string": "private static final String FILE_1_NAME = UUID.randomUUID().toString();", "modifier": "private static final", "type": "String", "declarator": "FILE_1_NAME = UUID.randomUUID().toString()", "var_name": "FILE_1_NAME"}, {"original_string": "private static final String FILE_1_URL = REQUEST_URL_WITH_PARENT + \"/\" + FILE_1_NAME;", "modifier": "private static final", "type": "String", "declarator": "FILE_1_URL = REQUEST_URL_WITH_PARENT + \"/\" + FILE_1_NAME", "var_name": "FILE_1_URL"}, {"original_string": "private static final long FILE_2_SIZE = 735231;", "modifier": "private static final", "type": "long", "declarator": "FILE_2_SIZE = 735231", "var_name": "FILE_2_SIZE"}, {"original_string": "private static final Instant FILE_2_LAST_MODIFIED = Instant.now().plus(1832443, ChronoUnit.MILLIS);", "modifier": "private static final", "type": "Instant", "declarator": "FILE_2_LAST_MODIFIED = Instant.now().plus(1832443, ChronoUnit.MILLIS)", "var_name": "FILE_2_LAST_MODIFIED"}, {"original_string": "private static final String FILE_2_NAME = UUID.randomUUID().toString();", "modifier": "private static final", "type": "String", "declarator": "FILE_2_NAME = UUID.randomUUID().toString()", "var_name": "FILE_2_NAME"}, {"original_string": "private static final String FILE_2_URL = REQUEST_URL_WITH_PARENT + \"/\" + FILE_2_NAME;", "modifier": "private static final", "type": "String", "declarator": "FILE_2_URL = REQUEST_URL_WITH_PARENT + \"/\" + FILE_2_NAME", "var_name": "FILE_2_URL"}, {"original_string": "private DefaultDirectoryWriter writer;", "modifier": "private", "type": "DefaultDirectoryWriter", "declarator": "writer", "var_name": "writer"}, {"original_string": "private File directory;", "modifier": "private", "type": "File", "declarator": "directory", "var_name": "directory"}, {"original_string": "private DefaultDirectoryWriter.Entry directoryEntry1;", "modifier": "private", "type": "DefaultDirectoryWriter.Entry", "declarator": "directoryEntry1", "var_name": "directoryEntry1"}, {"original_string": "private DefaultDirectoryWriter.Entry directoryEntry2;", "modifier": "private", "type": "DefaultDirectoryWriter.Entry", "declarator": "directoryEntry2", "var_name": "directoryEntry2"}, {"original_string": "private DefaultDirectoryWriter.Entry fileEntry1;", "modifier": "private", "type": "DefaultDirectoryWriter.Entry", "declarator": "fileEntry1", "var_name": "fileEntry1"}, {"original_string": "private DefaultDirectoryWriter.Entry fileEntry2;", "modifier": "private", "type": "DefaultDirectoryWriter.Entry", "declarator": "fileEntry2", "var_name": "fileEntry2"}], "file": "genie-web/src/test/java/com/netflix/genie/web/resources/writers/DefaultDirectoryWriterTest.java"}, "test_case": {"identifier": "canConvertToHtml", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void canConvertToHtml() throws Exception {\n        this.setupWithParent();\n        final String html = this.writer.toHtml(this.directory, REQUEST_URL_WITH_PARENT, true);\n        Assertions.assertThat(html).isNotNull();\n\n        // Not going to parse the whole HTML to validate contents, too much work.\n        // So just make sure HTML is valid so at least it doesn't cause error in browser\n        final Tidy tidy = new Tidy();\n        final Writer stringWriter = new StringWriter();\n        tidy.parse(new ByteArrayInputStream(html.getBytes(StandardCharsets.UTF_8)), stringWriter);\n        Assertions.assertThat(tidy.getParseErrors()).isEqualTo(0);\n        Assertions.assertThat(tidy.getParseWarnings()).isEqualTo(0);\n    }", "signature": "void canConvertToHtml()", "full_signature": "@Test void canConvertToHtml()", "class_method_signature": "DefaultDirectoryWriterTest.canConvertToHtml()", "testcase": true, "constructor": false, "invocations": ["setupWithParent", "toHtml", "isNotNull", "assertThat", "parse", "getBytes", "isEqualTo", "assertThat", "getParseErrors", "isEqualTo", "assertThat", "getParseWarnings"]}, "focal_class": {"identifier": "DefaultDirectoryWriter", "superclass": "", "interfaces": "implements DirectoryWriter", "fields": [], "methods": [{"identifier": "directoryToHTML", "parameters": "(final String directoryName, final Directory directory)", "modifiers": "public static", "return": "String", "signature": "String directoryToHTML(final String directoryName, final Directory directory)", "full_signature": "public static String directoryToHTML(final String directoryName, final Directory directory)", "class_method_signature": "DefaultDirectoryWriter.directoryToHTML(final String directoryName, final Directory directory)", "testcase": false, "constructor": false}, {"identifier": "writeFileHtml", "parameters": "(\n        final StringBuilder builder,\n        final boolean shade,\n        final Entry entry,\n        final boolean isDirectory\n    )", "modifiers": "private static", "return": "void", "signature": "void writeFileHtml(\n        final StringBuilder builder,\n        final boolean shade,\n        final Entry entry,\n        final boolean isDirectory\n    )", "full_signature": "private static void writeFileHtml(\n        final StringBuilder builder,\n        final boolean shade,\n        final Entry entry,\n        final boolean isDirectory\n    )", "class_method_signature": "DefaultDirectoryWriter.writeFileHtml(\n        final StringBuilder builder,\n        final boolean shade,\n        final Entry entry,\n        final boolean isDirectory\n    )", "testcase": false, "constructor": false}, {"identifier": "toHtml", "parameters": "(\n        @NotNull final File directory,\n        @URL final String requestURL,\n        final boolean includeParent\n    )", "modifiers": "@Override public", "return": "String", "signature": "String toHtml(\n        @NotNull final File directory,\n        @URL final String requestURL,\n        final boolean includeParent\n    )", "full_signature": "@Override public String toHtml(\n        @NotNull final File directory,\n        @URL final String requestURL,\n        final boolean includeParent\n    )", "class_method_signature": "DefaultDirectoryWriter.toHtml(\n        @NotNull final File directory,\n        @URL final String requestURL,\n        final boolean includeParent\n    )", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(\n        @NotNull final File directory,\n        @URL final String requestURL,\n        final boolean includeParent\n    )", "modifiers": "@Override public", "return": "String", "signature": "String toJson(\n        @NotNull final File directory,\n        @URL final String requestURL,\n        final boolean includeParent\n    )", "full_signature": "@Override public String toJson(\n        @NotNull final File directory,\n        @URL final String requestURL,\n        final boolean includeParent\n    )", "class_method_signature": "DefaultDirectoryWriter.toJson(\n        @NotNull final File directory,\n        @URL final String requestURL,\n        final boolean includeParent\n    )", "testcase": false, "constructor": false}, {"identifier": "getDirectory", "parameters": "(final File directory, final String requestUrl, final boolean includeParent)", "modifiers": "protected", "return": "Directory", "signature": "Directory getDirectory(final File directory, final String requestUrl, final boolean includeParent)", "full_signature": "protected Directory getDirectory(final File directory, final String requestUrl, final boolean includeParent)", "class_method_signature": "DefaultDirectoryWriter.getDirectory(final File directory, final String requestUrl, final boolean includeParent)", "testcase": false, "constructor": false}], "file": "genie-web/src/main/java/com/netflix/genie/web/resources/writers/DefaultDirectoryWriter.java"}, "focal_method": {"identifier": "toHtml", "parameters": "(\n        @NotNull final File directory,\n        @URL final String requestURL,\n        final boolean includeParent\n    )", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toHtml(\n        @NotNull final File directory,\n        @URL final String requestURL,\n        final boolean includeParent\n    ) throws IOException {\n        final Directory dir = this.getDirectory(directory, requestURL, includeParent);\n        return directoryToHTML(directory.getName(), dir);\n    }", "signature": "String toHtml(\n        @NotNull final File directory,\n        @URL final String requestURL,\n        final boolean includeParent\n    )", "full_signature": "@Override public String toHtml(\n        @NotNull final File directory,\n        @URL final String requestURL,\n        final boolean includeParent\n    )", "class_method_signature": "DefaultDirectoryWriter.toHtml(\n        @NotNull final File directory,\n        @URL final String requestURL,\n        final boolean includeParent\n    )", "testcase": false, "constructor": false, "invocations": ["getDirectory", "directoryToHTML", "getName"]}, "repository": {"repo_id": 10828921, "url": "https://github.com/Netflix/genie", "stars": 1273, "created": "6/20/2013 8:35:56 PM +00:00", "updates": "2020-01-27T17:49:42+00:00", "fork": "False", "license": "licensed"}}