{"test_class": {"identifier": "SelfPopulatingCacheTest", "superclass": "extends CacheTest", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(SelfPopulatingCacheTest.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(SelfPopulatingCacheTest.class.getName())", "var_name": "LOG"}, {"original_string": "protected CacheManager manager;", "modifier": "protected", "type": "CacheManager", "declarator": "manager", "var_name": "manager"}, {"original_string": "protected SelfPopulatingCache selfPopulatingCache;", "modifier": "protected", "type": "SelfPopulatingCache", "declarator": "selfPopulatingCache", "var_name": "selfPopulatingCache"}, {"original_string": "protected Ehcache cache;", "modifier": "protected", "type": "Ehcache", "declarator": "cache", "var_name": "cache"}, {"original_string": "protected volatile int cacheEntryFactoryRequests;", "modifier": "protected volatile", "type": "int", "declarator": "cacheEntryFactoryRequests", "var_name": "cacheEntryFactoryRequests"}], "file": "tags/ehcache-2.8.3/ehcache-core/src/test/java/net/sf/ehcache/constructs/blocking/SelfPopulatingCacheTest.java"}, "test_case": {"identifier": "testRefresh", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRefresh() throws Exception {\n        final String value = \"value\";\n        final CountingCacheEntryFactory factory = new CountingCacheEntryFactory(value);\n        selfPopulatingCache = new SelfPopulatingCache(cache, factory);\n\n        // Check the value\n        assertSame(value, selfPopulatingCache.get(\"key\").getObjectValue());\n        assertEquals(1, factory.getCount());\n\n        // Refresh\n        selfPopulatingCache.refresh();\n        assertEquals(2, factory.getCount());\n\n        // Check the value\n        assertSame(value, selfPopulatingCache.get(\"key\").getObjectValue());\n        assertEquals(2, factory.getCount());\n\n    }", "signature": "void testRefresh()", "full_signature": "@Test public void testRefresh()", "class_method_signature": "SelfPopulatingCacheTest.testRefresh()", "testcase": true, "constructor": false, "invocations": ["assertSame", "getObjectValue", "get", "assertEquals", "getCount", "refresh", "assertEquals", "getCount", "assertSame", "getObjectValue", "get", "assertEquals", "getCount"]}, "focal_class": {"identifier": "SelfPopulatingCache", "superclass": "extends BlockingCache", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(SelfPopulatingCache.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(SelfPopulatingCache.class.getName())", "var_name": "LOG"}, {"original_string": "protected final CacheEntryFactory factory;", "modifier": "protected final", "type": "CacheEntryFactory", "declarator": "factory", "var_name": "factory"}], "methods": [{"identifier": "SelfPopulatingCache", "parameters": "(final Ehcache cache, final CacheEntryFactory factory)", "modifiers": "public", "return": "", "signature": " SelfPopulatingCache(final Ehcache cache, final CacheEntryFactory factory)", "full_signature": "public  SelfPopulatingCache(final Ehcache cache, final CacheEntryFactory factory)", "class_method_signature": "SelfPopulatingCache.SelfPopulatingCache(final Ehcache cache, final CacheEntryFactory factory)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "(final Object key)", "modifiers": "@Override public", "return": "Element", "signature": "Element get(final Object key)", "full_signature": "@Override public Element get(final Object key)", "class_method_signature": "SelfPopulatingCache.get(final Object key)", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void refresh()", "full_signature": "public void refresh()", "class_method_signature": "SelfPopulatingCache.refresh()", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "(boolean quiet)", "modifiers": "public", "return": "void", "signature": "void refresh(boolean quiet)", "full_signature": "public void refresh(boolean quiet)", "class_method_signature": "SelfPopulatingCache.refresh(boolean quiet)", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "(Object key)", "modifiers": "public", "return": "Element", "signature": "Element refresh(Object key)", "full_signature": "public Element refresh(Object key)", "class_method_signature": "SelfPopulatingCache.refresh(Object key)", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "(Object key, boolean quiet)", "modifiers": "public", "return": "Element", "signature": "Element refresh(Object key, boolean quiet)", "full_signature": "public Element refresh(Object key, boolean quiet)", "class_method_signature": "SelfPopulatingCache.refresh(Object key, boolean quiet)", "testcase": false, "constructor": false}, {"identifier": "refreshElement", "parameters": "(final Element element, Ehcache backingCache)", "modifiers": "protected", "return": "void", "signature": "void refreshElement(final Element element, Ehcache backingCache)", "full_signature": "protected void refreshElement(final Element element, Ehcache backingCache)", "class_method_signature": "SelfPopulatingCache.refreshElement(final Element element, Ehcache backingCache)", "testcase": false, "constructor": false}, {"identifier": "refreshElement", "parameters": "(final Element element, Ehcache backingCache, boolean quiet)", "modifiers": "protected", "return": "Element", "signature": "Element refreshElement(final Element element, Ehcache backingCache, boolean quiet)", "full_signature": "protected Element refreshElement(final Element element, Ehcache backingCache, boolean quiet)", "class_method_signature": "SelfPopulatingCache.refreshElement(final Element element, Ehcache backingCache, boolean quiet)", "testcase": false, "constructor": false}, {"identifier": "makeAndCheckElement", "parameters": "(Object key, Object value)", "modifiers": "protected static", "return": "Element", "signature": "Element makeAndCheckElement(Object key, Object value)", "full_signature": "protected static Element makeAndCheckElement(Object key, Object value)", "class_method_signature": "SelfPopulatingCache.makeAndCheckElement(Object key, Object value)", "testcase": false, "constructor": false}], "file": "tags/ehcache-2.8.3/ehcache-core/src/main/java/net/sf/ehcache/constructs/blocking/SelfPopulatingCache.java"}, "focal_method": {"identifier": "refresh", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void refresh() throws CacheException {\n        refresh(true);\n    }", "signature": "void refresh()", "full_signature": "public void refresh()", "class_method_signature": "SelfPopulatingCache.refresh()", "testcase": false, "constructor": false, "invocations": ["refresh"]}, "repository": {"repo_id": 10597460, "url": "https://github.com/svn2github/ehcache", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 12, "size": 128373, "license": "licensed"}}