{"test_class": {"identifier": "JCacheTest", "superclass": "extends AbstractCacheTest", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(JCacheTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(JCacheTest.class)", "var_name": "LOG"}], "file": "tags/jcache-1.2/src/test/java/net/sf/ehcache/jcache/JCacheTest.java"}, "test_case": {"identifier": "testLoad", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLoad() throws InterruptedException, ExecutionException, CacheException {\n\n        CountingCacheLoader countingCacheLoader = new CountingCacheLoader();\n        JCache jcache = new JCache(manager.getCache(\"sampleCache1\"), countingCacheLoader);\n        jcache.load(\"key1\");\n        Thread.sleep(500);\n        assertEquals(1, jcache.size());\n        assertEquals(1, countingCacheLoader.getLoadCounter());\n    }", "signature": "void testLoad()", "full_signature": "@Test public void testLoad()", "class_method_signature": "JCacheTest.testLoad()", "testcase": true, "constructor": false, "invocations": ["getCache", "load", "sleep", "assertEquals", "size", "assertEquals", "getLoadCounter"]}, "focal_class": {"identifier": "JCache", "superclass": "", "interfaces": "implements net.sf.jsr107cache.Cache", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(JCache.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(JCache.class)", "var_name": "LOG"}, {"original_string": "private Ehcache cache;", "modifier": "private", "type": "Ehcache", "declarator": "cache", "var_name": "cache"}], "methods": [{"identifier": "JCache", "parameters": "(Ehcache cache)", "modifiers": "public", "return": "", "signature": " JCache(Ehcache cache)", "full_signature": "public  JCache(Ehcache cache)", "class_method_signature": "JCache.JCache(Ehcache cache)", "testcase": false, "constructor": true}, {"identifier": "JCache", "parameters": "(Ehcache cache, net.sf.jsr107cache.CacheLoader cacheLoader)", "modifiers": "public", "return": "", "signature": " JCache(Ehcache cache, net.sf.jsr107cache.CacheLoader cacheLoader)", "full_signature": "public  JCache(Ehcache cache, net.sf.jsr107cache.CacheLoader cacheLoader)", "class_method_signature": "JCache.JCache(Ehcache cache, net.sf.jsr107cache.CacheLoader cacheLoader)", "testcase": false, "constructor": true}, {"identifier": "JCache", "parameters": "(Ehcache cache, JCacheLoader cacheLoader)", "modifiers": "public", "return": "", "signature": " JCache(Ehcache cache, JCacheLoader cacheLoader)", "full_signature": "public  JCache(Ehcache cache, JCacheLoader cacheLoader)", "class_method_signature": "JCache.JCache(Ehcache cache, JCacheLoader cacheLoader)", "testcase": false, "constructor": true}, {"identifier": "setCacheLoader", "parameters": "(JCacheLoader cacheLoader)", "modifiers": "public", "return": "void", "signature": "void setCacheLoader(JCacheLoader cacheLoader)", "full_signature": "public void setCacheLoader(JCacheLoader cacheLoader)", "class_method_signature": "JCache.setCacheLoader(JCacheLoader cacheLoader)", "testcase": false, "constructor": false}, {"identifier": "setCacheLoaderNullCheck", "parameters": "(JCacheLoader cacheLoader)", "modifiers": "private", "return": "void", "signature": "void setCacheLoaderNullCheck(JCacheLoader cacheLoader)", "full_signature": "private void setCacheLoaderNullCheck(JCacheLoader cacheLoader)", "class_method_signature": "JCache.setCacheLoaderNullCheck(JCacheLoader cacheLoader)", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(CacheListener cacheListener)", "modifiers": "public", "return": "void", "signature": "void addListener(CacheListener cacheListener)", "full_signature": "public void addListener(CacheListener cacheListener)", "class_method_signature": "JCache.addListener(CacheListener cacheListener)", "testcase": false, "constructor": false}, {"identifier": "evict", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void evict()", "full_signature": "public void evict()", "class_method_signature": "JCache.evict()", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "(Collection keys)", "modifiers": "public", "return": "Map", "signature": "Map getAll(Collection keys)", "full_signature": "public Map getAll(Collection keys)", "class_method_signature": "JCache.getAll(Collection keys)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "(Collection keys, Object loaderArgument)", "modifiers": "public", "return": "Map", "signature": "Map getAll(Collection keys, Object loaderArgument)", "full_signature": "public Map getAll(Collection keys, Object loaderArgument)", "class_method_signature": "JCache.getAll(Collection keys, Object loaderArgument)", "testcase": false, "constructor": false}, {"identifier": "getCacheLoader", "parameters": "()", "modifiers": "public", "return": "CacheLoader", "signature": "CacheLoader getCacheLoader()", "full_signature": "public CacheLoader getCacheLoader()", "class_method_signature": "JCache.getCacheLoader()", "testcase": false, "constructor": false}, {"identifier": "getCacheEntry", "parameters": "(Object key)", "modifiers": "public", "return": "CacheEntry", "signature": "CacheEntry getCacheEntry(Object key)", "full_signature": "public CacheEntry getCacheEntry(Object key)", "class_method_signature": "JCache.getCacheEntry(Object key)", "testcase": false, "constructor": false}, {"identifier": "getCacheStatistics", "parameters": "()", "modifiers": "public", "return": "CacheStatistics", "signature": "CacheStatistics getCacheStatistics()", "full_signature": "public CacheStatistics getCacheStatistics()", "class_method_signature": "JCache.getCacheStatistics()", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(final Object key)", "modifiers": "public", "return": "void", "signature": "void load(final Object key)", "full_signature": "public void load(final Object key)", "class_method_signature": "JCache.load(final Object key)", "testcase": false, "constructor": false}, {"identifier": "loadAll", "parameters": "(final Collection keys)", "modifiers": "public", "return": "void", "signature": "void loadAll(final Collection keys)", "full_signature": "public void loadAll(final Collection keys)", "class_method_signature": "JCache.loadAll(final Collection keys)", "testcase": false, "constructor": false}, {"identifier": "loadAll", "parameters": "(final Collection keys, final Object loaderArgument)", "modifiers": "public", "return": "void", "signature": "void loadAll(final Collection keys, final Object loaderArgument)", "full_signature": "public void loadAll(final Collection keys, final Object loaderArgument)", "class_method_signature": "JCache.loadAll(final Collection keys, final Object loaderArgument)", "testcase": false, "constructor": false}, {"identifier": "peek", "parameters": "(Object key)", "modifiers": "public", "return": "Object", "signature": "Object peek(Object key)", "full_signature": "public Object peek(Object key)", "class_method_signature": "JCache.peek(Object key)", "testcase": false, "constructor": false}, {"identifier": "removeListener", "parameters": "(CacheListener cacheListener)", "modifiers": "public", "return": "void", "signature": "void removeListener(CacheListener cacheListener)", "full_signature": "public void removeListener(CacheListener cacheListener)", "class_method_signature": "JCache.removeListener(CacheListener cacheListener)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "JCache.size()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "JCache.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "containsKey", "parameters": "(Object key)", "modifiers": "public", "return": "boolean", "signature": "boolean containsKey(Object key)", "full_signature": "public boolean containsKey(Object key)", "class_method_signature": "JCache.containsKey(Object key)", "testcase": false, "constructor": false}, {"identifier": "containsValue", "parameters": "(Object value)", "modifiers": "public", "return": "boolean", "signature": "boolean containsValue(Object value)", "full_signature": "public boolean containsValue(Object value)", "class_method_signature": "JCache.containsValue(Object value)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Object key)", "modifiers": "public", "return": "Object", "signature": "Object get(Object key)", "full_signature": "public Object get(Object key)", "class_method_signature": "JCache.get(Object key)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Object key, Object loaderArgument)", "modifiers": "public", "return": "Object", "signature": "Object get(Object key, Object loaderArgument)", "full_signature": "public Object get(Object key, Object loaderArgument)", "class_method_signature": "JCache.get(Object key, Object loaderArgument)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Object key, JCacheLoader loader)", "modifiers": "public", "return": "Object", "signature": "Object get(Object key, JCacheLoader loader)", "full_signature": "public Object get(Object key, JCacheLoader loader)", "class_method_signature": "JCache.get(Object key, JCacheLoader loader)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Object key, JCacheLoader loader, Object loaderArgument)", "modifiers": "public", "return": "Object", "signature": "Object get(Object key, JCacheLoader loader, Object loaderArgument)", "full_signature": "public Object get(Object key, JCacheLoader loader, Object loaderArgument)", "class_method_signature": "JCache.get(Object key, JCacheLoader loader, Object loaderArgument)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(Object key, Object value)", "modifiers": "public", "return": "Object", "signature": "Object put(Object key, Object value)", "full_signature": "public Object put(Object key, Object value)", "class_method_signature": "JCache.put(Object key, Object value)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(Object key, Object value, int timeToLiveSeconds)", "modifiers": "public", "return": "Object", "signature": "Object put(Object key, Object value, int timeToLiveSeconds)", "full_signature": "public Object put(Object key, Object value, int timeToLiveSeconds)", "class_method_signature": "JCache.put(Object key, Object value, int timeToLiveSeconds)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Object key)", "modifiers": "public", "return": "Object", "signature": "Object remove(Object key)", "full_signature": "public Object remove(Object key)", "class_method_signature": "JCache.remove(Object key)", "testcase": false, "constructor": false}, {"identifier": "putAll", "parameters": "(Map sourceMap)", "modifiers": "public", "return": "void", "signature": "void putAll(Map sourceMap)", "full_signature": "public void putAll(Map sourceMap)", "class_method_signature": "JCache.putAll(Map sourceMap)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "JCache.clear()", "testcase": false, "constructor": false}, {"identifier": "keySet", "parameters": "()", "modifiers": "public", "return": "Set", "signature": "Set keySet()", "full_signature": "public Set keySet()", "class_method_signature": "JCache.keySet()", "testcase": false, "constructor": false}, {"identifier": "values", "parameters": "()", "modifiers": "public", "return": "Collection", "signature": "Collection values()", "full_signature": "public Collection values()", "class_method_signature": "JCache.values()", "testcase": false, "constructor": false}, {"identifier": "entrySet", "parameters": "()", "modifiers": "public", "return": "Set", "signature": "Set entrySet()", "full_signature": "public Set entrySet()", "class_method_signature": "JCache.entrySet()", "testcase": false, "constructor": false}, {"identifier": "setStatisticsAccuracy", "parameters": "(int statisticsAccuracy)", "modifiers": "public", "return": "void", "signature": "void setStatisticsAccuracy(int statisticsAccuracy)", "full_signature": "public void setStatisticsAccuracy(int statisticsAccuracy)", "class_method_signature": "JCache.setStatisticsAccuracy(int statisticsAccuracy)", "testcase": false, "constructor": false}, {"identifier": "getBackingCache", "parameters": "()", "modifiers": "public", "return": "Ehcache", "signature": "Ehcache getBackingCache()", "full_signature": "public Ehcache getBackingCache()", "class_method_signature": "JCache.getBackingCache()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "JCache.toString()", "testcase": false, "constructor": false}], "file": "tags/jcache-1.2/src/main/java/net/sf/ehcache/jcache/JCache.java"}, "focal_method": {"identifier": "load", "parameters": "(final Object key)", "modifiers": "public", "return": "void", "body": "public void load(final Object key) throws CacheException {\n        cache.load(key);\n    }", "signature": "void load(final Object key)", "full_signature": "public void load(final Object key)", "class_method_signature": "JCache.load(final Object key)", "testcase": false, "constructor": false, "invocations": ["load"]}, "repository": {"repo_id": 10597460, "url": "https://github.com/svn2github/ehcache", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 12, "size": 128373, "license": "licensed"}}