{"test_class": {"identifier": "CachingFilterTest", "superclass": "extends AbstractWebTest", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(CachingFilterTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(CachingFilterTest.class)", "var_name": "LOG"}, {"original_string": "private String cachedPageUrl = \"/CachedPage.jsp\";", "modifier": "private", "type": "String", "declarator": "cachedPageUrl = \"/CachedPage.jsp\"", "var_name": "cachedPageUrl"}, {"original_string": "private String cachedPageUrl2 = \"/CachedPage2.jsp\";", "modifier": "private", "type": "String", "declarator": "cachedPageUrl2 = \"/CachedPage2.jsp\"", "var_name": "cachedPageUrl2"}, {"original_string": "private String cachedPageUrl3 = \"/CachedPage3.jsp\";", "modifier": "private", "type": "String", "declarator": "cachedPageUrl3 = \"/CachedPage3.jsp\"", "var_name": "cachedPageUrl3"}, {"original_string": "private String cachedPageUrl4 = \"/CachedPage4.jsp\";", "modifier": "private", "type": "String", "declarator": "cachedPageUrl4 = \"/CachedPage4.jsp\"", "var_name": "cachedPageUrl4"}], "file": "tags/web-2.0.0/src/test/java/net/sf/ehcache/constructs/web/filter/CachingFilterTest.java"}, "test_case": {"identifier": "testParsing", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParsing() {\n\n        CachingFilter filter = new CachingFilter() {\n\n\n            protected CacheManager getCacheManager() {\n                return null;\n            }\n\n            protected String calculateKey(HttpServletRequest httpRequest) {\n                return null;\n            }\n        };\n\n        assertNull(filter.parseBlockingCacheTimeoutMillis(new FilterConfig() {\n\n            public String getFilterName() {\n                return null;\n            }\n\n            public ServletContext getServletContext() {\n                return null;\n            }\n\n            public String getInitParameter(String name) {\n                return null;\n            }\n\n            public Enumeration getInitParameterNames() {\n                return null;\n            }\n\n\n        }));\n        assertNull(filter.parseBlockingCacheTimeoutMillis(new FilterConfig() {\n\n            public String getFilterName() {\n                return null;\n            }\n\n            public ServletContext getServletContext() {\n                return null;\n            }\n\n            public String getInitParameter(String name) {\n                return \"sdfsd\";\n            }\n\n            public Enumeration getInitParameterNames() {\n                return null;\n            }\n\n        }));\n        assertNull(filter.parseBlockingCacheTimeoutMillis(new FilterConfig() {\n\n            public String getFilterName() {\n                return null;\n            }\n\n            public ServletContext getServletContext() {\n                return null;\n            }\n\n            public String getInitParameter(String name) {\n                return \"10L\";\n            }\n\n            public Enumeration getInitParameterNames() {\n                return null;\n            }\n\n        }));\n        assertEquals(1000, filter.parseBlockingCacheTimeoutMillis(new FilterConfig() {\n\n            public String getFilterName() {\n                return null;\n            }\n\n            public ServletContext getServletContext() {\n                return null;\n            }\n\n            public String getInitParameter(String name) {\n                return \"1000\";\n            }\n\n            public Enumeration getInitParameterNames() {\n                return null;\n            }\n\n        }));\n        //120 seconds\n        assertEquals(120000, filter.parseBlockingCacheTimeoutMillis(new FilterConfig() {\n\n            public String getFilterName() {\n                return null;\n            }\n\n            public ServletContext getServletContext() {\n                return null;\n            }\n\n            public String getInitParameter(String name) {\n                return \"120000\";\n            }\n\n            public Enumeration getInitParameterNames() {\n                return null;\n            }\n\n        }));\n    }", "signature": "void testParsing()", "full_signature": "@Test public void testParsing()", "class_method_signature": "CachingFilterTest.testParsing()", "testcase": true, "constructor": false, "invocations": ["assertNull", "parseBlockingCacheTimeoutMillis", "assertNull", "parseBlockingCacheTimeoutMillis", "assertNull", "parseBlockingCacheTimeoutMillis", "assertEquals", "parseBlockingCacheTimeoutMillis", "assertEquals", "parseBlockingCacheTimeoutMillis"]}, "focal_class": {"identifier": "CachingFilter", "superclass": "extends Filter", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(CachingFilter.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(CachingFilter.class)", "var_name": "LOG"}, {"original_string": "private static final String BLOCKING_TIMEOUT_MILLIS = \"blockingTimeoutMillis\";", "modifier": "private static final", "type": "String", "declarator": "BLOCKING_TIMEOUT_MILLIS = \"blockingTimeoutMillis\"", "var_name": "BLOCKING_TIMEOUT_MILLIS"}, {"original_string": "private static final String CACHE_NAME = \"cacheName\";", "modifier": "private static final", "type": "String", "declarator": "CACHE_NAME = \"cacheName\"", "var_name": "CACHE_NAME"}, {"original_string": "protected String cacheName;", "modifier": "protected", "type": "String", "declarator": "cacheName", "var_name": "cacheName"}, {"original_string": "protected BlockingCache blockingCache;", "modifier": "protected", "type": "BlockingCache", "declarator": "blockingCache", "var_name": "blockingCache"}], "methods": [{"identifier": "doInit", "parameters": "(FilterConfig filterConfig)", "modifiers": "public", "return": "void", "signature": "void doInit(FilterConfig filterConfig)", "full_signature": "public void doInit(FilterConfig filterConfig)", "class_method_signature": "CachingFilter.doInit(FilterConfig filterConfig)", "testcase": false, "constructor": false}, {"identifier": "parseBlockingCacheTimeoutMillis", "parameters": "(FilterConfig filterConfig)", "modifiers": "", "return": "Integer", "signature": "Integer parseBlockingCacheTimeoutMillis(FilterConfig filterConfig)", "full_signature": " Integer parseBlockingCacheTimeoutMillis(FilterConfig filterConfig)", "class_method_signature": "CachingFilter.parseBlockingCacheTimeoutMillis(FilterConfig filterConfig)", "testcase": false, "constructor": false}, {"identifier": "setCacheNameIfAnyConfigured", "parameters": "(FilterConfig filterConfig)", "modifiers": "protected", "return": "void", "signature": "void setCacheNameIfAnyConfigured(FilterConfig filterConfig)", "full_signature": "protected void setCacheNameIfAnyConfigured(FilterConfig filterConfig)", "class_method_signature": "CachingFilter.setCacheNameIfAnyConfigured(FilterConfig filterConfig)", "testcase": false, "constructor": false}, {"identifier": "doDestroy", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void doDestroy()", "full_signature": "protected void doDestroy()", "class_method_signature": "CachingFilter.doDestroy()", "testcase": false, "constructor": false}, {"identifier": "doFilter", "parameters": "(final HttpServletRequest request, final HttpServletResponse response,\n                            final FilterChain chain)", "modifiers": "protected", "return": "void", "signature": "void doFilter(final HttpServletRequest request, final HttpServletResponse response,\n                            final FilterChain chain)", "full_signature": "protected void doFilter(final HttpServletRequest request, final HttpServletResponse response,\n                            final FilterChain chain)", "class_method_signature": "CachingFilter.doFilter(final HttpServletRequest request, final HttpServletResponse response,\n                            final FilterChain chain)", "testcase": false, "constructor": false}, {"identifier": "buildPageInfo", "parameters": "(final HttpServletRequest request, final HttpServletResponse response,\n                                     final FilterChain chain)", "modifiers": "protected", "return": "PageInfo", "signature": "PageInfo buildPageInfo(final HttpServletRequest request, final HttpServletResponse response,\n                                     final FilterChain chain)", "full_signature": "protected PageInfo buildPageInfo(final HttpServletRequest request, final HttpServletResponse response,\n                                     final FilterChain chain)", "class_method_signature": "CachingFilter.buildPageInfo(final HttpServletRequest request, final HttpServletResponse response,\n                                     final FilterChain chain)", "testcase": false, "constructor": false}, {"identifier": "buildPage", "parameters": "(final HttpServletRequest request, final HttpServletResponse response,\n                                 final FilterChain chain)", "modifiers": "protected", "return": "PageInfo", "signature": "PageInfo buildPage(final HttpServletRequest request, final HttpServletResponse response,\n                                 final FilterChain chain)", "full_signature": "protected PageInfo buildPage(final HttpServletRequest request, final HttpServletResponse response,\n                                 final FilterChain chain)", "class_method_signature": "CachingFilter.buildPage(final HttpServletRequest request, final HttpServletResponse response,\n                                 final FilterChain chain)", "testcase": false, "constructor": false}, {"identifier": "writeResponse", "parameters": "(final HttpServletRequest request, final HttpServletResponse response, final PageInfo pageInfo)", "modifiers": "protected", "return": "void", "signature": "void writeResponse(final HttpServletRequest request, final HttpServletResponse response, final PageInfo pageInfo)", "full_signature": "protected void writeResponse(final HttpServletRequest request, final HttpServletResponse response, final PageInfo pageInfo)", "class_method_signature": "CachingFilter.writeResponse(final HttpServletRequest request, final HttpServletResponse response, final PageInfo pageInfo)", "testcase": false, "constructor": false}, {"identifier": "setContentType", "parameters": "(final HttpServletResponse response, final PageInfo pageInfo)", "modifiers": "protected", "return": "void", "signature": "void setContentType(final HttpServletResponse response, final PageInfo pageInfo)", "full_signature": "protected void setContentType(final HttpServletResponse response, final PageInfo pageInfo)", "class_method_signature": "CachingFilter.setContentType(final HttpServletResponse response, final PageInfo pageInfo)", "testcase": false, "constructor": false}, {"identifier": "setCookies", "parameters": "(final PageInfo pageInfo, final HttpServletResponse response)", "modifiers": "protected", "return": "void", "signature": "void setCookies(final PageInfo pageInfo, final HttpServletResponse response)", "full_signature": "protected void setCookies(final PageInfo pageInfo, final HttpServletResponse response)", "class_method_signature": "CachingFilter.setCookies(final PageInfo pageInfo, final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "setStatus", "parameters": "(final HttpServletResponse response, final PageInfo pageInfo)", "modifiers": "protected", "return": "void", "signature": "void setStatus(final HttpServletResponse response, final PageInfo pageInfo)", "full_signature": "protected void setStatus(final HttpServletResponse response, final PageInfo pageInfo)", "class_method_signature": "CachingFilter.setStatus(final HttpServletResponse response, final PageInfo pageInfo)", "testcase": false, "constructor": false}, {"identifier": "setHeaders", "parameters": "(final PageInfo pageInfo,\n                              boolean requestAcceptsGzipEncoding,\n                              final HttpServletResponse response)", "modifiers": "protected", "return": "void", "signature": "void setHeaders(final PageInfo pageInfo,\n                              boolean requestAcceptsGzipEncoding,\n                              final HttpServletResponse response)", "full_signature": "protected void setHeaders(final PageInfo pageInfo,\n                              boolean requestAcceptsGzipEncoding,\n                              final HttpServletResponse response)", "class_method_signature": "CachingFilter.setHeaders(final PageInfo pageInfo,\n                              boolean requestAcceptsGzipEncoding,\n                              final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "getCacheName", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getCacheName()", "full_signature": "protected String getCacheName()", "class_method_signature": "CachingFilter.getCacheName()", "testcase": false, "constructor": false}, {"identifier": "getCacheManager", "parameters": "()", "modifiers": "protected abstract", "return": "CacheManager", "signature": "CacheManager getCacheManager()", "full_signature": "protected abstract CacheManager getCacheManager()", "class_method_signature": "CachingFilter.getCacheManager()", "testcase": false, "constructor": false}, {"identifier": "calculateKey", "parameters": "(final HttpServletRequest httpRequest)", "modifiers": "protected abstract", "return": "String", "signature": "String calculateKey(final HttpServletRequest httpRequest)", "full_signature": "protected abstract String calculateKey(final HttpServletRequest httpRequest)", "class_method_signature": "CachingFilter.calculateKey(final HttpServletRequest httpRequest)", "testcase": false, "constructor": false}, {"identifier": "writeContent", "parameters": "(final HttpServletRequest request,\n                                final HttpServletResponse response, final PageInfo pageInfo)", "modifiers": "protected", "return": "void", "signature": "void writeContent(final HttpServletRequest request,\n                                final HttpServletResponse response, final PageInfo pageInfo)", "full_signature": "protected void writeContent(final HttpServletRequest request,\n                                final HttpServletResponse response, final PageInfo pageInfo)", "class_method_signature": "CachingFilter.writeContent(final HttpServletRequest request,\n                                final HttpServletResponse response, final PageInfo pageInfo)", "testcase": false, "constructor": false}, {"identifier": "checkNoReentry", "parameters": "(final HttpServletRequest httpRequest)", "modifiers": "protected", "return": "void", "signature": "void checkNoReentry(final HttpServletRequest httpRequest)", "full_signature": "protected void checkNoReentry(final HttpServletRequest httpRequest)", "class_method_signature": "CachingFilter.checkNoReentry(final HttpServletRequest httpRequest)", "testcase": false, "constructor": false}], "file": "tags/web-2.0.0/src/main/java/net/sf/ehcache/constructs/web/filter/CachingFilter.java"}, "focal_method": {"identifier": "parseBlockingCacheTimeoutMillis", "parameters": "(FilterConfig filterConfig)", "modifiers": "", "return": "Integer", "body": "Integer parseBlockingCacheTimeoutMillis(FilterConfig filterConfig) {\n\n        String timeout = filterConfig.getInitParameter(BLOCKING_TIMEOUT_MILLIS);\n        try {\n            return Integer.parseInt(timeout);\n        } catch (NumberFormatException e) {\n            return null;\n        }\n\n    }", "signature": "Integer parseBlockingCacheTimeoutMillis(FilterConfig filterConfig)", "full_signature": " Integer parseBlockingCacheTimeoutMillis(FilterConfig filterConfig)", "class_method_signature": "CachingFilter.parseBlockingCacheTimeoutMillis(FilterConfig filterConfig)", "testcase": false, "constructor": false, "invocations": ["getInitParameter", "parseInt"]}, "repository": {"repo_id": 10597460, "url": "https://github.com/svn2github/ehcache", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 12, "size": 128373, "license": "licensed"}}