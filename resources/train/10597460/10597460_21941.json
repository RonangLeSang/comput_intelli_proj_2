{"test_class": {"identifier": "SummedSampledCounterTest", "superclass": "", "interfaces": "", "fields": [], "file": "branches/license-server-ehcache-os/ehcache-core/src/test/java/net/sf/ehcache/util/counter/sampled/SummedSampledCounterTest.java"}, "test_case": {"identifier": "testSummed", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSummed() {\n\n        SampledCounterConfig configSec = new SampledCounterConfig(1, 10, true, 0);\n        SampledCounterImpl counter1 = new SampledCounterImpl(configSec);\n        SampledCounterImpl counter2 = new SampledCounterImpl(configSec);\n        SampledCounterImpl counter3 = new SampledCounterImpl(configSec);\n\n        SummedSampledCounter summedCounter = new SummedSampledCounter(configSec, counter1, counter2, counter3);\n\n        counter1.setValue(0);\n        counter2.setValue(0);\n        counter3.setValue(0);\n\n        Assert.assertEquals(0, summedCounter.getValue());\n        counter1.setValue(10);\n        Assert.assertEquals(10, summedCounter.getValue());\n\n        summedCounter.setValue(-10);\n        Assert.assertEquals(10, summedCounter.getValue());\n        Assert.assertEquals(10, summedCounter.getAndReset());\n        Assert.assertEquals(10, summedCounter.getValue());\n\n        counter2.setValue(20);\n        counter3.setValue(30);\n\n        summedCounter.recordSample();\n\n        counter1.getAndReset();\n        counter2.getAndReset();\n        counter3.getAndReset();\n\n        summedCounter.recordSample();\n\n        System.out.println(\"summed\");\n        for (TimeStampedCounterValue tscv : summedCounter.getAllSampleValues()) {\n            System.out.println(\"\\t\" + tscv);\n        }\n\n        Assert.assertEquals(0, summedCounter.getMostRecentSample().getCounterValue());\n        Assert.assertEquals(0, summedCounter.getAllSampleValues()[0].getCounterValue());\n        Assert.assertEquals(60, summedCounter.getAllSampleValues()[1].getCounterValue());\n        Assert.assertEquals(0, summedCounter.getAllSampleValues()[2].getCounterValue());\n\n    }", "signature": "void testSummed()", "full_signature": "@Test public void testSummed()", "class_method_signature": "SummedSampledCounterTest.testSummed()", "testcase": true, "constructor": false, "invocations": ["setValue", "setValue", "setValue", "assertEquals", "getValue", "setValue", "assertEquals", "getValue", "setValue", "assertEquals", "getValue", "assertEquals", "getAndReset", "assertEquals", "getValue", "setValue", "setValue", "recordSample", "getAndReset", "getAndReset", "getAndReset", "recordSample", "println", "getAllSampleValues", "println", "assertEquals", "getCounterValue", "getMostRecentSample", "assertEquals", "getCounterValue", "getAllSampleValues", "assertEquals", "getCounterValue", "getAllSampleValues", "assertEquals", "getCounterValue", "getAllSampleValues"]}, "focal_class": {"identifier": "SummedSampledCounter", "superclass": "extends DerivedSampledCounterImpl", "interfaces": "", "fields": [{"original_string": "private final SampledCounter[] delegates;", "modifier": "private final", "type": "SampledCounter[]", "declarator": "delegates", "var_name": "delegates"}], "methods": [{"identifier": "SummedSampledCounter", "parameters": "(SampledCounterConfig config, SampledCounter... delegates)", "modifiers": "public", "return": "", "signature": " SummedSampledCounter(SampledCounterConfig config, SampledCounter... delegates)", "full_signature": "public  SummedSampledCounter(SampledCounterConfig config, SampledCounter... delegates)", "class_method_signature": "SummedSampledCounter.SummedSampledCounter(SampledCounterConfig config, SampledCounter... delegates)", "testcase": false, "constructor": true}, {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getValue()", "full_signature": "@Override public long getValue()", "class_method_signature": "SummedSampledCounter.getValue()", "testcase": false, "constructor": false}], "file": "branches/license-server-ehcache-os/ehcache-core/src/main/java/net/sf/ehcache/util/counter/sampled/SummedSampledCounter.java"}, "focal_method": {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "long", "body": "@Override\n    public long getValue() {\n        long l = 0;\n        for (SampledCounter sc : delegates) {\n            l = l + sc.getValue();\n        }\n        return l;\n    }", "signature": "long getValue()", "full_signature": "@Override public long getValue()", "class_method_signature": "SummedSampledCounter.getValue()", "testcase": false, "constructor": false, "invocations": ["getValue"]}, "repository": {"repo_id": 10597460, "url": "https://github.com/svn2github/ehcache", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 12, "size": 128373, "license": "licensed"}}