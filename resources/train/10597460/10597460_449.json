{"test_class": {"identifier": "CacheTest", "superclass": "extends AbstractCacheTest", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(CacheTest.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(CacheTest.class.getName())", "var_name": "LOG"}], "file": "tags/ehcache-2.8.3/ehcache-core/src/test/java/net/sf/ehcache/CacheTest.java"}, "test_case": {"identifier": "testSetCacheName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetCacheName() throws CacheException {\n        //Not put into manager.\n        Ehcache cache = new Cache(\"testCache\", 1, true, false, 5, 2);\n\n        try {\n            cache.setName(null);\n            fail();\n        } catch (IllegalArgumentException e) {\n            //expected\n        }\n\n        cache.setName(\"name/with/slash\");\n\n        manager.addCache(cache);\n        try {\n            cache.setName(\"trying_to_change_name_after_initialised\");\n            fail();\n        } catch (IllegalStateException e) {\n            //expected\n        }\n    }", "signature": "void testSetCacheName()", "full_signature": "@Test public void testSetCacheName()", "class_method_signature": "CacheTest.testSetCacheName()", "testcase": true, "constructor": false, "invocations": ["setName", "fail", "setName", "addCache", "setName", "fail"]}, "focal_class": {"identifier": "Cache", "superclass": "", "interfaces": "implements InternalEhcache, StoreListener", "fields": [{"original_string": "public static final String DEFAULT_CACHE_NAME = \"default\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_CACHE_NAME = \"default\"", "var_name": "DEFAULT_CACHE_NAME"}, {"original_string": "public static final String NET_SF_EHCACHE_DISABLED = \"net.sf.ehcache.disabled\";", "modifier": "public static final", "type": "String", "declarator": "NET_SF_EHCACHE_DISABLED = \"net.sf.ehcache.disabled\"", "var_name": "NET_SF_EHCACHE_DISABLED"}, {"original_string": "public static final String NET_SF_EHCACHE_USE_CLASSIC_LRU = \"net.sf.ehcache.use.classic.lru\";", "modifier": "public static final", "type": "String", "declarator": "NET_SF_EHCACHE_USE_CLASSIC_LRU = \"net.sf.ehcache.use.classic.lru\"", "var_name": "NET_SF_EHCACHE_USE_CLASSIC_LRU"}, {"original_string": "public static final long DEFAULT_EXPIRY_THREAD_INTERVAL_SECONDS = CacheConfiguration.DEFAULT_EXPIRY_THREAD_INTERVAL_SECONDS;", "modifier": "public static final", "type": "long", "declarator": "DEFAULT_EXPIRY_THREAD_INTERVAL_SECONDS = CacheConfiguration.DEFAULT_EXPIRY_THREAD_INTERVAL_SECONDS", "var_name": "DEFAULT_EXPIRY_THREAD_INTERVAL_SECONDS"}, {"original_string": "private static final Logger LOG = LoggerFactory.getLogger(Cache.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(Cache.class.getName())", "var_name": "LOG"}, {"original_string": "private static InetAddress localhost;", "modifier": "private static", "type": "InetAddress", "declarator": "localhost", "var_name": "localhost"}, {"original_string": "private static final int BACK_OFF_TIME_MILLIS = 50;", "modifier": "private static final", "type": "int", "declarator": "BACK_OFF_TIME_MILLIS = 50", "var_name": "BACK_OFF_TIME_MILLIS"}, {"original_string": "private static final int EXECUTOR_KEEP_ALIVE_TIME = 60000;", "modifier": "private static final", "type": "int", "declarator": "EXECUTOR_KEEP_ALIVE_TIME = 60000", "var_name": "EXECUTOR_KEEP_ALIVE_TIME"}, {"original_string": "private static final int EXECUTOR_MAXIMUM_POOL_SIZE = Math.min(10, Runtime.getRuntime().availableProcessors());", "modifier": "private static final", "type": "int", "declarator": "EXECUTOR_MAXIMUM_POOL_SIZE = Math.min(10, Runtime.getRuntime().availableProcessors())", "var_name": "EXECUTOR_MAXIMUM_POOL_SIZE"}, {"original_string": "private static final int EXECUTOR_CORE_POOL_SIZE = 1;", "modifier": "private static final", "type": "int", "declarator": "EXECUTOR_CORE_POOL_SIZE = 1", "var_name": "EXECUTOR_CORE_POOL_SIZE"}, {"original_string": "private static final String EHCACHE_CLUSTERREDSTORE_MAX_CONCURRENCY_PROP = \"ehcache.clusteredStore.maxConcurrency\";", "modifier": "private static final", "type": "String", "declarator": "EHCACHE_CLUSTERREDSTORE_MAX_CONCURRENCY_PROP = \"ehcache.clusteredStore.maxConcurrency\"", "var_name": "EHCACHE_CLUSTERREDSTORE_MAX_CONCURRENCY_PROP"}, {"original_string": "private static final int DEFAULT_EHCACHE_CLUSTERREDSTORE_MAX_CONCURRENCY = 4096;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_EHCACHE_CLUSTERREDSTORE_MAX_CONCURRENCY = 4096", "var_name": "DEFAULT_EHCACHE_CLUSTERREDSTORE_MAX_CONCURRENCY"}, {"original_string": "private volatile boolean disabled = Boolean.getBoolean(NET_SF_EHCACHE_DISABLED);", "modifier": "private volatile", "type": "boolean", "declarator": "disabled = Boolean.getBoolean(NET_SF_EHCACHE_DISABLED)", "var_name": "disabled"}, {"original_string": "private final boolean useClassicLru = Boolean.getBoolean(NET_SF_EHCACHE_USE_CLASSIC_LRU);", "modifier": "private final", "type": "boolean", "declarator": "useClassicLru = Boolean.getBoolean(NET_SF_EHCACHE_USE_CLASSIC_LRU)", "var_name": "useClassicLru"}, {"original_string": "private final CacheStatus cacheStatus = new CacheStatus();", "modifier": "private final", "type": "CacheStatus", "declarator": "cacheStatus = new CacheStatus()", "var_name": "cacheStatus"}, {"original_string": "private final CacheConfiguration configuration;", "modifier": "private final", "type": "CacheConfiguration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private volatile Store compoundStore;", "modifier": "private volatile", "type": "Store", "declarator": "compoundStore", "var_name": "compoundStore"}, {"original_string": "private volatile CacheLockProvider lockProvider;", "modifier": "private volatile", "type": "CacheLockProvider", "declarator": "lockProvider", "var_name": "lockProvider"}, {"original_string": "private volatile RegisteredEventListeners registeredEventListeners;", "modifier": "private volatile", "type": "RegisteredEventListeners", "declarator": "registeredEventListeners", "var_name": "registeredEventListeners"}, {"original_string": "private final List<CacheExtension> registeredCacheExtensions = new CopyOnWriteArrayList<CacheExtension>();", "modifier": "private final", "type": "List<CacheExtension>", "declarator": "registeredCacheExtensions = new CopyOnWriteArrayList<CacheExtension>()", "var_name": "registeredCacheExtensions"}, {"original_string": "private final String guid = createGuid();", "modifier": "private final", "type": "String", "declarator": "guid = createGuid()", "var_name": "guid"}, {"original_string": "private volatile CacheManager cacheManager;", "modifier": "private volatile", "type": "CacheManager", "declarator": "cacheManager", "var_name": "cacheManager"}, {"original_string": "private volatile BootstrapCacheLoader bootstrapCacheLoader;", "modifier": "private volatile", "type": "BootstrapCacheLoader", "declarator": "bootstrapCacheLoader", "var_name": "bootstrapCacheLoader"}, {"original_string": "private volatile CacheExceptionHandler cacheExceptionHandler;", "modifier": "private volatile", "type": "CacheExceptionHandler", "declarator": "cacheExceptionHandler", "var_name": "cacheExceptionHandler"}, {"original_string": "private final List<CacheLoader> registeredCacheLoaders = new CopyOnWriteArrayList<CacheLoader>();", "modifier": "private final", "type": "List<CacheLoader>", "declarator": "registeredCacheLoaders = new CopyOnWriteArrayList<CacheLoader>()", "var_name": "registeredCacheLoaders"}, {"original_string": "private volatile CacheWriterManager cacheWriterManager;", "modifier": "private volatile", "type": "CacheWriterManager", "declarator": "cacheWriterManager", "var_name": "cacheWriterManager"}, {"original_string": "private final AtomicBoolean cacheWriterManagerInitFlag = new AtomicBoolean(false);", "modifier": "private final", "type": "AtomicBoolean", "declarator": "cacheWriterManagerInitFlag = new AtomicBoolean(false)", "var_name": "cacheWriterManagerInitFlag"}, {"original_string": "private final ReentrantLock cacheWriterManagerInitLock = new ReentrantLock();", "modifier": "private final", "type": "ReentrantLock", "declarator": "cacheWriterManagerInitLock = new ReentrantLock()", "var_name": "cacheWriterManagerInitLock"}, {"original_string": "private volatile CacheWriter registeredCacheWriter;", "modifier": "private volatile", "type": "CacheWriter", "declarator": "registeredCacheWriter", "var_name": "registeredCacheWriter"}, {"original_string": "private final OperationObserver<GetOutcome> getObserver = operation(GetOutcome.class).named(\"get\").of(this).tag(\"cache\").build();", "modifier": "private final", "type": "OperationObserver<GetOutcome>", "declarator": "getObserver = operation(GetOutcome.class).named(\"get\").of(this).tag(\"cache\").build()", "var_name": "getObserver"}, {"original_string": "private final OperationObserver<PutOutcome> putObserver = operation(PutOutcome.class).named(\"put\").of(this).tag(\"cache\").build();", "modifier": "private final", "type": "OperationObserver<PutOutcome>", "declarator": "putObserver = operation(PutOutcome.class).named(\"put\").of(this).tag(\"cache\").build()", "var_name": "putObserver"}, {"original_string": "private final OperationObserver<RemoveOutcome> removeObserver = operation(RemoveOutcome.class).named(\"remove\").of(this).tag(\"cache\").build();", "modifier": "private final", "type": "OperationObserver<RemoveOutcome>", "declarator": "removeObserver = operation(RemoveOutcome.class).named(\"remove\").of(this).tag(\"cache\").build()", "var_name": "removeObserver"}, {"original_string": "private final OperationObserver<GetAllOutcome> getAllObserver = operation(GetAllOutcome.class).named(\"getAll\").of(this)\n            .tag(\"cache\", \"bulk\").build();", "modifier": "private final", "type": "OperationObserver<GetAllOutcome>", "declarator": "getAllObserver = operation(GetAllOutcome.class).named(\"getAll\").of(this)\n            .tag(\"cache\", \"bulk\").build()", "var_name": "getAllObserver"}, {"original_string": "private final OperationObserver<PutAllOutcome> putAllObserver = operation(PutAllOutcome.class).named(\"putAll\").of(this)\n            .tag(\"cache\", \"bulk\").build();", "modifier": "private final", "type": "OperationObserver<PutAllOutcome>", "declarator": "putAllObserver = operation(PutAllOutcome.class).named(\"putAll\").of(this)\n            .tag(\"cache\", \"bulk\").build()", "var_name": "putAllObserver"}, {"original_string": "private final OperationObserver<RemoveAllOutcome> removeAllObserver = operation(RemoveAllOutcome.class).named(\"removeAll\").of(this)\n            .tag(\"cache\", \"bulk\").build();", "modifier": "private final", "type": "OperationObserver<RemoveAllOutcome>", "declarator": "removeAllObserver = operation(RemoveAllOutcome.class).named(\"removeAll\").of(this)\n            .tag(\"cache\", \"bulk\").build()", "var_name": "removeAllObserver"}, {"original_string": "private final OperationObserver<SearchOutcome> searchObserver = operation(SearchOutcome.class).named(\"search\").of(this).tag(\"cache\").build();", "modifier": "private final", "type": "OperationObserver<SearchOutcome>", "declarator": "searchObserver = operation(SearchOutcome.class).named(\"search\").of(this).tag(\"cache\").build()", "var_name": "searchObserver"}, {"original_string": "private final OperationObserver<CacheOperationOutcomes.ReplaceOneArgOutcome> replace1Observer = operation(CacheOperationOutcomes.ReplaceOneArgOutcome.class).named(\"replace1\").of(this)\n      .tag(\"cache\").build();", "modifier": "private final", "type": "OperationObserver<CacheOperationOutcomes.ReplaceOneArgOutcome>", "declarator": "replace1Observer = operation(CacheOperationOutcomes.ReplaceOneArgOutcome.class).named(\"replace1\").of(this)\n      .tag(\"cache\").build()", "var_name": "replace1Observer"}, {"original_string": "private final OperationObserver<CacheOperationOutcomes.ReplaceTwoArgOutcome> replace2Observer = operation(CacheOperationOutcomes.ReplaceTwoArgOutcome.class).named(\"replace2\").of(this)\n      .tag(\"cache\").build();", "modifier": "private final", "type": "OperationObserver<CacheOperationOutcomes.ReplaceTwoArgOutcome>", "declarator": "replace2Observer = operation(CacheOperationOutcomes.ReplaceTwoArgOutcome.class).named(\"replace2\").of(this)\n      .tag(\"cache\").build()", "var_name": "replace2Observer"}, {"original_string": "private final OperationObserver<PutIfAbsentOutcome> putIfAbsentObserver = operation(PutIfAbsentOutcome.class).named(\"putIfAbsent\").of(this)\n      .tag(\"cache\").build();", "modifier": "private final", "type": "OperationObserver<PutIfAbsentOutcome>", "declarator": "putIfAbsentObserver = operation(PutIfAbsentOutcome.class).named(\"putIfAbsent\").of(this)\n      .tag(\"cache\").build()", "var_name": "putIfAbsentObserver"}, {"original_string": "private final OperationObserver<RemoveElementOutcome> removeElementObserver = operation(RemoveElementOutcome.class).named(\"removeElement\").of(this)\n      .tag(\"cache\").build();", "modifier": "private final", "type": "OperationObserver<RemoveElementOutcome>", "declarator": "removeElementObserver = operation(RemoveElementOutcome.class).named(\"removeElement\").of(this)\n      .tag(\"cache\").build()", "var_name": "removeElementObserver"}, {"original_string": "private volatile ExecutorService executorService;", "modifier": "private volatile", "type": "ExecutorService", "declarator": "executorService", "var_name": "executorService"}, {"original_string": "private volatile TransactionManagerLookup transactionManagerLookup;", "modifier": "private volatile", "type": "TransactionManagerLookup", "declarator": "transactionManagerLookup", "var_name": "transactionManagerLookup"}, {"original_string": "private volatile boolean allowDisable = true;", "modifier": "private volatile", "type": "boolean", "declarator": "allowDisable = true", "var_name": "allowDisable"}, {"original_string": "private final PropertyChangeSupport propertyChangeSupport = new PropertyChangeSupport(this);", "modifier": "private final", "type": "PropertyChangeSupport", "declarator": "propertyChangeSupport = new PropertyChangeSupport(this)", "var_name": "propertyChangeSupport"}, {"original_string": "private volatile ElementValueComparator elementValueComparator;", "modifier": "private volatile", "type": "ElementValueComparator", "declarator": "elementValueComparator", "var_name": "elementValueComparator"}, {"original_string": "private StatisticsGateway statistics;", "modifier": "private", "type": "StatisticsGateway", "declarator": "statistics", "var_name": "statistics"}, {"original_string": "private CacheClusterStateStatisticsListener clusterStateListener = null;", "modifier": "private", "type": "CacheClusterStateStatisticsListener", "declarator": "clusterStateListener = null", "var_name": "clusterStateListener"}], "methods": [{"identifier": "Cache", "parameters": "(CacheConfiguration cacheConfiguration)", "modifiers": "public", "return": "", "signature": " Cache(CacheConfiguration cacheConfiguration)", "full_signature": "public  Cache(CacheConfiguration cacheConfiguration)", "class_method_signature": "Cache.Cache(CacheConfiguration cacheConfiguration)", "testcase": false, "constructor": true}, {"identifier": "Cache", "parameters": "(CacheConfiguration cacheConfiguration,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader)", "modifiers": "public", "return": "", "signature": " Cache(CacheConfiguration cacheConfiguration,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader)", "full_signature": "public  Cache(CacheConfiguration cacheConfiguration,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader)", "class_method_signature": "Cache.Cache(CacheConfiguration cacheConfiguration,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader)", "testcase": false, "constructor": true}, {"identifier": "Cache", "parameters": "(String name, int maxElementsInMemory, boolean overflowToDisk,\n                 boolean eternal, long timeToLiveSeconds, long timeToIdleSeconds)", "modifiers": "public", "return": "", "signature": " Cache(String name, int maxElementsInMemory, boolean overflowToDisk,\n                 boolean eternal, long timeToLiveSeconds, long timeToIdleSeconds)", "full_signature": "public  Cache(String name, int maxElementsInMemory, boolean overflowToDisk,\n                 boolean eternal, long timeToLiveSeconds, long timeToIdleSeconds)", "class_method_signature": "Cache.Cache(String name, int maxElementsInMemory, boolean overflowToDisk,\n                 boolean eternal, long timeToLiveSeconds, long timeToIdleSeconds)", "testcase": false, "constructor": true}, {"identifier": "Cache", "parameters": "(String name,\n                 int maxElementsInMemory,\n                 boolean overflowToDisk,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds)", "modifiers": "public", "return": "", "signature": " Cache(String name,\n                 int maxElementsInMemory,\n                 boolean overflowToDisk,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds)", "full_signature": "public  Cache(String name,\n                 int maxElementsInMemory,\n                 boolean overflowToDisk,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds)", "class_method_signature": "Cache.Cache(String name,\n                 int maxElementsInMemory,\n                 boolean overflowToDisk,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds)", "testcase": false, "constructor": true}, {"identifier": "Cache", "parameters": "(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners)", "modifiers": "public", "return": "", "signature": " Cache(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners)", "full_signature": "public  Cache(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners)", "class_method_signature": "Cache.Cache(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners)", "testcase": false, "constructor": true}, {"identifier": "Cache", "parameters": "(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader)", "modifiers": "public", "return": "", "signature": " Cache(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader)", "full_signature": "public  Cache(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader)", "class_method_signature": "Cache.Cache(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader)", "testcase": false, "constructor": true}, {"identifier": "Cache", "parameters": "(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader,\n                 int maxElementsOnDisk)", "modifiers": "public", "return": "", "signature": " Cache(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader,\n                 int maxElementsOnDisk)", "full_signature": "public  Cache(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader,\n                 int maxElementsOnDisk)", "class_method_signature": "Cache.Cache(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader,\n                 int maxElementsOnDisk)", "testcase": false, "constructor": true}, {"identifier": "Cache", "parameters": "(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader,\n                 int maxElementsOnDisk,\n                 int diskSpoolBufferSizeMB)", "modifiers": "public", "return": "", "signature": " Cache(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader,\n                 int maxElementsOnDisk,\n                 int diskSpoolBufferSizeMB)", "full_signature": "public  Cache(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader,\n                 int maxElementsOnDisk,\n                 int diskSpoolBufferSizeMB)", "class_method_signature": "Cache.Cache(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader,\n                 int maxElementsOnDisk,\n                 int diskSpoolBufferSizeMB)", "testcase": false, "constructor": true}, {"identifier": "Cache", "parameters": "(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader,\n                 int maxElementsOnDisk,\n                 int diskSpoolBufferSizeMB,\n                 boolean clearOnFlush)", "modifiers": "public", "return": "", "signature": " Cache(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader,\n                 int maxElementsOnDisk,\n                 int diskSpoolBufferSizeMB,\n                 boolean clearOnFlush)", "full_signature": "public  Cache(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader,\n                 int maxElementsOnDisk,\n                 int diskSpoolBufferSizeMB,\n                 boolean clearOnFlush)", "class_method_signature": "Cache.Cache(String name,\n                 int maxElementsInMemory,\n                 MemoryStoreEvictionPolicy memoryStoreEvictionPolicy,\n                 boolean overflowToDisk,\n                 String diskStorePath,\n                 boolean eternal,\n                 long timeToLiveSeconds,\n                 long timeToIdleSeconds,\n                 boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds,\n                 RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader,\n                 int maxElementsOnDisk,\n                 int diskSpoolBufferSizeMB,\n                 boolean clearOnFlush)", "testcase": false, "constructor": true}, {"identifier": "Cache", "parameters": "(String name, int maxElementsInMemory, MemoryStoreEvictionPolicy memoryStoreEvictionPolicy, boolean overflowToDisk,\n                 String diskStorePath, boolean eternal, long timeToLiveSeconds, long timeToIdleSeconds, boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds, RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader, int maxElementsOnDisk, int diskSpoolBufferSizeMB, boolean clearOnFlush,\n                 boolean isTerracottaClustered, boolean terracottaCoherentReads)", "modifiers": "public", "return": "", "signature": " Cache(String name, int maxElementsInMemory, MemoryStoreEvictionPolicy memoryStoreEvictionPolicy, boolean overflowToDisk,\n                 String diskStorePath, boolean eternal, long timeToLiveSeconds, long timeToIdleSeconds, boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds, RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader, int maxElementsOnDisk, int diskSpoolBufferSizeMB, boolean clearOnFlush,\n                 boolean isTerracottaClustered, boolean terracottaCoherentReads)", "full_signature": "public  Cache(String name, int maxElementsInMemory, MemoryStoreEvictionPolicy memoryStoreEvictionPolicy, boolean overflowToDisk,\n                 String diskStorePath, boolean eternal, long timeToLiveSeconds, long timeToIdleSeconds, boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds, RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader, int maxElementsOnDisk, int diskSpoolBufferSizeMB, boolean clearOnFlush,\n                 boolean isTerracottaClustered, boolean terracottaCoherentReads)", "class_method_signature": "Cache.Cache(String name, int maxElementsInMemory, MemoryStoreEvictionPolicy memoryStoreEvictionPolicy, boolean overflowToDisk,\n                 String diskStorePath, boolean eternal, long timeToLiveSeconds, long timeToIdleSeconds, boolean diskPersistent,\n                 long diskExpiryThreadIntervalSeconds, RegisteredEventListeners registeredEventListeners,\n                 BootstrapCacheLoader bootstrapCacheLoader, int maxElementsOnDisk, int diskSpoolBufferSizeMB, boolean clearOnFlush,\n                 boolean isTerracottaClustered, boolean terracottaCoherentReads)", "testcase": false, "constructor": true}, {"identifier": "Cache", "parameters": "(Cache original)", "modifiers": "private", "return": "", "signature": " Cache(Cache original)", "full_signature": "private  Cache(Cache original)", "class_method_signature": "Cache.Cache(Cache original)", "testcase": false, "constructor": true}, {"identifier": "registerCacheListeners", "parameters": "(CacheConfiguration cacheConfiguration,\n                                                 RegisteredEventListeners registeredEventListeners, ClassLoader loader)", "modifiers": "private static", "return": "void", "signature": "void registerCacheListeners(CacheConfiguration cacheConfiguration,\n                                                 RegisteredEventListeners registeredEventListeners, ClassLoader loader)", "full_signature": "private static void registerCacheListeners(CacheConfiguration cacheConfiguration,\n                                                 RegisteredEventListeners registeredEventListeners, ClassLoader loader)", "class_method_signature": "Cache.registerCacheListeners(CacheConfiguration cacheConfiguration,\n                                                 RegisteredEventListeners registeredEventListeners, ClassLoader loader)", "testcase": false, "constructor": false}, {"identifier": "registerCacheExtensions", "parameters": "(CacheConfiguration cacheConfiguration, Ehcache cache, ClassLoader loader)", "modifiers": "private static", "return": "void", "signature": "void registerCacheExtensions(CacheConfiguration cacheConfiguration, Ehcache cache, ClassLoader loader)", "full_signature": "private static void registerCacheExtensions(CacheConfiguration cacheConfiguration, Ehcache cache, ClassLoader loader)", "class_method_signature": "Cache.registerCacheExtensions(CacheConfiguration cacheConfiguration, Ehcache cache, ClassLoader loader)", "testcase": false, "constructor": false}, {"identifier": "registerCacheLoaders", "parameters": "(CacheConfiguration cacheConfiguration, Ehcache cache, ClassLoader loader)", "modifiers": "private static", "return": "void", "signature": "void registerCacheLoaders(CacheConfiguration cacheConfiguration, Ehcache cache, ClassLoader loader)", "full_signature": "private static void registerCacheLoaders(CacheConfiguration cacheConfiguration, Ehcache cache, ClassLoader loader)", "class_method_signature": "Cache.registerCacheLoaders(CacheConfiguration cacheConfiguration, Ehcache cache, ClassLoader loader)", "testcase": false, "constructor": false}, {"identifier": "registerCacheWriter", "parameters": "(CacheConfiguration cacheConfiguration, Ehcache cache, ClassLoader loader)", "modifiers": "private static", "return": "void", "signature": "void registerCacheWriter(CacheConfiguration cacheConfiguration, Ehcache cache, ClassLoader loader)", "full_signature": "private static void registerCacheWriter(CacheConfiguration cacheConfiguration, Ehcache cache, ClassLoader loader)", "class_method_signature": "Cache.registerCacheWriter(CacheConfiguration cacheConfiguration, Ehcache cache, ClassLoader loader)", "testcase": false, "constructor": false}, {"identifier": "createCacheEventListener", "parameters": "(\n            CacheConfiguration.CacheEventListenerFactoryConfiguration factoryConfiguration, ClassLoader loader)", "modifiers": "private static", "return": "CacheEventListener", "signature": "CacheEventListener createCacheEventListener(\n            CacheConfiguration.CacheEventListenerFactoryConfiguration factoryConfiguration, ClassLoader loader)", "full_signature": "private static CacheEventListener createCacheEventListener(\n            CacheConfiguration.CacheEventListenerFactoryConfiguration factoryConfiguration, ClassLoader loader)", "class_method_signature": "Cache.createCacheEventListener(\n            CacheConfiguration.CacheEventListenerFactoryConfiguration factoryConfiguration, ClassLoader loader)", "testcase": false, "constructor": false}, {"identifier": "createCacheExtension", "parameters": "(\n            CacheConfiguration.CacheExtensionFactoryConfiguration factoryConfiguration, Ehcache cache, ClassLoader loader)", "modifiers": "private static", "return": "CacheExtension", "signature": "CacheExtension createCacheExtension(\n            CacheConfiguration.CacheExtensionFactoryConfiguration factoryConfiguration, Ehcache cache, ClassLoader loader)", "full_signature": "private static CacheExtension createCacheExtension(\n            CacheConfiguration.CacheExtensionFactoryConfiguration factoryConfiguration, Ehcache cache, ClassLoader loader)", "class_method_signature": "Cache.createCacheExtension(\n            CacheConfiguration.CacheExtensionFactoryConfiguration factoryConfiguration, Ehcache cache, ClassLoader loader)", "testcase": false, "constructor": false}, {"identifier": "createCacheLoader", "parameters": "(\n            CacheConfiguration.CacheLoaderFactoryConfiguration factoryConfiguration, Ehcache cache, ClassLoader loader)", "modifiers": "private static", "return": "CacheLoader", "signature": "CacheLoader createCacheLoader(\n            CacheConfiguration.CacheLoaderFactoryConfiguration factoryConfiguration, Ehcache cache, ClassLoader loader)", "full_signature": "private static CacheLoader createCacheLoader(\n            CacheConfiguration.CacheLoaderFactoryConfiguration factoryConfiguration, Ehcache cache, ClassLoader loader)", "class_method_signature": "Cache.createCacheLoader(\n            CacheConfiguration.CacheLoaderFactoryConfiguration factoryConfiguration, Ehcache cache, ClassLoader loader)", "testcase": false, "constructor": false}, {"identifier": "createCacheWriter", "parameters": "(CacheWriterConfiguration config, Ehcache cache, ClassLoader loader)", "modifiers": "private static", "return": "CacheWriter", "signature": "CacheWriter createCacheWriter(CacheWriterConfiguration config, Ehcache cache, ClassLoader loader)", "full_signature": "private static CacheWriter createCacheWriter(CacheWriterConfiguration config, Ehcache cache, ClassLoader loader)", "class_method_signature": "Cache.createCacheWriter(CacheWriterConfiguration config, Ehcache cache, ClassLoader loader)", "testcase": false, "constructor": false}, {"identifier": "createBootstrapCacheLoader", "parameters": "(\n            CacheConfiguration.BootstrapCacheLoaderFactoryConfiguration factoryConfiguration, ClassLoader loader)", "modifiers": "private static final", "return": "BootstrapCacheLoader", "signature": "BootstrapCacheLoader createBootstrapCacheLoader(\n            CacheConfiguration.BootstrapCacheLoaderFactoryConfiguration factoryConfiguration, ClassLoader loader)", "full_signature": "private static final BootstrapCacheLoader createBootstrapCacheLoader(\n            CacheConfiguration.BootstrapCacheLoaderFactoryConfiguration factoryConfiguration, ClassLoader loader)", "class_method_signature": "Cache.createBootstrapCacheLoader(\n            CacheConfiguration.BootstrapCacheLoaderFactoryConfiguration factoryConfiguration, ClassLoader loader)", "testcase": false, "constructor": false}, {"identifier": "getTransactionManagerLookup", "parameters": "()", "modifiers": "public", "return": "TransactionManagerLookup", "signature": "TransactionManagerLookup getTransactionManagerLookup()", "full_signature": "public TransactionManagerLookup getTransactionManagerLookup()", "class_method_signature": "Cache.getTransactionManagerLookup()", "testcase": false, "constructor": false}, {"identifier": "setTransactionManagerLookup", "parameters": "(TransactionManagerLookup lookup)", "modifiers": "public", "return": "void", "signature": "void setTransactionManagerLookup(TransactionManagerLookup lookup)", "full_signature": "public void setTransactionManagerLookup(TransactionManagerLookup lookup)", "class_method_signature": "Cache.setTransactionManagerLookup(TransactionManagerLookup lookup)", "testcase": false, "constructor": false}, {"identifier": "initialise", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void initialise()", "full_signature": "public void initialise()", "class_method_signature": "Cache.initialise()", "testcase": false, "constructor": false}, {"identifier": "handleTransactionalAndCopy", "parameters": "(Store store, ClassLoader loader)", "modifiers": "private", "return": "Store", "signature": "Store handleTransactionalAndCopy(Store store, ClassLoader loader)", "full_signature": "private Store handleTransactionalAndCopy(Store store, ClassLoader loader)", "class_method_signature": "Cache.handleTransactionalAndCopy(Store store, ClassLoader loader)", "testcase": false, "constructor": false}, {"identifier": "handleExceptionInTerracottaStoreCreation", "parameters": "(IllegalArgumentException e)", "modifiers": "private", "return": "void", "signature": "void handleExceptionInTerracottaStoreCreation(IllegalArgumentException e)", "full_signature": "private void handleExceptionInTerracottaStoreCreation(IllegalArgumentException e)", "class_method_signature": "Cache.handleExceptionInTerracottaStoreCreation(IllegalArgumentException e)", "testcase": false, "constructor": false}, {"identifier": "checkClusteredConfig", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkClusteredConfig()", "full_signature": "private void checkClusteredConfig()", "class_method_signature": "Cache.checkClusteredConfig()", "testcase": false, "constructor": false}, {"identifier": "makeTransactional", "parameters": "(final Store store)", "modifiers": "private", "return": "AbstractTransactionStore", "signature": "AbstractTransactionStore makeTransactional(final Store store)", "full_signature": "private AbstractTransactionStore makeTransactional(final Store store)", "class_method_signature": "Cache.makeTransactional(final Store store)", "testcase": false, "constructor": false}, {"identifier": "makeClusteredTransactionalIfNeeded", "parameters": "(final TerracottaStore store, final ElementValueComparator comparator, ClassLoader loader)", "modifiers": "private", "return": "TerracottaStore", "signature": "TerracottaStore makeClusteredTransactionalIfNeeded(final TerracottaStore store, final ElementValueComparator comparator, ClassLoader loader)", "full_signature": "private TerracottaStore makeClusteredTransactionalIfNeeded(final TerracottaStore store, final ElementValueComparator comparator, ClassLoader loader)", "class_method_signature": "Cache.makeClusteredTransactionalIfNeeded(final TerracottaStore store, final ElementValueComparator comparator, ClassLoader loader)", "testcase": false, "constructor": false}, {"identifier": "getCacheCluster", "parameters": "()", "modifiers": "private", "return": "CacheCluster", "signature": "CacheCluster getCacheCluster()", "full_signature": "private CacheCluster getCacheCluster()", "class_method_signature": "Cache.getCacheCluster()", "testcase": false, "constructor": false}, {"identifier": "initialiseCacheWriterManager", "parameters": "(boolean imperative)", "modifiers": "private", "return": "void", "signature": "void initialiseCacheWriterManager(boolean imperative)", "full_signature": "private void initialiseCacheWriterManager(boolean imperative)", "class_method_signature": "Cache.initialiseCacheWriterManager(boolean imperative)", "testcase": false, "constructor": false}, {"identifier": "getWriterManager", "parameters": "()", "modifiers": "public", "return": "CacheWriterManager", "signature": "CacheWriterManager getWriterManager()", "full_signature": "public CacheWriterManager getWriterManager()", "class_method_signature": "Cache.getWriterManager()", "testcase": false, "constructor": false}, {"identifier": "createDiskStore", "parameters": "()", "modifiers": "protected", "return": "DiskStore", "signature": "DiskStore createDiskStore()", "full_signature": "protected DiskStore createDiskStore()", "class_method_signature": "Cache.createDiskStore()", "testcase": false, "constructor": false}, {"identifier": "isDiskStore", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean isDiskStore()", "full_signature": "protected boolean isDiskStore()", "class_method_signature": "Cache.isDiskStore()", "testcase": false, "constructor": false}, {"identifier": "isTerracottaClustered", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTerracottaClustered()", "full_signature": "public boolean isTerracottaClustered()", "class_method_signature": "Cache.isTerracottaClustered()", "testcase": false, "constructor": false}, {"identifier": "bootstrap", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void bootstrap()", "full_signature": "public void bootstrap()", "class_method_signature": "Cache.bootstrap()", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(Element element)", "modifiers": "public final", "return": "void", "signature": "void put(Element element)", "full_signature": "public final void put(Element element)", "class_method_signature": "Cache.put(Element element)", "testcase": false, "constructor": false}, {"identifier": "putAll", "parameters": "(Collection<Element> elements)", "modifiers": "public", "return": "void", "signature": "void putAll(Collection<Element> elements)", "full_signature": "public void putAll(Collection<Element> elements)", "class_method_signature": "Cache.putAll(Collection<Element> elements)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(Element element, boolean doNotNotifyCacheReplicators)", "modifiers": "public final", "return": "void", "signature": "void put(Element element, boolean doNotNotifyCacheReplicators)", "full_signature": "public final void put(Element element, boolean doNotNotifyCacheReplicators)", "class_method_signature": "Cache.put(Element element, boolean doNotNotifyCacheReplicators)", "testcase": false, "constructor": false}, {"identifier": "putAll", "parameters": "(Collection<Element> elements, boolean doNotNotifyCacheReplicators)", "modifiers": "private", "return": "void", "signature": "void putAll(Collection<Element> elements, boolean doNotNotifyCacheReplicators)", "full_signature": "private void putAll(Collection<Element> elements, boolean doNotNotifyCacheReplicators)", "class_method_signature": "Cache.putAll(Collection<Element> elements, boolean doNotNotifyCacheReplicators)", "testcase": false, "constructor": false}, {"identifier": "putWithWriter", "parameters": "(Element element)", "modifiers": "public", "return": "void", "signature": "void putWithWriter(Element element)", "full_signature": "public void putWithWriter(Element element)", "class_method_signature": "Cache.putWithWriter(Element element)", "testcase": false, "constructor": false}, {"identifier": "putInternal", "parameters": "(Element element, boolean doNotNotifyCacheReplicators, boolean useCacheWriter)", "modifiers": "private", "return": "void", "signature": "void putInternal(Element element, boolean doNotNotifyCacheReplicators, boolean useCacheWriter)", "full_signature": "private void putInternal(Element element, boolean doNotNotifyCacheReplicators, boolean useCacheWriter)", "class_method_signature": "Cache.putInternal(Element element, boolean doNotNotifyCacheReplicators, boolean useCacheWriter)", "testcase": false, "constructor": false}, {"identifier": "putAllInternal", "parameters": "(Collection<Element> elements, boolean doNotNotifyCacheReplicators)", "modifiers": "private", "return": "void", "signature": "void putAllInternal(Collection<Element> elements, boolean doNotNotifyCacheReplicators)", "full_signature": "private void putAllInternal(Collection<Element> elements, boolean doNotNotifyCacheReplicators)", "class_method_signature": "Cache.putAllInternal(Collection<Element> elements, boolean doNotNotifyCacheReplicators)", "testcase": false, "constructor": false}, {"identifier": "notifyPutInternalListeners", "parameters": "(Element element, boolean doNotNotifyCacheReplicators, boolean elementExists)", "modifiers": "private", "return": "void", "signature": "void notifyPutInternalListeners(Element element, boolean doNotNotifyCacheReplicators, boolean elementExists)", "full_signature": "private void notifyPutInternalListeners(Element element, boolean doNotNotifyCacheReplicators, boolean elementExists)", "class_method_signature": "Cache.notifyPutInternalListeners(Element element, boolean doNotNotifyCacheReplicators, boolean elementExists)", "testcase": false, "constructor": false}, {"identifier": "backOffIfDiskSpoolFull", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void backOffIfDiskSpoolFull()", "full_signature": "private void backOffIfDiskSpoolFull()", "class_method_signature": "Cache.backOffIfDiskSpoolFull()", "testcase": false, "constructor": false}, {"identifier": "applyDefaultsToElementWithoutLifespanSet", "parameters": "(Element element)", "modifiers": "private", "return": "void", "signature": "void applyDefaultsToElementWithoutLifespanSet(Element element)", "full_signature": "private void applyDefaultsToElementWithoutLifespanSet(Element element)", "class_method_signature": "Cache.applyDefaultsToElementWithoutLifespanSet(Element element)", "testcase": false, "constructor": false}, {"identifier": "putQuiet", "parameters": "(Element element)", "modifiers": "public final", "return": "void", "signature": "void putQuiet(Element element)", "full_signature": "public final void putQuiet(Element element)", "class_method_signature": "Cache.putQuiet(Element element)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Serializable key)", "modifiers": "public final", "return": "Element", "signature": "Element get(Serializable key)", "full_signature": "public final Element get(Serializable key)", "class_method_signature": "Cache.get(Serializable key)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Object key)", "modifiers": "public final", "return": "Element", "signature": "Element get(Object key)", "full_signature": "public final Element get(Object key)", "class_method_signature": "Cache.get(Object key)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "(Collection<?> keys)", "modifiers": "public", "return": "Map<Object, Element>", "signature": "Map<Object, Element> getAll(Collection<?> keys)", "full_signature": "public Map<Object, Element> getAll(Collection<?> keys)", "class_method_signature": "Cache.getAll(Collection<?> keys)", "testcase": false, "constructor": false}, {"identifier": "getWithLoader", "parameters": "(Object key, CacheLoader loader, Object loaderArgument)", "modifiers": "public", "return": "Element", "signature": "Element getWithLoader(Object key, CacheLoader loader, Object loaderArgument)", "full_signature": "public Element getWithLoader(Object key, CacheLoader loader, Object loaderArgument)", "class_method_signature": "Cache.getWithLoader(Object key, CacheLoader loader, Object loaderArgument)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(final Object key)", "modifiers": "public", "return": "void", "signature": "void load(final Object key)", "full_signature": "public void load(final Object key)", "class_method_signature": "Cache.load(final Object key)", "testcase": false, "constructor": false}, {"identifier": "getAllWithLoader", "parameters": "(Collection keys, Object loaderArgument)", "modifiers": "public", "return": "Map", "signature": "Map getAllWithLoader(Collection keys, Object loaderArgument)", "full_signature": "public Map getAllWithLoader(Collection keys, Object loaderArgument)", "class_method_signature": "Cache.getAllWithLoader(Collection keys, Object loaderArgument)", "testcase": false, "constructor": false}, {"identifier": "loadAll", "parameters": "(final Collection keys, final Object argument)", "modifiers": "public", "return": "void", "signature": "void loadAll(final Collection keys, final Object argument)", "full_signature": "public void loadAll(final Collection keys, final Object argument)", "class_method_signature": "Cache.loadAll(final Collection keys, final Object argument)", "testcase": false, "constructor": false}, {"identifier": "getQuiet", "parameters": "(Serializable key)", "modifiers": "public final", "return": "Element", "signature": "Element getQuiet(Serializable key)", "full_signature": "public final Element getQuiet(Serializable key)", "class_method_signature": "Cache.getQuiet(Serializable key)", "testcase": false, "constructor": false}, {"identifier": "getQuiet", "parameters": "(Object key)", "modifiers": "public final", "return": "Element", "signature": "Element getQuiet(Object key)", "full_signature": "public final Element getQuiet(Object key)", "class_method_signature": "Cache.getQuiet(Object key)", "testcase": false, "constructor": false}, {"identifier": "getKeys", "parameters": "()", "modifiers": "public final", "return": "List", "signature": "List getKeys()", "full_signature": "public final List getKeys()", "class_method_signature": "Cache.getKeys()", "testcase": false, "constructor": false}, {"identifier": "getKeysWithExpiryCheck", "parameters": "()", "modifiers": "public final", "return": "List", "signature": "List getKeysWithExpiryCheck()", "full_signature": "public final List getKeysWithExpiryCheck()", "class_method_signature": "Cache.getKeysWithExpiryCheck()", "testcase": false, "constructor": false}, {"identifier": "getKeysNoDuplicateCheck", "parameters": "()", "modifiers": "public final", "return": "List", "signature": "List getKeysNoDuplicateCheck()", "full_signature": "public final List getKeysNoDuplicateCheck()", "class_method_signature": "Cache.getKeysNoDuplicateCheck()", "testcase": false, "constructor": false}, {"identifier": "tryRemoveImmediately", "parameters": "(final Object key, final boolean notifyListeners)", "modifiers": "@Deprecated private", "return": "void", "signature": "void tryRemoveImmediately(final Object key, final boolean notifyListeners)", "full_signature": "@Deprecated private void tryRemoveImmediately(final Object key, final boolean notifyListeners)", "class_method_signature": "Cache.tryRemoveImmediately(final Object key, final boolean notifyListeners)", "testcase": false, "constructor": false}, {"identifier": "skipUpdateAccessStatistics", "parameters": "(Element element)", "modifiers": "private", "return": "boolean", "signature": "boolean skipUpdateAccessStatistics(Element element)", "full_signature": "private boolean skipUpdateAccessStatistics(Element element)", "class_method_signature": "Cache.skipUpdateAccessStatistics(Element element)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Serializable key)", "modifiers": "public final", "return": "boolean", "signature": "boolean remove(Serializable key)", "full_signature": "public final boolean remove(Serializable key)", "class_method_signature": "Cache.remove(Serializable key)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Object key)", "modifiers": "public final", "return": "boolean", "signature": "boolean remove(Object key)", "full_signature": "public final boolean remove(Object key)", "class_method_signature": "Cache.remove(Object key)", "testcase": false, "constructor": false}, {"identifier": "removeAndReturnElement", "parameters": "(Object key)", "modifiers": "public final", "return": "Element", "signature": "Element removeAndReturnElement(Object key)", "full_signature": "public final Element removeAndReturnElement(Object key)", "class_method_signature": "Cache.removeAndReturnElement(Object key)", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "(final Collection<?> keys)", "modifiers": "public", "return": "void", "signature": "void removeAll(final Collection<?> keys)", "full_signature": "public void removeAll(final Collection<?> keys)", "class_method_signature": "Cache.removeAll(final Collection<?> keys)", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "(final Collection<?> keys, boolean doNotNotifyCacheReplicators)", "modifiers": "public final", "return": "void", "signature": "void removeAll(final Collection<?> keys, boolean doNotNotifyCacheReplicators)", "full_signature": "public final void removeAll(final Collection<?> keys, boolean doNotNotifyCacheReplicators)", "class_method_signature": "Cache.removeAll(final Collection<?> keys, boolean doNotNotifyCacheReplicators)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Serializable key, boolean doNotNotifyCacheReplicators)", "modifiers": "public final", "return": "boolean", "signature": "boolean remove(Serializable key, boolean doNotNotifyCacheReplicators)", "full_signature": "public final boolean remove(Serializable key, boolean doNotNotifyCacheReplicators)", "class_method_signature": "Cache.remove(Serializable key, boolean doNotNotifyCacheReplicators)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Object key, boolean doNotNotifyCacheReplicators)", "modifiers": "public final", "return": "boolean", "signature": "boolean remove(Object key, boolean doNotNotifyCacheReplicators)", "full_signature": "public final boolean remove(Object key, boolean doNotNotifyCacheReplicators)", "class_method_signature": "Cache.remove(Object key, boolean doNotNotifyCacheReplicators)", "testcase": false, "constructor": false}, {"identifier": "removeQuiet", "parameters": "(Serializable key)", "modifiers": "public final", "return": "boolean", "signature": "boolean removeQuiet(Serializable key)", "full_signature": "public final boolean removeQuiet(Serializable key)", "class_method_signature": "Cache.removeQuiet(Serializable key)", "testcase": false, "constructor": false}, {"identifier": "removeQuiet", "parameters": "(Object key)", "modifiers": "public final", "return": "boolean", "signature": "boolean removeQuiet(Object key)", "full_signature": "public final boolean removeQuiet(Object key)", "class_method_signature": "Cache.removeQuiet(Object key)", "testcase": false, "constructor": false}, {"identifier": "removeWithWriter", "parameters": "(Object key)", "modifiers": "public", "return": "boolean", "signature": "boolean removeWithWriter(Object key)", "full_signature": "public boolean removeWithWriter(Object key)", "class_method_signature": "Cache.removeWithWriter(Object key)", "testcase": false, "constructor": false}, {"identifier": "removeInternal", "parameters": "(Object key, boolean expiry, boolean notifyListeners,\n                           boolean doNotNotifyCacheReplicators, boolean useCacheWriter)", "modifiers": "private", "return": "Element", "signature": "Element removeInternal(Object key, boolean expiry, boolean notifyListeners,\n                           boolean doNotNotifyCacheReplicators, boolean useCacheWriter)", "full_signature": "private Element removeInternal(Object key, boolean expiry, boolean notifyListeners,\n                           boolean doNotNotifyCacheReplicators, boolean useCacheWriter)", "class_method_signature": "Cache.removeInternal(Object key, boolean expiry, boolean notifyListeners,\n                           boolean doNotNotifyCacheReplicators, boolean useCacheWriter)", "testcase": false, "constructor": false}, {"identifier": "notifyRemoveInternalListeners", "parameters": "(Object key, boolean expiry, boolean notifyListeners, boolean doNotNotifyCacheReplicators,\n                                                  Element elementFromStore)", "modifiers": "private", "return": "boolean", "signature": "boolean notifyRemoveInternalListeners(Object key, boolean expiry, boolean notifyListeners, boolean doNotNotifyCacheReplicators,\n                                                  Element elementFromStore)", "full_signature": "private boolean notifyRemoveInternalListeners(Object key, boolean expiry, boolean notifyListeners, boolean doNotNotifyCacheReplicators,\n                                                  Element elementFromStore)", "class_method_signature": "Cache.notifyRemoveInternalListeners(Object key, boolean expiry, boolean notifyListeners, boolean doNotNotifyCacheReplicators,\n                                                  Element elementFromStore)", "testcase": false, "constructor": false}, {"identifier": "removeAllInternal", "parameters": "(final Collection<?> keys, boolean expiry, boolean notifyListeners,\n            boolean doNotNotifyCacheReplicators)", "modifiers": "private", "return": "void", "signature": "void removeAllInternal(final Collection<?> keys, boolean expiry, boolean notifyListeners,\n            boolean doNotNotifyCacheReplicators)", "full_signature": "private void removeAllInternal(final Collection<?> keys, boolean expiry, boolean notifyListeners,\n            boolean doNotNotifyCacheReplicators)", "class_method_signature": "Cache.removeAllInternal(final Collection<?> keys, boolean expiry, boolean notifyListeners,\n            boolean doNotNotifyCacheReplicators)", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void removeAll()", "full_signature": "public void removeAll()", "class_method_signature": "Cache.removeAll()", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "(boolean doNotNotifyCacheReplicators)", "modifiers": "public", "return": "void", "signature": "void removeAll(boolean doNotNotifyCacheReplicators)", "full_signature": "public void removeAll(boolean doNotNotifyCacheReplicators)", "class_method_signature": "Cache.removeAll(boolean doNotNotifyCacheReplicators)", "testcase": false, "constructor": false}, {"identifier": "logOnRemoveAllIfPinnedCache", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void logOnRemoveAllIfPinnedCache()", "full_signature": "private void logOnRemoveAllIfPinnedCache()", "class_method_signature": "Cache.logOnRemoveAllIfPinnedCache()", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void dispose()", "full_signature": "public synchronized void dispose()", "class_method_signature": "Cache.dispose()", "testcase": false, "constructor": false}, {"identifier": "initialiseRegisteredCacheExtensions", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initialiseRegisteredCacheExtensions()", "full_signature": "private void initialiseRegisteredCacheExtensions()", "class_method_signature": "Cache.initialiseRegisteredCacheExtensions()", "testcase": false, "constructor": false}, {"identifier": "disposeRegisteredCacheExtensions", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void disposeRegisteredCacheExtensions()", "full_signature": "private void disposeRegisteredCacheExtensions()", "class_method_signature": "Cache.disposeRegisteredCacheExtensions()", "testcase": false, "constructor": false}, {"identifier": "initialiseRegisteredCacheLoaders", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initialiseRegisteredCacheLoaders()", "full_signature": "private void initialiseRegisteredCacheLoaders()", "class_method_signature": "Cache.initialiseRegisteredCacheLoaders()", "testcase": false, "constructor": false}, {"identifier": "disposeRegisteredCacheLoaders", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void disposeRegisteredCacheLoaders()", "full_signature": "private void disposeRegisteredCacheLoaders()", "class_method_signature": "Cache.disposeRegisteredCacheLoaders()", "testcase": false, "constructor": false}, {"identifier": "initialiseRegisteredCacheWriter", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initialiseRegisteredCacheWriter()", "full_signature": "private void initialiseRegisteredCacheWriter()", "class_method_signature": "Cache.initialiseRegisteredCacheWriter()", "testcase": false, "constructor": false}, {"identifier": "disposeRegisteredCacheWriter", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void disposeRegisteredCacheWriter()", "full_signature": "private void disposeRegisteredCacheWriter()", "class_method_signature": "Cache.disposeRegisteredCacheWriter()", "testcase": false, "constructor": false}, {"identifier": "getCacheConfiguration", "parameters": "()", "modifiers": "public", "return": "CacheConfiguration", "signature": "CacheConfiguration getCacheConfiguration()", "full_signature": "public CacheConfiguration getCacheConfiguration()", "class_method_signature": "Cache.getCacheConfiguration()", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "public final synchronized", "return": "void", "signature": "void flush()", "full_signature": "public final synchronized void flush()", "class_method_signature": "Cache.flush()", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "@org.terracotta.statistics.Statistic(name = \"size\", tags = \"cache\") public final", "return": "int", "signature": "int getSize()", "full_signature": "@org.terracotta.statistics.Statistic(name = \"size\", tags = \"cache\") public final int getSize()", "class_method_signature": "Cache.getSize()", "testcase": false, "constructor": false}, {"identifier": "calculateInMemorySize", "parameters": "()", "modifiers": "@Deprecated public final", "return": "long", "signature": "long calculateInMemorySize()", "full_signature": "@Deprecated public final long calculateInMemorySize()", "class_method_signature": "Cache.calculateInMemorySize()", "testcase": false, "constructor": false}, {"identifier": "hasAbortedSizeOf", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasAbortedSizeOf()", "full_signature": "public boolean hasAbortedSizeOf()", "class_method_signature": "Cache.hasAbortedSizeOf()", "testcase": false, "constructor": false}, {"identifier": "calculateOffHeapSize", "parameters": "()", "modifiers": "@Deprecated public final", "return": "long", "signature": "long calculateOffHeapSize()", "full_signature": "@Deprecated public final long calculateOffHeapSize()", "class_method_signature": "Cache.calculateOffHeapSize()", "testcase": false, "constructor": false}, {"identifier": "calculateOnDiskSize", "parameters": "()", "modifiers": "@Deprecated public final", "return": "long", "signature": "long calculateOnDiskSize()", "full_signature": "@Deprecated public final long calculateOnDiskSize()", "class_method_signature": "Cache.calculateOnDiskSize()", "testcase": false, "constructor": false}, {"identifier": "getMemoryStoreSize", "parameters": "()", "modifiers": "@Deprecated public final", "return": "long", "signature": "long getMemoryStoreSize()", "full_signature": "@Deprecated public final long getMemoryStoreSize()", "class_method_signature": "Cache.getMemoryStoreSize()", "testcase": false, "constructor": false}, {"identifier": "getOffHeapStoreSize", "parameters": "()", "modifiers": "@Deprecated public", "return": "long", "signature": "long getOffHeapStoreSize()", "full_signature": "@Deprecated public long getOffHeapStoreSize()", "class_method_signature": "Cache.getOffHeapStoreSize()", "testcase": false, "constructor": false}, {"identifier": "getDiskStoreSize", "parameters": "()", "modifiers": "@Deprecated public final", "return": "int", "signature": "int getDiskStoreSize()", "full_signature": "@Deprecated public final int getDiskStoreSize()", "class_method_signature": "Cache.getDiskStoreSize()", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "()", "modifiers": "public final", "return": "Status", "signature": "Status getStatus()", "full_signature": "public final Status getStatus()", "class_method_signature": "Cache.getStatus()", "testcase": false, "constructor": false}, {"identifier": "checkStatus", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkStatus()", "full_signature": "private void checkStatus()", "class_method_signature": "Cache.checkStatus()", "testcase": false, "constructor": false}, {"identifier": "checkStatusAlreadyDisposed", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean checkStatusAlreadyDisposed()", "full_signature": "private boolean checkStatusAlreadyDisposed()", "class_method_signature": "Cache.checkStatusAlreadyDisposed()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@ContextAttribute(\"name\") public final", "return": "String", "signature": "String getName()", "full_signature": "@ContextAttribute(\"name\") public final String getName()", "class_method_signature": "Cache.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "public final", "return": "void", "signature": "void setName(String name)", "full_signature": "public final void setName(String name)", "class_method_signature": "Cache.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Cache.toString()", "testcase": false, "constructor": false}, {"identifier": "isExpired", "parameters": "(Element element)", "modifiers": "public final", "return": "boolean", "signature": "boolean isExpired(Element element)", "full_signature": "public final boolean isExpired(Element element)", "class_method_signature": "Cache.isExpired(Element element)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public final", "return": "Cache", "signature": "Cache clone()", "full_signature": "@Override public final Cache clone()", "class_method_signature": "Cache.clone()", "testcase": false, "constructor": false}, {"identifier": "getStore", "parameters": "()", "modifiers": "final", "return": "Store", "signature": "Store getStore()", "full_signature": "final Store getStore()", "class_method_signature": "Cache.getStore()", "testcase": false, "constructor": false}, {"identifier": "getStoreMBean", "parameters": "()", "modifiers": "public final", "return": "Object", "signature": "Object getStoreMBean()", "full_signature": "public final Object getStoreMBean()", "class_method_signature": "Cache.getStoreMBean()", "testcase": false, "constructor": false}, {"identifier": "getCacheEventNotificationService", "parameters": "()", "modifiers": "public final", "return": "RegisteredEventListeners", "signature": "RegisteredEventListeners getCacheEventNotificationService()", "full_signature": "public final RegisteredEventListeners getCacheEventNotificationService()", "class_method_signature": "Cache.getCacheEventNotificationService()", "testcase": false, "constructor": false}, {"identifier": "isElementInMemory", "parameters": "(Serializable key)", "modifiers": "public final", "return": "boolean", "signature": "boolean isElementInMemory(Serializable key)", "full_signature": "public final boolean isElementInMemory(Serializable key)", "class_method_signature": "Cache.isElementInMemory(Serializable key)", "testcase": false, "constructor": false}, {"identifier": "isElementInMemory", "parameters": "(Object key)", "modifiers": "public final", "return": "boolean", "signature": "boolean isElementInMemory(Object key)", "full_signature": "public final boolean isElementInMemory(Object key)", "class_method_signature": "Cache.isElementInMemory(Object key)", "testcase": false, "constructor": false}, {"identifier": "isElementOffHeap", "parameters": "(Object key)", "modifiers": "public final", "return": "boolean", "signature": "boolean isElementOffHeap(Object key)", "full_signature": "public final boolean isElementOffHeap(Object key)", "class_method_signature": "Cache.isElementOffHeap(Object key)", "testcase": false, "constructor": false}, {"identifier": "isElementOnDisk", "parameters": "(Serializable key)", "modifiers": "public final", "return": "boolean", "signature": "boolean isElementOnDisk(Serializable key)", "full_signature": "public final boolean isElementOnDisk(Serializable key)", "class_method_signature": "Cache.isElementOnDisk(Serializable key)", "testcase": false, "constructor": false}, {"identifier": "isElementOnDisk", "parameters": "(Object key)", "modifiers": "public final", "return": "boolean", "signature": "boolean isElementOnDisk(Object key)", "full_signature": "public final boolean isElementOnDisk(Object key)", "class_method_signature": "Cache.isElementOnDisk(Object key)", "testcase": false, "constructor": false}, {"identifier": "getGuid", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String getGuid()", "full_signature": "public final String getGuid()", "class_method_signature": "Cache.getGuid()", "testcase": false, "constructor": false}, {"identifier": "getCacheManager", "parameters": "()", "modifiers": "public final", "return": "CacheManager", "signature": "CacheManager getCacheManager()", "full_signature": "public final CacheManager getCacheManager()", "class_method_signature": "Cache.getCacheManager()", "testcase": false, "constructor": false}, {"identifier": "evictExpiredElements", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void evictExpiredElements()", "full_signature": "public void evictExpiredElements()", "class_method_signature": "Cache.evictExpiredElements()", "testcase": false, "constructor": false}, {"identifier": "isKeyInCache", "parameters": "(Object key)", "modifiers": "public", "return": "boolean", "signature": "boolean isKeyInCache(Object key)", "full_signature": "public boolean isKeyInCache(Object key)", "class_method_signature": "Cache.isKeyInCache(Object key)", "testcase": false, "constructor": false}, {"identifier": "isValueInCache", "parameters": "(Object value)", "modifiers": "public", "return": "boolean", "signature": "boolean isValueInCache(Object value)", "full_signature": "public boolean isValueInCache(Object value)", "class_method_signature": "Cache.isValueInCache(Object value)", "testcase": false, "constructor": false}, {"identifier": "getStatistics", "parameters": "()", "modifiers": "public", "return": "StatisticsGateway", "signature": "StatisticsGateway getStatistics()", "full_signature": "public StatisticsGateway getStatistics()", "class_method_signature": "Cache.getStatistics()", "testcase": false, "constructor": false}, {"identifier": "setCacheManager", "parameters": "(CacheManager cacheManager)", "modifiers": "public", "return": "void", "signature": "void setCacheManager(CacheManager cacheManager)", "full_signature": "public void setCacheManager(CacheManager cacheManager)", "class_method_signature": "Cache.setCacheManager(CacheManager cacheManager)", "testcase": false, "constructor": false}, {"identifier": "getBootstrapCacheLoader", "parameters": "()", "modifiers": "public", "return": "BootstrapCacheLoader", "signature": "BootstrapCacheLoader getBootstrapCacheLoader()", "full_signature": "public BootstrapCacheLoader getBootstrapCacheLoader()", "class_method_signature": "Cache.getBootstrapCacheLoader()", "testcase": false, "constructor": false}, {"identifier": "setBootstrapCacheLoader", "parameters": "(BootstrapCacheLoader bootstrapCacheLoader)", "modifiers": "public", "return": "void", "signature": "void setBootstrapCacheLoader(BootstrapCacheLoader bootstrapCacheLoader)", "full_signature": "public void setBootstrapCacheLoader(BootstrapCacheLoader bootstrapCacheLoader)", "class_method_signature": "Cache.setBootstrapCacheLoader(BootstrapCacheLoader bootstrapCacheLoader)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object object)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object object)", "full_signature": "@Override public boolean equals(Object object)", "class_method_signature": "Cache.equals(Object object)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Cache.hashCode()", "testcase": false, "constructor": false}, {"identifier": "createGuid", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String createGuid()", "full_signature": "private String createGuid()", "class_method_signature": "Cache.createGuid()", "testcase": false, "constructor": false}, {"identifier": "registerCacheExtension", "parameters": "(CacheExtension cacheExtension)", "modifiers": "public", "return": "void", "signature": "void registerCacheExtension(CacheExtension cacheExtension)", "full_signature": "public void registerCacheExtension(CacheExtension cacheExtension)", "class_method_signature": "Cache.registerCacheExtension(CacheExtension cacheExtension)", "testcase": false, "constructor": false}, {"identifier": "getRegisteredCacheExtensions", "parameters": "()", "modifiers": "public", "return": "List<CacheExtension>", "signature": "List<CacheExtension> getRegisteredCacheExtensions()", "full_signature": "public List<CacheExtension> getRegisteredCacheExtensions()", "class_method_signature": "Cache.getRegisteredCacheExtensions()", "testcase": false, "constructor": false}, {"identifier": "unregisterCacheExtension", "parameters": "(CacheExtension cacheExtension)", "modifiers": "public", "return": "void", "signature": "void unregisterCacheExtension(CacheExtension cacheExtension)", "full_signature": "public void unregisterCacheExtension(CacheExtension cacheExtension)", "class_method_signature": "Cache.unregisterCacheExtension(CacheExtension cacheExtension)", "testcase": false, "constructor": false}, {"identifier": "setCacheExceptionHandler", "parameters": "(CacheExceptionHandler cacheExceptionHandler)", "modifiers": "public", "return": "void", "signature": "void setCacheExceptionHandler(CacheExceptionHandler cacheExceptionHandler)", "full_signature": "public void setCacheExceptionHandler(CacheExceptionHandler cacheExceptionHandler)", "class_method_signature": "Cache.setCacheExceptionHandler(CacheExceptionHandler cacheExceptionHandler)", "testcase": false, "constructor": false}, {"identifier": "getCacheExceptionHandler", "parameters": "()", "modifiers": "public", "return": "CacheExceptionHandler", "signature": "CacheExceptionHandler getCacheExceptionHandler()", "full_signature": "public CacheExceptionHandler getCacheExceptionHandler()", "class_method_signature": "Cache.getCacheExceptionHandler()", "testcase": false, "constructor": false}, {"identifier": "registerCacheLoader", "parameters": "(CacheLoader cacheLoader)", "modifiers": "public", "return": "void", "signature": "void registerCacheLoader(CacheLoader cacheLoader)", "full_signature": "public void registerCacheLoader(CacheLoader cacheLoader)", "class_method_signature": "Cache.registerCacheLoader(CacheLoader cacheLoader)", "testcase": false, "constructor": false}, {"identifier": "unregisterCacheLoader", "parameters": "(CacheLoader cacheLoader)", "modifiers": "public", "return": "void", "signature": "void unregisterCacheLoader(CacheLoader cacheLoader)", "full_signature": "public void unregisterCacheLoader(CacheLoader cacheLoader)", "class_method_signature": "Cache.unregisterCacheLoader(CacheLoader cacheLoader)", "testcase": false, "constructor": false}, {"identifier": "getRegisteredCacheLoaders", "parameters": "()", "modifiers": "public", "return": "List<CacheLoader>", "signature": "List<CacheLoader> getRegisteredCacheLoaders()", "full_signature": "public List<CacheLoader> getRegisteredCacheLoaders()", "class_method_signature": "Cache.getRegisteredCacheLoaders()", "testcase": false, "constructor": false}, {"identifier": "registerCacheWriter", "parameters": "(CacheWriter cacheWriter)", "modifiers": "public", "return": "void", "signature": "void registerCacheWriter(CacheWriter cacheWriter)", "full_signature": "public void registerCacheWriter(CacheWriter cacheWriter)", "class_method_signature": "Cache.registerCacheWriter(CacheWriter cacheWriter)", "testcase": false, "constructor": false}, {"identifier": "unregisterCacheWriter", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void unregisterCacheWriter()", "full_signature": "public void unregisterCacheWriter()", "class_method_signature": "Cache.unregisterCacheWriter()", "testcase": false, "constructor": false}, {"identifier": "getRegisteredCacheWriter", "parameters": "()", "modifiers": "public", "return": "CacheWriter", "signature": "CacheWriter getRegisteredCacheWriter()", "full_signature": "public CacheWriter getRegisteredCacheWriter()", "class_method_signature": "Cache.getRegisteredCacheWriter()", "testcase": false, "constructor": false}, {"identifier": "registerDynamicAttributesExtractor", "parameters": "(DynamicAttributesExtractor extractor)", "modifiers": "public", "return": "void", "signature": "void registerDynamicAttributesExtractor(DynamicAttributesExtractor extractor)", "full_signature": "public void registerDynamicAttributesExtractor(DynamicAttributesExtractor extractor)", "class_method_signature": "Cache.registerDynamicAttributesExtractor(DynamicAttributesExtractor extractor)", "testcase": false, "constructor": false}, {"identifier": "asynchronousPut", "parameters": "(final Object key, final CacheLoader specificLoader, final Object argument)", "modifiers": "", "return": "Future", "signature": "Future asynchronousPut(final Object key, final CacheLoader specificLoader, final Object argument)", "full_signature": " Future asynchronousPut(final Object key, final CacheLoader specificLoader, final Object argument)", "class_method_signature": "Cache.asynchronousPut(final Object key, final CacheLoader specificLoader, final Object argument)", "testcase": false, "constructor": false}, {"identifier": "asynchronousLoad", "parameters": "(final Object key, final CacheLoader specificLoader, final Object argument)", "modifiers": "", "return": "Future<AtomicReference<Object>>", "signature": "Future<AtomicReference<Object>> asynchronousLoad(final Object key, final CacheLoader specificLoader, final Object argument)", "full_signature": " Future<AtomicReference<Object>> asynchronousLoad(final Object key, final CacheLoader specificLoader, final Object argument)", "class_method_signature": "Cache.asynchronousLoad(final Object key, final CacheLoader specificLoader, final Object argument)", "testcase": false, "constructor": false}, {"identifier": "loadValueUsingLoader", "parameters": "(final Object key, final CacheLoader specificLoader, final Object argument)", "modifiers": "private", "return": "Object", "signature": "Object loadValueUsingLoader(final Object key, final CacheLoader specificLoader, final Object argument)", "full_signature": "private Object loadValueUsingLoader(final Object key, final CacheLoader specificLoader, final Object argument)", "class_method_signature": "Cache.loadValueUsingLoader(final Object key, final CacheLoader specificLoader, final Object argument)", "testcase": false, "constructor": false}, {"identifier": "loadWithRegisteredLoaders", "parameters": "(Object argument, Object key)", "modifiers": "private", "return": "Object", "signature": "Object loadWithRegisteredLoaders(Object argument, Object key)", "full_signature": "private Object loadWithRegisteredLoaders(Object argument, Object key)", "class_method_signature": "Cache.loadWithRegisteredLoaders(Object argument, Object key)", "testcase": false, "constructor": false}, {"identifier": "asynchronousLoadAll", "parameters": "(final Collection keys, final Object argument)", "modifiers": "", "return": "Future", "signature": "Future asynchronousLoadAll(final Collection keys, final Object argument)", "full_signature": " Future asynchronousLoadAll(final Collection keys, final Object argument)", "class_method_signature": "Cache.asynchronousLoadAll(final Collection keys, final Object argument)", "testcase": false, "constructor": false}, {"identifier": "loadWithRegisteredLoaders", "parameters": "(Object argument, Set<Object> nonLoadedKeys)", "modifiers": "", "return": "Map", "signature": "Map loadWithRegisteredLoaders(Object argument, Set<Object> nonLoadedKeys)", "full_signature": " Map loadWithRegisteredLoaders(Object argument, Set<Object> nonLoadedKeys)", "class_method_signature": "Cache.loadWithRegisteredLoaders(Object argument, Set<Object> nonLoadedKeys)", "testcase": false, "constructor": false}, {"identifier": "getExecutorService", "parameters": "()", "modifiers": "", "return": "ExecutorService", "signature": "ExecutorService getExecutorService()", "full_signature": " ExecutorService getExecutorService()", "class_method_signature": "Cache.getExecutorService()", "testcase": false, "constructor": false}, {"identifier": "isDisabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDisabled()", "full_signature": "public boolean isDisabled()", "class_method_signature": "Cache.isDisabled()", "testcase": false, "constructor": false}, {"identifier": "setDisabled", "parameters": "(boolean disabled)", "modifiers": "public", "return": "void", "signature": "void setDisabled(boolean disabled)", "full_signature": "public void setDisabled(boolean disabled)", "class_method_signature": "Cache.setDisabled(boolean disabled)", "testcase": false, "constructor": false}, {"identifier": "getMemoryStoreEvictionPolicy", "parameters": "()", "modifiers": "public", "return": "Policy", "signature": "Policy getMemoryStoreEvictionPolicy()", "full_signature": "public Policy getMemoryStoreEvictionPolicy()", "class_method_signature": "Cache.getMemoryStoreEvictionPolicy()", "testcase": false, "constructor": false}, {"identifier": "setMemoryStoreEvictionPolicy", "parameters": "(Policy policy)", "modifiers": "public", "return": "void", "signature": "void setMemoryStoreEvictionPolicy(Policy policy)", "full_signature": "public void setMemoryStoreEvictionPolicy(Policy policy)", "class_method_signature": "Cache.setMemoryStoreEvictionPolicy(Policy policy)", "testcase": false, "constructor": false}, {"identifier": "getInternalContext", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object getInternalContext()", "full_signature": "public Object getInternalContext()", "class_method_signature": "Cache.getInternalContext()", "testcase": false, "constructor": false}, {"identifier": "disableDynamicFeatures", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void disableDynamicFeatures()", "full_signature": "public void disableDynamicFeatures()", "class_method_signature": "Cache.disableDynamicFeatures()", "testcase": false, "constructor": false}, {"identifier": "isClusterCoherent", "parameters": "()", "modifiers": "@Deprecated public", "return": "boolean", "signature": "boolean isClusterCoherent()", "full_signature": "@Deprecated public boolean isClusterCoherent()", "class_method_signature": "Cache.isClusterCoherent()", "testcase": false, "constructor": false}, {"identifier": "isNodeCoherent", "parameters": "()", "modifiers": "@Deprecated public", "return": "boolean", "signature": "boolean isNodeCoherent()", "full_signature": "@Deprecated public boolean isNodeCoherent()", "class_method_signature": "Cache.isNodeCoherent()", "testcase": false, "constructor": false}, {"identifier": "setNodeCoherent", "parameters": "(boolean coherent)", "modifiers": "@Deprecated public", "return": "void", "signature": "void setNodeCoherent(boolean coherent)", "full_signature": "@Deprecated public void setNodeCoherent(boolean coherent)", "class_method_signature": "Cache.setNodeCoherent(boolean coherent)", "testcase": false, "constructor": false}, {"identifier": "waitUntilClusterCoherent", "parameters": "()", "modifiers": "@Deprecated public", "return": "void", "signature": "void waitUntilClusterCoherent()", "full_signature": "@Deprecated public void waitUntilClusterCoherent()", "class_method_signature": "Cache.waitUntilClusterCoherent()", "testcase": false, "constructor": false}, {"identifier": "addPropertyChangeListener", "parameters": "(PropertyChangeListener listener)", "modifiers": "public synchronized", "return": "void", "signature": "void addPropertyChangeListener(PropertyChangeListener listener)", "full_signature": "public synchronized void addPropertyChangeListener(PropertyChangeListener listener)", "class_method_signature": "Cache.addPropertyChangeListener(PropertyChangeListener listener)", "testcase": false, "constructor": false}, {"identifier": "removePropertyChangeListener", "parameters": "(PropertyChangeListener listener)", "modifiers": "public synchronized", "return": "void", "signature": "void removePropertyChangeListener(PropertyChangeListener listener)", "full_signature": "public synchronized void removePropertyChangeListener(PropertyChangeListener listener)", "class_method_signature": "Cache.removePropertyChangeListener(PropertyChangeListener listener)", "testcase": false, "constructor": false}, {"identifier": "firePropertyChange", "parameters": "(String propertyName, Object oldValue, Object newValue)", "modifiers": "public", "return": "void", "signature": "void firePropertyChange(String propertyName, Object oldValue, Object newValue)", "full_signature": "public void firePropertyChange(String propertyName, Object oldValue, Object newValue)", "class_method_signature": "Cache.firePropertyChange(String propertyName, Object oldValue, Object newValue)", "testcase": false, "constructor": false}, {"identifier": "putIfAbsent", "parameters": "(Element element)", "modifiers": "public", "return": "Element", "signature": "Element putIfAbsent(Element element)", "full_signature": "public Element putIfAbsent(Element element)", "class_method_signature": "Cache.putIfAbsent(Element element)", "testcase": false, "constructor": false}, {"identifier": "putIfAbsent", "parameters": "(Element element, boolean doNotNotifyCacheReplicators)", "modifiers": "public", "return": "Element", "signature": "Element putIfAbsent(Element element, boolean doNotNotifyCacheReplicators)", "full_signature": "public Element putIfAbsent(Element element, boolean doNotNotifyCacheReplicators)", "class_method_signature": "Cache.putIfAbsent(Element element, boolean doNotNotifyCacheReplicators)", "testcase": false, "constructor": false}, {"identifier": "removeElement", "parameters": "(Element element)", "modifiers": "public", "return": "boolean", "signature": "boolean removeElement(Element element)", "full_signature": "public boolean removeElement(Element element)", "class_method_signature": "Cache.removeElement(Element element)", "testcase": false, "constructor": false}, {"identifier": "replace", "parameters": "(Element old, Element element)", "modifiers": "public", "return": "boolean", "signature": "boolean replace(Element old, Element element)", "full_signature": "public boolean replace(Element old, Element element)", "class_method_signature": "Cache.replace(Element old, Element element)", "testcase": false, "constructor": false}, {"identifier": "replace", "parameters": "(Element element)", "modifiers": "public", "return": "Element", "signature": "Element replace(Element element)", "full_signature": "public Element replace(Element element)", "class_method_signature": "Cache.replace(Element element)", "testcase": false, "constructor": false}, {"identifier": "checkCASOperationSupported", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkCASOperationSupported()", "full_signature": "private void checkCASOperationSupported()", "class_method_signature": "Cache.checkCASOperationSupported()", "testcase": false, "constructor": false}, {"identifier": "checkCASOperationSupported", "parameters": "(boolean doNotNotifyCacheReplicators)", "modifiers": "private", "return": "void", "signature": "void checkCASOperationSupported(boolean doNotNotifyCacheReplicators)", "full_signature": "private void checkCASOperationSupported(boolean doNotNotifyCacheReplicators)", "class_method_signature": "Cache.checkCASOperationSupported(boolean doNotNotifyCacheReplicators)", "testcase": false, "constructor": false}, {"identifier": "clusterCoherent", "parameters": "(boolean clusterCoherent)", "modifiers": "public", "return": "void", "signature": "void clusterCoherent(boolean clusterCoherent)", "full_signature": "public void clusterCoherent(boolean clusterCoherent)", "class_method_signature": "Cache.clusterCoherent(boolean clusterCoherent)", "testcase": false, "constructor": false}, {"identifier": "getSearchAttributes", "parameters": "()", "modifiers": "public", "return": "Set<Attribute>", "signature": "Set<Attribute> getSearchAttributes()", "full_signature": "public Set<Attribute> getSearchAttributes()", "class_method_signature": "Cache.getSearchAttributes()", "testcase": false, "constructor": false}, {"identifier": "getSearchAttribute", "parameters": "(String attributeName)", "modifiers": "public", "return": "Attribute<T>", "signature": "Attribute<T> getSearchAttribute(String attributeName)", "full_signature": "public Attribute<T> getSearchAttribute(String attributeName)", "class_method_signature": "Cache.getSearchAttribute(String attributeName)", "testcase": false, "constructor": false}, {"identifier": "createQuery", "parameters": "()", "modifiers": "public", "return": "Query", "signature": "Query createQuery()", "full_signature": "public Query createQuery()", "class_method_signature": "Cache.createQuery()", "testcase": false, "constructor": false}, {"identifier": "executeQuery", "parameters": "(StoreQuery query)", "modifiers": "", "return": "Results", "signature": "Results executeQuery(StoreQuery query)", "full_signature": " Results executeQuery(StoreQuery query)", "class_method_signature": "Cache.executeQuery(StoreQuery query)", "testcase": false, "constructor": false}, {"identifier": "isSearchable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSearchable()", "full_signature": "public boolean isSearchable()", "class_method_signature": "Cache.isSearchable()", "testcase": false, "constructor": false}, {"identifier": "getLockForKey", "parameters": "(final Object key)", "modifiers": "protected", "return": "Sync", "signature": "Sync getLockForKey(final Object key)", "full_signature": "protected Sync getLockForKey(final Object key)", "class_method_signature": "Cache.getLockForKey(final Object key)", "testcase": false, "constructor": false}, {"identifier": "acquireLockOnKey", "parameters": "(Object key, LockType lockType)", "modifiers": "private", "return": "void", "signature": "void acquireLockOnKey(Object key, LockType lockType)", "full_signature": "private void acquireLockOnKey(Object key, LockType lockType)", "class_method_signature": "Cache.acquireLockOnKey(Object key, LockType lockType)", "testcase": false, "constructor": false}, {"identifier": "releaseLockOnKey", "parameters": "(Object key, LockType lockType)", "modifiers": "private", "return": "void", "signature": "void releaseLockOnKey(Object key, LockType lockType)", "full_signature": "private void releaseLockOnKey(Object key, LockType lockType)", "class_method_signature": "Cache.releaseLockOnKey(Object key, LockType lockType)", "testcase": false, "constructor": false}, {"identifier": "acquireReadLockOnKey", "parameters": "(Object key)", "modifiers": "public", "return": "void", "signature": "void acquireReadLockOnKey(Object key)", "full_signature": "public void acquireReadLockOnKey(Object key)", "class_method_signature": "Cache.acquireReadLockOnKey(Object key)", "testcase": false, "constructor": false}, {"identifier": "acquireWriteLockOnKey", "parameters": "(Object key)", "modifiers": "public", "return": "void", "signature": "void acquireWriteLockOnKey(Object key)", "full_signature": "public void acquireWriteLockOnKey(Object key)", "class_method_signature": "Cache.acquireWriteLockOnKey(Object key)", "testcase": false, "constructor": false}, {"identifier": "tryReadLockOnKey", "parameters": "(Object key, long timeout)", "modifiers": "public", "return": "boolean", "signature": "boolean tryReadLockOnKey(Object key, long timeout)", "full_signature": "public boolean tryReadLockOnKey(Object key, long timeout)", "class_method_signature": "Cache.tryReadLockOnKey(Object key, long timeout)", "testcase": false, "constructor": false}, {"identifier": "tryWriteLockOnKey", "parameters": "(Object key, long timeout)", "modifiers": "public", "return": "boolean", "signature": "boolean tryWriteLockOnKey(Object key, long timeout)", "full_signature": "public boolean tryWriteLockOnKey(Object key, long timeout)", "class_method_signature": "Cache.tryWriteLockOnKey(Object key, long timeout)", "testcase": false, "constructor": false}, {"identifier": "releaseReadLockOnKey", "parameters": "(Object key)", "modifiers": "public", "return": "void", "signature": "void releaseReadLockOnKey(Object key)", "full_signature": "public void releaseReadLockOnKey(Object key)", "class_method_signature": "Cache.releaseReadLockOnKey(Object key)", "testcase": false, "constructor": false}, {"identifier": "releaseWriteLockOnKey", "parameters": "(Object key)", "modifiers": "public", "return": "void", "signature": "void releaseWriteLockOnKey(Object key)", "full_signature": "public void releaseWriteLockOnKey(Object key)", "class_method_signature": "Cache.releaseWriteLockOnKey(Object key)", "testcase": false, "constructor": false}, {"identifier": "isReadLockedByCurrentThread", "parameters": "(Object key)", "modifiers": "public", "return": "boolean", "signature": "boolean isReadLockedByCurrentThread(Object key)", "full_signature": "public boolean isReadLockedByCurrentThread(Object key)", "class_method_signature": "Cache.isReadLockedByCurrentThread(Object key)", "testcase": false, "constructor": false}, {"identifier": "isWriteLockedByCurrentThread", "parameters": "(Object key)", "modifiers": "public", "return": "boolean", "signature": "boolean isWriteLockedByCurrentThread(Object key)", "full_signature": "public boolean isWriteLockedByCurrentThread(Object key)", "class_method_signature": "Cache.isWriteLockedByCurrentThread(Object key)", "testcase": false, "constructor": false}, {"identifier": "isClusterBulkLoadEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isClusterBulkLoadEnabled()", "full_signature": "public boolean isClusterBulkLoadEnabled()", "class_method_signature": "Cache.isClusterBulkLoadEnabled()", "testcase": false, "constructor": false}, {"identifier": "isNodeBulkLoadEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isNodeBulkLoadEnabled()", "full_signature": "public boolean isNodeBulkLoadEnabled()", "class_method_signature": "Cache.isNodeBulkLoadEnabled()", "testcase": false, "constructor": false}, {"identifier": "setNodeBulkLoadEnabled", "parameters": "(boolean enabledBulkLoad)", "modifiers": "public", "return": "void", "signature": "void setNodeBulkLoadEnabled(boolean enabledBulkLoad)", "full_signature": "public void setNodeBulkLoadEnabled(boolean enabledBulkLoad)", "class_method_signature": "Cache.setNodeBulkLoadEnabled(boolean enabledBulkLoad)", "testcase": false, "constructor": false}, {"identifier": "waitUntilClusterBulkLoadComplete", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void waitUntilClusterBulkLoadComplete()", "full_signature": "public void waitUntilClusterBulkLoadComplete()", "class_method_signature": "Cache.waitUntilClusterBulkLoadComplete()", "testcase": false, "constructor": false}, {"identifier": "recalculateSize", "parameters": "(Object key)", "modifiers": "public", "return": "void", "signature": "void recalculateSize(Object key)", "full_signature": "public void recalculateSize(Object key)", "class_method_signature": "Cache.recalculateSize(Object key)", "testcase": false, "constructor": false}, {"identifier": "validateSearchQuery", "parameters": "(StoreQuery query)", "modifiers": "private", "return": "void", "signature": "void validateSearchQuery(StoreQuery query)", "full_signature": "private void validateSearchQuery(StoreQuery query)", "class_method_signature": "Cache.validateSearchQuery(StoreQuery query)", "testcase": false, "constructor": false}, {"identifier": "checkSearchAttributes", "parameters": "(Set<Attribute<?>> requestedAttrs, Set<Attribute> supportedAttrs, String src)", "modifiers": "private static", "return": "void", "signature": "void checkSearchAttributes(Set<Attribute<?>> requestedAttrs, Set<Attribute> supportedAttrs, String src)", "full_signature": "private static void checkSearchAttributes(Set<Attribute<?>> requestedAttrs, Set<Attribute> supportedAttrs, String src)", "class_method_signature": "Cache.checkSearchAttributes(Set<Attribute<?>> requestedAttrs, Set<Attribute> supportedAttrs, String src)", "testcase": false, "constructor": false}], "file": "tags/ehcache-2.8.3/ehcache-core/src/main/java/net/sf/ehcache/Cache.java"}, "focal_method": {"identifier": "setName", "parameters": "(String name)", "modifiers": "public final", "return": "void", "body": "public final void setName(String name) throws IllegalArgumentException {\n        if (!cacheStatus.isUninitialized()) {\n            throw new IllegalStateException(\"Only uninitialised caches can have their names set.\");\n        }\n        configuration.setName(name);\n    }", "signature": "void setName(String name)", "full_signature": "public final void setName(String name)", "class_method_signature": "Cache.setName(String name)", "testcase": false, "constructor": false, "invocations": ["isUninitialized", "setName"]}, "repository": {"repo_id": 10597460, "url": "https://github.com/svn2github/ehcache", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 12, "size": 128373, "license": "licensed"}}