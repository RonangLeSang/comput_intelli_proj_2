{"test_class": {"identifier": "CachesResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final Logger LOG = Logger.getLogger(CachesResourceTest.class.getName());", "modifier": "public static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(CachesResourceTest.class.getName())", "var_name": "LOG"}, {"original_string": "private static EhcacheWebServiceEndpoint cacheService;", "modifier": "private static", "type": "EhcacheWebServiceEndpoint", "declarator": "cacheService", "var_name": "cacheService"}, {"original_string": "private String cacheName = \"sampleCache1\";", "modifier": "private", "type": "String", "declarator": "cacheName = \"sampleCache1\"", "var_name": "cacheName"}], "file": "branches/ehcache-1.7-groups/server/src/test/java/net/sf/ehcache/server/rest/resources/CachesResourceTest.java"}, "test_case": {"identifier": "testGetCachesJaxb", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetCachesJaxb() throws Exception, SAXException, XPathExpressionException, JAXBException {\n        HttpURLConnection result = HttpUtil.get(\"http://localhost:8080/ehcache/rest/\");\n        assertEquals(200, result.getResponseCode());\n        JAXBContext jaxbContext = new JAXBContextResolver().getContext(Caches.class);\n        Unmarshaller unmarshaller = jaxbContext.createUnmarshaller();\n        Caches caches = (Caches) unmarshaller.unmarshal(result.getInputStream());\n        assertTrue(caches.getCaches().size() >= 6);\n    }", "signature": "void testGetCachesJaxb()", "full_signature": "@Test public void testGetCachesJaxb()", "class_method_signature": "CachesResourceTest.testGetCachesJaxb()", "testcase": true, "constructor": false, "invocations": ["get", "assertEquals", "getResponseCode", "getContext", "createUnmarshaller", "unmarshal", "getInputStream", "assertTrue", "size", "getCaches"]}, "focal_class": {"identifier": "CachesResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(CachesResource.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(CachesResource.class.getName())", "var_name": "LOG"}, {"original_string": "private static final CacheManager MANAGER;", "modifier": "private static final", "type": "CacheManager", "declarator": "MANAGER", "var_name": "MANAGER"}, {"original_string": "@Context\n    private UriInfo uriInfo;", "modifier": "@Context\n    private", "type": "UriInfo", "declarator": "uriInfo", "var_name": "uriInfo"}, {"original_string": "@Context\n    private Request request;", "modifier": "@Context\n    private", "type": "Request", "declarator": "request", "var_name": "request"}], "methods": [{"identifier": "getCacheResource", "parameters": "(@PathParam(\"cache\") String cache)", "modifiers": "@Path(\"{cache}\") public", "return": "CacheResource", "signature": "CacheResource getCacheResource(@PathParam(\"cache\") String cache)", "full_signature": "@Path(\"{cache}\") public CacheResource getCacheResource(@PathParam(\"cache\") String cache)", "class_method_signature": "CachesResource.getCacheResource(@PathParam(\"cache\") String cache)", "testcase": false, "constructor": false}, {"identifier": "getCaches", "parameters": "()", "modifiers": "@GET public", "return": "Caches", "signature": "Caches getCaches()", "full_signature": "@GET public Caches getCaches()", "class_method_signature": "CachesResource.getCaches()", "testcase": false, "constructor": false}], "file": "branches/ehcache-1.7-groups/server/src/main/java/net/sf/ehcache/server/rest/resources/CachesResource.java"}, "focal_method": {"identifier": "getCaches", "parameters": "()", "modifiers": "@GET public", "return": "Caches", "body": "@GET\n    public Caches getCaches() {\n        LOG.info(\"GET Caches\");\n\n        String[] cacheNames = MANAGER.getCacheNames();\n\n        List<Cache> cacheList = new ArrayList<Cache>();\n\n        for (String cacheName : cacheNames) {\n            Ehcache ehcache = MANAGER.getCache(cacheName);\n            URI cacheUri = uriInfo.getAbsolutePathBuilder().path(cacheName).build().normalize();\n            Cache cache = new Cache(cacheName, cacheUri.toString(), ehcache.toString(),\n                    new Statistics(ehcache.getStatistics()), ehcache.getCacheConfiguration());\n            cacheList.add(cache);\n        }\n\n        return new Caches(cacheList);\n    }", "signature": "Caches getCaches()", "full_signature": "@GET public Caches getCaches()", "class_method_signature": "CachesResource.getCaches()", "testcase": false, "constructor": false, "invocations": ["info", "getCacheNames", "getCache", "normalize", "build", "path", "getAbsolutePathBuilder", "toString", "toString", "getStatistics", "getCacheConfiguration", "add"]}, "repository": {"repo_id": 10597460, "url": "https://github.com/svn2github/ehcache", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 12, "size": 128373, "license": "licensed"}}