{"test_class": {"identifier": "ConfigurationTest", "superclass": "", "interfaces": "", "fields": [], "file": "tags/ehcache-2.7.7/ehcache-core/src/test/java/net/sf/ehcache/config/ConfigurationTest.java"}, "test_case": {"identifier": "testConfigurationCanBeReusedAfterCacheManagerShutdown", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConfigurationCanBeReusedAfterCacheManagerShutdown() {\n        Configuration configuration = new Configuration();\n        CacheManager mock = mock(CacheManager.class);\n        when(mock.getStatus()).thenReturn(Status.STATUS_SHUTDOWN);\n        configuration.setupFor(mock, \"one\");\n\n        configuration.setupFor(mock(CacheManager.class), \"two\");\n    }", "signature": "void testConfigurationCanBeReusedAfterCacheManagerShutdown()", "full_signature": "@Test public void testConfigurationCanBeReusedAfterCacheManagerShutdown()", "class_method_signature": "ConfigurationTest.testConfigurationCanBeReusedAfterCacheManagerShutdown()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getStatus", "setupFor", "setupFor", "mock"]}, "focal_class": {"identifier": "Configuration", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final boolean DEFAULT_DYNAMIC_CONFIG = true;", "modifier": "public static final", "type": "boolean", "declarator": "DEFAULT_DYNAMIC_CONFIG = true", "var_name": "DEFAULT_DYNAMIC_CONFIG"}, {"original_string": "public static final boolean DEFAULT_UPDATE_CHECK = true;", "modifier": "public static final", "type": "boolean", "declarator": "DEFAULT_UPDATE_CHECK = true", "var_name": "DEFAULT_UPDATE_CHECK"}, {"original_string": "public static final int  DEFAULT_TRANSACTION_TIMEOUT = 15;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_TRANSACTION_TIMEOUT = 15", "var_name": "DEFAULT_TRANSACTION_TIMEOUT"}, {"original_string": "public static final long DEFAULT_MAX_BYTES_ON_HEAP   =  0;", "modifier": "public static final", "type": "long", "declarator": "DEFAULT_MAX_BYTES_ON_HEAP   =  0", "var_name": "DEFAULT_MAX_BYTES_ON_HEAP"}, {"original_string": "public static final long DEFAULT_MAX_BYTES_OFF_HEAP  =  0;", "modifier": "public static final", "type": "long", "declarator": "DEFAULT_MAX_BYTES_OFF_HEAP  =  0", "var_name": "DEFAULT_MAX_BYTES_OFF_HEAP"}, {"original_string": "public static final long DEFAULT_MAX_BYTES_ON_DISK   =  0;", "modifier": "public static final", "type": "long", "declarator": "DEFAULT_MAX_BYTES_ON_DISK   =  0", "var_name": "DEFAULT_MAX_BYTES_ON_DISK"}, {"original_string": "public static final Monitoring DEFAULT_MONITORING = Monitoring.AUTODETECT;", "modifier": "public static final", "type": "Monitoring", "declarator": "DEFAULT_MONITORING = Monitoring.AUTODETECT", "var_name": "DEFAULT_MONITORING"}, {"original_string": "public static final SizeOfPolicyConfiguration DEFAULT_SIZEOF_POLICY_CONFIGURATION = new SizeOfPolicyConfiguration();", "modifier": "public static final", "type": "SizeOfPolicyConfiguration", "declarator": "DEFAULT_SIZEOF_POLICY_CONFIGURATION = new SizeOfPolicyConfiguration()", "var_name": "DEFAULT_SIZEOF_POLICY_CONFIGURATION"}, {"original_string": "public static final FactoryConfiguration DEFAULT_TRANSACTION_MANAGER_LOOKUP_CONFIG = getDefaultTransactionManagerLookupConfiguration();", "modifier": "public static final", "type": "FactoryConfiguration", "declarator": "DEFAULT_TRANSACTION_MANAGER_LOOKUP_CONFIG = getDefaultTransactionManagerLookupConfiguration()", "var_name": "DEFAULT_TRANSACTION_MANAGER_LOOKUP_CONFIG"}, {"original_string": "private static final int HUNDRED = 100;", "modifier": "private static final", "type": "int", "declarator": "HUNDRED = 100", "var_name": "HUNDRED"}, {"original_string": "private static final Logger LOG = LoggerFactory.getLogger(Configuration.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(Configuration.class)", "var_name": "LOG"}, {"original_string": "private volatile RuntimeCfg cfg;", "modifier": "private volatile", "type": "RuntimeCfg", "declarator": "cfg", "var_name": "cfg"}, {"original_string": "private final List<PropertyChangeListener> propertyChangeListeners = new CopyOnWriteArrayList<PropertyChangeListener>();", "modifier": "private final", "type": "List<PropertyChangeListener>", "declarator": "propertyChangeListeners = new CopyOnWriteArrayList<PropertyChangeListener>()", "var_name": "propertyChangeListeners"}, {"original_string": "private String cacheManagerName;", "modifier": "private", "type": "String", "declarator": "cacheManagerName", "var_name": "cacheManagerName"}, {"original_string": "private boolean updateCheck = DEFAULT_UPDATE_CHECK;", "modifier": "private", "type": "boolean", "declarator": "updateCheck = DEFAULT_UPDATE_CHECK", "var_name": "updateCheck"}, {"original_string": "private int defaultTransactionTimeoutInSeconds = DEFAULT_TRANSACTION_TIMEOUT;", "modifier": "private", "type": "int", "declarator": "defaultTransactionTimeoutInSeconds = DEFAULT_TRANSACTION_TIMEOUT", "var_name": "defaultTransactionTimeoutInSeconds"}, {"original_string": "private Monitoring monitoring = DEFAULT_MONITORING;", "modifier": "private", "type": "Monitoring", "declarator": "monitoring = DEFAULT_MONITORING", "var_name": "monitoring"}, {"original_string": "private DiskStoreConfiguration diskStoreConfiguration;", "modifier": "private", "type": "DiskStoreConfiguration", "declarator": "diskStoreConfiguration", "var_name": "diskStoreConfiguration"}, {"original_string": "private CacheConfiguration defaultCacheConfiguration;", "modifier": "private", "type": "CacheConfiguration", "declarator": "defaultCacheConfiguration", "var_name": "defaultCacheConfiguration"}, {"original_string": "private final List<FactoryConfiguration> cacheManagerPeerProviderFactoryConfiguration = new ArrayList<FactoryConfiguration>();", "modifier": "private final", "type": "List<FactoryConfiguration>", "declarator": "cacheManagerPeerProviderFactoryConfiguration = new ArrayList<FactoryConfiguration>()", "var_name": "cacheManagerPeerProviderFactoryConfiguration"}, {"original_string": "private final List<FactoryConfiguration> cacheManagerPeerListenerFactoryConfiguration = new ArrayList<FactoryConfiguration>();", "modifier": "private final", "type": "List<FactoryConfiguration>", "declarator": "cacheManagerPeerListenerFactoryConfiguration = new ArrayList<FactoryConfiguration>()", "var_name": "cacheManagerPeerListenerFactoryConfiguration"}, {"original_string": "private SizeOfPolicyConfiguration sizeOfPolicyConfiguration;", "modifier": "private", "type": "SizeOfPolicyConfiguration", "declarator": "sizeOfPolicyConfiguration", "var_name": "sizeOfPolicyConfiguration"}, {"original_string": "private FactoryConfiguration transactionManagerLookupConfiguration;", "modifier": "private", "type": "FactoryConfiguration", "declarator": "transactionManagerLookupConfiguration", "var_name": "transactionManagerLookupConfiguration"}, {"original_string": "private FactoryConfiguration cacheManagerEventListenerFactoryConfiguration;", "modifier": "private", "type": "FactoryConfiguration", "declarator": "cacheManagerEventListenerFactoryConfiguration", "var_name": "cacheManagerEventListenerFactoryConfiguration"}, {"original_string": "private TerracottaClientConfiguration terracottaConfigConfiguration;", "modifier": "private", "type": "TerracottaClientConfiguration", "declarator": "terracottaConfigConfiguration", "var_name": "terracottaConfigConfiguration"}, {"original_string": "private ManagementRESTServiceConfiguration managementRESTService;", "modifier": "private", "type": "ManagementRESTServiceConfiguration", "declarator": "managementRESTService", "var_name": "managementRESTService"}, {"original_string": "private final Map<String, CacheConfiguration> cacheConfigurations = new ConcurrentHashMap<String, CacheConfiguration>();", "modifier": "private final", "type": "Map<String, CacheConfiguration>", "declarator": "cacheConfigurations = new ConcurrentHashMap<String, CacheConfiguration>()", "var_name": "cacheConfigurations"}, {"original_string": "private ConfigurationSource configurationSource;", "modifier": "private", "type": "ConfigurationSource", "declarator": "configurationSource", "var_name": "configurationSource"}, {"original_string": "private boolean dynamicConfig = DEFAULT_DYNAMIC_CONFIG;", "modifier": "private", "type": "boolean", "declarator": "dynamicConfig = DEFAULT_DYNAMIC_CONFIG", "var_name": "dynamicConfig"}, {"original_string": "private Long maxBytesLocalHeap;", "modifier": "private", "type": "Long", "declarator": "maxBytesLocalHeap", "var_name": "maxBytesLocalHeap"}, {"original_string": "private String maxBytesLocalHeapInput;", "modifier": "private", "type": "String", "declarator": "maxBytesLocalHeapInput", "var_name": "maxBytesLocalHeapInput"}, {"original_string": "private Long maxBytesLocalOffHeap;", "modifier": "private", "type": "Long", "declarator": "maxBytesLocalOffHeap", "var_name": "maxBytesLocalOffHeap"}, {"original_string": "private String maxBytesLocalOffHeapInput;", "modifier": "private", "type": "String", "declarator": "maxBytesLocalOffHeapInput", "var_name": "maxBytesLocalOffHeapInput"}, {"original_string": "private Long maxBytesLocalDisk;", "modifier": "private", "type": "Long", "declarator": "maxBytesLocalDisk", "var_name": "maxBytesLocalDisk"}, {"original_string": "private String maxBytesLocalDiskInput;", "modifier": "private", "type": "String", "declarator": "maxBytesLocalDiskInput", "var_name": "maxBytesLocalDiskInput"}], "methods": [{"identifier": "Configuration", "parameters": "()", "modifiers": "public", "return": "", "signature": " Configuration()", "full_signature": "public  Configuration()", "class_method_signature": "Configuration.Configuration()", "testcase": false, "constructor": true}, {"identifier": "getAllActiveCaches", "parameters": "(CacheManager cacheManager)", "modifiers": "static", "return": "Set<Cache>", "signature": "Set<Cache> getAllActiveCaches(CacheManager cacheManager)", "full_signature": "static Set<Cache> getAllActiveCaches(CacheManager cacheManager)", "class_method_signature": "Configuration.getAllActiveCaches(CacheManager cacheManager)", "testcase": false, "constructor": false}, {"identifier": "setupFor", "parameters": "(final CacheManager cacheManager, final String fallbackName)", "modifiers": "public", "return": "RuntimeCfg", "signature": "RuntimeCfg setupFor(final CacheManager cacheManager, final String fallbackName)", "full_signature": "public RuntimeCfg setupFor(final CacheManager cacheManager, final String fallbackName)", "class_method_signature": "Configuration.setupFor(final CacheManager cacheManager, final String fallbackName)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "()", "modifiers": "public", "return": "Collection<ConfigError>", "signature": "Collection<ConfigError> validate()", "full_signature": "public Collection<ConfigError> validate()", "class_method_signature": "Configuration.validate()", "testcase": false, "constructor": false}, {"identifier": "isMaxBytesLocalDiskSet", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isMaxBytesLocalDiskSet()", "full_signature": "public boolean isMaxBytesLocalDiskSet()", "class_method_signature": "Configuration.isMaxBytesLocalDiskSet()", "testcase": false, "constructor": false}, {"identifier": "isMaxBytesLocalOffHeapSet", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isMaxBytesLocalOffHeapSet()", "full_signature": "public boolean isMaxBytesLocalOffHeapSet()", "class_method_signature": "Configuration.isMaxBytesLocalOffHeapSet()", "testcase": false, "constructor": false}, {"identifier": "isMaxBytesLocalHeapSet", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isMaxBytesLocalHeapSet()", "full_signature": "public boolean isMaxBytesLocalHeapSet()", "class_method_signature": "Configuration.isMaxBytesLocalHeapSet()", "testcase": false, "constructor": false}, {"identifier": "getDefaultTransactionManagerLookupConfiguration", "parameters": "()", "modifiers": "private static", "return": "FactoryConfiguration", "signature": "FactoryConfiguration getDefaultTransactionManagerLookupConfiguration()", "full_signature": "private static FactoryConfiguration getDefaultTransactionManagerLookupConfiguration()", "class_method_signature": "Configuration.getDefaultTransactionManagerLookupConfiguration()", "testcase": false, "constructor": false}, {"identifier": "name", "parameters": "(String name)", "modifiers": "public final", "return": "Configuration", "signature": "Configuration name(String name)", "full_signature": "public final Configuration name(String name)", "class_method_signature": "Configuration.name(String name)", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "public final", "return": "void", "signature": "void setName(String name)", "full_signature": "public final void setName(String name)", "class_method_signature": "Configuration.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "assertArgumentNotNull", "parameters": "(String name, Object object)", "modifiers": "private", "return": "void", "signature": "void assertArgumentNotNull(String name, Object object)", "full_signature": "private void assertArgumentNotNull(String name, Object object)", "class_method_signature": "Configuration.assertArgumentNotNull(String name, Object object)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String getName()", "full_signature": "public final String getName()", "class_method_signature": "Configuration.getName()", "testcase": false, "constructor": false}, {"identifier": "updateCheck", "parameters": "(boolean updateCheck)", "modifiers": "public final", "return": "Configuration", "signature": "Configuration updateCheck(boolean updateCheck)", "full_signature": "public final Configuration updateCheck(boolean updateCheck)", "class_method_signature": "Configuration.updateCheck(boolean updateCheck)", "testcase": false, "constructor": false}, {"identifier": "setUpdateCheck", "parameters": "(boolean updateCheck)", "modifiers": "public final", "return": "void", "signature": "void setUpdateCheck(boolean updateCheck)", "full_signature": "public final void setUpdateCheck(boolean updateCheck)", "class_method_signature": "Configuration.setUpdateCheck(boolean updateCheck)", "testcase": false, "constructor": false}, {"identifier": "getUpdateCheck", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean getUpdateCheck()", "full_signature": "public final boolean getUpdateCheck()", "class_method_signature": "Configuration.getUpdateCheck()", "testcase": false, "constructor": false}, {"identifier": "defaultTransactionTimeoutInSeconds", "parameters": "(int defaultTransactionTimeoutInSeconds)", "modifiers": "public final", "return": "Configuration", "signature": "Configuration defaultTransactionTimeoutInSeconds(int defaultTransactionTimeoutInSeconds)", "full_signature": "public final Configuration defaultTransactionTimeoutInSeconds(int defaultTransactionTimeoutInSeconds)", "class_method_signature": "Configuration.defaultTransactionTimeoutInSeconds(int defaultTransactionTimeoutInSeconds)", "testcase": false, "constructor": false}, {"identifier": "setDefaultTransactionTimeoutInSeconds", "parameters": "(int defaultTransactionTimeoutInSeconds)", "modifiers": "public final", "return": "void", "signature": "void setDefaultTransactionTimeoutInSeconds(int defaultTransactionTimeoutInSeconds)", "full_signature": "public final void setDefaultTransactionTimeoutInSeconds(int defaultTransactionTimeoutInSeconds)", "class_method_signature": "Configuration.setDefaultTransactionTimeoutInSeconds(int defaultTransactionTimeoutInSeconds)", "testcase": false, "constructor": false}, {"identifier": "getDefaultTransactionTimeoutInSeconds", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int getDefaultTransactionTimeoutInSeconds()", "full_signature": "public final int getDefaultTransactionTimeoutInSeconds()", "class_method_signature": "Configuration.getDefaultTransactionTimeoutInSeconds()", "testcase": false, "constructor": false}, {"identifier": "monitoring", "parameters": "(Monitoring monitoring)", "modifiers": "public final", "return": "Configuration", "signature": "Configuration monitoring(Monitoring monitoring)", "full_signature": "public final Configuration monitoring(Monitoring monitoring)", "class_method_signature": "Configuration.monitoring(Monitoring monitoring)", "testcase": false, "constructor": false}, {"identifier": "setMonitoring", "parameters": "(String monitoring)", "modifiers": "public final", "return": "void", "signature": "void setMonitoring(String monitoring)", "full_signature": "public final void setMonitoring(String monitoring)", "class_method_signature": "Configuration.setMonitoring(String monitoring)", "testcase": false, "constructor": false}, {"identifier": "getMonitoring", "parameters": "()", "modifiers": "public final", "return": "Monitoring", "signature": "Monitoring getMonitoring()", "full_signature": "public final Monitoring getMonitoring()", "class_method_signature": "Configuration.getMonitoring()", "testcase": false, "constructor": false}, {"identifier": "dynamicConfig", "parameters": "(boolean dynamicConfig)", "modifiers": "public final", "return": "Configuration", "signature": "Configuration dynamicConfig(boolean dynamicConfig)", "full_signature": "public final Configuration dynamicConfig(boolean dynamicConfig)", "class_method_signature": "Configuration.dynamicConfig(boolean dynamicConfig)", "testcase": false, "constructor": false}, {"identifier": "setDynamicConfig", "parameters": "(boolean dynamicConfig)", "modifiers": "public final", "return": "void", "signature": "void setDynamicConfig(boolean dynamicConfig)", "full_signature": "public final void setDynamicConfig(boolean dynamicConfig)", "class_method_signature": "Configuration.setDynamicConfig(boolean dynamicConfig)", "testcase": false, "constructor": false}, {"identifier": "getDynamicConfig", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean getDynamicConfig()", "full_signature": "public final boolean getDynamicConfig()", "class_method_signature": "Configuration.getDynamicConfig()", "testcase": false, "constructor": false}, {"identifier": "getMaxBytesLocalHeap", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMaxBytesLocalHeap()", "full_signature": "public long getMaxBytesLocalHeap()", "class_method_signature": "Configuration.getMaxBytesLocalHeap()", "testcase": false, "constructor": false}, {"identifier": "setMaxBytesLocalHeap", "parameters": "(final String maxBytesOnHeap)", "modifiers": "public", "return": "void", "signature": "void setMaxBytesLocalHeap(final String maxBytesOnHeap)", "full_signature": "public void setMaxBytesLocalHeap(final String maxBytesOnHeap)", "class_method_signature": "Configuration.setMaxBytesLocalHeap(final String maxBytesOnHeap)", "testcase": false, "constructor": false}, {"identifier": "getMaxBytesLocalHeapAsString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMaxBytesLocalHeapAsString()", "full_signature": "public String getMaxBytesLocalHeapAsString()", "class_method_signature": "Configuration.getMaxBytesLocalHeapAsString()", "testcase": false, "constructor": false}, {"identifier": "parsePercentage", "parameters": "(final String stringValue)", "modifiers": "private", "return": "int", "signature": "int parsePercentage(final String stringValue)", "full_signature": "private int parsePercentage(final String stringValue)", "class_method_signature": "Configuration.parsePercentage(final String stringValue)", "testcase": false, "constructor": false}, {"identifier": "isPercentage", "parameters": "(final String stringValue)", "modifiers": "private", "return": "boolean", "signature": "boolean isPercentage(final String stringValue)", "full_signature": "private boolean isPercentage(final String stringValue)", "class_method_signature": "Configuration.isPercentage(final String stringValue)", "testcase": false, "constructor": false}, {"identifier": "setMaxBytesLocalHeap", "parameters": "(final Long maxBytesOnHeap)", "modifiers": "public", "return": "void", "signature": "void setMaxBytesLocalHeap(final Long maxBytesOnHeap)", "full_signature": "public void setMaxBytesLocalHeap(final Long maxBytesOnHeap)", "class_method_signature": "Configuration.setMaxBytesLocalHeap(final Long maxBytesOnHeap)", "testcase": false, "constructor": false}, {"identifier": "maxBytesLocalHeap", "parameters": "(final long amount, final MemoryUnit memoryUnit)", "modifiers": "public", "return": "Configuration", "signature": "Configuration maxBytesLocalHeap(final long amount, final MemoryUnit memoryUnit)", "full_signature": "public Configuration maxBytesLocalHeap(final long amount, final MemoryUnit memoryUnit)", "class_method_signature": "Configuration.maxBytesLocalHeap(final long amount, final MemoryUnit memoryUnit)", "testcase": false, "constructor": false}, {"identifier": "getMaxBytesLocalOffHeap", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMaxBytesLocalOffHeap()", "full_signature": "public long getMaxBytesLocalOffHeap()", "class_method_signature": "Configuration.getMaxBytesLocalOffHeap()", "testcase": false, "constructor": false}, {"identifier": "setMaxBytesLocalOffHeap", "parameters": "(final String maxBytesOffHeap)", "modifiers": "public", "return": "void", "signature": "void setMaxBytesLocalOffHeap(final String maxBytesOffHeap)", "full_signature": "public void setMaxBytesLocalOffHeap(final String maxBytesOffHeap)", "class_method_signature": "Configuration.setMaxBytesLocalOffHeap(final String maxBytesOffHeap)", "testcase": false, "constructor": false}, {"identifier": "getMaxBytesLocalOffHeapAsString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMaxBytesLocalOffHeapAsString()", "full_signature": "public String getMaxBytesLocalOffHeapAsString()", "class_method_signature": "Configuration.getMaxBytesLocalOffHeapAsString()", "testcase": false, "constructor": false}, {"identifier": "getTotalConfiguredOffheap", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getTotalConfiguredOffheap()", "full_signature": "public long getTotalConfiguredOffheap()", "class_method_signature": "Configuration.getTotalConfiguredOffheap()", "testcase": false, "constructor": false}, {"identifier": "getOffHeapLimit", "parameters": "()", "modifiers": "private", "return": "long", "signature": "long getOffHeapLimit()", "full_signature": "private long getOffHeapLimit()", "class_method_signature": "Configuration.getOffHeapLimit()", "testcase": false, "constructor": false}, {"identifier": "setMaxBytesLocalOffHeap", "parameters": "(final Long maxBytesOffHeap)", "modifiers": "public", "return": "void", "signature": "void setMaxBytesLocalOffHeap(final Long maxBytesOffHeap)", "full_signature": "public void setMaxBytesLocalOffHeap(final Long maxBytesOffHeap)", "class_method_signature": "Configuration.setMaxBytesLocalOffHeap(final Long maxBytesOffHeap)", "testcase": false, "constructor": false}, {"identifier": "maxBytesLocalOffHeap", "parameters": "(final long amount, final MemoryUnit memoryUnit)", "modifiers": "public", "return": "Configuration", "signature": "Configuration maxBytesLocalOffHeap(final long amount, final MemoryUnit memoryUnit)", "full_signature": "public Configuration maxBytesLocalOffHeap(final long amount, final MemoryUnit memoryUnit)", "class_method_signature": "Configuration.maxBytesLocalOffHeap(final long amount, final MemoryUnit memoryUnit)", "testcase": false, "constructor": false}, {"identifier": "getMaxBytesLocalDisk", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMaxBytesLocalDisk()", "full_signature": "public long getMaxBytesLocalDisk()", "class_method_signature": "Configuration.getMaxBytesLocalDisk()", "testcase": false, "constructor": false}, {"identifier": "setMaxBytesLocalDisk", "parameters": "(final String maxBytesOnDisk)", "modifiers": "public", "return": "void", "signature": "void setMaxBytesLocalDisk(final String maxBytesOnDisk)", "full_signature": "public void setMaxBytesLocalDisk(final String maxBytesOnDisk)", "class_method_signature": "Configuration.setMaxBytesLocalDisk(final String maxBytesOnDisk)", "testcase": false, "constructor": false}, {"identifier": "getMaxBytesLocalDiskAsString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMaxBytesLocalDiskAsString()", "full_signature": "public String getMaxBytesLocalDiskAsString()", "class_method_signature": "Configuration.getMaxBytesLocalDiskAsString()", "testcase": false, "constructor": false}, {"identifier": "setMaxBytesLocalDisk", "parameters": "(final Long maxBytesOnDisk)", "modifiers": "public", "return": "void", "signature": "void setMaxBytesLocalDisk(final Long maxBytesOnDisk)", "full_signature": "public void setMaxBytesLocalDisk(final Long maxBytesOnDisk)", "class_method_signature": "Configuration.setMaxBytesLocalDisk(final Long maxBytesOnDisk)", "testcase": false, "constructor": false}, {"identifier": "maxBytesLocalDisk", "parameters": "(final long amount, final MemoryUnit memoryUnit)", "modifiers": "public", "return": "Configuration", "signature": "Configuration maxBytesLocalDisk(final long amount, final MemoryUnit memoryUnit)", "full_signature": "public Configuration maxBytesLocalDisk(final long amount, final MemoryUnit memoryUnit)", "class_method_signature": "Configuration.maxBytesLocalDisk(final long amount, final MemoryUnit memoryUnit)", "testcase": false, "constructor": false}, {"identifier": "verifyGreaterThanZero", "parameters": "(final Long maxBytesOnHeap, final String field)", "modifiers": "private", "return": "void", "signature": "void verifyGreaterThanZero(final Long maxBytesOnHeap, final String field)", "full_signature": "private void verifyGreaterThanZero(final Long maxBytesOnHeap, final String field)", "class_method_signature": "Configuration.verifyGreaterThanZero(final Long maxBytesOnHeap, final String field)", "testcase": false, "constructor": false}, {"identifier": "diskStore", "parameters": "(DiskStoreConfiguration diskStoreConfigurationParameter)", "modifiers": "public final", "return": "Configuration", "signature": "Configuration diskStore(DiskStoreConfiguration diskStoreConfigurationParameter)", "full_signature": "public final Configuration diskStore(DiskStoreConfiguration diskStoreConfigurationParameter)", "class_method_signature": "Configuration.diskStore(DiskStoreConfiguration diskStoreConfigurationParameter)", "testcase": false, "constructor": false}, {"identifier": "addDiskStore", "parameters": "(DiskStoreConfiguration diskStoreConfigurationParameter)", "modifiers": "public final", "return": "void", "signature": "void addDiskStore(DiskStoreConfiguration diskStoreConfigurationParameter)", "full_signature": "public final void addDiskStore(DiskStoreConfiguration diskStoreConfigurationParameter)", "class_method_signature": "Configuration.addDiskStore(DiskStoreConfiguration diskStoreConfigurationParameter)", "testcase": false, "constructor": false}, {"identifier": "sizeOfPolicy", "parameters": "(SizeOfPolicyConfiguration sizeOfPolicyConfiguration)", "modifiers": "public final", "return": "Configuration", "signature": "Configuration sizeOfPolicy(SizeOfPolicyConfiguration sizeOfPolicyConfiguration)", "full_signature": "public final Configuration sizeOfPolicy(SizeOfPolicyConfiguration sizeOfPolicyConfiguration)", "class_method_signature": "Configuration.sizeOfPolicy(SizeOfPolicyConfiguration sizeOfPolicyConfiguration)", "testcase": false, "constructor": false}, {"identifier": "addSizeOfPolicy", "parameters": "(SizeOfPolicyConfiguration sizeOfPolicy)", "modifiers": "public final", "return": "void", "signature": "void addSizeOfPolicy(SizeOfPolicyConfiguration sizeOfPolicy)", "full_signature": "public final void addSizeOfPolicy(SizeOfPolicyConfiguration sizeOfPolicy)", "class_method_signature": "Configuration.addSizeOfPolicy(SizeOfPolicyConfiguration sizeOfPolicy)", "testcase": false, "constructor": false}, {"identifier": "transactionManagerLookup", "parameters": "(FactoryConfiguration transactionManagerLookupParameter)", "modifiers": "public final", "return": "Configuration", "signature": "Configuration transactionManagerLookup(FactoryConfiguration transactionManagerLookupParameter)", "full_signature": "public final Configuration transactionManagerLookup(FactoryConfiguration transactionManagerLookupParameter)", "class_method_signature": "Configuration.transactionManagerLookup(FactoryConfiguration transactionManagerLookupParameter)", "testcase": false, "constructor": false}, {"identifier": "addTransactionManagerLookup", "parameters": "(FactoryConfiguration transactionManagerLookupParameter)", "modifiers": "public final", "return": "void", "signature": "void addTransactionManagerLookup(FactoryConfiguration transactionManagerLookupParameter)", "full_signature": "public final void addTransactionManagerLookup(FactoryConfiguration transactionManagerLookupParameter)", "class_method_signature": "Configuration.addTransactionManagerLookup(FactoryConfiguration transactionManagerLookupParameter)", "testcase": false, "constructor": false}, {"identifier": "cacheManagerEventListenerFactory", "parameters": "(FactoryConfiguration cacheManagerEventListenerFactoryConfiguration)", "modifiers": "public final", "return": "Configuration", "signature": "Configuration cacheManagerEventListenerFactory(FactoryConfiguration cacheManagerEventListenerFactoryConfiguration)", "full_signature": "public final Configuration cacheManagerEventListenerFactory(FactoryConfiguration cacheManagerEventListenerFactoryConfiguration)", "class_method_signature": "Configuration.cacheManagerEventListenerFactory(FactoryConfiguration cacheManagerEventListenerFactoryConfiguration)", "testcase": false, "constructor": false}, {"identifier": "addCacheManagerEventListenerFactory", "parameters": "(FactoryConfiguration cacheManagerEventListenerFactoryConfiguration)", "modifiers": "public final", "return": "void", "signature": "void addCacheManagerEventListenerFactory(FactoryConfiguration cacheManagerEventListenerFactoryConfiguration)", "full_signature": "public final void addCacheManagerEventListenerFactory(FactoryConfiguration cacheManagerEventListenerFactoryConfiguration)", "class_method_signature": "Configuration.addCacheManagerEventListenerFactory(FactoryConfiguration cacheManagerEventListenerFactoryConfiguration)", "testcase": false, "constructor": false}, {"identifier": "cacheManagerPeerProviderFactory", "parameters": "(FactoryConfiguration factory)", "modifiers": "public final", "return": "Configuration", "signature": "Configuration cacheManagerPeerProviderFactory(FactoryConfiguration factory)", "full_signature": "public final Configuration cacheManagerPeerProviderFactory(FactoryConfiguration factory)", "class_method_signature": "Configuration.cacheManagerPeerProviderFactory(FactoryConfiguration factory)", "testcase": false, "constructor": false}, {"identifier": "addCacheManagerPeerProviderFactory", "parameters": "(FactoryConfiguration factory)", "modifiers": "public final", "return": "void", "signature": "void addCacheManagerPeerProviderFactory(FactoryConfiguration factory)", "full_signature": "public final void addCacheManagerPeerProviderFactory(FactoryConfiguration factory)", "class_method_signature": "Configuration.addCacheManagerPeerProviderFactory(FactoryConfiguration factory)", "testcase": false, "constructor": false}, {"identifier": "cacheManagerPeerListenerFactory", "parameters": "(FactoryConfiguration factory)", "modifiers": "public final", "return": "Configuration", "signature": "Configuration cacheManagerPeerListenerFactory(FactoryConfiguration factory)", "full_signature": "public final Configuration cacheManagerPeerListenerFactory(FactoryConfiguration factory)", "class_method_signature": "Configuration.cacheManagerPeerListenerFactory(FactoryConfiguration factory)", "testcase": false, "constructor": false}, {"identifier": "addCacheManagerPeerListenerFactory", "parameters": "(FactoryConfiguration factory)", "modifiers": "public final", "return": "void", "signature": "void addCacheManagerPeerListenerFactory(FactoryConfiguration factory)", "full_signature": "public final void addCacheManagerPeerListenerFactory(FactoryConfiguration factory)", "class_method_signature": "Configuration.addCacheManagerPeerListenerFactory(FactoryConfiguration factory)", "testcase": false, "constructor": false}, {"identifier": "terracotta", "parameters": "(TerracottaClientConfiguration terracottaConfiguration)", "modifiers": "public final", "return": "Configuration", "signature": "Configuration terracotta(TerracottaClientConfiguration terracottaConfiguration)", "full_signature": "public final Configuration terracotta(TerracottaClientConfiguration terracottaConfiguration)", "class_method_signature": "Configuration.terracotta(TerracottaClientConfiguration terracottaConfiguration)", "testcase": false, "constructor": false}, {"identifier": "addTerracottaConfig", "parameters": "(TerracottaClientConfiguration terracottaConfiguration)", "modifiers": "public final", "return": "void", "signature": "void addTerracottaConfig(TerracottaClientConfiguration terracottaConfiguration)", "full_signature": "public final void addTerracottaConfig(TerracottaClientConfiguration terracottaConfiguration)", "class_method_signature": "Configuration.addTerracottaConfig(TerracottaClientConfiguration terracottaConfiguration)", "testcase": false, "constructor": false}, {"identifier": "managementRESTService", "parameters": "(ManagementRESTServiceConfiguration cfg)", "modifiers": "public final", "return": "Configuration", "signature": "Configuration managementRESTService(ManagementRESTServiceConfiguration cfg)", "full_signature": "public final Configuration managementRESTService(ManagementRESTServiceConfiguration cfg)", "class_method_signature": "Configuration.managementRESTService(ManagementRESTServiceConfiguration cfg)", "testcase": false, "constructor": false}, {"identifier": "addManagementRESTService", "parameters": "(ManagementRESTServiceConfiguration managementRESTServiceConfiguration)", "modifiers": "public final", "return": "void", "signature": "void addManagementRESTService(ManagementRESTServiceConfiguration managementRESTServiceConfiguration)", "full_signature": "public final void addManagementRESTService(ManagementRESTServiceConfiguration managementRESTServiceConfiguration)", "class_method_signature": "Configuration.addManagementRESTService(ManagementRESTServiceConfiguration managementRESTServiceConfiguration)", "testcase": false, "constructor": false}, {"identifier": "defaultCache", "parameters": "(CacheConfiguration defaultCacheConfiguration)", "modifiers": "public final", "return": "Configuration", "signature": "Configuration defaultCache(CacheConfiguration defaultCacheConfiguration)", "full_signature": "public final Configuration defaultCache(CacheConfiguration defaultCacheConfiguration)", "class_method_signature": "Configuration.defaultCache(CacheConfiguration defaultCacheConfiguration)", "testcase": false, "constructor": false}, {"identifier": "addDefaultCache", "parameters": "(CacheConfiguration defaultCacheConfiguration)", "modifiers": "public final", "return": "void", "signature": "void addDefaultCache(CacheConfiguration defaultCacheConfiguration)", "full_signature": "public final void addDefaultCache(CacheConfiguration defaultCacheConfiguration)", "class_method_signature": "Configuration.addDefaultCache(CacheConfiguration defaultCacheConfiguration)", "testcase": false, "constructor": false}, {"identifier": "cache", "parameters": "(CacheConfiguration cacheConfiguration)", "modifiers": "public final", "return": "Configuration", "signature": "Configuration cache(CacheConfiguration cacheConfiguration)", "full_signature": "public final Configuration cache(CacheConfiguration cacheConfiguration)", "class_method_signature": "Configuration.cache(CacheConfiguration cacheConfiguration)", "testcase": false, "constructor": false}, {"identifier": "addCache", "parameters": "(CacheConfiguration cacheConfiguration)", "modifiers": "public final", "return": "void", "signature": "void addCache(CacheConfiguration cacheConfiguration)", "full_signature": "public final void addCache(CacheConfiguration cacheConfiguration)", "class_method_signature": "Configuration.addCache(CacheConfiguration cacheConfiguration)", "testcase": false, "constructor": false}, {"identifier": "addCache", "parameters": "(CacheConfiguration cacheConfiguration, final boolean strict)", "modifiers": "", "return": "void", "signature": "void addCache(CacheConfiguration cacheConfiguration, final boolean strict)", "full_signature": " void addCache(CacheConfiguration cacheConfiguration, final boolean strict)", "class_method_signature": "Configuration.addCache(CacheConfiguration cacheConfiguration, final boolean strict)", "testcase": false, "constructor": false}, {"identifier": "checkDynChange", "parameters": "(final String prop)", "modifiers": "private", "return": "boolean", "signature": "boolean checkDynChange(final String prop)", "full_signature": "private boolean checkDynChange(final String prop)", "class_method_signature": "Configuration.checkDynChange(final String prop)", "testcase": false, "constructor": false}, {"identifier": "getCacheConfigurationsKeySet", "parameters": "()", "modifiers": "public final", "return": "Set<String>", "signature": "Set<String> getCacheConfigurationsKeySet()", "full_signature": "public final Set<String> getCacheConfigurationsKeySet()", "class_method_signature": "Configuration.getCacheConfigurationsKeySet()", "testcase": false, "constructor": false}, {"identifier": "getDefaultCacheConfiguration", "parameters": "()", "modifiers": "public final", "return": "CacheConfiguration", "signature": "CacheConfiguration getDefaultCacheConfiguration()", "full_signature": "public final CacheConfiguration getDefaultCacheConfiguration()", "class_method_signature": "Configuration.getDefaultCacheConfiguration()", "testcase": false, "constructor": false}, {"identifier": "setDefaultCacheConfiguration", "parameters": "(CacheConfiguration defaultCacheConfiguration)", "modifiers": "public final", "return": "void", "signature": "void setDefaultCacheConfiguration(CacheConfiguration defaultCacheConfiguration)", "full_signature": "public final void setDefaultCacheConfiguration(CacheConfiguration defaultCacheConfiguration)", "class_method_signature": "Configuration.setDefaultCacheConfiguration(CacheConfiguration defaultCacheConfiguration)", "testcase": false, "constructor": false}, {"identifier": "getDiskStoreConfiguration", "parameters": "()", "modifiers": "public final", "return": "DiskStoreConfiguration", "signature": "DiskStoreConfiguration getDiskStoreConfiguration()", "full_signature": "public final DiskStoreConfiguration getDiskStoreConfiguration()", "class_method_signature": "Configuration.getDiskStoreConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getSizeOfPolicyConfiguration", "parameters": "()", "modifiers": "public final", "return": "SizeOfPolicyConfiguration", "signature": "SizeOfPolicyConfiguration getSizeOfPolicyConfiguration()", "full_signature": "public final SizeOfPolicyConfiguration getSizeOfPolicyConfiguration()", "class_method_signature": "Configuration.getSizeOfPolicyConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getTransactionManagerLookupConfiguration", "parameters": "()", "modifiers": "public final", "return": "FactoryConfiguration", "signature": "FactoryConfiguration getTransactionManagerLookupConfiguration()", "full_signature": "public final FactoryConfiguration getTransactionManagerLookupConfiguration()", "class_method_signature": "Configuration.getTransactionManagerLookupConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getCacheManagerPeerProviderFactoryConfiguration", "parameters": "()", "modifiers": "public final", "return": "List<FactoryConfiguration>", "signature": "List<FactoryConfiguration> getCacheManagerPeerProviderFactoryConfiguration()", "full_signature": "public final List<FactoryConfiguration> getCacheManagerPeerProviderFactoryConfiguration()", "class_method_signature": "Configuration.getCacheManagerPeerProviderFactoryConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getCacheManagerPeerListenerFactoryConfigurations", "parameters": "()", "modifiers": "public final", "return": "List<FactoryConfiguration>", "signature": "List<FactoryConfiguration> getCacheManagerPeerListenerFactoryConfigurations()", "full_signature": "public final List<FactoryConfiguration> getCacheManagerPeerListenerFactoryConfigurations()", "class_method_signature": "Configuration.getCacheManagerPeerListenerFactoryConfigurations()", "testcase": false, "constructor": false}, {"identifier": "getManagementRESTService", "parameters": "()", "modifiers": "public final", "return": "ManagementRESTServiceConfiguration", "signature": "ManagementRESTServiceConfiguration getManagementRESTService()", "full_signature": "public final ManagementRESTServiceConfiguration getManagementRESTService()", "class_method_signature": "Configuration.getManagementRESTService()", "testcase": false, "constructor": false}, {"identifier": "getCacheManagerEventListenerFactoryConfiguration", "parameters": "()", "modifiers": "public final", "return": "FactoryConfiguration", "signature": "FactoryConfiguration getCacheManagerEventListenerFactoryConfiguration()", "full_signature": "public final FactoryConfiguration getCacheManagerEventListenerFactoryConfiguration()", "class_method_signature": "Configuration.getCacheManagerEventListenerFactoryConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getTerracottaConfiguration", "parameters": "()", "modifiers": "public final", "return": "TerracottaClientConfiguration", "signature": "TerracottaClientConfiguration getTerracottaConfiguration()", "full_signature": "public final TerracottaClientConfiguration getTerracottaConfiguration()", "class_method_signature": "Configuration.getTerracottaConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getCacheConfigurations", "parameters": "()", "modifiers": "public final", "return": "Map<String, CacheConfiguration>", "signature": "Map<String, CacheConfiguration> getCacheConfigurations()", "full_signature": "public final Map<String, CacheConfiguration> getCacheConfigurations()", "class_method_signature": "Configuration.getCacheConfigurations()", "testcase": false, "constructor": false}, {"identifier": "source", "parameters": "(ConfigurationSource configurationSource)", "modifiers": "public final", "return": "Configuration", "signature": "Configuration source(ConfigurationSource configurationSource)", "full_signature": "public final Configuration source(ConfigurationSource configurationSource)", "class_method_signature": "Configuration.source(ConfigurationSource configurationSource)", "testcase": false, "constructor": false}, {"identifier": "setSource", "parameters": "(ConfigurationSource configurationSource)", "modifiers": "public final", "return": "void", "signature": "void setSource(ConfigurationSource configurationSource)", "full_signature": "public final void setSource(ConfigurationSource configurationSource)", "class_method_signature": "Configuration.setSource(ConfigurationSource configurationSource)", "testcase": false, "constructor": false}, {"identifier": "getConfigurationSource", "parameters": "()", "modifiers": "public final", "return": "ConfigurationSource", "signature": "ConfigurationSource getConfigurationSource()", "full_signature": "public final ConfigurationSource getConfigurationSource()", "class_method_signature": "Configuration.getConfigurationSource()", "testcase": false, "constructor": false}, {"identifier": "addPropertyChangeListener", "parameters": "(final PropertyChangeListener listener)", "modifiers": "public", "return": "boolean", "signature": "boolean addPropertyChangeListener(final PropertyChangeListener listener)", "full_signature": "public boolean addPropertyChangeListener(final PropertyChangeListener listener)", "class_method_signature": "Configuration.addPropertyChangeListener(final PropertyChangeListener listener)", "testcase": false, "constructor": false}, {"identifier": "removePropertyChangeListener", "parameters": "(final PropertyChangeListener listener)", "modifiers": "public", "return": "boolean", "signature": "boolean removePropertyChangeListener(final PropertyChangeListener listener)", "full_signature": "public boolean removePropertyChangeListener(final PropertyChangeListener listener)", "class_method_signature": "Configuration.removePropertyChangeListener(final PropertyChangeListener listener)", "testcase": false, "constructor": false}, {"identifier": "firePropertyChange", "parameters": "(final String prop, final T oldValue, final T newValue)", "modifiers": "private", "return": "void", "signature": "void firePropertyChange(final String prop, final T oldValue, final T newValue)", "full_signature": "private void firePropertyChange(final String prop, final T oldValue, final T newValue)", "class_method_signature": "Configuration.firePropertyChange(final String prop, final T oldValue, final T newValue)", "testcase": false, "constructor": false}, {"identifier": "cleanup", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void cleanup()", "full_signature": "public void cleanup()", "class_method_signature": "Configuration.cleanup()", "testcase": false, "constructor": false}], "file": "tags/ehcache-2.7.7/ehcache-core/src/main/java/net/sf/ehcache/config/Configuration.java"}, "focal_method": {"identifier": "setupFor", "parameters": "(final CacheManager cacheManager, final String fallbackName)", "modifiers": "public", "return": "RuntimeCfg", "body": "public RuntimeCfg setupFor(final CacheManager cacheManager, final String fallbackName) throws InvalidConfigurationException {\n        if (cfg != null) {\n            return cfg;\n        }\n        final Collection<ConfigError> errors = validate();\n        if (!errors.isEmpty()) {\n            throw new InvalidConfigurationException(errors);\n        }\n        cfg = new Configuration.RuntimeCfg(cacheManager, fallbackName);\n        return cfg;\n    }", "signature": "RuntimeCfg setupFor(final CacheManager cacheManager, final String fallbackName)", "full_signature": "public RuntimeCfg setupFor(final CacheManager cacheManager, final String fallbackName)", "class_method_signature": "Configuration.setupFor(final CacheManager cacheManager, final String fallbackName)", "testcase": false, "constructor": false, "invocations": ["validate", "isEmpty"]}, "repository": {"repo_id": 10597460, "url": "https://github.com/svn2github/ehcache", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 12, "size": 128373, "license": "licensed"}}