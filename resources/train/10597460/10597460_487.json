{"test_class": {"identifier": "ManagementServiceTest", "superclass": "extends AbstractCacheTest", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ManagementServiceTest.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ManagementServiceTest.class.getName())", "var_name": "LOG"}, {"original_string": "private static final int OBJECTS_IN_TEST_EHCACHE = 46;", "modifier": "private static final", "type": "int", "declarator": "OBJECTS_IN_TEST_EHCACHE = 46", "var_name": "OBJECTS_IN_TEST_EHCACHE"}, {"original_string": "private MBeanServer mBeanServer;", "modifier": "private", "type": "MBeanServer", "declarator": "mBeanServer", "var_name": "mBeanServer"}], "file": "tags/ehcache-core-2.4.4/src/test/java/net/sf/ehcache/management/ManagementServiceTest.java"}, "test_case": {"identifier": "testRegistrationServiceTwoTrue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRegistrationServiceTwoTrue() throws Exception {\n        ManagementService.registerMBeans(manager, mBeanServer, true, true, false, false, false);\n        assertEquals(16, mBeanServer.queryNames(new ObjectName(\"net.sf.ehcache:*\"), null).size());\n\n    }", "signature": "void testRegistrationServiceTwoTrue()", "full_signature": "@Test public void testRegistrationServiceTwoTrue()", "class_method_signature": "ManagementServiceTest.testRegistrationServiceTwoTrue()", "testcase": true, "constructor": false, "invocations": ["registerMBeans", "assertEquals", "size", "queryNames"]}, "focal_class": {"identifier": "ManagementService", "superclass": "", "interfaces": "implements CacheManagerEventListener", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ManagementService.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ManagementService.class.getName())", "var_name": "LOG"}, {"original_string": "private MBeanServer mBeanServer;", "modifier": "private", "type": "MBeanServer", "declarator": "mBeanServer", "var_name": "mBeanServer"}, {"original_string": "private net.sf.ehcache.CacheManager backingCacheManager;", "modifier": "private", "type": "net.sf.ehcache.CacheManager", "declarator": "backingCacheManager", "var_name": "backingCacheManager"}, {"original_string": "private boolean registerCacheManager;", "modifier": "private", "type": "boolean", "declarator": "registerCacheManager", "var_name": "registerCacheManager"}, {"original_string": "private boolean registerCaches;", "modifier": "private", "type": "boolean", "declarator": "registerCaches", "var_name": "registerCaches"}, {"original_string": "private boolean registerCacheConfigurations;", "modifier": "private", "type": "boolean", "declarator": "registerCacheConfigurations", "var_name": "registerCacheConfigurations"}, {"original_string": "private boolean registerCacheStatistics;", "modifier": "private", "type": "boolean", "declarator": "registerCacheStatistics", "var_name": "registerCacheStatistics"}, {"original_string": "private boolean registerCacheStores;", "modifier": "private", "type": "boolean", "declarator": "registerCacheStores", "var_name": "registerCacheStores"}, {"original_string": "private Status status;", "modifier": "private", "type": "Status", "declarator": "status", "var_name": "status"}], "methods": [{"identifier": "ManagementService", "parameters": "(net.sf.ehcache.CacheManager cacheManager,\n                             MBeanServer mBeanServer,\n                             boolean registerCacheManager,\n                             boolean registerCaches,\n                             boolean registerCacheConfigurations,\n                             boolean registerCacheStatistics,\n                             boolean registerCacheStores)", "modifiers": "public", "return": "", "signature": " ManagementService(net.sf.ehcache.CacheManager cacheManager,\n                             MBeanServer mBeanServer,\n                             boolean registerCacheManager,\n                             boolean registerCaches,\n                             boolean registerCacheConfigurations,\n                             boolean registerCacheStatistics,\n                             boolean registerCacheStores)", "full_signature": "public  ManagementService(net.sf.ehcache.CacheManager cacheManager,\n                             MBeanServer mBeanServer,\n                             boolean registerCacheManager,\n                             boolean registerCaches,\n                             boolean registerCacheConfigurations,\n                             boolean registerCacheStatistics,\n                             boolean registerCacheStores)", "class_method_signature": "ManagementService.ManagementService(net.sf.ehcache.CacheManager cacheManager,\n                             MBeanServer mBeanServer,\n                             boolean registerCacheManager,\n                             boolean registerCaches,\n                             boolean registerCacheConfigurations,\n                             boolean registerCacheStatistics,\n                             boolean registerCacheStores)", "testcase": false, "constructor": true}, {"identifier": "ManagementService", "parameters": "(net.sf.ehcache.CacheManager cacheManager,\n                                 MBeanServer mBeanServer,\n                                 boolean registerCacheManager,\n                                 boolean registerCaches,\n                                 boolean registerCacheConfigurations,\n                                 boolean registerCacheStatistics)", "modifiers": "public", "return": "", "signature": " ManagementService(net.sf.ehcache.CacheManager cacheManager,\n                                 MBeanServer mBeanServer,\n                                 boolean registerCacheManager,\n                                 boolean registerCaches,\n                                 boolean registerCacheConfigurations,\n                                 boolean registerCacheStatistics)", "full_signature": "public  ManagementService(net.sf.ehcache.CacheManager cacheManager,\n                                 MBeanServer mBeanServer,\n                                 boolean registerCacheManager,\n                                 boolean registerCaches,\n                                 boolean registerCacheConfigurations,\n                                 boolean registerCacheStatistics)", "class_method_signature": "ManagementService.ManagementService(net.sf.ehcache.CacheManager cacheManager,\n                                 MBeanServer mBeanServer,\n                                 boolean registerCacheManager,\n                                 boolean registerCaches,\n                                 boolean registerCacheConfigurations,\n                                 boolean registerCacheStatistics)", "testcase": false, "constructor": true}, {"identifier": "registerMBeans", "parameters": "(\n            net.sf.ehcache.CacheManager cacheManager,\n            MBeanServer mBeanServer,\n            boolean registerCacheManager,\n            boolean registerCaches,\n            boolean registerCacheConfigurations,\n            boolean registerCacheStatistics,\n            boolean registerCacheStores)", "modifiers": "public static", "return": "void", "signature": "void registerMBeans(\n            net.sf.ehcache.CacheManager cacheManager,\n            MBeanServer mBeanServer,\n            boolean registerCacheManager,\n            boolean registerCaches,\n            boolean registerCacheConfigurations,\n            boolean registerCacheStatistics,\n            boolean registerCacheStores)", "full_signature": "public static void registerMBeans(\n            net.sf.ehcache.CacheManager cacheManager,\n            MBeanServer mBeanServer,\n            boolean registerCacheManager,\n            boolean registerCaches,\n            boolean registerCacheConfigurations,\n            boolean registerCacheStatistics,\n            boolean registerCacheStores)", "class_method_signature": "ManagementService.registerMBeans(\n            net.sf.ehcache.CacheManager cacheManager,\n            MBeanServer mBeanServer,\n            boolean registerCacheManager,\n            boolean registerCaches,\n            boolean registerCacheConfigurations,\n            boolean registerCacheStatistics,\n            boolean registerCacheStores)", "testcase": false, "constructor": false}, {"identifier": "registerMBeans", "parameters": "(\n            net.sf.ehcache.CacheManager cacheManager,\n            MBeanServer mBeanServer,\n            boolean registerCacheManager,\n            boolean registerCaches,\n            boolean registerCacheConfigurations,\n            boolean registerCacheStatistics)", "modifiers": "public static", "return": "void", "signature": "void registerMBeans(\n            net.sf.ehcache.CacheManager cacheManager,\n            MBeanServer mBeanServer,\n            boolean registerCacheManager,\n            boolean registerCaches,\n            boolean registerCacheConfigurations,\n            boolean registerCacheStatistics)", "full_signature": "public static void registerMBeans(\n            net.sf.ehcache.CacheManager cacheManager,\n            MBeanServer mBeanServer,\n            boolean registerCacheManager,\n            boolean registerCaches,\n            boolean registerCacheConfigurations,\n            boolean registerCacheStatistics)", "class_method_signature": "ManagementService.registerMBeans(\n            net.sf.ehcache.CacheManager cacheManager,\n            MBeanServer mBeanServer,\n            boolean registerCacheManager,\n            boolean registerCaches,\n            boolean registerCacheConfigurations,\n            boolean registerCacheStatistics)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void init()", "full_signature": "public void init()", "class_method_signature": "ManagementService.init()", "testcase": false, "constructor": false}, {"identifier": "registerPeerProviders", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void registerPeerProviders()", "full_signature": "private void registerPeerProviders()", "class_method_signature": "ManagementService.registerPeerProviders()", "testcase": false, "constructor": false}, {"identifier": "registerCacheManager", "parameters": "(CacheManager cacheManager)", "modifiers": "private", "return": "void", "signature": "void registerCacheManager(CacheManager cacheManager)", "full_signature": "private void registerCacheManager(CacheManager cacheManager)", "class_method_signature": "ManagementService.registerCacheManager(CacheManager cacheManager)", "testcase": false, "constructor": false}, {"identifier": "registerCacheConfigurationIfRequired", "parameters": "(Cache cache)", "modifiers": "private", "return": "void", "signature": "void registerCacheConfigurationIfRequired(Cache cache)", "full_signature": "private void registerCacheConfigurationIfRequired(Cache cache)", "class_method_signature": "ManagementService.registerCacheConfigurationIfRequired(Cache cache)", "testcase": false, "constructor": false}, {"identifier": "registerCacheStatisticsIfRequired", "parameters": "(Cache cache)", "modifiers": "private", "return": "void", "signature": "void registerCacheStatisticsIfRequired(Cache cache)", "full_signature": "private void registerCacheStatisticsIfRequired(Cache cache)", "class_method_signature": "ManagementService.registerCacheStatisticsIfRequired(Cache cache)", "testcase": false, "constructor": false}, {"identifier": "registerCachesIfRequired", "parameters": "(Cache cache)", "modifiers": "private", "return": "void", "signature": "void registerCachesIfRequired(Cache cache)", "full_signature": "private void registerCachesIfRequired(Cache cache)", "class_method_signature": "ManagementService.registerCachesIfRequired(Cache cache)", "testcase": false, "constructor": false}, {"identifier": "registerCacheStoreIfRequired", "parameters": "(Cache cache)", "modifiers": "private", "return": "void", "signature": "void registerCacheStoreIfRequired(Cache cache)", "full_signature": "private void registerCacheStoreIfRequired(Cache cache)", "class_method_signature": "ManagementService.registerCacheStoreIfRequired(Cache cache)", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "()", "modifiers": "public", "return": "Status", "signature": "Status getStatus()", "full_signature": "public Status getStatus()", "class_method_signature": "ManagementService.getStatus()", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void dispose()", "full_signature": "public void dispose()", "class_method_signature": "ManagementService.dispose()", "testcase": false, "constructor": false}, {"identifier": "notifyCacheAdded", "parameters": "(String cacheName)", "modifiers": "public", "return": "void", "signature": "void notifyCacheAdded(String cacheName)", "full_signature": "public void notifyCacheAdded(String cacheName)", "class_method_signature": "ManagementService.notifyCacheAdded(String cacheName)", "testcase": false, "constructor": false}, {"identifier": "notifyCacheRemoved", "parameters": "(String cacheName)", "modifiers": "public", "return": "void", "signature": "void notifyCacheRemoved(String cacheName)", "full_signature": "public void notifyCacheRemoved(String cacheName)", "class_method_signature": "ManagementService.notifyCacheRemoved(String cacheName)", "testcase": false, "constructor": false}], "file": "tags/ehcache-core-2.4.4/src/main/java/net/sf/ehcache/management/ManagementService.java"}, "focal_method": {"identifier": "registerMBeans", "parameters": "(\n            net.sf.ehcache.CacheManager cacheManager,\n            MBeanServer mBeanServer,\n            boolean registerCacheManager,\n            boolean registerCaches,\n            boolean registerCacheConfigurations,\n            boolean registerCacheStatistics,\n            boolean registerCacheStores)", "modifiers": "public static", "return": "void", "body": "public static void registerMBeans(\n            net.sf.ehcache.CacheManager cacheManager,\n            MBeanServer mBeanServer,\n            boolean registerCacheManager,\n            boolean registerCaches,\n            boolean registerCacheConfigurations,\n            boolean registerCacheStatistics,\n            boolean registerCacheStores) throws CacheException {\n\n        ManagementService registry = new ManagementService(cacheManager,\n                mBeanServer,\n                registerCacheManager,\n                registerCaches,\n                registerCacheConfigurations,\n                registerCacheStatistics,\n                registerCacheStores);\n\n        registry.init();\n    }", "signature": "void registerMBeans(\n            net.sf.ehcache.CacheManager cacheManager,\n            MBeanServer mBeanServer,\n            boolean registerCacheManager,\n            boolean registerCaches,\n            boolean registerCacheConfigurations,\n            boolean registerCacheStatistics,\n            boolean registerCacheStores)", "full_signature": "public static void registerMBeans(\n            net.sf.ehcache.CacheManager cacheManager,\n            MBeanServer mBeanServer,\n            boolean registerCacheManager,\n            boolean registerCaches,\n            boolean registerCacheConfigurations,\n            boolean registerCacheStatistics,\n            boolean registerCacheStores)", "class_method_signature": "ManagementService.registerMBeans(\n            net.sf.ehcache.CacheManager cacheManager,\n            MBeanServer mBeanServer,\n            boolean registerCacheManager,\n            boolean registerCaches,\n            boolean registerCacheConfigurations,\n            boolean registerCacheStatistics,\n            boolean registerCacheStores)", "testcase": false, "constructor": false, "invocations": ["init"]}, "repository": {"repo_id": 10597460, "url": "https://github.com/svn2github/ehcache", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 12, "size": 128373, "license": "licensed"}}