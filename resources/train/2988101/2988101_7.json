{"test_class": {"identifier": "TestUserManagerResolver", "superclass": "extends UserManagerTestCase", "interfaces": "", "fields": [{"original_string": "private static final String USER_XPATH = \"umr:user\";", "modifier": "private static final", "type": "String", "declarator": "USER_XPATH = \"umr:user\"", "var_name": "USER_XPATH"}, {"original_string": "private static final String GROUP_XPATH = \"umr:group\";", "modifier": "private static final", "type": "String", "declarator": "GROUP_XPATH = \"umr:group\"", "var_name": "GROUP_XPATH"}, {"original_string": "private static final String USER_GROUP_XPATH = \"umr:userOrGroup\";", "modifier": "private static final", "type": "String", "declarator": "USER_GROUP_XPATH = \"umr:userOrGroup\"", "var_name": "USER_GROUP_XPATH"}, {"original_string": "@Inject\n    protected CoreSession session;", "modifier": "@Inject\n    protected", "type": "CoreSession", "declarator": "session", "var_name": "session"}, {"original_string": "@Inject\n    protected DocumentValidationService validator;", "modifier": "@Inject\n    protected", "type": "DocumentValidationService", "declarator": "validator", "var_name": "validator"}, {"original_string": "protected DocumentModel doc;", "modifier": "protected", "type": "DocumentModel", "declarator": "doc", "var_name": "doc"}], "file": "modules/platform/nuxeo-platform-usermanager-core/src/test/java/org/nuxeo/ecm/platform/usermanager/TestUserManagerResolver.java"}, "test_case": {"identifier": "testValidateGoodUserWithDefaultConf", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidateGoodUserWithDefaultConf() {\n        UserManagerResolver umr = new UserManagerResolver();\n        umr.configure(new HashMap<>());\n        assertTrue(umr.validate(\"user:Administrator\"));\n    }", "signature": "void testValidateGoodUserWithDefaultConf()", "full_signature": "@Test public void testValidateGoodUserWithDefaultConf()", "class_method_signature": "TestUserManagerResolver.testValidateGoodUserWithDefaultConf()", "testcase": true, "constructor": false, "invocations": ["configure", "assertTrue", "validate"]}, "focal_class": {"identifier": "UserManagerResolver", "superclass": "extends AbstractObjectResolver", "interfaces": "implements ObjectResolver", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "public static final String INPUT_PARAM_FILTER = \"type\";", "modifier": "public static final", "type": "String", "declarator": "INPUT_PARAM_FILTER = \"type\"", "var_name": "INPUT_PARAM_FILTER"}, {"original_string": "public static final String FILTER_GROUP = \"group\";", "modifier": "public static final", "type": "String", "declarator": "FILTER_GROUP = \"group\"", "var_name": "FILTER_GROUP"}, {"original_string": "public static final String FILTER_USER = \"user\";", "modifier": "public static final", "type": "String", "declarator": "FILTER_USER = \"user\"", "var_name": "FILTER_USER"}, {"original_string": "public static final String NAME = \"userManagerResolver\";", "modifier": "public static final", "type": "String", "declarator": "NAME = \"userManagerResolver\"", "var_name": "NAME"}, {"original_string": "public static final String PARAM_INCLUDE_USERS = \"includeUsers\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_INCLUDE_USERS = \"includeUsers\"", "var_name": "PARAM_INCLUDE_USERS"}, {"original_string": "public static final String PARAM_INCLUDE_GROUPS = \"includeGroups\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_INCLUDE_GROUPS = \"includeGroups\"", "var_name": "PARAM_INCLUDE_GROUPS"}, {"original_string": "private boolean includingUsers = true;", "modifier": "private", "type": "boolean", "declarator": "includingUsers = true", "var_name": "includingUsers"}, {"original_string": "private boolean includingGroups = true;", "modifier": "private", "type": "boolean", "declarator": "includingGroups = true", "var_name": "includingGroups"}, {"original_string": "private transient UserManager userManager;", "modifier": "private transient", "type": "UserManager", "declarator": "userManager", "var_name": "userManager"}, {"original_string": "private List<Class<?>> managedClasses = null;", "modifier": "private", "type": "List<Class<?>>", "declarator": "managedClasses = null", "var_name": "managedClasses"}], "methods": [{"identifier": "getUserManager", "parameters": "()", "modifiers": "public", "return": "UserManager", "signature": "UserManager getUserManager()", "full_signature": "public UserManager getUserManager()", "class_method_signature": "UserManagerResolver.getUserManager()", "testcase": false, "constructor": false}, {"identifier": "getManagedClasses", "parameters": "()", "modifiers": "@Override public", "return": "List<Class<?>>", "signature": "List<Class<?>> getManagedClasses()", "full_signature": "@Override public List<Class<?>> getManagedClasses()", "class_method_signature": "UserManagerResolver.getManagedClasses()", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(Map<String, String> parameters)", "modifiers": "@Override public", "return": "void", "signature": "void configure(Map<String, String> parameters)", "full_signature": "@Override public void configure(Map<String, String> parameters)", "class_method_signature": "UserManagerResolver.configure(Map<String, String> parameters)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "UserManagerResolver.getName()", "testcase": false, "constructor": false}, {"identifier": "fetch", "parameters": "(Object value)", "modifiers": "@Override public", "return": "Object", "signature": "Object fetch(Object value)", "full_signature": "@Override public Object fetch(Object value)", "class_method_signature": "UserManagerResolver.fetch(Object value)", "testcase": false, "constructor": false}, {"identifier": "fetch", "parameters": "(Class<T> type, Object value)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "T", "signature": "T fetch(Class<T> type, Object value)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public T fetch(Class<T> type, Object value)", "class_method_signature": "UserManagerResolver.fetch(Class<T> type, Object value)", "testcase": false, "constructor": false}, {"identifier": "getReference", "parameters": "(Object entity)", "modifiers": "@Override public", "return": "Serializable", "signature": "Serializable getReference(Object entity)", "full_signature": "@Override public Serializable getReference(Object entity)", "class_method_signature": "UserManagerResolver.getReference(Object entity)", "testcase": false, "constructor": false}, {"identifier": "getConstraintErrorMessage", "parameters": "(Object invalidValue, Locale locale)", "modifiers": "@Override public", "return": "String", "signature": "String getConstraintErrorMessage(Object invalidValue, Locale locale)", "full_signature": "@Override public String getConstraintErrorMessage(Object invalidValue, Locale locale)", "class_method_signature": "UserManagerResolver.getConstraintErrorMessage(Object invalidValue, Locale locale)", "testcase": false, "constructor": false}, {"identifier": "isIncludingUsers", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isIncludingUsers()", "full_signature": "public boolean isIncludingUsers()", "class_method_signature": "UserManagerResolver.isIncludingUsers()", "testcase": false, "constructor": false}, {"identifier": "isIncludingGroups", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isIncludingGroups()", "full_signature": "public boolean isIncludingGroups()", "class_method_signature": "UserManagerResolver.isIncludingGroups()", "testcase": false, "constructor": false}], "file": "modules/platform/nuxeo-platform-usermanager-core/src/main/java/org/nuxeo/ecm/platform/usermanager/UserManagerResolver.java"}, "focal_method": {"identifier": "configure", "parameters": "(Map<String, String> parameters)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void configure(Map<String, String> parameters) throws IllegalStateException {\n        super.configure(parameters);\n        if (FILTER_USER.equals(parameters.get(INPUT_PARAM_FILTER))) {\n            includingGroups = false;\n        } else if (FILTER_GROUP.equals(parameters.get(INPUT_PARAM_FILTER))) {\n            includingUsers = false;\n        }\n        this.parameters.put(PARAM_INCLUDE_GROUPS, includingGroups);\n        this.parameters.put(PARAM_INCLUDE_USERS, includingUsers);\n    }", "signature": "void configure(Map<String, String> parameters)", "full_signature": "@Override public void configure(Map<String, String> parameters)", "class_method_signature": "UserManagerResolver.configure(Map<String, String> parameters)", "testcase": false, "constructor": false, "invocations": ["configure", "equals", "get", "equals", "get", "put", "put"]}, "repository": {"repo_id": 2988101, "url": "https://github.com/nuxeo/nuxeo", "stars": 339, "created": "12/15/2011 2:35:41 PM +00:00", "updates": "2020-01-27T16:52:27+00:00", "fork": "False", "license": "licensed"}}