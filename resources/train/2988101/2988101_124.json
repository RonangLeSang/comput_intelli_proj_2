{"test_class": {"identifier": "TestJSONPropertyWriter", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String SCHEMA_NAME = \"schema\";", "modifier": "public static final", "type": "String", "declarator": "SCHEMA_NAME = \"schema\"", "var_name": "SCHEMA_NAME"}, {"original_string": "public static final SchemaImpl SCHEMA = new SchemaImpl(SCHEMA_NAME, new Namespace(\"\", \"\"));", "modifier": "public static final", "type": "SchemaImpl", "declarator": "SCHEMA = new SchemaImpl(SCHEMA_NAME, new Namespace(\"\", \"\"))", "var_name": "SCHEMA"}], "file": "modules/platform/nuxeo-automation/nuxeo-automation-core/src/test/java/org/nuxeo/ecm/automation/core/util/TestJSONPropertyWriter.java"}, "test_case": {"identifier": "testWritePropertyWithDatePropertyDate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWritePropertyWithDatePropertyDate() throws IOException {\n        Date value = new Date();\n        value.setTime(0L);\n        testWriteProperty(JSONPropertyWriter.create(), DateType.INSTANCE, value,\n                \"{\\\"property\\\":\\\"1970-01-01T00:00:00.000Z\\\"}\");\n    }", "signature": "void testWritePropertyWithDatePropertyDate()", "full_signature": "@Test public void testWritePropertyWithDatePropertyDate()", "class_method_signature": "TestJSONPropertyWriter.testWritePropertyWithDatePropertyDate()", "testcase": true, "constructor": false, "invocations": ["setTime", "testWriteProperty", "create"]}, "focal_class": {"identifier": "JSONPropertyWriter", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected DateTimeFormat dateTimeFormat = DateTimeFormat.W3C;", "modifier": "protected", "type": "DateTimeFormat", "declarator": "dateTimeFormat = DateTimeFormat.W3C", "var_name": "dateTimeFormat"}, {"original_string": "protected String filesBaseUrl;", "modifier": "protected", "type": "String", "declarator": "filesBaseUrl", "var_name": "filesBaseUrl"}, {"original_string": "protected String prefix;", "modifier": "protected", "type": "String", "declarator": "prefix", "var_name": "prefix"}, {"original_string": "protected boolean writeNull = true;", "modifier": "protected", "type": "boolean", "declarator": "writeNull = true", "var_name": "writeNull"}, {"original_string": "protected boolean writeEmpty = true;", "modifier": "protected", "type": "boolean", "declarator": "writeEmpty = true", "var_name": "writeEmpty"}], "methods": [{"identifier": "JSONPropertyWriter", "parameters": "()", "modifiers": "protected", "return": "", "signature": " JSONPropertyWriter()", "full_signature": "protected  JSONPropertyWriter()", "class_method_signature": "JSONPropertyWriter.JSONPropertyWriter()", "testcase": false, "constructor": true}, {"identifier": "JSONPropertyWriter", "parameters": "(JSONPropertyWriter writer)", "modifiers": "protected", "return": "", "signature": " JSONPropertyWriter(JSONPropertyWriter writer)", "full_signature": "protected  JSONPropertyWriter(JSONPropertyWriter writer)", "class_method_signature": "JSONPropertyWriter.JSONPropertyWriter(JSONPropertyWriter writer)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "()", "modifiers": "public static", "return": "JSONPropertyWriter", "signature": "JSONPropertyWriter create()", "full_signature": "public static JSONPropertyWriter create()", "class_method_signature": "JSONPropertyWriter.create()", "testcase": false, "constructor": false}, {"identifier": "dateTimeFormat", "parameters": "(DateTimeFormat dateTimeFormat)", "modifiers": "public", "return": "JSONPropertyWriter", "signature": "JSONPropertyWriter dateTimeFormat(DateTimeFormat dateTimeFormat)", "full_signature": "public JSONPropertyWriter dateTimeFormat(DateTimeFormat dateTimeFormat)", "class_method_signature": "JSONPropertyWriter.dateTimeFormat(DateTimeFormat dateTimeFormat)", "testcase": false, "constructor": false}, {"identifier": "filesBaseUrl", "parameters": "(String filesBaseUrl)", "modifiers": "public", "return": "JSONPropertyWriter", "signature": "JSONPropertyWriter filesBaseUrl(String filesBaseUrl)", "full_signature": "public JSONPropertyWriter filesBaseUrl(String filesBaseUrl)", "class_method_signature": "JSONPropertyWriter.filesBaseUrl(String filesBaseUrl)", "testcase": false, "constructor": false}, {"identifier": "prefix", "parameters": "(String prefix)", "modifiers": "public", "return": "JSONPropertyWriter", "signature": "JSONPropertyWriter prefix(String prefix)", "full_signature": "public JSONPropertyWriter prefix(String prefix)", "class_method_signature": "JSONPropertyWriter.prefix(String prefix)", "testcase": false, "constructor": false}, {"identifier": "writeNull", "parameters": "(boolean writeNull)", "modifiers": "public", "return": "JSONPropertyWriter", "signature": "JSONPropertyWriter writeNull(boolean writeNull)", "full_signature": "public JSONPropertyWriter writeNull(boolean writeNull)", "class_method_signature": "JSONPropertyWriter.writeNull(boolean writeNull)", "testcase": false, "constructor": false}, {"identifier": "writeEmpty", "parameters": "(boolean writeEmpty)", "modifiers": "public", "return": "JSONPropertyWriter", "signature": "JSONPropertyWriter writeEmpty(boolean writeEmpty)", "full_signature": "public JSONPropertyWriter writeEmpty(boolean writeEmpty)", "class_method_signature": "JSONPropertyWriter.writeEmpty(boolean writeEmpty)", "testcase": false, "constructor": false}, {"identifier": "writeProperty", "parameters": "(JsonGenerator jg, Property prop)", "modifiers": "public", "return": "void", "signature": "void writeProperty(JsonGenerator jg, Property prop)", "full_signature": "public void writeProperty(JsonGenerator jg, Property prop)", "class_method_signature": "JSONPropertyWriter.writeProperty(JsonGenerator jg, Property prop)", "testcase": false, "constructor": false}, {"identifier": "writeProperty", "parameters": "(JsonGenerator jg, Property prop, PropertyConsumer fieldNameWriter)", "modifiers": "protected", "return": "void", "signature": "void writeProperty(JsonGenerator jg, Property prop, PropertyConsumer fieldNameWriter)", "full_signature": "protected void writeProperty(JsonGenerator jg, Property prop, PropertyConsumer fieldNameWriter)", "class_method_signature": "JSONPropertyWriter.writeProperty(JsonGenerator jg, Property prop, PropertyConsumer fieldNameWriter)", "testcase": false, "constructor": false}, {"identifier": "writeScalarProperty", "parameters": "(JsonGenerator jg, Property prop, PropertyConsumer fieldNameWriter)", "modifiers": "protected", "return": "void", "signature": "void writeScalarProperty(JsonGenerator jg, Property prop, PropertyConsumer fieldNameWriter)", "full_signature": "protected void writeScalarProperty(JsonGenerator jg, Property prop, PropertyConsumer fieldNameWriter)", "class_method_signature": "JSONPropertyWriter.writeScalarProperty(JsonGenerator jg, Property prop, PropertyConsumer fieldNameWriter)", "testcase": false, "constructor": false}, {"identifier": "writeListProperty", "parameters": "(JsonGenerator jg, Property prop, PropertyConsumer fieldNameWriter)", "modifiers": "protected", "return": "void", "signature": "void writeListProperty(JsonGenerator jg, Property prop, PropertyConsumer fieldNameWriter)", "full_signature": "protected void writeListProperty(JsonGenerator jg, Property prop, PropertyConsumer fieldNameWriter)", "class_method_signature": "JSONPropertyWriter.writeListProperty(JsonGenerator jg, Property prop, PropertyConsumer fieldNameWriter)", "testcase": false, "constructor": false}, {"identifier": "writeMapProperty", "parameters": "(JsonGenerator jg, ComplexProperty prop, PropertyConsumer fieldNameWriter)", "modifiers": "protected", "return": "void", "signature": "void writeMapProperty(JsonGenerator jg, ComplexProperty prop, PropertyConsumer fieldNameWriter)", "full_signature": "protected void writeMapProperty(JsonGenerator jg, ComplexProperty prop, PropertyConsumer fieldNameWriter)", "class_method_signature": "JSONPropertyWriter.writeMapProperty(JsonGenerator jg, ComplexProperty prop, PropertyConsumer fieldNameWriter)", "testcase": false, "constructor": false}, {"identifier": "writeBlobProperty", "parameters": "(JsonGenerator jg, Property prop, PropertyConsumer fieldNameWriter)", "modifiers": "protected", "return": "void", "signature": "void writeBlobProperty(JsonGenerator jg, Property prop, PropertyConsumer fieldNameWriter)", "full_signature": "protected void writeBlobProperty(JsonGenerator jg, Property prop, PropertyConsumer fieldNameWriter)", "class_method_signature": "JSONPropertyWriter.writeBlobProperty(JsonGenerator jg, Property prop, PropertyConsumer fieldNameWriter)", "testcase": false, "constructor": false}, {"identifier": "getBlobUrl", "parameters": "(Property prop, String filesBaseUrl)", "modifiers": "private static", "return": "String", "signature": "String getBlobUrl(Property prop, String filesBaseUrl)", "full_signature": "private static String getBlobUrl(Property prop, String filesBaseUrl)", "class_method_signature": "JSONPropertyWriter.getBlobUrl(Property prop, String filesBaseUrl)", "testcase": false, "constructor": false}, {"identifier": "writePropertyValue", "parameters": "(JsonGenerator jg, Property prop, DateTimeFormat dateTimeFormat,\n            String filesBaseUrl)", "modifiers": "public static", "return": "void", "signature": "void writePropertyValue(JsonGenerator jg, Property prop, DateTimeFormat dateTimeFormat,\n            String filesBaseUrl)", "full_signature": "public static void writePropertyValue(JsonGenerator jg, Property prop, DateTimeFormat dateTimeFormat,\n            String filesBaseUrl)", "class_method_signature": "JSONPropertyWriter.writePropertyValue(JsonGenerator jg, Property prop, DateTimeFormat dateTimeFormat,\n            String filesBaseUrl)", "testcase": false, "constructor": false}], "file": "modules/platform/nuxeo-automation/nuxeo-automation-core/src/main/java/org/nuxeo/ecm/automation/core/util/JSONPropertyWriter.java"}, "focal_method": {"identifier": "create", "parameters": "()", "modifiers": "public static", "return": "JSONPropertyWriter", "body": "public static JSONPropertyWriter create() {\n        return new JSONPropertyWriter();\n    }", "signature": "JSONPropertyWriter create()", "full_signature": "public static JSONPropertyWriter create()", "class_method_signature": "JSONPropertyWriter.create()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2988101, "url": "https://github.com/nuxeo/nuxeo", "stars": 339, "created": "12/15/2011 2:35:41 PM +00:00", "updates": "2020-01-27T16:52:27+00:00", "fork": "False", "license": "licensed"}}