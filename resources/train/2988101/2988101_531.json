{"test_class": {"identifier": "TestTypeConstraint", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Number NUMBER = new Number() {\n        private static final long serialVersionUID = 1L;\n\n        @Override\n        public long longValue() {\n            return 12l;\n        }\n\n        @Override\n        public int intValue() {\n            return 12;\n        }\n\n        @Override\n        public float floatValue() {\n            return 12.7f;\n        }\n\n        @Override\n        public double doubleValue() {\n            return 12.7;\n        }\n    };", "modifier": "private static final", "type": "Number", "declarator": "NUMBER = new Number() {\n        private static final long serialVersionUID = 1L;\n\n        @Override\n        public long longValue() {\n            return 12l;\n        }\n\n        @Override\n        public int intValue() {\n            return 12;\n        }\n\n        @Override\n        public float floatValue() {\n            return 12.7f;\n        }\n\n        @Override\n        public double doubleValue() {\n            return 12.7;\n        }\n    }", "var_name": "NUMBER"}, {"original_string": "private static final List<?> ANY_OBJECT = Collections.EMPTY_LIST;", "modifier": "private static final", "type": "List<?>", "declarator": "ANY_OBJECT = Collections.EMPTY_LIST", "var_name": "ANY_OBJECT"}], "file": "modules/core/nuxeo-core-schema/src/test/java/org/nuxeo/ecm/core/schema/types/constraints/TestTypeConstraint.java"}, "test_case": {"identifier": "testBooleanAcceptBoolanObject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBooleanAcceptBoolanObject() {\n        assertTrue(new TypeConstraint(BooleanType.INSTANCE).validate(Boolean.FALSE));\n    }", "signature": "void testBooleanAcceptBoolanObject()", "full_signature": "@Test public void testBooleanAcceptBoolanObject()", "class_method_signature": "TestTypeConstraint.testBooleanAcceptBoolanObject()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "validate"]}, "focal_class": {"identifier": "TypeConstraint", "superclass": "extends AbstractConstraint", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "protected final PrimitiveType type;", "modifier": "protected final", "type": "PrimitiveType", "declarator": "type", "var_name": "type"}], "methods": [{"identifier": "TypeConstraint", "parameters": "(PrimitiveType type)", "modifiers": "public", "return": "", "signature": " TypeConstraint(PrimitiveType type)", "full_signature": "public  TypeConstraint(PrimitiveType type)", "class_method_signature": "TypeConstraint.TypeConstraint(PrimitiveType type)", "testcase": false, "constructor": true}, {"identifier": "validate", "parameters": "(Object object)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean validate(Object object)", "full_signature": "@Override public boolean validate(Object object)", "class_method_signature": "TypeConstraint.validate(Object object)", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "@Override public", "return": "Description", "signature": "Description getDescription()", "full_signature": "@Override public Description getDescription()", "class_method_signature": "TypeConstraint.getDescription()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "Type", "signature": "Type getType()", "full_signature": "public Type getType()", "class_method_signature": "TypeConstraint.getType()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "TypeConstraint.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "TypeConstraint.equals(Object obj)", "testcase": false, "constructor": false}], "file": "modules/core/nuxeo-core-schema/src/main/java/org/nuxeo/ecm/core/schema/types/constraints/TypeConstraint.java"}, "focal_method": {"identifier": "validate", "parameters": "(Object object)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean validate(Object object) {\n        if (object == null) {\n            return true;\n        }\n        return type.validate(object);\n    }", "signature": "boolean validate(Object object)", "full_signature": "@Override public boolean validate(Object object)", "class_method_signature": "TypeConstraint.validate(Object object)", "testcase": false, "constructor": false, "invocations": ["validate"]}, "repository": {"repo_id": 2988101, "url": "https://github.com/nuxeo/nuxeo", "stars": 339, "created": "12/15/2011 2:35:41 PM +00:00", "updates": "2020-01-27T16:52:27+00:00", "fork": "False", "license": "licensed"}}