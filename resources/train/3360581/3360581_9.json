{"test_class": {"identifier": "MoParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "i18n-gettext-tools/src/test/java/net/jhorstmann/i18n/tools/MoParserTest.java"}, "test_case": {"identifier": "testABC", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testABC() throws IOException {\n        MessageBundle bundle = MoParser.parseMessages(new File(\"src/test/resources/net/jhorstmann/i18n/tools/ABC.mo\"));\n        Assert.assertNotNull(bundle);\n        Assert.assertEquals(3, bundle.size());\n        {\n            Message message = bundle.getMessage(\"a\");\n            Assert.assertNotNull(message);\n            Assert.assertEquals(\"a\", message.getMsgid());\n            Assert.assertEquals(\"a\", message.getMsgstr());\n        }\n        {\n            Message message = bundle.getMessage(\"b\");\n            Assert.assertNotNull(message);\n            Assert.assertEquals(\"b\", message.getMsgid());\n            Assert.assertEquals(\"b\", message.getMsgstr());\n        }\n        {\n            Message message = bundle.getMessage(\"c\");\n            Assert.assertNotNull(message);\n            Assert.assertEquals(\"c\", message.getMsgid());\n            Assert.assertEquals(\"c\", message.getMsgstr());\n        }\n    }", "signature": "void testABC()", "full_signature": "@Test public void testABC()", "class_method_signature": "MoParserTest.testABC()", "testcase": true, "constructor": false, "invocations": ["parseMessages", "assertNotNull", "assertEquals", "size", "getMessage", "assertNotNull", "assertEquals", "getMsgid", "assertEquals", "getMsgstr", "getMessage", "assertNotNull", "assertEquals", "getMsgid", "assertEquals", "getMsgstr", "getMessage", "assertNotNull", "assertEquals", "getMsgid", "assertEquals", "getMsgstr"]}, "focal_class": {"identifier": "MoParser", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "parseMessages", "parameters": "(File file)", "modifiers": "public static", "return": "MessageBundle", "signature": "MessageBundle parseMessages(File file)", "full_signature": "public static MessageBundle parseMessages(File file)", "class_method_signature": "MoParser.parseMessages(File file)", "testcase": false, "constructor": false}, {"identifier": "parseMessages", "parameters": "(InputStream in)", "modifiers": "public static", "return": "MessageBundle", "signature": "MessageBundle parseMessages(InputStream in)", "full_signature": "public static MessageBundle parseMessages(InputStream in)", "class_method_signature": "MoParser.parseMessages(InputStream in)", "testcase": false, "constructor": false}, {"identifier": "readNoEOF", "parameters": "(InputStream in)", "modifiers": "private static", "return": "int", "signature": "int readNoEOF(InputStream in)", "full_signature": "private static int readNoEOF(InputStream in)", "class_method_signature": "MoParser.readNoEOF(InputStream in)", "testcase": false, "constructor": false}, {"identifier": "readInt", "parameters": "(InputStream in, boolean bigEndian)", "modifiers": "private static", "return": "int", "signature": "int readInt(InputStream in, boolean bigEndian)", "full_signature": "private static int readInt(InputStream in, boolean bigEndian)", "class_method_signature": "MoParser.readInt(InputStream in, boolean bigEndian)", "testcase": false, "constructor": false}, {"identifier": "readString", "parameters": "(InputStream in, int len)", "modifiers": "private static", "return": "String", "signature": "String readString(InputStream in, int len)", "full_signature": "private static String readString(InputStream in, int len)", "class_method_signature": "MoParser.readString(InputStream in, int len)", "testcase": false, "constructor": false}], "file": "i18n-gettext-tools/src/main/java/net/jhorstmann/i18n/tools/MoParser.java"}, "focal_method": {"identifier": "parseMessages", "parameters": "(File file)", "modifiers": "public static", "return": "MessageBundle", "body": "public static MessageBundle parseMessages(File file) throws IOException {\n        FileInputStream in = new FileInputStream(file);\n        try {\n            MessageBundle bundle = parseMessages(in);\n\n            return bundle;\n        } finally {\n            in.close();\n        }\n    }", "signature": "MessageBundle parseMessages(File file)", "full_signature": "public static MessageBundle parseMessages(File file)", "class_method_signature": "MoParser.parseMessages(File file)", "testcase": false, "constructor": false, "invocations": ["parseMessages", "close"]}, "repository": {"repo_id": 3360581, "url": "https://github.com/jhorstmann/i18n", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 27, "size": 635, "license": "licensed"}}