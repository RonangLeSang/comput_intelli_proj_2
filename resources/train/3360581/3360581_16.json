{"test_class": {"identifier": "TestStrutsHtmlMessageExtractor", "superclass": "", "interfaces": "", "fields": [], "file": "i18n-xgettext-struts-html/src/test/java/net/jhorstmann/i18n/xgettext/struts/TestStrutsHtmlMessageExtractor.java"}, "test_case": {"identifier": "testExtractor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExtractor() throws IOException, MessageExtractorException {\n        MessageBundle mb = new MessageBundle();\n        StrutsHtmlMessageExtractor ex = new StrutsHtmlMessageExtractor(mb, false);\n        ex.extractMessages(new File(\"src/test/resources/index.jsp\"));\n        \n        assertFalse(mb.isEmpty());\n        assertEquals(4, mb.size());\n        \n        Message title = mb.getMessage(\"message.title\");\n        assertNotNull(title);\n        assertEquals(\"message.title\", title.getMsgid());\n\n        Message imageSrc = mb.getMessage(\"image.test.src\");\n        assertNotNull(imageSrc);\n        assertEquals(\"image.test.src\", imageSrc.getMsgid());\n\n        Message imageAlt = mb.getMessage(\"image.test.alt\");\n        assertNotNull(imageAlt);\n        assertEquals(\"image.test.alt\", imageAlt.getMsgid());\n\n        Message imageTitle = mb.getMessage(\"image.test.title\");\n        assertNotNull(imageTitle);\n        assertEquals(\"image.test.title\", imageTitle.getMsgid());\n\n        Properties props = mb.toOpenProps();\n        props.list(System.out);\n    }", "signature": "void testExtractor()", "full_signature": "@Test public void testExtractor()", "class_method_signature": "TestStrutsHtmlMessageExtractor.testExtractor()", "testcase": true, "constructor": false, "invocations": ["extractMessages", "assertFalse", "isEmpty", "assertEquals", "size", "getMessage", "assertNotNull", "assertEquals", "getMsgid", "getMessage", "assertNotNull", "assertEquals", "getMsgid", "getMessage", "assertNotNull", "assertEquals", "getMsgid", "getMessage", "assertNotNull", "assertEquals", "getMsgid", "toOpenProps", "list"]}, "focal_class": {"identifier": "StrutsHtmlMessageExtractor", "superclass": "extends AbstractExtractorHandler", "interfaces": "implements MessageExtractor", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(StrutsHtmlMessageExtractor.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(StrutsHtmlMessageExtractor.class)", "var_name": "log"}], "methods": [{"identifier": "StrutsHtmlMessageExtractor", "parameters": "(MessageBundle bundle, boolean isXML)", "modifiers": "public", "return": "", "signature": " StrutsHtmlMessageExtractor(MessageBundle bundle, boolean isXML)", "full_signature": "public  StrutsHtmlMessageExtractor(MessageBundle bundle, boolean isXML)", "class_method_signature": "StrutsHtmlMessageExtractor.StrutsHtmlMessageExtractor(MessageBundle bundle, boolean isXML)", "testcase": false, "constructor": true}, {"identifier": "createJSPReader", "parameters": "()", "modifiers": "private static", "return": "XMLReader", "signature": "XMLReader createJSPReader()", "full_signature": "private static XMLReader createJSPReader()", "class_method_signature": "StrutsHtmlMessageExtractor.createJSPReader()", "testcase": false, "constructor": false}, {"identifier": "startDocument", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void startDocument()", "full_signature": "@Override public void startDocument()", "class_method_signature": "StrutsHtmlMessageExtractor.startDocument()", "testcase": false, "constructor": false}, {"identifier": "endDocument", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void endDocument()", "full_signature": "@Override public void endDocument()", "class_method_signature": "StrutsHtmlMessageExtractor.endDocument()", "testcase": false, "constructor": false}, {"identifier": "extractMessages", "parameters": "(File file)", "modifiers": "@Override public", "return": "void", "signature": "void extractMessages(File file)", "full_signature": "@Override public void extractMessages(File file)", "class_method_signature": "StrutsHtmlMessageExtractor.extractMessages(File file)", "testcase": false, "constructor": false}, {"identifier": "extractMessages", "parameters": "(InputSource input)", "modifiers": "", "return": "void", "signature": "void extractMessages(InputSource input)", "full_signature": " void extractMessages(InputSource input)", "class_method_signature": "StrutsHtmlMessageExtractor.extractMessages(InputSource input)", "testcase": false, "constructor": false}], "file": "i18n-xgettext-struts-html/src/main/java/net/jhorstmann/i18n/xgettext/struts/StrutsHtmlMessageExtractor.java"}, "focal_method": {"identifier": "extractMessages", "parameters": "(File file)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void extractMessages(File file) throws IOException, MessageExtractorException {\n        String systemId = file.getAbsolutePath();\n        log.debug(\"Extracting messages from {}\", systemId);\n        InputStream in = new FileInputStream(file);\n        try {\n            InputSource input = new InputSource(in);\n            input.setSystemId(systemId);\n            extractMessages(input);\n        } finally {\n            in.close();\n        }\n    }", "signature": "void extractMessages(File file)", "full_signature": "@Override public void extractMessages(File file)", "class_method_signature": "StrutsHtmlMessageExtractor.extractMessages(File file)", "testcase": false, "constructor": false, "invocations": ["getAbsolutePath", "debug", "setSystemId", "extractMessages", "close"]}, "repository": {"repo_id": 3360581, "url": "https://github.com/jhorstmann/i18n", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 27, "size": 635, "license": "licensed"}}