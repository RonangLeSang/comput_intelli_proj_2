{"test_class": {"identifier": "XMLParserTest", "superclass": "extends AbstractDozerTest", "interfaces": "", "fields": [{"original_string": "MappingsSource<Document> parser;", "modifier": "", "type": "MappingsSource<Document>", "declarator": "parser", "var_name": "parser"}, {"original_string": "ResourceLoader loader;", "modifier": "", "type": "ResourceLoader", "declarator": "loader", "var_name": "loader"}, {"original_string": "BeanContainer beanContainer;", "modifier": "", "type": "BeanContainer", "declarator": "beanContainer", "var_name": "beanContainer"}, {"original_string": "DestBeanCreator destBeanCreator;", "modifier": "", "type": "DestBeanCreator", "declarator": "destBeanCreator", "var_name": "destBeanCreator"}, {"original_string": "PropertyDescriptorFactory propertyDescriptorFactory;", "modifier": "", "type": "PropertyDescriptorFactory", "declarator": "propertyDescriptorFactory", "var_name": "propertyDescriptorFactory"}], "file": "core/src/test/java/com/github/dozermapper/core/loader/xml/XMLParserTest.java"}, "test_case": {"identifier": "testParseCustomConverterParam", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParseCustomConverterParam() throws Exception {\n        URL url = loader.getResource(\"mappings/fieldCustomConverterParam.xml\");\n\n        Document document = new XMLParserFactory(beanContainer).createParser().parse(url.openStream());\n        parser = new XMLParser(beanContainer, destBeanCreator, propertyDescriptorFactory);\n\n        MappingFileData mappings = parser.read(document);\n\n        assertNotNull(\"The mappings should not be null\", mappings);\n\n        List<ClassMap> mapping = mappings.getClassMaps();\n\n        assertNotNull(\"The list of mappings should not be null\", mapping);\n\n        assertEquals(\"There should be one mapping\", 3, mapping.size());\n\n        ClassMap classMap = mapping.get(0);\n\n        assertNotNull(\"The classmap should not be null\", classMap);\n\n        List<FieldMap> fieldMaps = classMap.getFieldMaps();\n\n        assertNotNull(\"The fieldmaps should not be null\", fieldMaps);\n        assertEquals(\"The fieldmap should have one mapping\", 1, fieldMaps.size());\n\n        FieldMap fieldMap = fieldMaps.get(0);\n\n        assertNotNull(\"The fieldmap should not be null\", fieldMap);\n        assertEquals(\"The customconverterparam should be correct\", \"CustomConverterParamTest\", fieldMap.getCustomConverterParam());\n    }", "signature": "void testParseCustomConverterParam()", "full_signature": "@Test public void testParseCustomConverterParam()", "class_method_signature": "XMLParserTest.testParseCustomConverterParam()", "testcase": true, "constructor": false, "invocations": ["getResource", "parse", "createParser", "openStream", "read", "assertNotNull", "getClassMaps", "assertNotNull", "assertEquals", "size", "get", "assertNotNull", "getFieldMaps", "assertNotNull", "assertEquals", "size", "get", "assertNotNull", "assertEquals", "getCustomConverterParam"]}, "focal_class": {"identifier": "XMLParser", "superclass": "", "interfaces": "implements MappingsSource<Document>", "fields": [{"original_string": "private final Logger log = LoggerFactory.getLogger(XMLParser.class);", "modifier": "private final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(XMLParser.class)", "var_name": "log"}, {"original_string": "private static final String WILDCARD = \"wildcard\";", "modifier": "private static final", "type": "String", "declarator": "WILDCARD = \"wildcard\"", "var_name": "WILDCARD"}, {"original_string": "private static final String WILDCARD_CASE_INSENSITIVE = \"wildcard-case-insensitive\";", "modifier": "private static final", "type": "String", "declarator": "WILDCARD_CASE_INSENSITIVE = \"wildcard-case-insensitive\"", "var_name": "WILDCARD_CASE_INSENSITIVE"}, {"original_string": "private static final String TRIM_STRINGS = \"trim-strings\";", "modifier": "private static final", "type": "String", "declarator": "TRIM_STRINGS = \"trim-strings\"", "var_name": "TRIM_STRINGS"}, {"original_string": "private static final String BEAN_FACTORY = \"bean-factory\";", "modifier": "private static final", "type": "String", "declarator": "BEAN_FACTORY = \"bean-factory\"", "var_name": "BEAN_FACTORY"}, {"original_string": "private static final String DATE_FORMAT = \"date-format\";", "modifier": "private static final", "type": "String", "declarator": "DATE_FORMAT = \"date-format\"", "var_name": "DATE_FORMAT"}, {"original_string": "private static final String RELATIONSHIP_TYPE = \"relationship-type\";", "modifier": "private static final", "type": "String", "declarator": "RELATIONSHIP_TYPE = \"relationship-type\"", "var_name": "RELATIONSHIP_TYPE"}, {"original_string": "private static final String REMOVE_ORPHANS = \"remove-orphans\";", "modifier": "private static final", "type": "String", "declarator": "REMOVE_ORPHANS = \"remove-orphans\"", "var_name": "REMOVE_ORPHANS"}, {"original_string": "private static final String MAP_NULL = \"map-null\";", "modifier": "private static final", "type": "String", "declarator": "MAP_NULL = \"map-null\"", "var_name": "MAP_NULL"}, {"original_string": "private static final String MAP_EMPTY_STRING = \"map-empty-string\";", "modifier": "private static final", "type": "String", "declarator": "MAP_EMPTY_STRING = \"map-empty-string\"", "var_name": "MAP_EMPTY_STRING"}, {"original_string": "private static final String CONFIGURATION_ELEMENT = \"configuration\";", "modifier": "private static final", "type": "String", "declarator": "CONFIGURATION_ELEMENT = \"configuration\"", "var_name": "CONFIGURATION_ELEMENT"}, {"original_string": "private static final String STOP_ON_ERRORS_ELEMENT = \"stop-on-errors\";", "modifier": "private static final", "type": "String", "declarator": "STOP_ON_ERRORS_ELEMENT = \"stop-on-errors\"", "var_name": "STOP_ON_ERRORS_ELEMENT"}, {"original_string": "private static final String CUSTOM_CONVERTERS_ELEMENT = \"custom-converters\";", "modifier": "private static final", "type": "String", "declarator": "CUSTOM_CONVERTERS_ELEMENT = \"custom-converters\"", "var_name": "CUSTOM_CONVERTERS_ELEMENT"}, {"original_string": "private static final String COPY_BY_REFERENCES_ELEMENT = \"copy-by-references\";", "modifier": "private static final", "type": "String", "declarator": "COPY_BY_REFERENCES_ELEMENT = \"copy-by-references\"", "var_name": "COPY_BY_REFERENCES_ELEMENT"}, {"original_string": "private static final String COPY_BY_REFERENCE = \"copy-by-reference\";", "modifier": "private static final", "type": "String", "declarator": "COPY_BY_REFERENCE = \"copy-by-reference\"", "var_name": "COPY_BY_REFERENCE"}, {"original_string": "private static final String CONVERTER_ELEMENT = \"converter\";", "modifier": "private static final", "type": "String", "declarator": "CONVERTER_ELEMENT = \"converter\"", "var_name": "CONVERTER_ELEMENT"}, {"original_string": "private static final String CLASS_A_ELEMENT = \"class-a\";", "modifier": "private static final", "type": "String", "declarator": "CLASS_A_ELEMENT = \"class-a\"", "var_name": "CLASS_A_ELEMENT"}, {"original_string": "private static final String CLASS_B_ELEMENT = \"class-b\";", "modifier": "private static final", "type": "String", "declarator": "CLASS_B_ELEMENT = \"class-b\"", "var_name": "CLASS_B_ELEMENT"}, {"original_string": "private static final String MAPPING_ELEMENT = \"mapping\";", "modifier": "private static final", "type": "String", "declarator": "MAPPING_ELEMENT = \"mapping\"", "var_name": "MAPPING_ELEMENT"}, {"original_string": "private static final String FIELD_ELEMENT = \"field\";", "modifier": "private static final", "type": "String", "declarator": "FIELD_ELEMENT = \"field\"", "var_name": "FIELD_ELEMENT"}, {"original_string": "private static final String FIELD_EXCLUDE_ELEMENT = \"field-exclude\";", "modifier": "private static final", "type": "String", "declarator": "FIELD_EXCLUDE_ELEMENT = \"field-exclude\"", "var_name": "FIELD_EXCLUDE_ELEMENT"}, {"original_string": "private static final String A_ELEMENT = \"a\";", "modifier": "private static final", "type": "String", "declarator": "A_ELEMENT = \"a\"", "var_name": "A_ELEMENT"}, {"original_string": "private static final String B_ELEMENT = \"b\";", "modifier": "private static final", "type": "String", "declarator": "B_ELEMENT = \"b\"", "var_name": "B_ELEMENT"}, {"original_string": "private static final String SRC_TYPE_HINT_ELEMENT = \"a-hint\";", "modifier": "private static final", "type": "String", "declarator": "SRC_TYPE_HINT_ELEMENT = \"a-hint\"", "var_name": "SRC_TYPE_HINT_ELEMENT"}, {"original_string": "private static final String DEST_TYPE_HINT_ELEMENT = \"b-hint\";", "modifier": "private static final", "type": "String", "declarator": "DEST_TYPE_HINT_ELEMENT = \"b-hint\"", "var_name": "DEST_TYPE_HINT_ELEMENT"}, {"original_string": "private static final String SRC_TYPE_DEEP_INDEX_HINT_ELEMENT = \"a-deep-index-hint\";", "modifier": "private static final", "type": "String", "declarator": "SRC_TYPE_DEEP_INDEX_HINT_ELEMENT = \"a-deep-index-hint\"", "var_name": "SRC_TYPE_DEEP_INDEX_HINT_ELEMENT"}, {"original_string": "private static final String DEST_TYPE_DEEP_INDEX_HINT_ELEMENT = \"b-deep-index-hint\";", "modifier": "private static final", "type": "String", "declarator": "DEST_TYPE_DEEP_INDEX_HINT_ELEMENT = \"b-deep-index-hint\"", "var_name": "DEST_TYPE_DEEP_INDEX_HINT_ELEMENT"}, {"original_string": "private static final String ALLOWED_EXCEPTIONS_ELEMENT = \"allowed-exceptions\";", "modifier": "private static final", "type": "String", "declarator": "ALLOWED_EXCEPTIONS_ELEMENT = \"allowed-exceptions\"", "var_name": "ALLOWED_EXCEPTIONS_ELEMENT"}, {"original_string": "private static final String ALLOWED_EXCEPTION_ELEMENT = \"exception\";", "modifier": "private static final", "type": "String", "declarator": "ALLOWED_EXCEPTION_ELEMENT = \"exception\"", "var_name": "ALLOWED_EXCEPTION_ELEMENT"}, {"original_string": "private static final String VARIABLES_ELEMENT = \"variables\";", "modifier": "private static final", "type": "String", "declarator": "VARIABLES_ELEMENT = \"variables\"", "var_name": "VARIABLES_ELEMENT"}, {"original_string": "private static final String VARIABLE_ELEMENT = \"variable\";", "modifier": "private static final", "type": "String", "declarator": "VARIABLE_ELEMENT = \"variable\"", "var_name": "VARIABLE_ELEMENT"}, {"original_string": "private static final String TYPE_ATTRIBUTE = \"type\";", "modifier": "private static final", "type": "String", "declarator": "TYPE_ATTRIBUTE = \"type\"", "var_name": "TYPE_ATTRIBUTE"}, {"original_string": "private static final String NAME_ATTRIBUTE = \"name\";", "modifier": "private static final", "type": "String", "declarator": "NAME_ATTRIBUTE = \"name\"", "var_name": "NAME_ATTRIBUTE"}, {"original_string": "private static final String COPY_BY_REFERENCE_ATTRIBUTE = \"copy-by-reference\";", "modifier": "private static final", "type": "String", "declarator": "COPY_BY_REFERENCE_ATTRIBUTE = \"copy-by-reference\"", "var_name": "COPY_BY_REFERENCE_ATTRIBUTE"}, {"original_string": "private static final String THE_SET_METHOD_ATTRIBUTE = \"set-method\";", "modifier": "private static final", "type": "String", "declarator": "THE_SET_METHOD_ATTRIBUTE = \"set-method\"", "var_name": "THE_SET_METHOD_ATTRIBUTE"}, {"original_string": "private static final String THE_GET_METHOD_ATTRIBUTE = \"get-method\";", "modifier": "private static final", "type": "String", "declarator": "THE_GET_METHOD_ATTRIBUTE = \"get-method\"", "var_name": "THE_GET_METHOD_ATTRIBUTE"}, {"original_string": "private static final String STOP_ON_ERRORS_ATTRIBUTE = \"stop-on-errors\";", "modifier": "private static final", "type": "String", "declarator": "STOP_ON_ERRORS_ATTRIBUTE = \"stop-on-errors\"", "var_name": "STOP_ON_ERRORS_ATTRIBUTE"}, {"original_string": "private static final String MAPID_ATTRIBUTE = \"map-id\";", "modifier": "private static final", "type": "String", "declarator": "MAPID_ATTRIBUTE = \"map-id\"", "var_name": "MAPID_ATTRIBUTE"}, {"original_string": "private static final String MAP_SET_METHOD_ATTRIBUTE = \"map-set-method\";", "modifier": "private static final", "type": "String", "declarator": "MAP_SET_METHOD_ATTRIBUTE = \"map-set-method\"", "var_name": "MAP_SET_METHOD_ATTRIBUTE"}, {"original_string": "private static final String MAP_GET_METHOD_ATTRIBUTE = \"map-get-method\";", "modifier": "private static final", "type": "String", "declarator": "MAP_GET_METHOD_ATTRIBUTE = \"map-get-method\"", "var_name": "MAP_GET_METHOD_ATTRIBUTE"}, {"original_string": "private static final String KEY_ATTRIBUTE = \"key\";", "modifier": "private static final", "type": "String", "declarator": "KEY_ATTRIBUTE = \"key\"", "var_name": "KEY_ATTRIBUTE"}, {"original_string": "private static final String FACTORY_BEANID_ATTRIBUTE = \"factory-bean-id\";", "modifier": "private static final", "type": "String", "declarator": "FACTORY_BEANID_ATTRIBUTE = \"factory-bean-id\"", "var_name": "FACTORY_BEANID_ATTRIBUTE"}, {"original_string": "private static final String IS_ACCESSIBLE_ATTRIBUTE = \"is-accessible\";", "modifier": "private static final", "type": "String", "declarator": "IS_ACCESSIBLE_ATTRIBUTE = \"is-accessible\"", "var_name": "IS_ACCESSIBLE_ATTRIBUTE"}, {"original_string": "private static final String CREATE_METHOD_ATTRIBUTE = \"create-method\";", "modifier": "private static final", "type": "String", "declarator": "CREATE_METHOD_ATTRIBUTE = \"create-method\"", "var_name": "CREATE_METHOD_ATTRIBUTE"}, {"original_string": "private static final String SKIP_CONSTRUCTOR_ATTRIBUTE = \"skip-constructor\";", "modifier": "private static final", "type": "String", "declarator": "SKIP_CONSTRUCTOR_ATTRIBUTE = \"skip-constructor\"", "var_name": "SKIP_CONSTRUCTOR_ATTRIBUTE"}, {"original_string": "private static final String MAP_NULL_ATTRIBUTE = \"map-null\";", "modifier": "private static final", "type": "String", "declarator": "MAP_NULL_ATTRIBUTE = \"map-null\"", "var_name": "MAP_NULL_ATTRIBUTE"}, {"original_string": "private static final String MAP_EMPTY_STRING_ATTRIBUTE = \"map-empty-string\";", "modifier": "private static final", "type": "String", "declarator": "MAP_EMPTY_STRING_ATTRIBUTE = \"map-empty-string\"", "var_name": "MAP_EMPTY_STRING_ATTRIBUTE"}, {"original_string": "private static final String CUSTOM_CONVERTER_ATTRIBUTE = \"custom-converter\";", "modifier": "private static final", "type": "String", "declarator": "CUSTOM_CONVERTER_ATTRIBUTE = \"custom-converter\"", "var_name": "CUSTOM_CONVERTER_ATTRIBUTE"}, {"original_string": "private static final String CUSTOM_CONVERTER_ID_ATTRIBUTE = \"custom-converter-id\";", "modifier": "private static final", "type": "String", "declarator": "CUSTOM_CONVERTER_ID_ATTRIBUTE = \"custom-converter-id\"", "var_name": "CUSTOM_CONVERTER_ID_ATTRIBUTE"}, {"original_string": "private static final String CUSTOM_CONVERTER_PARAM_ATTRIBUTE = \"custom-converter-param\";", "modifier": "private static final", "type": "String", "declarator": "CUSTOM_CONVERTER_PARAM_ATTRIBUTE = \"custom-converter-param\"", "var_name": "CUSTOM_CONVERTER_PARAM_ATTRIBUTE"}, {"original_string": "private final BeanContainer beanContainer;", "modifier": "private final", "type": "BeanContainer", "declarator": "beanContainer", "var_name": "beanContainer"}, {"original_string": "private final DestBeanCreator destBeanCreator;", "modifier": "private final", "type": "DestBeanCreator", "declarator": "destBeanCreator", "var_name": "destBeanCreator"}, {"original_string": "private final PropertyDescriptorFactory propertyDescriptorFactory;", "modifier": "private final", "type": "PropertyDescriptorFactory", "declarator": "propertyDescriptorFactory", "var_name": "propertyDescriptorFactory"}], "methods": [{"identifier": "XMLParser", "parameters": "(BeanContainer beanContainer, DestBeanCreator destBeanCreator, PropertyDescriptorFactory propertyDescriptorFactory)", "modifiers": "public", "return": "", "signature": " XMLParser(BeanContainer beanContainer, DestBeanCreator destBeanCreator, PropertyDescriptorFactory propertyDescriptorFactory)", "full_signature": "public  XMLParser(BeanContainer beanContainer, DestBeanCreator destBeanCreator, PropertyDescriptorFactory propertyDescriptorFactory)", "class_method_signature": "XMLParser.XMLParser(BeanContainer beanContainer, DestBeanCreator destBeanCreator, PropertyDescriptorFactory propertyDescriptorFactory)", "testcase": false, "constructor": true}, {"identifier": "getAttribute", "parameters": "(Element element, String attribute)", "modifiers": "private", "return": "String", "signature": "String getAttribute(Element element, String attribute)", "full_signature": "private String getAttribute(Element element, String attribute)", "class_method_signature": "XMLParser.getAttribute(Element element, String attribute)", "testcase": false, "constructor": false}, {"identifier": "getNodeValue", "parameters": "(Element element)", "modifiers": "private", "return": "String", "signature": "String getNodeValue(Element element)", "full_signature": "private String getNodeValue(Element element)", "class_method_signature": "XMLParser.getNodeValue(Element element)", "testcase": false, "constructor": false}, {"identifier": "debugElement", "parameters": "(Element element)", "modifiers": "private", "return": "void", "signature": "void debugElement(Element element)", "full_signature": "private void debugElement(Element element)", "class_method_signature": "XMLParser.debugElement(Element element)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(Document document)", "modifiers": "public", "return": "MappingFileData", "signature": "MappingFileData read(Document document)", "full_signature": "public MappingFileData read(Document document)", "class_method_signature": "XMLParser.read(Document document)", "testcase": false, "constructor": false}, {"identifier": "parseMapping", "parameters": "(Element ele, DozerBuilder builder)", "modifiers": "private", "return": "void", "signature": "void parseMapping(Element ele, DozerBuilder builder)", "full_signature": "private void parseMapping(Element ele, DozerBuilder builder)", "class_method_signature": "XMLParser.parseMapping(Element ele, DozerBuilder builder)", "testcase": false, "constructor": false}, {"identifier": "parseClass", "parameters": "(Element element, DozerBuilder.ClassDefinitionBuilder classBuilder)", "modifiers": "private", "return": "void", "signature": "void parseClass(Element element, DozerBuilder.ClassDefinitionBuilder classBuilder)", "full_signature": "private void parseClass(Element element, DozerBuilder.ClassDefinitionBuilder classBuilder)", "class_method_signature": "XMLParser.parseClass(Element element, DozerBuilder.ClassDefinitionBuilder classBuilder)", "testcase": false, "constructor": false}, {"identifier": "parseFieldExcludeMap", "parameters": "(Element ele, DozerBuilder.MappingBuilder definitionBuilder)", "modifiers": "private", "return": "void", "signature": "void parseFieldExcludeMap(Element ele, DozerBuilder.MappingBuilder definitionBuilder)", "full_signature": "private void parseFieldExcludeMap(Element ele, DozerBuilder.MappingBuilder definitionBuilder)", "class_method_signature": "XMLParser.parseFieldExcludeMap(Element ele, DozerBuilder.MappingBuilder definitionBuilder)", "testcase": false, "constructor": false}, {"identifier": "parseFieldElements", "parameters": "(Element element, DozerBuilder.FieldBuider fieldMapBuilder)", "modifiers": "private", "return": "void", "signature": "void parseFieldElements(Element element, DozerBuilder.FieldBuider fieldMapBuilder)", "full_signature": "private void parseFieldElements(Element element, DozerBuilder.FieldBuider fieldMapBuilder)", "class_method_signature": "XMLParser.parseFieldElements(Element element, DozerBuilder.FieldBuider fieldMapBuilder)", "testcase": false, "constructor": false}, {"identifier": "parseGenericFieldMap", "parameters": "(Element ele, DozerBuilder.MappingBuilder definitionBuilder)", "modifiers": "private", "return": "void", "signature": "void parseGenericFieldMap(Element ele, DozerBuilder.MappingBuilder definitionBuilder)", "full_signature": "private void parseGenericFieldMap(Element ele, DozerBuilder.MappingBuilder definitionBuilder)", "class_method_signature": "XMLParser.parseGenericFieldMap(Element ele, DozerBuilder.MappingBuilder definitionBuilder)", "testcase": false, "constructor": false}, {"identifier": "determineFieldMap", "parameters": "(DozerBuilder.MappingBuilder definitionBuilder, Element ele)", "modifiers": "private", "return": "DozerBuilder.FieldMappingBuilder", "signature": "DozerBuilder.FieldMappingBuilder determineFieldMap(DozerBuilder.MappingBuilder definitionBuilder, Element ele)", "full_signature": "private DozerBuilder.FieldMappingBuilder determineFieldMap(DozerBuilder.MappingBuilder definitionBuilder, Element ele)", "class_method_signature": "XMLParser.determineFieldMap(DozerBuilder.MappingBuilder definitionBuilder, Element ele)", "testcase": false, "constructor": false}, {"identifier": "parseFieldMap", "parameters": "(Element ele, DozerBuilder.FieldMappingBuilder fieldMapBuilder)", "modifiers": "private", "return": "void", "signature": "void parseFieldMap(Element ele, DozerBuilder.FieldMappingBuilder fieldMapBuilder)", "full_signature": "private void parseFieldMap(Element ele, DozerBuilder.FieldMappingBuilder fieldMapBuilder)", "class_method_signature": "XMLParser.parseFieldMap(Element ele, DozerBuilder.FieldMappingBuilder fieldMapBuilder)", "testcase": false, "constructor": false}, {"identifier": "setRelationshipType", "parameters": "(Element ele, DozerBuilder.FieldMappingBuilder definitionBuilder)", "modifiers": "private", "return": "void", "signature": "void setRelationshipType(Element ele, DozerBuilder.FieldMappingBuilder definitionBuilder)", "full_signature": "private void setRelationshipType(Element ele, DozerBuilder.FieldMappingBuilder definitionBuilder)", "class_method_signature": "XMLParser.setRelationshipType(Element ele, DozerBuilder.FieldMappingBuilder definitionBuilder)", "testcase": false, "constructor": false}, {"identifier": "parseField", "parameters": "(Element ele, DozerBuilder.FieldDefinitionBuilder fieldBuilder)", "modifiers": "private", "return": "void", "signature": "void parseField(Element ele, DozerBuilder.FieldDefinitionBuilder fieldBuilder)", "full_signature": "private void parseField(Element ele, DozerBuilder.FieldDefinitionBuilder fieldBuilder)", "class_method_signature": "XMLParser.parseField(Element ele, DozerBuilder.FieldDefinitionBuilder fieldBuilder)", "testcase": false, "constructor": false}, {"identifier": "parseConfiguration", "parameters": "(Element ele, DozerBuilder builder)", "modifiers": "private", "return": "void", "signature": "void parseConfiguration(Element ele, DozerBuilder builder)", "full_signature": "private void parseConfiguration(Element ele, DozerBuilder builder)", "class_method_signature": "XMLParser.parseConfiguration(Element ele, DozerBuilder builder)", "testcase": false, "constructor": false}, {"identifier": "parseVariables", "parameters": "(Element element)", "modifiers": "private", "return": "void", "signature": "void parseVariables(Element element)", "full_signature": "private void parseVariables(Element element)", "class_method_signature": "XMLParser.parseVariables(Element element)", "testcase": false, "constructor": false}, {"identifier": "parseCustomConverters", "parameters": "(Element ele, DozerBuilder.ConfigurationBuilder config)", "modifiers": "private", "return": "void", "signature": "void parseCustomConverters(Element ele, DozerBuilder.ConfigurationBuilder config)", "full_signature": "private void parseCustomConverters(Element ele, DozerBuilder.ConfigurationBuilder config)", "class_method_signature": "XMLParser.parseCustomConverters(Element ele, DozerBuilder.ConfigurationBuilder config)", "testcase": false, "constructor": false}, {"identifier": "parseCopyByReferences", "parameters": "(Element ele, DozerBuilder.ConfigurationBuilder config)", "modifiers": "private", "return": "void", "signature": "void parseCopyByReferences(Element ele, DozerBuilder.ConfigurationBuilder config)", "full_signature": "private void parseCopyByReferences(Element ele, DozerBuilder.ConfigurationBuilder config)", "class_method_signature": "XMLParser.parseCopyByReferences(Element ele, DozerBuilder.ConfigurationBuilder config)", "testcase": false, "constructor": false}, {"identifier": "parseAllowedExceptions", "parameters": "(Element ele, DozerBuilder.ConfigurationBuilder config)", "modifiers": "private", "return": "void", "signature": "void parseAllowedExceptions(Element ele, DozerBuilder.ConfigurationBuilder config)", "full_signature": "private void parseAllowedExceptions(Element ele, DozerBuilder.ConfigurationBuilder config)", "class_method_signature": "XMLParser.parseAllowedExceptions(Element ele, DozerBuilder.ConfigurationBuilder config)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/github/dozermapper/core/loader/xml/XMLParser.java"}, "focal_method": {"identifier": "read", "parameters": "(Document document)", "modifiers": "public", "return": "MappingFileData", "body": "public MappingFileData read(Document document) {\n        DozerBuilder builder = new DozerBuilder(beanContainer, destBeanCreator, propertyDescriptorFactory);\n\n        Element theRoot = document.getDocumentElement();\n        NodeList nl = theRoot.getChildNodes();\n        for (int i = 0; i < nl.getLength(); i++) {\n            Node node = nl.item(i);\n            if (node instanceof Element) {\n                Element ele = (Element)node;\n                log.debug(\"name: {}\", ele.getNodeName());\n                if (CONFIGURATION_ELEMENT.equals(ele.getNodeName())) {\n                    parseConfiguration(ele, builder);\n                } else if (MAPPING_ELEMENT.equals(ele.getNodeName())) {\n                    parseMapping(ele, builder);\n                }\n            }\n        }\n\n        return builder.build();\n    }", "signature": "MappingFileData read(Document document)", "full_signature": "public MappingFileData read(Document document)", "class_method_signature": "XMLParser.read(Document document)", "testcase": false, "constructor": false, "invocations": ["getDocumentElement", "getChildNodes", "getLength", "item", "debug", "getNodeName", "equals", "getNodeName", "parseConfiguration", "equals", "getNodeName", "parseMapping", "build"]}, "repository": {"repo_id": 3250434, "url": "https://github.com/DozerMapper/dozer", "stars": 1630, "created": "1/23/2012 9:11:58 PM +00:00", "updates": "2020-01-23T13:20:05+00:00", "fork": "False", "license": "licensed"}}