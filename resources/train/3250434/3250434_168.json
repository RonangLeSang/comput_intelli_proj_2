{"test_class": {"identifier": "CollectionUtilsTest", "superclass": "extends AbstractDozerTest", "interfaces": "", "fields": [], "file": "core/src/test/java/com/github/dozermapper/core/util/CollectionUtilsTest.java"}, "test_case": {"identifier": "testIsSet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsSet() {\n        Object[] values = new Object[] {new TreeSet(), new HashSet(), new HashSet()};\n        for (int i = 0; i < values.length; i++) {\n            assertTrue(CollectionUtils.isSet(values[i].getClass()));\n        }\n    }", "signature": "void testIsSet()", "full_signature": "@Test public void testIsSet()", "class_method_signature": "CollectionUtilsTest.testIsSet()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isSet", "getClass"]}, "focal_class": {"identifier": "CollectionUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "CollectionUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " CollectionUtils()", "full_signature": "private  CollectionUtils()", "class_method_signature": "CollectionUtils.CollectionUtils()", "testcase": false, "constructor": true}, {"identifier": "isArray", "parameters": "(Class<?> aClass)", "modifiers": "public static", "return": "boolean", "signature": "boolean isArray(Class<?> aClass)", "full_signature": "public static boolean isArray(Class<?> aClass)", "class_method_signature": "CollectionUtils.isArray(Class<?> aClass)", "testcase": false, "constructor": false}, {"identifier": "isCollection", "parameters": "(Class<?> aClass)", "modifiers": "public static", "return": "boolean", "signature": "boolean isCollection(Class<?> aClass)", "full_signature": "public static boolean isCollection(Class<?> aClass)", "class_method_signature": "CollectionUtils.isCollection(Class<?> aClass)", "testcase": false, "constructor": false}, {"identifier": "isList", "parameters": "(Class<?> aClass)", "modifiers": "public static", "return": "boolean", "signature": "boolean isList(Class<?> aClass)", "full_signature": "public static boolean isList(Class<?> aClass)", "class_method_signature": "CollectionUtils.isList(Class<?> aClass)", "testcase": false, "constructor": false}, {"identifier": "isSet", "parameters": "(Class<?> aClass)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSet(Class<?> aClass)", "full_signature": "public static boolean isSet(Class<?> aClass)", "class_method_signature": "CollectionUtils.isSet(Class<?> aClass)", "testcase": false, "constructor": false}, {"identifier": "isPrimitiveArray", "parameters": "(Class<?> aClass)", "modifiers": "public static", "return": "boolean", "signature": "boolean isPrimitiveArray(Class<?> aClass)", "full_signature": "public static boolean isPrimitiveArray(Class<?> aClass)", "class_method_signature": "CollectionUtils.isPrimitiveArray(Class<?> aClass)", "testcase": false, "constructor": false}, {"identifier": "getLengthOfCollection", "parameters": "(Object value)", "modifiers": "public static", "return": "int", "signature": "int getLengthOfCollection(Object value)", "full_signature": "public static int getLengthOfCollection(Object value)", "class_method_signature": "CollectionUtils.getLengthOfCollection(Object value)", "testcase": false, "constructor": false}, {"identifier": "getValueFromCollection", "parameters": "(Object collection, int index)", "modifiers": "public static", "return": "Object", "signature": "Object getValueFromCollection(Object collection, int index)", "full_signature": "public static Object getValueFromCollection(Object collection, int index)", "class_method_signature": "CollectionUtils.getValueFromCollection(Object collection, int index)", "testcase": false, "constructor": false}, {"identifier": "createNewSet", "parameters": "(Class<T> destType)", "modifiers": "public static", "return": "Set<?>", "signature": "Set<?> createNewSet(Class<T> destType)", "full_signature": "public static Set<?> createNewSet(Class<T> destType)", "class_method_signature": "CollectionUtils.createNewSet(Class<T> destType)", "testcase": false, "constructor": false}, {"identifier": "createNewSet", "parameters": "(Class<T> destSetType, Collection<?> srcValue)", "modifiers": "public static", "return": "Set<?>", "signature": "Set<?> createNewSet(Class<T> destSetType, Collection<?> srcValue)", "full_signature": "public static Set<?> createNewSet(Class<T> destSetType, Collection<?> srcValue)", "class_method_signature": "CollectionUtils.createNewSet(Class<T> destSetType, Collection<?> srcValue)", "testcase": false, "constructor": false}, {"identifier": "convertListToArray", "parameters": "(List<T> list, Class<T> destEntryType)", "modifiers": "public static", "return": "Object", "signature": "Object convertListToArray(List<T> list, Class<T> destEntryType)", "full_signature": "public static Object convertListToArray(List<T> list, Class<T> destEntryType)", "class_method_signature": "CollectionUtils.convertListToArray(List<T> list, Class<T> destEntryType)", "testcase": false, "constructor": false}, {"identifier": "convertPrimitiveArrayToList", "parameters": "(Object primitiveArray)", "modifiers": "public static", "return": "List<Object>", "signature": "List<Object> convertPrimitiveArrayToList(Object primitiveArray)", "full_signature": "public static List<Object> convertPrimitiveArrayToList(Object primitiveArray)", "class_method_signature": "CollectionUtils.convertPrimitiveArrayToList(Object primitiveArray)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(final Set<E> set1, final Set<?> set2)", "modifiers": "public static", "return": "Set<E>", "signature": "Set<E> intersection(final Set<E> set1, final Set<?> set2)", "full_signature": "public static Set<E> intersection(final Set<E> set1, final Set<?> set2)", "class_method_signature": "CollectionUtils.intersection(final Set<E> set1, final Set<?> set2)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/github/dozermapper/core/util/CollectionUtils.java"}, "focal_method": {"identifier": "isSet", "parameters": "(Class<?> aClass)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isSet(Class<?> aClass) {\n        return Set.class.isAssignableFrom(aClass);\n    }", "signature": "boolean isSet(Class<?> aClass)", "full_signature": "public static boolean isSet(Class<?> aClass)", "class_method_signature": "CollectionUtils.isSet(Class<?> aClass)", "testcase": false, "constructor": false, "invocations": ["isAssignableFrom"]}, "repository": {"repo_id": 3250434, "url": "https://github.com/DozerMapper/dozer", "stars": 1630, "created": "1/23/2012 9:11:58 PM +00:00", "updates": "2020-01-23T13:20:05+00:00", "fork": "False", "license": "licensed"}}