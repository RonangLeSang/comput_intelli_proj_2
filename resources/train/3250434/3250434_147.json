{"test_class": {"identifier": "ResourceLoaderTest", "superclass": "extends AbstractDozerTest", "interfaces": "", "fields": [{"original_string": "private ResourceLoader loader = new ResourceLoader(getClass().getClassLoader());", "modifier": "private", "type": "ResourceLoader", "declarator": "loader = new ResourceLoader(getClass().getClassLoader())", "var_name": "loader"}], "file": "core/src/test/java/com/github/dozermapper/core/util/ResourceLoaderTest.java"}, "test_case": {"identifier": "testGetResouce_MalformedUrl", "parameters": "()", "modifiers": "@Test(expected = MappingException.class) public", "return": "void", "body": "@Test(expected = MappingException.class)\n    public void testGetResouce_MalformedUrl() {\n        loader.getResource(\"foo:bar\");\n    }", "signature": "void testGetResouce_MalformedUrl()", "full_signature": "@Test(expected = MappingException.class) public void testGetResouce_MalformedUrl()", "class_method_signature": "ResourceLoaderTest.testGetResouce_MalformedUrl()", "testcase": true, "constructor": false, "invocations": ["getResource"]}, "focal_class": {"identifier": "ResourceLoader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ClassLoader classLoader;", "modifier": "private final", "type": "ClassLoader", "declarator": "classLoader", "var_name": "classLoader"}], "methods": [{"identifier": "ResourceLoader", "parameters": "(ClassLoader classLoader)", "modifiers": "public", "return": "", "signature": " ResourceLoader(ClassLoader classLoader)", "full_signature": "public  ResourceLoader(ClassLoader classLoader)", "class_method_signature": "ResourceLoader.ResourceLoader(ClassLoader classLoader)", "testcase": false, "constructor": true}, {"identifier": "getResource", "parameters": "(String resource)", "modifiers": "public", "return": "URL", "signature": "URL getResource(String resource)", "full_signature": "public URL getResource(String resource)", "class_method_signature": "ResourceLoader.getResource(String resource)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/github/dozermapper/core/util/ResourceLoader.java"}, "focal_method": {"identifier": "getResource", "parameters": "(String resource)", "modifiers": "public", "return": "URL", "body": "public URL getResource(String resource) {\n        resource = resource.trim();\n\n        URL result = Thread.currentThread().getContextClassLoader().getResource(resource);\n\n        // Could not find resource. Try with the classloader that loaded this class.\n        if (result == null) {\n            ClassLoader classLoader = ResourceLoader.class.getClassLoader();\n            if (classLoader != null) {\n                result = classLoader.getResource(resource);\n            }\n        }\n\n        // Last ditch attempt searching classpath\n        if (result == null) {\n            result = ClassLoader.getSystemResource(resource);\n        }\n\n        // one more time\n        if (result == null && StringUtils.contains(resource, \":\")) {\n            try {\n                result = new URL(resource);\n            } catch (MalformedURLException e) {\n                MappingUtils.throwMappingException(e);\n            }\n        }\n\n        return result;\n    }", "signature": "URL getResource(String resource)", "full_signature": "public URL getResource(String resource)", "class_method_signature": "ResourceLoader.getResource(String resource)", "testcase": false, "constructor": false, "invocations": ["trim", "getResource", "getContextClassLoader", "currentThread", "getClassLoader", "getResource", "getSystemResource", "contains", "throwMappingException"]}, "repository": {"repo_id": 3250434, "url": "https://github.com/DozerMapper/dozer", "stars": 1630, "created": "1/23/2012 9:11:58 PM +00:00", "updates": "2020-01-23T13:20:05+00:00", "fork": "False", "license": "licensed"}}