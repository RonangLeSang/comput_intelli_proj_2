{"test_class": {"identifier": "MappingValidatorTest", "superclass": "extends AbstractDozerTest", "interfaces": "", "fields": [{"original_string": "private BeanContainer beanContainer = new BeanContainer();", "modifier": "private", "type": "BeanContainer", "declarator": "beanContainer = new BeanContainer()", "var_name": "beanContainer"}], "file": "core/src/test/java/com/github/dozermapper/core/util/MappingValidatorTest.java"}, "test_case": {"identifier": "testValidtateMappingURL_NullFileName", "parameters": "()", "modifiers": "@Test(expected = MappingException.class) public", "return": "void", "body": "@Test(expected = MappingException.class)\n    public void testValidtateMappingURL_NullFileName() {\n        MappingValidator.validateURL(null, beanContainer);\n    }", "signature": "void testValidtateMappingURL_NullFileName()", "full_signature": "@Test(expected = MappingException.class) public void testValidtateMappingURL_NullFileName()", "class_method_signature": "MappingValidatorTest.testValidtateMappingURL_NullFileName()", "testcase": true, "constructor": false, "invocations": ["validateURL"]}, "focal_class": {"identifier": "MappingValidator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "MappingValidator", "parameters": "()", "modifiers": "private", "return": "", "signature": " MappingValidator()", "full_signature": "private  MappingValidator()", "class_method_signature": "MappingValidator.MappingValidator()", "testcase": false, "constructor": true}, {"identifier": "validateMappingRequest", "parameters": "(Object srcObj)", "modifiers": "public static", "return": "void", "signature": "void validateMappingRequest(Object srcObj)", "full_signature": "public static void validateMappingRequest(Object srcObj)", "class_method_signature": "MappingValidator.validateMappingRequest(Object srcObj)", "testcase": false, "constructor": false}, {"identifier": "validateMappingRequest", "parameters": "(Object srcObj, Object destObj)", "modifiers": "public static", "return": "void", "signature": "void validateMappingRequest(Object srcObj, Object destObj)", "full_signature": "public static void validateMappingRequest(Object srcObj, Object destObj)", "class_method_signature": "MappingValidator.validateMappingRequest(Object srcObj, Object destObj)", "testcase": false, "constructor": false}, {"identifier": "validateMappingRequest", "parameters": "(Object srcObj, Class<?> destClass)", "modifiers": "public static", "return": "void", "signature": "void validateMappingRequest(Object srcObj, Class<?> destClass)", "full_signature": "public static void validateMappingRequest(Object srcObj, Class<?> destClass)", "class_method_signature": "MappingValidator.validateMappingRequest(Object srcObj, Class<?> destClass)", "testcase": false, "constructor": false}, {"identifier": "validateURL", "parameters": "(String fileName, BeanContainer beanContainer)", "modifiers": "public static", "return": "URL", "signature": "URL validateURL(String fileName, BeanContainer beanContainer)", "full_signature": "public static URL validateURL(String fileName, BeanContainer beanContainer)", "class_method_signature": "MappingValidator.validateURL(String fileName, BeanContainer beanContainer)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/github/dozermapper/core/util/MappingValidator.java"}, "focal_method": {"identifier": "validateURL", "parameters": "(String fileName, BeanContainer beanContainer)", "modifiers": "public static", "return": "URL", "body": "public static URL validateURL(String fileName, BeanContainer beanContainer) {\n        DozerClassLoader classLoader = beanContainer.getClassLoader();\n        if (fileName == null) {\n            MappingUtils.throwMappingException(\"File name is null\");\n        }\n\n        URL url = classLoader.loadResource(fileName);\n        if (url == null) {\n            DozerClassLoader tccl = beanContainer.getTCCL();\n            url = tccl.loadResource(fileName);\n            if (url == null) {\n                MappingUtils.throwMappingException(\"Unable to locate dozer mapping file [\" + fileName + \"] in the classpath!\");\n            }\n        }\n\n        InputStream stream = null;\n        try {\n            stream = url.openStream();\n        } catch (IOException e) {\n            MappingUtils.throwMappingException(\"Unable to open URL input stream for dozer mapping file [\" + url + \"]\");\n        } finally {\n            if (stream != null) {\n                try {\n                    stream.close();\n                } catch (IOException e) {\n                    MappingUtils.throwMappingException(\"Unable to close input stream for dozer mapping file [\" + url + \"]\");\n                }\n            }\n        }\n\n        return url;\n    }", "signature": "URL validateURL(String fileName, BeanContainer beanContainer)", "full_signature": "public static URL validateURL(String fileName, BeanContainer beanContainer)", "class_method_signature": "MappingValidator.validateURL(String fileName, BeanContainer beanContainer)", "testcase": false, "constructor": false, "invocations": ["getClassLoader", "throwMappingException", "loadResource", "getTCCL", "loadResource", "throwMappingException", "openStream", "throwMappingException", "close", "throwMappingException"]}, "repository": {"repo_id": 3250434, "url": "https://github.com/DozerMapper/dozer", "stars": 1630, "created": "1/23/2012 9:11:58 PM +00:00", "updates": "2020-01-23T13:20:05+00:00", "fork": "False", "license": "licensed"}}