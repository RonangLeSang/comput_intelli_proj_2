{"test_class": {"identifier": "ViolationTest", "superclass": "extends FlexPmdTestBase", "interfaces": "", "fields": [{"original_string": "private static final int              BEGINNING_COLUMN = 0;", "modifier": "private static final", "type": "int", "declarator": "BEGINNING_COLUMN = 0", "var_name": "BEGINNING_COLUMN"}, {"original_string": "private static final int              BEGINNING_LINE   = 1;", "modifier": "private static final", "type": "int", "declarator": "BEGINNING_LINE   = 1", "var_name": "BEGINNING_LINE"}, {"original_string": "private static final int              ENDING_COLUMN    = 20;", "modifier": "private static final", "type": "int", "declarator": "ENDING_COLUMN    = 20", "var_name": "ENDING_COLUMN"}, {"original_string": "private static final int              ENDING_LINE      = 10;", "modifier": "private static final", "type": "int", "declarator": "ENDING_LINE      = 10", "var_name": "ENDING_LINE"}, {"original_string": "private static final IThresholdedRule INFO_RULE        = new EmptyRule();", "modifier": "private static final", "type": "IThresholdedRule", "declarator": "INFO_RULE        = new EmptyRule()", "var_name": "INFO_RULE"}, {"original_string": "private static final String           RULE_SET_NAME    = \"RuleSetName\";", "modifier": "private static final", "type": "String", "declarator": "RULE_SET_NAME    = \"RuleSetName\"", "var_name": "RULE_SET_NAME"}, {"original_string": "private static final IFlexRule        WARNING_RULE     = new WarningRule();", "modifier": "private static final", "type": "IFlexRule", "declarator": "WARNING_RULE     = new WarningRule()", "var_name": "WARNING_RULE"}, {"original_string": "private IFlexFile                     abstractRowData;", "modifier": "private", "type": "IFlexFile", "declarator": "abstractRowData", "var_name": "abstractRowData"}, {"original_string": "private IFlexFile                     abstractRowDataWithPackage;", "modifier": "private", "type": "IFlexFile", "declarator": "abstractRowDataWithPackage", "var_name": "abstractRowDataWithPackage"}, {"original_string": "private IFlexFile                     iterationsListMxml;", "modifier": "private", "type": "IFlexFile", "declarator": "iterationsListMxml", "var_name": "iterationsListMxml"}, {"original_string": "private final ViolationPosition       position;", "modifier": "private final", "type": "ViolationPosition", "declarator": "position", "var_name": "position"}], "file": "flex-pmd-ruleset-api/src/test/java/com/adobe/ac/pmd/rules/core/ViolationTest.java"}, "test_case": {"identifier": "testGetDescription", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testGetDescription()\n   {\n      assertEquals( \"emptyMessage\",\n                    new Violation( position, INFO_RULE, null ).getDescription() );\n   }", "signature": "void testGetDescription()", "full_signature": "@Test public void testGetDescription()", "class_method_signature": "ViolationTest.testGetDescription()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getDescription"]}, "focal_class": {"identifier": "Violation", "superclass": "", "interfaces": "implements IFlexViolation", "fields": [{"original_string": "public static final String RULESET_CREATOR_URL = \"http://opensource.adobe.com/svn/opensource/\"\n                                                        + \"flexpmd/bin/flex-pmd-ruleset-creator.html?rule=\";", "modifier": "public static final", "type": "String", "declarator": "RULESET_CREATOR_URL = \"http://opensource.adobe.com/svn/opensource/\"\n                                                        + \"flexpmd/bin/flex-pmd-ruleset-creator.html?rule=\"", "var_name": "RULESET_CREATOR_URL"}, {"original_string": "private final int          beginColumn;", "modifier": "private final", "type": "int", "declarator": "beginColumn", "var_name": "beginColumn"}, {"original_string": "private final int          beginLine;", "modifier": "private final", "type": "int", "declarator": "beginLine", "var_name": "beginLine"}, {"original_string": "private int                endColumn;", "modifier": "private", "type": "int", "declarator": "endColumn", "var_name": "endColumn"}, {"original_string": "private final int          endLine;", "modifier": "private final", "type": "int", "declarator": "endLine", "var_name": "endLine"}, {"original_string": "private final IFlexFile    file;", "modifier": "private final", "type": "IFlexFile", "declarator": "file", "var_name": "file"}, {"original_string": "private final IFlexRule    rule;", "modifier": "private final", "type": "IFlexRule", "declarator": "rule", "var_name": "rule"}, {"original_string": "private String             ruleMessage         = \"\";", "modifier": "private", "type": "String", "declarator": "ruleMessage         = \"\"", "var_name": "ruleMessage"}], "methods": [{"identifier": "Violation", "parameters": "( final ViolationPosition position,\n                     final IFlexRule violatedRule,\n                     final IFlexFile violatedFile )", "modifiers": "public", "return": "", "signature": " Violation( final ViolationPosition position,\n                     final IFlexRule violatedRule,\n                     final IFlexFile violatedFile )", "full_signature": "public  Violation( final ViolationPosition position,\n                     final IFlexRule violatedRule,\n                     final IFlexFile violatedFile )", "class_method_signature": "Violation.Violation( final ViolationPosition position,\n                     final IFlexRule violatedRule,\n                     final IFlexFile violatedFile )", "testcase": false, "constructor": true}, {"identifier": "appendToMessage", "parameters": "( final String messageToAppend )", "modifiers": "public", "return": "void", "signature": "void appendToMessage( final String messageToAppend )", "full_signature": "public void appendToMessage( final String messageToAppend )", "class_method_signature": "Violation.appendToMessage( final String messageToAppend )", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "( final IFlexViolation otherViolation )", "modifiers": "public", "return": "int", "signature": "int compareTo( final IFlexViolation otherViolation )", "full_signature": "public int compareTo( final IFlexViolation otherViolation )", "class_method_signature": "Violation.compareTo( final IFlexViolation otherViolation )", "testcase": false, "constructor": false}, {"identifier": "getBeginColumn", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getBeginColumn()", "full_signature": "public int getBeginColumn()", "class_method_signature": "Violation.getBeginColumn()", "testcase": false, "constructor": false}, {"identifier": "getBeginLine", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getBeginLine()", "full_signature": "public int getBeginLine()", "class_method_signature": "Violation.getBeginLine()", "testcase": false, "constructor": false}, {"identifier": "getClassName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getClassName()", "full_signature": "public String getClassName()", "class_method_signature": "Violation.getClassName()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDescription()", "full_signature": "public String getDescription()", "class_method_signature": "Violation.getDescription()", "testcase": false, "constructor": false}, {"identifier": "getEndColumn", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getEndColumn()", "full_signature": "public int getEndColumn()", "class_method_signature": "Violation.getEndColumn()", "testcase": false, "constructor": false}, {"identifier": "getEndLine", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getEndLine()", "full_signature": "public int getEndLine()", "class_method_signature": "Violation.getEndLine()", "testcase": false, "constructor": false}, {"identifier": "getFilename", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFilename()", "full_signature": "public String getFilename()", "class_method_signature": "Violation.getFilename()", "testcase": false, "constructor": false}, {"identifier": "getMethodName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMethodName()", "full_signature": "public String getMethodName()", "class_method_signature": "Violation.getMethodName()", "testcase": false, "constructor": false}, {"identifier": "getPackageName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPackageName()", "full_signature": "public String getPackageName()", "class_method_signature": "Violation.getPackageName()", "testcase": false, "constructor": false}, {"identifier": "getRule", "parameters": "()", "modifiers": "public", "return": "IFlexRule", "signature": "IFlexRule getRule()", "full_signature": "public IFlexRule getRule()", "class_method_signature": "Violation.getRule()", "testcase": false, "constructor": false}, {"identifier": "getRuleMessage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRuleMessage()", "full_signature": "public String getRuleMessage()", "class_method_signature": "Violation.getRuleMessage()", "testcase": false, "constructor": false}, {"identifier": "getVariableName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getVariableName()", "full_signature": "public String getVariableName()", "class_method_signature": "Violation.getVariableName()", "testcase": false, "constructor": false}, {"identifier": "isSuppressed", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSuppressed()", "full_signature": "public boolean isSuppressed()", "class_method_signature": "Violation.isSuppressed()", "testcase": false, "constructor": false}, {"identifier": "replacePlaceholderInMessage", "parameters": "( final String replacement,\n                                            final int index )", "modifiers": "public", "return": "void", "signature": "void replacePlaceholderInMessage( final String replacement,\n                                            final int index )", "full_signature": "public void replacePlaceholderInMessage( final String replacement,\n                                            final int index )", "class_method_signature": "Violation.replacePlaceholderInMessage( final String replacement,\n                                            final int index )", "testcase": false, "constructor": false}, {"identifier": "setEndColumn", "parameters": "( final int column )", "modifiers": "public", "return": "void", "signature": "void setEndColumn( final int column )", "full_signature": "public void setEndColumn( final int column )", "class_method_signature": "Violation.setEndColumn( final int column )", "testcase": false, "constructor": false}, {"identifier": "toXmlString", "parameters": "( final IFlexFile violatedFile,\n                              final String ruleSetName )", "modifiers": "public", "return": "String", "signature": "String toXmlString( final IFlexFile violatedFile,\n                              final String ruleSetName )", "full_signature": "public String toXmlString( final IFlexFile violatedFile,\n                              final String ruleSetName )", "class_method_signature": "Violation.toXmlString( final IFlexFile violatedFile,\n                              final String ruleSetName )", "testcase": false, "constructor": false}, {"identifier": "getNewLine", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getNewLine()", "full_signature": " String getNewLine()", "class_method_signature": "Violation.getNewLine()", "testcase": false, "constructor": false}, {"identifier": "extractShortName", "parameters": "( final String name )", "modifiers": "private", "return": "String", "signature": "String extractShortName( final String name )", "full_signature": "private String extractShortName( final String name )", "class_method_signature": "Violation.extractShortName( final String name )", "testcase": false, "constructor": false}, {"identifier": "getLinePriority", "parameters": "( final IFlexViolation otherViolation )", "modifiers": "private", "return": "int", "signature": "int getLinePriority( final IFlexViolation otherViolation )", "full_signature": "private int getLinePriority( final IFlexViolation otherViolation )", "class_method_signature": "Violation.getLinePriority( final IFlexViolation otherViolation )", "testcase": false, "constructor": false}, {"identifier": "getPrioriyOrder", "parameters": "( final IFlexViolation otherViolation )", "modifiers": "private", "return": "int", "signature": "int getPrioriyOrder( final IFlexViolation otherViolation )", "full_signature": "private int getPrioriyOrder( final IFlexViolation otherViolation )", "class_method_signature": "Violation.getPrioriyOrder( final IFlexViolation otherViolation )", "testcase": false, "constructor": false}], "file": "flex-pmd-ruleset-api/src/main/java/com/adobe/ac/pmd/rules/core/Violation.java"}, "focal_method": {"identifier": "getDescription", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getDescription()\n   {\n      return ruleMessage;\n   }", "signature": "String getDescription()", "full_signature": "public String getDescription()", "class_method_signature": "Violation.getDescription()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4494450, "url": "https://github.com/PeterHoeche/adobe-flex-pmd", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 9, "size": 8395, "license": "licensed"}}