{"test_class": {"identifier": "MetaDataNodeTest", "superclass": "extends FlexPmdTestBase", "interfaces": "", "fields": [{"original_string": "private final IMetaDataListHolder modelLocator;", "modifier": "private final", "type": "IMetaDataListHolder", "declarator": "modelLocator", "var_name": "modelLocator"}, {"original_string": "private final IMetaDataListHolder unboundMetaData;", "modifier": "private final", "type": "IMetaDataListHolder", "declarator": "unboundMetaData", "var_name": "unboundMetaData"}], "file": "flex-pmd-ruleset-api/src/test/java/com/adobe/ac/pmd/nodes/impl/MetaDataNodeTest.java"}, "test_case": {"identifier": "testGetProperty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testGetProperty()\n   {\n      assertEquals( 1,\n                    unboundMetaData.getMetaData( MetaData.EVENT ).get( 0 ).getProperty( \"name\" ).length );\n      assertEquals( \"dayChange\",\n                    unboundMetaData.getMetaData( MetaData.EVENT ).get( 0 ).getProperty( \"name\" )[ 0 ] );\n      assertEquals( 1,\n                    unboundMetaData.getMetaData( MetaData.EVENT ).get( 0 ).getProperty( \"type\" ).length );\n      assertEquals( \"mx.events.StateChangeEvent\",\n                    unboundMetaData.getMetaData( MetaData.EVENT ).get( 0 ).getProperty( \"type\" )[ 0 ] );\n   }", "signature": "void testGetProperty()", "full_signature": "@Test public void testGetProperty()", "class_method_signature": "MetaDataNodeTest.testGetProperty()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getProperty", "get", "getMetaData", "assertEquals", "getProperty", "get", "getMetaData", "assertEquals", "getProperty", "get", "getMetaData", "assertEquals", "getProperty", "get", "getMetaData"]}, "focal_class": {"identifier": "MetaDataNode", "superclass": "extends AbstractNode", "interfaces": "implements IMetaData", "fields": [{"original_string": "private List< String >          attributeNames;", "modifier": "private", "type": "List< String >", "declarator": "attributeNames", "var_name": "attributeNames"}, {"original_string": "private String                  name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private String                  parameter;", "modifier": "private", "type": "String", "declarator": "parameter", "var_name": "parameter"}, {"original_string": "private Map< String, String[] > parameters;", "modifier": "private", "type": "Map< String, String[] >", "declarator": "parameters", "var_name": "parameters"}], "methods": [{"identifier": "MetaDataNode", "parameters": "( final IParserNode node )", "modifiers": "protected", "return": "", "signature": " MetaDataNode( final IParserNode node )", "full_signature": "protected  MetaDataNode( final IParserNode node )", "class_method_signature": "MetaDataNode.MetaDataNode( final IParserNode node )", "testcase": false, "constructor": true}, {"identifier": "compute", "parameters": "()", "modifiers": "@Override public", "return": "MetaDataNode", "signature": "MetaDataNode compute()", "full_signature": "@Override public MetaDataNode compute()", "class_method_signature": "MetaDataNode.compute()", "testcase": false, "constructor": false}, {"identifier": "getAttributeNames", "parameters": "()", "modifiers": "public", "return": "List< String >", "signature": "List< String > getAttributeNames()", "full_signature": "public List< String > getAttributeNames()", "class_method_signature": "MetaDataNode.getAttributeNames()", "testcase": false, "constructor": false}, {"identifier": "getDefaultValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDefaultValue()", "full_signature": "public String getDefaultValue()", "class_method_signature": "MetaDataNode.getDefaultValue()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "MetaDataNode.getName()", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "( final String property )", "modifiers": "public", "return": "String[]", "signature": "String[] getProperty( final String property )", "full_signature": "public String[] getProperty( final String property )", "class_method_signature": "MetaDataNode.getProperty( final String property )", "testcase": false, "constructor": false}, {"identifier": "getPropertyAsList", "parameters": "( final String property )", "modifiers": "public", "return": "List< String >", "signature": "List< String > getPropertyAsList( final String property )", "full_signature": "public List< String > getPropertyAsList( final String property )", "class_method_signature": "MetaDataNode.getPropertyAsList( final String property )", "testcase": false, "constructor": false}, {"identifier": "computeAttributeNames", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void computeAttributeNames()", "full_signature": "private void computeAttributeNames()", "class_method_signature": "MetaDataNode.computeAttributeNames()", "testcase": false, "constructor": false}, {"identifier": "getPairs", "parameters": "()", "modifiers": "private", "return": "String[]", "signature": "String[] getPairs()", "full_signature": "private String[] getPairs()", "class_method_signature": "MetaDataNode.getPairs()", "testcase": false, "constructor": false}], "file": "flex-pmd-ruleset-api/src/main/java/com/adobe/ac/pmd/nodes/impl/MetaDataNode.java"}, "focal_method": {"identifier": "getProperty", "parameters": "( final String property )", "modifiers": "public", "return": "String[]", "body": "public String[] getProperty( final String property )\n   {\n      return parameters.containsKey( property ) ? parameters.get( property )\n                                               : new String[]\n                                               {};\n   }", "signature": "String[] getProperty( final String property )", "full_signature": "public String[] getProperty( final String property )", "class_method_signature": "MetaDataNode.getProperty( final String property )", "testcase": false, "constructor": false, "invocations": ["containsKey", "get"]}, "repository": {"repo_id": 4494450, "url": "https://github.com/PeterHoeche/adobe-flex-pmd", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 9, "size": 8395, "license": "licensed"}}