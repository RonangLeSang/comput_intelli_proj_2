{"test_class": {"identifier": "SpecificationLoaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "net.bpelunit.framework/src/test/java/net/bpelunit/framework/SpecificationLoaderTest.java"}, "test_case": {"identifier": "test_getNamespaceMap_TopLevel", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test_getNamespaceMap_TopLevel() throws Exception {\n\t\tDocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n\t\tdbf.setNamespaceAware(true);\n\t\tDocumentBuilder db = dbf.newDocumentBuilder();\n\t\tString xml = \"<a xmlns:a=\\\"a\\\" xmlns:b=\\\"b\\\" xmlns=\\\"c\\\"><A xmlns:a=\\\"A\\\" /></a>\";\n\t\tDocument document = db.parse(new InputSource(new StringReader(xml)));\n\t\t\n\t\tMap<String, String> namespaceMap = SpecificationLoader.getNamespaceMap(document.getDocumentElement());\n\t\tassertEquals(\"a\", namespaceMap.get(\"a\"));\n\t\tassertEquals(\"b\", namespaceMap.get(\"b\"));\n\t\tassertEquals(\"c\", namespaceMap.get(\"\"));\n\t}", "signature": "void test_getNamespaceMap_TopLevel()", "full_signature": "@Test public void test_getNamespaceMap_TopLevel()", "class_method_signature": "SpecificationLoaderTest.test_getNamespaceMap_TopLevel()", "testcase": true, "constructor": false, "invocations": ["newInstance", "setNamespaceAware", "newDocumentBuilder", "parse", "getNamespaceMap", "getDocumentElement", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "SpecificationLoader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Logger fLogger;", "modifier": "private", "type": "Logger", "declarator": "fLogger", "var_name": "fLogger"}, {"original_string": "private BPELUnitRunner fRunner;", "modifier": "private", "type": "BPELUnitRunner", "declarator": "fRunner", "var_name": "fRunner"}, {"original_string": "private Map<String, XMLConditionGroup> conditionGroups = new HashMap<String, XMLConditionGroup>();", "modifier": "private", "type": "Map<String, XMLConditionGroup>", "declarator": "conditionGroups = new HashMap<String, XMLConditionGroup>()", "var_name": "conditionGroups"}], "methods": [{"identifier": "SpecificationLoader", "parameters": "(BPELUnitRunner runner)", "modifiers": "public", "return": "", "signature": " SpecificationLoader(BPELUnitRunner runner)", "full_signature": "public  SpecificationLoader(BPELUnitRunner runner)", "class_method_signature": "SpecificationLoader.SpecificationLoader(BPELUnitRunner runner)", "testcase": false, "constructor": true}, {"identifier": "loadTestSuite", "parameters": "(File suite)", "modifiers": "public", "return": "TestSuite", "signature": "TestSuite loadTestSuite(File suite)", "full_signature": "public TestSuite loadTestSuite(File suite)", "class_method_signature": "SpecificationLoader.loadTestSuite(File suite)", "testcase": false, "constructor": false}, {"identifier": "extractConditionGroups", "parameters": "(XMLTestSuiteDocument doc)", "modifiers": "private", "return": "void", "signature": "void extractConditionGroups(XMLTestSuiteDocument doc)", "full_signature": "private void extractConditionGroups(XMLTestSuiteDocument doc)", "class_method_signature": "SpecificationLoader.extractConditionGroups(XMLTestSuiteDocument doc)", "testcase": false, "constructor": false}, {"identifier": "validateTestSuite", "parameters": "(final XMLTestSuiteDocument doc)", "modifiers": "private", "return": "void", "signature": "void validateTestSuite(final XMLTestSuiteDocument doc)", "full_signature": "private void validateTestSuite(final XMLTestSuiteDocument doc)", "class_method_signature": "SpecificationLoader.validateTestSuite(final XMLTestSuiteDocument doc)", "testcase": false, "constructor": false}, {"identifier": "parseSuite", "parameters": "(String testDirectory,\n\t\t\tXMLTestSuiteDocument xmlTestSuiteDocument)", "modifiers": "private", "return": "TestSuite", "signature": "TestSuite parseSuite(String testDirectory,\n\t\t\tXMLTestSuiteDocument xmlTestSuiteDocument)", "full_signature": "private TestSuite parseSuite(String testDirectory,\n\t\t\tXMLTestSuiteDocument xmlTestSuiteDocument)", "class_method_signature": "SpecificationLoader.parseSuite(String testDirectory,\n\t\t\tXMLTestSuiteDocument xmlTestSuiteDocument)", "testcase": false, "constructor": false}, {"identifier": "createHumanPartners", "parameters": "(\n\t\t\tXMLDeploymentSection xmlDeployment, URL baseURL)", "modifiers": "private", "return": "Map<String, HumanPartner>", "signature": "Map<String, HumanPartner> createHumanPartners(\n\t\t\tXMLDeploymentSection xmlDeployment, URL baseURL)", "full_signature": "private Map<String, HumanPartner> createHumanPartners(\n\t\t\tXMLDeploymentSection xmlDeployment, URL baseURL)", "class_method_signature": "SpecificationLoader.createHumanPartners(\n\t\t\tXMLDeploymentSection xmlDeployment, URL baseURL)", "testcase": false, "constructor": false}, {"identifier": "createTestCases", "parameters": "(String testDirectory,\n\t\t\tXMLTestSuiteDocument xmlTestSuiteDocument,\n\t\t\tXMLTestSuite xmlTestSuite, Map<String, Partner> suitePartners,\n\t\t\tMap<String, HumanPartner> suiteHumanPartners, Partner suiteClient,\n\t\t\tTestSuite suite)", "modifiers": "private", "return": "void", "signature": "void createTestCases(String testDirectory,\n\t\t\tXMLTestSuiteDocument xmlTestSuiteDocument,\n\t\t\tXMLTestSuite xmlTestSuite, Map<String, Partner> suitePartners,\n\t\t\tMap<String, HumanPartner> suiteHumanPartners, Partner suiteClient,\n\t\t\tTestSuite suite)", "full_signature": "private void createTestCases(String testDirectory,\n\t\t\tXMLTestSuiteDocument xmlTestSuiteDocument,\n\t\t\tXMLTestSuite xmlTestSuite, Map<String, Partner> suitePartners,\n\t\t\tMap<String, HumanPartner> suiteHumanPartners, Partner suiteClient,\n\t\t\tTestSuite suite)", "class_method_signature": "SpecificationLoader.createTestCases(String testDirectory,\n\t\t\tXMLTestSuiteDocument xmlTestSuiteDocument,\n\t\t\tXMLTestSuite xmlTestSuite, Map<String, Partner> suitePartners,\n\t\t\tMap<String, HumanPartner> suiteHumanPartners, Partner suiteClient,\n\t\t\tTestSuite suite)", "testcase": false, "constructor": false}, {"identifier": "createTestCase", "parameters": "(String testDirectory,\n\t\t\tXMLTestSuiteDocument xmlTestSuiteDocument,\n\t\t\tXMLTestSuite xmlTestSuite, Map<String, Partner> suitePartners,\n\t\t\tMap<String, HumanPartner> suiteHumanPartners, Partner suiteClient,\n\t\t\tTestSuite suite, int currentNumber, XMLTestCase xmlTestCase)", "modifiers": "private", "return": "void", "signature": "void createTestCase(String testDirectory,\n\t\t\tXMLTestSuiteDocument xmlTestSuiteDocument,\n\t\t\tXMLTestSuite xmlTestSuite, Map<String, Partner> suitePartners,\n\t\t\tMap<String, HumanPartner> suiteHumanPartners, Partner suiteClient,\n\t\t\tTestSuite suite, int currentNumber, XMLTestCase xmlTestCase)", "full_signature": "private void createTestCase(String testDirectory,\n\t\t\tXMLTestSuiteDocument xmlTestSuiteDocument,\n\t\t\tXMLTestSuite xmlTestSuite, Map<String, Partner> suitePartners,\n\t\t\tMap<String, HumanPartner> suiteHumanPartners, Partner suiteClient,\n\t\t\tTestSuite suite, int currentNumber, XMLTestCase xmlTestCase)", "class_method_signature": "SpecificationLoader.createTestCase(String testDirectory,\n\t\t\tXMLTestSuiteDocument xmlTestSuiteDocument,\n\t\t\tXMLTestSuite xmlTestSuite, Map<String, Partner> suitePartners,\n\t\t\tMap<String, HumanPartner> suiteHumanPartners, Partner suiteClient,\n\t\t\tTestSuite suite, int currentNumber, XMLTestCase xmlTestCase)", "testcase": false, "constructor": false}, {"identifier": "getHumanReadableTestCaseName", "parameters": "(String xmlTestCaseName,\n\t\t\tint rounds, IDataSource dataSource, int iRow, int iRound)", "modifiers": "private", "return": "String", "signature": "String getHumanReadableTestCaseName(String xmlTestCaseName,\n\t\t\tint rounds, IDataSource dataSource, int iRow, int iRound)", "full_signature": "private String getHumanReadableTestCaseName(String xmlTestCaseName,\n\t\t\tint rounds, IDataSource dataSource, int iRow, int iRound)", "class_method_signature": "SpecificationLoader.getHumanReadableTestCaseName(String xmlTestCaseName,\n\t\t\tint rounds, IDataSource dataSource, int iRow, int iRound)", "testcase": false, "constructor": false}, {"identifier": "getNumberOfRounds", "parameters": "(boolean isVary, int rounds)", "modifiers": "private", "return": "int", "signature": "int getNumberOfRounds(boolean isVary, int rounds)", "full_signature": "private int getNumberOfRounds(boolean isVary, int rounds)", "class_method_signature": "SpecificationLoader.getNumberOfRounds(boolean isVary, int rounds)", "testcase": false, "constructor": false}, {"identifier": "getNumberOfRows", "parameters": "(IDataSource dataSource)", "modifiers": "private", "return": "int", "signature": "int getNumberOfRows(IDataSource dataSource)", "full_signature": "private int getNumberOfRows(IDataSource dataSource)", "class_method_signature": "SpecificationLoader.getNumberOfRows(IDataSource dataSource)", "testcase": false, "constructor": false}, {"identifier": "getTestCaseName", "parameters": "(int currentNumber, XMLTestCase xmlTestCase)", "modifiers": "private", "return": "String", "signature": "String getTestCaseName(int currentNumber, XMLTestCase xmlTestCase)", "full_signature": "private String getTestCaseName(int currentNumber, XMLTestCase xmlTestCase)", "class_method_signature": "SpecificationLoader.getTestCaseName(int currentNumber, XMLTestCase xmlTestCase)", "testcase": false, "constructor": false}, {"identifier": "readDataSource", "parameters": "(String testDirectory,\n\t\t\tXMLTestSuite xmlTestSuite, XMLTestCase xmlTestCase)", "modifiers": "private", "return": "IDataSource", "signature": "IDataSource readDataSource(String testDirectory,\n\t\t\tXMLTestSuite xmlTestSuite, XMLTestCase xmlTestCase)", "full_signature": "private IDataSource readDataSource(String testDirectory,\n\t\t\tXMLTestSuite xmlTestSuite, XMLTestCase xmlTestCase)", "class_method_signature": "SpecificationLoader.readDataSource(String testDirectory,\n\t\t\tXMLTestSuite xmlTestSuite, XMLTestCase xmlTestCase)", "testcase": false, "constructor": false}, {"identifier": "createPartners", "parameters": "(String testDirectory, URL suiteBaseURL,\n\t\t\tXMLDeploymentSection xmlDeployment,\n\t\t\tMap<String, Partner> suitePartners)", "modifiers": "private", "return": "void", "signature": "void createPartners(String testDirectory, URL suiteBaseURL,\n\t\t\tXMLDeploymentSection xmlDeployment,\n\t\t\tMap<String, Partner> suitePartners)", "full_signature": "private void createPartners(String testDirectory, URL suiteBaseURL,\n\t\t\tXMLDeploymentSection xmlDeployment,\n\t\t\tMap<String, Partner> suitePartners)", "class_method_signature": "SpecificationLoader.createPartners(String testDirectory, URL suiteBaseURL,\n\t\t\tXMLDeploymentSection xmlDeployment,\n\t\t\tMap<String, Partner> suitePartners)", "testcase": false, "constructor": false}, {"identifier": "loadWsdlDefinition", "parameters": "(String baseDir,\n\t\t\tString wsdlFileName, String partnerName)", "modifiers": "public static", "return": "Definition", "signature": "Definition loadWsdlDefinition(String baseDir,\n\t\t\tString wsdlFileName, String partnerName)", "full_signature": "public static Definition loadWsdlDefinition(String baseDir,\n\t\t\tString wsdlFileName, String partnerName)", "class_method_signature": "SpecificationLoader.loadWsdlDefinition(String baseDir,\n\t\t\tString wsdlFileName, String partnerName)", "testcase": false, "constructor": false}, {"identifier": "loadWsdlDefinition", "parameters": "(String wsdlFileName,\n\t\t\tString partnerName)", "modifiers": "public static", "return": "Definition", "signature": "Definition loadWsdlDefinition(String wsdlFileName,\n\t\t\tString partnerName)", "full_signature": "public static Definition loadWsdlDefinition(String wsdlFileName,\n\t\t\tString partnerName)", "class_method_signature": "SpecificationLoader.loadWsdlDefinition(String wsdlFileName,\n\t\t\tString partnerName)", "testcase": false, "constructor": false}, {"identifier": "createProcessUnderTest", "parameters": "(String testDirectory,\n\t\t\tURL suiteBaseURL, Map<String, Partner> suitePartners,\n\t\t\tXMLPUTDeploymentInformation xmlPut)", "modifiers": "private", "return": "ProcessUnderTest", "signature": "ProcessUnderTest createProcessUnderTest(String testDirectory,\n\t\t\tURL suiteBaseURL, Map<String, Partner> suitePartners,\n\t\t\tXMLPUTDeploymentInformation xmlPut)", "full_signature": "private ProcessUnderTest createProcessUnderTest(String testDirectory,\n\t\t\tURL suiteBaseURL, Map<String, Partner> suitePartners,\n\t\t\tXMLPUTDeploymentInformation xmlPut)", "class_method_signature": "SpecificationLoader.createProcessUnderTest(String testDirectory,\n\t\t\tURL suiteBaseURL, Map<String, Partner> suitePartners,\n\t\t\tXMLPUTDeploymentInformation xmlPut)", "testcase": false, "constructor": false}, {"identifier": "getBaseURL", "parameters": "(XMLTestSuite xmlTestSuite)", "modifiers": "private", "return": "URL", "signature": "URL getBaseURL(XMLTestSuite xmlTestSuite)", "full_signature": "private URL getBaseURL(XMLTestSuite xmlTestSuite)", "class_method_signature": "SpecificationLoader.getBaseURL(XMLTestSuite xmlTestSuite)", "testcase": false, "constructor": false}, {"identifier": "computeNumberOfRounds", "parameters": "(\n\t\t\tXMLTestSuiteDocument xmlTestSuiteDocument, boolean isVary)", "modifiers": "private", "return": "int", "signature": "int computeNumberOfRounds(\n\t\t\tXMLTestSuiteDocument xmlTestSuiteDocument, boolean isVary)", "full_signature": "private int computeNumberOfRounds(\n\t\t\tXMLTestSuiteDocument xmlTestSuiteDocument, boolean isVary)", "class_method_signature": "SpecificationLoader.computeNumberOfRounds(\n\t\t\tXMLTestSuiteDocument xmlTestSuiteDocument, boolean isVary)", "testcase": false, "constructor": false}, {"identifier": "readTestSuiteSetUpBlock", "parameters": "(TestSuite testSuite,\n\t\t\tXMLTestSuite xmlTestSuite)", "modifiers": "private", "return": "void", "signature": "void readTestSuiteSetUpBlock(TestSuite testSuite,\n\t\t\tXMLTestSuite xmlTestSuite)", "full_signature": "private void readTestSuiteSetUpBlock(TestSuite testSuite,\n\t\t\tXMLTestSuite xmlTestSuite)", "class_method_signature": "SpecificationLoader.readTestSuiteSetUpBlock(TestSuite testSuite,\n\t\t\tXMLTestSuite xmlTestSuite)", "testcase": false, "constructor": false}, {"identifier": "createTestCase", "parameters": "(Map<String, Partner> suitePartners,\n\t\t\tMap<String, HumanPartner> suiteHumanPartners, Partner suiteClient,\n\t\t\tTestSuite suite, XMLTestCase xmlTestCase, String xmlTestCaseName,\n\t\t\tint round, String testDirectory)", "modifiers": "private", "return": "TestCase", "signature": "TestCase createTestCase(Map<String, Partner> suitePartners,\n\t\t\tMap<String, HumanPartner> suiteHumanPartners, Partner suiteClient,\n\t\t\tTestSuite suite, XMLTestCase xmlTestCase, String xmlTestCaseName,\n\t\t\tint round, String testDirectory)", "full_signature": "private TestCase createTestCase(Map<String, Partner> suitePartners,\n\t\t\tMap<String, HumanPartner> suiteHumanPartners, Partner suiteClient,\n\t\t\tTestSuite suite, XMLTestCase xmlTestCase, String xmlTestCaseName,\n\t\t\tint round, String testDirectory)", "class_method_signature": "SpecificationLoader.createTestCase(Map<String, Partner> suitePartners,\n\t\t\tMap<String, HumanPartner> suiteHumanPartners, Partner suiteClient,\n\t\t\tTestSuite suite, XMLTestCase xmlTestCase, String xmlTestCaseName,\n\t\t\tint round, String testDirectory)", "testcase": false, "constructor": false}, {"identifier": "readHumanPartners", "parameters": "(\n\t\t\tMap<String, HumanPartner> suiteHumanPartners,\n\t\t\tXMLTestCase xmlTestCase, String testDirectory, TestCase test)", "modifiers": "private", "return": "void", "signature": "void readHumanPartners(\n\t\t\tMap<String, HumanPartner> suiteHumanPartners,\n\t\t\tXMLTestCase xmlTestCase, String testDirectory, TestCase test)", "full_signature": "private void readHumanPartners(\n\t\t\tMap<String, HumanPartner> suiteHumanPartners,\n\t\t\tXMLTestCase xmlTestCase, String testDirectory, TestCase test)", "class_method_signature": "SpecificationLoader.readHumanPartners(\n\t\t\tMap<String, HumanPartner> suiteHumanPartners,\n\t\t\tXMLTestCase xmlTestCase, String testDirectory, TestCase test)", "testcase": false, "constructor": false}, {"identifier": "readHumanPartner", "parameters": "(Map<String, HumanPartner> suiteHumanPartners,\n\t\t\tString testDirectory, TestCase test,\n\t\t\tXMLHumanPartnerTrack xmlHumanPartnerTrack)", "modifiers": "private", "return": "void", "signature": "void readHumanPartner(Map<String, HumanPartner> suiteHumanPartners,\n\t\t\tString testDirectory, TestCase test,\n\t\t\tXMLHumanPartnerTrack xmlHumanPartnerTrack)", "full_signature": "private void readHumanPartner(Map<String, HumanPartner> suiteHumanPartners,\n\t\t\tString testDirectory, TestCase test,\n\t\t\tXMLHumanPartnerTrack xmlHumanPartnerTrack)", "class_method_signature": "SpecificationLoader.readHumanPartner(Map<String, HumanPartner> suiteHumanPartners,\n\t\t\tString testDirectory, TestCase test,\n\t\t\tXMLHumanPartnerTrack xmlHumanPartnerTrack)", "testcase": false, "constructor": false}, {"identifier": "readActivities", "parameters": "(PartnerTrack pTrack,\n\t\t\tXMLHumanPartnerTrack xmlHumanPartnerTrack, String testDirectory)", "modifiers": "private", "return": "void", "signature": "void readActivities(PartnerTrack pTrack,\n\t\t\tXMLHumanPartnerTrack xmlHumanPartnerTrack, String testDirectory)", "full_signature": "private void readActivities(PartnerTrack pTrack,\n\t\t\tXMLHumanPartnerTrack xmlHumanPartnerTrack, String testDirectory)", "class_method_signature": "SpecificationLoader.readActivities(PartnerTrack pTrack,\n\t\t\tXMLHumanPartnerTrack xmlHumanPartnerTrack, String testDirectory)", "testcase": false, "constructor": false}, {"identifier": "createCompleteHumanTaskActivity", "parameters": "(\n\t\t\tPartnerTrack pTrack, String testDirectory,\n\t\t\tXMLCompleteHumanTaskActivity xmlActivity)", "modifiers": "private", "return": "CompleteHumanTask", "signature": "CompleteHumanTask createCompleteHumanTaskActivity(\n\t\t\tPartnerTrack pTrack, String testDirectory,\n\t\t\tXMLCompleteHumanTaskActivity xmlActivity)", "full_signature": "private CompleteHumanTask createCompleteHumanTaskActivity(\n\t\t\tPartnerTrack pTrack, String testDirectory,\n\t\t\tXMLCompleteHumanTaskActivity xmlActivity)", "class_method_signature": "SpecificationLoader.createCompleteHumanTaskActivity(\n\t\t\tPartnerTrack pTrack, String testDirectory,\n\t\t\tXMLCompleteHumanTaskActivity xmlActivity)", "testcase": false, "constructor": false}, {"identifier": "readPartners", "parameters": "(Map<String, Partner> suitePartners,\n\t\t\tXMLTestCase xmlTestCase, int round, String testDirectory,\n\t\t\tTestCase test)", "modifiers": "private", "return": "void", "signature": "void readPartners(Map<String, Partner> suitePartners,\n\t\t\tXMLTestCase xmlTestCase, int round, String testDirectory,\n\t\t\tTestCase test)", "full_signature": "private void readPartners(Map<String, Partner> suitePartners,\n\t\t\tXMLTestCase xmlTestCase, int round, String testDirectory,\n\t\t\tTestCase test)", "class_method_signature": "SpecificationLoader.readPartners(Map<String, Partner> suitePartners,\n\t\t\tXMLTestCase xmlTestCase, int round, String testDirectory,\n\t\t\tTestCase test)", "testcase": false, "constructor": false}, {"identifier": "readPartner", "parameters": "(Map<String, Partner> suitePartners,\n\t\t\tXMLTestCase xmlTestCase, int round, String testDirectory,\n\t\t\tTestCase test, XMLPartnerTrack xmlPartnerTrack)", "modifiers": "private", "return": "void", "signature": "void readPartner(Map<String, Partner> suitePartners,\n\t\t\tXMLTestCase xmlTestCase, int round, String testDirectory,\n\t\t\tTestCase test, XMLPartnerTrack xmlPartnerTrack)", "full_signature": "private void readPartner(Map<String, Partner> suitePartners,\n\t\t\tXMLTestCase xmlTestCase, int round, String testDirectory,\n\t\t\tTestCase test, XMLPartnerTrack xmlPartnerTrack)", "class_method_signature": "SpecificationLoader.readPartner(Map<String, Partner> suitePartners,\n\t\t\tXMLTestCase xmlTestCase, int round, String testDirectory,\n\t\t\tTestCase test, XMLPartnerTrack xmlPartnerTrack)", "testcase": false, "constructor": false}, {"identifier": "readClientTrack", "parameters": "(Partner suiteClient, XMLTestCase xmlTestCase,\n\t\t\tint round, String testDirectory, TestCase test)", "modifiers": "private", "return": "void", "signature": "void readClientTrack(Partner suiteClient, XMLTestCase xmlTestCase,\n\t\t\tint round, String testDirectory, TestCase test)", "full_signature": "private void readClientTrack(Partner suiteClient, XMLTestCase xmlTestCase,\n\t\t\tint round, String testDirectory, TestCase test)", "class_method_signature": "SpecificationLoader.readClientTrack(Partner suiteClient, XMLTestCase xmlTestCase,\n\t\t\tint round, String testDirectory, TestCase test)", "testcase": false, "constructor": false}, {"identifier": "readMetaData", "parameters": "(XMLTestCase xmlTestCase, TestCase test)", "modifiers": "private", "return": "void", "signature": "void readMetaData(XMLTestCase xmlTestCase, TestCase test)", "full_signature": "private void readMetaData(XMLTestCase xmlTestCase, TestCase test)", "class_method_signature": "SpecificationLoader.readMetaData(XMLTestCase xmlTestCase, TestCase test)", "testcase": false, "constructor": false}, {"identifier": "readTestCaseSetUpBlock", "parameters": "(TestCase test, XMLTestCase xmlTestCase)", "modifiers": "private", "return": "void", "signature": "void readTestCaseSetUpBlock(TestCase test, XMLTestCase xmlTestCase)", "full_signature": "private void readTestCaseSetUpBlock(TestCase test, XMLTestCase xmlTestCase)", "class_method_signature": "SpecificationLoader.readTestCaseSetUpBlock(TestCase test, XMLTestCase xmlTestCase)", "testcase": false, "constructor": false}, {"identifier": "readActivities", "parameters": "(PartnerTrack partnerTrack,\n\t\t\tXMLTestCase xmlTestCase, XMLTrack xmlTrack, int round,\n\t\t\tString testDirectory)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "void", "signature": "void readActivities(PartnerTrack partnerTrack,\n\t\t\tXMLTestCase xmlTestCase, XMLTrack xmlTrack, int round,\n\t\t\tString testDirectory)", "full_signature": "@SuppressWarnings(\"unchecked\") private void readActivities(PartnerTrack partnerTrack,\n\t\t\tXMLTestCase xmlTestCase, XMLTrack xmlTrack, int round,\n\t\t\tString testDirectory)", "class_method_signature": "SpecificationLoader.readActivities(PartnerTrack partnerTrack,\n\t\t\tXMLTestCase xmlTestCase, XMLTrack xmlTrack, int round,\n\t\t\tString testDirectory)", "testcase": false, "constructor": false}, {"identifier": "readTwoWayActivity", "parameters": "(PartnerTrack partnerTrack, int round,\n\t\t\tString testDirectory, List<Activity> activities, XMLActivity event,\n\t\t\tXMLTwoWayActivity op)", "modifiers": "private", "return": "Activity", "signature": "Activity readTwoWayActivity(PartnerTrack partnerTrack, int round,\n\t\t\tString testDirectory, List<Activity> activities, XMLActivity event,\n\t\t\tXMLTwoWayActivity op)", "full_signature": "private Activity readTwoWayActivity(PartnerTrack partnerTrack, int round,\n\t\t\tString testDirectory, List<Activity> activities, XMLActivity event,\n\t\t\tXMLTwoWayActivity op)", "class_method_signature": "SpecificationLoader.readTwoWayActivity(PartnerTrack partnerTrack, int round,\n\t\t\tString testDirectory, List<Activity> activities, XMLActivity event,\n\t\t\tXMLTwoWayActivity op)", "testcase": false, "constructor": false}, {"identifier": "readSend", "parameters": "(PartnerTrack partnerTrack, int round,\n\t\t\tString testDirectory, List<Activity> activities, XMLActivity event,\n\t\t\tXMLSendOnlyActivity xmlSend)", "modifiers": "private", "return": "Activity", "signature": "Activity readSend(PartnerTrack partnerTrack, int round,\n\t\t\tString testDirectory, List<Activity> activities, XMLActivity event,\n\t\t\tXMLSendOnlyActivity xmlSend)", "full_signature": "private Activity readSend(PartnerTrack partnerTrack, int round,\n\t\t\tString testDirectory, List<Activity> activities, XMLActivity event,\n\t\t\tXMLSendOnlyActivity xmlSend)", "class_method_signature": "SpecificationLoader.readSend(PartnerTrack partnerTrack, int round,\n\t\t\tString testDirectory, List<Activity> activities, XMLActivity event,\n\t\t\tXMLSendOnlyActivity xmlSend)", "testcase": false, "constructor": false}, {"identifier": "readReceive", "parameters": "(PartnerTrack partnerTrack,\n\t\t\tList<Activity> activities, XMLActivity event,\n\t\t\tXMLReceiveActivity xmlReceive)", "modifiers": "private", "return": "Activity", "signature": "Activity readReceive(PartnerTrack partnerTrack,\n\t\t\tList<Activity> activities, XMLActivity event,\n\t\t\tXMLReceiveActivity xmlReceive)", "full_signature": "private Activity readReceive(PartnerTrack partnerTrack,\n\t\t\tList<Activity> activities, XMLActivity event,\n\t\t\tXMLReceiveActivity xmlReceive)", "class_method_signature": "SpecificationLoader.readReceive(PartnerTrack partnerTrack,\n\t\t\tList<Activity> activities, XMLActivity event,\n\t\t\tXMLReceiveActivity xmlReceive)", "testcase": false, "constructor": false}, {"identifier": "readWait", "parameters": "(PartnerTrack partnerTrack, List<Activity> activities,\n\t\t\tXMLActivity event, XMLWaitActivity xmlWait)", "modifiers": "private", "return": "Activity", "signature": "Activity readWait(PartnerTrack partnerTrack, List<Activity> activities,\n\t\t\tXMLActivity event, XMLWaitActivity xmlWait)", "full_signature": "private Activity readWait(PartnerTrack partnerTrack, List<Activity> activities,\n\t\t\tXMLActivity event, XMLWaitActivity xmlWait)", "class_method_signature": "SpecificationLoader.readWait(PartnerTrack partnerTrack, List<Activity> activities,\n\t\t\tXMLActivity event, XMLWaitActivity xmlWait)", "testcase": false, "constructor": false}, {"identifier": "getPartnerTrackName", "parameters": "(XMLTrack xmlTrack)", "modifiers": "private", "return": "String", "signature": "String getPartnerTrackName(XMLTrack xmlTrack)", "full_signature": "private String getPartnerTrackName(XMLTrack xmlTrack)", "class_method_signature": "SpecificationLoader.getPartnerTrackName(XMLTrack xmlTrack)", "testcase": false, "constructor": false}, {"identifier": "createSendReceiveSynchronous", "parameters": "(\n\t\t\tXMLTwoWayActivity xmlSendReceiveSync, PartnerTrack partnerTrack,\n\t\t\tint round, String testDirectory)", "modifiers": "private", "return": "Activity", "signature": "Activity createSendReceiveSynchronous(\n\t\t\tXMLTwoWayActivity xmlSendReceiveSync, PartnerTrack partnerTrack,\n\t\t\tint round, String testDirectory)", "full_signature": "private Activity createSendReceiveSynchronous(\n\t\t\tXMLTwoWayActivity xmlSendReceiveSync, PartnerTrack partnerTrack,\n\t\t\tint round, String testDirectory)", "class_method_signature": "SpecificationLoader.createSendReceiveSynchronous(\n\t\t\tXMLTwoWayActivity xmlSendReceiveSync, PartnerTrack partnerTrack,\n\t\t\tint round, String testDirectory)", "testcase": false, "constructor": false}, {"identifier": "createReceiveSendSynchronous", "parameters": "(\n\t\t\tXMLTwoWayActivity xmlReceiveSendSync, PartnerTrack partnerTrack,\n\t\t\tint round, String testDirectory)", "modifiers": "private", "return": "Activity", "signature": "Activity createReceiveSendSynchronous(\n\t\t\tXMLTwoWayActivity xmlReceiveSendSync, PartnerTrack partnerTrack,\n\t\t\tint round, String testDirectory)", "full_signature": "private Activity createReceiveSendSynchronous(\n\t\t\tXMLTwoWayActivity xmlReceiveSendSync, PartnerTrack partnerTrack,\n\t\t\tint round, String testDirectory)", "class_method_signature": "SpecificationLoader.createReceiveSendSynchronous(\n\t\t\tXMLTwoWayActivity xmlReceiveSendSync, PartnerTrack partnerTrack,\n\t\t\tint round, String testDirectory)", "testcase": false, "constructor": false}, {"identifier": "fillAsyncTwoWay", "parameters": "(TwoWayAsyncActivity twoWayActivity,\n\t\t\tXMLTwoWayActivity xmlAsyncTwoWay, int round, String testDirectory)", "modifiers": "private", "return": "void", "signature": "void fillAsyncTwoWay(TwoWayAsyncActivity twoWayActivity,\n\t\t\tXMLTwoWayActivity xmlAsyncTwoWay, int round, String testDirectory)", "full_signature": "private void fillAsyncTwoWay(TwoWayAsyncActivity twoWayActivity,\n\t\t\tXMLTwoWayActivity xmlAsyncTwoWay, int round, String testDirectory)", "class_method_signature": "SpecificationLoader.fillAsyncTwoWay(TwoWayAsyncActivity twoWayActivity,\n\t\t\tXMLTwoWayActivity xmlAsyncTwoWay, int round, String testDirectory)", "testcase": false, "constructor": false}, {"identifier": "createSendSpecificationFromStandalone", "parameters": "(\n\t\t\tActivity parentActivity, XMLSendActivity xmlSend,\n\t\t\tSOAPOperationDirectionIdentifier direction, int round,\n\t\t\tString testDirectory)", "modifiers": "private", "return": "SendDataSpecification", "signature": "SendDataSpecification createSendSpecificationFromStandalone(\n\t\t\tActivity parentActivity, XMLSendActivity xmlSend,\n\t\t\tSOAPOperationDirectionIdentifier direction, int round,\n\t\t\tString testDirectory)", "full_signature": "private SendDataSpecification createSendSpecificationFromStandalone(\n\t\t\tActivity parentActivity, XMLSendActivity xmlSend,\n\t\t\tSOAPOperationDirectionIdentifier direction, int round,\n\t\t\tString testDirectory)", "class_method_signature": "SpecificationLoader.createSendSpecificationFromStandalone(\n\t\t\tActivity parentActivity, XMLSendActivity xmlSend,\n\t\t\tSOAPOperationDirectionIdentifier direction, int round,\n\t\t\tString testDirectory)", "testcase": false, "constructor": false}, {"identifier": "createSendSpecificationFromParent", "parameters": "(\n\t\t\tActivity parentActivity, XMLTwoWayActivity xmlSendReceiveSync,\n\t\t\tXMLSendActivity xmlSend,\n\t\t\tSOAPOperationDirectionIdentifier direction, int round,\n\t\t\tString testDirectory)", "modifiers": "private", "return": "SendDataSpecification", "signature": "SendDataSpecification createSendSpecificationFromParent(\n\t\t\tActivity parentActivity, XMLTwoWayActivity xmlSendReceiveSync,\n\t\t\tXMLSendActivity xmlSend,\n\t\t\tSOAPOperationDirectionIdentifier direction, int round,\n\t\t\tString testDirectory)", "full_signature": "private SendDataSpecification createSendSpecificationFromParent(\n\t\t\tActivity parentActivity, XMLTwoWayActivity xmlSendReceiveSync,\n\t\t\tXMLSendActivity xmlSend,\n\t\t\tSOAPOperationDirectionIdentifier direction, int round,\n\t\t\tString testDirectory)", "class_method_signature": "SpecificationLoader.createSendSpecificationFromParent(\n\t\t\tActivity parentActivity, XMLTwoWayActivity xmlSendReceiveSync,\n\t\t\tXMLSendActivity xmlSend,\n\t\t\tSOAPOperationDirectionIdentifier direction, int round,\n\t\t\tString testDirectory)", "testcase": false, "constructor": false}, {"identifier": "createSendSpecification", "parameters": "(Activity activity,\n\t\t\tSOAPOperationCallIdentifier operation, XMLSendActivity xmlSend,\n\t\t\tint round, String testDirectory)", "modifiers": "private", "return": "SendDataSpecification", "signature": "SendDataSpecification createSendSpecification(Activity activity,\n\t\t\tSOAPOperationCallIdentifier operation, XMLSendActivity xmlSend,\n\t\t\tint round, String testDirectory)", "full_signature": "private SendDataSpecification createSendSpecification(Activity activity,\n\t\t\tSOAPOperationCallIdentifier operation, XMLSendActivity xmlSend,\n\t\t\tint round, String testDirectory)", "class_method_signature": "SpecificationLoader.createSendSpecification(Activity activity,\n\t\t\tSOAPOperationCallIdentifier operation, XMLSendActivity xmlSend,\n\t\t\tint round, String testDirectory)", "testcase": false, "constructor": false}, {"identifier": "getTemplateText", "parameters": "(String testDirectory,\n\t\t\tfinal XMLAnyElement xmlTemplate)", "modifiers": "private", "return": "String", "signature": "String getTemplateText(String testDirectory,\n\t\t\tfinal XMLAnyElement xmlTemplate)", "full_signature": "private String getTemplateText(String testDirectory,\n\t\t\tfinal XMLAnyElement xmlTemplate)", "class_method_signature": "SpecificationLoader.getTemplateText(String testDirectory,\n\t\t\tfinal XMLAnyElement xmlTemplate)", "testcase": false, "constructor": false}, {"identifier": "wrapWithDummyElement", "parameters": "(final String text)", "modifiers": "private", "return": "String", "signature": "String wrapWithDummyElement(final String text)", "full_signature": "private String wrapWithDummyElement(final String text)", "class_method_signature": "SpecificationLoader.wrapWithDummyElement(final String text)", "testcase": false, "constructor": false}, {"identifier": "hasChildElements", "parameters": "(XmlObject xmlObject)", "modifiers": "private", "return": "boolean", "signature": "boolean hasChildElements(XmlObject xmlObject)", "full_signature": "private boolean hasChildElements(XmlObject xmlObject)", "class_method_signature": "SpecificationLoader.hasChildElements(XmlObject xmlObject)", "testcase": false, "constructor": false}, {"identifier": "getLiteralDataForSend", "parameters": "(XMLAnyElement dataInSend, String testDirectory)", "modifiers": "private", "return": "Element", "signature": "Element getLiteralDataForSend(XMLAnyElement dataInSend, String testDirectory)", "full_signature": "private Element getLiteralDataForSend(XMLAnyElement dataInSend, String testDirectory)", "class_method_signature": "SpecificationLoader.getLiteralDataForSend(XMLAnyElement dataInSend, String testDirectory)", "testcase": false, "constructor": false}, {"identifier": "copyAsRootWithNamespaces", "parameters": "(XmlObject xmlData)", "modifiers": "private", "return": "Element", "signature": "Element copyAsRootWithNamespaces(XmlObject xmlData)", "full_signature": "private Element copyAsRootWithNamespaces(XmlObject xmlData)", "class_method_signature": "SpecificationLoader.copyAsRootWithNamespaces(XmlObject xmlData)", "testcase": false, "constructor": false}, {"identifier": "createReceiveSpecificationStandalone", "parameters": "(\n\t\t\tActivity parentActivity, XMLReceiveActivity xmlReceive,\n\t\t\tSOAPOperationDirectionIdentifier direction)", "modifiers": "private", "return": "ReceiveDataSpecification", "signature": "ReceiveDataSpecification createReceiveSpecificationStandalone(\n\t\t\tActivity parentActivity, XMLReceiveActivity xmlReceive,\n\t\t\tSOAPOperationDirectionIdentifier direction)", "full_signature": "private ReceiveDataSpecification createReceiveSpecificationStandalone(\n\t\t\tActivity parentActivity, XMLReceiveActivity xmlReceive,\n\t\t\tSOAPOperationDirectionIdentifier direction)", "class_method_signature": "SpecificationLoader.createReceiveSpecificationStandalone(\n\t\t\tActivity parentActivity, XMLReceiveActivity xmlReceive,\n\t\t\tSOAPOperationDirectionIdentifier direction)", "testcase": false, "constructor": false}, {"identifier": "createReceiveSpecificationFromParent", "parameters": "(\n\t\t\tActivity parentActivity, XMLTwoWayActivity xmlReceiveSendSync,\n\t\t\tXMLReceiveActivity xmlReceive,\n\t\t\tSOAPOperationDirectionIdentifier direction)", "modifiers": "private", "return": "ReceiveDataSpecification", "signature": "ReceiveDataSpecification createReceiveSpecificationFromParent(\n\t\t\tActivity parentActivity, XMLTwoWayActivity xmlReceiveSendSync,\n\t\t\tXMLReceiveActivity xmlReceive,\n\t\t\tSOAPOperationDirectionIdentifier direction)", "full_signature": "private ReceiveDataSpecification createReceiveSpecificationFromParent(\n\t\t\tActivity parentActivity, XMLTwoWayActivity xmlReceiveSendSync,\n\t\t\tXMLReceiveActivity xmlReceive,\n\t\t\tSOAPOperationDirectionIdentifier direction)", "class_method_signature": "SpecificationLoader.createReceiveSpecificationFromParent(\n\t\t\tActivity parentActivity, XMLTwoWayActivity xmlReceiveSendSync,\n\t\t\tXMLReceiveActivity xmlReceive,\n\t\t\tSOAPOperationDirectionIdentifier direction)", "testcase": false, "constructor": false}, {"identifier": "createReceiveSpecification", "parameters": "(\n\t\t\tActivity activity, SOAPOperationCallIdentifier operation,\n\t\t\tXMLReceiveActivity xmlReceive)", "modifiers": "private", "return": "ReceiveDataSpecification", "signature": "ReceiveDataSpecification createReceiveSpecification(\n\t\t\tActivity activity, SOAPOperationCallIdentifier operation,\n\t\t\tXMLReceiveActivity xmlReceive)", "full_signature": "private ReceiveDataSpecification createReceiveSpecification(\n\t\t\tActivity activity, SOAPOperationCallIdentifier operation,\n\t\t\tXMLReceiveActivity xmlReceive)", "class_method_signature": "SpecificationLoader.createReceiveSpecification(\n\t\t\tActivity activity, SOAPOperationCallIdentifier operation,\n\t\t\tXMLReceiveActivity xmlReceive)", "testcase": false, "constructor": false}, {"identifier": "readDataExtractionElements", "parameters": "(\n\t\t\tDataSpecification spec,\n\t\t\tfinal List<XMLDataExtraction> xmlDataExtractionList)", "modifiers": "private", "return": "List<DataExtraction>", "signature": "List<DataExtraction> readDataExtractionElements(\n\t\t\tDataSpecification spec,\n\t\t\tfinal List<XMLDataExtraction> xmlDataExtractionList)", "full_signature": "private List<DataExtraction> readDataExtractionElements(\n\t\t\tDataSpecification spec,\n\t\t\tfinal List<XMLDataExtraction> xmlDataExtractionList)", "class_method_signature": "SpecificationLoader.readDataExtractionElements(\n\t\t\tDataSpecification spec,\n\t\t\tfinal List<XMLDataExtraction> xmlDataExtractionList)", "testcase": false, "constructor": false}, {"identifier": "addConditionsFromConditionGroups", "parameters": "(\n\t\t\tList<String> conditionGroupNames, DataSpecification spec,\n\t\t\tList<ReceiveCondition> cList)", "modifiers": "private", "return": "void", "signature": "void addConditionsFromConditionGroups(\n\t\t\tList<String> conditionGroupNames, DataSpecification spec,\n\t\t\tList<ReceiveCondition> cList)", "full_signature": "private void addConditionsFromConditionGroups(\n\t\t\tList<String> conditionGroupNames, DataSpecification spec,\n\t\t\tList<ReceiveCondition> cList)", "class_method_signature": "SpecificationLoader.addConditionsFromConditionGroups(\n\t\t\tList<String> conditionGroupNames, DataSpecification spec,\n\t\t\tList<ReceiveCondition> cList)", "testcase": false, "constructor": false}, {"identifier": "addConditionsFromConditionGroup", "parameters": "(DataSpecification spec,\n\t\t\tList<ReceiveCondition> cList, XMLConditionGroup cg)", "modifiers": "private", "return": "void", "signature": "void addConditionsFromConditionGroup(DataSpecification spec,\n\t\t\tList<ReceiveCondition> cList, XMLConditionGroup cg)", "full_signature": "private void addConditionsFromConditionGroup(DataSpecification spec,\n\t\t\tList<ReceiveCondition> cList, XMLConditionGroup cg)", "class_method_signature": "SpecificationLoader.addConditionsFromConditionGroup(DataSpecification spec,\n\t\t\tList<ReceiveCondition> cList, XMLConditionGroup cg)", "testcase": false, "constructor": false}, {"identifier": "resolveConditionsForGroup", "parameters": "(XMLConditionGroup cg)", "modifiers": "private", "return": "List<XMLCondition>", "signature": "List<XMLCondition> resolveConditionsForGroup(XMLConditionGroup cg)", "full_signature": "private List<XMLCondition> resolveConditionsForGroup(XMLConditionGroup cg)", "class_method_signature": "SpecificationLoader.resolveConditionsForGroup(XMLConditionGroup cg)", "testcase": false, "constructor": false}, {"identifier": "getInheritanceBranch", "parameters": "(XMLConditionGroup cg)", "modifiers": "private", "return": "List<XMLConditionGroup>", "signature": "List<XMLConditionGroup> getInheritanceBranch(XMLConditionGroup cg)", "full_signature": "private List<XMLConditionGroup> getInheritanceBranch(XMLConditionGroup cg)", "class_method_signature": "SpecificationLoader.getInheritanceBranch(XMLConditionGroup cg)", "testcase": false, "constructor": false}, {"identifier": "getCopyOperations", "parameters": "(Activity activity,\n\t\t\tXMLTwoWayActivity xmlTwoWayType)", "modifiers": "private", "return": "List<DataCopyOperation>", "signature": "List<DataCopyOperation> getCopyOperations(Activity activity,\n\t\t\tXMLTwoWayActivity xmlTwoWayType)", "full_signature": "private List<DataCopyOperation> getCopyOperations(Activity activity,\n\t\t\tXMLTwoWayActivity xmlTwoWayType)", "class_method_signature": "SpecificationLoader.getCopyOperations(Activity activity,\n\t\t\tXMLTwoWayActivity xmlTwoWayType)", "testcase": false, "constructor": false}, {"identifier": "getHeaderProcessor", "parameters": "(\n\t\t\tXMLHeaderProcessor xmlHeaderProcessor)", "modifiers": "private", "return": "IHeaderProcessor", "signature": "IHeaderProcessor getHeaderProcessor(\n\t\t\tXMLHeaderProcessor xmlHeaderProcessor)", "full_signature": "private IHeaderProcessor getHeaderProcessor(\n\t\t\tXMLHeaderProcessor xmlHeaderProcessor)", "class_method_signature": "SpecificationLoader.getHeaderProcessor(\n\t\t\tXMLHeaderProcessor xmlHeaderProcessor)", "testcase": false, "constructor": false}, {"identifier": "getOperationCallIdentifier", "parameters": "(\n\t\t\tActivity activity, QName service, String port, String operation,\n\t\t\tSOAPOperationDirectionIdentifier direction)", "modifiers": "private", "return": "SOAPOperationCallIdentifier", "signature": "SOAPOperationCallIdentifier getOperationCallIdentifier(\n\t\t\tActivity activity, QName service, String port, String operation,\n\t\t\tSOAPOperationDirectionIdentifier direction)", "full_signature": "private SOAPOperationCallIdentifier getOperationCallIdentifier(\n\t\t\tActivity activity, QName service, String port, String operation,\n\t\t\tSOAPOperationDirectionIdentifier direction)", "class_method_signature": "SpecificationLoader.getOperationCallIdentifier(\n\t\t\tActivity activity, QName service, String port, String operation,\n\t\t\tSOAPOperationDirectionIdentifier direction)", "testcase": false, "constructor": false}, {"identifier": "getService", "parameters": "(Activity parentActivity,\n\t\t\tXMLSoapActivity xmlActivity)", "modifiers": "private", "return": "QName", "signature": "QName getService(Activity parentActivity,\n\t\t\tXMLSoapActivity xmlActivity)", "full_signature": "private QName getService(Activity parentActivity,\n\t\t\tXMLSoapActivity xmlActivity)", "class_method_signature": "SpecificationLoader.getService(Activity parentActivity,\n\t\t\tXMLSoapActivity xmlActivity)", "testcase": false, "constructor": false}, {"identifier": "getNamespaceMap", "parameters": "(XmlObject object)", "modifiers": "private static", "return": "NamespaceContextImpl", "signature": "NamespaceContextImpl getNamespaceMap(XmlObject object)", "full_signature": "private static NamespaceContextImpl getNamespaceMap(XmlObject object)", "class_method_signature": "SpecificationLoader.getNamespaceMap(XmlObject object)", "testcase": false, "constructor": false}, {"identifier": "getNamespaceMap", "parameters": "(Node object)", "modifiers": "static", "return": "Map<String, String>", "signature": "Map<String, String> getNamespaceMap(Node object)", "full_signature": "static Map<String, String> getNamespaceMap(Node object)", "class_method_signature": "SpecificationLoader.getNamespaceMap(Node object)", "testcase": false, "constructor": false}, {"identifier": "findInHierarchy", "parameters": "(XMLTestCase xmlTestCase,\n\t\t\tString partnerTrackName)", "modifiers": "private", "return": "XMLTestCase", "signature": "XMLTestCase findInHierarchy(XMLTestCase xmlTestCase,\n\t\t\tString partnerTrackName)", "full_signature": "private XMLTestCase findInHierarchy(XMLTestCase xmlTestCase,\n\t\t\tString partnerTrackName)", "class_method_signature": "SpecificationLoader.findInHierarchy(XMLTestCase xmlTestCase,\n\t\t\tString partnerTrackName)", "testcase": false, "constructor": false}, {"identifier": "hasNonEmptyPartnerTrack", "parameters": "(XMLTestCase xmlTestCase,\n\t\t\tString partnerTrackName)", "modifiers": "private", "return": "boolean", "signature": "boolean hasNonEmptyPartnerTrack(XMLTestCase xmlTestCase,\n\t\t\tString partnerTrackName)", "full_signature": "private boolean hasNonEmptyPartnerTrack(XMLTestCase xmlTestCase,\n\t\t\tString partnerTrackName)", "class_method_signature": "SpecificationLoader.hasNonEmptyPartnerTrack(XMLTestCase xmlTestCase,\n\t\t\tString partnerTrackName)", "testcase": false, "constructor": false}, {"identifier": "getPartnerTrack", "parameters": "(XMLTestCase xmlTestCase, String trackName)", "modifiers": "private", "return": "XMLTrack", "signature": "XMLTrack getPartnerTrack(XMLTestCase xmlTestCase, String trackName)", "full_signature": "private XMLTrack getPartnerTrack(XMLTestCase xmlTestCase, String trackName)", "class_method_signature": "SpecificationLoader.getPartnerTrack(XMLTestCase xmlTestCase, String trackName)", "testcase": false, "constructor": false}, {"identifier": "getRoundInformation", "parameters": "(String roundsAsText)", "modifiers": "private", "return": "List<Double>", "signature": "List<Double> getRoundInformation(String roundsAsText)", "full_signature": "private List<Double> getRoundInformation(String roundsAsText)", "class_method_signature": "SpecificationLoader.getRoundInformation(String roundsAsText)", "testcase": false, "constructor": false}], "file": "net.bpelunit.framework/src/main/java/net/bpelunit/framework/SpecificationLoader.java"}, "focal_method": {"identifier": "getNamespaceMap", "parameters": "(XmlObject object)", "modifiers": "private static", "return": "NamespaceContextImpl", "body": "private static NamespaceContextImpl getNamespaceMap(XmlObject object) {\n\t\tMap<String, String> namespaces = getNamespaceMap(object.getDomNode());\n\t\t\n\t\tNamespaceContextImpl result = new NamespaceContextImpl();\n\t\t\n\t\tfor(Entry<String, String> namespaceEntry : namespaces.entrySet()) {\n\t\t\tresult.setNamespace(namespaceEntry.getKey(), namespaceEntry.getValue());\n\t\t}\n\t\t\n\t\treturn result;\n\t}", "signature": "NamespaceContextImpl getNamespaceMap(XmlObject object)", "full_signature": "private static NamespaceContextImpl getNamespaceMap(XmlObject object)", "class_method_signature": "SpecificationLoader.getNamespaceMap(XmlObject object)", "testcase": false, "constructor": false, "invocations": ["getNamespaceMap", "getDomNode", "entrySet", "setNamespace", "getKey", "getValue"]}, "repository": {"repo_id": 551254, "url": "https://github.com/bpelunit/bpelunit", "language": "Java", "is_fork": false, "fork_count": 17, "stargazer_count": 13, "size": 59318, "license": "licensed"}}