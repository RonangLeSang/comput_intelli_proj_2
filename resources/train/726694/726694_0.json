{"test_class": {"identifier": "TestBox2D", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "libraries/phyloviewer-common/src/test/java/org/iplantc/phyloviewer/shared/math/TestBox2D.java"}, "test_case": {"identifier": "testValid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testValid() {\n\t\tBox2D invalid=new Box2D();\n\t\tassertFalse(invalid.valid());\n\t\t\n\t\tBox2D valid=new Box2D(new Vector2(0,0), new Vector2(1,1));\n\t\tassertTrue(valid.valid());\n\t}", "signature": "void testValid()", "full_signature": "@Test public void testValid()", "class_method_signature": "TestBox2D.testValid()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "valid", "assertTrue", "valid"]}, "focal_class": {"identifier": "Box2D", "superclass": "", "interfaces": "implements IsSerializable", "fields": [{"original_string": "private Vector2 min;", "modifier": "private", "type": "Vector2", "declarator": "min", "var_name": "min"}, {"original_string": "private Vector2 max;", "modifier": "private", "type": "Vector2", "declarator": "max", "var_name": "max"}], "methods": [{"identifier": "getDefaultMinValue", "parameters": "()", "modifiers": "private static", "return": "Vector2", "signature": "Vector2 getDefaultMinValue()", "full_signature": "private static Vector2 getDefaultMinValue()", "class_method_signature": "Box2D.getDefaultMinValue()", "testcase": false, "constructor": false}, {"identifier": "getDefaultMaxValue", "parameters": "()", "modifiers": "private static", "return": "Vector2", "signature": "Vector2 getDefaultMaxValue()", "full_signature": "private static Vector2 getDefaultMaxValue()", "class_method_signature": "Box2D.getDefaultMaxValue()", "testcase": false, "constructor": false}, {"identifier": "Box2D", "parameters": "()", "modifiers": "public", "return": "", "signature": " Box2D()", "full_signature": "public  Box2D()", "class_method_signature": "Box2D.Box2D()", "testcase": false, "constructor": true}, {"identifier": "Box2D", "parameters": "(Vector2 min, Vector2 max)", "modifiers": "public", "return": "", "signature": " Box2D(Vector2 min, Vector2 max)", "full_signature": "public  Box2D(Vector2 min, Vector2 max)", "class_method_signature": "Box2D.Box2D(Vector2 min, Vector2 max)", "testcase": false, "constructor": true}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Box2D", "signature": "Box2D clone()", "full_signature": "public Box2D clone()", "class_method_signature": "Box2D.clone()", "testcase": false, "constructor": false}, {"identifier": "valid", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean valid()", "full_signature": "public Boolean valid()", "class_method_signature": "Box2D.valid()", "testcase": false, "constructor": false}, {"identifier": "getMin", "parameters": "()", "modifiers": "public", "return": "Vector2", "signature": "Vector2 getMin()", "full_signature": "public Vector2 getMin()", "class_method_signature": "Box2D.getMin()", "testcase": false, "constructor": false}, {"identifier": "setMin", "parameters": "(Vector2 min)", "modifiers": "public", "return": "void", "signature": "void setMin(Vector2 min)", "full_signature": "public void setMin(Vector2 min)", "class_method_signature": "Box2D.setMin(Vector2 min)", "testcase": false, "constructor": false}, {"identifier": "getMax", "parameters": "()", "modifiers": "public", "return": "Vector2", "signature": "Vector2 getMax()", "full_signature": "public Vector2 getMax()", "class_method_signature": "Box2D.getMax()", "testcase": false, "constructor": false}, {"identifier": "setMax", "parameters": "(Vector2 max)", "modifiers": "public", "return": "void", "signature": "void setMax(Vector2 max)", "full_signature": "public void setMax(Vector2 max)", "class_method_signature": "Box2D.setMax(Vector2 max)", "testcase": false, "constructor": false}, {"identifier": "expandBy", "parameters": "(Vector2 v)", "modifiers": "public", "return": "void", "signature": "void expandBy(Vector2 v)", "full_signature": "public void expandBy(Vector2 v)", "class_method_signature": "Box2D.expandBy(Vector2 v)", "testcase": false, "constructor": false}, {"identifier": "expandBy", "parameters": "(Box2D bb)", "modifiers": "public", "return": "void", "signature": "void expandBy(Box2D bb)", "full_signature": "public void expandBy(Box2D bb)", "class_method_signature": "Box2D.expandBy(Box2D bb)", "testcase": false, "constructor": false}, {"identifier": "expandBy", "parameters": "(double d)", "modifiers": "public", "return": "void", "signature": "void expandBy(double d)", "full_signature": "public void expandBy(double d)", "class_method_signature": "Box2D.expandBy(double d)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(Box2D bb)", "modifiers": "public", "return": "boolean", "signature": "boolean intersects(Box2D bb)", "full_signature": "public boolean intersects(Box2D bb)", "class_method_signature": "Box2D.intersects(Box2D bb)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(Vector2 position)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(Vector2 position)", "full_signature": "public boolean contains(Vector2 position)", "class_method_signature": "Box2D.contains(Vector2 position)", "testcase": false, "constructor": false}, {"identifier": "getCenter", "parameters": "()", "modifiers": "public", "return": "Vector2", "signature": "Vector2 getCenter()", "full_signature": "public Vector2 getCenter()", "class_method_signature": "Box2D.getCenter()", "testcase": false, "constructor": false}, {"identifier": "getWidth", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getWidth()", "full_signature": "public double getWidth()", "class_method_signature": "Box2D.getWidth()", "testcase": false, "constructor": false}, {"identifier": "getHeight", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getHeight()", "full_signature": "public double getHeight()", "class_method_signature": "Box2D.getHeight()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "Box2D.toString()", "testcase": false, "constructor": false}, {"identifier": "createBox", "parameters": "(Vector2 v0, Vector2 v1)", "modifiers": "public static", "return": "Box2D", "signature": "Box2D createBox(Vector2 v0, Vector2 v1)", "full_signature": "public static Box2D createBox(Vector2 v0, Vector2 v1)", "class_method_signature": "Box2D.createBox(Vector2 v0, Vector2 v1)", "testcase": false, "constructor": false}, {"identifier": "toJSON", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toJSON()", "full_signature": "public String toJSON()", "class_method_signature": "Box2D.toJSON()", "testcase": false, "constructor": false}], "file": "libraries/phyloviewer-common/src/main/java/org/iplantc/phyloviewer/shared/math/Box2D.java"}, "focal_method": {"identifier": "valid", "parameters": "()", "modifiers": "public", "return": "Boolean", "body": "public Boolean valid()\n\t{\n\t\treturn max.getX() >= min.getX() && max.getY() >= min.getY();\n\t}", "signature": "Boolean valid()", "full_signature": "public Boolean valid()", "class_method_signature": "Box2D.valid()", "testcase": false, "constructor": false, "invocations": ["getX", "getX", "getY", "getY"]}, "repository": {"repo_id": 726694, "url": "https://github.com/akubach/phyloviewer", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 22844, "license": "licensed"}}