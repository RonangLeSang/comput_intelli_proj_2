{"test_class": {"identifier": "GradleTaskTreeTest", "superclass": "", "interfaces": "", "fields": [], "file": "netbeans-gradle-plugin/src/test/java/org/netbeans/gradle/project/view/GradleTaskTreeTest.java"}, "test_case": {"identifier": "testNoInfiniteLoop2", "parameters": "()", "modifiers": "@Test(timeout = 10000) public", "return": "void", "body": "@Test(timeout = 10000)\n    public void testNoInfiniteLoop2() {\n        List<GradleTaskID> taskIDs = toTaskIDs(\"A\", \"B\");\n\n        List<GradleTaskTree> nodes = GradleTaskTree.createTaskTree(0, taskIDs);\n        assertEquals(\"Node count\", 2, nodes.size());\n\n        assertLeaf(nodes.get(0), \"A\");\n        assertLeaf(nodes.get(1), \"B\");\n    }", "signature": "void testNoInfiniteLoop2()", "full_signature": "@Test(timeout = 10000) public void testNoInfiniteLoop2()", "class_method_signature": "GradleTaskTreeTest.testNoInfiniteLoop2()", "testcase": true, "constructor": false, "invocations": ["toTaskIDs", "createTaskTree", "assertEquals", "size", "assertLeaf", "get", "assertLeaf", "get"]}, "focal_class": {"identifier": "GradleTaskTree", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(GradleTaskTree.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(GradleTaskTree.class.getName())", "var_name": "LOGGER"}, {"original_string": "private static final int DEFAULT_TASK_LIMIT = 20;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_TASK_LIMIT = 20", "var_name": "DEFAULT_TASK_LIMIT"}, {"original_string": "private final String caption;", "modifier": "private final", "type": "String", "declarator": "caption", "var_name": "caption"}, {"original_string": "private final GradleTaskID taskID;", "modifier": "private final", "type": "GradleTaskID", "declarator": "taskID", "var_name": "taskID"}, {"original_string": "private final List<GradleTaskTree> children;", "modifier": "private final", "type": "List<GradleTaskTree>", "declarator": "children", "var_name": "children"}], "methods": [{"identifier": "GradleTaskTree", "parameters": "(GradleTaskID taskID)", "modifiers": "public", "return": "", "signature": " GradleTaskTree(GradleTaskID taskID)", "full_signature": "public  GradleTaskTree(GradleTaskID taskID)", "class_method_signature": "GradleTaskTree.GradleTaskTree(GradleTaskID taskID)", "testcase": false, "constructor": true}, {"identifier": "GradleTaskTree", "parameters": "(String caption, List<GradleTaskTree> children)", "modifiers": "public", "return": "", "signature": " GradleTaskTree(String caption, List<GradleTaskTree> children)", "full_signature": "public  GradleTaskTree(String caption, List<GradleTaskTree> children)", "class_method_signature": "GradleTaskTree.GradleTaskTree(String caption, List<GradleTaskTree> children)", "testcase": false, "constructor": true}, {"identifier": "GradleTaskTree", "parameters": "(\n            String caption,\n            GradleTaskID taskID,\n            List<GradleTaskTree> children)", "modifiers": "private", "return": "", "signature": " GradleTaskTree(\n            String caption,\n            GradleTaskID taskID,\n            List<GradleTaskTree> children)", "full_signature": "private  GradleTaskTree(\n            String caption,\n            GradleTaskID taskID,\n            List<GradleTaskTree> children)", "class_method_signature": "GradleTaskTree.GradleTaskTree(\n            String caption,\n            GradleTaskID taskID,\n            List<GradleTaskTree> children)", "testcase": false, "constructor": true}, {"identifier": "getCaption", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCaption()", "full_signature": "public String getCaption()", "class_method_signature": "GradleTaskTree.getCaption()", "testcase": false, "constructor": false}, {"identifier": "getTaskID", "parameters": "()", "modifiers": "@Nullable public", "return": "GradleTaskID", "signature": "GradleTaskID getTaskID()", "full_signature": "@Nullable public GradleTaskID getTaskID()", "class_method_signature": "GradleTaskTree.getTaskID()", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "public", "return": "List<GradleTaskTree>", "signature": "List<GradleTaskTree> getChildren()", "full_signature": "public List<GradleTaskTree> getChildren()", "class_method_signature": "GradleTaskTree.getChildren()", "testcase": false, "constructor": false}, {"identifier": "createTaskTree", "parameters": "(Collection<GradleTaskID> tasks)", "modifiers": "public static", "return": "List<GradleTaskTree>", "signature": "List<GradleTaskTree> createTaskTree(Collection<GradleTaskID> tasks)", "full_signature": "public static List<GradleTaskTree> createTaskTree(Collection<GradleTaskID> tasks)", "class_method_signature": "GradleTaskTree.createTaskTree(Collection<GradleTaskID> tasks)", "testcase": false, "constructor": false}, {"identifier": "createTaskTree", "parameters": "(\n            int taskLimit,\n            Collection<GradleTaskID> taskIDs)", "modifiers": "public static", "return": "List<GradleTaskTree>", "signature": "List<GradleTaskTree> createTaskTree(\n            int taskLimit,\n            Collection<GradleTaskID> taskIDs)", "full_signature": "public static List<GradleTaskTree> createTaskTree(\n            int taskLimit,\n            Collection<GradleTaskID> taskIDs)", "class_method_signature": "GradleTaskTree.createTaskTree(\n            int taskLimit,\n            Collection<GradleTaskID> taskIDs)", "testcase": false, "constructor": false}, {"identifier": "createTaskTree", "parameters": "(\n            int taskLimit,\n            int skipCharCount,\n            Collection<GradleTaskID> taskIDs)", "modifiers": "private static", "return": "List<GradleTaskTree>", "signature": "List<GradleTaskTree> createTaskTree(\n            int taskLimit,\n            int skipCharCount,\n            Collection<GradleTaskID> taskIDs)", "full_signature": "private static List<GradleTaskTree> createTaskTree(\n            int taskLimit,\n            int skipCharCount,\n            Collection<GradleTaskID> taskIDs)", "class_method_signature": "GradleTaskTree.createTaskTree(\n            int taskLimit,\n            int skipCharCount,\n            Collection<GradleTaskID> taskIDs)", "testcase": false, "constructor": false}, {"identifier": "createTaskTree", "parameters": "(\n            int taskLimit,\n            Map.Entry<String, List<GradleTaskID>> entry)", "modifiers": "private static", "return": "GradleTaskTree", "signature": "GradleTaskTree createTaskTree(\n            int taskLimit,\n            Map.Entry<String, List<GradleTaskID>> entry)", "full_signature": "private static GradleTaskTree createTaskTree(\n            int taskLimit,\n            Map.Entry<String, List<GradleTaskID>> entry)", "class_method_signature": "GradleTaskTree.createTaskTree(\n            int taskLimit,\n            Map.Entry<String, List<GradleTaskID>> entry)", "testcase": false, "constructor": false}, {"identifier": "toLeafs", "parameters": "(Collection<GradleTaskID> taskIDs)", "modifiers": "private static", "return": "List<GradleTaskTree>", "signature": "List<GradleTaskTree> toLeafs(Collection<GradleTaskID> taskIDs)", "full_signature": "private static List<GradleTaskTree> toLeafs(Collection<GradleTaskID> taskIDs)", "class_method_signature": "GradleTaskTree.toLeafs(Collection<GradleTaskID> taskIDs)", "testcase": false, "constructor": false}, {"identifier": "getCharacterType", "parameters": "(char ch)", "modifiers": "private static", "return": "CharacterType", "signature": "CharacterType getCharacterType(char ch)", "full_signature": "private static CharacterType getCharacterType(char ch)", "class_method_signature": "GradleTaskTree.getCharacterType(char ch)", "testcase": false, "constructor": false}, {"identifier": "getNextWordStartPos", "parameters": "(int startPos, String str)", "modifiers": "private static", "return": "int", "signature": "int getNextWordStartPos(int startPos, String str)", "full_signature": "private static int getNextWordStartPos(int startPos, String str)", "class_method_signature": "GradleTaskTree.getNextWordStartPos(int startPos, String str)", "testcase": false, "constructor": false}], "file": "netbeans-gradle-plugin/src/main/java/org/netbeans/gradle/project/view/GradleTaskTree.java"}, "focal_method": {"identifier": "createTaskTree", "parameters": "(Collection<GradleTaskID> tasks)", "modifiers": "public static", "return": "List<GradleTaskTree>", "body": "public static List<GradleTaskTree> createTaskTree(Collection<GradleTaskID> tasks) {\n        return createTaskTree(DEFAULT_TASK_LIMIT, tasks);\n    }", "signature": "List<GradleTaskTree> createTaskTree(Collection<GradleTaskID> tasks)", "full_signature": "public static List<GradleTaskTree> createTaskTree(Collection<GradleTaskID> tasks)", "class_method_signature": "GradleTaskTree.createTaskTree(Collection<GradleTaskID> tasks)", "testcase": false, "constructor": false, "invocations": ["createTaskTree"]}, "repository": {"repo_id": 5291703, "url": "https://github.com/kelemen/netbeans-gradle-project", "language": "Java", "is_fork": false, "fork_count": 66, "stargazer_count": 173, "size": 12255, "license": "licensed"}}