{"test_class": {"identifier": "StreamEncoderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int NUM_ROWS_TO_BUFFER = 500;", "modifier": "private static final", "type": "int", "declarator": "NUM_ROWS_TO_BUFFER = 500", "var_name": "NUM_ROWS_TO_BUFFER"}, {"original_string": "private static final int MAXIMUM_BUFFER_SIZE = Integer.MAX_VALUE - 8;", "modifier": "private static final", "type": "int", "declarator": "MAXIMUM_BUFFER_SIZE = Integer.MAX_VALUE - 8", "var_name": "MAXIMUM_BUFFER_SIZE"}, {"original_string": "private PipedInputStream inputStream = mock( PipedInputStream.class );", "modifier": "private", "type": "PipedInputStream", "declarator": "inputStream = mock( PipedInputStream.class )", "var_name": "inputStream"}, {"original_string": "private List<ColumnSpec> columns;", "modifier": "private", "type": "List<ColumnSpec>", "declarator": "columns", "var_name": "columns"}], "file": "core/src/test/java/org/pentaho/di/verticabulkload/nativebinary/StreamEncoderTest.java"}, "test_case": {"identifier": "testCountedBufferSizeIsInt_WhenToBufferAllRowMaxSizeRequiresMoreThenInt", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCountedBufferSizeIsInt_WhenToBufferAllRowMaxSizeRequiresMoreThenInt() throws Exception {\n\n    try {\n      assertEquals( MAXIMUM_BUFFER_SIZE, getSpyStreamEncoder().countMainByteBufferSize() );\n    } catch ( Exception e ) {\n      fail( \"There is no exception expected But was: \" + e );\n    }\n  }", "signature": "void testCountedBufferSizeIsInt_WhenToBufferAllRowMaxSizeRequiresMoreThenInt()", "full_signature": "@Test public void testCountedBufferSizeIsInt_WhenToBufferAllRowMaxSizeRequiresMoreThenInt()", "class_method_signature": "StreamEncoderTest.testCountedBufferSizeIsInt_WhenToBufferAllRowMaxSizeRequiresMoreThenInt()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "countMainByteBufferSize", "getSpyStreamEncoder", "fail"]}, "focal_class": {"identifier": "StreamEncoder", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int NUM_ROWS_TO_BUFFER = 500;", "modifier": "public static final", "type": "int", "declarator": "NUM_ROWS_TO_BUFFER = 500", "var_name": "NUM_ROWS_TO_BUFFER"}, {"original_string": "private static final byte BYTE_ZERO = (byte) 0;", "modifier": "private static final", "type": "byte", "declarator": "BYTE_ZERO = (byte) 0", "var_name": "BYTE_ZERO"}, {"original_string": "private static final byte BYTE_FULL = (byte) 0xFF;", "modifier": "private static final", "type": "byte", "declarator": "BYTE_FULL = (byte) 0xFF", "var_name": "BYTE_FULL"}, {"original_string": "private static final byte BYTE_LF = (byte) 0x0A;", "modifier": "private static final", "type": "byte", "declarator": "BYTE_LF = (byte) 0x0A", "var_name": "BYTE_LF"}, {"original_string": "private static final byte BYTE_CR = (byte) 0x0D;", "modifier": "private static final", "type": "byte", "declarator": "BYTE_CR = (byte) 0x0D", "var_name": "BYTE_CR"}, {"original_string": "private static final int MAX_CHAR_LENGTH = 65000;", "modifier": "private static final", "type": "int", "declarator": "MAX_CHAR_LENGTH = 65000", "var_name": "MAX_CHAR_LENGTH"}, {"original_string": "private static final int MAXIMUM_BUFFER_SIZE = Integer.MAX_VALUE - 8;", "modifier": "private static final", "type": "int", "declarator": "MAXIMUM_BUFFER_SIZE = Integer.MAX_VALUE - 8", "var_name": "MAXIMUM_BUFFER_SIZE"}, {"original_string": "protected WritableByteChannel channel;", "modifier": "protected", "type": "WritableByteChannel", "declarator": "channel", "var_name": "channel"}, {"original_string": "private PipedOutputStream pipedOutputStream;", "modifier": "private", "type": "PipedOutputStream", "declarator": "pipedOutputStream", "var_name": "pipedOutputStream"}, {"original_string": "private int columnCount;", "modifier": "private", "type": "int", "declarator": "columnCount", "var_name": "columnCount"}, {"original_string": "private int rowMaxSize;", "modifier": "private", "type": "int", "declarator": "rowMaxSize", "var_name": "rowMaxSize"}, {"original_string": "private ByteBuffer buffer;", "modifier": "private", "type": "ByteBuffer", "declarator": "buffer", "var_name": "buffer"}, {"original_string": "private Charset charset;", "modifier": "private", "type": "Charset", "declarator": "charset", "var_name": "charset"}, {"original_string": "private final List<ColumnSpec> columns;", "modifier": "private final", "type": "List<ColumnSpec>", "declarator": "columns", "var_name": "columns"}, {"original_string": "private final BitSet rowNulls;", "modifier": "private final", "type": "BitSet", "declarator": "rowNulls", "var_name": "rowNulls"}], "methods": [{"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "StreamEncoder.close()", "testcase": false, "constructor": false}, {"identifier": "StreamEncoder", "parameters": "( List<ColumnSpec> columns, PipedInputStream inputStream )", "modifiers": "public", "return": "", "signature": " StreamEncoder( List<ColumnSpec> columns, PipedInputStream inputStream )", "full_signature": "public  StreamEncoder( List<ColumnSpec> columns, PipedInputStream inputStream )", "class_method_signature": "StreamEncoder.StreamEncoder( List<ColumnSpec> columns, PipedInputStream inputStream )", "testcase": false, "constructor": true}, {"identifier": "countMainByteBufferSize", "parameters": "()", "modifiers": "", "return": "int", "signature": "int countMainByteBufferSize()", "full_signature": " int countMainByteBufferSize()", "class_method_signature": "StreamEncoder.countMainByteBufferSize()", "testcase": false, "constructor": false}, {"identifier": "writeHeader", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void writeHeader()", "full_signature": "public void writeHeader()", "class_method_signature": "StreamEncoder.writeHeader()", "testcase": false, "constructor": false}, {"identifier": "writeRow", "parameters": "( RowMetaInterface rowMeta, Object[] row )", "modifiers": "public", "return": "void", "signature": "void writeRow( RowMetaInterface rowMeta, Object[] row )", "full_signature": "public void writeRow( RowMetaInterface rowMeta, Object[] row )", "class_method_signature": "StreamEncoder.writeRow( RowMetaInterface rowMeta, Object[] row )", "testcase": false, "constructor": false}, {"identifier": "flushAndClose", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void flushAndClose()", "full_signature": "private void flushAndClose()", "class_method_signature": "StreamEncoder.flushAndClose()", "testcase": false, "constructor": false}, {"identifier": "checkAndFlushBuffer", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkAndFlushBuffer()", "full_signature": "private void checkAndFlushBuffer()", "class_method_signature": "StreamEncoder.checkAndFlushBuffer()", "testcase": false, "constructor": false}, {"identifier": "flushBuffer", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void flushBuffer()", "full_signature": "private void flushBuffer()", "class_method_signature": "StreamEncoder.flushBuffer()", "testcase": false, "constructor": false}, {"identifier": "getBuffer", "parameters": "()", "modifiers": "public", "return": "ByteBuffer", "signature": "ByteBuffer getBuffer()", "full_signature": "public ByteBuffer getBuffer()", "class_method_signature": "StreamEncoder.getBuffer()", "testcase": false, "constructor": false}, {"identifier": "getRowMaxSize", "parameters": "()", "modifiers": "", "return": "int", "signature": "int getRowMaxSize()", "full_signature": " int getRowMaxSize()", "class_method_signature": "StreamEncoder.getRowMaxSize()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/pentaho/di/verticabulkload/nativebinary/StreamEncoder.java"}, "focal_method": {"identifier": "countMainByteBufferSize", "parameters": "()", "modifiers": "", "return": "int", "body": "int countMainByteBufferSize() {\n    long bufferSize = (long) getRowMaxSize() * NUM_ROWS_TO_BUFFER;\n    return (int) ( bufferSize > 0 && bufferSize < MAXIMUM_BUFFER_SIZE ? bufferSize : MAXIMUM_BUFFER_SIZE );\n  }", "signature": "int countMainByteBufferSize()", "full_signature": " int countMainByteBufferSize()", "class_method_signature": "StreamEncoder.countMainByteBufferSize()", "testcase": false, "constructor": false, "invocations": ["getRowMaxSize"]}, "repository": {"repo_id": 9650789, "url": "https://github.com/pentaho/pentaho-vertica-bulkloader", "language": "Java", "is_fork": false, "fork_count": 43, "stargazer_count": 8, "size": 1741, "license": "licensed"}}