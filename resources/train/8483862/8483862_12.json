{"test_class": {"identifier": "MarcXmlEncoderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static StringBuilder resultCollector;", "modifier": "private static", "type": "StringBuilder", "declarator": "resultCollector", "var_name": "resultCollector"}, {"original_string": "private static MarcXmlEncoder encoder;", "modifier": "private static", "type": "MarcXmlEncoder", "declarator": "encoder", "var_name": "encoder"}, {"original_string": "private static final String XML_DECLARATION = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\";", "modifier": "private static final", "type": "String", "declarator": "XML_DECLARATION = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\"", "var_name": "XML_DECLARATION"}, {"original_string": "private static final String XML_1_DECLARATION = \"<?xml version=\\\"1.1\\\" encoding=\\\"UTF-8\\\"?>\";", "modifier": "private static final", "type": "String", "declarator": "XML_1_DECLARATION = \"<?xml version=\\\"1.1\\\" encoding=\\\"UTF-8\\\"?>\"", "var_name": "XML_1_DECLARATION"}, {"original_string": "private static final String XML_16_DECLARATION = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-16\\\"?>\";", "modifier": "private static final", "type": "String", "declarator": "XML_16_DECLARATION = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-16\\\"?>\"", "var_name": "XML_16_DECLARATION"}, {"original_string": "private static final String XML_ROOT_OPEN = \"<marc:collection xmlns:marc=\\\"http://www.loc.gov/MARC21/slim\\\" \"\n            + \"xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://www.loc.gov/MARC21\"\n            + \"/slim http://www.loc.gov/standards/marcxml/schema/MARC21slim.xsd\\\">\";", "modifier": "private static final", "type": "String", "declarator": "XML_ROOT_OPEN = \"<marc:collection xmlns:marc=\\\"http://www.loc.gov/MARC21/slim\\\" \"\n            + \"xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://www.loc.gov/MARC21\"\n            + \"/slim http://www.loc.gov/standards/marcxml/schema/MARC21slim.xsd\\\">\"", "var_name": "XML_ROOT_OPEN"}, {"original_string": "private static final String XML_RECORD = \"<marc:record><marc:controlfield tag=\\\"001\\\">92005291</marc:controlfield>\"\n            + \"<marc:datafield tag=\\\"010\\\" ind1=\\\" \\\" ind2=\\\" \\\"><marc:subfield code=\\\"a\\\">92005291</marc:subfield>\"\n            + \"</marc:datafield></marc:record>\";", "modifier": "private static final", "type": "String", "declarator": "XML_RECORD = \"<marc:record><marc:controlfield tag=\\\"001\\\">92005291</marc:controlfield>\"\n            + \"<marc:datafield tag=\\\"010\\\" ind1=\\\" \\\" ind2=\\\" \\\"><marc:subfield code=\\\"a\\\">92005291</marc:subfield>\"\n            + \"</marc:datafield></marc:record>\"", "var_name": "XML_RECORD"}, {"original_string": "private static final String XML_MARC_COLLECTION_END_TAG = \"</marc:collection>\";", "modifier": "private static final", "type": "String", "declarator": "XML_MARC_COLLECTION_END_TAG = \"</marc:collection>\"", "var_name": "XML_MARC_COLLECTION_END_TAG"}, {"original_string": "private static final String RECORD_ID = \"92005291\";", "modifier": "private static final", "type": "String", "declarator": "RECORD_ID = \"92005291\"", "var_name": "RECORD_ID"}], "file": "metafacture-biblio/src/test/java/org/metafacture/biblio/marc21/MarcXmlEncoderTest.java"}, "test_case": {"identifier": "omitXmlDeclaration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void omitXmlDeclaration() {\n        encoder.omitXmlDeclaration(true);\n        addOneRecord(encoder);\n        encoder.closeStream();\n        String actual = resultCollector.toString();\n        assertTrue(actual.startsWith(\"<marc:collection\"));\n        assertTrue(actual.endsWith(XML_MARC_COLLECTION_END_TAG));\n    }", "signature": "void omitXmlDeclaration()", "full_signature": "@Test public void omitXmlDeclaration()", "class_method_signature": "MarcXmlEncoderTest.omitXmlDeclaration()", "testcase": true, "constructor": false, "invocations": ["omitXmlDeclaration", "addOneRecord", "closeStream", "toString", "assertTrue", "startsWith", "assertTrue", "endsWith"]}, "focal_class": {"identifier": "MarcXmlEncoder", "superclass": "extends DefaultStreamPipe<ObjectReceiver<String>>", "interfaces": "", "fields": [{"original_string": "private static final String ROOT_OPEN = \"<marc:collection xmlns:marc=\\\"http://www.loc.gov/MARC21/slim\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://www.loc.gov/MARC21/slim http://www.loc.gov/standards/marcxml/schema/MARC21slim.xsd\\\">\";", "modifier": "private static final", "type": "String", "declarator": "ROOT_OPEN = \"<marc:collection xmlns:marc=\\\"http://www.loc.gov/MARC21/slim\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://www.loc.gov/MARC21/slim http://www.loc.gov/standards/marcxml/schema/MARC21slim.xsd\\\">\"", "var_name": "ROOT_OPEN"}, {"original_string": "private static final String ROOT_CLOSE = \"</marc:collection>\";", "modifier": "private static final", "type": "String", "declarator": "ROOT_CLOSE = \"</marc:collection>\"", "var_name": "ROOT_CLOSE"}, {"original_string": "private static final String RECORD_OPEN = \"<marc:record>\";", "modifier": "private static final", "type": "String", "declarator": "RECORD_OPEN = \"<marc:record>\"", "var_name": "RECORD_OPEN"}, {"original_string": "private static final String RECORD_CLOSE = \"</marc:record>\";", "modifier": "private static final", "type": "String", "declarator": "RECORD_CLOSE = \"</marc:record>\"", "var_name": "RECORD_CLOSE"}, {"original_string": "private static final String CONTROLFIELD_OPEN_TEMPLATE = \"<marc:controlfield tag=\\\"%s\\\">\";", "modifier": "private static final", "type": "String", "declarator": "CONTROLFIELD_OPEN_TEMPLATE = \"<marc:controlfield tag=\\\"%s\\\">\"", "var_name": "CONTROLFIELD_OPEN_TEMPLATE"}, {"original_string": "private static final String CONTROLFIELD_CLOSE = \"</marc:controlfield>\";", "modifier": "private static final", "type": "String", "declarator": "CONTROLFIELD_CLOSE = \"</marc:controlfield>\"", "var_name": "CONTROLFIELD_CLOSE"}, {"original_string": "private static final String DATAFIELD_OPEN_TEMPLATE = \"<marc:datafield tag=\\\"%s\\\" ind1=\\\"%s\\\" ind2=\\\"%s\\\">\";", "modifier": "private static final", "type": "String", "declarator": "DATAFIELD_OPEN_TEMPLATE = \"<marc:datafield tag=\\\"%s\\\" ind1=\\\"%s\\\" ind2=\\\"%s\\\">\"", "var_name": "DATAFIELD_OPEN_TEMPLATE"}, {"original_string": "private static final String DATAFIELD_CLOSE = \"</marc:datafield>\";", "modifier": "private static final", "type": "String", "declarator": "DATAFIELD_CLOSE = \"</marc:datafield>\"", "var_name": "DATAFIELD_CLOSE"}, {"original_string": "private static final String SUBFIELD_OPEN_TEMPLATE = \"<marc:subfield code=\\\"%s\\\">\";", "modifier": "private static final", "type": "String", "declarator": "SUBFIELD_OPEN_TEMPLATE = \"<marc:subfield code=\\\"%s\\\">\"", "var_name": "SUBFIELD_OPEN_TEMPLATE"}, {"original_string": "private static final String SUBFIELD_CLOSE = \"</marc:subfield>\";", "modifier": "private static final", "type": "String", "declarator": "SUBFIELD_CLOSE = \"</marc:subfield>\"", "var_name": "SUBFIELD_CLOSE"}, {"original_string": "private static final String LEADER_OPEN_TEMPLATE = \"<marc:leader>\";", "modifier": "private static final", "type": "String", "declarator": "LEADER_OPEN_TEMPLATE = \"<marc:leader>\"", "var_name": "LEADER_OPEN_TEMPLATE"}, {"original_string": "private static final String LEADER_CLOSE_TEMPLATE = \"</marc:leader>\";", "modifier": "private static final", "type": "String", "declarator": "LEADER_CLOSE_TEMPLATE = \"</marc:leader>\"", "var_name": "LEADER_CLOSE_TEMPLATE"}, {"original_string": "private static final String NEW_LINE = \"\\n\";", "modifier": "private static final", "type": "String", "declarator": "NEW_LINE = \"\\n\"", "var_name": "NEW_LINE"}, {"original_string": "private static final String INDENT = \"\\t\";", "modifier": "private static final", "type": "String", "declarator": "INDENT = \"\\t\"", "var_name": "INDENT"}, {"original_string": "private static final String XML_DECLARATION_TEMPLATE = \"<?xml version=\\\"%s\\\" encoding=\\\"%s\\\"?>\";", "modifier": "private static final", "type": "String", "declarator": "XML_DECLARATION_TEMPLATE = \"<?xml version=\\\"%s\\\" encoding=\\\"%s\\\"?>\"", "var_name": "XML_DECLARATION_TEMPLATE"}, {"original_string": "private final StringBuilder builder;", "modifier": "private final", "type": "StringBuilder", "declarator": "builder", "var_name": "builder"}, {"original_string": "private boolean atStreamStart;", "modifier": "private", "type": "boolean", "declarator": "atStreamStart", "var_name": "atStreamStart"}, {"original_string": "private boolean omitXmlDeclaration;", "modifier": "private", "type": "boolean", "declarator": "omitXmlDeclaration", "var_name": "omitXmlDeclaration"}, {"original_string": "private String xmlVersion;", "modifier": "private", "type": "String", "declarator": "xmlVersion", "var_name": "xmlVersion"}, {"original_string": "private String xmlEncoding;", "modifier": "private", "type": "String", "declarator": "xmlEncoding", "var_name": "xmlEncoding"}, {"original_string": "private String currentEntity;", "modifier": "private", "type": "String", "declarator": "currentEntity", "var_name": "currentEntity"}, {"original_string": "private int indentationLevel;", "modifier": "private", "type": "int", "declarator": "indentationLevel", "var_name": "indentationLevel"}, {"original_string": "private boolean formatted;", "modifier": "private", "type": "boolean", "declarator": "formatted", "var_name": "formatted"}], "methods": [{"identifier": "MarcXmlEncoder", "parameters": "()", "modifiers": "public", "return": "", "signature": " MarcXmlEncoder()", "full_signature": "public  MarcXmlEncoder()", "class_method_signature": "MarcXmlEncoder.MarcXmlEncoder()", "testcase": false, "constructor": true}, {"identifier": "omitXmlDeclaration", "parameters": "(boolean omitXmlDeclaration)", "modifiers": "public", "return": "void", "signature": "void omitXmlDeclaration(boolean omitXmlDeclaration)", "full_signature": "public void omitXmlDeclaration(boolean omitXmlDeclaration)", "class_method_signature": "MarcXmlEncoder.omitXmlDeclaration(boolean omitXmlDeclaration)", "testcase": false, "constructor": false}, {"identifier": "setXmlVersion", "parameters": "(String xmlVersion)", "modifiers": "public", "return": "void", "signature": "void setXmlVersion(String xmlVersion)", "full_signature": "public void setXmlVersion(String xmlVersion)", "class_method_signature": "MarcXmlEncoder.setXmlVersion(String xmlVersion)", "testcase": false, "constructor": false}, {"identifier": "setXmlEncoding", "parameters": "(String xmlEncoding)", "modifiers": "public", "return": "void", "signature": "void setXmlEncoding(String xmlEncoding)", "full_signature": "public void setXmlEncoding(String xmlEncoding)", "class_method_signature": "MarcXmlEncoder.setXmlEncoding(String xmlEncoding)", "testcase": false, "constructor": false}, {"identifier": "setFormatted", "parameters": "(boolean formatted)", "modifiers": "public", "return": "void", "signature": "void setFormatted(boolean formatted)", "full_signature": "public void setFormatted(boolean formatted)", "class_method_signature": "MarcXmlEncoder.setFormatted(boolean formatted)", "testcase": false, "constructor": false}, {"identifier": "startRecord", "parameters": "(final String identifier)", "modifiers": "@Override public", "return": "void", "signature": "void startRecord(final String identifier)", "full_signature": "@Override public void startRecord(final String identifier)", "class_method_signature": "MarcXmlEncoder.startRecord(final String identifier)", "testcase": false, "constructor": false}, {"identifier": "endRecord", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void endRecord()", "full_signature": "@Override public void endRecord()", "class_method_signature": "MarcXmlEncoder.endRecord()", "testcase": false, "constructor": false}, {"identifier": "startEntity", "parameters": "(final String name)", "modifiers": "@Override public", "return": "void", "signature": "void startEntity(final String name)", "full_signature": "@Override public void startEntity(final String name)", "class_method_signature": "MarcXmlEncoder.startEntity(final String name)", "testcase": false, "constructor": false}, {"identifier": "endEntity", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void endEntity()", "full_signature": "@Override public void endEntity()", "class_method_signature": "MarcXmlEncoder.endEntity()", "testcase": false, "constructor": false}, {"identifier": "literal", "parameters": "(final String name, final String value)", "modifiers": "@Override public", "return": "void", "signature": "void literal(final String name, final String value)", "full_signature": "@Override public void literal(final String name, final String value)", "class_method_signature": "MarcXmlEncoder.literal(final String name, final String value)", "testcase": false, "constructor": false}, {"identifier": "onResetStream", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void onResetStream()", "full_signature": "@Override protected void onResetStream()", "class_method_signature": "MarcXmlEncoder.onResetStream()", "testcase": false, "constructor": false}, {"identifier": "onCloseStream", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void onCloseStream()", "full_signature": "@Override protected void onCloseStream()", "class_method_signature": "MarcXmlEncoder.onCloseStream()", "testcase": false, "constructor": false}, {"identifier": "incrementIndentationLevel", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void incrementIndentationLevel()", "full_signature": "private void incrementIndentationLevel()", "class_method_signature": "MarcXmlEncoder.incrementIndentationLevel()", "testcase": false, "constructor": false}, {"identifier": "decrementIndentationLevel", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void decrementIndentationLevel()", "full_signature": "private void decrementIndentationLevel()", "class_method_signature": "MarcXmlEncoder.decrementIndentationLevel()", "testcase": false, "constructor": false}, {"identifier": "writeHeader", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeHeader()", "full_signature": "private void writeHeader()", "class_method_signature": "MarcXmlEncoder.writeHeader()", "testcase": false, "constructor": false}, {"identifier": "writeFooter", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeFooter()", "full_signature": "private void writeFooter()", "class_method_signature": "MarcXmlEncoder.writeFooter()", "testcase": false, "constructor": false}, {"identifier": "writeRaw", "parameters": "(final String str)", "modifiers": "private", "return": "void", "signature": "void writeRaw(final String str)", "full_signature": "private void writeRaw(final String str)", "class_method_signature": "MarcXmlEncoder.writeRaw(final String str)", "testcase": false, "constructor": false}, {"identifier": "writeEscaped", "parameters": "(final String str)", "modifiers": "private", "return": "void", "signature": "void writeEscaped(final String str)", "full_signature": "private void writeEscaped(final String str)", "class_method_signature": "MarcXmlEncoder.writeEscaped(final String str)", "testcase": false, "constructor": false}, {"identifier": "prettyPrintIndentation", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void prettyPrintIndentation()", "full_signature": "private void prettyPrintIndentation()", "class_method_signature": "MarcXmlEncoder.prettyPrintIndentation()", "testcase": false, "constructor": false}, {"identifier": "prettyPrintNewLine", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void prettyPrintNewLine()", "full_signature": "private void prettyPrintNewLine()", "class_method_signature": "MarcXmlEncoder.prettyPrintNewLine()", "testcase": false, "constructor": false}, {"identifier": "sendAndClearData", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void sendAndClearData()", "full_signature": "private void sendAndClearData()", "class_method_signature": "MarcXmlEncoder.sendAndClearData()", "testcase": false, "constructor": false}], "file": "metafacture-biblio/src/main/java/org/metafacture/biblio/marc21/MarcXmlEncoder.java"}, "focal_method": {"identifier": "omitXmlDeclaration", "parameters": "(boolean omitXmlDeclaration)", "modifiers": "public", "return": "void", "body": "public void omitXmlDeclaration(boolean omitXmlDeclaration) {\n        this.omitXmlDeclaration = omitXmlDeclaration;\n    }", "signature": "void omitXmlDeclaration(boolean omitXmlDeclaration)", "full_signature": "public void omitXmlDeclaration(boolean omitXmlDeclaration)", "class_method_signature": "MarcXmlEncoder.omitXmlDeclaration(boolean omitXmlDeclaration)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 8483862, "url": "https://github.com/metafacture/metafacture-core", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 54, "size": 3669, "license": "licensed"}}