{"test_class": {"identifier": "HtmlDecoderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private StreamReceiver receiver;", "modifier": "@Mock\n    private", "type": "StreamReceiver", "declarator": "receiver", "var_name": "receiver"}, {"original_string": "private HtmlDecoder htmlDecoder;", "modifier": "private", "type": "HtmlDecoder", "declarator": "htmlDecoder", "var_name": "htmlDecoder"}], "file": "metafacture-html/src/test/java/org/metafacture/html/HtmlDecoderTest.java"}, "test_case": {"identifier": "nestedEntities", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void nestedEntities() {\n        htmlDecoder.process(new StringReader(\"<ul><li>Item</li></ul>\"));\n        final InOrder ordered = inOrder(receiver);\n        ordered.verify(receiver).startEntity(\"ul\");\n        ordered.verify(receiver).startEntity(\"li\");\n        ordered.verify(receiver).literal(\"value\", \"Item\");\n        // elements above plus body, html\n        ordered.verify(receiver, times(4)).endEntity();\n\n    }", "signature": "void nestedEntities()", "full_signature": "@Test public void nestedEntities()", "class_method_signature": "HtmlDecoderTest.nestedEntities()", "testcase": true, "constructor": false, "invocations": ["process", "inOrder", "startEntity", "verify", "startEntity", "verify", "literal", "verify", "endEntity", "verify", "times"]}, "focal_class": {"identifier": "HtmlDecoder", "superclass": "extends DefaultObjectPipe<Reader, StreamReceiver>", "interfaces": "", "fields": [], "methods": [{"identifier": "process", "parameters": "(final Reader reader)", "modifiers": "@Override public", "return": "void", "signature": "void process(final Reader reader)", "full_signature": "@Override public void process(final Reader reader)", "class_method_signature": "HtmlDecoder.process(final Reader reader)", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(Element parent, StreamReceiver receiver)", "modifiers": "private", "return": "void", "signature": "void process(Element parent, StreamReceiver receiver)", "full_signature": "private void process(Element parent, StreamReceiver receiver)", "class_method_signature": "HtmlDecoder.process(Element parent, StreamReceiver receiver)", "testcase": false, "constructor": false}], "file": "metafacture-html/src/main/java/org/metafacture/html/HtmlDecoder.java"}, "focal_method": {"identifier": "process", "parameters": "(final Reader reader)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void process(final Reader reader) {\n        try {\n            StreamReceiver receiver = getReceiver();\n            receiver.startRecord(UUID.randomUUID().toString());\n            Document document = Jsoup.parse(IOUtils.toString(reader));\n            process(document, receiver);\n            receiver.endRecord();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }", "signature": "void process(final Reader reader)", "full_signature": "@Override public void process(final Reader reader)", "class_method_signature": "HtmlDecoder.process(final Reader reader)", "testcase": false, "constructor": false, "invocations": ["getReceiver", "startRecord", "toString", "randomUUID", "parse", "toString", "process", "endRecord", "printStackTrace"]}, "repository": {"repo_id": 8483862, "url": "https://github.com/metafacture/metafacture-core", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 54, "size": 3669, "license": "licensed"}}