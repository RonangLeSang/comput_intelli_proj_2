{"test_class": {"identifier": "JsonDecoderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public MockitoRule mockitoRule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "mockitoRule = MockitoJUnit.rule()", "var_name": "mockitoRule"}, {"original_string": "@Rule\n    public ExpectedException exception = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "exception = ExpectedException.none()", "var_name": "exception"}, {"original_string": "@Mock\n    private StreamReceiver receiver;", "modifier": "@Mock\n    private", "type": "StreamReceiver", "declarator": "receiver", "var_name": "receiver"}, {"original_string": "private JsonDecoder jsonDecoder;", "modifier": "private", "type": "JsonDecoder", "declarator": "jsonDecoder", "var_name": "jsonDecoder"}], "file": "metafacture-json/src/test/java/org/metafacture/json/JsonDecoderTest.java"}, "test_case": {"identifier": "testShouldProcessRecords", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testShouldProcessRecords() {\n        jsonDecoder.process(\n            \"{\" +\n                \"\\\"lit1\\\":\\\"value 1\\\",\" +\n                \"\\\" ent1\\\":{\" +\n                    \"\\\"lit2\\\":\\\"value {x}\\\",\" +\n                    \"\\\"lit\\\\\\\\3\\\":\\\"value 2 \\\"\" +\n                \"},\" +\n                \"\\\"lit4\\\":\\\"value '3'\\\",\" +\n                \"\\\"lit5\\\":null\" +\n            \"}\");\n\n        final InOrder ordered = inOrder(receiver);\n        ordered.verify(receiver).startRecord(\"1\");\n        ordered.verify(receiver).literal(\"lit1\", \"value 1\");\n        ordered.verify(receiver).startEntity(\" ent1\");\n        ordered.verify(receiver).literal(\"lit2\", \"value {x}\");\n        ordered.verify(receiver).literal(\"lit\\\\3\", \"value 2 \");\n        ordered.verify(receiver).endEntity();\n        ordered.verify(receiver).literal(\"lit4\", \"value '3'\");\n        ordered.verify(receiver).literal(\"lit5\", null);\n        ordered.verify(receiver).endRecord();\n    }", "signature": "void testShouldProcessRecords()", "full_signature": "@Test public void testShouldProcessRecords()", "class_method_signature": "JsonDecoderTest.testShouldProcessRecords()", "testcase": true, "constructor": false, "invocations": ["process", "inOrder", "startRecord", "verify", "literal", "verify", "startEntity", "verify", "literal", "verify", "literal", "verify", "endEntity", "verify", "literal", "verify", "literal", "verify", "endRecord", "verify"]}, "focal_class": {"identifier": "JsonDecoder", "superclass": "extends DefaultObjectPipe<String, StreamReceiver>", "interfaces": "", "fields": [{"original_string": "public static final String DEFAULT_ARRAY_MARKER = JsonEncoder.ARRAY_MARKER;", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_ARRAY_MARKER = JsonEncoder.ARRAY_MARKER", "var_name": "DEFAULT_ARRAY_MARKER"}, {"original_string": "public static final String DEFAULT_ARRAY_NAME = \"%d\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_ARRAY_NAME = \"%d\"", "var_name": "DEFAULT_ARRAY_NAME"}, {"original_string": "public static final String DEFAULT_RECORD_ID = \"%d\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_RECORD_ID = \"%d\"", "var_name": "DEFAULT_RECORD_ID"}, {"original_string": "private final JsonFactory jsonFactory = new JsonFactory();", "modifier": "private final", "type": "JsonFactory", "declarator": "jsonFactory = new JsonFactory()", "var_name": "jsonFactory"}, {"original_string": "private JsonParser jsonParser;", "modifier": "private", "type": "JsonParser", "declarator": "jsonParser", "var_name": "jsonParser"}, {"original_string": "private String arrayMarker;", "modifier": "private", "type": "String", "declarator": "arrayMarker", "var_name": "arrayMarker"}, {"original_string": "private String arrayName;", "modifier": "private", "type": "String", "declarator": "arrayName", "var_name": "arrayName"}, {"original_string": "private String recordId;", "modifier": "private", "type": "String", "declarator": "recordId", "var_name": "recordId"}, {"original_string": "private int recordCount;", "modifier": "private", "type": "int", "declarator": "recordCount", "var_name": "recordCount"}], "methods": [{"identifier": "JsonDecoder", "parameters": "()", "modifiers": "public", "return": "", "signature": " JsonDecoder()", "full_signature": "public  JsonDecoder()", "class_method_signature": "JsonDecoder.JsonDecoder()", "testcase": false, "constructor": true}, {"identifier": "setArrayMarker", "parameters": "(final String arrayMarker)", "modifiers": "public", "return": "void", "signature": "void setArrayMarker(final String arrayMarker)", "full_signature": "public void setArrayMarker(final String arrayMarker)", "class_method_signature": "JsonDecoder.setArrayMarker(final String arrayMarker)", "testcase": false, "constructor": false}, {"identifier": "getArrayMarker", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getArrayMarker()", "full_signature": "public String getArrayMarker()", "class_method_signature": "JsonDecoder.getArrayMarker()", "testcase": false, "constructor": false}, {"identifier": "setArrayName", "parameters": "(final String arrayName)", "modifiers": "public", "return": "void", "signature": "void setArrayName(final String arrayName)", "full_signature": "public void setArrayName(final String arrayName)", "class_method_signature": "JsonDecoder.setArrayName(final String arrayName)", "testcase": false, "constructor": false}, {"identifier": "getArrayName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getArrayName()", "full_signature": "public String getArrayName()", "class_method_signature": "JsonDecoder.getArrayName()", "testcase": false, "constructor": false}, {"identifier": "setRecordId", "parameters": "(final String recordId)", "modifiers": "public", "return": "void", "signature": "void setRecordId(final String recordId)", "full_signature": "public void setRecordId(final String recordId)", "class_method_signature": "JsonDecoder.setRecordId(final String recordId)", "testcase": false, "constructor": false}, {"identifier": "getRecordId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRecordId()", "full_signature": "public String getRecordId()", "class_method_signature": "JsonDecoder.getRecordId()", "testcase": false, "constructor": false}, {"identifier": "setRecordCount", "parameters": "(final int recordCount)", "modifiers": "public", "return": "void", "signature": "void setRecordCount(final int recordCount)", "full_signature": "public void setRecordCount(final int recordCount)", "class_method_signature": "JsonDecoder.setRecordCount(final int recordCount)", "testcase": false, "constructor": false}, {"identifier": "getRecordCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRecordCount()", "full_signature": "public int getRecordCount()", "class_method_signature": "JsonDecoder.getRecordCount()", "testcase": false, "constructor": false}, {"identifier": "resetRecordCount", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void resetRecordCount()", "full_signature": "public void resetRecordCount()", "class_method_signature": "JsonDecoder.resetRecordCount()", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(final String string)", "modifiers": "@Override public", "return": "void", "signature": "void process(final String string)", "full_signature": "@Override public void process(final String string)", "class_method_signature": "JsonDecoder.process(final String string)", "testcase": false, "constructor": false}, {"identifier": "onResetStream", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void onResetStream()", "full_signature": "@Override protected void onResetStream()", "class_method_signature": "JsonDecoder.onResetStream()", "testcase": false, "constructor": false}, {"identifier": "createParser", "parameters": "(final String string)", "modifiers": "private", "return": "void", "signature": "void createParser(final String string)", "full_signature": "private void createParser(final String string)", "class_method_signature": "JsonDecoder.createParser(final String string)", "testcase": false, "constructor": false}, {"identifier": "closeParser", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void closeParser()", "full_signature": "private void closeParser()", "class_method_signature": "JsonDecoder.closeParser()", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void decode()", "full_signature": "private void decode()", "class_method_signature": "JsonDecoder.decode()", "testcase": false, "constructor": false}, {"identifier": "decodeObject", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void decodeObject()", "full_signature": "private void decodeObject()", "class_method_signature": "JsonDecoder.decodeObject()", "testcase": false, "constructor": false}, {"identifier": "decodeArray", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void decodeArray()", "full_signature": "private void decodeArray()", "class_method_signature": "JsonDecoder.decodeArray()", "testcase": false, "constructor": false}, {"identifier": "decodeValue", "parameters": "(final String name, final JsonToken token)", "modifiers": "private", "return": "void", "signature": "void decodeValue(final String name, final JsonToken token)", "full_signature": "private void decodeValue(final String name, final JsonToken token)", "class_method_signature": "JsonDecoder.decodeValue(final String name, final JsonToken token)", "testcase": false, "constructor": false}], "file": "metafacture-json/src/main/java/org/metafacture/json/JsonDecoder.java"}, "focal_method": {"identifier": "process", "parameters": "(final String string)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void process(final String string) {\n        assert !isClosed();\n\n        createParser(string);\n\n        try {\n            decode();\n        }\n        catch (final IOException e) {\n            throw new MetafactureException(e);\n        }\n        finally {\n            closeParser();\n        }\n    }", "signature": "void process(final String string)", "full_signature": "@Override public void process(final String string)", "class_method_signature": "JsonDecoder.process(final String string)", "testcase": false, "constructor": false, "invocations": ["isClosed", "createParser", "decode", "closeParser"]}, "repository": {"repo_id": 8483862, "url": "https://github.com/metafacture/metafacture-core", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 54, "size": 3669, "license": "licensed"}}