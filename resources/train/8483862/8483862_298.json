{"test_class": {"identifier": "PojoDecoderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private StreamReceiver receiver;", "modifier": "@Mock\n    private", "type": "StreamReceiver", "declarator": "receiver", "var_name": "receiver"}], "file": "metafacture-javaintegration/src/test/java/org/metafacture/javaintegration/pojo/PojoDecoderTest.java"}, "test_case": {"identifier": "shouldDecodeSimpleListPojo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldDecodeSimpleListPojo() {\n        final PojoDecoder<SimpleListPojo> pojoDecoder = new PojoDecoder<>();\n        pojoDecoder.setReceiver(receiver);\n\n        final List<String> valueList = Arrays.asList(\"list-value1\", \"list-value2\");\n        final SimpleListPojo simpleListPojo = new SimpleListPojo();\n        simpleListPojo.setListField(valueList);\n        pojoDecoder.process(simpleListPojo);\n\n        final InOrder ordered = inOrder(receiver);\n        ordered.verify(receiver).startRecord(\"\");\n        ordered.verify(receiver).literal(\"listField\", \"list-value1\");\n        ordered.verify(receiver).literal(\"listField\", \"list-value2\");\n        ordered.verify(receiver).endRecord();\n    }", "signature": "void shouldDecodeSimpleListPojo()", "full_signature": "@Test public void shouldDecodeSimpleListPojo()", "class_method_signature": "PojoDecoderTest.shouldDecodeSimpleListPojo()", "testcase": true, "constructor": false, "invocations": ["setReceiver", "asList", "setListField", "process", "inOrder", "startRecord", "verify", "literal", "verify", "literal", "verify", "endRecord", "verify"]}, "focal_class": {"identifier": "PojoDecoder", "superclass": "extends DefaultObjectPipe<T, StreamReceiver>", "interfaces": "", "fields": [{"original_string": "private final TypeDecoderFactory typeDecoderFactory = new TypeDecoderFactory();", "modifier": "private final", "type": "TypeDecoderFactory", "declarator": "typeDecoderFactory = new TypeDecoderFactory()", "var_name": "typeDecoderFactory"}], "methods": [{"identifier": "process", "parameters": "(final T obj)", "modifiers": "@Override public", "return": "void", "signature": "void process(final T obj)", "full_signature": "@Override public void process(final T obj)", "class_method_signature": "PojoDecoder.process(final T obj)", "testcase": false, "constructor": false}], "file": "metafacture-javaintegration/src/main/java/org/metafacture/javaintegration/pojo/PojoDecoder.java"}, "focal_method": {"identifier": "process", "parameters": "(final T obj)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void process(final T obj) {\n        if (obj == null) {\n            return;\n        }\n        assert !isClosed();\n        final TypeDecoder typeDecoder = typeDecoderFactory.create(obj.getClass());\n        getReceiver().startRecord(\"\");\n        typeDecoder.decodeToStream(getReceiver(), null, obj);\n        getReceiver().endRecord();\n    }", "signature": "void process(final T obj)", "full_signature": "@Override public void process(final T obj)", "class_method_signature": "PojoDecoder.process(final T obj)", "testcase": false, "constructor": false, "invocations": ["isClosed", "create", "getClass", "startRecord", "getReceiver", "decodeToStream", "getReceiver", "endRecord", "getReceiver"]}, "repository": {"repo_id": 8483862, "url": "https://github.com/metafacture/metafacture-core", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 54, "size": 3669, "license": "licensed"}}