{"test_class": {"identifier": "DonationActivityTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "DonationActivity activity;", "modifier": "", "type": "DonationActivity", "declarator": "activity", "var_name": "activity"}], "file": "app/src/test/java/com/zegoggles/smssync/activity/donation/DonationActivityTest.java"}, "test_case": {"identifier": "testResultMessageUserCanceled", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void testResultMessageUserCanceled() {\n        activity.onPurchasesUpdated(BillingResult.newBuilder().setResponseCode(USER_CANCELED).build(), Collections.<Purchase>emptyList());\n        assertToast(\"Donation failed: canceled\");\n    }", "signature": "void testResultMessageUserCanceled()", "full_signature": "@Test public void testResultMessageUserCanceled()", "class_method_signature": "DonationActivityTest.testResultMessageUserCanceled()", "testcase": true, "constructor": false, "invocations": ["onPurchasesUpdated", "build", "setResponseCode", "newBuilder", "emptyList", "assertToast"]}, "focal_class": {"identifier": "DonationActivity", "superclass": "extends ThemeActivity", "interfaces": "implements\n        SkuDetailsResponseListener,\n        PurchasesUpdatedListener,\n        SkuSelectionListener", "fields": [{"original_string": "private static boolean DEBUG_IAB = BuildConfig.DEBUG;", "modifier": "private static", "type": "boolean", "declarator": "DEBUG_IAB = BuildConfig.DEBUG", "var_name": "DEBUG_IAB"}, {"original_string": "private @Nullable BillingClient billingClient;", "modifier": "private @Nullable", "type": "BillingClient", "declarator": "billingClient", "var_name": "billingClient"}, {"original_string": "private boolean stateSaved;", "modifier": "private", "type": "boolean", "declarator": "stateSaved", "var_name": "stateSaved"}], "methods": [{"identifier": "onCreate", "parameters": "(Bundle savedInstanceState)", "modifiers": "public", "return": "void", "signature": "void onCreate(Bundle savedInstanceState)", "full_signature": "public void onCreate(Bundle savedInstanceState)", "class_method_signature": "DonationActivity.onCreate(Bundle savedInstanceState)", "testcase": false, "constructor": false}, {"identifier": "onDestroy", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void onDestroy()", "full_signature": "@Override protected void onDestroy()", "class_method_signature": "DonationActivity.onDestroy()", "testcase": false, "constructor": false}, {"identifier": "onSaveInstanceState", "parameters": "(Bundle outState)", "modifiers": "@Override protected", "return": "void", "signature": "void onSaveInstanceState(Bundle outState)", "full_signature": "@Override protected void onSaveInstanceState(Bundle outState)", "class_method_signature": "DonationActivity.onSaveInstanceState(Bundle outState)", "testcase": false, "constructor": false}, {"identifier": "onSkuDetailsResponse", "parameters": "(BillingResult billingResult, List<SkuDetails> details)", "modifiers": "@Override public", "return": "void", "signature": "void onSkuDetailsResponse(BillingResult billingResult, List<SkuDetails> details)", "full_signature": "@Override public void onSkuDetailsResponse(BillingResult billingResult, List<SkuDetails> details)", "class_method_signature": "DonationActivity.onSkuDetailsResponse(BillingResult billingResult, List<SkuDetails> details)", "testcase": false, "constructor": false}, {"identifier": "onPurchasesUpdated", "parameters": "(BillingResult result, @Nullable List<Purchase> purchases)", "modifiers": "@Override public", "return": "void", "signature": "void onPurchasesUpdated(BillingResult result, @Nullable List<Purchase> purchases)", "full_signature": "@Override public void onPurchasesUpdated(BillingResult result, @Nullable List<Purchase> purchases)", "class_method_signature": "DonationActivity.onPurchasesUpdated(BillingResult result, @Nullable List<Purchase> purchases)", "testcase": false, "constructor": false}, {"identifier": "selectedSku", "parameters": "(SkuDetails details)", "modifiers": "@Override public", "return": "void", "signature": "void selectedSku(SkuDetails details)", "full_signature": "@Override public void selectedSku(SkuDetails details)", "class_method_signature": "DonationActivity.selectedSku(SkuDetails details)", "testcase": false, "constructor": false}, {"identifier": "queryAvailableSkus", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void queryAvailableSkus()", "full_signature": "private void queryAvailableSkus()", "class_method_signature": "DonationActivity.queryAvailableSkus()", "testcase": false, "constructor": false}, {"identifier": "showSelectDialog", "parameters": "(List<SkuDetails> skuDetails)", "modifiers": "private", "return": "void", "signature": "void showSelectDialog(List<SkuDetails> skuDetails)", "full_signature": "private void showSelectDialog(List<SkuDetails> skuDetails)", "class_method_signature": "DonationActivity.showSelectDialog(List<SkuDetails> skuDetails)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(String s)", "modifiers": "private static", "return": "void", "signature": "void log(String s)", "full_signature": "private static void log(String s)", "class_method_signature": "DonationActivity.log(String s)", "testcase": false, "constructor": false}, {"identifier": "acknowledgePurchase", "parameters": "(final Purchase purchase)", "modifiers": "private", "return": "void", "signature": "void acknowledgePurchase(final Purchase purchase)", "full_signature": "private void acknowledgePurchase(final Purchase purchase)", "class_method_signature": "DonationActivity.acknowledgePurchase(final Purchase purchase)", "testcase": false, "constructor": false}, {"identifier": "checkUserDonationStatus", "parameters": "(Context context,\n                                               final DonationStatusListener listener)", "modifiers": "public static", "return": "void", "signature": "void checkUserDonationStatus(Context context,\n                                               final DonationStatusListener listener)", "full_signature": "public static void checkUserDonationStatus(Context context,\n                                               final DonationStatusListener listener)", "class_method_signature": "DonationActivity.checkUserDonationStatus(Context context,\n                                               final DonationStatusListener listener)", "testcase": false, "constructor": false}, {"identifier": "userHasDonated", "parameters": "(List<Purchase> result)", "modifiers": "private static", "return": "boolean", "signature": "boolean userHasDonated(List<Purchase> result)", "full_signature": "private static boolean userHasDonated(List<Purchase> result)", "class_method_signature": "DonationActivity.userHasDonated(List<Purchase> result)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/zegoggles/smssync/activity/donation/DonationActivity.java"}, "focal_method": {"identifier": "onPurchasesUpdated", "parameters": "(BillingResult result, @Nullable List<Purchase> purchases)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onPurchasesUpdated(BillingResult result, @Nullable List<Purchase> purchases) {\n        log(\"onPurchasesUpdated(\" + result + \", \" + purchases + \")\");\n        String message;\n        switch (result.getResponseCode()) {\n            case OK:\n                if (purchases != null)  {\n                    for (Purchase p : purchases) {\n                        acknowledgePurchase(p);\n                    }\n                }\n                message = getString(R.string.ui_donation_success_message);\n                break;\n            case ITEM_UNAVAILABLE:\n                message = getString(R.string.ui_donation_failure_message,\n                        getString(R.string.donation_error_unavailable));\n                break;\n            case ITEM_ALREADY_OWNED:\n                message = getString(R.string.ui_donation_failure_message,\n                        getString(R.string.donation_error_already_owned));\n                break;\n            case USER_CANCELED:\n                message = getString(R.string.ui_donation_failure_message,\n                        getString(R.string.donation_error_canceled));\n                break;\n            case BILLING_UNAVAILABLE:\n            case FEATURE_NOT_SUPPORTED:\n            case ITEM_NOT_OWNED:\n            case SERVICE_DISCONNECTED:\n            case SERVICE_UNAVAILABLE:\n            case DEVELOPER_ERROR:\n            case ERROR:\n            case SERVICE_TIMEOUT:\n            default:\n                message = getString(R.string.ui_donation_failure_message,\n                        getString(R.string.donation_unspecified_error, result.getResponseCode()));\n                break;\n        }\n\n        Toast.makeText(this, message, LENGTH_LONG).show();\n        finish();\n    }", "signature": "void onPurchasesUpdated(BillingResult result, @Nullable List<Purchase> purchases)", "full_signature": "@Override public void onPurchasesUpdated(BillingResult result, @Nullable List<Purchase> purchases)", "class_method_signature": "DonationActivity.onPurchasesUpdated(BillingResult result, @Nullable List<Purchase> purchases)", "testcase": false, "constructor": false, "invocations": ["log", "getResponseCode", "acknowledgePurchase", "getString", "getString", "getString", "getString", "getString", "getString", "getString", "getString", "getString", "getResponseCode", "show", "makeText", "finish"]}, "repository": {"repo_id": 459348, "url": "https://github.com/jberkel/sms-backup-plus", "language": "Java", "is_fork": false, "fork_count": 481, "stargazer_count": 1507, "size": 16365, "license": "licensed"}}