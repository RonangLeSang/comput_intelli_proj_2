{"test_class": {"identifier": "VehicleSearchServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private VehicleSearchService service;", "modifier": "private", "type": "VehicleSearchService", "declarator": "service", "var_name": "service"}], "file": "onebusaway-nyc-admin-webapp/src/test/java/org/onebusaway/nyc/admin/service/impl/VehicleSearchServiceImplTest.java"}, "test_case": {"identifier": "testSearchPartialMatchingParameters", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSearchPartialMatchingParameters() {\n\t\tMap<VehicleSearchParameters, String> parameters = \n\t\t\t\tbuildSearchParameters(\"\",\"B63\",\"\", \"All\",\"All\",\"All\", \"false\", \"false\");\n\t\tList<VehicleStatus> vehicleStatusRecords = buildVehicleStatusRecords();\n\t\t\n\t\tList<VehicleStatus> matchingRecords = service.search(vehicleStatusRecords, parameters);\n\t\t\n\t\tassertEquals(\"Expecting 2 records to match\", matchingRecords.size(), 2);\n\t}", "signature": "void testSearchPartialMatchingParameters()", "full_signature": "@Test public void testSearchPartialMatchingParameters()", "class_method_signature": "VehicleSearchServiceImplTest.testSearchPartialMatchingParameters()", "testcase": true, "constructor": false, "invocations": ["buildSearchParameters", "buildVehicleStatusRecords", "search", "assertEquals", "size"]}, "focal_class": {"identifier": "VehicleSearchServiceImpl", "superclass": "", "interfaces": "implements VehicleSearchService", "fields": [], "methods": [{"identifier": "search", "parameters": "(List<VehicleStatus> vehicleStatusRecords,\n\t\t\tMap<VehicleSearchParameters, String> searchParameters)", "modifiers": "@Override public", "return": "List<VehicleStatus>", "signature": "List<VehicleStatus> search(List<VehicleStatus> vehicleStatusRecords,\n\t\t\tMap<VehicleSearchParameters, String> searchParameters)", "full_signature": "@Override public List<VehicleStatus> search(List<VehicleStatus> vehicleStatusRecords,\n\t\t\tMap<VehicleSearchParameters, String> searchParameters)", "class_method_signature": "VehicleSearchServiceImpl.search(List<VehicleStatus> vehicleStatusRecords,\n\t\t\tMap<VehicleSearchParameters, String> searchParameters)", "testcase": false, "constructor": false}, {"identifier": "searchVehiclesInEmergency", "parameters": "(\n\t\t\tList<VehicleStatus> vehicleStatusRecords)", "modifiers": "@Override public", "return": "List<VehicleStatus>", "signature": "List<VehicleStatus> searchVehiclesInEmergency(\n\t\t\tList<VehicleStatus> vehicleStatusRecords)", "full_signature": "@Override public List<VehicleStatus> searchVehiclesInEmergency(\n\t\t\tList<VehicleStatus> vehicleStatusRecords)", "class_method_signature": "VehicleSearchServiceImpl.searchVehiclesInEmergency(\n\t\t\tList<VehicleStatus> vehicleStatusRecords)", "testcase": false, "constructor": false}, {"identifier": "searchVehiclesInRevenueService", "parameters": "(\n\t\t\tList<VehicleStatus> vehicleStatusRecords)", "modifiers": "@Override public", "return": "List<VehicleStatus>", "signature": "List<VehicleStatus> searchVehiclesInRevenueService(\n\t\t\tList<VehicleStatus> vehicleStatusRecords)", "full_signature": "@Override public List<VehicleStatus> searchVehiclesInRevenueService(\n\t\t\tList<VehicleStatus> vehicleStatusRecords)", "class_method_signature": "VehicleSearchServiceImpl.searchVehiclesInRevenueService(\n\t\t\tList<VehicleStatus> vehicleStatusRecords)", "testcase": false, "constructor": false}, {"identifier": "searchVehiclesTracked", "parameters": "(int minutes, List<VehicleStatus> vehicleStatusRecords)", "modifiers": "@Override public", "return": "List<VehicleStatus>", "signature": "List<VehicleStatus> searchVehiclesTracked(int minutes, List<VehicleStatus> vehicleStatusRecords)", "full_signature": "@Override public List<VehicleStatus> searchVehiclesTracked(int minutes, List<VehicleStatus> vehicleStatusRecords)", "class_method_signature": "VehicleSearchServiceImpl.searchVehiclesTracked(int minutes, List<VehicleStatus> vehicleStatusRecords)", "testcase": false, "constructor": false}, {"identifier": "searchActiveRuns", "parameters": "()", "modifiers": "@Override public", "return": "List<VehicleStatus>", "signature": "List<VehicleStatus> searchActiveRuns()", "full_signature": "@Override public List<VehicleStatus> searchActiveRuns()", "class_method_signature": "VehicleSearchServiceImpl.searchActiveRuns()", "testcase": false, "constructor": false}, {"identifier": "applyFilters", "parameters": "(VehicleStatus vehicleStatus, List<Filter<VehicleStatus>> filters)", "modifiers": "private", "return": "boolean", "signature": "boolean applyFilters(VehicleStatus vehicleStatus, List<Filter<VehicleStatus>> filters)", "full_signature": "private boolean applyFilters(VehicleStatus vehicleStatus, List<Filter<VehicleStatus>> filters)", "class_method_signature": "VehicleSearchServiceImpl.applyFilters(VehicleStatus vehicleStatus, List<Filter<VehicleStatus>> filters)", "testcase": false, "constructor": false}, {"identifier": "buildFilters", "parameters": "(\n\t\t\tMap<VehicleSearchParameters, String> searchParameters)", "modifiers": "private", "return": "List<Filter<VehicleStatus>>", "signature": "List<Filter<VehicleStatus>> buildFilters(\n\t\t\tMap<VehicleSearchParameters, String> searchParameters)", "full_signature": "private List<Filter<VehicleStatus>> buildFilters(\n\t\t\tMap<VehicleSearchParameters, String> searchParameters)", "class_method_signature": "VehicleSearchServiceImpl.buildFilters(\n\t\t\tMap<VehicleSearchParameters, String> searchParameters)", "testcase": false, "constructor": false}], "file": "onebusaway-nyc-admin-webapp/src/main/java/org/onebusaway/nyc/admin/service/impl/VehicleSearchServiceImpl.java"}, "focal_method": {"identifier": "search", "parameters": "(List<VehicleStatus> vehicleStatusRecords,\n\t\t\tMap<VehicleSearchParameters, String> searchParameters)", "modifiers": "@Override public", "return": "List<VehicleStatus>", "body": "@Override\n\tpublic List<VehicleStatus> search(List<VehicleStatus> vehicleStatusRecords,\n\t\t\tMap<VehicleSearchParameters, String> searchParameters) {\n\t\t\n\t\tList<VehicleStatus> matchingRecords = new ArrayList<VehicleStatus>();\n\n\t\t//Build filters corresponding to the search parameters\n\t\tList<Filter<VehicleStatus>> filters = buildFilters(searchParameters);\n\t\t\n\t\t//Since there are no filters specified, return all the records as matched records\n\t\tif(filters.isEmpty()) {\n\t\t\tmatchingRecords.addAll(vehicleStatusRecords);\n\t\t} else {\n\t\t\t//Apply each filter to each record\n\t\t\tfor(VehicleStatus vehicleStatus : vehicleStatusRecords) {\n\t\t\t\tboolean matches = applyFilters(vehicleStatus, filters);\n\t\t\t\tif(matches) {\n\t\t\t\t\tmatchingRecords.add(vehicleStatus);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn matchingRecords;\n\t}", "signature": "List<VehicleStatus> search(List<VehicleStatus> vehicleStatusRecords,\n\t\t\tMap<VehicleSearchParameters, String> searchParameters)", "full_signature": "@Override public List<VehicleStatus> search(List<VehicleStatus> vehicleStatusRecords,\n\t\t\tMap<VehicleSearchParameters, String> searchParameters)", "class_method_signature": "VehicleSearchServiceImpl.search(List<VehicleStatus> vehicleStatusRecords,\n\t\t\tMap<VehicleSearchParameters, String> searchParameters)", "testcase": false, "constructor": false, "invocations": ["buildFilters", "isEmpty", "addAll", "applyFilters", "add"]}, "repository": {"repo_id": 2259237, "url": "https://github.com/camsys/onebusaway-nyc", "stars": 38, "created": "8/24/2011 2:52:13 AM +00:00", "updates": "2019-12-21T00:37:49+00:00", "fork": "False", "license": "licensed"}}