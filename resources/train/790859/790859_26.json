{"test_class": {"identifier": "InputStreamTransformsTest", "superclass": "", "interfaces": "", "fields": [], "file": "transform/src/test/java/org/switchyard/transform/ootb/io/InputStreamTransformsTest.java"}, "test_case": {"identifier": "testToReader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToReader() throws Exception {\n        Assert.assertNotNull(InputStreamTransforms.TRANSFORMER.toReader(newInputStream(\"Hello SwitchYard\")));\n    }", "signature": "void testToReader()", "full_signature": "@Test public void testToReader()", "class_method_signature": "InputStreamTransformsTest.testToReader()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "toReader", "newInputStream"]}, "focal_class": {"identifier": "InputStreamTransforms", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final InputStreamTransforms TRANSFORMER = new InputStreamTransforms();", "modifier": "public static final", "type": "InputStreamTransforms", "declarator": "TRANSFORMER = new InputStreamTransforms()", "var_name": "TRANSFORMER"}, {"original_string": "private static final Logger LOGGER = Logger.getLogger(ReaderTransforms.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(ReaderTransforms.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "toString", "parameters": "(InputStream inStream)", "modifiers": "@Transformer public", "return": "String", "signature": "String toString(InputStream inStream)", "full_signature": "@Transformer public String toString(InputStream inStream)", "class_method_signature": "InputStreamTransforms.toString(InputStream inStream)", "testcase": false, "constructor": false}, {"identifier": "toReader", "parameters": "(InputStream inStream)", "modifiers": "@Transformer public", "return": "Reader", "signature": "Reader toReader(InputStream inStream)", "full_signature": "@Transformer public Reader toReader(InputStream inStream)", "class_method_signature": "InputStreamTransforms.toReader(InputStream inStream)", "testcase": false, "constructor": false}, {"identifier": "toInputSource", "parameters": "(InputStream inStream)", "modifiers": "@Transformer public", "return": "InputSource", "signature": "InputSource toInputSource(InputStream inStream)", "full_signature": "@Transformer public InputSource toInputSource(InputStream inStream)", "class_method_signature": "InputStreamTransforms.toInputSource(InputStream inStream)", "testcase": false, "constructor": false}, {"identifier": "toInteger", "parameters": "(InputStream inStream)", "modifiers": "@Transformer public", "return": "Integer", "signature": "Integer toInteger(InputStream inStream)", "full_signature": "@Transformer public Integer toInteger(InputStream inStream)", "class_method_signature": "InputStreamTransforms.toInteger(InputStream inStream)", "testcase": false, "constructor": false}, {"identifier": "toLong", "parameters": "(InputStream inStream)", "modifiers": "@Transformer public", "return": "Long", "signature": "Long toLong(InputStream inStream)", "full_signature": "@Transformer public Long toLong(InputStream inStream)", "class_method_signature": "InputStreamTransforms.toLong(InputStream inStream)", "testcase": false, "constructor": false}, {"identifier": "toShort", "parameters": "(InputStream inStream)", "modifiers": "@Transformer public", "return": "Short", "signature": "Short toShort(InputStream inStream)", "full_signature": "@Transformer public Short toShort(InputStream inStream)", "class_method_signature": "InputStreamTransforms.toShort(InputStream inStream)", "testcase": false, "constructor": false}, {"identifier": "toChars", "parameters": "(InputStream inStream)", "modifiers": "@Transformer public", "return": "char[]", "signature": "char[] toChars(InputStream inStream)", "full_signature": "@Transformer public char[] toChars(InputStream inStream)", "class_method_signature": "InputStreamTransforms.toChars(InputStream inStream)", "testcase": false, "constructor": false}, {"identifier": "toCharacter", "parameters": "(InputStream inStream)", "modifiers": "@Transformer public", "return": "Character", "signature": "Character toCharacter(InputStream inStream)", "full_signature": "@Transformer public Character toCharacter(InputStream inStream)", "class_method_signature": "InputStreamTransforms.toCharacter(InputStream inStream)", "testcase": false, "constructor": false}, {"identifier": "toBytes", "parameters": "(InputStream inStream)", "modifiers": "@Transformer public", "return": "byte[]", "signature": "byte[] toBytes(InputStream inStream)", "full_signature": "@Transformer public byte[] toBytes(InputStream inStream)", "class_method_signature": "InputStreamTransforms.toBytes(InputStream inStream)", "testcase": false, "constructor": false}, {"identifier": "toDouble", "parameters": "(InputStream inStream)", "modifiers": "@Transformer public", "return": "Double", "signature": "Double toDouble(InputStream inStream)", "full_signature": "@Transformer public Double toDouble(InputStream inStream)", "class_method_signature": "InputStreamTransforms.toDouble(InputStream inStream)", "testcase": false, "constructor": false}, {"identifier": "toFloat", "parameters": "(InputStream inStream)", "modifiers": "@Transformer public", "return": "Float", "signature": "Float toFloat(InputStream inStream)", "full_signature": "@Transformer public Float toFloat(InputStream inStream)", "class_method_signature": "InputStreamTransforms.toFloat(InputStream inStream)", "testcase": false, "constructor": false}], "file": "transform/src/main/java/org/switchyard/transform/ootb/io/InputStreamTransforms.java"}, "focal_method": {"identifier": "toReader", "parameters": "(InputStream inStream)", "modifiers": "@Transformer public", "return": "Reader", "body": "@Transformer\n    public Reader toReader(InputStream inStream) {\n        return new StringReader(toString(inStream));\n    }", "signature": "Reader toReader(InputStream inStream)", "full_signature": "@Transformer public Reader toReader(InputStream inStream)", "class_method_signature": "InputStreamTransforms.toReader(InputStream inStream)", "testcase": false, "constructor": false, "invocations": ["toString"]}, "repository": {"repo_id": 790859, "url": "https://github.com/jboss-switchyard/core", "language": "Java", "is_fork": false, "fork_count": 62, "stargazer_count": 43, "size": 9065, "license": "licensed"}}