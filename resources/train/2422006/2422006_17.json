{"test_class": {"identifier": "UserControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String NAME = \"Woody Allen\";", "modifier": "private static final", "type": "String", "declarator": "NAME = \"Woody Allen\"", "var_name": "NAME"}, {"original_string": "private UserController instance;", "modifier": "private", "type": "UserController", "declarator": "instance", "var_name": "instance"}, {"original_string": "@Mock\n\tprivate Model model;", "modifier": "@Mock\n\tprivate", "type": "Model", "declarator": "model", "var_name": "model"}, {"original_string": "@Mock\n\tprivate UserService userService;", "modifier": "@Mock\n\tprivate", "type": "UserService", "declarator": "userService", "var_name": "userService"}], "file": "cargo-cult/src/test/java/com/captaindebug/cargocult/ntier/UserControllerTest.java"}, "test_case": {"identifier": "testFindUser_valid_user", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testFindUser_valid_user() {\n\n\t\tUser expected = new User(0L, NAME, \"aaa@bbb.com\", new Date());\n\t\twhen(userService.findUser(NAME)).thenReturn(expected);\n\n\t\tString result = instance.findUser(NAME, model);\n\t\tassertEquals(\"user\", result);\n\n\t\tverify(model).addAttribute(\"user\", expected);\n\t}", "signature": "void testFindUser_valid_user()", "full_signature": "@Test public void testFindUser_valid_user()", "class_method_signature": "UserControllerTest.testFindUser_valid_user()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "findUser", "findUser", "assertEquals", "addAttribute", "verify"]}, "focal_class": {"identifier": "UserController", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate UserService userService;", "modifier": "@Autowired\n\tprivate", "type": "UserService", "declarator": "userService", "var_name": "userService"}], "methods": [{"identifier": "findUser", "parameters": "(@RequestParam(\"user\") String name, Model model)", "modifiers": "@RequestMapping(\"/find1\") public", "return": "String", "signature": "String findUser(@RequestParam(\"user\") String name, Model model)", "full_signature": "@RequestMapping(\"/find1\") public String findUser(@RequestParam(\"user\") String name, Model model)", "class_method_signature": "UserController.findUser(@RequestParam(\"user\") String name, Model model)", "testcase": false, "constructor": false}], "file": "cargo-cult/src/main/java/com/captaindebug/cargocult/ntier/UserController.java"}, "focal_method": {"identifier": "findUser", "parameters": "(@RequestParam(\"user\") String name, Model model)", "modifiers": "@RequestMapping(\"/find1\") public", "return": "String", "body": "@RequestMapping(\"/find1\")\n\tpublic String findUser(@RequestParam(\"user\") String name, Model model) {\n\n\t\tUser user = userService.findUser(name);\n\t\tmodel.addAttribute(\"user\", user);\n\t\treturn \"user\";\n\t}", "signature": "String findUser(@RequestParam(\"user\") String name, Model model)", "full_signature": "@RequestMapping(\"/find1\") public String findUser(@RequestParam(\"user\") String name, Model model)", "class_method_signature": "UserController.findUser(@RequestParam(\"user\") String name, Model model)", "testcase": false, "constructor": false, "invocations": ["findUser", "addAttribute"]}, "repository": {"repo_id": 2422006, "url": "https://github.com/roghughe/captaindebug", "language": "Java", "is_fork": false, "fork_count": 327, "stargazer_count": 193, "size": 3937, "license": "licensed"}}