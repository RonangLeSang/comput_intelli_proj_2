{"test_class": {"identifier": "FileLocatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FileLocator instance;", "modifier": "private", "type": "FileLocator", "declarator": "instance", "var_name": "instance"}, {"original_string": "private MyCallback callback;", "modifier": "private", "type": "MyCallback", "declarator": "callback", "var_name": "callback"}, {"original_string": "@Mock\n\tprivate File mockFile;", "modifier": "@Mock\n\tprivate", "type": "File", "declarator": "mockFile", "var_name": "mockFile"}, {"original_string": "@Mock\n\tprivate Results results;", "modifier": "@Mock\n\tprivate", "type": "Results", "declarator": "results", "var_name": "results"}, {"original_string": "private int count;", "modifier": "private", "type": "int", "declarator": "count", "var_name": "count"}], "file": "error-track/src/test/java/com/captaindebug/errortrack/file/FileLocatorTest.java"}, "test_case": {"identifier": "testFindFile_for_a_single_file", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testFindFile_for_a_single_file() {\n\n\t\twhen(mockFile.isDirectory()).thenReturn(false);\n\t\tinstance.findFile();\n\n\t\tassertEquals(1, count);\n\t\tverify(mockFile, never()).listFiles();\n\t}", "signature": "void testFindFile_for_a_single_file()", "full_signature": "@Test public void testFindFile_for_a_single_file()", "class_method_signature": "FileLocatorTest.testFindFile_for_a_single_file()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "isDirectory", "findFile", "assertEquals", "listFiles", "verify", "never"]}, "focal_class": {"identifier": "FileLocator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(FileLocator.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(FileLocator.class)", "var_name": "logger"}, {"original_string": "@Value(\"${scan.in}\")\n\tprivate String scanIn;", "modifier": "@Value(\"${scan.in}\")\n\tprivate", "type": "String", "declarator": "scanIn", "var_name": "scanIn"}, {"original_string": "@Autowired\n\t@Qualifier(\"fileValidator\")\n\tprivate Validator validator;", "modifier": "@Autowired\n\t@Qualifier(\"fileValidator\")\n\tprivate", "type": "Validator", "declarator": "validator", "var_name": "validator"}], "methods": [{"identifier": "findFile", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void findFile()", "full_signature": "public void findFile()", "class_method_signature": "FileLocator.findFile()", "testcase": false, "constructor": false}, {"identifier": "createFile", "parameters": "(String name)", "modifiers": "@VisibleForTesting", "return": "File", "signature": "File createFile(String name)", "full_signature": "@VisibleForTesting File createFile(String name)", "class_method_signature": "FileLocator.createFile(String name)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(File file)", "modifiers": "private", "return": "void", "signature": "void search(File file)", "full_signature": "private void search(File file)", "class_method_signature": "FileLocator.search(File file)", "testcase": false, "constructor": false}, {"identifier": "searchFiles", "parameters": "(File[] files)", "modifiers": "private", "return": "void", "signature": "void searchFiles(File[] files)", "full_signature": "private void searchFiles(File[] files)", "class_method_signature": "FileLocator.searchFiles(File[] files)", "testcase": false, "constructor": false}], "file": "error-track/src/main/java/com/captaindebug/errortrack/file/FileLocator.java"}, "focal_method": {"identifier": "findFile", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void findFile() {\n\n\t\tlogger.info(\"Searching in... {}\", scanIn);\n\t\tFile file = createFile(scanIn);\n\t\tsearch(file);\n\t}", "signature": "void findFile()", "full_signature": "public void findFile()", "class_method_signature": "FileLocator.findFile()", "testcase": false, "constructor": false, "invocations": ["info", "createFile", "search"]}, "repository": {"repo_id": 2422006, "url": "https://github.com/roghughe/captaindebug", "language": "Java", "is_fork": false, "fork_count": 327, "stargazer_count": 193, "size": 3937, "license": "licensed"}}