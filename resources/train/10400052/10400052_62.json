{"test_class": {"identifier": "OracleDialectTest", "superclass": "extends ActiveJDBCTest", "interfaces": "", "fields": [{"original_string": "private static OracleDialect dialect;", "modifier": "private static", "type": "OracleDialect", "declarator": "dialect", "var_name": "dialect"}], "file": "activejdbc/src/test/java/org/javalite/activejdbc/dialects/OracleDialectTest.java"}, "test_case": {"identifier": "testLimitOnlyNoOffset", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLimitOnlyNoOffset() {\n        a(dialect.formSelect(\"pages\", null, \"\", Arrays.asList(\"page_id\"), 10, -1)).shouldBeEqual(\n                \"SELECT * FROM (SELECT t2.* FROM (SELECT * FROM pages ORDER BY page_id) t2) WHERE ROWNUM <= 10\");\n    }", "signature": "void testLimitOnlyNoOffset()", "full_signature": "@Test public void testLimitOnlyNoOffset()", "class_method_signature": "OracleDialectTest.testLimitOnlyNoOffset()", "testcase": true, "constructor": false, "invocations": ["shouldBeEqual", "a", "formSelect", "asList"]}, "focal_class": {"identifier": "OracleDialect", "superclass": "extends DefaultDialect", "interfaces": "", "fields": [], "methods": [{"identifier": "formSelect", "parameters": "(String tableName, String[] columns, String subQuery, List<String> orderBys, long limit, long offset)", "modifiers": "@Override public", "return": "String", "signature": "String formSelect(String tableName, String[] columns, String subQuery, List<String> orderBys, long limit, long offset)", "full_signature": "@Override public String formSelect(String tableName, String[] columns, String subQuery, List<String> orderBys, long limit, long offset)", "class_method_signature": "OracleDialect.formSelect(String tableName, String[] columns, String subQuery, List<String> orderBys, long limit, long offset)", "testcase": false, "constructor": false}, {"identifier": "overrideDriverTypeConversion", "parameters": "(MetaModel mm, String attributeName, Object value)", "modifiers": "@Override public", "return": "Object", "signature": "Object overrideDriverTypeConversion(MetaModel mm, String attributeName, Object value)", "full_signature": "@Override public Object overrideDriverTypeConversion(MetaModel mm, String attributeName, Object value)", "class_method_signature": "OracleDialect.overrideDriverTypeConversion(MetaModel mm, String attributeName, Object value)", "testcase": false, "constructor": false}, {"identifier": "appendEmptyRow", "parameters": "(MetaModel metaModel, StringBuilder query)", "modifiers": "@Override protected", "return": "void", "signature": "void appendEmptyRow(MetaModel metaModel, StringBuilder query)", "full_signature": "@Override protected void appendEmptyRow(MetaModel metaModel, StringBuilder query)", "class_method_signature": "OracleDialect.appendEmptyRow(MetaModel metaModel, StringBuilder query)", "testcase": false, "constructor": false}, {"identifier": "appendTime", "parameters": "(StringBuilder query, java.sql.Time value)", "modifiers": "@Override protected", "return": "void", "signature": "void appendTime(StringBuilder query, java.sql.Time value)", "full_signature": "@Override protected void appendTime(StringBuilder query, java.sql.Time value)", "class_method_signature": "OracleDialect.appendTime(StringBuilder query, java.sql.Time value)", "testcase": false, "constructor": false}], "file": "activejdbc/src/main/java/org/javalite/activejdbc/dialects/OracleDialect.java"}, "focal_method": {"identifier": "formSelect", "parameters": "(String tableName, String[] columns, String subQuery, List<String> orderBys, long limit, long offset)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String formSelect(String tableName, String[] columns, String subQuery, List<String> orderBys, long limit, long offset) {\n\n        boolean needLimit = limit != -1L;\n        boolean needOffset = offset != -1L;\n\n        StringBuilder fullQuery = new StringBuilder();\n        if (needOffset) {\n            fullQuery.append(\"SELECT * FROM (SELECT t2.*, ROWNUM AS oracle_row_number FROM (\");\n        } else if (needLimit) { // if needLimit and don't needOffset\n            fullQuery.append(\"SELECT * FROM (SELECT t2.* FROM (\");\n        }\n\n        appendSelect(fullQuery, tableName, columns, null, subQuery, orderBys);\n\n        if (needOffset) {\n            // Oracle offset starts with 1, not like MySQL with 0;\n            fullQuery.append(\") t2) WHERE oracle_row_number >= \").append(offset + 1);\n            if (needLimit) {\n                fullQuery.append(\" AND ROWNUM <= \").append(limit);\n            }\n        } else if (needLimit) {\n            fullQuery.append(\") t2) WHERE ROWNUM <= \").append(limit);            \n        }\n\n        return fullQuery.toString();\n    }", "signature": "String formSelect(String tableName, String[] columns, String subQuery, List<String> orderBys, long limit, long offset)", "full_signature": "@Override public String formSelect(String tableName, String[] columns, String subQuery, List<String> orderBys, long limit, long offset)", "class_method_signature": "OracleDialect.formSelect(String tableName, String[] columns, String subQuery, List<String> orderBys, long limit, long offset)", "testcase": false, "constructor": false, "invocations": ["append", "append", "appendSelect", "append", "append", "append", "append", "append", "append", "toString"]}, "repository": {"repo_id": 10400052, "url": "https://github.com/javalite/javalite", "stars": 704, "created": "5/31/2013 7:33:11 AM +00:00", "updates": "2020-01-19T17:40:37+00:00", "fork": "False", "license": "licensed"}}