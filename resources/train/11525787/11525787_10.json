{"test_class": {"identifier": "RelativeScaleFactorTest", "superclass": "", "interfaces": "", "fields": [], "file": "seep-system/src/test/java/uk/ac/imperial/lsds/seep/infrastructure/monitor/policy/scale/factor/RelativeScaleFactorTest.java"}, "test_case": {"identifier": "testRelativeFactorApplyWithScaleIn", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRelativeFactorApplyWithScaleIn() {\n        System.out.println(\"testRelativeFactorApply\");\n        \n        RelativeScaleFactor factor;\n        \n        factor = new RelativeScaleFactor(2);\n        assertEquals(\"New scaling size is incorrect\", 5, factor.apply(10, new ScaleInAction()));\n        assertEquals(\"New scaling size is incorrect\", 2, factor.apply(4, new ScaleInAction()));\n        assertEquals(\"New scaling size is incorrect\", 1, factor.apply(2, new ScaleInAction()));\n        \n        // Need to ensure that scaling never goes below 1 for ScaleInAction\n        assertEquals(\"New size is less than 1 after scaling in\", \n                                        1, factor.apply(1, new ScaleInAction()));\n    }", "signature": "void testRelativeFactorApplyWithScaleIn()", "full_signature": "@Test public void testRelativeFactorApplyWithScaleIn()", "class_method_signature": "RelativeScaleFactorTest.testRelativeFactorApplyWithScaleIn()", "testcase": true, "constructor": false, "invocations": ["println", "assertEquals", "apply", "assertEquals", "apply", "assertEquals", "apply", "assertEquals", "apply"]}, "focal_class": {"identifier": "RelativeScaleFactor", "superclass": "extends ScaleFactor", "interfaces": "", "fields": [], "methods": [{"identifier": "RelativeScaleFactor", "parameters": "(double factor)", "modifiers": "public", "return": "", "signature": " RelativeScaleFactor(double factor)", "full_signature": "public  RelativeScaleFactor(double factor)", "class_method_signature": "RelativeScaleFactor.RelativeScaleFactor(double factor)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(int currentSize,  Action action)", "modifiers": "@Override public", "return": "int", "signature": "int apply(int currentSize,  Action action)", "full_signature": "@Override public int apply(int currentSize,  Action action)", "class_method_signature": "RelativeScaleFactor.apply(int currentSize,  Action action)", "testcase": false, "constructor": false}], "file": "seep-system/src/main/java/uk/ac/imperial/lsds/seep/infrastructure/monitor/policy/scale/factor/RelativeScaleFactor.java"}, "focal_method": {"identifier": "apply", "parameters": "(int currentSize,  Action action)", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int apply(int currentSize,  Action action) {\n        // Assume a scale-out action\n        int newSize = Math.round(currentSize \n                                    * new Double(getFactor()).floatValue());\n        \n        if(action instanceof ScaleInAction) {\n            newSize = Math.round(currentSize \n                        * new Double(Math.pow(getFactor(), -1)).floatValue());\n            if(newSize < 1) {\n                newSize = 1;\n            }\n        }\n        \n        return newSize;\n    }", "signature": "int apply(int currentSize,  Action action)", "full_signature": "@Override public int apply(int currentSize,  Action action)", "class_method_signature": "RelativeScaleFactor.apply(int currentSize,  Action action)", "testcase": false, "constructor": false, "invocations": ["round", "floatValue", "getFactor", "round", "floatValue", "pow", "getFactor"]}, "repository": {"repo_id": 11525787, "url": "https://github.com/lsds/SEEP", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 25, "size": 141083, "license": "licensed"}}