{"test_class": {"identifier": "ConfigFileCreatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private File classp;", "modifier": "private", "type": "File", "declarator": "classp", "var_name": "classp"}, {"original_string": "private DocumentBuilder builder;", "modifier": "private", "type": "DocumentBuilder", "declarator": "builder", "var_name": "builder"}], "file": "teamengine-web/src/test/java/com/occamlab/te/web/ConfigFileCreatorTest.java"}, "test_case": {"identifier": "testParsingFoldersWithHiddenFiles", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParsingFoldersWithHiddenFiles() {\n\n        try {\n            File tebase = new File(classp, \"tebase-hidden-files\");\n            ConfigFileCreator configFileCreator = new ConfigFileCreator();\n            configFileCreator.create(tebase);\n            File configFile = new File(tebase + File.separator + \"config.xml\");\n\n            Document config = builder.parse(configFile);\n\n            NodeList orgs = XMLUtils.getAllNodes(config, \"/config/scripts/organization\");\n            assertEquals(2, orgs.getLength());\n\n            configFile.delete();\n\n        } catch (Exception e) {\n            fail();\n            e.printStackTrace();\n        }\n    }", "signature": "void testParsingFoldersWithHiddenFiles()", "full_signature": "@Test public void testParsingFoldersWithHiddenFiles()", "class_method_signature": "ConfigFileCreatorTest.testParsingFoldersWithHiddenFiles()", "testcase": true, "constructor": false, "invocations": ["create", "parse", "getAllNodes", "assertEquals", "getLength", "delete", "fail", "printStackTrace"]}, "focal_class": {"identifier": "ConfigFileCreator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger LOGR = Logger\n\t\t\t.getLogger(\"com.occamlab.te.web.ConfigFileCreator\");", "modifier": "private static", "type": "Logger", "declarator": "LOGR = Logger\n\t\t\t.getLogger(\"com.occamlab.te.web.ConfigFileCreator\")", "var_name": "LOGR"}, {"original_string": "private DocumentBuilder builder;", "modifier": "private", "type": "DocumentBuilder", "declarator": "builder", "var_name": "builder"}, {"original_string": "private Document docMain;", "modifier": "private", "type": "Document", "declarator": "docMain", "var_name": "docMain"}, {"original_string": "private Element config;", "modifier": "private", "type": "Element", "declarator": "config", "var_name": "config"}, {"original_string": "private Element scripts;", "modifier": "private", "type": "Element", "declarator": "scripts", "var_name": "scripts"}], "methods": [{"identifier": "ConfigFileCreator", "parameters": "()", "modifiers": "public", "return": "", "signature": " ConfigFileCreator()", "full_signature": "public  ConfigFileCreator()", "class_method_signature": "ConfigFileCreator.ConfigFileCreator()", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(String tebase)", "modifiers": "public", "return": "void", "signature": "void create(String tebase)", "full_signature": "public void create(String tebase)", "class_method_signature": "ConfigFileCreator.create(String tebase)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(File tebase)", "modifiers": "public", "return": "void", "signature": "void create(File tebase)", "full_signature": "public void create(File tebase)", "class_method_signature": "ConfigFileCreator.create(File tebase)", "testcase": false, "constructor": false}, {"identifier": "deleteConfigFile", "parameters": "(String tebase)", "modifiers": "private", "return": "void", "signature": "void deleteConfigFile(String tebase)", "full_signature": "private void deleteConfigFile(String tebase)", "class_method_signature": "ConfigFileCreator.deleteConfigFile(String tebase)", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(String tebase)", "modifiers": "private", "return": "void", "signature": "void process(String tebase)", "full_signature": "private void process(String tebase)", "class_method_signature": "ConfigFileCreator.process(String tebase)", "testcase": false, "constructor": false}, {"identifier": "processDir", "parameters": "(File dir)", "modifiers": "public", "return": "void", "signature": "void processDir(File dir)", "full_signature": "public void processDir(File dir)", "class_method_signature": "ConfigFileCreator.processDir(File dir)", "testcase": false, "constructor": false}, {"identifier": "processTestConfigFile", "parameters": "(File configFile)", "modifiers": "private", "return": "void", "signature": "void processTestConfigFile(File configFile)", "full_signature": "private void processTestConfigFile(File configFile)", "class_method_signature": "ConfigFileCreator.processTestConfigFile(File configFile)", "testcase": false, "constructor": false}, {"identifier": "saveConfigFile", "parameters": "(Document docMain, String mainconfig)", "modifiers": "public", "return": "void", "signature": "void saveConfigFile(Document docMain, String mainconfig)", "full_signature": "public void saveConfigFile(Document docMain, String mainconfig)", "class_method_signature": "ConfigFileCreator.saveConfigFile(Document docMain, String mainconfig)", "testcase": false, "constructor": false}, {"identifier": "getDocument", "parameters": "(File xml)", "modifiers": "public", "return": "Document", "signature": "Document getDocument(File xml)", "full_signature": "public Document getDocument(File xml)", "class_method_signature": "ConfigFileCreator.getDocument(File xml)", "testcase": false, "constructor": false}, {"identifier": "getConfigFiles", "parameters": "(File dir)", "modifiers": "private", "return": "List<File>", "signature": "List<File> getConfigFiles(File dir)", "full_signature": "private List<File> getConfigFiles(File dir)", "class_method_signature": "ConfigFileCreator.getConfigFiles(File dir)", "testcase": false, "constructor": false}], "file": "teamengine-web/src/main/java/com/occamlab/te/web/ConfigFileCreator.java"}, "focal_method": {"identifier": "create", "parameters": "(String tebase)", "modifiers": "public", "return": "void", "body": "public void create(String tebase) throws TEException {\n\t\tFile f = new File(tebase);\n\t\tif (f.exists()) {\n\t\t\ttry {\n\t\t\t\tprocess(tebase);\n\t\t\t} catch (Exception e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TEBaseNotFoundException(tebase);\n\t\t}\n\t}", "signature": "void create(String tebase)", "full_signature": "public void create(String tebase)", "class_method_signature": "ConfigFileCreator.create(String tebase)", "testcase": false, "constructor": false, "invocations": ["exists", "process", "printStackTrace"]}, "repository": {"repo_id": 13867926, "url": "https://github.com/opengeospatial/teamengine", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 30, "size": 29307, "license": "licensed"}}