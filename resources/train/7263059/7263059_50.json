{"test_class": {"identifier": "AesGcmCipherDetailsTest", "superclass": "extends AbstractCipherDetailsTest", "interfaces": "", "fields": [], "file": "java-manta-client-unshaded/src/test/java/com/joyent/manta/client/crypto/AesGcmCipherDetailsTest.java"}, "test_case": {"identifier": "canQueryCiphertextByteRangeAes192", "parameters": "()", "modifiers": "@Test(expectedExceptions = UnsupportedOperationException.class, groups = {\"unlimited-crypto\"}) public", "return": "void", "body": "@Test(expectedExceptions = UnsupportedOperationException.class, groups = {\"unlimited-crypto\"})\n    public void canQueryCiphertextByteRangeAes192() throws Exception {\n        SupportedCipherDetails cipherDetails = AesGcmCipherDetails.INSTANCE_192_BIT;\n        cipherDetails.translateByteRange(0, 128);\n    }", "signature": "void canQueryCiphertextByteRangeAes192()", "full_signature": "@Test(expectedExceptions = UnsupportedOperationException.class, groups = {\"unlimited-crypto\"}) public void canQueryCiphertextByteRangeAes192()", "class_method_signature": "AesGcmCipherDetailsTest.canQueryCiphertextByteRangeAes192()", "testcase": true, "constructor": false, "invocations": ["translateByteRange"]}, "focal_class": {"identifier": "AesGcmCipherDetails", "superclass": "extends AbstractAesCipherDetails", "interfaces": "", "fields": [{"original_string": "private static final long MAX_AES_GCM_BLOCKS = 4294967294L;", "modifier": "private static final", "type": "long", "declarator": "MAX_AES_GCM_BLOCKS = 4294967294L", "var_name": "MAX_AES_GCM_BLOCKS"}, {"original_string": "private static final long MAX_PLAIN_TEXT_SIZE_BYTES = MAX_AES_GCM_BLOCKS << 4;", "modifier": "private static final", "type": "long", "declarator": "MAX_PLAIN_TEXT_SIZE_BYTES = MAX_AES_GCM_BLOCKS << 4", "var_name": "MAX_PLAIN_TEXT_SIZE_BYTES"}, {"original_string": "public static final SupportedCipherDetails INSTANCE_128_BIT =\n            AesCipherDetailsFactory.buildWith(CipherMode.GCM, 128);", "modifier": "public static final", "type": "SupportedCipherDetails", "declarator": "INSTANCE_128_BIT =\n            AesCipherDetailsFactory.buildWith(CipherMode.GCM, 128)", "var_name": "INSTANCE_128_BIT"}, {"original_string": "public static final SupportedCipherDetails INSTANCE_192_BIT =\n            AesCipherDetailsFactory.buildWith(CipherMode.GCM, 192);", "modifier": "public static final", "type": "SupportedCipherDetails", "declarator": "INSTANCE_192_BIT =\n            AesCipherDetailsFactory.buildWith(CipherMode.GCM, 192)", "var_name": "INSTANCE_192_BIT"}, {"original_string": "public static final SupportedCipherDetails INSTANCE_256_BIT =\n            AesCipherDetailsFactory.buildWith(CipherMode.GCM, 256);", "modifier": "public static final", "type": "SupportedCipherDetails", "declarator": "INSTANCE_256_BIT =\n            AesCipherDetailsFactory.buildWith(CipherMode.GCM, 256)", "var_name": "INSTANCE_256_BIT"}], "methods": [{"identifier": "AesGcmCipherDetails", "parameters": "(final int keyLengthBits)", "modifiers": "protected", "return": "", "signature": " AesGcmCipherDetails(final int keyLengthBits)", "full_signature": "protected  AesGcmCipherDetails(final int keyLengthBits)", "class_method_signature": "AesGcmCipherDetails.AesGcmCipherDetails(final int keyLengthBits)", "testcase": false, "constructor": true}, {"identifier": "getMaximumPlaintextSizeInBytes", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getMaximumPlaintextSizeInBytes()", "full_signature": "@Override public long getMaximumPlaintextSizeInBytes()", "class_method_signature": "AesGcmCipherDetails.getMaximumPlaintextSizeInBytes()", "testcase": false, "constructor": false}, {"identifier": "getEncryptionParameterSpec", "parameters": "(final byte[] iv)", "modifiers": "@Override public", "return": "AlgorithmParameterSpec", "signature": "AlgorithmParameterSpec getEncryptionParameterSpec(final byte[] iv)", "full_signature": "@Override public AlgorithmParameterSpec getEncryptionParameterSpec(final byte[] iv)", "class_method_signature": "AesGcmCipherDetails.getEncryptionParameterSpec(final byte[] iv)", "testcase": false, "constructor": false}, {"identifier": "ciphertextSize", "parameters": "(final long plaintextSize)", "modifiers": "@Override public", "return": "long", "signature": "long ciphertextSize(final long plaintextSize)", "full_signature": "@Override public long ciphertextSize(final long plaintextSize)", "class_method_signature": "AesGcmCipherDetails.ciphertextSize(final long plaintextSize)", "testcase": false, "constructor": false}, {"identifier": "plaintextSize", "parameters": "(final long ciphertextSize)", "modifiers": "@Override public", "return": "long", "signature": "long plaintextSize(final long ciphertextSize)", "full_signature": "@Override public long plaintextSize(final long ciphertextSize)", "class_method_signature": "AesGcmCipherDetails.plaintextSize(final long ciphertextSize)", "testcase": false, "constructor": false}, {"identifier": "plaintextSizeCalculationIsAnEstimate", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean plaintextSizeCalculationIsAnEstimate()", "full_signature": "@Override public boolean plaintextSizeCalculationIsAnEstimate()", "class_method_signature": "AesGcmCipherDetails.plaintextSizeCalculationIsAnEstimate()", "testcase": false, "constructor": false}, {"identifier": "translateByteRange", "parameters": "(final long startInclusive, final long endInclusive)", "modifiers": "@Override public", "return": "ByteRangeConversion", "signature": "ByteRangeConversion translateByteRange(final long startInclusive, final long endInclusive)", "full_signature": "@Override public ByteRangeConversion translateByteRange(final long startInclusive, final long endInclusive)", "class_method_signature": "AesGcmCipherDetails.translateByteRange(final long startInclusive, final long endInclusive)", "testcase": false, "constructor": false}, {"identifier": "updateCipherToPosition", "parameters": "(final Cipher cipher, final long position)", "modifiers": "@Override public", "return": "long", "signature": "long updateCipherToPosition(final Cipher cipher, final long position)", "full_signature": "@Override public long updateCipherToPosition(final Cipher cipher, final long position)", "class_method_signature": "AesGcmCipherDetails.updateCipherToPosition(final Cipher cipher, final long position)", "testcase": false, "constructor": false}, {"identifier": "supportsRandomAccess", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsRandomAccess()", "full_signature": "@Override public boolean supportsRandomAccess()", "class_method_signature": "AesGcmCipherDetails.supportsRandomAccess()", "testcase": false, "constructor": false}], "file": "java-manta-client-unshaded/src/main/java/com/joyent/manta/client/crypto/AesGcmCipherDetails.java"}, "focal_method": {"identifier": "translateByteRange", "parameters": "(final long startInclusive, final long endInclusive)", "modifiers": "@Override public", "return": "ByteRangeConversion", "body": "@Override\n    public ByteRangeConversion translateByteRange(final long startInclusive, final long endInclusive) {\n        throw new UnsupportedOperationException(\"Not implemented yet\");\n    }", "signature": "ByteRangeConversion translateByteRange(final long startInclusive, final long endInclusive)", "full_signature": "@Override public ByteRangeConversion translateByteRange(final long startInclusive, final long endInclusive)", "class_method_signature": "AesGcmCipherDetails.translateByteRange(final long startInclusive, final long endInclusive)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 7263059, "url": "https://github.com/joyent/java-manta", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 16, "size": 20253, "license": "licensed"}}