{"test_class": {"identifier": "ContentTypeLookupTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Header[] EXAMPLE_HEADERS = new Header[] {\n        new BasicHeader(\"Last-Modified\",\"Fri, 09 Dec 2016 22:09:44 GMT\"),\n        new BasicHeader(\"Result-Set-Size\", \"0\"),\n        new BasicHeader(\"Date\", \"Fri, 09 Dec 2016 22:09:44 GMT\"),\n        new BasicHeader(\"Server\", \"Manta\"),\n        new BasicHeader(\"x-request-id\", \"17d243b4-f9a7-4042-bc21-7322fb40fc1c\"),\n        new BasicHeader(\"x-response-time\", \"16\"),\n        new BasicHeader(\"x-server-name\", \"02d02889-cd80-4ac1-bc0c-4775b86661e4\"),\n        new BasicHeader(\"Connection\", \"keep-alive\")};", "modifier": "private static final", "type": "Header[]", "declarator": "EXAMPLE_HEADERS = new Header[] {\n        new BasicHeader(\"Last-Modified\",\"Fri, 09 Dec 2016 22:09:44 GMT\"),\n        new BasicHeader(\"Result-Set-Size\", \"0\"),\n        new BasicHeader(\"Date\", \"Fri, 09 Dec 2016 22:09:44 GMT\"),\n        new BasicHeader(\"Server\", \"Manta\"),\n        new BasicHeader(\"x-request-id\", \"17d243b4-f9a7-4042-bc21-7322fb40fc1c\"),\n        new BasicHeader(\"x-response-time\", \"16\"),\n        new BasicHeader(\"x-server-name\", \"02d02889-cd80-4ac1-bc0c-4775b86661e4\"),\n        new BasicHeader(\"Connection\", \"keep-alive\")}", "var_name": "EXAMPLE_HEADERS"}], "file": "java-manta-client-unshaded/src/test/java/com/joyent/manta/http/ContentTypeLookupTest.java"}, "test_case": {"identifier": "canfindByMultipleMethodsNull", "parameters": "()", "modifiers": "@Test(enabled = false) public", "return": "void", "body": "@Test(enabled = false)\n    public void canfindByMultipleMethodsNull() throws Exception {\n        MantaHttpHeaders headers = new MantaHttpHeaders(EXAMPLE_HEADERS);\n\n        File temp = File.createTempFile(\"upload\", \".unknown\");\n        FileUtils.forceDeleteOnExit(temp);\n        Assert.assertNull(ContentTypeLookup.findOrDefaultContentType(null, \"/stor/unknown\", temp, null));\n\n        temp = File.createTempFile(\"upload\", \".unknown\");\n        FileUtils.forceDeleteOnExit(temp);\n        Assert.assertNull(ContentTypeLookup.findOrDefaultContentType(headers, \"/stor/unknown\", temp, null));\n    }", "signature": "void canfindByMultipleMethodsNull()", "full_signature": "@Test(enabled = false) public void canfindByMultipleMethodsNull()", "class_method_signature": "ContentTypeLookupTest.canfindByMultipleMethodsNull()", "testcase": true, "constructor": false, "invocations": ["createTempFile", "forceDeleteOnExit", "assertNull", "findOrDefaultContentType", "createTempFile", "forceDeleteOnExit", "assertNull", "findOrDefaultContentType"]}, "focal_class": {"identifier": "ContentTypeLookup", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ContentTypeLookup", "parameters": "()", "modifiers": "private", "return": "", "signature": " ContentTypeLookup()", "full_signature": "private  ContentTypeLookup()", "class_method_signature": "ContentTypeLookup.ContentTypeLookup()", "testcase": false, "constructor": true}, {"identifier": "findOrDefaultContentType", "parameters": "(final MantaHttpHeaders headers,\n                                                       final ContentType defaultContentType)", "modifiers": "public static", "return": "ContentType", "signature": "ContentType findOrDefaultContentType(final MantaHttpHeaders headers,\n                                                       final ContentType defaultContentType)", "full_signature": "public static ContentType findOrDefaultContentType(final MantaHttpHeaders headers,\n                                                       final ContentType defaultContentType)", "class_method_signature": "ContentTypeLookup.findOrDefaultContentType(final MantaHttpHeaders headers,\n                                                       final ContentType defaultContentType)", "testcase": false, "constructor": false}, {"identifier": "findOrDefaultContentType", "parameters": "(final MantaHttpHeaders headers,\n                                                       final String filename,\n                                                       final File file,\n                                                       final ContentType defaultContentType)", "modifiers": "public static", "return": "ContentType", "signature": "ContentType findOrDefaultContentType(final MantaHttpHeaders headers,\n                                                       final String filename,\n                                                       final File file,\n                                                       final ContentType defaultContentType)", "full_signature": "public static ContentType findOrDefaultContentType(final MantaHttpHeaders headers,\n                                                       final String filename,\n                                                       final File file,\n                                                       final ContentType defaultContentType)", "class_method_signature": "ContentTypeLookup.findOrDefaultContentType(final MantaHttpHeaders headers,\n                                                       final String filename,\n                                                       final File file,\n                                                       final ContentType defaultContentType)", "testcase": false, "constructor": false}, {"identifier": "findOrDefaultContentType", "parameters": "(final MantaHttpHeaders headers,\n                                                       final String filename,\n                                                       final ContentType defaultContentType)", "modifiers": "public static", "return": "ContentType", "signature": "ContentType findOrDefaultContentType(final MantaHttpHeaders headers,\n                                                       final String filename,\n                                                       final ContentType defaultContentType)", "full_signature": "public static ContentType findOrDefaultContentType(final MantaHttpHeaders headers,\n                                                       final String filename,\n                                                       final ContentType defaultContentType)", "class_method_signature": "ContentTypeLookup.findOrDefaultContentType(final MantaHttpHeaders headers,\n                                                       final String filename,\n                                                       final ContentType defaultContentType)", "testcase": false, "constructor": false}], "file": "java-manta-client-unshaded/src/main/java/com/joyent/manta/http/ContentTypeLookup.java"}, "focal_method": {"identifier": "findOrDefaultContentType", "parameters": "(final MantaHttpHeaders headers,\n                                                       final ContentType defaultContentType)", "modifiers": "public static", "return": "ContentType", "body": "public static ContentType findOrDefaultContentType(final MantaHttpHeaders headers,\n                                                       final ContentType defaultContentType) {\n        if (headers == null || headers.getContentType() == null) {\n            return defaultContentType;\n        } else {\n            return ContentType.parse(headers.getContentType());\n        }\n    }", "signature": "ContentType findOrDefaultContentType(final MantaHttpHeaders headers,\n                                                       final ContentType defaultContentType)", "full_signature": "public static ContentType findOrDefaultContentType(final MantaHttpHeaders headers,\n                                                       final ContentType defaultContentType)", "class_method_signature": "ContentTypeLookup.findOrDefaultContentType(final MantaHttpHeaders headers,\n                                                       final ContentType defaultContentType)", "testcase": false, "constructor": false, "invocations": ["getContentType", "parse", "getContentType"]}, "repository": {"repo_id": 7263059, "url": "https://github.com/joyent/java-manta", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 16, "size": 20253, "license": "licensed"}}