{"test_class": {"identifier": "MantaUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "java-manta-client-unshaded/src/test/java/com/joyent/manta/util/MantaUtilsTest.java"}, "test_case": {"identifier": "wontParseAccountWithStartingSlash", "parameters": "()", "modifiers": "@Test(expectedExceptions = { IllegalArgumentException.class }) public final", "return": "void", "body": "@Test(expectedExceptions = { IllegalArgumentException.class })\n    public final void wontParseAccountWithStartingSlash() {\n        final String account = \"/username/subuser\";\n        MantaUtils.parseAccount(account);\n    }", "signature": "void wontParseAccountWithStartingSlash()", "full_signature": "@Test(expectedExceptions = { IllegalArgumentException.class }) public final void wontParseAccountWithStartingSlash()", "class_method_signature": "MantaUtilsTest.wontParseAccountWithStartingSlash()", "testcase": true, "constructor": false, "invocations": ["parseAccount"]}, "focal_class": {"identifier": "MantaUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(MantaUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(MantaUtils.class)", "var_name": "LOGGER"}, {"original_string": "private static final Encoder UTF8_URL_ENCODER = new Encoder(StandardCharsets.UTF_8);", "modifier": "private static final", "type": "Encoder", "declarator": "UTF8_URL_ENCODER = new Encoder(StandardCharsets.UTF_8)", "var_name": "UTF8_URL_ENCODER"}, {"original_string": "private static final Decoder UTF8_URL_DECODER = new Decoder(StandardCharsets.UTF_8);", "modifier": "private static final", "type": "Decoder", "declarator": "UTF8_URL_DECODER = new Decoder(StandardCharsets.UTF_8)", "var_name": "UTF8_URL_DECODER"}], "methods": [{"identifier": "MantaUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " MantaUtils()", "full_signature": "private  MantaUtils()", "class_method_signature": "MantaUtils.MantaUtils()", "testcase": false, "constructor": true}, {"identifier": "endsWith", "parameters": "(final StringBuilder builder, final char match)", "modifiers": "public static", "return": "boolean", "signature": "boolean endsWith(final StringBuilder builder, final char match)", "full_signature": "public static boolean endsWith(final StringBuilder builder, final char match)", "class_method_signature": "MantaUtils.endsWith(final StringBuilder builder, final char match)", "testcase": false, "constructor": false}, {"identifier": "toStringEmptyToNull", "parameters": "(final Object value)", "modifiers": "public static", "return": "String", "signature": "String toStringEmptyToNull(final Object value)", "full_signature": "public static String toStringEmptyToNull(final Object value)", "class_method_signature": "MantaUtils.toStringEmptyToNull(final Object value)", "testcase": false, "constructor": false}, {"identifier": "parseIntegerOrNull", "parameters": "(final Object value)", "modifiers": "public static", "return": "Integer", "signature": "Integer parseIntegerOrNull(final Object value)", "full_signature": "public static Integer parseIntegerOrNull(final Object value)", "class_method_signature": "MantaUtils.parseIntegerOrNull(final Object value)", "testcase": false, "constructor": false}, {"identifier": "parseBooleanOrNull", "parameters": "(final Object value)", "modifiers": "public static", "return": "Boolean", "signature": "Boolean parseBooleanOrNull(final Object value)", "full_signature": "public static Boolean parseBooleanOrNull(final Object value)", "class_method_signature": "MantaUtils.parseBooleanOrNull(final Object value)", "testcase": false, "constructor": false}, {"identifier": "parseEnumOrNull", "parameters": "(final Object value,\n                                                        final Class<T> enumClass)", "modifiers": "public static", "return": "T", "signature": "T parseEnumOrNull(final Object value,\n                                                        final Class<T> enumClass)", "full_signature": "public static T parseEnumOrNull(final Object value,\n                                                        final Class<T> enumClass)", "class_method_signature": "MantaUtils.parseEnumOrNull(final Object value,\n                                                        final Class<T> enumClass)", "testcase": false, "constructor": false}, {"identifier": "formatPath", "parameters": "(final String path)", "modifiers": "public static", "return": "String", "signature": "String formatPath(final String path)", "full_signature": "public static String formatPath(final String path)", "class_method_signature": "MantaUtils.formatPath(final String path)", "testcase": false, "constructor": false}, {"identifier": "decodePath", "parameters": "(final String encodedPath)", "modifiers": "public static", "return": "String", "signature": "String decodePath(final String encodedPath)", "full_signature": "public static String decodePath(final String encodedPath)", "class_method_signature": "MantaUtils.decodePath(final String encodedPath)", "testcase": false, "constructor": false}, {"identifier": "parseAccount", "parameters": "(final String account)", "modifiers": "public static", "return": "String[]", "signature": "String[] parseAccount(final String account)", "full_signature": "public static String[] parseAccount(final String account)", "class_method_signature": "MantaUtils.parseAccount(final String account)", "testcase": false, "constructor": false}, {"identifier": "asString", "parameters": "(final Object value)", "modifiers": "public static", "return": "String", "signature": "String asString(final Object value)", "full_signature": "public static String asString(final Object value)", "class_method_signature": "MantaUtils.asString(final Object value)", "testcase": false, "constructor": false}, {"identifier": "fromCsv", "parameters": "(final String line)", "modifiers": "public static", "return": "Collection<String>", "signature": "Collection<String> fromCsv(final String line)", "full_signature": "public static Collection<String> fromCsv(final String line)", "class_method_signature": "MantaUtils.fromCsv(final String line)", "testcase": false, "constructor": false}, {"identifier": "lastItemInPath", "parameters": "(final String path)", "modifiers": "public static", "return": "String", "signature": "String lastItemInPath(final String path)", "full_signature": "public static String lastItemInPath(final String path)", "class_method_signature": "MantaUtils.lastItemInPath(final String path)", "testcase": false, "constructor": false}, {"identifier": "prefixPaths", "parameters": "(final String rawPath)", "modifiers": "public static", "return": "String[]", "signature": "String[] prefixPaths(final String rawPath)", "full_signature": "public static String[] prefixPaths(final String rawPath)", "class_method_signature": "MantaUtils.prefixPaths(final String rawPath)", "testcase": false, "constructor": false}, {"identifier": "writeablePrefixPaths", "parameters": "(final String rawPath)", "modifiers": "public static", "return": "String[]", "signature": "String[] writeablePrefixPaths(final String rawPath)", "full_signature": "public static String[] writeablePrefixPaths(final String rawPath)", "class_method_signature": "MantaUtils.writeablePrefixPaths(final String rawPath)", "testcase": false, "constructor": false}, {"identifier": "asStringMap", "parameters": "(final Map<String, ?> map)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> asStringMap(final Map<String, ?> map)", "full_signature": "public static Map<String, String> asStringMap(final Map<String, ?> map)", "class_method_signature": "MantaUtils.asStringMap(final Map<String, ?> map)", "testcase": false, "constructor": false}, {"identifier": "csv", "parameters": "(final Map<?, ?> map)", "modifiers": "public static", "return": "String", "signature": "String csv(final Map<?, ?> map)", "full_signature": "public static String csv(final Map<?, ?> map)", "class_method_signature": "MantaUtils.csv(final Map<?, ?> map)", "testcase": false, "constructor": false}, {"identifier": "csv", "parameters": "(final Iterable<?> stringable)", "modifiers": "public static", "return": "String", "signature": "String csv(final Iterable<?> stringable)", "full_signature": "public static String csv(final Iterable<?> stringable)", "class_method_signature": "MantaUtils.csv(final Iterable<?> stringable)", "testcase": false, "constructor": false}, {"identifier": "csv2array", "parameters": "(final String line)", "modifiers": "public static", "return": "String[]", "signature": "String[] csv2array(final String line)", "full_signature": "public static String[] csv2array(final String line)", "class_method_signature": "MantaUtils.csv2array(final String line)", "testcase": false, "constructor": false}, {"identifier": "attachExceptionsToContext", "parameters": "(final ExceptionContext contexted,\n                                                 final Iterable<? extends Exception> exceptions)", "modifiers": "public static", "return": "void", "signature": "void attachExceptionsToContext(final ExceptionContext contexted,\n                                                 final Iterable<? extends Exception> exceptions)", "full_signature": "public static void attachExceptionsToContext(final ExceptionContext contexted,\n                                                 final Iterable<? extends Exception> exceptions)", "class_method_signature": "MantaUtils.attachExceptionsToContext(final ExceptionContext contexted,\n                                                 final Iterable<? extends Exception> exceptions)", "testcase": false, "constructor": false}, {"identifier": "parseHttpDate", "parameters": "(final String date)", "modifiers": "public static", "return": "Date", "signature": "Date parseHttpDate(final String date)", "full_signature": "public static Date parseHttpDate(final String date)", "class_method_signature": "MantaUtils.parseHttpDate(final String date)", "testcase": false, "constructor": false}, {"identifier": "byteArrayAsHexString", "parameters": "(final byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String byteArrayAsHexString(final byte[] bytes)", "full_signature": "public static String byteArrayAsHexString(final byte[] bytes)", "class_method_signature": "MantaUtils.byteArrayAsHexString(final byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "unmodifiableMap", "parameters": "(final K key1, final V val1)", "modifiers": "public static", "return": "Map<K, V>", "signature": "Map<K, V> unmodifiableMap(final K key1, final V val1)", "full_signature": "public static Map<K, V> unmodifiableMap(final K key1, final V val1)", "class_method_signature": "MantaUtils.unmodifiableMap(final K key1, final V val1)", "testcase": false, "constructor": false}, {"identifier": "unmodifiableMap", "parameters": "(final K key1, final V val1,\n                                                   final K key2, final V val2)", "modifiers": "public static", "return": "Map<K, V>", "signature": "Map<K, V> unmodifiableMap(final K key1, final V val1,\n                                                   final K key2, final V val2)", "full_signature": "public static Map<K, V> unmodifiableMap(final K key1, final V val1,\n                                                   final K key2, final V val2)", "class_method_signature": "MantaUtils.unmodifiableMap(final K key1, final V val1,\n                                                   final K key2, final V val2)", "testcase": false, "constructor": false}, {"identifier": "unmodifiableMap", "parameters": "(final K key1, final V val1,\n                                                   final K key2, final V val2,\n                                                   final K key3, final V val3)", "modifiers": "public static", "return": "Map<K, V>", "signature": "Map<K, V> unmodifiableMap(final K key1, final V val1,\n                                                   final K key2, final V val2,\n                                                   final K key3, final V val3)", "full_signature": "public static Map<K, V> unmodifiableMap(final K key1, final V val1,\n                                                   final K key2, final V val2,\n                                                   final K key3, final V val3)", "class_method_signature": "MantaUtils.unmodifiableMap(final K key1, final V val1,\n                                                   final K key2, final V val2,\n                                                   final K key3, final V val3)", "testcase": false, "constructor": false}, {"identifier": "unmodifiableMap", "parameters": "(final K key1, final V val1,\n                                                   final Object... nPairs)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "Map<K, V>", "signature": "Map<K, V> unmodifiableMap(final K key1, final V val1,\n                                                   final Object... nPairs)", "full_signature": "@SuppressWarnings(\"unchecked\") public static Map<K, V> unmodifiableMap(final K key1, final V val1,\n                                                   final Object... nPairs)", "class_method_signature": "MantaUtils.unmodifiableMap(final K key1, final V val1,\n                                                   final Object... nPairs)", "testcase": false, "constructor": false}, {"identifier": "overflowToIntMax", "parameters": "(final long value)", "modifiers": "public static", "return": "int", "signature": "int overflowToIntMax(final long value)", "full_signature": "public static int overflowToIntMax(final long value)", "class_method_signature": "MantaUtils.overflowToIntMax(final long value)", "testcase": false, "constructor": false}], "file": "java-manta-client-unshaded/src/main/java/com/joyent/manta/util/MantaUtils.java"}, "focal_method": {"identifier": "parseAccount", "parameters": "(final String account)", "modifiers": "public static", "return": "String[]", "body": "public static String[] parseAccount(final String account) {\n        Validate.notNull(account, \"Account must not be null\");\n\n        final int slashPos = account.indexOf(SEPARATOR);\n\n        if (account.isEmpty()) {\n            throw new IllegalArgumentException(\"Username can't be empty\");\n        } else if (slashPos == -1) {\n            return new String[] {account};\n        } else if (slashPos == 0) {\n            throw new IllegalArgumentException(\"Username can't begin with /\");\n        } else if (account.charAt(account.length() - 1) == '/') {\n            throw new IllegalArgumentException(\"Username can't end with /\");\n        }\n\n        final String username = account.substring(0, slashPos);\n        final String subuser = account.substring(slashPos + 1);\n\n        return new String[] {username, subuser};\n    }", "signature": "String[] parseAccount(final String account)", "full_signature": "public static String[] parseAccount(final String account)", "class_method_signature": "MantaUtils.parseAccount(final String account)", "testcase": false, "constructor": false, "invocations": ["notNull", "indexOf", "isEmpty", "charAt", "length", "substring", "substring"]}, "repository": {"repo_id": 7263059, "url": "https://github.com/joyent/java-manta", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 16, "size": 20253, "license": "licensed"}}