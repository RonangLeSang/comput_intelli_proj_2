{"test_class": {"identifier": "SmsAccountConnectionTest", "superclass": "", "interfaces": "", "fields": [], "file": "realm-sms/src/test/java/org/solovyev/android/messenger/realms/sms/SmsAccountConnectionTest.java"}, "test_case": {"identifier": "testShouldFormatTimeCorrectly", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testShouldFormatTimeCorrectly() throws Exception {\n\t\tassertEquals(\"2m 20s\", millisToMinutesAndSeconds(140 * 1000L));\n\t\tassertEquals(\"1m 1s\", millisToMinutesAndSeconds(61 * 1000L));\n\t}", "signature": "void testShouldFormatTimeCorrectly()", "full_signature": "@Test public void testShouldFormatTimeCorrectly()", "class_method_signature": "SmsAccountConnectionTest.testShouldFormatTimeCorrectly()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "millisToMinutesAndSeconds", "assertEquals", "millisToMinutesAndSeconds"]}, "focal_class": {"identifier": "SmsAccountConnection", "superclass": "extends BaseAccountConnection<SmsAccount>", "interfaces": "", "fields": [{"original_string": "@Nullable\n\tprivate volatile ReportsBroadcastReceiver receiver;", "modifier": "@Nullable\n\tprivate volatile", "type": "ReportsBroadcastReceiver", "declarator": "receiver", "var_name": "receiver"}, {"original_string": "@Nonnull\n\tprivate final CallListener callListener;", "modifier": "@Nonnull\n\tprivate final", "type": "CallListener", "declarator": "callListener", "var_name": "callListener"}], "methods": [{"identifier": "SmsAccountConnection", "parameters": "(@Nonnull SmsAccount account, @Nonnull Context context)", "modifiers": "", "return": "", "signature": " SmsAccountConnection(@Nonnull SmsAccount account, @Nonnull Context context)", "full_signature": "  SmsAccountConnection(@Nonnull SmsAccount account, @Nonnull Context context)", "class_method_signature": "SmsAccountConnection.SmsAccountConnection(@Nonnull SmsAccount account, @Nonnull Context context)", "testcase": false, "constructor": true}, {"identifier": "setCallFromUs", "parameters": "(@Nonnull String number)", "modifiers": "public", "return": "void", "signature": "void setCallFromUs(@Nonnull String number)", "full_signature": "public void setCallFromUs(@Nonnull String number)", "class_method_signature": "SmsAccountConnection.setCallFromUs(@Nonnull String number)", "testcase": false, "constructor": false}, {"identifier": "start0", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void start0()", "full_signature": "@Override protected void start0()", "class_method_signature": "SmsAccountConnection.start0()", "testcase": false, "constructor": false}, {"identifier": "getTelephonyManager", "parameters": "()", "modifiers": "@Nonnull private", "return": "TelephonyManager", "signature": "TelephonyManager getTelephonyManager()", "full_signature": "@Nonnull private TelephonyManager getTelephonyManager()", "class_method_signature": "SmsAccountConnection.getTelephonyManager()", "testcase": false, "constructor": false}, {"identifier": "stop0", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void stop0()", "full_signature": "@Override protected void stop0()", "class_method_signature": "SmsAccountConnection.stop0()", "testcase": false, "constructor": false}, {"identifier": "getReceiver", "parameters": "()", "modifiers": "@Nonnull public", "return": "ReportsBroadcastReceiver", "signature": "ReportsBroadcastReceiver getReceiver()", "full_signature": "@Nonnull public ReportsBroadcastReceiver getReceiver()", "class_method_signature": "SmsAccountConnection.getReceiver()", "testcase": false, "constructor": false}, {"identifier": "unregisterReceiver", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void unregisterReceiver()", "full_signature": "private void unregisterReceiver()", "class_method_signature": "SmsAccountConnection.unregisterReceiver()", "testcase": false, "constructor": false}, {"identifier": "onSmsIntent", "parameters": "(@Nonnull Intent intent, @Nonnull MessageState state)", "modifiers": "private", "return": "void", "signature": "void onSmsIntent(@Nonnull Intent intent, @Nonnull MessageState state)", "full_signature": "private void onSmsIntent(@Nonnull Intent intent, @Nonnull MessageState state)", "class_method_signature": "SmsAccountConnection.onSmsIntent(@Nonnull Intent intent, @Nonnull MessageState state)", "testcase": false, "constructor": false}, {"identifier": "onSmsReceived", "parameters": "(@Nonnull BroadcastReceiver broadcastReceiver, @Nonnull Intent intent)", "modifiers": "private", "return": "void", "signature": "void onSmsReceived(@Nonnull BroadcastReceiver broadcastReceiver, @Nonnull Intent intent)", "full_signature": "private void onSmsReceived(@Nonnull BroadcastReceiver broadcastReceiver, @Nonnull Intent intent)", "class_method_signature": "SmsAccountConnection.onSmsReceived(@Nonnull BroadcastReceiver broadcastReceiver, @Nonnull Intent intent)", "testcase": false, "constructor": false}, {"identifier": "getMessagesByPhoneNumber", "parameters": "(@Nonnull Intent intent)", "modifiers": "@Nonnull private", "return": "Multimap<String, SmsData>", "signature": "Multimap<String, SmsData> getMessagesByPhoneNumber(@Nonnull Intent intent)", "full_signature": "@Nonnull private Multimap<String, SmsData> getMessagesByPhoneNumber(@Nonnull Intent intent)", "class_method_signature": "SmsAccountConnection.getMessagesByPhoneNumber(@Nonnull Intent intent)", "testcase": false, "constructor": false}, {"identifier": "toMessage", "parameters": "(@Nonnull SmsData smsData, @Nonnull Account account, @Nonnull User from, @Nonnull Chat chat)", "modifiers": "@Nullable private static", "return": "Message", "signature": "Message toMessage(@Nonnull SmsData smsData, @Nonnull Account account, @Nonnull User from, @Nonnull Chat chat)", "full_signature": "@Nullable private static Message toMessage(@Nonnull SmsData smsData, @Nonnull Account account, @Nonnull User from, @Nonnull Chat chat)", "class_method_signature": "SmsAccountConnection.toMessage(@Nonnull SmsData smsData, @Nonnull Account account, @Nonnull User from, @Nonnull Chat chat)", "testcase": false, "constructor": false}, {"identifier": "findOrCreateContact", "parameters": "(@Nonnull final String phone, @Nonnull List<User> contacts)", "modifiers": "@Nonnull public", "return": "User", "signature": "User findOrCreateContact(@Nonnull final String phone, @Nonnull List<User> contacts)", "full_signature": "@Nonnull public User findOrCreateContact(@Nonnull final String phone, @Nonnull List<User> contacts)", "class_method_signature": "SmsAccountConnection.findOrCreateContact(@Nonnull final String phone, @Nonnull List<User> contacts)", "testcase": false, "constructor": false}, {"identifier": "toUser", "parameters": "(@Nonnull String phone)", "modifiers": "@Nonnull private", "return": "User", "signature": "User toUser(@Nonnull String phone)", "full_signature": "@Nonnull private User toUser(@Nonnull String phone)", "class_method_signature": "SmsAccountConnection.toUser(@Nonnull String phone)", "testcase": false, "constructor": false}, {"identifier": "toUser", "parameters": "(@Nonnull PhoneNumber phoneNumber)", "modifiers": "@Nonnull private", "return": "User", "signature": "User toUser(@Nonnull PhoneNumber phoneNumber)", "full_signature": "@Nonnull private User toUser(@Nonnull PhoneNumber phoneNumber)", "class_method_signature": "SmsAccountConnection.toUser(@Nonnull PhoneNumber phoneNumber)", "testcase": false, "constructor": false}, {"identifier": "findContactByPhone", "parameters": "(@Nonnull final String phone, @Nonnull List<User> contacts)", "modifiers": "@Nullable private static", "return": "User", "signature": "User findContactByPhone(@Nonnull final String phone, @Nonnull List<User> contacts)", "full_signature": "@Nullable private static User findContactByPhone(@Nonnull final String phone, @Nonnull List<User> contacts)", "class_method_signature": "SmsAccountConnection.findContactByPhone(@Nonnull final String phone, @Nonnull List<User> contacts)", "testcase": false, "constructor": false}, {"identifier": "onCall", "parameters": "(@Nonnull Call call)", "modifiers": "private", "return": "void", "signature": "void onCall(@Nonnull Call call)", "full_signature": "private void onCall(@Nonnull Call call)", "class_method_signature": "SmsAccountConnection.onCall(@Nonnull Call call)", "testcase": false, "constructor": false}, {"identifier": "formatMessageBody", "parameters": "(@Nonnull Call call)", "modifiers": "@Nonnull private", "return": "String", "signature": "String formatMessageBody(@Nonnull Call call)", "full_signature": "@Nonnull private String formatMessageBody(@Nonnull Call call)", "class_method_signature": "SmsAccountConnection.formatMessageBody(@Nonnull Call call)", "testcase": false, "constructor": false}, {"identifier": "millisToMinutesAndSeconds", "parameters": "(long millis)", "modifiers": "@Nonnull static", "return": "String", "signature": "String millisToMinutesAndSeconds(long millis)", "full_signature": "@Nonnull static String millisToMinutesAndSeconds(long millis)", "class_method_signature": "SmsAccountConnection.millisToMinutesAndSeconds(long millis)", "testcase": false, "constructor": false}], "file": "realm-sms/src/main/java/org/solovyev/android/messenger/realms/sms/SmsAccountConnection.java"}, "focal_method": {"identifier": "millisToMinutesAndSeconds", "parameters": "(long millis)", "modifiers": "@Nonnull static", "return": "String", "body": "@Nonnull\n\tstatic String millisToMinutesAndSeconds(long millis) {\n\t\tfinal long seconds = (millis / 1000L) % 60L;\n\t\tfinal long minutes = (millis / 1000L) / 60L;\n\t\treturn String.format(\"%dm %ds\", minutes, seconds);\n\t}", "signature": "String millisToMinutesAndSeconds(long millis)", "full_signature": "@Nonnull static String millisToMinutesAndSeconds(long millis)", "class_method_signature": "SmsAccountConnection.millisToMinutesAndSeconds(long millis)", "testcase": false, "constructor": false, "invocations": ["format"]}, "repository": {"repo_id": 14106147, "url": "https://github.com/serso/android-messengerpp", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 153, "size": 22433, "license": "licensed"}}