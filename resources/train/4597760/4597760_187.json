{"test_class": {"identifier": "MimeHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String UTF_ENCODING = \"UTF-8\";", "modifier": "private static final", "type": "String", "declarator": "UTF_ENCODING = \"UTF-8\"", "var_name": "UTF_ENCODING"}], "file": "core/src/test/java/org/pentaho/platform/util/web/MimeHelperTest.java"}, "test_case": {"identifier": "getMimeTypeFromExtensionTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getMimeTypeFromExtensionTest() {\n    assertEquals( MimeHelper.MIMETYPE_RTF, MimeHelper.getMimeTypeFromExtension( MimeHelper.RTF_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_MS_WORD, MimeHelper.getMimeTypeFromExtension( MimeHelper.MS_WORD_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_PDF, MimeHelper.getMimeTypeFromExtension( MimeHelper.PDF_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_MS_EXCEL, MimeHelper.getMimeTypeFromExtension( MimeHelper.MS_EXCEL_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_MS_PPT, MimeHelper.getMimeTypeFromExtension( MimeHelper.MS_PPT_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_MS_PROJECT, MimeHelper.getMimeTypeFromExtension( MimeHelper.MS_PROJECT_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_ZIP, MimeHelper.getMimeTypeFromExtension( MimeHelper.ZIP_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_MP3, MimeHelper.getMimeTypeFromExtension( MimeHelper.MP3_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_WAV, MimeHelper.getMimeTypeFromExtension( MimeHelper.WAV_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_BMP, MimeHelper.getMimeTypeFromExtension( MimeHelper.BMP_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_GIF, MimeHelper.getMimeTypeFromExtension( MimeHelper.GIF_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_JPEG, MimeHelper.getMimeTypeFromExtension( MimeHelper.JPEG_EXTENSION_1 ) );\n    assertEquals( MimeHelper.MIMETYPE_JPEG, MimeHelper.getMimeTypeFromExtension( MimeHelper.JPEG_EXTENSION_2 ) );\n    assertEquals( MimeHelper.MIMETYPE_JPEG, MimeHelper.getMimeTypeFromExtension( MimeHelper.JPEG_EXTENSION_3 ) );\n    assertEquals( MimeHelper.MIMETYPE_PNG, MimeHelper.getMimeTypeFromExtension( MimeHelper.PNG_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_SVG, MimeHelper.getMimeTypeFromExtension( MimeHelper.SVG_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_TIFF, MimeHelper.getMimeTypeFromExtension( MimeHelper.TIFF_EXTENSION_1 ) );\n    assertEquals( MimeHelper.MIMETYPE_TIFF, MimeHelper.getMimeTypeFromExtension( MimeHelper.TIFF_EXTENSION_2 ) );\n    assertEquals( MimeHelper.MIMETYPE_CSV, MimeHelper.getMimeTypeFromExtension( MimeHelper.CSV_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_HTML, MimeHelper.getMimeTypeFromExtension( MimeHelper.HTML_EXTENSION_1 ) );\n    assertEquals( MimeHelper.MIMETYPE_HTML, MimeHelper.getMimeTypeFromExtension( MimeHelper.HTML_EXTENSION_2 ) );\n    assertEquals( MimeHelper.MIMETYPE_TEXT, MimeHelper.getMimeTypeFromExtension( MimeHelper.TEXT_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_TEXT, MimeHelper.getMimeTypeFromExtension( MimeHelper.PROPERTIES_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_MPG, MimeHelper.getMimeTypeFromExtension( MimeHelper.MPG_EXTENSION_1 ) );\n    assertEquals( MimeHelper.MIMETYPE_MPG, MimeHelper.getMimeTypeFromExtension( MimeHelper.MPG_EXTENSION_2 ) );\n    assertEquals( MimeHelper.MIMETYPE_MPG, MimeHelper.getMimeTypeFromExtension( MimeHelper.MPG_EXTENSION_3 ) );\n    assertEquals( MimeHelper.MIMETYPE_AVI, MimeHelper.getMimeTypeFromExtension( MimeHelper.AVI_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_XACTION, MimeHelper.getMimeTypeFromExtension( MimeHelper.XACTION_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_CSS, MimeHelper.getMimeTypeFromExtension( MimeHelper.CSS_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_JS, MimeHelper.getMimeTypeFromExtension( MimeHelper.JS_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_XML, MimeHelper.getMimeTypeFromExtension( MimeHelper.XML_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_FLASH, MimeHelper.getMimeTypeFromExtension( MimeHelper.FLASH_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_MS_EXCEL_2007, MimeHelper.getMimeTypeFromExtension( MimeHelper.MS_EXCEL_2007_EXTENSION ) );\n    assertEquals( MimeHelper.MIMETYPE_EMAIL_MSG, MimeHelper.getMimeTypeFromExtension( MimeHelper.EMAIL_MSG_EXTENSION ) );\n  }", "signature": "void getMimeTypeFromExtensionTest()", "full_signature": "@Test public void getMimeTypeFromExtensionTest()", "class_method_signature": "MimeHelperTest.getMimeTypeFromExtensionTest()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension", "assertEquals", "getMimeTypeFromExtension"]}, "focal_class": {"identifier": "MimeHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String MIMETYPE_RTF = \"application/rtf\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_RTF = \"application/rtf\"", "var_name": "MIMETYPE_RTF"}, {"original_string": "public static final String RTF_EXTENSION = \".rtf\";", "modifier": "public static final", "type": "String", "declarator": "RTF_EXTENSION = \".rtf\"", "var_name": "RTF_EXTENSION"}, {"original_string": "public static final String MIMETYPE_MS_WORD = \"application/msword\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_MS_WORD = \"application/msword\"", "var_name": "MIMETYPE_MS_WORD"}, {"original_string": "public static final String MS_WORD_EXTENSION = \".doc\";", "modifier": "public static final", "type": "String", "declarator": "MS_WORD_EXTENSION = \".doc\"", "var_name": "MS_WORD_EXTENSION"}, {"original_string": "public static final String MIMETYPE_PDF = \"application/pdf\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_PDF = \"application/pdf\"", "var_name": "MIMETYPE_PDF"}, {"original_string": "public static final String PDF_EXTENSION = \".pdf\";", "modifier": "public static final", "type": "String", "declarator": "PDF_EXTENSION = \".pdf\"", "var_name": "PDF_EXTENSION"}, {"original_string": "public static final String MIMETYPE_MS_EXCEL = \"application/vnd.ms-excel\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_MS_EXCEL = \"application/vnd.ms-excel\"", "var_name": "MIMETYPE_MS_EXCEL"}, {"original_string": "public static final String MS_EXCEL_EXTENSION = \".xls\";", "modifier": "public static final", "type": "String", "declarator": "MS_EXCEL_EXTENSION = \".xls\"", "var_name": "MS_EXCEL_EXTENSION"}, {"original_string": "public static final String MIMETYPE_MS_PPT = \"application/vnd.ms-powerpoint\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_MS_PPT = \"application/vnd.ms-powerpoint\"", "var_name": "MIMETYPE_MS_PPT"}, {"original_string": "public static final String MS_PPT_EXTENSION = \".ppt\";", "modifier": "public static final", "type": "String", "declarator": "MS_PPT_EXTENSION = \".ppt\"", "var_name": "MS_PPT_EXTENSION"}, {"original_string": "public static final String MIMETYPE_MS_PROJECT = \"application/vnd.ms-project\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_MS_PROJECT = \"application/vnd.ms-project\"", "var_name": "MIMETYPE_MS_PROJECT"}, {"original_string": "public static final String MS_PROJECT_EXTENSION = \".mpp\";", "modifier": "public static final", "type": "String", "declarator": "MS_PROJECT_EXTENSION = \".mpp\"", "var_name": "MS_PROJECT_EXTENSION"}, {"original_string": "public static final String MIMETYPE_ZIP = \"application/zip\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_ZIP = \"application/zip\"", "var_name": "MIMETYPE_ZIP"}, {"original_string": "public static final String ZIP_EXTENSION = \".zip\";", "modifier": "public static final", "type": "String", "declarator": "ZIP_EXTENSION = \".zip\"", "var_name": "ZIP_EXTENSION"}, {"original_string": "public static final String MIMETYPE_MP3 = \"audio/mpeg\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_MP3 = \"audio/mpeg\"", "var_name": "MIMETYPE_MP3"}, {"original_string": "public static final String MP3_EXTENSION = \".mp3\";", "modifier": "public static final", "type": "String", "declarator": "MP3_EXTENSION = \".mp3\"", "var_name": "MP3_EXTENSION"}, {"original_string": "public static final String MIMETYPE_WAV = \"audio/x-wav\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_WAV = \"audio/x-wav\"", "var_name": "MIMETYPE_WAV"}, {"original_string": "public static final String WAV_EXTENSION = \".wav\";", "modifier": "public static final", "type": "String", "declarator": "WAV_EXTENSION = \".wav\"", "var_name": "WAV_EXTENSION"}, {"original_string": "public static final String MIMETYPE_BMP = \"image/bmp\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_BMP = \"image/bmp\"", "var_name": "MIMETYPE_BMP"}, {"original_string": "public static final String BMP_EXTENSION = \".bmp\";", "modifier": "public static final", "type": "String", "declarator": "BMP_EXTENSION = \".bmp\"", "var_name": "BMP_EXTENSION"}, {"original_string": "public static final String MIMETYPE_GIF = \"image/gif\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_GIF = \"image/gif\"", "var_name": "MIMETYPE_GIF"}, {"original_string": "public static final String GIF_EXTENSION = \".gif\";", "modifier": "public static final", "type": "String", "declarator": "GIF_EXTENSION = \".gif\"", "var_name": "GIF_EXTENSION"}, {"original_string": "public static final String MIMETYPE_JPEG = \"image/jpeg\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_JPEG = \"image/jpeg\"", "var_name": "MIMETYPE_JPEG"}, {"original_string": "public static final String JPEG_EXTENSION_1 = \".jpg\";", "modifier": "public static final", "type": "String", "declarator": "JPEG_EXTENSION_1 = \".jpg\"", "var_name": "JPEG_EXTENSION_1"}, {"original_string": "public static final String JPEG_EXTENSION_2 = \".jpe\";", "modifier": "public static final", "type": "String", "declarator": "JPEG_EXTENSION_2 = \".jpe\"", "var_name": "JPEG_EXTENSION_2"}, {"original_string": "public static final String JPEG_EXTENSION_3 = \".jpeg\";", "modifier": "public static final", "type": "String", "declarator": "JPEG_EXTENSION_3 = \".jpeg\"", "var_name": "JPEG_EXTENSION_3"}, {"original_string": "public static final String MIMETYPE_PNG = \"image/png\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_PNG = \"image/png\"", "var_name": "MIMETYPE_PNG"}, {"original_string": "public static final String PNG_EXTENSION = \".png\";", "modifier": "public static final", "type": "String", "declarator": "PNG_EXTENSION = \".png\"", "var_name": "PNG_EXTENSION"}, {"original_string": "public static final String MIMETYPE_SVG = \"image/svg+xml\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_SVG = \"image/svg+xml\"", "var_name": "MIMETYPE_SVG"}, {"original_string": "public static final String SVG_EXTENSION = \".svg\";", "modifier": "public static final", "type": "String", "declarator": "SVG_EXTENSION = \".svg\"", "var_name": "SVG_EXTENSION"}, {"original_string": "public static final String MIMETYPE_TIFF = \"image/tiff\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_TIFF = \"image/tiff\"", "var_name": "MIMETYPE_TIFF"}, {"original_string": "public static final String TIFF_EXTENSION_1 = \".tif\";", "modifier": "public static final", "type": "String", "declarator": "TIFF_EXTENSION_1 = \".tif\"", "var_name": "TIFF_EXTENSION_1"}, {"original_string": "public static final String TIFF_EXTENSION_2 = \".tiff\";", "modifier": "public static final", "type": "String", "declarator": "TIFF_EXTENSION_2 = \".tiff\"", "var_name": "TIFF_EXTENSION_2"}, {"original_string": "public static final String MIMETYPE_CSV = \"text/csv\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_CSV = \"text/csv\"", "var_name": "MIMETYPE_CSV"}, {"original_string": "public static final String CSV_EXTENSION = \".csv\";", "modifier": "public static final", "type": "String", "declarator": "CSV_EXTENSION = \".csv\"", "var_name": "CSV_EXTENSION"}, {"original_string": "public static final String MIMETYPE_HTML = \"text/html\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_HTML = \"text/html\"", "var_name": "MIMETYPE_HTML"}, {"original_string": "public static final String HTML_EXTENSION_1 = \".html\";", "modifier": "public static final", "type": "String", "declarator": "HTML_EXTENSION_1 = \".html\"", "var_name": "HTML_EXTENSION_1"}, {"original_string": "public static final String HTML_EXTENSION_2 = \".htm\";", "modifier": "public static final", "type": "String", "declarator": "HTML_EXTENSION_2 = \".htm\"", "var_name": "HTML_EXTENSION_2"}, {"original_string": "public static final String MIMETYPE_TEXT = \"text/plain\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_TEXT = \"text/plain\"", "var_name": "MIMETYPE_TEXT"}, {"original_string": "public static final String TEXT_EXTENSION = \".txt\";", "modifier": "public static final", "type": "String", "declarator": "TEXT_EXTENSION = \".txt\"", "var_name": "TEXT_EXTENSION"}, {"original_string": "public static final String PROPERTIES_EXTENSION = \".properties\";", "modifier": "public static final", "type": "String", "declarator": "PROPERTIES_EXTENSION = \".properties\"", "var_name": "PROPERTIES_EXTENSION"}, {"original_string": "public static final String MIMETYPE_MPG = \"video/mpeg\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_MPG = \"video/mpeg\"", "var_name": "MIMETYPE_MPG"}, {"original_string": "public static final String MPG_EXTENSION_1 = \".mpg\";", "modifier": "public static final", "type": "String", "declarator": "MPG_EXTENSION_1 = \".mpg\"", "var_name": "MPG_EXTENSION_1"}, {"original_string": "public static final String MPG_EXTENSION_2 = \".mpe\";", "modifier": "public static final", "type": "String", "declarator": "MPG_EXTENSION_2 = \".mpe\"", "var_name": "MPG_EXTENSION_2"}, {"original_string": "public static final String MPG_EXTENSION_3 = \".mpeg\";", "modifier": "public static final", "type": "String", "declarator": "MPG_EXTENSION_3 = \".mpeg\"", "var_name": "MPG_EXTENSION_3"}, {"original_string": "public static final String MIMETYPE_AVI = \"video/x-msvideo\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_AVI = \"video/x-msvideo\"", "var_name": "MIMETYPE_AVI"}, {"original_string": "public static final String AVI_EXTENSION = \".avi\";", "modifier": "public static final", "type": "String", "declarator": "AVI_EXTENSION = \".avi\"", "var_name": "AVI_EXTENSION"}, {"original_string": "public static final String MIMETYPE_XACTION = \"text/xaction+xml\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_XACTION = \"text/xaction+xml\"", "var_name": "MIMETYPE_XACTION"}, {"original_string": "public static final String XACTION_EXTENSION = \".xaction\";", "modifier": "public static final", "type": "String", "declarator": "XACTION_EXTENSION = \".xaction\"", "var_name": "XACTION_EXTENSION"}, {"original_string": "public static final String MIMETYPE_CSS = \"text/css\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_CSS = \"text/css\"", "var_name": "MIMETYPE_CSS"}, {"original_string": "public static final String CSS_EXTENSION = \".css\";", "modifier": "public static final", "type": "String", "declarator": "CSS_EXTENSION = \".css\"", "var_name": "CSS_EXTENSION"}, {"original_string": "public static final String MIMETYPE_JS = \"text/javascript\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_JS = \"text/javascript\"", "var_name": "MIMETYPE_JS"}, {"original_string": "public static final String JS_EXTENSION = \".js\";", "modifier": "public static final", "type": "String", "declarator": "JS_EXTENSION = \".js\"", "var_name": "JS_EXTENSION"}, {"original_string": "public static final String MIMETYPE_XML = \"text/xml\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_XML = \"text/xml\"", "var_name": "MIMETYPE_XML"}, {"original_string": "public static final String XML_EXTENSION = \".xml\";", "modifier": "public static final", "type": "String", "declarator": "XML_EXTENSION = \".xml\"", "var_name": "XML_EXTENSION"}, {"original_string": "public static final String MIMETYPE_FLASH = \"application/x-shockwave-flash\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_FLASH = \"application/x-shockwave-flash\"", "var_name": "MIMETYPE_FLASH"}, {"original_string": "public static final String FLASH_EXTENSION = \".swf\";", "modifier": "public static final", "type": "String", "declarator": "FLASH_EXTENSION = \".swf\"", "var_name": "FLASH_EXTENSION"}, {"original_string": "public static final String MIMETYPE_MS_EXCEL_2007 = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_MS_EXCEL_2007 = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"", "var_name": "MIMETYPE_MS_EXCEL_2007"}, {"original_string": "public static final String MS_EXCEL_2007_EXTENSION = \".xlsx\";", "modifier": "public static final", "type": "String", "declarator": "MS_EXCEL_2007_EXTENSION = \".xlsx\"", "var_name": "MS_EXCEL_2007_EXTENSION"}, {"original_string": "public static final String MIMETYPE_EMAIL_MSG = \"mime-message/text/html\";", "modifier": "public static final", "type": "String", "declarator": "MIMETYPE_EMAIL_MSG = \"mime-message/text/html\"", "var_name": "MIMETYPE_EMAIL_MSG"}, {"original_string": "public static final String EMAIL_MSG_EXTENSION = \".eml\";", "modifier": "public static final", "type": "String", "declarator": "EMAIL_MSG_EXTENSION = \".eml\"", "var_name": "EMAIL_MSG_EXTENSION"}, {"original_string": "private static final String UTF_CHARACTER_ENCODING = \"UTF-8\";", "modifier": "private static final", "type": "String", "declarator": "UTF_CHARACTER_ENCODING = \"UTF-8\"", "var_name": "UTF_CHARACTER_ENCODING"}, {"original_string": "private static final Map<String, String> mimes = new HashMap<String, String>();", "modifier": "private static final", "type": "Map<String, String>", "declarator": "mimes = new HashMap<String, String>()", "var_name": "mimes"}, {"original_string": "private static final Map<String, String> extensions = new HashMap<String, String>();", "modifier": "private static final", "type": "Map<String, String>", "declarator": "extensions = new HashMap<String, String>()", "var_name": "extensions"}, {"original_string": "private static final Map<String, String> defaultCharset = new HashMap<String, String>();", "modifier": "private static final", "type": "Map<String, String>", "declarator": "defaultCharset = new HashMap<String, String>()", "var_name": "defaultCharset"}], "methods": [{"identifier": "getExtension", "parameters": "( final String mimeType )", "modifiers": "public static", "return": "String", "signature": "String getExtension( final String mimeType )", "full_signature": "public static String getExtension( final String mimeType )", "class_method_signature": "MimeHelper.getExtension( final String mimeType )", "testcase": false, "constructor": false}, {"identifier": "getMimeTypeFromExtension", "parameters": "( final String extension )", "modifiers": "public static", "return": "String", "signature": "String getMimeTypeFromExtension( final String extension )", "full_signature": "public static String getMimeTypeFromExtension( final String extension )", "class_method_signature": "MimeHelper.getMimeTypeFromExtension( final String extension )", "testcase": false, "constructor": false}, {"identifier": "getMimeTypeFromFileName", "parameters": "( final String fileName )", "modifiers": "public static", "return": "String", "signature": "String getMimeTypeFromFileName( final String fileName )", "full_signature": "public static String getMimeTypeFromFileName( final String fileName )", "class_method_signature": "MimeHelper.getMimeTypeFromFileName( final String fileName )", "testcase": false, "constructor": false}, {"identifier": "getDefaultCharset", "parameters": "( final String mimeType )", "modifiers": "public static", "return": "String", "signature": "String getDefaultCharset( final String mimeType )", "full_signature": "public static String getDefaultCharset( final String mimeType )", "class_method_signature": "MimeHelper.getDefaultCharset( final String mimeType )", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/pentaho/platform/util/web/MimeHelper.java"}, "focal_method": {"identifier": "getMimeTypeFromExtension", "parameters": "( final String extension )", "modifiers": "public static", "return": "String", "body": "public static String getMimeTypeFromExtension( final String extension ) {\n    return MimeHelper.extensions.get( extension.toLowerCase() );\n  }", "signature": "String getMimeTypeFromExtension( final String extension )", "full_signature": "public static String getMimeTypeFromExtension( final String extension )", "class_method_signature": "MimeHelper.getMimeTypeFromExtension( final String extension )", "testcase": false, "constructor": false, "invocations": ["get", "toLowerCase"]}, "repository": {"repo_id": 4597760, "url": "https://github.com/pentaho/pentaho-platform", "stars": 389, "created": "6/8/2012 1:48:12 PM +00:00", "updates": "2020-01-20T18:27:17+00:00", "fork": "False", "license": "licensed"}}