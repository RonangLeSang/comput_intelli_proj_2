{"test_class": {"identifier": "CompositeUserRoleListServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "CompositeUserRoleListService compositeService;", "modifier": "", "type": "CompositeUserRoleListService", "declarator": "compositeService", "var_name": "compositeService"}, {"original_string": "private IUserRoleListService service1;", "modifier": "private", "type": "IUserRoleListService", "declarator": "service1", "var_name": "service1"}, {"original_string": "private IUserRoleListService service2;", "modifier": "private", "type": "IUserRoleListService", "declarator": "service2", "var_name": "service2"}, {"original_string": "private ITenant mockTenant;", "modifier": "private", "type": "ITenant", "declarator": "mockTenant", "var_name": "mockTenant"}], "file": "extensions/src/test/java/org/pentaho/platform/plugin/services/security/userrole/CompositeUserRoleListServiceTest.java"}, "test_case": {"identifier": "testGetAllUsers", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetAllUsers() throws Exception {\n\n    List<String> allUsers = compositeService.getAllUsers();\n    assertEquals( 2, allUsers.size() );\n    compositeService.setStrategy( CompositeUserRoleListService.STRATEGY.ADDITIVE );\n    allUsers = compositeService.getAllUsers();\n    assertEquals( 3, allUsers.size() );\n    assertTrue( unsortedEqualArrays( allUsers.toArray( new String[allUsers.size()] ),\n        new String[]{\"user1\", \"suzy\", \"joe\"} ) );\n  }", "signature": "void testGetAllUsers()", "full_signature": "@Test public void testGetAllUsers()", "class_method_signature": "CompositeUserRoleListServiceTest.testGetAllUsers()", "testcase": true, "constructor": false, "invocations": ["getAllUsers", "assertEquals", "size", "setStrategy", "getAllUsers", "assertEquals", "size", "assertTrue", "unsortedEqualArrays", "toArray", "size"]}, "focal_class": {"identifier": "CompositeUserRoleListService", "superclass": "", "interfaces": "implements IUserRoleListService", "fields": [{"original_string": "private List<IUserRoleListService> delegates = new ArrayList<IUserRoleListService>();", "modifier": "private", "type": "List<IUserRoleListService>", "declarator": "delegates = new ArrayList<IUserRoleListService>()", "var_name": "delegates"}, {"original_string": "private static Logger logger = LoggerFactory.getLogger( CompositeUserRoleListService.class );", "modifier": "private static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger( CompositeUserRoleListService.class )", "var_name": "logger"}, {"original_string": "private STRATEGY activeStrategy = STRATEGY.FIRST_MATCH;", "modifier": "private", "type": "STRATEGY", "declarator": "activeStrategy = STRATEGY.FIRST_MATCH", "var_name": "activeStrategy"}], "methods": [{"identifier": "CompositeUserRoleListService", "parameters": "( List<IUserRoleListService> delegates )", "modifiers": "public", "return": "", "signature": " CompositeUserRoleListService( List<IUserRoleListService> delegates )", "full_signature": "public  CompositeUserRoleListService( List<IUserRoleListService> delegates )", "class_method_signature": "CompositeUserRoleListService.CompositeUserRoleListService( List<IUserRoleListService> delegates )", "testcase": false, "constructor": true}, {"identifier": "setStrategy", "parameters": "( STRATEGY strategy )", "modifiers": "public", "return": "void", "signature": "void setStrategy( STRATEGY strategy )", "full_signature": "public void setStrategy( STRATEGY strategy )", "class_method_signature": "CompositeUserRoleListService.setStrategy( STRATEGY strategy )", "testcase": false, "constructor": false}, {"identifier": "setStrategy", "parameters": "( String strategy )", "modifiers": "public", "return": "void", "signature": "void setStrategy( String strategy )", "full_signature": "public void setStrategy( String strategy )", "class_method_signature": "CompositeUserRoleListService.setStrategy( String strategy )", "testcase": false, "constructor": false}, {"identifier": "getActiveStrategy", "parameters": "()", "modifiers": "public", "return": "STRATEGY", "signature": "STRATEGY getActiveStrategy()", "full_signature": "public STRATEGY getActiveStrategy()", "class_method_signature": "CompositeUserRoleListService.getActiveStrategy()", "testcase": false, "constructor": false}, {"identifier": "getAllRoles", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getAllRoles()", "full_signature": "@Override public List<String> getAllRoles()", "class_method_signature": "CompositeUserRoleListService.getAllRoles()", "testcase": false, "constructor": false}, {"identifier": "getSystemRoles", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getSystemRoles()", "full_signature": "@Override public List<String> getSystemRoles()", "class_method_signature": "CompositeUserRoleListService.getSystemRoles()", "testcase": false, "constructor": false}, {"identifier": "getAllRoles", "parameters": "( final ITenant tenant )", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getAllRoles( final ITenant tenant )", "full_signature": "@Override public List<String> getAllRoles( final ITenant tenant )", "class_method_signature": "CompositeUserRoleListService.getAllRoles( final ITenant tenant )", "testcase": false, "constructor": false}, {"identifier": "getAllUsers", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getAllUsers()", "full_signature": "@Override public List<String> getAllUsers()", "class_method_signature": "CompositeUserRoleListService.getAllUsers()", "testcase": false, "constructor": false}, {"identifier": "getAllUsers", "parameters": "( final ITenant tenant )", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getAllUsers( final ITenant tenant )", "full_signature": "@Override public List<String> getAllUsers( final ITenant tenant )", "class_method_signature": "CompositeUserRoleListService.getAllUsers( final ITenant tenant )", "testcase": false, "constructor": false}, {"identifier": "getUsersInRole", "parameters": "( final ITenant tenant, final String role )", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getUsersInRole( final ITenant tenant, final String role )", "full_signature": "@Override public List<String> getUsersInRole( final ITenant tenant, final String role )", "class_method_signature": "CompositeUserRoleListService.getUsersInRole( final ITenant tenant, final String role )", "testcase": false, "constructor": false}, {"identifier": "getRolesForUser", "parameters": "( final ITenant tenant, final String username )", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getRolesForUser( final ITenant tenant, final String username )", "full_signature": "@Override public List<String> getRolesForUser( final ITenant tenant, final String username )", "class_method_signature": "CompositeUserRoleListService.getRolesForUser( final ITenant tenant, final String username )", "testcase": false, "constructor": false}, {"identifier": "collectResultsForOperation", "parameters": "( CompositeOperation operation )", "modifiers": "private", "return": "List<String>", "signature": "List<String> collectResultsForOperation( CompositeOperation operation )", "full_signature": "private List<String> collectResultsForOperation( CompositeOperation operation )", "class_method_signature": "CompositeUserRoleListService.collectResultsForOperation( CompositeOperation operation )", "testcase": false, "constructor": false}], "file": "extensions/src/main/java/org/pentaho/platform/plugin/services/security/userrole/CompositeUserRoleListService.java"}, "focal_method": {"identifier": "getAllUsers", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "body": "@Override\n  public List<String> getAllUsers() {\n    return collectResultsForOperation( new CompositeOperation() {\n      @Override\n      public List<String> perform( IUserRoleListService service ) {\n        return service.getAllUsers();\n      }\n    } );\n  }", "signature": "List<String> getAllUsers()", "full_signature": "@Override public List<String> getAllUsers()", "class_method_signature": "CompositeUserRoleListService.getAllUsers()", "testcase": false, "constructor": false, "invocations": ["collectResultsForOperation", "getAllUsers"]}, "repository": {"repo_id": 4597760, "url": "https://github.com/pentaho/pentaho-platform", "stars": 389, "created": "6/8/2012 1:48:12 PM +00:00", "updates": "2020-01-20T18:27:17+00:00", "fork": "False", "license": "licensed"}}