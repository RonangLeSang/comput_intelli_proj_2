{"test_class": {"identifier": "XActionUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock  private RepositoryFile xactionFile;", "modifier": "@Mock  private", "type": "RepositoryFile", "declarator": "xactionFile", "var_name": "xactionFile"}, {"original_string": "@Mock  private RepositoryFile generatedFile;", "modifier": "@Mock  private", "type": "RepositoryFile", "declarator": "generatedFile", "var_name": "generatedFile"}, {"original_string": "@Mock  private HttpServletRequest httpServletRequest;", "modifier": "@Mock  private", "type": "HttpServletRequest", "declarator": "httpServletRequest", "var_name": "httpServletRequest"}, {"original_string": "@Mock  private HttpServletResponse httpServletResponse;", "modifier": "@Mock  private", "type": "HttpServletResponse", "declarator": "httpServletResponse", "var_name": "httpServletResponse"}, {"original_string": "@Mock  private IPentahoSession userSession;", "modifier": "@Mock  private", "type": "IPentahoSession", "declarator": "userSession", "var_name": "userSession"}, {"original_string": "@Mock  private IMimeTypeListener mimeTypeListener;", "modifier": "@Mock  private", "type": "IMimeTypeListener", "declarator": "mimeTypeListener", "var_name": "mimeTypeListener"}, {"original_string": "@Mock  private IUnifiedRepository repository;", "modifier": "@Mock  private", "type": "IUnifiedRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "@Mock private ISolutionEngine engine;", "modifier": "@Mock private", "type": "ISolutionEngine", "declarator": "engine", "var_name": "engine"}, {"original_string": "@Mock private IMessageFormatter formatter;", "modifier": "@Mock private", "type": "IMessageFormatter", "declarator": "formatter", "var_name": "formatter"}, {"original_string": "@Mock private IAuthorizationPolicy authPolicy;", "modifier": "@Mock private", "type": "IAuthorizationPolicy", "declarator": "authPolicy", "var_name": "authPolicy"}, {"original_string": "private IPentahoObjectFactory pentahoObjectFactoryUnified;", "modifier": "private", "type": "IPentahoObjectFactory", "declarator": "pentahoObjectFactoryUnified", "var_name": "pentahoObjectFactoryUnified"}], "file": "extensions/src/test/java/org/pentaho/platform/web/http/api/resources/XActionUtilTest.java"}, "test_case": {"identifier": "testDeleteContentItem_null", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testDeleteContentItem_null() throws Exception {\n    XactionUtil.deleteContentItem( null, null ); // No exception\n    XactionUtil.deleteContentItem( null, mock( IUnifiedRepository.class ) ); // No exception\n    verify( repository, times( 0 ) ).deleteFile( anyString(), anyBoolean(), anyString() );\n  }", "signature": "void testDeleteContentItem_null()", "full_signature": "@Test public void testDeleteContentItem_null()", "class_method_signature": "XActionUtilTest.testDeleteContentItem_null()", "testcase": true, "constructor": false, "invocations": ["deleteContentItem", "deleteContentItem", "mock", "deleteFile", "verify", "times", "anyString", "anyBoolean", "anyString"]}, "focal_class": {"identifier": "XactionUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Log logger = LogFactory.getLog( XactionUtil.class );", "modifier": "private static final", "type": "Log", "declarator": "logger = LogFactory.getLog( XactionUtil.class )", "var_name": "logger"}], "methods": [{"identifier": "createOutputFileName", "parameters": "( RepositoryFile file, IOutputHandler outputHandler )", "modifiers": "@SuppressWarnings ( \"rawtypes\" ) public static", "return": "void", "signature": "void createOutputFileName( RepositoryFile file, IOutputHandler outputHandler )", "full_signature": "@SuppressWarnings ( \"rawtypes\" ) public static void createOutputFileName( RepositoryFile file, IOutputHandler outputHandler )", "class_method_signature": "XactionUtil.createOutputFileName( RepositoryFile file, IOutputHandler outputHandler )", "testcase": false, "constructor": false}, {"identifier": "getOutputStream", "parameters": "( HttpServletResponse response, boolean doMessages )", "modifiers": "public static", "return": "OutputStream", "signature": "OutputStream getOutputStream( HttpServletResponse response, boolean doMessages )", "full_signature": "public static OutputStream getOutputStream( HttpServletResponse response, boolean doMessages )", "class_method_signature": "XactionUtil.getOutputStream( HttpServletResponse response, boolean doMessages )", "testcase": false, "constructor": false}, {"identifier": "setupOutputHandler", "parameters": "( HttpOutputHandler outputHandler, IParameterProvider requestParameters )", "modifiers": "public static", "return": "void", "signature": "void setupOutputHandler( HttpOutputHandler outputHandler, IParameterProvider requestParameters )", "full_signature": "public static void setupOutputHandler( HttpOutputHandler outputHandler, IParameterProvider requestParameters )", "class_method_signature": "XactionUtil.setupOutputHandler( HttpOutputHandler outputHandler, IParameterProvider requestParameters )", "testcase": false, "constructor": false}, {"identifier": "createOutputHandler", "parameters": "( HttpServletResponse response, OutputStream outputStream )", "modifiers": "public static", "return": "HttpOutputHandler", "signature": "HttpOutputHandler createOutputHandler( HttpServletResponse response, OutputStream outputStream )", "full_signature": "public static HttpOutputHandler createOutputHandler( HttpServletResponse response, OutputStream outputStream )", "class_method_signature": "XactionUtil.createOutputHandler( HttpServletResponse response, OutputStream outputStream )", "testcase": false, "constructor": false}, {"identifier": "postExecute", "parameters": "( IRuntimeContext runtime, boolean debugMessages, boolean doWrapper,\n                                    IOutputHandler outputHandler, Map<String, IParameterProvider> parameterProviders,\n                                    HttpServletRequest request,\n                                    HttpServletResponse response, List<?> messages, boolean deleteGeneratedFiles )", "modifiers": "public static", "return": "String", "signature": "String postExecute( IRuntimeContext runtime, boolean debugMessages, boolean doWrapper,\n                                    IOutputHandler outputHandler, Map<String, IParameterProvider> parameterProviders,\n                                    HttpServletRequest request,\n                                    HttpServletResponse response, List<?> messages, boolean deleteGeneratedFiles )", "full_signature": "public static String postExecute( IRuntimeContext runtime, boolean debugMessages, boolean doWrapper,\n                                    IOutputHandler outputHandler, Map<String, IParameterProvider> parameterProviders,\n                                    HttpServletRequest request,\n                                    HttpServletResponse response, List<?> messages, boolean deleteGeneratedFiles )", "class_method_signature": "XactionUtil.postExecute( IRuntimeContext runtime, boolean debugMessages, boolean doWrapper,\n                                    IOutputHandler outputHandler, Map<String, IParameterProvider> parameterProviders,\n                                    HttpServletRequest request,\n                                    HttpServletResponse response, List<?> messages, boolean deleteGeneratedFiles )", "testcase": false, "constructor": false}, {"identifier": "deleteContentItem", "parameters": "( IContentItem contentItem, IUnifiedRepository unifiedRepository )", "modifiers": "static", "return": "void", "signature": "void deleteContentItem( IContentItem contentItem, IUnifiedRepository unifiedRepository )", "full_signature": "static void deleteContentItem( IContentItem contentItem, IUnifiedRepository unifiedRepository )", "class_method_signature": "XactionUtil.deleteContentItem( IContentItem contentItem, IUnifiedRepository unifiedRepository )", "testcase": false, "constructor": false}, {"identifier": "executeHtml", "parameters": "( RepositoryFile file, HttpServletRequest httpServletRequest,\n                                    HttpServletResponse httpServletResponse, IPentahoSession userSession,\n                                    IMimeTypeListener mimeTypeListener )", "modifiers": "@SuppressWarnings ( { \"unchecked\", \"rawtypes\" } ) public static", "return": "String", "signature": "String executeHtml( RepositoryFile file, HttpServletRequest httpServletRequest,\n                                    HttpServletResponse httpServletResponse, IPentahoSession userSession,\n                                    IMimeTypeListener mimeTypeListener )", "full_signature": "@SuppressWarnings ( { \"unchecked\", \"rawtypes\" } ) public static String executeHtml( RepositoryFile file, HttpServletRequest httpServletRequest,\n                                    HttpServletResponse httpServletResponse, IPentahoSession userSession,\n                                    IMimeTypeListener mimeTypeListener )", "class_method_signature": "XactionUtil.executeHtml( RepositoryFile file, HttpServletRequest httpServletRequest,\n                                    HttpServletResponse httpServletResponse, IPentahoSession userSession,\n                                    IMimeTypeListener mimeTypeListener )", "testcase": false, "constructor": false}, {"identifier": "executeScheduleUi", "parameters": "( RepositoryFile file, HttpServletRequest httpServletRequest,\n                                          HttpServletResponse httpServletResponse, IPentahoSession userSession,\n                                          IMimeTypeListener mimeTypeListener )", "modifiers": "@SuppressWarnings ( { \"unchecked\", \"rawtypes\" } ) public static", "return": "String", "signature": "String executeScheduleUi( RepositoryFile file, HttpServletRequest httpServletRequest,\n                                          HttpServletResponse httpServletResponse, IPentahoSession userSession,\n                                          IMimeTypeListener mimeTypeListener )", "full_signature": "@SuppressWarnings ( { \"unchecked\", \"rawtypes\" } ) public static String executeScheduleUi( RepositoryFile file, HttpServletRequest httpServletRequest,\n                                          HttpServletResponse httpServletResponse, IPentahoSession userSession,\n                                          IMimeTypeListener mimeTypeListener )", "class_method_signature": "XactionUtil.executeScheduleUi( RepositoryFile file, HttpServletRequest httpServletRequest,\n                                          HttpServletResponse httpServletResponse, IPentahoSession userSession,\n                                          IMimeTypeListener mimeTypeListener )", "testcase": false, "constructor": false}, {"identifier": "executeInternal", "parameters": "( RepositoryFile file, IParameterProvider requestParams,\n                                                    HttpServletRequest httpServletRequest, IOutputHandler outputHandler,\n                                                    Map<String, IParameterProvider> parameterProviders,\n                                                    IPentahoSession userSession, boolean forcePrompt,\n                                                    List messages )", "modifiers": "@SuppressWarnings ( \"rawtypes\" ) protected static", "return": "IRuntimeContext", "signature": "IRuntimeContext executeInternal( RepositoryFile file, IParameterProvider requestParams,\n                                                    HttpServletRequest httpServletRequest, IOutputHandler outputHandler,\n                                                    Map<String, IParameterProvider> parameterProviders,\n                                                    IPentahoSession userSession, boolean forcePrompt,\n                                                    List messages )", "full_signature": "@SuppressWarnings ( \"rawtypes\" ) protected static IRuntimeContext executeInternal( RepositoryFile file, IParameterProvider requestParams,\n                                                    HttpServletRequest httpServletRequest, IOutputHandler outputHandler,\n                                                    Map<String, IParameterProvider> parameterProviders,\n                                                    IPentahoSession userSession, boolean forcePrompt,\n                                                    List messages )", "class_method_signature": "XactionUtil.executeInternal( RepositoryFile file, IParameterProvider requestParams,\n                                                    HttpServletRequest httpServletRequest, IOutputHandler outputHandler,\n                                                    Map<String, IParameterProvider> parameterProviders,\n                                                    IPentahoSession userSession, boolean forcePrompt,\n                                                    List messages )", "testcase": false, "constructor": false}, {"identifier": "executeXml", "parameters": "( RepositoryFile file, HttpServletRequest httpServletRequest,\n                                   HttpServletResponse httpServletResponse, IPentahoSession userSession )", "modifiers": "@SuppressWarnings ( { \"unchecked\", \"rawtypes\" } ) public static", "return": "String", "signature": "String executeXml( RepositoryFile file, HttpServletRequest httpServletRequest,\n                                   HttpServletResponse httpServletResponse, IPentahoSession userSession )", "full_signature": "@SuppressWarnings ( { \"unchecked\", \"rawtypes\" } ) public static String executeXml( RepositoryFile file, HttpServletRequest httpServletRequest,\n                                   HttpServletResponse httpServletResponse, IPentahoSession userSession )", "class_method_signature": "XactionUtil.executeXml( RepositoryFile file, HttpServletRequest httpServletRequest,\n                                   HttpServletResponse httpServletResponse, IPentahoSession userSession )", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "( String returnContentType, RepositoryFile file, HttpServletRequest httpServletRequest,\n                                HttpServletResponse httpServletResponse, IPentahoSession userSession,\n                                IMimeTypeListener mimeTypeListener )", "modifiers": "public static", "return": "String", "signature": "String execute( String returnContentType, RepositoryFile file, HttpServletRequest httpServletRequest,\n                                HttpServletResponse httpServletResponse, IPentahoSession userSession,\n                                IMimeTypeListener mimeTypeListener )", "full_signature": "public static String execute( String returnContentType, RepositoryFile file, HttpServletRequest httpServletRequest,\n                                HttpServletResponse httpServletResponse, IPentahoSession userSession,\n                                IMimeTypeListener mimeTypeListener )", "class_method_signature": "XactionUtil.execute( String returnContentType, RepositoryFile file, HttpServletRequest httpServletRequest,\n                                HttpServletResponse httpServletResponse, IPentahoSession userSession,\n                                IMimeTypeListener mimeTypeListener )", "testcase": false, "constructor": false}, {"identifier": "doParameter", "parameters": "( final RepositoryFile file, IParameterProvider parameterProvider,\n                                    final IPentahoSession userSession )", "modifiers": "@SuppressWarnings ( { \"unchecked\", \"rawtypes\" } ) public static", "return": "String", "signature": "String doParameter( final RepositoryFile file, IParameterProvider parameterProvider,\n                                    final IPentahoSession userSession )", "full_signature": "@SuppressWarnings ( { \"unchecked\", \"rawtypes\" } ) public static String doParameter( final RepositoryFile file, IParameterProvider parameterProvider,\n                                    final IPentahoSession userSession )", "class_method_signature": "XactionUtil.doParameter( final RepositoryFile file, IParameterProvider parameterProvider,\n                                    final IPentahoSession userSession )", "testcase": false, "constructor": false}, {"identifier": "createParameterElement", "parameters": "( final Element parametersElement, final String paramName,\n                                                 final Class type, final String label, final String role,\n                                                 final String group, final String[] values )", "modifiers": "@SuppressWarnings ( \"rawtypes\" ) private static", "return": "Element", "signature": "Element createParameterElement( final Element parametersElement, final String paramName,\n                                                 final Class type, final String label, final String role,\n                                                 final String group, final String[] values )", "full_signature": "@SuppressWarnings ( \"rawtypes\" ) private static Element createParameterElement( final Element parametersElement, final String paramName,\n                                                 final Class type, final String label, final String role,\n                                                 final String group, final String[] values )", "class_method_signature": "XactionUtil.createParameterElement( final Element parametersElement, final String paramName,\n                                                 final Class type, final String label, final String role,\n                                                 final String group, final String[] values )", "testcase": false, "constructor": false}, {"identifier": "lookupParameterGroupLabel", "parameters": "( final String group )", "modifiers": "private static", "return": "String", "signature": "String lookupParameterGroupLabel( final String group )", "full_signature": "private static String lookupParameterGroupLabel( final String group )", "class_method_signature": "XactionUtil.lookupParameterGroupLabel( final String group )", "testcase": false, "constructor": false}], "file": "extensions/src/main/java/org/pentaho/platform/web/http/api/resources/XactionUtil.java"}, "focal_method": {"identifier": "deleteContentItem", "parameters": "( IContentItem contentItem, IUnifiedRepository unifiedRepository )", "modifiers": "static", "return": "void", "body": "static void deleteContentItem( IContentItem contentItem, IUnifiedRepository unifiedRepository ) {\n    if ( contentItem instanceof RepositoryFileContentItem ) {\n      String path = contentItem.getPath();\n      RepositoryFile repositoryFile = unifiedRepository.getFile( path );\n      //repositoryFile can be null if we have not access or file does not exist\n      if ( repositoryFile != null ) {\n        unifiedRepository.deleteFile( repositoryFile.getId(), true, null );\n      }\n    } else if ( contentItem instanceof FileContentItem ) {\n      // Files in the file system must not be deleted here\n      String path = ( (FileContentItem) contentItem ).getFile().getName();\n      logger.warn( Messages.getInstance().getString( \"XactionUtil.SKIP_REMOVING_OUTPUT_FILE\", path ) );\n    }\n\n  }", "signature": "void deleteContentItem( IContentItem contentItem, IUnifiedRepository unifiedRepository )", "full_signature": "static void deleteContentItem( IContentItem contentItem, IUnifiedRepository unifiedRepository )", "class_method_signature": "XactionUtil.deleteContentItem( IContentItem contentItem, IUnifiedRepository unifiedRepository )", "testcase": false, "constructor": false, "invocations": ["getPath", "getFile", "deleteFile", "getId", "getName", "getFile", "warn", "getString", "getInstance"]}, "repository": {"repo_id": 4597760, "url": "https://github.com/pentaho/pentaho-platform", "stars": 389, "created": "6/8/2012 1:48:12 PM +00:00", "updates": "2020-01-20T18:27:17+00:00", "fork": "False", "license": "licensed"}}