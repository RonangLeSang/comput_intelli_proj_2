{"test_class": {"identifier": "SolutionRepositoryVfsFileObjectTest", "superclass": "", "interfaces": "", "fields": [], "file": "repository/src/test/java/org/pentaho/platform/repository/solution/filebased/SolutionRepositoryVfsFileObjectTest.java"}, "test_case": {"identifier": "testFileRefConstructor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testFileRefConstructor() {\n    String expectedFileRef = \"dummyFileRef\";\n    SolutionRepositoryVfsFileObject solutionRepositoryVfsFileObject =\n      new SolutionRepositoryVfsFileObject( \"dummyFileRef\" );\n    assertThat( solutionRepositoryVfsFileObject.getFileRef(), is( expectedFileRef ) );\n  }", "signature": "void testFileRefConstructor()", "full_signature": "@Test public void testFileRefConstructor()", "class_method_signature": "SolutionRepositoryVfsFileObjectTest.testFileRefConstructor()", "testcase": true, "constructor": false, "invocations": ["assertThat", "getFileRef", "is"]}, "focal_class": {"identifier": "SolutionRepositoryVfsFileObject", "superclass": "", "interfaces": "implements FileObject", "fields": [{"original_string": "private static IAclNodeHelper testAclHelper;", "modifier": "private static", "type": "IAclNodeHelper", "declarator": "testAclHelper", "var_name": "testAclHelper"}, {"original_string": "private String fileRef;", "modifier": "private", "type": "String", "declarator": "fileRef", "var_name": "fileRef"}, {"original_string": "private static final IUnifiedRepository repository = PentahoSystem.get( IUnifiedRepository.class, null );", "modifier": "private static final", "type": "IUnifiedRepository", "declarator": "repository = PentahoSystem.get( IUnifiedRepository.class, null )", "var_name": "repository"}, {"original_string": "private FileContent content = null;", "modifier": "private", "type": "FileContent", "declarator": "content = null", "var_name": "content"}, {"original_string": "private RepositoryFile repositoryFile = null;", "modifier": "private", "type": "RepositoryFile", "declarator": "repositoryFile = null", "var_name": "repositoryFile"}, {"original_string": "private IRepositoryContentConverterHandler converterHandler;", "modifier": "private", "type": "IRepositoryContentConverterHandler", "declarator": "converterHandler", "var_name": "converterHandler"}, {"original_string": "private IAclNodeHelper aclHelper;", "modifier": "private", "type": "IAclNodeHelper", "declarator": "aclHelper", "var_name": "aclHelper"}], "methods": [{"identifier": "SolutionRepositoryVfsFileObject", "parameters": "( final String fileRef )", "modifiers": "public", "return": "", "signature": " SolutionRepositoryVfsFileObject( final String fileRef )", "full_signature": "public  SolutionRepositoryVfsFileObject( final String fileRef )", "class_method_signature": "SolutionRepositoryVfsFileObject.SolutionRepositoryVfsFileObject( final String fileRef )", "testcase": false, "constructor": true}, {"identifier": "getRepository", "parameters": "()", "modifiers": "public", "return": "IUnifiedRepository", "signature": "IUnifiedRepository getRepository()", "full_signature": "public IUnifiedRepository getRepository()", "class_method_signature": "SolutionRepositoryVfsFileObject.getRepository()", "testcase": false, "constructor": false}, {"identifier": "getConverterHandler", "parameters": "()", "modifiers": "public", "return": "IRepositoryContentConverterHandler", "signature": "IRepositoryContentConverterHandler getConverterHandler()", "full_signature": "public IRepositoryContentConverterHandler getConverterHandler()", "class_method_signature": "SolutionRepositoryVfsFileObject.getConverterHandler()", "testcase": false, "constructor": false}, {"identifier": "getFileRef", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFileRef()", "full_signature": "public String getFileRef()", "class_method_signature": "SolutionRepositoryVfsFileObject.getFileRef()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "FileName", "signature": "FileName getName()", "full_signature": "public FileName getName()", "class_method_signature": "SolutionRepositoryVfsFileObject.getName()", "testcase": false, "constructor": false}, {"identifier": "getURL", "parameters": "()", "modifiers": "public", "return": "URL", "signature": "URL getURL()", "full_signature": "public URL getURL()", "class_method_signature": "SolutionRepositoryVfsFileObject.getURL()", "testcase": false, "constructor": false}, {"identifier": "initFile", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initFile()", "full_signature": "private void initFile()", "class_method_signature": "SolutionRepositoryVfsFileObject.initFile()", "testcase": false, "constructor": false}, {"identifier": "exists", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean exists()", "full_signature": "public boolean exists()", "class_method_signature": "SolutionRepositoryVfsFileObject.exists()", "testcase": false, "constructor": false}, {"identifier": "isHidden", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isHidden()", "full_signature": "public boolean isHidden()", "class_method_signature": "SolutionRepositoryVfsFileObject.isHidden()", "testcase": false, "constructor": false}, {"identifier": "isReadable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isReadable()", "full_signature": "public boolean isReadable()", "class_method_signature": "SolutionRepositoryVfsFileObject.isReadable()", "testcase": false, "constructor": false}, {"identifier": "isWriteable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isWriteable()", "full_signature": "public boolean isWriteable()", "class_method_signature": "SolutionRepositoryVfsFileObject.isWriteable()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "FileType", "signature": "FileType getType()", "full_signature": "public FileType getType()", "class_method_signature": "SolutionRepositoryVfsFileObject.getType()", "testcase": false, "constructor": false}, {"identifier": "getParent", "parameters": "()", "modifiers": "public", "return": "FileObject", "signature": "FileObject getParent()", "full_signature": "public FileObject getParent()", "class_method_signature": "SolutionRepositoryVfsFileObject.getParent()", "testcase": false, "constructor": false}, {"identifier": "getPublicURIString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPublicURIString()", "full_signature": "@Override public String getPublicURIString()", "class_method_signature": "SolutionRepositoryVfsFileObject.getPublicURIString()", "testcase": false, "constructor": false}, {"identifier": "getFileSystem", "parameters": "()", "modifiers": "public", "return": "FileSystem", "signature": "FileSystem getFileSystem()", "full_signature": "public FileSystem getFileSystem()", "class_method_signature": "SolutionRepositoryVfsFileObject.getFileSystem()", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "public", "return": "FileObject[]", "signature": "FileObject[] getChildren()", "full_signature": "public FileObject[] getChildren()", "class_method_signature": "SolutionRepositoryVfsFileObject.getChildren()", "testcase": false, "constructor": false}, {"identifier": "getChild", "parameters": "( final String arg0 )", "modifiers": "public", "return": "FileObject", "signature": "FileObject getChild( final String arg0 )", "full_signature": "public FileObject getChild( final String arg0 )", "class_method_signature": "SolutionRepositoryVfsFileObject.getChild( final String arg0 )", "testcase": false, "constructor": false}, {"identifier": "resolveFile", "parameters": "( final String arg0, final NameScope arg1 )", "modifiers": "public", "return": "FileObject", "signature": "FileObject resolveFile( final String arg0, final NameScope arg1 )", "full_signature": "public FileObject resolveFile( final String arg0, final NameScope arg1 )", "class_method_signature": "SolutionRepositoryVfsFileObject.resolveFile( final String arg0, final NameScope arg1 )", "testcase": false, "constructor": false}, {"identifier": "setExecutable", "parameters": "( boolean executable, boolean ownerOnly )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setExecutable( boolean executable, boolean ownerOnly )", "full_signature": "@Override public boolean setExecutable( boolean executable, boolean ownerOnly )", "class_method_signature": "SolutionRepositoryVfsFileObject.setExecutable( boolean executable, boolean ownerOnly )", "testcase": false, "constructor": false}, {"identifier": "setReadable", "parameters": "( boolean readable, boolean ownerOnly )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setReadable( boolean readable, boolean ownerOnly )", "full_signature": "@Override public boolean setReadable( boolean readable, boolean ownerOnly )", "class_method_signature": "SolutionRepositoryVfsFileObject.setReadable( boolean readable, boolean ownerOnly )", "testcase": false, "constructor": false}, {"identifier": "setWritable", "parameters": "( boolean writable, boolean ownerOnly )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setWritable( boolean writable, boolean ownerOnly )", "full_signature": "@Override public boolean setWritable( boolean writable, boolean ownerOnly )", "class_method_signature": "SolutionRepositoryVfsFileObject.setWritable( boolean writable, boolean ownerOnly )", "testcase": false, "constructor": false}, {"identifier": "resolveFile", "parameters": "( final String arg0 )", "modifiers": "public", "return": "FileObject", "signature": "FileObject resolveFile( final String arg0 )", "full_signature": "public FileObject resolveFile( final String arg0 )", "class_method_signature": "SolutionRepositoryVfsFileObject.resolveFile( final String arg0 )", "testcase": false, "constructor": false}, {"identifier": "findFiles", "parameters": "( final FileSelector arg0 )", "modifiers": "public", "return": "FileObject[]", "signature": "FileObject[] findFiles( final FileSelector arg0 )", "full_signature": "public FileObject[] findFiles( final FileSelector arg0 )", "class_method_signature": "SolutionRepositoryVfsFileObject.findFiles( final FileSelector arg0 )", "testcase": false, "constructor": false}, {"identifier": "findFiles", "parameters": "( final FileSelector arg0, final boolean arg1, final List arg2 )", "modifiers": "public", "return": "void", "signature": "void findFiles( final FileSelector arg0, final boolean arg1, final List arg2 )", "full_signature": "public void findFiles( final FileSelector arg0, final boolean arg1, final List arg2 )", "class_method_signature": "SolutionRepositoryVfsFileObject.findFiles( final FileSelector arg0, final boolean arg1, final List arg2 )", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean delete()", "full_signature": "public boolean delete()", "class_method_signature": "SolutionRepositoryVfsFileObject.delete()", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "( final FileSelector arg0 )", "modifiers": "public", "return": "int", "signature": "int delete( final FileSelector arg0 )", "full_signature": "public int delete( final FileSelector arg0 )", "class_method_signature": "SolutionRepositoryVfsFileObject.delete( final FileSelector arg0 )", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int deleteAll()", "full_signature": "@Override public int deleteAll()", "class_method_signature": "SolutionRepositoryVfsFileObject.deleteAll()", "testcase": false, "constructor": false}, {"identifier": "createFolder", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void createFolder()", "full_signature": "public void createFolder()", "class_method_signature": "SolutionRepositoryVfsFileObject.createFolder()", "testcase": false, "constructor": false}, {"identifier": "createFile", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void createFile()", "full_signature": "public void createFile()", "class_method_signature": "SolutionRepositoryVfsFileObject.createFile()", "testcase": false, "constructor": false}, {"identifier": "copyFrom", "parameters": "( final FileObject arg0, final FileSelector arg1 )", "modifiers": "public", "return": "void", "signature": "void copyFrom( final FileObject arg0, final FileSelector arg1 )", "full_signature": "public void copyFrom( final FileObject arg0, final FileSelector arg1 )", "class_method_signature": "SolutionRepositoryVfsFileObject.copyFrom( final FileObject arg0, final FileSelector arg1 )", "testcase": false, "constructor": false}, {"identifier": "moveTo", "parameters": "( final FileObject arg0 )", "modifiers": "public", "return": "void", "signature": "void moveTo( final FileObject arg0 )", "full_signature": "public void moveTo( final FileObject arg0 )", "class_method_signature": "SolutionRepositoryVfsFileObject.moveTo( final FileObject arg0 )", "testcase": false, "constructor": false}, {"identifier": "canRenameTo", "parameters": "( final FileObject arg0 )", "modifiers": "public", "return": "boolean", "signature": "boolean canRenameTo( final FileObject arg0 )", "full_signature": "public boolean canRenameTo( final FileObject arg0 )", "class_method_signature": "SolutionRepositoryVfsFileObject.canRenameTo( final FileObject arg0 )", "testcase": false, "constructor": false}, {"identifier": "getContent", "parameters": "()", "modifiers": "public", "return": "FileContent", "signature": "FileContent getContent()", "full_signature": "public FileContent getContent()", "class_method_signature": "SolutionRepositoryVfsFileObject.getContent()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "SolutionRepositoryVfsFileObject.close()", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void refresh()", "full_signature": "public void refresh()", "class_method_signature": "SolutionRepositoryVfsFileObject.refresh()", "testcase": false, "constructor": false}, {"identifier": "isAttached", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAttached()", "full_signature": "public boolean isAttached()", "class_method_signature": "SolutionRepositoryVfsFileObject.isAttached()", "testcase": false, "constructor": false}, {"identifier": "isContentOpen", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isContentOpen()", "full_signature": "public boolean isContentOpen()", "class_method_signature": "SolutionRepositoryVfsFileObject.isContentOpen()", "testcase": false, "constructor": false}, {"identifier": "isExecutable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isExecutable()", "full_signature": "@Override public boolean isExecutable()", "class_method_signature": "SolutionRepositoryVfsFileObject.isExecutable()", "testcase": false, "constructor": false}, {"identifier": "isFile", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isFile()", "full_signature": "@Override public boolean isFile()", "class_method_signature": "SolutionRepositoryVfsFileObject.isFile()", "testcase": false, "constructor": false}, {"identifier": "isFolder", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isFolder()", "full_signature": "@Override public boolean isFolder()", "class_method_signature": "SolutionRepositoryVfsFileObject.isFolder()", "testcase": false, "constructor": false}, {"identifier": "getFileOperations", "parameters": "()", "modifiers": "public", "return": "FileOperations", "signature": "FileOperations getFileOperations()", "full_signature": "public FileOperations getFileOperations()", "class_method_signature": "SolutionRepositoryVfsFileObject.getFileOperations()", "testcase": false, "constructor": false}, {"identifier": "getInputStream", "parameters": "()", "modifiers": "public", "return": "InputStream", "signature": "InputStream getInputStream()", "full_signature": "public InputStream getInputStream()", "class_method_signature": "SolutionRepositoryVfsFileObject.getInputStream()", "testcase": false, "constructor": false}, {"identifier": "getAclHelper", "parameters": "()", "modifiers": "protected synchronized", "return": "IAclNodeHelper", "signature": "IAclNodeHelper getAclHelper()", "full_signature": "protected synchronized IAclNodeHelper getAclHelper()", "class_method_signature": "SolutionRepositoryVfsFileObject.getAclHelper()", "testcase": false, "constructor": false}, {"identifier": "setTestAclHelper", "parameters": "( IAclNodeHelper helper )", "modifiers": "@VisibleForTesting public static", "return": "void", "signature": "void setTestAclHelper( IAclNodeHelper helper )", "full_signature": "@VisibleForTesting public static void setTestAclHelper( IAclNodeHelper helper )", "class_method_signature": "SolutionRepositoryVfsFileObject.setTestAclHelper( IAclNodeHelper helper )", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "( FileObject file )", "modifiers": "@Override public", "return": "int", "signature": "int compareTo( FileObject file )", "full_signature": "@Override public int compareTo( FileObject file )", "class_method_signature": "SolutionRepositoryVfsFileObject.compareTo( FileObject file )", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<FileObject>", "signature": "Iterator<FileObject> iterator()", "full_signature": "@Override public Iterator<FileObject> iterator()", "class_method_signature": "SolutionRepositoryVfsFileObject.iterator()", "testcase": false, "constructor": false}], "file": "repository/src/main/java/org/pentaho/platform/repository/solution/filebased/SolutionRepositoryVfsFileObject.java"}, "focal_method": {"identifier": "getFileRef", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getFileRef() {\n    return fileRef;\n  }", "signature": "String getFileRef()", "full_signature": "public String getFileRef()", "class_method_signature": "SolutionRepositoryVfsFileObject.getFileRef()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4597760, "url": "https://github.com/pentaho/pentaho-platform", "stars": 389, "created": "6/8/2012 1:48:12 PM +00:00", "updates": "2020-01-20T18:27:17+00:00", "fork": "False", "license": "licensed"}}