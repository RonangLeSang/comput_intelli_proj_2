{"test_class": {"identifier": "Base64PasswordServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Base64PasswordService service;", "modifier": "private", "type": "Base64PasswordService", "declarator": "service", "var_name": "service"}, {"original_string": "private String res;", "modifier": "private", "type": "String", "declarator": "res", "var_name": "res"}], "file": "core/src/test/java/org/pentaho/platform/util/Base64PasswordServiceTest.java"}, "test_case": {"identifier": "testEncryptNullPassword", "parameters": "( )", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testEncryptNullPassword( ) throws Exception {\n    res = service.encrypt( null );\n    assertNull( res );\n  }", "signature": "void testEncryptNullPassword( )", "full_signature": "@Test public void testEncryptNullPassword( )", "class_method_signature": "Base64PasswordServiceTest.testEncryptNullPassword( )", "testcase": true, "constructor": false, "invocations": ["encrypt", "assertNull"]}, "focal_class": {"identifier": "Base64PasswordService", "superclass": "", "interfaces": "implements IPasswordService", "fields": [], "methods": [{"identifier": "encrypt", "parameters": "( String password )", "modifiers": "public", "return": "String", "signature": "String encrypt( String password )", "full_signature": "public String encrypt( String password )", "class_method_signature": "Base64PasswordService.encrypt( String password )", "testcase": false, "constructor": false}, {"identifier": "decrypt", "parameters": "( String encryptedPassword )", "modifiers": "public", "return": "String", "signature": "String decrypt( String encryptedPassword )", "full_signature": "public String decrypt( String encryptedPassword )", "class_method_signature": "Base64PasswordService.decrypt( String encryptedPassword )", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/pentaho/platform/util/Base64PasswordService.java"}, "focal_method": {"identifier": "encrypt", "parameters": "( String password )", "modifiers": "public", "return": "String", "body": "public String encrypt( String password ) throws PasswordServiceException {\n    return StringUtil.isEmpty( password ) ? password : new String( Base64.encodeBase64( password.getBytes() ) );\n  }", "signature": "String encrypt( String password )", "full_signature": "public String encrypt( String password )", "class_method_signature": "Base64PasswordService.encrypt( String password )", "testcase": false, "constructor": false, "invocations": ["isEmpty", "encodeBase64", "getBytes"]}, "repository": {"repo_id": 4597760, "url": "https://github.com/pentaho/pentaho-platform", "stars": 389, "created": "6/8/2012 1:48:12 PM +00:00", "updates": "2020-01-20T18:27:17+00:00", "fork": "False", "license": "licensed"}}