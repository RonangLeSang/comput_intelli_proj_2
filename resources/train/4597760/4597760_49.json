{"test_class": {"identifier": "JcrRepositoryFileUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String VERSION_NAME_TEST = \"Version Name Test\";", "modifier": "private static final", "type": "String", "declarator": "VERSION_NAME_TEST = \"Version Name Test\"", "var_name": "VERSION_NAME_TEST"}, {"original_string": "private static final String UNSUPPORTED_REPOSITORY_OPERATION_EXCEPTION_TEST_MESSAGE =\n    \"Unsupported Repository Operation Exception Test Message\";", "modifier": "private static final", "type": "String", "declarator": "UNSUPPORTED_REPOSITORY_OPERATION_EXCEPTION_TEST_MESSAGE =\n    \"Unsupported Repository Operation Exception Test Message\"", "var_name": "UNSUPPORTED_REPOSITORY_OPERATION_EXCEPTION_TEST_MESSAGE"}, {"original_string": "private static final String REPOSITORY_EXCEPTION_TEST_MESSAGE = \"Repository Exception Test Message\";", "modifier": "private static final", "type": "String", "declarator": "REPOSITORY_EXCEPTION_TEST_MESSAGE = \"Repository Exception Test Message\"", "var_name": "REPOSITORY_EXCEPTION_TEST_MESSAGE"}, {"original_string": "private PentahoJcrConstants pJcrConstMock = mock( PentahoJcrConstants.class );", "modifier": "private", "type": "PentahoJcrConstants", "declarator": "pJcrConstMock = mock( PentahoJcrConstants.class )", "var_name": "pJcrConstMock"}, {"original_string": "private Node nodeMock = mock( Node.class );", "modifier": "private", "type": "Node", "declarator": "nodeMock = mock( Node.class )", "var_name": "nodeMock"}, {"original_string": "private VersionManager vmanagerMock = mock( VersionManager.class );", "modifier": "private", "type": "VersionManager", "declarator": "vmanagerMock = mock( VersionManager.class )", "var_name": "vmanagerMock"}, {"original_string": "private Workspace workspaceMock = mock( Workspace.class );", "modifier": "private", "type": "Workspace", "declarator": "workspaceMock = mock( Workspace.class )", "var_name": "workspaceMock"}, {"original_string": "private Session sessionMock = mock( Session.class );", "modifier": "private", "type": "Session", "declarator": "sessionMock = mock( Session.class )", "var_name": "sessionMock"}, {"original_string": "private PentahoSystem pentahoSystemMock = mock( PentahoSystem.class );", "modifier": "private", "type": "PentahoSystem", "declarator": "pentahoSystemMock = mock( PentahoSystem.class )", "var_name": "pentahoSystemMock"}, {"original_string": "private IRepositoryVersionManager repositoryVersionManagerMockTrue = mock( IRepositoryVersionManager.class );", "modifier": "private", "type": "IRepositoryVersionManager", "declarator": "repositoryVersionManagerMockTrue = mock( IRepositoryVersionManager.class )", "var_name": "repositoryVersionManagerMockTrue"}, {"original_string": "private IRepositoryVersionManager repositoryVersionManagerMockFalse = mock( IRepositoryVersionManager.class );", "modifier": "private", "type": "IRepositoryVersionManager", "declarator": "repositoryVersionManagerMockFalse = mock( IRepositoryVersionManager.class )", "var_name": "repositoryVersionManagerMockFalse"}, {"original_string": "@Rule\n  public ExpectedException exception = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "exception = ExpectedException.none()", "var_name": "exception"}], "file": "repository/src/test/java/org/pentaho/platform/repository2/unified/jcr/JcrRepositoryFileUtilsTest.java"}, "test_case": {"identifier": "testCheckNodeForTree", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCheckNodeForTree() throws Exception {\n    List<RepositoryFileTree> children = new ArrayList<>();\n    IPathConversionHelper pathConversionHelper = new DefaultPathConversionHelper();\n    ILockHelper lockHelperMock = mock( ILockHelper.class );\n    IRepositoryAccessVoterManager repositoryAccessVoterManagerMock = mock( IRepositoryAccessVoterManager.class );\n    MutableBoolean foundFiltered = new MutableBoolean();\n    RepositoryFile fileMock = mock( RepositoryFile.class );\n\n    when( fileMock.getId() ).thenReturn( 1 );\n\n    PowerMockito.mockStatic( JcrRepositoryFileUtils.class );\n    PowerMockito.mockStatic( JcrRepositoryFileAclUtils.class );\n\n    PowerMockito.doCallRealMethod().when( JcrRepositoryFileUtils.class, \"checkNodeForTree\", nodeMock,\n      children, sessionMock, pJcrConstMock, pathConversionHelper, \"childNodeFilter\", lockHelperMock, 0, false, repositoryAccessVoterManagerMock, RepositoryRequest.FILES_TYPE_FILTER.FOLDERS, foundFiltered, true, false, \"/\" );\n    when( JcrRepositoryFileUtils.nodeToFile( sessionMock, pJcrConstMock, pathConversionHelper, lockHelperMock, nodeMock ) ).thenReturn( fileMock );\n    when( JcrRepositoryFileUtils.isSupportedNodeType( pJcrConstMock, nodeMock ) ).thenReturn( true );\n    when( JcrRepositoryFileAclUtils.getAcl( sessionMock, pJcrConstMock, 1 ) ).thenThrow( new AccessDeniedException() );\n\n    try {\n      JcrRepositoryFileUtils.checkNodeForTree( nodeMock, children, sessionMock, pJcrConstMock, pathConversionHelper,\n        \"childNodeFilter\", lockHelperMock, 0, false, repositoryAccessVoterManagerMock,\n        RepositoryRequest.FILES_TYPE_FILTER.FOLDERS, foundFiltered, true, false, \"/\" );\n    } catch ( Exception e ) {\n      fail();\n    }\n  }", "signature": "void testCheckNodeForTree()", "full_signature": "@Test public void testCheckNodeForTree()", "class_method_signature": "JcrRepositoryFileUtilsTest.testCheckNodeForTree()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "mock", "thenReturn", "when", "getId", "mockStatic", "mockStatic", "when", "doCallRealMethod", "thenReturn", "when", "nodeToFile", "thenReturn", "when", "isSupportedNodeType", "thenThrow", "when", "getAcl", "checkNodeForTree", "fail"]}, "focal_class": {"identifier": "JcrRepositoryFileUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Log logger = LogFactory.getLog( JcrRepositoryFileUtils.class );", "modifier": "private static final", "type": "Log", "declarator": "logger = LogFactory.getLog( JcrRepositoryFileUtils.class )", "var_name": "logger"}, {"original_string": "private static List<Character> reservedChars =\n      Collections.unmodifiableList( Arrays.asList( new Character[] { '/', '\\\\', '\\t', '\\r', '\\n' } ) );", "modifier": "private static", "type": "List<Character>", "declarator": "reservedChars =\n      Collections.unmodifiableList( Arrays.asList( new Character[] { '/', '\\\\', '\\t', '\\r', '\\n' } ) )", "var_name": "reservedChars"}, {"original_string": "private static IRepositoryVersionManager repositoryVersionManager = null;", "modifier": "private static", "type": "IRepositoryVersionManager", "declarator": "repositoryVersionManager = null", "var_name": "repositoryVersionManager"}, {"original_string": "private static RepositoryFileProxyFactory fileProxyFactory;", "modifier": "private static", "type": "RepositoryFileProxyFactory", "declarator": "fileProxyFactory", "var_name": "fileProxyFactory"}], "methods": [{"identifier": "makePattern", "parameters": "( List<Character> list )", "modifiers": "private static", "return": "Pattern", "signature": "Pattern makePattern( List<Character> list )", "full_signature": "private static Pattern makePattern( List<Character> list )", "class_method_signature": "JcrRepositoryFileUtils.makePattern( List<Character> list )", "testcase": false, "constructor": false}, {"identifier": "getFileById", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable fileId )", "modifiers": "public static", "return": "RepositoryFile", "signature": "RepositoryFile getFileById( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable fileId )", "full_signature": "public static RepositoryFile getFileById( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable fileId )", "class_method_signature": "JcrRepositoryFileUtils.getFileById( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable fileId )", "testcase": false, "constructor": false}, {"identifier": "nodeToFile", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Node node )", "modifiers": "public static", "return": "RepositoryFile", "signature": "RepositoryFile nodeToFile( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Node node )", "full_signature": "public static RepositoryFile nodeToFile( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Node node )", "class_method_signature": "JcrRepositoryFileUtils.nodeToFile( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Node node )", "testcase": false, "constructor": false}, {"identifier": "getRootFolder", "parameters": "( final Session session )", "modifiers": "private static", "return": "RepositoryFile", "signature": "RepositoryFile getRootFolder( final Session session )", "full_signature": "private static RepositoryFile getRootFolder( final Session session )", "class_method_signature": "JcrRepositoryFileUtils.getRootFolder( final Session session )", "testcase": false, "constructor": false}, {"identifier": "nodeToFileOld", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Node node,\n      final boolean loadMaps, IPentahoLocale pentahoLocale )", "modifiers": "public static", "return": "RepositoryFile", "signature": "RepositoryFile nodeToFileOld( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Node node,\n      final boolean loadMaps, IPentahoLocale pentahoLocale )", "full_signature": "public static RepositoryFile nodeToFileOld( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Node node,\n      final boolean loadMaps, IPentahoLocale pentahoLocale )", "class_method_signature": "JcrRepositoryFileUtils.nodeToFileOld( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Node node,\n      final boolean loadMaps, IPentahoLocale pentahoLocale )", "testcase": false, "constructor": false}, {"identifier": "nodeToFile", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Node node,\n      final boolean loadMaps, IPentahoLocale pentahoLocale )", "modifiers": "public static", "return": "RepositoryFile", "signature": "RepositoryFile nodeToFile( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Node node,\n      final boolean loadMaps, IPentahoLocale pentahoLocale )", "full_signature": "public static RepositoryFile nodeToFile( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Node node,\n      final boolean loadMaps, IPentahoLocale pentahoLocale )", "class_method_signature": "JcrRepositoryFileUtils.nodeToFile( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Node node,\n      final boolean loadMaps, IPentahoLocale pentahoLocale )", "testcase": false, "constructor": false}, {"identifier": "getRepositoryFileProxyFactory", "parameters": "()", "modifiers": "private static", "return": "RepositoryFileProxyFactory", "signature": "RepositoryFileProxyFactory getRepositoryFileProxyFactory()", "full_signature": "private static RepositoryFileProxyFactory getRepositoryFileProxyFactory()", "class_method_signature": "JcrRepositoryFileUtils.getRepositoryFileProxyFactory()", "testcase": false, "constructor": false}, {"identifier": "getLocalizedString", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node localizedStringNode, IPentahoLocale pentahoLocale )", "modifiers": "public static", "return": "String", "signature": "String getLocalizedString( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node localizedStringNode, IPentahoLocale pentahoLocale )", "full_signature": "public static String getLocalizedString( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node localizedStringNode, IPentahoLocale pentahoLocale )", "class_method_signature": "JcrRepositoryFileUtils.getLocalizedString( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node localizedStringNode, IPentahoLocale pentahoLocale )", "testcase": false, "constructor": false}, {"identifier": "getLocalePropertiesMap", "parameters": "( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node localesNode )", "modifiers": "public static", "return": "Map<String, Properties>", "signature": "Map<String, Properties> getLocalePropertiesMap( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node localesNode )", "full_signature": "public static Map<String, Properties> getLocalePropertiesMap( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node localesNode )", "class_method_signature": "JcrRepositoryFileUtils.getLocalePropertiesMap( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node localesNode )", "testcase": false, "constructor": false}, {"identifier": "setLocalePropertiesMap", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node localeRootNode, final Map<String, Properties> localePropertiesMap )", "modifiers": "private static", "return": "void", "signature": "void setLocalePropertiesMap( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node localeRootNode, final Map<String, Properties> localePropertiesMap )", "full_signature": "private static void setLocalePropertiesMap( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node localeRootNode, final Map<String, Properties> localePropertiesMap )", "class_method_signature": "JcrRepositoryFileUtils.setLocalePropertiesMap( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node localeRootNode, final Map<String, Properties> localePropertiesMap )", "testcase": false, "constructor": false}, {"identifier": "getLocalizedStringMap", "parameters": "( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node localizedStringNode )", "modifiers": "private static", "return": "Map<String, String>", "signature": "Map<String, String> getLocalizedStringMap( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node localizedStringNode )", "full_signature": "private static Map<String, String> getLocalizedStringMap( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node localizedStringNode )", "class_method_signature": "JcrRepositoryFileUtils.getLocalizedStringMap( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node localizedStringNode )", "testcase": false, "constructor": false}, {"identifier": "setLocalizedStringMap", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node localizedStringNode, final Map<String, String> map )", "modifiers": "private static", "return": "void", "signature": "void setLocalizedStringMap( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node localizedStringNode, final Map<String, String> map )", "full_signature": "private static void setLocalizedStringMap( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node localizedStringNode, final Map<String, String> map )", "class_method_signature": "JcrRepositoryFileUtils.setLocalizedStringMap( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node localizedStringNode, final Map<String, String> map )", "testcase": false, "constructor": false}, {"identifier": "getAbsolutePath", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "modifiers": "public static", "return": "String", "signature": "String getAbsolutePath( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "full_signature": "public static String getAbsolutePath( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "class_method_signature": "JcrRepositoryFileUtils.getAbsolutePath( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "testcase": false, "constructor": false}, {"identifier": "getNodeId", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "modifiers": "public static", "return": "Serializable", "signature": "Serializable getNodeId( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "full_signature": "public static Serializable getNodeId( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "class_method_signature": "JcrRepositoryFileUtils.getNodeId( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "testcase": false, "constructor": false}, {"identifier": "getNodeName", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "modifiers": "public static", "return": "String", "signature": "String getNodeName( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "full_signature": "public static String getNodeName( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "class_method_signature": "JcrRepositoryFileUtils.getNodeName( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "testcase": false, "constructor": false}, {"identifier": "getVersionId", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "modifiers": "public static", "return": "String", "signature": "String getVersionId( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "full_signature": "public static String getVersionId( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "class_method_signature": "JcrRepositoryFileUtils.getVersionId( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "testcase": false, "constructor": false}, {"identifier": "getBaseVersion", "parameters": "( final Session session, final Node node )", "modifiers": "private static", "return": "Version", "signature": "Version getBaseVersion( final Session session, final Node node )", "full_signature": "private static Version getBaseVersion( final Session session, final Node node )", "class_method_signature": "JcrRepositoryFileUtils.getBaseVersion( final Session session, final Node node )", "testcase": false, "constructor": false}, {"identifier": "createFolderNode", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable parentFolderId, final RepositoryFile folder )", "modifiers": "public static", "return": "Node", "signature": "Node createFolderNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable parentFolderId, final RepositoryFile folder )", "full_signature": "public static Node createFolderNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable parentFolderId, final RepositoryFile folder )", "class_method_signature": "JcrRepositoryFileUtils.createFolderNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable parentFolderId, final RepositoryFile folder )", "testcase": false, "constructor": false}, {"identifier": "createFileNode", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable parentFolderId, final RepositoryFile file, final IRepositoryFileData content,\n      final ITransformer<IRepositoryFileData> transformer )", "modifiers": "public static", "return": "Node", "signature": "Node createFileNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable parentFolderId, final RepositoryFile file, final IRepositoryFileData content,\n      final ITransformer<IRepositoryFileData> transformer )", "full_signature": "public static Node createFileNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable parentFolderId, final RepositoryFile file, final IRepositoryFileData content,\n      final ITransformer<IRepositoryFileData> transformer )", "class_method_signature": "JcrRepositoryFileUtils.createFileNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable parentFolderId, final RepositoryFile file, final IRepositoryFileData content,\n      final ITransformer<IRepositoryFileData> transformer )", "testcase": false, "constructor": false}, {"identifier": "preventLostUpdate", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final RepositoryFile file )", "modifiers": "private static", "return": "void", "signature": "void preventLostUpdate( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final RepositoryFile file )", "full_signature": "private static void preventLostUpdate( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final RepositoryFile file )", "class_method_signature": "JcrRepositoryFileUtils.preventLostUpdate( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final RepositoryFile file )", "testcase": false, "constructor": false}, {"identifier": "updateFileNode", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final RepositoryFile file, final IRepositoryFileData content,\n      final ITransformer<IRepositoryFileData> transformer )", "modifiers": "public static", "return": "Node", "signature": "Node updateFileNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final RepositoryFile file, final IRepositoryFileData content,\n      final ITransformer<IRepositoryFileData> transformer )", "full_signature": "public static Node updateFileNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final RepositoryFile file, final IRepositoryFileData content,\n      final ITransformer<IRepositoryFileData> transformer )", "class_method_signature": "JcrRepositoryFileUtils.updateFileNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final RepositoryFile file, final IRepositoryFileData content,\n      final ITransformer<IRepositoryFileData> transformer )", "testcase": false, "constructor": false}, {"identifier": "updateFolderNode", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final RepositoryFile folder )", "modifiers": "public static", "return": "Node", "signature": "Node updateFolderNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final RepositoryFile folder )", "full_signature": "public static Node updateFolderNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final RepositoryFile folder )", "class_method_signature": "JcrRepositoryFileUtils.updateFolderNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final RepositoryFile folder )", "testcase": false, "constructor": false}, {"identifier": "getContent", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final Serializable versionId, final ITransformer<IRepositoryFileData> transformer )", "modifiers": "public static", "return": "IRepositoryFileData", "signature": "IRepositoryFileData getContent( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final Serializable versionId, final ITransformer<IRepositoryFileData> transformer )", "full_signature": "public static IRepositoryFileData getContent( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final Serializable versionId, final ITransformer<IRepositoryFileData> transformer )", "class_method_signature": "JcrRepositoryFileUtils.getContent( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final Serializable versionId, final ITransformer<IRepositoryFileData> transformer )", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper,\n      final RepositoryRequest repositoryRequest )", "modifiers": "public static", "return": "List<RepositoryFile>", "signature": "List<RepositoryFile> getChildren( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper,\n      final RepositoryRequest repositoryRequest )", "full_signature": "public static List<RepositoryFile> getChildren( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper,\n      final RepositoryRequest repositoryRequest )", "class_method_signature": "JcrRepositoryFileUtils.getChildren( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper,\n      final RepositoryRequest repositoryRequest )", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable folderId,\n      final String filter )", "modifiers": "@Deprecated public static", "return": "List<RepositoryFile>", "signature": "List<RepositoryFile> getChildren( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable folderId,\n      final String filter )", "full_signature": "@Deprecated public static List<RepositoryFile> getChildren( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable folderId,\n      final String filter )", "class_method_signature": "JcrRepositoryFileUtils.getChildren( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable folderId,\n      final String filter )", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable folderId,\n      final String filter, Boolean showHiddenFiles )", "modifiers": "@Deprecated public static", "return": "List<RepositoryFile>", "signature": "List<RepositoryFile> getChildren( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable folderId,\n      final String filter, Boolean showHiddenFiles )", "full_signature": "@Deprecated public static List<RepositoryFile> getChildren( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable folderId,\n      final String filter, Boolean showHiddenFiles )", "class_method_signature": "JcrRepositoryFileUtils.getChildren( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable folderId,\n      final String filter, Boolean showHiddenFiles )", "testcase": false, "constructor": false}, {"identifier": "isPentahoFolder", "parameters": "( final PentahoJcrConstants pentahoJcrConstants, final Node node )", "modifiers": "public static", "return": "boolean", "signature": "boolean isPentahoFolder( final PentahoJcrConstants pentahoJcrConstants, final Node node )", "full_signature": "public static boolean isPentahoFolder( final PentahoJcrConstants pentahoJcrConstants, final Node node )", "class_method_signature": "JcrRepositoryFileUtils.isPentahoFolder( final PentahoJcrConstants pentahoJcrConstants, final Node node )", "testcase": false, "constructor": false}, {"identifier": "isPentahoHierarchyNode", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "modifiers": "public static", "return": "boolean", "signature": "boolean isPentahoHierarchyNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "full_signature": "public static boolean isPentahoHierarchyNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "class_method_signature": "JcrRepositoryFileUtils.isPentahoHierarchyNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "testcase": false, "constructor": false}, {"identifier": "isLocked", "parameters": "( final PentahoJcrConstants pentahoJcrConstants, final Node node )", "modifiers": "public static", "return": "boolean", "signature": "boolean isLocked( final PentahoJcrConstants pentahoJcrConstants, final Node node )", "full_signature": "public static boolean isLocked( final PentahoJcrConstants pentahoJcrConstants, final Node node )", "class_method_signature": "JcrRepositoryFileUtils.isLocked( final PentahoJcrConstants pentahoJcrConstants, final Node node )", "testcase": false, "constructor": false}, {"identifier": "isPentahoFile", "parameters": "( final PentahoJcrConstants pentahoJcrConstants, final Node node )", "modifiers": "public static", "return": "boolean", "signature": "boolean isPentahoFile( final PentahoJcrConstants pentahoJcrConstants, final Node node )", "full_signature": "public static boolean isPentahoFile( final PentahoJcrConstants pentahoJcrConstants, final Node node )", "class_method_signature": "JcrRepositoryFileUtils.isPentahoFile( final PentahoJcrConstants pentahoJcrConstants, final Node node )", "testcase": false, "constructor": false}, {"identifier": "isLocalizedString", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "modifiers": "private static", "return": "boolean", "signature": "boolean isLocalizedString( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "full_signature": "private static boolean isLocalizedString( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "class_method_signature": "JcrRepositoryFileUtils.isLocalizedString( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "testcase": false, "constructor": false}, {"identifier": "isVersioned", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "modifiers": "public static", "return": "boolean", "signature": "boolean isVersioned( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "full_signature": "public static boolean isVersioned( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "class_method_signature": "JcrRepositoryFileUtils.isVersioned( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "testcase": false, "constructor": false}, {"identifier": "isSupportedNodeType", "parameters": "( final PentahoJcrConstants pentahoJcrConstants, final Node node )", "modifiers": "public static", "return": "boolean", "signature": "boolean isSupportedNodeType( final PentahoJcrConstants pentahoJcrConstants, final Node node )", "full_signature": "public static boolean isSupportedNodeType( final PentahoJcrConstants pentahoJcrConstants, final Node node )", "class_method_signature": "JcrRepositoryFileUtils.isSupportedNodeType( final PentahoJcrConstants pentahoJcrConstants, final Node node )", "testcase": false, "constructor": false}, {"identifier": "checkoutNearestVersionableFileIfNecessary", "parameters": "( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Serializable fileId )", "modifiers": "public static", "return": "void", "signature": "void checkoutNearestVersionableFileIfNecessary( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Serializable fileId )", "full_signature": "public static void checkoutNearestVersionableFileIfNecessary( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Serializable fileId )", "class_method_signature": "JcrRepositoryFileUtils.checkoutNearestVersionableFileIfNecessary( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Serializable fileId )", "testcase": false, "constructor": false}, {"identifier": "checkoutNearestVersionableNodeIfNecessary", "parameters": "( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node node )", "modifiers": "public static", "return": "void", "signature": "void checkoutNearestVersionableNodeIfNecessary( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node node )", "full_signature": "public static void checkoutNearestVersionableNodeIfNecessary( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node node )", "class_method_signature": "JcrRepositoryFileUtils.checkoutNearestVersionableNodeIfNecessary( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node node )", "testcase": false, "constructor": false}, {"identifier": "checkinNearestVersionableFileIfNecessary", "parameters": "( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Serializable fileId, final String versionMessage )", "modifiers": "public static", "return": "void", "signature": "void checkinNearestVersionableFileIfNecessary( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Serializable fileId, final String versionMessage )", "full_signature": "public static void checkinNearestVersionableFileIfNecessary( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Serializable fileId, final String versionMessage )", "class_method_signature": "JcrRepositoryFileUtils.checkinNearestVersionableFileIfNecessary( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Serializable fileId, final String versionMessage )", "testcase": false, "constructor": false}, {"identifier": "checkinNearestVersionableFileIfNecessary", "parameters": "( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Serializable fileId, final String versionMessage,\n      final Date versionDate, final boolean aclOnlyChange )", "modifiers": "public static", "return": "void", "signature": "void checkinNearestVersionableFileIfNecessary( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Serializable fileId, final String versionMessage,\n      final Date versionDate, final boolean aclOnlyChange )", "full_signature": "public static void checkinNearestVersionableFileIfNecessary( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Serializable fileId, final String versionMessage,\n      final Date versionDate, final boolean aclOnlyChange )", "class_method_signature": "JcrRepositoryFileUtils.checkinNearestVersionableFileIfNecessary( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Serializable fileId, final String versionMessage,\n      final Date versionDate, final boolean aclOnlyChange )", "testcase": false, "constructor": false}, {"identifier": "checkinNearestVersionableNodeIfNecessary", "parameters": "( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node node, final String versionMessage )", "modifiers": "public static", "return": "void", "signature": "void checkinNearestVersionableNodeIfNecessary( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node node, final String versionMessage )", "full_signature": "public static void checkinNearestVersionableNodeIfNecessary( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node node, final String versionMessage )", "class_method_signature": "JcrRepositoryFileUtils.checkinNearestVersionableNodeIfNecessary( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node node, final String versionMessage )", "testcase": false, "constructor": false}, {"identifier": "checkinNearestVersionableNodeIfNecessary", "parameters": "( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node node, final String versionMessage, Date versionDate,\n      final boolean aclOnlyChange )", "modifiers": "public static", "return": "void", "signature": "void checkinNearestVersionableNodeIfNecessary( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node node, final String versionMessage, Date versionDate,\n      final boolean aclOnlyChange )", "full_signature": "public static void checkinNearestVersionableNodeIfNecessary( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node node, final String versionMessage, Date versionDate,\n      final boolean aclOnlyChange )", "class_method_signature": "JcrRepositoryFileUtils.checkinNearestVersionableNodeIfNecessary( final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final Node node, final String versionMessage, Date versionDate,\n      final boolean aclOnlyChange )", "testcase": false, "constructor": false}, {"identifier": "getUsername", "parameters": "()", "modifiers": "private static", "return": "String", "signature": "String getUsername()", "full_signature": "private static String getUsername()", "class_method_signature": "JcrRepositoryFileUtils.getUsername()", "testcase": false, "constructor": false}, {"identifier": "findNearestVersionableNode", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "modifiers": "private static", "return": "Node", "signature": "Node findNearestVersionableNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "full_signature": "private static Node findNearestVersionableNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "class_method_signature": "JcrRepositoryFileUtils.findNearestVersionableNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Node node )", "testcase": false, "constructor": false}, {"identifier": "deleteFile", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final ILockHelper lockTokenHelper )", "modifiers": "public static", "return": "void", "signature": "void deleteFile( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final ILockHelper lockTokenHelper )", "full_signature": "public static void deleteFile( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final ILockHelper lockTokenHelper )", "class_method_signature": "JcrRepositoryFileUtils.deleteFile( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final ILockHelper lockTokenHelper )", "testcase": false, "constructor": false}, {"identifier": "nodeIdToFile", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable fileId )", "modifiers": "public static", "return": "RepositoryFile", "signature": "RepositoryFile nodeIdToFile( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable fileId )", "full_signature": "public static RepositoryFile nodeIdToFile( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable fileId )", "class_method_signature": "JcrRepositoryFileUtils.nodeIdToFile( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable fileId )", "testcase": false, "constructor": false}, {"identifier": "getVersionSummaries", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final boolean includeAclOnlyChanges )", "modifiers": "public static", "return": "Object", "signature": "Object getVersionSummaries( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final boolean includeAclOnlyChanges )", "full_signature": "public static Object getVersionSummaries( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final boolean includeAclOnlyChanges )", "class_method_signature": "JcrRepositoryFileUtils.getVersionSummaries( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final boolean includeAclOnlyChanges )", "testcase": false, "constructor": false}, {"identifier": "toVersionSummary", "parameters": "( final PentahoJcrConstants pentahoJcrConstants,\n      final VersionHistory versionHistory, final Version version )", "modifiers": "private static", "return": "VersionSummary", "signature": "VersionSummary toVersionSummary( final PentahoJcrConstants pentahoJcrConstants,\n      final VersionHistory versionHistory, final Version version )", "full_signature": "private static VersionSummary toVersionSummary( final PentahoJcrConstants pentahoJcrConstants,\n      final VersionHistory versionHistory, final Version version )", "class_method_signature": "JcrRepositoryFileUtils.toVersionSummary( final PentahoJcrConstants pentahoJcrConstants,\n      final VersionHistory versionHistory, final Version version )", "testcase": false, "constructor": false}, {"identifier": "getNodeAtVersion", "parameters": "( final PentahoJcrConstants pentahoJcrConstants, final Version version )", "modifiers": "private static", "return": "Node", "signature": "Node getNodeAtVersion( final PentahoJcrConstants pentahoJcrConstants, final Version version )", "full_signature": "private static Node getNodeAtVersion( final PentahoJcrConstants pentahoJcrConstants, final Version version )", "class_method_signature": "JcrRepositoryFileUtils.getNodeAtVersion( final PentahoJcrConstants pentahoJcrConstants, final Version version )", "testcase": false, "constructor": false}, {"identifier": "getFileAtVersion", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable fileId,\n      final Serializable versionId )", "modifiers": "public static", "return": "RepositoryFile", "signature": "RepositoryFile getFileAtVersion( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable fileId,\n      final Serializable versionId )", "full_signature": "public static RepositoryFile getFileAtVersion( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable fileId,\n      final Serializable versionId )", "class_method_signature": "JcrRepositoryFileUtils.getFileAtVersion( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Serializable fileId,\n      final Serializable versionId )", "testcase": false, "constructor": false}, {"identifier": "getFileContentType", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final Serializable versionId )", "modifiers": "public static", "return": "String", "signature": "String getFileContentType( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final Serializable versionId )", "full_signature": "public static String getFileContentType( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final Serializable versionId )", "class_method_signature": "JcrRepositoryFileUtils.getFileContentType( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final Serializable versionId )", "testcase": false, "constructor": false}, {"identifier": "getParentId", "parameters": "( final Session session, final Serializable fileId )", "modifiers": "public static", "return": "Serializable", "signature": "Serializable getParentId( final Session session, final Serializable fileId )", "full_signature": "public static Serializable getParentId( final Session session, final Serializable fileId )", "class_method_signature": "JcrRepositoryFileUtils.getParentId( final Session session, final Serializable fileId )", "testcase": false, "constructor": false}, {"identifier": "getBaseVersionId", "parameters": "( final Session session, final Serializable fileId )", "modifiers": "public static", "return": "Serializable", "signature": "Serializable getBaseVersionId( final Session session, final Serializable fileId )", "full_signature": "public static Serializable getBaseVersionId( final Session session, final Serializable fileId )", "class_method_signature": "JcrRepositoryFileUtils.getBaseVersionId( final Session session, final Serializable fileId )", "testcase": false, "constructor": false}, {"identifier": "getVersionSummary", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final Serializable versionId )", "modifiers": "public static", "return": "Object", "signature": "Object getVersionSummary( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final Serializable versionId )", "full_signature": "public static Object getVersionSummary( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final Serializable versionId )", "class_method_signature": "JcrRepositoryFileUtils.getVersionSummary( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final Serializable fileId, final Serializable versionId )", "testcase": false, "constructor": false}, {"identifier": "getTree", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final String absPath,\n      final RepositoryRequest repositoryRequest, IRepositoryAccessVoterManager accessVoterManager )", "modifiers": "public static", "return": "RepositoryFileTree", "signature": "RepositoryFileTree getTree( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final String absPath,\n      final RepositoryRequest repositoryRequest, IRepositoryAccessVoterManager accessVoterManager )", "full_signature": "public static RepositoryFileTree getTree( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final String absPath,\n      final RepositoryRequest repositoryRequest, IRepositoryAccessVoterManager accessVoterManager )", "class_method_signature": "JcrRepositoryFileUtils.getTree( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final String absPath,\n      final RepositoryRequest repositoryRequest, IRepositoryAccessVoterManager accessVoterManager )", "testcase": false, "constructor": false}, {"identifier": "getTreeByNode", "parameters": "( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Node fileNode,\n      final int depth, final String childNodeFilter, final boolean showHidden,\n      IRepositoryAccessVoterManager accessVoterManager, RepositoryRequest.FILES_TYPE_FILTER types,\n      MutableBoolean foundFiltered, final boolean includeSystemFolders, final String rootPath )", "modifiers": "private static", "return": "RepositoryFileTree", "signature": "RepositoryFileTree getTreeByNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Node fileNode,\n      final int depth, final String childNodeFilter, final boolean showHidden,\n      IRepositoryAccessVoterManager accessVoterManager, RepositoryRequest.FILES_TYPE_FILTER types,\n      MutableBoolean foundFiltered, final boolean includeSystemFolders, final String rootPath )", "full_signature": "private static RepositoryFileTree getTreeByNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Node fileNode,\n      final int depth, final String childNodeFilter, final boolean showHidden,\n      IRepositoryAccessVoterManager accessVoterManager, RepositoryRequest.FILES_TYPE_FILTER types,\n      MutableBoolean foundFiltered, final boolean includeSystemFolders, final String rootPath )", "class_method_signature": "JcrRepositoryFileUtils.getTreeByNode( final Session session, final PentahoJcrConstants pentahoJcrConstants,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final Node fileNode,\n      final int depth, final String childNodeFilter, final boolean showHidden,\n      IRepositoryAccessVoterManager accessVoterManager, RepositoryRequest.FILES_TYPE_FILTER types,\n      MutableBoolean foundFiltered, final boolean includeSystemFolders, final String rootPath )", "testcase": false, "constructor": false}, {"identifier": "isSystemFolder", "parameters": "( Session session, Node childNode )", "modifiers": "private static", "return": "boolean", "signature": "boolean isSystemFolder( Session session, Node childNode )", "full_signature": "private static boolean isSystemFolder( Session session, Node childNode )", "class_method_signature": "JcrRepositoryFileUtils.isSystemFolder( Session session, Node childNode )", "testcase": false, "constructor": false}, {"identifier": "checkNodeForTree", "parameters": "( final Node childNode, List<RepositoryFileTree> children, final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final IPathConversionHelper pathConversionHelper,\n      final String childNodeFilter, final ILockHelper lockHelper, final int depth, final boolean showHidden,\n      final IRepositoryAccessVoterManager accessVoterManager, RepositoryRequest.FILES_TYPE_FILTER types,\n      MutableBoolean foundFiltered, boolean isRootFiltered, final boolean includeSystemFolders,\n      final String rootPath )", "modifiers": "static", "return": "void", "signature": "void checkNodeForTree( final Node childNode, List<RepositoryFileTree> children, final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final IPathConversionHelper pathConversionHelper,\n      final String childNodeFilter, final ILockHelper lockHelper, final int depth, final boolean showHidden,\n      final IRepositoryAccessVoterManager accessVoterManager, RepositoryRequest.FILES_TYPE_FILTER types,\n      MutableBoolean foundFiltered, boolean isRootFiltered, final boolean includeSystemFolders,\n      final String rootPath )", "full_signature": "static void checkNodeForTree( final Node childNode, List<RepositoryFileTree> children, final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final IPathConversionHelper pathConversionHelper,\n      final String childNodeFilter, final ILockHelper lockHelper, final int depth, final boolean showHidden,\n      final IRepositoryAccessVoterManager accessVoterManager, RepositoryRequest.FILES_TYPE_FILTER types,\n      MutableBoolean foundFiltered, boolean isRootFiltered, final boolean includeSystemFolders,\n      final String rootPath )", "class_method_signature": "JcrRepositoryFileUtils.checkNodeForTree( final Node childNode, List<RepositoryFileTree> children, final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final IPathConversionHelper pathConversionHelper,\n      final String childNodeFilter, final ILockHelper lockHelper, final int depth, final boolean showHidden,\n      final IRepositoryAccessVoterManager accessVoterManager, RepositoryRequest.FILES_TYPE_FILTER types,\n      MutableBoolean foundFiltered, boolean isRootFiltered, final boolean includeSystemFolders,\n      final String rootPath )", "testcase": false, "constructor": false}, {"identifier": "updateFileLocaleProperties", "parameters": "( final Session session, final Serializable fileId, String locale,\n      Properties properties )", "modifiers": "public static", "return": "Node", "signature": "Node updateFileLocaleProperties( final Session session, final Serializable fileId, String locale,\n      Properties properties )", "full_signature": "public static Node updateFileLocaleProperties( final Session session, final Serializable fileId, String locale,\n      Properties properties )", "class_method_signature": "JcrRepositoryFileUtils.updateFileLocaleProperties( final Session session, final Serializable fileId, String locale,\n      Properties properties )", "testcase": false, "constructor": false}, {"identifier": "deleteFileLocaleProperties", "parameters": "( final Session session, final Serializable fileId, String locale )", "modifiers": "public static", "return": "Node", "signature": "Node deleteFileLocaleProperties( final Session session, final Serializable fileId, String locale )", "full_signature": "public static Node deleteFileLocaleProperties( final Session session, final Serializable fileId, String locale )", "class_method_signature": "JcrRepositoryFileUtils.deleteFileLocaleProperties( final Session session, final Serializable fileId, String locale )", "testcase": false, "constructor": false}, {"identifier": "setFileMetadata", "parameters": "( final Session session, final Serializable fileId,\n      Map<String, Serializable> metadataMap )", "modifiers": "public static", "return": "void", "signature": "void setFileMetadata( final Session session, final Serializable fileId,\n      Map<String, Serializable> metadataMap )", "full_signature": "public static void setFileMetadata( final Session session, final Serializable fileId,\n      Map<String, Serializable> metadataMap )", "class_method_signature": "JcrRepositoryFileUtils.setFileMetadata( final Session session, final Serializable fileId,\n      Map<String, Serializable> metadataMap )", "testcase": false, "constructor": false}, {"identifier": "setMetadataItemForFile", "parameters": "( final Session session, final String metadataKey,\n      final Serializable metadataObj, final Node metadataNode )", "modifiers": "private static", "return": "void", "signature": "void setMetadataItemForFile( final Session session, final String metadataKey,\n      final Serializable metadataObj, final Node metadataNode )", "full_signature": "private static void setMetadataItemForFile( final Session session, final String metadataKey,\n      final Serializable metadataObj, final Node metadataNode )", "class_method_signature": "JcrRepositoryFileUtils.setMetadataItemForFile( final Session session, final String metadataKey,\n      final Serializable metadataObj, final Node metadataNode )", "testcase": false, "constructor": false}, {"identifier": "getFileMetadata", "parameters": "( final Session session, final Serializable fileId )", "modifiers": "public static", "return": "Map<String, Serializable>", "signature": "Map<String, Serializable> getFileMetadata( final Session session, final Serializable fileId )", "full_signature": "public static Map<String, Serializable> getFileMetadata( final Session session, final Serializable fileId )", "class_method_signature": "JcrRepositoryFileUtils.getFileMetadata( final Session session, final Serializable fileId )", "testcase": false, "constructor": false}, {"identifier": "getReservedChars", "parameters": "()", "modifiers": "public static", "return": "List<Character>", "signature": "List<Character> getReservedChars()", "full_signature": "public static List<Character> getReservedChars()", "class_method_signature": "JcrRepositoryFileUtils.getReservedChars()", "testcase": false, "constructor": false}, {"identifier": "checkName", "parameters": "( final String name )", "modifiers": "public static", "return": "void", "signature": "void checkName( final String name )", "full_signature": "public static void checkName( final String name )", "class_method_signature": "JcrRepositoryFileUtils.checkName( final String name )", "testcase": false, "constructor": false}, {"identifier": "createFolder", "parameters": "( final Session session,\n      final CredentialsStrategySessionFactory sessionFactory, final RepositoryFile parentFolder,\n      final RepositoryFile folder, final boolean inheritAces, final RepositoryFileSid ownerSid,\n      final IPathConversionHelper pathConversionHelper, final String versionMessage )", "modifiers": "public static", "return": "RepositoryFile", "signature": "RepositoryFile createFolder( final Session session,\n      final CredentialsStrategySessionFactory sessionFactory, final RepositoryFile parentFolder,\n      final RepositoryFile folder, final boolean inheritAces, final RepositoryFileSid ownerSid,\n      final IPathConversionHelper pathConversionHelper, final String versionMessage )", "full_signature": "public static RepositoryFile createFolder( final Session session,\n      final CredentialsStrategySessionFactory sessionFactory, final RepositoryFile parentFolder,\n      final RepositoryFile folder, final boolean inheritAces, final RepositoryFileSid ownerSid,\n      final IPathConversionHelper pathConversionHelper, final String versionMessage )", "class_method_signature": "JcrRepositoryFileUtils.createFolder( final Session session,\n      final CredentialsStrategySessionFactory sessionFactory, final RepositoryFile parentFolder,\n      final RepositoryFile folder, final boolean inheritAces, final RepositoryFileSid ownerSid,\n      final IPathConversionHelper pathConversionHelper, final String versionMessage )", "testcase": false, "constructor": false}, {"identifier": "getFileByAbsolutePath", "parameters": "( final Session session, final String absPath,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final boolean loadMaps,\n      final IPentahoLocale locale )", "modifiers": "public static", "return": "RepositoryFile", "signature": "RepositoryFile getFileByAbsolutePath( final Session session, final String absPath,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final boolean loadMaps,\n      final IPentahoLocale locale )", "full_signature": "public static RepositoryFile getFileByAbsolutePath( final Session session, final String absPath,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final boolean loadMaps,\n      final IPentahoLocale locale )", "class_method_signature": "JcrRepositoryFileUtils.getFileByAbsolutePath( final Session session, final String absPath,\n      final IPathConversionHelper pathConversionHelper, final ILockHelper lockHelper, final boolean loadMaps,\n      final IPentahoLocale locale )", "testcase": false, "constructor": false}, {"identifier": "getRepositoryVersionManager", "parameters": "()", "modifiers": "public static", "return": "IRepositoryVersionManager", "signature": "IRepositoryVersionManager getRepositoryVersionManager()", "full_signature": "public static IRepositoryVersionManager getRepositoryVersionManager()", "class_method_signature": "JcrRepositoryFileUtils.getRepositoryVersionManager()", "testcase": false, "constructor": false}, {"identifier": "setRepositoryVersionManager", "parameters": "( IRepositoryVersionManager repositoryVersionManager )", "modifiers": "public static", "return": "void", "signature": "void setRepositoryVersionManager( IRepositoryVersionManager repositoryVersionManager )", "full_signature": "public static void setRepositoryVersionManager( IRepositoryVersionManager repositoryVersionManager )", "class_method_signature": "JcrRepositoryFileUtils.setRepositoryVersionManager( IRepositoryVersionManager repositoryVersionManager )", "testcase": false, "constructor": false}], "file": "repository/src/main/java/org/pentaho/platform/repository2/unified/jcr/JcrRepositoryFileUtils.java"}, "focal_method": {"identifier": "checkNodeForTree", "parameters": "( final Node childNode, List<RepositoryFileTree> children, final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final IPathConversionHelper pathConversionHelper,\n      final String childNodeFilter, final ILockHelper lockHelper, final int depth, final boolean showHidden,\n      final IRepositoryAccessVoterManager accessVoterManager, RepositoryRequest.FILES_TYPE_FILTER types,\n      MutableBoolean foundFiltered, boolean isRootFiltered, final boolean includeSystemFolders,\n      final String rootPath )", "modifiers": "static", "return": "void", "body": "static void checkNodeForTree( final Node childNode, List<RepositoryFileTree> children, final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final IPathConversionHelper pathConversionHelper,\n      final String childNodeFilter, final ILockHelper lockHelper, final int depth, final boolean showHidden,\n      final IRepositoryAccessVoterManager accessVoterManager, RepositoryRequest.FILES_TYPE_FILTER types,\n      MutableBoolean foundFiltered, boolean isRootFiltered, final boolean includeSystemFolders,\n      final String rootPath ) throws RepositoryException {\n\n    RepositoryFile file = nodeToFile( session, pentahoJcrConstants, pathConversionHelper, lockHelper, childNode );\n    if ( isSupportedNodeType( pentahoJcrConstants, childNode ) ) {\n      RepositoryFileAcl fileAcl;\n      try {\n        fileAcl = JcrRepositoryFileAclUtils.getAcl( session, pentahoJcrConstants, file.getId() );\n      } catch ( AccessDeniedException e ) {\n        return;\n      }\n      if ( accessVoterManager.hasAccess( file, RepositoryFilePermission.READ, fileAcl, PentahoSessionHolder.getSession() ) ) {\n        MutableBoolean foundFilteredAtomic = new MutableBoolean( !isPentahoFolder( pentahoJcrConstants, childNode ) );\n        RepositoryFileTree repositoryFileTree =\n            getTreeByNode( session, pentahoJcrConstants, pathConversionHelper, lockHelper, childNode, depth - 1,\n                childNodeFilter, showHidden, accessVoterManager, types, foundFilteredAtomic, includeSystemFolders, rootPath );\n        if ( repositoryFileTree != null && ( foundFilteredAtomic.booleanValue() || isRootFiltered ) ) {\n          foundFiltered.setValue( true );\n          children.add( repositoryFileTree );\n        }\n      }\n    }\n  }", "signature": "void checkNodeForTree( final Node childNode, List<RepositoryFileTree> children, final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final IPathConversionHelper pathConversionHelper,\n      final String childNodeFilter, final ILockHelper lockHelper, final int depth, final boolean showHidden,\n      final IRepositoryAccessVoterManager accessVoterManager, RepositoryRequest.FILES_TYPE_FILTER types,\n      MutableBoolean foundFiltered, boolean isRootFiltered, final boolean includeSystemFolders,\n      final String rootPath )", "full_signature": "static void checkNodeForTree( final Node childNode, List<RepositoryFileTree> children, final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final IPathConversionHelper pathConversionHelper,\n      final String childNodeFilter, final ILockHelper lockHelper, final int depth, final boolean showHidden,\n      final IRepositoryAccessVoterManager accessVoterManager, RepositoryRequest.FILES_TYPE_FILTER types,\n      MutableBoolean foundFiltered, boolean isRootFiltered, final boolean includeSystemFolders,\n      final String rootPath )", "class_method_signature": "JcrRepositoryFileUtils.checkNodeForTree( final Node childNode, List<RepositoryFileTree> children, final Session session,\n      final PentahoJcrConstants pentahoJcrConstants, final IPathConversionHelper pathConversionHelper,\n      final String childNodeFilter, final ILockHelper lockHelper, final int depth, final boolean showHidden,\n      final IRepositoryAccessVoterManager accessVoterManager, RepositoryRequest.FILES_TYPE_FILTER types,\n      MutableBoolean foundFiltered, boolean isRootFiltered, final boolean includeSystemFolders,\n      final String rootPath )", "testcase": false, "constructor": false, "invocations": ["nodeToFile", "isSupportedNodeType", "getAcl", "getId", "hasAccess", "getSession", "isPentahoFolder", "getTreeByNode", "booleanValue", "setValue", "add"]}, "repository": {"repo_id": 4597760, "url": "https://github.com/pentaho/pentaho-platform", "stars": 389, "created": "6/8/2012 1:48:12 PM +00:00", "updates": "2020-01-20T18:27:17+00:00", "fork": "False", "license": "licensed"}}