{"test_class": {"identifier": "CassandraValidationStatisticsServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ValidationStatisticsReportService cassandraStatisticsService;", "modifier": "@Autowired\n    private", "type": "ValidationStatisticsReportService", "declarator": "cassandraStatisticsService", "var_name": "cassandraStatisticsService"}, {"original_string": "@Autowired\n    private CassandraNodeStatisticsDAO cassandraNodeStatisticsDAO;", "modifier": "@Autowired\n    private", "type": "CassandraNodeStatisticsDAO", "declarator": "cassandraNodeStatisticsDAO", "var_name": "cassandraNodeStatisticsDAO"}, {"original_string": "private final long TASK_ID = 12345;", "modifier": "private final", "type": "long", "declarator": "TASK_ID = 12345", "var_name": "TASK_ID"}], "file": "service/dps/storm/common/src/test/java/eu/europeana/cloud/service/dps/storm/service/cassandra/CassandraValidationStatisticsServiceTest.java"}, "test_case": {"identifier": "getStoredTaskStatisticsReport", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getStoredTaskStatisticsReport() {\n        // given\n        StatisticsReport report = new StatisticsReport(TASK_ID, prepareStats());\n        Mockito.when(cassandraNodeStatisticsDAO.getStatisticsReport(TASK_ID)).thenReturn(report);\n\n        // when\n        StatisticsReport actual = cassandraStatisticsService.getTaskStatisticsReport(TASK_ID);\n\n        // then\n        Mockito.verify(cassandraNodeStatisticsDAO, Mockito.times(0)).storeStatisticsReport(eq(TASK_ID), Mockito.any(StatisticsReport.class));\n        Mockito.verify(cassandraNodeStatisticsDAO, Mockito.times(0)).getNodeStatistics(eq(TASK_ID));\n\n        assertEquals(TASK_ID, actual.getTaskId());\n        assertThat(actual.getNodeStatistics().size(), is(2));\n        assertEquals(report, actual);\n    }", "signature": "void getStoredTaskStatisticsReport()", "full_signature": "@Test public void getStoredTaskStatisticsReport()", "class_method_signature": "CassandraValidationStatisticsServiceTest.getStoredTaskStatisticsReport()", "testcase": true, "constructor": false, "invocations": ["prepareStats", "thenReturn", "when", "getStatisticsReport", "getTaskStatisticsReport", "storeStatisticsReport", "verify", "times", "eq", "any", "getNodeStatistics", "verify", "times", "eq", "assertEquals", "getTaskId", "assertThat", "size", "getNodeStatistics", "is", "assertEquals"]}, "focal_class": {"identifier": "CassandraValidationStatisticsService", "superclass": "", "interfaces": "implements ValidationStatisticsReportService", "fields": [{"original_string": "@Autowired\n    private CassandraNodeStatisticsDAO cassandraNodeStatisticsDAO;", "modifier": "@Autowired\n    private", "type": "CassandraNodeStatisticsDAO", "declarator": "cassandraNodeStatisticsDAO", "var_name": "cassandraNodeStatisticsDAO"}], "methods": [{"identifier": "getTaskStatisticsReport", "parameters": "(long taskId)", "modifiers": "@Override public", "return": "StatisticsReport", "signature": "StatisticsReport getTaskStatisticsReport(long taskId)", "full_signature": "@Override public StatisticsReport getTaskStatisticsReport(long taskId)", "class_method_signature": "CassandraValidationStatisticsService.getTaskStatisticsReport(long taskId)", "testcase": false, "constructor": false}, {"identifier": "getElementReport", "parameters": "(long taskId, String elementPath)", "modifiers": "@Override public", "return": "List<NodeReport>", "signature": "List<NodeReport> getElementReport(long taskId, String elementPath)", "full_signature": "@Override public List<NodeReport> getElementReport(long taskId, String elementPath)", "class_method_signature": "CassandraValidationStatisticsService.getElementReport(long taskId, String elementPath)", "testcase": false, "constructor": false}], "file": "service/dps/storm/common/src/main/java/eu/europeana/cloud/service/dps/storm/service/cassandra/CassandraValidationStatisticsService.java"}, "focal_method": {"identifier": "getTaskStatisticsReport", "parameters": "(long taskId)", "modifiers": "@Override public", "return": "StatisticsReport", "body": "@Override\n    public StatisticsReport getTaskStatisticsReport(long taskId) {\n        StatisticsReport report = cassandraNodeStatisticsDAO.getStatisticsReport(taskId);\n\n        if (report == null) {\n            List<NodeStatistics> nodeStatistics = cassandraNodeStatisticsDAO.getNodeStatistics(taskId);\n            if (nodeStatistics == null || nodeStatistics.isEmpty()) {\n                return null;\n            }\n            report = new StatisticsReport(taskId, nodeStatistics);\n            cassandraNodeStatisticsDAO.storeStatisticsReport(taskId, report);\n        }\n        return report;\n    }", "signature": "StatisticsReport getTaskStatisticsReport(long taskId)", "full_signature": "@Override public StatisticsReport getTaskStatisticsReport(long taskId)", "class_method_signature": "CassandraValidationStatisticsService.getTaskStatisticsReport(long taskId)", "testcase": false, "constructor": false, "invocations": ["getStatisticsReport", "getNodeStatistics", "isEmpty", "storeStatisticsReport"]}, "repository": {"repo_id": 9800160, "url": "https://github.com/europeana/Europeana-Cloud", "stars": 13, "created": "5/1/2013 9:10:46 PM +00:00", "updates": "2020-01-24T10:33:33+00:00", "fork": "False", "license": "licensed"}}