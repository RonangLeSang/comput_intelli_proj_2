{"test_class": {"identifier": "NotificationBoltTest", "superclass": "extends CassandraTestBase", "interfaces": "", "fields": [{"original_string": "public static final String USER_NAME = \"\";", "modifier": "public static final", "type": "String", "declarator": "USER_NAME = \"\"", "var_name": "USER_NAME"}, {"original_string": "public static final String PASSWORD = \"\";", "modifier": "public static final", "type": "String", "declarator": "PASSWORD = \"\"", "var_name": "PASSWORD"}, {"original_string": "public static final String RESOURCE_1 = \"resource1\";", "modifier": "public static final", "type": "String", "declarator": "RESOURCE_1 = \"resource1\"", "var_name": "RESOURCE_1"}, {"original_string": "public static final String RESOURCE_2 = \"resource2\";", "modifier": "public static final", "type": "String", "declarator": "RESOURCE_2 = \"resource2\"", "var_name": "RESOURCE_2"}, {"original_string": "private OutputCollector collector;", "modifier": "private", "type": "OutputCollector", "declarator": "collector", "var_name": "collector"}, {"original_string": "private NotificationBolt testedBolt;", "modifier": "private", "type": "NotificationBolt", "declarator": "testedBolt", "var_name": "testedBolt"}, {"original_string": "private CassandraTaskInfoDAO taskInfoDAO;", "modifier": "private", "type": "CassandraTaskInfoDAO", "declarator": "taskInfoDAO", "var_name": "taskInfoDAO"}, {"original_string": "private CassandraReportService cassandraReportService;", "modifier": "private", "type": "CassandraReportService", "declarator": "cassandraReportService", "var_name": "cassandraReportService"}, {"original_string": "private CassandraSubTaskInfoDAO subtaskDAO;", "modifier": "private", "type": "CassandraSubTaskInfoDAO", "declarator": "subtaskDAO", "var_name": "subtaskDAO"}, {"original_string": "private ProcessedRecordsDAO processedRecordsDAO;", "modifier": "private", "type": "ProcessedRecordsDAO", "declarator": "processedRecordsDAO", "var_name": "processedRecordsDAO"}, {"original_string": "private int resourceCounter=0;", "modifier": "private", "type": "int", "declarator": "resourceCounter=0", "var_name": "resourceCounter"}], "file": "service/dps/storm/common/src/test/java/eu/europeana/cloud/service/dps/storm/NotificationBoltTest.java"}, "test_case": {"identifier": "testUpdateBasicInfoStateWithFinishDateAndInfo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUpdateBasicInfoStateWithFinishDateAndInfo() throws Exception {\n        //given\n        long taskId = 1;\n        int containsElements = 1;\n        int expectedSize = 1;\n        String topologyName = null;\n        TaskState taskState = TaskState.CURRENTLY_PROCESSING;\n        String taskInfo = \"\";\n        Date finishDate = new Date();\n        TaskInfo expectedTaskInfo = createTaskInfo(taskId, containsElements, topologyName, taskState, taskInfo, null, null, finishDate);\n        taskInfoDAO.insert(taskId, topologyName, expectedSize, containsElements, taskState.toString(), taskInfo, null, null, finishDate, 0, null);\n        final Tuple tuple = createTestTuple(NotificationTuple.prepareEndTask(taskId, taskInfo, taskState, finishDate));\n        //when\n        testedBolt.execute(tuple);\n        //then\n        TaskInfo result = taskInfoDAO.findById(taskId).get();\n        assertThat(result, notNullValue());\n        assertThat(result, is(expectedTaskInfo));\n    }", "signature": "void testUpdateBasicInfoStateWithFinishDateAndInfo()", "full_signature": "@Test public void testUpdateBasicInfoStateWithFinishDateAndInfo()", "class_method_signature": "NotificationBoltTest.testUpdateBasicInfoStateWithFinishDateAndInfo()", "testcase": true, "constructor": false, "invocations": ["createTaskInfo", "insert", "toString", "createTestTuple", "prepareEndTask", "execute", "get", "findById", "assertThat", "notNullValue", "assertThat", "is"]}, "focal_class": {"identifier": "NotificationBolt", "superclass": "extends BaseRichBolt", "interfaces": "", "fields": [{"original_string": "protected static final int DEFAULT_RETRIES = 3;", "modifier": "protected static final", "type": "int", "declarator": "DEFAULT_RETRIES = 3", "var_name": "DEFAULT_RETRIES"}, {"original_string": "protected static final int SLEEP_TIME = 5000;", "modifier": "protected static final", "type": "int", "declarator": "SLEEP_TIME = 5000", "var_name": "SLEEP_TIME"}, {"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(NotificationBolt.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(NotificationBolt.class)", "var_name": "LOGGER"}, {"original_string": "private final String hosts;", "modifier": "private final", "type": "String", "declarator": "hosts", "var_name": "hosts"}, {"original_string": "private final int port;", "modifier": "private final", "type": "int", "declarator": "port", "var_name": "port"}, {"original_string": "private final String keyspaceName;", "modifier": "private final", "type": "String", "declarator": "keyspaceName", "var_name": "keyspaceName"}, {"original_string": "private final String userName;", "modifier": "private final", "type": "String", "declarator": "userName", "var_name": "userName"}, {"original_string": "private final String password;", "modifier": "private final", "type": "String", "declarator": "password", "var_name": "password"}, {"original_string": "protected transient OutputCollector outputCollector;", "modifier": "protected transient", "type": "OutputCollector", "declarator": "outputCollector", "var_name": "outputCollector"}, {"original_string": "protected LRUCache<Long, NotificationCache> cache = new LRUCache<>(50);", "modifier": "protected", "type": "LRUCache<Long, NotificationCache>", "declarator": "cache = new LRUCache<>(50)", "var_name": "cache"}, {"original_string": "protected String topologyName;", "modifier": "protected", "type": "String", "declarator": "topologyName", "var_name": "topologyName"}, {"original_string": "protected transient TaskStatusUpdater taskStatusUpdater;", "modifier": "protected transient", "type": "TaskStatusUpdater", "declarator": "taskStatusUpdater", "var_name": "taskStatusUpdater"}, {"original_string": "protected transient ProcessedRecordsDAO processedRecordsDAO;", "modifier": "protected transient", "type": "ProcessedRecordsDAO", "declarator": "processedRecordsDAO", "var_name": "processedRecordsDAO"}, {"original_string": "private transient CassandraTaskInfoDAO taskInfoDAO;", "modifier": "private transient", "type": "CassandraTaskInfoDAO", "declarator": "taskInfoDAO", "var_name": "taskInfoDAO"}, {"original_string": "private transient CassandraSubTaskInfoDAO subTaskInfoDAO;", "modifier": "private transient", "type": "CassandraSubTaskInfoDAO", "declarator": "subTaskInfoDAO", "var_name": "subTaskInfoDAO"}, {"original_string": "private transient CassandraTaskErrorsDAO taskErrorDAO;", "modifier": "private transient", "type": "CassandraTaskErrorsDAO", "declarator": "taskErrorDAO", "var_name": "taskErrorDAO"}], "methods": [{"identifier": "NotificationBolt", "parameters": "(String hosts, int port, String keyspaceName,\n                            String userName, String password)", "modifiers": "public", "return": "", "signature": " NotificationBolt(String hosts, int port, String keyspaceName,\n                            String userName, String password)", "full_signature": "public  NotificationBolt(String hosts, int port, String keyspaceName,\n                            String userName, String password)", "class_method_signature": "NotificationBolt.NotificationBolt(String hosts, int port, String keyspaceName,\n                            String userName, String password)", "testcase": false, "constructor": true}, {"identifier": "prepareDate", "parameters": "(Object dateObject)", "modifiers": "private static", "return": "Date", "signature": "Date prepareDate(Object dateObject)", "full_signature": "private static Date prepareDate(Object dateObject)", "class_method_signature": "NotificationBolt.prepareDate(Object dateObject)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(Tuple tuple)", "modifiers": "@Override public", "return": "void", "signature": "void execute(Tuple tuple)", "full_signature": "@Override public void execute(Tuple tuple)", "class_method_signature": "NotificationBolt.execute(Tuple tuple)", "testcase": false, "constructor": false}, {"identifier": "prepare", "parameters": "(Map stormConf, TopologyContext tc, OutputCollector outputCollector)", "modifiers": "@Override public", "return": "void", "signature": "void prepare(Map stormConf, TopologyContext tc, OutputCollector outputCollector)", "full_signature": "@Override public void prepare(Map stormConf, TopologyContext tc, OutputCollector outputCollector)", "class_method_signature": "NotificationBolt.prepare(Map stormConf, TopologyContext tc, OutputCollector outputCollector)", "testcase": false, "constructor": false}, {"identifier": "declareOutputFields", "parameters": "(OutputFieldsDeclarer ofd)", "modifiers": "@Override public", "return": "void", "signature": "void declareOutputFields(OutputFieldsDeclarer ofd)", "full_signature": "@Override public void declareOutputFields(OutputFieldsDeclarer ofd)", "class_method_signature": "NotificationBolt.declareOutputFields(OutputFieldsDeclarer ofd)", "testcase": false, "constructor": false}, {"identifier": "clearCache", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearCache()", "full_signature": "public void clearCache()", "class_method_signature": "NotificationBolt.clearCache()", "testcase": false, "constructor": false}, {"identifier": "storeTaskDetails", "parameters": "(NotificationTuple notificationTuple, NotificationCache nCache)", "modifiers": "private", "return": "void", "signature": "void storeTaskDetails(NotificationTuple notificationTuple, NotificationCache nCache)", "full_signature": "private void storeTaskDetails(NotificationTuple notificationTuple, NotificationCache nCache)", "class_method_signature": "NotificationBolt.storeTaskDetails(NotificationTuple notificationTuple, NotificationCache nCache)", "testcase": false, "constructor": false}, {"identifier": "storeNotificationInfo", "parameters": "(NotificationTuple notificationTuple, NotificationCache nCache)", "modifiers": "private", "return": "void", "signature": "void storeNotificationInfo(NotificationTuple notificationTuple, NotificationCache nCache)", "full_signature": "private void storeNotificationInfo(NotificationTuple notificationTuple, NotificationCache nCache)", "class_method_signature": "NotificationBolt.storeNotificationInfo(NotificationTuple notificationTuple, NotificationCache nCache)", "testcase": false, "constructor": false}, {"identifier": "notifyTask", "parameters": "(NotificationTuple notificationTuple, NotificationCache nCache, long taskId)", "modifiers": "private", "return": "void", "signature": "void notifyTask(NotificationTuple notificationTuple, NotificationCache nCache, long taskId)", "full_signature": "private void notifyTask(NotificationTuple notificationTuple, NotificationCache nCache, long taskId)", "class_method_signature": "NotificationBolt.notifyTask(NotificationTuple notificationTuple, NotificationCache nCache, long taskId)", "testcase": false, "constructor": false}, {"identifier": "storeNotificationError", "parameters": "(long taskId, NotificationCache nCache, NotificationTuple notificationTuple)", "modifiers": "private", "return": "void", "signature": "void storeNotificationError(long taskId, NotificationCache nCache, NotificationTuple notificationTuple)", "full_signature": "private void storeNotificationError(long taskId, NotificationCache nCache, NotificationTuple notificationTuple)", "class_method_signature": "NotificationBolt.storeNotificationError(long taskId, NotificationCache nCache, NotificationTuple notificationTuple)", "testcase": false, "constructor": false}, {"identifier": "updateErrorCounter", "parameters": "(long taskId, String errorType)", "modifiers": "private", "return": "void", "signature": "void updateErrorCounter(long taskId, String errorType)", "full_signature": "private void updateErrorCounter(long taskId, String errorType)", "class_method_signature": "NotificationBolt.updateErrorCounter(long taskId, String errorType)", "testcase": false, "constructor": false}, {"identifier": "insertError", "parameters": "(long taskId, String errorMessage, String additionalInformation, String errorType, String resource)", "modifiers": "private", "return": "void", "signature": "void insertError(long taskId, String errorMessage, String additionalInformation, String errorType, String resource)", "full_signature": "private void insertError(long taskId, String errorMessage, String additionalInformation, String errorType, String resource)", "class_method_signature": "NotificationBolt.insertError(long taskId, String errorMessage, String additionalInformation, String errorType, String resource)", "testcase": false, "constructor": false}, {"identifier": "isError", "parameters": "(NotificationTuple notificationTuple, NotificationCache nCache)", "modifiers": "private", "return": "boolean", "signature": "boolean isError(NotificationTuple notificationTuple, NotificationCache nCache)", "full_signature": "private boolean isError(NotificationTuple notificationTuple, NotificationCache nCache)", "class_method_signature": "NotificationBolt.isError(NotificationTuple notificationTuple, NotificationCache nCache)", "testcase": false, "constructor": false}, {"identifier": "updateTask", "parameters": "(long taskId, Map<String, Object> parameters)", "modifiers": "private", "return": "void", "signature": "void updateTask(long taskId, Map<String, Object> parameters)", "full_signature": "private void updateTask(long taskId, Map<String, Object> parameters)", "class_method_signature": "NotificationBolt.updateTask(long taskId, Map<String, Object> parameters)", "testcase": false, "constructor": false}, {"identifier": "updateTask", "parameters": "(long taskId, String state, String info, Date startDate)", "modifiers": "private", "return": "void", "signature": "void updateTask(long taskId, String state, String info, Date startDate)", "full_signature": "private void updateTask(long taskId, String state, String info, Date startDate)", "class_method_signature": "NotificationBolt.updateTask(long taskId, String state, String info, Date startDate)", "testcase": false, "constructor": false}, {"identifier": "storeFinishState", "parameters": "(NotificationTuple notificationTuple)", "modifiers": "private", "return": "void", "signature": "void storeFinishState(NotificationTuple notificationTuple)", "full_signature": "private void storeFinishState(NotificationTuple notificationTuple)", "class_method_signature": "NotificationBolt.storeFinishState(NotificationTuple notificationTuple)", "testcase": false, "constructor": false}, {"identifier": "storeNotification", "parameters": "(int resourceNum, long taskId, Map<String, Object> parameters)", "modifiers": "private", "return": "void", "signature": "void storeNotification(int resourceNum, long taskId, Map<String, Object> parameters)", "full_signature": "private void storeNotification(int resourceNum, long taskId, Map<String, Object> parameters)", "class_method_signature": "NotificationBolt.storeNotification(int resourceNum, long taskId, Map<String, Object> parameters)", "testcase": false, "constructor": false}, {"identifier": "waitForSpecificTime", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void waitForSpecificTime()", "full_signature": "protected void waitForSpecificTime()", "class_method_signature": "NotificationBolt.waitForSpecificTime()", "testcase": false, "constructor": false}, {"identifier": "endTask", "parameters": "(NotificationTuple notificationTuple, int errors, int count)", "modifiers": "protected", "return": "void", "signature": "void endTask(NotificationTuple notificationTuple, int errors, int count)", "full_signature": "protected void endTask(NotificationTuple notificationTuple, int errors, int count)", "class_method_signature": "NotificationBolt.endTask(NotificationTuple notificationTuple, int errors, int count)", "testcase": false, "constructor": false}, {"identifier": "insertRecordDetailedInformation", "parameters": "(int resourceNum, long taskId, String resource, String state, String infoText, String additionalInfo, String resultResource)", "modifiers": "protected", "return": "void", "signature": "void insertRecordDetailedInformation(int resourceNum, long taskId, String resource, String state, String infoText, String additionalInfo, String resultResource)", "full_signature": "protected void insertRecordDetailedInformation(int resourceNum, long taskId, String resource, String state, String infoText, String additionalInfo, String resultResource)", "class_method_signature": "NotificationBolt.insertRecordDetailedInformation(int resourceNum, long taskId, String resource, String state, String infoText, String additionalInfo, String resultResource)", "testcase": false, "constructor": false}, {"identifier": "isErrorTuple", "parameters": "(NotificationTuple notificationTuple)", "modifiers": "private", "return": "boolean", "signature": "boolean isErrorTuple(NotificationTuple notificationTuple)", "full_signature": "private boolean isErrorTuple(NotificationTuple notificationTuple)", "class_method_signature": "NotificationBolt.isErrorTuple(NotificationTuple notificationTuple)", "testcase": false, "constructor": false}, {"identifier": "isFinished", "parameters": "(ProcessedRecord record)", "modifiers": "private", "return": "boolean", "signature": "boolean isFinished(ProcessedRecord record)", "full_signature": "private boolean isFinished(ProcessedRecord record)", "class_method_signature": "NotificationBolt.isFinished(ProcessedRecord record)", "testcase": false, "constructor": false}], "file": "service/dps/storm/common/src/main/java/eu/europeana/cloud/service/dps/storm/NotificationBolt.java"}, "focal_method": {"identifier": "execute", "parameters": "(Tuple tuple)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void execute(Tuple tuple) {\n        try {\n            NotificationTuple notificationTuple = NotificationTuple\n                    .fromStormTuple(tuple);\n            NotificationCache nCache = cache.get(notificationTuple.getTaskId());\n            if (nCache == null) {\n                nCache = new NotificationCache(notificationTuple.getTaskId());\n                cache.put(notificationTuple.getTaskId(), nCache);\n            }\n            storeTaskDetails(notificationTuple, nCache);\n\n        } catch (NoHostAvailableException | QueryExecutionException ex) {\n            LOGGER.error(\"Cannot store notification to Cassandra because: {}\", ex.getMessage());\n        } catch (Exception ex) {\n            LOGGER.error(\"Problem with store notification because: {}\", ex.getMessage(), ex);\n        } finally {\n            outputCollector.ack(tuple);\n        }\n    }", "signature": "void execute(Tuple tuple)", "full_signature": "@Override public void execute(Tuple tuple)", "class_method_signature": "NotificationBolt.execute(Tuple tuple)", "testcase": false, "constructor": false, "invocations": ["fromStormTuple", "get", "getTaskId", "getTaskId", "put", "getTaskId", "storeTaskDetails", "error", "getMessage", "error", "getMessage", "ack"]}, "repository": {"repo_id": 9800160, "url": "https://github.com/europeana/Europeana-Cloud", "stars": 13, "created": "5/1/2013 9:10:46 PM +00:00", "updates": "2020-01-24T10:33:33+00:00", "fork": "False", "license": "licensed"}}