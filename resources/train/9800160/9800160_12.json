{"test_class": {"identifier": "FileUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String FOLDER_PATH = \"folder/\";", "modifier": "private static final", "type": "String", "declarator": "FOLDER_PATH = \"folder/\"", "var_name": "FOLDER_PATH"}, {"original_string": "private static final String EXTENSION = \".txt\";", "modifier": "private static final", "type": "String", "declarator": "EXTENSION = \".txt\"", "var_name": "EXTENSION"}, {"original_string": "private static final String FILE_NAME_WITH_EXTENSION = \"FILENAME\" + EXTENSION;", "modifier": "private static final", "type": "String", "declarator": "FILE_NAME_WITH_EXTENSION = \"FILENAME\" + EXTENSION", "var_name": "FILE_NAME_WITH_EXTENSION"}, {"original_string": "private static final String FILE_NAME_WITHOUT_EXTENSION = \"FILENAME\";", "modifier": "private static final", "type": "String", "declarator": "FILE_NAME_WITHOUT_EXTENSION = \"FILENAME\"", "var_name": "FILE_NAME_WITHOUT_EXTENSION"}, {"original_string": "private static final String FILE_PATH = FOLDER_PATH + FILE_NAME_WITH_EXTENSION;", "modifier": "private static final", "type": "String", "declarator": "FILE_PATH = FOLDER_PATH + FILE_NAME_WITH_EXTENSION", "var_name": "FILE_PATH"}, {"original_string": "private final String ZIP_EXTENSION = \"zip\";", "modifier": "private final", "type": "String", "declarator": "ZIP_EXTENSION = \"zip\"", "var_name": "ZIP_EXTENSION"}, {"original_string": "private static final String ECLOUD_SUFFIX = \"ecloud-dataset\";", "modifier": "private static final", "type": "String", "declarator": "ECLOUD_SUFFIX = \"ecloud-dataset\"", "var_name": "ECLOUD_SUFFIX"}], "file": "tools/records-downloader-tool/src/test/java/eu/europeana/cloud/util/FileUtilTest.java"}, "test_case": {"identifier": "shouldCreateTheCorrectFilePath", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldCreateTheCorrectFilePath() throws Exception {\n        String filePath = FileUtil.createFilePath(FOLDER_PATH, FILE_NAME_WITHOUT_EXTENSION, EXTENSION);\n        assertEquals(filePath, FILE_PATH);\n        filePath = FileUtil.createFilePath(FOLDER_PATH, FILE_NAME_WITH_EXTENSION, EXTENSION);\n        assertEquals(filePath, FILE_PATH);\n\n    }", "signature": "void shouldCreateTheCorrectFilePath()", "full_signature": "@Test public void shouldCreateTheCorrectFilePath()", "class_method_signature": "FileUtilTest.shouldCreateTheCorrectFilePath()", "testcase": true, "constructor": false, "invocations": ["createFilePath", "assertEquals", "createFilePath", "assertEquals"]}, "focal_class": {"identifier": "FileUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int BATCH_MAX_SIZE = 1240 * 4;", "modifier": "private static final", "type": "int", "declarator": "BATCH_MAX_SIZE = 1240 * 4", "var_name": "BATCH_MAX_SIZE"}, {"original_string": "private static final String ZIP_FORMAT_EXTENSION = \".zip\";", "modifier": "private static final", "type": "String", "declarator": "ZIP_FORMAT_EXTENSION = \".zip\"", "var_name": "ZIP_FORMAT_EXTENSION"}, {"original_string": "private static final String ECLOUD_SUFFIX = \"ecloud-dataset\";", "modifier": "private static final", "type": "String", "declarator": "ECLOUD_SUFFIX = \"ecloud-dataset\"", "var_name": "ECLOUD_SUFFIX"}], "methods": [{"identifier": "persistStreamToFile", "parameters": "(InputStream inputStream, String folderPath, String fileName, String extension)", "modifiers": "public static", "return": "void", "signature": "void persistStreamToFile(InputStream inputStream, String folderPath, String fileName, String extension)", "full_signature": "public static void persistStreamToFile(InputStream inputStream, String folderPath, String fileName, String extension)", "class_method_signature": "FileUtil.persistStreamToFile(InputStream inputStream, String folderPath, String fileName, String extension)", "testcase": false, "constructor": false}, {"identifier": "createFilePath", "parameters": "(String folderPath, String fileName, String extension)", "modifiers": "public static", "return": "String", "signature": "String createFilePath(String folderPath, String fileName, String extension)", "full_signature": "public static String createFilePath(String folderPath, String fileName, String extension)", "class_method_signature": "FileUtil.createFilePath(String folderPath, String fileName, String extension)", "testcase": false, "constructor": false}, {"identifier": "createFolder", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String createFolder()", "full_signature": "public static String createFolder()", "class_method_signature": "FileUtil.createFolder()", "testcase": false, "constructor": false}, {"identifier": "createZipFolderPath", "parameters": "(Date date)", "modifiers": "public static", "return": "String", "signature": "String createZipFolderPath(Date date)", "full_signature": "public static String createZipFolderPath(Date date)", "class_method_signature": "FileUtil.createZipFolderPath(Date date)", "testcase": false, "constructor": false}, {"identifier": "generateFolderName", "parameters": "(Date date)", "modifiers": "private static", "return": "String", "signature": "String generateFolderName(Date date)", "full_signature": "private static String generateFolderName(Date date)", "class_method_signature": "FileUtil.generateFolderName(Date date)", "testcase": false, "constructor": false}], "file": "tools/records-downloader-tool/src/main/java/eu/europeana/cloud/util/FileUtil.java"}, "focal_method": {"identifier": "createFilePath", "parameters": "(String folderPath, String fileName, String extension)", "modifiers": "public static", "return": "String", "body": "public static String createFilePath(String folderPath, String fileName, String extension) {\n        String filePtah = folderPath + fileName;\n        if (\"\".equals(FilenameUtils.getExtension(fileName)))\n            filePtah = filePtah + extension;\n        return filePtah;\n    }", "signature": "String createFilePath(String folderPath, String fileName, String extension)", "full_signature": "public static String createFilePath(String folderPath, String fileName, String extension)", "class_method_signature": "FileUtil.createFilePath(String folderPath, String fileName, String extension)", "testcase": false, "constructor": false, "invocations": ["equals", "getExtension"]}, "repository": {"repo_id": 9800160, "url": "https://github.com/europeana/Europeana-Cloud", "stars": 13, "created": "5/1/2013 9:10:46 PM +00:00", "updates": "2020-01-24T10:33:33+00:00", "fork": "False", "license": "licensed"}}