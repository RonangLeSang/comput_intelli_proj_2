{"test_class": {"identifier": "CassandraAuthenticationServiceTest", "superclass": "extends CassandraTestBase", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private CassandraAuthenticationService service;", "modifier": "@Autowired\n    private", "type": "CassandraAuthenticationService", "declarator": "service", "var_name": "service"}, {"original_string": "@Autowired\n    private CassandraConnectionProvider provider;", "modifier": "@Autowired\n    private", "type": "CassandraConnectionProvider", "declarator": "provider", "var_name": "provider"}, {"original_string": "@Autowired\n    private CassandraUserDAO dao;", "modifier": "@Autowired\n    private", "type": "CassandraUserDAO", "declarator": "dao", "var_name": "dao"}], "file": "service/aas/authentication/src/test/java/eu/europeana/cloud/service/aas/authentication/CassandraAuthenticationServiceTest.java"}, "test_case": {"identifier": "testUserDoesNotExist", "parameters": "()", "modifiers": "@Test(expected = UserDoesNotExistException.class) public", "return": "void", "body": "@Test(expected = UserDoesNotExistException.class)\n    public void testUserDoesNotExist() throws Exception {\n\tservice.getUser(\"test2\");\n    }", "signature": "void testUserDoesNotExist()", "full_signature": "@Test(expected = UserDoesNotExistException.class) public void testUserDoesNotExist()", "class_method_signature": "CassandraAuthenticationServiceTest.testUserDoesNotExist()", "testcase": true, "constructor": false, "invocations": ["getUser"]}, "focal_class": {"identifier": "CassandraAuthenticationService", "superclass": "", "interfaces": "implements UserDetailsService, AuthenticationService", "fields": [{"original_string": "@Autowired\n    private CassandraUserDAO userDao;", "modifier": "@Autowired\n    private", "type": "CassandraUserDAO", "declarator": "userDao", "var_name": "userDao"}], "methods": [{"identifier": "CassandraAuthenticationService", "parameters": "()", "modifiers": "public", "return": "", "signature": " CassandraAuthenticationService()", "full_signature": "public  CassandraAuthenticationService()", "class_method_signature": "CassandraAuthenticationService.CassandraAuthenticationService()", "testcase": false, "constructor": true}, {"identifier": "CassandraAuthenticationService", "parameters": "(CassandraUserDAO userDao)", "modifiers": "public", "return": "", "signature": " CassandraAuthenticationService(CassandraUserDAO userDao)", "full_signature": "public  CassandraAuthenticationService(CassandraUserDAO userDao)", "class_method_signature": "CassandraAuthenticationService.CassandraAuthenticationService(CassandraUserDAO userDao)", "testcase": false, "constructor": true}, {"identifier": "loadUserByUsername", "parameters": "(final String userName)", "modifiers": "@Override public", "return": "UserDetails", "signature": "UserDetails loadUserByUsername(final String userName)", "full_signature": "@Override public UserDetails loadUserByUsername(final String userName)", "class_method_signature": "CassandraAuthenticationService.loadUserByUsername(final String userName)", "testcase": false, "constructor": false}, {"identifier": "getUser", "parameters": "(String userName)", "modifiers": "@Override public", "return": "User", "signature": "User getUser(String userName)", "full_signature": "@Override public User getUser(String userName)", "class_method_signature": "CassandraAuthenticationService.getUser(String userName)", "testcase": false, "constructor": false}, {"identifier": "createUser", "parameters": "(final User user)", "modifiers": "@Override public", "return": "void", "signature": "void createUser(final User user)", "full_signature": "@Override public void createUser(final User user)", "class_method_signature": "CassandraAuthenticationService.createUser(final User user)", "testcase": false, "constructor": false}, {"identifier": "updateUser", "parameters": "(final User user)", "modifiers": "@Override public", "return": "void", "signature": "void updateUser(final User user)", "full_signature": "@Override public void updateUser(final User user)", "class_method_signature": "CassandraAuthenticationService.updateUser(final User user)", "testcase": false, "constructor": false}, {"identifier": "deleteUser", "parameters": "(final String userName)", "modifiers": "@Override public", "return": "void", "signature": "void deleteUser(final String userName)", "full_signature": "@Override public void deleteUser(final String userName)", "class_method_signature": "CassandraAuthenticationService.deleteUser(final String userName)", "testcase": false, "constructor": false}], "file": "service/aas/authentication/src/main/java/eu/europeana/cloud/service/aas/authentication/CassandraAuthenticationService.java"}, "focal_method": {"identifier": "getUser", "parameters": "(String userName)", "modifiers": "@Override public", "return": "User", "body": "@Override\n    public User getUser(String userName) throws DatabaseConnectionException, UserDoesNotExistException {\n        return userDao.getUser(userName);\n    }", "signature": "User getUser(String userName)", "full_signature": "@Override public User getUser(String userName)", "class_method_signature": "CassandraAuthenticationService.getUser(String userName)", "testcase": false, "constructor": false, "invocations": ["getUser"]}, "repository": {"repo_id": 9800160, "url": "https://github.com/europeana/Europeana-Cloud", "stars": 13, "created": "5/1/2013 9:10:46 PM +00:00", "updates": "2020-01-24T10:33:33+00:00", "fork": "False", "license": "licensed"}}