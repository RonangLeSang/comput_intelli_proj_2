{"test_class": {"identifier": "CustomValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String FIELD_NAME = \"someFieldWithValidator\";", "modifier": "private static final", "type": "String", "declarator": "FIELD_NAME = \"someFieldWithValidator\"", "var_name": "FIELD_NAME"}, {"original_string": "private static final String DEFAULT_MSG = \"qcadooView.validate.field.error.custom\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_MSG = \"qcadooView.validate.field.error.custom\"", "var_name": "DEFAULT_MSG"}, {"original_string": "private static final String CUSTOM_MSG = \"qcadoo.testing.custom.field.error.message\";", "modifier": "private static final", "type": "String", "declarator": "CUSTOM_MSG = \"qcadoo.testing.custom.field.error.message\"", "var_name": "CUSTOM_MSG"}, {"original_string": "private CustomValidator customValidator;", "modifier": "private", "type": "CustomValidator", "declarator": "customValidator", "var_name": "customValidator"}, {"original_string": "@Mock\n    private FieldHookDefinition fieldHookDef;", "modifier": "@Mock\n    private", "type": "FieldHookDefinition", "declarator": "fieldHookDef", "var_name": "fieldHookDef"}, {"original_string": "@Mock\n    private Entity entity;", "modifier": "@Mock\n    private", "type": "Entity", "declarator": "entity", "var_name": "entity"}, {"original_string": "@Mock\n    private DataDefinition dataDefinition;", "modifier": "@Mock\n    private", "type": "DataDefinition", "declarator": "dataDefinition", "var_name": "dataDefinition"}, {"original_string": "@Mock\n    private FieldDefinition fieldDefinition;", "modifier": "@Mock\n    private", "type": "FieldDefinition", "declarator": "fieldDefinition", "var_name": "fieldDefinition"}, {"original_string": "@Mock\n    private Object oldValue, newValue;", "modifier": "@Mock\n    private", "type": "Object", "declarator": "oldValue", "var_name": "oldValue"}], "file": "qcadoo-model/src/test/java/com/qcadoo/model/internal/validators/CustomValidatorTest.java"}, "test_case": {"identifier": "shouldNotAddDefaultMessageIfValidationFailAndThereIsAlreadyMessageAssignedToField", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n    public final void shouldNotAddDefaultMessageIfValidationFailAndThereIsAlreadyMessageAssignedToField() {\n        // given\n        Map<String, ErrorMessage> errors = Maps.newHashMap();\n        errors.put(FIELD_NAME, new ErrorMessage(CUSTOM_MSG));\n        stubFieldHookDef(false, errors);\n\n        // when\n        boolean isValid = customValidator.call(entity, oldValue, newValue);\n\n        // then\n        assertFalse(isValid);\n        verify(fieldHookDef, times(1)).call(entity, oldValue, newValue);\n        ArgumentCaptor<String> argCaptor = ArgumentCaptor.forClass(String.class);\n        verify(entity, times(1)).addError(Mockito.eq(fieldDefinition), argCaptor.capture(), Mockito.<String> anyVararg());\n        assertEquals(CUSTOM_MSG, argCaptor.getValue());\n    }", "signature": "void shouldNotAddDefaultMessageIfValidationFailAndThereIsAlreadyMessageAssignedToField()", "full_signature": "@Test public final void shouldNotAddDefaultMessageIfValidationFailAndThereIsAlreadyMessageAssignedToField()", "class_method_signature": "CustomValidatorTest.shouldNotAddDefaultMessageIfValidationFailAndThereIsAlreadyMessageAssignedToField()", "testcase": true, "constructor": false, "invocations": ["newHashMap", "put", "stubFieldHookDef", "call", "assertFalse", "call", "verify", "times", "forClass", "addError", "verify", "times", "eq", "capture", "anyVararg", "assertEquals", "getValue"]}, "focal_class": {"identifier": "CustomValidator", "superclass": "", "interfaces": "implements FieldHookDefinition, ErrorMessageDefinition", "fields": [{"original_string": "private static final String CUSTOM_ERROR = \"qcadooView.validate.field.error.custom\";", "modifier": "private static final", "type": "String", "declarator": "CUSTOM_ERROR = \"qcadooView.validate.field.error.custom\"", "var_name": "CUSTOM_ERROR"}, {"original_string": "private final FieldHookDefinition fieldHook;", "modifier": "private final", "type": "FieldHookDefinition", "declarator": "fieldHook", "var_name": "fieldHook"}, {"original_string": "private transient Integer hashCode = null;", "modifier": "private transient", "type": "Integer", "declarator": "hashCode = null", "var_name": "hashCode"}, {"original_string": "private String errorMessage = CUSTOM_ERROR;", "modifier": "private", "type": "String", "declarator": "errorMessage = CUSTOM_ERROR", "var_name": "errorMessage"}, {"original_string": "private FieldDefinition fieldDefinition;", "modifier": "private", "type": "FieldDefinition", "declarator": "fieldDefinition", "var_name": "fieldDefinition"}], "methods": [{"identifier": "CustomValidator", "parameters": "(final FieldHookDefinition fieldHook)", "modifiers": "public", "return": "", "signature": " CustomValidator(final FieldHookDefinition fieldHook)", "full_signature": "public  CustomValidator(final FieldHookDefinition fieldHook)", "class_method_signature": "CustomValidator.CustomValidator(final FieldHookDefinition fieldHook)", "testcase": false, "constructor": true}, {"identifier": "initialize", "parameters": "(final DataDefinition dataDefinition, final FieldDefinition fieldDefinition)", "modifiers": "@Override public", "return": "void", "signature": "void initialize(final DataDefinition dataDefinition, final FieldDefinition fieldDefinition)", "full_signature": "@Override public void initialize(final DataDefinition dataDefinition, final FieldDefinition fieldDefinition)", "class_method_signature": "CustomValidator.initialize(final DataDefinition dataDefinition, final FieldDefinition fieldDefinition)", "testcase": false, "constructor": false}, {"identifier": "call", "parameters": "(final Entity entity, final Object oldValue, final Object newValue)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean call(final Entity entity, final Object oldValue, final Object newValue)", "full_signature": "@Override public boolean call(final Entity entity, final Object oldValue, final Object newValue)", "class_method_signature": "CustomValidator.call(final Entity entity, final Object oldValue, final Object newValue)", "testcase": false, "constructor": false}, {"identifier": "setErrorMessage", "parameters": "(final String errorMessage)", "modifiers": "@Override public", "return": "void", "signature": "void setErrorMessage(final String errorMessage)", "full_signature": "@Override public void setErrorMessage(final String errorMessage)", "class_method_signature": "CustomValidator.setErrorMessage(final String errorMessage)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "CustomValidator.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "CustomValidator.equals(final Object obj)", "testcase": false, "constructor": false}], "file": "qcadoo-model/src/main/java/com/qcadoo/model/internal/validators/CustomValidator.java"}, "focal_method": {"identifier": "call", "parameters": "(final Entity entity, final Object oldValue, final Object newValue)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean call(final Entity entity, final Object oldValue, final Object newValue) {\n        if (fieldHook.call(entity, oldValue, newValue)) {\n            return true;\n        }\n        if (entity.getError(fieldDefinition.getName()) == null) {\n            entity.addError(fieldDefinition, errorMessage);\n        }\n        return false;\n    }", "signature": "boolean call(final Entity entity, final Object oldValue, final Object newValue)", "full_signature": "@Override public boolean call(final Entity entity, final Object oldValue, final Object newValue)", "class_method_signature": "CustomValidator.call(final Entity entity, final Object oldValue, final Object newValue)", "testcase": false, "constructor": false, "invocations": ["call", "getError", "getName", "addError"]}, "repository": {"repo_id": 1516026, "url": "https://github.com/qcadoo/qcadoo", "stars": 47, "created": "3/23/2011 12:07:38 PM +00:00", "updates": "2020-01-24T13:11:14+00:00", "fork": "False", "license": "licensed"}}