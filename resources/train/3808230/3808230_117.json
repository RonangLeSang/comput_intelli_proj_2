{"test_class": {"identifier": "TestTextExtractionStage", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TextExtractionStage stage;", "modifier": "private", "type": "TextExtractionStage", "declarator": "stage", "var_name": "stage"}, {"original_string": "private LocalDocument doc;", "modifier": "private", "type": "LocalDocument", "declarator": "doc", "var_name": "doc"}], "file": "stages/processing/tika/src/test/java/com/findwise/hydra/stage/tika/TestTextExtractionStage.java"}, "test_case": {"identifier": "testGetUrlWithInteger", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetUrlWithInteger() {\n\t\tdoc.putContentField(\"url\", new Integer(5));\n\t\tString url = stage.getUrl(doc);\n\t\tString expected = null;\n\t\tif (url != null) {\n\t\t\tfail(\"Failed to read url. Expected: \" + expected + \" Got: \" + url);\n\t\t}\n\t}", "signature": "void testGetUrlWithInteger()", "full_signature": "@Test public void testGetUrlWithInteger()", "class_method_signature": "TestTextExtractionStage.testGetUrlWithInteger()", "testcase": true, "constructor": false, "invocations": ["putContentField", "getUrl", "fail"]}, "focal_class": {"identifier": "TextExtractionStage", "superclass": "extends AbstractProcessStage", "interfaces": "", "fields": [{"original_string": "private static Logger logger = LoggerFactory.getLogger(TextExtractionStage.class);", "modifier": "private static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(TextExtractionStage.class)", "var_name": "logger"}, {"original_string": "@Parameter(description = \"The max size to be fetched. Default: -1 = unlimited\")\n    private long maxSizeInBytes = -1;", "modifier": "@Parameter(description = \"The max size to be fetched. Default: -1 = unlimited\")\n    private", "type": "long", "declarator": "maxSizeInBytes = -1", "var_name": "maxSizeInBytes"}, {"original_string": "@Parameter(required = true, description = \"The prefix to add to the metadata fields when adding them to the content\")\n    private String metadataPrefix;", "modifier": "@Parameter(required = true, description = \"The prefix to add to the metadata fields when adding them to the content\")\n    private", "type": "String", "declarator": "metadataPrefix", "var_name": "metadataPrefix"}, {"original_string": "@Parameter(required = true, description = \"The field name where the extracted content will be stored\")\n    private String contentField;", "modifier": "@Parameter(required = true, description = \"The field name where the extracted content will be stored\")\n    private", "type": "String", "declarator": "contentField", "var_name": "contentField"}, {"original_string": "@Parameter(required = true, description = \"The field where the url can be found\")\n    private String urlField;", "modifier": "@Parameter(required = true, description = \"The field where the url can be found\")\n    private", "type": "String", "declarator": "urlField", "var_name": "urlField"}, {"original_string": "@Parameter(description = \"The field where the file size can be found\")\n    private String fileSizeField;", "modifier": "@Parameter(description = \"The field where the file size can be found\")\n    private", "type": "String", "declarator": "fileSizeField", "var_name": "fileSizeField"}, {"original_string": "@Parameter(description = \"The allowed file formats. Default: null = all\")\n    private List<String> allowedFileFormats = null;", "modifier": "@Parameter(description = \"The allowed file formats. Default: null = all\")\n    private", "type": "List<String>", "declarator": "allowedFileFormats = null", "var_name": "allowedFileFormats"}, {"original_string": "@Parameter(description = \"The field where the file format can be found\")\n    private String fileFormatField;", "modifier": "@Parameter(description = \"The field where the file format can be found\")\n    private", "type": "String", "declarator": "fileFormatField", "var_name": "fileFormatField"}, {"original_string": "private Set<String> lowerCaseAllowedFileFormatsSet = null;", "modifier": "private", "type": "Set<String>", "declarator": "lowerCaseAllowedFileFormatsSet = null", "var_name": "lowerCaseAllowedFileFormatsSet"}], "methods": [{"identifier": "process", "parameters": "(LocalDocument doc)", "modifiers": "@Override public", "return": "void", "signature": "void process(LocalDocument doc)", "full_signature": "@Override public void process(LocalDocument doc)", "class_method_signature": "TextExtractionStage.process(LocalDocument doc)", "testcase": false, "constructor": false}, {"identifier": "okFileFormat", "parameters": "(String fileFormat)", "modifiers": "", "return": "boolean", "signature": "boolean okFileFormat(String fileFormat)", "full_signature": " boolean okFileFormat(String fileFormat)", "class_method_signature": "TextExtractionStage.okFileFormat(String fileFormat)", "testcase": false, "constructor": false}, {"identifier": "getFileFormat", "parameters": "(LocalDocument doc)", "modifiers": "", "return": "String", "signature": "String getFileFormat(LocalDocument doc)", "full_signature": " String getFileFormat(LocalDocument doc)", "class_method_signature": "TextExtractionStage.getFileFormat(LocalDocument doc)", "testcase": false, "constructor": false}, {"identifier": "fileFormatHelper", "parameters": "(Object fileFormatObject, int depth)", "modifiers": "private", "return": "String", "signature": "String fileFormatHelper(Object fileFormatObject, int depth)", "full_signature": "private String fileFormatHelper(Object fileFormatObject, int depth)", "class_method_signature": "TextExtractionStage.fileFormatHelper(Object fileFormatObject, int depth)", "testcase": false, "constructor": false}, {"identifier": "getFileSize", "parameters": "(LocalDocument doc)", "modifiers": "", "return": "long", "signature": "long getFileSize(LocalDocument doc)", "full_signature": " long getFileSize(LocalDocument doc)", "class_method_signature": "TextExtractionStage.getFileSize(LocalDocument doc)", "testcase": false, "constructor": false}, {"identifier": "fileSizeHelper", "parameters": "(Object fileSizeObject, int depth)", "modifiers": "private", "return": "long", "signature": "long fileSizeHelper(Object fileSizeObject, int depth)", "full_signature": "private long fileSizeHelper(Object fileSizeObject, int depth)", "class_method_signature": "TextExtractionStage.fileSizeHelper(Object fileSizeObject, int depth)", "testcase": false, "constructor": false}, {"identifier": "okFileSize", "parameters": "(long size)", "modifiers": "", "return": "boolean", "signature": "boolean okFileSize(long size)", "full_signature": " boolean okFileSize(long size)", "class_method_signature": "TextExtractionStage.okFileSize(long size)", "testcase": false, "constructor": false}, {"identifier": "enrichDocumentWithFileContents", "parameters": "(LocalDocument doc, InputStream stream)", "modifiers": "private", "return": "void", "signature": "void enrichDocumentWithFileContents(LocalDocument doc, InputStream stream)", "full_signature": "private void enrichDocumentWithFileContents(LocalDocument doc, InputStream stream)", "class_method_signature": "TextExtractionStage.enrichDocumentWithFileContents(LocalDocument doc, InputStream stream)", "testcase": false, "constructor": false}, {"identifier": "addTextToDocument", "parameters": "(LocalDocument doc, String textData)", "modifiers": "", "return": "void", "signature": "void addTextToDocument(LocalDocument doc, String textData)", "full_signature": " void addTextToDocument(LocalDocument doc, String textData)", "class_method_signature": "TextExtractionStage.addTextToDocument(LocalDocument doc, String textData)", "testcase": false, "constructor": false}, {"identifier": "addMetadataToDocument", "parameters": "(LocalDocument doc, Map<String, Object> metadata)", "modifiers": "", "return": "void", "signature": "void addMetadataToDocument(LocalDocument doc, Map<String, Object> metadata)", "full_signature": " void addMetadataToDocument(LocalDocument doc, Map<String, Object> metadata)", "class_method_signature": "TextExtractionStage.addMetadataToDocument(LocalDocument doc, Map<String, Object> metadata)", "testcase": false, "constructor": false}, {"identifier": "getStreamFromUrl", "parameters": "(String stringUrl)", "modifiers": "", "return": "InputStream", "signature": "InputStream getStreamFromUrl(String stringUrl)", "full_signature": " InputStream getStreamFromUrl(String stringUrl)", "class_method_signature": "TextExtractionStage.getStreamFromUrl(String stringUrl)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void init()", "full_signature": "@Override public void init()", "class_method_signature": "TextExtractionStage.init()", "testcase": false, "constructor": false}, {"identifier": "setLowerCaseAllowedFileFormats", "parameters": "()", "modifiers": "", "return": "void", "signature": "void setLowerCaseAllowedFileFormats()", "full_signature": " void setLowerCaseAllowedFileFormats()", "class_method_signature": "TextExtractionStage.setLowerCaseAllowedFileFormats()", "testcase": false, "constructor": false}, {"identifier": "getUrl", "parameters": "(LocalDocument doc)", "modifiers": "", "return": "String", "signature": "String getUrl(LocalDocument doc)", "full_signature": " String getUrl(LocalDocument doc)", "class_method_signature": "TextExtractionStage.getUrl(LocalDocument doc)", "testcase": false, "constructor": false}, {"identifier": "setUrlField", "parameters": "(String urlField)", "modifiers": "public", "return": "void", "signature": "void setUrlField(String urlField)", "full_signature": "public void setUrlField(String urlField)", "class_method_signature": "TextExtractionStage.setUrlField(String urlField)", "testcase": false, "constructor": false}, {"identifier": "setContentField", "parameters": "(String contentField)", "modifiers": "public", "return": "void", "signature": "void setContentField(String contentField)", "full_signature": "public void setContentField(String contentField)", "class_method_signature": "TextExtractionStage.setContentField(String contentField)", "testcase": false, "constructor": false}, {"identifier": "getContentField", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getContentField()", "full_signature": "public String getContentField()", "class_method_signature": "TextExtractionStage.getContentField()", "testcase": false, "constructor": false}, {"identifier": "setMetadatPrefix", "parameters": "(String prefix)", "modifiers": "public", "return": "void", "signature": "void setMetadatPrefix(String prefix)", "full_signature": "public void setMetadatPrefix(String prefix)", "class_method_signature": "TextExtractionStage.setMetadatPrefix(String prefix)", "testcase": false, "constructor": false}, {"identifier": "getMetadataPrefix", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMetadataPrefix()", "full_signature": "public String getMetadataPrefix()", "class_method_signature": "TextExtractionStage.getMetadataPrefix()", "testcase": false, "constructor": false}, {"identifier": "getMaxSizeInBytes", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMaxSizeInBytes()", "full_signature": "public long getMaxSizeInBytes()", "class_method_signature": "TextExtractionStage.getMaxSizeInBytes()", "testcase": false, "constructor": false}, {"identifier": "setMaxSizeInBytes", "parameters": "(long size)", "modifiers": "public", "return": "void", "signature": "void setMaxSizeInBytes(long size)", "full_signature": "public void setMaxSizeInBytes(long size)", "class_method_signature": "TextExtractionStage.setMaxSizeInBytes(long size)", "testcase": false, "constructor": false}, {"identifier": "getFileSizeField", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFileSizeField()", "full_signature": "public String getFileSizeField()", "class_method_signature": "TextExtractionStage.getFileSizeField()", "testcase": false, "constructor": false}, {"identifier": "setFileSizeField", "parameters": "(String fileSizeField)", "modifiers": "public", "return": "void", "signature": "void setFileSizeField(String fileSizeField)", "full_signature": "public void setFileSizeField(String fileSizeField)", "class_method_signature": "TextExtractionStage.setFileSizeField(String fileSizeField)", "testcase": false, "constructor": false}, {"identifier": "getFileFormatField", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFileFormatField()", "full_signature": "public String getFileFormatField()", "class_method_signature": "TextExtractionStage.getFileFormatField()", "testcase": false, "constructor": false}, {"identifier": "setFileFormatField", "parameters": "(String fileFormatField)", "modifiers": "public", "return": "void", "signature": "void setFileFormatField(String fileFormatField)", "full_signature": "public void setFileFormatField(String fileFormatField)", "class_method_signature": "TextExtractionStage.setFileFormatField(String fileFormatField)", "testcase": false, "constructor": false}, {"identifier": "getAllowedFileFormats", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getAllowedFileFormats()", "full_signature": "public List<String> getAllowedFileFormats()", "class_method_signature": "TextExtractionStage.getAllowedFileFormats()", "testcase": false, "constructor": false}, {"identifier": "setAllowedFileFormats", "parameters": "(List<String> allowedFileFormats)", "modifiers": "public", "return": "void", "signature": "void setAllowedFileFormats(List<String> allowedFileFormats)", "full_signature": "public void setAllowedFileFormats(List<String> allowedFileFormats)", "class_method_signature": "TextExtractionStage.setAllowedFileFormats(List<String> allowedFileFormats)", "testcase": false, "constructor": false}], "file": "stages/processing/tika/src/main/java/com/findwise/hydra/stage/tika/TextExtractionStage.java"}, "focal_method": {"identifier": "getUrl", "parameters": "(LocalDocument doc)", "modifiers": "", "return": "String", "body": "String getUrl(LocalDocument doc) {\n        Object urlObject = doc.getContentField(urlField);\n\n        if (urlObject == null) {\n            return null;\n        }\n\n        if (urlObject instanceof String) {\n            return (String) urlObject;\n        } else if (urlObject instanceof List<?>) {\n            List<?> urlList = (List<?>) urlObject;\n            if (!urlList.isEmpty()) {\n                if (urlList.get(0) instanceof String) {\n                    return (String) urlList.get(0);\n                } else {\n                    logger.warn(\"List in \" + urlField + \" did not contain Strings. Skipping\");\n                    return null;\n                }\n            } else {\n                logger.warn(\"List was empty. Skipping\");\n            }\n        } else {\n            logger.warn(urlField + \" did not contain String nor List. Skipping\");\n        }\n\n        return null;\n    }", "signature": "String getUrl(LocalDocument doc)", "full_signature": " String getUrl(LocalDocument doc)", "class_method_signature": "TextExtractionStage.getUrl(LocalDocument doc)", "testcase": false, "constructor": false, "invocations": ["getContentField", "isEmpty", "get", "get", "warn", "warn", "warn"]}, "repository": {"repo_id": 3808230, "url": "https://github.com/Findwise/Hydra", "language": "Java", "is_fork": false, "fork_count": 49, "stargazer_count": 83, "size": 6158, "license": "licensed"}}