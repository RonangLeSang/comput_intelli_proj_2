{"test_class": {"identifier": "SecuredControllerTest", "superclass": "extends TestCase", "interfaces": "", "fields": [{"original_string": "private HttpServletRequest request = new MockHttpServletRequest();", "modifier": "private", "type": "HttpServletRequest", "declarator": "request = new MockHttpServletRequest()", "var_name": "request"}, {"original_string": "private HttpServletResponse response = new MockHttpServletResponse();", "modifier": "private", "type": "HttpServletResponse", "declarator": "response = new MockHttpServletResponse()", "var_name": "response"}, {"original_string": "private XmlWebApplicationContext context;", "modifier": "private", "type": "XmlWebApplicationContext", "declarator": "context", "var_name": "context"}, {"original_string": "private MockServletContext msc;", "modifier": "private", "type": "MockServletContext", "declarator": "msc", "var_name": "msc"}, {"original_string": "private SecuredController securedController;", "modifier": "private", "type": "SecuredController", "declarator": "securedController", "var_name": "securedController"}], "file": "web-nutsNbolts/src/test/java/org/intalio/tempo/web/controller/SecuredControllerTest.java"}, "test_case": {"identifier": "testProcessFormSubmissionWithoutUser", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcessFormSubmissionWithoutUser() throws Exception {\n        securedController = (SecuredController) context.getBean(\"tasksController\");\n        ModelAndView mav = securedController.processFormSubmission(request, response, null, null);\n        Assert.assertTrue(mav.getView().toString().contains(Constants.LOGIN_URL));\n    }", "signature": "void testProcessFormSubmissionWithoutUser()", "full_signature": "@Test public void testProcessFormSubmissionWithoutUser()", "class_method_signature": "SecuredControllerTest.testProcessFormSubmissionWithoutUser()", "testcase": true, "constructor": false, "invocations": ["getBean", "processFormSubmission", "assertTrue", "contains", "toString", "getView"]}, "focal_class": {"identifier": "SecuredController", "superclass": "extends UIController", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LogManager.getLogger(SecuredController.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LogManager.getLogger(SecuredController.class)", "var_name": "LOG"}], "methods": [{"identifier": "showForm", "parameters": "(HttpServletRequest request, HttpServletResponse response, BindException errors)", "modifiers": "@Override protected final", "return": "ModelAndView", "signature": "ModelAndView showForm(HttpServletRequest request, HttpServletResponse response, BindException errors)", "full_signature": "@Override protected final ModelAndView showForm(HttpServletRequest request, HttpServletResponse response, BindException errors)", "class_method_signature": "SecuredController.showForm(HttpServletRequest request, HttpServletResponse response, BindException errors)", "testcase": false, "constructor": false}, {"identifier": "processFormSubmission", "parameters": "(HttpServletRequest request, HttpServletResponse response,\n            Object command, BindException errors)", "modifiers": "@Override protected final", "return": "ModelAndView", "signature": "ModelAndView processFormSubmission(HttpServletRequest request, HttpServletResponse response,\n            Object command, BindException errors)", "full_signature": "@Override protected final ModelAndView processFormSubmission(HttpServletRequest request, HttpServletResponse response,\n            Object command, BindException errors)", "class_method_signature": "SecuredController.processFormSubmission(HttpServletRequest request, HttpServletResponse response,\n            Object command, BindException errors)", "testcase": false, "constructor": false}, {"identifier": "securedShowForm", "parameters": "(HttpServletRequest request, HttpServletResponse response,\n            BindException errors)", "modifiers": "protected", "return": "ModelAndView", "signature": "ModelAndView securedShowForm(HttpServletRequest request, HttpServletResponse response,\n            BindException errors)", "full_signature": "protected ModelAndView securedShowForm(HttpServletRequest request, HttpServletResponse response,\n            BindException errors)", "class_method_signature": "SecuredController.securedShowForm(HttpServletRequest request, HttpServletResponse response,\n            BindException errors)", "testcase": false, "constructor": false}, {"identifier": "getCurrentUserName", "parameters": "(HttpServletRequest request)", "modifiers": "public static", "return": "String", "signature": "String getCurrentUserName(HttpServletRequest request)", "full_signature": "public static String getCurrentUserName(HttpServletRequest request)", "class_method_signature": "SecuredController.getCurrentUserName(HttpServletRequest request)", "testcase": false, "constructor": false}], "file": "web-nutsNbolts/src/main/java/org/intalio/tempo/web/controller/SecuredController.java"}, "focal_method": {"identifier": "processFormSubmission", "parameters": "(HttpServletRequest request, HttpServletResponse response,\n            Object command, BindException errors)", "modifiers": "@Override protected final", "return": "ModelAndView", "body": "@Override\n    protected final ModelAndView processFormSubmission(HttpServletRequest request, HttpServletResponse response,\n            Object command, BindException errors) throws Exception {\n        ApplicationState state = getApplicationState(request);\n        User currentUser = state.getCurrentUser();\n        if (currentUser != null) {\n            return super.processFormSubmission(request, response, command, errors);\n        }\n        // save request position \n        state.setPreviousAction(request.getRequestURL().toString());\n        // redirect to login page\n        return Constants.REDIRECTION_TO_LOGIN;\n    }", "signature": "ModelAndView processFormSubmission(HttpServletRequest request, HttpServletResponse response,\n            Object command, BindException errors)", "full_signature": "@Override protected final ModelAndView processFormSubmission(HttpServletRequest request, HttpServletResponse response,\n            Object command, BindException errors)", "class_method_signature": "SecuredController.processFormSubmission(HttpServletRequest request, HttpServletResponse response,\n            Object command, BindException errors)", "testcase": false, "constructor": false, "invocations": ["getApplicationState", "getCurrentUser", "processFormSubmission", "setPreviousAction", "toString", "getRequestURL"]}, "repository": {"repo_id": 135867, "url": "https://github.com/Everteam-Software/security", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 17, "size": 2342, "license": "licensed"}}