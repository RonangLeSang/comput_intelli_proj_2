{"test_class": {"identifier": "AgnosticPolygonPanelTest", "superclass": "", "interfaces": "", "fields": [], "file": "Platform_TreeFramework/src/test/java/net/sf/anathema/platform/tree/display/AgnosticPolygonPanelTest.java"}, "test_case": {"identifier": "centersOnGivenCoordinate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void centersOnGivenCoordinate() throws Exception {\n    DisplayPolygonPanel displayPanel = mock(DisplayPolygonPanel.class);\n    AgnosticPolygonPanel polygonPanel = new AgnosticPolygonPanel(displayPanel);\n    polygonPanel.centerOn(new Coordinate(2, 3));\n    AgnosticTransform expected = new AgnosticTransform();\n    expected.preconcatenate(new Translation(-2, -3));\n    verify(displayPanel).setTransformation(expected);\n  }", "signature": "void centersOnGivenCoordinate()", "full_signature": "@Test public void centersOnGivenCoordinate()", "class_method_signature": "AgnosticPolygonPanelTest.centersOnGivenCoordinate()", "testcase": true, "constructor": false, "invocations": ["mock", "centerOn", "preconcatenate", "setTransformation", "verify"]}, "focal_class": {"identifier": "AgnosticPolygonPanel", "superclass": "", "interfaces": "implements PolygonPanel", "fields": [{"original_string": "private static final double MAX_ZOOM_OUT_SCALE = 0.3d;", "modifier": "private static final", "type": "double", "declarator": "MAX_ZOOM_OUT_SCALE = 0.3d", "var_name": "MAX_ZOOM_OUT_SCALE"}, {"original_string": "private static final double MAX_ZOOM_IN_SCALE = 1.5d;", "modifier": "private static final", "type": "double", "declarator": "MAX_ZOOM_IN_SCALE = 1.5d", "var_name": "MAX_ZOOM_IN_SCALE"}, {"original_string": "private final DisplayPolygonPanel panel;", "modifier": "private final", "type": "DisplayPolygonPanel", "declarator": "panel", "var_name": "panel"}, {"original_string": "private final AgnosticTransform transform = new AgnosticTransform();", "modifier": "private final", "type": "AgnosticTransform", "declarator": "transform = new AgnosticTransform()", "var_name": "transform"}], "methods": [{"identifier": "AgnosticPolygonPanel", "parameters": "(DisplayPolygonPanel polygonPanel)", "modifiers": "public", "return": "", "signature": " AgnosticPolygonPanel(DisplayPolygonPanel polygonPanel)", "full_signature": "public  AgnosticPolygonPanel(DisplayPolygonPanel polygonPanel)", "class_method_signature": "AgnosticPolygonPanel.AgnosticPolygonPanel(DisplayPolygonPanel polygonPanel)", "testcase": false, "constructor": true}, {"identifier": "refresh", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void refresh()", "full_signature": "@Override public void refresh()", "class_method_signature": "AgnosticPolygonPanel.refresh()", "testcase": false, "constructor": false}, {"identifier": "addSpecialControl", "parameters": "()", "modifiers": "@Override public", "return": "SpecialControlTrigger", "signature": "SpecialControlTrigger addSpecialControl()", "full_signature": "@Override public SpecialControlTrigger addSpecialControl()", "class_method_signature": "AgnosticPolygonPanel.addSpecialControl()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(InteractiveGraphicsElement element)", "modifiers": "@Override public", "return": "void", "signature": "void add(InteractiveGraphicsElement element)", "full_signature": "@Override public void add(InteractiveGraphicsElement element)", "class_method_signature": "AgnosticPolygonPanel.add(InteractiveGraphicsElement element)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(GraphicsElement element)", "modifiers": "@Override public", "return": "void", "signature": "void add(GraphicsElement element)", "full_signature": "@Override public void add(GraphicsElement element)", "class_method_signature": "AgnosticPolygonPanel.add(GraphicsElement element)", "testcase": false, "constructor": false}, {"identifier": "scale", "parameters": "(double scale)", "modifiers": "@Override public", "return": "void", "signature": "void scale(double scale)", "full_signature": "@Override public void scale(double scale)", "class_method_signature": "AgnosticPolygonPanel.scale(double scale)", "testcase": false, "constructor": false}, {"identifier": "updateDisplayTransformation", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void updateDisplayTransformation()", "full_signature": "private void updateDisplayTransformation()", "class_method_signature": "AgnosticPolygonPanel.updateDisplayTransformation()", "testcase": false, "constructor": false}, {"identifier": "scaleToPoint", "parameters": "(double scale, Coordinate coordinate)", "modifiers": "@Override public", "return": "void", "signature": "void scaleToPoint(double scale, Coordinate coordinate)", "full_signature": "@Override public void scaleToPoint(double scale, Coordinate coordinate)", "class_method_signature": "AgnosticPolygonPanel.scaleToPoint(double scale, Coordinate coordinate)", "testcase": false, "constructor": false}, {"identifier": "translate", "parameters": "(int x, int y)", "modifiers": "@Override public", "return": "void", "signature": "void translate(int x, int y)", "full_signature": "@Override public void translate(int x, int y)", "class_method_signature": "AgnosticPolygonPanel.translate(int x, int y)", "testcase": false, "constructor": false}, {"identifier": "translateRelativeToScale", "parameters": "(int x, int y)", "modifiers": "@Override public", "return": "void", "signature": "void translateRelativeToScale(int x, int y)", "full_signature": "@Override public void translateRelativeToScale(int x, int y)", "class_method_signature": "AgnosticPolygonPanel.translateRelativeToScale(int x, int y)", "testcase": false, "constructor": false}, {"identifier": "createTranslationRelativeToScale", "parameters": "(int x, int y)", "modifiers": "private", "return": "Translation", "signature": "Translation createTranslationRelativeToScale(int x, int y)", "full_signature": "private Translation createTranslationRelativeToScale(int x, int y)", "class_method_signature": "AgnosticPolygonPanel.createTranslationRelativeToScale(int x, int y)", "testcase": false, "constructor": false}, {"identifier": "resetTransformation", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void resetTransformation()", "full_signature": "@Override public void resetTransformation()", "class_method_signature": "AgnosticPolygonPanel.resetTransformation()", "testcase": false, "constructor": false}, {"identifier": "changeCursor", "parameters": "(Coordinate coordinate)", "modifiers": "@Override public", "return": "void", "signature": "void changeCursor(Coordinate coordinate)", "full_signature": "@Override public void changeCursor(Coordinate coordinate)", "class_method_signature": "AgnosticPolygonPanel.changeCursor(Coordinate coordinate)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "AgnosticPolygonPanel.clear()", "testcase": false, "constructor": false}, {"identifier": "onElementAtPoint", "parameters": "(Coordinate coordinate)", "modifiers": "@Override public", "return": "Executor", "signature": "Executor onElementAtPoint(Coordinate coordinate)", "full_signature": "@Override public Executor onElementAtPoint(Coordinate coordinate)", "class_method_signature": "AgnosticPolygonPanel.onElementAtPoint(Coordinate coordinate)", "testcase": false, "constructor": false}, {"identifier": "centerOn", "parameters": "(Coordinate coordinate)", "modifiers": "@Override public", "return": "void", "signature": "void centerOn(Coordinate coordinate)", "full_signature": "@Override public void centerOn(Coordinate coordinate)", "class_method_signature": "AgnosticPolygonPanel.centerOn(Coordinate coordinate)", "testcase": false, "constructor": false}, {"identifier": "addMousePressListener", "parameters": "(final MousePressClosure listener)", "modifiers": "@Override public", "return": "void", "signature": "void addMousePressListener(final MousePressClosure listener)", "full_signature": "@Override public void addMousePressListener(final MousePressClosure listener)", "class_method_signature": "AgnosticPolygonPanel.addMousePressListener(final MousePressClosure listener)", "testcase": false, "constructor": false}, {"identifier": "addMouseClickListener", "parameters": "(final MouseClickClosure listener)", "modifiers": "@Override public", "return": "void", "signature": "void addMouseClickListener(final MouseClickClosure listener)", "full_signature": "@Override public void addMouseClickListener(final MouseClickClosure listener)", "class_method_signature": "AgnosticPolygonPanel.addMouseClickListener(final MouseClickClosure listener)", "testcase": false, "constructor": false}, {"identifier": "addMouseWheelListener", "parameters": "(final MouseWheelClosure listener)", "modifiers": "@Override public", "return": "void", "signature": "void addMouseWheelListener(final MouseWheelClosure listener)", "full_signature": "@Override public void addMouseWheelListener(final MouseWheelClosure listener)", "class_method_signature": "AgnosticPolygonPanel.addMouseWheelListener(final MouseWheelClosure listener)", "testcase": false, "constructor": false}, {"identifier": "setToolTipText", "parameters": "(String toolTip)", "modifiers": "@Override public", "return": "void", "signature": "void setToolTipText(String toolTip)", "full_signature": "@Override public void setToolTipText(String toolTip)", "class_method_signature": "AgnosticPolygonPanel.setToolTipText(String toolTip)", "testcase": false, "constructor": false}, {"identifier": "addMouseMotionListener", "parameters": "(final MouseMotionClosure listener)", "modifiers": "@Override public", "return": "void", "signature": "void addMouseMotionListener(final MouseMotionClosure listener)", "full_signature": "@Override public void addMouseMotionListener(final MouseMotionClosure listener)", "class_method_signature": "AgnosticPolygonPanel.addMouseMotionListener(final MouseMotionClosure listener)", "testcase": false, "constructor": false}, {"identifier": "setBackground", "parameters": "(RGBColor color)", "modifiers": "@Override public", "return": "void", "signature": "void setBackground(RGBColor color)", "full_signature": "@Override public void setBackground(RGBColor color)", "class_method_signature": "AgnosticPolygonPanel.setBackground(RGBColor color)", "testcase": false, "constructor": false}, {"identifier": "showMoveCursor", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void showMoveCursor()", "full_signature": "@Override public void showMoveCursor()", "class_method_signature": "AgnosticPolygonPanel.showMoveCursor()", "testcase": false, "constructor": false}, {"identifier": "createToolTip", "parameters": "()", "modifiers": "@Override public", "return": "StatefulTooltip", "signature": "StatefulTooltip createToolTip()", "full_signature": "@Override public StatefulTooltip createToolTip()", "class_method_signature": "AgnosticPolygonPanel.createToolTip()", "testcase": false, "constructor": false}, {"identifier": "executeScaleIfBoundsAreNotBroken", "parameters": "(TransformOperation... operations)", "modifiers": "private", "return": "void", "signature": "void executeScaleIfBoundsAreNotBroken(TransformOperation... operations)", "full_signature": "private void executeScaleIfBoundsAreNotBroken(TransformOperation... operations)", "class_method_signature": "AgnosticPolygonPanel.executeScaleIfBoundsAreNotBroken(TransformOperation... operations)", "testcase": false, "constructor": false}], "file": "Platform_TreeFramework/src/main/java/net/sf/anathema/platform/tree/display/AgnosticPolygonPanel.java"}, "focal_method": {"identifier": "centerOn", "parameters": "(Coordinate coordinate)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void centerOn(Coordinate coordinate) {\n    int xCenter = panel.getWidth() / 2;\n    int yCenter = panel.getHeight() / 2;\n    int newCenterX = xCenter - coordinate.x;\n    int newCenterY = yCenter - coordinate.y;\n    transform.preconcatenate(new Translation(newCenterX, newCenterY));\n    updateDisplayTransformation();\n  }", "signature": "void centerOn(Coordinate coordinate)", "full_signature": "@Override public void centerOn(Coordinate coordinate)", "class_method_signature": "AgnosticPolygonPanel.centerOn(Coordinate coordinate)", "testcase": false, "constructor": false, "invocations": ["getWidth", "getHeight", "preconcatenate", "updateDisplayTransformation"]}, "repository": {"repo_id": 2364987, "url": "https://github.com/anathema/anathema_legacy", "language": "Java", "is_fork": false, "fork_count": 71, "stargazer_count": 67, "size": 284668, "license": "licensed"}}