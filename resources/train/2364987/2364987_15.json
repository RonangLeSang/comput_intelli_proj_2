{"test_class": {"identifier": "ItemToPtoTransformerTest", "superclass": "", "interfaces": "", "fields": [], "file": "Character_Equipment/src/test/java/net/sf/anathema/hero/equipment/persister/ItemToPtoTransformerTest.java"}, "test_case": {"identifier": "savesPrintStats", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void savesPrintStats() throws Exception {\n    DummyEquipmentItem item = new DummyEquipmentItem(\"Title\", \"Description\");\n    IEquipmentStats stats = createStats(\"Stat\");\n    EquipmentModel model = createEquipmentModel(item, stats);\n    ItemToPtoTransformer transformer = new ItemToPtoTransformer(model);\n    item.addEquipment(stats);\n    item.setPrintEnabled(stats, true);\n    EquipmentPto pto = transformer.createPto(item);\n    EquipmentStatsPto expected = new EquipmentStatsPto();\n    expected.id = \"Stat\";\n    assertThat(pto.printStats, contains(expected));\n  }", "signature": "void savesPrintStats()", "full_signature": "@Test public void savesPrintStats()", "class_method_signature": "ItemToPtoTransformerTest.savesPrintStats()", "testcase": true, "constructor": false, "invocations": ["createStats", "createEquipmentModel", "addEquipment", "setPrintEnabled", "createPto", "assertThat", "contains"]}, "focal_class": {"identifier": "ItemToPtoTransformer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EquipmentModel heroModel;", "modifier": "private", "type": "EquipmentModel", "declarator": "heroModel", "var_name": "heroModel"}], "methods": [{"identifier": "ItemToPtoTransformer", "parameters": "(EquipmentModel heroModel)", "modifiers": "public", "return": "", "signature": " ItemToPtoTransformer(EquipmentModel heroModel)", "full_signature": "public  ItemToPtoTransformer(EquipmentModel heroModel)", "class_method_signature": "ItemToPtoTransformer.ItemToPtoTransformer(EquipmentModel heroModel)", "testcase": false, "constructor": true}, {"identifier": "createPto", "parameters": "(IEquipmentItem item)", "modifiers": "public", "return": "EquipmentPto", "signature": "EquipmentPto createPto(IEquipmentItem item)", "full_signature": "public EquipmentPto createPto(IEquipmentItem item)", "class_method_signature": "ItemToPtoTransformer.createPto(IEquipmentItem item)", "testcase": false, "constructor": false}, {"identifier": "createStatsPto", "parameters": "(IEquipmentItem item, IEquipmentStats stats)", "modifiers": "private", "return": "EquipmentStatsPto", "signature": "EquipmentStatsPto createStatsPto(IEquipmentItem item, IEquipmentStats stats)", "full_signature": "private EquipmentStatsPto createStatsPto(IEquipmentItem item, IEquipmentStats stats)", "class_method_signature": "ItemToPtoTransformer.createStatsPto(IEquipmentItem item, IEquipmentStats stats)", "testcase": false, "constructor": false}], "file": "Character_Equipment/src/main/java/net/sf/anathema/hero/equipment/persister/ItemToPtoTransformer.java"}, "focal_method": {"identifier": "createPto", "parameters": "(IEquipmentItem item)", "modifiers": "public", "return": "EquipmentPto", "body": "public EquipmentPto createPto(IEquipmentItem item) {\n    EquipmentPto pto = new EquipmentPto();\n    pto.templateId = item.getTemplateId();\n    pto.customTitle = item.getTitle();\n    if (!item.getBaseDescription().equals(item.getDescription())) {\n      pto.description = item.getDescription();\n    }\n    if (item.getMaterialComposition() == MaterialComposition.Variable) {\n      pto.material = item.getMaterial().name();\n    }\n    for (IEquipmentStats stats : item.getStats()) {\n      if (item.isPrintEnabled(stats)) {\n        EquipmentStatsPto printPto = createStatsPto(item, stats);\n        pto.printStats.add(printPto);\n      }\n    }\n    return pto;\n  }", "signature": "EquipmentPto createPto(IEquipmentItem item)", "full_signature": "public EquipmentPto createPto(IEquipmentItem item)", "class_method_signature": "ItemToPtoTransformer.createPto(IEquipmentItem item)", "testcase": false, "constructor": false, "invocations": ["getTemplateId", "getTitle", "equals", "getBaseDescription", "getDescription", "getDescription", "getMaterialComposition", "name", "getMaterial", "getStats", "isPrintEnabled", "createStatsPto", "add"]}, "repository": {"repo_id": 2364987, "url": "https://github.com/anathema/anathema_legacy", "language": "Java", "is_fork": false, "fork_count": 71, "stargazer_count": 67, "size": 284668, "license": "licensed"}}