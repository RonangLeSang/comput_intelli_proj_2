{"test_class": {"identifier": "UserProfileHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "webapp/portlet/src/test/java/org/exoplatform/social/user/portlet/UserProfileHelperTest.java"}, "test_case": {"identifier": "shouldSortExperiencesWithCurrentExperienceFirst", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldSortExperiencesWithCurrentExperienceFirst() throws Exception {\n        // Given\n        Profile profile = new Profile(new Identity(\"john\"));\n        List<Map<String, String>> experiences = new ArrayList<>();\n        Map<String, String> experience1 = new HashMap<>();\n        experience1.put(Profile.EXPERIENCES_ID, \"1\");\n        experience1.put(Profile.EXPERIENCES_COMPANY, \"Google\");\n        experience1.put(Profile.EXPERIENCES_POSITION, \"Developer\");\n        experience1.put(Profile.EXPERIENCES_IS_CURRENT, \"true\");\n        experience1.put(Profile.EXPERIENCES_START_DATE,\"01/09/2001\");\n        experiences.add(experience1);\n        Map<String, String> experience2 = new HashMap<>();\n        experience2.put(Profile.EXPERIENCES_ID, \"2\");\n        experience2.put(Profile.EXPERIENCES_COMPANY, \"eXo\");\n        experience2.put(Profile.EXPERIENCES_POSITION, \"Developer\");\n        experience2.put(Profile.EXPERIENCES_IS_CURRENT, \"false\");\n        experience2.put(Profile.EXPERIENCES_START_DATE,\"01/09/2003\");\n        experience2.put(Profile.EXPERIENCES_END_DATE,\"01/09/2004\");\n        experiences.add(experience2);\n        Map<String, String> experience3 = new HashMap<>();\n        experience3.put(Profile.EXPERIENCES_ID, \"3\");\n        experience3.put(Profile.EXPERIENCES_COMPANY, \"Apple\");\n        experience3.put(Profile.EXPERIENCES_POSITION, \"Developer\");\n        experience3.put(Profile.EXPERIENCES_IS_CURRENT, \"true\");\n        experience3.put(Profile.EXPERIENCES_START_DATE,\"01/09/2007\");\n        experiences.add(experience3);\n        Map<String, String> experience4 = new HashMap<>();\n        experience4.put(Profile.EXPERIENCES_ID, \"4\");\n        experience4.put(Profile.EXPERIENCES_COMPANY, \"Youtube\");\n        experience4.put(Profile.EXPERIENCES_POSITION, \"Developer\");\n        experience4.put(Profile.EXPERIENCES_IS_CURRENT, \"false\");\n        experience4.put(Profile.EXPERIENCES_START_DATE,\"01/09/2005\");\n        experience4.put(Profile.EXPERIENCES_END_DATE,\"01/12/2006\");\n        experiences.add(experience4);\n        profile.setProperty(Profile.EXPERIENCES, experiences);\n\n        // When\n        List<Map<String, String>> displayExperiences = UserProfileHelper.getSortedExperiences(profile);\n\n        // Then\n        assertNotNull(displayExperiences);\n        assertEquals(4, displayExperiences.size());\n        // The current experience must be the first one\n        assertEquals(\"3\", displayExperiences.get(0).get(Profile.EXPERIENCES_ID));\n        assertEquals(\"1\", displayExperiences.get(1).get(Profile.EXPERIENCES_ID));\n        assertEquals(\"4\", displayExperiences.get(2).get(Profile.EXPERIENCES_ID));\n        assertEquals(\"2\", displayExperiences.get(3).get(Profile.EXPERIENCES_ID));\n    }", "signature": "void shouldSortExperiencesWithCurrentExperienceFirst()", "full_signature": "@Test public void shouldSortExperiencesWithCurrentExperienceFirst()", "class_method_signature": "UserProfileHelperTest.shouldSortExperiencesWithCurrentExperienceFirst()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "put", "put", "add", "put", "put", "put", "put", "put", "put", "add", "put", "put", "put", "put", "put", "add", "put", "put", "put", "put", "put", "put", "add", "setProperty", "getSortedExperiences", "assertNotNull", "assertEquals", "size", "assertEquals", "get", "get", "assertEquals", "get", "get", "assertEquals", "get", "get", "assertEquals", "get", "get"]}, "focal_class": {"identifier": "UserProfileHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String CSS_ICON_PREFIX = \"uiIconSoc\";", "modifier": "public static final", "type": "String", "declarator": "CSS_ICON_PREFIX = \"uiIconSoc\"", "var_name": "CSS_ICON_PREFIX"}, {"original_string": "final public static String KEY = \"key\";", "modifier": "final public static", "type": "String", "declarator": "KEY = \"key\"", "var_name": "KEY"}, {"original_string": "final public static String VALUE = \"value\";", "modifier": "final public static", "type": "String", "declarator": "VALUE = \"value\"", "var_name": "VALUE"}, {"original_string": "final public static String URL_KEY = \"url\";", "modifier": "final public static", "type": "String", "declarator": "URL_KEY = \"url\"", "var_name": "URL_KEY"}, {"original_string": "final public static String OTHER_KEY = \"other\";", "modifier": "final public static", "type": "String", "declarator": "OTHER_KEY = \"other\"", "var_name": "OTHER_KEY"}, {"original_string": "final public static String DEFAULT_PROTOCOL = \"http://\";", "modifier": "final public static", "type": "String", "declarator": "DEFAULT_PROTOCOL = \"http://\"", "var_name": "DEFAULT_PROTOCOL"}, {"original_string": "final public static DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern(\"MM/dd/yyyy\");", "modifier": "final public static", "type": "DateTimeFormatter", "declarator": "DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern(\"MM/dd/yyyy\")", "var_name": "DATE_TIME_FORMATTER"}], "methods": [{"identifier": "getDisplayProfileInfo", "parameters": "(Profile currentProfile)", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> getDisplayProfileInfo(Profile currentProfile)", "full_signature": "public static Map<String, Object> getDisplayProfileInfo(Profile currentProfile)", "class_method_signature": "UserProfileHelper.getDisplayProfileInfo(Profile currentProfile)", "testcase": false, "constructor": false}, {"identifier": "getSortedExperiences", "parameters": "(Profile currentProfile)", "modifiers": "public static", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> getSortedExperiences(Profile currentProfile)", "full_signature": "public static List<Map<String, String>> getSortedExperiences(Profile currentProfile)", "class_method_signature": "UserProfileHelper.getSortedExperiences(Profile currentProfile)", "testcase": false, "constructor": false}, {"identifier": "getMultiValues", "parameters": "(Profile currentProfile, String key)", "modifiers": "public static", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> getMultiValues(Profile currentProfile, String key)", "full_signature": "public static List<Map<String, String>> getMultiValues(Profile currentProfile, String key)", "class_method_signature": "UserProfileHelper.getMultiValues(Profile currentProfile, String key)", "testcase": false, "constructor": false}, {"identifier": "getURLValues", "parameters": "(Profile currentProfile)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getURLValues(Profile currentProfile)", "full_signature": "public static List<String> getURLValues(Profile currentProfile)", "class_method_signature": "UserProfileHelper.getURLValues(Profile currentProfile)", "testcase": false, "constructor": false}, {"identifier": "isString", "parameters": "(Object s)", "modifiers": "public static", "return": "boolean", "signature": "boolean isString(Object s)", "full_signature": "public static boolean isString(Object s)", "class_method_signature": "UserProfileHelper.isString(Object s)", "testcase": false, "constructor": false}, {"identifier": "isURL", "parameters": "(String key)", "modifiers": "public static", "return": "boolean", "signature": "boolean isURL(String key)", "full_signature": "public static boolean isURL(String key)", "class_method_signature": "UserProfileHelper.isURL(String key)", "testcase": false, "constructor": false}, {"identifier": "toAbsoluteURL", "parameters": "(String url)", "modifiers": "public static", "return": "String", "signature": "String toAbsoluteURL(String url)", "full_signature": "public static String toAbsoluteURL(String url)", "class_method_signature": "UserProfileHelper.toAbsoluteURL(String url)", "testcase": false, "constructor": false}, {"identifier": "isIMs", "parameters": "(String key)", "modifiers": "public static", "return": "boolean", "signature": "boolean isIMs(String key)", "full_signature": "public static boolean isIMs(String key)", "class_method_signature": "UserProfileHelper.isIMs(String key)", "testcase": false, "constructor": false}, {"identifier": "isGender", "parameters": "(String key)", "modifiers": "public static", "return": "boolean", "signature": "boolean isGender(String key)", "full_signature": "public static boolean isGender(String key)", "class_method_signature": "UserProfileHelper.isGender(String key)", "testcase": false, "constructor": false}, {"identifier": "getIconCss", "parameters": "(String key)", "modifiers": "public static", "return": "String", "signature": "String getIconCss(String key)", "full_signature": "public static String getIconCss(String key)", "class_method_signature": "UserProfileHelper.getIconCss(String key)", "testcase": false, "constructor": false}, {"identifier": "escapeExperience", "parameters": "(Map<String, String> experience)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> escapeExperience(Map<String, String> experience)", "full_signature": "public static Map<String, String> escapeExperience(Map<String, String> experience)", "class_method_signature": "UserProfileHelper.escapeExperience(Map<String, String> experience)", "testcase": false, "constructor": false}, {"identifier": "isCurrent", "parameters": "(Map<String, String> srcExperience)", "modifiers": "private static", "return": "boolean", "signature": "boolean isCurrent(Map<String, String> srcExperience)", "full_signature": "private static boolean isCurrent(Map<String, String> srcExperience)", "class_method_signature": "UserProfileHelper.isCurrent(Map<String, String> srcExperience)", "testcase": false, "constructor": false}, {"identifier": "getStartDate", "parameters": "(Map<String, String> srcExperience)", "modifiers": "private static", "return": "LocalDate", "signature": "LocalDate getStartDate(Map<String, String> srcExperience)", "full_signature": "private static LocalDate getStartDate(Map<String, String> srcExperience)", "class_method_signature": "UserProfileHelper.getStartDate(Map<String, String> srcExperience)", "testcase": false, "constructor": false}, {"identifier": "putExperienceData", "parameters": "(Map<String, String> srcExperience, Map<String, String> destExperience, String key)", "modifiers": "private static", "return": "void", "signature": "void putExperienceData(Map<String, String> srcExperience, Map<String, String> destExperience, String key)", "full_signature": "private static void putExperienceData(Map<String, String> srcExperience, Map<String, String> destExperience, String key)", "class_method_signature": "UserProfileHelper.putExperienceData(Map<String, String> srcExperience, Map<String, String> destExperience, String key)", "testcase": false, "constructor": false}, {"identifier": "getLabel", "parameters": "(WebuiRequestContext context, String key)", "modifiers": "public static", "return": "String", "signature": "String getLabel(WebuiRequestContext context, String key)", "full_signature": "public static String getLabel(WebuiRequestContext context, String key)", "class_method_signature": "UserProfileHelper.getLabel(WebuiRequestContext context, String key)", "testcase": false, "constructor": false}, {"identifier": "putInfoData", "parameters": "(Profile currentProfile, Map<String, Object> infos, String mainKey)", "modifiers": "private static", "return": "void", "signature": "void putInfoData(Profile currentProfile, Map<String, Object> infos, String mainKey)", "full_signature": "private static void putInfoData(Profile currentProfile, Map<String, Object> infos, String mainKey)", "class_method_signature": "UserProfileHelper.putInfoData(Profile currentProfile, Map<String, Object> infos, String mainKey)", "testcase": false, "constructor": false}, {"identifier": "isExistingEmail", "parameters": "(String email)", "modifiers": "public static", "return": "boolean", "signature": "boolean isExistingEmail(String email)", "full_signature": "public static boolean isExistingEmail(String email)", "class_method_signature": "UserProfileHelper.isExistingEmail(String email)", "testcase": false, "constructor": false}], "file": "webapp/portlet/src/main/java/org/exoplatform/social/user/portlet/UserProfileHelper.java"}, "focal_method": {"identifier": "getSortedExperiences", "parameters": "(Profile currentProfile)", "modifiers": "public static", "return": "List<Map<String, String>>", "body": "public static List<Map<String, String>> getSortedExperiences(Profile currentProfile) {\n    List<Map<String, String>> experiences = getMultiValues(currentProfile, Profile.EXPERIENCES);\n    if (experiences != null) {\n      Collections.sort(experiences, Comparator.comparing(UserProfileHelper::isCurrent).thenComparing(UserProfileHelper::getStartDate).reversed());\n    }\n\n    return experiences;\n  }", "signature": "List<Map<String, String>> getSortedExperiences(Profile currentProfile)", "full_signature": "public static List<Map<String, String>> getSortedExperiences(Profile currentProfile)", "class_method_signature": "UserProfileHelper.getSortedExperiences(Profile currentProfile)", "testcase": false, "constructor": false, "invocations": ["getMultiValues", "sort", "reversed", "thenComparing", "comparing"]}, "repository": {"repo_id": 3933009, "url": "https://github.com/exoplatform/social", "stars": 23, "created": "4/4/2012 8:41:01 PM +00:00", "updates": "2020-01-23T15:55:29+00:00", "fork": "False", "license": "licensed"}}