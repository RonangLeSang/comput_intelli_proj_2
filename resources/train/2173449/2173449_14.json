{"test_class": {"identifier": "ReinterpretOpImageTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int W = 10;", "modifier": "private static final", "type": "int", "declarator": "W = 10", "var_name": "W"}, {"original_string": "private static final int H = 10;", "modifier": "private static final", "type": "int", "declarator": "H = 10", "var_name": "H"}], "file": "beam/ceres-0.x/ceres-jai/src/test/java/com/bc/ceres/jai/opimage/ReinterpretOpImageTest.java"}, "test_case": {"identifier": "testRescaleByte", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRescaleByte() {\n        final RenderedImage source = createSourceImage(new Byte[]{-1});\n        final RenderedImage target = ReinterpretOpImage.create(source, 11.0, 1.0, LINEAR, AWT, null);\n        assertTrue(DataBuffer.TYPE_FLOAT == target.getSampleModel().getDataType());\n\n        final Raster targetData = target.getData();\n        assertEquals(2806.0, targetData.getSampleFloat(0, 0, 0), 0.0);\n    }", "signature": "void testRescaleByte()", "full_signature": "@Test public void testRescaleByte()", "class_method_signature": "ReinterpretOpImageTest.testRescaleByte()", "testcase": true, "constructor": false, "invocations": ["createSourceImage", "create", "assertTrue", "getDataType", "getSampleModel", "getData", "assertEquals", "getSampleFloat"]}, "focal_class": {"identifier": "ReinterpretOpImage", "superclass": "extends PointOpImage", "interfaces": "", "fields": [{"original_string": "private static final double LOG10 = Math.log(10);", "modifier": "private static final", "type": "double", "declarator": "LOG10 = Math.log(10)", "var_name": "LOG10"}, {"original_string": "private final double factor;", "modifier": "private final", "type": "double", "declarator": "factor", "var_name": "factor"}, {"original_string": "private final double offset;", "modifier": "private final", "type": "double", "declarator": "offset", "var_name": "offset"}, {"original_string": "private final ScalingType scalingType;", "modifier": "private final", "type": "ScalingType", "declarator": "scalingType", "var_name": "scalingType"}, {"original_string": "private final InterpretationType interpretationType;", "modifier": "private final", "type": "InterpretationType", "declarator": "interpretationType", "var_name": "interpretationType"}], "methods": [{"identifier": "create", "parameters": "(RenderedImage source, double factor, double offset, ScalingType scalingType,\n                                InterpretationType interpretationType, Map<Object, Object> config)", "modifiers": "static", "return": "RenderedImage", "signature": "RenderedImage create(RenderedImage source, double factor, double offset, ScalingType scalingType,\n                                InterpretationType interpretationType, Map<Object, Object> config)", "full_signature": "static RenderedImage create(RenderedImage source, double factor, double offset, ScalingType scalingType,\n                                InterpretationType interpretationType, Map<Object, Object> config)", "class_method_signature": "ReinterpretOpImage.create(RenderedImage source, double factor, double offset, ScalingType scalingType,\n                                InterpretationType interpretationType, Map<Object, Object> config)", "testcase": false, "constructor": false}, {"identifier": "ReinterpretOpImage", "parameters": "(RenderedImage source, ImageLayout imageLayout, Map<Object, Object> config,\n                               double factor, double offset, ScalingType scalingType,\n                               InterpretationType interpretationType)", "modifiers": "private", "return": "", "signature": " ReinterpretOpImage(RenderedImage source, ImageLayout imageLayout, Map<Object, Object> config,\n                               double factor, double offset, ScalingType scalingType,\n                               InterpretationType interpretationType)", "full_signature": "private  ReinterpretOpImage(RenderedImage source, ImageLayout imageLayout, Map<Object, Object> config,\n                               double factor, double offset, ScalingType scalingType,\n                               InterpretationType interpretationType)", "class_method_signature": "ReinterpretOpImage.ReinterpretOpImage(RenderedImage source, ImageLayout imageLayout, Map<Object, Object> config,\n                               double factor, double offset, ScalingType scalingType,\n                               InterpretationType interpretationType)", "testcase": false, "constructor": true}, {"identifier": "computeRect", "parameters": "(Raster[] sourceRasters, WritableRaster targetRaster, Rectangle targetRectangle)", "modifiers": "@Override protected", "return": "void", "signature": "void computeRect(Raster[] sourceRasters, WritableRaster targetRaster, Rectangle targetRectangle)", "full_signature": "@Override protected void computeRect(Raster[] sourceRasters, WritableRaster targetRaster, Rectangle targetRectangle)", "class_method_signature": "ReinterpretOpImage.computeRect(Raster[] sourceRasters, WritableRaster targetRaster, Rectangle targetRectangle)", "testcase": false, "constructor": false}, {"identifier": "rescale", "parameters": "(Raster sourceRaster, WritableRaster targetRaster, Rectangle targetRectangle)", "modifiers": "private", "return": "void", "signature": "void rescale(Raster sourceRaster, WritableRaster targetRaster, Rectangle targetRectangle)", "full_signature": "private void rescale(Raster sourceRaster, WritableRaster targetRaster, Rectangle targetRectangle)", "class_method_signature": "ReinterpretOpImage.rescale(Raster sourceRaster, WritableRaster targetRaster, Rectangle targetRectangle)", "testcase": false, "constructor": false}, {"identifier": "reformat", "parameters": "(Raster sourceRaster, WritableRaster targetRaster, Rectangle targetRectangle)", "modifiers": "private", "return": "void", "signature": "void reformat(Raster sourceRaster, WritableRaster targetRaster, Rectangle targetRectangle)", "full_signature": "private void reformat(Raster sourceRaster, WritableRaster targetRaster, Rectangle targetRectangle)", "class_method_signature": "ReinterpretOpImage.reformat(Raster sourceRaster, WritableRaster targetRaster, Rectangle targetRectangle)", "testcase": false, "constructor": false}, {"identifier": "reformatSByte", "parameters": "(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                               Rectangle targetRectangle)", "modifiers": "private", "return": "void", "signature": "void reformatSByte(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                               Rectangle targetRectangle)", "full_signature": "private void reformatSByte(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                               Rectangle targetRectangle)", "class_method_signature": "ReinterpretOpImage.reformatSByte(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                               Rectangle targetRectangle)", "testcase": false, "constructor": false}, {"identifier": "reformatUInt", "parameters": "(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                              Rectangle targetRectangle)", "modifiers": "private", "return": "void", "signature": "void reformatUInt(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                              Rectangle targetRectangle)", "full_signature": "private void reformatUInt(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                              Rectangle targetRectangle)", "class_method_signature": "ReinterpretOpImage.reformatUInt(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                              Rectangle targetRectangle)", "testcase": false, "constructor": false}, {"identifier": "rescaleByte", "parameters": "(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                             Rectangle targetRectangle)", "modifiers": "private", "return": "void", "signature": "void rescaleByte(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                             Rectangle targetRectangle)", "full_signature": "private void rescaleByte(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                             Rectangle targetRectangle)", "class_method_signature": "ReinterpretOpImage.rescaleByte(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                             Rectangle targetRectangle)", "testcase": false, "constructor": false}, {"identifier": "rescaleSByte", "parameters": "(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                              Rectangle targetRectangle)", "modifiers": "private", "return": "void", "signature": "void rescaleSByte(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                              Rectangle targetRectangle)", "full_signature": "private void rescaleSByte(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                              Rectangle targetRectangle)", "class_method_signature": "ReinterpretOpImage.rescaleSByte(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                              Rectangle targetRectangle)", "testcase": false, "constructor": false}, {"identifier": "rescaleUShort", "parameters": "(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                               Rectangle targetRectangle)", "modifiers": "private", "return": "void", "signature": "void rescaleUShort(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                               Rectangle targetRectangle)", "full_signature": "private void rescaleUShort(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                               Rectangle targetRectangle)", "class_method_signature": "ReinterpretOpImage.rescaleUShort(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                               Rectangle targetRectangle)", "testcase": false, "constructor": false}, {"identifier": "rescaleShort", "parameters": "(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                              Rectangle targetRectangle)", "modifiers": "private", "return": "void", "signature": "void rescaleShort(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                              Rectangle targetRectangle)", "full_signature": "private void rescaleShort(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                              Rectangle targetRectangle)", "class_method_signature": "ReinterpretOpImage.rescaleShort(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                              Rectangle targetRectangle)", "testcase": false, "constructor": false}, {"identifier": "rescaleInt", "parameters": "(UnpackedImageData sourcePixels, UnpackedImageData targetPixels, Rectangle targetRectangle)", "modifiers": "private", "return": "void", "signature": "void rescaleInt(UnpackedImageData sourcePixels, UnpackedImageData targetPixels, Rectangle targetRectangle)", "full_signature": "private void rescaleInt(UnpackedImageData sourcePixels, UnpackedImageData targetPixels, Rectangle targetRectangle)", "class_method_signature": "ReinterpretOpImage.rescaleInt(UnpackedImageData sourcePixels, UnpackedImageData targetPixels, Rectangle targetRectangle)", "testcase": false, "constructor": false}, {"identifier": "rescaleUInt", "parameters": "(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                             Rectangle targetRectangle)", "modifiers": "private", "return": "void", "signature": "void rescaleUInt(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                             Rectangle targetRectangle)", "full_signature": "private void rescaleUInt(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                             Rectangle targetRectangle)", "class_method_signature": "ReinterpretOpImage.rescaleUInt(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                             Rectangle targetRectangle)", "testcase": false, "constructor": false}, {"identifier": "rescaleFloat", "parameters": "(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                              Rectangle targetRectangle)", "modifiers": "private", "return": "void", "signature": "void rescaleFloat(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                              Rectangle targetRectangle)", "full_signature": "private void rescaleFloat(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                              Rectangle targetRectangle)", "class_method_signature": "ReinterpretOpImage.rescaleFloat(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                              Rectangle targetRectangle)", "testcase": false, "constructor": false}, {"identifier": "rescaleDouble", "parameters": "(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                               Rectangle targetRectangle)", "modifiers": "private", "return": "void", "signature": "void rescaleDouble(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                               Rectangle targetRectangle)", "full_signature": "private void rescaleDouble(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                               Rectangle targetRectangle)", "class_method_signature": "ReinterpretOpImage.rescaleDouble(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                               Rectangle targetRectangle)", "testcase": false, "constructor": false}, {"identifier": "createTargetImageLayout", "parameters": "(RenderedImage source, SampleModel sampleModel)", "modifiers": "private static", "return": "ImageLayout", "signature": "ImageLayout createTargetImageLayout(RenderedImage source, SampleModel sampleModel)", "full_signature": "private static ImageLayout createTargetImageLayout(RenderedImage source, SampleModel sampleModel)", "class_method_signature": "ReinterpretOpImage.createTargetImageLayout(RenderedImage source, SampleModel sampleModel)", "testcase": false, "constructor": false}], "file": "beam/ceres-0.x/ceres-jai/src/main/java/com/bc/ceres/jai/opimage/ReinterpretOpImage.java"}, "focal_method": {"identifier": "rescaleByte", "parameters": "(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                             Rectangle targetRectangle)", "modifiers": "private", "return": "void", "body": "private void rescaleByte(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                             Rectangle targetRectangle) {\n        final int sourceLineStride = sourcePixels.lineStride;\n        final int sourcePixelStride = sourcePixels.pixelStride;\n        final byte[] sourceData = sourcePixels.getByteData(0);\n\n        final int targetLineStride = targetPixels.lineStride;\n        final int targetPixelStride = targetPixels.pixelStride;\n        final float[] targetData = targetPixels.getFloatData(0);\n\n        final int w = targetRectangle.width;\n        final int h = targetRectangle.height;\n\n        int sourceLineOffset = sourcePixels.bandOffsets[0];\n        int targetLineOffset = targetPixels.bandOffsets[0];\n\n        if (scalingType == EXPONENTIAL) {\n            for (int y = 0; y < h; y++) {\n                int sourcePixelOffset = sourceLineOffset;\n                sourceLineOffset += sourceLineStride;\n\n                int targetPixelOffset = targetLineOffset;\n                targetLineOffset += targetLineStride;\n\n                for (int x = 0; x < w; x++) {\n                    final double v = sourceData[sourcePixelOffset] & 0xFF;\n                    targetData[targetPixelOffset] = (float) Math.exp(factor * v + offset);\n\n                    sourcePixelOffset += sourcePixelStride;\n                    targetPixelOffset += targetPixelStride;\n                } // next x\n            } // next y\n        } else {\n            for (int y = 0; y < h; y++) {\n                int sourcePixelOffset = sourceLineOffset;\n                sourceLineOffset += sourceLineStride;\n\n                int targetPixelOffset = targetLineOffset;\n                targetLineOffset += targetLineStride;\n\n                for (int x = 0; x < w; x++) {\n                    final double v = sourceData[sourcePixelOffset] & 0xFF;\n                    targetData[targetPixelOffset] = (float) (factor * v + offset);\n\n                    sourcePixelOffset += sourcePixelStride;\n                    targetPixelOffset += targetPixelStride;\n                } // next x\n            } // next y\n        }\n    }", "signature": "void rescaleByte(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                             Rectangle targetRectangle)", "full_signature": "private void rescaleByte(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                             Rectangle targetRectangle)", "class_method_signature": "ReinterpretOpImage.rescaleByte(UnpackedImageData sourcePixels, UnpackedImageData targetPixels,\n                             Rectangle targetRectangle)", "testcase": false, "constructor": false, "invocations": ["getByteData", "getFloatData", "exp"]}, "repository": {"repo_id": 2173449, "url": "https://github.com/lveci/nest", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 20, "size": 177628, "license": "licensed"}}