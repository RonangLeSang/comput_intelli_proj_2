{"test_class": {"identifier": "ValueSetValidatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "beam/ceres-0.x/ceres-binding/src/test/java/com/bc/ceres/binding/validators/ValueSetValidatorTest.java"}, "test_case": {"identifier": "testGoodNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGoodNull() throws Exception {\n        final PropertyDescriptor descriptor = createPropertyDescriptor();\n        descriptor.setNotNull(false);\n        new ValueSetValidator(descriptor).validateValue(createProperty(descriptor), null);\n    }", "signature": "void testGoodNull()", "full_signature": "@Test public void testGoodNull()", "class_method_signature": "ValueSetValidatorTest.testGoodNull()", "testcase": true, "constructor": false, "invocations": ["createPropertyDescriptor", "setNotNull", "validateValue", "createProperty"]}, "focal_class": {"identifier": "ValueSetValidator", "superclass": "", "interfaces": "implements Validator", "fields": [{"original_string": "private final PropertyDescriptor propertyDescriptor;", "modifier": "private final", "type": "PropertyDescriptor", "declarator": "propertyDescriptor", "var_name": "propertyDescriptor"}], "methods": [{"identifier": "ValueSetValidator", "parameters": "(PropertyDescriptor propertyDescriptor)", "modifiers": "public", "return": "", "signature": " ValueSetValidator(PropertyDescriptor propertyDescriptor)", "full_signature": "public  ValueSetValidator(PropertyDescriptor propertyDescriptor)", "class_method_signature": "ValueSetValidator.ValueSetValidator(PropertyDescriptor propertyDescriptor)", "testcase": false, "constructor": true}, {"identifier": "validateValue", "parameters": "(Property property, Object value)", "modifiers": "@Override public", "return": "void", "signature": "void validateValue(Property property, Object value)", "full_signature": "@Override public void validateValue(Property property, Object value)", "class_method_signature": "ValueSetValidator.validateValue(Property property, Object value)", "testcase": false, "constructor": false}], "file": "beam/ceres-0.x/ceres-binding/src/main/java/com/bc/ceres/binding/validators/ValueSetValidator.java"}, "focal_method": {"identifier": "validateValue", "parameters": "(Property property, Object value)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validateValue(Property property, Object value) throws ValidationException {\n        if (value != null || propertyDescriptor.isNotNull()) {\n            if (!propertyDescriptor.getValueSet().contains(value)) {\n                \n\t\t//NESTMOD\n\t\t//throw new ValidationException(MessageFormat.format(\"Value for ''{0}'' is invalid: ''{1}''\",\n                //                                                   property.getDescriptor().getDisplayName(), value));\n            }\n        }\n    }", "signature": "void validateValue(Property property, Object value)", "full_signature": "@Override public void validateValue(Property property, Object value)", "class_method_signature": "ValueSetValidator.validateValue(Property property, Object value)", "testcase": false, "constructor": false, "invocations": ["isNotNull", "contains", "getValueSet"]}, "repository": {"repo_id": 2173449, "url": "https://github.com/lveci/nest", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 20, "size": 177628, "license": "licensed"}}