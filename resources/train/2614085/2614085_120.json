{"test_class": {"identifier": "TabListOfNodesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "TabListOfNodes nodes;", "modifier": "", "type": "TabListOfNodes", "declarator": "nodes", "var_name": "nodes"}], "file": "uPortal-api/uPortal-api-rest/src/test/java/org/apereo/portal/rest/layout/TabListOfNodesTest.java"}, "test_case": {"identifier": "testAddAllChannels", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAddAllChannels() {\n        Document document;\n        String xml =\n                \"<bookstore> <channel>  <title>Everyday Italian</title> \"\n                        + \"<author>Giada De Laurentiis</author> \"\n                        + \"<year>2005</year> \"\n                        + \"<price>30.00</price> \"\n                        + \"</channel> \"\n                        + \"<channel>  <title>Harry Potter</title>  \"\n                        + \"<author>J K. Rowling</author>\"\n                        + \"  <year>2005</year> \"\n                        + \"<price>29.99</price> </channel>\"\n                        + \" <channel> <title>XQuery Kick Start</title>  \"\n                        + \"<author>James McGovern</author> \"\n                        + \" <author>Per Bothner</author> \"\n                        + \"<author>Kurt Cagle</author> \"\n                        + \"<author>James Linn</author> \"\n                        + \"<author>Vaidyanathan Nagarajan</author> \"\n                        + \"<year>2003</year> \"\n                        + \"<price>49.99</price> </channel> \"\n                        + \"<channel> <title>Learning XML</title> <author>Erik T. Ray</author> <year>2003</year>\"\n                        + \"<price>39.95</price> </channel> \"\n                        + \"</bookstore>\";\n        try {\n            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n            DocumentBuilder documentBuilder = factory.newDocumentBuilder();\n            InputSource is = new InputSource();\n            is.setCharacterStream(new StringReader(xml));\n            document = documentBuilder.parse(is);\n        } catch (Exception e) {\n            throw new RuntimeException(\n                    \"Unable to parse region metadata file: \" + e.getMessage(), e);\n        }\n\n        NodeList bookstores = document.getElementsByTagName(\"bookstore\");\n        nodes.addAllChannels(bookstores);\n        Assert.assertEquals(4, nodes.getLength());\n    }", "signature": "void testAddAllChannels()", "full_signature": "@Test public void testAddAllChannels()", "class_method_signature": "TabListOfNodesTest.testAddAllChannels()", "testcase": true, "constructor": false, "invocations": ["newInstance", "newDocumentBuilder", "setCharacterStream", "parse", "getMessage", "getElementsByTagName", "addAllChannels", "assertEquals", "getLength"]}, "focal_class": {"identifier": "TabListOfNodes", "superclass": "", "interfaces": "implements NodeList", "fields": [{"original_string": "private List<Node> tab = new ArrayList<Node>();", "modifier": "private", "type": "List<Node>", "declarator": "tab = new ArrayList<Node>()", "var_name": "tab"}], "methods": [{"identifier": "getLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getLength()", "full_signature": "@Override public int getLength()", "class_method_signature": "TabListOfNodes.getLength()", "testcase": false, "constructor": false}, {"identifier": "item", "parameters": "(int index)", "modifiers": "@Override public", "return": "Node", "signature": "Node item(int index)", "full_signature": "@Override public Node item(int index)", "class_method_signature": "TabListOfNodes.item(int index)", "testcase": false, "constructor": false}, {"identifier": "addItem", "parameters": "(Node node)", "modifiers": "public", "return": "void", "signature": "void addItem(Node node)", "full_signature": "public void addItem(Node node)", "class_method_signature": "TabListOfNodes.addItem(Node node)", "testcase": false, "constructor": false}, {"identifier": "addAllChannels", "parameters": "(NodeList root)", "modifiers": "public", "return": "void", "signature": "void addAllChannels(NodeList root)", "full_signature": "public void addAllChannels(NodeList root)", "class_method_signature": "TabListOfNodes.addAllChannels(NodeList root)", "testcase": false, "constructor": false}], "file": "uPortal-api/uPortal-api-rest/src/main/java/org/apereo/portal/rest/layout/TabListOfNodes.java"}, "focal_method": {"identifier": "addAllChannels", "parameters": "(NodeList root)", "modifiers": "public", "return": "void", "body": "public void addAllChannels(NodeList root) {\n        for (int i = 0; i < root.getLength(); i++) {\n            Node cur = root.item(i);\n            if (\"channel\".equals(cur.getNodeName())) {\n                this.addItem(cur);\n            } else {\n                if (cur.getChildNodes() != null && cur.getChildNodes().getLength() > 0) {\n                    addAllChannels(cur.getChildNodes());\n                }\n            }\n        }\n    }", "signature": "void addAllChannels(NodeList root)", "full_signature": "public void addAllChannels(NodeList root)", "class_method_signature": "TabListOfNodes.addAllChannels(NodeList root)", "testcase": false, "constructor": false, "invocations": ["getLength", "item", "equals", "getNodeName", "addItem", "getChildNodes", "getLength", "getChildNodes", "addAllChannels", "getChildNodes"]}, "repository": {"repo_id": 2614085, "url": "https://github.com/Jasig/uPortal", "stars": 195, "created": "10/20/2011 3:34:22 PM +00:00", "updates": "2020-01-22T16:02:00+00:00", "fork": "False", "license": "licensed"}}