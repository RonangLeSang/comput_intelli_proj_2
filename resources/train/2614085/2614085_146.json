{"test_class": {"identifier": "JsonWrapperFilteringCharacterPipelineComponentTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "JsonWrapperFilteringCharacterPipelineComponent jsonWrapperFilteringCharacterPipelineComponent;", "modifier": "", "type": "JsonWrapperFilteringCharacterPipelineComponent", "declarator": "jsonWrapperFilteringCharacterPipelineComponent", "var_name": "jsonWrapperFilteringCharacterPipelineComponent"}, {"original_string": "private MockHttpServletRequest req;", "modifier": "private", "type": "MockHttpServletRequest", "declarator": "req", "var_name": "req"}, {"original_string": "private MockHttpServletResponse res;", "modifier": "private", "type": "MockHttpServletResponse", "declarator": "res", "var_name": "res"}, {"original_string": "@Mock private PipelineComponent wrappedComponent;", "modifier": "@Mock private", "type": "PipelineComponent", "declarator": "wrappedComponent", "var_name": "wrappedComponent"}], "file": "uPortal-api/uPortal-api-rest/src/test/java/org/apereo/portal/json/rendering/JsonWrapperFilteringCharacterPipelineComponentTest.java"}, "test_case": {"identifier": "testGetEventReader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetEventReader() {\n        PipelineEventReader<CharacterEventReader, CharacterEvent> pipelineEventReader =\n                Mockito.mock(PipelineEventReaderImpl.class);\n        CharacterEventReader eventReader = Mockito.mock(CharacterEventReader.class);\n        Mockito.when(pipelineEventReader.getEventReader()).thenReturn(eventReader);\n        Mockito.when(wrappedComponent.getEventReader(req, res)).thenReturn(pipelineEventReader);\n        jsonWrapperFilteringCharacterPipelineComponent.setWrappedComponent(wrappedComponent);\n        jsonWrapperFilteringCharacterPipelineComponent.getEventReader(req, res);\n        Mockito.verify(wrappedComponent).getEventReader(req, res);\n    }", "signature": "void testGetEventReader()", "full_signature": "@Test public void testGetEventReader()", "class_method_signature": "JsonWrapperFilteringCharacterPipelineComponentTest.testGetEventReader()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "getEventReader", "thenReturn", "when", "getEventReader", "setWrappedComponent", "getEventReader", "getEventReader", "verify"]}, "focal_class": {"identifier": "JsonWrapperFilteringCharacterPipelineComponent", "superclass": "extends CharacterPipelineComponentWrapper", "interfaces": "", "fields": [], "methods": [{"identifier": "getCacheKey", "parameters": "(HttpServletRequest request, HttpServletResponse response)", "modifiers": "@Override public", "return": "CacheKey", "signature": "CacheKey getCacheKey(HttpServletRequest request, HttpServletResponse response)", "full_signature": "@Override public CacheKey getCacheKey(HttpServletRequest request, HttpServletResponse response)", "class_method_signature": "JsonWrapperFilteringCharacterPipelineComponent.getCacheKey(HttpServletRequest request, HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "getEventReader", "parameters": "(\n            HttpServletRequest request, HttpServletResponse response)", "modifiers": "@Override public", "return": "PipelineEventReader<CharacterEventReader, CharacterEvent>", "signature": "PipelineEventReader<CharacterEventReader, CharacterEvent> getEventReader(\n            HttpServletRequest request, HttpServletResponse response)", "full_signature": "@Override public PipelineEventReader<CharacterEventReader, CharacterEvent> getEventReader(\n            HttpServletRequest request, HttpServletResponse response)", "class_method_signature": "JsonWrapperFilteringCharacterPipelineComponent.getEventReader(\n            HttpServletRequest request, HttpServletResponse response)", "testcase": false, "constructor": false}], "file": "uPortal-api/uPortal-api-rest/src/main/java/org/apereo/portal/json/rendering/JsonWrapperFilteringCharacterPipelineComponent.java"}, "focal_method": {"identifier": "getEventReader", "parameters": "(\n            HttpServletRequest request, HttpServletResponse response)", "modifiers": "@Override public", "return": "PipelineEventReader<CharacterEventReader, CharacterEvent>", "body": "@Override\n    public PipelineEventReader<CharacterEventReader, CharacterEvent> getEventReader(\n            HttpServletRequest request, HttpServletResponse response) throws IllegalStateException {\n        if (this.wrappedComponent != null) {\n            final PipelineEventReader<CharacterEventReader, CharacterEvent> pipelineEventReader =\n                    this.wrappedComponent.getEventReader(request, response);\n            final CharacterEventReader eventReader = pipelineEventReader.getEventReader();\n            final JsonWrapperFilteringCharacterEventReader\n                    jsonWrapperFilteringCharacterEventReader =\n                            new JsonWrapperFilteringCharacterEventReader(eventReader);\n            final Map<String, String> outputProperties = pipelineEventReader.getOutputProperties();\n            return new PipelineEventReaderImpl<CharacterEventReader, CharacterEvent>(\n                    jsonWrapperFilteringCharacterEventReader, outputProperties);\n        } else {\n            logger.warn(\"PipelineComponentWrapper.wrapperComponent is null\");\n            throw new IllegalStateException(\"PipelineComponentWrapper.wrapperComponent is null\");\n        }\n    }", "signature": "PipelineEventReader<CharacterEventReader, CharacterEvent> getEventReader(\n            HttpServletRequest request, HttpServletResponse response)", "full_signature": "@Override public PipelineEventReader<CharacterEventReader, CharacterEvent> getEventReader(\n            HttpServletRequest request, HttpServletResponse response)", "class_method_signature": "JsonWrapperFilteringCharacterPipelineComponent.getEventReader(\n            HttpServletRequest request, HttpServletResponse response)", "testcase": false, "constructor": false, "invocations": ["getEventReader", "getEventReader", "getOutputProperties", "warn"]}, "repository": {"repo_id": 2614085, "url": "https://github.com/Jasig/uPortal", "stars": 195, "created": "10/20/2011 3:34:22 PM +00:00", "updates": "2020-01-22T16:02:00+00:00", "fork": "False", "license": "licensed"}}