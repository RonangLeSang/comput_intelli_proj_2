{"test_class": {"identifier": "ChainingProfileMapperImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks ChainingProfileMapperImpl mapper = new ChainingProfileMapperImpl();", "modifier": "@InjectMocks", "type": "ChainingProfileMapperImpl", "declarator": "mapper = new ChainingProfileMapperImpl()", "var_name": "mapper"}, {"original_string": "@Mock IPerson person;", "modifier": "@Mock", "type": "IPerson", "declarator": "person", "var_name": "person"}, {"original_string": "@Mock HttpServletRequest request;", "modifier": "@Mock", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock IProfileMapper subMapper1;", "modifier": "@Mock", "type": "IProfileMapper", "declarator": "subMapper1", "var_name": "subMapper1"}, {"original_string": "@Mock IProfileMapper subMapper2;", "modifier": "@Mock", "type": "IProfileMapper", "declarator": "subMapper2", "var_name": "subMapper2"}, {"original_string": "@Mock IUserLayoutStore layoutStore;", "modifier": "@Mock", "type": "IUserLayoutStore", "declarator": "layoutStore", "var_name": "layoutStore"}], "file": "uPortal-layout/uPortal-layout-core/src/test/java/org/apereo/portal/layout/profile/ChainingProfileMapperImplTest.java"}, "test_case": {"identifier": "testSecondProfile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSecondProfile() {\n        when(subMapper2.getProfileFname(person, request)).thenReturn(\"profile2\");\n        String fname = mapper.getProfileFname(person, request);\n        assertEquals(\"profile2\", fname);\n    }", "signature": "void testSecondProfile()", "full_signature": "@Test public void testSecondProfile()", "class_method_signature": "ChainingProfileMapperImplTest.testSecondProfile()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getProfileFname", "getProfileFname", "assertEquals"]}, "focal_class": {"identifier": "ChainingProfileMapperImpl", "superclass": "", "interfaces": "implements IProfileMapper", "fields": [{"original_string": "protected Logger logger = LoggerFactory.getLogger(getClass());", "modifier": "protected", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(getClass())", "var_name": "logger"}, {"original_string": "private String defaultProfileName = \"default\";", "modifier": "private", "type": "String", "declarator": "defaultProfileName = \"default\"", "var_name": "defaultProfileName"}, {"original_string": "private List<IProfileMapper> subMappers = Collections.<IProfileMapper>emptyList();", "modifier": "private", "type": "List<IProfileMapper>", "declarator": "subMappers = Collections.<IProfileMapper>emptyList()", "var_name": "subMappers"}], "methods": [{"identifier": "setDefaultProfileName", "parameters": "(String defaultProfileName)", "modifiers": "public", "return": "void", "signature": "void setDefaultProfileName(String defaultProfileName)", "full_signature": "public void setDefaultProfileName(String defaultProfileName)", "class_method_signature": "ChainingProfileMapperImpl.setDefaultProfileName(String defaultProfileName)", "testcase": false, "constructor": false}, {"identifier": "setSubMappers", "parameters": "(List<IProfileMapper> subMappers)", "modifiers": "public", "return": "void", "signature": "void setSubMappers(List<IProfileMapper> subMappers)", "full_signature": "public void setSubMappers(List<IProfileMapper> subMappers)", "class_method_signature": "ChainingProfileMapperImpl.setSubMappers(List<IProfileMapper> subMappers)", "testcase": false, "constructor": false}, {"identifier": "getProfileFname", "parameters": "(IPerson person, HttpServletRequest request)", "modifiers": "@Override public", "return": "String", "signature": "String getProfileFname(IPerson person, HttpServletRequest request)", "full_signature": "@Override public String getProfileFname(IPerson person, HttpServletRequest request)", "class_method_signature": "ChainingProfileMapperImpl.getProfileFname(IPerson person, HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ChainingProfileMapperImpl.toString()", "testcase": false, "constructor": false}], "file": "uPortal-layout/uPortal-layout-core/src/main/java/org/apereo/portal/layout/profile/ChainingProfileMapperImpl.java"}, "focal_method": {"identifier": "getProfileFname", "parameters": "(IPerson person, HttpServletRequest request)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getProfileFname(IPerson person, HttpServletRequest request) {\n\n        for (IProfileMapper mapper : subMappers) {\n            try {\n                final String fname = mapper.getProfileFname(person, request);\n                if (fname != null) {\n                    logger.debug(\"Profile mapper {} found profile fname={}\", mapper, fname);\n                    return fname;\n                }\n            } catch (final Exception mapperThrownException) {\n                logger.error(\n                        \"Profile mapper \" + mapper + \" threw on attempt to map profile.\",\n                        mapperThrownException);\n                // ignore, treating the mapper as if it has no available opinion about the mapping\n            }\n        }\n\n        logger.trace(\n                \"None of the chained profile mappers [{}] mapped to a profile, \"\n                        + \"so returning default profile [{}].\",\n                subMappers,\n                defaultProfileName);\n\n        return defaultProfileName;\n    }", "signature": "String getProfileFname(IPerson person, HttpServletRequest request)", "full_signature": "@Override public String getProfileFname(IPerson person, HttpServletRequest request)", "class_method_signature": "ChainingProfileMapperImpl.getProfileFname(IPerson person, HttpServletRequest request)", "testcase": false, "constructor": false, "invocations": ["getProfileFname", "debug", "error", "trace"]}, "repository": {"repo_id": 2614085, "url": "https://github.com/Jasig/uPortal", "stars": 195, "created": "10/20/2011 3:34:22 PM +00:00", "updates": "2020-01-22T16:02:00+00:00", "fork": "False", "license": "licensed"}}