{"test_class": {"identifier": "PeopleRESTControllerV50Test", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String USER_NAME = \"jdoe\";", "modifier": "public static final", "type": "String", "declarator": "USER_NAME = \"jdoe\"", "var_name": "USER_NAME"}, {"original_string": "@InjectMocks private PeopleRESTControllerV50 peopleRESTControllerV50;", "modifier": "@InjectMocks private", "type": "PeopleRESTControllerV50", "declarator": "peopleRESTControllerV50", "var_name": "peopleRESTControllerV50"}, {"original_string": "@Mock private IPersonManager personManager;", "modifier": "@Mock private", "type": "IPersonManager", "declarator": "personManager", "var_name": "personManager"}, {"original_string": "@Mock private PersonLookupHelperImpl lookupHelper;", "modifier": "@Mock private", "type": "PersonLookupHelperImpl", "declarator": "lookupHelper", "var_name": "lookupHelper"}, {"original_string": "@Mock private HttpServletRequest req;", "modifier": "@Mock private", "type": "HttpServletRequest", "declarator": "req", "var_name": "req"}, {"original_string": "private MockHttpServletResponse res;", "modifier": "private", "type": "MockHttpServletResponse", "declarator": "res", "var_name": "res"}, {"original_string": "@Mock private ObjectMapper jsonMapper;", "modifier": "@Mock private", "type": "ObjectMapper", "declarator": "jsonMapper", "var_name": "jsonMapper"}], "file": "uPortal-api/uPortal-api-rest/src/test/java/org/apereo/portal/rest/PeopleRESTControllerV50Test.java"}, "test_case": {"identifier": "testGetPersonNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetPersonNull() {\n        Mockito.when(personManager.getPerson(req)).thenReturn(null);\n        ModelAndView modelAndView = peopleRESTControllerV50.getPerson(USER_NAME, req, res);\n\n        Assert.assertEquals(401, res.getStatus());\n        Assert.assertEquals(null, modelAndView);\n    }", "signature": "void testGetPersonNull()", "full_signature": "@Test public void testGetPersonNull()", "class_method_signature": "PeopleRESTControllerV50Test.testGetPersonNull()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getPerson", "getPerson", "assertEquals", "getStatus", "assertEquals"]}, "focal_class": {"identifier": "PeopleRESTControllerV50", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ObjectMapper jsonMapper;", "modifier": "private", "type": "ObjectMapper", "declarator": "jsonMapper", "var_name": "jsonMapper"}, {"original_string": "private IPersonManager personManager;", "modifier": "private", "type": "IPersonManager", "declarator": "personManager", "var_name": "personManager"}, {"original_string": "private PersonLookupHelperImpl lookupHelper;", "modifier": "private", "type": "PersonLookupHelperImpl", "declarator": "lookupHelper", "var_name": "lookupHelper"}], "methods": [{"identifier": "setJsonMapper", "parameters": "(ObjectMapper jsonMapper)", "modifiers": "@Autowired public", "return": "void", "signature": "void setJsonMapper(ObjectMapper jsonMapper)", "full_signature": "@Autowired public void setJsonMapper(ObjectMapper jsonMapper)", "class_method_signature": "PeopleRESTControllerV50.setJsonMapper(ObjectMapper jsonMapper)", "testcase": false, "constructor": false}, {"identifier": "setPersonManager", "parameters": "(IPersonManager personManager)", "modifiers": "@Autowired public", "return": "void", "signature": "void setPersonManager(IPersonManager personManager)", "full_signature": "@Autowired public void setPersonManager(IPersonManager personManager)", "class_method_signature": "PeopleRESTControllerV50.setPersonManager(IPersonManager personManager)", "testcase": false, "constructor": false}, {"identifier": "setPersonLookupHelper", "parameters": "(PersonLookupHelperImpl lookupHelper)", "modifiers": "@Autowired(required = true) public", "return": "void", "signature": "void setPersonLookupHelper(PersonLookupHelperImpl lookupHelper)", "full_signature": "@Autowired(required = true) public void setPersonLookupHelper(PersonLookupHelperImpl lookupHelper)", "class_method_signature": "PeopleRESTControllerV50.setPersonLookupHelper(PersonLookupHelperImpl lookupHelper)", "testcase": false, "constructor": false}, {"identifier": "searchPeople", "parameters": "(\n            @RequestParam Map<String, Object> query,\n            HttpServletRequest request,\n            HttpServletResponse response)", "modifiers": "@RequestMapping(method = RequestMethod.GET) public", "return": "void", "signature": "void searchPeople(\n            @RequestParam Map<String, Object> query,\n            HttpServletRequest request,\n            HttpServletResponse response)", "full_signature": "@RequestMapping(method = RequestMethod.GET) public void searchPeople(\n            @RequestParam Map<String, Object> query,\n            HttpServletRequest request,\n            HttpServletResponse response)", "class_method_signature": "PeopleRESTControllerV50.searchPeople(\n            @RequestParam Map<String, Object> query,\n            HttpServletRequest request,\n            HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "getPerson", "parameters": "(\n            @PathVariable String username,\n            HttpServletRequest request,\n            HttpServletResponse response)", "modifiers": "@RequestMapping(value = \"/{username}\", method = RequestMethod.GET) public", "return": "ModelAndView", "signature": "ModelAndView getPerson(\n            @PathVariable String username,\n            HttpServletRequest request,\n            HttpServletResponse response)", "full_signature": "@RequestMapping(value = \"/{username}\", method = RequestMethod.GET) public ModelAndView getPerson(\n            @PathVariable String username,\n            HttpServletRequest request,\n            HttpServletResponse response)", "class_method_signature": "PeopleRESTControllerV50.getPerson(\n            @PathVariable String username,\n            HttpServletRequest request,\n            HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "getMe", "parameters": "(HttpServletRequest request, HttpServletResponse response)", "modifiers": "@RequestMapping(value = \"/me\", method = RequestMethod.GET) public", "return": "ModelAndView", "signature": "ModelAndView getMe(HttpServletRequest request, HttpServletResponse response)", "full_signature": "@RequestMapping(value = \"/me\", method = RequestMethod.GET) public ModelAndView getMe(HttpServletRequest request, HttpServletResponse response)", "class_method_signature": "PeopleRESTControllerV50.getMe(HttpServletRequest request, HttpServletResponse response)", "testcase": false, "constructor": false}], "file": "uPortal-api/uPortal-api-rest/src/main/java/org/apereo/portal/rest/PeopleRESTControllerV50.java"}, "focal_method": {"identifier": "getPerson", "parameters": "(\n            @PathVariable String username,\n            HttpServletRequest request,\n            HttpServletResponse response)", "modifiers": "@RequestMapping(value = \"/{username}\", method = RequestMethod.GET) public", "return": "ModelAndView", "body": "@RequestMapping(value = \"/{username}\", method = RequestMethod.GET)\n    public ModelAndView getPerson(\n            @PathVariable String username,\n            HttpServletRequest request,\n            HttpServletResponse response) {\n\n        final IPerson searcher = personManager.getPerson(request);\n        if (searcher == null) {\n            response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n            return null;\n        }\n\n        final IPersonAttributes person = lookupHelper.findPerson(searcher, username);\n        if (person == null) {\n            response.setStatus(HttpServletResponse.SC_NOT_FOUND);\n            return null;\n        }\n\n        return new ModelAndView(\"json\", person.getAttributes());\n    }", "signature": "ModelAndView getPerson(\n            @PathVariable String username,\n            HttpServletRequest request,\n            HttpServletResponse response)", "full_signature": "@RequestMapping(value = \"/{username}\", method = RequestMethod.GET) public ModelAndView getPerson(\n            @PathVariable String username,\n            HttpServletRequest request,\n            HttpServletResponse response)", "class_method_signature": "PeopleRESTControllerV50.getPerson(\n            @PathVariable String username,\n            HttpServletRequest request,\n            HttpServletResponse response)", "testcase": false, "constructor": false, "invocations": ["getPerson", "setStatus", "findPerson", "setStatus", "getAttributes"]}, "repository": {"repo_id": 2614085, "url": "https://github.com/Jasig/uPortal", "stars": 195, "created": "10/20/2011 3:34:22 PM +00:00", "updates": "2020-01-22T16:02:00+00:00", "fork": "False", "license": "licensed"}}