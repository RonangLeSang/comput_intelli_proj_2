{"test_class": {"identifier": "ServletFilterModuleContainerFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private FilterChain filterChain;", "modifier": "@Mock\n    private", "type": "FilterChain", "declarator": "filterChain", "var_name": "filterChain"}, {"original_string": "@Mock\n    private ServletModuleManager moduleManager;", "modifier": "@Mock\n    private", "type": "ServletModuleManager", "declarator": "moduleManager", "var_name": "moduleManager"}, {"original_string": "@Mock\n    private HttpServletRequest request;", "modifier": "@Mock\n    private", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private HttpServletResponse response;", "modifier": "@Mock\n    private", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}], "file": "servlet/src/test/java/org/maera/plugin/servlet/filter/ServletFilterModuleContainerFilterTest.java"}, "test_case": {"identifier": "testNoServletModuleManager", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNoServletModuleManager() throws IOException, ServletException {\n        MyFilter filter = new MyFilter(null);\n        filter.doFilter(request, response, filterChain);\n        verify(filterChain).doFilter(any(ServletRequest.class), any(ServletResponse.class));\n    }", "signature": "void testNoServletModuleManager()", "full_signature": "@Test public void testNoServletModuleManager()", "class_method_signature": "ServletFilterModuleContainerFilterTest.testNoServletModuleManager()", "testcase": true, "constructor": false, "invocations": ["doFilter", "doFilter", "verify", "any", "any"]}, "focal_class": {"identifier": "ServletFilterModuleContainerFilter", "superclass": "", "interfaces": "implements Filter", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(ServletFilterModuleContainerFilter.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(ServletFilterModuleContainerFilter.class)", "var_name": "log"}, {"original_string": "private FilterConfig filterConfig;", "modifier": "private", "type": "FilterConfig", "declarator": "filterConfig", "var_name": "filterConfig"}, {"original_string": "private FilterLocation location;", "modifier": "private", "type": "FilterLocation", "declarator": "location", "var_name": "location"}, {"original_string": "private FilterDispatcherCondition condition;", "modifier": "private", "type": "FilterDispatcherCondition", "declarator": "condition", "var_name": "condition"}], "methods": [{"identifier": "init", "parameters": "(FilterConfig filterConfig)", "modifiers": "public", "return": "void", "signature": "void init(FilterConfig filterConfig)", "full_signature": "public void init(FilterConfig filterConfig)", "class_method_signature": "ServletFilterModuleContainerFilter.init(FilterConfig filterConfig)", "testcase": false, "constructor": false}, {"identifier": "doFilter", "parameters": "(ServletRequest request, ServletResponse response, FilterChain chain)", "modifiers": "public", "return": "void", "signature": "void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)", "full_signature": "public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)", "class_method_signature": "ServletFilterModuleContainerFilter.doFilter(ServletRequest request, ServletResponse response, FilterChain chain)", "testcase": false, "constructor": false}, {"identifier": "doFilter", "parameters": "(HttpServletRequest request, HttpServletResponse response, final FilterChain chain)", "modifiers": "", "return": "void", "signature": "void doFilter(HttpServletRequest request, HttpServletResponse response, final FilterChain chain)", "full_signature": " void doFilter(HttpServletRequest request, HttpServletResponse response, final FilterChain chain)", "class_method_signature": "ServletFilterModuleContainerFilter.doFilter(HttpServletRequest request, HttpServletResponse response, final FilterChain chain)", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void destroy()", "full_signature": "public void destroy()", "class_method_signature": "ServletFilterModuleContainerFilter.destroy()", "testcase": false, "constructor": false}, {"identifier": "getServletModuleManager", "parameters": "()", "modifiers": "protected", "return": "ServletModuleManager", "signature": "ServletModuleManager getServletModuleManager()", "full_signature": "protected ServletModuleManager getServletModuleManager()", "class_method_signature": "ServletFilterModuleContainerFilter.getServletModuleManager()", "testcase": false, "constructor": false}, {"identifier": "getFilterConfig", "parameters": "()", "modifiers": "protected final", "return": "FilterConfig", "signature": "FilterConfig getFilterConfig()", "full_signature": "protected final FilterConfig getFilterConfig()", "class_method_signature": "ServletFilterModuleContainerFilter.getFilterConfig()", "testcase": false, "constructor": false}, {"identifier": "getFilterLocation", "parameters": "()", "modifiers": "protected final", "return": "FilterLocation", "signature": "FilterLocation getFilterLocation()", "full_signature": "protected final FilterLocation getFilterLocation()", "class_method_signature": "ServletFilterModuleContainerFilter.getFilterLocation()", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "(HttpServletRequest request)", "modifiers": "private static", "return": "String", "signature": "String getUri(HttpServletRequest request)", "full_signature": "private static String getUri(HttpServletRequest request)", "class_method_signature": "ServletFilterModuleContainerFilter.getUri(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "getServletPath", "parameters": "(HttpServletRequest request)", "modifiers": "private static", "return": "String", "signature": "String getServletPath(HttpServletRequest request)", "full_signature": "private static String getServletPath(HttpServletRequest request)", "class_method_signature": "ServletFilterModuleContainerFilter.getServletPath(HttpServletRequest request)", "testcase": false, "constructor": false}], "file": "servlet/src/main/java/org/maera/plugin/servlet/filter/ServletFilterModuleContainerFilter.java"}, "focal_method": {"identifier": "doFilter", "parameters": "(ServletRequest request, ServletResponse response, FilterChain chain)", "modifiers": "public", "return": "void", "body": "public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n        doFilter((HttpServletRequest) request, (HttpServletResponse) response, chain);\n    }", "signature": "void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)", "full_signature": "public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)", "class_method_signature": "ServletFilterModuleContainerFilter.doFilter(ServletRequest request, ServletResponse response, FilterChain chain)", "testcase": false, "constructor": false, "invocations": ["doFilter"]}, "repository": {"repo_id": 1181284, "url": "https://github.com/katasource/maera", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 966, "license": "licensed"}}