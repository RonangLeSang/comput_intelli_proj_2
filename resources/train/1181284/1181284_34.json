{"test_class": {"identifier": "BatchPluginResourceTest", "superclass": "", "interfaces": "", "fields": [], "file": "webresource/src/test/java/org/maera/plugin/webresource/BatchPluginResourceTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() {\n        final String moduleKey = \"test.plugin:webresources\";\n        final String type = \"js\";\n\n        final Map<String, String> params1 = new TreeMap<String, String>();\n        params1.put(\"key\", \"value\");\n        params1.put(\"foo\", \"bar\");\n        final BatchPluginResource batch1 = new BatchPluginResource(moduleKey, type, params1);\n\n        final Map<String, String> params2 = new TreeMap<String, String>();\n        params2.put(\"key\", \"value\");\n        params2.put(\"foo\", \"bar\");\n        final BatchPluginResource batch2 = new BatchPluginResource(moduleKey, type, params2);\n\n        final Map<String, String> params3 = new TreeMap<String, String>();\n        params3.put(\"key\", \"value\");\n        params3.put(\"foo\", \"bart\");\n        final BatchPluginResource batch3 = new BatchPluginResource(moduleKey, type, params3);\n\n        assertEquals(batch1, batch2);\n        assertNotSame(batch1, batch3);\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "BatchPluginResourceTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "put", "put", "put", "assertEquals", "assertNotSame"]}, "focal_class": {"identifier": "BatchPluginResource", "superclass": "", "interfaces": "implements DownloadableResource, PluginResource, BatchResource", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(BatchPluginResource.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(BatchPluginResource.class)", "var_name": "log"}, {"original_string": "static final String URL_PREFIX = PATH_SEPARATOR + SERVLET_PATH + PATH_SEPARATOR + \"batch\";", "modifier": "static final", "type": "String", "declarator": "URL_PREFIX = PATH_SEPARATOR + SERVLET_PATH + PATH_SEPARATOR + \"batch\"", "var_name": "URL_PREFIX"}, {"original_string": "final private String type;", "modifier": "final private", "type": "String", "declarator": "type", "var_name": "type"}, {"original_string": "final private String moduleCompleteKey;", "modifier": "final private", "type": "String", "declarator": "moduleCompleteKey", "var_name": "moduleCompleteKey"}, {"original_string": "final private Map<String, String> params;", "modifier": "final private", "type": "Map<String, String>", "declarator": "params", "var_name": "params"}, {"original_string": "final private String resourceName;", "modifier": "final private", "type": "String", "declarator": "resourceName", "var_name": "resourceName"}, {"original_string": "final private List<DownloadableResource> resources;", "modifier": "final private", "type": "List<DownloadableResource>", "declarator": "resources", "var_name": "resources"}], "methods": [{"identifier": "BatchPluginResource", "parameters": "(final String moduleCompleteKey, final String type, final Map<String, String> params)", "modifiers": "public", "return": "", "signature": " BatchPluginResource(final String moduleCompleteKey, final String type, final Map<String, String> params)", "full_signature": "public  BatchPluginResource(final String moduleCompleteKey, final String type, final Map<String, String> params)", "class_method_signature": "BatchPluginResource.BatchPluginResource(final String moduleCompleteKey, final String type, final Map<String, String> params)", "testcase": false, "constructor": true}, {"identifier": "BatchPluginResource", "parameters": "(final String resourceName, final String moduleCompleteKey, final String type, final Map<String, String> params)", "modifiers": "private", "return": "", "signature": " BatchPluginResource(final String resourceName, final String moduleCompleteKey, final String type, final Map<String, String> params)", "full_signature": "private  BatchPluginResource(final String resourceName, final String moduleCompleteKey, final String type, final Map<String, String> params)", "class_method_signature": "BatchPluginResource.BatchPluginResource(final String resourceName, final String moduleCompleteKey, final String type, final Map<String, String> params)", "testcase": false, "constructor": true}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "BatchPluginResource.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final DownloadableResource resource)", "modifiers": "public", "return": "void", "signature": "void add(final DownloadableResource resource)", "full_signature": "public void add(final DownloadableResource resource)", "class_method_signature": "BatchPluginResource.add(final DownloadableResource resource)", "testcase": false, "constructor": false}, {"identifier": "isResourceModified", "parameters": "(final HttpServletRequest request, final HttpServletResponse response)", "modifiers": "public", "return": "boolean", "signature": "boolean isResourceModified(final HttpServletRequest request, final HttpServletResponse response)", "full_signature": "public boolean isResourceModified(final HttpServletRequest request, final HttpServletResponse response)", "class_method_signature": "BatchPluginResource.isResourceModified(final HttpServletRequest request, final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "serveResource", "parameters": "(final HttpServletRequest request, final HttpServletResponse response)", "modifiers": "public", "return": "void", "signature": "void serveResource(final HttpServletRequest request, final HttpServletResponse response)", "full_signature": "public void serveResource(final HttpServletRequest request, final HttpServletResponse response)", "class_method_signature": "BatchPluginResource.serveResource(final HttpServletRequest request, final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "streamResource", "parameters": "(final OutputStream out)", "modifiers": "public", "return": "void", "signature": "void streamResource(final OutputStream out)", "full_signature": "public void streamResource(final OutputStream out)", "class_method_signature": "BatchPluginResource.streamResource(final OutputStream out)", "testcase": false, "constructor": false}, {"identifier": "writeNewLine", "parameters": "(final HttpServletResponse response)", "modifiers": "private", "return": "void", "signature": "void writeNewLine(final HttpServletResponse response)", "full_signature": "private void writeNewLine(final HttpServletResponse response)", "class_method_signature": "BatchPluginResource.writeNewLine(final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "writeNewLine", "parameters": "(final OutputStream out)", "modifiers": "private", "return": "void", "signature": "void writeNewLine(final OutputStream out)", "full_signature": "private void writeNewLine(final OutputStream out)", "class_method_signature": "BatchPluginResource.writeNewLine(final OutputStream out)", "testcase": false, "constructor": false}, {"identifier": "getContentType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getContentType()", "full_signature": "public String getContentType()", "class_method_signature": "BatchPluginResource.getContentType()", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String url, final Map<String, String> queryParams)", "modifiers": "public static", "return": "BatchPluginResource", "signature": "BatchPluginResource parse(String url, final Map<String, String> queryParams)", "full_signature": "public static BatchPluginResource parse(String url, final Map<String, String> queryParams)", "class_method_signature": "BatchPluginResource.parse(String url, final Map<String, String> queryParams)", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(final String url)", "modifiers": "public static", "return": "boolean", "signature": "boolean matches(final String url)", "full_signature": "public static boolean matches(final String url)", "class_method_signature": "BatchPluginResource.matches(final String url)", "testcase": false, "constructor": false}, {"identifier": "getUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUrl()", "full_signature": "public String getUrl()", "class_method_signature": "BatchPluginResource.getUrl()", "testcase": false, "constructor": false}, {"identifier": "addParamsToUrl", "parameters": "(StringBuilder sb, Map<String, String> params)", "modifiers": "protected", "return": "void", "signature": "void addParamsToUrl(StringBuilder sb, Map<String, String> params)", "full_signature": "protected void addParamsToUrl(StringBuilder sb, Map<String, String> params)", "class_method_signature": "BatchPluginResource.addParamsToUrl(StringBuilder sb, Map<String, String> params)", "testcase": false, "constructor": false}, {"identifier": "getResourceName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getResourceName()", "full_signature": "public String getResourceName()", "class_method_signature": "BatchPluginResource.getResourceName()", "testcase": false, "constructor": false}, {"identifier": "getParams", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getParams()", "full_signature": "public Map<String, String> getParams()", "class_method_signature": "BatchPluginResource.getParams()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "(WebResourceIntegration integration)", "modifiers": "public", "return": "String", "signature": "String getVersion(WebResourceIntegration integration)", "full_signature": "public String getVersion(WebResourceIntegration integration)", "class_method_signature": "BatchPluginResource.getVersion(WebResourceIntegration integration)", "testcase": false, "constructor": false}, {"identifier": "getModuleCompleteKey", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getModuleCompleteKey()", "full_signature": "public String getModuleCompleteKey()", "class_method_signature": "BatchPluginResource.getModuleCompleteKey()", "testcase": false, "constructor": false}, {"identifier": "isCacheSupported", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCacheSupported()", "full_signature": "public boolean isCacheSupported()", "class_method_signature": "BatchPluginResource.isCacheSupported()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getType()", "full_signature": "public String getType()", "class_method_signature": "BatchPluginResource.getType()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "BatchPluginResource.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "BatchPluginResource.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BatchPluginResource.toString()", "testcase": false, "constructor": false}], "file": "webresource/src/main/java/org/maera/plugin/webresource/BatchPluginResource.java"}, "focal_method": {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(final Object o) {\n        if (this == o) {\n            return true;\n        }\n        if ((o == null) || (getClass() != o.getClass())) {\n            return false;\n        }\n\n        final BatchPluginResource that = (BatchPluginResource) o;\n\n        if (moduleCompleteKey != null ? !moduleCompleteKey.equals(that.moduleCompleteKey) : that.moduleCompleteKey != null) {\n            return false;\n        }\n        if (params != null ? !params.equals(that.params) : that.params != null) {\n            return false;\n        }\n        if (type != null ? !type.equals(that.type) : that.type != null) {\n            return false;\n        }\n\n        return true;\n    }", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "BatchPluginResource.equals(final Object o)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "equals", "equals", "equals"]}, "repository": {"repo_id": 1181284, "url": "https://github.com/katasource/maera", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 966, "license": "licensed"}}