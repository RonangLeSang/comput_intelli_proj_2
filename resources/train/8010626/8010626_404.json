{"test_class": {"identifier": "RepositoryCollectionRegistryTest", "superclass": "extends AbstractMockitoTest", "interfaces": "", "fields": [{"original_string": "@Mock RepositoryCollectionDecoratorFactory repositoryCollectionDecoratorFactory;", "modifier": "@Mock", "type": "RepositoryCollectionDecoratorFactory", "declarator": "repositoryCollectionDecoratorFactory", "var_name": "repositoryCollectionDecoratorFactory"}, {"original_string": "private RepositoryCollectionRegistry repositoryCollectionRegistry;", "modifier": "private", "type": "RepositoryCollectionRegistry", "declarator": "repositoryCollectionRegistry", "var_name": "repositoryCollectionRegistry"}], "file": "molgenis-data/src/test/java/org/molgenis/data/RepositoryCollectionRegistryTest.java"}, "test_case": {"identifier": "testHasRepositoryCollection", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void testHasRepositoryCollection() {\n    RepositoryCollection repositoryCollection = mock(RepositoryCollection.class);\n    String repositoryCollectionName = \"MyRepositoryCollectionName\";\n    when(repositoryCollection.getName()).thenReturn(repositoryCollectionName);\n    repositoryCollectionRegistry.addRepositoryCollection(repositoryCollection);\n    assertTrue(repositoryCollectionRegistry.hasRepositoryCollection(repositoryCollectionName));\n  }", "signature": "void testHasRepositoryCollection()", "full_signature": "@Test void testHasRepositoryCollection()", "class_method_signature": "RepositoryCollectionRegistryTest.testHasRepositoryCollection()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getName", "addRepositoryCollection", "assertTrue", "hasRepositoryCollection"]}, "focal_class": {"identifier": "RepositoryCollectionRegistry", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final RepositoryCollectionDecoratorFactory repoCollectionDecoratorFactory;", "modifier": "private final", "type": "RepositoryCollectionDecoratorFactory", "declarator": "repoCollectionDecoratorFactory", "var_name": "repoCollectionDecoratorFactory"}, {"original_string": "private Map<String, RepositoryCollection> repoCollectionMap;", "modifier": "private", "type": "Map<String, RepositoryCollection>", "declarator": "repoCollectionMap", "var_name": "repoCollectionMap"}, {"original_string": "private RepositoryCollection defaultRepoCollection;", "modifier": "private", "type": "RepositoryCollection", "declarator": "defaultRepoCollection", "var_name": "defaultRepoCollection"}], "methods": [{"identifier": "RepositoryCollectionRegistry", "parameters": "(\n      RepositoryCollectionDecoratorFactory repoCollectionDecoratorFactory)", "modifiers": "public", "return": "", "signature": " RepositoryCollectionRegistry(\n      RepositoryCollectionDecoratorFactory repoCollectionDecoratorFactory)", "full_signature": "public  RepositoryCollectionRegistry(\n      RepositoryCollectionDecoratorFactory repoCollectionDecoratorFactory)", "class_method_signature": "RepositoryCollectionRegistry.RepositoryCollectionRegistry(\n      RepositoryCollectionDecoratorFactory repoCollectionDecoratorFactory)", "testcase": false, "constructor": true}, {"identifier": "getRepositoryCollections", "parameters": "()", "modifiers": "public", "return": "Stream<RepositoryCollection>", "signature": "Stream<RepositoryCollection> getRepositoryCollections()", "full_signature": "public Stream<RepositoryCollection> getRepositoryCollections()", "class_method_signature": "RepositoryCollectionRegistry.getRepositoryCollections()", "testcase": false, "constructor": false}, {"identifier": "addRepositoryCollection", "parameters": "(RepositoryCollection repoCollection)", "modifiers": "public", "return": "void", "signature": "void addRepositoryCollection(RepositoryCollection repoCollection)", "full_signature": "public void addRepositoryCollection(RepositoryCollection repoCollection)", "class_method_signature": "RepositoryCollectionRegistry.addRepositoryCollection(RepositoryCollection repoCollection)", "testcase": false, "constructor": false}, {"identifier": "getRepositoryCollection", "parameters": "(String name)", "modifiers": "public", "return": "RepositoryCollection", "signature": "RepositoryCollection getRepositoryCollection(String name)", "full_signature": "public RepositoryCollection getRepositoryCollection(String name)", "class_method_signature": "RepositoryCollectionRegistry.getRepositoryCollection(String name)", "testcase": false, "constructor": false}, {"identifier": "hasRepositoryCollection", "parameters": "(String name)", "modifiers": "public", "return": "boolean", "signature": "boolean hasRepositoryCollection(String name)", "full_signature": "public boolean hasRepositoryCollection(String name)", "class_method_signature": "RepositoryCollectionRegistry.hasRepositoryCollection(String name)", "testcase": false, "constructor": false}, {"identifier": "getDefaultRepoCollection", "parameters": "()", "modifiers": "public", "return": "RepositoryCollection", "signature": "RepositoryCollection getDefaultRepoCollection()", "full_signature": "public RepositoryCollection getDefaultRepoCollection()", "class_method_signature": "RepositoryCollectionRegistry.getDefaultRepoCollection()", "testcase": false, "constructor": false}, {"identifier": "setDefaultRepoCollection", "parameters": "(RepositoryCollection defaultRepoCollection)", "modifiers": "", "return": "void", "signature": "void setDefaultRepoCollection(RepositoryCollection defaultRepoCollection)", "full_signature": " void setDefaultRepoCollection(RepositoryCollection defaultRepoCollection)", "class_method_signature": "RepositoryCollectionRegistry.setDefaultRepoCollection(RepositoryCollection defaultRepoCollection)", "testcase": false, "constructor": false}], "file": "molgenis-data/src/main/java/org/molgenis/data/RepositoryCollectionRegistry.java"}, "focal_method": {"identifier": "hasRepositoryCollection", "parameters": "(String name)", "modifiers": "public", "return": "boolean", "body": "public boolean hasRepositoryCollection(String name) {\n    return repoCollectionMap.containsKey(name);\n  }", "signature": "boolean hasRepositoryCollection(String name)", "full_signature": "public boolean hasRepositoryCollection(String name)", "class_method_signature": "RepositoryCollectionRegistry.hasRepositoryCollection(String name)", "testcase": false, "constructor": false, "invocations": ["containsKey"]}, "repository": {"repo_id": 8010626, "url": "https://github.com/molgenis/molgenis", "language": "Java", "is_fork": false, "fork_count": 96, "stargazer_count": 82, "size": 168771, "license": "licensed"}}