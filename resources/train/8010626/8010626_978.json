{"test_class": {"identifier": "PermissionServiceImplTest", "superclass": "extends AbstractMockitoTest", "interfaces": "", "fields": [{"original_string": "@Mock MutableAclService mutableAclService;", "modifier": "@Mock", "type": "MutableAclService", "declarator": "mutableAclService", "var_name": "mutableAclService"}, {"original_string": "@Mock PermissionInheritanceResolver inheritanceResolver;", "modifier": "@Mock", "type": "PermissionInheritanceResolver", "declarator": "inheritanceResolver", "var_name": "inheritanceResolver"}, {"original_string": "@Mock ObjectIdentityService objectIdentityService;", "modifier": "@Mock", "type": "ObjectIdentityService", "declarator": "objectIdentityService", "var_name": "objectIdentityService"}, {"original_string": "@Mock DataService dataService;", "modifier": "@Mock", "type": "DataService", "declarator": "dataService", "var_name": "dataService"}, {"original_string": "@Mock MutableAclClassService mutableAclClassService;", "modifier": "@Mock", "type": "MutableAclClassService", "declarator": "mutableAclClassService", "var_name": "mutableAclClassService"}, {"original_string": "@Mock UserRoleTools userRoleTools;", "modifier": "@Mock", "type": "UserRoleTools", "declarator": "userRoleTools", "var_name": "userRoleTools"}, {"original_string": "@Mock EntityHelper entityHelper;", "modifier": "@Mock", "type": "EntityHelper", "declarator": "entityHelper", "var_name": "entityHelper"}, {"original_string": "@Mock UserPermissionEvaluator userPermissionEvaluator;", "modifier": "@Mock", "type": "UserPermissionEvaluator", "declarator": "userPermissionEvaluator", "var_name": "userPermissionEvaluator"}, {"original_string": "private PermissionServiceImpl permissionsApiService;", "modifier": "private", "type": "PermissionServiceImpl", "declarator": "permissionsApiService", "var_name": "permissionsApiService"}], "file": "molgenis-data-security/src/test/java/org/molgenis/data/security/permission/PermissionServiceImplTest.java"}, "test_case": {"identifier": "testGetSuitablePermissionsForTypePackage", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void testGetSuitablePermissionsForTypePackage() {\n    assertEquals(\n        newHashSet(READMETA, COUNT, READ, WRITE, WRITEMETA),\n        permissionsApiService.getSuitablePermissionsForType(PACKAGE));\n  }", "signature": "void testGetSuitablePermissionsForTypePackage()", "full_signature": "@Test void testGetSuitablePermissionsForTypePackage()", "class_method_signature": "PermissionServiceImplTest.testGetSuitablePermissionsForTypePackage()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "newHashSet", "getSuitablePermissionsForType"]}, "focal_class": {"identifier": "PermissionServiceImpl", "superclass": "", "interfaces": "implements PermissionService", "fields": [{"original_string": "private static final String PLUGIN = \"plugin\";", "modifier": "private static final", "type": "String", "declarator": "PLUGIN = \"plugin\"", "var_name": "PLUGIN"}, {"original_string": "private final MutableAclService mutableAclService;", "modifier": "private final", "type": "MutableAclService", "declarator": "mutableAclService", "var_name": "mutableAclService"}, {"original_string": "private final PermissionInheritanceResolver inheritanceResolver;", "modifier": "private final", "type": "PermissionInheritanceResolver", "declarator": "inheritanceResolver", "var_name": "inheritanceResolver"}, {"original_string": "private final ObjectIdentityService objectIdentityService;", "modifier": "private final", "type": "ObjectIdentityService", "declarator": "objectIdentityService", "var_name": "objectIdentityService"}, {"original_string": "private final DataService dataService;", "modifier": "private final", "type": "DataService", "declarator": "dataService", "var_name": "dataService"}, {"original_string": "private final MutableAclClassService mutableAclClassService;", "modifier": "private final", "type": "MutableAclClassService", "declarator": "mutableAclClassService", "var_name": "mutableAclClassService"}, {"original_string": "private final UserRoleTools userRoleTools;", "modifier": "private final", "type": "UserRoleTools", "declarator": "userRoleTools", "var_name": "userRoleTools"}, {"original_string": "private final EntityHelper entityHelper;", "modifier": "private final", "type": "EntityHelper", "declarator": "entityHelper", "var_name": "entityHelper"}, {"original_string": "private final UserPermissionEvaluator userPermissionEvaluator;", "modifier": "private final", "type": "UserPermissionEvaluator", "declarator": "userPermissionEvaluator", "var_name": "userPermissionEvaluator"}], "methods": [{"identifier": "PermissionServiceImpl", "parameters": "(\n      MutableAclService mutableAclService,\n      PermissionInheritanceResolver inheritanceResolver,\n      ObjectIdentityService objectIdentityService,\n      DataService dataService,\n      MutableAclClassService mutableAclClassService,\n      UserRoleTools userRoleTools,\n      EntityHelper entityHelper,\n      UserPermissionEvaluator userPermissionEvaluator)", "modifiers": "public", "return": "", "signature": " PermissionServiceImpl(\n      MutableAclService mutableAclService,\n      PermissionInheritanceResolver inheritanceResolver,\n      ObjectIdentityService objectIdentityService,\n      DataService dataService,\n      MutableAclClassService mutableAclClassService,\n      UserRoleTools userRoleTools,\n      EntityHelper entityHelper,\n      UserPermissionEvaluator userPermissionEvaluator)", "full_signature": "public  PermissionServiceImpl(\n      MutableAclService mutableAclService,\n      PermissionInheritanceResolver inheritanceResolver,\n      ObjectIdentityService objectIdentityService,\n      DataService dataService,\n      MutableAclClassService mutableAclClassService,\n      UserRoleTools userRoleTools,\n      EntityHelper entityHelper,\n      UserPermissionEvaluator userPermissionEvaluator)", "class_method_signature": "PermissionServiceImpl.PermissionServiceImpl(\n      MutableAclService mutableAclService,\n      PermissionInheritanceResolver inheritanceResolver,\n      ObjectIdentityService objectIdentityService,\n      DataService dataService,\n      MutableAclClassService mutableAclClassService,\n      UserRoleTools userRoleTools,\n      EntityHelper entityHelper,\n      UserPermissionEvaluator userPermissionEvaluator)", "testcase": false, "constructor": true}, {"identifier": "getLabelledTypes", "parameters": "()", "modifiers": "@Override public", "return": "Set<LabelledType>", "signature": "Set<LabelledType> getLabelledTypes()", "full_signature": "@Override public Set<LabelledType> getLabelledTypes()", "class_method_signature": "PermissionServiceImpl.getLabelledTypes()", "testcase": false, "constructor": false}, {"identifier": "getObjects", "parameters": "(String typeId, int page, int pageSize)", "modifiers": "@Override public", "return": "Set<LabelledObject>", "signature": "Set<LabelledObject> getObjects(String typeId, int page, int pageSize)", "full_signature": "@Override public Set<LabelledObject> getObjects(String typeId, int page, int pageSize)", "class_method_signature": "PermissionServiceImpl.getObjects(String typeId, int page, int pageSize)", "testcase": false, "constructor": false}, {"identifier": "getLabelledObject", "parameters": "(ObjectIdentity objectIdentity)", "modifiers": "private", "return": "LabelledObject", "signature": "LabelledObject getLabelledObject(ObjectIdentity objectIdentity)", "full_signature": "private LabelledObject getLabelledObject(ObjectIdentity objectIdentity)", "class_method_signature": "PermissionServiceImpl.getLabelledObject(ObjectIdentity objectIdentity)", "testcase": false, "constructor": false}, {"identifier": "getSuitablePermissionsForType", "parameters": "(String typeId)", "modifiers": "@Override public", "return": "Set<PermissionSet>", "signature": "Set<PermissionSet> getSuitablePermissionsForType(String typeId)", "full_signature": "@Override public Set<PermissionSet> getSuitablePermissionsForType(String typeId)", "class_method_signature": "PermissionServiceImpl.getSuitablePermissionsForType(String typeId)", "testcase": false, "constructor": false}, {"identifier": "getPermissionsForObject", "parameters": "(\n      ObjectIdentity objectIdentity, Set<Sid> sids, boolean isReturnInheritedPermissions)", "modifiers": "@Override public", "return": "Set<LabelledPermission>", "signature": "Set<LabelledPermission> getPermissionsForObject(\n      ObjectIdentity objectIdentity, Set<Sid> sids, boolean isReturnInheritedPermissions)", "full_signature": "@Override public Set<LabelledPermission> getPermissionsForObject(\n      ObjectIdentity objectIdentity, Set<Sid> sids, boolean isReturnInheritedPermissions)", "class_method_signature": "PermissionServiceImpl.getPermissionsForObject(\n      ObjectIdentity objectIdentity, Set<Sid> sids, boolean isReturnInheritedPermissions)", "testcase": false, "constructor": false}, {"identifier": "checkTypeExists", "parameters": "(String type)", "modifiers": "private", "return": "void", "signature": "void checkTypeExists(String type)", "full_signature": "private void checkTypeExists(String type)", "class_method_signature": "PermissionServiceImpl.checkTypeExists(String type)", "testcase": false, "constructor": false}, {"identifier": "getPermissions", "parameters": "(Set<Sid> sids, boolean isReturnInherited)", "modifiers": "@Override public", "return": "Set<LabelledPermission>", "signature": "Set<LabelledPermission> getPermissions(Set<Sid> sids, boolean isReturnInherited)", "full_signature": "@Override public Set<LabelledPermission> getPermissions(Set<Sid> sids, boolean isReturnInherited)", "class_method_signature": "PermissionServiceImpl.getPermissions(Set<Sid> sids, boolean isReturnInherited)", "testcase": false, "constructor": false}, {"identifier": "getPermissionsForType", "parameters": "(\n      String typeId, Set<Sid> sids, int page, int pageSize)", "modifiers": "@Override public", "return": "Map<String, Set<LabelledPermission>>", "signature": "Map<String, Set<LabelledPermission>> getPermissionsForType(\n      String typeId, Set<Sid> sids, int page, int pageSize)", "full_signature": "@Override public Map<String, Set<LabelledPermission>> getPermissionsForType(\n      String typeId, Set<Sid> sids, int page, int pageSize)", "class_method_signature": "PermissionServiceImpl.getPermissionsForType(\n      String typeId, Set<Sid> sids, int page, int pageSize)", "testcase": false, "constructor": false}, {"identifier": "getPermissionsForType", "parameters": "(\n      String typeId, Set<Sid> sids, boolean isReturnInherited)", "modifiers": "@Override public", "return": "Map<String, Set<LabelledPermission>>", "signature": "Map<String, Set<LabelledPermission>> getPermissionsForType(\n      String typeId, Set<Sid> sids, boolean isReturnInherited)", "full_signature": "@Override public Map<String, Set<LabelledPermission>> getPermissionsForType(\n      String typeId, Set<Sid> sids, boolean isReturnInherited)", "class_method_signature": "PermissionServiceImpl.getPermissionsForType(\n      String typeId, Set<Sid> sids, boolean isReturnInherited)", "testcase": false, "constructor": false}, {"identifier": "getObjectIdentities", "parameters": "(\n      String typeId, Set<Sid> sids, boolean isReturnInherited)", "modifiers": "private", "return": "List<ObjectIdentity>", "signature": "List<ObjectIdentity> getObjectIdentities(\n      String typeId, Set<Sid> sids, boolean isReturnInherited)", "full_signature": "private List<ObjectIdentity> getObjectIdentities(\n      String typeId, Set<Sid> sids, boolean isReturnInherited)", "class_method_signature": "PermissionServiceImpl.getObjectIdentities(\n      String typeId, Set<Sid> sids, boolean isReturnInherited)", "testcase": false, "constructor": false}, {"identifier": "readAcls", "parameters": "(Set<Sid> sids, List<ObjectIdentity> objectIdentities)", "modifiers": "private", "return": "Map<ObjectIdentity, Acl>", "signature": "Map<ObjectIdentity, Acl> readAcls(Set<Sid> sids, List<ObjectIdentity> objectIdentities)", "full_signature": "private Map<ObjectIdentity, Acl> readAcls(Set<Sid> sids, List<ObjectIdentity> objectIdentities)", "class_method_signature": "PermissionServiceImpl.readAcls(Set<Sid> sids, List<ObjectIdentity> objectIdentities)", "testcase": false, "constructor": false}, {"identifier": "createAcl", "parameters": "(ObjectIdentity objectIdentity)", "modifiers": "@Override @Transactional public", "return": "void", "signature": "void createAcl(ObjectIdentity objectIdentity)", "full_signature": "@Override @Transactional public void createAcl(ObjectIdentity objectIdentity)", "class_method_signature": "PermissionServiceImpl.createAcl(ObjectIdentity objectIdentity)", "testcase": false, "constructor": false}, {"identifier": "createPermission", "parameters": "(Permission permission)", "modifiers": "@Override @Transactional public", "return": "void", "signature": "void createPermission(Permission permission)", "full_signature": "@Override @Transactional public void createPermission(Permission permission)", "class_method_signature": "PermissionServiceImpl.createPermission(Permission permission)", "testcase": false, "constructor": false}, {"identifier": "createPermissions", "parameters": "(Set<Permission> permissions)", "modifiers": "@Override @Transactional public", "return": "void", "signature": "void createPermissions(Set<Permission> permissions)", "full_signature": "@Override @Transactional public void createPermissions(Set<Permission> permissions)", "class_method_signature": "PermissionServiceImpl.createPermissions(Set<Permission> permissions)", "testcase": false, "constructor": false}, {"identifier": "updatePermission", "parameters": "(Permission permission)", "modifiers": "@Override @Transactional public", "return": "void", "signature": "void updatePermission(Permission permission)", "full_signature": "@Override @Transactional public void updatePermission(Permission permission)", "class_method_signature": "PermissionServiceImpl.updatePermission(Permission permission)", "testcase": false, "constructor": false}, {"identifier": "updatePermissions", "parameters": "(Set<Permission> permissions)", "modifiers": "@Override @Transactional public", "return": "void", "signature": "void updatePermissions(Set<Permission> permissions)", "full_signature": "@Override @Transactional public void updatePermissions(Set<Permission> permissions)", "class_method_signature": "PermissionServiceImpl.updatePermissions(Set<Permission> permissions)", "testcase": false, "constructor": false}, {"identifier": "deletePermission", "parameters": "(Sid sid, ObjectIdentity objectIdentity)", "modifiers": "@Override @Transactional public", "return": "void", "signature": "void deletePermission(Sid sid, ObjectIdentity objectIdentity)", "full_signature": "@Override @Transactional public void deletePermission(Sid sid, ObjectIdentity objectIdentity)", "class_method_signature": "PermissionServiceImpl.deletePermission(Sid sid, ObjectIdentity objectIdentity)", "testcase": false, "constructor": false}, {"identifier": "addType", "parameters": "(String typeId)", "modifiers": "@Override @Transactional public", "return": "void", "signature": "void addType(String typeId)", "full_signature": "@Override @Transactional public void addType(String typeId)", "class_method_signature": "PermissionServiceImpl.addType(String typeId)", "testcase": false, "constructor": false}, {"identifier": "deleteType", "parameters": "(String typeId)", "modifiers": "@Override @Transactional public", "return": "void", "signature": "void deleteType(String typeId)", "full_signature": "@Override @Transactional public void deleteType(String typeId)", "class_method_signature": "PermissionServiceImpl.deleteType(String typeId)", "testcase": false, "constructor": false}, {"identifier": "exists", "parameters": "(ObjectIdentity objectIdentity, Sid sid)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean exists(ObjectIdentity objectIdentity, Sid sid)", "full_signature": "@Override public boolean exists(ObjectIdentity objectIdentity, Sid sid)", "class_method_signature": "PermissionServiceImpl.exists(ObjectIdentity objectIdentity, Sid sid)", "testcase": false, "constructor": false}, {"identifier": "deleteAce", "parameters": "(Sid sid, MutableAcl acl)", "modifiers": "private", "return": "void", "signature": "void deleteAce(Sid sid, MutableAcl acl)", "full_signature": "private void deleteAce(Sid sid, MutableAcl acl)", "class_method_signature": "PermissionServiceImpl.deleteAce(Sid sid, MutableAcl acl)", "testcase": false, "constructor": false}, {"identifier": "getPermissions", "parameters": "(\n      Map<ObjectIdentity, Acl> acls,\n      List<ObjectIdentity> objectIdentities,\n      Set<Sid> sids,\n      boolean isReturnInheritedPermissions)", "modifiers": "private", "return": "Map<String, Set<LabelledPermission>>", "signature": "Map<String, Set<LabelledPermission>> getPermissions(\n      Map<ObjectIdentity, Acl> acls,\n      List<ObjectIdentity> objectIdentities,\n      Set<Sid> sids,\n      boolean isReturnInheritedPermissions)", "full_signature": "private Map<String, Set<LabelledPermission>> getPermissions(\n      Map<ObjectIdentity, Acl> acls,\n      List<ObjectIdentity> objectIdentities,\n      Set<Sid> sids,\n      boolean isReturnInheritedPermissions)", "class_method_signature": "PermissionServiceImpl.getPermissions(\n      Map<ObjectIdentity, Acl> acls,\n      List<ObjectIdentity> objectIdentities,\n      Set<Sid> sids,\n      boolean isReturnInheritedPermissions)", "testcase": false, "constructor": false}, {"identifier": "getPermissionResponses", "parameters": "(\n      Acl acl, boolean isReturnInheritedPermissions, Set<Sid> sids)", "modifiers": "private", "return": "Set<LabelledPermission>", "signature": "Set<LabelledPermission> getPermissionResponses(\n      Acl acl, boolean isReturnInheritedPermissions, Set<Sid> sids)", "full_signature": "private Set<LabelledPermission> getPermissionResponses(\n      Acl acl, boolean isReturnInheritedPermissions, Set<Sid> sids)", "class_method_signature": "PermissionServiceImpl.getPermissionResponses(\n      Acl acl, boolean isReturnInheritedPermissions, Set<Sid> sids)", "testcase": false, "constructor": false}, {"identifier": "getPermissionResponsesForSingleSid", "parameters": "(\n      Acl acl, boolean isReturnInheritedPermissions, Set<LabelledPermission> result, Sid sid)", "modifiers": "private", "return": "void", "signature": "void getPermissionResponsesForSingleSid(\n      Acl acl, boolean isReturnInheritedPermissions, Set<LabelledPermission> result, Sid sid)", "full_signature": "private void getPermissionResponsesForSingleSid(\n      Acl acl, boolean isReturnInheritedPermissions, Set<LabelledPermission> result, Sid sid)", "class_method_signature": "PermissionServiceImpl.getPermissionResponsesForSingleSid(\n      Acl acl, boolean isReturnInheritedPermissions, Set<LabelledPermission> result, Sid sid)", "testcase": false, "constructor": false}], "file": "molgenis-data-security/src/main/java/org/molgenis/data/security/permission/PermissionServiceImpl.java"}, "focal_method": {"identifier": "getSuitablePermissionsForType", "parameters": "(String typeId)", "modifiers": "@Override public", "return": "Set<PermissionSet>", "body": "@Override\n  public Set<PermissionSet> getSuitablePermissionsForType(String typeId) {\n    entityHelper.checkEntityTypeExists(typeId);\n    Set<PermissionSet> permissions;\n    switch (typeId) {\n      case EntityTypeIdentity.ENTITY_TYPE:\n      case PackageIdentity.PACKAGE:\n      case GroupIdentity.GROUP:\n        permissions =\n            Sets.newHashSet(\n                PermissionSet.READMETA,\n                PermissionSet.COUNT,\n                PermissionSet.READ,\n                PermissionSet.WRITE,\n                PermissionSet.WRITEMETA);\n        break;\n      case PLUGIN:\n        permissions = Sets.newHashSet(PermissionSet.READ);\n        break;\n      default: // RLS\n        permissions = Sets.newHashSet(PermissionSet.READ, PermissionSet.WRITE);\n        break;\n    }\n    return permissions;\n  }", "signature": "Set<PermissionSet> getSuitablePermissionsForType(String typeId)", "full_signature": "@Override public Set<PermissionSet> getSuitablePermissionsForType(String typeId)", "class_method_signature": "PermissionServiceImpl.getSuitablePermissionsForType(String typeId)", "testcase": false, "constructor": false, "invocations": ["checkEntityTypeExists", "newHashSet", "newHashSet", "newHashSet"]}, "repository": {"repo_id": 8010626, "url": "https://github.com/molgenis/molgenis", "language": "Java", "is_fork": false, "fork_count": 96, "stargazer_count": 82, "size": 168771, "license": "licensed"}}