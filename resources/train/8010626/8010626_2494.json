{"test_class": {"identifier": "TokenExtractorTest", "superclass": "extends AbstractMockitoTest", "interfaces": "", "fields": [{"original_string": "private static final String TEST_TOKEN = \"thetoken\";", "modifier": "private static final", "type": "String", "declarator": "TEST_TOKEN = \"thetoken\"", "var_name": "TEST_TOKEN"}, {"original_string": "private TokenExtractor tokenExtractor = new TokenExtractor();", "modifier": "private", "type": "TokenExtractor", "declarator": "tokenExtractor = new TokenExtractor()", "var_name": "tokenExtractor"}, {"original_string": "@Mock private MethodParameter methodParameter;", "modifier": "@Mock private", "type": "MethodParameter", "declarator": "methodParameter", "var_name": "methodParameter"}, {"original_string": "@Mock private NativeWebRequest webRequest;", "modifier": "@Mock private", "type": "NativeWebRequest", "declarator": "webRequest", "var_name": "webRequest"}, {"original_string": "@Mock private HttpServletRequest request;", "modifier": "@Mock private", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock private TokenParam tokenParameter;", "modifier": "@Mock private", "type": "TokenParam", "declarator": "tokenParameter", "var_name": "tokenParameter"}], "file": "molgenis-security/src/test/java/org/molgenis/security/token/TokenExtractorTest.java"}, "test_case": {"identifier": "testResolveArgumentNoTokenRequired", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void testResolveArgumentNoTokenRequired() throws Exception {\n    when(methodParameter.getParameterAnnotation(TokenParam.class)).thenReturn(tokenParameter);\n    when(tokenParameter.required()).thenReturn(true);\n    Exception exception =\n        assertThrows(\n            ServletRequestBindingException.class,\n            () -> tokenExtractor.resolveArgument(methodParameter, null, webRequest, null));\n    assertThat(exception.getMessage())\n        .containsPattern(\n            \"Missing molgenis token\\\\. Token should either be present in the x-molgenis-token request header or the molgenis-token parameter\\\\.\");\n  }", "signature": "void testResolveArgumentNoTokenRequired()", "full_signature": "@Test void testResolveArgumentNoTokenRequired()", "class_method_signature": "TokenExtractorTest.testResolveArgumentNoTokenRequired()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getParameterAnnotation", "thenReturn", "when", "required", "assertThrows", "resolveArgument", "containsPattern", "assertThat", "getMessage"]}, "focal_class": {"identifier": "TokenExtractor", "superclass": "", "interfaces": "implements HandlerMethodArgumentResolver", "fields": [{"original_string": "public static final String TOKEN_HEADER = \"x-molgenis-token\";", "modifier": "public static final", "type": "String", "declarator": "TOKEN_HEADER = \"x-molgenis-token\"", "var_name": "TOKEN_HEADER"}, {"original_string": "public static final String TOKEN_PARAMETER = \"molgenis-token\";", "modifier": "public static final", "type": "String", "declarator": "TOKEN_PARAMETER = \"molgenis-token\"", "var_name": "TOKEN_PARAMETER"}], "methods": [{"identifier": "getToken", "parameters": "(HttpServletRequest request)", "modifiers": "public static", "return": "String", "signature": "String getToken(HttpServletRequest request)", "full_signature": "public static String getToken(HttpServletRequest request)", "class_method_signature": "TokenExtractor.getToken(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "resolveArgument", "parameters": "(\n      MethodParameter parameter,\n      @Nullable @CheckForNull ModelAndViewContainer mavContainer,\n      NativeWebRequest webRequest,\n      @Nullable @CheckForNull WebDataBinderFactory binderFactory)", "modifiers": "@SuppressWarnings(\"java:S2259\") // we use supportsParameter to check if the parameter is available @Override public @Nullable @CheckForNull", "return": "Object", "signature": "Object resolveArgument(\n      MethodParameter parameter,\n      @Nullable @CheckForNull ModelAndViewContainer mavContainer,\n      NativeWebRequest webRequest,\n      @Nullable @CheckForNull WebDataBinderFactory binderFactory)", "full_signature": "@SuppressWarnings(\"java:S2259\") // we use supportsParameter to check if the parameter is available @Override public @Nullable @CheckForNull Object resolveArgument(\n      MethodParameter parameter,\n      @Nullable @CheckForNull ModelAndViewContainer mavContainer,\n      NativeWebRequest webRequest,\n      @Nullable @CheckForNull WebDataBinderFactory binderFactory)", "class_method_signature": "TokenExtractor.resolveArgument(\n      MethodParameter parameter,\n      @Nullable @CheckForNull ModelAndViewContainer mavContainer,\n      NativeWebRequest webRequest,\n      @Nullable @CheckForNull WebDataBinderFactory binderFactory)", "testcase": false, "constructor": false}, {"identifier": "supportsParameter", "parameters": "(MethodParameter parameter)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsParameter(MethodParameter parameter)", "full_signature": "@Override public boolean supportsParameter(MethodParameter parameter)", "class_method_signature": "TokenExtractor.supportsParameter(MethodParameter parameter)", "testcase": false, "constructor": false}, {"identifier": "getTokenInternal", "parameters": "(String tokenHeader, String tokenParam, boolean required)", "modifiers": "private static", "return": "String", "signature": "String getTokenInternal(String tokenHeader, String tokenParam, boolean required)", "full_signature": "private static String getTokenInternal(String tokenHeader, String tokenParam, boolean required)", "class_method_signature": "TokenExtractor.getTokenInternal(String tokenHeader, String tokenParam, boolean required)", "testcase": false, "constructor": false}, {"identifier": "getTokenInternal", "parameters": "(String tokenHeader, String tokenParam)", "modifiers": "private static", "return": "String", "signature": "String getTokenInternal(String tokenHeader, String tokenParam)", "full_signature": "private static String getTokenInternal(String tokenHeader, String tokenParam)", "class_method_signature": "TokenExtractor.getTokenInternal(String tokenHeader, String tokenParam)", "testcase": false, "constructor": false}], "file": "molgenis-security/src/main/java/org/molgenis/security/token/TokenExtractor.java"}, "focal_method": {"identifier": "resolveArgument", "parameters": "(\n      MethodParameter parameter,\n      @Nullable @CheckForNull ModelAndViewContainer mavContainer,\n      NativeWebRequest webRequest,\n      @Nullable @CheckForNull WebDataBinderFactory binderFactory)", "modifiers": "@SuppressWarnings(\"java:S2259\") // we use supportsParameter to check if the parameter is available @Override public @Nullable @CheckForNull", "return": "Object", "body": "@SuppressWarnings(\"java:S2259\") // we use supportsParameter to check if the parameter is available\n  @Override\n  public @Nullable @CheckForNull Object resolveArgument(\n      MethodParameter parameter,\n      @Nullable @CheckForNull ModelAndViewContainer mavContainer,\n      NativeWebRequest webRequest,\n      @Nullable @CheckForNull WebDataBinderFactory binderFactory)\n      throws Exception {\n    return getTokenInternal(\n        webRequest.getHeader(TOKEN_HEADER),\n        webRequest.getParameter(TOKEN_PARAMETER),\n        parameter.getParameterAnnotation(TokenParam.class).required());\n  }", "signature": "Object resolveArgument(\n      MethodParameter parameter,\n      @Nullable @CheckForNull ModelAndViewContainer mavContainer,\n      NativeWebRequest webRequest,\n      @Nullable @CheckForNull WebDataBinderFactory binderFactory)", "full_signature": "@SuppressWarnings(\"java:S2259\") // we use supportsParameter to check if the parameter is available @Override public @Nullable @CheckForNull Object resolveArgument(\n      MethodParameter parameter,\n      @Nullable @CheckForNull ModelAndViewContainer mavContainer,\n      NativeWebRequest webRequest,\n      @Nullable @CheckForNull WebDataBinderFactory binderFactory)", "class_method_signature": "TokenExtractor.resolveArgument(\n      MethodParameter parameter,\n      @Nullable @CheckForNull ModelAndViewContainer mavContainer,\n      NativeWebRequest webRequest,\n      @Nullable @CheckForNull WebDataBinderFactory binderFactory)", "testcase": false, "constructor": false, "invocations": ["getTokenInternal", "getHeader", "getParameter", "required", "getParameterAnnotation"]}, "repository": {"repo_id": 8010626, "url": "https://github.com/molgenis/molgenis", "language": "Java", "is_fork": false, "fork_count": 96, "stargazer_count": 82, "size": 168771, "license": "licensed"}}