{"test_class": {"identifier": "UserRepositoryDecoratorTest", "superclass": "extends AbstractMockitoTest", "interfaces": "", "fields": [{"original_string": "@Mock private Repository<User> delegateRepository;", "modifier": "@Mock private", "type": "Repository<User>", "declarator": "delegateRepository", "var_name": "delegateRepository"}, {"original_string": "@Mock private PasswordEncoder passwordEncoder;", "modifier": "@Mock private", "type": "PasswordEncoder", "declarator": "passwordEncoder", "var_name": "passwordEncoder"}, {"original_string": "private UserRepositoryDecorator userRepositoryDecorator;", "modifier": "private", "type": "UserRepositoryDecorator", "declarator": "userRepositoryDecorator", "var_name": "userRepositoryDecorator"}], "file": "molgenis-data-security/src/test/java/org/molgenis/data/security/auth/UserRepositoryDecoratorTest.java"}, "test_case": {"identifier": "updateStreamUnchangedPassword", "parameters": "()", "modifiers": "@SuppressWarnings({\"unchecked\", \"rawtypes\"}) @Test", "return": "void", "body": "@SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  @Test\n  void updateStreamUnchangedPassword() {\n    User currentUser = mock(User.class);\n    when(currentUser.getPassword()).thenReturn(\"currentPasswordHash\");\n    when(userRepositoryDecorator.findOneById(\"1\")).thenReturn(currentUser);\n\n    User user = mock(User.class);\n    when(user.getId()).thenReturn(\"1\");\n    when(user.isActive()).thenReturn(true);\n    when(user.getPassword()).thenReturn(\"currentPasswordHash\");\n\n    Stream<User> entities = Stream.of(user);\n    ArgumentCaptor<Stream<User>> captor = ArgumentCaptor.forClass(Stream.class);\n    doNothing().when(delegateRepository).update(captor.capture());\n    userRepositoryDecorator.update(entities);\n    assertEquals(singletonList(user), captor.getValue().collect(toList()));\n    verify(user).setPassword(\"currentPasswordHash\");\n    verify(user).setActivationCode(null);\n  }", "signature": "void updateStreamUnchangedPassword()", "full_signature": "@SuppressWarnings({\"unchecked\", \"rawtypes\"}) @Test void updateStreamUnchangedPassword()", "class_method_signature": "UserRepositoryDecoratorTest.updateStreamUnchangedPassword()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getPassword", "thenReturn", "when", "findOneById", "mock", "thenReturn", "when", "getId", "thenReturn", "when", "isActive", "thenReturn", "when", "getPassword", "of", "forClass", "update", "when", "doNothing", "capture", "update", "assertEquals", "singletonList", "collect", "getValue", "toList", "setPassword", "verify", "setActivationCode", "verify"]}, "focal_class": {"identifier": "UserRepositoryDecorator", "superclass": "extends AbstractRepositoryDecorator<User>", "interfaces": "", "fields": [{"original_string": "static final String DELETE_USER_MSG = \"Users can't be deleted. Disable them instead.\";", "modifier": "static final", "type": "String", "declarator": "DELETE_USER_MSG = \"Users can't be deleted. Disable them instead.\"", "var_name": "DELETE_USER_MSG"}, {"original_string": "private static final int BATCH_SIZE = 1000;", "modifier": "private static final", "type": "int", "declarator": "BATCH_SIZE = 1000", "var_name": "BATCH_SIZE"}, {"original_string": "private final PasswordEncoder passwordEncoder;", "modifier": "private final", "type": "PasswordEncoder", "declarator": "passwordEncoder", "var_name": "passwordEncoder"}], "methods": [{"identifier": "UserRepositoryDecorator", "parameters": "(Repository<User> delegateRepository, PasswordEncoder passwordEncoder)", "modifiers": "", "return": "", "signature": " UserRepositoryDecorator(Repository<User> delegateRepository, PasswordEncoder passwordEncoder)", "full_signature": "  UserRepositoryDecorator(Repository<User> delegateRepository, PasswordEncoder passwordEncoder)", "class_method_signature": "UserRepositoryDecorator.UserRepositoryDecorator(Repository<User> delegateRepository, PasswordEncoder passwordEncoder)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(User entity)", "modifiers": "@Override public", "return": "void", "signature": "void add(User entity)", "full_signature": "@Override public void add(User entity)", "class_method_signature": "UserRepositoryDecorator.add(User entity)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(User entity)", "modifiers": "@Override public", "return": "void", "signature": "void update(User entity)", "full_signature": "@Override public void update(User entity)", "class_method_signature": "UserRepositoryDecorator.update(User entity)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Stream<User> entities)", "modifiers": "@Override public", "return": "Integer", "signature": "Integer add(Stream<User> entities)", "full_signature": "@Override public Integer add(Stream<User> entities)", "class_method_signature": "UserRepositoryDecorator.add(Stream<User> entities)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Stream<User> entities)", "modifiers": "@Override public", "return": "void", "signature": "void update(Stream<User> entities)", "full_signature": "@Override public void update(Stream<User> entities)", "class_method_signature": "UserRepositoryDecorator.update(Stream<User> entities)", "testcase": false, "constructor": false}, {"identifier": "updatePassword", "parameters": "(User user)", "modifiers": "private", "return": "void", "signature": "void updatePassword(User user)", "full_signature": "private void updatePassword(User user)", "class_method_signature": "UserRepositoryDecorator.updatePassword(User user)", "testcase": false, "constructor": false}, {"identifier": "updateActivationCode", "parameters": "(User user)", "modifiers": "private", "return": "void", "signature": "void updateActivationCode(User user)", "full_signature": "private void updateActivationCode(User user)", "class_method_signature": "UserRepositoryDecorator.updateActivationCode(User user)", "testcase": false, "constructor": false}, {"identifier": "encodePassword", "parameters": "(User user)", "modifiers": "private", "return": "void", "signature": "void encodePassword(User user)", "full_signature": "private void encodePassword(User user)", "class_method_signature": "UserRepositoryDecorator.encodePassword(User user)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(User entity)", "modifiers": "@Override public", "return": "void", "signature": "void delete(User entity)", "full_signature": "@Override public void delete(User entity)", "class_method_signature": "UserRepositoryDecorator.delete(User entity)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Stream<User> entities)", "modifiers": "@Override public", "return": "void", "signature": "void delete(Stream<User> entities)", "full_signature": "@Override public void delete(Stream<User> entities)", "class_method_signature": "UserRepositoryDecorator.delete(Stream<User> entities)", "testcase": false, "constructor": false}, {"identifier": "deleteById", "parameters": "(Object id)", "modifiers": "@Override public", "return": "void", "signature": "void deleteById(Object id)", "full_signature": "@Override public void deleteById(Object id)", "class_method_signature": "UserRepositoryDecorator.deleteById(Object id)", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "(Stream<Object> ids)", "modifiers": "@Override public", "return": "void", "signature": "void deleteAll(Stream<Object> ids)", "full_signature": "@Override public void deleteAll(Stream<Object> ids)", "class_method_signature": "UserRepositoryDecorator.deleteAll(Stream<Object> ids)", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void deleteAll()", "full_signature": "@Override public void deleteAll()", "class_method_signature": "UserRepositoryDecorator.deleteAll()", "testcase": false, "constructor": false}], "file": "molgenis-data-security/src/main/java/org/molgenis/data/security/auth/UserRepositoryDecorator.java"}, "focal_method": {"identifier": "update", "parameters": "(User entity)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void update(User entity) {\n    updatePassword(entity);\n    updateActivationCode(entity);\n    delegate().update(entity);\n  }", "signature": "void update(User entity)", "full_signature": "@Override public void update(User entity)", "class_method_signature": "UserRepositoryDecorator.update(User entity)", "testcase": false, "constructor": false, "invocations": ["updatePassword", "updateActivationCode", "update", "delegate"]}, "repository": {"repo_id": 8010626, "url": "https://github.com/molgenis/molgenis", "language": "Java", "is_fork": false, "fork_count": 96, "stargazer_count": 82, "size": 168771, "license": "licensed"}}