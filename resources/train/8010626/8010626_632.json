{"test_class": {"identifier": "MolgenisMenuControllerTest", "superclass": "extends AbstractMockitoTest", "interfaces": "", "fields": [{"original_string": "private MolgenisMenuController molgenisMenuController;", "modifier": "private", "type": "MolgenisMenuController", "declarator": "molgenisMenuController", "var_name": "molgenisMenuController"}, {"original_string": "@Mock private DataService dataService;", "modifier": "@Mock private", "type": "DataService", "declarator": "dataService", "var_name": "dataService"}, {"original_string": "@Mock private MenuReaderService menuReaderService;", "modifier": "@Mock private", "type": "MenuReaderService", "declarator": "menuReaderService", "var_name": "menuReaderService"}, {"original_string": "@Mock private Plugin plugin;", "modifier": "@Mock private", "type": "Plugin", "declarator": "plugin", "var_name": "plugin"}, {"original_string": "@Mock private Model model;", "modifier": "@Mock private", "type": "Model", "declarator": "model", "var_name": "model"}, {"original_string": "@Mock private HttpServletRequest request;", "modifier": "@Mock private", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "private Menu menu;", "modifier": "private", "type": "Menu", "declarator": "menu", "var_name": "menu"}], "file": "molgenis-core-ui/src/test/java/org/molgenis/core/ui/MolgenisMenuControllerTest.java"}, "test_case": {"identifier": "testForwardDefaultMenuPluginNoPermissions", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void testForwardDefaultMenuPluginNoPermissions() {\n    when(menuReaderService.getMenu()).thenReturn(menu.filter(it -> false).map(Menu.class::cast));\n\n    assertEquals(\"forward:/login\", molgenisMenuController.forwardDefaultMenuDefaultPlugin(model));\n\n    verify(model).addAttribute(\"menu_id\", \"main\");\n    verifyNoMoreInteractions(model);\n  }", "signature": "void testForwardDefaultMenuPluginNoPermissions()", "full_signature": "@Test void testForwardDefaultMenuPluginNoPermissions()", "class_method_signature": "MolgenisMenuControllerTest.testForwardDefaultMenuPluginNoPermissions()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getMenu", "map", "filter", "assertEquals", "forwardDefaultMenuDefaultPlugin", "addAttribute", "verify", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "MolgenisMenuController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(MolgenisMenuController.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(MolgenisMenuController.class)", "var_name": "LOG"}, {"original_string": "public static final String URI = \"/menu\";", "modifier": "public static final", "type": "String", "declarator": "URI = \"/menu\"", "var_name": "URI"}, {"original_string": "private static final String KEY_MENU_ID = \"menu_id\";", "modifier": "private static final", "type": "String", "declarator": "KEY_MENU_ID = \"menu_id\"", "var_name": "KEY_MENU_ID"}, {"original_string": "private static final String KEY_MOLGENIS_VERSION = \"molgenis_version\";", "modifier": "private static final", "type": "String", "declarator": "KEY_MOLGENIS_VERSION = \"molgenis_version\"", "var_name": "KEY_MOLGENIS_VERSION"}, {"original_string": "private static final String KEY_MOLGENIS_BUILD_DATE = \"molgenis_build_date\";", "modifier": "private static final", "type": "String", "declarator": "KEY_MOLGENIS_BUILD_DATE = \"molgenis_build_date\"", "var_name": "KEY_MOLGENIS_BUILD_DATE"}, {"original_string": "private final MenuReaderService menuReaderService;", "modifier": "private final", "type": "MenuReaderService", "declarator": "menuReaderService", "var_name": "menuReaderService"}, {"original_string": "private final String molgenisVersion;", "modifier": "private final", "type": "String", "declarator": "molgenisVersion", "var_name": "molgenisVersion"}, {"original_string": "private final String molgenisBuildData;", "modifier": "private final", "type": "String", "declarator": "molgenisBuildData", "var_name": "molgenisBuildData"}, {"original_string": "private final DataService dataService;", "modifier": "private final", "type": "DataService", "declarator": "dataService", "var_name": "dataService"}], "methods": [{"identifier": "MolgenisMenuController", "parameters": "(\n      MenuReaderService menuReaderService,\n      @Value(\"${molgenis.version}\") String molgenisVersion,\n      @Value(\"${molgenis.build.date}\") String molgenisBuildData,\n      DataService dataService)", "modifiers": "", "return": "", "signature": " MolgenisMenuController(\n      MenuReaderService menuReaderService,\n      @Value(\"${molgenis.version}\") String molgenisVersion,\n      @Value(\"${molgenis.build.date}\") String molgenisBuildData,\n      DataService dataService)", "full_signature": "  MolgenisMenuController(\n      MenuReaderService menuReaderService,\n      @Value(\"${molgenis.version}\") String molgenisVersion,\n      @Value(\"${molgenis.build.date}\") String molgenisBuildData,\n      DataService dataService)", "class_method_signature": "MolgenisMenuController.MolgenisMenuController(\n      MenuReaderService menuReaderService,\n      @Value(\"${molgenis.version}\") String molgenisVersion,\n      @Value(\"${molgenis.build.date}\") String molgenisBuildData,\n      DataService dataService)", "testcase": false, "constructor": true}, {"identifier": "forwardDefaultMenuDefaultPlugin", "parameters": "(Model model)", "modifiers": "@Transactional(readOnly = true) @SuppressWarnings(\"java:S3752\") // multiple methods required @RequestMapping(method = {RequestMethod.GET, RequestMethod.POST}) public", "return": "String", "signature": "String forwardDefaultMenuDefaultPlugin(Model model)", "full_signature": "@Transactional(readOnly = true) @SuppressWarnings(\"java:S3752\") // multiple methods required @RequestMapping(method = {RequestMethod.GET, RequestMethod.POST}) public String forwardDefaultMenuDefaultPlugin(Model model)", "class_method_signature": "MolgenisMenuController.forwardDefaultMenuDefaultPlugin(Model model)", "testcase": false, "constructor": false}, {"identifier": "getQueryString", "parameters": "(MenuItem menuItem)", "modifiers": "private @Nullable @CheckForNull", "return": "String", "signature": "String getQueryString(MenuItem menuItem)", "full_signature": "private @Nullable @CheckForNull String getQueryString(MenuItem menuItem)", "class_method_signature": "MolgenisMenuController.getQueryString(MenuItem menuItem)", "testcase": false, "constructor": false}, {"identifier": "forwardMenuDefaultPlugin", "parameters": "(@Valid @NotNull @PathVariable String menuId, Model model)", "modifiers": "@SuppressWarnings(\"java:S3752\") // multiple methods required @RequestMapping( method = {RequestMethod.GET, RequestMethod.POST}, value = \"/{menuId}\") public", "return": "String", "signature": "String forwardMenuDefaultPlugin(@Valid @NotNull @PathVariable String menuId, Model model)", "full_signature": "@SuppressWarnings(\"java:S3752\") // multiple methods required @RequestMapping( method = {RequestMethod.GET, RequestMethod.POST}, value = \"/{menuId}\") public String forwardMenuDefaultPlugin(@Valid @NotNull @PathVariable String menuId, Model model)", "class_method_signature": "MolgenisMenuController.forwardMenuDefaultPlugin(@Valid @NotNull @PathVariable String menuId, Model model)", "testcase": false, "constructor": false}, {"identifier": "addModelAttributes", "parameters": "(Model model, String contextUri)", "modifiers": "private", "return": "void", "signature": "void addModelAttributes(Model model, String contextUri)", "full_signature": "private void addModelAttributes(Model model, String contextUri)", "class_method_signature": "MolgenisMenuController.addModelAttributes(Model model, String contextUri)", "testcase": false, "constructor": false}, {"identifier": "forwardMenuPlugin", "parameters": "(\n      HttpServletRequest request,\n      @Valid @NotNull @PathVariable String menuId,\n      @Valid @NotNull @PathVariable String pluginId,\n      Model model)", "modifiers": "@SuppressWarnings(\"java:S3752\") // multiple methods required @RequestMapping(\"/{menuId}/{pluginId}/**\") public", "return": "String", "signature": "String forwardMenuPlugin(\n      HttpServletRequest request,\n      @Valid @NotNull @PathVariable String menuId,\n      @Valid @NotNull @PathVariable String pluginId,\n      Model model)", "full_signature": "@SuppressWarnings(\"java:S3752\") // multiple methods required @RequestMapping(\"/{menuId}/{pluginId}/**\") public String forwardMenuPlugin(\n      HttpServletRequest request,\n      @Valid @NotNull @PathVariable String menuId,\n      @Valid @NotNull @PathVariable String pluginId,\n      Model model)", "class_method_signature": "MolgenisMenuController.forwardMenuPlugin(\n      HttpServletRequest request,\n      @Valid @NotNull @PathVariable String menuId,\n      @Valid @NotNull @PathVariable String pluginId,\n      Model model)", "testcase": false, "constructor": false}, {"identifier": "getForwardPluginUri", "parameters": "(String pluginId)", "modifiers": "private", "return": "String", "signature": "String getForwardPluginUri(String pluginId)", "full_signature": "private String getForwardPluginUri(String pluginId)", "class_method_signature": "MolgenisMenuController.getForwardPluginUri(String pluginId)", "testcase": false, "constructor": false}, {"identifier": "getForwardPluginUri", "parameters": "(\n      String pluginId, @Nullable @CheckForNull String pathRemainder)", "modifiers": "private", "return": "String", "signature": "String getForwardPluginUri(\n      String pluginId, @Nullable @CheckForNull String pathRemainder)", "full_signature": "private String getForwardPluginUri(\n      String pluginId, @Nullable @CheckForNull String pathRemainder)", "class_method_signature": "MolgenisMenuController.getForwardPluginUri(\n      String pluginId, @Nullable @CheckForNull String pathRemainder)", "testcase": false, "constructor": false}, {"identifier": "getForwardPluginUri", "parameters": "(\n      String pluginId,\n      @Nullable @CheckForNull String pathRemainder,\n      @Nullable @CheckForNull String queryString)", "modifiers": "", "return": "String", "signature": "String getForwardPluginUri(\n      String pluginId,\n      @Nullable @CheckForNull String pathRemainder,\n      @Nullable @CheckForNull String queryString)", "full_signature": " String getForwardPluginUri(\n      String pluginId,\n      @Nullable @CheckForNull String pathRemainder,\n      @Nullable @CheckForNull String queryString)", "class_method_signature": "MolgenisMenuController.getForwardPluginUri(\n      String pluginId,\n      @Nullable @CheckForNull String pathRemainder,\n      @Nullable @CheckForNull String queryString)", "testcase": false, "constructor": false}], "file": "molgenis-core-ui/src/main/java/org/molgenis/core/ui/MolgenisMenuController.java"}, "focal_method": {"identifier": "forwardDefaultMenuDefaultPlugin", "parameters": "(Model model)", "modifiers": "@Transactional(readOnly = true) @SuppressWarnings(\"java:S3752\") // multiple methods required @RequestMapping(method = {RequestMethod.GET, RequestMethod.POST}) public", "return": "String", "body": "@Transactional(readOnly = true)\n  @SuppressWarnings(\"java:S3752\") // multiple methods required\n  @RequestMapping(method = {RequestMethod.GET, RequestMethod.POST})\n  public String forwardDefaultMenuDefaultPlugin(Model model) {\n    Menu menu =\n        menuReaderService\n            .getMenu()\n            .orElseThrow(() -> new RuntimeException(\"main menu does not exist\"));\n    String menuId = menu.getId();\n    model.addAttribute(KEY_MENU_ID, menuId);\n\n    Optional<MenuItem> optionalActiveItem = menu.firstItem();\n    if (!optionalActiveItem.isPresent()) {\n      LOG.warn(\"main menu does not contain any (accessible) items\");\n      return \"forward:/login\";\n    }\n    MenuItem activeItem = optionalActiveItem.get();\n    String pluginId = activeItem.getId();\n\n    String contextUri = URI + '/' + menuId + '/' + pluginId;\n    addModelAttributes(model, contextUri);\n\n    return getForwardPluginUri(activeItem.getId(), null, getQueryString(activeItem));\n  }", "signature": "String forwardDefaultMenuDefaultPlugin(Model model)", "full_signature": "@Transactional(readOnly = true) @SuppressWarnings(\"java:S3752\") // multiple methods required @RequestMapping(method = {RequestMethod.GET, RequestMethod.POST}) public String forwardDefaultMenuDefaultPlugin(Model model)", "class_method_signature": "MolgenisMenuController.forwardDefaultMenuDefaultPlugin(Model model)", "testcase": false, "constructor": false, "invocations": ["orElseThrow", "getMenu", "getId", "addAttribute", "firstItem", "isPresent", "warn", "get", "getId", "addModelAttributes", "getForwardPluginUri", "getId", "getQueryString"]}, "repository": {"repo_id": 8010626, "url": "https://github.com/molgenis/molgenis", "language": "Java", "is_fork": false, "fork_count": 96, "stargazer_count": 82, "size": 168771, "license": "licensed"}}