{"test_class": {"identifier": "MolgenisPasswordEncoderTest", "superclass": "", "interfaces": "", "fields": [], "file": "molgenis-security-core/src/test/java/org/molgenis/security/core/MolgenisPasswordEncoderTest.java"}, "test_case": {"identifier": "matches_noMatch", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void matches_noMatch() {\n    String password = \"password\";\n    String encodedPassword = \"encoded-password\";\n    BCryptPasswordEncoder bCryptPasswordEncoder = mock(BCryptPasswordEncoder.class);\n    when(bCryptPasswordEncoder.matches(password, encodedPassword)).thenReturn(true);\n    assertFalse(\n        new MolgenisPasswordEncoder(bCryptPasswordEncoder)\n            .matches(\"invalid-password\", encodedPassword));\n  }", "signature": "void matches_noMatch()", "full_signature": "@Test void matches_noMatch()", "class_method_signature": "MolgenisPasswordEncoderTest.matches_noMatch()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "matches", "assertFalse", "matches"]}, "focal_class": {"identifier": "MolgenisPasswordEncoder", "superclass": "", "interfaces": "implements PasswordEncoder", "fields": [{"original_string": "private final BCryptPasswordEncoder bCryptPasswordEncoder;", "modifier": "private final", "type": "BCryptPasswordEncoder", "declarator": "bCryptPasswordEncoder", "var_name": "bCryptPasswordEncoder"}], "methods": [{"identifier": "MolgenisPasswordEncoder", "parameters": "(BCryptPasswordEncoder bCryptPasswordEncoder)", "modifiers": "public", "return": "", "signature": " MolgenisPasswordEncoder(BCryptPasswordEncoder bCryptPasswordEncoder)", "full_signature": "public  MolgenisPasswordEncoder(BCryptPasswordEncoder bCryptPasswordEncoder)", "class_method_signature": "MolgenisPasswordEncoder.MolgenisPasswordEncoder(BCryptPasswordEncoder bCryptPasswordEncoder)", "testcase": false, "constructor": true}, {"identifier": "encode", "parameters": "(CharSequence rawPassword)", "modifiers": "@Override public", "return": "String", "signature": "String encode(CharSequence rawPassword)", "full_signature": "@Override public String encode(CharSequence rawPassword)", "class_method_signature": "MolgenisPasswordEncoder.encode(CharSequence rawPassword)", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(CharSequence rawPassword, String encodedPassword)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean matches(CharSequence rawPassword, String encodedPassword)", "full_signature": "@Override public boolean matches(CharSequence rawPassword, String encodedPassword)", "class_method_signature": "MolgenisPasswordEncoder.matches(CharSequence rawPassword, String encodedPassword)", "testcase": false, "constructor": false}], "file": "molgenis-security-core/src/main/java/org/molgenis/security/core/MolgenisPasswordEncoder.java"}, "focal_method": {"identifier": "matches", "parameters": "(CharSequence rawPassword, String encodedPassword)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean matches(CharSequence rawPassword, String encodedPassword) {\n    return bCryptPasswordEncoder.matches(rawPassword, encodedPassword);\n  }", "signature": "boolean matches(CharSequence rawPassword, String encodedPassword)", "full_signature": "@Override public boolean matches(CharSequence rawPassword, String encodedPassword)", "class_method_signature": "MolgenisPasswordEncoder.matches(CharSequence rawPassword, String encodedPassword)", "testcase": false, "constructor": false, "invocations": ["matches"]}, "repository": {"repo_id": 8010626, "url": "https://github.com/molgenis/molgenis", "language": "Java", "is_fork": false, "fork_count": 96, "stargazer_count": 82, "size": 168771, "license": "licensed"}}