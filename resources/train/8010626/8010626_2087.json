{"test_class": {"identifier": "PostgreSqlEntityFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PostgreSqlEntityFactory postgreSqlEntityFactory;", "modifier": "private", "type": "PostgreSqlEntityFactory", "declarator": "postgreSqlEntityFactory", "var_name": "postgreSqlEntityFactory"}, {"original_string": "private EntityManager entityManager;", "modifier": "private", "type": "EntityManager", "declarator": "entityManager", "var_name": "entityManager"}], "file": "molgenis-data-postgresql/src/test/java/org/molgenis/data/postgresql/PostgreSqlEntityFactoryTest.java"}, "test_case": {"identifier": "createRowMapperXref", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void createRowMapperXref() throws Exception {\n    Attribute refIdAttr = mock(Attribute.class);\n    when(refIdAttr.getDataType()).thenReturn(STRING);\n\n    EntityType refEntityType = mock(EntityType.class);\n    when(refEntityType.getIdAttribute()).thenReturn(refIdAttr);\n\n    String xrefAttr = \"xrefAttr\";\n    Attribute oneToManyAttr = mock(Attribute.class);\n    when(oneToManyAttr.getName()).thenReturn(xrefAttr);\n    when(oneToManyAttr.getDataType()).thenReturn(XREF);\n    when(oneToManyAttr.getRefEntity()).thenReturn(refEntityType);\n\n    EntityType entityType = mock(EntityType.class);\n    when(entityType.getAtomicAttributes()).thenReturn(singleton(oneToManyAttr));\n    ResultSet rs = mock(ResultSet.class);\n    when(rs.getString(xrefAttr)).thenReturn(\"id0\");\n    int rowNum = 0;\n\n    Entity entity = mock(Entity.class);\n    when(entityManager.createFetch(entityType, null)).thenReturn(entity);\n    Entity refEntity = mock(Entity.class);\n    when(entityManager.getReference(refEntityType, \"id0\")).thenReturn(refEntity);\n    assertEquals(\n        entity, postgreSqlEntityFactory.createRowMapper(entityType, null).mapRow(rs, rowNum));\n    verify(entity).set(xrefAttr, refEntity);\n  }", "signature": "void createRowMapperXref()", "full_signature": "@Test void createRowMapperXref()", "class_method_signature": "PostgreSqlEntityFactoryTest.createRowMapperXref()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getDataType", "mock", "thenReturn", "when", "getIdAttribute", "mock", "thenReturn", "when", "getName", "thenReturn", "when", "getDataType", "thenReturn", "when", "getRefEntity", "mock", "thenReturn", "when", "getAtomicAttributes", "singleton", "mock", "thenReturn", "when", "getString", "mock", "thenReturn", "when", "createFetch", "mock", "thenReturn", "when", "getReference", "assertEquals", "mapRow", "createRowMapper", "set", "verify"]}, "focal_class": {"identifier": "PostgreSqlEntityFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "@SuppressWarnings(\"unused\")\n  private static final Logger LOG = LoggerFactory.getLogger(PostgreSqlEntityFactory.class);", "modifier": "@SuppressWarnings(\"unused\")\n  private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(PostgreSqlEntityFactory.class)", "var_name": "LOG"}, {"original_string": "private final EntityManager entityManager;", "modifier": "private final", "type": "EntityManager", "declarator": "entityManager", "var_name": "entityManager"}], "methods": [{"identifier": "PostgreSqlEntityFactory", "parameters": "(EntityManager entityManager)", "modifiers": "public", "return": "", "signature": " PostgreSqlEntityFactory(EntityManager entityManager)", "full_signature": "public  PostgreSqlEntityFactory(EntityManager entityManager)", "class_method_signature": "PostgreSqlEntityFactory.PostgreSqlEntityFactory(EntityManager entityManager)", "testcase": false, "constructor": true}, {"identifier": "createRowMapper", "parameters": "(EntityType entityType, Fetch fetch)", "modifiers": "", "return": "EntityMapper", "signature": "EntityMapper createRowMapper(EntityType entityType, Fetch fetch)", "full_signature": " EntityMapper createRowMapper(EntityType entityType, Fetch fetch)", "class_method_signature": "PostgreSqlEntityFactory.createRowMapper(EntityType entityType, Fetch fetch)", "testcase": false, "constructor": false}, {"identifier": "getReferences", "parameters": "(EntityType refEntityType, Iterable<?> ids)", "modifiers": "", "return": "Iterable<Entity>", "signature": "Iterable<Entity> getReferences(EntityType refEntityType, Iterable<?> ids)", "full_signature": " Iterable<Entity> getReferences(EntityType refEntityType, Iterable<?> ids)", "class_method_signature": "PostgreSqlEntityFactory.getReferences(EntityType refEntityType, Iterable<?> ids)", "testcase": false, "constructor": false}], "file": "molgenis-data-postgresql/src/main/java/org/molgenis/data/postgresql/PostgreSqlEntityFactory.java"}, "focal_method": {"identifier": "createRowMapper", "parameters": "(EntityType entityType, Fetch fetch)", "modifiers": "", "return": "EntityMapper", "body": "EntityMapper createRowMapper(EntityType entityType, Fetch fetch) {\n    return new EntityMapper(entityManager, entityType, fetch);\n  }", "signature": "EntityMapper createRowMapper(EntityType entityType, Fetch fetch)", "full_signature": " EntityMapper createRowMapper(EntityType entityType, Fetch fetch)", "class_method_signature": "PostgreSqlEntityFactory.createRowMapper(EntityType entityType, Fetch fetch)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 8010626, "url": "https://github.com/molgenis/molgenis", "language": "Java", "is_fork": false, "fork_count": 96, "stargazer_count": 82, "size": 168771, "license": "licensed"}}