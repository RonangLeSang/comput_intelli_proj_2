{"test_class": {"identifier": "DynamicRepositoryDecoratorRegistryImplTest", "superclass": "extends AbstractMolgenisSpringTest", "interfaces": "", "fields": [{"original_string": "@Autowired DecoratorConfigurationMetadata decoratorConfigurationMetadata;", "modifier": "@Autowired", "type": "DecoratorConfigurationMetadata", "declarator": "decoratorConfigurationMetadata", "var_name": "decoratorConfigurationMetadata"}, {"original_string": "@Autowired DecoratorParametersMetadata decoratorParametersMetadata;", "modifier": "@Autowired", "type": "DecoratorParametersMetadata", "declarator": "decoratorParametersMetadata", "var_name": "decoratorParametersMetadata"}, {"original_string": "@Mock private Repository<Entity> repository;", "modifier": "@Mock private", "type": "Repository<Entity>", "declarator": "repository", "var_name": "repository"}, {"original_string": "@Mock private DataService dataService;", "modifier": "@Mock private", "type": "DataService", "declarator": "dataService", "var_name": "dataService"}, {"original_string": "@Mock private EntityType entityType;", "modifier": "@Mock private", "type": "EntityType", "declarator": "entityType", "var_name": "entityType"}, {"original_string": "@Mock private DecoratorConfiguration decoratorConfiguration;", "modifier": "@Mock private", "type": "DecoratorConfiguration", "declarator": "decoratorConfiguration", "var_name": "decoratorConfiguration"}, {"original_string": "@Mock private DynamicRepositoryDecoratorFactory<Entity> dynamicRepositoryDecoratorFactory;", "modifier": "@Mock private", "type": "DynamicRepositoryDecoratorFactory<Entity>", "declarator": "dynamicRepositoryDecoratorFactory", "var_name": "dynamicRepositoryDecoratorFactory"}, {"original_string": "private DynamicRepositoryDecoratorRegistryImpl registry;", "modifier": "private", "type": "DynamicRepositoryDecoratorRegistryImpl", "declarator": "registry", "var_name": "registry"}], "file": "molgenis-data/src/test/java/org/molgenis/data/decorator/DynamicRepositoryDecoratorRegistryImplTest.java"}, "test_case": {"identifier": "testGetFactory", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void testGetFactory() {\n    DynamicRepositoryDecoratorFactory factory = mock(DynamicRepositoryDecoratorFactory.class);\n    when(factory.getId()).thenReturn(\"test\");\n    registry.addFactory(factory);\n\n    DynamicRepositoryDecoratorFactory returnedFactory = registry.getFactory(\"test\");\n\n    assertEquals(factory, returnedFactory);\n  }", "signature": "void testGetFactory()", "full_signature": "@Test void testGetFactory()", "class_method_signature": "DynamicRepositoryDecoratorRegistryImplTest.testGetFactory()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getId", "addFactory", "getFactory", "assertEquals"]}, "focal_class": {"identifier": "DynamicRepositoryDecoratorRegistryImpl", "superclass": "", "interfaces": "implements DynamicRepositoryDecoratorRegistry", "fields": [{"original_string": "private final Map<String, DynamicRepositoryDecoratorFactory> factories = new HashMap<>();", "modifier": "private final", "type": "Map<String, DynamicRepositoryDecoratorFactory>", "declarator": "factories = new HashMap<>()", "var_name": "factories"}, {"original_string": "private final DataService dataService;", "modifier": "private final", "type": "DataService", "declarator": "dataService", "var_name": "dataService"}, {"original_string": "private final Gson gson;", "modifier": "private final", "type": "Gson", "declarator": "gson", "var_name": "gson"}, {"original_string": "private boolean bootstrappingDone = false;", "modifier": "private", "type": "boolean", "declarator": "bootstrappingDone = false", "var_name": "bootstrappingDone"}, {"original_string": "private static final Type MAP_TOKEN = new TypeToken<Map<String, Object>>() {}.getType();", "modifier": "private static final", "type": "Type", "declarator": "MAP_TOKEN = new TypeToken<Map<String, Object>>() {}.getType()", "var_name": "MAP_TOKEN"}], "methods": [{"identifier": "DynamicRepositoryDecoratorRegistryImpl", "parameters": "(DataService dataService, Gson gson)", "modifiers": "", "return": "", "signature": " DynamicRepositoryDecoratorRegistryImpl(DataService dataService, Gson gson)", "full_signature": "  DynamicRepositoryDecoratorRegistryImpl(DataService dataService, Gson gson)", "class_method_signature": "DynamicRepositoryDecoratorRegistryImpl.DynamicRepositoryDecoratorRegistryImpl(DataService dataService, Gson gson)", "testcase": false, "constructor": true}, {"identifier": "addFactory", "parameters": "(DynamicRepositoryDecoratorFactory factory)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void addFactory(DynamicRepositoryDecoratorFactory factory)", "full_signature": "@Override public synchronized void addFactory(DynamicRepositoryDecoratorFactory factory)", "class_method_signature": "DynamicRepositoryDecoratorRegistryImpl.addFactory(DynamicRepositoryDecoratorFactory factory)", "testcase": false, "constructor": false}, {"identifier": "getFactoryIds", "parameters": "()", "modifiers": "@Override public", "return": "Stream<String>", "signature": "Stream<String> getFactoryIds()", "full_signature": "@Override public Stream<String> getFactoryIds()", "class_method_signature": "DynamicRepositoryDecoratorRegistryImpl.getFactoryIds()", "testcase": false, "constructor": false}, {"identifier": "getFactory", "parameters": "(String id)", "modifiers": "@Override public", "return": "DynamicRepositoryDecoratorFactory", "signature": "DynamicRepositoryDecoratorFactory getFactory(String id)", "full_signature": "@Override public DynamicRepositoryDecoratorFactory getFactory(String id)", "class_method_signature": "DynamicRepositoryDecoratorRegistryImpl.getFactory(String id)", "testcase": false, "constructor": false}, {"identifier": "decorate", "parameters": "(Repository<Entity> repository)", "modifiers": "@Override public synchronized", "return": "Repository<Entity>", "signature": "Repository<Entity> decorate(Repository<Entity> repository)", "full_signature": "@Override public synchronized Repository<Entity> decorate(Repository<Entity> repository)", "class_method_signature": "DynamicRepositoryDecoratorRegistryImpl.decorate(Repository<Entity> repository)", "testcase": false, "constructor": false}, {"identifier": "decorateRepository", "parameters": "(\n      Repository<Entity> repository, DecoratorConfiguration configuration)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "Repository<Entity>", "signature": "Repository<Entity> decorateRepository(\n      Repository<Entity> repository, DecoratorConfiguration configuration)", "full_signature": "@SuppressWarnings(\"unchecked\") private Repository<Entity> decorateRepository(\n      Repository<Entity> repository, DecoratorConfiguration configuration)", "class_method_signature": "DynamicRepositoryDecoratorRegistryImpl.decorateRepository(\n      Repository<Entity> repository, DecoratorConfiguration configuration)", "testcase": false, "constructor": false}, {"identifier": "getParameterMap", "parameters": "(DecoratorConfiguration configuration)", "modifiers": "", "return": "Map<String, Map<String, Object>>", "signature": "Map<String, Map<String, Object>> getParameterMap(DecoratorConfiguration configuration)", "full_signature": " Map<String, Map<String, Object>> getParameterMap(DecoratorConfiguration configuration)", "class_method_signature": "DynamicRepositoryDecoratorRegistryImpl.getParameterMap(DecoratorConfiguration configuration)", "testcase": false, "constructor": false}, {"identifier": "jsonToMap", "parameters": "(String parameterJson)", "modifiers": "private", "return": "Map<String, Object>", "signature": "Map<String, Object> jsonToMap(String parameterJson)", "full_signature": "private Map<String, Object> jsonToMap(String parameterJson)", "class_method_signature": "DynamicRepositoryDecoratorRegistryImpl.jsonToMap(String parameterJson)", "testcase": false, "constructor": false}, {"identifier": "onApplicationEvent", "parameters": "(BootstrappingEvent bootstrappingEvent)", "modifiers": "@EventListener public", "return": "void", "signature": "void onApplicationEvent(BootstrappingEvent bootstrappingEvent)", "full_signature": "@EventListener public void onApplicationEvent(BootstrappingEvent bootstrappingEvent)", "class_method_signature": "DynamicRepositoryDecoratorRegistryImpl.onApplicationEvent(BootstrappingEvent bootstrappingEvent)", "testcase": false, "constructor": false}], "file": "molgenis-data/src/main/java/org/molgenis/data/decorator/DynamicRepositoryDecoratorRegistryImpl.java"}, "focal_method": {"identifier": "getFactory", "parameters": "(String id)", "modifiers": "@Override public", "return": "DynamicRepositoryDecoratorFactory", "body": "@Override\n  public DynamicRepositoryDecoratorFactory getFactory(String id) {\n    if (!factories.containsKey(id)) {\n      throw new IllegalArgumentException(format(\"Decorator [%s] does not exist\", id));\n    }\n    return factories.get(id);\n  }", "signature": "DynamicRepositoryDecoratorFactory getFactory(String id)", "full_signature": "@Override public DynamicRepositoryDecoratorFactory getFactory(String id)", "class_method_signature": "DynamicRepositoryDecoratorRegistryImpl.getFactory(String id)", "testcase": false, "constructor": false, "invocations": ["containsKey", "format", "get"]}, "repository": {"repo_id": 8010626, "url": "https://github.com/molgenis/molgenis", "language": "Java", "is_fork": false, "fork_count": 96, "stargazer_count": 82, "size": 168771, "license": "licensed"}}