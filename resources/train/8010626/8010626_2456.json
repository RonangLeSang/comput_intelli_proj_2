{"test_class": {"identifier": "PasswordResetterImplTest", "superclass": "extends AbstractMockitoTest", "interfaces": "", "fields": [{"original_string": "@Mock private PasswordResetTokenRepository passwordResetTokenRepository;", "modifier": "@Mock private", "type": "PasswordResetTokenRepository", "declarator": "passwordResetTokenRepository", "var_name": "passwordResetTokenRepository"}, {"original_string": "@Mock private UserService userService;", "modifier": "@Mock private", "type": "UserService", "declarator": "userService", "var_name": "userService"}, {"original_string": "@Mock private MailSender mailSender;", "modifier": "@Mock private", "type": "MailSender", "declarator": "mailSender", "var_name": "mailSender"}, {"original_string": "@Mock private AppSettings appSettings;", "modifier": "@Mock private", "type": "AppSettings", "declarator": "appSettings", "var_name": "appSettings"}, {"original_string": "private PasswordResetterImpl passwordResetServiceImpl;", "modifier": "private", "type": "PasswordResetterImpl", "declarator": "passwordResetServiceImpl", "var_name": "passwordResetServiceImpl"}], "file": "molgenis-security/src/test/java/org/molgenis/security/account/PasswordResetterImplTest.java"}, "test_case": {"identifier": "testChangePasswordAuthenticatedUserNoAuthenticedUser", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void testChangePasswordAuthenticatedUserNoAuthenticedUser() {\n    SecurityContext securityContext = mock(SecurityContext.class);\n    SecurityContextHolder.setContext(securityContext);\n    assertThrows(\n        AuthenticationCredentialsNotFoundException.class,\n        () -> passwordResetServiceImpl.changePasswordAuthenticatedUser(\"MyPassword\"));\n  }", "signature": "void testChangePasswordAuthenticatedUserNoAuthenticedUser()", "full_signature": "@Test void testChangePasswordAuthenticatedUserNoAuthenticedUser()", "class_method_signature": "PasswordResetterImplTest.testChangePasswordAuthenticatedUserNoAuthenticedUser()", "testcase": true, "constructor": false, "invocations": ["mock", "setContext", "assertThrows", "changePasswordAuthenticatedUser"]}, "focal_class": {"identifier": "PasswordResetterImpl", "superclass": "", "interfaces": "implements PasswordResetter", "fields": [{"original_string": "private final PasswordResetTokenRepository passwordResetTokenService;", "modifier": "private final", "type": "PasswordResetTokenRepository", "declarator": "passwordResetTokenService", "var_name": "passwordResetTokenService"}, {"original_string": "private final UserService userService;", "modifier": "private final", "type": "UserService", "declarator": "userService", "var_name": "userService"}, {"original_string": "private final MailSender mailSender;", "modifier": "private final", "type": "MailSender", "declarator": "mailSender", "var_name": "mailSender"}, {"original_string": "private final AppSettings appSettings;", "modifier": "private final", "type": "AppSettings", "declarator": "appSettings", "var_name": "appSettings"}], "methods": [{"identifier": "PasswordResetterImpl", "parameters": "(\n      PasswordResetTokenRepository passwordResetTokenRepository,\n      UserService userService,\n      MailSender mailSender,\n      AppSettings appSettings)", "modifiers": "", "return": "", "signature": " PasswordResetterImpl(\n      PasswordResetTokenRepository passwordResetTokenRepository,\n      UserService userService,\n      MailSender mailSender,\n      AppSettings appSettings)", "full_signature": "  PasswordResetterImpl(\n      PasswordResetTokenRepository passwordResetTokenRepository,\n      UserService userService,\n      MailSender mailSender,\n      AppSettings appSettings)", "class_method_signature": "PasswordResetterImpl.PasswordResetterImpl(\n      PasswordResetTokenRepository passwordResetTokenRepository,\n      UserService userService,\n      MailSender mailSender,\n      AppSettings appSettings)", "testcase": false, "constructor": true}, {"identifier": "resetPassword", "parameters": "(String emailAddress)", "modifiers": "@Transactional @RunAsSystem @Override public", "return": "void", "signature": "void resetPassword(String emailAddress)", "full_signature": "@Transactional @RunAsSystem @Override public void resetPassword(String emailAddress)", "class_method_signature": "PasswordResetterImpl.resetPassword(String emailAddress)", "testcase": false, "constructor": false}, {"identifier": "validatePasswordResetToken", "parameters": "(String username, String token)", "modifiers": "@Transactional(readOnly = true) @RunAsSystem @Override public", "return": "void", "signature": "void validatePasswordResetToken(String username, String token)", "full_signature": "@Transactional(readOnly = true) @RunAsSystem @Override public void validatePasswordResetToken(String username, String token)", "class_method_signature": "PasswordResetterImpl.validatePasswordResetToken(String username, String token)", "testcase": false, "constructor": false}, {"identifier": "changePassword", "parameters": "(String username, String token, String password)", "modifiers": "@Transactional @RunAsSystem @Override public", "return": "void", "signature": "void changePassword(String username, String token, String password)", "full_signature": "@Transactional @RunAsSystem @Override public void changePassword(String username, String token, String password)", "class_method_signature": "PasswordResetterImpl.changePassword(String username, String token, String password)", "testcase": false, "constructor": false}, {"identifier": "changePasswordAuthenticatedUser", "parameters": "(String password)", "modifiers": "@Transactional @Override public", "return": "void", "signature": "void changePasswordAuthenticatedUser(String password)", "full_signature": "@Transactional @Override public void changePasswordAuthenticatedUser(String password)", "class_method_signature": "PasswordResetterImpl.changePasswordAuthenticatedUser(String password)", "testcase": false, "constructor": false}, {"identifier": "getUser", "parameters": "(String username)", "modifiers": "private", "return": "User", "signature": "User getUser(String username)", "full_signature": "private User getUser(String username)", "class_method_signature": "PasswordResetterImpl.getUser(String username)", "testcase": false, "constructor": false}, {"identifier": "getUserByEmail", "parameters": "(String emailAddress)", "modifiers": "private", "return": "User", "signature": "User getUserByEmail(String emailAddress)", "full_signature": "private User getUserByEmail(String emailAddress)", "class_method_signature": "PasswordResetterImpl.getUserByEmail(String emailAddress)", "testcase": false, "constructor": false}, {"identifier": "createPasswordResetUri", "parameters": "(String username, String token)", "modifiers": "private", "return": "URI", "signature": "URI createPasswordResetUri(String username, String token)", "full_signature": "private URI createPasswordResetUri(String username, String token)", "class_method_signature": "PasswordResetterImpl.createPasswordResetUri(String username, String token)", "testcase": false, "constructor": false}, {"identifier": "sendPasswordResetMail", "parameters": "(User user, String token)", "modifiers": "private", "return": "void", "signature": "void sendPasswordResetMail(User user, String token)", "full_signature": "private void sendPasswordResetMail(User user, String token)", "class_method_signature": "PasswordResetterImpl.sendPasswordResetMail(User user, String token)", "testcase": false, "constructor": false}], "file": "molgenis-security/src/main/java/org/molgenis/security/account/PasswordResetterImpl.java"}, "focal_method": {"identifier": "changePasswordAuthenticatedUser", "parameters": "(String password)", "modifiers": "@Transactional @Override public", "return": "void", "body": "@Transactional\n  @Override\n  public void changePasswordAuthenticatedUser(String password) {\n    String username = SecurityUtils.getCurrentUsername();\n    if (username == null) {\n      throw new AuthenticationCredentialsNotFoundException(\"not authenticated\");\n    }\n    User user = getUser(username);\n    user.setPassword(password);\n    user.setChangePassword(false);\n    RunAsSystemAspect.runAsSystem(() -> userService.update(user));\n  }", "signature": "void changePasswordAuthenticatedUser(String password)", "full_signature": "@Transactional @Override public void changePasswordAuthenticatedUser(String password)", "class_method_signature": "PasswordResetterImpl.changePasswordAuthenticatedUser(String password)", "testcase": false, "constructor": false, "invocations": ["getCurrentUsername", "getUser", "setPassword", "setChangePassword", "runAsSystem", "update"]}, "repository": {"repo_id": 8010626, "url": "https://github.com/molgenis/molgenis", "language": "Java", "is_fork": false, "fork_count": 96, "stargazer_count": 82, "size": 168771, "license": "licensed"}}