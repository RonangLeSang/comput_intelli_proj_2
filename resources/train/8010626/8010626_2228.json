{"test_class": {"identifier": "EmxMetadataParserTest", "superclass": "extends AbstractMockitoTest", "interfaces": "", "fields": [{"original_string": "@Mock private DataService dataService;", "modifier": "@Mock private", "type": "DataService", "declarator": "dataService", "var_name": "dataService"}, {"original_string": "@Mock private PackageFactory packageFactory;", "modifier": "@Mock private", "type": "PackageFactory", "declarator": "packageFactory", "var_name": "packageFactory"}, {"original_string": "@Mock private AttributeFactory attrMetaFactory;", "modifier": "@Mock private", "type": "AttributeFactory", "declarator": "attrMetaFactory", "var_name": "attrMetaFactory"}, {"original_string": "@Mock private EntityTypeFactory entityTypeFactory;", "modifier": "@Mock private", "type": "EntityTypeFactory", "declarator": "entityTypeFactory", "var_name": "entityTypeFactory"}, {"original_string": "@Mock private TagFactory tagFactory;", "modifier": "@Mock private", "type": "TagFactory", "declarator": "tagFactory", "var_name": "tagFactory"}, {"original_string": "@Mock private LanguageFactory languageFactory;", "modifier": "@Mock private", "type": "LanguageFactory", "declarator": "languageFactory", "var_name": "languageFactory"}, {"original_string": "@Mock private L10nStringFactory l10nStringFactory;", "modifier": "@Mock private", "type": "L10nStringFactory", "declarator": "l10nStringFactory", "var_name": "l10nStringFactory"}, {"original_string": "@Mock private EntityTypeValidator entityTypeValidator;", "modifier": "@Mock private", "type": "EntityTypeValidator", "declarator": "entityTypeValidator", "var_name": "entityTypeValidator"}, {"original_string": "@Mock private AttributeValidator attributeValidator;", "modifier": "@Mock private", "type": "AttributeValidator", "declarator": "attributeValidator", "var_name": "attributeValidator"}, {"original_string": "@Mock private TagValidator tagValidator;", "modifier": "@Mock private", "type": "TagValidator", "declarator": "tagValidator", "var_name": "tagValidator"}, {"original_string": "@Mock private EntityTypeDependencyResolver entityTypeDependencyResolver;", "modifier": "@Mock private", "type": "EntityTypeDependencyResolver", "declarator": "entityTypeDependencyResolver", "var_name": "entityTypeDependencyResolver"}, {"original_string": "private EmxMetadataParser emxMetadataParser;", "modifier": "private", "type": "EmxMetadataParser", "declarator": "emxMetadataParser", "var_name": "emxMetadataParser"}], "file": "molgenis-data-import/src/test/java/org/molgenis/data/importer/emx/EmxMetadataParserTest.java"}, "test_case": {"identifier": "setRangeInvalidMax", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void setRangeInvalidMax() {\n    initMetaFactories();\n\n    Entity emxAttrEntity = mock(Entity.class);\n    when(emxAttrEntity.getString(EMX_ATTRIBUTES_RANGE_MIN)).thenReturn(\"1\");\n    when(emxAttrEntity.getString(EMX_ATTRIBUTES_RANGE_MAX)).thenReturn(\"test\");\n    Attribute attr = mock(Attribute.class);\n    when(attr.getDataType()).thenReturn(COMPOUND);\n    EmxAttribute emxAttr = mock(EmxAttribute.class);\n    when(emxAttr.getAttr()).thenReturn(attr);\n    assertThrows(\n        InvalidRangeException.class,\n        () -> emxMetadataParser.setRange(emxAttrEntity, \"emxEntityName\", \"emxAttrName\", attr, 0));\n  }", "signature": "void setRangeInvalidMax()", "full_signature": "@Test void setRangeInvalidMax()", "class_method_signature": "EmxMetadataParserTest.setRangeInvalidMax()", "testcase": true, "constructor": false, "invocations": ["initMetaFactories", "mock", "thenReturn", "when", "getString", "thenReturn", "when", "getString", "mock", "thenReturn", "when", "getDataType", "mock", "thenReturn", "when", "getAttr", "assertThrows", "setRange"]}, "focal_class": {"identifier": "EmxMetadataParser", "superclass": "", "interfaces": "implements MetadataParser", "fields": [{"original_string": "public static final String EMX_PACKAGES = \"packages\";", "modifier": "public static final", "type": "String", "declarator": "EMX_PACKAGES = \"packages\"", "var_name": "EMX_PACKAGES"}, {"original_string": "public static final String EMX_ENTITIES = \"entities\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ENTITIES = \"entities\"", "var_name": "EMX_ENTITIES"}, {"original_string": "public static final String EMX_ATTRIBUTES = \"attributes\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES = \"attributes\"", "var_name": "EMX_ATTRIBUTES"}, {"original_string": "static final String EMX_TAGS = \"tags\";", "modifier": "static final", "type": "String", "declarator": "EMX_TAGS = \"tags\"", "var_name": "EMX_TAGS"}, {"original_string": "static final String EMX_LANGUAGES = \"languages\";", "modifier": "static final", "type": "String", "declarator": "EMX_LANGUAGES = \"languages\"", "var_name": "EMX_LANGUAGES"}, {"original_string": "static final String EMX_I18NSTRINGS = \"i18nstrings\";", "modifier": "static final", "type": "String", "declarator": "EMX_I18NSTRINGS = \"i18nstrings\"", "var_name": "EMX_I18NSTRINGS"}, {"original_string": "public static final String EMX_PACKAGE_NAME = \"name\";", "modifier": "public static final", "type": "String", "declarator": "EMX_PACKAGE_NAME = \"name\"", "var_name": "EMX_PACKAGE_NAME"}, {"original_string": "public static final String EMX_PACKAGE_DESCRIPTION = \"description\";", "modifier": "public static final", "type": "String", "declarator": "EMX_PACKAGE_DESCRIPTION = \"description\"", "var_name": "EMX_PACKAGE_DESCRIPTION"}, {"original_string": "public static final String EMX_PACKAGE_PARENT = \"parent\";", "modifier": "public static final", "type": "String", "declarator": "EMX_PACKAGE_PARENT = \"parent\"", "var_name": "EMX_PACKAGE_PARENT"}, {"original_string": "public static final String EMX_PACKAGE_TAGS = \"tags\";", "modifier": "public static final", "type": "String", "declarator": "EMX_PACKAGE_TAGS = \"tags\"", "var_name": "EMX_PACKAGE_TAGS"}, {"original_string": "public static final String EMX_PACKAGE_LABEL = \"label\";", "modifier": "public static final", "type": "String", "declarator": "EMX_PACKAGE_LABEL = \"label\"", "var_name": "EMX_PACKAGE_LABEL"}, {"original_string": "public static final String EMX_ENTITIES_NAME = \"name\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ENTITIES_NAME = \"name\"", "var_name": "EMX_ENTITIES_NAME"}, {"original_string": "public static final String EMX_ENTITIES_PACKAGE = \"package\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ENTITIES_PACKAGE = \"package\"", "var_name": "EMX_ENTITIES_PACKAGE"}, {"original_string": "public static final String EMX_ENTITIES_LABEL = \"label\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ENTITIES_LABEL = \"label\"", "var_name": "EMX_ENTITIES_LABEL"}, {"original_string": "public static final String EMX_ENTITIES_DESCRIPTION = \"description\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ENTITIES_DESCRIPTION = \"description\"", "var_name": "EMX_ENTITIES_DESCRIPTION"}, {"original_string": "public static final String EMX_ENTITIES_ABSTRACT = \"abstract\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ENTITIES_ABSTRACT = \"abstract\"", "var_name": "EMX_ENTITIES_ABSTRACT"}, {"original_string": "public static final String EMX_ENTITIES_EXTENDS = \"extends\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ENTITIES_EXTENDS = \"extends\"", "var_name": "EMX_ENTITIES_EXTENDS"}, {"original_string": "public static final String EMX_ENTITIES_BACKEND = \"backend\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ENTITIES_BACKEND = \"backend\"", "var_name": "EMX_ENTITIES_BACKEND"}, {"original_string": "public static final String EMX_ENTITIES_TAGS = \"tags\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ENTITIES_TAGS = \"tags\"", "var_name": "EMX_ENTITIES_TAGS"}, {"original_string": "public static final String EMX_ATTRIBUTES_NAME = \"name\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_NAME = \"name\"", "var_name": "EMX_ATTRIBUTES_NAME"}, {"original_string": "public static final String EMX_ATTRIBUTES_ENTITY = \"entity\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_ENTITY = \"entity\"", "var_name": "EMX_ATTRIBUTES_ENTITY"}, {"original_string": "public static final String EMX_ATTRIBUTES_REF_ENTITY = \"refEntity\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_REF_ENTITY = \"refEntity\"", "var_name": "EMX_ATTRIBUTES_REF_ENTITY"}, {"original_string": "public static final String EMX_ATTRIBUTES_MAPPED_BY = \"mappedBy\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_MAPPED_BY = \"mappedBy\"", "var_name": "EMX_ATTRIBUTES_MAPPED_BY"}, {"original_string": "public static final String EMX_ATTRIBUTES_DEFAULT_VALUE = \"defaultValue\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_DEFAULT_VALUE = \"defaultValue\"", "var_name": "EMX_ATTRIBUTES_DEFAULT_VALUE"}, {"original_string": "public static final String EMX_ATTRIBUTES_ID_ATTRIBUTE = \"idAttribute\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_ID_ATTRIBUTE = \"idAttribute\"", "var_name": "EMX_ATTRIBUTES_ID_ATTRIBUTE"}, {"original_string": "public static final String EMX_ATTRIBUTES_LOOKUP_ATTRIBUTE = \"lookupAttribute\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_LOOKUP_ATTRIBUTE = \"lookupAttribute\"", "var_name": "EMX_ATTRIBUTES_LOOKUP_ATTRIBUTE"}, {"original_string": "public static final String EMX_ATTRIBUTES_LABEL_ATTRIBUTE = \"labelAttribute\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_LABEL_ATTRIBUTE = \"labelAttribute\"", "var_name": "EMX_ATTRIBUTES_LABEL_ATTRIBUTE"}, {"original_string": "public static final String EMX_ATTRIBUTES_PART_OF_ATTRIBUTE = \"partOfAttribute\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_PART_OF_ATTRIBUTE = \"partOfAttribute\"", "var_name": "EMX_ATTRIBUTES_PART_OF_ATTRIBUTE"}, {"original_string": "public static final String EMX_ATTRIBUTES_AGGREGATEABLE = \"aggregateable\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_AGGREGATEABLE = \"aggregateable\"", "var_name": "EMX_ATTRIBUTES_AGGREGATEABLE"}, {"original_string": "public static final String EMX_ATTRIBUTES_DATA_TYPE = \"dataType\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_DATA_TYPE = \"dataType\"", "var_name": "EMX_ATTRIBUTES_DATA_TYPE"}, {"original_string": "public static final String EMX_ATTRIBUTES_EXPRESSION = \"expression\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_EXPRESSION = \"expression\"", "var_name": "EMX_ATTRIBUTES_EXPRESSION"}, {"original_string": "public static final String EMX_ATTRIBUTES_NILLABLE = \"nillable\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_NILLABLE = \"nillable\"", "var_name": "EMX_ATTRIBUTES_NILLABLE"}, {"original_string": "public static final String EMX_ATTRIBUTES_VISIBLE = \"visible\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_VISIBLE = \"visible\"", "var_name": "EMX_ATTRIBUTES_VISIBLE"}, {"original_string": "public static final String EMX_ATTRIBUTES_LABEL = \"label\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_LABEL = \"label\"", "var_name": "EMX_ATTRIBUTES_LABEL"}, {"original_string": "public static final String EMX_ATTRIBUTES_DESCRIPTION = \"description\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_DESCRIPTION = \"description\"", "var_name": "EMX_ATTRIBUTES_DESCRIPTION"}, {"original_string": "public static final String EMX_ATTRIBUTES_ENUM_OPTIONS = \"enumOptions\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_ENUM_OPTIONS = \"enumOptions\"", "var_name": "EMX_ATTRIBUTES_ENUM_OPTIONS"}, {"original_string": "public static final String EMX_ATTRIBUTES_RANGE_MIN = \"rangeMin\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_RANGE_MIN = \"rangeMin\"", "var_name": "EMX_ATTRIBUTES_RANGE_MIN"}, {"original_string": "public static final String EMX_ATTRIBUTES_RANGE_MAX = \"rangeMax\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_RANGE_MAX = \"rangeMax\"", "var_name": "EMX_ATTRIBUTES_RANGE_MAX"}, {"original_string": "public static final String EMX_ATTRIBUTES_READ_ONLY = \"readOnly\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_READ_ONLY = \"readOnly\"", "var_name": "EMX_ATTRIBUTES_READ_ONLY"}, {"original_string": "public static final String EMX_ATTRIBUTES_UNIQUE = \"unique\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_UNIQUE = \"unique\"", "var_name": "EMX_ATTRIBUTES_UNIQUE"}, {"original_string": "public static final String EMX_ATTRIBUTES_VALIDATION_EXPRESSION = \"validationExpression\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_VALIDATION_EXPRESSION = \"validationExpression\"", "var_name": "EMX_ATTRIBUTES_VALIDATION_EXPRESSION"}, {"original_string": "public static final String EMX_ATTRIBUTES_TAGS = \"tags\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_TAGS = \"tags\"", "var_name": "EMX_ATTRIBUTES_TAGS"}, {"original_string": "public static final String EMX_ATTRIBUTES_AUTO = \"auto\";", "modifier": "public static final", "type": "String", "declarator": "EMX_ATTRIBUTES_AUTO = \"auto\"", "var_name": "EMX_ATTRIBUTES_AUTO"}, {"original_string": "private static final String EMX_TAG_IDENTIFIER = \"identifier\";", "modifier": "private static final", "type": "String", "declarator": "EMX_TAG_IDENTIFIER = \"identifier\"", "var_name": "EMX_TAG_IDENTIFIER"}, {"original_string": "private static final String EMX_TAG_OBJECT_IRI = \"objectIRI\";", "modifier": "private static final", "type": "String", "declarator": "EMX_TAG_OBJECT_IRI = \"objectIRI\"", "var_name": "EMX_TAG_OBJECT_IRI"}, {"original_string": "private static final String EMX_TAG_LABEL = \"label\";", "modifier": "private static final", "type": "String", "declarator": "EMX_TAG_LABEL = \"label\"", "var_name": "EMX_TAG_LABEL"}, {"original_string": "private static final String EMX_TAG_RELATION_LABEL = \"relationLabel\";", "modifier": "private static final", "type": "String", "declarator": "EMX_TAG_RELATION_LABEL = \"relationLabel\"", "var_name": "EMX_TAG_RELATION_LABEL"}, {"original_string": "private static final String EMX_TAG_CODE_SYSTEM = \"codeSystem\";", "modifier": "private static final", "type": "String", "declarator": "EMX_TAG_CODE_SYSTEM = \"codeSystem\"", "var_name": "EMX_TAG_CODE_SYSTEM"}, {"original_string": "private static final String EMX_TAG_RELATION_IRI = \"relationIRI\";", "modifier": "private static final", "type": "String", "declarator": "EMX_TAG_RELATION_IRI = \"relationIRI\"", "var_name": "EMX_TAG_RELATION_IRI"}, {"original_string": "private static final String EMX_LANGUAGE_CODE = \"code\";", "modifier": "private static final", "type": "String", "declarator": "EMX_LANGUAGE_CODE = \"code\"", "var_name": "EMX_LANGUAGE_CODE"}, {"original_string": "private static final String EMX_LANGUAGE_NAME = \"name\";", "modifier": "private static final", "type": "String", "declarator": "EMX_LANGUAGE_NAME = \"name\"", "var_name": "EMX_LANGUAGE_NAME"}, {"original_string": "private static final String EMX_I18N_STRING_MSGID = \"msgid\";", "modifier": "private static final", "type": "String", "declarator": "EMX_I18N_STRING_MSGID = \"msgid\"", "var_name": "EMX_I18N_STRING_MSGID"}, {"original_string": "private static final String EMX_I18N_STRING_DESCRIPTION = \"description\";", "modifier": "private static final", "type": "String", "declarator": "EMX_I18N_STRING_DESCRIPTION = \"description\"", "var_name": "EMX_I18N_STRING_DESCRIPTION"}, {"original_string": "private static final String EMX_I18N_STRING_NAMESPACE = \"namespace\";", "modifier": "private static final", "type": "String", "declarator": "EMX_I18N_STRING_NAMESPACE = \"namespace\"", "var_name": "EMX_I18N_STRING_NAMESPACE"}, {"original_string": "static final String DEFAULT_NAMESPACE = \"default\";", "modifier": "static final", "type": "String", "declarator": "DEFAULT_NAMESPACE = \"default\"", "var_name": "DEFAULT_NAMESPACE"}, {"original_string": "private static final Map<String, String> EMX_NAME_TO_REPO_NAME_MAP = newHashMap();", "modifier": "private static final", "type": "Map<String, String>", "declarator": "EMX_NAME_TO_REPO_NAME_MAP = newHashMap()", "var_name": "EMX_NAME_TO_REPO_NAME_MAP"}, {"original_string": "private static final List<String> EMX_ENTITIES_ALLOWED_ATTRS =\n      Arrays.asList(\n          EMX_ENTITIES_NAME.toLowerCase(),\n          EMX_ENTITIES_PACKAGE.toLowerCase(),\n          EMX_ENTITIES_LABEL.toLowerCase(),\n          EMX_ENTITIES_DESCRIPTION,\n          EMX_ENTITIES_ABSTRACT.toLowerCase(),\n          EMX_ENTITIES_EXTENDS.toLowerCase(),\n          EMX_ENTITIES_BACKEND.toLowerCase(),\n          EMX_ENTITIES_TAGS.toLowerCase());", "modifier": "private static final", "type": "List<String>", "declarator": "EMX_ENTITIES_ALLOWED_ATTRS =\n      Arrays.asList(\n          EMX_ENTITIES_NAME.toLowerCase(),\n          EMX_ENTITIES_PACKAGE.toLowerCase(),\n          EMX_ENTITIES_LABEL.toLowerCase(),\n          EMX_ENTITIES_DESCRIPTION,\n          EMX_ENTITIES_ABSTRACT.toLowerCase(),\n          EMX_ENTITIES_EXTENDS.toLowerCase(),\n          EMX_ENTITIES_BACKEND.toLowerCase(),\n          EMX_ENTITIES_TAGS.toLowerCase())", "var_name": "EMX_ENTITIES_ALLOWED_ATTRS"}, {"original_string": "private static final List<String> SUPPORTED_ATTRIBUTE_ATTRIBUTES =\n      Arrays.asList(\n          EMX_ATTRIBUTES_AGGREGATEABLE,\n          EMX_ATTRIBUTES_DATA_TYPE,\n          EMX_ATTRIBUTES_DESCRIPTION,\n          EMX_ATTRIBUTES_ENTITY,\n          EMX_ATTRIBUTES_ENUM_OPTIONS,\n          EMX_ATTRIBUTES_ID_ATTRIBUTE,\n          EMX_ATTRIBUTES_LABEL,\n          EMX_ATTRIBUTES_LABEL_ATTRIBUTE,\n          EMX_ATTRIBUTES_LOOKUP_ATTRIBUTE,\n          EMX_ATTRIBUTES_NAME,\n          EMX_ATTRIBUTES_NILLABLE,\n          EMX_ATTRIBUTES_PART_OF_ATTRIBUTE,\n          EMX_ATTRIBUTES_RANGE_MAX,\n          EMX_ATTRIBUTES_RANGE_MIN,\n          EMX_ATTRIBUTES_READ_ONLY,\n          EMX_ATTRIBUTES_REF_ENTITY,\n          EMX_ATTRIBUTES_MAPPED_BY,\n          EMX_ATTRIBUTES_VISIBLE,\n          EMX_ATTRIBUTES_UNIQUE,\n          EMX_ATTRIBUTES_EXPRESSION,\n          EMX_ATTRIBUTES_VALIDATION_EXPRESSION,\n          EMX_ATTRIBUTES_DEFAULT_VALUE,\n          EMX_ATTRIBUTES_TAGS,\n          EMX_ATTRIBUTES_AUTO);", "modifier": "private static final", "type": "List<String>", "declarator": "SUPPORTED_ATTRIBUTE_ATTRIBUTES =\n      Arrays.asList(\n          EMX_ATTRIBUTES_AGGREGATEABLE,\n          EMX_ATTRIBUTES_DATA_TYPE,\n          EMX_ATTRIBUTES_DESCRIPTION,\n          EMX_ATTRIBUTES_ENTITY,\n          EMX_ATTRIBUTES_ENUM_OPTIONS,\n          EMX_ATTRIBUTES_ID_ATTRIBUTE,\n          EMX_ATTRIBUTES_LABEL,\n          EMX_ATTRIBUTES_LABEL_ATTRIBUTE,\n          EMX_ATTRIBUTES_LOOKUP_ATTRIBUTE,\n          EMX_ATTRIBUTES_NAME,\n          EMX_ATTRIBUTES_NILLABLE,\n          EMX_ATTRIBUTES_PART_OF_ATTRIBUTE,\n          EMX_ATTRIBUTES_RANGE_MAX,\n          EMX_ATTRIBUTES_RANGE_MIN,\n          EMX_ATTRIBUTES_READ_ONLY,\n          EMX_ATTRIBUTES_REF_ENTITY,\n          EMX_ATTRIBUTES_MAPPED_BY,\n          EMX_ATTRIBUTES_VISIBLE,\n          EMX_ATTRIBUTES_UNIQUE,\n          EMX_ATTRIBUTES_EXPRESSION,\n          EMX_ATTRIBUTES_VALIDATION_EXPRESSION,\n          EMX_ATTRIBUTES_DEFAULT_VALUE,\n          EMX_ATTRIBUTES_TAGS,\n          EMX_ATTRIBUTES_AUTO)", "var_name": "SUPPORTED_ATTRIBUTE_ATTRIBUTES"}, {"original_string": "public static final String AUTO = \"auto\";", "modifier": "public static final", "type": "String", "declarator": "AUTO = \"auto\"", "var_name": "AUTO"}, {"original_string": "private final DataService dataService;", "modifier": "private final", "type": "DataService", "declarator": "dataService", "var_name": "dataService"}, {"original_string": "private final PackageFactory packageFactory;", "modifier": "private final", "type": "PackageFactory", "declarator": "packageFactory", "var_name": "packageFactory"}, {"original_string": "private final AttributeFactory attrMetaFactory;", "modifier": "private final", "type": "AttributeFactory", "declarator": "attrMetaFactory", "var_name": "attrMetaFactory"}, {"original_string": "private final EntityTypeFactory entityTypeFactory;", "modifier": "private final", "type": "EntityTypeFactory", "declarator": "entityTypeFactory", "var_name": "entityTypeFactory"}, {"original_string": "private final TagFactory tagFactory;", "modifier": "private final", "type": "TagFactory", "declarator": "tagFactory", "var_name": "tagFactory"}, {"original_string": "private final LanguageFactory languageFactory;", "modifier": "private final", "type": "LanguageFactory", "declarator": "languageFactory", "var_name": "languageFactory"}, {"original_string": "private final L10nStringFactory l10nStringFactory;", "modifier": "private final", "type": "L10nStringFactory", "declarator": "l10nStringFactory", "var_name": "l10nStringFactory"}, {"original_string": "private final EntityTypeValidator entityTypeValidator;", "modifier": "private final", "type": "EntityTypeValidator", "declarator": "entityTypeValidator", "var_name": "entityTypeValidator"}, {"original_string": "private final AttributeValidator attributeValidator;", "modifier": "private final", "type": "AttributeValidator", "declarator": "attributeValidator", "var_name": "attributeValidator"}, {"original_string": "private final TagValidator tagValidator;", "modifier": "private final", "type": "TagValidator", "declarator": "tagValidator", "var_name": "tagValidator"}, {"original_string": "private final EntityTypeDependencyResolver entityTypeDependencyResolver;", "modifier": "private final", "type": "EntityTypeDependencyResolver", "declarator": "entityTypeDependencyResolver", "var_name": "entityTypeDependencyResolver"}], "methods": [{"identifier": "EmxMetadataParser", "parameters": "(\n      DataService dataService,\n      PackageFactory packageFactory,\n      AttributeFactory attrMetaFactory,\n      EntityTypeFactory entityTypeFactory,\n      TagFactory tagFactory,\n      LanguageFactory languageFactory,\n      L10nStringFactory l10nStringFactory,\n      EntityTypeValidator entityTypeValidator,\n      AttributeValidator attributeValidator,\n      TagValidator tagValidator,\n      EntityTypeDependencyResolver entityTypeDependencyResolver)", "modifiers": "", "return": "", "signature": " EmxMetadataParser(\n      DataService dataService,\n      PackageFactory packageFactory,\n      AttributeFactory attrMetaFactory,\n      EntityTypeFactory entityTypeFactory,\n      TagFactory tagFactory,\n      LanguageFactory languageFactory,\n      L10nStringFactory l10nStringFactory,\n      EntityTypeValidator entityTypeValidator,\n      AttributeValidator attributeValidator,\n      TagValidator tagValidator,\n      EntityTypeDependencyResolver entityTypeDependencyResolver)", "full_signature": "  EmxMetadataParser(\n      DataService dataService,\n      PackageFactory packageFactory,\n      AttributeFactory attrMetaFactory,\n      EntityTypeFactory entityTypeFactory,\n      TagFactory tagFactory,\n      LanguageFactory languageFactory,\n      L10nStringFactory l10nStringFactory,\n      EntityTypeValidator entityTypeValidator,\n      AttributeValidator attributeValidator,\n      TagValidator tagValidator,\n      EntityTypeDependencyResolver entityTypeDependencyResolver)", "class_method_signature": "EmxMetadataParser.EmxMetadataParser(\n      DataService dataService,\n      PackageFactory packageFactory,\n      AttributeFactory attrMetaFactory,\n      EntityTypeFactory entityTypeFactory,\n      TagFactory tagFactory,\n      LanguageFactory languageFactory,\n      L10nStringFactory l10nStringFactory,\n      EntityTypeValidator entityTypeValidator,\n      AttributeValidator attributeValidator,\n      TagValidator tagValidator,\n      EntityTypeDependencyResolver entityTypeDependencyResolver)", "testcase": false, "constructor": true}, {"identifier": "parse", "parameters": "(\n      final RepositoryCollection source, @Nullable @CheckForNull String packageId)", "modifiers": "@Override public", "return": "ParsedMetaData", "signature": "ParsedMetaData parse(\n      final RepositoryCollection source, @Nullable @CheckForNull String packageId)", "full_signature": "@Override public ParsedMetaData parse(\n      final RepositoryCollection source, @Nullable @CheckForNull String packageId)", "class_method_signature": "EmxMetadataParser.parse(\n      final RepositoryCollection source, @Nullable @CheckForNull String packageId)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(RepositoryCollection source)", "modifiers": "@Override public", "return": "EntitiesValidationReport", "signature": "EntitiesValidationReport validate(RepositoryCollection source)", "full_signature": "@Override public EntitiesValidationReport validate(RepositoryCollection source)", "class_method_signature": "EmxMetadataParser.validate(RepositoryCollection source)", "testcase": false, "constructor": false}, {"identifier": "getEntityTypeMap", "parameters": "(\n      DataService dataService, RepositoryCollection source)", "modifiers": "private", "return": "ImmutableMap<String, EntityType>", "signature": "ImmutableMap<String, EntityType> getEntityTypeMap(\n      DataService dataService, RepositoryCollection source)", "full_signature": "private ImmutableMap<String, EntityType> getEntityTypeMap(\n      DataService dataService, RepositoryCollection source)", "class_method_signature": "EmxMetadataParser.getEntityTypeMap(\n      DataService dataService, RepositoryCollection source)", "testcase": false, "constructor": false}, {"identifier": "buildValidationReport", "parameters": "(\n      RepositoryCollection source,\n      MyEntitiesValidationReport report,\n      Map<String, EntityType> metaDataMap)", "modifiers": "private", "return": "EntitiesValidationReport", "signature": "EntitiesValidationReport buildValidationReport(\n      RepositoryCollection source,\n      MyEntitiesValidationReport report,\n      Map<String, EntityType> metaDataMap)", "full_signature": "private EntitiesValidationReport buildValidationReport(\n      RepositoryCollection source,\n      MyEntitiesValidationReport report,\n      Map<String, EntityType> metaDataMap)", "class_method_signature": "EmxMetadataParser.buildValidationReport(\n      RepositoryCollection source,\n      MyEntitiesValidationReport report,\n      Map<String, EntityType> metaDataMap)", "testcase": false, "constructor": false}, {"identifier": "getEntityTypeFromSource", "parameters": "(RepositoryCollection source)", "modifiers": "private", "return": "IntermediateParseResults", "signature": "IntermediateParseResults getEntityTypeFromSource(RepositoryCollection source)", "full_signature": "private IntermediateParseResults getEntityTypeFromSource(RepositoryCollection source)", "class_method_signature": "EmxMetadataParser.getEntityTypeFromSource(RepositoryCollection source)", "testcase": false, "constructor": false}, {"identifier": "postProcessMetadata", "parameters": "(IntermediateParseResults intermediateResults)", "modifiers": "private static", "return": "void", "signature": "void postProcessMetadata(IntermediateParseResults intermediateResults)", "full_signature": "private static void postProcessMetadata(IntermediateParseResults intermediateResults)", "class_method_signature": "EmxMetadataParser.postProcessMetadata(IntermediateParseResults intermediateResults)", "testcase": false, "constructor": false}, {"identifier": "setDefaultLabel", "parameters": "(EntityType entityType)", "modifiers": "private static", "return": "void", "signature": "void setDefaultLabel(EntityType entityType)", "full_signature": "private static void setDefaultLabel(EntityType entityType)", "class_method_signature": "EmxMetadataParser.setDefaultLabel(EntityType entityType)", "testcase": false, "constructor": false}, {"identifier": "parseTagsSheet", "parameters": "(Repository<Entity> tagRepository)", "modifiers": "", "return": "IntermediateParseResults", "signature": "IntermediateParseResults parseTagsSheet(Repository<Entity> tagRepository)", "full_signature": " IntermediateParseResults parseTagsSheet(Repository<Entity> tagRepository)", "class_method_signature": "EmxMetadataParser.parseTagsSheet(Repository<Entity> tagRepository)", "testcase": false, "constructor": false}, {"identifier": "parsePackagesSheet", "parameters": "(\n      Repository<Entity> repo, IntermediateParseResults intermediateResults)", "modifiers": "private", "return": "void", "signature": "void parsePackagesSheet(\n      Repository<Entity> repo, IntermediateParseResults intermediateResults)", "full_signature": "private void parsePackagesSheet(\n      Repository<Entity> repo, IntermediateParseResults intermediateResults)", "class_method_signature": "EmxMetadataParser.parsePackagesSheet(\n      Repository<Entity> repo, IntermediateParseResults intermediateResults)", "testcase": false, "constructor": false}, {"identifier": "parseSinglePackage", "parameters": "(\n      IntermediateParseResults intermediateResults, int rowIndex, Entity packageEntity)", "modifiers": "", "return": "IntermediateParseResults", "signature": "IntermediateParseResults parseSinglePackage(\n      IntermediateParseResults intermediateResults, int rowIndex, Entity packageEntity)", "full_signature": " IntermediateParseResults parseSinglePackage(\n      IntermediateParseResults intermediateResults, int rowIndex, Entity packageEntity)", "class_method_signature": "EmxMetadataParser.parseSinglePackage(\n      IntermediateParseResults intermediateResults, int rowIndex, Entity packageEntity)", "testcase": false, "constructor": false}, {"identifier": "toTags", "parameters": "(IntermediateParseResults intermediateResults, List<String> tagIdentifiers)", "modifiers": "", "return": "List<Tag>", "signature": "List<Tag> toTags(IntermediateParseResults intermediateResults, List<String> tagIdentifiers)", "full_signature": " List<Tag> toTags(IntermediateParseResults intermediateResults, List<String> tagIdentifiers)", "class_method_signature": "EmxMetadataParser.toTags(IntermediateParseResults intermediateResults, List<String> tagIdentifiers)", "testcase": false, "constructor": false}, {"identifier": "entityToTag", "parameters": "(String id, Entity tagEntity)", "modifiers": "private", "return": "Tag", "signature": "Tag entityToTag(String id, Entity tagEntity)", "full_signature": "private Tag entityToTag(String id, Entity tagEntity)", "class_method_signature": "EmxMetadataParser.entityToTag(String id, Entity tagEntity)", "testcase": false, "constructor": false}, {"identifier": "parseEntitiesSheet", "parameters": "(\n      Repository<Entity> entitiesRepo, IntermediateParseResults intermediateResults)", "modifiers": "private", "return": "void", "signature": "void parseEntitiesSheet(\n      Repository<Entity> entitiesRepo, IntermediateParseResults intermediateResults)", "full_signature": "private void parseEntitiesSheet(\n      Repository<Entity> entitiesRepo, IntermediateParseResults intermediateResults)", "class_method_signature": "EmxMetadataParser.parseEntitiesSheet(\n      Repository<Entity> entitiesRepo, IntermediateParseResults intermediateResults)", "testcase": false, "constructor": false}, {"identifier": "checkEntitySheetHeaders", "parameters": "(Repository<Entity> entitiesRepo)", "modifiers": "", "return": "void", "signature": "void checkEntitySheetHeaders(Repository<Entity> entitiesRepo)", "full_signature": " void checkEntitySheetHeaders(Repository<Entity> entitiesRepo)", "class_method_signature": "EmxMetadataParser.checkEntitySheetHeaders(Repository<Entity> entitiesRepo)", "testcase": false, "constructor": false}, {"identifier": "parseSingleEntityType", "parameters": "(\n      IntermediateParseResults intermediateResults, int rowIndex, Entity entity)", "modifiers": "", "return": "void", "signature": "void parseSingleEntityType(\n      IntermediateParseResults intermediateResults, int rowIndex, Entity entity)", "full_signature": " void parseSingleEntityType(\n      IntermediateParseResults intermediateResults, int rowIndex, Entity entity)", "class_method_signature": "EmxMetadataParser.parseSingleEntityType(\n      IntermediateParseResults intermediateResults, int rowIndex, Entity entity)", "testcase": false, "constructor": false}, {"identifier": "setPackage", "parameters": "(\n      IntermediateParseResults intermediateResults,\n      int rowIndex,\n      String emxEntityPackage,\n      EntityType entityType)", "modifiers": "private", "return": "void", "signature": "void setPackage(\n      IntermediateParseResults intermediateResults,\n      int rowIndex,\n      String emxEntityPackage,\n      EntityType entityType)", "full_signature": "private void setPackage(\n      IntermediateParseResults intermediateResults,\n      int rowIndex,\n      String emxEntityPackage,\n      EntityType entityType)", "class_method_signature": "EmxMetadataParser.setPackage(\n      IntermediateParseResults intermediateResults,\n      int rowIndex,\n      String emxEntityPackage,\n      EntityType entityType)", "testcase": false, "constructor": false}, {"identifier": "setEntityExtends", "parameters": "(\n      IntermediateParseResults intermediateResults,\n      String emxEntityName,\n      String emxEntityExtends,\n      EntityType entityType,\n      int rowIndex)", "modifiers": "private", "return": "void", "signature": "void setEntityExtends(\n      IntermediateParseResults intermediateResults,\n      String emxEntityName,\n      String emxEntityExtends,\n      EntityType entityType,\n      int rowIndex)", "full_signature": "private void setEntityExtends(\n      IntermediateParseResults intermediateResults,\n      String emxEntityName,\n      String emxEntityExtends,\n      EntityType entityType,\n      int rowIndex)", "class_method_signature": "EmxMetadataParser.setEntityExtends(\n      IntermediateParseResults intermediateResults,\n      String emxEntityName,\n      String emxEntityExtends,\n      EntityType entityType,\n      int rowIndex)", "testcase": false, "constructor": false}, {"identifier": "setI18nEntityTypeLabelAndDesc", "parameters": "(Entity entity, EntityType entityType, String attributeName)", "modifiers": "", "return": "void", "signature": "void setI18nEntityTypeLabelAndDesc(Entity entity, EntityType entityType, String attributeName)", "full_signature": " void setI18nEntityTypeLabelAndDesc(Entity entity, EntityType entityType, String attributeName)", "class_method_signature": "EmxMetadataParser.setI18nEntityTypeLabelAndDesc(Entity entity, EntityType entityType, String attributeName)", "testcase": false, "constructor": false}, {"identifier": "toEntityTypeId", "parameters": "(String emxEntityName, String emxEntityPackage)", "modifiers": "private", "return": "String", "signature": "String toEntityTypeId(String emxEntityName, String emxEntityPackage)", "full_signature": "private String toEntityTypeId(String emxEntityName, String emxEntityPackage)", "class_method_signature": "EmxMetadataParser.toEntityTypeId(String emxEntityName, String emxEntityPackage)", "testcase": false, "constructor": false}, {"identifier": "parseAttributesSheet", "parameters": "(\n      Repository<Entity> attributesRepo, IntermediateParseResults intermediateResults)", "modifiers": "private", "return": "void", "signature": "void parseAttributesSheet(\n      Repository<Entity> attributesRepo, IntermediateParseResults intermediateResults)", "full_signature": "private void parseAttributesSheet(\n      Repository<Entity> attributesRepo, IntermediateParseResults intermediateResults)", "class_method_signature": "EmxMetadataParser.parseAttributesSheet(\n      Repository<Entity> attributesRepo, IntermediateParseResults intermediateResults)", "testcase": false, "constructor": false}, {"identifier": "createAttributeStubs", "parameters": "(\n      Repository<Entity> attributesRepo,\n      Map<String, Map<String, EmxAttribute>> attributesMap,\n      int rowIndex)", "modifiers": "private", "return": "void", "signature": "void createAttributeStubs(\n      Repository<Entity> attributesRepo,\n      Map<String, Map<String, EmxAttribute>> attributesMap,\n      int rowIndex)", "full_signature": "private void createAttributeStubs(\n      Repository<Entity> attributesRepo,\n      Map<String, Map<String, EmxAttribute>> attributesMap,\n      int rowIndex)", "class_method_signature": "EmxMetadataParser.createAttributeStubs(\n      Repository<Entity> attributesRepo,\n      Map<String, Map<String, EmxAttribute>> attributesMap,\n      int rowIndex)", "testcase": false, "constructor": false}, {"identifier": "validateAndCreateAttributeRelationships", "parameters": "(\n      Repository<Entity> attributesRepo, Map<String, Map<String, EmxAttribute>> attributesMap)", "modifiers": "private", "return": "Map<String, Set<String>>", "signature": "Map<String, Set<String>> validateAndCreateAttributeRelationships(\n      Repository<Entity> attributesRepo, Map<String, Map<String, EmxAttribute>> attributesMap)", "full_signature": "private Map<String, Set<String>> validateAndCreateAttributeRelationships(\n      Repository<Entity> attributesRepo, Map<String, Map<String, EmxAttribute>> attributesMap)", "class_method_signature": "EmxMetadataParser.validateAndCreateAttributeRelationships(\n      Repository<Entity> attributesRepo, Map<String, Map<String, EmxAttribute>> attributesMap)", "testcase": false, "constructor": false}, {"identifier": "storeAttributes", "parameters": "(\n      IntermediateParseResults intermediateResults,\n      Map<String, Map<String, EmxAttribute>> attributesMap,\n      Map<String, Set<String>> rootAttributes)", "modifiers": "private", "return": "void", "signature": "void storeAttributes(\n      IntermediateParseResults intermediateResults,\n      Map<String, Map<String, EmxAttribute>> attributesMap,\n      Map<String, Set<String>> rootAttributes)", "full_signature": "private void storeAttributes(\n      IntermediateParseResults intermediateResults,\n      Map<String, Map<String, EmxAttribute>> attributesMap,\n      Map<String, Set<String>> rootAttributes)", "class_method_signature": "EmxMetadataParser.storeAttributes(\n      IntermediateParseResults intermediateResults,\n      Map<String, Map<String, EmxAttribute>> attributesMap,\n      Map<String, Set<String>> rootAttributes)", "testcase": false, "constructor": false}, {"identifier": "validatePartOfAttribute", "parameters": "(\n      int rowIndex,\n      String entityTypeId,\n      String attributeName,\n      String partOfAttribute,\n      EmxAttribute emxCompoundAttribute)", "modifiers": "protected", "return": "Attribute", "signature": "Attribute validatePartOfAttribute(\n      int rowIndex,\n      String entityTypeId,\n      String attributeName,\n      String partOfAttribute,\n      EmxAttribute emxCompoundAttribute)", "full_signature": "protected Attribute validatePartOfAttribute(\n      int rowIndex,\n      String entityTypeId,\n      String attributeName,\n      String partOfAttribute,\n      EmxAttribute emxCompoundAttribute)", "class_method_signature": "EmxMetadataParser.validatePartOfAttribute(\n      int rowIndex,\n      String entityTypeId,\n      String attributeName,\n      String partOfAttribute,\n      EmxAttribute emxCompoundAttribute)", "testcase": false, "constructor": false}, {"identifier": "parseSingleAttribute", "parameters": "(\n      IntermediateParseResults intermediateResults,\n      Map<String, Map<String, EmxAttribute>> attributesMap,\n      int rowIndex,\n      Entity emxAttrEntity)", "modifiers": "private", "return": "void", "signature": "void parseSingleAttribute(\n      IntermediateParseResults intermediateResults,\n      Map<String, Map<String, EmxAttribute>> attributesMap,\n      int rowIndex,\n      Entity emxAttrEntity)", "full_signature": "private void parseSingleAttribute(\n      IntermediateParseResults intermediateResults,\n      Map<String, Map<String, EmxAttribute>> attributesMap,\n      int rowIndex,\n      Entity emxAttrEntity)", "class_method_signature": "EmxMetadataParser.parseSingleAttribute(\n      IntermediateParseResults intermediateResults,\n      Map<String, Map<String, EmxAttribute>> attributesMap,\n      int rowIndex,\n      Entity emxAttrEntity)", "testcase": false, "constructor": false}, {"identifier": "getEntityType", "parameters": "(IntermediateParseResults intermediateResults, String emxEntityName)", "modifiers": "private", "return": "void", "signature": "void getEntityType(IntermediateParseResults intermediateResults, String emxEntityName)", "full_signature": "private void getEntityType(IntermediateParseResults intermediateResults, String emxEntityName)", "class_method_signature": "EmxMetadataParser.getEntityType(IntermediateParseResults intermediateResults, String emxEntityName)", "testcase": false, "constructor": false}, {"identifier": "setIdAttr", "parameters": "(int rowIndex, EmxAttribute emxAttr, Attribute attr, String emxIdAttrValue)", "modifiers": "", "return": "void", "signature": "void setIdAttr(int rowIndex, EmxAttribute emxAttr, Attribute attr, String emxIdAttrValue)", "full_signature": " void setIdAttr(int rowIndex, EmxAttribute emxAttr, Attribute attr, String emxIdAttrValue)", "class_method_signature": "EmxMetadataParser.setIdAttr(int rowIndex, EmxAttribute emxAttr, Attribute attr, String emxIdAttrValue)", "testcase": false, "constructor": false}, {"identifier": "validateAutoAttrValue", "parameters": "(int rowIndex, Attribute attr, String emxEntityName)", "modifiers": "", "return": "void", "signature": "void validateAutoAttrValue(int rowIndex, Attribute attr, String emxEntityName)", "full_signature": " void validateAutoAttrValue(int rowIndex, Attribute attr, String emxEntityName)", "class_method_signature": "EmxMetadataParser.validateAutoAttrValue(int rowIndex, Attribute attr, String emxEntityName)", "testcase": false, "constructor": false}, {"identifier": "setRange", "parameters": "(\n      Entity emxAttrEntity, String emxEntityName, String emxName, Attribute attr, int rowIndex)", "modifiers": "", "return": "void", "signature": "void setRange(\n      Entity emxAttrEntity, String emxEntityName, String emxName, Attribute attr, int rowIndex)", "full_signature": " void setRange(\n      Entity emxAttrEntity, String emxEntityName, String emxName, Attribute attr, int rowIndex)", "class_method_signature": "EmxMetadataParser.setRange(\n      Entity emxAttrEntity, String emxEntityName, String emxName, Attribute attr, int rowIndex)", "testcase": false, "constructor": false}, {"identifier": "toRange", "parameters": "(\n      String emxEntityName,\n      String emxName,\n      int rowIndex,\n      String emxRange,\n      String emxAttributesRange)", "modifiers": "private", "return": "Long", "signature": "Long toRange(\n      String emxEntityName,\n      String emxName,\n      int rowIndex,\n      String emxRange,\n      String emxAttributesRange)", "full_signature": "private Long toRange(\n      String emxEntityName,\n      String emxName,\n      int rowIndex,\n      String emxRange,\n      String emxAttributesRange)", "class_method_signature": "EmxMetadataParser.toRange(\n      String emxEntityName,\n      String emxName,\n      int rowIndex,\n      String emxRange,\n      String emxAttributesRange)", "testcase": false, "constructor": false}, {"identifier": "setEnumOptions", "parameters": "(Entity emxAttrEntity, String emxEntityName, Attribute attr, int rowIndex)", "modifiers": "", "return": "void", "signature": "void setEnumOptions(Entity emxAttrEntity, String emxEntityName, Attribute attr, int rowIndex)", "full_signature": " void setEnumOptions(Entity emxAttrEntity, String emxEntityName, Attribute attr, int rowIndex)", "class_method_signature": "EmxMetadataParser.setEnumOptions(Entity emxAttrEntity, String emxEntityName, Attribute attr, int rowIndex)", "testcase": false, "constructor": false}, {"identifier": "setI18nAttributeLabelAndDesc", "parameters": "(Entity emxAttrEntity, Attribute attr, String attrName)", "modifiers": "", "return": "void", "signature": "void setI18nAttributeLabelAndDesc(Entity emxAttrEntity, Attribute attr, String attrName)", "full_signature": " void setI18nAttributeLabelAndDesc(Entity emxAttrEntity, Attribute attr, String attrName)", "class_method_signature": "EmxMetadataParser.setI18nAttributeLabelAndDesc(Entity emxAttrEntity, Attribute attr, String attrName)", "testcase": false, "constructor": false}, {"identifier": "setLabelAttr", "parameters": "(\n      int rowIndex,\n      String emxEntityName,\n      EmxAttribute emxAttr,\n      Attribute attr,\n      String emxIsLabelAttr)", "modifiers": "", "return": "void", "signature": "void setLabelAttr(\n      int rowIndex,\n      String emxEntityName,\n      EmxAttribute emxAttr,\n      Attribute attr,\n      String emxIsLabelAttr)", "full_signature": " void setLabelAttr(\n      int rowIndex,\n      String emxEntityName,\n      EmxAttribute emxAttr,\n      Attribute attr,\n      String emxIsLabelAttr)", "class_method_signature": "EmxMetadataParser.setLabelAttr(\n      int rowIndex,\n      String emxEntityName,\n      EmxAttribute emxAttr,\n      Attribute attr,\n      String emxIsLabelAttr)", "testcase": false, "constructor": false}, {"identifier": "setLookupAttr", "parameters": "(\n      int rowIndex,\n      String emxEntityName,\n      EmxAttribute emxAttr,\n      Attribute attr,\n      String emxIsLookupAttr)", "modifiers": "", "return": "void", "signature": "void setLookupAttr(\n      int rowIndex,\n      String emxEntityName,\n      EmxAttribute emxAttr,\n      Attribute attr,\n      String emxIsLookupAttr)", "full_signature": " void setLookupAttr(\n      int rowIndex,\n      String emxEntityName,\n      EmxAttribute emxAttr,\n      Attribute attr,\n      String emxIsLookupAttr)", "class_method_signature": "EmxMetadataParser.setLookupAttr(\n      int rowIndex,\n      String emxEntityName,\n      EmxAttribute emxAttr,\n      Attribute attr,\n      String emxIsLookupAttr)", "testcase": false, "constructor": false}, {"identifier": "setAttrVisible", "parameters": "(int rowIndex, Attribute attr, String emxAttrVisible)", "modifiers": "", "return": "void", "signature": "void setAttrVisible(int rowIndex, Attribute attr, String emxAttrVisible)", "full_signature": " void setAttrVisible(int rowIndex, Attribute attr, String emxAttrVisible)", "class_method_signature": "EmxMetadataParser.setAttrVisible(int rowIndex, Attribute attr, String emxAttrVisible)", "testcase": false, "constructor": false}, {"identifier": "setAttrNullable", "parameters": "(int rowIndex, Attribute attr, String emxAttrNillable)", "modifiers": "", "return": "void", "signature": "void setAttrNullable(int rowIndex, Attribute attr, String emxAttrNillable)", "full_signature": " void setAttrNullable(int rowIndex, Attribute attr, String emxAttrNillable)", "class_method_signature": "EmxMetadataParser.setAttrNullable(int rowIndex, Attribute attr, String emxAttrNillable)", "testcase": false, "constructor": false}, {"identifier": "validateEmxIdAttrValue", "parameters": "(int rowIndex, Attribute attr, String emxIdAttrValue)", "modifiers": "", "return": "void", "signature": "void validateEmxIdAttrValue(int rowIndex, Attribute attr, String emxIdAttrValue)", "full_signature": " void validateEmxIdAttrValue(int rowIndex, Attribute attr, String emxIdAttrValue)", "class_method_signature": "EmxMetadataParser.validateEmxIdAttrValue(int rowIndex, Attribute attr, String emxIdAttrValue)", "testcase": false, "constructor": false}, {"identifier": "setAttributeType", "parameters": "(int rowIndex, Attribute attr, String emxDataType)", "modifiers": "private", "return": "void", "signature": "void setAttributeType(int rowIndex, Attribute attr, String emxDataType)", "full_signature": "private void setAttributeType(int rowIndex, Attribute attr, String emxDataType)", "class_method_signature": "EmxMetadataParser.setAttributeType(int rowIndex, Attribute attr, String emxDataType)", "testcase": false, "constructor": false}, {"identifier": "checkAttrSheetHeaders", "parameters": "(Attribute attr)", "modifiers": "", "return": "void", "signature": "void checkAttrSheetHeaders(Attribute attr)", "full_signature": " void checkAttrSheetHeaders(Attribute attr)", "class_method_signature": "EmxMetadataParser.checkAttrSheetHeaders(Attribute attr)", "testcase": false, "constructor": false}, {"identifier": "checkReferenceDatatypeRules", "parameters": "(\n      int rowIndex, String emxEntityName, String emxName, Attribute attr, String emxRefEntity)", "modifiers": "protected", "return": "void", "signature": "void checkReferenceDatatypeRules(\n      int rowIndex, String emxEntityName, String emxName, Attribute attr, String emxRefEntity)", "full_signature": "protected void checkReferenceDatatypeRules(\n      int rowIndex, String emxEntityName, String emxName, Attribute attr, String emxRefEntity)", "class_method_signature": "EmxMetadataParser.checkReferenceDatatypeRules(\n      int rowIndex, String emxEntityName, String emxName, Attribute attr, String emxRefEntity)", "testcase": false, "constructor": false}, {"identifier": "checkRequiredAttributeAttributes", "parameters": "(\n      int rowIndex, String attributeName, String entityTypeId)", "modifiers": "protected", "return": "void", "signature": "void checkRequiredAttributeAttributes(\n      int rowIndex, String attributeName, String entityTypeId)", "full_signature": "protected void checkRequiredAttributeAttributes(\n      int rowIndex, String attributeName, String entityTypeId)", "class_method_signature": "EmxMetadataParser.checkRequiredAttributeAttributes(\n      int rowIndex, String attributeName, String entityTypeId)", "testcase": false, "constructor": false}, {"identifier": "reiterateToMapRefEntity", "parameters": "(\n      Repository<Entity> attributeRepo, IntermediateParseResults intermediateResults)", "modifiers": "private", "return": "void", "signature": "void reiterateToMapRefEntity(\n      Repository<Entity> attributeRepo, IntermediateParseResults intermediateResults)", "full_signature": "private void reiterateToMapRefEntity(\n      Repository<Entity> attributeRepo, IntermediateParseResults intermediateResults)", "class_method_signature": "EmxMetadataParser.reiterateToMapRefEntity(\n      Repository<Entity> attributeRepo, IntermediateParseResults intermediateResults)", "testcase": false, "constructor": false}, {"identifier": "processAttrRefEntityName", "parameters": "(\n      IntermediateParseResults intermediateResults,\n      int rowIndex,\n      String refEntityName,\n      String mappedByAttrName,\n      Attribute attribute)", "modifiers": "", "return": "void", "signature": "void processAttrRefEntityName(\n      IntermediateParseResults intermediateResults,\n      int rowIndex,\n      String refEntityName,\n      String mappedByAttrName,\n      Attribute attribute)", "full_signature": " void processAttrRefEntityName(\n      IntermediateParseResults intermediateResults,\n      int rowIndex,\n      String refEntityName,\n      String mappedByAttrName,\n      Attribute attribute)", "class_method_signature": "EmxMetadataParser.processAttrRefEntityName(\n      IntermediateParseResults intermediateResults,\n      int rowIndex,\n      String refEntityName,\n      String mappedByAttrName,\n      Attribute attribute)", "testcase": false, "constructor": false}, {"identifier": "putEntitiesInDefaultPackage", "parameters": "(\n      IntermediateParseResults intermediateResults, String defaultPackageId)", "modifiers": "", "return": "List<EntityType>", "signature": "List<EntityType> putEntitiesInDefaultPackage(\n      IntermediateParseResults intermediateResults, String defaultPackageId)", "full_signature": " List<EntityType> putEntitiesInDefaultPackage(\n      IntermediateParseResults intermediateResults, String defaultPackageId)", "class_method_signature": "EmxMetadataParser.putEntitiesInDefaultPackage(\n      IntermediateParseResults intermediateResults, String defaultPackageId)", "testcase": false, "constructor": false}, {"identifier": "getPackage", "parameters": "(IntermediateParseResults intermediateResults, String packageId)", "modifiers": "", "return": "Package", "signature": "Package getPackage(IntermediateParseResults intermediateResults, String packageId)", "full_signature": " Package getPackage(IntermediateParseResults intermediateResults, String packageId)", "class_method_signature": "EmxMetadataParser.getPackage(IntermediateParseResults intermediateResults, String packageId)", "testcase": false, "constructor": false}, {"identifier": "getEntityTypeFromDataService", "parameters": "(\n      DataService dataService, Iterable<String> emxEntityNames)", "modifiers": "static", "return": "ImmutableMap<String, EntityType>", "signature": "ImmutableMap<String, EntityType> getEntityTypeFromDataService(\n      DataService dataService, Iterable<String> emxEntityNames)", "full_signature": "static ImmutableMap<String, EntityType> getEntityTypeFromDataService(\n      DataService dataService, Iterable<String> emxEntityNames)", "class_method_signature": "EmxMetadataParser.getEntityTypeFromDataService(\n      DataService dataService, Iterable<String> emxEntityNames)", "testcase": false, "constructor": false}, {"identifier": "parseBoolean", "parameters": "(String booleanString, int rowIndex, String columnName)", "modifiers": "static", "return": "boolean", "signature": "boolean parseBoolean(String booleanString, int rowIndex, String columnName)", "full_signature": "static boolean parseBoolean(String booleanString, int rowIndex, String columnName)", "class_method_signature": "EmxMetadataParser.parseBoolean(String booleanString, int rowIndex, String columnName)", "testcase": false, "constructor": false}, {"identifier": "parseLanguages", "parameters": "(\n      Repository<Entity> emxLanguageRepo, IntermediateParseResults intermediateParseResults)", "modifiers": "private", "return": "void", "signature": "void parseLanguages(\n      Repository<Entity> emxLanguageRepo, IntermediateParseResults intermediateParseResults)", "full_signature": "private void parseLanguages(\n      Repository<Entity> emxLanguageRepo, IntermediateParseResults intermediateParseResults)", "class_method_signature": "EmxMetadataParser.parseLanguages(\n      Repository<Entity> emxLanguageRepo, IntermediateParseResults intermediateParseResults)", "testcase": false, "constructor": false}, {"identifier": "toLanguage", "parameters": "(Entity emxLanguageEntity)", "modifiers": "private", "return": "Language", "signature": "Language toLanguage(Entity emxLanguageEntity)", "full_signature": "private Language toLanguage(Entity emxLanguageEntity)", "class_method_signature": "EmxMetadataParser.toLanguage(Entity emxLanguageEntity)", "testcase": false, "constructor": false}, {"identifier": "parseI18nStrings", "parameters": "(\n      Repository<Entity> emxI18nStringRepo, IntermediateParseResults intermediateParseResults)", "modifiers": "private", "return": "void", "signature": "void parseI18nStrings(\n      Repository<Entity> emxI18nStringRepo, IntermediateParseResults intermediateParseResults)", "full_signature": "private void parseI18nStrings(\n      Repository<Entity> emxI18nStringRepo, IntermediateParseResults intermediateParseResults)", "class_method_signature": "EmxMetadataParser.parseI18nStrings(\n      Repository<Entity> emxI18nStringRepo, IntermediateParseResults intermediateParseResults)", "testcase": false, "constructor": false}, {"identifier": "toL10nString", "parameters": "(Entity emxI18nStringEntity)", "modifiers": "", "return": "L10nString", "signature": "L10nString toL10nString(Entity emxI18nStringEntity)", "full_signature": " L10nString toL10nString(Entity emxI18nStringEntity)", "class_method_signature": "EmxMetadataParser.toL10nString(Entity emxI18nStringEntity)", "testcase": false, "constructor": false}, {"identifier": "generateEntityValidationReport", "parameters": "(\n      RepositoryCollection source,\n      MyEntitiesValidationReport report,\n      Map<String, EntityType> metaDataMap)", "modifiers": "private", "return": "MyEntitiesValidationReport", "signature": "MyEntitiesValidationReport generateEntityValidationReport(\n      RepositoryCollection source,\n      MyEntitiesValidationReport report,\n      Map<String, EntityType> metaDataMap)", "full_signature": "private MyEntitiesValidationReport generateEntityValidationReport(\n      RepositoryCollection source,\n      MyEntitiesValidationReport report,\n      Map<String, EntityType> metaDataMap)", "class_method_signature": "EmxMetadataParser.generateEntityValidationReport(\n      RepositoryCollection source,\n      MyEntitiesValidationReport report,\n      Map<String, EntityType> metaDataMap)", "testcase": false, "constructor": false}, {"identifier": "getAttributeValidationReport", "parameters": "(\n      MyEntitiesValidationReport report,\n      String sheet,\n      Repository<Entity> sourceRepository,\n      EntityType target)", "modifiers": "private", "return": "MyEntitiesValidationReport", "signature": "MyEntitiesValidationReport getAttributeValidationReport(\n      MyEntitiesValidationReport report,\n      String sheet,\n      Repository<Entity> sourceRepository,\n      EntityType target)", "full_signature": "private MyEntitiesValidationReport getAttributeValidationReport(\n      MyEntitiesValidationReport report,\n      String sheet,\n      Repository<Entity> sourceRepository,\n      EntityType target)", "class_method_signature": "EmxMetadataParser.getAttributeValidationReport(\n      MyEntitiesValidationReport report,\n      String sheet,\n      Repository<Entity> sourceRepository,\n      EntityType target)", "testcase": false, "constructor": false}], "file": "molgenis-data-import/src/main/java/org/molgenis/data/importer/emx/EmxMetadataParser.java"}, "focal_method": {"identifier": "setRange", "parameters": "(\n      Entity emxAttrEntity, String emxEntityName, String emxName, Attribute attr, int rowIndex)", "modifiers": "", "return": "void", "body": "void setRange(\n      Entity emxAttrEntity, String emxEntityName, String emxName, Attribute attr, int rowIndex) {\n    String emxRangeMin = emxAttrEntity.getString(EMX_ATTRIBUTES_RANGE_MIN);\n    Long rangeMin =\n        toRange(emxEntityName, emxName, rowIndex, emxRangeMin, EMX_ATTRIBUTES_RANGE_MIN);\n\n    String emxRangeMax = emxAttrEntity.getString(EMX_ATTRIBUTES_RANGE_MAX);\n    Long rangeMax =\n        toRange(emxEntityName, emxName, rowIndex, emxRangeMax, EMX_ATTRIBUTES_RANGE_MAX);\n\n    if (rangeMin != null || rangeMax != null) {\n      attr.setRange(new Range(rangeMin, rangeMax));\n    }\n  }", "signature": "void setRange(\n      Entity emxAttrEntity, String emxEntityName, String emxName, Attribute attr, int rowIndex)", "full_signature": " void setRange(\n      Entity emxAttrEntity, String emxEntityName, String emxName, Attribute attr, int rowIndex)", "class_method_signature": "EmxMetadataParser.setRange(\n      Entity emxAttrEntity, String emxEntityName, String emxName, Attribute attr, int rowIndex)", "testcase": false, "constructor": false, "invocations": ["getString", "toRange", "getString", "toRange", "setRange"]}, "repository": {"repo_id": 8010626, "url": "https://github.com/molgenis/molgenis", "language": "Java", "is_fork": false, "fork_count": 96, "stargazer_count": 82, "size": 168771, "license": "licensed"}}