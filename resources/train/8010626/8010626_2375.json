{"test_class": {"identifier": "IndexActionRepositoryDecoratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Repository<Entity> delegateRepository;", "modifier": "private", "type": "Repository<Entity>", "declarator": "delegateRepository", "var_name": "delegateRepository"}, {"original_string": "private IndexActionRegisterService indexActionRegisterService;", "modifier": "private", "type": "IndexActionRegisterService", "declarator": "indexActionRegisterService", "var_name": "indexActionRegisterService"}, {"original_string": "private IndexActionRepositoryDecorator indexActionRepositoryDecorator;", "modifier": "private", "type": "IndexActionRepositoryDecorator", "declarator": "indexActionRepositoryDecorator", "var_name": "indexActionRepositoryDecorator"}, {"original_string": "private EntityType entityType;", "modifier": "private", "type": "EntityType", "declarator": "entityType", "var_name": "entityType"}, {"original_string": "private EntityType mappedByEntity;", "modifier": "private", "type": "EntityType", "declarator": "mappedByEntity", "var_name": "mappedByEntity"}, {"original_string": "private EntityType inversedByEntity;", "modifier": "private", "type": "EntityType", "declarator": "inversedByEntity", "var_name": "inversedByEntity"}], "file": "molgenis-data-index/src/test/java/org/molgenis/data/index/IndexActionRepositoryDecoratorTest.java"}, "test_case": {"identifier": "addEntityBidi", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void addEntityBidi() {\n    initEntityMetaBidi();\n\n    Entity mappedByEntity0 = mock(Entity.class);\n    when(mappedByEntity0.getIdValue()).thenReturn(\"mappedBy0\");\n    Entity inversedByEntity0 = mock(Entity.class);\n    when(inversedByEntity0.getIdValue()).thenReturn(\"inversedBy0\");\n\n    Entity entity0 = mock(Entity.class);\n    when(entity0.getEntities(\"mappedByAttr\")).thenReturn(singleton(mappedByEntity0));\n    when(entity0.getEntity(\"inversedByAttr\")).thenReturn(inversedByEntity0);\n    when(entity0.getIdValue()).thenReturn(1);\n    indexActionRepositoryDecorator.add(entity0);\n    verify(delegateRepository, times(1)).add(entity0);\n    verify(indexActionRegisterService).register(entityType, 1);\n    verify(indexActionRegisterService).register(mappedByEntity, \"mappedBy0\");\n    verify(indexActionRegisterService).register(inversedByEntity, \"inversedBy0\");\n    verifyNoMoreInteractions(indexActionRegisterService);\n  }", "signature": "void addEntityBidi()", "full_signature": "@Test void addEntityBidi()", "class_method_signature": "IndexActionRepositoryDecoratorTest.addEntityBidi()", "testcase": true, "constructor": false, "invocations": ["initEntityMetaBidi", "mock", "thenReturn", "when", "getIdValue", "mock", "thenReturn", "when", "getIdValue", "mock", "thenReturn", "when", "getEntities", "singleton", "thenReturn", "when", "getEntity", "thenReturn", "when", "getIdValue", "add", "add", "verify", "times", "register", "verify", "register", "verify", "register", "verify", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "IndexActionRepositoryDecorator", "superclass": "extends AbstractRepositoryDecorator<Entity>", "interfaces": "", "fields": [{"original_string": "private final IndexActionRegisterService indexActionRegisterService;", "modifier": "private final", "type": "IndexActionRegisterService", "declarator": "indexActionRegisterService", "var_name": "indexActionRegisterService"}], "methods": [{"identifier": "IndexActionRepositoryDecorator", "parameters": "(\n      Repository<Entity> delegateRepository,\n      IndexActionRegisterService indexActionRegisterService)", "modifiers": "public", "return": "", "signature": " IndexActionRepositoryDecorator(\n      Repository<Entity> delegateRepository,\n      IndexActionRegisterService indexActionRegisterService)", "full_signature": "public  IndexActionRepositoryDecorator(\n      Repository<Entity> delegateRepository,\n      IndexActionRegisterService indexActionRegisterService)", "class_method_signature": "IndexActionRepositoryDecorator.IndexActionRepositoryDecorator(\n      Repository<Entity> delegateRepository,\n      IndexActionRegisterService indexActionRegisterService)", "testcase": false, "constructor": true}, {"identifier": "getCapabilities", "parameters": "()", "modifiers": "@Override public", "return": "Set<RepositoryCapability>", "signature": "Set<RepositoryCapability> getCapabilities()", "full_signature": "@Override public Set<RepositoryCapability> getCapabilities()", "class_method_signature": "IndexActionRepositoryDecorator.getCapabilities()", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Entity entity)", "modifiers": "@Override public", "return": "void", "signature": "void update(Entity entity)", "full_signature": "@Override public void update(Entity entity)", "class_method_signature": "IndexActionRepositoryDecorator.update(Entity entity)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Entity entity)", "modifiers": "@Override public", "return": "void", "signature": "void delete(Entity entity)", "full_signature": "@Override public void delete(Entity entity)", "class_method_signature": "IndexActionRepositoryDecorator.delete(Entity entity)", "testcase": false, "constructor": false}, {"identifier": "deleteById", "parameters": "(Object id)", "modifiers": "@Override public", "return": "void", "signature": "void deleteById(Object id)", "full_signature": "@Override public void deleteById(Object id)", "class_method_signature": "IndexActionRepositoryDecorator.deleteById(Object id)", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void deleteAll()", "full_signature": "@Override public void deleteAll()", "class_method_signature": "IndexActionRepositoryDecorator.deleteAll()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Entity entity)", "modifiers": "@Override public", "return": "void", "signature": "void add(Entity entity)", "full_signature": "@Override public void add(Entity entity)", "class_method_signature": "IndexActionRepositoryDecorator.add(Entity entity)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Stream<Entity> entities)", "modifiers": "@Override public", "return": "Integer", "signature": "Integer add(Stream<Entity> entities)", "full_signature": "@Override public Integer add(Stream<Entity> entities)", "class_method_signature": "IndexActionRepositoryDecorator.add(Stream<Entity> entities)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Stream<Entity> entities)", "modifiers": "@Override public", "return": "void", "signature": "void update(Stream<Entity> entities)", "full_signature": "@Override public void update(Stream<Entity> entities)", "class_method_signature": "IndexActionRepositoryDecorator.update(Stream<Entity> entities)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Stream<Entity> entities)", "modifiers": "@Override public", "return": "void", "signature": "void delete(Stream<Entity> entities)", "full_signature": "@Override public void delete(Stream<Entity> entities)", "class_method_signature": "IndexActionRepositoryDecorator.delete(Stream<Entity> entities)", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "(Stream<Object> ids)", "modifiers": "@Override public", "return": "void", "signature": "void deleteAll(Stream<Object> ids)", "full_signature": "@Override public void deleteAll(Stream<Object> ids)", "class_method_signature": "IndexActionRepositoryDecorator.deleteAll(Stream<Object> ids)", "testcase": false, "constructor": false}, {"identifier": "registerRefEntityIndexActions", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void registerRefEntityIndexActions()", "full_signature": "private void registerRefEntityIndexActions()", "class_method_signature": "IndexActionRepositoryDecorator.registerRefEntityIndexActions()", "testcase": false, "constructor": false}, {"identifier": "registerRefEntityIndexActions", "parameters": "(Entity entity)", "modifiers": "private", "return": "void", "signature": "void registerRefEntityIndexActions(Entity entity)", "full_signature": "private void registerRefEntityIndexActions(Entity entity)", "class_method_signature": "IndexActionRepositoryDecorator.registerRefEntityIndexActions(Entity entity)", "testcase": false, "constructor": false}], "file": "molgenis-data-index/src/main/java/org/molgenis/data/index/IndexActionRepositoryDecorator.java"}, "focal_method": {"identifier": "add", "parameters": "(Entity entity)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void add(Entity entity) {\n    delegate().add(entity);\n    indexActionRegisterService.register(getEntityType(), entity.getIdValue());\n    registerRefEntityIndexActions(entity);\n  }", "signature": "void add(Entity entity)", "full_signature": "@Override public void add(Entity entity)", "class_method_signature": "IndexActionRepositoryDecorator.add(Entity entity)", "testcase": false, "constructor": false, "invocations": ["add", "delegate", "register", "getEntityType", "getIdValue", "registerRefEntityIndexActions"]}, "repository": {"repo_id": 8010626, "url": "https://github.com/molgenis/molgenis", "language": "Java", "is_fork": false, "fork_count": 96, "stargazer_count": 82, "size": 168771, "license": "licensed"}}