{"test_class": {"identifier": "UserManagerServiceImplTest", "superclass": "extends AbstractMockitoSpringContextTests", "interfaces": "", "fields": [{"original_string": "private SecurityContext previousContext;", "modifier": "private", "type": "SecurityContext", "declarator": "previousContext", "var_name": "previousContext"}, {"original_string": "@Autowired private UserManagerService userManagerService;", "modifier": "@Autowired private", "type": "UserManagerService", "declarator": "userManagerService", "var_name": "userManagerService"}, {"original_string": "@Autowired private DataService dataService;", "modifier": "@Autowired private", "type": "DataService", "declarator": "dataService", "var_name": "dataService"}], "file": "molgenis-core-ui/src/test/java/org/molgenis/core/ui/admin/usermanager/UserManagerServiceImplTest.java"}, "test_case": {"identifier": "testSetActivationUserUnknown", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void testSetActivationUserUnknown() {\n    this.setSecurityContextSuperUser();\n\n    assertThrows(\n        UnknownEntityException.class,\n        () -> userManagerService.setActivationUser(\"unknownUserId\", true));\n  }", "signature": "void testSetActivationUserUnknown()", "full_signature": "@Test void testSetActivationUserUnknown()", "class_method_signature": "UserManagerServiceImplTest.testSetActivationUserUnknown()", "testcase": true, "constructor": false, "invocations": ["setSecurityContextSuperUser", "assertThrows", "setActivationUser"]}, "focal_class": {"identifier": "UserManagerServiceImpl", "superclass": "", "interfaces": "implements UserManagerService", "fields": [{"original_string": "private final DataService dataService;", "modifier": "private final", "type": "DataService", "declarator": "dataService", "var_name": "dataService"}], "methods": [{"identifier": "UserManagerServiceImpl", "parameters": "(DataService dataService)", "modifiers": "", "return": "", "signature": " UserManagerServiceImpl(DataService dataService)", "full_signature": "  UserManagerServiceImpl(DataService dataService)", "class_method_signature": "UserManagerServiceImpl.UserManagerServiceImpl(DataService dataService)", "testcase": false, "constructor": true}, {"identifier": "getAllUsers", "parameters": "()", "modifiers": "@Override @PreAuthorize(\"hasAnyRole('ROLE_SU','ROLE_MANAGER')\") @Transactional(readOnly = true) public", "return": "List<UserViewData>", "signature": "List<UserViewData> getAllUsers()", "full_signature": "@Override @PreAuthorize(\"hasAnyRole('ROLE_SU','ROLE_MANAGER')\") @Transactional(readOnly = true) public List<UserViewData> getAllUsers()", "class_method_signature": "UserManagerServiceImpl.getAllUsers()", "testcase": false, "constructor": false}, {"identifier": "setActivationUser", "parameters": "(String userId, Boolean active)", "modifiers": "@Override @PreAuthorize(\"hasAnyRole('ROLE_SU','ROLE_MANAGER')\") @Transactional public", "return": "void", "signature": "void setActivationUser(String userId, Boolean active)", "full_signature": "@Override @PreAuthorize(\"hasAnyRole('ROLE_SU','ROLE_MANAGER')\") @Transactional public void setActivationUser(String userId, Boolean active)", "class_method_signature": "UserManagerServiceImpl.setActivationUser(String userId, Boolean active)", "testcase": false, "constructor": false}, {"identifier": "parseToMolgenisUserViewData", "parameters": "(Stream<User> users)", "modifiers": "private", "return": "List<UserViewData>", "signature": "List<UserViewData> parseToMolgenisUserViewData(Stream<User> users)", "full_signature": "private List<UserViewData> parseToMolgenisUserViewData(Stream<User> users)", "class_method_signature": "UserManagerServiceImpl.parseToMolgenisUserViewData(Stream<User> users)", "testcase": false, "constructor": false}], "file": "molgenis-core-ui/src/main/java/org/molgenis/core/ui/admin/usermanager/UserManagerServiceImpl.java"}, "focal_method": {"identifier": "setActivationUser", "parameters": "(String userId, Boolean active)", "modifiers": "@Override @PreAuthorize(\"hasAnyRole('ROLE_SU','ROLE_MANAGER')\") @Transactional public", "return": "void", "body": "@Override\n  @PreAuthorize(\"hasAnyRole('ROLE_SU','ROLE_MANAGER')\")\n  @Transactional\n  public void setActivationUser(String userId, Boolean active) {\n    User user = dataService.findOneById(USER, userId, User.class);\n    if (user == null) {\n      throw new UnknownEntityException(USER, userId);\n    }\n    user.setActive(active);\n    this.dataService.update(USER, user);\n  }", "signature": "void setActivationUser(String userId, Boolean active)", "full_signature": "@Override @PreAuthorize(\"hasAnyRole('ROLE_SU','ROLE_MANAGER')\") @Transactional public void setActivationUser(String userId, Boolean active)", "class_method_signature": "UserManagerServiceImpl.setActivationUser(String userId, Boolean active)", "testcase": false, "constructor": false, "invocations": ["findOneById", "setActive", "update"]}, "repository": {"repo_id": 8010626, "url": "https://github.com/molgenis/molgenis", "language": "Java", "is_fork": false, "fork_count": 96, "stargazer_count": 82, "size": 168771, "license": "licensed"}}