{"test_class": {"identifier": "OidcClientRepositoryDecoratorTest", "superclass": "extends AbstractMockitoTest", "interfaces": "", "fields": [{"original_string": "@Mock private Repository<OidcClient> delegateRepository;", "modifier": "@Mock private", "type": "Repository<OidcClient>", "declarator": "delegateRepository", "var_name": "delegateRepository"}, {"original_string": "@Mock private ResettableOAuth2AuthorizedClientService oAuth2AuthorizedClientService;", "modifier": "@Mock private", "type": "ResettableOAuth2AuthorizedClientService", "declarator": "oAuth2AuthorizedClientService", "var_name": "oAuth2AuthorizedClientService"}, {"original_string": "private OidcClientRepositoryDecorator oidcClientRepositoryDecorator;", "modifier": "private", "type": "OidcClientRepositoryDecorator", "declarator": "oidcClientRepositoryDecorator", "var_name": "oidcClientRepositoryDecorator"}], "file": "molgenis-security/src/test/java/org/molgenis/security/oidc/model/OidcClientRepositoryDecoratorTest.java"}, "test_case": {"identifier": "testDeleteAllStream", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void testDeleteAllStream() {\n    @SuppressWarnings(\"unchecked\")\n    Stream<Object> oidcClientIdStream = mock(Stream.class);\n    oidcClientRepositoryDecorator.deleteAll(oidcClientIdStream);\n    verify(delegateRepository).deleteAll(oidcClientIdStream);\n    verify(oAuth2AuthorizedClientService).reset();\n  }", "signature": "void testDeleteAllStream()", "full_signature": "@Test void testDeleteAllStream()", "class_method_signature": "OidcClientRepositoryDecoratorTest.testDeleteAllStream()", "testcase": true, "constructor": false, "invocations": ["mock", "deleteAll", "deleteAll", "verify", "reset", "verify"]}, "focal_class": {"identifier": "OidcClientRepositoryDecorator", "superclass": "extends AbstractRepositoryDecorator<OidcClient>", "interfaces": "", "fields": [{"original_string": "private final ResettableOAuth2AuthorizedClientService oAuth2AuthorizedClientService;", "modifier": "private final", "type": "ResettableOAuth2AuthorizedClientService", "declarator": "oAuth2AuthorizedClientService", "var_name": "oAuth2AuthorizedClientService"}], "methods": [{"identifier": "OidcClientRepositoryDecorator", "parameters": "(\n      Repository<OidcClient> delegateRepository,\n      ResettableOAuth2AuthorizedClientService oAuth2AuthorizedClientService)", "modifiers": "", "return": "", "signature": " OidcClientRepositoryDecorator(\n      Repository<OidcClient> delegateRepository,\n      ResettableOAuth2AuthorizedClientService oAuth2AuthorizedClientService)", "full_signature": "  OidcClientRepositoryDecorator(\n      Repository<OidcClient> delegateRepository,\n      ResettableOAuth2AuthorizedClientService oAuth2AuthorizedClientService)", "class_method_signature": "OidcClientRepositoryDecorator.OidcClientRepositoryDecorator(\n      Repository<OidcClient> delegateRepository,\n      ResettableOAuth2AuthorizedClientService oAuth2AuthorizedClientService)", "testcase": false, "constructor": true}, {"identifier": "update", "parameters": "(OidcClient entity)", "modifiers": "@Override public", "return": "void", "signature": "void update(OidcClient entity)", "full_signature": "@Override public void update(OidcClient entity)", "class_method_signature": "OidcClientRepositoryDecorator.update(OidcClient entity)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Stream<OidcClient> entities)", "modifiers": "@Override public", "return": "void", "signature": "void update(Stream<OidcClient> entities)", "full_signature": "@Override public void update(Stream<OidcClient> entities)", "class_method_signature": "OidcClientRepositoryDecorator.update(Stream<OidcClient> entities)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(OidcClient entity)", "modifiers": "@Override public", "return": "void", "signature": "void delete(OidcClient entity)", "full_signature": "@Override public void delete(OidcClient entity)", "class_method_signature": "OidcClientRepositoryDecorator.delete(OidcClient entity)", "testcase": false, "constructor": false}, {"identifier": "deleteById", "parameters": "(Object id)", "modifiers": "@Override public", "return": "void", "signature": "void deleteById(Object id)", "full_signature": "@Override public void deleteById(Object id)", "class_method_signature": "OidcClientRepositoryDecorator.deleteById(Object id)", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void deleteAll()", "full_signature": "@Override public void deleteAll()", "class_method_signature": "OidcClientRepositoryDecorator.deleteAll()", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Stream<OidcClient> entities)", "modifiers": "@Override public", "return": "void", "signature": "void delete(Stream<OidcClient> entities)", "full_signature": "@Override public void delete(Stream<OidcClient> entities)", "class_method_signature": "OidcClientRepositoryDecorator.delete(Stream<OidcClient> entities)", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "(Stream<Object> ids)", "modifiers": "@Override public", "return": "void", "signature": "void deleteAll(Stream<Object> ids)", "full_signature": "@Override public void deleteAll(Stream<Object> ids)", "class_method_signature": "OidcClientRepositoryDecorator.deleteAll(Stream<Object> ids)", "testcase": false, "constructor": false}], "file": "molgenis-security/src/main/java/org/molgenis/security/oidc/model/OidcClientRepositoryDecorator.java"}, "focal_method": {"identifier": "deleteAll", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void deleteAll() {\n    super.deleteAll();\n    oAuth2AuthorizedClientService.reset();\n  }", "signature": "void deleteAll()", "full_signature": "@Override public void deleteAll()", "class_method_signature": "OidcClientRepositoryDecorator.deleteAll()", "testcase": false, "constructor": false, "invocations": ["deleteAll", "reset"]}, "repository": {"repo_id": 8010626, "url": "https://github.com/molgenis/molgenis", "language": "Java", "is_fork": false, "fork_count": 96, "stargazer_count": 82, "size": 168771, "license": "licensed"}}