{"test_class": {"identifier": "EntityValidatorTest", "superclass": "extends AbstractMockitoTest", "interfaces": "", "fields": [{"original_string": "@Mock private ExpressionValidator expressionValidator;", "modifier": "@Mock private", "type": "ExpressionValidator", "declarator": "expressionValidator", "var_name": "expressionValidator"}, {"original_string": "private EntityValidator entityValidator;", "modifier": "private", "type": "EntityValidator", "declarator": "entityValidator", "var_name": "entityValidator"}], "file": "molgenis-data-validation/src/test/java/org/molgenis/data/validation/EntityValidatorTest.java"}, "test_case": {"identifier": "testValidateNotNullConstraintDateTime", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void testValidateNotNullConstraintDateTime() {\n    String attributeName = \"attr\";\n    Attribute attribute = when(mock(Attribute.class).getDataType()).thenReturn(DATE_TIME).getMock();\n    when(attribute.getName()).thenReturn(attributeName);\n\n    EntityType entityType =\n        when(mock(EntityType.class).getAtomicAttributes())\n            .thenReturn(singletonList(attribute))\n            .getMock();\n\n    Entity entity = when(mock(Entity.class).getEntityType()).thenReturn(entityType).getMock();\n\n    Errors errors = mock(Errors.class);\n    entityValidator.validate(entity, errors);\n    verify(errors).rejectValue(attributeName, \"constraints.NotNull\", null, null);\n  }", "signature": "void testValidateNotNullConstraintDateTime()", "full_signature": "@Test void testValidateNotNullConstraintDateTime()", "class_method_signature": "EntityValidatorTest.testValidateNotNullConstraintDateTime()", "testcase": true, "constructor": false, "invocations": ["getMock", "thenReturn", "when", "getDataType", "mock", "thenReturn", "when", "getName", "getMock", "thenReturn", "when", "getAtomicAttributes", "mock", "singletonList", "getMock", "thenReturn", "when", "getEntityType", "mock", "mock", "validate", "rejectValue", "verify"]}, "focal_class": {"identifier": "EntityValidator", "superclass": "", "interfaces": "implements Validator", "fields": [{"original_string": "private static final String ERROR_CODE_NOT_NULL = \"constraints.NotNull\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_CODE_NOT_NULL = \"constraints.NotNull\"", "var_name": "ERROR_CODE_NOT_NULL"}, {"original_string": "private static final String ERROR_CODE_ENUM = \"constraints.Enum\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_CODE_ENUM = \"constraints.Enum\"", "var_name": "ERROR_CODE_ENUM"}, {"original_string": "private static final String ERROR_CODE_NULLABLE_EXPRESSION = \"constraints.NullableExpression\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_CODE_NULLABLE_EXPRESSION = \"constraints.NullableExpression\"", "var_name": "ERROR_CODE_NULLABLE_EXPRESSION"}, {"original_string": "private static final String ERROR_CODE_VALIDATION_EXPRESSION = \"constraints.ValidationExpression\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_CODE_VALIDATION_EXPRESSION = \"constraints.ValidationExpression\"", "var_name": "ERROR_CODE_VALIDATION_EXPRESSION"}, {"original_string": "private static final String ERROR_CODE_MAX_LENGTH = \"constraints.MaxLength\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_CODE_MAX_LENGTH = \"constraints.MaxLength\"", "var_name": "ERROR_CODE_MAX_LENGTH"}, {"original_string": "private static final String ERROR_CODE_NOT_EMPTY = \"constraints.NotEmpty\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_CODE_NOT_EMPTY = \"constraints.NotEmpty\"", "var_name": "ERROR_CODE_NOT_EMPTY"}, {"original_string": "private static final String ERROR_CODE_RANGE = \"constraints.Range\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_CODE_RANGE = \"constraints.Range\"", "var_name": "ERROR_CODE_RANGE"}, {"original_string": "private static final String ERROR_CODE_MIN = \"constraints.Min\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_CODE_MIN = \"constraints.Min\"", "var_name": "ERROR_CODE_MIN"}, {"original_string": "private static final String ERROR_CODE_MAX = \"constraints.Max\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_CODE_MAX = \"constraints.Max\"", "var_name": "ERROR_CODE_MAX"}, {"original_string": "private static final String ERROR_CODE_EMAIL = \"constraints.Email\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_CODE_EMAIL = \"constraints.Email\"", "var_name": "ERROR_CODE_EMAIL"}, {"original_string": "private static final String ERROR_CODE_URI = \"constraints.Uri\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_CODE_URI = \"constraints.Uri\"", "var_name": "ERROR_CODE_URI"}, {"original_string": "private final ExpressionValidator expressionValidator;", "modifier": "private final", "type": "ExpressionValidator", "declarator": "expressionValidator", "var_name": "expressionValidator"}, {"original_string": "private final EmailValidator emailValidator;", "modifier": "private final", "type": "EmailValidator", "declarator": "emailValidator", "var_name": "emailValidator"}], "methods": [{"identifier": "EntityValidator", "parameters": "(ExpressionValidator expressionValidator)", "modifiers": "public", "return": "", "signature": " EntityValidator(ExpressionValidator expressionValidator)", "full_signature": "public  EntityValidator(ExpressionValidator expressionValidator)", "class_method_signature": "EntityValidator.EntityValidator(ExpressionValidator expressionValidator)", "testcase": false, "constructor": true}, {"identifier": "supports", "parameters": "(@Nonnull Class<?> clazz)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supports(@Nonnull Class<?> clazz)", "full_signature": "@Override public boolean supports(@Nonnull Class<?> clazz)", "class_method_signature": "EntityValidator.supports(@Nonnull Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(@Nonnull Object target, @Nonnull Errors errors)", "modifiers": "@Override public", "return": "void", "signature": "void validate(@Nonnull Object target, @Nonnull Errors errors)", "full_signature": "@Override public void validate(@Nonnull Object target, @Nonnull Errors errors)", "class_method_signature": "EntityValidator.validate(@Nonnull Object target, @Nonnull Errors errors)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(Entity entity, Attribute attribute, Errors errors)", "modifiers": "private", "return": "void", "signature": "void validate(Entity entity, Attribute attribute, Errors errors)", "full_signature": "private void validate(Entity entity, Attribute attribute, Errors errors)", "class_method_signature": "EntityValidator.validate(Entity entity, Attribute attribute, Errors errors)", "testcase": false, "constructor": false}, {"identifier": "validateEnumConstraint", "parameters": "(Entity entity, Attribute attribute, Errors errors)", "modifiers": "private", "return": "void", "signature": "void validateEnumConstraint(Entity entity, Attribute attribute, Errors errors)", "full_signature": "private void validateEnumConstraint(Entity entity, Attribute attribute, Errors errors)", "class_method_signature": "EntityValidator.validateEnumConstraint(Entity entity, Attribute attribute, Errors errors)", "testcase": false, "constructor": false}, {"identifier": "validateNullableExpressionConstraint", "parameters": "(\n      Entity entity, Attribute attribute, Errors errors)", "modifiers": "private", "return": "void", "signature": "void validateNullableExpressionConstraint(\n      Entity entity, Attribute attribute, Errors errors)", "full_signature": "private void validateNullableExpressionConstraint(\n      Entity entity, Attribute attribute, Errors errors)", "class_method_signature": "EntityValidator.validateNullableExpressionConstraint(\n      Entity entity, Attribute attribute, Errors errors)", "testcase": false, "constructor": false}, {"identifier": "validateValidationExpressionConstraint", "parameters": "(\n      Entity entity, Attribute attribute, Errors errors)", "modifiers": "private", "return": "void", "signature": "void validateValidationExpressionConstraint(\n      Entity entity, Attribute attribute, Errors errors)", "full_signature": "private void validateValidationExpressionConstraint(\n      Entity entity, Attribute attribute, Errors errors)", "class_method_signature": "EntityValidator.validateValidationExpressionConstraint(\n      Entity entity, Attribute attribute, Errors errors)", "testcase": false, "constructor": false}, {"identifier": "validateSizeConstraint", "parameters": "(Entity entity, Attribute attribute, Errors errors)", "modifiers": "private", "return": "void", "signature": "void validateSizeConstraint(Entity entity, Attribute attribute, Errors errors)", "full_signature": "private void validateSizeConstraint(Entity entity, Attribute attribute, Errors errors)", "class_method_signature": "EntityValidator.validateSizeConstraint(Entity entity, Attribute attribute, Errors errors)", "testcase": false, "constructor": false}, {"identifier": "validateNotNullConstraint", "parameters": "(Entity entity, Attribute attribute, Errors errors)", "modifiers": "private", "return": "void", "signature": "void validateNotNullConstraint(Entity entity, Attribute attribute, Errors errors)", "full_signature": "private void validateNotNullConstraint(Entity entity, Attribute attribute, Errors errors)", "class_method_signature": "EntityValidator.validateNotNullConstraint(Entity entity, Attribute attribute, Errors errors)", "testcase": false, "constructor": false}, {"identifier": "validateRangeConstraint", "parameters": "(Entity entity, Attribute attribute, Errors errors)", "modifiers": "private", "return": "void", "signature": "void validateRangeConstraint(Entity entity, Attribute attribute, Errors errors)", "full_signature": "private void validateRangeConstraint(Entity entity, Attribute attribute, Errors errors)", "class_method_signature": "EntityValidator.validateRangeConstraint(Entity entity, Attribute attribute, Errors errors)", "testcase": false, "constructor": false}, {"identifier": "validateRangeConstraint", "parameters": "(Attribute attribute, Number number, Errors errors)", "modifiers": "private", "return": "void", "signature": "void validateRangeConstraint(Attribute attribute, Number number, Errors errors)", "full_signature": "private void validateRangeConstraint(Attribute attribute, Number number, Errors errors)", "class_method_signature": "EntityValidator.validateRangeConstraint(Attribute attribute, Number number, Errors errors)", "testcase": false, "constructor": false}, {"identifier": "validateEmailConstraint", "parameters": "(Entity entity, Attribute attribute, Errors errors)", "modifiers": "private", "return": "void", "signature": "void validateEmailConstraint(Entity entity, Attribute attribute, Errors errors)", "full_signature": "private void validateEmailConstraint(Entity entity, Attribute attribute, Errors errors)", "class_method_signature": "EntityValidator.validateEmailConstraint(Entity entity, Attribute attribute, Errors errors)", "testcase": false, "constructor": false}, {"identifier": "validateUriConstraint", "parameters": "(Entity entity, Attribute attribute, Errors errors)", "modifiers": "private", "return": "void", "signature": "void validateUriConstraint(Entity entity, Attribute attribute, Errors errors)", "full_signature": "private void validateUriConstraint(Entity entity, Attribute attribute, Errors errors)", "class_method_signature": "EntityValidator.validateUriConstraint(Entity entity, Attribute attribute, Errors errors)", "testcase": false, "constructor": false}], "file": "molgenis-data-validation/src/main/java/org/molgenis/data/validation/EntityValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(@Nonnull Object target, @Nonnull Errors errors)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void validate(@Nonnull Object target, @Nonnull Errors errors) {\n    Entity entity = (Entity) target;\n\n    entity\n        .getEntityType()\n        .getAtomicAttributes()\n        .forEach(attribute -> validate(entity, attribute, errors));\n  }", "signature": "void validate(@Nonnull Object target, @Nonnull Errors errors)", "full_signature": "@Override public void validate(@Nonnull Object target, @Nonnull Errors errors)", "class_method_signature": "EntityValidator.validate(@Nonnull Object target, @Nonnull Errors errors)", "testcase": false, "constructor": false, "invocations": ["forEach", "getAtomicAttributes", "getEntityType", "validate"]}, "repository": {"repo_id": 8010626, "url": "https://github.com/molgenis/molgenis", "language": "Java", "is_fork": false, "fork_count": 96, "stargazer_count": 82, "size": 168771, "license": "licensed"}}