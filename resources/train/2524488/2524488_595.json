{"test_class": {"identifier": "TabletTimeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final long TIME = 1234L;", "modifier": "private static final", "type": "long", "declarator": "TIME = 1234L", "var_name": "TIME"}, {"original_string": "private MillisTime mtime;", "modifier": "private", "type": "MillisTime", "declarator": "mtime", "var_name": "mtime"}, {"original_string": "private static final MetadataTime m1234 = new MetadataTime(1234, TimeType.MILLIS);", "modifier": "private static final", "type": "MetadataTime", "declarator": "m1234 = new MetadataTime(1234, TimeType.MILLIS)", "var_name": "m1234"}, {"original_string": "private static final MetadataTime m5678 = new MetadataTime(5678, TimeType.MILLIS);", "modifier": "private static final", "type": "MetadataTime", "declarator": "m5678 = new MetadataTime(5678, TimeType.MILLIS)", "var_name": "m5678"}, {"original_string": "private static final MetadataTime l1234 = new MetadataTime(1234, TimeType.LOGICAL);", "modifier": "private static final", "type": "MetadataTime", "declarator": "l1234 = new MetadataTime(1234, TimeType.LOGICAL)", "var_name": "l1234"}, {"original_string": "private static final MetadataTime l5678 = new MetadataTime(5678, TimeType.LOGICAL);", "modifier": "private static final", "type": "MetadataTime", "declarator": "l5678 = new MetadataTime(5678, TimeType.LOGICAL)", "var_name": "l5678"}], "file": "server/base/src/test/java/org/apache/accumulo/server/tablets/TabletTimeTest.java"}, "test_case": {"identifier": "testMaxMetadataTime_Logical", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testMaxMetadataTime_Logical() {\n    assertEquals(l5678, TabletTime.maxMetadataTime(l1234, l5678));\n    assertEquals(l5678, TabletTime.maxMetadataTime(l5678, l1234));\n    assertEquals(l5678, TabletTime.maxMetadataTime(l5678, l5678));\n  }", "signature": "void testMaxMetadataTime_Logical()", "full_signature": "@Test public void testMaxMetadataTime_Logical()", "class_method_signature": "TabletTimeTest.testMaxMetadataTime_Logical()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "maxMetadataTime", "assertEquals", "maxMetadataTime", "assertEquals", "maxMetadataTime"]}, "focal_class": {"identifier": "TabletTime", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "useMaxTimeFromWALog", "parameters": "(long time)", "modifiers": "public abstract", "return": "void", "signature": "void useMaxTimeFromWALog(long time)", "full_signature": "public abstract void useMaxTimeFromWALog(long time)", "class_method_signature": "TabletTime.useMaxTimeFromWALog(long time)", "testcase": false, "constructor": false}, {"identifier": "getMetadataTime", "parameters": "()", "modifiers": "public abstract", "return": "MetadataTime", "signature": "MetadataTime getMetadataTime()", "full_signature": "public abstract MetadataTime getMetadataTime()", "class_method_signature": "TabletTime.getMetadataTime()", "testcase": false, "constructor": false}, {"identifier": "getMetadataTime", "parameters": "(long time)", "modifiers": "public abstract", "return": "MetadataTime", "signature": "MetadataTime getMetadataTime(long time)", "full_signature": "public abstract MetadataTime getMetadataTime(long time)", "class_method_signature": "TabletTime.getMetadataTime(long time)", "testcase": false, "constructor": false}, {"identifier": "setUpdateTimes", "parameters": "(List<Mutation> mutations)", "modifiers": "public abstract", "return": "long", "signature": "long setUpdateTimes(List<Mutation> mutations)", "full_signature": "public abstract long setUpdateTimes(List<Mutation> mutations)", "class_method_signature": "TabletTime.setUpdateTimes(List<Mutation> mutations)", "testcase": false, "constructor": false}, {"identifier": "getTime", "parameters": "()", "modifiers": "public abstract", "return": "long", "signature": "long getTime()", "full_signature": "public abstract long getTime()", "class_method_signature": "TabletTime.getTime()", "testcase": false, "constructor": false}, {"identifier": "getAndUpdateTime", "parameters": "()", "modifiers": "public abstract", "return": "long", "signature": "long getAndUpdateTime()", "full_signature": "public abstract long getAndUpdateTime()", "class_method_signature": "TabletTime.getAndUpdateTime()", "testcase": false, "constructor": false}, {"identifier": "setSystemTimes", "parameters": "(Mutation mutation, long lastCommitTime)", "modifiers": "protected", "return": "void", "signature": "void setSystemTimes(Mutation mutation, long lastCommitTime)", "full_signature": "protected void setSystemTimes(Mutation mutation, long lastCommitTime)", "class_method_signature": "TabletTime.setSystemTimes(Mutation mutation, long lastCommitTime)", "testcase": false, "constructor": false}, {"identifier": "getInstance", "parameters": "(MetadataTime metadataTime)", "modifiers": "public static", "return": "TabletTime", "signature": "TabletTime getInstance(MetadataTime metadataTime)", "full_signature": "public static TabletTime getInstance(MetadataTime metadataTime)", "class_method_signature": "TabletTime.getInstance(MetadataTime metadataTime)", "testcase": false, "constructor": false}, {"identifier": "maxMetadataTime", "parameters": "(MetadataTime mv1, MetadataTime mv2)", "modifiers": "public static", "return": "MetadataTime", "signature": "MetadataTime maxMetadataTime(MetadataTime mv1, MetadataTime mv2)", "full_signature": "public static MetadataTime maxMetadataTime(MetadataTime mv1, MetadataTime mv2)", "class_method_signature": "TabletTime.maxMetadataTime(MetadataTime mv1, MetadataTime mv2)", "testcase": false, "constructor": false}], "file": "server/base/src/main/java/org/apache/accumulo/server/tablets/TabletTime.java"}, "focal_method": {"identifier": "maxMetadataTime", "parameters": "(MetadataTime mv1, MetadataTime mv2)", "modifiers": "public static", "return": "MetadataTime", "body": "public static MetadataTime maxMetadataTime(MetadataTime mv1, MetadataTime mv2) {\n    // null value will sort lower\n    if (mv1 == null || mv2 == null)\n      return mv1 == null ? (mv2 == null ? null : mv2) : mv1;\n\n    return mv1.compareTo(mv2) < 0 ? mv2 : mv1;\n  }", "signature": "MetadataTime maxMetadataTime(MetadataTime mv1, MetadataTime mv2)", "full_signature": "public static MetadataTime maxMetadataTime(MetadataTime mv1, MetadataTime mv2)", "class_method_signature": "TabletTime.maxMetadataTime(MetadataTime mv1, MetadataTime mv2)", "testcase": false, "constructor": false, "invocations": ["compareTo"]}, "repository": {"repo_id": 2524488, "url": "https://github.com/apache/accumulo", "stars": 779, "created": "10/6/2011 7:00:09 AM +00:00", "updates": "2020-01-24T17:34:30+00:00", "fork": "False", "license": "licensed"}}