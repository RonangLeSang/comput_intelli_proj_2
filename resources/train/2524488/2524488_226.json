{"test_class": {"identifier": "VolumeImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/apache/accumulo/core/volume/VolumeImplTest.java"}, "test_case": {"identifier": "testBasePathInequivalence", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testBasePathInequivalence() {\n    FileSystem fs = createMock(FileSystem.class);\n\n    VolumeImpl volume = new VolumeImpl(fs, \"/accumulo\");\n\n    assertFalse(volume.equivalentPaths(new Path(\"/something/accumulo\")));\n  }", "signature": "void testBasePathInequivalence()", "full_signature": "@Test public void testBasePathInequivalence()", "class_method_signature": "VolumeImplTest.testBasePathInequivalence()", "testcase": true, "constructor": false, "invocations": ["createMock", "assertFalse", "equivalentPaths"]}, "focal_class": {"identifier": "VolumeImpl", "superclass": "", "interfaces": "implements Volume", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(VolumeImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(VolumeImpl.class)", "var_name": "log"}, {"original_string": "protected final FileSystem fs;", "modifier": "protected final", "type": "FileSystem", "declarator": "fs", "var_name": "fs"}, {"original_string": "protected final String basePath;", "modifier": "protected final", "type": "String", "declarator": "basePath", "var_name": "basePath"}, {"original_string": "private final Configuration hadoopConf;", "modifier": "private final", "type": "Configuration", "declarator": "hadoopConf", "var_name": "hadoopConf"}], "methods": [{"identifier": "VolumeImpl", "parameters": "(Path path, Configuration conf)", "modifiers": "public", "return": "", "signature": " VolumeImpl(Path path, Configuration conf)", "full_signature": "public  VolumeImpl(Path path, Configuration conf)", "class_method_signature": "VolumeImpl.VolumeImpl(Path path, Configuration conf)", "testcase": false, "constructor": true}, {"identifier": "VolumeImpl", "parameters": "(FileSystem fs, String basePath)", "modifiers": "public", "return": "", "signature": " VolumeImpl(FileSystem fs, String basePath)", "full_signature": "public  VolumeImpl(FileSystem fs, String basePath)", "class_method_signature": "VolumeImpl.VolumeImpl(FileSystem fs, String basePath)", "testcase": false, "constructor": true}, {"identifier": "getFileSystem", "parameters": "()", "modifiers": "@Override public", "return": "FileSystem", "signature": "FileSystem getFileSystem()", "full_signature": "@Override public FileSystem getFileSystem()", "class_method_signature": "VolumeImpl.getFileSystem()", "testcase": false, "constructor": false}, {"identifier": "getBasePath", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getBasePath()", "full_signature": "@Override public String getBasePath()", "class_method_signature": "VolumeImpl.getBasePath()", "testcase": false, "constructor": false}, {"identifier": "prefixChild", "parameters": "(Path p)", "modifiers": "@Override public", "return": "Path", "signature": "Path prefixChild(Path p)", "full_signature": "@Override public Path prefixChild(Path p)", "class_method_signature": "VolumeImpl.prefixChild(Path p)", "testcase": false, "constructor": false}, {"identifier": "isValidPath", "parameters": "(Path p)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isValidPath(Path p)", "full_signature": "@Override public boolean isValidPath(Path p)", "class_method_signature": "VolumeImpl.isValidPath(Path p)", "testcase": false, "constructor": false}, {"identifier": "equivalentFileSystems", "parameters": "(FileSystem other)", "modifiers": "", "return": "boolean", "signature": "boolean equivalentFileSystems(FileSystem other)", "full_signature": " boolean equivalentFileSystems(FileSystem other)", "class_method_signature": "VolumeImpl.equivalentFileSystems(FileSystem other)", "testcase": false, "constructor": false}, {"identifier": "equivalentPaths", "parameters": "(Path other)", "modifiers": "", "return": "boolean", "signature": "boolean equivalentPaths(Path other)", "full_signature": " boolean equivalentPaths(Path other)", "class_method_signature": "VolumeImpl.equivalentPaths(Path other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "VolumeImpl.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "VolumeImpl.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "VolumeImpl.toString()", "testcase": false, "constructor": false}, {"identifier": "prefixChild", "parameters": "(String p)", "modifiers": "@Override public", "return": "Path", "signature": "Path prefixChild(String p)", "full_signature": "@Override public Path prefixChild(String p)", "class_method_signature": "VolumeImpl.prefixChild(String p)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/apache/accumulo/core/volume/VolumeImpl.java"}, "focal_method": {"identifier": "equivalentPaths", "parameters": "(Path other)", "modifiers": "", "return": "boolean", "body": "boolean equivalentPaths(Path other) {\n    return other.toUri().getPath().startsWith(basePath);\n  }", "signature": "boolean equivalentPaths(Path other)", "full_signature": " boolean equivalentPaths(Path other)", "class_method_signature": "VolumeImpl.equivalentPaths(Path other)", "testcase": false, "constructor": false, "invocations": ["startsWith", "getPath", "toUri"]}, "repository": {"repo_id": 2524488, "url": "https://github.com/apache/accumulo", "stars": 779, "created": "10/6/2011 7:00:09 AM +00:00", "updates": "2020-01-24T17:34:30+00:00", "fork": "False", "license": "licensed"}}