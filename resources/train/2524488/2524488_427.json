{"test_class": {"identifier": "FateMetricsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(FateMetricsTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(FateMetricsTest.class)", "var_name": "log"}, {"original_string": "public static final String INSTANCE_ID = \"1234\";", "modifier": "public static final", "type": "String", "declarator": "INSTANCE_ID = \"1234\"", "var_name": "INSTANCE_ID"}, {"original_string": "public static final String MOCK_ZK_ROOT = \"/accumulo/\" + INSTANCE_ID;", "modifier": "public static final", "type": "String", "declarator": "MOCK_ZK_ROOT = \"/accumulo/\" + INSTANCE_ID", "var_name": "MOCK_ZK_ROOT"}, {"original_string": "public static final String A_FAKE_SECRET = \"aPasswd\";", "modifier": "public static final", "type": "String", "declarator": "A_FAKE_SECRET = \"aPasswd\"", "var_name": "A_FAKE_SECRET"}, {"original_string": "private static ZooKeeperTestingServer szk = null;", "modifier": "private static", "type": "ZooKeeperTestingServer", "declarator": "szk = null", "var_name": "szk"}, {"original_string": "private ZooStore<Master> zooStore = null;", "modifier": "private", "type": "ZooStore<Master>", "declarator": "zooStore = null", "var_name": "zooStore"}, {"original_string": "private ZooKeeper zookeeper = null;", "modifier": "private", "type": "ZooKeeper", "declarator": "zookeeper = null", "var_name": "zookeeper"}, {"original_string": "private static ZooReaderWriter zooReaderWriter;", "modifier": "private static", "type": "ZooReaderWriter", "declarator": "zooReaderWriter", "var_name": "zooReaderWriter"}, {"original_string": "private ServerContext context = null;", "modifier": "private", "type": "ServerContext", "declarator": "context = null", "var_name": "context"}, {"original_string": "private Master master;", "modifier": "private", "type": "Master", "declarator": "master", "var_name": "master"}], "file": "server/manager/src/test/java/org/apache/accumulo/master/metrics/fate/FateMetricsTest.java"}, "test_case": {"identifier": "fateNewStatus", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void fateNewStatus() {\n\n    long tx1Id = zooStore.create();\n    log.debug(\"ZooStore tx1 id {}\", tx1Id);\n\n    FateMetrics metrics = new FateMetrics(context, 10);\n    metrics.overrideRefresh(0);\n\n    InMemTestCollector collector = new InMemTestCollector();\n\n    metrics.getMetrics(collector, true);\n\n    log.debug(\"Collector: {}\", collector);\n\n    assertTrue(collector.contains(\"FateTxState_NEW\"));\n    assertEquals(1L, collector.getValue(\"FateTxState_NEW\"));\n    assertEquals(1L, collector.getValue(\"currentFateOps\"));\n\n    assertTrue(collector.contains(\"FateTxState_IN_PROGRESS\"));\n    assertEquals(0L, collector.getValue(\"FateTxState_IN_PROGRESS\"));\n\n    EasyMock.verify(master);\n\n  }", "signature": "void fateNewStatus()", "full_signature": "@Test public void fateNewStatus()", "class_method_signature": "FateMetricsTest.fateNewStatus()", "testcase": true, "constructor": false, "invocations": ["create", "debug", "overrideRefresh", "getMetrics", "debug", "assertTrue", "contains", "assertEquals", "getValue", "assertEquals", "getValue", "assertTrue", "contains", "assertEquals", "getValue", "verify"]}, "focal_class": {"identifier": "FateMetrics", "superclass": "extends MasterMetrics", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(FateMetrics.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(FateMetrics.class)", "var_name": "log"}, {"original_string": "private static final long DEFAULT_MIN_REFRESH_DELAY = TimeUnit.SECONDS.toMillis(10);", "modifier": "private static final", "type": "long", "declarator": "DEFAULT_MIN_REFRESH_DELAY = TimeUnit.SECONDS.toMillis(10)", "var_name": "DEFAULT_MIN_REFRESH_DELAY"}, {"original_string": "private long minimumRefreshDelay;", "modifier": "private", "type": "long", "declarator": "minimumRefreshDelay", "var_name": "minimumRefreshDelay"}, {"original_string": "private static final String FATE_TX_STATE_METRIC_PREFIX = \"FateTxState_\";", "modifier": "private static final", "type": "String", "declarator": "FATE_TX_STATE_METRIC_PREFIX = \"FateTxState_\"", "var_name": "FATE_TX_STATE_METRIC_PREFIX"}, {"original_string": "private static final String FATE_OP_TYPE_METRIC_PREFIX = \"FateTxOpType_\";", "modifier": "private static final", "type": "String", "declarator": "FATE_OP_TYPE_METRIC_PREFIX = \"FateTxOpType_\"", "var_name": "FATE_OP_TYPE_METRIC_PREFIX"}, {"original_string": "private final MutableGaugeLong currentFateOps;", "modifier": "private final", "type": "MutableGaugeLong", "declarator": "currentFateOps", "var_name": "currentFateOps"}, {"original_string": "private final MutableGaugeLong zkChildFateOpsTotal;", "modifier": "private final", "type": "MutableGaugeLong", "declarator": "zkChildFateOpsTotal", "var_name": "zkChildFateOpsTotal"}, {"original_string": "private final MutableGaugeLong zkConnectionErrorsTotal;", "modifier": "private final", "type": "MutableGaugeLong", "declarator": "zkConnectionErrorsTotal", "var_name": "zkConnectionErrorsTotal"}, {"original_string": "private final Map<String,MutableGaugeLong> fateTypeCounts = new TreeMap<>();", "modifier": "private final", "type": "Map<String,MutableGaugeLong>", "declarator": "fateTypeCounts = new TreeMap<>()", "var_name": "fateTypeCounts"}, {"original_string": "private final Map<String,MutableGaugeLong> fateOpCounts = new TreeMap<>();", "modifier": "private final", "type": "Map<String,MutableGaugeLong>", "declarator": "fateOpCounts = new TreeMap<>()", "var_name": "fateOpCounts"}, {"original_string": "private final Lock metricsValuesLock = new ReentrantLock();", "modifier": "private final", "type": "Lock", "declarator": "metricsValuesLock = new ReentrantLock()", "var_name": "metricsValuesLock"}, {"original_string": "private FateMetricValues metricValues;", "modifier": "private", "type": "FateMetricValues", "declarator": "metricValues", "var_name": "metricValues"}, {"original_string": "private volatile long lastUpdate = 0;", "modifier": "private volatile", "type": "long", "declarator": "lastUpdate = 0", "var_name": "lastUpdate"}, {"original_string": "private final ServerContext context;", "modifier": "private final", "type": "ServerContext", "declarator": "context", "var_name": "context"}, {"original_string": "private final ReadOnlyTStore<FateMetrics> zooStore;", "modifier": "private final", "type": "ReadOnlyTStore<FateMetrics>", "declarator": "zooStore", "var_name": "zooStore"}, {"original_string": "private final String fateRootPath;", "modifier": "private final", "type": "String", "declarator": "fateRootPath", "var_name": "fateRootPath"}], "methods": [{"identifier": "FateMetrics", "parameters": "(final ServerContext context, final long minimumRefreshDelay)", "modifiers": "public", "return": "", "signature": " FateMetrics(final ServerContext context, final long minimumRefreshDelay)", "full_signature": "public  FateMetrics(final ServerContext context, final long minimumRefreshDelay)", "class_method_signature": "FateMetrics.FateMetrics(final ServerContext context, final long minimumRefreshDelay)", "testcase": false, "constructor": true}, {"identifier": "overrideRefresh", "parameters": "(final long minimumRefreshDelay)", "modifiers": "", "return": "void", "signature": "void overrideRefresh(final long minimumRefreshDelay)", "full_signature": " void overrideRefresh(final long minimumRefreshDelay)", "class_method_signature": "FateMetrics.overrideRefresh(final long minimumRefreshDelay)", "testcase": false, "constructor": false}, {"identifier": "prepareMetrics", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void prepareMetrics()", "full_signature": "@Override protected void prepareMetrics()", "class_method_signature": "FateMetrics.prepareMetrics()", "testcase": false, "constructor": false}, {"identifier": "recordValues", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void recordValues()", "full_signature": "private void recordValues()", "class_method_signature": "FateMetrics.recordValues()", "testcase": false, "constructor": false}, {"identifier": "metricNameHelper", "parameters": "(final String prefix, final String name)", "modifiers": "private", "return": "String", "signature": "String metricNameHelper(final String prefix, final String name)", "full_signature": "private String metricNameHelper(final String prefix, final String name)", "class_method_signature": "FateMetrics.metricNameHelper(final String prefix, final String name)", "testcase": false, "constructor": false}], "file": "server/manager/src/main/java/org/apache/accumulo/master/metrics/fate/FateMetrics.java"}, "focal_method": {"identifier": "overrideRefresh", "parameters": "(final long minimumRefreshDelay)", "modifiers": "", "return": "void", "body": "void overrideRefresh(final long minimumRefreshDelay) {\n    long delay = Math.max(0, minimumRefreshDelay);\n    this.minimumRefreshDelay = TimeUnit.SECONDS.toMillis(delay);\n  }", "signature": "void overrideRefresh(final long minimumRefreshDelay)", "full_signature": " void overrideRefresh(final long minimumRefreshDelay)", "class_method_signature": "FateMetrics.overrideRefresh(final long minimumRefreshDelay)", "testcase": false, "constructor": false, "invocations": ["max", "toMillis"]}, "repository": {"repo_id": 2524488, "url": "https://github.com/apache/accumulo", "stars": 779, "created": "10/6/2011 7:00:09 AM +00:00", "updates": "2020-01-24T17:34:30+00:00", "fork": "False", "license": "licensed"}}