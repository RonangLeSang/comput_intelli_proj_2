{"test_class": {"identifier": "ValueTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final byte[] DATA = toBytes(\"data\");", "modifier": "private static final", "type": "byte[]", "declarator": "DATA = toBytes(\"data\")", "var_name": "DATA"}, {"original_string": "private static final ByteBuffer DATABUFF = ByteBuffer.allocate(DATA.length);", "modifier": "private static final", "type": "ByteBuffer", "declarator": "DATABUFF = ByteBuffer.allocate(DATA.length)", "var_name": "DATABUFF"}], "file": "core/src/test/java/org/apache/accumulo/core/data/ValueTest.java"}, "test_case": {"identifier": "testByteArray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testByteArray() {\n    Value v = new Value(DATA);\n    assertArrayEquals(DATA, v.get());\n    assertSame(DATA, v.get());\n  }", "signature": "void testByteArray()", "full_signature": "@Test public void testByteArray()", "class_method_signature": "ValueTest.testByteArray()", "testcase": true, "constructor": false, "invocations": ["assertArrayEquals", "get", "assertSame", "get"]}, "focal_class": {"identifier": "Value", "superclass": "", "interfaces": "implements WritableComparable<Object>", "fields": [{"original_string": "private static final byte[] EMPTY = new byte[0];", "modifier": "private static final", "type": "byte[]", "declarator": "EMPTY = new byte[0]", "var_name": "EMPTY"}, {"original_string": "protected byte[] value;", "modifier": "protected", "type": "byte[]", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "Value", "parameters": "()", "modifiers": "public", "return": "", "signature": " Value()", "full_signature": "public  Value()", "class_method_signature": "Value.Value()", "testcase": false, "constructor": true}, {"identifier": "Value", "parameters": "(CharSequence cs)", "modifiers": "public", "return": "", "signature": " Value(CharSequence cs)", "full_signature": "public  Value(CharSequence cs)", "class_method_signature": "Value.Value(CharSequence cs)", "testcase": false, "constructor": true}, {"identifier": "Value", "parameters": "(Text text)", "modifiers": "public", "return": "", "signature": " Value(Text text)", "full_signature": "public  Value(Text text)", "class_method_signature": "Value.Value(Text text)", "testcase": false, "constructor": true}, {"identifier": "Value", "parameters": "(byte[] bytes)", "modifiers": "public", "return": "", "signature": " Value(byte[] bytes)", "full_signature": "public  Value(byte[] bytes)", "class_method_signature": "Value.Value(byte[] bytes)", "testcase": false, "constructor": true}, {"identifier": "Value", "parameters": "(ByteBuffer bytes)", "modifiers": "public", "return": "", "signature": " Value(ByteBuffer bytes)", "full_signature": "public  Value(ByteBuffer bytes)", "class_method_signature": "Value.Value(ByteBuffer bytes)", "testcase": false, "constructor": true}, {"identifier": "Value", "parameters": "(byte[] bytes, boolean copy)", "modifiers": "public", "return": "", "signature": " Value(byte[] bytes, boolean copy)", "full_signature": "public  Value(byte[] bytes, boolean copy)", "class_method_signature": "Value.Value(byte[] bytes, boolean copy)", "testcase": false, "constructor": true}, {"identifier": "Value", "parameters": "(final Value ibw)", "modifiers": "public", "return": "", "signature": " Value(final Value ibw)", "full_signature": "public  Value(final Value ibw)", "class_method_signature": "Value.Value(final Value ibw)", "testcase": false, "constructor": true}, {"identifier": "Value", "parameters": "(final byte[] newData, final int offset, final int length)", "modifiers": "public", "return": "", "signature": " Value(final byte[] newData, final int offset, final int length)", "full_signature": "public  Value(final byte[] newData, final int offset, final int length)", "class_method_signature": "Value.Value(final byte[] newData, final int offset, final int length)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] get()", "full_signature": "public byte[] get()", "class_method_signature": "Value.get()", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(final byte[] b)", "modifiers": "public", "return": "void", "signature": "void set(final byte[] b)", "full_signature": "public void set(final byte[] b)", "class_method_signature": "Value.set(final byte[] b)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(byte[] b)", "modifiers": "public", "return": "void", "signature": "void copy(byte[] b)", "full_signature": "public void copy(byte[] b)", "class_method_signature": "Value.copy(byte[] b)", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSize()", "full_signature": "public int getSize()", "class_method_signature": "Value.getSize()", "testcase": false, "constructor": false}, {"identifier": "readFields", "parameters": "(final DataInput in)", "modifiers": "@Override public", "return": "void", "signature": "void readFields(final DataInput in)", "full_signature": "@Override public void readFields(final DataInput in)", "class_method_signature": "Value.readFields(final DataInput in)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(final DataOutput out)", "modifiers": "@Override public", "return": "void", "signature": "void write(final DataOutput out)", "full_signature": "@Override public void write(final DataOutput out)", "class_method_signature": "Value.write(final DataOutput out)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Value.hashCode()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Object right_obj)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(Object right_obj)", "full_signature": "@Override public int compareTo(Object right_obj)", "class_method_signature": "Value.compareTo(Object right_obj)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(final byte[] that)", "modifiers": "public", "return": "int", "signature": "int compareTo(final byte[] that)", "full_signature": "public int compareTo(final byte[] that)", "class_method_signature": "Value.compareTo(final byte[] that)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object right_obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object right_obj)", "full_signature": "@Override public boolean equals(Object right_obj)", "class_method_signature": "Value.equals(Object right_obj)", "testcase": false, "constructor": false}, {"identifier": "contentEquals", "parameters": "(byte[] right_obj)", "modifiers": "public", "return": "boolean", "signature": "boolean contentEquals(byte[] right_obj)", "full_signature": "public boolean contentEquals(byte[] right_obj)", "class_method_signature": "Value.contentEquals(byte[] right_obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Value.toString()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/apache/accumulo/core/data/Value.java"}, "focal_method": {"identifier": "get", "parameters": "()", "modifiers": "public", "return": "byte[]", "body": "public byte[] get() {\n    assert (value != null);\n    return this.value;\n  }", "signature": "byte[] get()", "full_signature": "public byte[] get()", "class_method_signature": "Value.get()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2524488, "url": "https://github.com/apache/accumulo", "stars": 779, "created": "10/6/2011 7:00:09 AM +00:00", "updates": "2020-01-24T17:34:30+00:00", "fork": "False", "license": "licensed"}}