{"test_class": {"identifier": "ProblemReportTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final TableId TABLE_ID = TableId.of(\"table\");", "modifier": "private static final", "type": "TableId", "declarator": "TABLE_ID = TableId.of(\"table\")", "var_name": "TABLE_ID"}, {"original_string": "private static final String RESOURCE = \"resource\";", "modifier": "private static final", "type": "String", "declarator": "RESOURCE = \"resource\"", "var_name": "RESOURCE"}, {"original_string": "private static final String SERVER = \"server\";", "modifier": "private static final", "type": "String", "declarator": "SERVER = \"server\"", "var_name": "SERVER"}, {"original_string": "private ServerContext context;", "modifier": "private", "type": "ServerContext", "declarator": "context", "var_name": "context"}, {"original_string": "private ZooReaderWriter zoorw;", "modifier": "private", "type": "ZooReaderWriter", "declarator": "zoorw", "var_name": "zoorw"}, {"original_string": "private ProblemReport r;", "modifier": "private", "type": "ProblemReport", "declarator": "r", "var_name": "r"}], "file": "server/base/src/test/java/org/apache/accumulo/server/problems/ProblemReportTest.java"}, "test_case": {"identifier": "testRemoveFromZooKeeper", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRemoveFromZooKeeper() throws Exception {\n    r = new ProblemReport(TABLE_ID, ProblemType.FILE_READ, RESOURCE, SERVER, null);\n    byte[] zpathFileName = makeZPathFileName(TABLE_ID, ProblemType.FILE_READ, RESOURCE);\n    String path = ZooUtil.getRoot(\"instance\") + Constants.ZPROBLEMS + \"/\"\n        + Encoding.encodeAsBase64FileName(new Text(zpathFileName));\n    zoorw.recursiveDelete(path, NodeMissingPolicy.SKIP);\n    replay(zoorw);\n\n    r.removeFromZooKeeper(zoorw, context);\n    verify(zoorw);\n  }", "signature": "void testRemoveFromZooKeeper()", "full_signature": "@Test public void testRemoveFromZooKeeper()", "class_method_signature": "ProblemReportTest.testRemoveFromZooKeeper()", "testcase": true, "constructor": false, "invocations": ["makeZPathFileName", "getRoot", "encodeAsBase64FileName", "recursiveDelete", "replay", "removeFromZooKeeper", "verify"]}, "focal_class": {"identifier": "ProblemReport", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TableId tableId;", "modifier": "private", "type": "TableId", "declarator": "tableId", "var_name": "tableId"}, {"original_string": "private ProblemType problemType;", "modifier": "private", "type": "ProblemType", "declarator": "problemType", "var_name": "problemType"}, {"original_string": "private String resource;", "modifier": "private", "type": "String", "declarator": "resource", "var_name": "resource"}, {"original_string": "private String exception;", "modifier": "private", "type": "String", "declarator": "exception", "var_name": "exception"}, {"original_string": "private String server;", "modifier": "private", "type": "String", "declarator": "server", "var_name": "server"}, {"original_string": "private long creationTime;", "modifier": "private", "type": "long", "declarator": "creationTime", "var_name": "creationTime"}], "methods": [{"identifier": "ProblemReport", "parameters": "(TableId tableId, ProblemType problemType, String resource, String server,\n      Throwable e, long creationTime)", "modifiers": "public", "return": "", "signature": " ProblemReport(TableId tableId, ProblemType problemType, String resource, String server,\n      Throwable e, long creationTime)", "full_signature": "public  ProblemReport(TableId tableId, ProblemType problemType, String resource, String server,\n      Throwable e, long creationTime)", "class_method_signature": "ProblemReport.ProblemReport(TableId tableId, ProblemType problemType, String resource, String server,\n      Throwable e, long creationTime)", "testcase": false, "constructor": true}, {"identifier": "ProblemReport", "parameters": "(TableId tableId, ProblemType problemType, String resource, String server,\n      Throwable e)", "modifiers": "public", "return": "", "signature": " ProblemReport(TableId tableId, ProblemType problemType, String resource, String server,\n      Throwable e)", "full_signature": "public  ProblemReport(TableId tableId, ProblemType problemType, String resource, String server,\n      Throwable e)", "class_method_signature": "ProblemReport.ProblemReport(TableId tableId, ProblemType problemType, String resource, String server,\n      Throwable e)", "testcase": false, "constructor": true}, {"identifier": "ProblemReport", "parameters": "(TableId tableId, ProblemType problemType, String resource, Throwable e)", "modifiers": "public", "return": "", "signature": " ProblemReport(TableId tableId, ProblemType problemType, String resource, Throwable e)", "full_signature": "public  ProblemReport(TableId tableId, ProblemType problemType, String resource, Throwable e)", "class_method_signature": "ProblemReport.ProblemReport(TableId tableId, ProblemType problemType, String resource, Throwable e)", "testcase": false, "constructor": true}, {"identifier": "ProblemReport", "parameters": "(TableId table, ProblemType problemType, String resource, byte[] enc)", "modifiers": "private", "return": "", "signature": " ProblemReport(TableId table, ProblemType problemType, String resource, byte[] enc)", "full_signature": "private  ProblemReport(TableId table, ProblemType problemType, String resource, byte[] enc)", "class_method_signature": "ProblemReport.ProblemReport(TableId table, ProblemType problemType, String resource, byte[] enc)", "testcase": false, "constructor": true}, {"identifier": "encode", "parameters": "()", "modifiers": "private", "return": "byte[]", "signature": "byte[] encode()", "full_signature": "private byte[] encode()", "class_method_signature": "ProblemReport.encode()", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(byte[] enc)", "modifiers": "private", "return": "void", "signature": "void decode(byte[] enc)", "full_signature": "private void decode(byte[] enc)", "class_method_signature": "ProblemReport.decode(byte[] enc)", "testcase": false, "constructor": false}, {"identifier": "removeFromMetadataTable", "parameters": "(ServerContext context)", "modifiers": "", "return": "void", "signature": "void removeFromMetadataTable(ServerContext context)", "full_signature": " void removeFromMetadataTable(ServerContext context)", "class_method_signature": "ProblemReport.removeFromMetadataTable(ServerContext context)", "testcase": false, "constructor": false}, {"identifier": "saveToMetadataTable", "parameters": "(ServerContext context)", "modifiers": "", "return": "void", "signature": "void saveToMetadataTable(ServerContext context)", "full_signature": " void saveToMetadataTable(ServerContext context)", "class_method_signature": "ProblemReport.saveToMetadataTable(ServerContext context)", "testcase": false, "constructor": false}, {"identifier": "removeFromZooKeeper", "parameters": "(ServerContext context)", "modifiers": "", "return": "void", "signature": "void removeFromZooKeeper(ServerContext context)", "full_signature": " void removeFromZooKeeper(ServerContext context)", "class_method_signature": "ProblemReport.removeFromZooKeeper(ServerContext context)", "testcase": false, "constructor": false}, {"identifier": "removeFromZooKeeper", "parameters": "(ZooReaderWriter zoorw, ServerContext context)", "modifiers": "", "return": "void", "signature": "void removeFromZooKeeper(ZooReaderWriter zoorw, ServerContext context)", "full_signature": " void removeFromZooKeeper(ZooReaderWriter zoorw, ServerContext context)", "class_method_signature": "ProblemReport.removeFromZooKeeper(ZooReaderWriter zoorw, ServerContext context)", "testcase": false, "constructor": false}, {"identifier": "saveToZooKeeper", "parameters": "(ServerContext context)", "modifiers": "", "return": "void", "signature": "void saveToZooKeeper(ServerContext context)", "full_signature": " void saveToZooKeeper(ServerContext context)", "class_method_signature": "ProblemReport.saveToZooKeeper(ServerContext context)", "testcase": false, "constructor": false}, {"identifier": "getZPath", "parameters": "(String zkRoot)", "modifiers": "private", "return": "String", "signature": "String getZPath(String zkRoot)", "full_signature": "private String getZPath(String zkRoot)", "class_method_signature": "ProblemReport.getZPath(String zkRoot)", "testcase": false, "constructor": false}, {"identifier": "decodeZooKeeperEntry", "parameters": "(ServerContext context, String node)", "modifiers": "static", "return": "ProblemReport", "signature": "ProblemReport decodeZooKeeperEntry(ServerContext context, String node)", "full_signature": "static ProblemReport decodeZooKeeperEntry(ServerContext context, String node)", "class_method_signature": "ProblemReport.decodeZooKeeperEntry(ServerContext context, String node)", "testcase": false, "constructor": false}, {"identifier": "decodeMetadataEntry", "parameters": "(Entry<Key,Value> entry)", "modifiers": "public static", "return": "ProblemReport", "signature": "ProblemReport decodeMetadataEntry(Entry<Key,Value> entry)", "full_signature": "public static ProblemReport decodeMetadataEntry(Entry<Key,Value> entry)", "class_method_signature": "ProblemReport.decodeMetadataEntry(Entry<Key,Value> entry)", "testcase": false, "constructor": false}, {"identifier": "getTableId", "parameters": "()", "modifiers": "public", "return": "TableId", "signature": "TableId getTableId()", "full_signature": "public TableId getTableId()", "class_method_signature": "ProblemReport.getTableId()", "testcase": false, "constructor": false}, {"identifier": "getProblemType", "parameters": "()", "modifiers": "public", "return": "ProblemType", "signature": "ProblemType getProblemType()", "full_signature": "public ProblemType getProblemType()", "class_method_signature": "ProblemReport.getProblemType()", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getResource()", "full_signature": "public String getResource()", "class_method_signature": "ProblemReport.getResource()", "testcase": false, "constructor": false}, {"identifier": "getException", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getException()", "full_signature": "public String getException()", "class_method_signature": "ProblemReport.getException()", "testcase": false, "constructor": false}, {"identifier": "getServer", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getServer()", "full_signature": "public String getServer()", "class_method_signature": "ProblemReport.getServer()", "testcase": false, "constructor": false}, {"identifier": "getTime", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getTime()", "full_signature": "public long getTime()", "class_method_signature": "ProblemReport.getTime()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ProblemReport.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "ProblemReport.equals(Object o)", "testcase": false, "constructor": false}], "file": "server/base/src/main/java/org/apache/accumulo/server/problems/ProblemReport.java"}, "focal_method": {"identifier": "removeFromZooKeeper", "parameters": "(ServerContext context)", "modifiers": "", "return": "void", "body": "void removeFromZooKeeper(ServerContext context) throws Exception {\n    removeFromZooKeeper(context.getZooReaderWriter(), context);\n  }", "signature": "void removeFromZooKeeper(ServerContext context)", "full_signature": " void removeFromZooKeeper(ServerContext context)", "class_method_signature": "ProblemReport.removeFromZooKeeper(ServerContext context)", "testcase": false, "constructor": false, "invocations": ["removeFromZooKeeper", "getZooReaderWriter"]}, "repository": {"repo_id": 2524488, "url": "https://github.com/apache/accumulo", "stars": 779, "created": "10/6/2011 7:00:09 AM +00:00", "updates": "2020-01-24T17:34:30+00:00", "fork": "False", "license": "licensed"}}