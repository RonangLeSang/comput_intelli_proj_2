{"test_class": {"identifier": "SchemaTest", "superclass": "", "interfaces": "", "fields": [], "file": "puma/src/test/java/com/dianping/puma/model/SchemaTest.java"}, "test_case": {"identifier": "testContains", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testContains() {\n\t\t// Case 1.\n\t\tSchema schema00 = new Schema(\"puma\");\n\t\tSchema schema01 = new Schema(\"puma\");\n\t\tAssert.assertTrue(schema00.contains(schema01));\n\n\t\t// Case 2.\n\t\tSchema schema10 = new Schema(\"puma\");\n\t\tSchema schema11 = new Schema(\"test\");\n\t\tAssert.assertFalse(schema10.contains(schema11));\n\n\t\t// Case 3.\n\t\tSchema schema20 = new Schema(\"*\");\n\t\tSchema schema21 = new Schema(\"puma\");\n\t\tAssert.assertTrue(schema20.contains(schema21));\n\n\t\t// Case 4.\n\t\tSchema schema30 = new Schema(\"*\");\n\t\tSchema schema31 = new Schema(null);\n\t\tAssert.assertFalse(schema30.contains(schema31));\n\t}", "signature": "void testContains()", "full_signature": "@Test public void testContains()", "class_method_signature": "SchemaTest.testContains()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "contains", "assertFalse", "contains", "assertTrue", "contains", "assertFalse", "contains"]}, "focal_class": {"identifier": "Schema", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String schemaName;", "modifier": "private", "type": "String", "declarator": "schemaName", "var_name": "schemaName"}, {"original_string": "private static final String ASTERISK = \"*\";", "modifier": "private static final", "type": "String", "declarator": "ASTERISK = \"*\"", "var_name": "ASTERISK"}], "methods": [{"identifier": "Schema", "parameters": "()", "modifiers": "public", "return": "", "signature": " Schema()", "full_signature": "public  Schema()", "class_method_signature": "Schema.Schema()", "testcase": false, "constructor": true}, {"identifier": "Schema", "parameters": "(String schemaName)", "modifiers": "public", "return": "", "signature": " Schema(String schemaName)", "full_signature": "public  Schema(String schemaName)", "class_method_signature": "Schema.Schema(String schemaName)", "testcase": false, "constructor": true}, {"identifier": "contains", "parameters": "(Schema schema)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(Schema schema)", "full_signature": "public boolean contains(Schema schema)", "class_method_signature": "Schema.contains(Schema schema)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Schema.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Schema.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Schema.toString()", "testcase": false, "constructor": false}, {"identifier": "getSchemaName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSchemaName()", "full_signature": "public String getSchemaName()", "class_method_signature": "Schema.getSchemaName()", "testcase": false, "constructor": false}, {"identifier": "setSchemaName", "parameters": "(String schemaName)", "modifiers": "public", "return": "void", "signature": "void setSchemaName(String schemaName)", "full_signature": "public void setSchemaName(String schemaName)", "class_method_signature": "Schema.setSchemaName(String schemaName)", "testcase": false, "constructor": false}], "file": "puma/src/main/java/com/dianping/puma/model/Schema.java"}, "focal_method": {"identifier": "contains", "parameters": "(Schema schema)", "modifiers": "public", "return": "boolean", "body": "public boolean contains(Schema schema) {\n\t\tif (schema != null) {\n\t\t\treturn (schemaName.equals(ASTERISK) && schema.getSchemaName() != null) || schemaName.equals(schema.schemaName);\n\t\t}\n\t\treturn false;\n\t}", "signature": "boolean contains(Schema schema)", "full_signature": "public boolean contains(Schema schema)", "class_method_signature": "Schema.contains(Schema schema)", "testcase": false, "constructor": false, "invocations": ["equals", "getSchemaName", "equals"]}, "repository": {"repo_id": 7031510, "url": "https://github.com/dianping/puma", "language": "Java", "is_fork": false, "fork_count": 102, "stargazer_count": 166, "size": 26527, "license": "licensed"}}