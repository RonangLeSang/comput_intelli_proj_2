{"test_class": {"identifier": "PullTimeDelayAlarmJudgerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "PullTimeDelayAlarmJudger arbiter = new PullTimeDelayAlarmJudger();", "modifier": "", "type": "PullTimeDelayAlarmJudger", "declarator": "arbiter = new PullTimeDelayAlarmJudger()", "var_name": "arbiter"}], "file": "alarm/src/test/java/com/dianping/puma/alarm/core/monitor/judge/PullTimeDelayAlarmJudgerTest.java"}, "test_case": {"identifier": "test2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test2() throws Exception {\n        PullTimeDelayAlarmData data = new PullTimeDelayAlarmData();\n        data.setPullTimeDelayInSecond(1000);\n\n        PullTimeDelayAlarmBenchmark benchmark = new PullTimeDelayAlarmBenchmark();\n        benchmark.setPullTimeDelayAlarm(true);\n        benchmark.setMinPullTimeDelayInSecond(10);\n        benchmark.setMaxPullTimeDelayInSecond(100);\n\n        AlarmState state = arbiter.judge(data, benchmark);\n        assertTrue(state.isAlarm());\n    }", "signature": "void test2()", "full_signature": "@Test public void test2()", "class_method_signature": "PullTimeDelayAlarmJudgerTest.test2()", "testcase": true, "constructor": false, "invocations": ["setPullTimeDelayInSecond", "setPullTimeDelayAlarm", "setMinPullTimeDelayInSecond", "setMaxPullTimeDelayInSecond", "judge", "assertTrue", "isAlarm"]}, "focal_class": {"identifier": "PullTimeDelayAlarmJudger", "superclass": "extends AbstractPumaLifeCycle", "interfaces": "implements PumaAlarmJudger", "fields": [], "methods": [{"identifier": "judge", "parameters": "(AlarmData data, AlarmBenchmark benchmark)", "modifiers": "@Override public", "return": "AlarmState", "signature": "AlarmState judge(AlarmData data, AlarmBenchmark benchmark)", "full_signature": "@Override public AlarmState judge(AlarmData data, AlarmBenchmark benchmark)", "class_method_signature": "PullTimeDelayAlarmJudger.judge(AlarmData data, AlarmBenchmark benchmark)", "testcase": false, "constructor": false}], "file": "alarm/src/main/java/com/dianping/puma/alarm/core/monitor/judge/PullTimeDelayAlarmJudger.java"}, "focal_method": {"identifier": "judge", "parameters": "(AlarmData data, AlarmBenchmark benchmark)", "modifiers": "@Override public", "return": "AlarmState", "body": "@Override\n    public AlarmState judge(AlarmData data, AlarmBenchmark benchmark) throws PumaAlarmJudgeException {\n        if (!(data instanceof PullTimeDelayAlarmData)) {\n            throw new PumaAlarmJudgeUnsupportedException(\"unsupported data[%s]\", data);\n        }\n\n        if (!(benchmark instanceof PullTimeDelayAlarmBenchmark)) {\n            throw new PumaAlarmJudgeUnsupportedException(\"unsupported benchmark[%s]\", benchmark);\n        }\n\n        PullTimeDelayAlarmData pullTimeDelayAlarmData = (PullTimeDelayAlarmData) data;\n        PullTimeDelayAlarmBenchmark pullTimeDelayAlarmBenchmark = (PullTimeDelayAlarmBenchmark) benchmark;\n\n        PullTimeDelayAlarmState state = new PullTimeDelayAlarmState();\n\n        if (!pullTimeDelayAlarmBenchmark.isPullTimeDelayAlarm()) {\n            state.setAlarm(false);\n        } else {\n            long minPullTimeDelayInSecond = pullTimeDelayAlarmBenchmark.getMinPullTimeDelayInSecond();\n            long maxPullTimeDelayInSecond = pullTimeDelayAlarmBenchmark.getMaxPullTimeDelayInSecond();\n\n            long pullTimeDelayInSecond = pullTimeDelayAlarmData.getPullTimeDelayInSecond();\n\n            if (pullTimeDelayInSecond >= minPullTimeDelayInSecond\n                    && pullTimeDelayInSecond <= maxPullTimeDelayInSecond) {\n                state.setAlarm(false);\n            } else {\n                state.setAlarm(true);\n            }\n        }\n\n        return state;\n    }", "signature": "AlarmState judge(AlarmData data, AlarmBenchmark benchmark)", "full_signature": "@Override public AlarmState judge(AlarmData data, AlarmBenchmark benchmark)", "class_method_signature": "PullTimeDelayAlarmJudger.judge(AlarmData data, AlarmBenchmark benchmark)", "testcase": false, "constructor": false, "invocations": ["isPullTimeDelayAlarm", "setAlarm", "getMinPullTimeDelayInSecond", "getMaxPullTimeDelayInSecond", "getPullTimeDelayInSecond", "setAlarm", "setAlarm"]}, "repository": {"repo_id": 7031510, "url": "https://github.com/dianping/puma", "language": "Java", "is_fork": false, "fork_count": 102, "stargazer_count": 166, "size": 26527, "license": "licensed"}}