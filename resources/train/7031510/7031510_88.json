{"test_class": {"identifier": "LionRegistryServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "LionRegistryService lionRegistryService;", "modifier": "", "type": "LionRegistryService", "declarator": "lionRegistryService", "var_name": "lionRegistryService"}, {"original_string": "@Mock\n    ConfigManager configManager;", "modifier": "@Mock", "type": "ConfigManager", "declarator": "configManager", "var_name": "configManager"}], "file": "puma/src/test/java/com/dianping/puma/server/registry/LionRegistryServiceTest.java"}, "test_case": {"identifier": "testBuildHostListString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuildHostListString() {\n        List<String> hostList0 = new ArrayList<String>();\n        hostList0.add(\"0.0.0.0\");\n        String hostListString0 = \"0.0.0.0\";\n        assertThat(hostListString0, is(lionRegistryService.buildHostListString(hostList0)));\n\n        List<String> hostList1 = new ArrayList<String>();\n        hostList1.add(\"0.0.0.0\");\n        hostList1.add(\"1.1.1.1\");\n        String hostListString1 = \"0.0.0.0#1.1.1.1\";\n        assertThat(hostListString1, is(lionRegistryService.buildHostListString(hostList1)));\n\n        List<String> hostList2 = new ArrayList<String>();\n        String hostListString2 = \"\";\n        assertThat(hostListString2, is(lionRegistryService.buildHostListString(hostList2)));\n    }", "signature": "void testBuildHostListString()", "full_signature": "@Test public void testBuildHostListString()", "class_method_signature": "LionRegistryServiceTest.testBuildHostListString()", "testcase": true, "constructor": false, "invocations": ["add", "assertThat", "is", "buildHostListString", "add", "add", "assertThat", "is", "buildHostListString", "assertThat", "is", "buildHostListString"]}, "focal_class": {"identifier": "LionRegistryService", "superclass": "", "interfaces": "implements RegistryService", "fields": [{"original_string": "private static final String ZK_BASE_PATH = \"puma-route.server.\";", "modifier": "private static final", "type": "String", "declarator": "ZK_BASE_PATH = \"puma-route.server.\"", "var_name": "ZK_BASE_PATH"}, {"original_string": "private static final String ZK_PROJECT = \"puma-route\";", "modifier": "private static final", "type": "String", "declarator": "ZK_PROJECT = \"puma-route\"", "var_name": "ZK_PROJECT"}, {"original_string": "private final Logger logger = LoggerFactory.getLogger(LionRegistryService.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(LionRegistryService.class)", "var_name": "logger"}, {"original_string": "@Autowired\n    ConfigManager configManager;", "modifier": "@Autowired", "type": "ConfigManager", "declarator": "configManager", "var_name": "configManager"}], "methods": [{"identifier": "findAllDatabase", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> findAllDatabase()", "full_signature": "public Set<String> findAllDatabase()", "class_method_signature": "LionRegistryService.findAllDatabase()", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "(String database)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> find(String database)", "full_signature": "@Override public List<String> find(String database)", "class_method_signature": "LionRegistryService.find(String database)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(String host, String database)", "modifiers": "@Override public", "return": "void", "signature": "void register(String host, String database)", "full_signature": "@Override public void register(String host, String database)", "class_method_signature": "LionRegistryService.register(String host, String database)", "testcase": false, "constructor": false}, {"identifier": "unregister", "parameters": "(String host, String database)", "modifiers": "@Override public", "return": "void", "signature": "void unregister(String host, String database)", "full_signature": "@Override public void unregister(String host, String database)", "class_method_signature": "LionRegistryService.unregister(String host, String database)", "testcase": false, "constructor": false}, {"identifier": "registerAll", "parameters": "(List<String> hosts, String database)", "modifiers": "@Override public", "return": "void", "signature": "void registerAll(List<String> hosts, String database)", "full_signature": "@Override public void registerAll(List<String> hosts, String database)", "class_method_signature": "LionRegistryService.registerAll(List<String> hosts, String database)", "testcase": false, "constructor": false}, {"identifier": "unregisterAll", "parameters": "(List<String> hosts, String database)", "modifiers": "@Override public", "return": "void", "signature": "void unregisterAll(List<String> hosts, String database)", "full_signature": "@Override public void unregisterAll(List<String> hosts, String database)", "class_method_signature": "LionRegistryService.unregisterAll(List<String> hosts, String database)", "testcase": false, "constructor": false}, {"identifier": "registerResetAll", "parameters": "(List<String> hosts, String database)", "modifiers": "@Override public", "return": "void", "signature": "void registerResetAll(List<String> hosts, String database)", "full_signature": "@Override public void registerResetAll(List<String> hosts, String database)", "class_method_signature": "LionRegistryService.registerResetAll(List<String> hosts, String database)", "testcase": false, "constructor": false}, {"identifier": "register0", "parameters": "(List<String> hostList, String database)", "modifiers": "protected", "return": "void", "signature": "void register0(List<String> hostList, String database)", "full_signature": "protected void register0(List<String> hostList, String database)", "class_method_signature": "LionRegistryService.register0(List<String> hostList, String database)", "testcase": false, "constructor": false}, {"identifier": "parseHostList", "parameters": "(String hostListString)", "modifiers": "protected", "return": "List<String>", "signature": "List<String> parseHostList(String hostListString)", "full_signature": "protected List<String> parseHostList(String hostListString)", "class_method_signature": "LionRegistryService.parseHostList(String hostListString)", "testcase": false, "constructor": false}, {"identifier": "buildHostListString", "parameters": "(List<String> hostList)", "modifiers": "protected", "return": "String", "signature": "String buildHostListString(List<String> hostList)", "full_signature": "protected String buildHostListString(List<String> hostList)", "class_method_signature": "LionRegistryService.buildHostListString(List<String> hostList)", "testcase": false, "constructor": false}, {"identifier": "buildKey", "parameters": "(String database)", "modifiers": "protected", "return": "String", "signature": "String buildKey(String database)", "full_signature": "protected String buildKey(String database)", "class_method_signature": "LionRegistryService.buildKey(String database)", "testcase": false, "constructor": false}], "file": "puma/src/main/java/com/dianping/puma/server/registry/LionRegistryService.java"}, "focal_method": {"identifier": "buildHostListString", "parameters": "(List<String> hostList)", "modifiers": "protected", "return": "String", "body": "protected String buildHostListString(List<String> hostList) {\n        return StringUtils.join(hostList, \"#\");\n    }", "signature": "String buildHostListString(List<String> hostList)", "full_signature": "protected String buildHostListString(List<String> hostList)", "class_method_signature": "LionRegistryService.buildHostListString(List<String> hostList)", "testcase": false, "constructor": false, "invocations": ["join"]}, "repository": {"repo_id": 7031510, "url": "https://github.com/dianping/puma", "language": "Java", "is_fork": false, "fork_count": 102, "stargazer_count": 166, "size": 26527, "license": "licensed"}}