{"test_class": {"identifier": "InputControlRestApiTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public final WebMockRule mWebMockRule = new WebMockRule();", "modifier": "@Rule\n    public final", "type": "WebMockRule", "declarator": "mWebMockRule = new WebMockRule()", "var_name": "mWebMockRule"}, {"original_string": "@Rule\n    public final ExpectedException mExpectedException = ExpectedException.none();", "modifier": "@Rule\n    public final", "type": "ExpectedException", "declarator": "mExpectedException = ExpectedException.none()", "var_name": "mExpectedException"}, {"original_string": "private InputControlRestApi restApiUnderTest;", "modifier": "private", "type": "InputControlRestApi", "declarator": "restApiUnderTest", "var_name": "restApiUnderTest"}, {"original_string": "@ResourceFile(\"json/input_controls_states_list.json\")\n    TestResource icsStates;", "modifier": "@ResourceFile(\"json/input_controls_states_list.json\")", "type": "TestResource", "declarator": "icsStates", "var_name": "icsStates"}, {"original_string": "@ResourceFile(\"json/input_controls_without_states.json\")\n    TestResource icsWithoutStates;", "modifier": "@ResourceFile(\"json/input_controls_without_states.json\")", "type": "TestResource", "declarator": "icsWithoutStates", "var_name": "icsWithoutStates"}, {"original_string": "@ResourceFile(\"json/input_controls_with_states.json\")\n    TestResource icsWithStates;", "modifier": "@ResourceFile(\"json/input_controls_with_states.json\")", "type": "TestResource", "declarator": "icsWithStates", "var_name": "icsWithStates"}], "file": "core/src/test/java/com/jaspersoft/android/sdk/network/InputControlRestApiTest.java"}, "test_case": {"identifier": "requestInputControlsStatesShouldThrowRestErrorFor500", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void requestInputControlsStatesShouldThrowRestErrorFor500() throws Exception {\n        mExpectedException.expect(HttpException.class);\n        mWebMockRule.enqueue(MockResponseFactory.create500());\n        restApiUnderTest.requestInputControlsStates(\"any_id\", Collections.<ReportParameter>emptyList(), true);\n    }", "signature": "void requestInputControlsStatesShouldThrowRestErrorFor500()", "full_signature": "@Test public void requestInputControlsStatesShouldThrowRestErrorFor500()", "class_method_signature": "InputControlRestApiTest.requestInputControlsStatesShouldThrowRestErrorFor500()", "testcase": true, "constructor": false, "invocations": ["expect", "enqueue", "create500", "requestInputControlsStates", "emptyList"]}, "focal_class": {"identifier": "InputControlRestApi", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final NetworkClient mNetworkClient;", "modifier": "private final", "type": "NetworkClient", "declarator": "mNetworkClient", "var_name": "mNetworkClient"}], "methods": [{"identifier": "InputControlRestApi", "parameters": "(NetworkClient networkClient)", "modifiers": "", "return": "", "signature": " InputControlRestApi(NetworkClient networkClient)", "full_signature": "  InputControlRestApi(NetworkClient networkClient)", "class_method_signature": "InputControlRestApi.InputControlRestApi(NetworkClient networkClient)", "testcase": false, "constructor": true}, {"identifier": "requestInputControls", "parameters": "(@NotNull String reportUri,\n                                                   @Nullable Set<String> controlIds,\n                                                   boolean excludeState)", "modifiers": "@NotNull public", "return": "List<InputControl>", "signature": "List<InputControl> requestInputControls(@NotNull String reportUri,\n                                                   @Nullable Set<String> controlIds,\n                                                   boolean excludeState)", "full_signature": "@NotNull public List<InputControl> requestInputControls(@NotNull String reportUri,\n                                                   @Nullable Set<String> controlIds,\n                                                   boolean excludeState)", "class_method_signature": "InputControlRestApi.requestInputControls(@NotNull String reportUri,\n                                                   @Nullable Set<String> controlIds,\n                                                   boolean excludeState)", "testcase": false, "constructor": false}, {"identifier": "requestInputControlsInitialStates", "parameters": "(@NotNull String reportUri,\n                                                                     boolean freshData)", "modifiers": "@NotNull public", "return": "List<InputControlState>", "signature": "List<InputControlState> requestInputControlsInitialStates(@NotNull String reportUri,\n                                                                     boolean freshData)", "full_signature": "@NotNull public List<InputControlState> requestInputControlsInitialStates(@NotNull String reportUri,\n                                                                     boolean freshData)", "class_method_signature": "InputControlRestApi.requestInputControlsInitialStates(@NotNull String reportUri,\n                                                                     boolean freshData)", "testcase": false, "constructor": false}, {"identifier": "requestInputControlsStates", "parameters": "(@NotNull String reportUri,\n                                                              @NotNull List<ReportParameter> parameters,\n                                                              boolean freshData)", "modifiers": "@NotNull public", "return": "List<InputControlState>", "signature": "List<InputControlState> requestInputControlsStates(@NotNull String reportUri,\n                                                              @NotNull List<ReportParameter> parameters,\n                                                              boolean freshData)", "full_signature": "@NotNull public List<InputControlState> requestInputControlsStates(@NotNull String reportUri,\n                                                              @NotNull List<ReportParameter> parameters,\n                                                              boolean freshData)", "class_method_signature": "InputControlRestApi.requestInputControlsStates(@NotNull String reportUri,\n                                                              @NotNull List<ReportParameter> parameters,\n                                                              boolean freshData)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/jaspersoft/android/sdk/network/InputControlRestApi.java"}, "focal_method": {"identifier": "requestInputControlsStates", "parameters": "(@NotNull String reportUri,\n                                                              @NotNull List<ReportParameter> parameters,\n                                                              boolean freshData)", "modifiers": "@NotNull public", "return": "List<InputControlState>", "body": "@NotNull\n    public List<InputControlState> requestInputControlsStates(@NotNull String reportUri,\n                                                              @NotNull List<ReportParameter> parameters,\n                                                              boolean freshData) throws HttpException, IOException {\n        Utils.checkNotNull(reportUri, \"Report URI should not be null\");\n        Utils.checkNotNull(parameters, \"Parameters should not be null\");\n\n        Map<String, Set<String>> params = ReportParamsMapper.INSTANCE.toMap(parameters);\n        String ids = Utils.joinString(\";\", params.keySet());\n\n        HttpUrl url = new PathResolver.Builder()\n                .addPath(\"rest_v2\")\n                .addPath(\"reports\")\n                .addPaths(reportUri)\n                .addPath(\"inputControls\")\n                .addPath(ids)\n                .addPath(\"values\")\n                .build()\n                .resolve(mNetworkClient.getBaseUrl())\n                .newBuilder()\n                .addQueryParameter(\"freshData\", String.valueOf(freshData))\n                .build();\n\n\n        RequestBody jsonRequestBody = mNetworkClient.createJsonRequestBody(params);\n        Request request = new Request.Builder()\n                .addHeader(\"Accept\", \"application/json; charset=UTF-8\")\n                .post(jsonRequestBody)\n                .url(url)\n                .build();\n\n        Response response = mNetworkClient.makeCall(request);\n        if (response.code() == 204) {\n            return Collections.emptyList();\n        }\n\n        InputControlStateCollection inputControlStateCollection = mNetworkClient.deserializeJson(response, InputControlStateCollection.class);\n        return Collections.unmodifiableList(inputControlStateCollection.get());\n    }", "signature": "List<InputControlState> requestInputControlsStates(@NotNull String reportUri,\n                                                              @NotNull List<ReportParameter> parameters,\n                                                              boolean freshData)", "full_signature": "@NotNull public List<InputControlState> requestInputControlsStates(@NotNull String reportUri,\n                                                              @NotNull List<ReportParameter> parameters,\n                                                              boolean freshData)", "class_method_signature": "InputControlRestApi.requestInputControlsStates(@NotNull String reportUri,\n                                                              @NotNull List<ReportParameter> parameters,\n                                                              boolean freshData)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "checkNotNull", "toMap", "joinString", "keySet", "build", "addQueryParameter", "newBuilder", "resolve", "build", "addPath", "addPath", "addPath", "addPaths", "addPath", "addPath", "getBaseUrl", "valueOf", "createJsonRequestBody", "build", "url", "post", "addHeader", "makeCall", "code", "emptyList", "deserializeJson", "unmodifiableList", "get"]}, "repository": {"repo_id": 10609316, "url": "https://github.com/Jaspersoft/js-android-sdk", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 6796, "license": "licensed"}}