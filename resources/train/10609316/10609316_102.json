{"test_class": {"identifier": "RepositoryRestApiTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@ResourceFile(\"json/all_resources.json\")\n    TestResource searchResponse;", "modifier": "@ResourceFile(\"json/all_resources.json\")", "type": "TestResource", "declarator": "searchResponse", "var_name": "searchResponse"}, {"original_string": "@Rule\n    public final WebMockRule mWebMockRule = new WebMockRule();", "modifier": "@Rule\n    public final", "type": "WebMockRule", "declarator": "mWebMockRule = new WebMockRule()", "var_name": "mWebMockRule"}, {"original_string": "@Rule\n    public final ExpectedException mExpectedException = ExpectedException.none();", "modifier": "@Rule\n    public final", "type": "ExpectedException", "declarator": "mExpectedException = ExpectedException.none()", "var_name": "mExpectedException"}, {"original_string": "private RepositoryRestApi restApiUnderTest;", "modifier": "private", "type": "RepositoryRestApi", "declarator": "restApiUnderTest", "var_name": "restApiUnderTest"}], "file": "core/src/test/java/com/jaspersoft/android/sdk/network/RepositoryRestApiTest.java"}, "test_case": {"identifier": "requestForSearchShouldParseHeaderStartIndex", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void requestForSearchShouldParseHeaderStartIndex() throws Exception {\n        MockResponse mockResponse = MockResponseFactory.create200()\n                .setBody(searchResponse.asString())\n                .addHeader(\"Start-Index\", \"5\");\n        mWebMockRule.enqueue(mockResponse);\n\n        ResourceSearchResult response = restApiUnderTest.searchResources(null);\n        assertThat(response.getStartIndex(), is(5));\n    }", "signature": "void requestForSearchShouldParseHeaderStartIndex()", "full_signature": "@Test public void requestForSearchShouldParseHeaderStartIndex()", "class_method_signature": "RepositoryRestApiTest.requestForSearchShouldParseHeaderStartIndex()", "testcase": true, "constructor": false, "invocations": ["addHeader", "setBody", "create200", "asString", "enqueue", "searchResources", "assertThat", "getStartIndex", "is"]}, "focal_class": {"identifier": "RepositoryRestApi", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final NetworkClient mNetworkClient;", "modifier": "private final", "type": "NetworkClient", "declarator": "mNetworkClient", "var_name": "mNetworkClient"}], "methods": [{"identifier": "RepositoryRestApi", "parameters": "(NetworkClient networkClient)", "modifiers": "", "return": "", "signature": " RepositoryRestApi(NetworkClient networkClient)", "full_signature": "  RepositoryRestApi(NetworkClient networkClient)", "class_method_signature": "RepositoryRestApi.RepositoryRestApi(NetworkClient networkClient)", "testcase": false, "constructor": true}, {"identifier": "searchResources", "parameters": "(@NotNull Map<String, Object> searchParams)", "modifiers": "@NotNull public", "return": "ResourceSearchResult", "signature": "ResourceSearchResult searchResources(@NotNull Map<String, Object> searchParams)", "full_signature": "@NotNull public ResourceSearchResult searchResources(@NotNull Map<String, Object> searchParams)", "class_method_signature": "RepositoryRestApi.searchResources(@NotNull Map<String, Object> searchParams)", "testcase": false, "constructor": false}, {"identifier": "requestResource", "parameters": "(@NotNull String resourceUri, @NotNull String type)", "modifiers": "@NotNull public", "return": "ResourceLookup", "signature": "ResourceLookup requestResource(@NotNull String resourceUri, @NotNull String type)", "full_signature": "@NotNull public ResourceLookup requestResource(@NotNull String resourceUri, @NotNull String type)", "class_method_signature": "RepositoryRestApi.requestResource(@NotNull String resourceUri, @NotNull String type)", "testcase": false, "constructor": false}, {"identifier": "requestDashboardComponents", "parameters": "(@NotNull String dashboardUri)", "modifiers": "@NotNull public", "return": "DashboardComponentCollection", "signature": "DashboardComponentCollection requestDashboardComponents(@NotNull String dashboardUri)", "full_signature": "@NotNull public DashboardComponentCollection requestDashboardComponents(@NotNull String dashboardUri)", "class_method_signature": "RepositoryRestApi.requestDashboardComponents(@NotNull String dashboardUri)", "testcase": false, "constructor": false}, {"identifier": "requestResourceOutput", "parameters": "(@NotNull String resourceUri)", "modifiers": "@NotNull public", "return": "OutputResource", "signature": "OutputResource requestResourceOutput(@NotNull String resourceUri)", "full_signature": "@NotNull public OutputResource requestResourceOutput(@NotNull String resourceUri)", "class_method_signature": "RepositoryRestApi.requestResourceOutput(@NotNull String resourceUri)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/jaspersoft/android/sdk/network/RepositoryRestApi.java"}, "focal_method": {"identifier": "searchResources", "parameters": "(@NotNull Map<String, Object> searchParams)", "modifiers": "@NotNull public", "return": "ResourceSearchResult", "body": "@NotNull\n    public ResourceSearchResult searchResources(@NotNull Map<String, Object> searchParams) throws IOException, HttpException {\n        HttpUrl url = mNetworkClient.getBaseUrl()\n                .newBuilder()\n                .addPathSegment(\"rest_v2\")\n                .addPathSegment(\"resources\")\n                .build();\n        url = QueryMapper.INSTANCE.mapParams(searchParams, url);\n\n        Request request = new Request.Builder()\n                .addHeader(\"Accept\", \"application/json; charset=UTF-8\")\n                .get()\n                .url(url)\n                .build();\n\n        com.squareup.okhttp.Response rawResponse = mNetworkClient.makeCall(request);\n\n        int status = rawResponse.code();\n        ResourceSearchResult entity;\n        if (status == 204) {\n            entity = ResourceSearchResult.empty();\n        } else {\n            entity = mNetworkClient.deserializeJson(rawResponse, ResourceSearchResult.class);\n            com.squareup.okhttp.Headers headers = rawResponse.headers();\n\n            int resultCount = Utils.headerToInt(headers, \"Result-Count\");\n            int totalCount = Utils.headerToInt(headers, \"Total-Count\");\n            int startIndex = Utils.headerToInt(headers, \"Start-Index\");\n            int nextOffset = Utils.headerToInt(headers, \"Next-Offset\");\n\n            entity.setResultCount(resultCount);\n            entity.setTotalCount(totalCount);\n            entity.setStartIndex(startIndex);\n            entity.setNextOffset(nextOffset);\n        }\n        return entity;\n    }", "signature": "ResourceSearchResult searchResources(@NotNull Map<String, Object> searchParams)", "full_signature": "@NotNull public ResourceSearchResult searchResources(@NotNull Map<String, Object> searchParams)", "class_method_signature": "RepositoryRestApi.searchResources(@NotNull Map<String, Object> searchParams)", "testcase": false, "constructor": false, "invocations": ["build", "addPathSegment", "addPathSegment", "newBuilder", "getBaseUrl", "mapParams", "build", "url", "get", "addHeader", "makeCall", "code", "empty", "deserializeJson", "headers", "headerToInt", "headerToInt", "headerToInt", "headerToInt", "setResultCount", "setTotalCount", "setStartIndex", "setNextOffset"]}, "repository": {"repo_id": 10609316, "url": "https://github.com/Jaspersoft/js-android-sdk", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 6796, "license": "licensed"}}