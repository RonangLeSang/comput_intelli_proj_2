{"test_class": {"identifier": "ReportExportRestApiTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String EXECUTION_ID = \"f3a9805a-4089-4b53-b9e9-b54752f91586\";", "modifier": "private static final", "type": "String", "declarator": "EXECUTION_ID = \"f3a9805a-4089-4b53-b9e9-b54752f91586\"", "var_name": "EXECUTION_ID"}, {"original_string": "private static final String EXPORT_ID = \"195a65cb-1762-450a-be2b-1196a02bb625\";", "modifier": "private static final", "type": "String", "declarator": "EXPORT_ID = \"195a65cb-1762-450a-be2b-1196a02bb625\"", "var_name": "EXPORT_ID"}, {"original_string": "@Rule\n    public final WebMockRule mWebMockRule = new WebMockRule();", "modifier": "@Rule\n    public final", "type": "WebMockRule", "declarator": "mWebMockRule = new WebMockRule()", "var_name": "mWebMockRule"}, {"original_string": "@Rule\n    public final ExpectedException mExpectedException = ExpectedException.none();", "modifier": "@Rule\n    public final", "type": "ExpectedException", "declarator": "mExpectedException = ExpectedException.none()", "var_name": "mExpectedException"}, {"original_string": "private ReportExportRestApi restApiUnderTest;", "modifier": "private", "type": "ReportExportRestApi", "declarator": "restApiUnderTest", "var_name": "restApiUnderTest"}, {"original_string": "@ResourceFile(\"json/root_folder.json\")\n    TestResource mResource;", "modifier": "@ResourceFile(\"json/root_folder.json\")", "type": "TestResource", "declarator": "mResource", "var_name": "mResource"}], "file": "core/src/test/java/com/jaspersoft/android/sdk/network/ReportExportRestApiTest.java"}, "test_case": {"identifier": "requestForOutputShouldParsePagesFromHeader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void requestForOutputShouldParsePagesFromHeader() throws Exception {\n        MockResponse mockResponse = MockResponseFactory.create200()\n                .setBody(\"\")\n                .addHeader(\"report-pages\", \"1-10\");\n        mWebMockRule.enqueue(mockResponse);\n\n        ExportOutputResource resource = restApiUnderTest.requestExportOutput(EXECUTION_ID, EXPORT_ID);\n        assertThat(resource.getPages(), is(\"1-10\"));\n    }", "signature": "void requestForOutputShouldParsePagesFromHeader()", "full_signature": "@Test public void requestForOutputShouldParsePagesFromHeader()", "class_method_signature": "ReportExportRestApiTest.requestForOutputShouldParsePagesFromHeader()", "testcase": true, "constructor": false, "invocations": ["addHeader", "setBody", "create200", "enqueue", "requestExportOutput", "assertThat", "getPages", "is"]}, "focal_class": {"identifier": "ReportExportRestApi", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final NetworkClient mNetworkClient;", "modifier": "private final", "type": "NetworkClient", "declarator": "mNetworkClient", "var_name": "mNetworkClient"}], "methods": [{"identifier": "ReportExportRestApi", "parameters": "(NetworkClient networkClient)", "modifiers": "", "return": "", "signature": " ReportExportRestApi(NetworkClient networkClient)", "full_signature": "  ReportExportRestApi(NetworkClient networkClient)", "class_method_signature": "ReportExportRestApi.ReportExportRestApi(NetworkClient networkClient)", "testcase": false, "constructor": true}, {"identifier": "runExportExecution", "parameters": "(@NotNull String executionId,\n                                                        @NotNull ExecutionRequestOptions executionOptions)", "modifiers": "@NotNull public", "return": "ExportExecutionDescriptor", "signature": "ExportExecutionDescriptor runExportExecution(@NotNull String executionId,\n                                                        @NotNull ExecutionRequestOptions executionOptions)", "full_signature": "@NotNull public ExportExecutionDescriptor runExportExecution(@NotNull String executionId,\n                                                        @NotNull ExecutionRequestOptions executionOptions)", "class_method_signature": "ReportExportRestApi.runExportExecution(@NotNull String executionId,\n                                                        @NotNull ExecutionRequestOptions executionOptions)", "testcase": false, "constructor": false}, {"identifier": "checkExportExecutionStatus", "parameters": "(@NotNull String executionId,\n                                                      @NotNull String exportId)", "modifiers": "@NotNull public", "return": "ExecutionStatus", "signature": "ExecutionStatus checkExportExecutionStatus(@NotNull String executionId,\n                                                      @NotNull String exportId)", "full_signature": "@NotNull public ExecutionStatus checkExportExecutionStatus(@NotNull String executionId,\n                                                      @NotNull String exportId)", "class_method_signature": "ReportExportRestApi.checkExportExecutionStatus(@NotNull String executionId,\n                                                      @NotNull String exportId)", "testcase": false, "constructor": false}, {"identifier": "requestExportOutput", "parameters": "(@NotNull String executionId,\n                                                    @NotNull String exportId)", "modifiers": "@NotNull public", "return": "ExportOutputResource", "signature": "ExportOutputResource requestExportOutput(@NotNull String executionId,\n                                                    @NotNull String exportId)", "full_signature": "@NotNull public ExportOutputResource requestExportOutput(@NotNull String executionId,\n                                                    @NotNull String exportId)", "class_method_signature": "ReportExportRestApi.requestExportOutput(@NotNull String executionId,\n                                                    @NotNull String exportId)", "testcase": false, "constructor": false}, {"identifier": "requestExportAttachment", "parameters": "(@NotNull String executionId,\n                                                  @NotNull String exportId,\n                                                  @NotNull String attachmentId)", "modifiers": "@NotNull public", "return": "OutputResource", "signature": "OutputResource requestExportAttachment(@NotNull String executionId,\n                                                  @NotNull String exportId,\n                                                  @NotNull String attachmentId)", "full_signature": "@NotNull public OutputResource requestExportAttachment(@NotNull String executionId,\n                                                  @NotNull String exportId,\n                                                  @NotNull String attachmentId)", "class_method_signature": "ReportExportRestApi.requestExportAttachment(@NotNull String executionId,\n                                                  @NotNull String exportId,\n                                                  @NotNull String attachmentId)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/jaspersoft/android/sdk/network/ReportExportRestApi.java"}, "focal_method": {"identifier": "requestExportOutput", "parameters": "(@NotNull String executionId,\n                                                    @NotNull String exportId)", "modifiers": "@NotNull public", "return": "ExportOutputResource", "body": "@NotNull\n    public ExportOutputResource requestExportOutput(@NotNull String executionId,\n                                                    @NotNull String exportId) throws IOException, HttpException {\n        Utils.checkNotNull(executionId, \"Execution id should not be null\");\n        Utils.checkNotNull(exportId, \"Export id should not be null\");\n\n        /**\n         * 'suppressContentDisposition' used due to security implications this header has\n         */\n        HttpUrl url = new PathResolver.Builder()\n                .addPath(\"rest_v2\")\n                .addPath(\"reportExecutions\")\n                .addPath(executionId)\n                .addPath(\"exports\")\n                .addPath(exportId)\n                .addPath(\"outputResource\")\n                .build()\n                .resolve(mNetworkClient.getBaseUrl())\n                .newBuilder()\n                .addQueryParameter(\"suppressContentDisposition\", \"true\")\n                .build();\n\n        Request request = new Request.Builder()\n                .addHeader(\"Accept\", \"application/json; charset=UTF-8\")\n                .get()\n                .url(url)\n                .build();\n\n        com.squareup.okhttp.Response response = mNetworkClient.makeCall(request);\n        com.squareup.okhttp.Headers headers = response.headers();\n\n        RetrofitOutputResource exportInput = new RetrofitOutputResource(response.body());\n        String pages = headers.get(\"report-pages\");\n        boolean isFinal = Boolean.parseBoolean(headers.get(\"output-final\"));\n\n        return ExportOutputResource.create(exportInput, pages, isFinal);\n    }", "signature": "ExportOutputResource requestExportOutput(@NotNull String executionId,\n                                                    @NotNull String exportId)", "full_signature": "@NotNull public ExportOutputResource requestExportOutput(@NotNull String executionId,\n                                                    @NotNull String exportId)", "class_method_signature": "ReportExportRestApi.requestExportOutput(@NotNull String executionId,\n                                                    @NotNull String exportId)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "checkNotNull", "build", "addQueryParameter", "newBuilder", "resolve", "build", "addPath", "addPath", "addPath", "addPath", "addPath", "addPath", "getBaseUrl", "build", "url", "get", "addHeader", "makeCall", "headers", "body", "get", "parseBoolean", "get", "create"]}, "repository": {"repo_id": 10609316, "url": "https://github.com/Jaspersoft/js-android-sdk", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 6796, "license": "licensed"}}