{"test_class": {"identifier": "RepositorySearchCriteriaTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException mExpectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "mExpectedException = ExpectedException.none()", "var_name": "mExpectedException"}], "file": "core/src/test/java/com/jaspersoft/android/sdk/service/repository/RepositorySearchCriteriaTest.java"}, "test_case": {"identifier": "shouldNotAcceptNegativeOffset", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldNotAcceptNegativeOffset() {\n        mExpectedException.expect(IllegalArgumentException.class);\n        mExpectedException.expectMessage(\"Offset should be positive\");\n        RepositorySearchCriteria.builder().withOffset(-1).build();\n    }", "signature": "void shouldNotAcceptNegativeOffset()", "full_signature": "@Test public void shouldNotAcceptNegativeOffset()", "class_method_signature": "RepositorySearchCriteriaTest.shouldNotAcceptNegativeOffset()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "build", "withOffset", "builder"]}, "focal_class": {"identifier": "RepositorySearchCriteria", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int DEFAULT_OFFSET = 0;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_OFFSET = 0", "var_name": "DEFAULT_OFFSET"}, {"original_string": "public static final int DEFAULT_LIMIT = 100;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_LIMIT = 100", "var_name": "DEFAULT_LIMIT"}, {"original_string": "public static int ALL = 1;", "modifier": "public static", "type": "int", "declarator": "ALL = 1", "var_name": "ALL"}, {"original_string": "public static int REPORT = (1 << 1);", "modifier": "public static", "type": "int", "declarator": "REPORT = (1 << 1)", "var_name": "REPORT"}, {"original_string": "public static int DASHBOARD = (1 << 2);", "modifier": "public static", "type": "int", "declarator": "DASHBOARD = (1 << 2)", "var_name": "DASHBOARD"}, {"original_string": "public static int LEGACY_DASHBOARD = (1 << 3);", "modifier": "public static", "type": "int", "declarator": "LEGACY_DASHBOARD = (1 << 3)", "var_name": "LEGACY_DASHBOARD"}, {"original_string": "public static int FOLDER = (1 << 4);", "modifier": "public static", "type": "int", "declarator": "FOLDER = (1 << 4)", "var_name": "FOLDER"}, {"original_string": "public static int REPORT_OPTION = (1 << 5);", "modifier": "public static", "type": "int", "declarator": "REPORT_OPTION = (1 << 5)", "var_name": "REPORT_OPTION"}, {"original_string": "public static int FILE = (1 << 6);", "modifier": "public static", "type": "int", "declarator": "FILE = (1 << 6)", "var_name": "FILE"}, {"original_string": "private final int mLimit;", "modifier": "private final", "type": "int", "declarator": "mLimit", "var_name": "mLimit"}, {"original_string": "private final int mOffset;", "modifier": "private final", "type": "int", "declarator": "mOffset", "var_name": "mOffset"}, {"original_string": "private final int mResourceMask;", "modifier": "private final", "type": "int", "declarator": "mResourceMask", "var_name": "mResourceMask"}, {"original_string": "private final Boolean mRecursive;", "modifier": "private final", "type": "Boolean", "declarator": "mRecursive", "var_name": "mRecursive"}, {"original_string": "private final String mQuery;", "modifier": "private final", "type": "String", "declarator": "mQuery", "var_name": "mQuery"}, {"original_string": "private final SortType mSort;", "modifier": "private final", "type": "SortType", "declarator": "mSort", "var_name": "mSort"}, {"original_string": "private final AccessType mAccessType;", "modifier": "private final", "type": "AccessType", "declarator": "mAccessType", "var_name": "mAccessType"}, {"original_string": "private final String mFolderUri;", "modifier": "private final", "type": "String", "declarator": "mFolderUri", "var_name": "mFolderUri"}], "methods": [{"identifier": "RepositorySearchCriteria", "parameters": "(Builder builder)", "modifiers": "private", "return": "", "signature": " RepositorySearchCriteria(Builder builder)", "full_signature": "private  RepositorySearchCriteria(Builder builder)", "class_method_signature": "RepositorySearchCriteria.RepositorySearchCriteria(Builder builder)", "testcase": false, "constructor": true}, {"identifier": "builder", "parameters": "()", "modifiers": "@NotNull public static", "return": "Builder", "signature": "Builder builder()", "full_signature": "@NotNull public static Builder builder()", "class_method_signature": "RepositorySearchCriteria.builder()", "testcase": false, "constructor": false}, {"identifier": "empty", "parameters": "()", "modifiers": "@NotNull public static", "return": "RepositorySearchCriteria", "signature": "RepositorySearchCriteria empty()", "full_signature": "@NotNull public static RepositorySearchCriteria empty()", "class_method_signature": "RepositorySearchCriteria.empty()", "testcase": false, "constructor": false}, {"identifier": "getLimit", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLimit()", "full_signature": "public int getLimit()", "class_method_signature": "RepositorySearchCriteria.getLimit()", "testcase": false, "constructor": false}, {"identifier": "getOffset", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getOffset()", "full_signature": "public int getOffset()", "class_method_signature": "RepositorySearchCriteria.getOffset()", "testcase": false, "constructor": false}, {"identifier": "getQuery", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "signature": "String getQuery()", "full_signature": "@Nullable public String getQuery()", "class_method_signature": "RepositorySearchCriteria.getQuery()", "testcase": false, "constructor": false}, {"identifier": "getRecursive", "parameters": "()", "modifiers": "@Nullable public", "return": "Boolean", "signature": "Boolean getRecursive()", "full_signature": "@Nullable public Boolean getRecursive()", "class_method_signature": "RepositorySearchCriteria.getRecursive()", "testcase": false, "constructor": false}, {"identifier": "getSortBy", "parameters": "()", "modifiers": "@Nullable public", "return": "SortType", "signature": "SortType getSortBy()", "full_signature": "@Nullable public SortType getSortBy()", "class_method_signature": "RepositorySearchCriteria.getSortBy()", "testcase": false, "constructor": false}, {"identifier": "getResourceMask", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getResourceMask()", "full_signature": "public int getResourceMask()", "class_method_signature": "RepositorySearchCriteria.getResourceMask()", "testcase": false, "constructor": false}, {"identifier": "getFolderUri", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "signature": "String getFolderUri()", "full_signature": "@Nullable public String getFolderUri()", "class_method_signature": "RepositorySearchCriteria.getFolderUri()", "testcase": false, "constructor": false}, {"identifier": "getAccessType", "parameters": "()", "modifiers": "public", "return": "AccessType", "signature": "AccessType getAccessType()", "full_signature": "public AccessType getAccessType()", "class_method_signature": "RepositorySearchCriteria.getAccessType()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/jaspersoft/android/sdk/service/repository/RepositorySearchCriteria.java"}, "focal_method": {"identifier": "builder", "parameters": "()", "modifiers": "@NotNull public static", "return": "Builder", "body": "@NotNull\n    public static Builder builder() {\n        return new Builder();\n    }", "signature": "Builder builder()", "full_signature": "@NotNull public static Builder builder()", "class_method_signature": "RepositorySearchCriteria.builder()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 10609316, "url": "https://github.com/Jaspersoft/js-android-sdk", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 6796, "license": "licensed"}}