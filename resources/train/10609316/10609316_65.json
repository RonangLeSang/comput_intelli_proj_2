{"test_class": {"identifier": "ServerRestApiTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public final WebMockRule mWebMockRule = new WebMockRule();", "modifier": "@Rule\n    public final", "type": "WebMockRule", "declarator": "mWebMockRule = new WebMockRule()", "var_name": "mWebMockRule"}, {"original_string": "@Rule\n    public final ExpectedException mExpectedException = ExpectedException.none();", "modifier": "@Rule\n    public final", "type": "ExpectedException", "declarator": "mExpectedException = ExpectedException.none()", "var_name": "mExpectedException"}, {"original_string": "private ServerRestApi objectUnderTest;", "modifier": "private", "type": "ServerRestApi", "declarator": "objectUnderTest", "var_name": "objectUnderTest"}], "file": "core/src/test/java/com/jaspersoft/android/sdk/network/ServerRestApiTest.java"}, "test_case": {"identifier": "shouldHandlePlainTextResponseForDatetimeFormatPattern", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldHandlePlainTextResponseForDatetimeFormatPattern() throws Exception {\n        mWebMockRule.enqueue(\n                MockResponseFactory.create200().setBody(\"yyyy-MM-dd'T'HH:mm:ss\")\n        );\n        String editionName = objectUnderTest.requestDateTimeFormatPattern();\n        assertThat(editionName, is(\"yyyy-MM-dd'T'HH:mm:ss\"));\n\n        RecordedRequest recordedRequest = mWebMockRule.get().takeRequest();\n        assertThat(\"Should accept text plain header\", recordedRequest, containsHeader(\"Accept\", \"text/plain; charset=UTF-8\"));\n        assertThat(\"Should have path '/rest_v2/serverInfo/datetimeFormatPattern'\", recordedRequest, hasPath(\"/rest_v2/serverInfo/datetimeFormatPattern\"));\n    }", "signature": "void shouldHandlePlainTextResponseForDatetimeFormatPattern()", "full_signature": "@Test public void shouldHandlePlainTextResponseForDatetimeFormatPattern()", "class_method_signature": "ServerRestApiTest.shouldHandlePlainTextResponseForDatetimeFormatPattern()", "testcase": true, "constructor": false, "invocations": ["enqueue", "setBody", "create200", "requestDateTimeFormatPattern", "assertThat", "is", "takeRequest", "get", "assertThat", "containsHeader", "assertThat", "hasPath"]}, "focal_class": {"identifier": "ServerRestApi", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final NetworkClient mClientWrapper;", "modifier": "private final", "type": "NetworkClient", "declarator": "mClientWrapper", "var_name": "mClientWrapper"}], "methods": [{"identifier": "ServerRestApi", "parameters": "(NetworkClient networkClient)", "modifiers": "public", "return": "", "signature": " ServerRestApi(NetworkClient networkClient)", "full_signature": "public  ServerRestApi(NetworkClient networkClient)", "class_method_signature": "ServerRestApi.ServerRestApi(NetworkClient networkClient)", "testcase": false, "constructor": true}, {"identifier": "requestServerInfo", "parameters": "()", "modifiers": "@NotNull public", "return": "ServerInfoData", "signature": "ServerInfoData requestServerInfo()", "full_signature": "@NotNull public ServerInfoData requestServerInfo()", "class_method_signature": "ServerRestApi.requestServerInfo()", "testcase": false, "constructor": false}, {"identifier": "requestBuild", "parameters": "()", "modifiers": "@NotNull public", "return": "String", "signature": "String requestBuild()", "full_signature": "@NotNull public String requestBuild()", "class_method_signature": "ServerRestApi.requestBuild()", "testcase": false, "constructor": false}, {"identifier": "requestEdition", "parameters": "()", "modifiers": "@NotNull public", "return": "String", "signature": "String requestEdition()", "full_signature": "@NotNull public String requestEdition()", "class_method_signature": "ServerRestApi.requestEdition()", "testcase": false, "constructor": false}, {"identifier": "requestVersion", "parameters": "()", "modifiers": "@NotNull public", "return": "String", "signature": "String requestVersion()", "full_signature": "@NotNull public String requestVersion()", "class_method_signature": "ServerRestApi.requestVersion()", "testcase": false, "constructor": false}, {"identifier": "requestFeatures", "parameters": "()", "modifiers": "@NotNull public", "return": "String", "signature": "String requestFeatures()", "full_signature": "@NotNull public String requestFeatures()", "class_method_signature": "ServerRestApi.requestFeatures()", "testcase": false, "constructor": false}, {"identifier": "requestEditionName", "parameters": "()", "modifiers": "@NotNull public", "return": "String", "signature": "String requestEditionName()", "full_signature": "@NotNull public String requestEditionName()", "class_method_signature": "ServerRestApi.requestEditionName()", "testcase": false, "constructor": false}, {"identifier": "requestLicenseType", "parameters": "()", "modifiers": "@NotNull public", "return": "String", "signature": "String requestLicenseType()", "full_signature": "@NotNull public String requestLicenseType()", "class_method_signature": "ServerRestApi.requestLicenseType()", "testcase": false, "constructor": false}, {"identifier": "requestExpiration", "parameters": "()", "modifiers": "@NotNull public", "return": "String", "signature": "String requestExpiration()", "full_signature": "@NotNull public String requestExpiration()", "class_method_signature": "ServerRestApi.requestExpiration()", "testcase": false, "constructor": false}, {"identifier": "requestDateFormatPattern", "parameters": "()", "modifiers": "@NotNull public", "return": "String", "signature": "String requestDateFormatPattern()", "full_signature": "@NotNull public String requestDateFormatPattern()", "class_method_signature": "ServerRestApi.requestDateFormatPattern()", "testcase": false, "constructor": false}, {"identifier": "requestDateTimeFormatPattern", "parameters": "()", "modifiers": "@NotNull public", "return": "String", "signature": "String requestDateTimeFormatPattern()", "full_signature": "@NotNull public String requestDateTimeFormatPattern()", "class_method_signature": "ServerRestApi.requestDateTimeFormatPattern()", "testcase": false, "constructor": false}, {"identifier": "plainRequest", "parameters": "(String path)", "modifiers": "private", "return": "String", "signature": "String plainRequest(String path)", "full_signature": "private String plainRequest(String path)", "class_method_signature": "ServerRestApi.plainRequest(String path)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/jaspersoft/android/sdk/network/ServerRestApi.java"}, "focal_method": {"identifier": "requestDateTimeFormatPattern", "parameters": "()", "modifiers": "@NotNull public", "return": "String", "body": "@NotNull\n    public String requestDateTimeFormatPattern() throws IOException, HttpException {\n        return plainRequest(\"rest_v2/serverInfo/datetimeFormatPattern\");\n    }", "signature": "String requestDateTimeFormatPattern()", "full_signature": "@NotNull public String requestDateTimeFormatPattern()", "class_method_signature": "ServerRestApi.requestDateTimeFormatPattern()", "testcase": false, "constructor": false, "invocations": ["plainRequest"]}, "repository": {"repo_id": 10609316, "url": "https://github.com/Jaspersoft/js-android-sdk", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 6796, "license": "licensed"}}