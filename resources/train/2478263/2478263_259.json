{"test_class": {"identifier": "CypherProxyControllerTest", "superclass": "", "interfaces": "", "fields": [], "file": "eol-globi-rest/src/test/java/org/eol/globi/server/CypherProxyControllerTest.java"}, "test_case": {"identifier": "findExternalLinkForTaxonWithNonExistingName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void findExternalLinkForTaxonWithNonExistingName() throws IOException {\n        String externalLink = new CypherProxyController().findExternalLinkForTaxonWithName(null, \"This aint exist yet\");\n        assertThat(externalLink, is(\"{}\"));\n    }", "signature": "void findExternalLinkForTaxonWithNonExistingName()", "full_signature": "@Test public void findExternalLinkForTaxonWithNonExistingName()", "class_method_signature": "CypherProxyControllerTest.findExternalLinkForTaxonWithNonExistingName()", "testcase": true, "constructor": false, "invocations": ["findExternalLinkForTaxonWithName", "assertThat", "is"]}, "focal_class": {"identifier": "CypherProxyController", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "locationsNew", "parameters": "(HttpServletRequest request)", "modifiers": "@RequestMapping(value = \"/locations\", method = RequestMethod.GET) @ResponseBody public", "return": "CypherQuery", "signature": "CypherQuery locationsNew(HttpServletRequest request)", "full_signature": "@RequestMapping(value = \"/locations\", method = RequestMethod.GET) @ResponseBody public CypherQuery locationsNew(HttpServletRequest request)", "class_method_signature": "CypherProxyController.locationsNew(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "findExternalLinkForTaxonWithName", "parameters": "(HttpServletRequest request, @PathVariable(\"taxonName\") String taxonName)", "modifiers": "@RequestMapping(value = \"/findExternalUrlForTaxon/{taxonName}\", method = RequestMethod.GET, produces = \"application/json\") @ResponseBody public", "return": "String", "signature": "String findExternalLinkForTaxonWithName(HttpServletRequest request, @PathVariable(\"taxonName\") String taxonName)", "full_signature": "@RequestMapping(value = \"/findExternalUrlForTaxon/{taxonName}\", method = RequestMethod.GET, produces = \"application/json\") @ResponseBody public String findExternalLinkForTaxonWithName(HttpServletRequest request, @PathVariable(\"taxonName\") String taxonName)", "class_method_signature": "CypherProxyController.findExternalLinkForTaxonWithName(HttpServletRequest request, @PathVariable(\"taxonName\") String taxonName)", "testcase": false, "constructor": false}, {"identifier": "findExternalLinkForStudyWithTitle", "parameters": "(HttpServletRequest request, @PathVariable(\"studyTitle\") String taxonName)", "modifiers": "@RequestMapping(value = \"/findExternalUrlForStudy/{studyTitle}\", method = RequestMethod.GET, produces = \"application/json\") @ResponseBody public", "return": "String", "signature": "String findExternalLinkForStudyWithTitle(HttpServletRequest request, @PathVariable(\"studyTitle\") String taxonName)", "full_signature": "@RequestMapping(value = \"/findExternalUrlForStudy/{studyTitle}\", method = RequestMethod.GET, produces = \"application/json\") @ResponseBody public String findExternalLinkForStudyWithTitle(HttpServletRequest request, @PathVariable(\"studyTitle\") String taxonName)", "class_method_signature": "CypherProxyController.findExternalLinkForStudyWithTitle(HttpServletRequest request, @PathVariable(\"studyTitle\") String taxonName)", "testcase": false, "constructor": false}, {"identifier": "findExternalIdForTaxonNew", "parameters": "(HttpServletRequest request, @PathVariable(\"taxonName\") final String taxonName)", "modifiers": "@RequestMapping(value = \"/findExternalIdForTaxon/{taxonName}\", method = RequestMethod.GET) @ResponseBody public", "return": "CypherQuery", "signature": "CypherQuery findExternalIdForTaxonNew(HttpServletRequest request, @PathVariable(\"taxonName\") final String taxonName)", "full_signature": "@RequestMapping(value = \"/findExternalIdForTaxon/{taxonName}\", method = RequestMethod.GET) @ResponseBody public CypherQuery findExternalIdForTaxonNew(HttpServletRequest request, @PathVariable(\"taxonName\") final String taxonName)", "class_method_signature": "CypherProxyController.findExternalIdForTaxonNew(HttpServletRequest request, @PathVariable(\"taxonName\") final String taxonName)", "testcase": false, "constructor": false}, {"identifier": "findExternalIdForStudyNew", "parameters": "(HttpServletRequest request, @PathVariable(\"studyTitle\") final String studyTitle)", "modifiers": "@RequestMapping(value = \"/findExternalIdForStudy/{studyTitle}\", method = RequestMethod.GET) @ResponseBody public", "return": "CypherQuery", "signature": "CypherQuery findExternalIdForStudyNew(HttpServletRequest request, @PathVariable(\"studyTitle\") final String studyTitle)", "full_signature": "@RequestMapping(value = \"/findExternalIdForStudy/{studyTitle}\", method = RequestMethod.GET) @ResponseBody public CypherQuery findExternalIdForStudyNew(HttpServletRequest request, @PathVariable(\"studyTitle\") final String studyTitle)", "class_method_signature": "CypherProxyController.findExternalIdForStudyNew(HttpServletRequest request, @PathVariable(\"studyTitle\") final String studyTitle)", "testcase": false, "constructor": false}, {"identifier": "findExternalLinkForExternalId", "parameters": "(@PathVariable(\"externalId\") String externalId)", "modifiers": "@RequestMapping(value = \"/findExternalUrlForExternalId/{externalId}\", method = RequestMethod.GET, produces = \"application/json\") @ResponseBody public", "return": "String", "signature": "String findExternalLinkForExternalId(@PathVariable(\"externalId\") String externalId)", "full_signature": "@RequestMapping(value = \"/findExternalUrlForExternalId/{externalId}\", method = RequestMethod.GET, produces = \"application/json\") @ResponseBody public String findExternalLinkForExternalId(@PathVariable(\"externalId\") String externalId)", "class_method_signature": "CypherProxyController.findExternalLinkForExternalId(@PathVariable(\"externalId\") String externalId)", "testcase": false, "constructor": false}, {"identifier": "findShortestPathsNew", "parameters": "(HttpServletRequest request, @PathVariable(\"startTaxon\") final String startTaxon,\n                                            @PathVariable(\"endTaxon\") final String endTaxon)", "modifiers": "@RequestMapping(value = \"/shortestPathsBetweenTaxon/{startTaxon}/andTaxon/{endTaxon}\", method = RequestMethod.GET) @ResponseBody public", "return": "CypherQuery", "signature": "CypherQuery findShortestPathsNew(HttpServletRequest request, @PathVariable(\"startTaxon\") final String startTaxon,\n                                            @PathVariable(\"endTaxon\") final String endTaxon)", "full_signature": "@RequestMapping(value = \"/shortestPathsBetweenTaxon/{startTaxon}/andTaxon/{endTaxon}\", method = RequestMethod.GET) @ResponseBody public CypherQuery findShortestPathsNew(HttpServletRequest request, @PathVariable(\"startTaxon\") final String startTaxon,\n                                            @PathVariable(\"endTaxon\") final String endTaxon)", "class_method_signature": "CypherProxyController.findShortestPathsNew(HttpServletRequest request, @PathVariable(\"startTaxon\") final String startTaxon,\n                                            @PathVariable(\"endTaxon\") final String endTaxon)", "testcase": false, "constructor": false}], "file": "eol-globi-rest/src/main/java/org/eol/globi/server/CypherProxyController.java"}, "focal_method": {"identifier": "findExternalLinkForTaxonWithName", "parameters": "(HttpServletRequest request, @PathVariable(\"taxonName\") String taxonName)", "modifiers": "@RequestMapping(value = \"/findExternalUrlForTaxon/{taxonName}\", method = RequestMethod.GET, produces = \"application/json\") @ResponseBody public", "return": "String", "body": "@RequestMapping(value = \"/findExternalUrlForTaxon/{taxonName}\", method = RequestMethod.GET, produces = \"application/json\")\n    @ResponseBody\n    public String findExternalLinkForTaxonWithName(HttpServletRequest request, @PathVariable(\"taxonName\") String taxonName) throws IOException {\n        return ExternalIdUtil.getUrlFromExternalId(CypherUtil.executeRemote(findExternalIdForTaxonNew(request, taxonName)));\n    }", "signature": "String findExternalLinkForTaxonWithName(HttpServletRequest request, @PathVariable(\"taxonName\") String taxonName)", "full_signature": "@RequestMapping(value = \"/findExternalUrlForTaxon/{taxonName}\", method = RequestMethod.GET, produces = \"application/json\") @ResponseBody public String findExternalLinkForTaxonWithName(HttpServletRequest request, @PathVariable(\"taxonName\") String taxonName)", "class_method_signature": "CypherProxyController.findExternalLinkForTaxonWithName(HttpServletRequest request, @PathVariable(\"taxonName\") String taxonName)", "testcase": false, "constructor": false, "invocations": ["getUrlFromExternalId", "executeRemote", "findExternalIdForTaxonNew"]}, "repository": {"repo_id": 2478263, "url": "https://github.com/globalbioticinteractions/globalbioticinteractions", "stars": 49, "created": "9/28/2011 9:51:47 PM +00:00", "updates": "2020-01-17T17:47:05+00:00", "fork": "False", "license": "licensed"}}