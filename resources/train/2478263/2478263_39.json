{"test_class": {"identifier": "LinkerDOITest", "superclass": "extends GraphDBTestCase", "interfaces": "", "fields": [], "file": "eol-globi-neo4j-index/src/test/java/org/eol/globi/tool/LinkerDOITest.java"}, "test_case": {"identifier": "addDOIToStudy", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void addDOIToStudy() throws NodeFactoryException {\n        DOIResolver doiResolver = new DOIResolver() {\n            @Override\n            public Map<String, DOI> resolveDoiFor(Collection<String> references) throws IOException {\n                Map<String, DOI> doiMap = new HashMap<>();\n                for (String reference : references) {\n                    doiMap.put(reference, resolveDoiFor(reference));\n                }\n                return doiMap;\n            }\n\n            @Override\n            public DOI resolveDoiFor(String reference) throws IOException {\n                return new DOI(\"1234\", \"567\");\n            }\n        };\n        StudyNode study = getNodeFactory().getOrCreateStudy(new StudyImpl(\"my title\", null, ExternalIdUtil.toCitation(\"my contr\", \"some description\", null)));\n        LinkerDOI.linkStudy(doiResolver, study);\n        assertThat(study.getDOI().toString(), is(\"10.1234/567\"));\n        assertThat(study.getExternalId(), is(\"https://doi.org/10.1234/567\"));\n        assertThat(study.getCitation(), is(\"my contr. some description\"));\n\n        StudyImpl study1 = new StudyImpl(\"my other title\", null, ExternalIdUtil.toCitation(\"my contr\", \"some description\", null));\n        assertThat(study1.getExternalId(), nullValue());\n        study = getNodeFactory().getOrCreateStudy(study1);\n        assertThat(study.getExternalId(), nullValue());\n        LinkerDOI.linkStudy(new DOIResolverThatExplodes(), study);\n        assertThat(study.getDOI(), nullValue());\n        assertThat(study.getExternalId(), nullValue());\n        assertThat(study.getCitation(), is(\"my contr. some description\"));\n    }", "signature": "void addDOIToStudy()", "full_signature": "@Test public void addDOIToStudy()", "class_method_signature": "LinkerDOITest.addDOIToStudy()", "testcase": true, "constructor": false, "invocations": ["put", "resolveDoiFor", "getOrCreateStudy", "getNodeFactory", "toCitation", "linkStudy", "assertThat", "toString", "getDOI", "is", "assertThat", "getExternalId", "is", "assertThat", "getCitation", "is", "toCitation", "assertThat", "getExternalId", "nullValue", "getOrCreateStudy", "getNodeFactory", "assertThat", "getExternalId", "nullValue", "linkStudy", "assertThat", "getDOI", "nullValue", "assertThat", "getExternalId", "nullValue", "assertThat", "getCitation", "is"]}, "focal_class": {"identifier": "LinkerDOI", "superclass": "", "interfaces": "implements IndexerNeo4j", "fields": [{"original_string": "private static final Log LOG = LogFactory.getLog(LinkerDOI.class);", "modifier": "private static final", "type": "Log", "declarator": "LOG = LogFactory.getLog(LinkerDOI.class)", "var_name": "LOG"}, {"original_string": "public static final int BATCH_SIZE = 25;", "modifier": "public static final", "type": "int", "declarator": "BATCH_SIZE = 25", "var_name": "BATCH_SIZE"}, {"original_string": "private final DOIResolver doiResolver;", "modifier": "private final", "type": "DOIResolver", "declarator": "doiResolver", "var_name": "doiResolver"}], "methods": [{"identifier": "LinkerDOI", "parameters": "()", "modifiers": "public", "return": "", "signature": " LinkerDOI()", "full_signature": "public  LinkerDOI()", "class_method_signature": "LinkerDOI.LinkerDOI()", "testcase": false, "constructor": true}, {"identifier": "LinkerDOI", "parameters": "(DOIResolver resolver)", "modifiers": "public", "return": "", "signature": " LinkerDOI(DOIResolver resolver)", "full_signature": "public  LinkerDOI(DOIResolver resolver)", "class_method_signature": "LinkerDOI.LinkerDOI(DOIResolver resolver)", "testcase": false, "constructor": true}, {"identifier": "index", "parameters": "(GraphServiceFactory factory)", "modifiers": "@Override public", "return": "void", "signature": "void index(GraphServiceFactory factory)", "full_signature": "@Override public void index(GraphServiceFactory factory)", "class_method_signature": "LinkerDOI.index(GraphServiceFactory factory)", "testcase": false, "constructor": false}, {"identifier": "resolveBatch", "parameters": "(DOIResolver doiResolver, Map<String, StudyNode> batch)", "modifiers": "public", "return": "void", "signature": "void resolveBatch(DOIResolver doiResolver, Map<String, StudyNode> batch)", "full_signature": "public void resolveBatch(DOIResolver doiResolver, Map<String, StudyNode> batch)", "class_method_signature": "LinkerDOI.resolveBatch(DOIResolver doiResolver, Map<String, StudyNode> batch)", "testcase": false, "constructor": false}, {"identifier": "resolve", "parameters": "(DOIResolver doiResolver, Map<String, StudyNode> batch, Collection<String> citations)", "modifiers": "public", "return": "void", "signature": "void resolve(DOIResolver doiResolver, Map<String, StudyNode> batch, Collection<String> citations)", "full_signature": "public void resolve(DOIResolver doiResolver, Map<String, StudyNode> batch, Collection<String> citations)", "class_method_signature": "LinkerDOI.resolve(DOIResolver doiResolver, Map<String, StudyNode> batch, Collection<String> citations)", "testcase": false, "constructor": false}, {"identifier": "logProgress", "parameters": "(int counter, StopWatch stopWatch)", "modifiers": "public", "return": "String", "signature": "String logProgress(int counter, StopWatch stopWatch)", "full_signature": "public String logProgress(int counter, StopWatch stopWatch)", "class_method_signature": "LinkerDOI.logProgress(int counter, StopWatch stopWatch)", "testcase": false, "constructor": false}, {"identifier": "linkStudy", "parameters": "(DOIResolver doiResolver, StudyNode study)", "modifiers": "public static", "return": "void", "signature": "void linkStudy(DOIResolver doiResolver, StudyNode study)", "full_signature": "public static void linkStudy(DOIResolver doiResolver, StudyNode study)", "class_method_signature": "LinkerDOI.linkStudy(DOIResolver doiResolver, StudyNode study)", "testcase": false, "constructor": false}, {"identifier": "setDOIForStudy", "parameters": "(StudyNode study, DOI doiResolved)", "modifiers": "private static", "return": "void", "signature": "void setDOIForStudy(StudyNode study, DOI doiResolved)", "full_signature": "private static void setDOIForStudy(StudyNode study, DOI doiResolved)", "class_method_signature": "LinkerDOI.setDOIForStudy(StudyNode study, DOI doiResolved)", "testcase": false, "constructor": false}, {"identifier": "shouldResolve", "parameters": "(Study study)", "modifiers": "public static", "return": "boolean", "signature": "boolean shouldResolve(Study study)", "full_signature": "public static boolean shouldResolve(Study study)", "class_method_signature": "LinkerDOI.shouldResolve(Study study)", "testcase": false, "constructor": false}, {"identifier": "citationLikeString", "parameters": "(String citation)", "modifiers": "private static", "return": "boolean", "signature": "boolean citationLikeString(String citation)", "full_signature": "private static boolean citationLikeString(String citation)", "class_method_signature": "LinkerDOI.citationLikeString(String citation)", "testcase": false, "constructor": false}], "file": "eol-globi-neo4j-index/src/main/java/org/eol/globi/tool/LinkerDOI.java"}, "focal_method": {"identifier": "linkStudy", "parameters": "(DOIResolver doiResolver, StudyNode study)", "modifiers": "public static", "return": "void", "body": "public static void linkStudy(DOIResolver doiResolver, StudyNode study) {\n        if (shouldResolve(study)) {\n            try {\n                DOI doiResolved = doiResolver.resolveDoiFor(study.getCitation());\n                setDOIForStudy(study, doiResolved);\n            } catch (IOException e) {\n                LOG.warn(\"failed to lookup doi for citation [\" + study.getCitation() + \"] with id [\" + study.getTitle() + \"]\", e);\n            }\n        }\n    }", "signature": "void linkStudy(DOIResolver doiResolver, StudyNode study)", "full_signature": "public static void linkStudy(DOIResolver doiResolver, StudyNode study)", "class_method_signature": "LinkerDOI.linkStudy(DOIResolver doiResolver, StudyNode study)", "testcase": false, "constructor": false, "invocations": ["shouldResolve", "resolveDoiFor", "getCitation", "setDOIForStudy", "warn", "getCitation", "getTitle"]}, "repository": {"repo_id": 2478263, "url": "https://github.com/globalbioticinteractions/globalbioticinteractions", "stars": 49, "created": "9/28/2011 9:51:47 PM +00:00", "updates": "2020-01-17T17:47:05+00:00", "fork": "False", "license": "licensed"}}