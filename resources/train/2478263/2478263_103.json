{"test_class": {"identifier": "DatasetImporterForGoMexSI2Test", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String WKT_FOOTPRINT = \"POLYGON((-92.6729107838999 29.3941413332999,-92.5604838626999 29.2066775354,-92.7326173694 29.1150784684999,-92.9638307704999 29.1171045174,-93.3169089704999 29.3616452463,-93.4007435505999 29.5222620776999,-93.3169089704999 29.6243402981,-93.1045280342 29.6340566488,-92.6729107838999 29.3941413332999))\";", "modifier": "public static final", "type": "String", "declarator": "WKT_FOOTPRINT = \"POLYGON((-92.6729107838999 29.3941413332999,-92.5604838626999 29.2066775354,-92.7326173694 29.1150784684999,-92.9638307704999 29.1171045174,-93.3169089704999 29.3616452463,-93.4007435505999 29.5222620776999,-93.3169089704999 29.6243402981,-93.1045280342 29.6340566488,-92.6729107838999 29.3941413332999))\"", "var_name": "WKT_FOOTPRINT"}], "file": "eol-globi-data-sources/src/test/java/org/eol/globi/data/DatasetImporterForGoMexSI2Test.java"}, "test_case": {"identifier": "importSinglePrey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void importSinglePrey() throws IOException, StudyImporterException {\n        final Map<String, String> parsedProperties = new HashMap<String, String>();\n        String predOneLine = \"DATA_ID,PRED_ID,PREY_SOURCE_NAME,PREY_DATABASE_NAME,PHYSIOLOG_STATE,SED_ORIGIN,PREY_PARTS,PREY_LIFE_HIST_STAGE,PREY_COND_INDEX,PREY_SEX,PREY_SEX_RATIO,PREY_LEN_TYPE,PREY_MIN_LEN,PREY_MAX_LEN,PREY_MN_LEN,PREY_MIN_WIDTH,PREY_MAX_WIDTH,PREY_MN_WIDTH,BIOMASS,BIOMASS_QUALIFIER,PCT_BIOMASS,PCT_BIOMASS_QUALIFIER,N_CONS,N_CONS_QUALIFIER,PCT_N_CONS,PCT_N_CONS_QUALIFIER,VOL_CONS,VOL_CONS_QUALIFIER,PCT_VOL_CONS,PCT_VOL_CONS_QUALIFIER,FREQ_OCC,FREQ_OCC_QUALIFIER,PCT_FREQ_OCC,PCT_FREQ_OCC_QUALIFIER,IRI,PCT_IRI,IRIa,IIR,E,PREY_NOTES,ENTRY_DATE,ENTRY_PERSON,EDITED_DATE,DATA_EDITOR,MODIFY_DATE,DATA_MODIFIER\\n\" +\n                \"ACT_16R,Cchr.1,Crustacea,Crustacea,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,1.245,NA,0.15,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,Jim Simons,NA,Jim Simons,27/06/2016,Theresa Mitchell\\n\";\n        DatasetImporterForGoMexSI2.parseSpecimen(URI.create(\"test.txt\"), \"PREY_\", new ParseEventHandler() {\n            @Override\n            public void onSpecimen(String predatorUID, Map<String, String> properties) {\n                parsedProperties.putAll(properties);\n            }\n        }, CSVTSVUtil.createLabeledCSVParser(CSVTSVUtil.createExcelCSVParse(new StringReader(predOneLine))));\n\n        assertThat(parsedProperties.get(\"name\"), is(\"Crustacea\"));\n        assertThat(parsedProperties.get(\"GOMEXSI:PREY_SOURCE_NAME\"), is(\"Crustacea\"));\n    }", "signature": "void importSinglePrey()", "full_signature": "@Test public void importSinglePrey()", "class_method_signature": "DatasetImporterForGoMexSI2Test.importSinglePrey()", "testcase": true, "constructor": false, "invocations": ["parseSpecimen", "create", "putAll", "createLabeledCSVParser", "createExcelCSVParse", "assertThat", "get", "is", "assertThat", "get", "is"]}, "focal_class": {"identifier": "DatasetImporterForGoMexSI2", "superclass": "extends NodeBasedImporter", "interfaces": "", "fields": [{"original_string": "private static final Log LOG = LogFactory.getLog(DatasetImporterForGoMexSI2.class);", "modifier": "private static final", "type": "Log", "declarator": "LOG = LogFactory.getLog(DatasetImporterForGoMexSI2.class)", "var_name": "LOG"}, {"original_string": "public static final String GOMEXI_SOURCE_DESCRIPTION = \"http://gomexsi.tamucc.edu\";", "modifier": "public static final", "type": "String", "declarator": "GOMEXI_SOURCE_DESCRIPTION = \"http://gomexsi.tamucc.edu\"", "var_name": "GOMEXI_SOURCE_DESCRIPTION"}, {"original_string": "public static final String STOMACH_COUNT_TOTAL = \"stomachCountTotal\";", "modifier": "public static final", "type": "String", "declarator": "STOMACH_COUNT_TOTAL = \"stomachCountTotal\"", "var_name": "STOMACH_COUNT_TOTAL"}, {"original_string": "public static final String STOMACH_COUNT_WITH_FOOD = \"stomachCountWithFood\";", "modifier": "public static final", "type": "String", "declarator": "STOMACH_COUNT_WITH_FOOD = \"stomachCountWithFood\"", "var_name": "STOMACH_COUNT_WITH_FOOD"}, {"original_string": "public static final String STOMACH_COUNT_WITHOUT_FOOD = \"stomachCountWithoutFood\";", "modifier": "public static final", "type": "String", "declarator": "STOMACH_COUNT_WITHOUT_FOOD = \"stomachCountWithoutFood\"", "var_name": "STOMACH_COUNT_WITHOUT_FOOD"}, {"original_string": "public static final String GOMEXSI_NAMESPACE = \"GOMEXSI:\";", "modifier": "public static final", "type": "String", "declarator": "GOMEXSI_NAMESPACE = \"GOMEXSI:\"", "var_name": "GOMEXSI_NAMESPACE"}, {"original_string": "private static final Collection KNOWN_INVALID_DOUBLE_STRINGS = new ArrayList<String>() {{\n        add(\"na\");\n        add(\"> .001\");\n        add(\"tr\");\n        add(\"< 2\");\n        add(\"> .005\");\n        add(\"< .005\");\n        add(\"< 0.0001\");\n        add(\"*\");\n        add(\"< 0.01\");\n        add(\"< 0.05\");\n    }};", "modifier": "private static final", "type": "Collection", "declarator": "KNOWN_INVALID_DOUBLE_STRINGS = new ArrayList<String>() {{\n        add(\"na\");\n        add(\"> .001\");\n        add(\"tr\");\n        add(\"< 2\");\n        add(\"> .005\");\n        add(\"< .005\");\n        add(\"< 0.0001\");\n        add(\"*\");\n        add(\"< 0.01\");\n        add(\"< 0.05\");\n    }}", "var_name": "KNOWN_INVALID_DOUBLE_STRINGS"}, {"original_string": "private static final Collection KNOWN_INVALID_INTEGER_STRINGS = new ArrayList<String>() {{\n        add(\"na\");\n        add(\"numerous\");\n        add(\"a few\");\n        add(\"several\");\n    }};", "modifier": "private static final", "type": "Collection", "declarator": "KNOWN_INVALID_INTEGER_STRINGS = new ArrayList<String>() {{\n        add(\"na\");\n        add(\"numerous\");\n        add(\"a few\");\n        add(\"several\");\n    }}", "var_name": "KNOWN_INVALID_INTEGER_STRINGS"}], "methods": [{"identifier": "DatasetImporterForGoMexSI2", "parameters": "(ParserFactory parserFactory, NodeFactory nodeFactory)", "modifiers": "public", "return": "", "signature": " DatasetImporterForGoMexSI2(ParserFactory parserFactory, NodeFactory nodeFactory)", "full_signature": "public  DatasetImporterForGoMexSI2(ParserFactory parserFactory, NodeFactory nodeFactory)", "class_method_signature": "DatasetImporterForGoMexSI2.DatasetImporterForGoMexSI2(ParserFactory parserFactory, NodeFactory nodeFactory)", "testcase": false, "constructor": true}, {"identifier": "getPreyResourcePath", "parameters": "()", "modifiers": "protected", "return": "URI", "signature": "URI getPreyResourcePath()", "full_signature": "protected URI getPreyResourcePath()", "class_method_signature": "DatasetImporterForGoMexSI2.getPreyResourcePath()", "testcase": false, "constructor": false}, {"identifier": "getResourcePath", "parameters": "(URI resourceName)", "modifiers": "private", "return": "URI", "signature": "URI getResourcePath(URI resourceName)", "full_signature": "private URI getResourcePath(URI resourceName)", "class_method_signature": "DatasetImporterForGoMexSI2.getResourcePath(URI resourceName)", "testcase": false, "constructor": false}, {"identifier": "getPredatorResourcePath", "parameters": "()", "modifiers": "protected", "return": "URI", "signature": "URI getPredatorResourcePath()", "full_signature": "protected URI getPredatorResourcePath()", "class_method_signature": "DatasetImporterForGoMexSI2.getPredatorResourcePath()", "testcase": false, "constructor": false}, {"identifier": "getReferencesResourcePath", "parameters": "()", "modifiers": "protected", "return": "URI", "signature": "URI getReferencesResourcePath()", "full_signature": "protected URI getReferencesResourcePath()", "class_method_signature": "DatasetImporterForGoMexSI2.getReferencesResourcePath()", "testcase": false, "constructor": false}, {"identifier": "getLocationsResourcePath", "parameters": "()", "modifiers": "protected", "return": "URI", "signature": "URI getLocationsResourcePath()", "full_signature": "protected URI getLocationsResourcePath()", "class_method_signature": "DatasetImporterForGoMexSI2.getLocationsResourcePath()", "testcase": false, "constructor": false}, {"identifier": "importStudy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void importStudy()", "full_signature": "@Override public void importStudy()", "class_method_signature": "DatasetImporterForGoMexSI2.importStudy()", "testcase": false, "constructor": false}, {"identifier": "addReferences", "parameters": "(Map<String, Study> referenceIdToStudy)", "modifiers": "protected", "return": "void", "signature": "void addReferences(Map<String, Study> referenceIdToStudy)", "full_signature": "protected void addReferences(Map<String, Study> referenceIdToStudy)", "class_method_signature": "DatasetImporterForGoMexSI2.addReferences(Map<String, Study> referenceIdToStudy)", "testcase": false, "constructor": false}, {"identifier": "collectContributors", "parameters": "(URI referenceResource, LabeledCSVParser parser)", "modifiers": "protected static", "return": "Map<String, String>", "signature": "Map<String, String> collectContributors(URI referenceResource, LabeledCSVParser parser)", "full_signature": "protected static Map<String, String> collectContributors(URI referenceResource, LabeledCSVParser parser)", "class_method_signature": "DatasetImporterForGoMexSI2.collectContributors(URI referenceResource, LabeledCSVParser parser)", "testcase": false, "constructor": false}, {"identifier": "updateContributorList", "parameters": "(String lastName, String firstName, String contributor)", "modifiers": "private static", "return": "String", "signature": "String updateContributorList(String lastName, String firstName, String contributor)", "full_signature": "private static String updateContributorList(String lastName, String firstName, String contributor)", "class_method_signature": "DatasetImporterForGoMexSI2.updateContributorList(String lastName, String firstName, String contributor)", "testcase": false, "constructor": false}, {"identifier": "addNewStudy", "parameters": "(Map<String, Study> referenceIdToStudy, URI referenceResource, LabeledCSVParser parser, String refId, String contributors)", "modifiers": "private", "return": "void", "signature": "void addNewStudy(Map<String, Study> referenceIdToStudy, URI referenceResource, LabeledCSVParser parser, String refId, String contributors)", "full_signature": "private void addNewStudy(Map<String, Study> referenceIdToStudy, URI referenceResource, LabeledCSVParser parser, String refId, String contributors)", "class_method_signature": "DatasetImporterForGoMexSI2.addNewStudy(Map<String, Study> referenceIdToStudy, URI referenceResource, LabeledCSVParser parser, String refId, String contributors)", "testcase": false, "constructor": false}, {"identifier": "addObservations", "parameters": "(Map<String, Map<String, String>> predatorIdToPredatorSpecimen, Map<String, Study> refIdToStudyMap, Map<String, List<Map<String, String>>> predatorUIToPreyLists, Study metaStudy)", "modifiers": "private", "return": "void", "signature": "void addObservations(Map<String, Map<String, String>> predatorIdToPredatorSpecimen, Map<String, Study> refIdToStudyMap, Map<String, List<Map<String, String>>> predatorUIToPreyLists, Study metaStudy)", "full_signature": "private void addObservations(Map<String, Map<String, String>> predatorIdToPredatorSpecimen, Map<String, Study> refIdToStudyMap, Map<String, List<Map<String, String>>> predatorUIToPreyLists, Study metaStudy)", "class_method_signature": "DatasetImporterForGoMexSI2.addObservations(Map<String, Map<String, String>> predatorIdToPredatorSpecimen, Map<String, Study> refIdToStudyMap, Map<String, List<Map<String, String>>> predatorUIToPreyLists, Study metaStudy)", "testcase": false, "constructor": false}, {"identifier": "enrichLocation", "parameters": "(Study metaStudy, URI locationResource, TermLookupService cmecsService, LabeledCSVParser parser, Location location)", "modifiers": "private", "return": "void", "signature": "void enrichLocation(Study metaStudy, URI locationResource, TermLookupService cmecsService, LabeledCSVParser parser, Location location)", "full_signature": "private void enrichLocation(Study metaStudy, URI locationResource, TermLookupService cmecsService, LabeledCSVParser parser, Location location)", "class_method_signature": "DatasetImporterForGoMexSI2.enrichLocation(Study metaStudy, URI locationResource, TermLookupService cmecsService, LabeledCSVParser parser, Location location)", "testcase": false, "constructor": false}, {"identifier": "parseEventDate", "parameters": "(URI locationResource, LabeledCSVParser parser)", "modifiers": "protected static", "return": "DateTime", "signature": "DateTime parseEventDate(URI locationResource, LabeledCSVParser parser)", "full_signature": "protected static DateTime parseEventDate(URI locationResource, LabeledCSVParser parser)", "class_method_signature": "DatasetImporterForGoMexSI2.parseEventDate(URI locationResource, LabeledCSVParser parser)", "testcase": false, "constructor": false}, {"identifier": "parseEventDate", "parameters": "(URI locationResource, LabeledCSVParser parser, String prefix)", "modifiers": "private static", "return": "DateTime", "signature": "DateTime parseEventDate(URI locationResource, LabeledCSVParser parser, String prefix)", "full_signature": "private static DateTime parseEventDate(URI locationResource, LabeledCSVParser parser, String prefix)", "class_method_signature": "DatasetImporterForGoMexSI2.parseEventDate(URI locationResource, LabeledCSVParser parser, String prefix)", "testcase": false, "constructor": false}, {"identifier": "parseLocation", "parameters": "(URI locationResource, LabeledCSVParser parser)", "modifiers": "protected static", "return": "Location", "signature": "Location parseLocation(URI locationResource, LabeledCSVParser parser)", "full_signature": "protected static Location parseLocation(URI locationResource, LabeledCSVParser parser)", "class_method_signature": "DatasetImporterForGoMexSI2.parseLocation(URI locationResource, LabeledCSVParser parser)", "testcase": false, "constructor": false}, {"identifier": "polyCoordsToWKT", "parameters": "(String polyCoords)", "modifiers": "protected static", "return": "String", "signature": "String polyCoordsToWKT(String polyCoords)", "full_signature": "protected static String polyCoordsToWKT(String polyCoords)", "class_method_signature": "DatasetImporterForGoMexSI2.polyCoordsToWKT(String polyCoords)", "testcase": false, "constructor": false}, {"identifier": "enrichLocation", "parameters": "(Study metaStudy, URI locationResource, TermLookupService cmecsService, LabeledCSVParser parser, Location location, String habitatSystem, String habitatSubsystem, String habitatTidalZone)", "modifiers": "private", "return": "Location", "signature": "Location enrichLocation(Study metaStudy, URI locationResource, TermLookupService cmecsService, LabeledCSVParser parser, Location location, String habitatSystem, String habitatSubsystem, String habitatTidalZone)", "full_signature": "private Location enrichLocation(Study metaStudy, URI locationResource, TermLookupService cmecsService, LabeledCSVParser parser, Location location, String habitatSystem, String habitatSubsystem, String habitatTidalZone)", "class_method_signature": "DatasetImporterForGoMexSI2.enrichLocation(Study metaStudy, URI locationResource, TermLookupService cmecsService, LabeledCSVParser parser, Location location, String habitatSystem, String habitatSubsystem, String habitatTidalZone)", "testcase": false, "constructor": false}, {"identifier": "addObservation", "parameters": "(Map<String, List<Map<String, String>>> predatorUIToPreyLists, LabeledCSVParser parser, Study study, Location location, String predatorId, Map<String, String> predatorProperties, DateTime eventDate)", "modifiers": "private", "return": "void", "signature": "void addObservation(Map<String, List<Map<String, String>>> predatorUIToPreyLists, LabeledCSVParser parser, Study study, Location location, String predatorId, Map<String, String> predatorProperties, DateTime eventDate)", "full_signature": "private void addObservation(Map<String, List<Map<String, String>>> predatorUIToPreyLists, LabeledCSVParser parser, Study study, Location location, String predatorId, Map<String, String> predatorProperties, DateTime eventDate)", "class_method_signature": "DatasetImporterForGoMexSI2.addObservation(Map<String, List<Map<String, String>>> predatorUIToPreyLists, LabeledCSVParser parser, Study study, Location location, String predatorId, Map<String, String> predatorProperties, DateTime eventDate)", "testcase": false, "constructor": false}, {"identifier": "checkStomachDataConsistency", "parameters": "(String predatorId, Map<String, String> predatorProperties, List<Map<String, String>> preyList, Study study)", "modifiers": "private", "return": "void", "signature": "void checkStomachDataConsistency(String predatorId, Map<String, String> predatorProperties, List<Map<String, String>> preyList, Study study)", "full_signature": "private void checkStomachDataConsistency(String predatorId, Map<String, String> predatorProperties, List<Map<String, String>> preyList, Study study)", "class_method_signature": "DatasetImporterForGoMexSI2.checkStomachDataConsistency(String predatorId, Map<String, String> predatorProperties, List<Map<String, String>> preyList, Study study)", "testcase": false, "constructor": false}, {"identifier": "integerValueOrNull", "parameters": "(Map<String, String> props, String key)", "modifiers": "private", "return": "Integer", "signature": "Integer integerValueOrNull(Map<String, String> props, String key)", "full_signature": "private Integer integerValueOrNull(Map<String, String> props, String key)", "class_method_signature": "DatasetImporterForGoMexSI2.integerValueOrNull(Map<String, String> props, String key)", "testcase": false, "constructor": false}, {"identifier": "doubleValueOrNull", "parameters": "(Map<String, String> props, String key)", "modifiers": "private", "return": "Double", "signature": "Double doubleValueOrNull(Map<String, String> props, String key)", "full_signature": "private Double doubleValueOrNull(Map<String, String> props, String key)", "class_method_signature": "DatasetImporterForGoMexSI2.doubleValueOrNull(Map<String, String> props, String key)", "testcase": false, "constructor": false}, {"identifier": "errMsg", "parameters": "(Map<String, String> props, String key, String value)", "modifiers": "private", "return": "String", "signature": "String errMsg(Map<String, String> props, String key, String value)", "full_signature": "private String errMsg(Map<String, String> props, String key, String value)", "class_method_signature": "DatasetImporterForGoMexSI2.errMsg(Map<String, String> props, String key, String value)", "testcase": false, "constructor": false}, {"identifier": "createSpecimen", "parameters": "(Study study, Map<String, String> properties)", "modifiers": "private", "return": "Specimen", "signature": "Specimen createSpecimen(Study study, Map<String, String> properties)", "full_signature": "private Specimen createSpecimen(Study study, Map<String, String> properties)", "class_method_signature": "DatasetImporterForGoMexSI2.createSpecimen(Study study, Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "setSpecimenProperty", "parameters": "(Specimen specimen, String name, Map<String, String> properties)", "modifiers": "private", "return": "void", "signature": "void setSpecimenProperty(Specimen specimen, String name, Map<String, String> properties)", "full_signature": "private void setSpecimenProperty(Specimen specimen, String name, Map<String, String> properties)", "class_method_signature": "DatasetImporterForGoMexSI2.setSpecimenProperty(Specimen specimen, String name, Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "addLifeStage", "parameters": "(Map<String, String> properties, Specimen specimen)", "modifiers": "private", "return": "void", "signature": "void addLifeStage(Map<String, String> properties, Specimen specimen)", "full_signature": "private void addLifeStage(Map<String, String> properties, Specimen specimen)", "class_method_signature": "DatasetImporterForGoMexSI2.addLifeStage(Map<String, String> properties, Specimen specimen)", "testcase": false, "constructor": false}, {"identifier": "addPhysiologicalState", "parameters": "(Map<String, String> properties, Specimen specimen)", "modifiers": "private", "return": "void", "signature": "void addPhysiologicalState(Map<String, String> properties, Specimen specimen)", "full_signature": "private void addPhysiologicalState(Map<String, String> properties, Specimen specimen)", "class_method_signature": "DatasetImporterForGoMexSI2.addPhysiologicalState(Map<String, String> properties, Specimen specimen)", "testcase": false, "constructor": false}, {"identifier": "addBodyPart", "parameters": "(Map<String, String> properties, Specimen specimen)", "modifiers": "private", "return": "void", "signature": "void addBodyPart(Map<String, String> properties, Specimen specimen)", "full_signature": "private void addBodyPart(Map<String, String> properties, Specimen specimen)", "class_method_signature": "DatasetImporterForGoMexSI2.addBodyPart(Map<String, String> properties, Specimen specimen)", "testcase": false, "constructor": false}, {"identifier": "getMandatoryDoubleValue", "parameters": "(URI locationResource, LabeledCSVParser parser, String label)", "modifiers": "private static", "return": "Double", "signature": "Double getMandatoryDoubleValue(URI locationResource, LabeledCSVParser parser, String label)", "full_signature": "private static Double getMandatoryDoubleValue(URI locationResource, LabeledCSVParser parser, String label)", "class_method_signature": "DatasetImporterForGoMexSI2.getMandatoryDoubleValue(URI locationResource, LabeledCSVParser parser, String label)", "testcase": false, "constructor": false}, {"identifier": "getMandatoryIntegerValue", "parameters": "(URI locationResource, LabeledCSVParser parser, String label)", "modifiers": "private static", "return": "Integer", "signature": "Integer getMandatoryIntegerValue(URI locationResource, LabeledCSVParser parser, String label)", "full_signature": "private static Integer getMandatoryIntegerValue(URI locationResource, LabeledCSVParser parser, String label)", "class_method_signature": "DatasetImporterForGoMexSI2.getMandatoryIntegerValue(URI locationResource, LabeledCSVParser parser, String label)", "testcase": false, "constructor": false}, {"identifier": "addSpecimen", "parameters": "(URI datafile, String scientificNameLabel, ParseEventHandler specimenListener)", "modifiers": "private", "return": "void", "signature": "void addSpecimen(URI datafile, String scientificNameLabel, ParseEventHandler specimenListener)", "full_signature": "private void addSpecimen(URI datafile, String scientificNameLabel, ParseEventHandler specimenListener)", "class_method_signature": "DatasetImporterForGoMexSI2.addSpecimen(URI datafile, String scientificNameLabel, ParseEventHandler specimenListener)", "testcase": false, "constructor": false}, {"identifier": "parseSpecimen", "parameters": "(URI datafile, String columnNamePrefix, ParseEventHandler specimenListener, LabeledCSVParser parser)", "modifiers": "protected static", "return": "void", "signature": "void parseSpecimen(URI datafile, String columnNamePrefix, ParseEventHandler specimenListener, LabeledCSVParser parser)", "full_signature": "protected static void parseSpecimen(URI datafile, String columnNamePrefix, ParseEventHandler specimenListener, LabeledCSVParser parser)", "class_method_signature": "DatasetImporterForGoMexSI2.parseSpecimen(URI datafile, String columnNamePrefix, ParseEventHandler specimenListener, LabeledCSVParser parser)", "testcase": false, "constructor": false}, {"identifier": "addOptionalProperty", "parameters": "(LabeledCSVParser parser, String label, String normalizedName, Map<String, String> properties)", "modifiers": "private static", "return": "void", "signature": "void addOptionalProperty(LabeledCSVParser parser, String label, String normalizedName, Map<String, String> properties)", "full_signature": "private static void addOptionalProperty(LabeledCSVParser parser, String label, String normalizedName, Map<String, String> properties)", "class_method_signature": "DatasetImporterForGoMexSI2.addOptionalProperty(LabeledCSVParser parser, String label, String normalizedName, Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "getMandatoryValue", "parameters": "(URI datafile, LabeledCSVParser parser, String label)", "modifiers": "private static", "return": "String", "signature": "String getMandatoryValue(URI datafile, LabeledCSVParser parser, String label)", "full_signature": "private static String getMandatoryValue(URI datafile, LabeledCSVParser parser, String label)", "class_method_signature": "DatasetImporterForGoMexSI2.getMandatoryValue(URI datafile, LabeledCSVParser parser, String label)", "testcase": false, "constructor": false}], "file": "eol-globi-data-sources/src/main/java/org/eol/globi/data/DatasetImporterForGoMexSI2.java"}, "focal_method": {"identifier": "parseSpecimen", "parameters": "(URI datafile, String columnNamePrefix, ParseEventHandler specimenListener, LabeledCSVParser parser)", "modifiers": "protected static", "return": "void", "body": "protected static void parseSpecimen(URI datafile, String columnNamePrefix, ParseEventHandler specimenListener, LabeledCSVParser parser) throws IOException, StudyImporterException {\n        while (parser.getLine() != null) {\n            Map<String, String> properties = new HashMap<String, String>();\n            addOptionalProperty(parser, \"TOT_WO_FD\", STOMACH_COUNT_WITHOUT_FOOD, properties);\n            addOptionalProperty(parser, \"TOT_W_FD\", STOMACH_COUNT_WITH_FOOD, properties);\n            addOptionalProperty(parser, \"TOT_PRED_STOM_EXAM\", STOMACH_COUNT_TOTAL, properties);\n            addOptionalProperty(parser, columnNamePrefix + \"MN_LEN\", SpecimenConstant.LENGTH_IN_MM, properties);\n            addOptionalProperty(parser, columnNamePrefix + \"LIFE_HIST_STAGE\", SpecimenConstant.LIFE_STAGE_LABEL, properties);\n            addOptionalProperty(parser, \"PHYSIOLOG_STATE\", SpecimenConstant.PHYSIOLOGICAL_STATE_LABEL, properties);\n            addOptionalProperty(parser, columnNamePrefix + \"PARTS\", SpecimenConstant.BODY_PART_LABEL, properties);\n            addOptionalProperty(parser, \"N_CONS\", SpecimenConstant.TOTAL_COUNT, properties);\n            addOptionalProperty(parser, \"PCT_N_CONS\", SpecimenConstant.TOTAL_COUNT_PERCENT, properties);\n            addOptionalProperty(parser, \"VOL_CONS\", SpecimenConstant.TOTAL_VOLUME_IN_ML, properties);\n            addOptionalProperty(parser, \"PCT_VOL_CONS\", SpecimenConstant.TOTAL_VOLUME_PERCENT, properties);\n            addOptionalProperty(parser, \"FREQ_OCC\", SpecimenConstant.FREQUENCY_OF_OCCURRENCE, properties);\n            addOptionalProperty(parser, \"PCT_FREQ_OCC\", SpecimenConstant.FREQUENCY_OF_OCCURRENCE_PERCENT, properties);\n            String taxonName = getMandatoryValue(datafile, parser, columnNamePrefix + \"DATABASE_NAME\");\n            if (isBlank(taxonName)) {\n                taxonName = getMandatoryValue(datafile, parser, columnNamePrefix + \"SOURCE_NAME\");\n            }\n            properties.put(PropertyAndValueDictionary.NAME, taxonName);\n\n            String refId = getMandatoryValue(datafile, parser, \"DATA_ID\");\n            String specimenId = getMandatoryValue(datafile, parser, \"PRED_ID\");\n            String predatorUID = refId + specimenId;\n\n            // add all original data in GoMexSI namespace\n            String[] labels = parser.getLabels();\n            for (String label : labels) {\n                properties.put(GOMEXSI_NAMESPACE + label, parser.getValueByLabel(label));\n            }\n\n            specimenListener.onSpecimen(predatorUID, properties);\n        }\n    }", "signature": "void parseSpecimen(URI datafile, String columnNamePrefix, ParseEventHandler specimenListener, LabeledCSVParser parser)", "full_signature": "protected static void parseSpecimen(URI datafile, String columnNamePrefix, ParseEventHandler specimenListener, LabeledCSVParser parser)", "class_method_signature": "DatasetImporterForGoMexSI2.parseSpecimen(URI datafile, String columnNamePrefix, ParseEventHandler specimenListener, LabeledCSVParser parser)", "testcase": false, "constructor": false, "invocations": ["getLine", "addOptionalProperty", "addOptionalProperty", "addOptionalProperty", "addOptionalProperty", "addOptionalProperty", "addOptionalProperty", "addOptionalProperty", "addOptionalProperty", "addOptionalProperty", "addOptionalProperty", "addOptionalProperty", "addOptionalProperty", "addOptionalProperty", "getMandatoryValue", "isBlank", "getMandatoryValue", "put", "getMandatoryValue", "getMandatoryValue", "getLabels", "put", "getValueByLabel", "onSpecimen"]}, "repository": {"repo_id": 2478263, "url": "https://github.com/globalbioticinteractions/globalbioticinteractions", "stars": 49, "created": "9/28/2011 9:51:47 PM +00:00", "updates": "2020-01-17T17:47:05+00:00", "fork": "False", "license": "licensed"}}