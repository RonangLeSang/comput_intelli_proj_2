{"test_class": {"identifier": "MasterPmTableHandlerImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MasterPmTableHandlerImplTestDlg dlg = PmInitApi.initPmTree(new MasterPmTableHandlerImplTestDlg());", "modifier": "private", "type": "MasterPmTableHandlerImplTestDlg", "declarator": "dlg = PmInitApi.initPmTree(new MasterPmTableHandlerImplTestDlg())", "var_name": "dlg"}], "file": "pm4j-core/src/test/java/org/pm4j/core/pm/impl/changehandler/MasterPmTableHandlerImplTest.java"}, "test_case": {"identifier": "testAddMasterRowAddDetailsDeleteMasterRow", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testAddMasterRowAddDetailsDeleteMasterRow() {\n    Bean newMasterBean = new Bean(\"M\");\n    dlg.masterTable.getPmPageableBeanCollection().getModificationHandler().addItem(newMasterBean);\n\n    assertColStrings(\"a, b, M\", dlg.masterTable.name);\n    assertColStrings(\"a.1\", dlg.detailsTable.name);\n    assertColStrings(\"a.1.1\", dlg.detailsDetailsTable.name);\n    assertEquals(\"{added: 1, updated: 0, removed: 0}\", dlg.masterTable.getPmPageableBeanCollection().getModifications().toString());\n    assertEquals(\"{}\", dlg.detailsTableHandler.getMasterBeanToDetailsModificationsMap().toString());\n    assertEquals(\"\", dlg.detailsTable.eventCalls.toString());\n\n    dlg.cleanCallCounter();\n    dlg.masterTable.getPmPageableBeanCollection().getSelectionHandler().select(true, newMasterBean);\n    dlg.detailsTable.getPmPageableBeanCollection().getModificationHandler().addItem(new Bean(\"M.1\"));\n    selectDetailsRow(0);\n    dlg.detailsDetailsTable.getPmPageableBeanCollection().getModificationHandler().addItem(new Bean(\"M.1.1\"));\n\n    assertColStrings(\"a, b, M\", dlg.masterTable.name);\n    assertColStrings(\"M.1\", dlg.detailsTable.name);\n    assertColStrings(\"M.1.1\", dlg.detailsDetailsTable.name);\n    assertEquals(\"[[a, M]]\", dlg.detailsTableHandler.detailsCalls.before.toString());\n    assertEquals(\"onPmValueChange=1\", dlg.detailsTable.eventCalls.toString());\n    assertEquals(\"beforeMsChange=1 afterMsChange=1\", dlg.detailsAreaHandler.detailsCalls.toString());\n    assertEquals(\"beforeMsChange=1 afterMsChange=1\", dlg.detailsTableHandler.detailsCalls.toString());\n\n    dlg.cleanCallCounter();\n    dlg.detailsTable.getPmPageableBeanCollection().getModificationHandler().addItem(new Bean(\"D\"));\n\n    assertColStrings(\"a, b, M\", dlg.masterTable.name);\n    assertColStrings(\"M.1, D\", dlg.detailsTable.name);\n    assertColStrings(\"M.1.1\", dlg.detailsDetailsTable.name);\n    assertEquals(\"{added: 1, updated: 0, removed: 0}\", dlg.masterTable.getPmPageableBeanCollection().getModifications().toString());\n    assertEquals(\"{M={added: 2, updated: 0, removed: 0}}\", dlg.detailsTableHandler.getMasterBeanToDetailsModificationsMap().toString());\n    assertEquals(\"onPmValueChange=1\", dlg.detailsTable.eventCalls.toString());\n    assertEquals(\"\", dlg.detailsAreaHandler.detailsCalls.toString());\n    assertEquals(\"\", dlg.detailsTableHandler.detailsCalls.toString());\n    assertEquals(\"[M]\", dlg.masterTable.getPmPageableBeanCollection().getSelection().toString());\n\n    dlg.cleanCallCounter();\n    dlg.masterTable.getPmPageableBeanCollection().getModificationHandler().removeSelectedItems();\n\n    assertColStrings(\"a, b\", dlg.masterTable.name);\n    assertColStrings(\"a.1\", dlg.detailsTable.name);\n    assertColStrings(\"a.1.1\", dlg.detailsDetailsTable.name);\n    assertEquals(\"{}\", dlg.masterTable.getPmPageableBeanCollection().getModifications().toString());\n    assertEquals(\"{}\", dlg.detailsTableHandler.getMasterBeanToDetailsModificationsMap().toString());\n    // TODO 154638: should be [[null, a]]. It's too much noise, but finally somehow ok.\n    assertEquals(\"[[null, null], [null, a]]\", dlg.detailsAreaHandler.detailsCalls.after.toString());\n    assertEquals(\"[[null, a]]\", dlg.detailsTableHandler.detailsCalls.after.toString());\n    assertEquals(\"onPmValueChange=1\", dlg.detailsTable.eventCalls.toString());\n    assertEquals(1, dlg.detailsTable.eventCalls.valueChangeListener.getEventCount());\n    assertEquals(1L, dlg.detailsTable.getTotalNumOfPmRows());\n\n    dlg.cleanCallCounter();\n    selectMasterRow(0);\n    dlg.masterTable.getPmPageableBeanCollection().getModificationHandler().removeSelectedItems();\n\n    assertColStrings(\"b\", dlg.masterTable.name);\n    assertColStrings(\"b.1\", dlg.detailsTable.name);\n    assertColStrings(\"b.1.1\", dlg.detailsDetailsTable.name);\n\n    dlg.cleanCallCounter();\n    selectMasterRow(0);\n    dlg.masterTable.getPmPageableBeanCollection().getModificationHandler().removeSelectedItems();\n\n    assertColStrings(\"\", dlg.masterTable.name);\n    assertColStrings(\"\", dlg.detailsTable.name);\n    assertColStrings(\"\", dlg.detailsDetailsTable.name);\n    assertEquals(0, dlg.masterTable.getTotalNumOfPmRows());\n    assertEquals(\"{}\", dlg.detailsTableHandler.getMasterBeanToDetailsModificationsMap().toString());\n    assertEquals(\"{}\", dlg.detailsDetailsTableHandler.getMasterBeanToDetailsModificationsMap().toString());\n  }", "signature": "void testAddMasterRowAddDetailsDeleteMasterRow()", "full_signature": "@Test public void testAddMasterRowAddDetailsDeleteMasterRow()", "class_method_signature": "MasterPmTableHandlerImplTest.testAddMasterRowAddDetailsDeleteMasterRow()", "testcase": true, "constructor": false, "invocations": ["addItem", "getModificationHandler", "getPmPageableBeanCollection", "assertColStrings", "assertColStrings", "assertColStrings", "assertEquals", "toString", "getModifications", "getPmPageableBeanCollection", "assertEquals", "toString", "getMasterBeanToDetailsModificationsMap", "assertEquals", "toString", "cleanCallCounter", "select", "getSelectionHandler", "getPmPageableBeanCollection", "addItem", "getModificationHandler", "getPmPageableBeanCollection", "selectDetailsRow", "addItem", "getModificationHandler", "getPmPageableBeanCollection", "assertColStrings", "assertColStrings", "assertColStrings", "assertEquals", "toString", "assertEquals", "toString", "assertEquals", "toString", "assertEquals", "toString", "cleanCallCounter", "addItem", "getModificationHandler", "getPmPageableBeanCollection", "assertColStrings", "assertColStrings", "assertColStrings", "assertEquals", "toString", "getModifications", "getPmPageableBeanCollection", "assertEquals", "toString", "getMasterBeanToDetailsModificationsMap", "assertEquals", "toString", "assertEquals", "toString", "assertEquals", "toString", "assertEquals", "toString", "getSelection", "getPmPageableBeanCollection", "cleanCallCounter", "removeSelectedItems", "getModificationHandler", "getPmPageableBeanCollection", "assertColStrings", "assertColStrings", "assertColStrings", "assertEquals", "toString", "getModifications", "getPmPageableBeanCollection", "assertEquals", "toString", "getMasterBeanToDetailsModificationsMap", "assertEquals", "toString", "assertEquals", "toString", "assertEquals", "toString", "assertEquals", "getEventCount", "assertEquals", "getTotalNumOfPmRows", "cleanCallCounter", "selectMasterRow", "removeSelectedItems", "getModificationHandler", "getPmPageableBeanCollection", "assertColStrings", "assertColStrings", "assertColStrings", "cleanCallCounter", "selectMasterRow", "removeSelectedItems", "getModificationHandler", "getPmPageableBeanCollection", "assertColStrings", "assertColStrings", "assertColStrings", "assertEquals", "getTotalNumOfPmRows", "assertEquals", "toString", "getMasterBeanToDetailsModificationsMap", "assertEquals", "toString", "getMasterBeanToDetailsModificationsMap"]}, "focal_class": {"identifier": "MasterPmTableHandlerImpl", "superclass": "extends MasterPmHandlerImpl<T_MASTER_BEAN>", "interfaces": "", "fields": [], "methods": [{"identifier": "MasterPmTableHandlerImpl", "parameters": "(PmTableImpl<?, T_MASTER_BEAN> masterPm, DetailsPmHandler... detailsHandlers)", "modifiers": "public", "return": "", "signature": " MasterPmTableHandlerImpl(PmTableImpl<?, T_MASTER_BEAN> masterPm, DetailsPmHandler... detailsHandlers)", "full_signature": "public  MasterPmTableHandlerImpl(PmTableImpl<?, T_MASTER_BEAN> masterPm, DetailsPmHandler... detailsHandlers)", "class_method_signature": "MasterPmTableHandlerImpl.MasterPmTableHandlerImpl(PmTableImpl<?, T_MASTER_BEAN> masterPm, DetailsPmHandler... detailsHandlers)", "testcase": false, "constructor": true}, {"identifier": "getModificationHandler", "parameters": "()", "modifiers": "@Override protected", "return": "ModificationHandler<T_MASTER_BEAN>", "signature": "ModificationHandler<T_MASTER_BEAN> getModificationHandler()", "full_signature": "@Override protected ModificationHandler<T_MASTER_BEAN> getModificationHandler()", "class_method_signature": "MasterPmTableHandlerImpl.getModificationHandler()", "testcase": false, "constructor": false}, {"identifier": "startObservers", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void startObservers()", "full_signature": "@Override public void startObservers()", "class_method_signature": "MasterPmTableHandlerImpl.startObservers()", "testcase": false, "constructor": false}, {"identifier": "getSelectedMasterBean", "parameters": "()", "modifiers": "@Override protected", "return": "T_MASTER_BEAN", "signature": "T_MASTER_BEAN getSelectedMasterBean()", "full_signature": "@Override protected T_MASTER_BEAN getSelectedMasterBean()", "class_method_signature": "MasterPmTableHandlerImpl.getSelectedMasterBean()", "testcase": false, "constructor": false}, {"identifier": "getMasterTablePm", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") protected", "return": "PmTableImpl<?, T_MASTER_BEAN>", "signature": "PmTableImpl<?, T_MASTER_BEAN> getMasterTablePm()", "full_signature": "@SuppressWarnings(\"unchecked\") protected PmTableImpl<?, T_MASTER_BEAN> getMasterTablePm()", "class_method_signature": "MasterPmTableHandlerImpl.getMasterTablePm()", "testcase": false, "constructor": false}], "file": "pm4j-core/src/main/java/org/pm4j/core/pm/impl/changehandler/MasterPmTableHandlerImpl.java"}, "focal_method": {"identifier": "getModificationHandler", "parameters": "()", "modifiers": "@Override protected", "return": "ModificationHandler<T_MASTER_BEAN>", "body": "@Override\n  protected ModificationHandler<T_MASTER_BEAN> getModificationHandler() {\n    return getMasterTablePm().getPmPageableBeanCollection().getModificationHandler();\n  }", "signature": "ModificationHandler<T_MASTER_BEAN> getModificationHandler()", "full_signature": "@Override protected ModificationHandler<T_MASTER_BEAN> getModificationHandler()", "class_method_signature": "MasterPmTableHandlerImpl.getModificationHandler()", "testcase": false, "constructor": false, "invocations": ["getModificationHandler", "getPmPageableBeanCollection", "getMasterTablePm"]}, "repository": {"repo_id": 3130403, "url": "https://github.com/pm4j/org.pm4j", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 8, "size": 16886, "license": "licensed"}}