{"test_class": {"identifier": "PageableCollectionTestBase", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected PageableCollection<T> collection;", "modifier": "protected", "type": "PageableCollection<T>", "declarator": "collection", "var_name": "collection"}, {"original_string": "protected SortOrder nameSortOrder;", "modifier": "protected", "type": "SortOrder", "declarator": "nameSortOrder", "var_name": "nameSortOrder"}, {"original_string": "protected TestPropertyChangeListener pclAdd;", "modifier": "protected", "type": "TestPropertyChangeListener", "declarator": "pclAdd", "var_name": "pclAdd"}, {"original_string": "protected TestPropertyChangeListener pclUpdate;", "modifier": "protected", "type": "TestPropertyChangeListener", "declarator": "pclUpdate", "var_name": "pclUpdate"}, {"original_string": "protected TestPropertyChangeListener pclRemove;", "modifier": "protected", "type": "TestPropertyChangeListener", "declarator": "pclRemove", "var_name": "pclRemove"}, {"original_string": "protected TestPropertyChangeListener pclPageSize;", "modifier": "protected", "type": "TestPropertyChangeListener", "declarator": "pclPageSize", "var_name": "pclPageSize"}, {"original_string": "protected TestPropertyChangeListener pclPageIdx;", "modifier": "protected", "type": "TestPropertyChangeListener", "declarator": "pclPageIdx", "var_name": "pclPageIdx"}, {"original_string": "protected TestPropertyChangeListener pclSelChange;", "modifier": "protected", "type": "TestPropertyChangeListener", "declarator": "pclSelChange", "var_name": "pclSelChange"}], "file": "pm4j-common/src/test/java/org/pm4j/common/pageable/PageableCollectionTestBase.java"}, "test_case": {"identifier": "testIterateAllSelectionMinusOneWithBlockSize2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testIterateAllSelectionMinusOneWithBlockSize2() {\n    collection.getSelectionHandler().setSelectMode(SelectMode.MULTI);\n    collection.getSelectionHandler().selectAll(true);\n    collection.getSelectionHandler().select(false, collection.getItemsOnPage().get(1));\n    Selection<T> selection = collection.getSelection();\n    selection.setIteratorBlockSizeHint(2);\n    resetCallCounter();\n    assertEquals(\"All items minus one selection iteration result\", \"[a, c, d, e, f]\", IterableUtil.shallowCopy(selection).toString());\n  }", "signature": "void testIterateAllSelectionMinusOneWithBlockSize2()", "full_signature": "@Test public void testIterateAllSelectionMinusOneWithBlockSize2()", "class_method_signature": "PageableCollectionTestBase.testIterateAllSelectionMinusOneWithBlockSize2()", "testcase": true, "constructor": false, "invocations": ["setSelectMode", "getSelectionHandler", "selectAll", "getSelectionHandler", "select", "getSelectionHandler", "get", "getItemsOnPage", "getSelection", "setIteratorBlockSizeHint", "resetCallCounter", "assertEquals", "toString", "shallowCopy"]}, "focal_class": {"identifier": "PageableCollectionBase", "superclass": "extends PropertyChangeSupportedBase", "interfaces": "implements PageableCollection<T_ITEM>", "fields": [{"original_string": "private int                pageSize = 10;", "modifier": "private", "type": "int", "declarator": "pageSize = 10", "var_name": "pageSize"}, {"original_string": "private long               pageIdx;", "modifier": "private", "type": "long", "declarator": "pageIdx", "var_name": "pageIdx"}, {"original_string": "private final QueryParams  queryParams;", "modifier": "private final", "type": "QueryParams", "declarator": "queryParams", "var_name": "queryParams"}, {"original_string": "private final QueryOptions queryOptions;", "modifier": "private final", "type": "QueryOptions", "declarator": "queryOptions", "var_name": "queryOptions"}], "methods": [{"identifier": "PageableCollectionBase", "parameters": "(QueryOptions queryOptions)", "modifiers": "public", "return": "", "signature": " PageableCollectionBase(QueryOptions queryOptions)", "full_signature": "public  PageableCollectionBase(QueryOptions queryOptions)", "class_method_signature": "PageableCollectionBase.PageableCollectionBase(QueryOptions queryOptions)", "testcase": false, "constructor": true}, {"identifier": "getQueryParams", "parameters": "()", "modifiers": "@Override public final", "return": "QueryParams", "signature": "QueryParams getQueryParams()", "full_signature": "@Override public final QueryParams getQueryParams()", "class_method_signature": "PageableCollectionBase.getQueryParams()", "testcase": false, "constructor": false}, {"identifier": "getQueryOptions", "parameters": "()", "modifiers": "@Override public", "return": "QueryOptions", "signature": "QueryOptions getQueryOptions()", "full_signature": "@Override public QueryOptions getQueryOptions()", "class_method_signature": "PageableCollectionBase.getQueryOptions()", "testcase": false, "constructor": false}, {"identifier": "getPageSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getPageSize()", "full_signature": "@Override public int getPageSize()", "class_method_signature": "PageableCollectionBase.getPageSize()", "testcase": false, "constructor": false}, {"identifier": "setPageSize", "parameters": "(int newSize)", "modifiers": "@Override public", "return": "void", "signature": "void setPageSize(int newSize)", "full_signature": "@Override public void setPageSize(int newSize)", "class_method_signature": "PageableCollectionBase.setPageSize(int newSize)", "testcase": false, "constructor": false}, {"identifier": "getPageIdx", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getPageIdx()", "full_signature": "@Override public long getPageIdx()", "class_method_signature": "PageableCollectionBase.getPageIdx()", "testcase": false, "constructor": false}, {"identifier": "setPageIdx", "parameters": "(long pageIdx)", "modifiers": "@Override public", "return": "void", "signature": "void setPageIdx(long pageIdx)", "full_signature": "@Override public void setPageIdx(long pageIdx)", "class_method_signature": "PageableCollectionBase.setPageIdx(long pageIdx)", "testcase": false, "constructor": false}, {"identifier": "getSelection", "parameters": "()", "modifiers": "@Override public", "return": "Selection<T_ITEM>", "signature": "Selection<T_ITEM> getSelection()", "full_signature": "@Override public Selection<T_ITEM> getSelection()", "class_method_signature": "PageableCollectionBase.getSelection()", "testcase": false, "constructor": false}, {"identifier": "getModifications", "parameters": "()", "modifiers": "@Override public", "return": "Modifications<T_ITEM>", "signature": "Modifications<T_ITEM> getModifications()", "full_signature": "@Override public Modifications<T_ITEM> getModifications()", "class_method_signature": "PageableCollectionBase.getModifications()", "testcase": false, "constructor": false}], "file": "pm4j-common/src/main/java/org/pm4j/common/pageable/PageableCollectionBase.java"}, "focal_method": {"identifier": "getSelection", "parameters": "()", "modifiers": "@Override public", "return": "Selection<T_ITEM>", "body": "@Override\n  public Selection<T_ITEM> getSelection() {\n    return getSelectionHandler().getSelection();\n  }", "signature": "Selection<T_ITEM> getSelection()", "full_signature": "@Override public Selection<T_ITEM> getSelection()", "class_method_signature": "PageableCollectionBase.getSelection()", "testcase": false, "constructor": false, "invocations": ["getSelection", "getSelectionHandler"]}, "repository": {"repo_id": 3130403, "url": "https://github.com/pm4j/org.pm4j", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 8, "size": 16886, "license": "licensed"}}