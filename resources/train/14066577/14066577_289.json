{"test_class": {"identifier": "TextInputBindingAdapterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TextInputBindingAdapter adapter = new TextInputBindingAdapter();", "modifier": "private", "type": "TextInputBindingAdapter", "declarator": "adapter = new TextInputBindingAdapter()", "var_name": "adapter"}], "file": "subprojects/griffon-pivot/src/test/java/griffon/pivot/support/adapters/TextInputBindingAdapterTest.java"}, "test_case": {"identifier": "testTextBindMappingChanged", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTextBindMappingChanged() {\n        final boolean[] invoked = new boolean[1];\n        CallableWithArgs<Void> callable = new CallableWithArgs<Void>() {\n            public Void call(Object... args) {\n                invoked[0] = true;\n                return null;\n            } \n        };\n\n        assertNull(adapter.getTextBindMappingChanged());\n        adapter.textBindMappingChanged(null, null);\n        assertFalse(invoked[0]);\n\n        adapter.setTextBindMappingChanged(callable);\n        adapter.textBindMappingChanged(null, null);\n        assertTrue(invoked[0]);\n    }", "signature": "void testTextBindMappingChanged()", "full_signature": "@Test public void testTextBindMappingChanged()", "class_method_signature": "TextInputBindingAdapterTest.testTextBindMappingChanged()", "testcase": true, "constructor": false, "invocations": ["assertNull", "getTextBindMappingChanged", "textBindMappingChanged", "assertFalse", "setTextBindMappingChanged", "textBindMappingChanged", "assertTrue"]}, "focal_class": {"identifier": "TextInputBindingAdapter", "superclass": "", "interfaces": "implements GriffonPivotAdapter, org.apache.pivot.wtk.TextInputBindingListener", "fields": [{"original_string": "private CallableWithArgs<Void> textKeyChanged;", "modifier": "private", "type": "CallableWithArgs<Void>", "declarator": "textKeyChanged", "var_name": "textKeyChanged"}, {"original_string": "private CallableWithArgs<Void> textBindTypeChanged;", "modifier": "private", "type": "CallableWithArgs<Void>", "declarator": "textBindTypeChanged", "var_name": "textBindTypeChanged"}, {"original_string": "private CallableWithArgs<Void> textBindMappingChanged;", "modifier": "private", "type": "CallableWithArgs<Void>", "declarator": "textBindMappingChanged", "var_name": "textBindMappingChanged"}], "methods": [{"identifier": "getTextKeyChanged", "parameters": "()", "modifiers": "public", "return": "CallableWithArgs<Void>", "signature": "CallableWithArgs<Void> getTextKeyChanged()", "full_signature": "public CallableWithArgs<Void> getTextKeyChanged()", "class_method_signature": "TextInputBindingAdapter.getTextKeyChanged()", "testcase": false, "constructor": false}, {"identifier": "getTextBindTypeChanged", "parameters": "()", "modifiers": "public", "return": "CallableWithArgs<Void>", "signature": "CallableWithArgs<Void> getTextBindTypeChanged()", "full_signature": "public CallableWithArgs<Void> getTextBindTypeChanged()", "class_method_signature": "TextInputBindingAdapter.getTextBindTypeChanged()", "testcase": false, "constructor": false}, {"identifier": "getTextBindMappingChanged", "parameters": "()", "modifiers": "public", "return": "CallableWithArgs<Void>", "signature": "CallableWithArgs<Void> getTextBindMappingChanged()", "full_signature": "public CallableWithArgs<Void> getTextBindMappingChanged()", "class_method_signature": "TextInputBindingAdapter.getTextBindMappingChanged()", "testcase": false, "constructor": false}, {"identifier": "setTextKeyChanged", "parameters": "(CallableWithArgs<Void> textKeyChanged)", "modifiers": "public", "return": "void", "signature": "void setTextKeyChanged(CallableWithArgs<Void> textKeyChanged)", "full_signature": "public void setTextKeyChanged(CallableWithArgs<Void> textKeyChanged)", "class_method_signature": "TextInputBindingAdapter.setTextKeyChanged(CallableWithArgs<Void> textKeyChanged)", "testcase": false, "constructor": false}, {"identifier": "setTextBindTypeChanged", "parameters": "(CallableWithArgs<Void> textBindTypeChanged)", "modifiers": "public", "return": "void", "signature": "void setTextBindTypeChanged(CallableWithArgs<Void> textBindTypeChanged)", "full_signature": "public void setTextBindTypeChanged(CallableWithArgs<Void> textBindTypeChanged)", "class_method_signature": "TextInputBindingAdapter.setTextBindTypeChanged(CallableWithArgs<Void> textBindTypeChanged)", "testcase": false, "constructor": false}, {"identifier": "setTextBindMappingChanged", "parameters": "(CallableWithArgs<Void> textBindMappingChanged)", "modifiers": "public", "return": "void", "signature": "void setTextBindMappingChanged(CallableWithArgs<Void> textBindMappingChanged)", "full_signature": "public void setTextBindMappingChanged(CallableWithArgs<Void> textBindMappingChanged)", "class_method_signature": "TextInputBindingAdapter.setTextBindMappingChanged(CallableWithArgs<Void> textBindMappingChanged)", "testcase": false, "constructor": false}, {"identifier": "textKeyChanged", "parameters": "(org.apache.pivot.wtk.TextInput arg0, java.lang.String arg1)", "modifiers": "public", "return": "void", "signature": "void textKeyChanged(org.apache.pivot.wtk.TextInput arg0, java.lang.String arg1)", "full_signature": "public void textKeyChanged(org.apache.pivot.wtk.TextInput arg0, java.lang.String arg1)", "class_method_signature": "TextInputBindingAdapter.textKeyChanged(org.apache.pivot.wtk.TextInput arg0, java.lang.String arg1)", "testcase": false, "constructor": false}, {"identifier": "textBindTypeChanged", "parameters": "(org.apache.pivot.wtk.TextInput arg0, org.apache.pivot.wtk.BindType arg1)", "modifiers": "public", "return": "void", "signature": "void textBindTypeChanged(org.apache.pivot.wtk.TextInput arg0, org.apache.pivot.wtk.BindType arg1)", "full_signature": "public void textBindTypeChanged(org.apache.pivot.wtk.TextInput arg0, org.apache.pivot.wtk.BindType arg1)", "class_method_signature": "TextInputBindingAdapter.textBindTypeChanged(org.apache.pivot.wtk.TextInput arg0, org.apache.pivot.wtk.BindType arg1)", "testcase": false, "constructor": false}, {"identifier": "textBindMappingChanged", "parameters": "(org.apache.pivot.wtk.TextInput arg0, org.apache.pivot.wtk.TextInput.TextBindMapping arg1)", "modifiers": "public", "return": "void", "signature": "void textBindMappingChanged(org.apache.pivot.wtk.TextInput arg0, org.apache.pivot.wtk.TextInput.TextBindMapping arg1)", "full_signature": "public void textBindMappingChanged(org.apache.pivot.wtk.TextInput arg0, org.apache.pivot.wtk.TextInput.TextBindMapping arg1)", "class_method_signature": "TextInputBindingAdapter.textBindMappingChanged(org.apache.pivot.wtk.TextInput arg0, org.apache.pivot.wtk.TextInput.TextBindMapping arg1)", "testcase": false, "constructor": false}], "file": "subprojects/griffon-pivot/src/main/java/griffon/pivot/support/adapters/TextInputBindingAdapter.java"}, "focal_method": {"identifier": "textBindMappingChanged", "parameters": "(org.apache.pivot.wtk.TextInput arg0, org.apache.pivot.wtk.TextInput.TextBindMapping arg1)", "modifiers": "public", "return": "void", "body": "public void textBindMappingChanged(org.apache.pivot.wtk.TextInput arg0, org.apache.pivot.wtk.TextInput.TextBindMapping arg1) {\n        if (textBindMappingChanged != null) {\n            textBindMappingChanged.call(arg0, arg1);\n        }\n    }", "signature": "void textBindMappingChanged(org.apache.pivot.wtk.TextInput arg0, org.apache.pivot.wtk.TextInput.TextBindMapping arg1)", "full_signature": "public void textBindMappingChanged(org.apache.pivot.wtk.TextInput arg0, org.apache.pivot.wtk.TextInput.TextBindMapping arg1)", "class_method_signature": "TextInputBindingAdapter.textBindMappingChanged(org.apache.pivot.wtk.TextInput arg0, org.apache.pivot.wtk.TextInput.TextBindMapping arg1)", "testcase": false, "constructor": false, "invocations": ["call"]}, "repository": {"repo_id": 14066577, "url": "https://github.com/aalmiray/griffon2", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 32954, "license": "licensed"}}