{"test_class": {"identifier": "SpellTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int REQUIRED_MANA = 10;", "modifier": "private static final", "type": "int", "declarator": "REQUIRED_MANA = 10", "var_name": "REQUIRED_MANA"}, {"original_string": "private static final int REQUIRED_STAFF_POWER = 10;", "modifier": "private static final", "type": "int", "declarator": "REQUIRED_STAFF_POWER = 10", "var_name": "REQUIRED_STAFF_POWER"}, {"original_string": "private static final int REQUIRED_SKILL = 10;", "modifier": "private static final", "type": "int", "declarator": "REQUIRED_SKILL = 10", "var_name": "REQUIRED_SKILL"}, {"original_string": "private static final String SPELL_NAME = \"Poison\";", "modifier": "private static final", "type": "String", "declarator": "SPELL_NAME = \"Poison\"", "var_name": "SPELL_NAME"}, {"original_string": "private static final String SPELL_DESCRIPTION = \"This spell poisons the target character\";", "modifier": "private static final", "type": "String", "declarator": "SPELL_DESCRIPTION = \"This spell poisons the target character\"", "var_name": "SPELL_DESCRIPTION"}, {"original_string": "private static final boolean IS_NEGATIVE = true;", "modifier": "private static final", "type": "boolean", "declarator": "IS_NEGATIVE = true", "var_name": "IS_NEGATIVE"}, {"original_string": "private static final int SPELL_FX = 1;", "modifier": "private static final", "type": "int", "declarator": "SPELL_FX = 1", "var_name": "SPELL_FX"}, {"original_string": "private static final int SPELL_SOUND = 2;", "modifier": "private static final", "type": "int", "declarator": "SPELL_SOUND = 2", "var_name": "SPELL_SOUND"}, {"original_string": "private static final String SPELL_MAGIC_WORDS = \"magic words for poison spell\";", "modifier": "private static final", "type": "String", "declarator": "SPELL_MAGIC_WORDS = \"magic words for poison spell\"", "var_name": "SPELL_MAGIC_WORDS"}, {"original_string": "private Spell spellNoStaff;", "modifier": "private", "type": "Spell", "declarator": "spellNoStaff", "var_name": "spellNoStaff"}, {"original_string": "private Spell spellWithStaff;", "modifier": "private", "type": "Spell", "declarator": "spellWithStaff", "var_name": "spellWithStaff"}, {"original_string": "private Spell spellNoStaffObject;", "modifier": "private", "type": "Spell", "declarator": "spellNoStaffObject", "var_name": "spellNoStaffObject"}], "file": "aoxp-server/src/test/java/com/ao/model/spell/SpellTest.java"}, "test_case": {"identifier": "testGetRequiredMana", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetRequiredMana() {\n\t\tassertEquals(REQUIRED_MANA, spellNoStaff.getRequiredMana());\n\t\tassertEquals(REQUIRED_MANA, spellWithStaff.getRequiredMana());\n\t\tassertEquals(REQUIRED_MANA, spellNoStaffObject.getRequiredMana());\n\t}", "signature": "void testGetRequiredMana()", "full_signature": "@Test public void testGetRequiredMana()", "class_method_signature": "SpellTest.testGetRequiredMana()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getRequiredMana", "assertEquals", "getRequiredMana", "assertEquals", "getRequiredMana"]}, "focal_class": {"identifier": "Spell", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected int id;", "modifier": "protected", "type": "int", "declarator": "id", "var_name": "id"}, {"original_string": "protected Effect[] effects;", "modifier": "protected", "type": "Effect[]", "declarator": "effects", "var_name": "effects"}, {"original_string": "private int requiredStaffPower;", "modifier": "private", "type": "int", "declarator": "requiredStaffPower", "var_name": "requiredStaffPower"}, {"original_string": "private int requiredSkill;", "modifier": "private", "type": "int", "declarator": "requiredSkill", "var_name": "requiredSkill"}, {"original_string": "private int requiredMana;", "modifier": "private", "type": "int", "declarator": "requiredMana", "var_name": "requiredMana"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private String description;", "modifier": "private", "type": "String", "declarator": "description", "var_name": "description"}, {"original_string": "private boolean negative;", "modifier": "private", "type": "boolean", "declarator": "negative", "var_name": "negative"}, {"original_string": "private int fx;", "modifier": "private", "type": "int", "declarator": "fx", "var_name": "fx"}, {"original_string": "private int sound;", "modifier": "private", "type": "int", "declarator": "sound", "var_name": "sound"}, {"original_string": "private String magicWords;", "modifier": "private", "type": "String", "declarator": "magicWords", "var_name": "magicWords"}], "methods": [{"identifier": "Spell", "parameters": "(int id, Effect[] effects, int requiredStaffPower, int requiredSkill,\n\t\t\tint requiredMana, String name, String description, boolean negative,\n\t\t\tint fx, int sound, String magicWords)", "modifiers": "public", "return": "", "signature": " Spell(int id, Effect[] effects, int requiredStaffPower, int requiredSkill,\n\t\t\tint requiredMana, String name, String description, boolean negative,\n\t\t\tint fx, int sound, String magicWords)", "full_signature": "public  Spell(int id, Effect[] effects, int requiredStaffPower, int requiredSkill,\n\t\t\tint requiredMana, String name, String description, boolean negative,\n\t\t\tint fx, int sound, String magicWords)", "class_method_signature": "Spell.Spell(int id, Effect[] effects, int requiredStaffPower, int requiredSkill,\n\t\t\tint requiredMana, String name, String description, boolean negative,\n\t\t\tint fx, int sound, String magicWords)", "testcase": false, "constructor": true}, {"identifier": "requiresStaff", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean requiresStaff()", "full_signature": "public boolean requiresStaff()", "class_method_signature": "Spell.requiresStaff()", "testcase": false, "constructor": false}, {"identifier": "getRequiredStaffPower", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRequiredStaffPower()", "full_signature": "public int getRequiredStaffPower()", "class_method_signature": "Spell.getRequiredStaffPower()", "testcase": false, "constructor": false}, {"identifier": "getRequiredMana", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRequiredMana()", "full_signature": "public int getRequiredMana()", "class_method_signature": "Spell.getRequiredMana()", "testcase": false, "constructor": false}, {"identifier": "getRequiredSkill", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRequiredSkill()", "full_signature": "public int getRequiredSkill()", "class_method_signature": "Spell.getRequiredSkill()", "testcase": false, "constructor": false}, {"identifier": "appliesTo", "parameters": "(Character caster, Character target)", "modifiers": "public", "return": "boolean", "signature": "boolean appliesTo(Character caster, Character target)", "full_signature": "public boolean appliesTo(Character caster, Character target)", "class_method_signature": "Spell.appliesTo(Character caster, Character target)", "testcase": false, "constructor": false}, {"identifier": "appliesTo", "parameters": "(Character caster, WorldObject target)", "modifiers": "public", "return": "boolean", "signature": "boolean appliesTo(Character caster, WorldObject target)", "full_signature": "public boolean appliesTo(Character caster, WorldObject target)", "class_method_signature": "Spell.appliesTo(Character caster, WorldObject target)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(Character caster, Character target)", "modifiers": "public", "return": "void", "signature": "void apply(Character caster, Character target)", "full_signature": "public void apply(Character caster, Character target)", "class_method_signature": "Spell.apply(Character caster, Character target)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(Character caster, WorldObject target)", "modifiers": "public", "return": "void", "signature": "void apply(Character caster, WorldObject target)", "full_signature": "public void apply(Character caster, WorldObject target)", "class_method_signature": "Spell.apply(Character caster, WorldObject target)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "Spell.getName()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDescription()", "full_signature": "public String getDescription()", "class_method_signature": "Spell.getDescription()", "testcase": false, "constructor": false}, {"identifier": "isNegative", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isNegative()", "full_signature": "public boolean isNegative()", "class_method_signature": "Spell.isNegative()", "testcase": false, "constructor": false}, {"identifier": "getFX", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getFX()", "full_signature": "public int getFX()", "class_method_signature": "Spell.getFX()", "testcase": false, "constructor": false}, {"identifier": "getSound", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSound()", "full_signature": "public int getSound()", "class_method_signature": "Spell.getSound()", "testcase": false, "constructor": false}, {"identifier": "getMagicWords", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMagicWords()", "full_signature": "public String getMagicWords()", "class_method_signature": "Spell.getMagicWords()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getId()", "full_signature": "public int getId()", "class_method_signature": "Spell.getId()", "testcase": false, "constructor": false}], "file": "aoxp-server/src/main/java/com/ao/model/spell/Spell.java"}, "focal_method": {"identifier": "getRequiredMana", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int getRequiredMana() {\n\t\treturn requiredMana;\n\t}", "signature": "int getRequiredMana()", "full_signature": "public int getRequiredMana()", "class_method_signature": "Spell.getRequiredMana()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2791813, "url": "https://github.com/aoxp/AOXP-Server", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 9, "size": 6674, "license": "licensed"}}