{"test_class": {"identifier": "ParalysisEffectTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Effect paralysisEffect;", "modifier": "private", "type": "Effect", "declarator": "paralysisEffect", "var_name": "paralysisEffect"}], "file": "aoxp-server/src/test/java/com/ao/model/spell/effect/ParalysisEffectTest.java"}, "test_case": {"identifier": "testApplyCharacterWorldObject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testApplyCharacterWorldObject() {\n\t\tfinal WorldObject obj = mock(WorldObject.class);\n\t\tfinal Character caster = mock(Character.class);\n\n\t\t// Should do nothing....\n\t\ttry {\n\t\t\tparalysisEffect.apply(caster, obj);\n\t\t\tfail(\"Applying an effect for characters to a world object didn't fail.\");\n\t\t} catch (final InvalidTargetException e) {\n\t\t\t// this is ok\n\t\t}\n\t}", "signature": "void testApplyCharacterWorldObject()", "full_signature": "@Test public void testApplyCharacterWorldObject()", "class_method_signature": "ParalysisEffectTest.testApplyCharacterWorldObject()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "apply", "fail"]}, "focal_class": {"identifier": "ParalysisEffect", "superclass": "", "interfaces": "implements Effect", "fields": [], "methods": [{"identifier": "apply", "parameters": "(Character caster, Character target)", "modifiers": "@Override public", "return": "void", "signature": "void apply(Character caster, Character target)", "full_signature": "@Override public void apply(Character caster, Character target)", "class_method_signature": "ParalysisEffect.apply(Character caster, Character target)", "testcase": false, "constructor": false}, {"identifier": "appliesTo", "parameters": "(Character caster, Character target)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean appliesTo(Character caster, Character target)", "full_signature": "@Override public boolean appliesTo(Character caster, Character target)", "class_method_signature": "ParalysisEffect.appliesTo(Character caster, Character target)", "testcase": false, "constructor": false}, {"identifier": "appliesTo", "parameters": "(Character caster, WorldObject worldobject)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean appliesTo(Character caster, WorldObject worldobject)", "full_signature": "@Override public boolean appliesTo(Character caster, WorldObject worldobject)", "class_method_signature": "ParalysisEffect.appliesTo(Character caster, WorldObject worldobject)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(Character caster, WorldObject target)", "modifiers": "@Override public", "return": "void", "signature": "void apply(Character caster, WorldObject target)", "full_signature": "@Override public void apply(Character caster, WorldObject target)", "class_method_signature": "ParalysisEffect.apply(Character caster, WorldObject target)", "testcase": false, "constructor": false}], "file": "aoxp-server/src/main/java/com/ao/model/spell/effect/ParalysisEffect.java"}, "focal_method": {"identifier": "apply", "parameters": "(Character caster, Character target)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void apply(Character caster, Character target) {\n\t\ttarget.setParalyzed(true);\n\t}", "signature": "void apply(Character caster, Character target)", "full_signature": "@Override public void apply(Character caster, Character target)", "class_method_signature": "ParalysisEffect.apply(Character caster, Character target)", "testcase": false, "constructor": false, "invocations": ["setParalyzed"]}, "repository": {"repo_id": 2791813, "url": "https://github.com/aoxp/AOXP-Server", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 9, "size": 6674, "license": "licensed"}}