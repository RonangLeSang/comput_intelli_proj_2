{"test_class": {"identifier": "MineralTest", "superclass": "extends AbstractItemTest", "interfaces": "", "fields": [{"original_string": "private Mineral mineral1;", "modifier": "private", "type": "Mineral", "declarator": "mineral1", "var_name": "mineral1"}, {"original_string": "private Mineral mineral2;", "modifier": "private", "type": "Mineral", "declarator": "mineral2", "var_name": "mineral2"}], "file": "aoxp-server/src/test/java/com/ao/model/worldobject/MineralTest.java"}, "test_case": {"identifier": "testClone", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testClone() {\n\t\tfinal Mineral clone = (Mineral) mineral1.clone();\n\n\t\t// Make sure all fields match\n\t\tassertEquals(mineral1.amount, clone.amount);\n\t\tassertEquals(mineral1.properties, clone.properties);\n\n\t\t// Make sure the object itself is different\n\t\tassertNotSame(mineral1, clone);\n\n\n\t\tfinal Mineral clone2 = (Mineral) mineral2.clone();\n\n\t\t// Make sure all fields match\n\t\tassertEquals(mineral2.amount, clone2.amount);\n\t\tassertEquals(mineral2.properties, clone2.properties);\n\n\t\t// Make sure the object itself is different\n\t\tassertNotSame(mineral2, clone2);\n\t}", "signature": "void testClone()", "full_signature": "@Test public void testClone()", "class_method_signature": "MineralTest.testClone()", "testcase": true, "constructor": false, "invocations": ["clone", "assertEquals", "assertEquals", "assertNotSame", "clone", "assertEquals", "assertEquals", "assertNotSame"]}, "focal_class": {"identifier": "Mineral", "superclass": "extends AbstractItem", "interfaces": "", "fields": [], "methods": [{"identifier": "Mineral", "parameters": "(ItemProperties properties, int amount)", "modifiers": "public", "return": "", "signature": " Mineral(ItemProperties properties, int amount)", "full_signature": "public  Mineral(ItemProperties properties, int amount)", "class_method_signature": "Mineral.Mineral(ItemProperties properties, int amount)", "testcase": false, "constructor": true}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Item", "signature": "Item clone()", "full_signature": "@Override public Item clone()", "class_method_signature": "Mineral.clone()", "testcase": false, "constructor": false}, {"identifier": "use", "parameters": "(Character character)", "modifiers": "@Override public", "return": "void", "signature": "void use(Character character)", "full_signature": "@Override public void use(Character character)", "class_method_signature": "Mineral.use(Character character)", "testcase": false, "constructor": false}], "file": "aoxp-server/src/main/java/com/ao/model/worldobject/Mineral.java"}, "focal_method": {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Item", "body": "@Override\n\tpublic Item clone() {\n\t\treturn new Mineral((ItemProperties) properties, amount);\n\t}", "signature": "Item clone()", "full_signature": "@Override public Item clone()", "class_method_signature": "Mineral.clone()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2791813, "url": "https://github.com/aoxp/AOXP-Server", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 9, "size": 6674, "license": "licensed"}}