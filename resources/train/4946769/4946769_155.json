{"test_class": {"identifier": "PropertyExpansionRequestFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String REQUEST_CONTENT = \"<type>${#TestCase#StoreType}</type>\";", "modifier": "private static final", "type": "String", "declarator": "REQUEST_CONTENT = \"<type>${#TestCase#StoreType}</type>\"", "var_name": "REQUEST_CONTENT"}, {"original_string": "private static final String EXPECTED_REQUEST_CONTENT_AFTER_PROPERTY_EXPANSION = \"<type>shoe_Store</type>\";", "modifier": "private static final", "type": "String", "declarator": "EXPECTED_REQUEST_CONTENT_AFTER_PROPERTY_EXPANSION = \"<type>shoe_Store</type>\"", "var_name": "EXPECTED_REQUEST_CONTENT_AFTER_PROPERTY_EXPANSION"}, {"original_string": "private SubmitContext submitContext;", "modifier": "private", "type": "SubmitContext", "declarator": "submitContext", "var_name": "submitContext"}, {"original_string": "private PropertyExpansionRequestFilter requestFilter;", "modifier": "private", "type": "PropertyExpansionRequestFilter", "declarator": "requestFilter", "var_name": "requestFilter"}], "file": "soapui/src/test/java/com/eviware/soapui/impl/wsdl/submit/filters/PropertyExpansionRequestFilterTest.java"}, "test_case": {"identifier": "performsPropertyExpansionOnRestTestRequestContent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void performsPropertyExpansionOnRestTestRequestContent() throws SoapUIException {\n        AbstractHttpRequest request = mockRequest(RestTestRequest.class);\n        requestFilter.filterAbstractHttpRequest(submitContext, request);\n\n        String contentAfterPropertyExpansion = (String) submitContext.getProperty(BaseHttpRequestTransport.REQUEST_CONTENT);\n        assertThat(contentAfterPropertyExpansion, is(EXPECTED_REQUEST_CONTENT_AFTER_PROPERTY_EXPANSION));\n    }", "signature": "void performsPropertyExpansionOnRestTestRequestContent()", "full_signature": "@Test public void performsPropertyExpansionOnRestTestRequestContent()", "class_method_signature": "PropertyExpansionRequestFilterTest.performsPropertyExpansionOnRestTestRequestContent()", "testcase": true, "constructor": false, "invocations": ["mockRequest", "filterAbstractHttpRequest", "getProperty", "assertThat", "is"]}, "focal_class": {"identifier": "PropertyExpansionRequestFilter", "superclass": "extends AbstractRequestFilter", "interfaces": "", "fields": [{"original_string": "public final static Logger log = Logger.getLogger(PropertyExpansionRequestFilter.class);", "modifier": "public final static", "type": "Logger", "declarator": "log = Logger.getLogger(PropertyExpansionRequestFilter.class)", "var_name": "log"}], "methods": [{"identifier": "filterAbstractHttpRequest", "parameters": "(SubmitContext context, AbstractHttpRequest<?> request)", "modifiers": "@Override public", "return": "void", "signature": "void filterAbstractHttpRequest(SubmitContext context, AbstractHttpRequest<?> request)", "full_signature": "@Override public void filterAbstractHttpRequest(SubmitContext context, AbstractHttpRequest<?> request)", "class_method_signature": "PropertyExpansionRequestFilter.filterAbstractHttpRequest(SubmitContext context, AbstractHttpRequest<?> request)", "testcase": false, "constructor": false}, {"identifier": "expandProperties", "parameters": "(SubmitContext context, String content)", "modifiers": "public static", "return": "String", "signature": "String expandProperties(SubmitContext context, String content)", "full_signature": "public static String expandProperties(SubmitContext context, String content)", "class_method_signature": "PropertyExpansionRequestFilter.expandProperties(SubmitContext context, String content)", "testcase": false, "constructor": false}, {"identifier": "getGlobalProperty", "parameters": "(String propertyName)", "modifiers": "public static", "return": "String", "signature": "String getGlobalProperty(String propertyName)", "full_signature": "public static String getGlobalProperty(String propertyName)", "class_method_signature": "PropertyExpansionRequestFilter.getGlobalProperty(String propertyName)", "testcase": false, "constructor": false}, {"identifier": "extractXPathPropertyValue", "parameters": "(Object property, String xpath)", "modifiers": "public static", "return": "String", "signature": "String extractXPathPropertyValue(Object property, String xpath)", "full_signature": "public static String extractXPathPropertyValue(Object property, String xpath)", "class_method_signature": "PropertyExpansionRequestFilter.extractXPathPropertyValue(Object property, String xpath)", "testcase": false, "constructor": false}], "file": "soapui/src/main/java/com/eviware/soapui/impl/wsdl/submit/filters/PropertyExpansionRequestFilter.java"}, "focal_method": {"identifier": "filterAbstractHttpRequest", "parameters": "(SubmitContext context, AbstractHttpRequest<?> request)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void filterAbstractHttpRequest(SubmitContext context, AbstractHttpRequest<?> request) {\n        String content = (String) context.getProperty(BaseHttpRequestTransport.REQUEST_CONTENT);\n        if (content == null) {\n            log.warn(\"Missing request content in context, skipping property expansion\");\n        } else {\n            content = PropertyExpander.expandProperties(context, content,\n                    request.getSettings().getBoolean(CommonSettings.ENTITIZE_PROPERTIES));\n\n            if (content != null) {\n                context.setProperty(BaseHttpRequestTransport.REQUEST_CONTENT, content);\n            }\n        }\n    }", "signature": "void filterAbstractHttpRequest(SubmitContext context, AbstractHttpRequest<?> request)", "full_signature": "@Override public void filterAbstractHttpRequest(SubmitContext context, AbstractHttpRequest<?> request)", "class_method_signature": "PropertyExpansionRequestFilter.filterAbstractHttpRequest(SubmitContext context, AbstractHttpRequest<?> request)", "testcase": false, "constructor": false, "invocations": ["getProperty", "warn", "expandProperties", "getBoolean", "getSettings", "setProperty"]}, "repository": {"repo_id": 4946769, "url": "https://github.com/SmartBear/soapui", "stars": 1017, "created": "7/8/2012 2:27:41 PM +00:00", "updates": "2020-01-22T09:41:13+00:00", "fork": "False", "license": "licensed"}}