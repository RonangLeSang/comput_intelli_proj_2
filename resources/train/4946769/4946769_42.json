{"test_class": {"identifier": "RestMockResponseTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RestMockResponse restMockResponse;", "modifier": "private", "type": "RestMockResponse", "declarator": "restMockResponse", "var_name": "restMockResponse"}], "file": "soapui/src/test/java/com/eviware/soapui/impl/rest/mock/RestMockResponseTest.java"}, "test_case": {"identifier": "getsEncodingValueWhenEncodingValueIsLastParam", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getsEncodingValueWhenEncodingValueIsLastParam() throws Exception {\n        String contentType = \"application/atom+xml; type=feed; charset=UTF-8; \";\n        String[] parameters = contentType.split(\";\");\n        assertThat(restMockResponse.getEncodingValue(parameters), is(\"UTF-8\"));\n    }", "signature": "void getsEncodingValueWhenEncodingValueIsLastParam()", "full_signature": "@Test public void getsEncodingValueWhenEncodingValueIsLastParam()", "class_method_signature": "RestMockResponseTest.getsEncodingValueWhenEncodingValueIsLastParam()", "testcase": true, "constructor": false, "invocations": ["split", "assertThat", "getEncodingValue", "is"]}, "focal_class": {"identifier": "RestMockResponse", "superclass": "extends AbstractMockResponse<RESTMockResponseConfig>", "interfaces": "implements MediaType", "fields": [{"original_string": "public final static String MOCKRESULT_PROPERTY = RestMockResponse.class.getName() + \"@mockresult\";", "modifier": "public final static", "type": "String", "declarator": "MOCKRESULT_PROPERTY = RestMockResponse.class.getName() + \"@mockresult\"", "var_name": "MOCKRESULT_PROPERTY"}, {"original_string": "public static final String ICON_NAME = \"/restMockResponse.gif\";", "modifier": "public static final", "type": "String", "declarator": "ICON_NAME = \"/restMockResponse.gif\"", "var_name": "ICON_NAME"}], "methods": [{"identifier": "RestMockResponse", "parameters": "(RestMockAction action, RESTMockResponseConfig config)", "modifiers": "public", "return": "", "signature": " RestMockResponse(RestMockAction action, RESTMockResponseConfig config)", "full_signature": "public  RestMockResponse(RestMockAction action, RESTMockResponseConfig config)", "class_method_signature": "RestMockResponse.RestMockResponse(RestMockAction action, RESTMockResponseConfig config)", "testcase": false, "constructor": true}, {"identifier": "getAttachmentCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getAttachmentCount()", "full_signature": "@Override public int getAttachmentCount()", "class_method_signature": "RestMockResponse.getAttachmentCount()", "testcase": false, "constructor": false}, {"identifier": "getAttachmentAt", "parameters": "(int index)", "modifiers": "@Override public", "return": "Attachment", "signature": "Attachment getAttachmentAt(int index)", "full_signature": "@Override public Attachment getAttachmentAt(int index)", "class_method_signature": "RestMockResponse.getAttachmentAt(int index)", "testcase": false, "constructor": false}, {"identifier": "getAttachmentsForPart", "parameters": "(String partName)", "modifiers": "@Override public", "return": "Attachment[]", "signature": "Attachment[] getAttachmentsForPart(String partName)", "full_signature": "@Override public Attachment[] getAttachmentsForPart(String partName)", "class_method_signature": "RestMockResponse.getAttachmentsForPart(String partName)", "testcase": false, "constructor": false}, {"identifier": "getDefinedAttachmentParts", "parameters": "()", "modifiers": "@Override public", "return": "MessagePart.AttachmentPart[]", "signature": "MessagePart.AttachmentPart[] getDefinedAttachmentParts()", "full_signature": "@Override public MessagePart.AttachmentPart[] getDefinedAttachmentParts()", "class_method_signature": "RestMockResponse.getDefinedAttachmentParts()", "testcase": false, "constructor": false}, {"identifier": "getAttachmentPart", "parameters": "(String partName)", "modifiers": "@Override public", "return": "MessagePart.AttachmentPart", "signature": "MessagePart.AttachmentPart getAttachmentPart(String partName)", "full_signature": "@Override public MessagePart.AttachmentPart getAttachmentPart(String partName)", "class_method_signature": "RestMockResponse.getAttachmentPart(String partName)", "testcase": false, "constructor": false}, {"identifier": "addAttachmentsChangeListener", "parameters": "(PropertyChangeListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void addAttachmentsChangeListener(PropertyChangeListener listener)", "full_signature": "@Override public void addAttachmentsChangeListener(PropertyChangeListener listener)", "class_method_signature": "RestMockResponse.addAttachmentsChangeListener(PropertyChangeListener listener)", "testcase": false, "constructor": false}, {"identifier": "removeAttachmentsChangeListener", "parameters": "(PropertyChangeListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void removeAttachmentsChangeListener(PropertyChangeListener listener)", "full_signature": "@Override public void removeAttachmentsChangeListener(PropertyChangeListener listener)", "class_method_signature": "RestMockResponse.removeAttachmentsChangeListener(PropertyChangeListener listener)", "testcase": false, "constructor": false}, {"identifier": "isMultipartEnabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isMultipartEnabled()", "full_signature": "@Override public boolean isMultipartEnabled()", "class_method_signature": "RestMockResponse.isMultipartEnabled()", "testcase": false, "constructor": false}, {"identifier": "isMtomEnabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isMtomEnabled()", "full_signature": "@Override public boolean isMtomEnabled()", "class_method_signature": "RestMockResponse.isMtomEnabled()", "testcase": false, "constructor": false}, {"identifier": "isInlineFilesEnabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isInlineFilesEnabled()", "full_signature": "@Override public boolean isInlineFilesEnabled()", "class_method_signature": "RestMockResponse.isInlineFilesEnabled()", "testcase": false, "constructor": false}, {"identifier": "isEncodeAttachments", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEncodeAttachments()", "full_signature": "@Override public boolean isEncodeAttachments()", "class_method_signature": "RestMockResponse.isEncodeAttachments()", "testcase": false, "constructor": false}, {"identifier": "getAttachmentEncoding", "parameters": "(String partName)", "modifiers": "@Override public", "return": "Attachment.AttachmentEncoding", "signature": "Attachment.AttachmentEncoding getAttachmentEncoding(String partName)", "full_signature": "@Override public Attachment.AttachmentEncoding getAttachmentEncoding(String partName)", "class_method_signature": "RestMockResponse.getAttachmentEncoding(String partName)", "testcase": false, "constructor": false}, {"identifier": "getAttachments", "parameters": "()", "modifiers": "@Override public", "return": "Attachment[]", "signature": "Attachment[] getAttachments()", "full_signature": "@Override public Attachment[] getAttachments()", "class_method_signature": "RestMockResponse.getAttachments()", "testcase": false, "constructor": false}, {"identifier": "getMockOperation", "parameters": "()", "modifiers": "@Override public", "return": "MockOperation", "signature": "MockOperation getMockOperation()", "full_signature": "@Override public MockOperation getMockOperation()", "class_method_signature": "RestMockResponse.getMockOperation()", "testcase": false, "constructor": false}, {"identifier": "getScriptHelpUrl", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getScriptHelpUrl()", "full_signature": "@Override public String getScriptHelpUrl()", "class_method_signature": "RestMockResponse.getScriptHelpUrl()", "testcase": false, "constructor": false}, {"identifier": "attachFile", "parameters": "(File file, boolean cache)", "modifiers": "@Override public", "return": "Attachment", "signature": "Attachment attachFile(File file, boolean cache)", "full_signature": "@Override public Attachment attachFile(File file, boolean cache)", "class_method_signature": "RestMockResponse.attachFile(File file, boolean cache)", "testcase": false, "constructor": false}, {"identifier": "removeAttachment", "parameters": "(Attachment attachment)", "modifiers": "@Override public", "return": "void", "signature": "void removeAttachment(Attachment attachment)", "full_signature": "@Override public void removeAttachment(Attachment attachment)", "class_method_signature": "RestMockResponse.removeAttachment(Attachment attachment)", "testcase": false, "constructor": false}, {"identifier": "getPropertyExpansions", "parameters": "()", "modifiers": "@Override public", "return": "PropertyExpansion[]", "signature": "PropertyExpansion[] getPropertyExpansions()", "full_signature": "@Override public PropertyExpansion[] getPropertyExpansions()", "class_method_signature": "RestMockResponse.getPropertyExpansions()", "testcase": false, "constructor": false}, {"identifier": "getPropertiesLabel", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPropertiesLabel()", "full_signature": "@Override public String getPropertiesLabel()", "class_method_signature": "RestMockResponse.getPropertiesLabel()", "testcase": false, "constructor": false}, {"identifier": "mockresultProperty", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String mockresultProperty()", "full_signature": "protected String mockresultProperty()", "class_method_signature": "RestMockResponse.mockresultProperty()", "testcase": false, "constructor": false}, {"identifier": "executeSpecifics", "parameters": "(MockRequest request, String responseContent, WsdlMockRunContext context)", "modifiers": "@Override protected", "return": "String", "signature": "String executeSpecifics(MockRequest request, String responseContent, WsdlMockRunContext context)", "full_signature": "@Override protected String executeSpecifics(MockRequest request, String responseContent, WsdlMockRunContext context)", "class_method_signature": "RestMockResponse.executeSpecifics(MockRequest request, String responseContent, WsdlMockRunContext context)", "testcase": false, "constructor": false}, {"identifier": "getContentType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getContentType()", "full_signature": "@Override public String getContentType()", "class_method_signature": "RestMockResponse.getContentType()", "testcase": false, "constructor": false}, {"identifier": "removeEmptyContent", "parameters": "(String responseContent)", "modifiers": "@Override protected", "return": "String", "signature": "String removeEmptyContent(String responseContent)", "full_signature": "@Override protected String removeEmptyContent(String responseContent)", "class_method_signature": "RestMockResponse.removeEmptyContent(String responseContent)", "testcase": false, "constructor": false}, {"identifier": "getResponseDelay", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getResponseDelay()", "full_signature": "@Override public long getResponseDelay()", "class_method_signature": "RestMockResponse.getResponseDelay()", "testcase": false, "constructor": false}, {"identifier": "isForceMtom", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isForceMtom()", "full_signature": "@Override public boolean isForceMtom()", "class_method_signature": "RestMockResponse.isForceMtom()", "testcase": false, "constructor": false}, {"identifier": "isStripWhitespaces", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isStripWhitespaces()", "full_signature": "@Override public boolean isStripWhitespaces()", "class_method_signature": "RestMockResponse.isStripWhitespaces()", "testcase": false, "constructor": false}, {"identifier": "getMediaType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getMediaType()", "full_signature": "@Override public String getMediaType()", "class_method_signature": "RestMockResponse.getMediaType()", "testcase": false, "constructor": false}, {"identifier": "setMediaType", "parameters": "(String mediaType)", "modifiers": "@Override public", "return": "void", "signature": "void setMediaType(String mediaType)", "full_signature": "@Override public void setMediaType(String mediaType)", "class_method_signature": "RestMockResponse.setMediaType(String mediaType)", "testcase": false, "constructor": false}, {"identifier": "setContentType", "parameters": "(String contentType)", "modifiers": "public", "return": "void", "signature": "void setContentType(String contentType)", "full_signature": "public void setContentType(String contentType)", "class_method_signature": "RestMockResponse.setContentType(String contentType)", "testcase": false, "constructor": false}, {"identifier": "getEncodingValue", "parameters": "(String[] parameters)", "modifiers": "protected", "return": "String", "signature": "String getEncodingValue(String[] parameters)", "full_signature": "protected String getEncodingValue(String[] parameters)", "class_method_signature": "RestMockResponse.getEncodingValue(String[] parameters)", "testcase": false, "constructor": false}], "file": "soapui/src/main/java/com/eviware/soapui/impl/rest/mock/RestMockResponse.java"}, "focal_method": {"identifier": "getEncodingValue", "parameters": "(String[] parameters)", "modifiers": "protected", "return": "String", "body": "protected String getEncodingValue(String[] parameters) {\n        String encoding = null;\n\n        for (int i = 0; i < parameters.length; i++) {\n            if (parameters[i].trim().startsWith(\"charset=\")) {\n                String[] encodingParts = parameters[i].split(\"=\");\n\n                if (encodingParts.length > 1) {\n                    encoding = encodingParts[1];\n                    return encoding;\n                }\n            }\n\n        }\n\n        return encoding;\n    }", "signature": "String getEncodingValue(String[] parameters)", "full_signature": "protected String getEncodingValue(String[] parameters)", "class_method_signature": "RestMockResponse.getEncodingValue(String[] parameters)", "testcase": false, "constructor": false, "invocations": ["startsWith", "trim", "split"]}, "repository": {"repo_id": 4946769, "url": "https://github.com/SmartBear/soapui", "stars": 1017, "created": "7/8/2012 2:27:41 PM +00:00", "updates": "2020-01-22T09:41:13+00:00", "fork": "False", "license": "licensed"}}