{"test_class": {"identifier": "AttachmentUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "soapui/src/test/java/com/eviware/soapui/impl/wsdl/submit/transports/http/support/attachments/AttachmentUtilsTest.java"}, "test_case": {"identifier": "actionIsNotPartOfTypeElementInMTOMContentType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void actionIsNotPartOfTypeElementInMTOMContentType() {\n        String contentType = AttachmentUtils.buildMTOMContentType(\"boundary=\\\"----=_Part_10_7396679.1285664994648\\\"\", \"SendFile\", SoapVersion.Soap12);\n        String expectedContentType = \"multipart/related; type=\\\"application/xop+xml\\\"; \" +\n                \"start=\\\"<rootpart@soapui.org>\\\"; start-info=\\\"application/soap+xml\\\"; action=\\\"SendFile\\\"; \" +\n                \"boundary=\\\"----=_Part_10_7396679.1285664994648\\\"\";\n        assertThat(contentType, is(expectedContentType));\n    }", "signature": "void actionIsNotPartOfTypeElementInMTOMContentType()", "full_signature": "@Test public void actionIsNotPartOfTypeElementInMTOMContentType()", "class_method_signature": "AttachmentUtilsTest.actionIsNotPartOfTypeElementInMTOMContentType()", "testcase": true, "constructor": false, "invocations": ["buildMTOMContentType", "assertThat", "is"]}, "focal_class": {"identifier": "AttachmentUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static Logger log = Logger.getLogger(AttachmentUtils.class);", "modifier": "private final static", "type": "Logger", "declarator": "log = Logger.getLogger(AttachmentUtils.class)", "var_name": "log"}, {"original_string": "private static final QName XMLMIME_CONTENTTYPE_200505 = new QName(\"http://www.w3.org/2005/05/xmlmime\",\n            \"contentType\");", "modifier": "private static final", "type": "QName", "declarator": "XMLMIME_CONTENTTYPE_200505 = new QName(\"http://www.w3.org/2005/05/xmlmime\",\n            \"contentType\")", "var_name": "XMLMIME_CONTENTTYPE_200505"}, {"original_string": "private static final QName XMLMIME_CONTENTTYPE_200411 = new QName(\"http://www.w3.org/2004/11/xmlmime\",\n            \"contentType\");", "modifier": "private static final", "type": "QName", "declarator": "XMLMIME_CONTENTTYPE_200411 = new QName(\"http://www.w3.org/2004/11/xmlmime\",\n            \"contentType\")", "var_name": "XMLMIME_CONTENTTYPE_200411"}, {"original_string": "private static final QName SWAREF_QNAME = new QName(\"http://ws-i.org/profiles/basic/1.1/xsd\", \"swaRef\");", "modifier": "private static final", "type": "QName", "declarator": "SWAREF_QNAME = new QName(\"http://ws-i.org/profiles/basic/1.1/xsd\", \"swaRef\")", "var_name": "SWAREF_QNAME"}, {"original_string": "public static final QName XOP_HREF_QNAME = new QName(\"href\");", "modifier": "public static final", "type": "QName", "declarator": "XOP_HREF_QNAME = new QName(\"href\")", "var_name": "XOP_HREF_QNAME"}, {"original_string": "private static final QName XOP_INCLUDE_QNAME = new QName(\"http://www.w3.org/2004/08/xop/include\", \"Include\");", "modifier": "private static final", "type": "QName", "declarator": "XOP_INCLUDE_QNAME = new QName(\"http://www.w3.org/2004/08/xop/include\", \"Include\")", "var_name": "XOP_INCLUDE_QNAME"}, {"original_string": "public static final String ROOTPART_SOAPUI_ORG = \"<rootpart@soapui.org>\";", "modifier": "public static final", "type": "String", "declarator": "ROOTPART_SOAPUI_ORG = \"<rootpart@soapui.org>\"", "var_name": "ROOTPART_SOAPUI_ORG"}, {"original_string": "public static final long MAX_SIZE_IN_MEMORY_ATTACHMENT = 500 * 1024;", "modifier": "public static final", "type": "long", "declarator": "MAX_SIZE_IN_MEMORY_ATTACHMENT = 500 * 1024", "var_name": "MAX_SIZE_IN_MEMORY_ATTACHMENT"}, {"original_string": "public static final Session JAVAMAIL_SESSION = Session.getDefaultInstance(new Properties());", "modifier": "public static final", "type": "Session", "declarator": "JAVAMAIL_SESSION = Session.getDefaultInstance(new Properties())", "var_name": "JAVAMAIL_SESSION"}], "methods": [{"identifier": "prepareMessagePart", "parameters": "(WsdlAttachmentContainer container, MimeMultipart mp,\n                                             MessageXmlPart messagePart, StringToStringMap contentIds)", "modifiers": "public static", "return": "boolean", "signature": "boolean prepareMessagePart(WsdlAttachmentContainer container, MimeMultipart mp,\n                                             MessageXmlPart messagePart, StringToStringMap contentIds)", "full_signature": "public static boolean prepareMessagePart(WsdlAttachmentContainer container, MimeMultipart mp,\n                                             MessageXmlPart messagePart, StringToStringMap contentIds)", "class_method_signature": "AttachmentUtils.prepareMessagePart(WsdlAttachmentContainer container, MimeMultipart mp,\n                                             MessageXmlPart messagePart, StringToStringMap contentIds)", "testcase": false, "constructor": false}, {"identifier": "getAttachmentForFilename", "parameters": "(WsdlAttachmentContainer container, String filename)", "modifiers": "private static", "return": "Attachment", "signature": "Attachment getAttachmentForFilename(WsdlAttachmentContainer container, String filename)", "full_signature": "private static Attachment getAttachmentForFilename(WsdlAttachmentContainer container, String filename)", "class_method_signature": "AttachmentUtils.getAttachmentForFilename(WsdlAttachmentContainer container, String filename)", "testcase": false, "constructor": false}, {"identifier": "inlineAttachment", "parameters": "(XmlCursor cursor, SchemaType schemaType, Attachment attachment)", "modifiers": "private static", "return": "void", "signature": "void inlineAttachment(XmlCursor cursor, SchemaType schemaType, Attachment attachment)", "full_signature": "private static void inlineAttachment(XmlCursor cursor, SchemaType schemaType, Attachment attachment)", "class_method_signature": "AttachmentUtils.inlineAttachment(XmlCursor cursor, SchemaType schemaType, Attachment attachment)", "testcase": false, "constructor": false}, {"identifier": "inlineData", "parameters": "(XmlCursor cursor, SchemaType schemaType, InputStream in)", "modifiers": "private static", "return": "void", "signature": "void inlineData(XmlCursor cursor, SchemaType schemaType, InputStream in)", "full_signature": "private static void inlineData(XmlCursor cursor, SchemaType schemaType, InputStream in)", "class_method_signature": "AttachmentUtils.inlineData(XmlCursor cursor, SchemaType schemaType, InputStream in)", "testcase": false, "constructor": false}, {"identifier": "buildXopInclude", "parameters": "(XmlCursor cursor, String contentId)", "modifiers": "private static", "return": "void", "signature": "void buildXopInclude(XmlCursor cursor, String contentId)", "full_signature": "private static void buildXopInclude(XmlCursor cursor, String contentId)", "class_method_signature": "AttachmentUtils.buildXopInclude(XmlCursor cursor, String contentId)", "testcase": false, "constructor": false}, {"identifier": "buildMulitpartAttachment", "parameters": "(Attachment[] attachments)", "modifiers": "private static", "return": "Attachment", "signature": "Attachment buildMulitpartAttachment(Attachment[] attachments)", "full_signature": "private static Attachment buildMulitpartAttachment(Attachment[] attachments)", "class_method_signature": "AttachmentUtils.buildMulitpartAttachment(Attachment[] attachments)", "testcase": false, "constructor": false}, {"identifier": "buildRootPartContentType", "parameters": "(String action, SoapVersion soapVersion)", "modifiers": "public static", "return": "String", "signature": "String buildRootPartContentType(String action, SoapVersion soapVersion)", "full_signature": "public static String buildRootPartContentType(String action, SoapVersion soapVersion)", "class_method_signature": "AttachmentUtils.buildRootPartContentType(String action, SoapVersion soapVersion)", "testcase": false, "constructor": false}, {"identifier": "buildMTOMContentType", "parameters": "(String header, String action, SoapVersion soapVersion)", "modifiers": "public static", "return": "String", "signature": "String buildMTOMContentType(String header, String action, SoapVersion soapVersion)", "full_signature": "public static String buildMTOMContentType(String header, String action, SoapVersion soapVersion)", "class_method_signature": "AttachmentUtils.buildMTOMContentType(String header, String action, SoapVersion soapVersion)", "testcase": false, "constructor": false}, {"identifier": "isSwaRefType", "parameters": "(SchemaType schemaType)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSwaRefType(SchemaType schemaType)", "full_signature": "public static boolean isSwaRefType(SchemaType schemaType)", "class_method_signature": "AttachmentUtils.isSwaRefType(SchemaType schemaType)", "testcase": false, "constructor": false}, {"identifier": "getXmlMimeContentType", "parameters": "(XmlCursor cursor)", "modifiers": "public static", "return": "String", "signature": "String getXmlMimeContentType(XmlCursor cursor)", "full_signature": "public static String getXmlMimeContentType(XmlCursor cursor)", "class_method_signature": "AttachmentUtils.getXmlMimeContentType(XmlCursor cursor)", "testcase": false, "constructor": false}, {"identifier": "getAttachmentEncoding", "parameters": "(WsdlOperation operation,\n                                                           HttpAttachmentPart httpAttachmentPart, boolean isResponse)", "modifiers": "public static", "return": "AttachmentEncoding", "signature": "AttachmentEncoding getAttachmentEncoding(WsdlOperation operation,\n                                                           HttpAttachmentPart httpAttachmentPart, boolean isResponse)", "full_signature": "public static AttachmentEncoding getAttachmentEncoding(WsdlOperation operation,\n                                                           HttpAttachmentPart httpAttachmentPart, boolean isResponse)", "class_method_signature": "AttachmentUtils.getAttachmentEncoding(WsdlOperation operation,\n                                                           HttpAttachmentPart httpAttachmentPart, boolean isResponse)", "testcase": false, "constructor": false}, {"identifier": "getAttachmentEncoding", "parameters": "(WsdlOperation operation, String partName, boolean isResponse)", "modifiers": "public static", "return": "AttachmentEncoding", "signature": "AttachmentEncoding getAttachmentEncoding(WsdlOperation operation, String partName, boolean isResponse)", "full_signature": "public static AttachmentEncoding getAttachmentEncoding(WsdlOperation operation, String partName, boolean isResponse)", "class_method_signature": "AttachmentUtils.getAttachmentEncoding(WsdlOperation operation, String partName, boolean isResponse)", "testcase": false, "constructor": false}, {"identifier": "isXopInclude", "parameters": "(SchemaType schemaType)", "modifiers": "public static", "return": "boolean", "signature": "boolean isXopInclude(SchemaType schemaType)", "full_signature": "public static boolean isXopInclude(SchemaType schemaType)", "class_method_signature": "AttachmentUtils.isXopInclude(SchemaType schemaType)", "testcase": false, "constructor": false}, {"identifier": "extractAttachmentParts", "parameters": "(WsdlOperation operation, String messageContent,\n                                                                  boolean addAnonymous, boolean isResponse, boolean forceMtom)", "modifiers": "public static", "return": "List<HttpAttachmentPart>", "signature": "List<HttpAttachmentPart> extractAttachmentParts(WsdlOperation operation, String messageContent,\n                                                                  boolean addAnonymous, boolean isResponse, boolean forceMtom)", "full_signature": "public static List<HttpAttachmentPart> extractAttachmentParts(WsdlOperation operation, String messageContent,\n                                                                  boolean addAnonymous, boolean isResponse, boolean forceMtom)", "class_method_signature": "AttachmentUtils.extractAttachmentParts(WsdlOperation operation, String messageContent,\n                                                                  boolean addAnonymous, boolean isResponse, boolean forceMtom)", "testcase": false, "constructor": false}, {"identifier": "addMimeParts", "parameters": "(AttachmentContainer container, List<Attachment> attachments, MimeMultipart mp,\n                                    StringToStringMap contentIds)", "modifiers": "public static", "return": "void", "signature": "void addMimeParts(AttachmentContainer container, List<Attachment> attachments, MimeMultipart mp,\n                                    StringToStringMap contentIds)", "full_signature": "public static void addMimeParts(AttachmentContainer container, List<Attachment> attachments, MimeMultipart mp,\n                                    StringToStringMap contentIds)", "class_method_signature": "AttachmentUtils.addMimeParts(AttachmentContainer container, List<Attachment> attachments, MimeMultipart mp,\n                                    StringToStringMap contentIds)", "testcase": false, "constructor": false}, {"identifier": "addMultipartAttachment", "parameters": "(MimeMultipart mp, StringToStringMap contentIds,\n                                              List<Attachment> attachments)", "modifiers": "public static", "return": "void", "signature": "void addMultipartAttachment(MimeMultipart mp, StringToStringMap contentIds,\n                                              List<Attachment> attachments)", "full_signature": "public static void addMultipartAttachment(MimeMultipart mp, StringToStringMap contentIds,\n                                              List<Attachment> attachments)", "class_method_signature": "AttachmentUtils.addMultipartAttachment(MimeMultipart mp, StringToStringMap contentIds,\n                                              List<Attachment> attachments)", "testcase": false, "constructor": false}, {"identifier": "initPartContentId", "parameters": "(StringToStringMap contentIds, MimeBodyPart part, Attachment attachment,\n                                         boolean isMultipart)", "modifiers": "public static", "return": "void", "signature": "void initPartContentId(StringToStringMap contentIds, MimeBodyPart part, Attachment attachment,\n                                         boolean isMultipart)", "full_signature": "public static void initPartContentId(StringToStringMap contentIds, MimeBodyPart part, Attachment attachment,\n                                         boolean isMultipart)", "class_method_signature": "AttachmentUtils.initPartContentId(StringToStringMap contentIds, MimeBodyPart part, Attachment attachment,\n                                         boolean isMultipart)", "testcase": false, "constructor": false}, {"identifier": "addSingleAttachment", "parameters": "(MimeMultipart mp, StringToStringMap contentIds, Attachment att)", "modifiers": "public static", "return": "void", "signature": "void addSingleAttachment(MimeMultipart mp, StringToStringMap contentIds, Attachment att)", "full_signature": "public static void addSingleAttachment(MimeMultipart mp, StringToStringMap contentIds, Attachment att)", "class_method_signature": "AttachmentUtils.addSingleAttachment(MimeMultipart mp, StringToStringMap contentIds, Attachment att)", "testcase": false, "constructor": false}], "file": "soapui/src/main/java/com/eviware/soapui/impl/wsdl/submit/transports/http/support/attachments/AttachmentUtils.java"}, "focal_method": {"identifier": "buildMTOMContentType", "parameters": "(String header, String action, SoapVersion soapVersion)", "modifiers": "public static", "return": "String", "body": "public static String buildMTOMContentType(String header, String action, SoapVersion soapVersion) {\n        int ix = header.indexOf(\"boundary\");\n        String contentType = \"multipart/related; type=\\\"application/xop+xml\\\"; start=\\\"\" + ROOTPART_SOAPUI_ORG + \"\\\"; \"\n                + \"start-info=\\\"\" + soapVersion.getContentType();\n\n        if (soapVersion == SoapVersion.Soap12 && action != null) {\n            contentType += \"\\\"; action=\\\"\" + action;\n        }\n\n        // nested or not? see\n        // http://www.eviware.com/forums/index.php?topic=2866.new#new\n        // contentType += \"; action=\\\\\\\"\" + action + \"\\\\\\\"\\\"; action=\\\"\" + action;\n\n        return contentType + \"\\\"; \" + header.substring(ix);\n    }", "signature": "String buildMTOMContentType(String header, String action, SoapVersion soapVersion)", "full_signature": "public static String buildMTOMContentType(String header, String action, SoapVersion soapVersion)", "class_method_signature": "AttachmentUtils.buildMTOMContentType(String header, String action, SoapVersion soapVersion)", "testcase": false, "constructor": false, "invocations": ["indexOf", "getContentType", "substring"]}, "repository": {"repo_id": 4946769, "url": "https://github.com/SmartBear/soapui", "stars": 1017, "created": "7/8/2012 2:27:41 PM +00:00", "updates": "2020-01-22T09:41:13+00:00", "fork": "False", "license": "licensed"}}