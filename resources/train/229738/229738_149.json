{"test_class": {"identifier": "TestClasspathSqlLocator", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public H2DatabaseRule dbRule = new H2DatabaseRule().withSomething();", "modifier": "@Rule\n    public", "type": "H2DatabaseRule", "declarator": "dbRule = new H2DatabaseRule().withSomething()", "var_name": "dbRule"}, {"original_string": "@Rule\n    public ExpectedException exception = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "exception = ExpectedException.none()", "var_name": "exception"}], "file": "core/src/test/java/org/jdbi/v3/core/locator/TestClasspathSqlLocator.java"}, "test_case": {"identifier": "testCommentsInExternalSql", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCommentsInExternalSql() {\n        Handle h = dbRule.openHandle();\n        h.execute(ClasspathSqlLocator.findSqlOnClasspath(\"insert-eric-with-comments\"));\n        assertThat(h.select(\"select name from something\").mapTo(String.class).list()).hasSize(1);\n    }", "signature": "void testCommentsInExternalSql()", "full_signature": "@Test public void testCommentsInExternalSql()", "class_method_signature": "TestClasspathSqlLocator.testCommentsInExternalSql()", "testcase": true, "constructor": false, "invocations": ["openHandle", "execute", "findSqlOnClasspath", "hasSize", "assertThat", "list", "mapTo", "select"]}, "focal_class": {"identifier": "ClasspathSqlLocator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SQL_EXTENSION = \"sql\";", "modifier": "private static final", "type": "String", "declarator": "SQL_EXTENSION = \"sql\"", "var_name": "SQL_EXTENSION"}, {"original_string": "private final Map<ClassLoader, Map<String, String>> cache =\n            Collections.synchronizedMap(new WeakHashMap<>());", "modifier": "private final", "type": "Map<ClassLoader, Map<String, String>>", "declarator": "cache =\n            Collections.synchronizedMap(new WeakHashMap<>())", "var_name": "cache"}, {"original_string": "private final Function<InputStream, String> parser;", "modifier": "private final", "type": "Function<InputStream, String>", "declarator": "parser", "var_name": "parser"}], "methods": [{"identifier": "ClasspathSqlLocator", "parameters": "(CheckedFunction<InputStream, String> parser)", "modifiers": "private", "return": "", "signature": " ClasspathSqlLocator(CheckedFunction<InputStream, String> parser)", "full_signature": "private  ClasspathSqlLocator(CheckedFunction<InputStream, String> parser)", "class_method_signature": "ClasspathSqlLocator.ClasspathSqlLocator(CheckedFunction<InputStream, String> parser)", "testcase": false, "constructor": true}, {"identifier": "findSqlOnClasspath", "parameters": "(Class<?> type, String methodName)", "modifiers": "@Deprecated public static", "return": "String", "signature": "String findSqlOnClasspath(Class<?> type, String methodName)", "full_signature": "@Deprecated public static String findSqlOnClasspath(Class<?> type, String methodName)", "class_method_signature": "ClasspathSqlLocator.findSqlOnClasspath(Class<?> type, String methodName)", "testcase": false, "constructor": false}, {"identifier": "findSqlOnClasspath", "parameters": "(String name)", "modifiers": "@Deprecated public static", "return": "String", "signature": "String findSqlOnClasspath(String name)", "full_signature": "@Deprecated public static String findSqlOnClasspath(String name)", "class_method_signature": "ClasspathSqlLocator.findSqlOnClasspath(String name)", "testcase": false, "constructor": false}, {"identifier": "getResourceOnClasspath", "parameters": "(String path)", "modifiers": "@Deprecated public static", "return": "String", "signature": "String getResourceOnClasspath(String path)", "full_signature": "@Deprecated public static String getResourceOnClasspath(String path)", "class_method_signature": "ClasspathSqlLocator.getResourceOnClasspath(String path)", "testcase": false, "constructor": false}, {"identifier": "getResourceOnClasspath", "parameters": "(ClassLoader classLoader, String path)", "modifiers": "@Deprecated public static", "return": "String", "signature": "String getResourceOnClasspath(ClassLoader classLoader, String path)", "full_signature": "@Deprecated public static String getResourceOnClasspath(ClassLoader classLoader, String path)", "class_method_signature": "ClasspathSqlLocator.getResourceOnClasspath(ClassLoader classLoader, String path)", "testcase": false, "constructor": false}, {"identifier": "removingComments", "parameters": "()", "modifiers": "public static", "return": "ClasspathSqlLocator", "signature": "ClasspathSqlLocator removingComments()", "full_signature": "public static ClasspathSqlLocator removingComments()", "class_method_signature": "ClasspathSqlLocator.removingComments()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "()", "modifiers": "public static", "return": "ClasspathSqlLocator", "signature": "ClasspathSqlLocator create()", "full_signature": "public static ClasspathSqlLocator create()", "class_method_signature": "ClasspathSqlLocator.create()", "testcase": false, "constructor": false}, {"identifier": "locate", "parameters": "(Class<?> type, String methodName)", "modifiers": "public", "return": "String", "signature": "String locate(Class<?> type, String methodName)", "full_signature": "public String locate(Class<?> type, String methodName)", "class_method_signature": "ClasspathSqlLocator.locate(Class<?> type, String methodName)", "testcase": false, "constructor": false}, {"identifier": "locate", "parameters": "(String name)", "modifiers": "public", "return": "String", "signature": "String locate(String name)", "full_signature": "public String locate(String name)", "class_method_signature": "ClasspathSqlLocator.locate(String name)", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "(String path)", "modifiers": "public", "return": "String", "signature": "String getResource(String path)", "full_signature": "public String getResource(String path)", "class_method_signature": "ClasspathSqlLocator.getResource(String path)", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "(ClassLoader classLoader, String path)", "modifiers": "public", "return": "String", "signature": "String getResource(ClassLoader classLoader, String path)", "full_signature": "public String getResource(ClassLoader classLoader, String path)", "class_method_signature": "ClasspathSqlLocator.getResource(ClassLoader classLoader, String path)", "testcase": false, "constructor": false}, {"identifier": "readResource", "parameters": "(ClassLoader classLoader, String path)", "modifiers": "private", "return": "String", "signature": "String readResource(ClassLoader classLoader, String path)", "full_signature": "private String readResource(ClassLoader classLoader, String path)", "class_method_signature": "ClasspathSqlLocator.readResource(ClassLoader classLoader, String path)", "testcase": false, "constructor": false}, {"identifier": "readAsString", "parameters": "(InputStream is)", "modifiers": "private static", "return": "String", "signature": "String readAsString(InputStream is)", "full_signature": "private static String readAsString(InputStream is)", "class_method_signature": "ClasspathSqlLocator.readAsString(InputStream is)", "testcase": false, "constructor": false}, {"identifier": "openStream", "parameters": "(ClassLoader classLoader, String path)", "modifiers": "private static", "return": "InputStream", "signature": "InputStream openStream(ClassLoader classLoader, String path)", "full_signature": "private static InputStream openStream(ClassLoader classLoader, String path)", "class_method_signature": "ClasspathSqlLocator.openStream(ClassLoader classLoader, String path)", "testcase": false, "constructor": false}, {"identifier": "selectClassLoader", "parameters": "()", "modifiers": "private static", "return": "ClassLoader", "signature": "ClassLoader selectClassLoader()", "full_signature": "private static ClassLoader selectClassLoader()", "class_method_signature": "ClasspathSqlLocator.selectClassLoader()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/jdbi/v3/core/locator/ClasspathSqlLocator.java"}, "focal_method": {"identifier": "findSqlOnClasspath", "parameters": "(Class<?> type, String methodName)", "modifiers": "@Deprecated public static", "return": "String", "body": "@Deprecated\n    public static String findSqlOnClasspath(Class<?> type, String methodName) {\n        return Holder.INSTANCE.locate(type, methodName);\n    }", "signature": "String findSqlOnClasspath(Class<?> type, String methodName)", "full_signature": "@Deprecated public static String findSqlOnClasspath(Class<?> type, String methodName)", "class_method_signature": "ClasspathSqlLocator.findSqlOnClasspath(Class<?> type, String methodName)", "testcase": false, "constructor": false, "invocations": ["locate"]}, "repository": {"repo_id": 229738, "url": "https://github.com/jdbi/jdbi", "stars": 1361, "created": "6/17/2009 4:36:36 PM +00:00", "updates": "2020-01-24T19:16:55+00:00", "fork": "False", "license": "licensed"}}