{"test_class": {"identifier": "StringUtilsTest", "superclass": "extends MockedStaticInitializers", "interfaces": "", "fields": [{"original_string": "static final String EXAMPLE_FILE_NAME = \"/rss.xml\";", "modifier": "static final", "type": "String", "declarator": "EXAMPLE_FILE_NAME = \"/rss.xml\"", "var_name": "EXAMPLE_FILE_NAME"}, {"original_string": "int[] intTest1 = {0xFF, 0x00};", "modifier": "", "type": "int[]", "declarator": "intTest1 = {0xFF, 0x00}", "var_name": "intTest1"}, {"original_string": "int[] intTest2 = {0xCD, 0x1A};", "modifier": "", "type": "int[]", "declarator": "intTest2 = {0xCD, 0x1A}", "var_name": "intTest2"}, {"original_string": "byte[] byteTest1 = new byte[intTest1.length];", "modifier": "", "type": "byte[]", "declarator": "byteTest1 = new byte[intTest1.length]", "var_name": "byteTest1"}, {"original_string": "byte[] byteTest2 = new byte[intTest2.length];", "modifier": "", "type": "byte[]", "declarator": "byteTest2 = new byte[intTest2.length]", "var_name": "byteTest2"}, {"original_string": "final String sampleAsHex = \"FF00EC11\";", "modifier": "final", "type": "String", "declarator": "sampleAsHex = \"FF00EC11\"", "var_name": "sampleAsHex"}, {"original_string": "final byte[] sampleAsBytes = {(byte) 0xFF, (byte) 0x00, (byte) 0xEC, (byte) 0x11 };", "modifier": "final", "type": "byte[]", "declarator": "sampleAsBytes = {(byte) 0xFF, (byte) 0x00, (byte) 0xEC, (byte) 0x11 }", "var_name": "sampleAsBytes"}, {"original_string": "final String roundTripConversionTest = \"  Goodies \u00a5\u018f\u0132\u025e\u02ac \u0394\u0429\u0508\u0562\u05d0 \u0628\u0920\u0903 \u21af\u2230\u2708\u2c60\u3042\u30c5 \ufdfb\ufeba \u3fdc\";", "modifier": "final", "type": "String", "declarator": "roundTripConversionTest = \"  Goodies \u00a5\u018f\u0132\u025e\u02ac \u0394\u0429\u0508\u0562\u05d0 \u0628\u0920\u0903 \u21af\u2230\u2708\u2c60\u3042\u30c5 \ufdfb\ufeba \u3fdc\";", "var_name": "roundTripConversionTest"}, {"original_string": "final String urlDecodeConversionTest = \"%20%20Goodies%20%C2%A5%C6%8F%C4%B2%C9%9E%CA%AC%20%CE%94%D0%A9%D4%88%D5%A2%D7%90%20%D8%A8%E0%A4%A0%E0%A4%83%20%E2%86%AF%E2%88%B0%E2%9C%88%E2%B1%A0%E3%81%82%E3%83%85%20%EF%B7%BB%EF%BA%BA%20%E3%BF%9C\";", "modifier": "final", "type": "String", "declarator": "urlDecodeConversionTest = \"%20%20Goodies%20%C2%A5%C6%8F%C4%B2%C9%9E%CA%AC%20%CE%94%D0%A9%D4%88%D5%A2%D7%90%20%D8%A8%E0%A4%A0%E0%A4%83%20%E2%86%AF%E2%88%B0%E2%9C%88%E2%B1%A0%E3%81%82%E3%83%85%20%EF%B7%BB%EF%BA%BA%20%E3%BF%9C\"", "var_name": "urlDecodeConversionTest"}, {"original_string": "final String oneChar = \"\u3fdc\";", "modifier": "final", "type": "String", "declarator": "oneChar = \"\u3fdc\";", "var_name": "oneChar"}, {"original_string": "final String oneCharEncoded = \"%E3%BF%9C\";", "modifier": "final", "type": "String", "declarator": "oneCharEncoded = \"%E3%BF%9C\"", "var_name": "oneCharEncoded"}, {"original_string": "final byte[] fourByteArray = {(byte) 0xF0, (byte) 0xA4, (byte) 0xAD, (byte) 0xA2};", "modifier": "final", "type": "byte[]", "declarator": "fourByteArray = {(byte) 0xF0, (byte) 0xA4, (byte) 0xAD, (byte) 0xA2}", "var_name": "fourByteArray"}, {"original_string": "final String fourByteEncoded = \"%F0%A4%AD%A2\";", "modifier": "final", "type": "String", "declarator": "fourByteEncoded = \"%F0%A4%AD%A2\"", "var_name": "fourByteEncoded"}, {"original_string": "final byte[] threeByteArray = {(byte) 0xE2, (byte) 0x82, (byte) 0xAC};", "modifier": "final", "type": "byte[]", "declarator": "threeByteArray = {(byte) 0xE2, (byte) 0x82, (byte) 0xAC}", "var_name": "threeByteArray"}, {"original_string": "final String threeByteEncoded = \"%E2%82%AC\";", "modifier": "final", "type": "String", "declarator": "threeByteEncoded = \"%E2%82%AC\"", "var_name": "threeByteEncoded"}, {"original_string": "final byte[] twoByteArray = {(byte) 0xC2, (byte) 0xA2};", "modifier": "final", "type": "byte[]", "declarator": "twoByteArray = {(byte) 0xC2, (byte) 0xA2}", "var_name": "twoByteArray"}, {"original_string": "final String twoByteEncoded = \"%C2%A2\";", "modifier": "final", "type": "String", "declarator": "twoByteEncoded = \"%C2%A2\"", "var_name": "twoByteEncoded"}, {"original_string": "final byte[] oneByteArray = {(byte) 0x10};", "modifier": "final", "type": "byte[]", "declarator": "oneByteArray = {(byte) 0x10}", "var_name": "oneByteArray"}, {"original_string": "final String oneByteEncoded = \"%10\";", "modifier": "final", "type": "String", "declarator": "oneByteEncoded = \"%10\"", "var_name": "oneByteEncoded"}], "file": "TantalumCore/src/test/java/org/tantalum/util/StringUtilsTest.java"}, "test_case": {"identifier": "urlEncodeZhuang", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void urlEncodeZhuang() throws IOException {\n        assertEquals(\"%E5%80%B1\", StringUtils.urlEncode(\"\u5031\"));\n    }", "signature": "void urlEncodeZhuang()", "full_signature": "@Test public void urlEncodeZhuang()", "class_method_signature": "StringUtilsTest.urlEncodeZhuang()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "urlEncode"]}, "focal_class": {"identifier": "StringUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static char[] HEX_CHARS = \"0123456789ABCDEF\".toCharArray();", "modifier": "private final static", "type": "char[]", "declarator": "HEX_CHARS = \"0123456789ABCDEF\".toCharArray()", "var_name": "HEX_CHARS"}], "methods": [{"identifier": "StringUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " StringUtils()", "full_signature": "private  StringUtils()", "class_method_signature": "StringUtils.StringUtils()", "testcase": false, "constructor": true}, {"identifier": "doReadBytesFromJAR", "parameters": "(final String name)", "modifiers": "private", "return": "byte[]", "signature": "byte[] doReadBytesFromJAR(final String name)", "full_signature": "private byte[] doReadBytesFromJAR(final String name)", "class_method_signature": "StringUtils.doReadBytesFromJAR(final String name)", "testcase": false, "constructor": false}, {"identifier": "readBytesFromJAR", "parameters": "(final String name)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] readBytesFromJAR(final String name)", "full_signature": "public static byte[] readBytesFromJAR(final String name)", "class_method_signature": "StringUtils.readBytesFromJAR(final String name)", "testcase": false, "constructor": false}, {"identifier": "readStringFromJAR", "parameters": "(final String name)", "modifiers": "public static", "return": "String", "signature": "String readStringFromJAR(final String name)", "full_signature": "public static String readStringFromJAR(final String name)", "class_method_signature": "StringUtils.readStringFromJAR(final String name)", "testcase": false, "constructor": false}, {"identifier": "readStringFromJAR", "parameters": "(final String name, final String encoding)", "modifiers": "public static", "return": "String", "signature": "String readStringFromJAR(final String name, final String encoding)", "full_signature": "public static String readStringFromJAR(final String name, final String encoding)", "class_method_signature": "StringUtils.readStringFromJAR(final String name, final String encoding)", "testcase": false, "constructor": false}, {"identifier": "urlEncode", "parameters": "(final String s)", "modifiers": "public static", "return": "String", "signature": "String urlEncode(final String s)", "full_signature": "public static String urlEncode(final String s)", "class_method_signature": "StringUtils.urlEncode(final String s)", "testcase": false, "constructor": false}, {"identifier": "urlDecode", "parameters": "(final String s)", "modifiers": "public static", "return": "String", "signature": "String urlDecode(final String s)", "full_signature": "public static String urlDecode(final String s)", "class_method_signature": "StringUtils.urlDecode(final String s)", "testcase": false, "constructor": false}, {"identifier": "appendTaggedHex", "parameters": "(final int i, final StringBuffer sb)", "modifiers": "private static", "return": "void", "signature": "void appendTaggedHex(final int i, final StringBuffer sb)", "full_signature": "private static void appendTaggedHex(final int i, final StringBuffer sb)", "class_method_signature": "StringUtils.appendTaggedHex(final int i, final StringBuffer sb)", "testcase": false, "constructor": false}, {"identifier": "appendHex", "parameters": "(final int i, final StringBuffer sb)", "modifiers": "private static", "return": "void", "signature": "void appendHex(final int i, final StringBuffer sb)", "full_signature": "private static void appendHex(final int i, final StringBuffer sb)", "class_method_signature": "StringUtils.appendHex(final int i, final StringBuffer sb)", "testcase": false, "constructor": false}, {"identifier": "hexStringToString", "parameters": "(final String s)", "modifiers": "public static", "return": "String", "signature": "String hexStringToString(final String s)", "full_signature": "public static String hexStringToString(final String s)", "class_method_signature": "StringUtils.hexStringToString(final String s)", "testcase": false, "constructor": false}, {"identifier": "stringToHexString", "parameters": "(final String s)", "modifiers": "public static", "return": "String", "signature": "String stringToHexString(final String s)", "full_signature": "public static String stringToHexString(final String s)", "class_method_signature": "StringUtils.stringToHexString(final String s)", "testcase": false, "constructor": false}, {"identifier": "byteArrayToHexString", "parameters": "(final byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String byteArrayToHexString(final byte[] bytes)", "full_signature": "public static String byteArrayToHexString(final byte[] bytes)", "class_method_signature": "StringUtils.byteArrayToHexString(final byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "hexStringToByteArray", "parameters": "(final String s)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] hexStringToByteArray(final String s)", "full_signature": "public static byte[] hexStringToByteArray(final String s)", "class_method_signature": "StringUtils.hexStringToByteArray(final String s)", "testcase": false, "constructor": false}], "file": "TantalumCore/src/main/java/org/tantalum/util/StringUtils.java"}, "focal_method": {"identifier": "urlEncode", "parameters": "(final String s)", "modifiers": "public static", "return": "String", "body": "public static String urlEncode(final String s) throws IOException {\n        if (s == null) {\n            throw new NullPointerException(\"Can not urlEncode null string\");\n        }\n        if (s.length() == 0) {\n            return s;\n        }\n\n        final ByteArrayInputStream bIn;\n        final StringBuffer sb = new StringBuffer((s.length() * 5) / 4); //return value\n        {\n            final ByteArrayOutputStream bOut = new ByteArrayOutputStream((s.length() * 3) / 2);\n            final DataOutputStream dOut = new DataOutputStream(bOut);\n            dOut.writeUTF(s);\n            bIn = new ByteArrayInputStream(bOut.toByteArray());\n            dOut.close();\n        }\n        bIn.read(); // Initial bytes unicode read hack\n        bIn.read();\n        int c;\n        while ((c = bIn.read()) >= 0) {\n            if (c == ' ') {\n                sb.append('+');\n            } else if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c == '.' || c == '-'\n                    || c == '*' || c == '_') {\n                sb.append((char) c);\n            } else {\n                appendTaggedHex(c, sb);\n                if (c >= 128) {\n                    appendTaggedHex(bIn.read(), sb);\n                    if (c >= 224) {\n                        appendTaggedHex(bIn.read(), sb);\n                        // Java UTF-8 encoding modifies the standard- it is not so easy to encode 4-byte UTF-8 characters\n//                        if (c >= 240) {\n//                            appendTaggedHex(bIn.read(), sb);\n//                        }\n                    }\n                }\n            }\n        }\n\n        return sb.toString();\n    }", "signature": "String urlEncode(final String s)", "full_signature": "public static String urlEncode(final String s)", "class_method_signature": "StringUtils.urlEncode(final String s)", "testcase": false, "constructor": false, "invocations": ["length", "length", "length", "writeUTF", "toByteArray", "close", "read", "read", "read", "append", "append", "appendTaggedHex", "appendTaggedHex", "read", "appendTaggedHex", "read", "toString"]}, "repository": {"repo_id": 8648747, "url": "https://github.com/TantalumMobile/Tantalum", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 13, "size": 116403, "license": "licensed"}}