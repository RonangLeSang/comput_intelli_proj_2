{"test_class": {"identifier": "DateDisplayTest", "superclass": "extends TapestryTestCase", "interfaces": "", "fields": [], "file": "tawus-addons/src/test/java/com/googlecode/tawus/addons/components/DateDisplayTest.java"}, "test_case": {"identifier": "test_get_style_works_for_patterns", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void test_get_style_works_for_patterns()\n   {\n      Locale locale = defaultLocale();\n      String pattern = \"dd/mm/yyyy\";\n      DateDisplay component = new DateDisplay(pattern, new Date(), locale);\n      \n      DateFormat dateFormat = component.getDateFormat();\n      \n      assertEquals(dateFormat, new SimpleDateFormat(pattern, locale));\n   }", "signature": "void test_get_style_works_for_patterns()", "full_signature": "@Test public void test_get_style_works_for_patterns()", "class_method_signature": "DateDisplayTest.test_get_style_works_for_patterns()", "testcase": true, "constructor": false, "invocations": ["defaultLocale", "getDateFormat", "assertEquals"]}, "focal_class": {"identifier": "DateDisplay", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Parameter(required = true)\n   private Date value;", "modifier": "@Parameter(required = true)\n   private", "type": "Date", "declarator": "value", "var_name": "value"}, {"original_string": "@Parameter(value = \"medium\", allowNull = false, defaultPrefix = BindingConstants.LITERAL)\n   private String format;", "modifier": "@Parameter(value = \"medium\", allowNull = false, defaultPrefix = BindingConstants.LITERAL)\n   private", "type": "String", "declarator": "format", "var_name": "format"}, {"original_string": "@Inject\n   private Locale locale;", "modifier": "@Inject\n   private", "type": "Locale", "declarator": "locale", "var_name": "locale"}, {"original_string": "@Inject\n   private ComponentResources resources;", "modifier": "@Inject\n   private", "type": "ComponentResources", "declarator": "resources", "var_name": "resources"}], "methods": [{"identifier": "DateDisplay", "parameters": "()", "modifiers": "public", "return": "", "signature": " DateDisplay()", "full_signature": "public  DateDisplay()", "class_method_signature": "DateDisplay.DateDisplay()", "testcase": false, "constructor": true}, {"identifier": "DateDisplay", "parameters": "(String format, Date value, Locale locale)", "modifiers": "", "return": "", "signature": " DateDisplay(String format, Date value, Locale locale)", "full_signature": "  DateDisplay(String format, Date value, Locale locale)", "class_method_signature": "DateDisplay.DateDisplay(String format, Date value, Locale locale)", "testcase": false, "constructor": true}, {"identifier": "beginRender", "parameters": "(MarkupWriter writer)", "modifiers": "", "return": "boolean", "signature": "boolean beginRender(MarkupWriter writer)", "full_signature": " boolean beginRender(MarkupWriter writer)", "class_method_signature": "DateDisplay.beginRender(MarkupWriter writer)", "testcase": false, "constructor": false}, {"identifier": "isSuffixPresent", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isSuffixPresent()", "full_signature": "private boolean isSuffixPresent()", "class_method_signature": "DateDisplay.isSuffixPresent()", "testcase": false, "constructor": false}, {"identifier": "formatWithoutSuffix", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String formatWithoutSuffix()", "full_signature": "private String formatWithoutSuffix()", "class_method_signature": "DateDisplay.formatWithoutSuffix()", "testcase": false, "constructor": false}, {"identifier": "getDateFormat", "parameters": "()", "modifiers": "", "return": "DateFormat", "signature": "DateFormat getDateFormat()", "full_signature": " DateFormat getDateFormat()", "class_method_signature": "DateDisplay.getDateFormat()", "testcase": false, "constructor": false}, {"identifier": "getStyle", "parameters": "(String style)", "modifiers": "", "return": "int", "signature": "int getStyle(String style)", "full_signature": " int getStyle(String style)", "class_method_signature": "DateDisplay.getStyle(String style)", "testcase": false, "constructor": false}], "file": "tawus-addons/src/main/java/com/googlecode/tawus/addons/components/DateDisplay.java"}, "focal_method": {"identifier": "getDateFormat", "parameters": "()", "modifiers": "", "return": "DateFormat", "body": "DateFormat getDateFormat()\n   {\n      int style = getStyle(isSuffixPresent() ? formatWithoutSuffix() :format);\n      \n      DateFormat dateFormat;\n      if(style < 0)\n      {\n         //Suffix has no significance\n         return new SimpleDateFormat(format, locale);\n      }\n\n      if(format.endsWith(\"_t\"))\n      {\n         dateFormat = DateFormat.getTimeInstance(style, locale);\n      }\n      else if(format.endsWith(\"_dt\"))\n      {\n         dateFormat = DateFormat.getDateTimeInstance(style, style, locale);\n      }\n      else\n      {\n         dateFormat = DateFormat.getDateInstance(style, locale);\n      }\n      \n      return dateFormat;\n   }", "signature": "DateFormat getDateFormat()", "full_signature": " DateFormat getDateFormat()", "class_method_signature": "DateDisplay.getDateFormat()", "testcase": false, "constructor": false, "invocations": ["getStyle", "isSuffixPresent", "formatWithoutSuffix", "endsWith", "getTimeInstance", "endsWith", "getDateTimeInstance", "getDateInstance"]}, "repository": {"repo_id": 1956196, "url": "https://github.com/tawus/tawus", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 19, "size": 858, "license": "licensed"}}