{"test_class": {"identifier": "CalvalusDataInputsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DUMMY_REMOTE_USER = \"dummyRemoteUser\";", "modifier": "private static final", "type": "String", "declarator": "DUMMY_REMOTE_USER = \"dummyRemoteUser\"", "var_name": "DUMMY_REMOTE_USER"}, {"original_string": "private static final String DUMMY_REMOTE_REF = \"1738ad7b-534e-4aca-9861-b26fb9c0f983\";", "modifier": "private static final", "type": "String", "declarator": "DUMMY_REMOTE_REF = \"1738ad7b-534e-4aca-9861-b26fb9c0f983\"", "var_name": "DUMMY_REMOTE_REF"}, {"original_string": "private static final String[][] FEATURES = new String[][] {\n        new String[] { \"attr1\", \"attr2\", \"attr3\" },\n        new String[] { \"value1\", \"value1\", \"value3\" },\n        new String[] { \"value1\", \"value2\", \"value3\" },\n        new String[] { \"value1\", \"value3\", \"value2\" }\n    };", "modifier": "private static final", "type": "String[][]", "declarator": "FEATURES = new String[][] {\n        new String[] { \"attr1\", \"attr2\", \"attr3\" },\n        new String[] { \"value1\", \"value1\", \"value3\" },\n        new String[] { \"value1\", \"value2\", \"value3\" },\n        new String[] { \"value1\", \"value3\", \"value2\" }\n    }", "var_name": "FEATURES"}, {"original_string": "private ExecuteRequestExtractor mockExecuteRequestExtractor;", "modifier": "private", "type": "ExecuteRequestExtractor", "declarator": "mockExecuteRequestExtractor", "var_name": "mockExecuteRequestExtractor"}, {"original_string": "private CalvalusProcessor mockCalvalusProcessor;", "modifier": "private", "type": "CalvalusProcessor", "declarator": "mockCalvalusProcessor", "var_name": "mockCalvalusProcessor"}, {"original_string": "private ProductSet[] productSets;", "modifier": "private", "type": "ProductSet[]", "declarator": "productSets", "var_name": "productSets"}, {"original_string": "private CalvalusDataInputs calvalusDataInputs;", "modifier": "private", "type": "CalvalusDataInputs", "declarator": "calvalusDataInputs", "var_name": "calvalusDataInputs"}], "file": "calvalus-wps-impl/src/test/java/com/bc/calvalus/wps/calvalusfacade/CalvalusDataInputsTest.java"}, "test_case": {"identifier": "canTransformProcessorParameters", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void canTransformProcessorParameters() throws Exception {\n        Map<String, String> mockInputMapRaw = getProcessorParametersRawMap();\n        when(mockExecuteRequestExtractor.getInputParametersMapRaw()).thenReturn(mockInputMapRaw);\n        ParameterDescriptor[] mockParameterDescriptors = getMockParameterDescriptorArray();\n        when(mockCalvalusProcessor.getParameterDescriptors()).thenReturn(mockParameterDescriptors);\n        CalvalusFacade mockCalvalusFacade = getMockCalvalusFacade();\n\n        calvalusDataInputs = new CalvalusDataInputs(mockExecuteRequestExtractor, mockCalvalusProcessor, productSets, mockCalvalusFacade);\n\n        assertThat(calvalusDataInputs.getValue(\"processorParameters\"), equalTo(\"<parameters>\\n\" +\n                                                                                       \"<doAtmosphericCorrection>true</doAtmosphericCorrection>\\n\" +\n                                                                                       \"<doSmileCorrection>false</doSmileCorrection>\\n\" +\n                                                                                       \"<outputNormReflec>true</outputNormReflec>\\n\" +\n                                                                                       \"</parameters>\"));\n    }", "signature": "void canTransformProcessorParameters()", "full_signature": "@Test public void canTransformProcessorParameters()", "class_method_signature": "CalvalusDataInputsTest.canTransformProcessorParameters()", "testcase": true, "constructor": false, "invocations": ["getProcessorParametersRawMap", "thenReturn", "when", "getInputParametersMapRaw", "getMockParameterDescriptorArray", "thenReturn", "when", "getParameterDescriptors", "getMockCalvalusFacade", "assertThat", "getValue", "equalTo"]}, "focal_class": {"identifier": "CalvalusDataInputs", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final long MIN_DATE = 1451606400000L;", "modifier": "public static final", "type": "long", "declarator": "MIN_DATE = 1451606400000L", "var_name": "MIN_DATE"}, {"original_string": "public static final long MAX_DATE = 1483228800000L;", "modifier": "public static final", "type": "long", "declarator": "MAX_DATE = 1483228800000L", "var_name": "MAX_DATE"}, {"original_string": "public static SimpleDateFormat ISO_DATE_FORMAT = DateUtils.createDateFormat(\"yyyy-MM-dd\");", "modifier": "public static", "type": "SimpleDateFormat", "declarator": "ISO_DATE_FORMAT = DateUtils.createDateFormat(\"yyyy-MM-dd\")", "var_name": "ISO_DATE_FORMAT"}, {"original_string": "private final Map<String, String> inputMapRaw;", "modifier": "private final", "type": "Map<String, String>", "declarator": "inputMapRaw", "var_name": "inputMapRaw"}, {"original_string": "private final Map<String, String> inputMapFormatted;", "modifier": "private final", "type": "Map<String, String>", "declarator": "inputMapFormatted", "var_name": "inputMapFormatted"}], "methods": [{"identifier": "CalvalusDataInputs", "parameters": "(ExecuteRequestExtractor executeRequestExtractor,\n                       WpsProcess calvalusProcessor,\n                       ProductSet[] productSets,\n                       CalvalusFacade calvalusFacade)", "modifiers": "", "return": "", "signature": " CalvalusDataInputs(ExecuteRequestExtractor executeRequestExtractor,\n                       WpsProcess calvalusProcessor,\n                       ProductSet[] productSets,\n                       CalvalusFacade calvalusFacade)", "full_signature": "  CalvalusDataInputs(ExecuteRequestExtractor executeRequestExtractor,\n                       WpsProcess calvalusProcessor,\n                       ProductSet[] productSets,\n                       CalvalusFacade calvalusFacade)", "class_method_signature": "CalvalusDataInputs.CalvalusDataInputs(ExecuteRequestExtractor executeRequestExtractor,\n                       WpsProcess calvalusProcessor,\n                       ProductSet[] productSets,\n                       CalvalusFacade calvalusFacade)", "testcase": false, "constructor": true}, {"identifier": "getValue", "parameters": "(String parameterName)", "modifiers": "public", "return": "String", "signature": "String getValue(String parameterName)", "full_signature": "public String getValue(String parameterName)", "class_method_signature": "CalvalusDataInputs.getValue(String parameterName)", "testcase": false, "constructor": false}, {"identifier": "getInputMapFormatted", "parameters": "()", "modifiers": "", "return": "Map<String, String>", "signature": "Map<String, String> getInputMapFormatted()", "full_signature": " Map<String, String> getInputMapFormatted()", "class_method_signature": "CalvalusDataInputs.getInputMapFormatted()", "testcase": false, "constructor": false}, {"identifier": "extractL3Parameters", "parameters": "(WpsProcess processor)", "modifiers": "private", "return": "boolean", "signature": "boolean extractL3Parameters(WpsProcess processor)", "full_signature": "private boolean extractL3Parameters(WpsProcess processor)", "class_method_signature": "CalvalusDataInputs.extractL3Parameters(WpsProcess processor)", "testcase": false, "constructor": false}, {"identifier": "extractRAParamters", "parameters": "(WpsProcess processor, CalvalusFacade calvalusFacade)", "modifiers": "private", "return": "boolean", "signature": "boolean extractRAParamters(WpsProcess processor, CalvalusFacade calvalusFacade)", "full_signature": "private boolean extractRAParamters(WpsProcess processor, CalvalusFacade calvalusFacade)", "class_method_signature": "CalvalusDataInputs.extractRAParamters(WpsProcess processor, CalvalusFacade calvalusFacade)", "testcase": false, "constructor": false}, {"identifier": "findBandConfig", "parameters": "(String bandName, RAConfig raConfig)", "modifiers": "private", "return": "RAConfig.BandConfig", "signature": "RAConfig.BandConfig findBandConfig(String bandName, RAConfig raConfig)", "full_signature": "private RAConfig.BandConfig findBandConfig(String bandName, RAConfig raConfig)", "class_method_signature": "CalvalusDataInputs.findBandConfig(String bandName, RAConfig raConfig)", "testcase": false, "constructor": false}, {"identifier": "determineMostDistinctiveAttribute", "parameters": "(String[][] regionAttributeValues)", "modifiers": "static", "return": "String", "signature": "String determineMostDistinctiveAttribute(String[][] regionAttributeValues)", "full_signature": "static String determineMostDistinctiveAttribute(String[][] regionAttributeValues)", "class_method_signature": "CalvalusDataInputs.determineMostDistinctiveAttribute(String[][] regionAttributeValues)", "testcase": false, "constructor": false}, {"identifier": "getSizeOf", "parameters": "(String[][] regionAttributeValues, int attributeIndex)", "modifiers": "static", "return": "int", "signature": "int getSizeOf(String[][] regionAttributeValues, int attributeIndex)", "full_signature": "static int getSizeOf(String[][] regionAttributeValues, int attributeIndex)", "class_method_signature": "CalvalusDataInputs.getSizeOf(String[][] regionAttributeValues, int attributeIndex)", "testcase": false, "constructor": false}, {"identifier": "extractProductionParameters", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void extractProductionParameters()", "full_signature": "private void extractProductionParameters()", "class_method_signature": "CalvalusDataInputs.extractProductionParameters()", "testcase": false, "constructor": false}, {"identifier": "extractProductionInfoParameters", "parameters": "(CalvalusProcessor calvalusProcessor)", "modifiers": "private", "return": "void", "signature": "void extractProductionInfoParameters(CalvalusProcessor calvalusProcessor)", "full_signature": "private void extractProductionInfoParameters(CalvalusProcessor calvalusProcessor)", "class_method_signature": "CalvalusDataInputs.extractProductionInfoParameters(CalvalusProcessor calvalusProcessor)", "testcase": false, "constructor": false}, {"identifier": "extractProcessorInfoParameters", "parameters": "(CalvalusProcessor calvalusProcessor)", "modifiers": "private", "return": "void", "signature": "void extractProcessorInfoParameters(CalvalusProcessor calvalusProcessor)", "full_signature": "private void extractProcessorInfoParameters(CalvalusProcessor calvalusProcessor)", "class_method_signature": "CalvalusDataInputs.extractProcessorInfoParameters(CalvalusProcessor calvalusProcessor)", "testcase": false, "constructor": false}, {"identifier": "extractProductSetParameters", "parameters": "(ProductSet[] productSets, CalvalusProcessor calvalusProcessor)", "modifiers": "private", "return": "void", "signature": "void extractProductSetParameters(ProductSet[] productSets, CalvalusProcessor calvalusProcessor)", "full_signature": "private void extractProductSetParameters(ProductSet[] productSets, CalvalusProcessor calvalusProcessor)", "class_method_signature": "CalvalusDataInputs.extractProductSetParameters(ProductSet[] productSets, CalvalusProcessor calvalusProcessor)", "testcase": false, "constructor": false}, {"identifier": "putBands", "parameters": "(ProductSet productSet)", "modifiers": "private", "return": "void", "signature": "void putBands(ProductSet productSet)", "full_signature": "private void putBands(ProductSet productSet)", "class_method_signature": "CalvalusDataInputs.putBands(ProductSet productSet)", "testcase": false, "constructor": false}, {"identifier": "putDates", "parameters": "(ProductSet productSet)", "modifiers": "private", "return": "void", "signature": "void putDates(ProductSet productSet)", "full_signature": "private void putDates(ProductSet productSet)", "class_method_signature": "CalvalusDataInputs.putDates(ProductSet productSet)", "testcase": false, "constructor": false}, {"identifier": "putProductPath", "parameters": "(ProductSet productSet)", "modifiers": "private", "return": "void", "signature": "void putProductPath(ProductSet productSet)", "full_signature": "private void putProductPath(ProductSet productSet)", "class_method_signature": "CalvalusDataInputs.putProductPath(ProductSet productSet)", "testcase": false, "constructor": false}, {"identifier": "transformProcessorParameters", "parameters": "(CalvalusProcessor calvalusProcessor)", "modifiers": "private", "return": "void", "signature": "void transformProcessorParameters(CalvalusProcessor calvalusProcessor)", "full_signature": "private void transformProcessorParameters(CalvalusProcessor calvalusProcessor)", "class_method_signature": "CalvalusDataInputs.transformProcessorParameters(CalvalusProcessor calvalusProcessor)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "CalvalusDataInputs.toString()", "testcase": false, "constructor": false}], "file": "calvalus-wps-impl/src/main/java/com/bc/calvalus/wps/calvalusfacade/CalvalusDataInputs.java"}, "focal_method": {"identifier": "getValue", "parameters": "(String parameterName)", "modifiers": "public", "return": "String", "body": "public String getValue(String parameterName) {\n        return inputMapFormatted.get(parameterName);\n    }", "signature": "String getValue(String parameterName)", "full_signature": "public String getValue(String parameterName)", "class_method_signature": "CalvalusDataInputs.getValue(String parameterName)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 542927, "url": "https://github.com/bcdev/calvalus2", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 12, "size": 126408, "license": "licensed"}}