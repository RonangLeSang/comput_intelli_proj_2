{"test_class": {"identifier": "BudgetFileTemplateServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  BudgetFileTemplateRepository budgetFileTemplateRepository;", "modifier": "@Mock", "type": "BudgetFileTemplateRepository", "declarator": "budgetFileTemplateRepository", "var_name": "budgetFileTemplateRepository"}, {"original_string": "@InjectMocks\n  BudgetFileTemplateService budgetFileTemplateService;", "modifier": "@InjectMocks", "type": "BudgetFileTemplateService", "declarator": "budgetFileTemplateService", "var_name": "budgetFileTemplateService"}], "file": "modules/core/src/test/java/org/openlmis/core/service/BudgetFileTemplateServiceTest.java"}, "test_case": {"identifier": "shouldUpdateBudgetFileTemplate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldUpdateBudgetFileTemplate() {\n\n    EDIConfiguration ediConf = new EDIConfiguration();\n    EDIFileColumn ediFileColumn1 = new EDIFileColumn(\"column1\", \"Column 1\", true, true, 1, null);\n    EDIFileColumn ediFileColumn2 = new EDIFileColumn(\"column2\", \"Column 2\", true, true, 2, null);\n    List<EDIFileColumn> columns = asList(ediFileColumn1, ediFileColumn2);\n    EDIFileTemplate ediFileTemplate = new EDIFileTemplate(ediConf, columns);\n\n    budgetFileTemplateService.update(ediFileTemplate);\n\n    verify(budgetFileTemplateRepository).updateBudgetConfiguration(ediConf);\n    verify(budgetFileTemplateRepository).update(ediFileColumn1);\n    verify(budgetFileTemplateRepository).update(ediFileColumn2);\n  }", "signature": "void shouldUpdateBudgetFileTemplate()", "full_signature": "@Test public void shouldUpdateBudgetFileTemplate()", "class_method_signature": "BudgetFileTemplateServiceTest.shouldUpdateBudgetFileTemplate()", "testcase": true, "constructor": false, "invocations": ["asList", "update", "updateBudgetConfiguration", "verify", "update", "verify", "update", "verify"]}, "focal_class": {"identifier": "BudgetFileTemplateService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  private BudgetFileTemplateRepository budgetFileTemplateRepository;", "modifier": "@Autowired\n  private", "type": "BudgetFileTemplateRepository", "declarator": "budgetFileTemplateRepository", "var_name": "budgetFileTemplateRepository"}], "methods": [{"identifier": "update", "parameters": "(EDIFileTemplate ediFileTemplate)", "modifiers": "@Transactional public", "return": "void", "signature": "void update(EDIFileTemplate ediFileTemplate)", "full_signature": "@Transactional public void update(EDIFileTemplate ediFileTemplate)", "class_method_signature": "BudgetFileTemplateService.update(EDIFileTemplate ediFileTemplate)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "public", "return": "EDIFileTemplate", "signature": "EDIFileTemplate get()", "full_signature": "public EDIFileTemplate get()", "class_method_signature": "BudgetFileTemplateService.get()", "testcase": false, "constructor": false}], "file": "modules/core/src/main/java/org/openlmis/core/service/BudgetFileTemplateService.java"}, "focal_method": {"identifier": "update", "parameters": "(EDIFileTemplate ediFileTemplate)", "modifiers": "@Transactional public", "return": "void", "body": "@Transactional\n  public void update(EDIFileTemplate ediFileTemplate) {\n    budgetFileTemplateRepository.updateBudgetConfiguration(ediFileTemplate.getConfiguration());\n\n    for (EDIFileColumn ediFileColumn : ediFileTemplate.getColumns()) {\n      budgetFileTemplateRepository.update(ediFileColumn);\n    }\n  }", "signature": "void update(EDIFileTemplate ediFileTemplate)", "full_signature": "@Transactional public void update(EDIFileTemplate ediFileTemplate)", "class_method_signature": "BudgetFileTemplateService.update(EDIFileTemplate ediFileTemplate)", "testcase": false, "constructor": false, "invocations": ["updateBudgetConfiguration", "getConfiguration", "getColumns", "update"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}