{"test_class": {"identifier": "RestRequisitionServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "@Mock\n  RequisitionService requisitionService;", "modifier": "@Mock", "type": "RequisitionService", "declarator": "requisitionService", "var_name": "requisitionService"}, {"original_string": "@Mock\n  UserService userService;", "modifier": "@Mock", "type": "UserService", "declarator": "userService", "var_name": "userService"}, {"original_string": "@Mock\n  FacilityApprovedProductService facilityApprovedProductService;", "modifier": "@Mock", "type": "FacilityApprovedProductService", "declarator": "facilityApprovedProductService", "var_name": "facilityApprovedProductService"}, {"original_string": "@InjectMocks\n  RestRequisitionService service;", "modifier": "@InjectMocks", "type": "RestRequisitionService", "declarator": "service", "var_name": "service"}, {"original_string": "Rnr requisition;", "modifier": "", "type": "Rnr", "declarator": "requisition", "var_name": "requisition"}, {"original_string": "Report report;", "modifier": "", "type": "Report", "declarator": "report", "var_name": "report"}, {"original_string": "User user;", "modifier": "", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "byte[] encodedCredentialsBytes;", "modifier": "", "type": "byte[]", "declarator": "encodedCredentialsBytes", "var_name": "encodedCredentialsBytes"}, {"original_string": "String validProductCode;", "modifier": "", "type": "String", "declarator": "validProductCode", "var_name": "validProductCode"}, {"original_string": "RnrLineItem rnrLineItem;", "modifier": "", "type": "RnrLineItem", "declarator": "rnrLineItem", "var_name": "rnrLineItem"}, {"original_string": "@Mock\n  private OrderService orderService;", "modifier": "@Mock\n  private", "type": "OrderService", "declarator": "orderService", "var_name": "orderService"}, {"original_string": "@Mock\n  private FacilityService facilityService;", "modifier": "@Mock\n  private", "type": "FacilityService", "declarator": "facilityService", "var_name": "facilityService"}, {"original_string": "@Mock\n  private RnrTemplateService rnrTemplateService;", "modifier": "@Mock\n  private", "type": "RnrTemplateService", "declarator": "rnrTemplateService", "var_name": "rnrTemplateService"}, {"original_string": "@Mock\n  private RestRequisitionCalculator restRequisitionCalculator;", "modifier": "@Mock\n  private", "type": "RestRequisitionCalculator", "declarator": "restRequisitionCalculator", "var_name": "restRequisitionCalculator"}, {"original_string": "@Mock\n  private ProcessingPeriodService periodService;", "modifier": "@Mock\n  private", "type": "ProcessingPeriodService", "declarator": "periodService", "var_name": "periodService"}, {"original_string": "@Mock\n  private ProgramService programService;", "modifier": "@Mock\n  private", "type": "ProgramService", "declarator": "programService", "var_name": "programService"}, {"original_string": "@Mock\n  private ProductService productService;", "modifier": "@Mock\n  private", "type": "ProductService", "declarator": "productService", "var_name": "productService"}, {"original_string": "private Facility facility;", "modifier": "private", "type": "Facility", "declarator": "facility", "var_name": "facility"}], "file": "modules/rest-api/src/test/java/org/openlmis/restapi/service/RestRequisitionServiceTest.java"}, "test_case": {"identifier": "shouldCopyVisibleUserInputAndNonNullFieldsFromReportToRnrLineItem", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldCopyVisibleUserInputAndNonNullFieldsFromReportToRnrLineItem() throws Exception {\n    Program rnrProgram = new Program(PROGRAM_ID);\n    RnrColumn stockInHandColumn = createRnrColumn(\"stockInHand\", true, RnRColumnSource.USER_INPUT);\n    ProgramRnrTemplate template = new ProgramRnrTemplate(asList(stockInHandColumn));\n    when(rnrTemplateService.fetchProgramTemplateForRequisition(PROGRAM_ID)).thenReturn(template);\n\n    RnrLineItem reportedLineItem = make(a(defaultRnrLineItem, with(productCode, \"P10\"), with(stockInHand, 100)));\n    RnrLineItem initiatedLineItem = make(a(defaultRnrLineItem, with(productCode, \"P10\"), with(stockInHand, 0)));\n\n    report.setProducts(asList(reportedLineItem));\n\n    when(programService.getValidatedProgramByCode(report.getProgramCode())).thenReturn(rnrProgram);\n\n    Facility reportFacility = make(a(defaultFacility, with(virtualFacility, true)));\n    when(facilityService.getOperativeFacilityByCode(report.getAgentCode())).thenReturn(reportFacility);\n\n    Rnr rnr = make(a(RequisitionBuilder.defaultRequisition, with\n            (RequisitionBuilder.facility,\n                    reportFacility), with(RequisitionBuilder.program, rnrProgram)));\n    rnr.setFullSupplyLineItems(asList(initiatedLineItem));\n\n    when(requisitionService.initiate(reportFacility, rnrProgram, 3l, false, null)).thenReturn(rnr);\n\n    service.submitReport(report, 3l);\n\n    assertThat(rnr.getFullSupplyLineItems().get(0).getStockInHand(), is(100));\n\n  }", "signature": "void shouldCopyVisibleUserInputAndNonNullFieldsFromReportToRnrLineItem()", "full_signature": "@Test public void shouldCopyVisibleUserInputAndNonNullFieldsFromReportToRnrLineItem()", "class_method_signature": "RestRequisitionServiceTest.shouldCopyVisibleUserInputAndNonNullFieldsFromReportToRnrLineItem()", "testcase": true, "constructor": false, "invocations": ["createRnrColumn", "asList", "thenReturn", "when", "fetchProgramTemplateForRequisition", "make", "a", "with", "with", "make", "a", "with", "with", "setProducts", "asList", "thenReturn", "when", "getValidatedProgramByCode", "getProgramCode", "make", "a", "with", "thenReturn", "when", "getOperativeFacilityByCode", "getAgentCode", "make", "a", "with", "with", "setFullSupplyLineItems", "asList", "thenReturn", "when", "initiate", "submitReport", "assertThat", "getStockInHand", "get", "getFullSupplyLineItems", "is"]}, "focal_class": {"identifier": "RestRequisitionService", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final boolean EMERGENCY = false;", "modifier": "public static final", "type": "boolean", "declarator": "EMERGENCY = false", "var_name": "EMERGENCY"}, {"original_string": "private static final Logger logger = Logger.getLogger(RestRequisitionService.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(RestRequisitionService.class)", "var_name": "logger"}, {"original_string": "@Autowired\n  private RequisitionService requisitionService;", "modifier": "@Autowired\n  private", "type": "RequisitionService", "declarator": "requisitionService", "var_name": "requisitionService"}, {"original_string": "@Autowired\n  private OrderService orderService;", "modifier": "@Autowired\n  private", "type": "OrderService", "declarator": "orderService", "var_name": "orderService"}, {"original_string": "@Autowired\n  private FacilityService facilityService;", "modifier": "@Autowired\n  private", "type": "FacilityService", "declarator": "facilityService", "var_name": "facilityService"}, {"original_string": "@Autowired\n  private ProgramService programService;", "modifier": "@Autowired\n  private", "type": "ProgramService", "declarator": "programService", "var_name": "programService"}, {"original_string": "@Autowired\n  private RnrTemplateService rnrTemplateService;", "modifier": "@Autowired\n  private", "type": "RnrTemplateService", "declarator": "rnrTemplateService", "var_name": "rnrTemplateService"}, {"original_string": "@Autowired\n  private RestRequisitionCalculator restRequisitionCalculator;", "modifier": "@Autowired\n  private", "type": "RestRequisitionCalculator", "declarator": "restRequisitionCalculator", "var_name": "restRequisitionCalculator"}, {"original_string": "@Autowired\n  private ProcessingPeriodService processingPeriodService;", "modifier": "@Autowired\n  private", "type": "ProcessingPeriodService", "declarator": "processingPeriodService", "var_name": "processingPeriodService"}, {"original_string": "@Autowired\n  private FacilityApprovedProductService facilityApprovedProductService;", "modifier": "@Autowired\n  private", "type": "FacilityApprovedProductService", "declarator": "facilityApprovedProductService", "var_name": "facilityApprovedProductService"}, {"original_string": "private List<FacilityTypeApprovedProduct> nonFullSupplyFacilityApprovedProductByFacilityAndProgram;", "modifier": "private", "type": "List<FacilityTypeApprovedProduct>", "declarator": "nonFullSupplyFacilityApprovedProductByFacilityAndProgram", "var_name": "nonFullSupplyFacilityApprovedProductByFacilityAndProgram"}], "methods": [{"identifier": "submitReport", "parameters": "(Report report, Long userId)", "modifiers": "@Transactional public", "return": "Rnr", "signature": "Rnr submitReport(Report report, Long userId)", "full_signature": "@Transactional public Rnr submitReport(Report report, Long userId)", "class_method_signature": "RestRequisitionService.submitReport(Report report, Long userId)", "testcase": false, "constructor": false}, {"identifier": "updateClientFields", "parameters": "(Report report, Rnr rnr)", "modifiers": "private", "return": "void", "signature": "void updateClientFields(Report report, Rnr rnr)", "full_signature": "private void updateClientFields(Report report, Rnr rnr)", "class_method_signature": "RestRequisitionService.updateClientFields(Report report, Rnr rnr)", "testcase": false, "constructor": false}, {"identifier": "submitSdpReport", "parameters": "(Report report, Long userId)", "modifiers": "@Transactional public", "return": "Rnr", "signature": "Rnr submitSdpReport(Report report, Long userId)", "full_signature": "@Transactional public Rnr submitSdpReport(Report report, Long userId)", "class_method_signature": "RestRequisitionService.submitSdpReport(Report report, Long userId)", "testcase": false, "constructor": false}, {"identifier": "setNonFullSupplyCreatorFields", "parameters": "(final RnrLineItem lineItem)", "modifiers": "private", "return": "void", "signature": "void setNonFullSupplyCreatorFields(final RnrLineItem lineItem)", "full_signature": "private void setNonFullSupplyCreatorFields(final RnrLineItem lineItem)", "class_method_signature": "RestRequisitionService.setNonFullSupplyCreatorFields(final RnrLineItem lineItem)", "testcase": false, "constructor": false}, {"identifier": "copyRegimens", "parameters": "(Rnr rnr, Report report)", "modifiers": "private", "return": "void", "signature": "void copyRegimens(Rnr rnr, Report report)", "full_signature": "private void copyRegimens(Rnr rnr, Report report)", "class_method_signature": "RestRequisitionService.copyRegimens(Rnr rnr, Report report)", "testcase": false, "constructor": false}, {"identifier": "insertPatientQuantificationLineItems", "parameters": "(Report report, Rnr rnr)", "modifiers": "private", "return": "void", "signature": "void insertPatientQuantificationLineItems(Report report, Rnr rnr)", "full_signature": "private void insertPatientQuantificationLineItems(Report report, Rnr rnr)", "class_method_signature": "RestRequisitionService.insertPatientQuantificationLineItems(Report report, Rnr rnr)", "testcase": false, "constructor": false}, {"identifier": "insertRnrSignatures", "parameters": "(Report report, Rnr rnr, final Long userId)", "modifiers": "private", "return": "void", "signature": "void insertRnrSignatures(Report report, Rnr rnr, final Long userId)", "full_signature": "private void insertRnrSignatures(Report report, Rnr rnr, final Long userId)", "class_method_signature": "RestRequisitionService.insertRnrSignatures(Report report, Rnr rnr, final Long userId)", "testcase": false, "constructor": false}, {"identifier": "approve", "parameters": "(Report report, Long requisitionId, Long userId)", "modifiers": "@Transactional public", "return": "void", "signature": "void approve(Report report, Long requisitionId, Long userId)", "full_signature": "@Transactional public void approve(Report report, Long requisitionId, Long userId)", "class_method_signature": "RestRequisitionService.approve(Report report, Long requisitionId, Long userId)", "testcase": false, "constructor": false}, {"identifier": "getReplenishmentDetails", "parameters": "(Long id)", "modifiers": "public", "return": "ReplenishmentDTO", "signature": "ReplenishmentDTO getReplenishmentDetails(Long id)", "full_signature": "public ReplenishmentDTO getReplenishmentDetails(Long id)", "class_method_signature": "RestRequisitionService.getReplenishmentDetails(Long id)", "testcase": false, "constructor": false}, {"identifier": "markSkippedLineItems", "parameters": "(Rnr rnr, Report report)", "modifiers": "private", "return": "void", "signature": "void markSkippedLineItems(Rnr rnr, Report report)", "full_signature": "private void markSkippedLineItems(Rnr rnr, Report report)", "class_method_signature": "RestRequisitionService.markSkippedLineItems(Rnr rnr, Report report)", "testcase": false, "constructor": false}, {"identifier": "copyInto", "parameters": "(RnrLineItem savedLineItem, RnrLineItem reportedLineItem, ProgramRnrTemplate rnrTemplate)", "modifiers": "private", "return": "void", "signature": "void copyInto(RnrLineItem savedLineItem, RnrLineItem reportedLineItem, ProgramRnrTemplate rnrTemplate)", "full_signature": "private void copyInto(RnrLineItem savedLineItem, RnrLineItem reportedLineItem, ProgramRnrTemplate rnrTemplate)", "class_method_signature": "RestRequisitionService.copyInto(RnrLineItem savedLineItem, RnrLineItem reportedLineItem, ProgramRnrTemplate rnrTemplate)", "testcase": false, "constructor": false}, {"identifier": "getRequisitionsByFacility", "parameters": "(String facilityCode)", "modifiers": "public", "return": "List<Report>", "signature": "List<Report> getRequisitionsByFacility(String facilityCode)", "full_signature": "public List<Report> getRequisitionsByFacility(String facilityCode)", "class_method_signature": "RestRequisitionService.getRequisitionsByFacility(String facilityCode)", "testcase": false, "constructor": false}], "file": "modules/rest-api/src/main/java/org/openlmis/restapi/service/RestRequisitionService.java"}, "focal_method": {"identifier": "submitReport", "parameters": "(Report report, Long userId)", "modifiers": "@Transactional public", "return": "Rnr", "body": "@Transactional\n  public Rnr submitReport(Report report, Long userId) {\n    report.validate();\n\n    Facility reportingFacility = facilityService.getOperativeFacilityByCode(report.getAgentCode());\n    Program reportingProgram = programService.getValidatedProgramByCode(report.getProgramCode());\n\n    restRequisitionCalculator.validatePeriod(reportingFacility, reportingProgram);\n\n    Rnr rnr = requisitionService.initiate(reportingFacility, reportingProgram, userId, EMERGENCY, null);\n\n    restRequisitionCalculator.validateProducts(report.getProducts(), rnr);\n\n    markSkippedLineItems(rnr, report);\n\n    if (reportingFacility.getVirtualFacility())\n      restRequisitionCalculator.setDefaultValues(rnr);\n\n    copyRegimens(rnr, report);\n\n    requisitionService.save(rnr);\n\n    updateClientFields(report, rnr);\n    insertPatientQuantificationLineItems(report, rnr);\n\n    insertRnrSignatures(report, rnr, userId);\n\n    rnr = requisitionService.submit(rnr);\n\n    return requisitionService.authorize(rnr);\n  }", "signature": "Rnr submitReport(Report report, Long userId)", "full_signature": "@Transactional public Rnr submitReport(Report report, Long userId)", "class_method_signature": "RestRequisitionService.submitReport(Report report, Long userId)", "testcase": false, "constructor": false, "invocations": ["validate", "getOperativeFacilityByCode", "getAgentCode", "getValidatedProgramByCode", "getProgramCode", "validatePeriod", "initiate", "validateProducts", "getProducts", "markSkippedLineItems", "getVirtualFacility", "setDefaultValues", "copyRegimens", "save", "updateClientFields", "insertPatientQuantificationLineItems", "insertRnrSignatures", "submit", "authorize"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}