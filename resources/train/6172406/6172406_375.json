{"test_class": {"identifier": "RequisitionServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "private Facility FACILITY = new Facility(1L);", "modifier": "private", "type": "Facility", "declarator": "FACILITY = new Facility(1L)", "var_name": "FACILITY"}, {"original_string": "private Program PROGRAM = new Program(3L);", "modifier": "private", "type": "Program", "declarator": "PROGRAM = new Program(3L)", "var_name": "PROGRAM"}, {"original_string": "private ProcessingPeriod PERIOD = make(\n    a(defaultProcessingPeriod, with(ProcessingPeriodBuilder.id, 10L), with(numberOfMonths, 1)));", "modifier": "private", "type": "ProcessingPeriod", "declarator": "PERIOD = make(\n    a(defaultProcessingPeriod, with(ProcessingPeriodBuilder.id, 10L), with(numberOfMonths, 1)))", "var_name": "PERIOD"}, {"original_string": "private Long USER_ID = 1L;", "modifier": "private", "type": "Long", "declarator": "USER_ID = 1L", "var_name": "USER_ID"}, {"original_string": "private Rnr submittedRnr;", "modifier": "private", "type": "Rnr", "declarator": "submittedRnr", "var_name": "submittedRnr"}, {"original_string": "private Rnr initiatedRnr;", "modifier": "private", "type": "Rnr", "declarator": "initiatedRnr", "var_name": "initiatedRnr"}, {"original_string": "private Rnr authorizedRnr;", "modifier": "private", "type": "Rnr", "declarator": "authorizedRnr", "var_name": "authorizedRnr"}, {"original_string": "private Rnr inApprovalRnr;", "modifier": "private", "type": "Rnr", "declarator": "inApprovalRnr", "var_name": "inApprovalRnr"}, {"original_string": "private ArrayList<RnrColumn> rnrColumns;", "modifier": "private", "type": "ArrayList<RnrColumn>", "declarator": "rnrColumns", "var_name": "rnrColumns"}, {"original_string": "@Mock\n  private FacilityApprovedProductService facilityApprovedProductService;", "modifier": "@Mock\n  private", "type": "FacilityApprovedProductService", "declarator": "facilityApprovedProductService", "var_name": "facilityApprovedProductService"}, {"original_string": "@Mock\n  private RequisitionRepository requisitionRepository;", "modifier": "@Mock\n  private", "type": "RequisitionRepository", "declarator": "requisitionRepository", "var_name": "requisitionRepository"}, {"original_string": "@Mock\n  private RnrTemplateService rnrTemplateService;", "modifier": "@Mock\n  private", "type": "RnrTemplateService", "declarator": "rnrTemplateService", "var_name": "rnrTemplateService"}, {"original_string": "@Mock\n  private SupervisoryNodeService supervisoryNodeService;", "modifier": "@Mock\n  private", "type": "SupervisoryNodeService", "declarator": "supervisoryNodeService", "var_name": "supervisoryNodeService"}, {"original_string": "@Mock\n  private RoleAssignmentService roleAssignmentService;", "modifier": "@Mock\n  private", "type": "RoleAssignmentService", "declarator": "roleAssignmentService", "var_name": "roleAssignmentService"}, {"original_string": "@Mock\n  private ProgramService programService;", "modifier": "@Mock\n  private", "type": "ProgramService", "declarator": "programService", "var_name": "programService"}, {"original_string": "@Mock\n  private ProcessingScheduleService processingScheduleService;", "modifier": "@Mock\n  private", "type": "ProcessingScheduleService", "declarator": "processingScheduleService", "var_name": "processingScheduleService"}, {"original_string": "@Mock\n  private FacilityService facilityService;", "modifier": "@Mock\n  private", "type": "FacilityService", "declarator": "facilityService", "var_name": "facilityService"}, {"original_string": "@Mock\n  private SupplyLineService supplyLineService;", "modifier": "@Mock\n  private", "type": "SupplyLineService", "declarator": "supplyLineService", "var_name": "supplyLineService"}, {"original_string": "@Mock\n  private RegimenService regimenService;", "modifier": "@Mock\n  private", "type": "RegimenService", "declarator": "regimenService", "var_name": "regimenService"}, {"original_string": "@Mock\n  private RegimenColumnService regimenColumnService;", "modifier": "@Mock\n  private", "type": "RegimenColumnService", "declarator": "regimenColumnService", "var_name": "regimenColumnService"}, {"original_string": "@Mock\n  private RequisitionEventService requisitionEventService;", "modifier": "@Mock\n  private", "type": "RequisitionEventService", "declarator": "requisitionEventService", "var_name": "requisitionEventService"}, {"original_string": "@Mock\n  private RequisitionPermissionService requisitionPermissionService;", "modifier": "@Mock\n  private", "type": "RequisitionPermissionService", "declarator": "requisitionPermissionService", "var_name": "requisitionPermissionService"}, {"original_string": "@Mock\n  private StaticReferenceDataService staticReferenceDataService;", "modifier": "@Mock\n  private", "type": "StaticReferenceDataService", "declarator": "staticReferenceDataService", "var_name": "staticReferenceDataService"}, {"original_string": "@Mock\n  private UserService userService;", "modifier": "@Mock\n  private", "type": "UserService", "declarator": "userService", "var_name": "userService"}, {"original_string": "@Mock\n  private ProgramProductService programProductService;", "modifier": "@Mock\n  private", "type": "ProgramProductService", "declarator": "programProductService", "var_name": "programProductService"}, {"original_string": "@Mock\n  private MessageService messageService;", "modifier": "@Mock\n  private", "type": "MessageService", "declarator": "messageService", "var_name": "messageService"}, {"original_string": "@Mock\n  private CalculationService calculationService;", "modifier": "@Mock\n  private", "type": "CalculationService", "declarator": "calculationService", "var_name": "calculationService"}, {"original_string": "@Mock\n  private ConfigurationSettingService configurationSettingsService;", "modifier": "@Mock\n  private", "type": "ConfigurationSettingService", "declarator": "configurationSettingsService", "var_name": "configurationSettingsService"}, {"original_string": "@Mock\n  private DbMapper dbMapper;", "modifier": "@Mock\n  private", "type": "DbMapper", "declarator": "dbMapper", "var_name": "dbMapper"}, {"original_string": "@Mock\n  private BudgetLineItemService budgetLineItemService;", "modifier": "@Mock\n  private", "type": "BudgetLineItemService", "declarator": "budgetLineItemService", "var_name": "budgetLineItemService"}, {"original_string": "@Mock\n  private StatusChangeEventService statusChangeEventService;", "modifier": "@Mock\n  private", "type": "StatusChangeEventService", "declarator": "statusChangeEventService", "var_name": "statusChangeEventService"}, {"original_string": "@InjectMocks\n  private RequisitionSearchStrategyFactory requisitionSearchStrategyFactory;", "modifier": "@InjectMocks\n  private", "type": "RequisitionSearchStrategyFactory", "declarator": "requisitionSearchStrategyFactory", "var_name": "requisitionSearchStrategyFactory"}, {"original_string": "@InjectMocks\n  private RequisitionService requisitionService;", "modifier": "@InjectMocks\n  private", "type": "RequisitionService", "declarator": "requisitionService", "var_name": "requisitionService"}], "file": "modules/requisition/src/test/java/org/openlmis/rnr/service/RequisitionServiceTest.java"}, "test_case": {"identifier": "shouldNotifyStatusChangeOnAuthorizeAndSendEmailToActiveUsers", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldNotifyStatusChangeOnAuthorizeAndSendEmailToActiveUsers() throws Exception {\n    ArrayList<User> emptyList = new ArrayList<>();\n    Rnr savedRnr = getFilledSavedRequisitionWithDefaultFacilityProgramPeriod(submittedRnr, AUTHORIZE_REQUISITION);\n    ProgramRnrTemplate template = new ProgramRnrTemplate(rnrColumns);\n    when(rnrTemplateService.fetchProgramTemplate(PROGRAM.getId())).thenReturn(template);\n    doNothing().when(calculationService).perform(savedRnr, template);\n\n    when(supervisoryNodeService.getApproverFor(FACILITY, PROGRAM)).thenReturn(new User());\n    SupervisoryNode approverNode = new SupervisoryNode();\n    when(supervisoryNodeService.getFor(FACILITY, PROGRAM)).thenReturn(approverNode);\n\n    User activeUser = make(a(UserBuilder.defaultUser, with(UserBuilder.active, true)));\n    User inactiveUser = make(a(UserBuilder.defaultUser, with(UserBuilder.active, false)));\n    List<User> users = asList(activeUser, activeUser, inactiveUser);\n\n    when(savedRnr.getProgram()).thenReturn(submittedRnr.getProgram());\n    when(savedRnr.getFacility()).thenReturn(submittedRnr.getFacility());\n    when(savedRnr.getSupervisoryNodeId()).thenReturn(1L);\n    when(userService.getUsersWithRightInNodeForProgram(submittedRnr.getProgram(), new SupervisoryNode(1L),\n      APPROVE_REQUISITION)).thenReturn(users);\n    when(supervisoryNodeService.getFor(submittedRnr.getFacility(), submittedRnr.getProgram())).thenReturn(\n      new SupervisoryNode(1L));\n\n    requisitionService.authorize(submittedRnr);\n\n    verify(requisitionEventService).notifyForStatusChange(savedRnr);\n//    verify(statusChangeEventService).notifyUsers(emptyList, savedRnr.getId(), submittedRnr.getFacility(),\n//      submittedRnr.getProgram(), submittedRnr.getPeriod(), \"AUTHORIZED\");\n  }", "signature": "void shouldNotifyStatusChangeOnAuthorizeAndSendEmailToActiveUsers()", "full_signature": "@Test public void shouldNotifyStatusChangeOnAuthorizeAndSendEmailToActiveUsers()", "class_method_signature": "RequisitionServiceTest.shouldNotifyStatusChangeOnAuthorizeAndSendEmailToActiveUsers()", "testcase": true, "constructor": false, "invocations": ["getFilledSavedRequisitionWithDefaultFacilityProgramPeriod", "thenReturn", "when", "fetchProgramTemplate", "getId", "perform", "when", "doNothing", "thenReturn", "when", "getApproverFor", "thenReturn", "when", "getFor", "make", "a", "with", "make", "a", "with", "asList", "thenReturn", "when", "getProgram", "getProgram", "thenReturn", "when", "getFacility", "getFacility", "thenReturn", "when", "getSupervisoryNodeId", "thenReturn", "when", "getUsersWithRightInNodeForProgram", "getProgram", "thenReturn", "when", "getFor", "getFacility", "getProgram", "authorize", "notifyForStatusChange", "verify"]}, "focal_class": {"identifier": "RequisitionService", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String RNR_AUTHORIZATION_ERROR = \"error.rnr.authorization\";", "modifier": "public static final", "type": "String", "declarator": "RNR_AUTHORIZATION_ERROR = \"error.rnr.authorization\"", "var_name": "RNR_AUTHORIZATION_ERROR"}, {"original_string": "public static final String RNR_SUBMISSION_ERROR = \"error.rnr.submission\";", "modifier": "public static final", "type": "String", "declarator": "RNR_SUBMISSION_ERROR = \"error.rnr.submission\"", "var_name": "RNR_SUBMISSION_ERROR"}, {"original_string": "public static final String RNR_OPERATION_UNAUTHORIZED = \"error.rnr.operation.unauthorized\";", "modifier": "public static final", "type": "String", "declarator": "RNR_OPERATION_UNAUTHORIZED = \"error.rnr.operation.unauthorized\"", "var_name": "RNR_OPERATION_UNAUTHORIZED"}, {"original_string": "public static final String RNR_AUTHORIZED_SUCCESSFULLY = \"msg.rnr.authorized.success\";", "modifier": "public static final", "type": "String", "declarator": "RNR_AUTHORIZED_SUCCESSFULLY = \"msg.rnr.authorized.success\"", "var_name": "RNR_AUTHORIZED_SUCCESSFULLY"}, {"original_string": "public static final String RNR_SUBMITTED_SUCCESSFULLY = \"msg.rnr.submitted.success\";", "modifier": "public static final", "type": "String", "declarator": "RNR_SUBMITTED_SUCCESSFULLY = \"msg.rnr.submitted.success\"", "var_name": "RNR_SUBMITTED_SUCCESSFULLY"}, {"original_string": "public static final String RNR_AUTHORIZED_SUCCESSFULLY_WITHOUT_SUPERVISOR = \"msg.rnr.authorized.without.supervisor\";", "modifier": "public static final", "type": "String", "declarator": "RNR_AUTHORIZED_SUCCESSFULLY_WITHOUT_SUPERVISOR = \"msg.rnr.authorized.without.supervisor\"", "var_name": "RNR_AUTHORIZED_SUCCESSFULLY_WITHOUT_SUPERVISOR"}, {"original_string": "public static final String RNR_APPROVED_SUCCESSFULLY_WITHOUT_SUPERVISOR = \"msg.rnr.approved.without.supervisor\";", "modifier": "public static final", "type": "String", "declarator": "RNR_APPROVED_SUCCESSFULLY_WITHOUT_SUPERVISOR = \"msg.rnr.approved.without.supervisor\"", "var_name": "RNR_APPROVED_SUCCESSFULLY_WITHOUT_SUPERVISOR"}, {"original_string": "public static final String NO_SUPERVISORY_NODE_CONTACT_ADMIN = \"msg.rnr.submitted.without.supervisor\";", "modifier": "public static final", "type": "String", "declarator": "NO_SUPERVISORY_NODE_CONTACT_ADMIN = \"msg.rnr.submitted.without.supervisor\"", "var_name": "NO_SUPERVISORY_NODE_CONTACT_ADMIN"}, {"original_string": "public static final String RNR_APPROVED_SUCCESSFULLY = \"msg.rnr.approved.success\";", "modifier": "public static final", "type": "String", "declarator": "RNR_APPROVED_SUCCESSFULLY = \"msg.rnr.approved.success\"", "var_name": "RNR_APPROVED_SUCCESSFULLY"}, {"original_string": "public static final String APPROVAL_NOT_ALLOWED = \"rnr.approval.not.allowed\";", "modifier": "public static final", "type": "String", "declarator": "APPROVAL_NOT_ALLOWED = \"rnr.approval.not.allowed\"", "var_name": "APPROVAL_NOT_ALLOWED"}, {"original_string": "public static final String SEARCH_ALL = \"all\";", "modifier": "public static final", "type": "String", "declarator": "SEARCH_ALL = \"all\"", "var_name": "SEARCH_ALL"}, {"original_string": "public static final String SEARCH_PROGRAM_NAME = \"programName\";", "modifier": "public static final", "type": "String", "declarator": "SEARCH_PROGRAM_NAME = \"programName\"", "var_name": "SEARCH_PROGRAM_NAME"}, {"original_string": "public static final String SEARCH_FACILITY_CODE = \"facilityCode\";", "modifier": "public static final", "type": "String", "declarator": "SEARCH_FACILITY_CODE = \"facilityCode\"", "var_name": "SEARCH_FACILITY_CODE"}, {"original_string": "public static final String SEARCH_FACILITY_NAME = \"facilityName\";", "modifier": "public static final", "type": "String", "declarator": "SEARCH_FACILITY_NAME = \"facilityName\"", "var_name": "SEARCH_FACILITY_NAME"}, {"original_string": "public static final String SEARCH_SUPPLYING_DEPOT_NAME = \"supplyingDepot\";", "modifier": "public static final", "type": "String", "declarator": "SEARCH_SUPPLYING_DEPOT_NAME = \"supplyingDepot\"", "var_name": "SEARCH_SUPPLYING_DEPOT_NAME"}, {"original_string": "public static final String CONVERT_TO_ORDER_PAGE_SIZE = \"order.page.size\";", "modifier": "public static final", "type": "String", "declarator": "CONVERT_TO_ORDER_PAGE_SIZE = \"order.page.size\"", "var_name": "CONVERT_TO_ORDER_PAGE_SIZE"}, {"original_string": "public static final String NUMBER_OF_PAGES = \"number_of_pages\";", "modifier": "public static final", "type": "String", "declarator": "NUMBER_OF_PAGES = \"number_of_pages\"", "var_name": "NUMBER_OF_PAGES"}, {"original_string": "@Autowired\n  private RequisitionRepository requisitionRepository;", "modifier": "@Autowired\n  private", "type": "RequisitionRepository", "declarator": "requisitionRepository", "var_name": "requisitionRepository"}, {"original_string": "@Autowired\n  private RnrTemplateService rnrTemplateService;", "modifier": "@Autowired\n  private", "type": "RnrTemplateService", "declarator": "rnrTemplateService", "var_name": "rnrTemplateService"}, {"original_string": "@Autowired\n  private FacilityApprovedProductService facilityApprovedProductService;", "modifier": "@Autowired\n  private", "type": "FacilityApprovedProductService", "declarator": "facilityApprovedProductService", "var_name": "facilityApprovedProductService"}, {"original_string": "@Autowired\n  private SupervisoryNodeService supervisoryNodeService;", "modifier": "@Autowired\n  private", "type": "SupervisoryNodeService", "declarator": "supervisoryNodeService", "var_name": "supervisoryNodeService"}, {"original_string": "@Autowired\n  private RoleAssignmentService roleAssignmentService;", "modifier": "@Autowired\n  private", "type": "RoleAssignmentService", "declarator": "roleAssignmentService", "var_name": "roleAssignmentService"}, {"original_string": "@Autowired\n  private ProgramService programService;", "modifier": "@Autowired\n  private", "type": "ProgramService", "declarator": "programService", "var_name": "programService"}, {"original_string": "@Autowired\n  private ProcessingScheduleService processingScheduleService;", "modifier": "@Autowired\n  private", "type": "ProcessingScheduleService", "declarator": "processingScheduleService", "var_name": "processingScheduleService"}, {"original_string": "@Autowired\n  private FacilityService facilityService;", "modifier": "@Autowired\n  private", "type": "FacilityService", "declarator": "facilityService", "var_name": "facilityService"}, {"original_string": "@Autowired\n  private SupplyLineService supplyLineService;", "modifier": "@Autowired\n  private", "type": "SupplyLineService", "declarator": "supplyLineService", "var_name": "supplyLineService"}, {"original_string": "@Autowired\n  private RequisitionPermissionService requisitionPermissionService;", "modifier": "@Autowired\n  private", "type": "RequisitionPermissionService", "declarator": "requisitionPermissionService", "var_name": "requisitionPermissionService"}, {"original_string": "@Autowired\n  private UserService userService;", "modifier": "@Autowired\n  private", "type": "UserService", "declarator": "userService", "var_name": "userService"}, {"original_string": "@Autowired\n  private RequisitionEventService requisitionEventService;", "modifier": "@Autowired\n  private", "type": "RequisitionEventService", "declarator": "requisitionEventService", "var_name": "requisitionEventService"}, {"original_string": "@Autowired\n  private RegimenService regimenService;", "modifier": "@Autowired\n  private", "type": "RegimenService", "declarator": "regimenService", "var_name": "regimenService"}, {"original_string": "@Autowired\n  private RegimenColumnService regimenColumnService;", "modifier": "@Autowired\n  private", "type": "RegimenColumnService", "declarator": "regimenColumnService", "var_name": "regimenColumnService"}, {"original_string": "@Autowired\n  private ProgramProductService programProductService;", "modifier": "@Autowired\n  private", "type": "ProgramProductService", "declarator": "programProductService", "var_name": "programProductService"}, {"original_string": "@Autowired\n  private StaticReferenceDataService staticReferenceDataService;", "modifier": "@Autowired\n  private", "type": "StaticReferenceDataService", "declarator": "staticReferenceDataService", "var_name": "staticReferenceDataService"}, {"original_string": "@Autowired\n  private CalculationService calculationService;", "modifier": "@Autowired\n  private", "type": "CalculationService", "declarator": "calculationService", "var_name": "calculationService"}, {"original_string": "@Autowired\n  private DbMapper dbMapper;", "modifier": "@Autowired\n  private", "type": "DbMapper", "declarator": "dbMapper", "var_name": "dbMapper"}, {"original_string": "@Autowired\n  private BudgetLineItemService budgetLineItemService;", "modifier": "@Autowired\n  private", "type": "BudgetLineItemService", "declarator": "budgetLineItemService", "var_name": "budgetLineItemService"}, {"original_string": "@Autowired\n  private StatusChangeEventService statusChangeEventService;", "modifier": "@Autowired\n  private", "type": "StatusChangeEventService", "declarator": "statusChangeEventService", "var_name": "statusChangeEventService"}, {"original_string": "@Autowired\n  private EquipmentInventoryService equipmentInventoryService;", "modifier": "@Autowired\n  private", "type": "EquipmentInventoryService", "declarator": "equipmentInventoryService", "var_name": "equipmentInventoryService"}, {"original_string": "@Autowired\n  private ConfigurationSettingService configurationSettingsService;", "modifier": "@Autowired\n  private", "type": "ConfigurationSettingService", "declarator": "configurationSettingsService", "var_name": "configurationSettingsService"}, {"original_string": "private RequisitionSearchStrategyFactory requisitionSearchStrategyFactory;", "modifier": "private", "type": "RequisitionSearchStrategyFactory", "declarator": "requisitionSearchStrategyFactory", "var_name": "requisitionSearchStrategyFactory"}, {"original_string": "@Autowired\n  private ProductPriceScheduleService priceScheduleService;", "modifier": "@Autowired\n  private", "type": "ProductPriceScheduleService", "declarator": "priceScheduleService", "var_name": "priceScheduleService"}], "methods": [{"identifier": "setRequisitionSearchStrategyFactory", "parameters": "(RequisitionSearchStrategyFactory requisitionSearchStrategyFactory)", "modifiers": "@Autowired public", "return": "void", "signature": "void setRequisitionSearchStrategyFactory(RequisitionSearchStrategyFactory requisitionSearchStrategyFactory)", "full_signature": "@Autowired public void setRequisitionSearchStrategyFactory(RequisitionSearchStrategyFactory requisitionSearchStrategyFactory)", "class_method_signature": "RequisitionService.setRequisitionSearchStrategyFactory(RequisitionSearchStrategyFactory requisitionSearchStrategyFactory)", "testcase": false, "constructor": false}, {"identifier": "initiate", "parameters": "(Facility facility, Program program, Long modifiedBy, Boolean emergency, ProcessingPeriod proposedPeriod)", "modifiers": "@Transactional public", "return": "Rnr", "signature": "Rnr initiate(Facility facility, Program program, Long modifiedBy, Boolean emergency, ProcessingPeriod proposedPeriod)", "full_signature": "@Transactional public Rnr initiate(Facility facility, Program program, Long modifiedBy, Boolean emergency, ProcessingPeriod proposedPeriod)", "class_method_signature": "RequisitionService.initiate(Facility facility, Program program, Long modifiedBy, Boolean emergency, ProcessingPeriod proposedPeriod)", "testcase": false, "constructor": false}, {"identifier": "populateProductsPriceBasedOnPriceSchedule", "parameters": "(Long facilityId, Long programId, List<FacilityTypeApprovedProduct> facilityTypeApprovedProducts)", "modifiers": "public", "return": "void", "signature": "void populateProductsPriceBasedOnPriceSchedule(Long facilityId, Long programId, List<FacilityTypeApprovedProduct> facilityTypeApprovedProducts)", "full_signature": "public void populateProductsPriceBasedOnPriceSchedule(Long facilityId, Long programId, List<FacilityTypeApprovedProduct> facilityTypeApprovedProducts)", "class_method_signature": "RequisitionService.populateProductsPriceBasedOnPriceSchedule(Long facilityId, Long programId, List<FacilityTypeApprovedProduct> facilityTypeApprovedProducts)", "testcase": false, "constructor": false}, {"identifier": "populateEquipments", "parameters": "(Rnr requisition)", "modifiers": "private", "return": "void", "signature": "void populateEquipments(Rnr requisition)", "full_signature": "private void populateEquipments(Rnr requisition)", "class_method_signature": "RequisitionService.populateEquipments(Rnr requisition)", "testcase": false, "constructor": false}, {"identifier": "populateAllocatedBudget", "parameters": "(Rnr requisition)", "modifiers": "private", "return": "void", "signature": "void populateAllocatedBudget(Rnr requisition)", "full_signature": "private void populateAllocatedBudget(Rnr requisition)", "class_method_signature": "RequisitionService.populateAllocatedBudget(Rnr requisition)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(Rnr rnr)", "modifiers": "@Transactional public", "return": "Rnr", "signature": "Rnr save(Rnr rnr)", "full_signature": "@Transactional public Rnr save(Rnr rnr)", "class_method_signature": "RequisitionService.save(Rnr rnr)", "testcase": false, "constructor": false}, {"identifier": "submit", "parameters": "(Rnr rnr)", "modifiers": "@Transactional public", "return": "Rnr", "signature": "Rnr submit(Rnr rnr)", "full_signature": "@Transactional public Rnr submit(Rnr rnr)", "class_method_signature": "RequisitionService.submit(Rnr rnr)", "testcase": false, "constructor": false}, {"identifier": "authorize", "parameters": "(Rnr rnr)", "modifiers": "@Transactional public", "return": "Rnr", "signature": "Rnr authorize(Rnr rnr)", "full_signature": "@Transactional public Rnr authorize(Rnr rnr)", "class_method_signature": "RequisitionService.authorize(Rnr rnr)", "testcase": false, "constructor": false}, {"identifier": "approve", "parameters": "(Rnr requisition, String name)", "modifiers": "@Transactional public", "return": "Rnr", "signature": "Rnr approve(Rnr requisition, String name)", "full_signature": "@Transactional public Rnr approve(Rnr requisition, String name)", "class_method_signature": "RequisitionService.approve(Rnr requisition, String name)", "testcase": false, "constructor": false}, {"identifier": "releaseRequisitionsAsOrder", "parameters": "(List<Rnr> requisitions, Long userId)", "modifiers": "public", "return": "void", "signature": "void releaseRequisitionsAsOrder(List<Rnr> requisitions, Long userId)", "full_signature": "public void releaseRequisitionsAsOrder(List<Rnr> requisitions, Long userId)", "class_method_signature": "RequisitionService.releaseRequisitionsAsOrder(List<Rnr> requisitions, Long userId)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(RequisitionSearchCriteria criteria)", "modifiers": "public", "return": "List<Rnr>", "signature": "List<Rnr> get(RequisitionSearchCriteria criteria)", "full_signature": "public List<Rnr> get(RequisitionSearchCriteria criteria)", "class_method_signature": "RequisitionService.get(RequisitionSearchCriteria criteria)", "testcase": false, "constructor": false}, {"identifier": "fillSupportingInfo", "parameters": "(List<Rnr> requisitions)", "modifiers": "private", "return": "void", "signature": "void fillSupportingInfo(List<Rnr> requisitions)", "full_signature": "private void fillSupportingInfo(List<Rnr> requisitions)", "class_method_signature": "RequisitionService.fillSupportingInfo(List<Rnr> requisitions)", "testcase": false, "constructor": false}, {"identifier": "getLossesAndAdjustmentsTypes", "parameters": "()", "modifiers": "public", "return": "List<LossesAndAdjustmentsType>", "signature": "List<LossesAndAdjustmentsType> getLossesAndAdjustmentsTypes()", "full_signature": "public List<LossesAndAdjustmentsType> getLossesAndAdjustmentsTypes()", "class_method_signature": "RequisitionService.getLossesAndAdjustmentsTypes()", "testcase": false, "constructor": false}, {"identifier": "getSubmitMessageBasedOnSupervisoryNode", "parameters": "(Facility facility, Program program)", "modifiers": "public", "return": "OpenLmisMessage", "signature": "OpenLmisMessage getSubmitMessageBasedOnSupervisoryNode(Facility facility, Program program)", "full_signature": "public OpenLmisMessage getSubmitMessageBasedOnSupervisoryNode(Facility facility, Program program)", "class_method_signature": "RequisitionService.getSubmitMessageBasedOnSupervisoryNode(Facility facility, Program program)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizeMessageBasedOnSupervisoryNode", "parameters": "(Facility facility, Program program)", "modifiers": "public", "return": "OpenLmisMessage", "signature": "OpenLmisMessage getAuthorizeMessageBasedOnSupervisoryNode(Facility facility, Program program)", "full_signature": "public OpenLmisMessage getAuthorizeMessageBasedOnSupervisoryNode(Facility facility, Program program)", "class_method_signature": "RequisitionService.getAuthorizeMessageBasedOnSupervisoryNode(Facility facility, Program program)", "testcase": false, "constructor": false}, {"identifier": "getApproveMessageBasedOnParentNode", "parameters": "(Rnr rnr)", "modifiers": "public", "return": "OpenLmisMessage", "signature": "OpenLmisMessage getApproveMessageBasedOnParentNode(Rnr rnr)", "full_signature": "public OpenLmisMessage getApproveMessageBasedOnParentNode(Rnr rnr)", "class_method_signature": "RequisitionService.getApproveMessageBasedOnParentNode(Rnr rnr)", "testcase": false, "constructor": false}, {"identifier": "getFullRequisitionById", "parameters": "(Long id)", "modifiers": "public", "return": "Rnr", "signature": "Rnr getFullRequisitionById(Long id)", "full_signature": "public Rnr getFullRequisitionById(Long id)", "class_method_signature": "RequisitionService.getFullRequisitionById(Long id)", "testcase": false, "constructor": false}, {"identifier": "findPeriod", "parameters": "(Facility facility, Program program, Boolean emergency)", "modifiers": "", "return": "ProcessingPeriod", "signature": "ProcessingPeriod findPeriod(Facility facility, Program program, Boolean emergency)", "full_signature": " ProcessingPeriod findPeriod(Facility facility, Program program, Boolean emergency)", "class_method_signature": "RequisitionService.findPeriod(Facility facility, Program program, Boolean emergency)", "testcase": false, "constructor": false}, {"identifier": "getPeriodForInitiating", "parameters": "(Facility facility, Program program)", "modifiers": "public", "return": "ProcessingPeriod", "signature": "ProcessingPeriod getPeriodForInitiating(Facility facility, Program program)", "full_signature": "public ProcessingPeriod getPeriodForInitiating(Facility facility, Program program)", "class_method_signature": "RequisitionService.getPeriodForInitiating(Facility facility, Program program)", "testcase": false, "constructor": false}, {"identifier": "getAllPeriodsForInitiatingRequisition", "parameters": "(Long facilityId, Long programId)", "modifiers": "public", "return": "List<ProcessingPeriod>", "signature": "List<ProcessingPeriod> getAllPeriodsForInitiatingRequisition(Long facilityId, Long programId)", "full_signature": "public List<ProcessingPeriod> getAllPeriodsForInitiatingRequisition(Long facilityId, Long programId)", "class_method_signature": "RequisitionService.getAllPeriodsForInitiatingRequisition(Long facilityId, Long programId)", "testcase": false, "constructor": false}, {"identifier": "fillSupportingInfo", "parameters": "(Rnr requisition)", "modifiers": "private", "return": "Rnr", "signature": "Rnr fillSupportingInfo(Rnr requisition)", "full_signature": "private Rnr fillSupportingInfo(Rnr requisition)", "class_method_signature": "RequisitionService.fillSupportingInfo(Rnr requisition)", "testcase": false, "constructor": false}, {"identifier": "fillSupplyingFacility", "parameters": "(Rnr... requisitions)", "modifiers": "private", "return": "void", "signature": "void fillSupplyingFacility(Rnr... requisitions)", "full_signature": "private void fillSupplyingFacility(Rnr... requisitions)", "class_method_signature": "RequisitionService.fillSupplyingFacility(Rnr... requisitions)", "testcase": false, "constructor": false}, {"identifier": "fillSupplyingDepot", "parameters": "(Rnr requisition)", "modifiers": "private", "return": "void", "signature": "void fillSupplyingDepot(Rnr requisition)", "full_signature": "private void fillSupplyingDepot(Rnr requisition)", "class_method_signature": "RequisitionService.fillSupplyingDepot(Rnr requisition)", "testcase": false, "constructor": false}, {"identifier": "listForApproval", "parameters": "(Long userId)", "modifiers": "@Deprecated public", "return": "List<Rnr>", "signature": "List<Rnr> listForApproval(Long userId)", "full_signature": "@Deprecated public List<Rnr> listForApproval(Long userId)", "class_method_signature": "RequisitionService.listForApproval(Long userId)", "testcase": false, "constructor": false}, {"identifier": "listForApprovalDto", "parameters": "(Long userId)", "modifiers": "public", "return": "List<RnrDTO>", "signature": "List<RnrDTO> listForApprovalDto(Long userId)", "full_signature": "public List<RnrDTO> listForApprovalDto(Long userId)", "class_method_signature": "RequisitionService.listForApprovalDto(Long userId)", "testcase": false, "constructor": false}, {"identifier": "getNRnrLineItems", "parameters": "(String productCode, Rnr rnr, Integer n, Date startDate)", "modifiers": "public", "return": "List<RnrLineItem>", "signature": "List<RnrLineItem> getNRnrLineItems(String productCode, Rnr rnr, Integer n, Date startDate)", "full_signature": "public List<RnrLineItem> getNRnrLineItems(String productCode, Rnr rnr, Integer n, Date startDate)", "class_method_signature": "RequisitionService.getNRnrLineItems(String productCode, Rnr rnr, Integer n, Date startDate)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Rnr requisition)", "modifiers": "private", "return": "Rnr", "signature": "Rnr update(Rnr requisition)", "full_signature": "private Rnr update(Rnr requisition)", "class_method_signature": "RequisitionService.update(Rnr requisition)", "testcase": false, "constructor": false}, {"identifier": "logStatusChangeAndNotify", "parameters": "(Rnr requisition, boolean notifyStatusChange, String name)", "modifiers": "private", "return": "void", "signature": "void logStatusChangeAndNotify(Rnr requisition, boolean notifyStatusChange, String name)", "full_signature": "private void logStatusChangeAndNotify(Rnr requisition, boolean notifyStatusChange, String name)", "class_method_signature": "RequisitionService.logStatusChangeAndNotify(Rnr requisition, boolean notifyStatusChange, String name)", "testcase": false, "constructor": false}, {"identifier": "sendRequisitionStatusChangeMail", "parameters": "(Rnr requisition)", "modifiers": "private", "return": "void", "signature": "void sendRequisitionStatusChangeMail(Rnr requisition)", "full_signature": "private void sendRequisitionStatusChangeMail(Rnr requisition)", "class_method_signature": "RequisitionService.sendRequisitionStatusChangeMail(Rnr requisition)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(Rnr requisition)", "modifiers": "private", "return": "void", "signature": "void insert(Rnr requisition)", "full_signature": "private void insert(Rnr requisition)", "class_method_signature": "RequisitionService.insert(Rnr requisition)", "testcase": false, "constructor": false}, {"identifier": "getCategoryCount", "parameters": "(Rnr requisition, boolean fullSupply)", "modifiers": "public", "return": "Integer", "signature": "Integer getCategoryCount(Rnr requisition, boolean fullSupply)", "full_signature": "public Integer getCategoryCount(Rnr requisition, boolean fullSupply)", "class_method_signature": "RequisitionService.getCategoryCount(Rnr requisition, boolean fullSupply)", "testcase": false, "constructor": false}, {"identifier": "insertComment", "parameters": "(Comment comment)", "modifiers": "public", "return": "void", "signature": "void insertComment(Comment comment)", "full_signature": "public void insertComment(Comment comment)", "class_method_signature": "RequisitionService.insertComment(Comment comment)", "testcase": false, "constructor": false}, {"identifier": "getCommentsByRnrId", "parameters": "(Long rnrId)", "modifiers": "public", "return": "List", "signature": "List getCommentsByRnrId(Long rnrId)", "full_signature": "public List getCommentsByRnrId(Long rnrId)", "class_method_signature": "RequisitionService.getCommentsByRnrId(Long rnrId)", "testcase": false, "constructor": false}, {"identifier": "getLWById", "parameters": "(Long rnrId)", "modifiers": "public", "return": "Rnr", "signature": "Rnr getLWById(Long rnrId)", "full_signature": "public Rnr getLWById(Long rnrId)", "class_method_signature": "RequisitionService.getLWById(Long rnrId)", "testcase": false, "constructor": false}, {"identifier": "getOperationDateFor", "parameters": "(Long rnrId, String status)", "modifiers": "public", "return": "Date", "signature": "Date getOperationDateFor(Long rnrId, String status)", "full_signature": "public Date getOperationDateFor(Long rnrId, String status)", "class_method_signature": "RequisitionService.getOperationDateFor(Long rnrId, String status)", "testcase": false, "constructor": false}, {"identifier": "getCurrentPeriod", "parameters": "(RequisitionSearchCriteria criteria)", "modifiers": "public", "return": "ProcessingPeriod", "signature": "ProcessingPeriod getCurrentPeriod(RequisitionSearchCriteria criteria)", "full_signature": "public ProcessingPeriod getCurrentPeriod(RequisitionSearchCriteria criteria)", "class_method_signature": "RequisitionService.getCurrentPeriod(RequisitionSearchCriteria criteria)", "testcase": false, "constructor": false}, {"identifier": "getApprovedRequisitionsForCriteriaAndPageNumber", "parameters": "(String searchType, String searchVal, Integer pageNumber,\n                                                                   Integer totalNumberOfPages, Long userId, String rightName,\n                                                                   String sortBy, String sortDirection)", "modifiers": "public", "return": "List<Rnr>", "signature": "List<Rnr> getApprovedRequisitionsForCriteriaAndPageNumber(String searchType, String searchVal, Integer pageNumber,\n                                                                   Integer totalNumberOfPages, Long userId, String rightName,\n                                                                   String sortBy, String sortDirection)", "full_signature": "public List<Rnr> getApprovedRequisitionsForCriteriaAndPageNumber(String searchType, String searchVal, Integer pageNumber,\n                                                                   Integer totalNumberOfPages, Long userId, String rightName,\n                                                                   String sortBy, String sortDirection)", "class_method_signature": "RequisitionService.getApprovedRequisitionsForCriteriaAndPageNumber(String searchType, String searchVal, Integer pageNumber,\n                                                                   Integer totalNumberOfPages, Long userId, String rightName,\n                                                                   String sortBy, String sortDirection)", "testcase": false, "constructor": false}, {"identifier": "getNumberOfPagesOfApprovedRequisitionsForCriteria", "parameters": "(String searchType, String searchVal, Long userId, String rightName)", "modifiers": "public", "return": "Integer", "signature": "Integer getNumberOfPagesOfApprovedRequisitionsForCriteria(String searchType, String searchVal, Long userId, String rightName)", "full_signature": "public Integer getNumberOfPagesOfApprovedRequisitionsForCriteria(String searchType, String searchVal, Long userId, String rightName)", "class_method_signature": "RequisitionService.getNumberOfPagesOfApprovedRequisitionsForCriteria(String searchType, String searchVal, Long userId, String rightName)", "testcase": false, "constructor": false}, {"identifier": "getProcessingPeriods", "parameters": "(RequisitionSearchCriteria criteria)", "modifiers": "public", "return": "List<ProcessingPeriod>", "signature": "List<ProcessingPeriod> getProcessingPeriods(RequisitionSearchCriteria criteria)", "full_signature": "public List<ProcessingPeriod> getProcessingPeriods(RequisitionSearchCriteria criteria)", "class_method_signature": "RequisitionService.getProcessingPeriods(RequisitionSearchCriteria criteria)", "testcase": false, "constructor": false}, {"identifier": "getRequisitionsFor", "parameters": "(RequisitionSearchCriteria criteria, List<ProcessingPeriod> periodList)", "modifiers": "public", "return": "List<Rnr>", "signature": "List<Rnr> getRequisitionsFor(RequisitionSearchCriteria criteria, List<ProcessingPeriod> periodList)", "full_signature": "public List<Rnr> getRequisitionsFor(RequisitionSearchCriteria criteria, List<ProcessingPeriod> periodList)", "class_method_signature": "RequisitionService.getRequisitionsFor(RequisitionSearchCriteria criteria, List<ProcessingPeriod> periodList)", "testcase": false, "constructor": false}, {"identifier": "getFacilityId", "parameters": "(Long id)", "modifiers": "public", "return": "Long", "signature": "Long getFacilityId(Long id)", "full_signature": "public Long getFacilityId(Long id)", "class_method_signature": "RequisitionService.getFacilityId(Long id)", "testcase": false, "constructor": false}, {"identifier": "fillFacilityPeriodProgramWithAuditFields", "parameters": "(List<Rnr> requisitions)", "modifiers": "private", "return": "void", "signature": "void fillFacilityPeriodProgramWithAuditFields(List<Rnr> requisitions)", "full_signature": "private void fillFacilityPeriodProgramWithAuditFields(List<Rnr> requisitions)", "class_method_signature": "RequisitionService.fillFacilityPeriodProgramWithAuditFields(List<Rnr> requisitions)", "testcase": false, "constructor": false}, {"identifier": "getNonSkippedLineItem", "parameters": "(Long rnrId, String productCode)", "modifiers": "public", "return": "RnrLineItem", "signature": "RnrLineItem getNonSkippedLineItem(Long rnrId, String productCode)", "full_signature": "public RnrLineItem getNonSkippedLineItem(Long rnrId, String productCode)", "class_method_signature": "RequisitionService.getNonSkippedLineItem(Long rnrId, String productCode)", "testcase": false, "constructor": false}, {"identifier": "deleteRnR", "parameters": "(Long rnrId)", "modifiers": "public", "return": "String", "signature": "String deleteRnR(Long rnrId)", "full_signature": "public String deleteRnR(Long rnrId)", "class_method_signature": "RequisitionService.deleteRnR(Long rnrId)", "testcase": false, "constructor": false}, {"identifier": "skipRnR", "parameters": "(Long rnrId, Long userId)", "modifiers": "public", "return": "void", "signature": "void skipRnR(Long rnrId, Long userId)", "full_signature": "public void skipRnR(Long rnrId, Long userId)", "class_method_signature": "RequisitionService.skipRnR(Long rnrId, Long userId)", "testcase": false, "constructor": false}, {"identifier": "reOpenRnR", "parameters": "(Long rnrId, Long userId)", "modifiers": "public", "return": "void", "signature": "void reOpenRnR(Long rnrId, Long userId)", "full_signature": "public void reOpenRnR(Long rnrId, Long userId)", "class_method_signature": "RequisitionService.reOpenRnR(Long rnrId, Long userId)", "testcase": false, "constructor": false}, {"identifier": "rejectRnR", "parameters": "(Long rnrId, Long userId)", "modifiers": "public", "return": "void", "signature": "void rejectRnR(Long rnrId, Long userId)", "full_signature": "public void rejectRnR(Long rnrId, Long userId)", "class_method_signature": "RequisitionService.rejectRnR(Long rnrId, Long userId)", "testcase": false, "constructor": false}, {"identifier": "findM", "parameters": "(ProcessingPeriod period)", "modifiers": "public", "return": "Integer", "signature": "Integer findM(ProcessingPeriod period)", "full_signature": "public Integer findM(ProcessingPeriod period)", "class_method_signature": "RequisitionService.findM(ProcessingPeriod period)", "testcase": false, "constructor": false}, {"identifier": "getProgramId", "parameters": "(Long rnrId)", "modifiers": "public", "return": "Long", "signature": "Long getProgramId(Long rnrId)", "full_signature": "public Long getProgramId(Long rnrId)", "class_method_signature": "RequisitionService.getProgramId(Long rnrId)", "testcase": false, "constructor": false}, {"identifier": "updateClientFields", "parameters": "(Rnr rnr)", "modifiers": "@Transactional public", "return": "void", "signature": "void updateClientFields(Rnr rnr)", "full_signature": "@Transactional public void updateClientFields(Rnr rnr)", "class_method_signature": "RequisitionService.updateClientFields(Rnr rnr)", "testcase": false, "constructor": false}, {"identifier": "insertPatientQuantificationLineItems", "parameters": "(Rnr rnr)", "modifiers": "@Transactional public", "return": "void", "signature": "void insertPatientQuantificationLineItems(Rnr rnr)", "full_signature": "@Transactional public void insertPatientQuantificationLineItems(Rnr rnr)", "class_method_signature": "RequisitionService.insertPatientQuantificationLineItems(Rnr rnr)", "testcase": false, "constructor": false}, {"identifier": "getRequisitionsByFacility", "parameters": "(Facility facility)", "modifiers": "public", "return": "List<Rnr>", "signature": "List<Rnr> getRequisitionsByFacility(Facility facility)", "full_signature": "public List<Rnr> getRequisitionsByFacility(Facility facility)", "class_method_signature": "RequisitionService.getRequisitionsByFacility(Facility facility)", "testcase": false, "constructor": false}, {"identifier": "insertRnrSignatures", "parameters": "(Rnr rnr)", "modifiers": "@Transactional public", "return": "void", "signature": "void insertRnrSignatures(Rnr rnr)", "full_signature": "@Transactional public void insertRnrSignatures(Rnr rnr)", "class_method_signature": "RequisitionService.insertRnrSignatures(Rnr rnr)", "testcase": false, "constructor": false}], "file": "modules/requisition/src/main/java/org/openlmis/rnr/service/RequisitionService.java"}, "focal_method": {"identifier": "authorize", "parameters": "(Rnr rnr)", "modifiers": "@Transactional public", "return": "Rnr", "body": "@Transactional\n  public Rnr authorize(Rnr rnr) {\n    Rnr savedRnr = getFullRequisitionById(rnr.getId());\n\n    if (savedRnr.getStatus() != SUBMITTED)\n      throw new DataException(new OpenLmisMessage(RNR_AUTHORIZATION_ERROR));\n\n    savedRnr.validateRegimenLineItems(regimenColumnService.getRegimenTemplateByProgramId(savedRnr.getProgram().getId()));\n\n    if (!requisitionPermissionService.hasPermission(rnr.getModifiedBy(), savedRnr, AUTHORIZE_REQUISITION))\n      throw new DataException(RNR_OPERATION_UNAUTHORIZED);\n\n    savedRnr.setAuditFieldsForRequisition(rnr.getModifiedBy(), AUTHORIZED);\n    savedRnr.setSupervisoryNodeId(supervisoryNodeService.getFor(savedRnr.getFacility(), savedRnr.getProgram()).getId());\n\n    ProgramRnrTemplate template = rnrTemplateService.fetchProgramTemplate(savedRnr.getProgram().getId());\n\n    calculationService.perform(savedRnr, template);\n    savedRnr.setFieldsForApproval();\n\n    return update(savedRnr);\n  }", "signature": "Rnr authorize(Rnr rnr)", "full_signature": "@Transactional public Rnr authorize(Rnr rnr)", "class_method_signature": "RequisitionService.authorize(Rnr rnr)", "testcase": false, "constructor": false, "invocations": ["getFullRequisitionById", "getId", "getStatus", "validateRegimenLineItems", "getRegimenTemplateByProgramId", "getId", "getProgram", "hasPermission", "getModifiedBy", "setAuditFieldsForRequisition", "getModifiedBy", "setSupervisoryNodeId", "getId", "getFor", "getFacility", "getProgram", "fetchProgramTemplate", "getId", "getProgram", "perform", "setFieldsForApproval", "update"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}