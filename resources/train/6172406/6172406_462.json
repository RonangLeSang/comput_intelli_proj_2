{"test_class": {"identifier": "RequisitionRepositoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final Long FACILITY_ID = 1L;", "modifier": "public static final", "type": "Long", "declarator": "FACILITY_ID = 1L", "var_name": "FACILITY_ID"}, {"original_string": "public static final Long PROGRAM_ID = 1L;", "modifier": "public static final", "type": "Long", "declarator": "PROGRAM_ID = 1L", "var_name": "PROGRAM_ID"}, {"original_string": "public static final Long PERIOD_ID = 1L;", "modifier": "public static final", "type": "Long", "declarator": "PERIOD_ID = 1L", "var_name": "PERIOD_ID"}, {"original_string": "public static final Long HIV = 1L;", "modifier": "public static final", "type": "Long", "declarator": "HIV = 1L", "var_name": "HIV"}, {"original_string": "@Rule\n  public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "@Mock\n  RequisitionMapper requisitionMapper;", "modifier": "@Mock", "type": "RequisitionMapper", "declarator": "requisitionMapper", "var_name": "requisitionMapper"}, {"original_string": "@Mock\n  private RnrLineItemMapper rnrLineItemMapper;", "modifier": "@Mock\n  private", "type": "RnrLineItemMapper", "declarator": "rnrLineItemMapper", "var_name": "rnrLineItemMapper"}, {"original_string": "@Mock\n  private LossesAndAdjustmentsMapper lossesAndAdjustmentsMapper;", "modifier": "@Mock\n  private", "type": "LossesAndAdjustmentsMapper", "declarator": "lossesAndAdjustmentsMapper", "var_name": "lossesAndAdjustmentsMapper"}, {"original_string": "@Mock\n  private CommentMapper commentMapper;", "modifier": "@Mock\n  private", "type": "CommentMapper", "declarator": "commentMapper", "var_name": "commentMapper"}, {"original_string": "@Mock\n  private SupervisoryNodeRepository supervisoryNodeRepository;", "modifier": "@Mock\n  private", "type": "SupervisoryNodeRepository", "declarator": "supervisoryNodeRepository", "var_name": "supervisoryNodeRepository"}, {"original_string": "@Mock\n  private CommaSeparator separator;", "modifier": "@Mock\n  private", "type": "CommaSeparator", "declarator": "separator", "var_name": "separator"}, {"original_string": "@Mock\n  private RequisitionStatusChangeMapper requisitionStatusChangeMapper;", "modifier": "@Mock\n  private", "type": "RequisitionStatusChangeMapper", "declarator": "requisitionStatusChangeMapper", "var_name": "requisitionStatusChangeMapper"}, {"original_string": "@Mock\n  private RegimenLineItemMapper regimenLineItemMapper;", "modifier": "@Mock\n  private", "type": "RegimenLineItemMapper", "declarator": "regimenLineItemMapper", "var_name": "regimenLineItemMapper"}, {"original_string": "@Mock\n  private PatientQuantificationLineItemMapper patientQuantificationLineItemMapper;", "modifier": "@Mock\n  private", "type": "PatientQuantificationLineItemMapper", "declarator": "patientQuantificationLineItemMapper", "var_name": "patientQuantificationLineItemMapper"}, {"original_string": "@InjectMocks\n  private RequisitionRepository requisitionRepository;", "modifier": "@InjectMocks\n  private", "type": "RequisitionRepository", "declarator": "requisitionRepository", "var_name": "requisitionRepository"}, {"original_string": "private LossesAndAdjustments lossAndAdjustmentForLineItem = new LossesAndAdjustments();", "modifier": "private", "type": "LossesAndAdjustments", "declarator": "lossAndAdjustmentForLineItem = new LossesAndAdjustments()", "var_name": "lossAndAdjustmentForLineItem"}, {"original_string": "private RnrLineItem rnrLineItem1;", "modifier": "private", "type": "RnrLineItem", "declarator": "rnrLineItem1", "var_name": "rnrLineItem1"}, {"original_string": "private RnrLineItem rnrLineItem2;", "modifier": "private", "type": "RnrLineItem", "declarator": "rnrLineItem2", "var_name": "rnrLineItem2"}, {"original_string": "private Rnr rnr;", "modifier": "private", "type": "Rnr", "declarator": "rnr", "var_name": "rnr"}, {"original_string": "private RegimenLineItem regimenLineItem;", "modifier": "private", "type": "RegimenLineItem", "declarator": "regimenLineItem", "var_name": "regimenLineItem"}, {"original_string": "private PatientQuantificationLineItem patientQuantificationLineItem;", "modifier": "private", "type": "PatientQuantificationLineItem", "declarator": "patientQuantificationLineItem", "var_name": "patientQuantificationLineItem"}, {"original_string": "@Mock\n  private SignatureMapper signatureMapper;", "modifier": "@Mock\n  private", "type": "SignatureMapper", "declarator": "signatureMapper", "var_name": "signatureMapper"}], "file": "modules/requisition/src/test/java/org/openlmis/rnr/repository/RequisitionRepositoryTest.java"}, "test_case": {"identifier": "shouldGetCommentsForARnR", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldGetCommentsForARnR() throws Exception {\n    List<Comment> comments = new ArrayList<>();\n    when(commentMapper.getByRnrId(1L)).thenReturn(comments);\n    List<Comment> returnedComments = requisitionRepository.getCommentsByRnrID(1L);\n    verify(commentMapper).getByRnrId(1L);\n    assertThat(returnedComments, is(comments));\n  }", "signature": "void shouldGetCommentsForARnR()", "full_signature": "@Test public void shouldGetCommentsForARnR()", "class_method_signature": "RequisitionRepositoryTest.shouldGetCommentsForARnR()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getByRnrId", "getCommentsByRnrID", "getByRnrId", "verify", "assertThat", "is"]}, "focal_class": {"identifier": "RequisitionRepository", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  private RequisitionMapper requisitionMapper;", "modifier": "@Autowired\n  private", "type": "RequisitionMapper", "declarator": "requisitionMapper", "var_name": "requisitionMapper"}, {"original_string": "@Autowired\n  private RnrLineItemMapper rnrLineItemMapper;", "modifier": "@Autowired\n  private", "type": "RnrLineItemMapper", "declarator": "rnrLineItemMapper", "var_name": "rnrLineItemMapper"}, {"original_string": "@Autowired\n  private LossesAndAdjustmentsMapper lossesAndAdjustmentsMapper;", "modifier": "@Autowired\n  private", "type": "LossesAndAdjustmentsMapper", "declarator": "lossesAndAdjustmentsMapper", "var_name": "lossesAndAdjustmentsMapper"}, {"original_string": "@Autowired\n  private CommentMapper commentMapper;", "modifier": "@Autowired\n  private", "type": "CommentMapper", "declarator": "commentMapper", "var_name": "commentMapper"}, {"original_string": "@Autowired\n  private CommaSeparator commaSeparator;", "modifier": "@Autowired\n  private", "type": "CommaSeparator", "declarator": "commaSeparator", "var_name": "commaSeparator"}, {"original_string": "@Autowired\n  private RequisitionStatusChangeMapper requisitionStatusChangeMapper;", "modifier": "@Autowired\n  private", "type": "RequisitionStatusChangeMapper", "declarator": "requisitionStatusChangeMapper", "var_name": "requisitionStatusChangeMapper"}, {"original_string": "@Autowired\n  private RegimenLineItemMapper regimenLineItemMapper;", "modifier": "@Autowired\n  private", "type": "RegimenLineItemMapper", "declarator": "regimenLineItemMapper", "var_name": "regimenLineItemMapper"}, {"original_string": "@Autowired\n  private EquipmentLineItemMapper equipmentLineItemMapper;", "modifier": "@Autowired\n  private", "type": "EquipmentLineItemMapper", "declarator": "equipmentLineItemMapper", "var_name": "equipmentLineItemMapper"}, {"original_string": "@Autowired\n  private EquipmentInventoryStatusMapper equipmentInventoryStatusMapper;", "modifier": "@Autowired\n  private", "type": "EquipmentInventoryStatusMapper", "declarator": "equipmentInventoryStatusMapper", "var_name": "equipmentInventoryStatusMapper"}, {"original_string": "@Autowired\n  private PatientQuantificationLineItemMapper patientQuantificationLineItemMapper;", "modifier": "@Autowired\n  private", "type": "PatientQuantificationLineItemMapper", "declarator": "patientQuantificationLineItemMapper", "var_name": "patientQuantificationLineItemMapper"}, {"original_string": "@Autowired\n  private SignatureMapper signatureMapper;", "modifier": "@Autowired\n  private", "type": "SignatureMapper", "declarator": "signatureMapper", "var_name": "signatureMapper"}], "methods": [{"identifier": "insert", "parameters": "(Rnr requisition)", "modifiers": "public", "return": "void", "signature": "void insert(Rnr requisition)", "full_signature": "public void insert(Rnr requisition)", "class_method_signature": "RequisitionRepository.insert(Rnr requisition)", "testcase": false, "constructor": false}, {"identifier": "insertPatientQuantificationLineItems", "parameters": "(Rnr rnr)", "modifiers": "public", "return": "void", "signature": "void insertPatientQuantificationLineItems(Rnr rnr)", "full_signature": "public void insertPatientQuantificationLineItems(Rnr rnr)", "class_method_signature": "RequisitionRepository.insertPatientQuantificationLineItems(Rnr rnr)", "testcase": false, "constructor": false}, {"identifier": "insertEquipmentStatus", "parameters": "(Rnr requisition, List<EquipmentLineItem> equipmentLineItems)", "modifiers": "private", "return": "void", "signature": "void insertEquipmentStatus(Rnr requisition, List<EquipmentLineItem> equipmentLineItems)", "full_signature": "private void insertEquipmentStatus(Rnr requisition, List<EquipmentLineItem> equipmentLineItems)", "class_method_signature": "RequisitionRepository.insertEquipmentStatus(Rnr requisition, List<EquipmentLineItem> equipmentLineItems)", "testcase": false, "constructor": false}, {"identifier": "getStatusFromEquipmentLineItem", "parameters": "(EquipmentLineItem equipmentLineItem)", "modifiers": "private", "return": "EquipmentInventoryStatus", "signature": "EquipmentInventoryStatus getStatusFromEquipmentLineItem(EquipmentLineItem equipmentLineItem)", "full_signature": "private EquipmentInventoryStatus getStatusFromEquipmentLineItem(EquipmentLineItem equipmentLineItem)", "class_method_signature": "RequisitionRepository.getStatusFromEquipmentLineItem(EquipmentLineItem equipmentLineItem)", "testcase": false, "constructor": false}, {"identifier": "insertRegimenLineItems", "parameters": "(Rnr requisition, List<RegimenLineItem> regimenLineItems)", "modifiers": "private", "return": "void", "signature": "void insertRegimenLineItems(Rnr requisition, List<RegimenLineItem> regimenLineItems)", "full_signature": "private void insertRegimenLineItems(Rnr requisition, List<RegimenLineItem> regimenLineItems)", "class_method_signature": "RequisitionRepository.insertRegimenLineItems(Rnr requisition, List<RegimenLineItem> regimenLineItems)", "testcase": false, "constructor": false}, {"identifier": "insertLineItems", "parameters": "(Rnr requisition, List<RnrLineItem> lineItems)", "modifiers": "private", "return": "void", "signature": "void insertLineItems(Rnr requisition, List<RnrLineItem> lineItems)", "full_signature": "private void insertLineItems(Rnr requisition, List<RnrLineItem> lineItems)", "class_method_signature": "RequisitionRepository.insertLineItems(Rnr requisition, List<RnrLineItem> lineItems)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Rnr rnr)", "modifiers": "public", "return": "void", "signature": "void update(Rnr rnr)", "full_signature": "public void update(Rnr rnr)", "class_method_signature": "RequisitionRepository.update(Rnr rnr)", "testcase": false, "constructor": false}, {"identifier": "updateEquipmentLineItems", "parameters": "(Rnr rnr)", "modifiers": "private", "return": "void", "signature": "void updateEquipmentLineItems(Rnr rnr)", "full_signature": "private void updateEquipmentLineItems(Rnr rnr)", "class_method_signature": "RequisitionRepository.updateEquipmentLineItems(Rnr rnr)", "testcase": false, "constructor": false}, {"identifier": "updateRegimenLineItems", "parameters": "(Rnr rnr)", "modifiers": "private", "return": "void", "signature": "void updateRegimenLineItems(Rnr rnr)", "full_signature": "private void updateRegimenLineItems(Rnr rnr)", "class_method_signature": "RequisitionRepository.updateRegimenLineItems(Rnr rnr)", "testcase": false, "constructor": false}, {"identifier": "approve", "parameters": "(Rnr rnr)", "modifiers": "public", "return": "void", "signature": "void approve(Rnr rnr)", "full_signature": "public void approve(Rnr rnr)", "class_method_signature": "RequisitionRepository.approve(Rnr rnr)", "testcase": false, "constructor": false}, {"identifier": "updateNonFullSupplyLineItems", "parameters": "(Rnr rnr)", "modifiers": "private", "return": "void", "signature": "void updateNonFullSupplyLineItems(Rnr rnr)", "full_signature": "private void updateNonFullSupplyLineItems(Rnr rnr)", "class_method_signature": "RequisitionRepository.updateNonFullSupplyLineItems(Rnr rnr)", "testcase": false, "constructor": false}, {"identifier": "updateFullSupplyLineItems", "parameters": "(Rnr requisition)", "modifiers": "private", "return": "void", "signature": "void updateFullSupplyLineItems(Rnr requisition)", "full_signature": "private void updateFullSupplyLineItems(Rnr requisition)", "class_method_signature": "RequisitionRepository.updateFullSupplyLineItems(Rnr requisition)", "testcase": false, "constructor": false}, {"identifier": "updateLineItem", "parameters": "(Rnr requisition, RnrLineItem lineItem)", "modifiers": "private", "return": "void", "signature": "void updateLineItem(Rnr requisition, RnrLineItem lineItem)", "full_signature": "private void updateLineItem(Rnr requisition, RnrLineItem lineItem)", "class_method_signature": "RequisitionRepository.updateLineItem(Rnr requisition, RnrLineItem lineItem)", "testcase": false, "constructor": false}, {"identifier": "insertLossesAndAdjustmentsForLineItem", "parameters": "(RnrLineItem lineItem)", "modifiers": "private", "return": "void", "signature": "void insertLossesAndAdjustmentsForLineItem(RnrLineItem lineItem)", "full_signature": "private void insertLossesAndAdjustmentsForLineItem(RnrLineItem lineItem)", "class_method_signature": "RequisitionRepository.insertLossesAndAdjustmentsForLineItem(RnrLineItem lineItem)", "testcase": false, "constructor": false}, {"identifier": "getRequisitionWithLineItems", "parameters": "(Facility facility, Program program, ProcessingPeriod period)", "modifiers": "public", "return": "Rnr", "signature": "Rnr getRequisitionWithLineItems(Facility facility, Program program, ProcessingPeriod period)", "full_signature": "public Rnr getRequisitionWithLineItems(Facility facility, Program program, ProcessingPeriod period)", "class_method_signature": "RequisitionRepository.getRequisitionWithLineItems(Facility facility, Program program, ProcessingPeriod period)", "testcase": false, "constructor": false}, {"identifier": "getRequisitionWithoutLineItems", "parameters": "(Long facilityId, Long programId, Long periodId)", "modifiers": "public", "return": "Rnr", "signature": "Rnr getRequisitionWithoutLineItems(Long facilityId, Long programId, Long periodId)", "full_signature": "public Rnr getRequisitionWithoutLineItems(Long facilityId, Long programId, Long periodId)", "class_method_signature": "RequisitionRepository.getRequisitionWithoutLineItems(Long facilityId, Long programId, Long periodId)", "testcase": false, "constructor": false}, {"identifier": "getRegularRequisitionWithLineItems", "parameters": "(Facility facility, Program program, ProcessingPeriod period)", "modifiers": "public", "return": "Rnr", "signature": "Rnr getRegularRequisitionWithLineItems(Facility facility, Program program, ProcessingPeriod period)", "full_signature": "public Rnr getRegularRequisitionWithLineItems(Facility facility, Program program, ProcessingPeriod period)", "class_method_signature": "RequisitionRepository.getRegularRequisitionWithLineItems(Facility facility, Program program, ProcessingPeriod period)", "testcase": false, "constructor": false}, {"identifier": "getInitiatedOrSubmittedEmergencyRequisitions", "parameters": "(Long facilityId, Long programId)", "modifiers": "public", "return": "List<Rnr>", "signature": "List<Rnr> getInitiatedOrSubmittedEmergencyRequisitions(Long facilityId, Long programId)", "full_signature": "public List<Rnr> getInitiatedOrSubmittedEmergencyRequisitions(Long facilityId, Long programId)", "class_method_signature": "RequisitionRepository.getInitiatedOrSubmittedEmergencyRequisitions(Long facilityId, Long programId)", "testcase": false, "constructor": false}, {"identifier": "getLossesAndAdjustmentsTypes", "parameters": "()", "modifiers": "public", "return": "List<LossesAndAdjustmentsType>", "signature": "List<LossesAndAdjustmentsType> getLossesAndAdjustmentsTypes()", "full_signature": "public List<LossesAndAdjustmentsType> getLossesAndAdjustmentsTypes()", "class_method_signature": "RequisitionRepository.getLossesAndAdjustmentsTypes()", "testcase": false, "constructor": false}, {"identifier": "getById", "parameters": "(Long rnrId)", "modifiers": "public", "return": "Rnr", "signature": "Rnr getById(Long rnrId)", "full_signature": "public Rnr getById(Long rnrId)", "class_method_signature": "RequisitionRepository.getById(Long rnrId)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizedRequisitions", "parameters": "(RoleAssignment roleAssignment)", "modifiers": "@Deprecated public", "return": "List<Rnr>", "signature": "List<Rnr> getAuthorizedRequisitions(RoleAssignment roleAssignment)", "full_signature": "@Deprecated public List<Rnr> getAuthorizedRequisitions(RoleAssignment roleAssignment)", "class_method_signature": "RequisitionRepository.getAuthorizedRequisitions(RoleAssignment roleAssignment)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizedRequisitionsDTOs", "parameters": "(RoleAssignment roleAssignment)", "modifiers": "public", "return": "List<RnrDTO>", "signature": "List<RnrDTO> getAuthorizedRequisitionsDTOs(RoleAssignment roleAssignment)", "full_signature": "public List<RnrDTO> getAuthorizedRequisitionsDTOs(RoleAssignment roleAssignment)", "class_method_signature": "RequisitionRepository.getAuthorizedRequisitionsDTOs(RoleAssignment roleAssignment)", "testcase": false, "constructor": false}, {"identifier": "getLastRegularRequisitionToEnterThePostSubmitFlow", "parameters": "(Long facilityId, Long programId)", "modifiers": "public", "return": "Rnr", "signature": "Rnr getLastRegularRequisitionToEnterThePostSubmitFlow(Long facilityId, Long programId)", "full_signature": "public Rnr getLastRegularRequisitionToEnterThePostSubmitFlow(Long facilityId, Long programId)", "class_method_signature": "RequisitionRepository.getLastRegularRequisitionToEnterThePostSubmitFlow(Long facilityId, Long programId)", "testcase": false, "constructor": false}, {"identifier": "getPostSubmitRequisitions", "parameters": "(Facility facility, Program program, List<ProcessingPeriod> periods)", "modifiers": "public", "return": "List<Rnr>", "signature": "List<Rnr> getPostSubmitRequisitions(Facility facility, Program program, List<ProcessingPeriod> periods)", "full_signature": "public List<Rnr> getPostSubmitRequisitions(Facility facility, Program program, List<ProcessingPeriod> periods)", "class_method_signature": "RequisitionRepository.getPostSubmitRequisitions(Facility facility, Program program, List<ProcessingPeriod> periods)", "testcase": false, "constructor": false}, {"identifier": "getCategoryCount", "parameters": "(Rnr requisition, boolean fullSupply)", "modifiers": "public", "return": "Integer", "signature": "Integer getCategoryCount(Rnr requisition, boolean fullSupply)", "full_signature": "public Integer getCategoryCount(Rnr requisition, boolean fullSupply)", "class_method_signature": "RequisitionRepository.getCategoryCount(Rnr requisition, boolean fullSupply)", "testcase": false, "constructor": false}, {"identifier": "getCommentsByRnrID", "parameters": "(Long rnrId)", "modifiers": "public", "return": "List<Comment>", "signature": "List<Comment> getCommentsByRnrID(Long rnrId)", "full_signature": "public List<Comment> getCommentsByRnrID(Long rnrId)", "class_method_signature": "RequisitionRepository.getCommentsByRnrID(Long rnrId)", "testcase": false, "constructor": false}, {"identifier": "insertComment", "parameters": "(Comment comment)", "modifiers": "public", "return": "void", "signature": "void insertComment(Comment comment)", "full_signature": "public void insertComment(Comment comment)", "class_method_signature": "RequisitionRepository.insertComment(Comment comment)", "testcase": false, "constructor": false}, {"identifier": "logStatusChange", "parameters": "(Rnr requisition, String name)", "modifiers": "public", "return": "void", "signature": "void logStatusChange(Rnr requisition, String name)", "full_signature": "public void logStatusChange(Rnr requisition, String name)", "class_method_signature": "RequisitionRepository.logStatusChange(Rnr requisition, String name)", "testcase": false, "constructor": false}, {"identifier": "getOperationDateFor", "parameters": "(Long rnrId, String status)", "modifiers": "public", "return": "Date", "signature": "Date getOperationDateFor(Long rnrId, String status)", "full_signature": "public Date getOperationDateFor(Long rnrId, String status)", "class_method_signature": "RequisitionRepository.getOperationDateFor(Long rnrId, String status)", "testcase": false, "constructor": false}, {"identifier": "getLWById", "parameters": "(Long rnrId)", "modifiers": "public", "return": "Rnr", "signature": "Rnr getLWById(Long rnrId)", "full_signature": "public Rnr getLWById(Long rnrId)", "class_method_signature": "RequisitionRepository.getLWById(Long rnrId)", "testcase": false, "constructor": false}, {"identifier": "getApprovedRequisitionsForCriteriaAndPageNumber", "parameters": "(String searchType, String searchVal, Integer pageNumber,\n                                                                   Integer pageSize, Long userId, String rightName, String sortBy,\n                                                                   String sortDirection)", "modifiers": "public", "return": "List<Rnr>", "signature": "List<Rnr> getApprovedRequisitionsForCriteriaAndPageNumber(String searchType, String searchVal, Integer pageNumber,\n                                                                   Integer pageSize, Long userId, String rightName, String sortBy,\n                                                                   String sortDirection)", "full_signature": "public List<Rnr> getApprovedRequisitionsForCriteriaAndPageNumber(String searchType, String searchVal, Integer pageNumber,\n                                                                   Integer pageSize, Long userId, String rightName, String sortBy,\n                                                                   String sortDirection)", "class_method_signature": "RequisitionRepository.getApprovedRequisitionsForCriteriaAndPageNumber(String searchType, String searchVal, Integer pageNumber,\n                                                                   Integer pageSize, Long userId, String rightName, String sortBy,\n                                                                   String sortDirection)", "testcase": false, "constructor": false}, {"identifier": "getCountOfApprovedRequisitionsForCriteria", "parameters": "(String searchType, String searchVal, Long userId, String rightName)", "modifiers": "public", "return": "Integer", "signature": "Integer getCountOfApprovedRequisitionsForCriteria(String searchType, String searchVal, Long userId, String rightName)", "full_signature": "public Integer getCountOfApprovedRequisitionsForCriteria(String searchType, String searchVal, Long userId, String rightName)", "class_method_signature": "RequisitionRepository.getCountOfApprovedRequisitionsForCriteria(String searchType, String searchVal, Long userId, String rightName)", "testcase": false, "constructor": false}, {"identifier": "getFacilityId", "parameters": "(Long id)", "modifiers": "public", "return": "Long", "signature": "Long getFacilityId(Long id)", "full_signature": "public Long getFacilityId(Long id)", "class_method_signature": "RequisitionRepository.getFacilityId(Long id)", "testcase": false, "constructor": false}, {"identifier": "getLastRegularRequisition", "parameters": "(Facility facility, Program program)", "modifiers": "public", "return": "Rnr", "signature": "Rnr getLastRegularRequisition(Facility facility, Program program)", "full_signature": "public Rnr getLastRegularRequisition(Facility facility, Program program)", "class_method_signature": "RequisitionRepository.getLastRegularRequisition(Facility facility, Program program)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizedDateForPreviousLineItem", "parameters": "(Rnr rnr, String productCode, Date periodStartDate)", "modifiers": "public", "return": "Date", "signature": "Date getAuthorizedDateForPreviousLineItem(Rnr rnr, String productCode, Date periodStartDate)", "full_signature": "public Date getAuthorizedDateForPreviousLineItem(Rnr rnr, String productCode, Date periodStartDate)", "class_method_signature": "RequisitionRepository.getAuthorizedDateForPreviousLineItem(Rnr rnr, String productCode, Date periodStartDate)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizedRegularUnSkippedLineItems", "parameters": "(String productCode, Rnr rnr, Integer n, Date startDate)", "modifiers": "public", "return": "List<RnrLineItem>", "signature": "List<RnrLineItem> getAuthorizedRegularUnSkippedLineItems(String productCode, Rnr rnr, Integer n, Date startDate)", "full_signature": "public List<RnrLineItem> getAuthorizedRegularUnSkippedLineItems(String productCode, Rnr rnr, Integer n, Date startDate)", "class_method_signature": "RequisitionRepository.getAuthorizedRegularUnSkippedLineItems(String productCode, Rnr rnr, Integer n, Date startDate)", "testcase": false, "constructor": false}, {"identifier": "getNonSkippedLineItem", "parameters": "(Long rnrId, String productCode)", "modifiers": "public", "return": "RnrLineItem", "signature": "RnrLineItem getNonSkippedLineItem(Long rnrId, String productCode)", "full_signature": "public RnrLineItem getNonSkippedLineItem(Long rnrId, String productCode)", "class_method_signature": "RequisitionRepository.getNonSkippedLineItem(Long rnrId, String productCode)", "testcase": false, "constructor": false}, {"identifier": "getProgramId", "parameters": "(Long rnrId)", "modifiers": "public", "return": "Long", "signature": "Long getProgramId(Long rnrId)", "full_signature": "public Long getProgramId(Long rnrId)", "class_method_signature": "RequisitionRepository.getProgramId(Long rnrId)", "testcase": false, "constructor": false}, {"identifier": "deleteRnR", "parameters": "(Long rnrId)", "modifiers": "public", "return": "String", "signature": "String deleteRnR(Long rnrId)", "full_signature": "public String deleteRnR(Long rnrId)", "class_method_signature": "RequisitionRepository.deleteRnR(Long rnrId)", "testcase": false, "constructor": false}, {"identifier": "updateClientFields", "parameters": "(Rnr rnr)", "modifiers": "public", "return": "void", "signature": "void updateClientFields(Rnr rnr)", "full_signature": "public void updateClientFields(Rnr rnr)", "class_method_signature": "RequisitionRepository.updateClientFields(Rnr rnr)", "testcase": false, "constructor": false}, {"identifier": "getRequisitionDetailsByFacility", "parameters": "(Facility facility)", "modifiers": "public", "return": "List<Rnr>", "signature": "List<Rnr> getRequisitionDetailsByFacility(Facility facility)", "full_signature": "public List<Rnr> getRequisitionDetailsByFacility(Facility facility)", "class_method_signature": "RequisitionRepository.getRequisitionDetailsByFacility(Facility facility)", "testcase": false, "constructor": false}, {"identifier": "insertRnrSignatures", "parameters": "(Rnr rnr)", "modifiers": "public", "return": "void", "signature": "void insertRnrSignatures(Rnr rnr)", "full_signature": "public void insertRnrSignatures(Rnr rnr)", "class_method_signature": "RequisitionRepository.insertRnrSignatures(Rnr rnr)", "testcase": false, "constructor": false}], "file": "modules/requisition/src/main/java/org/openlmis/rnr/repository/RequisitionRepository.java"}, "focal_method": {"identifier": "getCommentsByRnrID", "parameters": "(Long rnrId)", "modifiers": "public", "return": "List<Comment>", "body": "public List<Comment> getCommentsByRnrID(Long rnrId) {\n    return commentMapper.getByRnrId(rnrId);\n  }", "signature": "List<Comment> getCommentsByRnrID(Long rnrId)", "full_signature": "public List<Comment> getCommentsByRnrID(Long rnrId)", "class_method_signature": "RequisitionRepository.getCommentsByRnrID(Long rnrId)", "testcase": false, "constructor": false, "invocations": ["getByRnrId"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}