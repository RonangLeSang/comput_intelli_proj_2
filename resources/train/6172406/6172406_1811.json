{"test_class": {"identifier": "DistributionPermissionServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  private DeliveryZoneService deliveryZoneService;", "modifier": "@Mock\n  private", "type": "DeliveryZoneService", "declarator": "deliveryZoneService", "var_name": "deliveryZoneService"}, {"original_string": "@Mock\n  private DistributionService distributionService;", "modifier": "@Mock\n  private", "type": "DistributionService", "declarator": "distributionService", "var_name": "distributionService"}, {"original_string": "@InjectMocks\n  DistributionPermissionService distributionPermissionService;", "modifier": "@InjectMocks", "type": "DistributionPermissionService", "declarator": "distributionPermissionService", "var_name": "distributionPermissionService"}], "file": "modules/distribution/src/test/java/org/openlmis/distribution/service/DistributionPermissionServiceTest.java"}, "test_case": {"identifier": "shouldReturnFalseIfUserDoesNotHasPermissionOnADeliveryZone", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldReturnFalseIfUserDoesNotHasPermissionOnADeliveryZone() {\n    Long userId = 1L;\n    Long distributionId = 2L;\n    List<DeliveryZone> deliveryZones = emptyList();\n    when(deliveryZoneService.getByUserForRight(userId, MANAGE_DISTRIBUTION)).thenReturn(\n      deliveryZones);\n    when(distributionService.getBy(distributionId)).thenReturn(new Distribution());\n\n    assertThat(distributionPermissionService.hasPermission(userId, \"MANAGE_DISTRIBUTION\", 1L), is(false));\n  }", "signature": "void shouldReturnFalseIfUserDoesNotHasPermissionOnADeliveryZone()", "full_signature": "@Test public void shouldReturnFalseIfUserDoesNotHasPermissionOnADeliveryZone()", "class_method_signature": "DistributionPermissionServiceTest.shouldReturnFalseIfUserDoesNotHasPermissionOnADeliveryZone()", "testcase": true, "constructor": false, "invocations": ["emptyList", "thenReturn", "when", "getByUserForRight", "thenReturn", "when", "getBy", "assertThat", "hasPermission", "is"]}, "focal_class": {"identifier": "DistributionPermissionService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  private DistributionService distributionService;", "modifier": "@Autowired\n  private", "type": "DistributionService", "declarator": "distributionService", "var_name": "distributionService"}, {"original_string": "@Autowired\n  private DeliveryZoneService deliveryZoneService;", "modifier": "@Autowired\n  private", "type": "DeliveryZoneService", "declarator": "deliveryZoneService", "var_name": "deliveryZoneService"}], "methods": [{"identifier": "hasPermission", "parameters": "(Long userId, String permission, final Distribution distribution)", "modifiers": "public", "return": "Boolean", "signature": "Boolean hasPermission(Long userId, String permission, final Distribution distribution)", "full_signature": "public Boolean hasPermission(Long userId, String permission, final Distribution distribution)", "class_method_signature": "DistributionPermissionService.hasPermission(Long userId, String permission, final Distribution distribution)", "testcase": false, "constructor": false}, {"identifier": "hasPermission", "parameters": "(Long userId, String permission, final Long distributionId)", "modifiers": "public", "return": "Boolean", "signature": "Boolean hasPermission(Long userId, String permission, final Long distributionId)", "full_signature": "public Boolean hasPermission(Long userId, String permission, final Long distributionId)", "class_method_signature": "DistributionPermissionService.hasPermission(Long userId, String permission, final Long distributionId)", "testcase": false, "constructor": false}, {"identifier": "hasPermissionForDeliveryZone", "parameters": "(Long userId, String permission, final Distribution distribution)", "modifiers": "private", "return": "Boolean", "signature": "Boolean hasPermissionForDeliveryZone(Long userId, String permission, final Distribution distribution)", "full_signature": "private Boolean hasPermissionForDeliveryZone(Long userId, String permission, final Distribution distribution)", "class_method_signature": "DistributionPermissionService.hasPermissionForDeliveryZone(Long userId, String permission, final Distribution distribution)", "testcase": false, "constructor": false}], "file": "modules/distribution/src/main/java/org/openlmis/distribution/service/DistributionPermissionService.java"}, "focal_method": {"identifier": "hasPermission", "parameters": "(Long userId, String permission, final Distribution distribution)", "modifiers": "public", "return": "Boolean", "body": "public Boolean hasPermission(Long userId, String permission, final Distribution distribution) {\n    return hasPermissionForDeliveryZone(userId, permission, distribution);\n  }", "signature": "Boolean hasPermission(Long userId, String permission, final Distribution distribution)", "full_signature": "public Boolean hasPermission(Long userId, String permission, final Distribution distribution)", "class_method_signature": "DistributionPermissionService.hasPermission(Long userId, String permission, final Distribution distribution)", "testcase": false, "constructor": false, "invocations": ["hasPermissionForDeliveryZone"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}