{"test_class": {"identifier": "EquipmentTypeProductRepositoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  EquipmentTypeProductMapper mapper;", "modifier": "@Mock", "type": "EquipmentTypeProductMapper", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "@InjectMocks\n  EquipmentTypeProductRepository repository;", "modifier": "@InjectMocks", "type": "EquipmentTypeProductRepository", "declarator": "repository", "var_name": "repository"}], "file": "modules/equipment/src/test/java/org/openlmis/equipment/repository/EquipmentTypeProductRepositoryTest.java"}, "test_case": {"identifier": "shouldGetByProgramEquipmentId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldGetByProgramEquipmentId() throws Exception {\n    repository.getByProgramEquipmentId(1L);\n\n    verify(mapper).getByProgramEquipmentId(1L);\n  }", "signature": "void shouldGetByProgramEquipmentId()", "full_signature": "@Test public void shouldGetByProgramEquipmentId()", "class_method_signature": "EquipmentTypeProductRepositoryTest.shouldGetByProgramEquipmentId()", "testcase": true, "constructor": false, "invocations": ["getByProgramEquipmentId", "getByProgramEquipmentId", "verify"]}, "focal_class": {"identifier": "EquipmentTypeProductRepository", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  EquipmentTypeProductMapper mapper;", "modifier": "@Autowired", "type": "EquipmentTypeProductMapper", "declarator": "mapper", "var_name": "mapper"}], "methods": [{"identifier": "getByProgramEquipmentId", "parameters": "(Long programEquipmentId)", "modifiers": "public", "return": "List<EquipmentTypeProduct>", "signature": "List<EquipmentTypeProduct> getByProgramEquipmentId(Long programEquipmentId)", "full_signature": "public List<EquipmentTypeProduct> getByProgramEquipmentId(Long programEquipmentId)", "class_method_signature": "EquipmentTypeProductRepository.getByProgramEquipmentId(Long programEquipmentId)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(EquipmentTypeProduct equipmentTypeProduct)", "modifiers": "public", "return": "void", "signature": "void insert(EquipmentTypeProduct equipmentTypeProduct)", "full_signature": "public void insert(EquipmentTypeProduct equipmentTypeProduct)", "class_method_signature": "EquipmentTypeProductRepository.insert(EquipmentTypeProduct equipmentTypeProduct)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(EquipmentTypeProduct equipmentTypeProduct)", "modifiers": "public", "return": "void", "signature": "void update(EquipmentTypeProduct equipmentTypeProduct)", "full_signature": "public void update(EquipmentTypeProduct equipmentTypeProduct)", "class_method_signature": "EquipmentTypeProductRepository.update(EquipmentTypeProduct equipmentTypeProduct)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Long programEquipmentId)", "modifiers": "public", "return": "void", "signature": "void remove(Long programEquipmentId)", "full_signature": "public void remove(Long programEquipmentId)", "class_method_signature": "EquipmentTypeProductRepository.remove(Long programEquipmentId)", "testcase": false, "constructor": false}, {"identifier": "removeAllByEquipmentProducts", "parameters": "(Long programEquipmentId)", "modifiers": "public", "return": "void", "signature": "void removeAllByEquipmentProducts(Long programEquipmentId)", "full_signature": "public void removeAllByEquipmentProducts(Long programEquipmentId)", "class_method_signature": "EquipmentTypeProductRepository.removeAllByEquipmentProducts(Long programEquipmentId)", "testcase": false, "constructor": false}, {"identifier": "getAvailableProductsToLink", "parameters": "(Long programId, Long equipmentId)", "modifiers": "public", "return": "List<Product>", "signature": "List<Product> getAvailableProductsToLink(Long programId, Long equipmentId)", "full_signature": "public List<Product> getAvailableProductsToLink(Long programId, Long equipmentId)", "class_method_signature": "EquipmentTypeProductRepository.getAvailableProductsToLink(Long programId, Long equipmentId)", "testcase": false, "constructor": false}], "file": "modules/equipment/src/main/java/org/openlmis/equipment/repository/EquipmentTypeProductRepository.java"}, "focal_method": {"identifier": "getByProgramEquipmentId", "parameters": "(Long programEquipmentId)", "modifiers": "public", "return": "List<EquipmentTypeProduct>", "body": "public List<EquipmentTypeProduct> getByProgramEquipmentId(Long programEquipmentId){\n    return mapper.getByProgramEquipmentId(programEquipmentId);\n  }", "signature": "List<EquipmentTypeProduct> getByProgramEquipmentId(Long programEquipmentId)", "full_signature": "public List<EquipmentTypeProduct> getByProgramEquipmentId(Long programEquipmentId)", "class_method_signature": "EquipmentTypeProductRepository.getByProgramEquipmentId(Long programEquipmentId)", "testcase": false, "constructor": false, "invocations": ["getByProgramEquipmentId"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}