{"test_class": {"identifier": "RequisitionEmailServiceForSIMAMTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  private RnrMapperForSIMAM rnrMapperForSIMAM;", "modifier": "@Mock\n  private", "type": "RnrMapperForSIMAM", "declarator": "rnrMapperForSIMAM", "var_name": "rnrMapperForSIMAM"}, {"original_string": "@Mock\n  private EmailService emailService;", "modifier": "@Mock\n  private", "type": "EmailService", "declarator": "emailService", "var_name": "emailService"}, {"original_string": "@Mock\n  ConfigurationSettingService settingService;", "modifier": "@Mock", "type": "ConfigurationSettingService", "declarator": "settingService", "var_name": "settingService"}, {"original_string": "@Mock\n  private SingleListSheetExcelHandler singleListSheetExcelHandler;", "modifier": "@Mock\n  private", "type": "SingleListSheetExcelHandler", "declarator": "singleListSheetExcelHandler", "var_name": "singleListSheetExcelHandler"}, {"original_string": "private RequisitionEmailServiceForSIMAM requisitionEmailServiceForSIMAM = null;", "modifier": "private", "type": "RequisitionEmailServiceForSIMAM", "declarator": "requisitionEmailServiceForSIMAM = null", "var_name": "requisitionEmailServiceForSIMAM"}, {"original_string": "Rnr rnr;", "modifier": "", "type": "Rnr", "declarator": "rnr", "var_name": "rnr"}, {"original_string": "private List<Map<String, String>> dataList;", "modifier": "private", "type": "List<Map<String, String>>", "declarator": "dataList", "var_name": "dataList"}, {"original_string": "private List<User> users;", "modifier": "private", "type": "List<User>", "declarator": "users", "var_name": "users"}, {"original_string": "private List<Map<String, String>> regimenDataList;", "modifier": "private", "type": "List<Map<String, String>>", "declarator": "regimenDataList", "var_name": "regimenDataList"}], "file": "modules/requisition/src/test/java/org/openlmis/rnr/service/RequisitionEmailServiceForSIMAMTest.java"}, "test_case": {"identifier": "shouldNotEmailWhenUsersAreEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldNotEmailWhenUsersAreEmpty() throws Exception {\n    rnr.setStatus(RnrStatus.AUTHORIZED);\n    requisitionEmailServiceForSIMAM.sendRequisitionEmailWithAttachment(rnr, new ArrayList<User>());\n    verify(emailService, never()).insertEmailAttachmentList(anyList());\n  }", "signature": "void shouldNotEmailWhenUsersAreEmpty()", "full_signature": "@Test public void shouldNotEmailWhenUsersAreEmpty()", "class_method_signature": "RequisitionEmailServiceForSIMAMTest.shouldNotEmailWhenUsersAreEmpty()", "testcase": true, "constructor": false, "invocations": ["setStatus", "sendRequisitionEmailWithAttachment", "insertEmailAttachmentList", "verify", "never", "anyList"]}, "focal_class": {"identifier": "RequisitionEmailServiceForSIMAM", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(RequisitionEmailServiceForSIMAM.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(RequisitionEmailServiceForSIMAM.class)", "var_name": "logger"}, {"original_string": "public static final String TEMPLATE_IMPORT_RNR_XLSX = \"template_Simam_import_Requi.xlsx\";", "modifier": "public static final", "type": "String", "declarator": "TEMPLATE_IMPORT_RNR_XLSX = \"template_Simam_import_Requi.xlsx\"", "var_name": "TEMPLATE_IMPORT_RNR_XLSX"}, {"original_string": "public static final String TEMPLATE_IMPORT_REGIMEN_XLSX = \"template_Simam_import_Regimen.xlsx\";", "modifier": "public static final", "type": "String", "declarator": "TEMPLATE_IMPORT_REGIMEN_XLSX = \"template_Simam_import_Regimen.xlsx\"", "var_name": "TEMPLATE_IMPORT_REGIMEN_XLSX"}, {"original_string": "public static final String TEMPLATE_IMPORT_REGIMEN_XLSX_EMPTY = \"template_Simam_import_Regimen_EMPTY.xlsx\";", "modifier": "public static final", "type": "String", "declarator": "TEMPLATE_IMPORT_REGIMEN_XLSX_EMPTY = \"template_Simam_import_Regimen_EMPTY.xlsx\"", "var_name": "TEMPLATE_IMPORT_REGIMEN_XLSX_EMPTY"}, {"original_string": "public static final String FILE_APPLICATION_VND_MS_EXCEL = \"application/excel\";", "modifier": "public static final", "type": "String", "declarator": "FILE_APPLICATION_VND_MS_EXCEL = \"application/excel\"", "var_name": "FILE_APPLICATION_VND_MS_EXCEL"}, {"original_string": "public static final String REGIMEN_FILE_NAME_PREFIX = \"Regimen_Requi\";", "modifier": "public static final", "type": "String", "declarator": "REGIMEN_FILE_NAME_PREFIX = \"Regimen_Requi\"", "var_name": "REGIMEN_FILE_NAME_PREFIX"}, {"original_string": "public static final String REQUI_FILE_NAME_PREFIX = \"Requi\";", "modifier": "public static final", "type": "String", "declarator": "REQUI_FILE_NAME_PREFIX = \"Requi\"", "var_name": "REQUI_FILE_NAME_PREFIX"}, {"original_string": "public static final String EMAIL_TEMPLATE_FOR_REQUISITION_ATTACHMENT_PREFIX = \"EMAIL_TEMPLATE_FOR_REQUISITION_ATTACHMENT_\";", "modifier": "public static final", "type": "String", "declarator": "EMAIL_TEMPLATE_FOR_REQUISITION_ATTACHMENT_PREFIX = \"EMAIL_TEMPLATE_FOR_REQUISITION_ATTACHMENT_\"", "var_name": "EMAIL_TEMPLATE_FOR_REQUISITION_ATTACHMENT_PREFIX"}, {"original_string": "@Autowired\n\tprivate RnrMapperForSIMAM rnrMapperForSIMAM;", "modifier": "@Autowired\n\tprivate", "type": "RnrMapperForSIMAM", "declarator": "rnrMapperForSIMAM", "var_name": "rnrMapperForSIMAM"}, {"original_string": "@Autowired\n\tprivate EmailService emailService;", "modifier": "@Autowired\n\tprivate", "type": "EmailService", "declarator": "emailService", "var_name": "emailService"}, {"original_string": "@Autowired\n\tConfigurationSettingService settingService;", "modifier": "@Autowired", "type": "ConfigurationSettingService", "declarator": "settingService", "var_name": "settingService"}, {"original_string": "@Autowired\n\tprivate SingleListSheetExcelHandler singleListSheetExcelHandler;", "modifier": "@Autowired\n\tprivate", "type": "SingleListSheetExcelHandler", "declarator": "singleListSheetExcelHandler", "var_name": "singleListSheetExcelHandler"}, {"original_string": "public static final Map<String, String> SIMAM_PROGRAMS_MAP = MapUtils.putAll(new HashMap(),\n\t\t\t\t\t\t\t\t\t\tnew String[][]{\n\t\t\t\t\t\t\t\t\t\t\t{\"MMIA\", \"TARV\"},\n\t\t\t\t\t\t\t\t\t\t\t{\"ESS_MEDS\", \"Medicamentos Essenciais\"}\n\t\t\t\t\t\t\t\t\t\t});", "modifier": "public static final", "type": "Map<String, String>", "declarator": "SIMAM_PROGRAMS_MAP = MapUtils.putAll(new HashMap(),\n\t\t\t\t\t\t\t\t\t\tnew String[][]{\n\t\t\t\t\t\t\t\t\t\t\t{\"MMIA\", \"TARV\"},\n\t\t\t\t\t\t\t\t\t\t\t{\"ESS_MEDS\", \"Medicamentos Essenciais\"}\n\t\t\t\t\t\t\t\t\t\t})", "var_name": "SIMAM_PROGRAMS_MAP"}], "methods": [{"identifier": "sendRequisitionEmailWithAttachment", "parameters": "(Rnr requisition, List<User> users)", "modifiers": "public", "return": "void", "signature": "void sendRequisitionEmailWithAttachment(Rnr requisition, List<User> users)", "full_signature": "public void sendRequisitionEmailWithAttachment(Rnr requisition, List<User> users)", "class_method_signature": "RequisitionEmailServiceForSIMAM.sendRequisitionEmailWithAttachment(Rnr requisition, List<User> users)", "testcase": false, "constructor": false}, {"identifier": "insertEmailMessages", "parameters": "(Rnr requisition, List<User> users)", "modifiers": "private", "return": "void", "signature": "void insertEmailMessages(Rnr requisition, List<User> users)", "full_signature": "private void insertEmailMessages(Rnr requisition, List<User> users)", "class_method_signature": "RequisitionEmailServiceForSIMAM.insertEmailMessages(Rnr requisition, List<User> users)", "testcase": false, "constructor": false}, {"identifier": "createEmailBodyContent", "parameters": "(String programCode)", "modifiers": "private", "return": "String", "signature": "String createEmailBodyContent(String programCode)", "full_signature": "private String createEmailBodyContent(String programCode)", "class_method_signature": "RequisitionEmailServiceForSIMAM.createEmailBodyContent(String programCode)", "testcase": false, "constructor": false}, {"identifier": "convertOpenLMISProgramCodeToSIMAMCode", "parameters": "(final List<Map<String, String>> itemsMap)", "modifiers": "private", "return": "void", "signature": "void convertOpenLMISProgramCodeToSIMAMCode(final List<Map<String, String>> itemsMap)", "full_signature": "private void convertOpenLMISProgramCodeToSIMAMCode(final List<Map<String, String>> itemsMap)", "class_method_signature": "RequisitionEmailServiceForSIMAM.convertOpenLMISProgramCodeToSIMAMCode(final List<Map<String, String>> itemsMap)", "testcase": false, "constructor": false}, {"identifier": "generateRequisitionExcelForSIMAM", "parameters": "(Rnr requisition)", "modifiers": "public", "return": "EmailAttachment", "signature": "EmailAttachment generateRequisitionExcelForSIMAM(Rnr requisition)", "full_signature": "public EmailAttachment generateRequisitionExcelForSIMAM(Rnr requisition)", "class_method_signature": "RequisitionEmailServiceForSIMAM.generateRequisitionExcelForSIMAM(Rnr requisition)", "testcase": false, "constructor": false}, {"identifier": "generateRegimenExcelForSIMAM", "parameters": "(Rnr requisition)", "modifiers": "private", "return": "EmailAttachment", "signature": "EmailAttachment generateRegimenExcelForSIMAM(Rnr requisition)", "full_signature": "private EmailAttachment generateRegimenExcelForSIMAM(Rnr requisition)", "class_method_signature": "RequisitionEmailServiceForSIMAM.generateRegimenExcelForSIMAM(Rnr requisition)", "testcase": false, "constructor": false}, {"identifier": "fileNameForRequiItems", "parameters": "(Rnr requisition)", "modifiers": "private", "return": "String", "signature": "String fileNameForRequiItems(Rnr requisition)", "full_signature": "private String fileNameForRequiItems(Rnr requisition)", "class_method_signature": "RequisitionEmailServiceForSIMAM.fileNameForRequiItems(Rnr requisition)", "testcase": false, "constructor": false}, {"identifier": "fileNameForRegimens", "parameters": "(Rnr requisition)", "modifiers": "private", "return": "String", "signature": "String fileNameForRegimens(Rnr requisition)", "full_signature": "private String fileNameForRegimens(Rnr requisition)", "class_method_signature": "RequisitionEmailServiceForSIMAM.fileNameForRegimens(Rnr requisition)", "testcase": false, "constructor": false}, {"identifier": "prepareEmailAttachmentsForSIMAM", "parameters": "(Rnr requisition)", "modifiers": "private", "return": "List<EmailAttachment>", "signature": "List<EmailAttachment> prepareEmailAttachmentsForSIMAM(Rnr requisition)", "full_signature": "private List<EmailAttachment> prepareEmailAttachmentsForSIMAM(Rnr requisition)", "class_method_signature": "RequisitionEmailServiceForSIMAM.prepareEmailAttachmentsForSIMAM(Rnr requisition)", "testcase": false, "constructor": false}, {"identifier": "generateEmailAttachment", "parameters": "(String fileName, String filePath)", "modifiers": "private", "return": "EmailAttachment", "signature": "EmailAttachment generateEmailAttachment(String fileName, String filePath)", "full_signature": "private EmailAttachment generateEmailAttachment(String fileName, String filePath)", "class_method_signature": "RequisitionEmailServiceForSIMAM.generateEmailAttachment(String fileName, String filePath)", "testcase": false, "constructor": false}], "file": "modules/requisition/src/main/java/org/openlmis/rnr/service/RequisitionEmailServiceForSIMAM.java"}, "focal_method": {"identifier": "sendRequisitionEmailWithAttachment", "parameters": "(Rnr requisition, List<User> users)", "modifiers": "public", "return": "void", "body": "public void sendRequisitionEmailWithAttachment(Rnr requisition, List<User> users) {\n\t\tif (!requisition.getStatus().equals(RnrStatus.AUTHORIZED) || users.size() <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tinsertEmailMessages(requisition, users);\n\t}", "signature": "void sendRequisitionEmailWithAttachment(Rnr requisition, List<User> users)", "full_signature": "public void sendRequisitionEmailWithAttachment(Rnr requisition, List<User> users)", "class_method_signature": "RequisitionEmailServiceForSIMAM.sendRequisitionEmailWithAttachment(Rnr requisition, List<User> users)", "testcase": false, "constructor": false, "invocations": ["equals", "getStatus", "size", "insertEmailMessages"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}