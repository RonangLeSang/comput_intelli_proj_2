{"test_class": {"identifier": "ProgramRepositoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ProgramMapper programMapper;", "modifier": "private", "type": "ProgramMapper", "declarator": "programMapper", "var_name": "programMapper"}, {"original_string": "private ProgramRepository programRepository;", "modifier": "private", "type": "ProgramRepository", "declarator": "programRepository", "var_name": "programRepository"}, {"original_string": "@Rule\n  public ExpectedException exception = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "exception = ExpectedException.none()", "var_name": "exception"}], "file": "modules/core/src/test/java/org/openlmis/core/repository/ProgramRepositoryTest.java"}, "test_case": {"identifier": "shouldGetIvdProgramsSupportedByFacilityForUserWithRight", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldGetIvdProgramsSupportedByFacilityForUserWithRight() throws Exception {\n    Long facilityId = 1L;\n    Long userId = 1L;\n    List<Program> programs = new ArrayList<>();\n    when(programMapper.getIvdProgramsSupportedByUserHomeFacilityWithRights(facilityId, userId, \"{AUTHORIZE_REQUISITION, CREATE_REQUISITION}\")).thenReturn(programs);\n\n    List<Program> result = programRepository.getIvdProgramsSupportedByUserHomeFacilityWithRights(facilityId, userId, AUTHORIZE_REQUISITION, CREATE_REQUISITION);\n\n    verify(programMapper).getIvdProgramsSupportedByUserHomeFacilityWithRights(facilityId, userId, \"{AUTHORIZE_REQUISITION, CREATE_REQUISITION}\");\n    assertThat(result, is(programs));\n  }", "signature": "void shouldGetIvdProgramsSupportedByFacilityForUserWithRight()", "full_signature": "@Test public void shouldGetIvdProgramsSupportedByFacilityForUserWithRight()", "class_method_signature": "ProgramRepositoryTest.shouldGetIvdProgramsSupportedByFacilityForUserWithRight()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getIvdProgramsSupportedByUserHomeFacilityWithRights", "getIvdProgramsSupportedByUserHomeFacilityWithRights", "getIvdProgramsSupportedByUserHomeFacilityWithRights", "verify", "assertThat", "is"]}, "focal_class": {"identifier": "ProgramRepository", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ProgramMapper mapper;", "modifier": "private", "type": "ProgramMapper", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "public static String PROGRAM_CODE_INVALID = \"program.code.invalid\";", "modifier": "public static", "type": "String", "declarator": "PROGRAM_CODE_INVALID = \"program.code.invalid\"", "var_name": "PROGRAM_CODE_INVALID"}], "methods": [{"identifier": "ProgramRepository", "parameters": "(ProgramMapper programMapper)", "modifiers": "@Autowired public", "return": "", "signature": " ProgramRepository(ProgramMapper programMapper)", "full_signature": "@Autowired public  ProgramRepository(ProgramMapper programMapper)", "class_method_signature": "ProgramRepository.ProgramRepository(ProgramMapper programMapper)", "testcase": false, "constructor": true}, {"identifier": "insert", "parameters": "(Program p)", "modifiers": "public", "return": "void", "signature": "void insert(Program p)", "full_signature": "public void insert(Program p)", "class_method_signature": "ProgramRepository.insert(Program p)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Program program)", "modifiers": "public", "return": "Program", "signature": "Program update(Program program)", "full_signature": "public Program update(Program program)", "class_method_signature": "ProgramRepository.update(Program program)", "testcase": false, "constructor": false}, {"identifier": "getByFacility", "parameters": "(Long facilityId)", "modifiers": "public", "return": "List<Program>", "signature": "List<Program> getByFacility(Long facilityId)", "full_signature": "public List<Program> getByFacility(Long facilityId)", "class_method_signature": "ProgramRepository.getByFacility(Long facilityId)", "testcase": false, "constructor": false}, {"identifier": "getAllPullPrograms", "parameters": "()", "modifiers": "public", "return": "List<Program>", "signature": "List<Program> getAllPullPrograms()", "full_signature": "public List<Program> getAllPullPrograms()", "class_method_signature": "ProgramRepository.getAllPullPrograms()", "testcase": false, "constructor": false}, {"identifier": "getAllPushPrograms", "parameters": "()", "modifiers": "public", "return": "List<Program>", "signature": "List<Program> getAllPushPrograms()", "full_signature": "public List<Program> getAllPushPrograms()", "class_method_signature": "ProgramRepository.getAllPushPrograms()", "testcase": false, "constructor": false}, {"identifier": "getUserSupervisedActiveProgramsWithRights", "parameters": "(Long userId, String... rightNames)", "modifiers": "public", "return": "List<Program>", "signature": "List<Program> getUserSupervisedActiveProgramsWithRights(Long userId, String... rightNames)", "full_signature": "public List<Program> getUserSupervisedActiveProgramsWithRights(Long userId, String... rightNames)", "class_method_signature": "ProgramRepository.getUserSupervisedActiveProgramsWithRights(Long userId, String... rightNames)", "testcase": false, "constructor": false}, {"identifier": "getUserSupervisedActiveIvdProgramsWithRights", "parameters": "(Long userId, String... rightNames)", "modifiers": "public", "return": "List<Program>", "signature": "List<Program> getUserSupervisedActiveIvdProgramsWithRights(Long userId, String... rightNames)", "full_signature": "public List<Program> getUserSupervisedActiveIvdProgramsWithRights(Long userId, String... rightNames)", "class_method_signature": "ProgramRepository.getUserSupervisedActiveIvdProgramsWithRights(Long userId, String... rightNames)", "testcase": false, "constructor": false}, {"identifier": "getProgramsSupportedByUserHomeFacilityWithRights", "parameters": "(Long facilityId, Long userId, String... rightNames)", "modifiers": "public", "return": "List<Program>", "signature": "List<Program> getProgramsSupportedByUserHomeFacilityWithRights(Long facilityId, Long userId, String... rightNames)", "full_signature": "public List<Program> getProgramsSupportedByUserHomeFacilityWithRights(Long facilityId, Long userId, String... rightNames)", "class_method_signature": "ProgramRepository.getProgramsSupportedByUserHomeFacilityWithRights(Long facilityId, Long userId, String... rightNames)", "testcase": false, "constructor": false}, {"identifier": "getIvdProgramsSupportedByUserHomeFacilityWithRights", "parameters": "(Long facilityId, Long userId, String... rightNames)", "modifiers": "public", "return": "List<Program>", "signature": "List<Program> getIvdProgramsSupportedByUserHomeFacilityWithRights(Long facilityId, Long userId, String... rightNames)", "full_signature": "public List<Program> getIvdProgramsSupportedByUserHomeFacilityWithRights(Long facilityId, Long userId, String... rightNames)", "class_method_signature": "ProgramRepository.getIvdProgramsSupportedByUserHomeFacilityWithRights(Long facilityId, Long userId, String... rightNames)", "testcase": false, "constructor": false}, {"identifier": "getIdByCode", "parameters": "(String code)", "modifiers": "public", "return": "Long", "signature": "Long getIdByCode(String code)", "full_signature": "public Long getIdByCode(String code)", "class_method_signature": "ProgramRepository.getIdByCode(String code)", "testcase": false, "constructor": false}, {"identifier": "getActiveProgramsForUserWithRights", "parameters": "(Long userId, String... rightNames)", "modifiers": "public", "return": "List<Program>", "signature": "List<Program> getActiveProgramsForUserWithRights(Long userId, String... rightNames)", "full_signature": "public List<Program> getActiveProgramsForUserWithRights(Long userId, String... rightNames)", "class_method_signature": "ProgramRepository.getActiveProgramsForUserWithRights(Long userId, String... rightNames)", "testcase": false, "constructor": false}, {"identifier": "getById", "parameters": "(Long id)", "modifiers": "public", "return": "Program", "signature": "Program getById(Long id)", "full_signature": "public Program getById(Long id)", "class_method_signature": "ProgramRepository.getById(Long id)", "testcase": false, "constructor": false}, {"identifier": "setTemplateConfigured", "parameters": "(Long id)", "modifiers": "public", "return": "void", "signature": "void setTemplateConfigured(Long id)", "full_signature": "public void setTemplateConfigured(Long id)", "class_method_signature": "ProgramRepository.setTemplateConfigured(Long id)", "testcase": false, "constructor": false}, {"identifier": "getProgramsForUserByFacilityAndRights", "parameters": "(Long facilityId, Long userId, String... rightNames)", "modifiers": "public", "return": "List<Program>", "signature": "List<Program> getProgramsForUserByFacilityAndRights(Long facilityId, Long userId, String... rightNames)", "full_signature": "public List<Program> getProgramsForUserByFacilityAndRights(Long facilityId, Long userId, String... rightNames)", "class_method_signature": "ProgramRepository.getProgramsForUserByFacilityAndRights(Long facilityId, Long userId, String... rightNames)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "()", "modifiers": "public", "return": "List<Program>", "signature": "List<Program> getAll()", "full_signature": "public List<Program> getAll()", "class_method_signature": "ProgramRepository.getAll()", "testcase": false, "constructor": false}, {"identifier": "getByCode", "parameters": "(String code)", "modifiers": "public", "return": "Program", "signature": "Program getByCode(String code)", "full_signature": "public Program getByCode(String code)", "class_method_signature": "ProgramRepository.getByCode(String code)", "testcase": false, "constructor": false}, {"identifier": "setRegimenTemplateConfigured", "parameters": "(Long programId)", "modifiers": "public", "return": "void", "signature": "void setRegimenTemplateConfigured(Long programId)", "full_signature": "public void setRegimenTemplateConfigured(Long programId)", "class_method_signature": "ProgramRepository.setRegimenTemplateConfigured(Long programId)", "testcase": false, "constructor": false}, {"identifier": "setFeedSendFlag", "parameters": "(Program program, Boolean sendFeed)", "modifiers": "public", "return": "void", "signature": "void setFeedSendFlag(Program program, Boolean sendFeed)", "full_signature": "public void setFeedSendFlag(Program program, Boolean sendFeed)", "class_method_signature": "ProgramRepository.setFeedSendFlag(Program program, Boolean sendFeed)", "testcase": false, "constructor": false}, {"identifier": "getProgramsForNotification", "parameters": "()", "modifiers": "public", "return": "List<Program>", "signature": "List<Program> getProgramsForNotification()", "full_signature": "public List<Program> getProgramsForNotification()", "class_method_signature": "ProgramRepository.getProgramsForNotification()", "testcase": false, "constructor": false}, {"identifier": "getAllIvdPrograms", "parameters": "()", "modifiers": "public", "return": "List<Program>", "signature": "List<Program> getAllIvdPrograms()", "full_signature": "public List<Program> getAllIvdPrograms()", "class_method_signature": "ProgramRepository.getAllIvdPrograms()", "testcase": false, "constructor": false}], "file": "modules/core/src/main/java/org/openlmis/core/repository/ProgramRepository.java"}, "focal_method": {"identifier": "getIvdProgramsSupportedByUserHomeFacilityWithRights", "parameters": "(Long facilityId, Long userId, String... rightNames)", "modifiers": "public", "return": "List<Program>", "body": "public List<Program> getIvdProgramsSupportedByUserHomeFacilityWithRights(Long facilityId, Long userId, String... rightNames) {\n    return mapper.getIvdProgramsSupportedByUserHomeFacilityWithRights(facilityId, userId, commaSeparateRightNames(rightNames));\n  }", "signature": "List<Program> getIvdProgramsSupportedByUserHomeFacilityWithRights(Long facilityId, Long userId, String... rightNames)", "full_signature": "public List<Program> getIvdProgramsSupportedByUserHomeFacilityWithRights(Long facilityId, Long userId, String... rightNames)", "class_method_signature": "ProgramRepository.getIvdProgramsSupportedByUserHomeFacilityWithRights(Long facilityId, Long userId, String... rightNames)", "testcase": false, "constructor": false, "invocations": ["getIvdProgramsSupportedByUserHomeFacilityWithRights", "commaSeparateRightNames"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}