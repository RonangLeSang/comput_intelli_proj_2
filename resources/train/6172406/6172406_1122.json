{"test_class": {"identifier": "GeographicZonePersistenceHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GeographicZonePersistenceHandler geographicZonePersistenceHandler;", "modifier": "private", "type": "GeographicZonePersistenceHandler", "declarator": "geographicZonePersistenceHandler", "var_name": "geographicZonePersistenceHandler"}, {"original_string": "@Mock\n  private GeographicZoneService service;", "modifier": "@Mock\n  private", "type": "GeographicZoneService", "declarator": "service", "var_name": "service"}, {"original_string": "@Rule\n  public ExpectedException expectedEx  = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "expectedEx  = ExpectedException.none()", "var_name": "expectedEx"}], "file": "modules/core/src/test/java/org/openlmis/core/upload/GeographicZonePersistenceHandlerTest.java"}, "test_case": {"identifier": "shouldSaveGeographicZoneTaggedWithUserIdAndModifiedDate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldSaveGeographicZoneTaggedWithUserIdAndModifiedDate() throws Exception {\n    GeographicZone geographicZone = new GeographicZone();\n    geographicZonePersistenceHandler.save(geographicZone);\n    verify(service).save(geographicZone);\n  }", "signature": "void shouldSaveGeographicZoneTaggedWithUserIdAndModifiedDate()", "full_signature": "@Test public void shouldSaveGeographicZoneTaggedWithUserIdAndModifiedDate()", "class_method_signature": "GeographicZonePersistenceHandlerTest.shouldSaveGeographicZoneTaggedWithUserIdAndModifiedDate()", "testcase": true, "constructor": false, "invocations": ["save", "save", "verify"]}, "focal_class": {"identifier": "GeographicZonePersistenceHandler", "superclass": "extends AbstractModelPersistenceHandler", "interfaces": "", "fields": [{"original_string": "GeographicZoneService geographicZoneService;", "modifier": "", "type": "GeographicZoneService", "declarator": "geographicZoneService", "var_name": "geographicZoneService"}], "methods": [{"identifier": "GeographicZonePersistenceHandler", "parameters": "(GeographicZoneService geographicZoneService)", "modifiers": "@Autowired public", "return": "", "signature": " GeographicZonePersistenceHandler(GeographicZoneService geographicZoneService)", "full_signature": "@Autowired public  GeographicZonePersistenceHandler(GeographicZoneService geographicZoneService)", "class_method_signature": "GeographicZonePersistenceHandler.GeographicZonePersistenceHandler(GeographicZoneService geographicZoneService)", "testcase": false, "constructor": true}, {"identifier": "getExisting", "parameters": "(BaseModel record)", "modifiers": "@Override protected", "return": "BaseModel", "signature": "BaseModel getExisting(BaseModel record)", "full_signature": "@Override protected BaseModel getExisting(BaseModel record)", "class_method_signature": "GeographicZonePersistenceHandler.getExisting(BaseModel record)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(BaseModel record)", "modifiers": "@Override protected", "return": "void", "signature": "void save(BaseModel record)", "full_signature": "@Override protected void save(BaseModel record)", "class_method_signature": "GeographicZonePersistenceHandler.save(BaseModel record)", "testcase": false, "constructor": false}, {"identifier": "getMessageKey", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getMessageKey()", "full_signature": "@Override public String getMessageKey()", "class_method_signature": "GeographicZonePersistenceHandler.getMessageKey()", "testcase": false, "constructor": false}], "file": "modules/core/src/main/java/org/openlmis/core/upload/GeographicZonePersistenceHandler.java"}, "focal_method": {"identifier": "save", "parameters": "(BaseModel record)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n  protected void save(BaseModel record) {\n    geographicZoneService.save((GeographicZone) record);\n  }", "signature": "void save(BaseModel record)", "full_signature": "@Override protected void save(BaseModel record)", "class_method_signature": "GeographicZonePersistenceHandler.save(BaseModel record)", "testcase": false, "constructor": false, "invocations": ["save"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}