{"test_class": {"identifier": "LookupControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Principal principal;", "modifier": "", "type": "Principal", "declarator": "principal", "var_name": "principal"}, {"original_string": "RowBounds rowBounds = new RowBounds(RowBounds.NO_ROW_OFFSET, RowBounds.NO_ROW_LIMIT);", "modifier": "", "type": "RowBounds", "declarator": "rowBounds = new RowBounds(RowBounds.NO_ROW_OFFSET, RowBounds.NO_ROW_LIMIT)", "var_name": "rowBounds"}, {"original_string": "@Mock\n  private ReportLookupService lookupService;", "modifier": "@Mock\n  private", "type": "ReportLookupService", "declarator": "lookupService", "var_name": "lookupService"}, {"original_string": "@InjectMocks\n  private LookupController controller;", "modifier": "@InjectMocks\n  private", "type": "LookupController", "declarator": "controller", "var_name": "controller"}], "file": "modules/rest-api/src/test/java/org/openlmis/restapi/controller/LookupControllerTest.java"}, "test_case": {"identifier": "shouldGetProducts", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldGetProducts() throws Exception {\n    ResponseEntity<RestResponse> expectResponse = new ResponseEntity<>(new RestResponse(), HttpStatus.OK);\n    when(RestResponse.response(\"products\", new ArrayList<ProductList>())).thenReturn(expectResponse);\n    when(lookupService.getFullProductList(rowBounds)).thenReturn(new ArrayList<org.openlmis.core.domain.Product>());\n\n    ResponseEntity<RestResponse> response = controller.getProducts(1,10,false);\n\n    assertThat(response, is(expectResponse));\n  }", "signature": "void shouldGetProducts()", "full_signature": "@Test public void shouldGetProducts()", "class_method_signature": "LookupControllerTest.shouldGetProducts()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "response", "thenReturn", "when", "getFullProductList", "getProducts", "assertThat", "is"]}, "focal_class": {"identifier": "LookupController", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String ACCEPT_JSON = \"Accept=application/json\";", "modifier": "public static final", "type": "String", "declarator": "ACCEPT_JSON = \"Accept=application/json\"", "var_name": "ACCEPT_JSON"}, {"original_string": "public static final String UNEXPECTED_EXCEPTION = \"unexpected.exception\";", "modifier": "public static final", "type": "String", "declarator": "UNEXPECTED_EXCEPTION = \"unexpected.exception\"", "var_name": "UNEXPECTED_EXCEPTION"}, {"original_string": "public static final String FORBIDDEN_EXCEPTION = \"forbidden.exception\";", "modifier": "public static final", "type": "String", "declarator": "FORBIDDEN_EXCEPTION = \"forbidden.exception\"", "var_name": "FORBIDDEN_EXCEPTION"}, {"original_string": "public static final String PRODUCT_CATEGORIES = \"product-categories\";", "modifier": "public static final", "type": "String", "declarator": "PRODUCT_CATEGORIES = \"product-categories\"", "var_name": "PRODUCT_CATEGORIES"}, {"original_string": "public static final String PRODUCTS = \"products\";", "modifier": "public static final", "type": "String", "declarator": "PRODUCTS = \"products\"", "var_name": "PRODUCTS"}, {"original_string": "public static final String PRODUCT = \"product\";", "modifier": "public static final", "type": "String", "declarator": "PRODUCT = \"product\"", "var_name": "PRODUCT"}, {"original_string": "public static final String DOSAGE_UNITS = \"dosage-units\";", "modifier": "public static final", "type": "String", "declarator": "DOSAGE_UNITS = \"dosage-units\"", "var_name": "DOSAGE_UNITS"}, {"original_string": "public static final String FACILITY_TYPES = \"facility-types\";", "modifier": "public static final", "type": "String", "declarator": "FACILITY_TYPES = \"facility-types\"", "var_name": "FACILITY_TYPES"}, {"original_string": "public static final String FACILITIES = \"facilities\";", "modifier": "public static final", "type": "String", "declarator": "FACILITIES = \"facilities\"", "var_name": "FACILITIES"}, {"original_string": "public static final String FACILITY = \"facility\";", "modifier": "public static final", "type": "String", "declarator": "FACILITY = \"facility\"", "var_name": "FACILITY"}, {"original_string": "public static final String PROGRAMS = \"programs\";", "modifier": "public static final", "type": "String", "declarator": "PROGRAMS = \"programs\"", "var_name": "PROGRAMS"}, {"original_string": "public static final String PROGRAM_PRODUCTS = \"program-products\";", "modifier": "public static final", "type": "String", "declarator": "PROGRAM_PRODUCTS = \"program-products\"", "var_name": "PROGRAM_PRODUCTS"}, {"original_string": "public static final String FACILITY_APPROVED_PRODUCTS = \"facility-approved-products\";", "modifier": "public static final", "type": "String", "declarator": "FACILITY_APPROVED_PRODUCTS = \"facility-approved-products\"", "var_name": "FACILITY_APPROVED_PRODUCTS"}, {"original_string": "public static final String PROGRAM = \"program\";", "modifier": "public static final", "type": "String", "declarator": "PROGRAM = \"program\"", "var_name": "PROGRAM"}, {"original_string": "public static final String LOSSES_ADJUSTMENTS_TYPES = \"losses-adjustments-types\";", "modifier": "public static final", "type": "String", "declarator": "LOSSES_ADJUSTMENTS_TYPES = \"losses-adjustments-types\"", "var_name": "LOSSES_ADJUSTMENTS_TYPES"}, {"original_string": "public static final String PROCESSING_PERIODS = \"processing-periods\";", "modifier": "public static final", "type": "String", "declarator": "PROCESSING_PERIODS = \"processing-periods\"", "var_name": "PROCESSING_PERIODS"}, {"original_string": "public static final String PROCESSING_SCHEDULES = \"processing-schedules\";", "modifier": "public static final", "type": "String", "declarator": "PROCESSING_SCHEDULES = \"processing-schedules\"", "var_name": "PROCESSING_SCHEDULES"}, {"original_string": "public static final String GEOGRAPHIC_ZONES = \"geographic-zones\";", "modifier": "public static final", "type": "String", "declarator": "GEOGRAPHIC_ZONES = \"geographic-zones\"", "var_name": "GEOGRAPHIC_ZONES"}, {"original_string": "public static final String GEOGRAPHIC_LEVELS = \"geographic-levels\";", "modifier": "public static final", "type": "String", "declarator": "GEOGRAPHIC_LEVELS = \"geographic-levels\"", "var_name": "GEOGRAPHIC_LEVELS"}, {"original_string": "public static final String REGIMENS = \"regimens\";", "modifier": "public static final", "type": "String", "declarator": "REGIMENS = \"regimens\"", "var_name": "REGIMENS"}, {"original_string": "public static final String REGIMEN_CATEGORIES = \"regimen-categories\";", "modifier": "public static final", "type": "String", "declarator": "REGIMEN_CATEGORIES = \"regimen-categories\"", "var_name": "REGIMEN_CATEGORIES"}, {"original_string": "public static final String DOSAGE_FREQUENCIES = \"dosage-frequencies\";", "modifier": "public static final", "type": "String", "declarator": "DOSAGE_FREQUENCIES = \"dosage-frequencies\"", "var_name": "DOSAGE_FREQUENCIES"}, {"original_string": "public static final String REGIMEN_PRODUCT_COMBINATIONS = \"regimen-product-combinations\";", "modifier": "public static final", "type": "String", "declarator": "REGIMEN_PRODUCT_COMBINATIONS = \"regimen-product-combinations\"", "var_name": "REGIMEN_PRODUCT_COMBINATIONS"}, {"original_string": "public static final String REGIMEN_COMBINATION_CONSTITUENTS = \"regimen-combination-constituents\";", "modifier": "public static final", "type": "String", "declarator": "REGIMEN_COMBINATION_CONSTITUENTS = \"regimen-combination-constituents\"", "var_name": "REGIMEN_COMBINATION_CONSTITUENTS"}, {"original_string": "public static final String REGIMEN_CONSTITUENT_DOSAGES = \"regimen-constituent-dosages\";", "modifier": "public static final", "type": "String", "declarator": "REGIMEN_CONSTITUENT_DOSAGES = \"regimen-constituent-dosages\"", "var_name": "REGIMEN_CONSTITUENT_DOSAGES"}, {"original_string": "@Autowired\n  private ReportLookupService lookupService;", "modifier": "@Autowired\n  private", "type": "ReportLookupService", "declarator": "lookupService", "var_name": "lookupService"}], "methods": [{"identifier": "getProductCategories", "parameters": "()", "modifiers": "@ApiOperation(value = \"Product Categories\", notes = \"Returns a list of product categories\", response = ProductCategory.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = ProductCategory.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/product-categories\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getProductCategories()", "full_signature": "@ApiOperation(value = \"Product Categories\", notes = \"Returns a list of product categories\", response = ProductCategory.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = ProductCategory.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/product-categories\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getProductCategories()", "class_method_signature": "LookupController.getProductCategories()", "testcase": false, "constructor": false}, {"identifier": "getProducts", "parameters": "(@RequestParam(value = \"page\", defaultValue = \"1\") Integer page,\n                                    @RequestParam(value = \"pageSize\", defaultValue = \"10\") Integer pageSize,\n                                    @RequestParam(value = \"paging\", defaultValue = \"true\") Boolean paging\n  )", "modifiers": "@ApiOperation(value = \"Products\", notes = \"Returns a list of products.\", response = Product.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = Product.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/products\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getProducts(@RequestParam(value = \"page\", defaultValue = \"1\") Integer page,\n                                    @RequestParam(value = \"pageSize\", defaultValue = \"10\") Integer pageSize,\n                                    @RequestParam(value = \"paging\", defaultValue = \"true\") Boolean paging\n  )", "full_signature": "@ApiOperation(value = \"Products\", notes = \"Returns a list of products.\", response = Product.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = Product.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/products\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getProducts(@RequestParam(value = \"page\", defaultValue = \"1\") Integer page,\n                                    @RequestParam(value = \"pageSize\", defaultValue = \"10\") Integer pageSize,\n                                    @RequestParam(value = \"paging\", defaultValue = \"true\") Boolean paging\n  )", "class_method_signature": "LookupController.getProducts(@RequestParam(value = \"page\", defaultValue = \"1\") Integer page,\n                                    @RequestParam(value = \"pageSize\", defaultValue = \"10\") Integer pageSize,\n                                    @RequestParam(value = \"paging\", defaultValue = \"true\") Boolean paging\n  )", "testcase": false, "constructor": false}, {"identifier": "getProductByCode", "parameters": "(@PathVariable(\"code\") String code)", "modifiers": "@ApiOperation(value = \"Product Detail by Code\", notes = \"Returns details of a product\", response = Product.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = Product.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/product/{code}\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getProductByCode(@PathVariable(\"code\") String code)", "full_signature": "@ApiOperation(value = \"Product Detail by Code\", notes = \"Returns details of a product\", response = Product.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = Product.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/product/{code}\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getProductByCode(@PathVariable(\"code\") String code)", "class_method_signature": "LookupController.getProductByCode(@PathVariable(\"code\") String code)", "testcase": false, "constructor": false}, {"identifier": "getDosageUnits", "parameters": "()", "modifiers": "@ApiOperation(value = \"Dosage Units\", notes = \"Returns a list of Dosage Units.\", response = DosageUnit.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = DosageUnit.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/dosage-units\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getDosageUnits()", "full_signature": "@ApiOperation(value = \"Dosage Units\", notes = \"Returns a list of Dosage Units.\", response = DosageUnit.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = DosageUnit.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/dosage-units\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getDosageUnits()", "class_method_signature": "LookupController.getDosageUnits()", "testcase": false, "constructor": false}, {"identifier": "getFacilityTypes", "parameters": "()", "modifiers": "@ApiOperation(value = \"Facility Types\", notes = \"List of Facility Types.\", response = FacilityType.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = FacilityType.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/facility-types\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getFacilityTypes()", "full_signature": "@ApiOperation(value = \"Facility Types\", notes = \"List of Facility Types.\", response = FacilityType.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = FacilityType.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/facility-types\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getFacilityTypes()", "class_method_signature": "LookupController.getFacilityTypes()", "testcase": false, "constructor": false}, {"identifier": "getFacilities", "parameters": "(@RequestParam(value = \"page\", defaultValue = \"1\") Integer page,\n                                      @RequestParam(value = \"pageSize\", defaultValue = \"10\") Integer pageSize,\n                                      @RequestParam(value = \"paging\", defaultValue = \"true\") Boolean paging)", "modifiers": "@ApiOperation(value = \"Facilities\", notes = \"Returns a list of facilities.\", response = Facility.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = Facility.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/facilities\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getFacilities(@RequestParam(value = \"page\", defaultValue = \"1\") Integer page,\n                                      @RequestParam(value = \"pageSize\", defaultValue = \"10\") Integer pageSize,\n                                      @RequestParam(value = \"paging\", defaultValue = \"true\") Boolean paging)", "full_signature": "@ApiOperation(value = \"Facilities\", notes = \"Returns a list of facilities.\", response = Facility.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = Facility.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/facilities\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getFacilities(@RequestParam(value = \"page\", defaultValue = \"1\") Integer page,\n                                      @RequestParam(value = \"pageSize\", defaultValue = \"10\") Integer pageSize,\n                                      @RequestParam(value = \"paging\", defaultValue = \"true\") Boolean paging)", "class_method_signature": "LookupController.getFacilities(@RequestParam(value = \"page\", defaultValue = \"1\") Integer page,\n                                      @RequestParam(value = \"pageSize\", defaultValue = \"10\") Integer pageSize,\n                                      @RequestParam(value = \"paging\", defaultValue = \"true\") Boolean paging)", "testcase": false, "constructor": false}, {"identifier": "getFacilityByCode", "parameters": "(@PathVariable(\"code\") String code)", "modifiers": "@ApiOperation(value = \"Facility Detail by Code\", notes = \"Returns Facility Detail by Code\", response = Facility.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = Facility.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/facility/{code}\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getFacilityByCode(@PathVariable(\"code\") String code)", "full_signature": "@ApiOperation(value = \"Facility Detail by Code\", notes = \"Returns Facility Detail by Code\", response = Facility.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = Facility.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/facility/{code}\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getFacilityByCode(@PathVariable(\"code\") String code)", "class_method_signature": "LookupController.getFacilityByCode(@PathVariable(\"code\") String code)", "testcase": false, "constructor": false}, {"identifier": "getPrograms", "parameters": "()", "modifiers": "@ApiOperation(value = \"Programs\", notes = \"Returns a list of Programs.\", response = Program.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = Program.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/programs\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getPrograms()", "full_signature": "@ApiOperation(value = \"Programs\", notes = \"Returns a list of Programs.\", response = Program.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = Program.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/programs\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getPrograms()", "class_method_signature": "LookupController.getPrograms()", "testcase": false, "constructor": false}, {"identifier": "getProgramProducts", "parameters": "()", "modifiers": "@ApiOperation(value = \"Program Products\", notes = \"Returns a complete list of Products supported by Program.\", response = ProgramProduct.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = ProgramProduct.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/program-products\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getProgramProducts()", "full_signature": "@ApiOperation(value = \"Program Products\", notes = \"Returns a complete list of Products supported by Program.\", response = ProgramProduct.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = ProgramProduct.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/program-products\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getProgramProducts()", "class_method_signature": "LookupController.getProgramProducts()", "testcase": false, "constructor": false}, {"identifier": "getFacilityApprovedProducts", "parameters": "()", "modifiers": "@ApiOperation(value = \"Facility Type Approved Products\", notes = \"Returns a complete list of Facility type supported by Program.\", response = FacilityTypeApprovedProduct.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = FacilityTypeApprovedProduct.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/facility-approved-products\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getFacilityApprovedProducts()", "full_signature": "@ApiOperation(value = \"Facility Type Approved Products\", notes = \"Returns a complete list of Facility type supported by Program.\", response = FacilityTypeApprovedProduct.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = FacilityTypeApprovedProduct.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/facility-approved-products\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getFacilityApprovedProducts()", "class_method_signature": "LookupController.getFacilityApprovedProducts()", "testcase": false, "constructor": false}, {"identifier": "getProgramByCode", "parameters": "(@PathVariable(\"code\") String code)", "modifiers": "@ApiOperation(value = \"Program detail By Code\", notes = \"Returns program detail by code\", response = Program.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = Program.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/program/{code}\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getProgramByCode(@PathVariable(\"code\") String code)", "full_signature": "@ApiOperation(value = \"Program detail By Code\", notes = \"Returns program detail by code\", response = Program.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = Program.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/program/{code}\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getProgramByCode(@PathVariable(\"code\") String code)", "class_method_signature": "LookupController.getProgramByCode(@PathVariable(\"code\") String code)", "testcase": false, "constructor": false}, {"identifier": "getLossesAdjustmentsTypes", "parameters": "()", "modifiers": "@ApiOperation(value = \"Loss and Adjustment Types\", notes = \"Returns loss and adjustment types\", response = LossesAndAdjustmentsType.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = LossesAndAdjustmentsType.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/losses-adjustments-types\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getLossesAdjustmentsTypes()", "full_signature": "@ApiOperation(value = \"Loss and Adjustment Types\", notes = \"Returns loss and adjustment types\", response = LossesAndAdjustmentsType.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = LossesAndAdjustmentsType.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/losses-adjustments-types\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getLossesAdjustmentsTypes()", "class_method_signature": "LookupController.getLossesAdjustmentsTypes()", "testcase": false, "constructor": false}, {"identifier": "getProcessingPeriods", "parameters": "()", "modifiers": "@ApiOperation(value = \"Processing Periods\", notes = \"Returns all processing periods\", response = org.openlmis.report.model.dto.ProcessingPeriod.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = org.openlmis.report.model.dto.ProcessingPeriod.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/processing-periods\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getProcessingPeriods()", "full_signature": "@ApiOperation(value = \"Processing Periods\", notes = \"Returns all processing periods\", response = org.openlmis.report.model.dto.ProcessingPeriod.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = org.openlmis.report.model.dto.ProcessingPeriod.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/processing-periods\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getProcessingPeriods()", "class_method_signature": "LookupController.getProcessingPeriods()", "testcase": false, "constructor": false}, {"identifier": "getProcessingSchedules", "parameters": "()", "modifiers": "@ApiOperation(value = \"Processing Schedules\", notes = \"Returns list of processing schedule groups\", response = ProcessingSchedule.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = ProcessingSchedule.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/processing-schedules\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getProcessingSchedules()", "full_signature": "@ApiOperation(value = \"Processing Schedules\", notes = \"Returns list of processing schedule groups\", response = ProcessingSchedule.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = ProcessingSchedule.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/processing-schedules\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getProcessingSchedules()", "class_method_signature": "LookupController.getProcessingSchedules()", "testcase": false, "constructor": false}, {"identifier": "getGeographicZones", "parameters": "()", "modifiers": "@ApiOperation(value = \"Geographic Zones\", notes = \"Returns list of geographic zones\", response = GeographicZone.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = GeographicZone.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/geographic-zones\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getGeographicZones()", "full_signature": "@ApiOperation(value = \"Geographic Zones\", notes = \"Returns list of geographic zones\", response = GeographicZone.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = GeographicZone.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/geographic-zones\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getGeographicZones()", "class_method_signature": "LookupController.getGeographicZones()", "testcase": false, "constructor": false}, {"identifier": "getGeographicLevels", "parameters": "()", "modifiers": "@ApiOperation(value = \"Geographic Levels\", notes = \"Returns list of geographic levels\", response = GeographicLevel.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = GeographicLevel.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/geographic-levels\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getGeographicLevels()", "full_signature": "@ApiOperation(value = \"Geographic Levels\", notes = \"Returns list of geographic levels\", response = GeographicLevel.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = GeographicLevel.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/geographic-levels\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getGeographicLevels()", "class_method_signature": "LookupController.getGeographicLevels()", "testcase": false, "constructor": false}, {"identifier": "getRegimens", "parameters": "()", "modifiers": "@ApiOperation(value = \"Regimens\", notes = \"Returns list of regimens\", response = Regimen.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = Regimen.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/regimens\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getRegimens()", "full_signature": "@ApiOperation(value = \"Regimens\", notes = \"Returns list of regimens\", response = Regimen.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = Regimen.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/regimens\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getRegimens()", "class_method_signature": "LookupController.getRegimens()", "testcase": false, "constructor": false}, {"identifier": "getRegimenCategories", "parameters": "()", "modifiers": "@ApiOperation(value = \"Regimen Categories\", notes = \"Returns list of regimen categories\", response = RegimenCategory.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = RegimenCategory.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/regimen-categories\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getRegimenCategories()", "full_signature": "@ApiOperation(value = \"Regimen Categories\", notes = \"Returns list of regimen categories\", response = RegimenCategory.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = RegimenCategory.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/regimen-categories\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getRegimenCategories()", "class_method_signature": "LookupController.getRegimenCategories()", "testcase": false, "constructor": false}, {"identifier": "getDosageFrequencies", "parameters": "()", "modifiers": "@ApiOperation(value = \"Dosage Frequencies\", notes = \"Returns list of dosage frequencies\", response = DosageFrequency.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = DosageFrequency.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/dosage-frequencies\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getDosageFrequencies()", "full_signature": "@ApiOperation(value = \"Dosage Frequencies\", notes = \"Returns list of dosage frequencies\", response = DosageFrequency.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = DosageFrequency.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/dosage-frequencies\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getDosageFrequencies()", "class_method_signature": "LookupController.getDosageFrequencies()", "testcase": false, "constructor": false}, {"identifier": "getRegimenProductCombinations", "parameters": "()", "modifiers": "@ApiOperation(value = \"Regimen Product Combinations\", notes = \"Returns list of regimen product combinations\", response = RegimenProductCombination.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = RegimenProductCombination.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/regimen-product-combinations\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getRegimenProductCombinations()", "full_signature": "@ApiOperation(value = \"Regimen Product Combinations\", notes = \"Returns list of regimen product combinations\", response = RegimenProductCombination.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = RegimenProductCombination.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/regimen-product-combinations\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getRegimenProductCombinations()", "class_method_signature": "LookupController.getRegimenProductCombinations()", "testcase": false, "constructor": false}, {"identifier": "getRegimenCombinationConstituents", "parameters": "()", "modifiers": "@ApiOperation(value = \"Regimen Combination Constituents\", notes = \"Returns list of regimen combination constituents\", response = RegimenCombinationConstituent.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = RegimenCombinationConstituent.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/regimen-combination-constituents\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getRegimenCombinationConstituents()", "full_signature": "@ApiOperation(value = \"Regimen Combination Constituents\", notes = \"Returns list of regimen combination constituents\", response = RegimenCombinationConstituent.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = RegimenCombinationConstituent.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/regimen-combination-constituents\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getRegimenCombinationConstituents()", "class_method_signature": "LookupController.getRegimenCombinationConstituents()", "testcase": false, "constructor": false}, {"identifier": "getRegimenConstituentDosages", "parameters": "()", "modifiers": "@ApiOperation(value = \"Regimen Constituents' Dosages\", notes = \"Returns list of dosages for regimen constituents\", response = RegimenConstituentDosage.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = RegimenConstituentDosage.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/regimen-constituent-dosages\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "signature": "ResponseEntity getRegimenConstituentDosages()", "full_signature": "@ApiOperation(value = \"Regimen Constituents' Dosages\", notes = \"Returns list of dosages for regimen constituents\", response = RegimenConstituentDosage.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = RegimenConstituentDosage.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/regimen-constituent-dosages\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getRegimenConstituentDosages()", "class_method_signature": "LookupController.getRegimenConstituentDosages()", "testcase": false, "constructor": false}, {"identifier": "handleException", "parameters": "(Exception ex)", "modifiers": "@ExceptionHandler(Exception.class) public", "return": "ResponseEntity<RestResponse>", "signature": "ResponseEntity<RestResponse> handleException(Exception ex)", "full_signature": "@ExceptionHandler(Exception.class) public ResponseEntity<RestResponse> handleException(Exception ex)", "class_method_signature": "LookupController.handleException(Exception ex)", "testcase": false, "constructor": false}], "file": "modules/rest-api/src/main/java/org/openlmis/restapi/controller/LookupController.java"}, "focal_method": {"identifier": "getProducts", "parameters": "(@RequestParam(value = \"page\", defaultValue = \"1\") Integer page,\n                                    @RequestParam(value = \"pageSize\", defaultValue = \"10\") Integer pageSize,\n                                    @RequestParam(value = \"paging\", defaultValue = \"true\") Boolean paging\n  )", "modifiers": "@ApiOperation(value = \"Products\", notes = \"Returns a list of products.\", response = Product.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = Product.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/products\", method = RequestMethod.GET, headers = ACCEPT_JSON) public", "return": "ResponseEntity", "body": "@ApiOperation(value = \"Products\", notes = \"Returns a list of products.\", response = Product.class)\n  @ApiResponses(value = {\n      @ApiResponse(code = 200, message = \"Successful request\", response = Product.class),\n      @ApiResponse(code = 500, message = \"Internal server error\")}\n  )\n  @RequestMapping(value = \"/rest-api/lookup/products\", method = RequestMethod.GET, headers = ACCEPT_JSON)\n  public ResponseEntity getProducts(@RequestParam(value = \"page\", defaultValue = \"1\") Integer page,\n                                    @RequestParam(value = \"pageSize\", defaultValue = \"10\") Integer pageSize,\n                                    @RequestParam(value = \"paging\", defaultValue = \"true\") Boolean paging\n  ) {\n    RowBounds rowBounds = paging ? new RowBounds(page, pageSize) : new RowBounds(RowBounds.NO_ROW_OFFSET, RowBounds.NO_ROW_LIMIT);\n    return RestResponse.response(PRODUCTS, lookupService.getFullProductList(rowBounds));\n  }", "signature": "ResponseEntity getProducts(@RequestParam(value = \"page\", defaultValue = \"1\") Integer page,\n                                    @RequestParam(value = \"pageSize\", defaultValue = \"10\") Integer pageSize,\n                                    @RequestParam(value = \"paging\", defaultValue = \"true\") Boolean paging\n  )", "full_signature": "@ApiOperation(value = \"Products\", notes = \"Returns a list of products.\", response = Product.class) @ApiResponses(value = { @ApiResponse(code = 200, message = \"Successful request\", response = Product.class), @ApiResponse(code = 500, message = \"Internal server error\")} ) @RequestMapping(value = \"/rest-api/lookup/products\", method = RequestMethod.GET, headers = ACCEPT_JSON) public ResponseEntity getProducts(@RequestParam(value = \"page\", defaultValue = \"1\") Integer page,\n                                    @RequestParam(value = \"pageSize\", defaultValue = \"10\") Integer pageSize,\n                                    @RequestParam(value = \"paging\", defaultValue = \"true\") Boolean paging\n  )", "class_method_signature": "LookupController.getProducts(@RequestParam(value = \"page\", defaultValue = \"1\") Integer page,\n                                    @RequestParam(value = \"pageSize\", defaultValue = \"10\") Integer pageSize,\n                                    @RequestParam(value = \"paging\", defaultValue = \"true\") Boolean paging\n  )", "testcase": false, "constructor": false, "invocations": ["response", "getFullProductList"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}