{"test_class": {"identifier": "RequisitionGroupProgramScheduleRepositoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "RequisitionGroupProgramScheduleRepository repository;", "modifier": "", "type": "RequisitionGroupProgramScheduleRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "RequisitionGroupProgramSchedule requisitionGroupProgramSchedule;", "modifier": "", "type": "RequisitionGroupProgramSchedule", "declarator": "requisitionGroupProgramSchedule", "var_name": "requisitionGroupProgramSchedule"}, {"original_string": "@Rule\n  public ExpectedException expectedEx = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "expectedEx = ExpectedException.none()", "var_name": "expectedEx"}, {"original_string": "@Mock\n  RequisitionGroupMapper requisitionGroupMapper;", "modifier": "@Mock", "type": "RequisitionGroupMapper", "declarator": "requisitionGroupMapper", "var_name": "requisitionGroupMapper"}, {"original_string": "@Mock\n  ProgramRepository programRepository;", "modifier": "@Mock", "type": "ProgramRepository", "declarator": "programRepository", "var_name": "programRepository"}, {"original_string": "@Mock\n  ProcessingScheduleMapper processingScheduleMapper;", "modifier": "@Mock", "type": "ProcessingScheduleMapper", "declarator": "processingScheduleMapper", "var_name": "processingScheduleMapper"}, {"original_string": "@Mock\n  FacilityMapper facilityMapper;", "modifier": "@Mock", "type": "FacilityMapper", "declarator": "facilityMapper", "var_name": "facilityMapper"}, {"original_string": "@Mock\n  RequisitionGroupProgramScheduleMapper requisitionGroupProgramScheduleMapper;", "modifier": "@Mock", "type": "RequisitionGroupProgramScheduleMapper", "declarator": "requisitionGroupProgramScheduleMapper", "var_name": "requisitionGroupProgramScheduleMapper"}, {"original_string": "private Facility dropOffFacility;", "modifier": "private", "type": "Facility", "declarator": "dropOffFacility", "var_name": "dropOffFacility"}], "file": "modules/core/src/test/java/org/openlmis/core/repository/RequisitionGroupProgramScheduleRepositoryTest.java"}, "test_case": {"identifier": "shouldGiveErrorIfProgramIsOfTypePushWhileInsert", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldGiveErrorIfProgramIsOfTypePushWhileInsert() {\n    Program program = new Program();\n    program.setPush(true);\n    Long programId = 1L;\n    Long facilityId = 99L;\n    Long scheduleId = 1L;\n    when(requisitionGroupMapper.getIdForCode(requisitionGroupProgramSchedule.getRequisitionGroup().getCode())).thenReturn(1L);\n    when(programRepository.getIdByCode(requisitionGroupProgramSchedule.getProgram().getCode())).thenReturn(programId);\n    when(processingScheduleMapper.getIdForCode(requisitionGroupProgramSchedule.getProcessingSchedule().getCode())).thenReturn(scheduleId);\n    requisitionGroupProgramSchedule.setDropOffFacility(dropOffFacility);\n    when(programRepository.getById(programId)).thenReturn(program);\n    when(facilityMapper.getIdForCode(dropOffFacility.getCode())).thenReturn(facilityId);\n\n    expectedEx.expect(dataExceptionMatcher(\"error.program.type.not.supported.requisitions\"));\n\n    repository.insert(requisitionGroupProgramSchedule);\n  }", "signature": "void shouldGiveErrorIfProgramIsOfTypePushWhileInsert()", "full_signature": "@Test public void shouldGiveErrorIfProgramIsOfTypePushWhileInsert()", "class_method_signature": "RequisitionGroupProgramScheduleRepositoryTest.shouldGiveErrorIfProgramIsOfTypePushWhileInsert()", "testcase": true, "constructor": false, "invocations": ["setPush", "thenReturn", "when", "getIdForCode", "getCode", "getRequisitionGroup", "thenReturn", "when", "getIdByCode", "getCode", "getProgram", "thenReturn", "when", "getIdForCode", "getCode", "getProcessingSchedule", "setDropOffFacility", "thenReturn", "when", "getById", "thenReturn", "when", "getIdForCode", "getCode", "expect", "dataExceptionMatcher", "insert"]}, "focal_class": {"identifier": "RequisitionGroupProgramScheduleRepository", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RequisitionGroupProgramScheduleMapper mapper;", "modifier": "private", "type": "RequisitionGroupProgramScheduleMapper", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "private RequisitionGroupMapper requisitionGroupMapper;", "modifier": "private", "type": "RequisitionGroupMapper", "declarator": "requisitionGroupMapper", "var_name": "requisitionGroupMapper"}, {"original_string": "private ProgramRepository programRepository;", "modifier": "private", "type": "ProgramRepository", "declarator": "programRepository", "var_name": "programRepository"}, {"original_string": "private ProcessingScheduleMapper processingScheduleMapper;", "modifier": "private", "type": "ProcessingScheduleMapper", "declarator": "processingScheduleMapper", "var_name": "processingScheduleMapper"}, {"original_string": "private FacilityMapper facilityMapper;", "modifier": "private", "type": "FacilityMapper", "declarator": "facilityMapper", "var_name": "facilityMapper"}], "methods": [{"identifier": "RequisitionGroupProgramScheduleRepository", "parameters": "(\n    RequisitionGroupProgramScheduleMapper requisitionGroupProgramScheduleMapper,\n    RequisitionGroupMapper requisitionGroupMapper,\n    ProgramRepository programRepository,\n    ProcessingScheduleMapper processingScheduleMapper,\n    FacilityMapper facilityMapper)", "modifiers": "@Autowired public", "return": "", "signature": " RequisitionGroupProgramScheduleRepository(\n    RequisitionGroupProgramScheduleMapper requisitionGroupProgramScheduleMapper,\n    RequisitionGroupMapper requisitionGroupMapper,\n    ProgramRepository programRepository,\n    ProcessingScheduleMapper processingScheduleMapper,\n    FacilityMapper facilityMapper)", "full_signature": "@Autowired public  RequisitionGroupProgramScheduleRepository(\n    RequisitionGroupProgramScheduleMapper requisitionGroupProgramScheduleMapper,\n    RequisitionGroupMapper requisitionGroupMapper,\n    ProgramRepository programRepository,\n    ProcessingScheduleMapper processingScheduleMapper,\n    FacilityMapper facilityMapper)", "class_method_signature": "RequisitionGroupProgramScheduleRepository.RequisitionGroupProgramScheduleRepository(\n    RequisitionGroupProgramScheduleMapper requisitionGroupProgramScheduleMapper,\n    RequisitionGroupMapper requisitionGroupMapper,\n    ProgramRepository programRepository,\n    ProcessingScheduleMapper processingScheduleMapper,\n    FacilityMapper facilityMapper)", "testcase": false, "constructor": true}, {"identifier": "insert", "parameters": "(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "modifiers": "public", "return": "void", "signature": "void insert(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "full_signature": "public void insert(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "class_method_signature": "RequisitionGroupProgramScheduleRepository.insert(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "testcase": false, "constructor": false}, {"identifier": "validateProgramType", "parameters": "(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "modifiers": "private", "return": "void", "signature": "void validateProgramType(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "full_signature": "private void validateProgramType(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "class_method_signature": "RequisitionGroupProgramScheduleRepository.validateProgramType(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "modifiers": "public", "return": "void", "signature": "void update(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "full_signature": "public void update(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "class_method_signature": "RequisitionGroupProgramScheduleRepository.update(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "testcase": false, "constructor": false}, {"identifier": "populateIdsForRequisitionProgramScheduleEntities", "parameters": "(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "modifiers": "private", "return": "void", "signature": "void populateIdsForRequisitionProgramScheduleEntities(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "full_signature": "private void populateIdsForRequisitionProgramScheduleEntities(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "class_method_signature": "RequisitionGroupProgramScheduleRepository.populateIdsForRequisitionProgramScheduleEntities(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "testcase": false, "constructor": false}, {"identifier": "validateRequisitionGroupSchedule", "parameters": "(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "modifiers": "private", "return": "void", "signature": "void validateRequisitionGroupSchedule(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "full_signature": "private void validateRequisitionGroupSchedule(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "class_method_signature": "RequisitionGroupProgramScheduleRepository.validateRequisitionGroupSchedule(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "testcase": false, "constructor": false}, {"identifier": "getScheduleForRequisitionGroupAndProgram", "parameters": "(Long requisitionGroupId, Long programId)", "modifiers": "public", "return": "RequisitionGroupProgramSchedule", "signature": "RequisitionGroupProgramSchedule getScheduleForRequisitionGroupAndProgram(Long requisitionGroupId, Long programId)", "full_signature": "public RequisitionGroupProgramSchedule getScheduleForRequisitionGroupAndProgram(Long requisitionGroupId, Long programId)", "class_method_signature": "RequisitionGroupProgramScheduleRepository.getScheduleForRequisitionGroupAndProgram(Long requisitionGroupId, Long programId)", "testcase": false, "constructor": false}, {"identifier": "getProgramIDsForRequisitionGroup", "parameters": "(Long requisitionGroupId)", "modifiers": "public", "return": "List<Long>", "signature": "List<Long> getProgramIDsForRequisitionGroup(Long requisitionGroupId)", "full_signature": "public List<Long> getProgramIDsForRequisitionGroup(Long requisitionGroupId)", "class_method_signature": "RequisitionGroupProgramScheduleRepository.getProgramIDsForRequisitionGroup(Long requisitionGroupId)", "testcase": false, "constructor": false}, {"identifier": "getScheduleForRequisitionGroupCodeAndProgramCode", "parameters": "(String requisitionGroupCode, String programCode)", "modifiers": "public", "return": "RequisitionGroupProgramSchedule", "signature": "RequisitionGroupProgramSchedule getScheduleForRequisitionGroupCodeAndProgramCode(String requisitionGroupCode, String programCode)", "full_signature": "public RequisitionGroupProgramSchedule getScheduleForRequisitionGroupCodeAndProgramCode(String requisitionGroupCode, String programCode)", "class_method_signature": "RequisitionGroupProgramScheduleRepository.getScheduleForRequisitionGroupCodeAndProgramCode(String requisitionGroupCode, String programCode)", "testcase": false, "constructor": false}, {"identifier": "getByRequisitionGroupId", "parameters": "(Long requisitionGroupId)", "modifiers": "public", "return": "List<RequisitionGroupProgramSchedule>", "signature": "List<RequisitionGroupProgramSchedule> getByRequisitionGroupId(Long requisitionGroupId)", "full_signature": "public List<RequisitionGroupProgramSchedule> getByRequisitionGroupId(Long requisitionGroupId)", "class_method_signature": "RequisitionGroupProgramScheduleRepository.getByRequisitionGroupId(Long requisitionGroupId)", "testcase": false, "constructor": false}, {"identifier": "deleteRequisitionGroupProgramSchedulesFor", "parameters": "(Long requisitionGroupId)", "modifiers": "public", "return": "void", "signature": "void deleteRequisitionGroupProgramSchedulesFor(Long requisitionGroupId)", "full_signature": "public void deleteRequisitionGroupProgramSchedulesFor(Long requisitionGroupId)", "class_method_signature": "RequisitionGroupProgramScheduleRepository.deleteRequisitionGroupProgramSchedulesFor(Long requisitionGroupId)", "testcase": false, "constructor": false}], "file": "modules/core/src/main/java/org/openlmis/core/repository/RequisitionGroupProgramScheduleRepository.java"}, "focal_method": {"identifier": "insert", "parameters": "(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "modifiers": "public", "return": "void", "body": "public void insert(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule) {\n    populateIdsForRequisitionProgramScheduleEntities(requisitionGroupProgramSchedule);\n    validateRequisitionGroupSchedule(requisitionGroupProgramSchedule);\n    validateProgramType(requisitionGroupProgramSchedule);\n    try {\n      mapper.insert(requisitionGroupProgramSchedule);\n    } catch (DuplicateKeyException e) {\n      throw new DataException(\"error.duplicate.requisition.group.program.combination\");\n    }\n  }", "signature": "void insert(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "full_signature": "public void insert(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "class_method_signature": "RequisitionGroupProgramScheduleRepository.insert(RequisitionGroupProgramSchedule requisitionGroupProgramSchedule)", "testcase": false, "constructor": false, "invocations": ["populateIdsForRequisitionProgramScheduleEntities", "validateRequisitionGroupSchedule", "validateProgramType", "insert"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}