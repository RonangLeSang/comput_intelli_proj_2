{"test_class": {"identifier": "GeographicLevelTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/core/src/test/java/org/openlmis/core/domain/GeographicLevelTest.java"}, "test_case": {"identifier": "shouldReturnTrueIfLevelIsRoot", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldReturnTrueIfLevelIsRoot() throws Exception {\n    GeographicLevel root = new GeographicLevel(123L, \"root\", \"root\", 1);\n    assertTrue(root.isRootLevel());\n  }", "signature": "void shouldReturnTrueIfLevelIsRoot()", "full_signature": "@Test public void shouldReturnTrueIfLevelIsRoot()", "class_method_signature": "GeographicLevelTest.shouldReturnTrueIfLevelIsRoot()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isRootLevel"]}, "focal_class": {"identifier": "GeographicLevel", "superclass": "extends BaseModel", "interfaces": "implements Importable", "fields": [{"original_string": "@ImportField(name=\"Geographic Level Code\", mandatory = true)\n  String code;", "modifier": "@ImportField(name=\"Geographic Level Code\", mandatory = true)", "type": "String", "declarator": "code", "var_name": "code"}, {"original_string": "@ImportField(name=\"Name\", mandatory = true)\n  String name;", "modifier": "@ImportField(name=\"Name\", mandatory = true)", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "@ImportField(name=\"Level Number\", mandatory = true)\n  Integer levelNumber;", "modifier": "@ImportField(name=\"Level Number\", mandatory = true)", "type": "Integer", "declarator": "levelNumber", "var_name": "levelNumber"}, {"original_string": "private static Integer ROOT_LEVEL_NUMBER = 1;", "modifier": "private static", "type": "Integer", "declarator": "ROOT_LEVEL_NUMBER = 1", "var_name": "ROOT_LEVEL_NUMBER"}], "methods": [{"identifier": "GeographicLevel", "parameters": "(Long id, String code, String name, Integer levelNumber)", "modifiers": "public", "return": "", "signature": " GeographicLevel(Long id, String code, String name, Integer levelNumber)", "full_signature": "public  GeographicLevel(Long id, String code, String name, Integer levelNumber)", "class_method_signature": "GeographicLevel.GeographicLevel(Long id, String code, String name, Integer levelNumber)", "testcase": false, "constructor": true}, {"identifier": "GeographicLevel", "parameters": "(Long id)", "modifiers": "public", "return": "", "signature": " GeographicLevel(Long id)", "full_signature": "public  GeographicLevel(Long id)", "class_method_signature": "GeographicLevel.GeographicLevel(Long id)", "testcase": false, "constructor": true}, {"identifier": "isRootLevel", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "boolean", "signature": "boolean isRootLevel()", "full_signature": "@JsonIgnore public boolean isRootLevel()", "class_method_signature": "GeographicLevel.isRootLevel()", "testcase": false, "constructor": false}, {"identifier": "isLowerInHierarchyThan", "parameters": "(GeographicLevel level)", "modifiers": "@JsonIgnore public", "return": "boolean", "signature": "boolean isLowerInHierarchyThan(GeographicLevel level)", "full_signature": "@JsonIgnore public boolean isLowerInHierarchyThan(GeographicLevel level)", "class_method_signature": "GeographicLevel.isLowerInHierarchyThan(GeographicLevel level)", "testcase": false, "constructor": false}], "file": "modules/core/src/main/java/org/openlmis/core/domain/GeographicLevel.java"}, "focal_method": {"identifier": "isRootLevel", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "boolean", "body": "@JsonIgnore\n  public boolean isRootLevel() {\n    return this.levelNumber.equals(ROOT_LEVEL_NUMBER);\n  }", "signature": "boolean isRootLevel()", "full_signature": "@JsonIgnore public boolean isRootLevel()", "class_method_signature": "GeographicLevel.isRootLevel()", "testcase": false, "constructor": false, "invocations": ["equals"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}