{"test_class": {"identifier": "ProductDoseRepositoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  ProductDoseMapper mapper;", "modifier": "@Mock", "type": "ProductDoseMapper", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "@InjectMocks\n  ProductDoseRepository repository;", "modifier": "@InjectMocks", "type": "ProductDoseRepository", "declarator": "repository", "var_name": "repository"}], "file": "modules/vaccine/src/test/java/org/openlmis/vaccine/repository/ProductDoseRepositoryTest.java"}, "test_case": {"identifier": "shouldGetDosesForProduct", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldGetDosesForProduct() throws Exception {\n    repository.getDosesForProduct(1L, 2L);\n    verify(mapper).getDoseSettingByProduct(1L, 2L);\n  }", "signature": "void shouldGetDosesForProduct()", "full_signature": "@Test public void shouldGetDosesForProduct()", "class_method_signature": "ProductDoseRepositoryTest.shouldGetDosesForProduct()", "testcase": true, "constructor": false, "invocations": ["getDosesForProduct", "getDoseSettingByProduct", "verify"]}, "focal_class": {"identifier": "ProductDoseRepository", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  private ProductDoseMapper mapper;", "modifier": "@Autowired\n  private", "type": "ProductDoseMapper", "declarator": "mapper", "var_name": "mapper"}], "methods": [{"identifier": "insert", "parameters": "(VaccineProductDose dose)", "modifiers": "public", "return": "void", "signature": "void insert(VaccineProductDose dose)", "full_signature": "public void insert(VaccineProductDose dose)", "class_method_signature": "ProductDoseRepository.insert(VaccineProductDose dose)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(VaccineProductDose dose)", "modifiers": "public", "return": "void", "signature": "void update(VaccineProductDose dose)", "full_signature": "public void update(VaccineProductDose dose)", "class_method_signature": "ProductDoseRepository.update(VaccineProductDose dose)", "testcase": false, "constructor": false}, {"identifier": "getDosesForProduct", "parameters": "(Long programId, Long productId)", "modifiers": "public", "return": "List<VaccineProductDose>", "signature": "List<VaccineProductDose> getDosesForProduct(Long programId, Long productId)", "full_signature": "public List<VaccineProductDose> getDosesForProduct(Long programId, Long productId)", "class_method_signature": "ProductDoseRepository.getDosesForProduct(Long programId, Long productId)", "testcase": false, "constructor": false}, {"identifier": "getAllDoses", "parameters": "()", "modifiers": "public", "return": "List<VaccineDose>", "signature": "List<VaccineDose> getAllDoses()", "full_signature": "public List<VaccineDose> getAllDoses()", "class_method_signature": "ProductDoseRepository.getAllDoses()", "testcase": false, "constructor": false}, {"identifier": "getProgramProductDoses", "parameters": "(Long programId)", "modifiers": "public", "return": "List<VaccineProductDose>", "signature": "List<VaccineProductDose> getProgramProductDoses(Long programId)", "full_signature": "public List<VaccineProductDose> getProgramProductDoses(Long programId)", "class_method_signature": "ProductDoseRepository.getProgramProductDoses(Long programId)", "testcase": false, "constructor": false}, {"identifier": "deleteAllByProgram", "parameters": "(Long programId)", "modifiers": "public", "return": "void", "signature": "void deleteAllByProgram(Long programId)", "full_signature": "public void deleteAllByProgram(Long programId)", "class_method_signature": "ProductDoseRepository.deleteAllByProgram(Long programId)", "testcase": false, "constructor": false}], "file": "modules/vaccine/src/main/java/org/openlmis/vaccine/repository/ProductDoseRepository.java"}, "focal_method": {"identifier": "getDosesForProduct", "parameters": "(Long programId, Long productId)", "modifiers": "public", "return": "List<VaccineProductDose>", "body": "public List<VaccineProductDose> getDosesForProduct(Long programId, Long productId){\n    return mapper.getDoseSettingByProduct(programId, productId);\n  }", "signature": "List<VaccineProductDose> getDosesForProduct(Long programId, Long productId)", "full_signature": "public List<VaccineProductDose> getDosesForProduct(Long programId, Long productId)", "class_method_signature": "ProductDoseRepository.getDosesForProduct(Long programId, Long productId)", "testcase": false, "constructor": false, "invocations": ["getDoseSettingByProduct"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}