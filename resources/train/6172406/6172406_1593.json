{"test_class": {"identifier": "FacilityRepositoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public ExpectedException expectedEx = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "expectedEx = ExpectedException.none()", "var_name": "expectedEx"}, {"original_string": "@Mock\n  private FacilityMapper mapper;", "modifier": "@Mock\n  private", "type": "FacilityMapper", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "@Mock\n  private FacilityTypeRepository facilityTypeRepository;", "modifier": "@Mock\n  private", "type": "FacilityTypeRepository", "declarator": "facilityTypeRepository", "var_name": "facilityTypeRepository"}, {"original_string": "@Mock\n  private FacilityOperatorRepository facilityOperatorRepository;", "modifier": "@Mock\n  private", "type": "FacilityOperatorRepository", "declarator": "facilityOperatorRepository", "var_name": "facilityOperatorRepository"}, {"original_string": "@Mock\n  private GeographicZoneRepository geographicZoneRepository;", "modifier": "@Mock\n  private", "type": "GeographicZoneRepository", "declarator": "geographicZoneRepository", "var_name": "geographicZoneRepository"}, {"original_string": "private FacilityRepository repository;", "modifier": "private", "type": "FacilityRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "private DateTime now;", "modifier": "private", "type": "DateTime", "declarator": "now", "var_name": "now"}, {"original_string": "private GeographicLevel defaultGeographicLevel = new GeographicLevel(1L, \"levelCode\", \"levelName\", 4);", "modifier": "private", "type": "GeographicLevel", "declarator": "defaultGeographicLevel = new GeographicLevel(1L, \"levelCode\", \"levelName\", 4)", "var_name": "defaultGeographicLevel"}], "file": "modules/core/src/test/java/org/openlmis/core/repository/FacilityRepositoryTest.java"}, "test_case": {"identifier": "shouldRaiseIncorrectReferenceDataError", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldRaiseIncorrectReferenceDataError() throws Exception {\n    Facility facility = make(a(defaultFacility));\n    expectedEx.expect(DataException.class);\n    expectedEx.expectMessage(\"\");\n    doThrow(new DataIntegrityViolationException(\"foreign key\")).when(mapper).insert(facility);\n    repository.save(facility);\n  }", "signature": "void shouldRaiseIncorrectReferenceDataError()", "full_signature": "@Test public void shouldRaiseIncorrectReferenceDataError()", "class_method_signature": "FacilityRepositoryTest.shouldRaiseIncorrectReferenceDataError()", "testcase": true, "constructor": false, "invocations": ["make", "a", "expect", "expectMessage", "insert", "when", "doThrow", "save"]}, "focal_class": {"identifier": "FacilityRepository", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FacilityMapper mapper;", "modifier": "private", "type": "FacilityMapper", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "private FacilityTypeRepository facilityTypeRepository;", "modifier": "private", "type": "FacilityTypeRepository", "declarator": "facilityTypeRepository", "var_name": "facilityTypeRepository"}, {"original_string": "@Autowired\n  private CommaSeparator commaSeparator;", "modifier": "@Autowired\n  private", "type": "CommaSeparator", "declarator": "commaSeparator", "var_name": "commaSeparator"}, {"original_string": "private GeographicZoneRepository geographicZoneRepository;", "modifier": "private", "type": "GeographicZoneRepository", "declarator": "geographicZoneRepository", "var_name": "geographicZoneRepository"}, {"original_string": "private FacilityOperatorRepository facilityOperatorRepository;", "modifier": "private", "type": "FacilityOperatorRepository", "declarator": "facilityOperatorRepository", "var_name": "facilityOperatorRepository"}, {"original_string": "@Autowired\n  private PriceScheduleService priceScheduleService;", "modifier": "@Autowired\n  private", "type": "PriceScheduleService", "declarator": "priceScheduleService", "var_name": "priceScheduleService"}], "methods": [{"identifier": "FacilityRepository", "parameters": "(FacilityMapper facilityMapper,\n                            FacilityTypeRepository facilityTypeRepository,\n                            GeographicZoneRepository geographicZoneRepository,\n                            FacilityOperatorRepository facilityOperatorRepository)", "modifiers": "@Autowired public", "return": "", "signature": " FacilityRepository(FacilityMapper facilityMapper,\n                            FacilityTypeRepository facilityTypeRepository,\n                            GeographicZoneRepository geographicZoneRepository,\n                            FacilityOperatorRepository facilityOperatorRepository)", "full_signature": "@Autowired public  FacilityRepository(FacilityMapper facilityMapper,\n                            FacilityTypeRepository facilityTypeRepository,\n                            GeographicZoneRepository geographicZoneRepository,\n                            FacilityOperatorRepository facilityOperatorRepository)", "class_method_signature": "FacilityRepository.FacilityRepository(FacilityMapper facilityMapper,\n                            FacilityTypeRepository facilityTypeRepository,\n                            GeographicZoneRepository geographicZoneRepository,\n                            FacilityOperatorRepository facilityOperatorRepository)", "testcase": false, "constructor": true}, {"identifier": "getMailingLabels", "parameters": "()", "modifiers": "public", "return": "List<Facility>", "signature": "List<Facility> getMailingLabels()", "full_signature": "public List<Facility> getMailingLabels()", "class_method_signature": "FacilityRepository.getMailingLabels()", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(Facility facility)", "modifiers": "public", "return": "void", "signature": "void save(Facility facility)", "full_signature": "public void save(Facility facility)", "class_method_signature": "FacilityRepository.save(Facility facility)", "testcase": false, "constructor": false}, {"identifier": "validateAndSetPriceScheduleCategory", "parameters": "(Facility facility)", "modifiers": "private", "return": "void", "signature": "void validateAndSetPriceScheduleCategory(Facility facility)", "full_signature": "private void validateAndSetPriceScheduleCategory(Facility facility)", "class_method_signature": "FacilityRepository.validateAndSetPriceScheduleCategory(Facility facility)", "testcase": false, "constructor": false}, {"identifier": "validateEnabledAndActive", "parameters": "(Facility facility)", "modifiers": "private", "return": "void", "signature": "void validateEnabledAndActive(Facility facility)", "full_signature": "private void validateEnabledAndActive(Facility facility)", "class_method_signature": "FacilityRepository.validateEnabledAndActive(Facility facility)", "testcase": false, "constructor": false}, {"identifier": "validateGeographicZone", "parameters": "(Facility facility)", "modifiers": "private", "return": "void", "signature": "void validateGeographicZone(Facility facility)", "full_signature": "private void validateGeographicZone(Facility facility)", "class_method_signature": "FacilityRepository.validateGeographicZone(Facility facility)", "testcase": false, "constructor": false}, {"identifier": "validateAndSetFacilityType", "parameters": "(Facility facility)", "modifiers": "private", "return": "void", "signature": "void validateAndSetFacilityType(Facility facility)", "full_signature": "private void validateAndSetFacilityType(Facility facility)", "class_method_signature": "FacilityRepository.validateAndSetFacilityType(Facility facility)", "testcase": false, "constructor": false}, {"identifier": "validateAndSetFacilityOperatedBy", "parameters": "(Facility facility)", "modifiers": "private", "return": "void", "signature": "void validateAndSetFacilityOperatedBy(Facility facility)", "full_signature": "private void validateAndSetFacilityOperatedBy(Facility facility)", "class_method_signature": "FacilityRepository.validateAndSetFacilityOperatedBy(Facility facility)", "testcase": false, "constructor": false}, {"identifier": "getHomeFacility", "parameters": "(Long userId)", "modifiers": "public", "return": "Facility", "signature": "Facility getHomeFacility(Long userId)", "full_signature": "public Facility getHomeFacility(Long userId)", "class_method_signature": "FacilityRepository.getHomeFacility(Long userId)", "testcase": false, "constructor": false}, {"identifier": "getById", "parameters": "(Long id)", "modifiers": "public", "return": "Facility", "signature": "Facility getById(Long id)", "full_signature": "public Facility getById(Long id)", "class_method_signature": "FacilityRepository.getById(Long id)", "testcase": false, "constructor": false}, {"identifier": "updateEnabledAndActiveFor", "parameters": "(Facility facility)", "modifiers": "public", "return": "Facility", "signature": "Facility updateEnabledAndActiveFor(Facility facility)", "full_signature": "public Facility updateEnabledAndActiveFor(Facility facility)", "class_method_signature": "FacilityRepository.updateEnabledAndActiveFor(Facility facility)", "testcase": false, "constructor": false}, {"identifier": "getFacilitiesBy", "parameters": "(Long programId, List<RequisitionGroup> requisitionGroups)", "modifiers": "public", "return": "List<Facility>", "signature": "List<Facility> getFacilitiesBy(Long programId, List<RequisitionGroup> requisitionGroups)", "full_signature": "public List<Facility> getFacilitiesBy(Long programId, List<RequisitionGroup> requisitionGroups)", "class_method_signature": "FacilityRepository.getFacilitiesBy(Long programId, List<RequisitionGroup> requisitionGroups)", "testcase": false, "constructor": false}, {"identifier": "getAllInRequisitionGroups", "parameters": "(List<RequisitionGroup> requisitionGroups)", "modifiers": "public", "return": "List<Facility>", "signature": "List<Facility> getAllInRequisitionGroups(List<RequisitionGroup> requisitionGroups)", "full_signature": "public List<Facility> getAllInRequisitionGroups(List<RequisitionGroup> requisitionGroups)", "class_method_signature": "FacilityRepository.getAllInRequisitionGroups(List<RequisitionGroup> requisitionGroups)", "testcase": false, "constructor": false}, {"identifier": "getAllByFacilityTypeCode", "parameters": "(String typeCode)", "modifiers": "public", "return": "List<Facility>", "signature": "List<Facility> getAllByFacilityTypeCode(String typeCode)", "full_signature": "public List<Facility> getAllByFacilityTypeCode(String typeCode)", "class_method_signature": "FacilityRepository.getAllByFacilityTypeCode(String typeCode)", "testcase": false, "constructor": false}, {"identifier": "getIdForCode", "parameters": "(String code)", "modifiers": "public", "return": "Long", "signature": "Long getIdForCode(String code)", "full_signature": "public Long getIdForCode(String code)", "class_method_signature": "FacilityRepository.getIdForCode(String code)", "testcase": false, "constructor": false}, {"identifier": "getHomeFacilityForRights", "parameters": "(Long userId, String... rightNames)", "modifiers": "public", "return": "Facility", "signature": "Facility getHomeFacilityForRights(Long userId, String... rightNames)", "full_signature": "public Facility getHomeFacilityForRights(Long userId, String... rightNames)", "class_method_signature": "FacilityRepository.getHomeFacilityForRights(Long userId, String... rightNames)", "testcase": false, "constructor": false}, {"identifier": "getByCode", "parameters": "(String code)", "modifiers": "public", "return": "Facility", "signature": "Facility getByCode(String code)", "full_signature": "public Facility getByCode(String code)", "class_method_signature": "FacilityRepository.getByCode(String code)", "testcase": false, "constructor": false}, {"identifier": "getAllInDeliveryZoneFor", "parameters": "(Long deliveryZoneId, Long programId)", "modifiers": "public", "return": "List<Facility>", "signature": "List<Facility> getAllInDeliveryZoneFor(Long deliveryZoneId, Long programId)", "full_signature": "public List<Facility> getAllInDeliveryZoneFor(Long deliveryZoneId, Long programId)", "class_method_signature": "FacilityRepository.getAllInDeliveryZoneFor(Long deliveryZoneId, Long programId)", "testcase": false, "constructor": false}, {"identifier": "getAllByProgramSupportedModifiedDate", "parameters": "(Date dateModified)", "modifiers": "public", "return": "List<Facility>", "signature": "List<Facility> getAllByProgramSupportedModifiedDate(Date dateModified)", "full_signature": "public List<Facility> getAllByProgramSupportedModifiedDate(Date dateModified)", "class_method_signature": "FacilityRepository.getAllByProgramSupportedModifiedDate(Date dateModified)", "testcase": false, "constructor": false}, {"identifier": "getEnabledWarehouses", "parameters": "()", "modifiers": "public", "return": "List<Facility>", "signature": "List<Facility> getEnabledWarehouses()", "full_signature": "public List<Facility> getEnabledWarehouses()", "class_method_signature": "FacilityRepository.getEnabledWarehouses()", "testcase": false, "constructor": false}, {"identifier": "getChildFacilities", "parameters": "(Facility facility)", "modifiers": "public", "return": "List<Facility>", "signature": "List<Facility> getChildFacilities(Facility facility)", "full_signature": "public List<Facility> getChildFacilities(Facility facility)", "class_method_signature": "FacilityRepository.getChildFacilities(Facility facility)", "testcase": false, "constructor": false}, {"identifier": "updateVirtualFacilities", "parameters": "(Facility parentFacility)", "modifiers": "public", "return": "void", "signature": "void updateVirtualFacilities(Facility parentFacility)", "full_signature": "public void updateVirtualFacilities(Facility parentFacility)", "class_method_signature": "FacilityRepository.updateVirtualFacilities(Facility parentFacility)", "testcase": false, "constructor": false}, {"identifier": "getAllByRequisitionGroupMemberModifiedDate", "parameters": "(Date modifiedDate)", "modifiers": "public", "return": "List<Facility>", "signature": "List<Facility> getAllByRequisitionGroupMemberModifiedDate(Date modifiedDate)", "full_signature": "public List<Facility> getAllByRequisitionGroupMemberModifiedDate(Date modifiedDate)", "class_method_signature": "FacilityRepository.getAllByRequisitionGroupMemberModifiedDate(Date modifiedDate)", "testcase": false, "constructor": false}, {"identifier": "getAllParentsByModifiedDate", "parameters": "(Date modifiedDate)", "modifiers": "public", "return": "List<Facility>", "signature": "List<Facility> getAllParentsByModifiedDate(Date modifiedDate)", "full_signature": "public List<Facility> getAllParentsByModifiedDate(Date modifiedDate)", "class_method_signature": "FacilityRepository.getAllParentsByModifiedDate(Date modifiedDate)", "testcase": false, "constructor": false}, {"identifier": "getFacilitiesCountBy", "parameters": "(String searchParam, Long facilityTypeId, Long geoZoneId, Boolean virtualFacility, Boolean enabled)", "modifiers": "public", "return": "Integer", "signature": "Integer getFacilitiesCountBy(String searchParam, Long facilityTypeId, Long geoZoneId, Boolean virtualFacility, Boolean enabled)", "full_signature": "public Integer getFacilitiesCountBy(String searchParam, Long facilityTypeId, Long geoZoneId, Boolean virtualFacility, Boolean enabled)", "class_method_signature": "FacilityRepository.getFacilitiesCountBy(String searchParam, Long facilityTypeId, Long geoZoneId, Boolean virtualFacility, Boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "searchFacilitiesBy", "parameters": "(String searchParam, Long facilityTypeId, Long geoZoneId, Boolean virtualFacility, Boolean enabled)", "modifiers": "public", "return": "List<Facility>", "signature": "List<Facility> searchFacilitiesBy(String searchParam, Long facilityTypeId, Long geoZoneId, Boolean virtualFacility, Boolean enabled)", "full_signature": "public List<Facility> searchFacilitiesBy(String searchParam, Long facilityTypeId, Long geoZoneId, Boolean virtualFacility, Boolean enabled)", "class_method_signature": "FacilityRepository.searchFacilitiesBy(String searchParam, Long facilityTypeId, Long geoZoneId, Boolean virtualFacility, Boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "getTotalSearchResultCount", "parameters": "(String searchParam)", "modifiers": "public", "return": "Integer", "signature": "Integer getTotalSearchResultCount(String searchParam)", "full_signature": "public Integer getTotalSearchResultCount(String searchParam)", "class_method_signature": "FacilityRepository.getTotalSearchResultCount(String searchParam)", "testcase": false, "constructor": false}, {"identifier": "getTotalSearchResultCountByGeographicZone", "parameters": "(String searchParam)", "modifiers": "public", "return": "Integer", "signature": "Integer getTotalSearchResultCountByGeographicZone(String searchParam)", "full_signature": "public Integer getTotalSearchResultCountByGeographicZone(String searchParam)", "class_method_signature": "FacilityRepository.getTotalSearchResultCountByGeographicZone(String searchParam)", "testcase": false, "constructor": false}, {"identifier": "searchBy", "parameters": "(String searchParam, String columnName, Pagination pagination)", "modifiers": "public", "return": "List<Facility>", "signature": "List<Facility> searchBy(String searchParam, String columnName, Pagination pagination)", "full_signature": "public List<Facility> searchBy(String searchParam, String columnName, Pagination pagination)", "class_method_signature": "FacilityRepository.searchBy(String searchParam, String columnName, Pagination pagination)", "testcase": false, "constructor": false}, {"identifier": "getEmailContacts", "parameters": "(Long facilityId)", "modifiers": "public", "return": "List<FacilityContact>", "signature": "List<FacilityContact> getEmailContacts(Long facilityId)", "full_signature": "public List<FacilityContact> getEmailContacts(Long facilityId)", "class_method_signature": "FacilityRepository.getEmailContacts(Long facilityId)", "testcase": false, "constructor": false}, {"identifier": "getSmsContacts", "parameters": "(Long facilityId)", "modifiers": "public", "return": "List<FacilityContact>", "signature": "List<FacilityContact> getSmsContacts(Long facilityId)", "full_signature": "public List<FacilityContact> getSmsContacts(Long facilityId)", "class_method_signature": "FacilityRepository.getSmsContacts(Long facilityId)", "testcase": false, "constructor": false}, {"identifier": "getFacilitySupervisors", "parameters": "(Long facilityId)", "modifiers": "public", "return": "List<FacilitySupervisor>", "signature": "List<FacilitySupervisor> getFacilitySupervisors(Long facilityId)", "full_signature": "public List<FacilitySupervisor> getFacilitySupervisors(Long facilityId)", "class_method_signature": "FacilityRepository.getFacilitySupervisors(Long facilityId)", "testcase": false, "constructor": false}, {"identifier": "getAllForGeographicZone", "parameters": "(Long geographicZoneId)", "modifiers": "public", "return": "List<Facility>", "signature": "List<Facility> getAllForGeographicZone(Long geographicZoneId)", "full_signature": "public List<Facility> getAllForGeographicZone(Long geographicZoneId)", "class_method_signature": "FacilityRepository.getAllForGeographicZone(Long geographicZoneId)", "testcase": false, "constructor": false}, {"identifier": "getFacilityByTypeAndRequisitionGroupId", "parameters": "(Long facilityTypeId, Long rgroupId)", "modifiers": "public", "return": "List<Facility>", "signature": "List<Facility> getFacilityByTypeAndRequisitionGroupId(Long facilityTypeId, Long rgroupId)", "full_signature": "public List<Facility> getFacilityByTypeAndRequisitionGroupId(Long facilityTypeId, Long rgroupId)", "class_method_signature": "FacilityRepository.getFacilityByTypeAndRequisitionGroupId(Long facilityTypeId, Long rgroupId)", "testcase": false, "constructor": false}, {"identifier": "getGeoRegionFacilityTree", "parameters": "(Long userId)", "modifiers": "public", "return": "List<FacilityGeoTreeDto>", "signature": "List<FacilityGeoTreeDto> getGeoRegionFacilityTree(Long userId)", "full_signature": "public List<FacilityGeoTreeDto> getGeoRegionFacilityTree(Long userId)", "class_method_signature": "FacilityRepository.getGeoRegionFacilityTree(Long userId)", "testcase": false, "constructor": false}, {"identifier": "getGeoDistrictFacility", "parameters": "(Long userId)", "modifiers": "public", "return": "List<FacilityGeoTreeDto>", "signature": "List<FacilityGeoTreeDto> getGeoDistrictFacility(Long userId)", "full_signature": "public List<FacilityGeoTreeDto> getGeoDistrictFacility(Long userId)", "class_method_signature": "FacilityRepository.getGeoDistrictFacility(Long userId)", "testcase": false, "constructor": false}, {"identifier": "getGeoFlatFacilityTree", "parameters": "(Long userId)", "modifiers": "public", "return": "List<FacilityGeoTreeDto>", "signature": "List<FacilityGeoTreeDto> getGeoFlatFacilityTree(Long userId)", "full_signature": "public List<FacilityGeoTreeDto> getGeoFlatFacilityTree(Long userId)", "class_method_signature": "FacilityRepository.getGeoFlatFacilityTree(Long userId)", "testcase": false, "constructor": false}], "file": "modules/core/src/main/java/org/openlmis/core/repository/FacilityRepository.java"}, "focal_method": {"identifier": "save", "parameters": "(Facility facility)", "modifiers": "public", "return": "void", "body": "public void save(Facility facility) {\n    try {\n      validateAndSetFacilityOperatedBy(facility);\n      validateAndSetFacilityType(facility);\n      validateGeographicZone(facility);\n      validateEnabledAndActive(facility);\n      validateAndSetPriceScheduleCategory(facility);\n      if (facility.getId() == null) {\n        mapper.insert(facility);\n      } else {\n        mapper.update(facility);\n      }\n    } catch (DuplicateKeyException duplicateKeyException) {\n      throw new DataException(\"error.duplicate.facility.code\");\n    } catch (DataIntegrityViolationException integrityViolationException) {\n      String errorMessage = integrityViolationException.getMessage().toLowerCase();\n      if (errorMessage.contains(\"foreign key\") || errorMessage.contains(\"not-null constraint\")) {\n        throw new DataException(\"error.reference.data.missing\");\n      }\n      throw new DataException(\"error.incorrect.length\");\n    }\n  }", "signature": "void save(Facility facility)", "full_signature": "public void save(Facility facility)", "class_method_signature": "FacilityRepository.save(Facility facility)", "testcase": false, "constructor": false, "invocations": ["validateAndSetFacilityOperatedBy", "validateAndSetFacilityType", "validateGeographicZone", "validateEnabledAndActive", "validateAndSetPriceScheduleCategory", "getId", "insert", "update", "toLowerCase", "getMessage", "contains", "contains"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}