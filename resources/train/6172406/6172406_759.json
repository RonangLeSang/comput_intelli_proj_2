{"test_class": {"identifier": "OrderControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Long USER_ID = 1L;", "modifier": "private static final", "type": "Long", "declarator": "USER_ID = 1L", "var_name": "USER_ID"}, {"original_string": "private MockHttpServletRequest request;", "modifier": "private", "type": "MockHttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "private static final String USER = \"user\";", "modifier": "private static final", "type": "String", "declarator": "USER = \"user\"", "var_name": "USER"}, {"original_string": "@Mock\n  private OrderService orderService;", "modifier": "@Mock\n  private", "type": "OrderService", "declarator": "orderService", "var_name": "orderService"}, {"original_string": "@SuppressWarnings(\"unused\")\n  @InjectMocks\n  private OrderController orderController;", "modifier": "@SuppressWarnings(\"unused\")\n  @InjectMocks\n  private", "type": "OrderController", "declarator": "orderController", "var_name": "orderController"}], "file": "modules/openlmis-web/src/test/java/org/openlmis/web/controller/OrderControllerTest.java"}, "test_case": {"identifier": "shouldReturnErrorMsgIfSomeRequisitionsAreAlreadyConverted", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldReturnErrorMsgIfSomeRequisitionsAreAlreadyConverted() {\n    RequisitionList rnrList = new RequisitionList();\n    doThrow(new DataException(\"msg.rnr.already.converted.to.order\")).\n      when(orderService).convertToOrder(rnrList, 1L);\n    ResponseEntity<OpenLmisResponse> response = orderController.convertToOrder(rnrList, request);\n    assertThat(response.getStatusCode(), is(CONFLICT));\n    assertThat(response.getBody().getErrorMsg(), is(\"msg.rnr.already.converted.to.order\"));\n    verify(orderService).convertToOrder(rnrList, 1L);\n  }", "signature": "void shouldReturnErrorMsgIfSomeRequisitionsAreAlreadyConverted()", "full_signature": "@Test public void shouldReturnErrorMsgIfSomeRequisitionsAreAlreadyConverted()", "class_method_signature": "OrderControllerTest.shouldReturnErrorMsgIfSomeRequisitionsAreAlreadyConverted()", "testcase": true, "constructor": false, "invocations": ["convertToOrder", "when", "doThrow", "convertToOrder", "assertThat", "getStatusCode", "is", "assertThat", "getErrorMsg", "getBody", "is", "convertToOrder", "verify"]}, "focal_class": {"identifier": "OrderController", "superclass": "extends BaseController", "interfaces": "", "fields": [{"original_string": "public static final String ORDERS = \"orders\";", "modifier": "public static final", "type": "String", "declarator": "ORDERS = \"orders\"", "var_name": "ORDERS"}, {"original_string": "public static final String ORDER = \"order\";", "modifier": "public static final", "type": "String", "declarator": "ORDER = \"order\"", "var_name": "ORDER"}, {"original_string": "public static final String ORDER_FILE_TEMPLATE = \"orderFileTemplate\";", "modifier": "public static final", "type": "String", "declarator": "ORDER_FILE_TEMPLATE = \"orderFileTemplate\"", "var_name": "ORDER_FILE_TEMPLATE"}, {"original_string": "public static final String ORDER_NUMBER_CONFIGURATION = \"orderNumberConfiguration\";", "modifier": "public static final", "type": "String", "declarator": "ORDER_NUMBER_CONFIGURATION = \"orderNumberConfiguration\"", "var_name": "ORDER_NUMBER_CONFIGURATION"}, {"original_string": "public static final String DATE_FORMATS = \"dateFormats\";", "modifier": "public static final", "type": "String", "declarator": "DATE_FORMATS = \"dateFormats\"", "var_name": "DATE_FORMATS"}, {"original_string": "public static final String PAGE_SIZE = \"pageSize\";", "modifier": "public static final", "type": "String", "declarator": "PAGE_SIZE = \"pageSize\"", "var_name": "PAGE_SIZE"}, {"original_string": "public static final String NUMBER_OF_PAGES = \"numberOfPages\";", "modifier": "public static final", "type": "String", "declarator": "NUMBER_OF_PAGES = \"numberOfPages\"", "var_name": "NUMBER_OF_PAGES"}, {"original_string": "public static final String ORDERS_FOR_POD = \"ordersForPOD\";", "modifier": "public static final", "type": "String", "declarator": "ORDERS_FOR_POD = \"ordersForPOD\"", "var_name": "ORDERS_FOR_POD"}, {"original_string": "@Autowired\n  private OrderService orderService;", "modifier": "@Autowired\n  private", "type": "OrderService", "declarator": "orderService", "var_name": "orderService"}], "methods": [{"identifier": "convertToOrder", "parameters": "(@RequestBody RequisitionList rnrList,\n                                                         HttpServletRequest request)", "modifiers": "@RequestMapping(value = \"/orders\", method = POST, headers = ACCEPT_JSON) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'CONVERT_TO_ORDER')\") public", "return": "ResponseEntity<OpenLmisResponse>", "signature": "ResponseEntity<OpenLmisResponse> convertToOrder(@RequestBody RequisitionList rnrList,\n                                                         HttpServletRequest request)", "full_signature": "@RequestMapping(value = \"/orders\", method = POST, headers = ACCEPT_JSON) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'CONVERT_TO_ORDER')\") public ResponseEntity<OpenLmisResponse> convertToOrder(@RequestBody RequisitionList rnrList,\n                                                         HttpServletRequest request)", "class_method_signature": "OrderController.convertToOrder(@RequestBody RequisitionList rnrList,\n                                                         HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "getOrdersForPage", "parameters": "(@RequestParam(value = \"page\",\n    required = true,\n    defaultValue = \"1\") Integer page,\n     @RequestParam(value=\"supplyDepot\", defaultValue = \"0\") Long supplyDepot,\n     @RequestParam(value=\"period\", defaultValue = \"0\") Long period,\n     @RequestParam(value=\"program\", defaultValue = \"0\") Long program,\n     HttpServletRequest request)", "modifiers": "@RequestMapping(value = \"/orders\", method = GET) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'VIEW_ORDER')\") public", "return": "ResponseEntity<OpenLmisResponse>", "signature": "ResponseEntity<OpenLmisResponse> getOrdersForPage(@RequestParam(value = \"page\",\n    required = true,\n    defaultValue = \"1\") Integer page,\n     @RequestParam(value=\"supplyDepot\", defaultValue = \"0\") Long supplyDepot,\n     @RequestParam(value=\"period\", defaultValue = \"0\") Long period,\n     @RequestParam(value=\"program\", defaultValue = \"0\") Long program,\n     HttpServletRequest request)", "full_signature": "@RequestMapping(value = \"/orders\", method = GET) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'VIEW_ORDER')\") public ResponseEntity<OpenLmisResponse> getOrdersForPage(@RequestParam(value = \"page\",\n    required = true,\n    defaultValue = \"1\") Integer page,\n     @RequestParam(value=\"supplyDepot\", defaultValue = \"0\") Long supplyDepot,\n     @RequestParam(value=\"period\", defaultValue = \"0\") Long period,\n     @RequestParam(value=\"program\", defaultValue = \"0\") Long program,\n     HttpServletRequest request)", "class_method_signature": "OrderController.getOrdersForPage(@RequestParam(value = \"page\",\n    required = true,\n    defaultValue = \"1\") Integer page,\n     @RequestParam(value=\"supplyDepot\", defaultValue = \"0\") Long supplyDepot,\n     @RequestParam(value=\"period\", defaultValue = \"0\") Long period,\n     @RequestParam(value=\"program\", defaultValue = \"0\") Long program,\n     HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "downloadOrderCsv", "parameters": "(@PathVariable Long id)", "modifiers": "@RequestMapping(value = \"/orders/{id}/download.csv\", method = GET, headers = ACCEPT_CSV) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'VIEW_ORDER')\") public", "return": "ModelAndView", "signature": "ModelAndView downloadOrderCsv(@PathVariable Long id)", "full_signature": "@RequestMapping(value = \"/orders/{id}/download.csv\", method = GET, headers = ACCEPT_CSV) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'VIEW_ORDER')\") public ModelAndView downloadOrderCsv(@PathVariable Long id)", "class_method_signature": "OrderController.downloadOrderCsv(@PathVariable Long id)", "testcase": false, "constructor": false}, {"identifier": "getOrderFileTemplateDTO", "parameters": "()", "modifiers": "@RequestMapping(value = \"/order-file-template\", method = GET, headers = ACCEPT_JSON) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')\") public", "return": "ResponseEntity<OpenLmisResponse>", "signature": "ResponseEntity<OpenLmisResponse> getOrderFileTemplateDTO()", "full_signature": "@RequestMapping(value = \"/order-file-template\", method = GET, headers = ACCEPT_JSON) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')\") public ResponseEntity<OpenLmisResponse> getOrderFileTemplateDTO()", "class_method_signature": "OrderController.getOrderFileTemplateDTO()", "testcase": false, "constructor": false}, {"identifier": "saveOrderFileTemplateDTO", "parameters": "(@RequestBody OrderFileTemplateDTO orderFileTemplateDTO,\n                                                                   HttpServletRequest request)", "modifiers": "@RequestMapping(value = \"/order-file-template\", method = POST, headers = ACCEPT_JSON) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')\") public", "return": "ResponseEntity<OpenLmisResponse>", "signature": "ResponseEntity<OpenLmisResponse> saveOrderFileTemplateDTO(@RequestBody OrderFileTemplateDTO orderFileTemplateDTO,\n                                                                   HttpServletRequest request)", "full_signature": "@RequestMapping(value = \"/order-file-template\", method = POST, headers = ACCEPT_JSON) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')\") public ResponseEntity<OpenLmisResponse> saveOrderFileTemplateDTO(@RequestBody OrderFileTemplateDTO orderFileTemplateDTO,\n                                                                   HttpServletRequest request)", "class_method_signature": "OrderController.saveOrderFileTemplateDTO(@RequestBody OrderFileTemplateDTO orderFileTemplateDTO,\n                                                                   HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "getOrderNumberConfiguration", "parameters": "()", "modifiers": "@RequestMapping(value = \"/order-number-configuration\", method = GET, headers = ACCEPT_JSON) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')\") public", "return": "ResponseEntity<OpenLmisResponse>", "signature": "ResponseEntity<OpenLmisResponse> getOrderNumberConfiguration()", "full_signature": "@RequestMapping(value = \"/order-number-configuration\", method = GET, headers = ACCEPT_JSON) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')\") public ResponseEntity<OpenLmisResponse> getOrderNumberConfiguration()", "class_method_signature": "OrderController.getOrderNumberConfiguration()", "testcase": false, "constructor": false}, {"identifier": "updateOrderNumberConfiguration", "parameters": "(@RequestBody OrderNumberConfiguration orderNumberConfiguration)", "modifiers": "@RequestMapping(value = \"/order-number-configuration\", method = POST, headers = ACCEPT_JSON) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')\") public", "return": "ResponseEntity<OpenLmisResponse>", "signature": "ResponseEntity<OpenLmisResponse> updateOrderNumberConfiguration(@RequestBody OrderNumberConfiguration orderNumberConfiguration)", "full_signature": "@RequestMapping(value = \"/order-number-configuration\", method = POST, headers = ACCEPT_JSON) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')\") public ResponseEntity<OpenLmisResponse> updateOrderNumberConfiguration(@RequestBody OrderNumberConfiguration orderNumberConfiguration)", "class_method_signature": "OrderController.updateOrderNumberConfiguration(@RequestBody OrderNumberConfiguration orderNumberConfiguration)", "testcase": false, "constructor": false}, {"identifier": "getAllDateFormats", "parameters": "()", "modifiers": "@RequestMapping(value = \"/date-formats\", method = GET, headers = ACCEPT_JSON) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')\") public", "return": "ResponseEntity<OpenLmisResponse>", "signature": "ResponseEntity<OpenLmisResponse> getAllDateFormats()", "full_signature": "@RequestMapping(value = \"/date-formats\", method = GET, headers = ACCEPT_JSON) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'SYSTEM_SETTINGS')\") public ResponseEntity<OpenLmisResponse> getAllDateFormats()", "class_method_signature": "OrderController.getAllDateFormats()", "testcase": false, "constructor": false}, {"identifier": "getOrdersForPOD", "parameters": "(@RequestParam(\"program\") Long program, @RequestParam(value = \"facility\", defaultValue = \"0\") Long facility, HttpServletRequest request)", "modifiers": "@RequestMapping(value = \"/manage-pod-orders\", method = GET) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'MANAGE_POD')\") public", "return": "ResponseEntity<OpenLmisResponse>", "signature": "ResponseEntity<OpenLmisResponse> getOrdersForPOD(@RequestParam(\"program\") Long program, @RequestParam(value = \"facility\", defaultValue = \"0\") Long facility, HttpServletRequest request)", "full_signature": "@RequestMapping(value = \"/manage-pod-orders\", method = GET) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'MANAGE_POD')\") public ResponseEntity<OpenLmisResponse> getOrdersForPOD(@RequestParam(\"program\") Long program, @RequestParam(value = \"facility\", defaultValue = \"0\") Long facility, HttpServletRequest request)", "class_method_signature": "OrderController.getOrdersForPOD(@RequestParam(\"program\") Long program, @RequestParam(value = \"facility\", defaultValue = \"0\") Long facility, HttpServletRequest request)", "testcase": false, "constructor": false}], "file": "modules/openlmis-web/src/main/java/org/openlmis/web/controller/OrderController.java"}, "focal_method": {"identifier": "convertToOrder", "parameters": "(@RequestBody RequisitionList rnrList,\n                                                         HttpServletRequest request)", "modifiers": "@RequestMapping(value = \"/orders\", method = POST, headers = ACCEPT_JSON) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'CONVERT_TO_ORDER')\") public", "return": "ResponseEntity<OpenLmisResponse>", "body": "@RequestMapping(value = \"/orders\", method = POST, headers = ACCEPT_JSON)\n  @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'CONVERT_TO_ORDER')\")\n  public ResponseEntity<OpenLmisResponse> convertToOrder(@RequestBody RequisitionList rnrList,\n                                                         HttpServletRequest request) {\n    try {\n      orderService.convertToOrder(rnrList, loggedInUserId(request));\n    } catch (DataException de) {\n      return error(\"msg.rnr.already.converted.to.order\", CONFLICT);\n    }\n    return new ResponseEntity<>(CREATED);\n  }", "signature": "ResponseEntity<OpenLmisResponse> convertToOrder(@RequestBody RequisitionList rnrList,\n                                                         HttpServletRequest request)", "full_signature": "@RequestMapping(value = \"/orders\", method = POST, headers = ACCEPT_JSON) @PreAuthorize(\"@permissionEvaluator.hasPermission(principal, 'CONVERT_TO_ORDER')\") public ResponseEntity<OpenLmisResponse> convertToOrder(@RequestBody RequisitionList rnrList,\n                                                         HttpServletRequest request)", "class_method_signature": "OrderController.convertToOrder(@RequestBody RequisitionList rnrList,\n                                                         HttpServletRequest request)", "testcase": false, "constructor": false, "invocations": ["convertToOrder", "loggedInUserId", "error"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}