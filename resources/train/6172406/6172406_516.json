{"test_class": {"identifier": "RnrLineItemTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "Integer numberOfMonths;", "modifier": "", "type": "Integer", "declarator": "numberOfMonths", "var_name": "numberOfMonths"}, {"original_string": "@Mock\n  ProgramRnrTemplate template;", "modifier": "@Mock", "type": "ProgramRnrTemplate", "declarator": "template", "var_name": "template"}, {"original_string": "@Mock\n  RnrColumn column;", "modifier": "@Mock", "type": "RnrColumn", "declarator": "column", "var_name": "column"}, {"original_string": "private RnrLineItem lineItem;", "modifier": "private", "type": "RnrLineItem", "declarator": "lineItem", "var_name": "lineItem"}, {"original_string": "private List<RnrColumn> templateColumns;", "modifier": "private", "type": "List<RnrColumn>", "declarator": "templateColumns", "var_name": "templateColumns"}, {"original_string": "private List<LossesAndAdjustmentsType> lossesAndAdjustmentsList;", "modifier": "private", "type": "List<LossesAndAdjustmentsType>", "declarator": "lossesAndAdjustmentsList", "var_name": "lossesAndAdjustmentsList"}], "file": "modules/requisition/src/test/java/org/openlmis/rnr/domain/RnrLineItemTest.java"}, "test_case": {"identifier": "shouldCalculatePacksToShipWhenPackRoundingThresholdIsGreaterThanRemainder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldCalculatePacksToShipWhenPackRoundingThresholdIsGreaterThanRemainder() throws Exception {\n    RnrLineItem lineItem = new RnrLineItem();\n    lineItem.setCalculatedOrderQuantity(26);\n    lineItem.setPackSize(10);\n    lineItem.setPackRoundingThreshold(7);\n    lineItem.setRoundToZero(false);\n\n    lineItem.calculatePacksToShip();\n\n    assertThat(lineItem.getPacksToShip(), is(2));\n  }", "signature": "void shouldCalculatePacksToShipWhenPackRoundingThresholdIsGreaterThanRemainder()", "full_signature": "@Test public void shouldCalculatePacksToShipWhenPackRoundingThresholdIsGreaterThanRemainder()", "class_method_signature": "RnrLineItemTest.shouldCalculatePacksToShipWhenPackRoundingThresholdIsGreaterThanRemainder()", "testcase": true, "constructor": false, "invocations": ["setCalculatedOrderQuantity", "setPackSize", "setPackRoundingThreshold", "setRoundToZero", "calculatePacksToShip", "assertThat", "getPacksToShip", "is"]}, "focal_class": {"identifier": "RnrLineItem", "superclass": "extends LineItem", "interfaces": "", "fields": [{"original_string": "public static final BigDecimal NUMBER_OF_DAYS = new BigDecimal(30);", "modifier": "public static final", "type": "BigDecimal", "declarator": "NUMBER_OF_DAYS = new BigDecimal(30)", "var_name": "NUMBER_OF_DAYS"}, {"original_string": "public static final MathContext MATH_CONTEXT = new MathContext(12, HALF_UP);", "modifier": "public static final", "type": "MathContext", "declarator": "MATH_CONTEXT = new MathContext(12, HALF_UP)", "var_name": "MATH_CONTEXT"}, {"original_string": "public static final String DISPENSED_PLUS_NEW_PATIENTS = \"DISPENSED_PLUS_NEW_PATIENTS\";", "modifier": "public static final", "type": "String", "declarator": "DISPENSED_PLUS_NEW_PATIENTS = \"DISPENSED_PLUS_NEW_PATIENTS\"", "var_name": "DISPENSED_PLUS_NEW_PATIENTS"}, {"original_string": "public static final String DISPENSED_X_90 = \"DISPENSED_X_90\";", "modifier": "public static final", "type": "String", "declarator": "DISPENSED_X_90 = \"DISPENSED_X_90\"", "var_name": "DISPENSED_X_90"}, {"original_string": "public static final String DEFAULT = \"DEFAULT\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT = \"DEFAULT\"", "var_name": "DEFAULT"}, {"original_string": "public static final String DISPENSED_X_2 = \"DISPENSED_X_2\";", "modifier": "public static final", "type": "String", "declarator": "DISPENSED_X_2 = \"DISPENSED_X_2\"", "var_name": "DISPENSED_X_2"}, {"original_string": "public static final String CONSUMPTION_X_2 = \"CONSUMPTION_X_2\";", "modifier": "public static final", "type": "String", "declarator": "CONSUMPTION_X_2 = \"CONSUMPTION_X_2\"", "var_name": "CONSUMPTION_X_2"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(RnrLineItem.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(RnrLineItem.class)", "var_name": "LOGGER"}, {"original_string": "private String product;", "modifier": "private", "type": "String", "declarator": "product", "var_name": "product"}, {"original_string": "private Integer productDisplayOrder;", "modifier": "private", "type": "Integer", "declarator": "productDisplayOrder", "var_name": "productDisplayOrder"}, {"original_string": "private String productCode;", "modifier": "private", "type": "String", "declarator": "productCode", "var_name": "productCode"}, {"original_string": "private String productPrimaryName;", "modifier": "private", "type": "String", "declarator": "productPrimaryName", "var_name": "productPrimaryName"}, {"original_string": "private String productCategory;", "modifier": "private", "type": "String", "declarator": "productCategory", "var_name": "productCategory"}, {"original_string": "private Integer productCategoryDisplayOrder;", "modifier": "private", "type": "Integer", "declarator": "productCategoryDisplayOrder", "var_name": "productCategoryDisplayOrder"}, {"original_string": "private String productStrength;", "modifier": "private", "type": "String", "declarator": "productStrength", "var_name": "productStrength"}, {"original_string": "private Boolean roundToZero;", "modifier": "private", "type": "Boolean", "declarator": "roundToZero", "var_name": "roundToZero"}, {"original_string": "private Integer packRoundingThreshold;", "modifier": "private", "type": "Integer", "declarator": "packRoundingThreshold", "var_name": "packRoundingThreshold"}, {"original_string": "private Integer packSize;", "modifier": "private", "type": "Integer", "declarator": "packSize", "var_name": "packSize"}, {"original_string": "private Integer dosesPerMonth;", "modifier": "private", "type": "Integer", "declarator": "dosesPerMonth", "var_name": "dosesPerMonth"}, {"original_string": "private Integer dosesPerDispensingUnit;", "modifier": "private", "type": "Integer", "declarator": "dosesPerDispensingUnit", "var_name": "dosesPerDispensingUnit"}, {"original_string": "private String dispensingUnit;", "modifier": "private", "type": "String", "declarator": "dispensingUnit", "var_name": "dispensingUnit"}, {"original_string": "private Double maxMonthsOfStock;", "modifier": "private", "type": "Double", "declarator": "maxMonthsOfStock", "var_name": "maxMonthsOfStock"}, {"original_string": "private Boolean fullSupply;", "modifier": "private", "type": "Boolean", "declarator": "fullSupply", "var_name": "fullSupply"}, {"original_string": "private Integer quantityReceived;", "modifier": "private", "type": "Integer", "declarator": "quantityReceived", "var_name": "quantityReceived"}, {"original_string": "private Integer quantityDispensed;", "modifier": "private", "type": "Integer", "declarator": "quantityDispensed", "var_name": "quantityDispensed"}, {"original_string": "private Integer previousStockInHand;", "modifier": "private", "type": "Integer", "declarator": "previousStockInHand", "var_name": "previousStockInHand"}, {"original_string": "private Integer beginningBalance;", "modifier": "private", "type": "Integer", "declarator": "beginningBalance", "var_name": "beginningBalance"}, {"original_string": "private List<LossesAndAdjustments> lossesAndAdjustments = new ArrayList<>();", "modifier": "private", "type": "List<LossesAndAdjustments>", "declarator": "lossesAndAdjustments = new ArrayList<>()", "var_name": "lossesAndAdjustments"}, {"original_string": "private Integer totalLossesAndAdjustments = 0;", "modifier": "private", "type": "Integer", "declarator": "totalLossesAndAdjustments = 0", "var_name": "totalLossesAndAdjustments"}, {"original_string": "private Integer stockInHand;", "modifier": "private", "type": "Integer", "declarator": "stockInHand", "var_name": "stockInHand"}, {"original_string": "private Integer stockOutDays;", "modifier": "private", "type": "Integer", "declarator": "stockOutDays", "var_name": "stockOutDays"}, {"original_string": "private Integer newPatientCount;", "modifier": "private", "type": "Integer", "declarator": "newPatientCount", "var_name": "newPatientCount"}, {"original_string": "private Integer quantityRequested;", "modifier": "private", "type": "Integer", "declarator": "quantityRequested", "var_name": "quantityRequested"}, {"original_string": "private String reasonForRequestedQuantity;", "modifier": "private", "type": "String", "declarator": "reasonForRequestedQuantity", "var_name": "reasonForRequestedQuantity"}, {"original_string": "private Integer amc;", "modifier": "private", "type": "Integer", "declarator": "amc", "var_name": "amc"}, {"original_string": "private Integer normalizedConsumption;", "modifier": "private", "type": "Integer", "declarator": "normalizedConsumption", "var_name": "normalizedConsumption"}, {"original_string": "private Integer periodNormalizedConsumption;", "modifier": "private", "type": "Integer", "declarator": "periodNormalizedConsumption", "var_name": "periodNormalizedConsumption"}, {"original_string": "private Integer calculatedOrderQuantity;", "modifier": "private", "type": "Integer", "declarator": "calculatedOrderQuantity", "var_name": "calculatedOrderQuantity"}, {"original_string": "private Integer maxStockQuantity;", "modifier": "private", "type": "Integer", "declarator": "maxStockQuantity", "var_name": "maxStockQuantity"}, {"original_string": "private Integer quantityApproved;", "modifier": "private", "type": "Integer", "declarator": "quantityApproved", "var_name": "quantityApproved"}, {"original_string": "private Integer reportingDays;", "modifier": "private", "type": "Integer", "declarator": "reportingDays", "var_name": "reportingDays"}, {"original_string": "private Integer packsToShip;", "modifier": "private", "type": "Integer", "declarator": "packsToShip", "var_name": "packsToShip"}, {"original_string": "private String expirationDate;", "modifier": "private", "type": "String", "declarator": "expirationDate", "var_name": "expirationDate"}, {"original_string": "private String remarks;", "modifier": "private", "type": "String", "declarator": "remarks", "var_name": "remarks"}, {"original_string": "private List<Integer> previousNormalizedConsumptions = new ArrayList<>();", "modifier": "private", "type": "List<Integer>", "declarator": "previousNormalizedConsumptions = new ArrayList<>()", "var_name": "previousNormalizedConsumptions"}, {"original_string": "private Money price;", "modifier": "private", "type": "Money", "declarator": "price", "var_name": "price"}, {"original_string": "private Integer total;", "modifier": "private", "type": "Integer", "declarator": "total", "var_name": "total"}, {"original_string": "@SuppressWarnings(\"unused\")\n  private Boolean skipped = false;", "modifier": "@SuppressWarnings(\"unused\")\n  private", "type": "Boolean", "declarator": "skipped = false", "var_name": "skipped"}], "methods": [{"identifier": "RnrLineItem", "parameters": "(Long rnrId,\n                     FacilityTypeApprovedProduct facilityTypeApprovedProduct,\n                     Long modifiedBy,\n                     Long createdBy)", "modifiers": "public", "return": "", "signature": " RnrLineItem(Long rnrId,\n                     FacilityTypeApprovedProduct facilityTypeApprovedProduct,\n                     Long modifiedBy,\n                     Long createdBy)", "full_signature": "public  RnrLineItem(Long rnrId,\n                     FacilityTypeApprovedProduct facilityTypeApprovedProduct,\n                     Long modifiedBy,\n                     Long createdBy)", "class_method_signature": "RnrLineItem.RnrLineItem(Long rnrId,\n                     FacilityTypeApprovedProduct facilityTypeApprovedProduct,\n                     Long modifiedBy,\n                     Long createdBy)", "testcase": false, "constructor": true}, {"identifier": "setFieldsForApproval", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void setFieldsForApproval()", "full_signature": "public void setFieldsForApproval()", "class_method_signature": "RnrLineItem.setFieldsForApproval()", "testcase": false, "constructor": false}, {"identifier": "setBeginningBalanceWhenPreviousStockInHandAvailable", "parameters": "(RnrLineItem previousLineItem,\n                                                                  Boolean beginningBalanceVisible)", "modifiers": "public", "return": "void", "signature": "void setBeginningBalanceWhenPreviousStockInHandAvailable(RnrLineItem previousLineItem,\n                                                                  Boolean beginningBalanceVisible)", "full_signature": "public void setBeginningBalanceWhenPreviousStockInHandAvailable(RnrLineItem previousLineItem,\n                                                                  Boolean beginningBalanceVisible)", "class_method_signature": "RnrLineItem.setBeginningBalanceWhenPreviousStockInHandAvailable(RnrLineItem previousLineItem,\n                                                                  Boolean beginningBalanceVisible)", "testcase": false, "constructor": false}, {"identifier": "setSkippedValueWhenPreviousLineItemIsAvailable", "parameters": "(RnrLineItem previousLineItem)", "modifiers": "public", "return": "void", "signature": "void setSkippedValueWhenPreviousLineItemIsAvailable(RnrLineItem previousLineItem)", "full_signature": "public void setSkippedValueWhenPreviousLineItemIsAvailable(RnrLineItem previousLineItem)", "class_method_signature": "RnrLineItem.setSkippedValueWhenPreviousLineItemIsAvailable(RnrLineItem previousLineItem)", "testcase": false, "constructor": false}, {"identifier": "setLineItemFieldsAccordingToTemplate", "parameters": "(ProgramRnrTemplate template)", "modifiers": "public", "return": "void", "signature": "void setLineItemFieldsAccordingToTemplate(ProgramRnrTemplate template)", "full_signature": "public void setLineItemFieldsAccordingToTemplate(ProgramRnrTemplate template)", "class_method_signature": "RnrLineItem.setLineItemFieldsAccordingToTemplate(ProgramRnrTemplate template)", "testcase": false, "constructor": false}, {"identifier": "validateForApproval", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void validateForApproval()", "full_signature": "public void validateForApproval()", "class_method_signature": "RnrLineItem.validateForApproval()", "testcase": false, "constructor": false}, {"identifier": "validateMandatoryFields", "parameters": "(ProgramRnrTemplate template)", "modifiers": "public", "return": "void", "signature": "void validateMandatoryFields(ProgramRnrTemplate template)", "full_signature": "public void validateMandatoryFields(ProgramRnrTemplate template)", "class_method_signature": "RnrLineItem.validateMandatoryFields(ProgramRnrTemplate template)", "testcase": false, "constructor": false}, {"identifier": "validateNonFullSupply", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void validateNonFullSupply()", "full_signature": "public void validateNonFullSupply()", "class_method_signature": "RnrLineItem.validateNonFullSupply()", "testcase": false, "constructor": false}, {"identifier": "validateCalculatedFields", "parameters": "(ProgramRnrTemplate template)", "modifiers": "public", "return": "void", "signature": "void validateCalculatedFields(ProgramRnrTemplate template)", "full_signature": "public void validateCalculatedFields(ProgramRnrTemplate template)", "class_method_signature": "RnrLineItem.validateCalculatedFields(ProgramRnrTemplate template)", "testcase": false, "constructor": false}, {"identifier": "calculateForFullSupply", "parameters": "(ProgramRnrTemplate template,\n                                     RnrStatus rnrStatus,\n                                     List<LossesAndAdjustmentsType> lossesAndAdjustmentsTypes, Integer numberOfMonths)", "modifiers": "public", "return": "void", "signature": "void calculateForFullSupply(ProgramRnrTemplate template,\n                                     RnrStatus rnrStatus,\n                                     List<LossesAndAdjustmentsType> lossesAndAdjustmentsTypes, Integer numberOfMonths)", "full_signature": "public void calculateForFullSupply(ProgramRnrTemplate template,\n                                     RnrStatus rnrStatus,\n                                     List<LossesAndAdjustmentsType> lossesAndAdjustmentsTypes, Integer numberOfMonths)", "class_method_signature": "RnrLineItem.calculateForFullSupply(ProgramRnrTemplate template,\n                                     RnrStatus rnrStatus,\n                                     List<LossesAndAdjustmentsType> lossesAndAdjustmentsTypes, Integer numberOfMonths)", "testcase": false, "constructor": false}, {"identifier": "calculatePeriodNormalizedConsumption", "parameters": "(Integer numberOfMonths)", "modifiers": "public", "return": "void", "signature": "void calculatePeriodNormalizedConsumption(Integer numberOfMonths)", "full_signature": "public void calculatePeriodNormalizedConsumption(Integer numberOfMonths)", "class_method_signature": "RnrLineItem.calculatePeriodNormalizedConsumption(Integer numberOfMonths)", "testcase": false, "constructor": false}, {"identifier": "calculateAmc", "parameters": "(Integer numberOfMonths)", "modifiers": "public", "return": "void", "signature": "void calculateAmc(Integer numberOfMonths)", "full_signature": "public void calculateAmc(Integer numberOfMonths)", "class_method_signature": "RnrLineItem.calculateAmc(Integer numberOfMonths)", "testcase": false, "constructor": false}, {"identifier": "calculatePacksToShip", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void calculatePacksToShip()", "full_signature": "public void calculatePacksToShip()", "class_method_signature": "RnrLineItem.calculatePacksToShip()", "testcase": false, "constructor": false}, {"identifier": "calculateMaxStockQuantity", "parameters": "( ProgramRnrTemplate template)", "modifiers": "public", "return": "void", "signature": "void calculateMaxStockQuantity( ProgramRnrTemplate template)", "full_signature": "public void calculateMaxStockQuantity( ProgramRnrTemplate template)", "class_method_signature": "RnrLineItem.calculateMaxStockQuantity( ProgramRnrTemplate template)", "testcase": false, "constructor": false}, {"identifier": "calculateOrderQuantity", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void calculateOrderQuantity()", "full_signature": "public void calculateOrderQuantity()", "class_method_signature": "RnrLineItem.calculateOrderQuantity()", "testcase": false, "constructor": false}, {"identifier": "calculateNormalizedConsumption", "parameters": "(ProgramRnrTemplate template)", "modifiers": "public", "return": "void", "signature": "void calculateNormalizedConsumption(ProgramRnrTemplate template)", "full_signature": "public void calculateNormalizedConsumption(ProgramRnrTemplate template)", "class_method_signature": "RnrLineItem.calculateNormalizedConsumption(ProgramRnrTemplate template)", "testcase": false, "constructor": false}, {"identifier": "prepareFieldsForCalculation", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void prepareFieldsForCalculation()", "full_signature": "private void prepareFieldsForCalculation()", "class_method_signature": "RnrLineItem.prepareFieldsForCalculation()", "testcase": false, "constructor": false}, {"identifier": "calculateTotalLossesAndAdjustments", "parameters": "(List<LossesAndAdjustmentsType> lossesAndAdjustmentsTypes)", "modifiers": "public", "return": "void", "signature": "void calculateTotalLossesAndAdjustments(List<LossesAndAdjustmentsType> lossesAndAdjustmentsTypes)", "full_signature": "public void calculateTotalLossesAndAdjustments(List<LossesAndAdjustmentsType> lossesAndAdjustmentsTypes)", "class_method_signature": "RnrLineItem.calculateTotalLossesAndAdjustments(List<LossesAndAdjustmentsType> lossesAndAdjustmentsTypes)", "testcase": false, "constructor": false}, {"identifier": "calculateQuantityDispensed", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void calculateQuantityDispensed()", "full_signature": "public void calculateQuantityDispensed()", "class_method_signature": "RnrLineItem.calculateQuantityDispensed()", "testcase": false, "constructor": false}, {"identifier": "calculateStockInHand", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void calculateStockInHand()", "full_signature": "public void calculateStockInHand()", "class_method_signature": "RnrLineItem.calculateStockInHand()", "testcase": false, "constructor": false}, {"identifier": "calculateCost", "parameters": "()", "modifiers": "public", "return": "Money", "signature": "Money calculateCost()", "full_signature": "public Money calculateCost()", "class_method_signature": "RnrLineItem.calculateCost()", "testcase": false, "constructor": false}, {"identifier": "copyCreatorEditableFieldsForFullSupply", "parameters": "(RnrLineItem lineItem, ProgramRnrTemplate template)", "modifiers": "public", "return": "void", "signature": "void copyCreatorEditableFieldsForFullSupply(RnrLineItem lineItem, ProgramRnrTemplate template)", "full_signature": "public void copyCreatorEditableFieldsForFullSupply(RnrLineItem lineItem, ProgramRnrTemplate template)", "class_method_signature": "RnrLineItem.copyCreatorEditableFieldsForFullSupply(RnrLineItem lineItem, ProgramRnrTemplate template)", "testcase": false, "constructor": false}, {"identifier": "copyCreatorEditableFieldsForNonFullSupply", "parameters": "(RnrLineItem lineItem, ProgramRnrTemplate template)", "modifiers": "public", "return": "void", "signature": "void copyCreatorEditableFieldsForNonFullSupply(RnrLineItem lineItem, ProgramRnrTemplate template)", "full_signature": "public void copyCreatorEditableFieldsForNonFullSupply(RnrLineItem lineItem, ProgramRnrTemplate template)", "class_method_signature": "RnrLineItem.copyCreatorEditableFieldsForNonFullSupply(RnrLineItem lineItem, ProgramRnrTemplate template)", "testcase": false, "constructor": false}, {"identifier": "copyApproverEditableFields", "parameters": "(RnrLineItem lineItem, ProgramRnrTemplate template)", "modifiers": "public", "return": "void", "signature": "void copyApproverEditableFields(RnrLineItem lineItem, ProgramRnrTemplate template)", "full_signature": "public void copyApproverEditableFields(RnrLineItem lineItem, ProgramRnrTemplate template)", "class_method_signature": "RnrLineItem.copyApproverEditableFields(RnrLineItem lineItem, ProgramRnrTemplate template)", "testcase": false, "constructor": false}, {"identifier": "addLossesAndAdjustments", "parameters": "(LossesAndAdjustments lossesAndAdjustments)", "modifiers": "public", "return": "void", "signature": "void addLossesAndAdjustments(LossesAndAdjustments lossesAndAdjustments)", "full_signature": "public void addLossesAndAdjustments(LossesAndAdjustments lossesAndAdjustments)", "class_method_signature": "RnrLineItem.addLossesAndAdjustments(LossesAndAdjustments lossesAndAdjustments)", "testcase": false, "constructor": false}, {"identifier": "calculateNormalizedConsumption", "parameters": "(BigDecimal stockOutDays,\n                                                 BigDecimal quantityDispensed,\n                                                 BigDecimal newPatientCount,\n                                                 BigDecimal dosesPerMonth,\n                                                 BigDecimal dosesPerDispensingUnit,\n                                                 Integer reportingDays,\n                                                 ProgramRnrTemplate template)", "modifiers": "private", "return": "Integer", "signature": "Integer calculateNormalizedConsumption(BigDecimal stockOutDays,\n                                                 BigDecimal quantityDispensed,\n                                                 BigDecimal newPatientCount,\n                                                 BigDecimal dosesPerMonth,\n                                                 BigDecimal dosesPerDispensingUnit,\n                                                 Integer reportingDays,\n                                                 ProgramRnrTemplate template)", "full_signature": "private Integer calculateNormalizedConsumption(BigDecimal stockOutDays,\n                                                 BigDecimal quantityDispensed,\n                                                 BigDecimal newPatientCount,\n                                                 BigDecimal dosesPerMonth,\n                                                 BigDecimal dosesPerDispensingUnit,\n                                                 Integer reportingDays,\n                                                 ProgramRnrTemplate template)", "class_method_signature": "RnrLineItem.calculateNormalizedConsumption(BigDecimal stockOutDays,\n                                                 BigDecimal quantityDispensed,\n                                                 BigDecimal newPatientCount,\n                                                 BigDecimal dosesPerMonth,\n                                                 BigDecimal dosesPerDispensingUnit,\n                                                 Integer reportingDays,\n                                                 ProgramRnrTemplate template)", "testcase": false, "constructor": false}, {"identifier": "copyField", "parameters": "(String fieldName, RnrLineItem lineItem, ProgramRnrTemplate template)", "modifiers": "private", "return": "void", "signature": "void copyField(String fieldName, RnrLineItem lineItem, ProgramRnrTemplate template)", "full_signature": "private void copyField(String fieldName, RnrLineItem lineItem, ProgramRnrTemplate template)", "class_method_signature": "RnrLineItem.copyField(String fieldName, RnrLineItem lineItem, ProgramRnrTemplate template)", "testcase": false, "constructor": false}, {"identifier": "copyTotalLossesAndAdjustments", "parameters": "(RnrLineItem item, ProgramRnrTemplate template)", "modifiers": "private", "return": "void", "signature": "void copyTotalLossesAndAdjustments(RnrLineItem item, ProgramRnrTemplate template)", "full_signature": "private void copyTotalLossesAndAdjustments(RnrLineItem item, ProgramRnrTemplate template)", "class_method_signature": "RnrLineItem.copyTotalLossesAndAdjustments(RnrLineItem item, ProgramRnrTemplate template)", "testcase": false, "constructor": false}, {"identifier": "populateFromProduct", "parameters": "(ProgramProduct programProduct)", "modifiers": "private", "return": "void", "signature": "void populateFromProduct(ProgramProduct programProduct)", "full_signature": "private void populateFromProduct(ProgramProduct programProduct)", "class_method_signature": "RnrLineItem.populateFromProduct(ProgramProduct programProduct)", "testcase": false, "constructor": false}, {"identifier": "requestedQuantityConditionalValidation", "parameters": "(ProgramRnrTemplate template)", "modifiers": "private", "return": "void", "signature": "void requestedQuantityConditionalValidation(ProgramRnrTemplate template)", "full_signature": "private void requestedQuantityConditionalValidation(ProgramRnrTemplate template)", "class_method_signature": "RnrLineItem.requestedQuantityConditionalValidation(ProgramRnrTemplate template)", "testcase": false, "constructor": false}, {"identifier": "getValueFor", "parameters": "(String fieldName)", "modifiers": "private", "return": "Object", "signature": "Object getValueFor(String fieldName)", "full_signature": "private Object getValueFor(String fieldName)", "class_method_signature": "RnrLineItem.getValueFor(String fieldName)", "testcase": false, "constructor": false}, {"identifier": "compareCategory", "parameters": "(LineItem lineItem)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean compareCategory(LineItem lineItem)", "full_signature": "@Override public boolean compareCategory(LineItem lineItem)", "class_method_signature": "RnrLineItem.compareCategory(LineItem lineItem)", "testcase": false, "constructor": false}, {"identifier": "getCategoryName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getCategoryName()", "full_signature": "@Override public String getCategoryName()", "class_method_signature": "RnrLineItem.getCategoryName()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(String columnName)", "modifiers": "@Override public", "return": "String", "signature": "String getValue(String columnName)", "full_signature": "@Override public String getValue(String columnName)", "class_method_signature": "RnrLineItem.getValue(String columnName)", "testcase": false, "constructor": false}, {"identifier": "isRnrLineItem", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isRnrLineItem()", "full_signature": "@Override public boolean isRnrLineItem()", "class_method_signature": "RnrLineItem.isRnrLineItem()", "testcase": false, "constructor": false}, {"identifier": "getOrderQuantity", "parameters": "()", "modifiers": "private", "return": "Integer", "signature": "Integer getOrderQuantity()", "full_signature": "private Integer getOrderQuantity()", "class_method_signature": "RnrLineItem.getOrderQuantity()", "testcase": false, "constructor": false}, {"identifier": "applyRoundingRules", "parameters": "(Integer orderQuantity)", "modifiers": "private", "return": "Integer", "signature": "Integer applyRoundingRules(Integer orderQuantity)", "full_signature": "private Integer applyRoundingRules(Integer orderQuantity)", "class_method_signature": "RnrLineItem.applyRoundingRules(Integer orderQuantity)", "testcase": false, "constructor": false}, {"identifier": "allNotNull", "parameters": "(Integer... fields)", "modifiers": "private", "return": "boolean", "signature": "boolean allNotNull(Integer... fields)", "full_signature": "private boolean allNotNull(Integer... fields)", "class_method_signature": "RnrLineItem.allNotNull(Integer... fields)", "testcase": false, "constructor": false}, {"identifier": "getAdditive", "parameters": "(final LossesAndAdjustments lossAndAdjustment,\n                              List<LossesAndAdjustmentsType> lossesAndAdjustmentsTypes)", "modifiers": "private", "return": "Boolean", "signature": "Boolean getAdditive(final LossesAndAdjustments lossAndAdjustment,\n                              List<LossesAndAdjustmentsType> lossesAndAdjustmentsTypes)", "full_signature": "private Boolean getAdditive(final LossesAndAdjustments lossAndAdjustment,\n                              List<LossesAndAdjustmentsType> lossesAndAdjustmentsTypes)", "class_method_signature": "RnrLineItem.getAdditive(final LossesAndAdjustments lossAndAdjustment,\n                              List<LossesAndAdjustmentsType> lossesAndAdjustmentsTypes)", "testcase": false, "constructor": false}], "file": "modules/requisition/src/main/java/org/openlmis/rnr/domain/RnrLineItem.java"}, "focal_method": {"identifier": "calculatePacksToShip", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void calculatePacksToShip() {\n    Integer orderQuantity = getOrderQuantity();\n    if (allNotNull(orderQuantity, packSize)) {\n      packsToShip = ((orderQuantity == 0) ? (roundToZero ? 0 : 1) : applyRoundingRules(orderQuantity));\n    }\n  }", "signature": "void calculatePacksToShip()", "full_signature": "public void calculatePacksToShip()", "class_method_signature": "RnrLineItem.calculatePacksToShip()", "testcase": false, "constructor": false, "invocations": ["getOrderQuantity", "allNotNull", "applyRoundingRules"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}