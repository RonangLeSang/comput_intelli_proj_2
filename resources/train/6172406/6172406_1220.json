{"test_class": {"identifier": "BudgetFileProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  BudgetFileService budgetFileService;", "modifier": "@Mock", "type": "BudgetFileService", "declarator": "budgetFileService", "var_name": "budgetFileService"}, {"original_string": "@Mock\n  BudgetFileTemplateService budgetFileTemplateService;", "modifier": "@Mock", "type": "BudgetFileTemplateService", "declarator": "budgetFileTemplateService", "var_name": "budgetFileTemplateService"}, {"original_string": "@Mock\n  BudgetLineItemTransformer transformer;", "modifier": "@Mock", "type": "BudgetLineItemTransformer", "declarator": "transformer", "var_name": "transformer"}, {"original_string": "@Mock\n  FacilityService facilityService;", "modifier": "@Mock", "type": "FacilityService", "declarator": "facilityService", "var_name": "facilityService"}, {"original_string": "@Mock\n  private ProgramService programService;", "modifier": "@Mock\n  private", "type": "ProgramService", "declarator": "programService", "var_name": "programService"}, {"original_string": "@Mock\n  private ProcessingScheduleService processingScheduleService;", "modifier": "@Mock\n  private", "type": "ProcessingScheduleService", "declarator": "processingScheduleService", "var_name": "processingScheduleService"}, {"original_string": "@Mock\n  private BudgetLineItemService budgetLineItemService;", "modifier": "@Mock\n  private", "type": "BudgetLineItemService", "declarator": "budgetLineItemService", "var_name": "budgetLineItemService"}, {"original_string": "@Mock\n  BudgetFilePostProcessHandler budgetFilePostProcessHandler;", "modifier": "@Mock", "type": "BudgetFilePostProcessHandler", "declarator": "budgetFilePostProcessHandler", "var_name": "budgetFilePostProcessHandler"}, {"original_string": "@Mock\n  MessageService messageService;", "modifier": "@Mock", "type": "MessageService", "declarator": "messageService", "var_name": "messageService"}, {"original_string": "@InjectMocks\n  BudgetFileProcessor budgetFileProcessor;", "modifier": "@InjectMocks", "type": "BudgetFileProcessor", "declarator": "budgetFileProcessor", "var_name": "budgetFileProcessor"}, {"original_string": "@Mock\n  ApplicationContext applicationContext;", "modifier": "@Mock", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private Message message;", "modifier": "private", "type": "Message", "declarator": "message", "var_name": "message"}, {"original_string": "private EDIFileTemplate ediFileTemplate;", "modifier": "private", "type": "EDIFileTemplate", "declarator": "ediFileTemplate", "var_name": "ediFileTemplate"}, {"original_string": "private EDIConfiguration configuration;", "modifier": "private", "type": "EDIConfiguration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private String dateFormat;", "modifier": "private", "type": "String", "declarator": "dateFormat", "var_name": "dateFormat"}, {"original_string": "private EDIFileColumn periodDateColumn;", "modifier": "private", "type": "EDIFileColumn", "declarator": "periodDateColumn", "var_name": "periodDateColumn"}, {"original_string": "private EDIFileColumn defaultEDIColumn;", "modifier": "private", "type": "EDIFileColumn", "declarator": "defaultEDIColumn", "var_name": "defaultEDIColumn"}, {"original_string": "private List<String> csvRow;", "modifier": "private", "type": "List<String>", "declarator": "csvRow", "var_name": "csvRow"}, {"original_string": "private File budgetFile;", "modifier": "private", "type": "File", "declarator": "budgetFile", "var_name": "budgetFile"}, {"original_string": "private CsvListReader listReader;", "modifier": "private", "type": "CsvListReader", "declarator": "listReader", "var_name": "listReader"}], "file": "modules/core/src/test/java/org/openlmis/core/service/BudgetFileProcessorTest.java"}, "test_case": {"identifier": "shouldSaveBudgetFileLineItem", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldSaveBudgetFileLineItem() throws Exception {\n    configuration.setHeaderInFile(true);\n    when(listReader.getRowNumber()).thenReturn(2, 3);\n    String budgetFileName = \"BudgetFileName\";\n    when(budgetFile.getName()).thenReturn(budgetFileName);\n    BudgetFileInfo budgetFileInfo = new BudgetFileInfo();\n    budgetFileInfo.setId(1L);\n    whenNew(BudgetFileInfo.class).withArguments(budgetFileName, false).thenReturn(budgetFileInfo);\n    mockStatic(BudgetLineItemDTO.class);\n    BudgetLineItemDTO lineItemDTO = mock(BudgetLineItemDTO.class);\n    when(lineItemDTO.getFacilityCode()).thenReturn(\"F10\");\n    when(lineItemDTO.getProgramCode()).thenReturn(\"HIV\");\n    when(BudgetLineItemDTO.populate(csvRow, ediFileTemplate.getColumns())).thenReturn(lineItemDTO);\n    Facility facility = new Facility();\n    facility.setCode(\"F10\");\n    when(facilityService.getByCode(facility)).thenReturn(facility);\n    Program program = new Program();\n    when(programService.getByCode(\"HIV\")).thenReturn(program);\n    BudgetLineItem budgetLineItem = mock(BudgetLineItem.class);\n    ProcessingPeriod processingPeriod = mock(ProcessingPeriod.class);\n    when(processingScheduleService.getPeriodForDate(facility, program, budgetLineItem.getPeriodDate())).thenReturn(processingPeriod);\n    when(transformer.transform(lineItemDTO, dateFormat, 1)).thenReturn(budgetLineItem);\n\n    budgetFileProcessor.process(message);\n\n    verify(transformer).transform(lineItemDTO, dateFormat, 1);\n    verify(budgetLineItem).setBudgetFileId(budgetFileInfo.getId());\n    verify(budgetLineItemService).save(budgetLineItem);\n    verify(BudgetLineItemDTO.populate(csvRow, ediFileTemplate.getColumns()));\n  }", "signature": "void shouldSaveBudgetFileLineItem()", "full_signature": "@Test public void shouldSaveBudgetFileLineItem()", "class_method_signature": "BudgetFileProcessorTest.shouldSaveBudgetFileLineItem()", "testcase": true, "constructor": false, "invocations": ["setHeaderInFile", "thenReturn", "when", "getRowNumber", "thenReturn", "when", "getName", "setId", "thenReturn", "withArguments", "whenNew", "mockStatic", "mock", "thenReturn", "when", "getFacilityCode", "thenReturn", "when", "getProgramCode", "thenReturn", "when", "populate", "getColumns", "setCode", "thenReturn", "when", "getByCode", "thenReturn", "when", "getByCode", "mock", "mock", "thenReturn", "when", "getPeriodForDate", "getPeriodDate", "thenReturn", "when", "transform", "process", "transform", "verify", "setBudgetFileId", "verify", "getId", "save", "verify", "verify", "populate", "getColumns"]}, "focal_class": {"identifier": "BudgetFileProcessor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger logger = Logger.getLogger(BudgetFileProcessor.class);", "modifier": "private static", "type": "Logger", "declarator": "logger = Logger.getLogger(BudgetFileProcessor.class)", "var_name": "logger"}, {"original_string": "@Autowired\n  private BudgetFileTemplateService budgetFileTemplateService;", "modifier": "@Autowired\n  private", "type": "BudgetFileTemplateService", "declarator": "budgetFileTemplateService", "var_name": "budgetFileTemplateService"}, {"original_string": "@Autowired\n  private BudgetLineItemTransformer budgetLineItemTransformer;", "modifier": "@Autowired\n  private", "type": "BudgetLineItemTransformer", "declarator": "budgetLineItemTransformer", "var_name": "budgetLineItemTransformer"}, {"original_string": "@Autowired\n  private FacilityService facilityService;", "modifier": "@Autowired\n  private", "type": "FacilityService", "declarator": "facilityService", "var_name": "facilityService"}, {"original_string": "@Autowired\n  private ProgramService programService;", "modifier": "@Autowired\n  private", "type": "ProgramService", "declarator": "programService", "var_name": "programService"}, {"original_string": "@Autowired\n  private BudgetFileService budgetFileService;", "modifier": "@Autowired\n  private", "type": "BudgetFileService", "declarator": "budgetFileService", "var_name": "budgetFileService"}, {"original_string": "@Autowired\n  private ProcessingScheduleService processingScheduleService;", "modifier": "@Autowired\n  private", "type": "ProcessingScheduleService", "declarator": "processingScheduleService", "var_name": "processingScheduleService"}, {"original_string": "@Autowired\n  private BudgetLineItemService budgetLineItemService;", "modifier": "@Autowired\n  private", "type": "BudgetLineItemService", "declarator": "budgetLineItemService", "var_name": "budgetLineItemService"}, {"original_string": "@Autowired\n  private BudgetFilePostProcessHandler budgetFilePostProcessHandler;", "modifier": "@Autowired\n  private", "type": "BudgetFilePostProcessHandler", "declarator": "budgetFilePostProcessHandler", "var_name": "budgetFilePostProcessHandler"}, {"original_string": "private MessageService messageService = MessageService.getRequestInstance();", "modifier": "private", "type": "MessageService", "declarator": "messageService = MessageService.getRequestInstance()", "var_name": "messageService"}, {"original_string": "@Autowired\n  private ApplicationContext applicationContext;", "modifier": "@Autowired\n  private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}], "methods": [{"identifier": "getSpringProxy", "parameters": "()", "modifiers": "private", "return": "BudgetFileProcessor", "signature": "BudgetFileProcessor getSpringProxy()", "full_signature": "private BudgetFileProcessor getSpringProxy()", "class_method_signature": "BudgetFileProcessor.getSpringProxy()", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(Message message)", "modifiers": "public", "return": "void", "signature": "void process(Message message)", "full_signature": "public void process(Message message)", "class_method_signature": "BudgetFileProcessor.process(Message message)", "testcase": false, "constructor": false}, {"identifier": "processBudgetFile", "parameters": "(File budgetFile, BudgetFileInfo budgetFileInfo)", "modifiers": "@Transactional public", "return": "Boolean", "signature": "Boolean processBudgetFile(File budgetFile, BudgetFileInfo budgetFileInfo)", "full_signature": "@Transactional public Boolean processBudgetFile(File budgetFile, BudgetFileInfo budgetFileInfo)", "class_method_signature": "BudgetFileProcessor.processBudgetFile(File budgetFile, BudgetFileInfo budgetFileInfo)", "testcase": false, "constructor": false}, {"identifier": "saveBudgetFile", "parameters": "(File budgetFile, Boolean processingError)", "modifiers": "private", "return": "BudgetFileInfo", "signature": "BudgetFileInfo saveBudgetFile(File budgetFile, Boolean processingError)", "full_signature": "private BudgetFileInfo saveBudgetFile(File budgetFile, Boolean processingError)", "class_method_signature": "BudgetFileProcessor.saveBudgetFile(File budgetFile, Boolean processingError)", "testcase": false, "constructor": false}, {"identifier": "getValidatedPeriod", "parameters": "(Facility facility, Program program, Date date, Integer rowNumber)", "modifiers": "private", "return": "ProcessingPeriod", "signature": "ProcessingPeriod getValidatedPeriod(Facility facility, Program program, Date date, Integer rowNumber)", "full_signature": "private ProcessingPeriod getValidatedPeriod(Facility facility, Program program, Date date, Integer rowNumber)", "class_method_signature": "BudgetFileProcessor.getValidatedPeriod(Facility facility, Program program, Date date, Integer rowNumber)", "testcase": false, "constructor": false}, {"identifier": "getValidatedProgram", "parameters": "(String programCode, Integer rowNumber)", "modifiers": "private", "return": "Program", "signature": "Program getValidatedProgram(String programCode, Integer rowNumber)", "full_signature": "private Program getValidatedProgram(String programCode, Integer rowNumber)", "class_method_signature": "BudgetFileProcessor.getValidatedProgram(String programCode, Integer rowNumber)", "testcase": false, "constructor": false}, {"identifier": "getValidatedFacility", "parameters": "(String facilityCode, Integer rowNumber)", "modifiers": "private", "return": "Facility", "signature": "Facility getValidatedFacility(String facilityCode, Integer rowNumber)", "full_signature": "private Facility getValidatedFacility(String facilityCode, Integer rowNumber)", "class_method_signature": "BudgetFileProcessor.getValidatedFacility(String facilityCode, Integer rowNumber)", "testcase": false, "constructor": false}], "file": "modules/core/src/main/java/org/openlmis/core/service/BudgetFileProcessor.java"}, "focal_method": {"identifier": "process", "parameters": "(Message message)", "modifiers": "public", "return": "void", "body": "public void process(Message message) throws Exception {\n    File budgetFile = (File) message.getPayload();\n\n    logger.debug(\"processing Budget File \" + budgetFile.getName());\n\n    BudgetFileInfo budgetFileInfo = saveBudgetFile(budgetFile, false);\n\n    Boolean processingError = getSpringProxy().processBudgetFile(budgetFile, budgetFileInfo);\n\n    budgetFileInfo.setProcessingError(processingError);\n    budgetFilePostProcessHandler.process(budgetFileInfo, budgetFile);\n  }", "signature": "void process(Message message)", "full_signature": "public void process(Message message)", "class_method_signature": "BudgetFileProcessor.process(Message message)", "testcase": false, "constructor": false, "invocations": ["getPayload", "debug", "getName", "saveBudgetFile", "processBudgetFile", "getSpringProxy", "setProcessingError", "process"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}