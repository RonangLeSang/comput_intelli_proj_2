{"test_class": {"identifier": "RestRequisitionCalculatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  private RequisitionService requisitionService;", "modifier": "@Mock\n  private", "type": "RequisitionService", "declarator": "requisitionService", "var_name": "requisitionService"}, {"original_string": "@Mock\n  private ProcessingScheduleService processingScheduleService;", "modifier": "@Mock\n  private", "type": "ProcessingScheduleService", "declarator": "processingScheduleService", "var_name": "processingScheduleService"}, {"original_string": "@Mock\n  private PODService podService;", "modifier": "@Mock\n  private", "type": "PODService", "declarator": "podService", "var_name": "podService"}, {"original_string": "@Rule\n  public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "@InjectMocks\n  private RestRequisitionCalculator restRequisitionCalculator;", "modifier": "@InjectMocks\n  private", "type": "RestRequisitionCalculator", "declarator": "restRequisitionCalculator", "var_name": "restRequisitionCalculator"}, {"original_string": "private List<ProcessingPeriod> emptyPeriodList;", "modifier": "private", "type": "List<ProcessingPeriod>", "declarator": "emptyPeriodList", "var_name": "emptyPeriodList"}, {"original_string": "private List<RnrLineItem> emptyLineItemList;", "modifier": "private", "type": "List<RnrLineItem>", "declarator": "emptyLineItemList", "var_name": "emptyLineItemList"}, {"original_string": "private List<OrderPODLineItem> emptyOrderPodLineItemList;", "modifier": "private", "type": "List<OrderPODLineItem>", "declarator": "emptyOrderPodLineItemList", "var_name": "emptyOrderPodLineItemList"}], "file": "modules/rest-api/src/test/java/org/openlmis/restapi/service/RestRequisitionCalculatorTest.java"}, "test_case": {"identifier": "shouldSetBeginningBalanceToZeroIfNoPreviousAndCurrentStockInHandAvailable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldSetBeginningBalanceToZeroIfNoPreviousAndCurrentStockInHandAvailable() throws Exception {\n    ProcessingPeriod processingPeriod = make(a(defaultProcessingPeriod, with(numberOfMonths, 3)));\n\n    Rnr requisition = make(a(RequisitionBuilder.defaultRequisition, with(RequisitionBuilder.period, processingPeriod)));\n    Integer nullInteger = null;\n    requisition.setFullSupplyLineItems(asList(make(a(defaultRnrLineItem, with(productCode, \"P121\"), with(stockInHand, nullInteger), with(beginningBalance, nullInteger)))));\n\n    when(processingScheduleService.findM(requisition.getPeriod())).thenReturn(1);\n    when(processingScheduleService.getNPreviousPeriodsInDescOrder(processingPeriod, 2)).thenReturn(emptyPeriodList);\n    when(requisitionService.getNRnrLineItems(\"P121\", requisition, 1, processingPeriod.getStartDate())).thenReturn(emptyLineItemList);\n\n    Rnr filledRequisition = restRequisitionCalculator.setDefaultValues(requisition);\n\n    assertThat(filledRequisition.getFullSupplyLineItems().get(0).getBeginningBalance(), is(0));\n  }", "signature": "void shouldSetBeginningBalanceToZeroIfNoPreviousAndCurrentStockInHandAvailable()", "full_signature": "@Test public void shouldSetBeginningBalanceToZeroIfNoPreviousAndCurrentStockInHandAvailable()", "class_method_signature": "RestRequisitionCalculatorTest.shouldSetBeginningBalanceToZeroIfNoPreviousAndCurrentStockInHandAvailable()", "testcase": true, "constructor": false, "invocations": ["make", "a", "with", "make", "a", "with", "setFullSupplyLineItems", "asList", "make", "a", "with", "with", "with", "thenReturn", "when", "findM", "getPeriod", "thenReturn", "when", "getNPreviousPeriodsInDescOrder", "thenReturn", "when", "getNRnrLineItems", "getStartDate", "setDefaultValues", "assertThat", "getBeginningBalance", "get", "getFullSupplyLineItems", "is"]}, "focal_class": {"identifier": "RestRequisitionCalculator", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  private RequisitionService requisitionService;", "modifier": "@Autowired\n  private", "type": "RequisitionService", "declarator": "requisitionService", "var_name": "requisitionService"}, {"original_string": "@Autowired\n  private PODService podService;", "modifier": "@Autowired\n  private", "type": "PODService", "declarator": "podService", "var_name": "podService"}, {"original_string": "@Autowired\n  private ProcessingScheduleService processingScheduleService;", "modifier": "@Autowired\n  private", "type": "ProcessingScheduleService", "declarator": "processingScheduleService", "var_name": "processingScheduleService"}], "methods": [{"identifier": "validatePeriod", "parameters": "(Facility reportingFacility, Program reportingProgram)", "modifiers": "public", "return": "void", "signature": "void validatePeriod(Facility reportingFacility, Program reportingProgram)", "full_signature": "public void validatePeriod(Facility reportingFacility, Program reportingProgram)", "class_method_signature": "RestRequisitionCalculator.validatePeriod(Facility reportingFacility, Program reportingProgram)", "testcase": false, "constructor": false}, {"identifier": "validateCustomPeriod", "parameters": "(Facility reportingFacility, Program reportingProgram, ProcessingPeriod period, Long userId)", "modifiers": "public", "return": "void", "signature": "void validateCustomPeriod(Facility reportingFacility, Program reportingProgram, ProcessingPeriod period, Long userId)", "full_signature": "public void validateCustomPeriod(Facility reportingFacility, Program reportingProgram, ProcessingPeriod period, Long userId)", "class_method_signature": "RestRequisitionCalculator.validateCustomPeriod(Facility reportingFacility, Program reportingProgram, ProcessingPeriod period, Long userId)", "testcase": false, "constructor": false}, {"identifier": "validateProducts", "parameters": "(List<RnrLineItem> products, Rnr savedRequisition)", "modifiers": "public", "return": "void", "signature": "void validateProducts(List<RnrLineItem> products, Rnr savedRequisition)", "full_signature": "public void validateProducts(List<RnrLineItem> products, Rnr savedRequisition)", "class_method_signature": "RestRequisitionCalculator.validateProducts(List<RnrLineItem> products, Rnr savedRequisition)", "testcase": false, "constructor": false}, {"identifier": "setDefaultValues", "parameters": "(Rnr requisition)", "modifiers": "public", "return": "Rnr", "signature": "Rnr setDefaultValues(Rnr requisition)", "full_signature": "public Rnr setDefaultValues(Rnr requisition)", "class_method_signature": "RestRequisitionCalculator.setDefaultValues(Rnr requisition)", "testcase": false, "constructor": false}, {"identifier": "setQuantityReceived", "parameters": "(RnrLineItem rnrLineItem, Rnr requisition, Date trackingDate)", "modifiers": "private", "return": "void", "signature": "void setQuantityReceived(RnrLineItem rnrLineItem, Rnr requisition, Date trackingDate)", "full_signature": "private void setQuantityReceived(RnrLineItem rnrLineItem, Rnr requisition, Date trackingDate)", "class_method_signature": "RestRequisitionCalculator.setQuantityReceived(RnrLineItem rnrLineItem, Rnr requisition, Date trackingDate)", "testcase": false, "constructor": false}, {"identifier": "setBeginningBalance", "parameters": "(RnrLineItem rnrLineItem, Rnr requisition, Date trackingDate)", "modifiers": "private", "return": "void", "signature": "void setBeginningBalance(RnrLineItem rnrLineItem, Rnr requisition, Date trackingDate)", "full_signature": "private void setBeginningBalance(RnrLineItem rnrLineItem, Rnr requisition, Date trackingDate)", "class_method_signature": "RestRequisitionCalculator.setBeginningBalance(RnrLineItem rnrLineItem, Rnr requisition, Date trackingDate)", "testcase": false, "constructor": false}], "file": "modules/rest-api/src/main/java/org/openlmis/restapi/service/RestRequisitionCalculator.java"}, "focal_method": {"identifier": "setDefaultValues", "parameters": "(Rnr requisition)", "modifiers": "public", "return": "Rnr", "body": "public Rnr setDefaultValues(Rnr requisition) {\n    Integer M = processingScheduleService.findM(requisition.getPeriod());\n\n    List<ProcessingPeriod> nPreviousPeriods = processingScheduleService.getNPreviousPeriodsInDescOrder(requisition.getPeriod(), 2);\n    Date trackingDate = requisition.getPeriod().getStartDate();\n\n    if (!nPreviousPeriods.isEmpty()) {\n      trackingDate = M >= 3 ? nPreviousPeriods.get(0).getStartDate() : nPreviousPeriods.get(nPreviousPeriods.size() - 1).getStartDate();\n    }\n\n    for (RnrLineItem rnrLineItem : requisition.getNonSkippedLineItems()) {\n      setBeginningBalance(rnrLineItem, requisition, trackingDate);\n      setQuantityReceived(rnrLineItem, requisition, trackingDate);\n    }\n    return requisition;\n  }", "signature": "Rnr setDefaultValues(Rnr requisition)", "full_signature": "public Rnr setDefaultValues(Rnr requisition)", "class_method_signature": "RestRequisitionCalculator.setDefaultValues(Rnr requisition)", "testcase": false, "constructor": false, "invocations": ["findM", "getPeriod", "getNPreviousPeriodsInDescOrder", "getPeriod", "getStartDate", "getPeriod", "isEmpty", "getStartDate", "get", "getStartDate", "get", "size", "getNonSkippedLineItems", "setBeginningBalance", "setQuantityReceived"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}