{"test_class": {"identifier": "StockAdjustmentReasonServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  ProgramService programService;", "modifier": "@Mock", "type": "ProgramService", "declarator": "programService", "var_name": "programService"}, {"original_string": "@Mock\n  StockAdjustmentReasonRepository repository;", "modifier": "@Mock", "type": "StockAdjustmentReasonRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "@InjectMocks\n  StockAdjustmentReasonService service;", "modifier": "@InjectMocks", "type": "StockAdjustmentReasonService", "declarator": "service", "var_name": "service"}, {"original_string": "@Rule\n  public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "private StockAdjustmentReason reason;", "modifier": "private", "type": "StockAdjustmentReason", "declarator": "reason", "var_name": "reason"}, {"original_string": "private StockAdjustmentReason newReason;", "modifier": "private", "type": "StockAdjustmentReason", "declarator": "newReason", "var_name": "newReason"}, {"original_string": "private StockAdjustmentReasonProgram reasonProgram;", "modifier": "private", "type": "StockAdjustmentReasonProgram", "declarator": "reasonProgram", "var_name": "reasonProgram"}, {"original_string": "private StockAdjustmentReasonProgram newReasonProgram;", "modifier": "private", "type": "StockAdjustmentReasonProgram", "declarator": "newReasonProgram", "var_name": "newReasonProgram"}], "file": "modules/core/src/test/java/org/openlmis/core/service/StockAdjustmentReasonServiceTest.java"}, "test_case": {"identifier": "shouldUpdateExistingAdjustmentReasonProgram", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldUpdateExistingAdjustmentReasonProgram() throws Exception {\n    service.saveAdjustmentReasonProgram(reasonProgram);\n\n    verify(repository).updateAdjustmentReasonProgram(reasonProgram);\n    verify(repository, never()).insertAdjustmentReasonProgram(reasonProgram);\n  }", "signature": "void shouldUpdateExistingAdjustmentReasonProgram()", "full_signature": "@Test public void shouldUpdateExistingAdjustmentReasonProgram()", "class_method_signature": "StockAdjustmentReasonServiceTest.shouldUpdateExistingAdjustmentReasonProgram()", "testcase": true, "constructor": false, "invocations": ["saveAdjustmentReasonProgram", "updateAdjustmentReasonProgram", "verify", "insertAdjustmentReasonProgram", "verify", "never"]}, "focal_class": {"identifier": "StockAdjustmentReasonService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  StockAdjustmentReasonRepository repository;", "modifier": "@Autowired", "type": "StockAdjustmentReasonRepository", "declarator": "repository", "var_name": "repository"}], "methods": [{"identifier": "getAdjustmentReasons", "parameters": "(Boolean additive,\n                                                          Long programId,\n                                                          StockAdjustmentReason.Category category)", "modifiers": "public", "return": "List<StockAdjustmentReason>", "signature": "List<StockAdjustmentReason> getAdjustmentReasons(Boolean additive,\n                                                          Long programId,\n                                                          StockAdjustmentReason.Category category)", "full_signature": "public List<StockAdjustmentReason> getAdjustmentReasons(Boolean additive,\n                                                          Long programId,\n                                                          StockAdjustmentReason.Category category)", "class_method_signature": "StockAdjustmentReasonService.getAdjustmentReasons(Boolean additive,\n                                                          Long programId,\n                                                          StockAdjustmentReason.Category category)", "testcase": false, "constructor": false}, {"identifier": "getAdjustmentReasonByName", "parameters": "(String name)", "modifiers": "public", "return": "StockAdjustmentReason", "signature": "StockAdjustmentReason getAdjustmentReasonByName(String name)", "full_signature": "public StockAdjustmentReason getAdjustmentReasonByName(String name)", "class_method_signature": "StockAdjustmentReasonService.getAdjustmentReasonByName(String name)", "testcase": false, "constructor": false}, {"identifier": "saveAdjustmentReason", "parameters": "(StockAdjustmentReason reason)", "modifiers": "public", "return": "void", "signature": "void saveAdjustmentReason(StockAdjustmentReason reason)", "full_signature": "public void saveAdjustmentReason(StockAdjustmentReason reason)", "class_method_signature": "StockAdjustmentReasonService.saveAdjustmentReason(StockAdjustmentReason reason)", "testcase": false, "constructor": false}, {"identifier": "getAdjustmentReasonProgram", "parameters": "(String programCode, String reasonName)", "modifiers": "public", "return": "StockAdjustmentReasonProgram", "signature": "StockAdjustmentReasonProgram getAdjustmentReasonProgram(String programCode, String reasonName)", "full_signature": "public StockAdjustmentReasonProgram getAdjustmentReasonProgram(String programCode, String reasonName)", "class_method_signature": "StockAdjustmentReasonService.getAdjustmentReasonProgram(String programCode, String reasonName)", "testcase": false, "constructor": false}, {"identifier": "saveAdjustmentReasonProgram", "parameters": "(StockAdjustmentReasonProgram entry)", "modifiers": "public", "return": "void", "signature": "void saveAdjustmentReasonProgram(StockAdjustmentReasonProgram entry)", "full_signature": "public void saveAdjustmentReasonProgram(StockAdjustmentReasonProgram entry)", "class_method_signature": "StockAdjustmentReasonService.saveAdjustmentReasonProgram(StockAdjustmentReasonProgram entry)", "testcase": false, "constructor": false}], "file": "modules/core/src/main/java/org/openlmis/core/service/StockAdjustmentReasonService.java"}, "focal_method": {"identifier": "saveAdjustmentReasonProgram", "parameters": "(StockAdjustmentReasonProgram entry)", "modifiers": "public", "return": "void", "body": "public void saveAdjustmentReasonProgram(StockAdjustmentReasonProgram entry) {\n    if (entry.getId() != null) {\n      repository.updateAdjustmentReasonProgram(entry);\n    } else {\n      repository.insertAdjustmentReasonProgram(entry);\n    }\n  }", "signature": "void saveAdjustmentReasonProgram(StockAdjustmentReasonProgram entry)", "full_signature": "public void saveAdjustmentReasonProgram(StockAdjustmentReasonProgram entry)", "class_method_signature": "StockAdjustmentReasonService.saveAdjustmentReasonProgram(StockAdjustmentReasonProgram entry)", "testcase": false, "constructor": false, "invocations": ["getId", "updateAdjustmentReasonProgram", "insertAdjustmentReasonProgram"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}