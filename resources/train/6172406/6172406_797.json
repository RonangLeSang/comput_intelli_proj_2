{"test_class": {"identifier": "ServiceContractControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  ServiceContractService service;", "modifier": "@Mock", "type": "ServiceContractService", "declarator": "service", "var_name": "service"}, {"original_string": "@Mock\n  MessageService messageService;", "modifier": "@Mock", "type": "MessageService", "declarator": "messageService", "var_name": "messageService"}, {"original_string": "@InjectMocks\n  ServiceContractController controller;", "modifier": "@InjectMocks", "type": "ServiceContractController", "declarator": "controller", "var_name": "controller"}, {"original_string": "private MockHttpServletRequest request;", "modifier": "private", "type": "MockHttpServletRequest", "declarator": "request", "var_name": "request"}], "file": "modules/openlmis-web/src/test/java/org/openlmis/web/controller/equipment/ServiceContractControllerTest.java"}, "test_case": {"identifier": "shouldGetByFacilityId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldGetByFacilityId() throws Exception {\n    List<ServiceContract> list = new ArrayList<>();\n    when(service.getAllForFacility(2L)).thenReturn(list);\n\n    ResponseEntity<OpenLmisResponse> response = controller.getByFacilityId(2L);\n    assertThat(list, is(response.getBody().getData().get(\"contracts\")));\n  }", "signature": "void shouldGetByFacilityId()", "full_signature": "@Test public void shouldGetByFacilityId()", "class_method_signature": "ServiceContractControllerTest.shouldGetByFacilityId()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getAllForFacility", "getByFacilityId", "assertThat", "is", "get", "getData", "getBody"]}, "focal_class": {"identifier": "ServiceContractController", "superclass": "extends BaseController", "interfaces": "", "fields": [{"original_string": "public static final String CONTRACT = \"contract\";", "modifier": "public static final", "type": "String", "declarator": "CONTRACT = \"contract\"", "var_name": "CONTRACT"}, {"original_string": "public static final String CONTRACTS = \"contracts\";", "modifier": "public static final", "type": "String", "declarator": "CONTRACTS = \"contracts\"", "var_name": "CONTRACTS"}, {"original_string": "@Autowired\n  private ServiceContractService service;", "modifier": "@Autowired\n  private", "type": "ServiceContractService", "declarator": "service", "var_name": "service"}], "methods": [{"identifier": "getAll", "parameters": "()", "modifiers": "@RequestMapping(method = GET, value = \"list\") public", "return": "ResponseEntity<OpenLmisResponse>", "signature": "ResponseEntity<OpenLmisResponse> getAll()", "full_signature": "@RequestMapping(method = GET, value = \"list\") public ResponseEntity<OpenLmisResponse> getAll()", "class_method_signature": "ServiceContractController.getAll()", "testcase": false, "constructor": false}, {"identifier": "getById", "parameters": "( @RequestParam(\"id\") Long id)", "modifiers": "@RequestMapping(method = GET, value = \"id\") public", "return": "ResponseEntity<OpenLmisResponse>", "signature": "ResponseEntity<OpenLmisResponse> getById( @RequestParam(\"id\") Long id)", "full_signature": "@RequestMapping(method = GET, value = \"id\") public ResponseEntity<OpenLmisResponse> getById( @RequestParam(\"id\") Long id)", "class_method_signature": "ServiceContractController.getById( @RequestParam(\"id\") Long id)", "testcase": false, "constructor": false}, {"identifier": "getByFacilityId", "parameters": "( @RequestParam(\"id\") Long id)", "modifiers": "@RequestMapping(method = GET, value = \"for-facility\") public", "return": "ResponseEntity<OpenLmisResponse>", "signature": "ResponseEntity<OpenLmisResponse> getByFacilityId( @RequestParam(\"id\") Long id)", "full_signature": "@RequestMapping(method = GET, value = \"for-facility\") public ResponseEntity<OpenLmisResponse> getByFacilityId( @RequestParam(\"id\") Long id)", "class_method_signature": "ServiceContractController.getByFacilityId( @RequestParam(\"id\") Long id)", "testcase": false, "constructor": false}, {"identifier": "getByVendorId", "parameters": "( @RequestParam(\"id\") Long id)", "modifiers": "@RequestMapping(method = GET, value = \"for-vendor\") public", "return": "ResponseEntity<OpenLmisResponse>", "signature": "ResponseEntity<OpenLmisResponse> getByVendorId( @RequestParam(\"id\") Long id)", "full_signature": "@RequestMapping(method = GET, value = \"for-vendor\") public ResponseEntity<OpenLmisResponse> getByVendorId( @RequestParam(\"id\") Long id)", "class_method_signature": "ServiceContractController.getByVendorId( @RequestParam(\"id\") Long id)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(@RequestBody ServiceContract contract)", "modifiers": "@RequestMapping(value = \"save\", method = POST, headers = ACCEPT_JSON) public", "return": "ResponseEntity<OpenLmisResponse>", "signature": "ResponseEntity<OpenLmisResponse> save(@RequestBody ServiceContract contract)", "full_signature": "@RequestMapping(value = \"save\", method = POST, headers = ACCEPT_JSON) public ResponseEntity<OpenLmisResponse> save(@RequestBody ServiceContract contract)", "class_method_signature": "ServiceContractController.save(@RequestBody ServiceContract contract)", "testcase": false, "constructor": false}], "file": "modules/openlmis-web/src/main/java/org/openlmis/web/controller/equipment/ServiceContractController.java"}, "focal_method": {"identifier": "getByFacilityId", "parameters": "( @RequestParam(\"id\") Long id)", "modifiers": "@RequestMapping(method = GET, value = \"for-facility\") public", "return": "ResponseEntity<OpenLmisResponse>", "body": "@RequestMapping(method = GET, value = \"for-facility\")\n  public ResponseEntity<OpenLmisResponse> getByFacilityId( @RequestParam(\"id\") Long id){\n    return  OpenLmisResponse.response(CONTRACTS, service.getAllForFacility(id));\n  }", "signature": "ResponseEntity<OpenLmisResponse> getByFacilityId( @RequestParam(\"id\") Long id)", "full_signature": "@RequestMapping(method = GET, value = \"for-facility\") public ResponseEntity<OpenLmisResponse> getByFacilityId( @RequestParam(\"id\") Long id)", "class_method_signature": "ServiceContractController.getByFacilityId( @RequestParam(\"id\") Long id)", "testcase": false, "constructor": false, "invocations": ["response", "getAllForFacility"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}