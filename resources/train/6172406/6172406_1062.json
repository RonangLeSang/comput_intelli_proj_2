{"test_class": {"identifier": "VaccineReportColdChainRepositoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  VaccineReportColdChainMapper mapper;", "modifier": "@Mock", "type": "VaccineReportColdChainMapper", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "@InjectMocks\n  VaccineReportColdChainRepository repository;", "modifier": "@InjectMocks", "type": "VaccineReportColdChainRepository", "declarator": "repository", "var_name": "repository"}], "file": "modules/vaccine/src/test/java/org/openlmis/vaccine/repository/reports/VaccineReportColdChainRepositoryTest.java"}, "test_case": {"identifier": "shouldInsert", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldInsert() throws Exception {\n    ColdChainLineItem lineItem = new ColdChainLineItem();\n    repository.insert(lineItem);\n    verify(mapper).insert(lineItem);\n  }", "signature": "void shouldInsert()", "full_signature": "@Test public void shouldInsert()", "class_method_signature": "VaccineReportColdChainRepositoryTest.shouldInsert()", "testcase": true, "constructor": false, "invocations": ["insert", "insert", "verify"]}, "focal_class": {"identifier": "VaccineReportColdChainRepository", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  VaccineReportColdChainMapper mapper;", "modifier": "@Autowired", "type": "VaccineReportColdChainMapper", "declarator": "mapper", "var_name": "mapper"}], "methods": [{"identifier": "insert", "parameters": "(ColdChainLineItem lineItem)", "modifiers": "public", "return": "void", "signature": "void insert(ColdChainLineItem lineItem)", "full_signature": "public void insert(ColdChainLineItem lineItem)", "class_method_signature": "VaccineReportColdChainRepository.insert(ColdChainLineItem lineItem)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(ColdChainLineItem lineItem)", "modifiers": "public", "return": "void", "signature": "void update(ColdChainLineItem lineItem)", "full_signature": "public void update(ColdChainLineItem lineItem)", "class_method_signature": "VaccineReportColdChainRepository.update(ColdChainLineItem lineItem)", "testcase": false, "constructor": false}, {"identifier": "getNewEquipmentLineItems", "parameters": "(Long programId, Long facilityId)", "modifiers": "public", "return": "List<ColdChainLineItem>", "signature": "List<ColdChainLineItem> getNewEquipmentLineItems(Long programId, Long facilityId)", "full_signature": "public List<ColdChainLineItem> getNewEquipmentLineItems(Long programId, Long facilityId)", "class_method_signature": "VaccineReportColdChainRepository.getNewEquipmentLineItems(Long programId, Long facilityId)", "testcase": false, "constructor": false}], "file": "modules/vaccine/src/main/java/org/openlmis/vaccine/repository/reports/VaccineReportColdChainRepository.java"}, "focal_method": {"identifier": "insert", "parameters": "(ColdChainLineItem lineItem)", "modifiers": "public", "return": "void", "body": "public void insert(ColdChainLineItem lineItem){\n    mapper.insert(lineItem);\n  }", "signature": "void insert(ColdChainLineItem lineItem)", "full_signature": "public void insert(ColdChainLineItem lineItem)", "class_method_signature": "VaccineReportColdChainRepository.insert(ColdChainLineItem lineItem)", "testcase": false, "constructor": false, "invocations": ["insert"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}