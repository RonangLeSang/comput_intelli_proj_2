{"test_class": {"identifier": "VaccineProductDoseServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  private ProductDoseRepository repository;", "modifier": "@Mock\n  private", "type": "ProductDoseRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "@Mock\n  private ProgramProductRepository programProductRepository;", "modifier": "@Mock\n  private", "type": "ProgramProductRepository", "declarator": "programProductRepository", "var_name": "programProductRepository"}, {"original_string": "@InjectMocks\n  private VaccineProductDoseService service;", "modifier": "@InjectMocks\n  private", "type": "VaccineProductDoseService", "declarator": "service", "var_name": "service"}], "file": "modules/vaccine/src/test/java/org/openlmis/vaccine/service/VaccineProductDoseServiceTest.java"}, "test_case": {"identifier": "shouldGetProductDoseForProgram", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldGetProductDoseForProgram() throws Exception {\n    when(programProductRepository.getActiveByProgram(2L)).thenReturn(new ArrayList<ProgramProduct>());\n    when(repository.getAllDoses()).thenReturn(null);\n\n    VaccineServiceConfigDTO dto  = service.getProductDoseForProgram(2L);\n\n    verify(programProductRepository).getActiveByProgram(2L);\n    verify(repository, never()).getDosesForProduct(anyLong(), anyLong());\n    verify(repository).getAllDoses();\n  }", "signature": "void shouldGetProductDoseForProgram()", "full_signature": "@Test public void shouldGetProductDoseForProgram()", "class_method_signature": "VaccineProductDoseServiceTest.shouldGetProductDoseForProgram()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getActiveByProgram", "thenReturn", "when", "getAllDoses", "getProductDoseForProgram", "getActiveByProgram", "verify", "getDosesForProduct", "verify", "never", "anyLong", "anyLong", "getAllDoses", "verify"]}, "focal_class": {"identifier": "VaccineProductDoseService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  private ProductDoseRepository repository;", "modifier": "@Autowired\n  private", "type": "ProductDoseRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "@Autowired\n  private ProgramProductRepository programProductRepository;", "modifier": "@Autowired\n  private", "type": "ProgramProductRepository", "declarator": "programProductRepository", "var_name": "programProductRepository"}], "methods": [{"identifier": "getProductDoseForProgram", "parameters": "(Long programId)", "modifiers": "public", "return": "VaccineServiceConfigDTO", "signature": "VaccineServiceConfigDTO getProductDoseForProgram(Long programId)", "full_signature": "public VaccineServiceConfigDTO getProductDoseForProgram(Long programId)", "class_method_signature": "VaccineProductDoseService.getProductDoseForProgram(Long programId)", "testcase": false, "constructor": false}, {"identifier": "getForProgram", "parameters": "(Long programId)", "modifiers": "public", "return": "List<VaccineProductDose>", "signature": "List<VaccineProductDose> getForProgram(Long programId)", "full_signature": "public List<VaccineProductDose> getForProgram(Long programId)", "class_method_signature": "VaccineProductDoseService.getForProgram(Long programId)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(List<ProductDoseDTO> productDoseDTOs)", "modifiers": "public", "return": "void", "signature": "void save(List<ProductDoseDTO> productDoseDTOs)", "full_signature": "public void save(List<ProductDoseDTO> productDoseDTOs)", "class_method_signature": "VaccineProductDoseService.save(List<ProductDoseDTO> productDoseDTOs)", "testcase": false, "constructor": false}], "file": "modules/vaccine/src/main/java/org/openlmis/vaccine/service/VaccineProductDoseService.java"}, "focal_method": {"identifier": "getProductDoseForProgram", "parameters": "(Long programId)", "modifiers": "public", "return": "VaccineServiceConfigDTO", "body": "public VaccineServiceConfigDTO getProductDoseForProgram(Long programId) {\n    VaccineServiceConfigDTO dto = new VaccineServiceConfigDTO();\n    List<ProductDoseDTO> productDoseDTOs = new ArrayList<>();\n    List<ProgramProduct> pp = programProductRepository.getActiveByProgram(programId);\n    List<Product> products = new ArrayList<>();\n    for (ProgramProduct p : pp) {\n      if (!p.getProduct().getFullSupply()) {\n        continue;\n      }\n      List<VaccineProductDose> doses = repository.getDosesForProduct(programId, p.getProduct().getId());\n      if (!doses.isEmpty()) {\n        ProductDoseDTO productDose = new ProductDoseDTO();\n        productDose.setProductId(p.getProduct().getId());\n        productDose.setProductName(p.getProduct().getPrimaryName());\n        productDose.setDoses(doses);\n        productDoseDTOs.add(productDose);\n      } else {\n        //these are the possible other products.\n        products.add(p.getProduct());\n      }\n    }\n    dto.setPossibleDoses(repository.getAllDoses());\n    dto.setPossibleProducts(products);\n    dto.setProtocols(productDoseDTOs);\n    return dto;\n  }", "signature": "VaccineServiceConfigDTO getProductDoseForProgram(Long programId)", "full_signature": "public VaccineServiceConfigDTO getProductDoseForProgram(Long programId)", "class_method_signature": "VaccineProductDoseService.getProductDoseForProgram(Long programId)", "testcase": false, "constructor": false, "invocations": ["getActiveByProgram", "getFullSupply", "getProduct", "getDosesForProduct", "getId", "getProduct", "isEmpty", "setProductId", "getId", "getProduct", "setProductName", "getPrimaryName", "getProduct", "setDoses", "add", "add", "getProduct", "setPossibleDoses", "getAllDoses", "setPossibleProducts", "setProtocols"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}