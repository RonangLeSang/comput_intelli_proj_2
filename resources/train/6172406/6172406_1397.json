{"test_class": {"identifier": "RegimenRepositoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  RegimenCategoryMapper regimenCategoryMapper;", "modifier": "@Mock", "type": "RegimenCategoryMapper", "declarator": "regimenCategoryMapper", "var_name": "regimenCategoryMapper"}, {"original_string": "@Mock\n  RegimenMapper mapper;", "modifier": "@Mock", "type": "RegimenMapper", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "@InjectMocks\n  RegimenRepository repository;", "modifier": "@InjectMocks", "type": "RegimenRepository", "declarator": "repository", "var_name": "repository"}], "file": "modules/core/src/test/java/org/openlmis/core/repository/RegimenRepositoryTest.java"}, "test_case": {"identifier": "shouldInsertARegimen", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldInsertARegimen() {\n    final Regimen regimen = new Regimen();\n    final Regimen regimen2 = new Regimen();\n    regimen2.setName(\"regimen\");\n    List<Regimen> regimens = new ArrayList<Regimen>() {{\n      add(regimen);\n      add(regimen2);\n    }};\n\n    repository.save(regimens, 1L);\n\n    assertThat(regimen.getCreatedBy(), is(1L));\n    assertThat(regimen.getModifiedBy(), is(1L));\n    verify(mapper).insert(regimen);\n    verify(mapper).insert(regimen2);\n  }", "signature": "void shouldInsertARegimen()", "full_signature": "@Test public void shouldInsertARegimen()", "class_method_signature": "RegimenRepositoryTest.shouldInsertARegimen()", "testcase": true, "constructor": false, "invocations": ["setName", "add", "add", "save", "assertThat", "getCreatedBy", "is", "assertThat", "getModifiedBy", "is", "insert", "verify", "insert", "verify"]}, "focal_class": {"identifier": "RegimenRepository", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  RegimenMapper mapper;", "modifier": "@Autowired", "type": "RegimenMapper", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "@Autowired\n  RegimenCategoryMapper regimenCategoryMapper;", "modifier": "@Autowired", "type": "RegimenCategoryMapper", "declarator": "regimenCategoryMapper", "var_name": "regimenCategoryMapper"}, {"original_string": "@Autowired\n  DosageFrequencyMapper dosageFrequencyMapper;", "modifier": "@Autowired", "type": "DosageFrequencyMapper", "declarator": "dosageFrequencyMapper", "var_name": "dosageFrequencyMapper"}, {"original_string": "@Autowired\n  RegimenCombinationConstituentMapper regimenCombinationConstituentMapper;", "modifier": "@Autowired", "type": "RegimenCombinationConstituentMapper", "declarator": "regimenCombinationConstituentMapper", "var_name": "regimenCombinationConstituentMapper"}, {"original_string": "@Autowired\n  RegimenProductCombinationMapper regimenProductCombinationMapper;", "modifier": "@Autowired", "type": "RegimenProductCombinationMapper", "declarator": "regimenProductCombinationMapper", "var_name": "regimenProductCombinationMapper"}, {"original_string": "@Autowired\n  RegimenConstituentDosageMapper regimenConstituentDosageMapper;", "modifier": "@Autowired", "type": "RegimenConstituentDosageMapper", "declarator": "regimenConstituentDosageMapper", "var_name": "regimenConstituentDosageMapper"}], "methods": [{"identifier": "getByProgram", "parameters": "(Long programId)", "modifiers": "public", "return": "List<Regimen>", "signature": "List<Regimen> getByProgram(Long programId)", "full_signature": "public List<Regimen> getByProgram(Long programId)", "class_method_signature": "RegimenRepository.getByProgram(Long programId)", "testcase": false, "constructor": false}, {"identifier": "getById", "parameters": "(Long id)", "modifiers": "public", "return": "Regimen", "signature": "Regimen getById(Long id)", "full_signature": "public Regimen getById(Long id)", "class_method_signature": "RegimenRepository.getById(Long id)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(List<Regimen> regimens, Long userId)", "modifiers": "public", "return": "void", "signature": "void save(List<Regimen> regimens, Long userId)", "full_signature": "public void save(List<Regimen> regimens, Long userId)", "class_method_signature": "RegimenRepository.save(List<Regimen> regimens, Long userId)", "testcase": false, "constructor": false}, {"identifier": "getAllRegimens", "parameters": "()", "modifiers": "public", "return": "List<Regimen>", "signature": "List<Regimen> getAllRegimens()", "full_signature": "public List<Regimen> getAllRegimens()", "class_method_signature": "RegimenRepository.getAllRegimens()", "testcase": false, "constructor": false}, {"identifier": "getAllDosageFrequencies", "parameters": "()", "modifiers": "public", "return": "List<DosageFrequency>", "signature": "List<DosageFrequency> getAllDosageFrequencies()", "full_signature": "public List<DosageFrequency> getAllDosageFrequencies()", "class_method_signature": "RegimenRepository.getAllDosageFrequencies()", "testcase": false, "constructor": false}, {"identifier": "getAllRegimenCombinationConstituents", "parameters": "()", "modifiers": "public", "return": "List<RegimenCombinationConstituent>", "signature": "List<RegimenCombinationConstituent> getAllRegimenCombinationConstituents()", "full_signature": "public List<RegimenCombinationConstituent> getAllRegimenCombinationConstituents()", "class_method_signature": "RegimenRepository.getAllRegimenCombinationConstituents()", "testcase": false, "constructor": false}, {"identifier": "getAllRegimenConstituentsDosages", "parameters": "()", "modifiers": "public", "return": "List<RegimenConstituentDosage>", "signature": "List<RegimenConstituentDosage> getAllRegimenConstituentsDosages()", "full_signature": "public List<RegimenConstituentDosage> getAllRegimenConstituentsDosages()", "class_method_signature": "RegimenRepository.getAllRegimenConstituentsDosages()", "testcase": false, "constructor": false}, {"identifier": "getAllRegimenProductCombinations", "parameters": "()", "modifiers": "public", "return": "List<RegimenProductCombination>", "signature": "List<RegimenProductCombination> getAllRegimenProductCombinations()", "full_signature": "public List<RegimenProductCombination> getAllRegimenProductCombinations()", "class_method_signature": "RegimenRepository.getAllRegimenProductCombinations()", "testcase": false, "constructor": false}], "file": "modules/core/src/main/java/org/openlmis/core/repository/RegimenRepository.java"}, "focal_method": {"identifier": "save", "parameters": "(List<Regimen> regimens, Long userId)", "modifiers": "public", "return": "void", "body": "public void save(List<Regimen> regimens, Long userId) {\n    for (Regimen regimen : regimens) {\n      regimen.setModifiedBy(userId);\n      if (regimen.getId() == null) {\n        regimen.setCreatedBy(userId);\n        mapper.insert(regimen);\n      }\n      mapper.update(regimen);\n    }\n  }", "signature": "void save(List<Regimen> regimens, Long userId)", "full_signature": "public void save(List<Regimen> regimens, Long userId)", "class_method_signature": "RegimenRepository.save(List<Regimen> regimens, Long userId)", "testcase": false, "constructor": false, "invocations": ["setModifiedBy", "getId", "setCreatedBy", "insert", "update"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}