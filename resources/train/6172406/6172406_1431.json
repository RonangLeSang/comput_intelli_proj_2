{"test_class": {"identifier": "StockAdjustmentReasonRepositoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  private StockAdjustmentReasonMapper mapper;", "modifier": "@Mock\n  private", "type": "StockAdjustmentReasonMapper", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "@InjectMocks\n  private StockAdjustmentReasonRepository repository;", "modifier": "@InjectMocks\n  private", "type": "StockAdjustmentReasonRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "List<StockAdjustmentReason> allReasons;", "modifier": "", "type": "List<StockAdjustmentReason>", "declarator": "allReasons", "var_name": "allReasons"}, {"original_string": "List<StockAdjustmentReason> positiveReasons;", "modifier": "", "type": "List<StockAdjustmentReason>", "declarator": "positiveReasons", "var_name": "positiveReasons"}, {"original_string": "List<StockAdjustmentReason> negativeReasons;", "modifier": "", "type": "List<StockAdjustmentReason>", "declarator": "negativeReasons", "var_name": "negativeReasons"}, {"original_string": "List<StockAdjustmentReason> catReasons;", "modifier": "", "type": "List<StockAdjustmentReason>", "declarator": "catReasons", "var_name": "catReasons"}], "file": "modules/core/src/test/java/org/openlmis/core/repository/StockAdjustmentReasonRepositoryTest.java"}, "test_case": {"identifier": "shouldGetProgramSpecificReasons", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldGetProgramSpecificReasons() {\n    when(mapper.getAllByProgram(1L)).thenReturn(positiveReasons);\n\n    List<StockAdjustmentReason> reasons = repository.getAdjustmentReasons(null, 1L, null);\n\n    verify(mapper).getAllByProgram(1L);\n    assertEquals(reasons, positiveReasons);\n  }", "signature": "void shouldGetProgramSpecificReasons()", "full_signature": "@Test public void shouldGetProgramSpecificReasons()", "class_method_signature": "StockAdjustmentReasonRepositoryTest.shouldGetProgramSpecificReasons()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getAllByProgram", "getAdjustmentReasons", "getAllByProgram", "verify", "assertEquals"]}, "focal_class": {"identifier": "StockAdjustmentReasonRepository", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  StockAdjustmentReasonMapper adjustmentReasonMapper;", "modifier": "@Autowired", "type": "StockAdjustmentReasonMapper", "declarator": "adjustmentReasonMapper", "var_name": "adjustmentReasonMapper"}], "methods": [{"identifier": "getAdjustmentReasons", "parameters": "(final Boolean additive,\n                                                          final Long programId,\n                                                          final StockAdjustmentReason.Category category)", "modifiers": "public", "return": "List<StockAdjustmentReason>", "signature": "List<StockAdjustmentReason> getAdjustmentReasons(final Boolean additive,\n                                                          final Long programId,\n                                                          final StockAdjustmentReason.Category category)", "full_signature": "public List<StockAdjustmentReason> getAdjustmentReasons(final Boolean additive,\n                                                          final Long programId,\n                                                          final StockAdjustmentReason.Category category)", "class_method_signature": "StockAdjustmentReasonRepository.getAdjustmentReasons(final Boolean additive,\n                                                          final Long programId,\n                                                          final StockAdjustmentReason.Category category)", "testcase": false, "constructor": false}, {"identifier": "getAdjustmentReasonByName", "parameters": "(String name)", "modifiers": "public", "return": "StockAdjustmentReason", "signature": "StockAdjustmentReason getAdjustmentReasonByName(String name)", "full_signature": "public StockAdjustmentReason getAdjustmentReasonByName(String name)", "class_method_signature": "StockAdjustmentReasonRepository.getAdjustmentReasonByName(String name)", "testcase": false, "constructor": false}, {"identifier": "insertAdjustmentReason", "parameters": "(StockAdjustmentReason reason)", "modifiers": "public", "return": "void", "signature": "void insertAdjustmentReason(StockAdjustmentReason reason)", "full_signature": "public void insertAdjustmentReason(StockAdjustmentReason reason)", "class_method_signature": "StockAdjustmentReasonRepository.insertAdjustmentReason(StockAdjustmentReason reason)", "testcase": false, "constructor": false}, {"identifier": "getAdjustmentReasonProgram", "parameters": "(String programCode, String reasonName)", "modifiers": "public", "return": "StockAdjustmentReasonProgram", "signature": "StockAdjustmentReasonProgram getAdjustmentReasonProgram(String programCode, String reasonName)", "full_signature": "public StockAdjustmentReasonProgram getAdjustmentReasonProgram(String programCode, String reasonName)", "class_method_signature": "StockAdjustmentReasonRepository.getAdjustmentReasonProgram(String programCode, String reasonName)", "testcase": false, "constructor": false}, {"identifier": "insertAdjustmentReasonProgram", "parameters": "(StockAdjustmentReasonProgram entry)", "modifiers": "public", "return": "void", "signature": "void insertAdjustmentReasonProgram(StockAdjustmentReasonProgram entry)", "full_signature": "public void insertAdjustmentReasonProgram(StockAdjustmentReasonProgram entry)", "class_method_signature": "StockAdjustmentReasonRepository.insertAdjustmentReasonProgram(StockAdjustmentReasonProgram entry)", "testcase": false, "constructor": false}, {"identifier": "updateAdjustmentReasonProgram", "parameters": "(StockAdjustmentReasonProgram entry)", "modifiers": "public", "return": "void", "signature": "void updateAdjustmentReasonProgram(StockAdjustmentReasonProgram entry)", "full_signature": "public void updateAdjustmentReasonProgram(StockAdjustmentReasonProgram entry)", "class_method_signature": "StockAdjustmentReasonRepository.updateAdjustmentReasonProgram(StockAdjustmentReasonProgram entry)", "testcase": false, "constructor": false}], "file": "modules/core/src/main/java/org/openlmis/core/repository/StockAdjustmentReasonRepository.java"}, "focal_method": {"identifier": "getAdjustmentReasons", "parameters": "(final Boolean additive,\n                                                          final Long programId,\n                                                          final StockAdjustmentReason.Category category)", "modifiers": "public", "return": "List<StockAdjustmentReason>", "body": "public List<StockAdjustmentReason> getAdjustmentReasons(final Boolean additive,\n                                                          final Long programId,\n                                                          final StockAdjustmentReason.Category category) {\n    // determine master list by program / no program\n    List<StockAdjustmentReason> reasons;\n    if (programId != null) {\n      reasons = adjustmentReasonMapper.getAllByProgram(programId);\n    } else {\n      reasons = adjustmentReasonMapper.getAllDefault();\n    }\n\n    // filter out reasons based on additive and category arguments\n    CollectionUtils.filter(reasons, new Predicate<StockAdjustmentReason>() {\n      @Override\n      public boolean evaluate(StockAdjustmentReason reason) {\n        // remove if category is given and we're not in it\n        if(null != category && false == reason.inCategory(category)) return false;\n\n        // remove if additive is given and we're not of the same additive/not-additive\n        if(null != additive && reason.getAdditive() != additive) return false;\n\n        return true; // gautlet passed\n      }\n    });\n\n    return reasons;\n  }", "signature": "List<StockAdjustmentReason> getAdjustmentReasons(final Boolean additive,\n                                                          final Long programId,\n                                                          final StockAdjustmentReason.Category category)", "full_signature": "public List<StockAdjustmentReason> getAdjustmentReasons(final Boolean additive,\n                                                          final Long programId,\n                                                          final StockAdjustmentReason.Category category)", "class_method_signature": "StockAdjustmentReasonRepository.getAdjustmentReasons(final Boolean additive,\n                                                          final Long programId,\n                                                          final StockAdjustmentReason.Category category)", "testcase": false, "constructor": false, "invocations": ["getAllByProgram", "getAllDefault", "filter", "inCategory", "getAdditive"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}