{"test_class": {"identifier": "RnrTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public ExpectedException exception = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "exception = ExpectedException.none()", "var_name": "exception"}, {"original_string": "ProgramRnrTemplate rnrTemplate;", "modifier": "", "type": "ProgramRnrTemplate", "declarator": "rnrTemplate", "var_name": "rnrTemplate"}, {"original_string": "RegimenTemplate regimenTemplate;", "modifier": "", "type": "RegimenTemplate", "declarator": "regimenTemplate", "var_name": "regimenTemplate"}, {"original_string": "List<LossesAndAdjustmentsType> lossesAndAdjustmentsTypes;", "modifier": "", "type": "List<LossesAndAdjustmentsType>", "declarator": "lossesAndAdjustmentsTypes", "var_name": "lossesAndAdjustmentsTypes"}, {"original_string": "private Rnr rnr;", "modifier": "private", "type": "Rnr", "declarator": "rnr", "var_name": "rnr"}], "file": "modules/requisition/src/test/java/org/openlmis/rnr/domain/RnrTest.java"}, "test_case": {"identifier": "shouldSetBeginningBalanceToZeroIfPreviousRequisitionIsInInitiatedState", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldSetBeginningBalanceToZeroIfPreviousRequisitionIsInInitiatedState() throws Exception {\n    Rnr previousRequisition = make(a(defaultRequisition, with(status, INITIATED)));\n\n    rnr.setFieldsAccordingToTemplateFrom(previousRequisition, rnrTemplate, regimenTemplate);\n\n    assertThat(rnr.getFullSupplyLineItems().get(0).getBeginningBalance(), is(0));\n  }", "signature": "void shouldSetBeginningBalanceToZeroIfPreviousRequisitionIsInInitiatedState()", "full_signature": "@Test public void shouldSetBeginningBalanceToZeroIfPreviousRequisitionIsInInitiatedState()", "class_method_signature": "RnrTest.shouldSetBeginningBalanceToZeroIfPreviousRequisitionIsInInitiatedState()", "testcase": true, "constructor": false, "invocations": ["make", "a", "with", "setFieldsAccordingToTemplateFrom", "assertThat", "getBeginningBalance", "get", "getFullSupplyLineItems", "is"]}, "focal_class": {"identifier": "Rnr", "superclass": "extends BaseModel", "interfaces": "", "fields": [{"original_string": "public static final String RNR_VALIDATION_ERROR = \"error.rnr.validation\";", "modifier": "public static final", "type": "String", "declarator": "RNR_VALIDATION_ERROR = \"error.rnr.validation\"", "var_name": "RNR_VALIDATION_ERROR"}, {"original_string": "private boolean emergency;", "modifier": "private", "type": "boolean", "declarator": "emergency", "var_name": "emergency"}, {"original_string": "private Facility facility;", "modifier": "private", "type": "Facility", "declarator": "facility", "var_name": "facility"}, {"original_string": "private Program program;", "modifier": "private", "type": "Program", "declarator": "program", "var_name": "program"}, {"original_string": "private ProcessingPeriod period;", "modifier": "private", "type": "ProcessingPeriod", "declarator": "period", "var_name": "period"}, {"original_string": "private RnrStatus status;", "modifier": "private", "type": "RnrStatus", "declarator": "status", "var_name": "status"}, {"original_string": "private Money fullSupplyItemsSubmittedCost = new Money(\"0\");", "modifier": "private", "type": "Money", "declarator": "fullSupplyItemsSubmittedCost = new Money(\"0\")", "var_name": "fullSupplyItemsSubmittedCost"}, {"original_string": "private Money nonFullSupplyItemsSubmittedCost = new Money(\"0\");", "modifier": "private", "type": "Money", "declarator": "nonFullSupplyItemsSubmittedCost = new Money(\"0\")", "var_name": "nonFullSupplyItemsSubmittedCost"}, {"original_string": "private List<RnrLineItem> fullSupplyLineItems = new ArrayList<>();", "modifier": "private", "type": "List<RnrLineItem>", "declarator": "fullSupplyLineItems = new ArrayList<>()", "var_name": "fullSupplyLineItems"}, {"original_string": "private List<RnrLineItem> nonFullSupplyLineItems = new ArrayList<>();", "modifier": "private", "type": "List<RnrLineItem>", "declarator": "nonFullSupplyLineItems = new ArrayList<>()", "var_name": "nonFullSupplyLineItems"}, {"original_string": "private List<RegimenLineItem> regimenLineItems = new ArrayList<>();", "modifier": "private", "type": "List<RegimenLineItem>", "declarator": "regimenLineItems = new ArrayList<>()", "var_name": "regimenLineItems"}, {"original_string": "private List<EquipmentLineItem> equipmentLineItems = new ArrayList<>();", "modifier": "private", "type": "List<EquipmentLineItem>", "declarator": "equipmentLineItems = new ArrayList<>()", "var_name": "equipmentLineItems"}, {"original_string": "private List<PatientQuantificationLineItem> patientQuantifications = new ArrayList<>();", "modifier": "private", "type": "List<PatientQuantificationLineItem>", "declarator": "patientQuantifications = new ArrayList<>()", "var_name": "patientQuantifications"}, {"original_string": "private BigDecimal allocatedBudget;", "modifier": "private", "type": "BigDecimal", "declarator": "allocatedBudget", "var_name": "allocatedBudget"}, {"original_string": "@Transient\n  @JsonIgnore\n  private List<RnrLineItem> allLineItems = new ArrayList<>();", "modifier": "@Transient\n  @JsonIgnore\n  private", "type": "List<RnrLineItem>", "declarator": "allLineItems = new ArrayList<>()", "var_name": "allLineItems"}, {"original_string": "private Facility supplyingDepot;", "modifier": "private", "type": "Facility", "declarator": "supplyingDepot", "var_name": "supplyingDepot"}, {"original_string": "private Long supplyingDepotId;", "modifier": "private", "type": "Long", "declarator": "supplyingDepotId", "var_name": "supplyingDepotId"}, {"original_string": "private Long supervisoryNodeId;", "modifier": "private", "type": "Long", "declarator": "supervisoryNodeId", "var_name": "supervisoryNodeId"}, {"original_string": "private Date submittedDate;", "modifier": "private", "type": "Date", "declarator": "submittedDate", "var_name": "submittedDate"}, {"original_string": "private Date clientSubmittedTime;", "modifier": "private", "type": "Date", "declarator": "clientSubmittedTime", "var_name": "clientSubmittedTime"}, {"original_string": "private String clientSubmittedNotes;", "modifier": "private", "type": "String", "declarator": "clientSubmittedNotes", "var_name": "clientSubmittedNotes"}, {"original_string": "private List<Comment> comments = new ArrayList<>();", "modifier": "private", "type": "List<Comment>", "declarator": "comments = new ArrayList<>()", "var_name": "comments"}, {"original_string": "private List<Signature> rnrSignatures;", "modifier": "private", "type": "List<Signature>", "declarator": "rnrSignatures", "var_name": "rnrSignatures"}], "methods": [{"identifier": "Rnr", "parameters": "(Facility facility, Program program, ProcessingPeriod period, Boolean emergency, Long modifiedBy, Long createdBy)", "modifiers": "public", "return": "", "signature": " Rnr(Facility facility, Program program, ProcessingPeriod period, Boolean emergency, Long modifiedBy, Long createdBy)", "full_signature": "public  Rnr(Facility facility, Program program, ProcessingPeriod period, Boolean emergency, Long modifiedBy, Long createdBy)", "class_method_signature": "Rnr.Rnr(Facility facility, Program program, ProcessingPeriod period, Boolean emergency, Long modifiedBy, Long createdBy)", "testcase": false, "constructor": true}, {"identifier": "Rnr", "parameters": "(Facility facility, Program program, ProcessingPeriod period, Boolean emergency, List<FacilityTypeApprovedProduct> facilityTypeApprovedProducts,\n             List<Regimen> regimens, Long modifiedBy)", "modifiers": "public", "return": "", "signature": " Rnr(Facility facility, Program program, ProcessingPeriod period, Boolean emergency, List<FacilityTypeApprovedProduct> facilityTypeApprovedProducts,\n             List<Regimen> regimens, Long modifiedBy)", "full_signature": "public  Rnr(Facility facility, Program program, ProcessingPeriod period, Boolean emergency, List<FacilityTypeApprovedProduct> facilityTypeApprovedProducts,\n             List<Regimen> regimens, Long modifiedBy)", "class_method_signature": "Rnr.Rnr(Facility facility, Program program, ProcessingPeriod period, Boolean emergency, List<FacilityTypeApprovedProduct> facilityTypeApprovedProducts,\n             List<Regimen> regimens, Long modifiedBy)", "testcase": false, "constructor": true}, {"identifier": "Rnr", "parameters": "(Facility facility, Program program, ProcessingPeriod period)", "modifiers": "public", "return": "", "signature": " Rnr(Facility facility, Program program, ProcessingPeriod period)", "full_signature": "public  Rnr(Facility facility, Program program, ProcessingPeriod period)", "class_method_signature": "Rnr.Rnr(Facility facility, Program program, ProcessingPeriod period)", "testcase": false, "constructor": true}, {"identifier": "Rnr", "parameters": "(Long id)", "modifiers": "public", "return": "", "signature": " Rnr(Long id)", "full_signature": "public  Rnr(Long id)", "class_method_signature": "Rnr.Rnr(Long id)", "testcase": false, "constructor": true}, {"identifier": "fillActiveRegimenLineItems", "parameters": "(List<Regimen> regimens)", "modifiers": "private", "return": "void", "signature": "void fillActiveRegimenLineItems(List<Regimen> regimens)", "full_signature": "private void fillActiveRegimenLineItems(List<Regimen> regimens)", "class_method_signature": "Rnr.fillActiveRegimenLineItems(List<Regimen> regimens)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(RnrLineItem rnrLineItem, Boolean fullSupply)", "modifiers": "public", "return": "void", "signature": "void add(RnrLineItem rnrLineItem, Boolean fullSupply)", "full_signature": "public void add(RnrLineItem rnrLineItem, Boolean fullSupply)", "class_method_signature": "Rnr.add(RnrLineItem rnrLineItem, Boolean fullSupply)", "testcase": false, "constructor": false}, {"identifier": "calculateForApproval", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void calculateForApproval()", "full_signature": "public void calculateForApproval()", "class_method_signature": "Rnr.calculateForApproval()", "testcase": false, "constructor": false}, {"identifier": "calculateCost", "parameters": "(List<RnrLineItem> lineItems)", "modifiers": "private", "return": "Money", "signature": "Money calculateCost(List<RnrLineItem> lineItems)", "full_signature": "private Money calculateCost(List<RnrLineItem> lineItems)", "class_method_signature": "Rnr.calculateCost(List<RnrLineItem> lineItems)", "testcase": false, "constructor": false}, {"identifier": "fillLineItems", "parameters": "(List<FacilityTypeApprovedProduct> facilityTypeApprovedProducts)", "modifiers": "public", "return": "void", "signature": "void fillLineItems(List<FacilityTypeApprovedProduct> facilityTypeApprovedProducts)", "full_signature": "public void fillLineItems(List<FacilityTypeApprovedProduct> facilityTypeApprovedProducts)", "class_method_signature": "Rnr.fillLineItems(List<FacilityTypeApprovedProduct> facilityTypeApprovedProducts)", "testcase": false, "constructor": false}, {"identifier": "setBeginningBalances", "parameters": "(Rnr previousRequisition, boolean beginningBalanceVisible)", "modifiers": "private", "return": "void", "signature": "void setBeginningBalances(Rnr previousRequisition, boolean beginningBalanceVisible)", "full_signature": "private void setBeginningBalances(Rnr previousRequisition, boolean beginningBalanceVisible)", "class_method_signature": "Rnr.setBeginningBalances(Rnr previousRequisition, boolean beginningBalanceVisible)", "testcase": false, "constructor": false}, {"identifier": "resetBeginningBalances", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void resetBeginningBalances()", "full_signature": "private void resetBeginningBalances()", "class_method_signature": "Rnr.resetBeginningBalances()", "testcase": false, "constructor": false}, {"identifier": "setFieldsForApproval", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void setFieldsForApproval()", "full_signature": "public void setFieldsForApproval()", "class_method_signature": "Rnr.setFieldsForApproval()", "testcase": false, "constructor": false}, {"identifier": "getAllLineItems", "parameters": "()", "modifiers": "public", "return": "List<RnrLineItem>", "signature": "List<RnrLineItem> getAllLineItems()", "full_signature": "public List<RnrLineItem> getAllLineItems()", "class_method_signature": "Rnr.getAllLineItems()", "testcase": false, "constructor": false}, {"identifier": "fillBasicInformation", "parameters": "(Facility facility, Program program, ProcessingPeriod period)", "modifiers": "public", "return": "void", "signature": "void fillBasicInformation(Facility facility, Program program, ProcessingPeriod period)", "full_signature": "public void fillBasicInformation(Facility facility, Program program, ProcessingPeriod period)", "class_method_signature": "Rnr.fillBasicInformation(Facility facility, Program program, ProcessingPeriod period)", "testcase": false, "constructor": false}, {"identifier": "findCorrespondingLineItem", "parameters": "(final RnrLineItem item)", "modifiers": "public", "return": "RnrLineItem", "signature": "RnrLineItem findCorrespondingLineItem(final RnrLineItem item)", "full_signature": "public RnrLineItem findCorrespondingLineItem(final RnrLineItem item)", "class_method_signature": "Rnr.findCorrespondingLineItem(final RnrLineItem item)", "testcase": false, "constructor": false}, {"identifier": "findCorrespondingRegimenLineItem", "parameters": "(final RegimenLineItem regimenLineItem)", "modifiers": "public", "return": "RegimenLineItem", "signature": "RegimenLineItem findCorrespondingRegimenLineItem(final RegimenLineItem regimenLineItem)", "full_signature": "public RegimenLineItem findCorrespondingRegimenLineItem(final RegimenLineItem regimenLineItem)", "class_method_signature": "Rnr.findCorrespondingRegimenLineItem(final RegimenLineItem regimenLineItem)", "testcase": false, "constructor": false}, {"identifier": "setFieldsAccordingToTemplateFrom", "parameters": "(Rnr previousRequisition, ProgramRnrTemplate template, RegimenTemplate regimenTemplate)", "modifiers": "public", "return": "void", "signature": "void setFieldsAccordingToTemplateFrom(Rnr previousRequisition, ProgramRnrTemplate template, RegimenTemplate regimenTemplate)", "full_signature": "public void setFieldsAccordingToTemplateFrom(Rnr previousRequisition, ProgramRnrTemplate template, RegimenTemplate regimenTemplate)", "class_method_signature": "Rnr.setFieldsAccordingToTemplateFrom(Rnr previousRequisition, ProgramRnrTemplate template, RegimenTemplate regimenTemplate)", "testcase": false, "constructor": false}, {"identifier": "convertToOrder", "parameters": "(Long userId)", "modifiers": "public", "return": "void", "signature": "void convertToOrder(Long userId)", "full_signature": "public void convertToOrder(Long userId)", "class_method_signature": "Rnr.convertToOrder(Long userId)", "testcase": false, "constructor": false}, {"identifier": "fillFullSupplyCost", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void fillFullSupplyCost()", "full_signature": "public void fillFullSupplyCost()", "class_method_signature": "Rnr.fillFullSupplyCost()", "testcase": false, "constructor": false}, {"identifier": "fillNonFullSupplyCost", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void fillNonFullSupplyCost()", "full_signature": "public void fillNonFullSupplyCost()", "class_method_signature": "Rnr.fillNonFullSupplyCost()", "testcase": false, "constructor": false}, {"identifier": "validateForApproval", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void validateForApproval()", "full_signature": "public void validateForApproval()", "class_method_signature": "Rnr.validateForApproval()", "testcase": false, "constructor": false}, {"identifier": "validateLineItemsForApproval", "parameters": "(List<RnrLineItem> lineItems)", "modifiers": "private", "return": "void", "signature": "void validateLineItemsForApproval(List<RnrLineItem> lineItems)", "full_signature": "private void validateLineItemsForApproval(List<RnrLineItem> lineItems)", "class_method_signature": "Rnr.validateLineItemsForApproval(List<RnrLineItem> lineItems)", "testcase": false, "constructor": false}, {"identifier": "copyCreatorEditableFields", "parameters": "(Rnr rnr, ProgramRnrTemplate rnrTemplate, RegimenTemplate regimenTemplate, List<ProgramProduct> programProducts)", "modifiers": "public", "return": "void", "signature": "void copyCreatorEditableFields(Rnr rnr, ProgramRnrTemplate rnrTemplate, RegimenTemplate regimenTemplate, List<ProgramProduct> programProducts)", "full_signature": "public void copyCreatorEditableFields(Rnr rnr, ProgramRnrTemplate rnrTemplate, RegimenTemplate regimenTemplate, List<ProgramProduct> programProducts)", "class_method_signature": "Rnr.copyCreatorEditableFields(Rnr rnr, ProgramRnrTemplate rnrTemplate, RegimenTemplate regimenTemplate, List<ProgramProduct> programProducts)", "testcase": false, "constructor": false}, {"identifier": "copyCreatorEditableFieldsForRegimen", "parameters": "(Rnr rnr, RegimenTemplate regimenTemplate)", "modifiers": "private", "return": "void", "signature": "void copyCreatorEditableFieldsForRegimen(Rnr rnr, RegimenTemplate regimenTemplate)", "full_signature": "private void copyCreatorEditableFieldsForRegimen(Rnr rnr, RegimenTemplate regimenTemplate)", "class_method_signature": "Rnr.copyCreatorEditableFieldsForRegimen(Rnr rnr, RegimenTemplate regimenTemplate)", "testcase": false, "constructor": false}, {"identifier": "copyCreatorEditableFieldsForNonFullSupply", "parameters": "(Rnr rnr, ProgramRnrTemplate template, List<ProgramProduct> programProducts)", "modifiers": "private", "return": "void", "signature": "void copyCreatorEditableFieldsForNonFullSupply(Rnr rnr, ProgramRnrTemplate template, List<ProgramProduct> programProducts)", "full_signature": "private void copyCreatorEditableFieldsForNonFullSupply(Rnr rnr, ProgramRnrTemplate template, List<ProgramProduct> programProducts)", "class_method_signature": "Rnr.copyCreatorEditableFieldsForNonFullSupply(Rnr rnr, ProgramRnrTemplate template, List<ProgramProduct> programProducts)", "testcase": false, "constructor": false}, {"identifier": "copyCreatorEditableFieldsForFullSupply", "parameters": "(Rnr rnr, ProgramRnrTemplate template)", "modifiers": "private", "return": "void", "signature": "void copyCreatorEditableFieldsForFullSupply(Rnr rnr, ProgramRnrTemplate template)", "full_signature": "private void copyCreatorEditableFieldsForFullSupply(Rnr rnr, ProgramRnrTemplate template)", "class_method_signature": "Rnr.copyCreatorEditableFieldsForFullSupply(Rnr rnr, ProgramRnrTemplate template)", "testcase": false, "constructor": false}, {"identifier": "copyApproverEditableFields", "parameters": "(Rnr rnr, ProgramRnrTemplate template)", "modifiers": "public", "return": "void", "signature": "void copyApproverEditableFields(Rnr rnr, ProgramRnrTemplate template)", "full_signature": "public void copyApproverEditableFields(Rnr rnr, ProgramRnrTemplate template)", "class_method_signature": "Rnr.copyApproverEditableFields(Rnr rnr, ProgramRnrTemplate template)", "testcase": false, "constructor": false}, {"identifier": "copyApproverEditableFieldsToLineItems", "parameters": "(Rnr rnr, ProgramRnrTemplate template, List<RnrLineItem> lineItems)", "modifiers": "private", "return": "void", "signature": "void copyApproverEditableFieldsToLineItems(Rnr rnr, ProgramRnrTemplate template, List<RnrLineItem> lineItems)", "full_signature": "private void copyApproverEditableFieldsToLineItems(Rnr rnr, ProgramRnrTemplate template, List<RnrLineItem> lineItems)", "class_method_signature": "Rnr.copyApproverEditableFieldsToLineItems(Rnr rnr, ProgramRnrTemplate template, List<RnrLineItem> lineItems)", "testcase": false, "constructor": false}, {"identifier": "setAuditFieldsForRequisition", "parameters": "(Long modifiedBy, RnrStatus status)", "modifiers": "public", "return": "void", "signature": "void setAuditFieldsForRequisition(Long modifiedBy, RnrStatus status)", "full_signature": "public void setAuditFieldsForRequisition(Long modifiedBy, RnrStatus status)", "class_method_signature": "Rnr.setAuditFieldsForRequisition(Long modifiedBy, RnrStatus status)", "testcase": false, "constructor": false}, {"identifier": "prepareForFinalApproval", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void prepareForFinalApproval()", "full_signature": "public void prepareForFinalApproval()", "class_method_signature": "Rnr.prepareForFinalApproval()", "testcase": false, "constructor": false}, {"identifier": "approveAndAssignToNextSupervisoryNode", "parameters": "(SupervisoryNode parent)", "modifiers": "public", "return": "void", "signature": "void approveAndAssignToNextSupervisoryNode(SupervisoryNode parent)", "full_signature": "public void approveAndAssignToNextSupervisoryNode(SupervisoryNode parent)", "class_method_signature": "Rnr.approveAndAssignToNextSupervisoryNode(SupervisoryNode parent)", "testcase": false, "constructor": false}, {"identifier": "isApprovable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isApprovable()", "full_signature": "public boolean isApprovable()", "class_method_signature": "Rnr.isApprovable()", "testcase": false, "constructor": false}, {"identifier": "preAuthorize", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean preAuthorize()", "full_signature": "public boolean preAuthorize()", "class_method_signature": "Rnr.preAuthorize()", "testcase": false, "constructor": false}, {"identifier": "addToNonFullSupplyCost", "parameters": "(Money cost)", "modifiers": "public", "return": "void", "signature": "void addToNonFullSupplyCost(Money cost)", "full_signature": "public void addToNonFullSupplyCost(Money cost)", "class_method_signature": "Rnr.addToNonFullSupplyCost(Money cost)", "testcase": false, "constructor": false}, {"identifier": "addToFullSupplyCost", "parameters": "(Money cost)", "modifiers": "public", "return": "void", "signature": "void addToFullSupplyCost(Money cost)", "full_signature": "public void addToFullSupplyCost(Money cost)", "class_method_signature": "Rnr.addToFullSupplyCost(Money cost)", "testcase": false, "constructor": false}, {"identifier": "isForVirtualFacility", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isForVirtualFacility()", "full_signature": "public boolean isForVirtualFacility()", "class_method_signature": "Rnr.isForVirtualFacility()", "testcase": false, "constructor": false}, {"identifier": "getNonSkippedLineItems", "parameters": "()", "modifiers": "public", "return": "List<RnrLineItem>", "signature": "List<RnrLineItem> getNonSkippedLineItems()", "full_signature": "public List<RnrLineItem> getNonSkippedLineItems()", "class_method_signature": "Rnr.getNonSkippedLineItems()", "testcase": false, "constructor": false}, {"identifier": "validateRegimenLineItems", "parameters": "(RegimenTemplate regimenTemplate)", "modifiers": "public", "return": "void", "signature": "void validateRegimenLineItems(RegimenTemplate regimenTemplate)", "full_signature": "public void validateRegimenLineItems(RegimenTemplate regimenTemplate)", "class_method_signature": "Rnr.validateRegimenLineItems(RegimenTemplate regimenTemplate)", "testcase": false, "constructor": false}, {"identifier": "isBudgetingApplicable", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "boolean", "signature": "boolean isBudgetingApplicable()", "full_signature": "@JsonIgnore public boolean isBudgetingApplicable()", "class_method_signature": "Rnr.isBudgetingApplicable()", "testcase": false, "constructor": false}], "file": "modules/requisition/src/main/java/org/openlmis/rnr/domain/Rnr.java"}, "focal_method": {"identifier": "setFieldsAccordingToTemplateFrom", "parameters": "(Rnr previousRequisition, ProgramRnrTemplate template, RegimenTemplate regimenTemplate)", "modifiers": "public", "return": "void", "body": "public void setFieldsAccordingToTemplateFrom(Rnr previousRequisition, ProgramRnrTemplate template, RegimenTemplate regimenTemplate) {\n    this.setBeginningBalances(previousRequisition, template.columnsVisible(BEGINNING_BALANCE));\n\n    for (RnrLineItem lineItem : this.fullSupplyLineItems) {\n      lineItem.setLineItemFieldsAccordingToTemplate(template);\n    }\n    if (regimenTemplate.getColumns().isEmpty()) return;\n    for (RegimenLineItem regimenLineItem : this.regimenLineItems) {\n      regimenLineItem.setRegimenFieldsAccordingToTemplate(regimenTemplate);\n    }\n  }", "signature": "void setFieldsAccordingToTemplateFrom(Rnr previousRequisition, ProgramRnrTemplate template, RegimenTemplate regimenTemplate)", "full_signature": "public void setFieldsAccordingToTemplateFrom(Rnr previousRequisition, ProgramRnrTemplate template, RegimenTemplate regimenTemplate)", "class_method_signature": "Rnr.setFieldsAccordingToTemplateFrom(Rnr previousRequisition, ProgramRnrTemplate template, RegimenTemplate regimenTemplate)", "testcase": false, "constructor": false, "invocations": ["setBeginningBalances", "columnsVisible", "setLineItemFieldsAccordingToTemplate", "isEmpty", "getColumns", "setRegimenFieldsAccordingToTemplate"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}