{"test_class": {"identifier": "RestRequisitionCalculatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  private RequisitionService requisitionService;", "modifier": "@Mock\n  private", "type": "RequisitionService", "declarator": "requisitionService", "var_name": "requisitionService"}, {"original_string": "@Mock\n  private ProcessingScheduleService processingScheduleService;", "modifier": "@Mock\n  private", "type": "ProcessingScheduleService", "declarator": "processingScheduleService", "var_name": "processingScheduleService"}, {"original_string": "@Mock\n  private PODService podService;", "modifier": "@Mock\n  private", "type": "PODService", "declarator": "podService", "var_name": "podService"}, {"original_string": "@Rule\n  public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "@InjectMocks\n  private RestRequisitionCalculator restRequisitionCalculator;", "modifier": "@InjectMocks\n  private", "type": "RestRequisitionCalculator", "declarator": "restRequisitionCalculator", "var_name": "restRequisitionCalculator"}, {"original_string": "private List<ProcessingPeriod> emptyPeriodList;", "modifier": "private", "type": "List<ProcessingPeriod>", "declarator": "emptyPeriodList", "var_name": "emptyPeriodList"}, {"original_string": "private List<RnrLineItem> emptyLineItemList;", "modifier": "private", "type": "List<RnrLineItem>", "declarator": "emptyLineItemList", "var_name": "emptyLineItemList"}, {"original_string": "private List<OrderPODLineItem> emptyOrderPodLineItemList;", "modifier": "private", "type": "List<OrderPODLineItem>", "declarator": "emptyOrderPodLineItemList", "var_name": "emptyOrderPodLineItemList"}], "file": "modules/rest-api/src/test/java/org/openlmis/restapi/service/RestRequisitionCalculatorTest.java"}, "test_case": {"identifier": "shouldSkipPeriodValidationForVirtualFacility", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldSkipPeriodValidationForVirtualFacility() throws Exception {\n    Facility facility = new Facility();\n\n    facility.setVirtualFacility(true);\n\n    restRequisitionCalculator.validatePeriod(facility, new Program());\n  }", "signature": "void shouldSkipPeriodValidationForVirtualFacility()", "full_signature": "@Test public void shouldSkipPeriodValidationForVirtualFacility()", "class_method_signature": "RestRequisitionCalculatorTest.shouldSkipPeriodValidationForVirtualFacility()", "testcase": true, "constructor": false, "invocations": ["setVirtualFacility", "validatePeriod"]}, "focal_class": {"identifier": "RestRequisitionCalculator", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  private RequisitionService requisitionService;", "modifier": "@Autowired\n  private", "type": "RequisitionService", "declarator": "requisitionService", "var_name": "requisitionService"}, {"original_string": "@Autowired\n  private PODService podService;", "modifier": "@Autowired\n  private", "type": "PODService", "declarator": "podService", "var_name": "podService"}, {"original_string": "@Autowired\n  private ProcessingScheduleService processingScheduleService;", "modifier": "@Autowired\n  private", "type": "ProcessingScheduleService", "declarator": "processingScheduleService", "var_name": "processingScheduleService"}], "methods": [{"identifier": "validatePeriod", "parameters": "(Facility reportingFacility, Program reportingProgram)", "modifiers": "public", "return": "void", "signature": "void validatePeriod(Facility reportingFacility, Program reportingProgram)", "full_signature": "public void validatePeriod(Facility reportingFacility, Program reportingProgram)", "class_method_signature": "RestRequisitionCalculator.validatePeriod(Facility reportingFacility, Program reportingProgram)", "testcase": false, "constructor": false}, {"identifier": "validateCustomPeriod", "parameters": "(Facility reportingFacility, Program reportingProgram, ProcessingPeriod period, Long userId)", "modifiers": "public", "return": "void", "signature": "void validateCustomPeriod(Facility reportingFacility, Program reportingProgram, ProcessingPeriod period, Long userId)", "full_signature": "public void validateCustomPeriod(Facility reportingFacility, Program reportingProgram, ProcessingPeriod period, Long userId)", "class_method_signature": "RestRequisitionCalculator.validateCustomPeriod(Facility reportingFacility, Program reportingProgram, ProcessingPeriod period, Long userId)", "testcase": false, "constructor": false}, {"identifier": "validateProducts", "parameters": "(List<RnrLineItem> products, Rnr savedRequisition)", "modifiers": "public", "return": "void", "signature": "void validateProducts(List<RnrLineItem> products, Rnr savedRequisition)", "full_signature": "public void validateProducts(List<RnrLineItem> products, Rnr savedRequisition)", "class_method_signature": "RestRequisitionCalculator.validateProducts(List<RnrLineItem> products, Rnr savedRequisition)", "testcase": false, "constructor": false}, {"identifier": "setDefaultValues", "parameters": "(Rnr requisition)", "modifiers": "public", "return": "Rnr", "signature": "Rnr setDefaultValues(Rnr requisition)", "full_signature": "public Rnr setDefaultValues(Rnr requisition)", "class_method_signature": "RestRequisitionCalculator.setDefaultValues(Rnr requisition)", "testcase": false, "constructor": false}, {"identifier": "setQuantityReceived", "parameters": "(RnrLineItem rnrLineItem, Rnr requisition, Date trackingDate)", "modifiers": "private", "return": "void", "signature": "void setQuantityReceived(RnrLineItem rnrLineItem, Rnr requisition, Date trackingDate)", "full_signature": "private void setQuantityReceived(RnrLineItem rnrLineItem, Rnr requisition, Date trackingDate)", "class_method_signature": "RestRequisitionCalculator.setQuantityReceived(RnrLineItem rnrLineItem, Rnr requisition, Date trackingDate)", "testcase": false, "constructor": false}, {"identifier": "setBeginningBalance", "parameters": "(RnrLineItem rnrLineItem, Rnr requisition, Date trackingDate)", "modifiers": "private", "return": "void", "signature": "void setBeginningBalance(RnrLineItem rnrLineItem, Rnr requisition, Date trackingDate)", "full_signature": "private void setBeginningBalance(RnrLineItem rnrLineItem, Rnr requisition, Date trackingDate)", "class_method_signature": "RestRequisitionCalculator.setBeginningBalance(RnrLineItem rnrLineItem, Rnr requisition, Date trackingDate)", "testcase": false, "constructor": false}], "file": "modules/rest-api/src/main/java/org/openlmis/restapi/service/RestRequisitionCalculator.java"}, "focal_method": {"identifier": "validatePeriod", "parameters": "(Facility reportingFacility, Program reportingProgram)", "modifiers": "public", "return": "void", "body": "public void validatePeriod(Facility reportingFacility, Program reportingProgram) {\n\n    if (!reportingFacility.getVirtualFacility()) {\n\n      RequisitionSearchCriteria searchCriteria = new RequisitionSearchCriteria();\n      searchCriteria.setProgramId(reportingProgram.getId());\n      searchCriteria.setFacilityId(reportingFacility.getId());\n\n      if (requisitionService.getCurrentPeriod(searchCriteria) != null && !requisitionService.getCurrentPeriod(searchCriteria).getId().equals\n          (requisitionService.getPeriodForInitiating(reportingFacility, reportingProgram).getId())) {\n        throw new DataException(\"error.rnr.previous.not.filled\");\n      }\n    }\n  }", "signature": "void validatePeriod(Facility reportingFacility, Program reportingProgram)", "full_signature": "public void validatePeriod(Facility reportingFacility, Program reportingProgram)", "class_method_signature": "RestRequisitionCalculator.validatePeriod(Facility reportingFacility, Program reportingProgram)", "testcase": false, "constructor": false, "invocations": ["getVirtualFacility", "setProgramId", "getId", "setFacilityId", "getId", "getCurrentPeriod", "equals", "getId", "getCurrentPeriod", "getId", "getPeriodForInitiating"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}