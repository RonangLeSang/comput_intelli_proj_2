{"test_class": {"identifier": "ProgramEquipmentTypeProductServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  EquipmentTypeProductRepository repository;", "modifier": "@Mock", "type": "EquipmentTypeProductRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "@InjectMocks\n  ProgramEquipmentTypeProductService service;", "modifier": "@InjectMocks", "type": "ProgramEquipmentTypeProductService", "declarator": "service", "var_name": "service"}], "file": "modules/equipment/src/test/java/org/openlmis/equipment/service/ProgramEquipmentTypeProductServiceTest.java"}, "test_case": {"identifier": "shouldUpdaetRecords", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldUpdaetRecords() throws Exception {\n    EquipmentTypeProduct pp = new EquipmentTypeProduct();\n    pp.setId(3L);\n    service.Save(pp);\n\n    verify(repository, never()).insert(pp);\n    verify(repository).update(pp);\n  }", "signature": "void shouldUpdaetRecords()", "full_signature": "@Test public void shouldUpdaetRecords()", "class_method_signature": "ProgramEquipmentTypeProductServiceTest.shouldUpdaetRecords()", "testcase": true, "constructor": false, "invocations": ["setId", "Save", "insert", "verify", "never", "update", "verify"]}, "focal_class": {"identifier": "ProgramEquipmentTypeProductService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  EquipmentTypeProductRepository repository;", "modifier": "@Autowired", "type": "EquipmentTypeProductRepository", "declarator": "repository", "var_name": "repository"}], "methods": [{"identifier": "getByProgramEquipmentId", "parameters": "(Long programEquipmentId)", "modifiers": "public", "return": "List<EquipmentTypeProduct>", "signature": "List<EquipmentTypeProduct> getByProgramEquipmentId(Long programEquipmentId)", "full_signature": "public List<EquipmentTypeProduct> getByProgramEquipmentId(Long programEquipmentId)", "class_method_signature": "ProgramEquipmentTypeProductService.getByProgramEquipmentId(Long programEquipmentId)", "testcase": false, "constructor": false}, {"identifier": "Save", "parameters": "(EquipmentTypeProduct equipmentTypeProduct)", "modifiers": "public", "return": "void", "signature": "void Save(EquipmentTypeProduct equipmentTypeProduct)", "full_signature": "public void Save(EquipmentTypeProduct equipmentTypeProduct)", "class_method_signature": "ProgramEquipmentTypeProductService.Save(EquipmentTypeProduct equipmentTypeProduct)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Long programEquipmentId)", "modifiers": "public", "return": "void", "signature": "void remove(Long programEquipmentId)", "full_signature": "public void remove(Long programEquipmentId)", "class_method_signature": "ProgramEquipmentTypeProductService.remove(Long programEquipmentId)", "testcase": false, "constructor": false}, {"identifier": "removeAllByEquipmentProducts", "parameters": "(Long programEquipmentId)", "modifiers": "public", "return": "void", "signature": "void removeAllByEquipmentProducts(Long programEquipmentId)", "full_signature": "public void removeAllByEquipmentProducts(Long programEquipmentId)", "class_method_signature": "ProgramEquipmentTypeProductService.removeAllByEquipmentProducts(Long programEquipmentId)", "testcase": false, "constructor": false}, {"identifier": "getAvailableProductsToLink", "parameters": "(Long programId, Long equipmentId)", "modifiers": "public", "return": "List<Product>", "signature": "List<Product> getAvailableProductsToLink(Long programId, Long equipmentId)", "full_signature": "public List<Product> getAvailableProductsToLink(Long programId, Long equipmentId)", "class_method_signature": "ProgramEquipmentTypeProductService.getAvailableProductsToLink(Long programId, Long equipmentId)", "testcase": false, "constructor": false}], "file": "modules/equipment/src/main/java/org/openlmis/equipment/service/ProgramEquipmentTypeProductService.java"}, "focal_method": {"identifier": "Save", "parameters": "(EquipmentTypeProduct equipmentTypeProduct)", "modifiers": "public", "return": "void", "body": "public void Save(EquipmentTypeProduct equipmentTypeProduct){\n    if(equipmentTypeProduct.getId() == null){\n      repository.insert(equipmentTypeProduct);\n    }\n    else {\n      repository.update(equipmentTypeProduct);\n    }\n  }", "signature": "void Save(EquipmentTypeProduct equipmentTypeProduct)", "full_signature": "public void Save(EquipmentTypeProduct equipmentTypeProduct)", "class_method_signature": "ProgramEquipmentTypeProductService.Save(EquipmentTypeProduct equipmentTypeProduct)", "testcase": false, "constructor": false, "invocations": ["getId", "insert", "update"]}, "repository": {"repo_id": 6172406, "url": "https://github.com/OpenLMIS/open-lmis", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 89, "size": 125128, "license": "licensed"}}