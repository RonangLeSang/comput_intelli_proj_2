{"test_class": {"identifier": "FolderLayoutTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/xcode-maven-plugin/src/test/java/com/sap/prd/mobile/ios/mios/FolderLayoutTest.java"}, "test_case": {"identifier": "testDefaultSourceFolder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testDefaultSourceFolder()\n  {\n    final File f = new File(\".\").getAbsoluteFile();\n    final MavenProject project = EasyMock.createMock(MavenProject.class);\n\n    Properties props = new Properties();\n    EasyMock.expect(project.getProperties()).andReturn(props);\n    EasyMock.expect(project.getBasedir()).andReturn(f);\n    EasyMock.replay(project);\n\n    assertEquals(new File(f, \"src/xcode\"), FolderLayout.getSourceFolder(project));\n  }", "signature": "void testDefaultSourceFolder()", "full_signature": "@Test public void testDefaultSourceFolder()", "class_method_signature": "FolderLayoutTest.testDefaultSourceFolder()", "testcase": true, "constructor": false, "invocations": ["getAbsoluteFile", "createMock", "andReturn", "expect", "getProperties", "andReturn", "expect", "getBasedir", "replay", "assertEquals", "getSourceFolder"]}, "focal_class": {"identifier": "FolderLayout", "superclass": "", "interfaces": "", "fields": [{"original_string": "final static String LIBS_DIR_NAME = \"libs\";", "modifier": "final static", "type": "String", "declarator": "LIBS_DIR_NAME = \"libs\"", "var_name": "LIBS_DIR_NAME"}, {"original_string": "final static String HEADERS_DIR_NAME = \"headers\";", "modifier": "final static", "type": "String", "declarator": "HEADERS_DIR_NAME = \"headers\"", "var_name": "HEADERS_DIR_NAME"}, {"original_string": "final static String XCODE_DEPS_TARGET_FOLDER = \"xcode-deps\";", "modifier": "final static", "type": "String", "declarator": "XCODE_DEPS_TARGET_FOLDER = \"xcode-deps\"", "var_name": "XCODE_DEPS_TARGET_FOLDER"}], "methods": [{"identifier": "getFolderForExtractedHeaders", "parameters": "(MavenProject project, final String configuration, final String sdk)", "modifiers": "static", "return": "File", "signature": "File getFolderForExtractedHeaders(MavenProject project, final String configuration, final String sdk)", "full_signature": "static File getFolderForExtractedHeaders(MavenProject project, final String configuration, final String sdk)", "class_method_signature": "FolderLayout.getFolderForExtractedHeaders(MavenProject project, final String configuration, final String sdk)", "testcase": false, "constructor": false}, {"identifier": "getFolderForExtractedLibs", "parameters": "(MavenProject project, final String configuration, final String sdk)", "modifiers": "static", "return": "File", "signature": "File getFolderForExtractedLibs(MavenProject project, final String configuration, final String sdk)", "full_signature": "static File getFolderForExtractedLibs(MavenProject project, final String configuration, final String sdk)", "class_method_signature": "FolderLayout.getFolderForExtractedLibs(MavenProject project, final String configuration, final String sdk)", "testcase": false, "constructor": false}, {"identifier": "getFolderForExtractedBundles", "parameters": "(MavenProject project)", "modifiers": "static", "return": "File", "signature": "File getFolderForExtractedBundles(MavenProject project)", "full_signature": "static File getFolderForExtractedBundles(MavenProject project)", "class_method_signature": "FolderLayout.getFolderForExtractedBundles(MavenProject project)", "testcase": false, "constructor": false}, {"identifier": "getFolderForExtractedFrameworks", "parameters": "(MavenProject project)", "modifiers": "static", "return": "File", "signature": "File getFolderForExtractedFrameworks(MavenProject project)", "full_signature": "static File getFolderForExtractedFrameworks(MavenProject project)", "class_method_signature": "FolderLayout.getFolderForExtractedFrameworks(MavenProject project)", "testcase": false, "constructor": false}, {"identifier": "getFolderForAdditionalPackagingType", "parameters": "(MavenProject project, String type)", "modifiers": "static", "return": "File", "signature": "File getFolderForAdditionalPackagingType(MavenProject project, String type)", "full_signature": "static File getFolderForAdditionalPackagingType(MavenProject project, String type)", "class_method_signature": "FolderLayout.getFolderForAdditionalPackagingType(MavenProject project, String type)", "testcase": false, "constructor": false}, {"identifier": "getFolderForExtractedFatLibs", "parameters": "(MavenProject project, final String configuration)", "modifiers": "static", "return": "File", "signature": "File getFolderForExtractedFatLibs(MavenProject project, final String configuration)", "full_signature": "static File getFolderForExtractedFatLibs(MavenProject project, final String configuration)", "class_method_signature": "FolderLayout.getFolderForExtractedFatLibs(MavenProject project, final String configuration)", "testcase": false, "constructor": false}, {"identifier": "getFolderForExtractedHeadersWithGA", "parameters": "(MavenProject project, final String configuration, final String sdk,\n        final String groupId, final String artifactId)", "modifiers": "static", "return": "File", "signature": "File getFolderForExtractedHeadersWithGA(MavenProject project, final String configuration, final String sdk,\n        final String groupId, final String artifactId)", "full_signature": "static File getFolderForExtractedHeadersWithGA(MavenProject project, final String configuration, final String sdk,\n        final String groupId, final String artifactId)", "class_method_signature": "FolderLayout.getFolderForExtractedHeadersWithGA(MavenProject project, final String configuration, final String sdk,\n        final String groupId, final String artifactId)", "testcase": false, "constructor": false}, {"identifier": "getFolderForExtractedFatLibsWithGA", "parameters": "(MavenProject project, final String configuration,\n        final String groupId, final String artifactId)", "modifiers": "static", "return": "File", "signature": "File getFolderForExtractedFatLibsWithGA(MavenProject project, final String configuration,\n        final String groupId, final String artifactId)", "full_signature": "static File getFolderForExtractedFatLibsWithGA(MavenProject project, final String configuration,\n        final String groupId, final String artifactId)", "class_method_signature": "FolderLayout.getFolderForExtractedFatLibsWithGA(MavenProject project, final String configuration,\n        final String groupId, final String artifactId)", "testcase": false, "constructor": false}, {"identifier": "getFolderForExtractedLibsWithGA", "parameters": "(MavenProject project, final String configuration, final String sdk,\n        final String groupId, final String artifactId)", "modifiers": "static", "return": "File", "signature": "File getFolderForExtractedLibsWithGA(MavenProject project, final String configuration, final String sdk,\n        final String groupId, final String artifactId)", "full_signature": "static File getFolderForExtractedLibsWithGA(MavenProject project, final String configuration, final String sdk,\n        final String groupId, final String artifactId)", "class_method_signature": "FolderLayout.getFolderForExtractedLibsWithGA(MavenProject project, final String configuration, final String sdk,\n        final String groupId, final String artifactId)", "testcase": false, "constructor": false}, {"identifier": "getFolderForExtractedBundlesWithGA", "parameters": "(MavenProject project, final String groupId, final String artifactId)", "modifiers": "static", "return": "File", "signature": "File getFolderForExtractedBundlesWithGA(MavenProject project, final String groupId, final String artifactId)", "full_signature": "static File getFolderForExtractedBundlesWithGA(MavenProject project, final String groupId, final String artifactId)", "class_method_signature": "FolderLayout.getFolderForExtractedBundlesWithGA(MavenProject project, final String groupId, final String artifactId)", "testcase": false, "constructor": false}, {"identifier": "getFolderForExtractedFrameworkswithGA", "parameters": "(MavenProject project, final String groupId, final String artifactId)", "modifiers": "static", "return": "File", "signature": "File getFolderForExtractedFrameworkswithGA(MavenProject project, final String groupId, final String artifactId)", "full_signature": "static File getFolderForExtractedFrameworkswithGA(MavenProject project, final String groupId, final String artifactId)", "class_method_signature": "FolderLayout.getFolderForExtractedFrameworkswithGA(MavenProject project, final String groupId, final String artifactId)", "testcase": false, "constructor": false}, {"identifier": "getFolderForExtractedFrameworkswithGA", "parameters": "(MavenProject project, final String groupId,\n        final String artifactId, final String configuration)", "modifiers": "static", "return": "File", "signature": "File getFolderForExtractedFrameworkswithGA(MavenProject project, final String groupId,\n        final String artifactId, final String configuration)", "full_signature": "static File getFolderForExtractedFrameworkswithGA(MavenProject project, final String groupId,\n        final String artifactId, final String configuration)", "class_method_signature": "FolderLayout.getFolderForExtractedFrameworkswithGA(MavenProject project, final String groupId,\n        final String artifactId, final String configuration)", "testcase": false, "constructor": false}, {"identifier": "getFolderForAdditionalPackagingTypeWithGA", "parameters": "(MavenProject project, final String groupId,\n        final String artifactId, String type)", "modifiers": "static", "return": "File", "signature": "File getFolderForAdditionalPackagingTypeWithGA(MavenProject project, final String groupId,\n        final String artifactId, String type)", "full_signature": "static File getFolderForAdditionalPackagingTypeWithGA(MavenProject project, final String groupId,\n        final String artifactId, String type)", "class_method_signature": "FolderLayout.getFolderForAdditionalPackagingTypeWithGA(MavenProject project, final String groupId,\n        final String artifactId, String type)", "testcase": false, "constructor": false}, {"identifier": "getFolderForExtractedMainArtifact", "parameters": "(MavenProject project)", "modifiers": "static", "return": "File", "signature": "File getFolderForExtractedMainArtifact(MavenProject project)", "full_signature": "static File getFolderForExtractedMainArtifact(MavenProject project)", "class_method_signature": "FolderLayout.getFolderForExtractedMainArtifact(MavenProject project)", "testcase": false, "constructor": false}, {"identifier": "getFolderForExtractedPrimaryArtifact", "parameters": "(MavenProject project, Artifact primaryArtifact)", "modifiers": "static", "return": "File", "signature": "File getFolderForExtractedPrimaryArtifact(MavenProject project, Artifact primaryArtifact)", "full_signature": "static File getFolderForExtractedPrimaryArtifact(MavenProject project, Artifact primaryArtifact)", "class_method_signature": "FolderLayout.getFolderForExtractedPrimaryArtifact(MavenProject project, Artifact primaryArtifact)", "testcase": false, "constructor": false}, {"identifier": "getSourceFolder", "parameters": "(MavenProject project)", "modifiers": "static", "return": "File", "signature": "File getSourceFolder(MavenProject project)", "full_signature": "static File getSourceFolder(MavenProject project)", "class_method_signature": "FolderLayout.getSourceFolder(MavenProject project)", "testcase": false, "constructor": false}], "file": "modules/xcode-maven-plugin/src/main/java/com/sap/prd/mobile/ios/mios/FolderLayout.java"}, "focal_method": {"identifier": "getSourceFolder", "parameters": "(MavenProject project)", "modifiers": "static", "return": "File", "body": "static File getSourceFolder(MavenProject project)\n  {\n    final Properties projectProperties = project.getProperties();\n\n    if (projectProperties.containsKey(XCodeDefaultConfigurationMojo.XCODE_SOURCE_DIRECTORY)) {\n      return new File(project.getBasedir(),\n            projectProperties.getProperty(XCodeDefaultConfigurationMojo.XCODE_SOURCE_DIRECTORY));\n    }\n    return new File(project.getBasedir(), XCodeDefaultConfigurationMojo.DEFAULT_XCODE_SOURCE_DIRECTORY);\n\n  }", "signature": "File getSourceFolder(MavenProject project)", "full_signature": "static File getSourceFolder(MavenProject project)", "class_method_signature": "FolderLayout.getSourceFolder(MavenProject project)", "testcase": false, "constructor": false, "invocations": ["getProperties", "containsKey", "getBasedir", "getProperty", "getBasedir"]}, "repository": {"repo_id": 3513261, "url": "https://github.com/sap-production/xcode-maven-plugin", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 66, "size": 12424, "license": "licensed"}}