{"test_class": {"identifier": "GLFSTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String DIR_PATH = \"/baz/\";", "modifier": "public static final", "type": "String", "declarator": "DIR_PATH = \"/baz/\"", "var_name": "DIR_PATH"}, {"original_string": "public static final String FILE_PATH = DIR_PATH + \"bar\";", "modifier": "public static final", "type": "String", "declarator": "FILE_PATH = DIR_PATH + \"bar\"", "var_name": "FILE_PATH"}, {"original_string": "public static final String FILE_PATH_RENAMED = DIR_PATH + \"bar2\";", "modifier": "public static final", "type": "String", "declarator": "FILE_PATH_RENAMED = DIR_PATH + \"bar2\"", "var_name": "FILE_PATH_RENAMED"}, {"original_string": "public static final String HELLO_ = \"hello \";", "modifier": "public static final", "type": "String", "declarator": "HELLO_ = \"hello \"", "var_name": "HELLO_"}, {"original_string": "public static final String WORLD = \"world\";", "modifier": "public static final", "type": "String", "declarator": "WORLD = \"world\"", "var_name": "WORLD"}, {"original_string": "public static final String SYMLINK = \"/symlink\";", "modifier": "public static final", "type": "String", "declarator": "SYMLINK = \"/symlink\"", "var_name": "SYMLINK"}, {"original_string": "public static final String SYMLINK_TARGET = \"/symlink_target\";", "modifier": "public static final", "type": "String", "declarator": "SYMLINK_TARGET = \"/symlink_target\"", "var_name": "SYMLINK_TARGET"}, {"original_string": "public static stat stat = new stat();", "modifier": "public static", "type": "stat", "declarator": "stat = new stat()", "var_name": "stat"}, {"original_string": "private long vol;", "modifier": "private", "type": "long", "declarator": "vol", "var_name": "vol"}, {"original_string": "private long file;", "modifier": "private", "type": "long", "declarator": "file", "var_name": "file"}, {"original_string": "private long dir;", "modifier": "private", "type": "long", "declarator": "dir", "var_name": "dir"}, {"original_string": "private long dirpos;", "modifier": "private", "type": "long", "declarator": "dirpos", "var_name": "dirpos"}, {"original_string": "private Properties properties = null;", "modifier": "private", "type": "Properties", "declarator": "properties = null", "var_name": "properties"}], "file": "libgfapi-jni/src/test/java/com/peircean/libgfapi_jni/internal/GLFSTest.java"}, "test_case": {"identifier": "testClose_new", "parameters": "()", "modifiers": "@Test(dependsOnMethods = \"testWriteNew\") public", "return": "void", "body": "@Test(dependsOnMethods = \"testWriteNew\")\n    public void testClose_new() {\n        int close = glfs_close(file);\n        System.out.println(\"CLOSE: \" + close);\n        assertEquals(0, close);\n    }", "signature": "void testClose_new()", "full_signature": "@Test(dependsOnMethods = \"testWriteNew\") public void testClose_new()", "class_method_signature": "GLFSTest.testClose_new()", "testcase": true, "constructor": false, "invocations": ["glfs_close", "println", "assertEquals"]}, "focal_class": {"identifier": "GLFS", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final Library LIBRARY = new Library(\"libgfapi-jni\", GLFS.class);", "modifier": "public static final", "type": "Library", "declarator": "LIBRARY = new Library(\"libgfapi-jni\", GLFS.class)", "var_name": "LIBRARY"}], "methods": [{"identifier": "glfs_new", "parameters": "(\n            @JniArg(cast = \"const char*\") String volname\n    )", "modifiers": "@JniMethod(cast = \"glfs_t *\") public static final native", "return": "long", "signature": "long glfs_new(\n            @JniArg(cast = \"const char*\") String volname\n    )", "full_signature": "@JniMethod(cast = \"glfs_t *\") public static final native long glfs_new(\n            @JniArg(cast = \"const char*\") String volname\n    )", "class_method_signature": "GLFS.glfs_new(\n            @JniArg(cast = \"const char*\") String volname\n    )", "testcase": false, "constructor": false}, {"identifier": "glfs_set_volfile_server", "parameters": "(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char*\") String transport,\n            @JniArg(cast = \"const char*\") String host,\n            int port\n    )", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_set_volfile_server(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char*\") String transport,\n            @JniArg(cast = \"const char*\") String host,\n            int port\n    )", "full_signature": "@JniMethod public static final native int glfs_set_volfile_server(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char*\") String transport,\n            @JniArg(cast = \"const char*\") String host,\n            int port\n    )", "class_method_signature": "GLFS.glfs_set_volfile_server(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char*\") String transport,\n            @JniArg(cast = \"const char*\") String host,\n            int port\n    )", "testcase": false, "constructor": false}, {"identifier": "glfs_set_logging", "parameters": "(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char*\") String logfile,\n            int loglevel)", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_set_logging(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char*\") String logfile,\n            int loglevel)", "full_signature": "@JniMethod public static final native int glfs_set_logging(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char*\") String logfile,\n            int loglevel)", "class_method_signature": "GLFS.glfs_set_logging(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char*\") String logfile,\n            int loglevel)", "testcase": false, "constructor": false}, {"identifier": "glfs_init", "parameters": "(\n            @JniArg(cast = \"glfs_t *\") long fs\n    )", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_init(\n            @JniArg(cast = \"glfs_t *\") long fs\n    )", "full_signature": "@JniMethod public static final native int glfs_init(\n            @JniArg(cast = \"glfs_t *\") long fs\n    )", "class_method_signature": "GLFS.glfs_init(\n            @JniArg(cast = \"glfs_t *\") long fs\n    )", "testcase": false, "constructor": false}, {"identifier": "glfs_fini", "parameters": "(\n            @JniArg(cast = \"glfs_t *\") long fs\n    )", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_fini(\n            @JniArg(cast = \"glfs_t *\") long fs\n    )", "full_signature": "@JniMethod public static final native int glfs_fini(\n            @JniArg(cast = \"glfs_t *\") long fs\n    )", "class_method_signature": "GLFS.glfs_fini(\n            @JniArg(cast = \"glfs_t *\") long fs\n    )", "testcase": false, "constructor": false}, {"identifier": "glfs_open", "parameters": "(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char*\") String path,\n            int flags)", "modifiers": "@JniMethod(cast = \"glfs_fd_t *\") public static final native", "return": "long", "signature": "long glfs_open(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char*\") String path,\n            int flags)", "full_signature": "@JniMethod(cast = \"glfs_fd_t *\") public static final native long glfs_open(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char*\") String path,\n            int flags)", "class_method_signature": "GLFS.glfs_open(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char*\") String path,\n            int flags)", "testcase": false, "constructor": false}, {"identifier": "glfs_creat", "parameters": "(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char*\") String path,\n            int flags,\n            int mode)", "modifiers": "@JniMethod(cast = \"glfs_fd_t *\") public static final native", "return": "long", "signature": "long glfs_creat(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char*\") String path,\n            int flags,\n            int mode)", "full_signature": "@JniMethod(cast = \"glfs_fd_t *\") public static final native long glfs_creat(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char*\") String path,\n            int flags,\n            int mode)", "class_method_signature": "GLFS.glfs_creat(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char*\") String path,\n            int flags,\n            int mode)", "testcase": false, "constructor": false}, {"identifier": "glfs_close", "parameters": "(\n            @JniArg(cast = \"glfs_fd_t *\") long fd)", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_close(\n            @JniArg(cast = \"glfs_fd_t *\") long fd)", "full_signature": "@JniMethod public static final native int glfs_close(\n            @JniArg(cast = \"glfs_fd_t *\") long fd)", "class_method_signature": "GLFS.glfs_close(\n            @JniArg(cast = \"glfs_fd_t *\") long fd)", "testcase": false, "constructor": false}, {"identifier": "glfs_fsync", "parameters": "(\n            @JniArg(cast = \"glfs_fd_t *\") long fd)", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_fsync(\n            @JniArg(cast = \"glfs_fd_t *\") long fd)", "full_signature": "@JniMethod public static final native int glfs_fsync(\n            @JniArg(cast = \"glfs_fd_t *\") long fd)", "class_method_signature": "GLFS.glfs_fsync(\n            @JniArg(cast = \"glfs_fd_t *\") long fd)", "testcase": false, "constructor": false}, {"identifier": "glfs_from_glfd", "parameters": "(\n            @JniArg(cast = \"glfs_fd_t *\") long fd)", "modifiers": "@JniMethod(cast = \"glfs_t *\") public static final native", "return": "long", "signature": "long glfs_from_glfd(\n            @JniArg(cast = \"glfs_fd_t *\") long fd)", "full_signature": "@JniMethod(cast = \"glfs_t *\") public static final native long glfs_from_glfd(\n            @JniArg(cast = \"glfs_fd_t *\") long fd)", "class_method_signature": "GLFS.glfs_from_glfd(\n            @JniArg(cast = \"glfs_fd_t *\") long fd)", "testcase": false, "constructor": false}, {"identifier": "glfs_write", "parameters": "(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(cast = \"const char*\", flags = NO_OUT) byte[] buf,\n            int count,\n            int flags)", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_write(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(cast = \"const char*\", flags = NO_OUT) byte[] buf,\n            int count,\n            int flags)", "full_signature": "@JniMethod public static final native int glfs_write(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(cast = \"const char*\", flags = NO_OUT) byte[] buf,\n            int count,\n            int flags)", "class_method_signature": "GLFS.glfs_write(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(cast = \"const char*\", flags = NO_OUT) byte[] buf,\n            int count,\n            int flags)", "testcase": false, "constructor": false}, {"identifier": "glfs_read", "parameters": "(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(cast = \"void *\", flags = NO_IN) byte[] buf,\n            @JniArg(cast = \"size_t\") long count,\n            int flags\n    )", "modifiers": "@JniMethod(cast = \"ssize_t\") public static final native", "return": "long", "signature": "long glfs_read(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(cast = \"void *\", flags = NO_IN) byte[] buf,\n            @JniArg(cast = \"size_t\") long count,\n            int flags\n    )", "full_signature": "@JniMethod(cast = \"ssize_t\") public static final native long glfs_read(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(cast = \"void *\", flags = NO_IN) byte[] buf,\n            @JniArg(cast = \"size_t\") long count,\n            int flags\n    )", "class_method_signature": "GLFS.glfs_read(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(cast = \"void *\", flags = NO_IN) byte[] buf,\n            @JniArg(cast = \"size_t\") long count,\n            int flags\n    )", "testcase": false, "constructor": false}, {"identifier": "glfs_lseek", "parameters": "(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(cast = \"off_t\") long offset,\n            int whence\n    )", "modifiers": "@JniMethod(cast = \"off_t\") public static final native", "return": "int", "signature": "int glfs_lseek(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(cast = \"off_t\") long offset,\n            int whence\n    )", "full_signature": "@JniMethod(cast = \"off_t\") public static final native int glfs_lseek(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(cast = \"off_t\") long offset,\n            int whence\n    )", "class_method_signature": "GLFS.glfs_lseek(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(cast = \"off_t\") long offset,\n            int whence\n    )", "testcase": false, "constructor": false}, {"identifier": "glfs_unlink", "parameters": "(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path)", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_unlink(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path)", "full_signature": "@JniMethod public static final native int glfs_unlink(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path)", "class_method_signature": "GLFS.glfs_unlink(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path)", "testcase": false, "constructor": false}, {"identifier": "glfs_statvfs", "parameters": "(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            @JniArg(flags = NO_IN) statvfs buf)", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_statvfs(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            @JniArg(flags = NO_IN) statvfs buf)", "full_signature": "@JniMethod public static final native int glfs_statvfs(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            @JniArg(flags = NO_IN) statvfs buf)", "class_method_signature": "GLFS.glfs_statvfs(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            @JniArg(flags = NO_IN) statvfs buf)", "testcase": false, "constructor": false}, {"identifier": "glfs_stat", "parameters": "(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            @JniArg(flags = NO_IN) stat buf)", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_stat(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            @JniArg(flags = NO_IN) stat buf)", "full_signature": "@JniMethod public static final native int glfs_stat(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            @JniArg(flags = NO_IN) stat buf)", "class_method_signature": "GLFS.glfs_stat(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            @JniArg(flags = NO_IN) stat buf)", "testcase": false, "constructor": false}, {"identifier": "glfs_lstat", "parameters": "(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            @JniArg(flags = NO_IN) stat buf)", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_lstat(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            @JniArg(flags = NO_IN) stat buf)", "full_signature": "@JniMethod public static final native int glfs_lstat(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            @JniArg(flags = NO_IN) stat buf)", "class_method_signature": "GLFS.glfs_lstat(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            @JniArg(flags = NO_IN) stat buf)", "testcase": false, "constructor": false}, {"identifier": "glfs_fstat", "parameters": "(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(flags = NO_IN) stat buf)", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_fstat(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(flags = NO_IN) stat buf)", "full_signature": "@JniMethod public static final native int glfs_fstat(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(flags = NO_IN) stat buf)", "class_method_signature": "GLFS.glfs_fstat(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(flags = NO_IN) stat buf)", "testcase": false, "constructor": false}, {"identifier": "glfs_access", "parameters": "(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            int mode\n    )", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_access(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            int mode\n    )", "full_signature": "@JniMethod public static final native int glfs_access(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            int mode\n    )", "class_method_signature": "GLFS.glfs_access(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            int mode\n    )", "testcase": false, "constructor": false}, {"identifier": "glfs_mkdir", "parameters": "(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            int mode\n    )", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_mkdir(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            int mode\n    )", "full_signature": "@JniMethod public static final native int glfs_mkdir(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            int mode\n    )", "class_method_signature": "GLFS.glfs_mkdir(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            int mode\n    )", "testcase": false, "constructor": false}, {"identifier": "glfs_opendir", "parameters": "(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path\n    )", "modifiers": "@JniMethod(cast = \"glfs_fd_t *\") public static final native", "return": "long", "signature": "long glfs_opendir(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path\n    )", "full_signature": "@JniMethod(cast = \"glfs_fd_t *\") public static final native long glfs_opendir(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path\n    )", "class_method_signature": "GLFS.glfs_opendir(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path\n    )", "testcase": false, "constructor": false}, {"identifier": "glfs_readdir_r", "parameters": "(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(flags = NO_IN) dirent dirent,\n            @JniArg(cast = \"struct dirent **\") long result\n    )", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_readdir_r(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(flags = NO_IN) dirent dirent,\n            @JniArg(cast = \"struct dirent **\") long result\n    )", "full_signature": "@JniMethod public static final native int glfs_readdir_r(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(flags = NO_IN) dirent dirent,\n            @JniArg(cast = \"struct dirent **\") long result\n    )", "class_method_signature": "GLFS.glfs_readdir_r(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            @JniArg(flags = NO_IN) dirent dirent,\n            @JniArg(cast = \"struct dirent **\") long result\n    )", "testcase": false, "constructor": false}, {"identifier": "glfs_telldir", "parameters": "(\n            @JniArg(cast = \"glfs_fd_t *\") long fd\n    )", "modifiers": "@JniMethod public static final native", "return": "long", "signature": "long glfs_telldir(\n            @JniArg(cast = \"glfs_fd_t *\") long fd\n    )", "full_signature": "@JniMethod public static final native long glfs_telldir(\n            @JniArg(cast = \"glfs_fd_t *\") long fd\n    )", "class_method_signature": "GLFS.glfs_telldir(\n            @JniArg(cast = \"glfs_fd_t *\") long fd\n    )", "testcase": false, "constructor": false}, {"identifier": "glfs_seekdir", "parameters": "(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            long offset\n    )", "modifiers": "@JniMethod public static final native", "return": "void", "signature": "void glfs_seekdir(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            long offset\n    )", "full_signature": "@JniMethod public static final native void glfs_seekdir(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            long offset\n    )", "class_method_signature": "GLFS.glfs_seekdir(\n            @JniArg(cast = \"glfs_fd_t *\") long fd,\n            long offset\n    )", "testcase": false, "constructor": false}, {"identifier": "glfs_closedir", "parameters": "(\n            @JniArg(cast = \"glfs_fd_t *\") long fd\n    )", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_closedir(\n            @JniArg(cast = \"glfs_fd_t *\") long fd\n    )", "full_signature": "@JniMethod public static final native int glfs_closedir(\n            @JniArg(cast = \"glfs_fd_t *\") long fd\n    )", "class_method_signature": "GLFS.glfs_closedir(\n            @JniArg(cast = \"glfs_fd_t *\") long fd\n    )", "testcase": false, "constructor": false}, {"identifier": "glfs_rmdir", "parameters": "(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path\n    )", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_rmdir(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path\n    )", "full_signature": "@JniMethod public static final native int glfs_rmdir(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path\n    )", "class_method_signature": "GLFS.glfs_rmdir(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path\n    )", "testcase": false, "constructor": false}, {"identifier": "glfs_rename", "parameters": "(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String oldpath,\n            @JniArg(cast = \"const char *\") String newpath\n    )", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_rename(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String oldpath,\n            @JniArg(cast = \"const char *\") String newpath\n    )", "full_signature": "@JniMethod public static final native int glfs_rename(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String oldpath,\n            @JniArg(cast = \"const char *\") String newpath\n    )", "class_method_signature": "GLFS.glfs_rename(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String oldpath,\n            @JniArg(cast = \"const char *\") String newpath\n    )", "testcase": false, "constructor": false}, {"identifier": "glfs_chmod", "parameters": "(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            int mode\n    )", "modifiers": "public static final native", "return": "int", "signature": "int glfs_chmod(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            int mode\n    )", "full_signature": "public static final native int glfs_chmod(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            int mode\n    )", "class_method_signature": "GLFS.glfs_chmod(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            int mode\n    )", "testcase": false, "constructor": false}, {"identifier": "glfs_symlink", "parameters": "(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String oldpath,\n            @JniArg(cast = \"const char *\") String newpath\n    )", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_symlink(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String oldpath,\n            @JniArg(cast = \"const char *\") String newpath\n    )", "full_signature": "@JniMethod public static final native int glfs_symlink(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String oldpath,\n            @JniArg(cast = \"const char *\") String newpath\n    )", "class_method_signature": "GLFS.glfs_symlink(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String oldpath,\n            @JniArg(cast = \"const char *\") String newpath\n    )", "testcase": false, "constructor": false}, {"identifier": "glfs_readlink", "parameters": "(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            @JniArg(cast = \"char *\", flags = NO_IN) byte[] buf,\n            @JniArg(cast = \"size_t\") long bufsiz\n    )", "modifiers": "@JniMethod public static final native", "return": "int", "signature": "int glfs_readlink(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            @JniArg(cast = \"char *\", flags = NO_IN) byte[] buf,\n            @JniArg(cast = \"size_t\") long bufsiz\n    )", "full_signature": "@JniMethod public static final native int glfs_readlink(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            @JniArg(cast = \"char *\", flags = NO_IN) byte[] buf,\n            @JniArg(cast = \"size_t\") long bufsiz\n    )", "class_method_signature": "GLFS.glfs_readlink(\n            @JniArg(cast = \"glfs_t *\") long fs,\n            @JniArg(cast = \"const char *\") String path,\n            @JniArg(cast = \"char *\", flags = NO_IN) byte[] buf,\n            @JniArg(cast = \"size_t\") long bufsiz\n    )", "testcase": false, "constructor": false}], "file": "libgfapi-jni/src/main/java/com/peircean/libgfapi_jni/internal/GLFS.java"}, "focal_method": {"identifier": "glfs_close", "parameters": "(\n            @JniArg(cast = \"glfs_fd_t *\") long fd)", "modifiers": "@JniMethod public static final native", "return": "int", "body": "@JniMethod\n    public static final native int glfs_close(\n            @JniArg(cast = \"glfs_fd_t *\") long fd);", "signature": "int glfs_close(\n            @JniArg(cast = \"glfs_fd_t *\") long fd)", "full_signature": "@JniMethod public static final native int glfs_close(\n            @JniArg(cast = \"glfs_fd_t *\") long fd)", "class_method_signature": "GLFS.glfs_close(\n            @JniArg(cast = \"glfs_fd_t *\") long fd)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 10945339, "url": "https://github.com/gluster/libgfapi-jni", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 141, "license": "licensed"}}