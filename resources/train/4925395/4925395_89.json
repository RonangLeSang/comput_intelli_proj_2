{"test_class": {"identifier": "FileLookupTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public TemporaryFolder folder = new TemporaryFolder();", "modifier": "@Rule\n  public", "type": "TemporaryFolder", "declarator": "folder = new TemporaryFolder()", "var_name": "folder"}, {"original_string": "private File available_versions;", "modifier": "private", "type": "File", "declarator": "available_versions", "var_name": "available_versions"}, {"original_string": "private LookupStrategy lookup;", "modifier": "private", "type": "LookupStrategy", "declarator": "lookup", "var_name": "lookup"}], "file": "core/src/test/java/de/idos/updates/lookup/FileLookupTest.java"}, "test_case": {"identifier": "returnsExpectedUpdateVersion", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void returnsExpectedUpdateVersion() throws Exception {\n    Update latest = lookup.findLatestUpdate();\n    assertThat(latest.getVersion(), is(sameVersionAs(new NumericVersion(5, 0, 4))));\n  }", "signature": "void returnsExpectedUpdateVersion()", "full_signature": "@Test public void returnsExpectedUpdateVersion()", "class_method_signature": "FileLookupTest.returnsExpectedUpdateVersion()", "testcase": true, "constructor": false, "invocations": ["findLatestUpdate", "assertThat", "getVersion", "is", "sameVersionAs"]}, "focal_class": {"identifier": "FileLookup", "superclass": "", "interfaces": "implements LookupStrategy", "fields": [{"original_string": "private File availableVersions;", "modifier": "private", "type": "File", "declarator": "availableVersions", "var_name": "availableVersions"}], "methods": [{"identifier": "FileLookup", "parameters": "(File availableVersions)", "modifiers": "public", "return": "", "signature": " FileLookup(File availableVersions)", "full_signature": "public  FileLookup(File availableVersions)", "class_method_signature": "FileLookup.FileLookup(File availableVersions)", "testcase": false, "constructor": true}, {"identifier": "findLatestUpdate", "parameters": "()", "modifiers": "@Override public", "return": "Update", "signature": "Update findLatestUpdate()", "full_signature": "@Override public Update findLatestUpdate()", "class_method_signature": "FileLookup.findLatestUpdate()", "testcase": false, "constructor": false}, {"identifier": "findLatestVersion", "parameters": "()", "modifiers": "private", "return": "Version", "signature": "Version findLatestVersion()", "full_signature": "private Version findLatestVersion()", "class_method_signature": "FileLookup.findLatestVersion()", "testcase": false, "constructor": false}], "file": "core/src/main/java/de/idos/updates/lookup/FileLookup.java"}, "focal_method": {"identifier": "findLatestUpdate", "parameters": "()", "modifiers": "@Override public", "return": "Update", "body": "@Override\n  public Update findLatestUpdate() throws IOException {\n    return new UpdateDescription(findLatestVersion());\n  }", "signature": "Update findLatestUpdate()", "full_signature": "@Override public Update findLatestUpdate()", "class_method_signature": "FileLookup.findLatestUpdate()", "testcase": false, "constructor": false, "invocations": ["findLatestVersion"]}, "repository": {"repo_id": 4925395, "url": "https://github.com/UrsKR/updates-r-simple", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 28, "size": 881, "license": "Apache License 2.0"}}