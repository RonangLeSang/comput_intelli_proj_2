{"test_class": {"identifier": "EncryptDecryptTest", "superclass": "", "interfaces": "", "fields": [], "file": "interfaces/web/wsdl-client/src/test/java/eu/impact_project/wsclient/EncryptDecryptTest.java"}, "test_case": {"identifier": "testMain", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMain()\n    {\n        System.out.println(\"main\");\n        String[] args = null;\n        EncryptDecrypt.main(args);     \n    }", "signature": "void testMain()", "full_signature": "@Test public void testMain()", "class_method_signature": "EncryptDecryptTest.testMain()", "testcase": true, "constructor": false, "invocations": ["println", "main"]}, "focal_class": {"identifier": "EncryptDecrypt", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Cipher ecipher;", "modifier": "private", "type": "Cipher", "declarator": "ecipher", "var_name": "ecipher"}, {"original_string": "private Cipher dcipher;", "modifier": "private", "type": "Cipher", "declarator": "dcipher", "var_name": "dcipher"}, {"original_string": "private Base64 base64codec;", "modifier": "private", "type": "Base64", "declarator": "base64codec", "var_name": "base64codec"}], "methods": [{"identifier": "EncryptDecrypt", "parameters": "(SecretKey key)", "modifiers": "", "return": "", "signature": " EncryptDecrypt(SecretKey key)", "full_signature": "  EncryptDecrypt(SecretKey key)", "class_method_signature": "EncryptDecrypt.EncryptDecrypt(SecretKey key)", "testcase": false, "constructor": true}, {"identifier": "encrypt", "parameters": "(String str)", "modifiers": "public", "return": "String", "signature": "String encrypt(String str)", "full_signature": "public String encrypt(String str)", "class_method_signature": "EncryptDecrypt.encrypt(String str)", "testcase": false, "constructor": false}, {"identifier": "decrypt", "parameters": "(String str)", "modifiers": "public", "return": "String", "signature": "String decrypt(String str)", "full_signature": "public String decrypt(String str)", "class_method_signature": "EncryptDecrypt.decrypt(String str)", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "EncryptDecrypt.main(String[] args)", "testcase": false, "constructor": false}], "file": "interfaces/web/wsdl-client/src/main/java/eu/impact_project/wsclient/EncryptDecrypt.java"}, "focal_method": {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "body": "public static void main(String[] args) {\n\t\ttry {\n\t\t\t// Generate a temporary key. In practice, you would save this key.\n\t\t\t// See also e464 Encrypting with DES Using a Pass Phrase.\n\t\t\tSecretKey key = KeyGenerator.getInstance(\"DES\").generateKey();\n\n\t\t\t// Create encrypter/decrypter class\n\t\t\tEncryptDecrypt encrypter = new EncryptDecrypt(key);\n\n\t\t\t// Pass variable I should get from the form with the\n\t\t\t// request.getParameter(\"Pass\");\n\t\t\tString Pass = \"Password\"; // Just to make it work\n\n\t\t\t// Encrypt\n\t\t\tString encrypted = encrypter.encrypt(Pass);\n\n\t\t\t// Decrypt\n\t\t\tString decrypted = encrypter.decrypt(encrypted);\n\n\t\t\t// Output\n\n\t\t\tSystem.out.println(\"Encrypted: \" + encrypted);\n\t\t\tSystem.out.println(\"Decrypted: \" + decrypted);\n\n\t\t} catch (Exception e) {\n\t\t}\n\t}", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "EncryptDecrypt.main(String[] args)", "testcase": false, "constructor": false, "invocations": ["generateKey", "getInstance", "encrypt", "decrypt", "println", "println"]}, "repository": {"repo_id": 2136693, "url": "https://github.com/impactcentre/interoperability-framework", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 12, "size": 107233, "license": "licensed"}}