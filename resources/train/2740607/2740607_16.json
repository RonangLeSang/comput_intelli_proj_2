{"test_class": {"identifier": "CredentialsHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "server/src/test/java/org/jfrog/teamcity/api/credentials/CredentialsHelperTest.java"}, "test_case": {"identifier": "testGetPreferredResolvingCredentials", "parameters": "(ServerConfigBean serverConfigBean, boolean overrideDeployerCredentials,\n                                                     String username, String password, CredentialsBean expectedCredentials)", "modifiers": "@Test(dataProvider = \"PreferredResolvingCredentialsData\") public", "return": "void", "body": "@Test(dataProvider = \"PreferredResolvingCredentialsData\")\n    public void testGetPreferredResolvingCredentials(ServerConfigBean serverConfigBean, boolean overrideDeployerCredentials,\n                                                     String username, String password, CredentialsBean expectedCredentials) {\n        CredentialsBean generated = CredentialsHelper.getPreferredResolvingCredentials(serverConfigBean, overrideDeployerCredentials, username, password);\n        assertEquals(generated.getUsername(), expectedCredentials.getUsername(), \"Unexpected username\");\n        assertEquals(generated.getPassword(), expectedCredentials.getPassword(), \"Unexpected password\");\n    }", "signature": "void testGetPreferredResolvingCredentials(ServerConfigBean serverConfigBean, boolean overrideDeployerCredentials,\n                                                     String username, String password, CredentialsBean expectedCredentials)", "full_signature": "@Test(dataProvider = \"PreferredResolvingCredentialsData\") public void testGetPreferredResolvingCredentials(ServerConfigBean serverConfigBean, boolean overrideDeployerCredentials,\n                                                     String username, String password, CredentialsBean expectedCredentials)", "class_method_signature": "CredentialsHelperTest.testGetPreferredResolvingCredentials(ServerConfigBean serverConfigBean, boolean overrideDeployerCredentials,\n                                                     String username, String password, CredentialsBean expectedCredentials)", "testcase": true, "constructor": false, "invocations": ["getPreferredResolvingCredentials", "assertEquals", "getUsername", "getUsername", "assertEquals", "getPassword", "getPassword"]}, "focal_class": {"identifier": "CredentialsHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "CredentialsHelper", "parameters": "()", "modifiers": "private", "return": "", "signature": " CredentialsHelper()", "full_signature": "private  CredentialsHelper()", "class_method_signature": "CredentialsHelper.CredentialsHelper()", "testcase": false, "constructor": true}, {"identifier": "getPreferredResolvingCredentials", "parameters": "(ServerConfigBean serverConfigBean,\n                                                                   boolean overrideDeployerCredentials,\n                                                                   String username, String password)", "modifiers": "public static", "return": "CredentialsBean", "signature": "CredentialsBean getPreferredResolvingCredentials(ServerConfigBean serverConfigBean,\n                                                                   boolean overrideDeployerCredentials,\n                                                                   String username, String password)", "full_signature": "public static CredentialsBean getPreferredResolvingCredentials(ServerConfigBean serverConfigBean,\n                                                                   boolean overrideDeployerCredentials,\n                                                                   String username, String password)", "class_method_signature": "CredentialsHelper.getPreferredResolvingCredentials(ServerConfigBean serverConfigBean,\n                                                                   boolean overrideDeployerCredentials,\n                                                                   String username, String password)", "testcase": false, "constructor": false}, {"identifier": "getPreferredDeployingCredentials", "parameters": "(ServerConfigBean serverConfigBean,\n                                                                   boolean overrideDeployerCredentials,\n                                                                   String username, String password)", "modifiers": "public static", "return": "CredentialsBean", "signature": "CredentialsBean getPreferredDeployingCredentials(ServerConfigBean serverConfigBean,\n                                                                   boolean overrideDeployerCredentials,\n                                                                   String username, String password)", "full_signature": "public static CredentialsBean getPreferredDeployingCredentials(ServerConfigBean serverConfigBean,\n                                                                   boolean overrideDeployerCredentials,\n                                                                   String username, String password)", "class_method_signature": "CredentialsHelper.getPreferredDeployingCredentials(ServerConfigBean serverConfigBean,\n                                                                   boolean overrideDeployerCredentials,\n                                                                   String username, String password)", "testcase": false, "constructor": false}, {"identifier": "populateCredentials", "parameters": "(CredentialsBean credentials, String username, String password)", "modifiers": "static", "return": "CredentialsBean", "signature": "CredentialsBean populateCredentials(CredentialsBean credentials, String username, String password)", "full_signature": "static CredentialsBean populateCredentials(CredentialsBean credentials, String username, String password)", "class_method_signature": "CredentialsHelper.populateCredentials(CredentialsBean credentials, String username, String password)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/jfrog/teamcity/api/credentials/CredentialsHelper.java"}, "focal_method": {"identifier": "getPreferredResolvingCredentials", "parameters": "(ServerConfigBean serverConfigBean,\n                                                                   boolean overrideDeployerCredentials,\n                                                                   String username, String password)", "modifiers": "public static", "return": "CredentialsBean", "body": "public static CredentialsBean getPreferredResolvingCredentials(ServerConfigBean serverConfigBean,\n                                                                   boolean overrideDeployerCredentials,\n                                                                   String username, String password) {\n        if (overrideDeployerCredentials || serverConfigBean == null) {\n            return new CredentialsBean(username, password);\n        }\n\n        if (serverConfigBean.isUseDifferentResolverCredentials()) {\n            CredentialsBean resolverCredentials = serverConfigBean.getDefaultResolverCredentials();\n            if (resolverCredentials != null) {\n                return populateCredentials(resolverCredentials, username, password);\n            }\n            return new CredentialsBean(username, password);\n        }\n\n        CredentialsBean deployerCredentials = serverConfigBean.getDefaultDeployerCredentials();\n        if (deployerCredentials != null) {\n            return populateCredentials(deployerCredentials, username, password);\n        }\n        return new CredentialsBean(username, password);\n    }", "signature": "CredentialsBean getPreferredResolvingCredentials(ServerConfigBean serverConfigBean,\n                                                                   boolean overrideDeployerCredentials,\n                                                                   String username, String password)", "full_signature": "public static CredentialsBean getPreferredResolvingCredentials(ServerConfigBean serverConfigBean,\n                                                                   boolean overrideDeployerCredentials,\n                                                                   String username, String password)", "class_method_signature": "CredentialsHelper.getPreferredResolvingCredentials(ServerConfigBean serverConfigBean,\n                                                                   boolean overrideDeployerCredentials,\n                                                                   String username, String password)", "testcase": false, "constructor": false, "invocations": ["isUseDifferentResolverCredentials", "getDefaultResolverCredentials", "populateCredentials", "getDefaultDeployerCredentials", "populateCredentials"]}, "repository": {"repo_id": 2740607, "url": "https://github.com/jfrog/teamcity-artifactory-plugin", "language": "Java", "is_fork": false, "fork_count": 45, "stargazer_count": 30, "size": 869, "license": "licensed"}}