{"test_class": {"identifier": "EnumSettingTest", "superclass": "extends AbstractSettingTest", "interfaces": "", "fields": [], "file": "common/src/test/java/com/khorn/terraincontrol/configuration/settingType/EnumSettingTest.java"}, "test_case": {"identifier": "testCaseInsensitivity", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCaseInsensitivity() throws InvalidConfigException\n    {\n        EnumSetting<ConfigMode> setting = new EnumSetting<ConfigMode>(\"TestSetting\", ConfigMode.WriteAll);\n        for (ConfigMode configMode : ConfigMode.values())\n        {\n            // .toUpperCase to make sure that it is case insensitive\n            ConfigMode readBack = setting.read(configMode.name().toUpperCase());\n\n            // Make sure we actually have got the correct config mode\n            assertEquals(configMode, readBack);\n        }\n    }", "signature": "void testCaseInsensitivity()", "full_signature": "@Test public void testCaseInsensitivity()", "class_method_signature": "EnumSettingTest.testCaseInsensitivity()", "testcase": true, "constructor": false, "invocations": ["values", "read", "toUpperCase", "name", "assertEquals"]}, "focal_class": {"identifier": "EnumSetting", "superclass": "extends Setting<T>", "interfaces": "", "fields": [{"original_string": "private final T defaultValue;", "modifier": "private final", "type": "T", "declarator": "defaultValue", "var_name": "defaultValue"}, {"original_string": "private final T[] enumValues;", "modifier": "private final", "type": "T[]", "declarator": "enumValues", "var_name": "enumValues"}], "methods": [{"identifier": "EnumSetting", "parameters": "(String name, T defaultValue)", "modifiers": "public", "return": "", "signature": " EnumSetting(String name, T defaultValue)", "full_signature": "public  EnumSetting(String name, T defaultValue)", "class_method_signature": "EnumSetting.EnumSetting(String name, T defaultValue)", "testcase": false, "constructor": true}, {"identifier": "getDefaultValue", "parameters": "()", "modifiers": "@Override public", "return": "T", "signature": "T getDefaultValue()", "full_signature": "@Override public T getDefaultValue()", "class_method_signature": "EnumSetting.getDefaultValue()", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(String string)", "modifiers": "@Override public", "return": "T", "signature": "T read(String string)", "full_signature": "@Override public T read(String string)", "class_method_signature": "EnumSetting.read(String string)", "testcase": false, "constructor": false}], "file": "common/src/main/java/com/khorn/terraincontrol/configuration/settingType/EnumSetting.java"}, "focal_method": {"identifier": "read", "parameters": "(String string)", "modifiers": "@Override public", "return": "T", "body": "@Override\n    public T read(String string) throws InvalidConfigException\n    {\n        for (T enumValue : enumValues)\n        {\n            if (enumValue.name().equalsIgnoreCase(string))\n            {\n                return enumValue;\n            }\n        }\n        throw new InvalidConfigException(string + \" is not an acceptable value\");\n    }", "signature": "T read(String string)", "full_signature": "@Override public T read(String string)", "class_method_signature": "EnumSetting.read(String string)", "testcase": false, "constructor": false, "invocations": ["equalsIgnoreCase", "name"]}, "repository": {"repo_id": 2112231, "url": "https://github.com/MCTCP/TerrainControl", "language": "Java", "is_fork": false, "fork_count": 132, "stargazer_count": 211, "size": 5751, "license": "licensed"}}