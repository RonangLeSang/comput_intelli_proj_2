{"test_class": {"identifier": "RightTest", "superclass": "", "interfaces": "", "fields": [], "file": "xwiki-platform-core/xwiki-platform-security/xwiki-platform-security-api/src/test/java/org/xwiki/security/authorization/RightTest.java"}, "test_case": {"identifier": "like", "parameters": "()", "modifiers": "@Disabled(\"Disabled because it breaks the DefaultAuthorizationManagerIntegrationTest since Rights are static.\") @Test", "return": "void", "body": "@Disabled(\"Disabled because it breaks the DefaultAuthorizationManagerIntegrationTest since Rights are static.\")\n    @Test\n    void like()\n    {\n        Right myRight = new Right(new CustomRight(\"foo\"));\n        assertTrue(myRight.like(new CustomRight(\"foo\")));\n    }", "signature": "void like()", "full_signature": "@Disabled(\"Disabled because it breaks the DefaultAuthorizationManagerIntegrationTest since Rights are static.\") @Test void like()", "class_method_signature": "RightTest.like()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "like"]}, "focal_class": {"identifier": "Right", "superclass": "", "interfaces": "implements RightDescription, Serializable, Comparable<Right>", "fields": [{"original_string": "public static final Right LOGIN;", "modifier": "public static final", "type": "Right", "declarator": "LOGIN", "var_name": "LOGIN"}, {"original_string": "public static final Right VIEW;", "modifier": "public static final", "type": "Right", "declarator": "VIEW", "var_name": "VIEW"}, {"original_string": "public static final Right EDIT;", "modifier": "public static final", "type": "Right", "declarator": "EDIT", "var_name": "EDIT"}, {"original_string": "public static final Right DELETE;", "modifier": "public static final", "type": "Right", "declarator": "DELETE", "var_name": "DELETE"}, {"original_string": "public static final Right CREATOR;", "modifier": "public static final", "type": "Right", "declarator": "CREATOR", "var_name": "CREATOR"}, {"original_string": "public static final Right ADMIN;", "modifier": "public static final", "type": "Right", "declarator": "ADMIN", "var_name": "ADMIN"}, {"original_string": "public static final Right PROGRAM;", "modifier": "public static final", "type": "Right", "declarator": "PROGRAM", "var_name": "PROGRAM"}, {"original_string": "public static final Right SCRIPT;", "modifier": "public static final", "type": "Right", "declarator": "SCRIPT", "var_name": "SCRIPT"}, {"original_string": "public static final Right REGISTER;", "modifier": "public static final", "type": "Right", "declarator": "REGISTER", "var_name": "REGISTER"}, {"original_string": "public static final Right COMMENT;", "modifier": "public static final", "type": "Right", "declarator": "COMMENT", "var_name": "COMMENT"}, {"original_string": "public static final Right CREATE_WIKI;", "modifier": "public static final", "type": "Right", "declarator": "CREATE_WIKI", "var_name": "CREATE_WIKI"}, {"original_string": "public static final Right ILLEGAL;", "modifier": "public static final", "type": "Right", "declarator": "ILLEGAL", "var_name": "ILLEGAL"}, {"original_string": "public static final String ILLEGAL_RIGHT_NAME = \"illegal\";", "modifier": "public static final", "type": "String", "declarator": "ILLEGAL_RIGHT_NAME = \"illegal\"", "var_name": "ILLEGAL_RIGHT_NAME"}, {"original_string": "public static final Set<EntityType> FARM_ONLY = null;", "modifier": "public static final", "type": "Set<EntityType>", "declarator": "FARM_ONLY = null", "var_name": "FARM_ONLY"}, {"original_string": "public static final Set<EntityType> WIKI_ONLY = EnumSet.of(EntityType.WIKI);", "modifier": "public static final", "type": "Set<EntityType>", "declarator": "WIKI_ONLY = EnumSet.of(EntityType.WIKI)", "var_name": "WIKI_ONLY"}, {"original_string": "public static final Set<EntityType> WIKI_SPACE = EnumSet.of(EntityType.WIKI, EntityType.SPACE);", "modifier": "public static final", "type": "Set<EntityType>", "declarator": "WIKI_SPACE = EnumSet.of(EntityType.WIKI, EntityType.SPACE)", "var_name": "WIKI_SPACE"}, {"original_string": "public static final Set<EntityType> WIKI_SPACE_DOCUMENT\n        = EnumSet.of(EntityType.WIKI, EntityType.SPACE, EntityType.DOCUMENT);", "modifier": "public static final", "type": "Set<EntityType>", "declarator": "WIKI_SPACE_DOCUMENT\n        = EnumSet.of(EntityType.WIKI, EntityType.SPACE, EntityType.DOCUMENT)", "var_name": "WIKI_SPACE_DOCUMENT"}, {"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private static final List<Right> VALUES = new ArrayList<Right>();", "modifier": "private static final", "type": "List<Right>", "declarator": "VALUES = new ArrayList<Right>()", "var_name": "VALUES"}, {"original_string": "private static final List<Right> UNMODIFIABLE_VALUES = Collections.unmodifiableList(VALUES);", "modifier": "private static final", "type": "List<Right>", "declarator": "UNMODIFIABLE_VALUES = Collections.unmodifiableList(VALUES)", "var_name": "UNMODIFIABLE_VALUES"}, {"original_string": "private static final List<String> ALL_RIGHTS = new LinkedList<String>();", "modifier": "private static final", "type": "List<String>", "declarator": "ALL_RIGHTS = new LinkedList<String>()", "var_name": "ALL_RIGHTS"}, {"original_string": "private static final List<String> UNMODIFIABLE_ALL_RIGHTS = Collections.unmodifiableList(ALL_RIGHTS);", "modifier": "private static final", "type": "List<String>", "declarator": "UNMODIFIABLE_ALL_RIGHTS = Collections.unmodifiableList(ALL_RIGHTS)", "var_name": "UNMODIFIABLE_ALL_RIGHTS"}, {"original_string": "private static final Map<EntityType, Set<Right>> ENABLED_RIGHTS = new HashMap<>();", "modifier": "private static final", "type": "Map<EntityType, Set<Right>>", "declarator": "ENABLED_RIGHTS = new HashMap<>()", "var_name": "ENABLED_RIGHTS"}, {"original_string": "private static final Map<EntityType, Set<Right>> UNMODIFIABLE_ENABLED_RIGHTS = new HashMap<>();", "modifier": "private static final", "type": "Map<EntityType, Set<Right>>", "declarator": "UNMODIFIABLE_ENABLED_RIGHTS = new HashMap<>()", "var_name": "UNMODIFIABLE_ENABLED_RIGHTS"}, {"original_string": "private final int value;", "modifier": "private final", "type": "int", "declarator": "value", "var_name": "value"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final RuleState defaultState;", "modifier": "private final", "type": "RuleState", "declarator": "defaultState", "var_name": "defaultState"}, {"original_string": "private final RuleState tieResolutionPolicy;", "modifier": "private final", "type": "RuleState", "declarator": "tieResolutionPolicy", "var_name": "tieResolutionPolicy"}, {"original_string": "private final boolean inheritanceOverridePolicy;", "modifier": "private final", "type": "boolean", "declarator": "inheritanceOverridePolicy", "var_name": "inheritanceOverridePolicy"}, {"original_string": "private final Set<Right> impliedRights;", "modifier": "private final", "type": "Set<Right>", "declarator": "impliedRights", "var_name": "impliedRights"}, {"original_string": "private transient Set<Right> immutableImpliedRights;", "modifier": "private transient", "type": "Set<Right>", "declarator": "immutableImpliedRights", "var_name": "immutableImpliedRights"}, {"original_string": "private final boolean isReadOnly;", "modifier": "private final", "type": "boolean", "declarator": "isReadOnly", "var_name": "isReadOnly"}], "methods": [{"identifier": "Right", "parameters": "(RightDescription description)", "modifiers": "", "return": "", "signature": " Right(RightDescription description)", "full_signature": "  Right(RightDescription description)", "class_method_signature": "Right.Right(RightDescription description)", "testcase": false, "constructor": true}, {"identifier": "Right", "parameters": "(RightDescription description, Set<Right> impliedByRights)", "modifiers": "", "return": "", "signature": " Right(RightDescription description, Set<Right> impliedByRights)", "full_signature": "  Right(RightDescription description, Set<Right> impliedByRights)", "class_method_signature": "Right.Right(RightDescription description, Set<Right> impliedByRights)", "testcase": false, "constructor": true}, {"identifier": "Right", "parameters": "(String name, RuleState defaultState, RuleState tieResolutionPolicy,\n        boolean inheritanceOverridePolicy, Set<Right> impliedRights, Set<EntityType> validEntityTypes,\n        boolean isReadOnly)", "modifiers": "private", "return": "", "signature": " Right(String name, RuleState defaultState, RuleState tieResolutionPolicy,\n        boolean inheritanceOverridePolicy, Set<Right> impliedRights, Set<EntityType> validEntityTypes,\n        boolean isReadOnly)", "full_signature": "private  Right(String name, RuleState defaultState, RuleState tieResolutionPolicy,\n        boolean inheritanceOverridePolicy, Set<Right> impliedRights, Set<EntityType> validEntityTypes,\n        boolean isReadOnly)", "class_method_signature": "Right.Right(String name, RuleState defaultState, RuleState tieResolutionPolicy,\n        boolean inheritanceOverridePolicy, Set<Right> impliedRights, Set<EntityType> validEntityTypes,\n        boolean isReadOnly)", "testcase": false, "constructor": true}, {"identifier": "Right", "parameters": "(String name, RuleState defaultState, RuleState tieResolutionPolicy,\n        boolean inheritanceOverridePolicy, Set<Right> impliedRights, Set<EntityType> validEntityTypes,\n        boolean isReadOnly, Set<Right> impliedByRights)", "modifiers": "private", "return": "", "signature": " Right(String name, RuleState defaultState, RuleState tieResolutionPolicy,\n        boolean inheritanceOverridePolicy, Set<Right> impliedRights, Set<EntityType> validEntityTypes,\n        boolean isReadOnly, Set<Right> impliedByRights)", "full_signature": "private  Right(String name, RuleState defaultState, RuleState tieResolutionPolicy,\n        boolean inheritanceOverridePolicy, Set<Right> impliedRights, Set<EntityType> validEntityTypes,\n        boolean isReadOnly, Set<Right> impliedByRights)", "class_method_signature": "Right.Right(String name, RuleState defaultState, RuleState tieResolutionPolicy,\n        boolean inheritanceOverridePolicy, Set<Right> impliedRights, Set<EntityType> validEntityTypes,\n        boolean isReadOnly, Set<Right> impliedByRights)", "testcase": false, "constructor": true}, {"identifier": "enableFor", "parameters": "(EntityType type)", "modifiers": "private", "return": "void", "signature": "void enableFor(EntityType type)", "full_signature": "private void enableFor(EntityType type)", "class_method_signature": "Right.enableFor(EntityType type)", "testcase": false, "constructor": false}, {"identifier": "checkIllegalArguments", "parameters": "(String name, RuleState defaultState, RuleState tieResolutionPolicy)", "modifiers": "private", "return": "void", "signature": "void checkIllegalArguments(String name, RuleState defaultState, RuleState tieResolutionPolicy)", "full_signature": "private void checkIllegalArguments(String name, RuleState defaultState, RuleState tieResolutionPolicy)", "class_method_signature": "Right.checkIllegalArguments(String name, RuleState defaultState, RuleState tieResolutionPolicy)", "testcase": false, "constructor": false}, {"identifier": "cloneImpliedRights", "parameters": "(Set<Right> impliedRights)", "modifiers": "private", "return": "Set<Right>", "signature": "Set<Right> cloneImpliedRights(Set<Right> impliedRights)", "full_signature": "private Set<Right> cloneImpliedRights(Set<Right> impliedRights)", "class_method_signature": "Right.cloneImpliedRights(Set<Right> impliedRights)", "testcase": false, "constructor": false}, {"identifier": "values", "parameters": "()", "modifiers": "public static", "return": "List<Right>", "signature": "List<Right> values()", "full_signature": "public static List<Right> values()", "class_method_signature": "Right.values()", "testcase": false, "constructor": false}, {"identifier": "toRight", "parameters": "(String string)", "modifiers": "public static", "return": "Right", "signature": "Right toRight(String string)", "full_signature": "public static Right toRight(String string)", "class_method_signature": "Right.toRight(String string)", "testcase": false, "constructor": false}, {"identifier": "getEnabledRights", "parameters": "(EntityType entityType)", "modifiers": "public static", "return": "Set<Right>", "signature": "Set<Right> getEnabledRights(EntityType entityType)", "full_signature": "public static Set<Right> getEnabledRights(EntityType entityType)", "class_method_signature": "Right.getEnabledRights(EntityType entityType)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int ordinal)", "modifiers": "public static", "return": "Right", "signature": "Right get(int ordinal)", "full_signature": "public static Right get(int ordinal)", "class_method_signature": "Right.get(int ordinal)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public static", "return": "int", "signature": "int size()", "full_signature": "public static int size()", "class_method_signature": "Right.size()", "testcase": false, "constructor": false}, {"identifier": "getAllRightsAsString", "parameters": "()", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getAllRightsAsString()", "full_signature": "public static List<String> getAllRightsAsString()", "class_method_signature": "Right.getAllRightsAsString()", "testcase": false, "constructor": false}, {"identifier": "ordinal", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int ordinal()", "full_signature": "public int ordinal()", "class_method_signature": "Right.ordinal()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "Right.getName()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Right.toString()", "testcase": false, "constructor": false}, {"identifier": "getImpliedRights", "parameters": "()", "modifiers": "@Override public", "return": "Set<Right>", "signature": "Set<Right> getImpliedRights()", "full_signature": "@Override public Set<Right> getImpliedRights()", "class_method_signature": "Right.getImpliedRights()", "testcase": false, "constructor": false}, {"identifier": "getTargetedEntityType", "parameters": "()", "modifiers": "@Override public", "return": "Set<EntityType>", "signature": "Set<EntityType> getTargetedEntityType()", "full_signature": "@Override public Set<EntityType> getTargetedEntityType()", "class_method_signature": "Right.getTargetedEntityType()", "testcase": false, "constructor": false}, {"identifier": "getInheritanceOverridePolicy", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getInheritanceOverridePolicy()", "full_signature": "@Override public boolean getInheritanceOverridePolicy()", "class_method_signature": "Right.getInheritanceOverridePolicy()", "testcase": false, "constructor": false}, {"identifier": "getTieResolutionPolicy", "parameters": "()", "modifiers": "@Override public", "return": "RuleState", "signature": "RuleState getTieResolutionPolicy()", "full_signature": "@Override public RuleState getTieResolutionPolicy()", "class_method_signature": "Right.getTieResolutionPolicy()", "testcase": false, "constructor": false}, {"identifier": "getDefaultState", "parameters": "()", "modifiers": "@Override public", "return": "RuleState", "signature": "RuleState getDefaultState()", "full_signature": "@Override public RuleState getDefaultState()", "class_method_signature": "Right.getDefaultState()", "testcase": false, "constructor": false}, {"identifier": "isReadOnly", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isReadOnly()", "full_signature": "@Override public boolean isReadOnly()", "class_method_signature": "Right.isReadOnly()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Right other)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(Right other)", "full_signature": "@Override public int compareTo(Right other)", "class_method_signature": "Right.compareTo(Right other)", "testcase": false, "constructor": false}, {"identifier": "like", "parameters": "(RightDescription description)", "modifiers": "", "return": "boolean", "signature": "boolean like(RightDescription description)", "full_signature": " boolean like(RightDescription description)", "class_method_signature": "Right.like(RightDescription description)", "testcase": false, "constructor": false}, {"identifier": "likeImpliedRightsFrom", "parameters": "(RightDescription description)", "modifiers": "private", "return": "boolean", "signature": "boolean likeImpliedRightsFrom(RightDescription description)", "full_signature": "private boolean likeImpliedRightsFrom(RightDescription description)", "class_method_signature": "Right.likeImpliedRightsFrom(RightDescription description)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-security/xwiki-platform-security-api/src/main/java/org/xwiki/security/authorization/Right.java"}, "focal_method": {"identifier": "like", "parameters": "(RightDescription description)", "modifiers": "", "return": "boolean", "body": "boolean like(RightDescription description)\n    {\n        return new EqualsBuilder()\n            .append(this.isReadOnly(), description.isReadOnly())\n            .append(this.getDefaultState(), description.getDefaultState())\n            .append(this.getTieResolutionPolicy(), description.getTieResolutionPolicy())\n            .append(this.getInheritanceOverridePolicy(), description.getInheritanceOverridePolicy())\n            .append(this.getTargetedEntityType(), description.getTargetedEntityType())\n            .isEquals() && this.likeImpliedRightsFrom(description);\n    }", "signature": "boolean like(RightDescription description)", "full_signature": " boolean like(RightDescription description)", "class_method_signature": "Right.like(RightDescription description)", "testcase": false, "constructor": false, "invocations": ["isEquals", "append", "append", "append", "append", "append", "isReadOnly", "isReadOnly", "getDefaultState", "getDefaultState", "getTieResolutionPolicy", "getTieResolutionPolicy", "getInheritanceOverridePolicy", "getInheritanceOverridePolicy", "getTargetedEntityType", "getTargetedEntityType", "likeImpliedRightsFrom"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}