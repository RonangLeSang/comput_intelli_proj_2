{"test_class": {"identifier": "XWikiContextContextStoreTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String WIKI = \"wiki\";", "modifier": "private static final", "type": "String", "declarator": "WIKI = \"wiki\"", "var_name": "WIKI"}, {"original_string": "private static final String REQUESTWIKI = \"requestwiki\";", "modifier": "private static final", "type": "String", "declarator": "REQUESTWIKI = \"requestwiki\"", "var_name": "REQUESTWIKI"}, {"original_string": "@MockComponent\n    private Container container;", "modifier": "@MockComponent\n    private", "type": "Container", "declarator": "container", "var_name": "container"}, {"original_string": "@InjectMockitoOldcore\n    private MockitoOldcore oldcore;", "modifier": "@InjectMockitoOldcore\n    private", "type": "MockitoOldcore", "declarator": "oldcore", "var_name": "oldcore"}, {"original_string": "@InjectMockComponents\n    private XWikiContextContextStore store;", "modifier": "@InjectMockComponents\n    private", "type": "XWikiContextContextStore", "declarator": "store", "var_name": "store"}, {"original_string": "private WikiDescriptor descriptor;", "modifier": "private", "type": "WikiDescriptor", "declarator": "descriptor", "var_name": "descriptor"}, {"original_string": "private URL wikiURL;", "modifier": "private", "type": "URL", "declarator": "wikiURL", "var_name": "wikiURL"}, {"original_string": "private URL requestwikiURL;", "modifier": "private", "type": "URL", "declarator": "requestwikiURL", "var_name": "requestwikiURL"}], "file": "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/internal/context/XWikiContextContextStoreTest.java"}, "test_case": {"identifier": "restoreWiki", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void restoreWiki()\n    {\n        assertNotEquals(WIKI, this.oldcore.getXWikiContext().getWikiId());\n        assertNull(this.oldcore.getXWikiContext().getRequest());\n        assertNull(this.oldcore.getXWikiContext().getDoc());\n        assertNull(this.oldcore.getXWikiContext().getUserReference());\n\n        Map<String, Serializable> contextStore = new HashMap<>();\n        contextStore.put(XWikiContextContextStore.PROP_WIKI, WIKI);\n\n        this.store.restore(contextStore);\n\n        assertEquals(WIKI, this.oldcore.getXWikiContext().getWikiId());\n        assertEquals(this.oldcore.getXWikiContext().getUserReference(),\n            new DocumentReference(\"xwiki\", \"XWiki\", XWikiRightService.SUPERADMIN_USER));\n        assertEquals(this.descriptor.getMainPageReference(),\n            this.oldcore.getXWikiContext().getDoc().getDocumentReference());\n        assertEquals(this.wikiURL.toString(), this.oldcore.getXWikiContext().getRequest().getRequestURL().toString());\n        assertFalse(((XWikiServletRequestStub) this.oldcore.getXWikiContext().getRequest()).isDaemon());\n        assertNull(this.oldcore.getXWikiContext().get(XWikiDocument.CKEY_SDOC));\n    }", "signature": "void restoreWiki()", "full_signature": "@Test public void restoreWiki()", "class_method_signature": "XWikiContextContextStoreTest.restoreWiki()", "testcase": true, "constructor": false, "invocations": ["assertNotEquals", "getWikiId", "getXWikiContext", "assertNull", "getRequest", "getXWikiContext", "assertNull", "getDoc", "getXWikiContext", "assertNull", "getUserReference", "getXWikiContext", "put", "restore", "assertEquals", "getWikiId", "getXWikiContext", "assertEquals", "getUserReference", "getXWikiContext", "assertEquals", "getMainPageReference", "getDocumentReference", "getDoc", "getXWikiContext", "assertEquals", "toString", "toString", "getRequestURL", "getRequest", "getXWikiContext", "assertFalse", "isDaemon", "getRequest", "getXWikiContext", "assertNull", "get", "getXWikiContext"]}, "focal_class": {"identifier": "XWikiContextContextStore", "superclass": "extends AbstractContextStore", "interfaces": "", "fields": [{"original_string": "public static final String PROP_WIKI = \"wiki\";", "modifier": "public static final", "type": "String", "declarator": "PROP_WIKI = \"wiki\"", "var_name": "PROP_WIKI"}, {"original_string": "public static final String PROP_USER = \"user\";", "modifier": "public static final", "type": "String", "declarator": "PROP_USER = \"user\"", "var_name": "PROP_USER"}, {"original_string": "public static final String PROP_SECURE_AUTHOR = \"author\";", "modifier": "public static final", "type": "String", "declarator": "PROP_SECURE_AUTHOR = \"author\"", "var_name": "PROP_SECURE_AUTHOR"}, {"original_string": "public static final String PROP_SECURE_DOCUMENT = \"secureDocument\";", "modifier": "public static final", "type": "String", "declarator": "PROP_SECURE_DOCUMENT = \"secureDocument\"", "var_name": "PROP_SECURE_DOCUMENT"}, {"original_string": "public static final String PROP_LOCALE = \"locale\";", "modifier": "public static final", "type": "String", "declarator": "PROP_LOCALE = \"locale\"", "var_name": "PROP_LOCALE"}, {"original_string": "public static final String PREFIX_PROP_REQUEST = \"request.\";", "modifier": "public static final", "type": "String", "declarator": "PREFIX_PROP_REQUEST = \"request.\"", "var_name": "PREFIX_PROP_REQUEST"}, {"original_string": "public static final String SUFFIX_PROP_REQUEST_BASE = \"base\";", "modifier": "public static final", "type": "String", "declarator": "SUFFIX_PROP_REQUEST_BASE = \"base\"", "var_name": "SUFFIX_PROP_REQUEST_BASE"}, {"original_string": "public static final String SUFFIX_PROP_REQUEST_URL = \"url\";", "modifier": "public static final", "type": "String", "declarator": "SUFFIX_PROP_REQUEST_URL = \"url\"", "var_name": "SUFFIX_PROP_REQUEST_URL"}, {"original_string": "public static final String SUFFIX_PROP_REQUEST_CONTEXTPATH = \"contextpath\";", "modifier": "public static final", "type": "String", "declarator": "SUFFIX_PROP_REQUEST_CONTEXTPATH = \"contextpath\"", "var_name": "SUFFIX_PROP_REQUEST_CONTEXTPATH"}, {"original_string": "public static final String SUFFIX_PROP_REQUEST_PARAMETERS = \"parameters\";", "modifier": "public static final", "type": "String", "declarator": "SUFFIX_PROP_REQUEST_PARAMETERS = \"parameters\"", "var_name": "SUFFIX_PROP_REQUEST_PARAMETERS"}, {"original_string": "public static final String SUFFIX_PROP_REQUEST_WIKI = PROP_WIKI;", "modifier": "public static final", "type": "String", "declarator": "SUFFIX_PROP_REQUEST_WIKI = PROP_WIKI", "var_name": "SUFFIX_PROP_REQUEST_WIKI"}, {"original_string": "public static final String PROP_REQUEST_BASE = PREFIX_PROP_REQUEST + SUFFIX_PROP_REQUEST_BASE;", "modifier": "public static final", "type": "String", "declarator": "PROP_REQUEST_BASE = PREFIX_PROP_REQUEST + SUFFIX_PROP_REQUEST_BASE", "var_name": "PROP_REQUEST_BASE"}, {"original_string": "public static final String PROP_REQUEST_URL = PREFIX_PROP_REQUEST + SUFFIX_PROP_REQUEST_URL;", "modifier": "public static final", "type": "String", "declarator": "PROP_REQUEST_URL = PREFIX_PROP_REQUEST + SUFFIX_PROP_REQUEST_URL", "var_name": "PROP_REQUEST_URL"}, {"original_string": "public static final String PROP_REQUEST_CONTEXTPATH = PREFIX_PROP_REQUEST + SUFFIX_PROP_REQUEST_CONTEXTPATH;", "modifier": "public static final", "type": "String", "declarator": "PROP_REQUEST_CONTEXTPATH = PREFIX_PROP_REQUEST + SUFFIX_PROP_REQUEST_CONTEXTPATH", "var_name": "PROP_REQUEST_CONTEXTPATH"}, {"original_string": "public static final String PROP_REQUEST_PARAMETERS = PREFIX_PROP_REQUEST + SUFFIX_PROP_REQUEST_PARAMETERS;", "modifier": "public static final", "type": "String", "declarator": "PROP_REQUEST_PARAMETERS = PREFIX_PROP_REQUEST + SUFFIX_PROP_REQUEST_PARAMETERS", "var_name": "PROP_REQUEST_PARAMETERS"}, {"original_string": "public static final String PROP_REQUEST_WIKI = PREFIX_PROP_REQUEST + SUFFIX_PROP_REQUEST_WIKI;", "modifier": "public static final", "type": "String", "declarator": "PROP_REQUEST_WIKI = PREFIX_PROP_REQUEST + SUFFIX_PROP_REQUEST_WIKI", "var_name": "PROP_REQUEST_WIKI"}, {"original_string": "public static final String PREFIX_PROP_DOCUMENT = \"doc.\";", "modifier": "public static final", "type": "String", "declarator": "PREFIX_PROP_DOCUMENT = \"doc.\"", "var_name": "PREFIX_PROP_DOCUMENT"}, {"original_string": "public static final String SUFFIX_PROP_DOCUMENT_REFERENCE = \"reference\";", "modifier": "public static final", "type": "String", "declarator": "SUFFIX_PROP_DOCUMENT_REFERENCE = \"reference\"", "var_name": "SUFFIX_PROP_DOCUMENT_REFERENCE"}, {"original_string": "public static final String PROP_DOCUMENT_REFERENCE = PREFIX_PROP_DOCUMENT + SUFFIX_PROP_DOCUMENT_REFERENCE;", "modifier": "public static final", "type": "String", "declarator": "PROP_DOCUMENT_REFERENCE = PREFIX_PROP_DOCUMENT + SUFFIX_PROP_DOCUMENT_REFERENCE", "var_name": "PROP_DOCUMENT_REFERENCE"}, {"original_string": "private static final DocumentReference SUPERADMIN_REFERENCE =\n        new DocumentReference(\"xwiki\", XWiki.SYSTEM_SPACE, XWikiRightService.SUPERADMIN_USER);", "modifier": "private static final", "type": "DocumentReference", "declarator": "SUPERADMIN_REFERENCE =\n        new DocumentReference(\"xwiki\", XWiki.SYSTEM_SPACE, XWikiRightService.SUPERADMIN_USER)", "var_name": "SUPERADMIN_REFERENCE"}, {"original_string": "@Inject\n    private Provider<XWikiContext> writeProvider;", "modifier": "@Inject\n    private", "type": "Provider<XWikiContext>", "declarator": "writeProvider", "var_name": "writeProvider"}, {"original_string": "@Inject\n    @Named(\"readonly\")\n    private Provider<XWikiContext> readProvider;", "modifier": "@Inject\n    @Named(\"readonly\")\n    private", "type": "Provider<XWikiContext>", "declarator": "readProvider", "var_name": "readProvider"}, {"original_string": "@Inject\n    private WikiDescriptorManager wikis;", "modifier": "@Inject\n    private", "type": "WikiDescriptorManager", "declarator": "wikis", "var_name": "wikis"}, {"original_string": "@Inject\n    private RequestInitializer requestInitializer;", "modifier": "@Inject\n    private", "type": "RequestInitializer", "declarator": "requestInitializer", "var_name": "requestInitializer"}, {"original_string": "@Inject\n    private Logger logger;", "modifier": "@Inject\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}], "methods": [{"identifier": "XWikiContextContextStore", "parameters": "()", "modifiers": "public", "return": "", "signature": " XWikiContextContextStore()", "full_signature": "public  XWikiContextContextStore()", "class_method_signature": "XWikiContextContextStore.XWikiContextContextStore()", "testcase": false, "constructor": true}, {"identifier": "save", "parameters": "(Map<String, Serializable> contextStore, Collection<String> entries)", "modifiers": "@Override public", "return": "void", "signature": "void save(Map<String, Serializable> contextStore, Collection<String> entries)", "full_signature": "@Override public void save(Map<String, Serializable> contextStore, Collection<String> entries)", "class_method_signature": "XWikiContextContextStore.save(Map<String, Serializable> contextStore, Collection<String> entries)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(Map<String, Serializable> contextStore, String prefix, XWikiDocument document,\n        Collection<String> entries)", "modifiers": "private", "return": "void", "signature": "void save(Map<String, Serializable> contextStore, String prefix, XWikiDocument document,\n        Collection<String> entries)", "full_signature": "private void save(Map<String, Serializable> contextStore, String prefix, XWikiDocument document,\n        Collection<String> entries)", "class_method_signature": "XWikiContextContextStore.save(Map<String, Serializable> contextStore, String prefix, XWikiDocument document,\n        Collection<String> entries)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(Map<String, Serializable> contextStore, String prefix, XWikiRequest request,\n        Collection<String> entries, XWikiContext xcontext)", "modifiers": "private", "return": "void", "signature": "void save(Map<String, Serializable> contextStore, String prefix, XWikiRequest request,\n        Collection<String> entries, XWikiContext xcontext)", "full_signature": "private void save(Map<String, Serializable> contextStore, String prefix, XWikiRequest request,\n        Collection<String> entries, XWikiContext xcontext)", "class_method_signature": "XWikiContextContextStore.save(Map<String, Serializable> contextStore, String prefix, XWikiRequest request,\n        Collection<String> entries, XWikiContext xcontext)", "testcase": false, "constructor": false}, {"identifier": "saveRequestBase", "parameters": "(Map<String, Serializable> contextStore, String key, XWikiRequest request)", "modifiers": "private", "return": "void", "signature": "void saveRequestBase(Map<String, Serializable> contextStore, String key, XWikiRequest request)", "full_signature": "private void saveRequestBase(Map<String, Serializable> contextStore, String key, XWikiRequest request)", "class_method_signature": "XWikiContextContextStore.saveRequestBase(Map<String, Serializable> contextStore, String key, XWikiRequest request)", "testcase": false, "constructor": false}, {"identifier": "saveRequestURL", "parameters": "(Map<String, Serializable> contextStore, String key, XWikiRequest request)", "modifiers": "private", "return": "void", "signature": "void saveRequestURL(Map<String, Serializable> contextStore, String key, XWikiRequest request)", "full_signature": "private void saveRequestURL(Map<String, Serializable> contextStore, String key, XWikiRequest request)", "class_method_signature": "XWikiContextContextStore.saveRequestURL(Map<String, Serializable> contextStore, String key, XWikiRequest request)", "testcase": false, "constructor": false}, {"identifier": "saveRequestContextPath", "parameters": "(Map<String, Serializable> contextStore, XWikiRequest request)", "modifiers": "private", "return": "void", "signature": "void saveRequestContextPath(Map<String, Serializable> contextStore, XWikiRequest request)", "full_signature": "private void saveRequestContextPath(Map<String, Serializable> contextStore, XWikiRequest request)", "class_method_signature": "XWikiContextContextStore.saveRequestContextPath(Map<String, Serializable> contextStore, XWikiRequest request)", "testcase": false, "constructor": false}, {"identifier": "saveRequestParameters", "parameters": "(Map<String, Serializable> contextStore, String key, XWikiRequest request)", "modifiers": "private", "return": "void", "signature": "void saveRequestParameters(Map<String, Serializable> contextStore, String key, XWikiRequest request)", "full_signature": "private void saveRequestParameters(Map<String, Serializable> contextStore, String key, XWikiRequest request)", "class_method_signature": "XWikiContextContextStore.saveRequestParameters(Map<String, Serializable> contextStore, String key, XWikiRequest request)", "testcase": false, "constructor": false}, {"identifier": "saveRequestAll", "parameters": "(Map<String, Serializable> contextStore, String key, XWikiRequest request)", "modifiers": "private", "return": "void", "signature": "void saveRequestAll(Map<String, Serializable> contextStore, String key, XWikiRequest request)", "full_signature": "private void saveRequestAll(Map<String, Serializable> contextStore, String key, XWikiRequest request)", "class_method_signature": "XWikiContextContextStore.saveRequestAll(Map<String, Serializable> contextStore, String key, XWikiRequest request)", "testcase": false, "constructor": false}, {"identifier": "restore", "parameters": "(Map<String, Serializable> contextStore)", "modifiers": "@Override public", "return": "void", "signature": "void restore(Map<String, Serializable> contextStore)", "full_signature": "@Override public void restore(Map<String, Serializable> contextStore)", "class_method_signature": "XWikiContextContextStore.restore(Map<String, Serializable> contextStore)", "testcase": false, "constructor": false}, {"identifier": "restoreAuthor", "parameters": "(Map<String, Serializable> contextStore, XWikiContext xcontext)", "modifiers": "private", "return": "void", "signature": "void restoreAuthor(Map<String, Serializable> contextStore, XWikiContext xcontext)", "full_signature": "private void restoreAuthor(Map<String, Serializable> contextStore, XWikiContext xcontext)", "class_method_signature": "XWikiContextContextStore.restoreAuthor(Map<String, Serializable> contextStore, XWikiContext xcontext)", "testcase": false, "constructor": false}, {"identifier": "restoreAuthor", "parameters": "(Map<String, Serializable> contextStore, DocumentReference authorReference,\n        XWikiContext xcontext)", "modifiers": "private", "return": "void", "signature": "void restoreAuthor(Map<String, Serializable> contextStore, DocumentReference authorReference,\n        XWikiContext xcontext)", "full_signature": "private void restoreAuthor(Map<String, Serializable> contextStore, DocumentReference authorReference,\n        XWikiContext xcontext)", "class_method_signature": "XWikiContextContextStore.restoreAuthor(Map<String, Serializable> contextStore, DocumentReference authorReference,\n        XWikiContext xcontext)", "testcase": false, "constructor": false}, {"identifier": "getSecureDocument", "parameters": "(DocumentReference secureDocumentReference,\n        DocumentReference authorReference, XWikiContext xcontext)", "modifiers": "private", "return": "XWikiDocument", "signature": "XWikiDocument getSecureDocument(DocumentReference secureDocumentReference,\n        DocumentReference authorReference, XWikiContext xcontext)", "full_signature": "private XWikiDocument getSecureDocument(DocumentReference secureDocumentReference,\n        DocumentReference authorReference, XWikiContext xcontext)", "class_method_signature": "XWikiContextContextStore.getSecureDocument(DocumentReference secureDocumentReference,\n        DocumentReference authorReference, XWikiContext xcontext)", "testcase": false, "constructor": false}, {"identifier": "restoreDocument", "parameters": "(String storedWikiId, Map<String, Serializable> contextStore, XWikiContext xcontext)", "modifiers": "private", "return": "void", "signature": "void restoreDocument(String storedWikiId, Map<String, Serializable> contextStore, XWikiContext xcontext)", "full_signature": "private void restoreDocument(String storedWikiId, Map<String, Serializable> contextStore, XWikiContext xcontext)", "class_method_signature": "XWikiContextContextStore.restoreDocument(String storedWikiId, Map<String, Serializable> contextStore, XWikiContext xcontext)", "testcase": false, "constructor": false}, {"identifier": "restoreDocument", "parameters": "(DocumentReference documentReference, XWikiContext xcontext)", "modifiers": "private", "return": "void", "signature": "void restoreDocument(DocumentReference documentReference, XWikiContext xcontext)", "full_signature": "private void restoreDocument(DocumentReference documentReference, XWikiContext xcontext)", "class_method_signature": "XWikiContextContextStore.restoreDocument(DocumentReference documentReference, XWikiContext xcontext)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/internal/context/XWikiContextContextStore.java"}, "focal_method": {"identifier": "restore", "parameters": "(Map<String, Serializable> contextStore)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void restore(Map<String, Serializable> contextStore)\n    {\n        XWikiContext xcontext = this.writeProvider.get();\n\n        // Wiki id\n        String storedWikiId = null;\n        if (contextStore.containsKey(PROP_WIKI)) {\n            storedWikiId = (String) contextStore.get(PROP_WIKI);\n\n            xcontext.setWikiId(storedWikiId);\n        }\n\n        // User\n        if (contextStore.containsKey(PROP_USER)) {\n            xcontext.setUserReference((DocumentReference) contextStore.get(PROP_USER));\n\n            // If the current user is not a criteria set one which will always have all the required rights\n        } else if (contextStore.containsKey(PROP_SECURE_AUTHOR)) {\n            // If the author is provided use it to be as close as possible to the expected behavior\n            xcontext.setUserReference((DocumentReference) contextStore.get(PROP_SECURE_AUTHOR));\n        } else {\n            // Fallback on superadmin when no author is provided\n            xcontext.setUserReference(SUPERADMIN_REFERENCE);\n        }\n\n        // Locale\n        if (contextStore.containsKey(PROP_LOCALE)) {\n            xcontext.setLocale((Locale) contextStore.get(PROP_LOCALE));\n        }\n\n        // Document\n        restoreDocument(storedWikiId, contextStore, xcontext);\n\n        // Author\n        restoreAuthor(contextStore, xcontext);\n\n        // Request\n        this.requestInitializer.restoreRequest(storedWikiId, contextStore, xcontext);\n    }", "signature": "void restore(Map<String, Serializable> contextStore)", "full_signature": "@Override public void restore(Map<String, Serializable> contextStore)", "class_method_signature": "XWikiContextContextStore.restore(Map<String, Serializable> contextStore)", "testcase": false, "constructor": false, "invocations": ["get", "containsKey", "get", "setWikiId", "containsKey", "setUserReference", "get", "containsKey", "setUserReference", "get", "setUserReference", "containsKey", "setLocale", "get", "restoreDocument", "restoreAuthor", "restoreRequest"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}