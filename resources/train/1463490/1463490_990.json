{"test_class": {"identifier": "MacroBlockSignatureVerifierTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public final MockitoComponentMockingRule<BlockSignatureVerifier> mocker =\n        new MockitoComponentMockingRule<BlockSignatureVerifier>(MacroBlockSignatureVerifier.class);", "modifier": "@Rule\n    public final", "type": "MockitoComponentMockingRule<BlockSignatureVerifier>", "declarator": "mocker =\n        new MockitoComponentMockingRule<BlockSignatureVerifier>(MacroBlockSignatureVerifier.class)", "var_name": "mocker"}, {"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "private static final Block MACRO_BLOCK = new MacroBlock(\"macro\", Collections.<String, String>emptyMap(), \"content\", false);", "modifier": "private static final", "type": "Block", "declarator": "MACRO_BLOCK = new MacroBlock(\"macro\", Collections.<String, String>emptyMap(), \"content\", false)", "var_name": "MACRO_BLOCK"}, {"original_string": "private static final Block MARKER_BLOCK = new MacroMarkerBlock(\"macro\", Collections.<String, String>emptyMap(), \"content\", Collections.<Block>emptyList(), false);", "modifier": "private static final", "type": "Block", "declarator": "MARKER_BLOCK = new MacroMarkerBlock(\"macro\", Collections.<String, String>emptyMap(), \"content\", Collections.<Block>emptyList(), false)", "var_name": "MARKER_BLOCK"}, {"original_string": "private static final byte[] DUMPED_BLOCK = \"macro\\0\\0content\\04:wiki5:space6:source\\0\".getBytes();", "modifier": "private static final", "type": "byte[]", "declarator": "DUMPED_BLOCK = \"macro\\0\\0content\\04:wiki5:space6:source\\0\".getBytes()", "var_name": "DUMPED_BLOCK"}, {"original_string": "private static final CertificateProvider CERT_PROVIDER = new ChainingCertificateProvider();", "modifier": "private static final", "type": "CertificateProvider", "declarator": "CERT_PROVIDER = new ChainingCertificateProvider()", "var_name": "CERT_PROVIDER"}, {"original_string": "private static final byte[] BLOCK_SIGNATURE = \"Signature\".getBytes();", "modifier": "private static final", "type": "byte[]", "declarator": "BLOCK_SIGNATURE = \"Signature\".getBytes()", "var_name": "BLOCK_SIGNATURE"}, {"original_string": "private static final CMSSignedDataVerified VERIFIED = mock(CMSSignedDataVerified.class);", "modifier": "private static final", "type": "CMSSignedDataVerified", "declarator": "VERIFIED = mock(CMSSignedDataVerified.class)", "var_name": "VERIFIED"}, {"original_string": "private BlockDumper dumper;", "modifier": "private", "type": "BlockDumper", "declarator": "dumper", "var_name": "dumper"}, {"original_string": "private CMSSignedDataVerifier cmsVerifier;", "modifier": "private", "type": "CMSSignedDataVerifier", "declarator": "cmsVerifier", "var_name": "cmsVerifier"}, {"original_string": "private BlockSignatureVerifier verifier;", "modifier": "private", "type": "BlockSignatureVerifier", "declarator": "verifier", "var_name": "verifier"}], "file": "xwiki-platform-core/xwiki-platform-rendering/xwiki-platform-rendering-signature/src/test/java/org/xwiki/rendering/signature/internal/MacroBlockSignatureVerifierTest.java"}, "test_case": {"identifier": "testIncompatibleBlockVerification", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIncompatibleBlockVerification() throws Exception\n    {\n        thrown.expect(IllegalArgumentException.class);\n        thrown.expectMessage(\"Unsupported block [org.xwiki.rendering.block.WordBlock].\");\n\n        assertThat(verifier.verify(BLOCK_SIGNATURE, new WordBlock(\"macro\"), CERT_PROVIDER), equalTo(VERIFIED));\n    }", "signature": "void testIncompatibleBlockVerification()", "full_signature": "@Test public void testIncompatibleBlockVerification()", "class_method_signature": "MacroBlockSignatureVerifierTest.testIncompatibleBlockVerification()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "assertThat", "verify", "equalTo"]}, "focal_class": {"identifier": "MacroBlockSignatureVerifier", "superclass": "", "interfaces": "implements BlockSignatureVerifier", "fields": [{"original_string": "@Inject\n    @Named(\"macro\")\n    private BlockDumper dumper;", "modifier": "@Inject\n    @Named(\"macro\")\n    private", "type": "BlockDumper", "declarator": "dumper", "var_name": "dumper"}, {"original_string": "@Inject\n    private CMSSignedDataVerifier verifier;", "modifier": "@Inject\n    private", "type": "CMSSignedDataVerifier", "declarator": "verifier", "var_name": "verifier"}], "methods": [{"identifier": "verify", "parameters": "(byte[] signature, Block block, CertificateProvider certificateProvider)", "modifiers": "@Override public", "return": "CMSSignedDataVerified", "signature": "CMSSignedDataVerified verify(byte[] signature, Block block, CertificateProvider certificateProvider)", "full_signature": "@Override public CMSSignedDataVerified verify(byte[] signature, Block block, CertificateProvider certificateProvider)", "class_method_signature": "MacroBlockSignatureVerifier.verify(byte[] signature, Block block, CertificateProvider certificateProvider)", "testcase": false, "constructor": false}, {"identifier": "isSupported", "parameters": "(Block block)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSupported(Block block)", "full_signature": "@Override public boolean isSupported(Block block)", "class_method_signature": "MacroBlockSignatureVerifier.isSupported(Block block)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-rendering/xwiki-platform-rendering-signature/src/main/java/org/xwiki/rendering/signature/internal/MacroBlockSignatureVerifier.java"}, "focal_method": {"identifier": "verify", "parameters": "(byte[] signature, Block block, CertificateProvider certificateProvider)", "modifiers": "@Override public", "return": "CMSSignedDataVerified", "body": "@Override\n    public CMSSignedDataVerified verify(byte[] signature, Block block, CertificateProvider certificateProvider)\n        throws GeneralSecurityException, IOException\n    {\n        if (!isSupported(block)) {\n            throw new IllegalArgumentException(\"Unsupported block [\" + block.getClass().getName() + \"].\");\n        }\n\n        return verifier.verify(signature, dumper.dump(block), certificateProvider);\n    }", "signature": "CMSSignedDataVerified verify(byte[] signature, Block block, CertificateProvider certificateProvider)", "full_signature": "@Override public CMSSignedDataVerified verify(byte[] signature, Block block, CertificateProvider certificateProvider)", "class_method_signature": "MacroBlockSignatureVerifier.verify(byte[] signature, Block block, CertificateProvider certificateProvider)", "testcase": false, "constructor": false, "invocations": ["isSupported", "getName", "getClass", "verify", "dump"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}