{"test_class": {"identifier": "DocumentSelectionResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMockComponents\n    private DocumentSelectionResolver documentSelectionResolver;", "modifier": "@InjectMockComponents\n    private", "type": "DocumentSelectionResolver", "declarator": "documentSelectionResolver", "var_name": "documentSelectionResolver"}, {"original_string": "@MockComponent\n    private Provider<XWikiContext> xcontextProvider;", "modifier": "@MockComponent\n    private", "type": "Provider<XWikiContext>", "declarator": "xcontextProvider", "var_name": "xcontextProvider"}, {"original_string": "@MockComponent\n    @Named(\"context\")\n    private Provider<ComponentManager> contextComponentManagerProvider;", "modifier": "@MockComponent\n    @Named(\"context\")\n    private", "type": "Provider<ComponentManager>", "declarator": "contextComponentManagerProvider", "var_name": "contextComponentManagerProvider"}, {"original_string": "@MockComponent\n    private QueryManager queryManager;", "modifier": "@MockComponent\n    private", "type": "QueryManager", "declarator": "queryManager", "var_name": "queryManager"}, {"original_string": "@MockComponent\n    @Named(\"document\")\n    private QueryFilter documentQueryFilter;", "modifier": "@MockComponent\n    @Named(\"document\")\n    private", "type": "QueryFilter", "declarator": "documentQueryFilter", "var_name": "documentQueryFilter"}, {"original_string": "@MockComponent\n    @Named(\"current\")\n    private DocumentReferenceResolver<String> currentDocumentReferenceResolver;", "modifier": "@MockComponent\n    @Named(\"current\")\n    private", "type": "DocumentReferenceResolver<String>", "declarator": "currentDocumentReferenceResolver", "var_name": "currentDocumentReferenceResolver"}, {"original_string": "@MockComponent\n    @Named(\"local\")\n    private EntityReferenceSerializer<String> localEntityReferenceSerializer;", "modifier": "@MockComponent\n    @Named(\"local\")\n    private", "type": "EntityReferenceSerializer<String>", "declarator": "localEntityReferenceSerializer", "var_name": "localEntityReferenceSerializer"}, {"original_string": "@MockComponent\n    @Named(\"test\")\n    EntityTreeFilter filter;", "modifier": "@MockComponent\n    @Named(\"test\")", "type": "EntityTreeFilter", "declarator": "filter", "var_name": "filter"}, {"original_string": "private XWikiRequest request = mock(XWikiRequest.class);", "modifier": "private", "type": "XWikiRequest", "declarator": "request = mock(XWikiRequest.class)", "var_name": "request"}], "file": "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/internal/export/DocumentSelectionResolverTest.java"}, "test_case": {"identifier": "isSelectionSpecified", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isSelectionSpecified()\n    {\n        Map<String, String[]> parameterMap = new HashMap<>();\n        when(this.request.getParameterMap()).thenReturn(parameterMap);\n\n        assertFalse(this.documentSelectionResolver.isSelectionSpecified());\n\n        parameterMap.put(\"pages\", new String[] {\"\"});\n        assertTrue(this.documentSelectionResolver.isSelectionSpecified());\n\n        parameterMap.remove(\"pages\");\n        parameterMap.put(\"filter\", new String[] {\"\"});\n        assertFalse(this.documentSelectionResolver.isSelectionSpecified());\n\n        parameterMap.put(\"filter\", new String[] {\"test\"});\n        assertTrue(this.documentSelectionResolver.isSelectionSpecified());\n    }", "signature": "void isSelectionSpecified()", "full_signature": "@Test public void isSelectionSpecified()", "class_method_signature": "DocumentSelectionResolverTest.isSelectionSpecified()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getParameterMap", "assertFalse", "isSelectionSpecified", "put", "assertTrue", "isSelectionSpecified", "remove", "put", "assertFalse", "isSelectionSpecified", "put", "assertTrue", "isSelectionSpecified"]}, "focal_class": {"identifier": "DocumentSelectionResolver", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PAGE_SEPARATOR = \"&\";", "modifier": "private static final", "type": "String", "declarator": "PAGE_SEPARATOR = \"&\"", "var_name": "PAGE_SEPARATOR"}, {"original_string": "private static final String ANY_CHARS = \"%\";", "modifier": "private static final", "type": "String", "declarator": "ANY_CHARS = \"%\"", "var_name": "ANY_CHARS"}, {"original_string": "private static final String REQUEST_PARAMETER_PAGES = \"pages\";", "modifier": "private static final", "type": "String", "declarator": "REQUEST_PARAMETER_PAGES = \"pages\"", "var_name": "REQUEST_PARAMETER_PAGES"}, {"original_string": "private static final String REQUEST_PARAMETER_FILTER = \"filter\";", "modifier": "private static final", "type": "String", "declarator": "REQUEST_PARAMETER_FILTER = \"filter\"", "var_name": "REQUEST_PARAMETER_FILTER"}, {"original_string": "@Inject\n    private Logger logger;", "modifier": "@Inject\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "@Inject\n    private Provider<XWikiContext> xcontextProvider;", "modifier": "@Inject\n    private", "type": "Provider<XWikiContext>", "declarator": "xcontextProvider", "var_name": "xcontextProvider"}, {"original_string": "@Inject\n    @Named(\"context\")\n    private Provider<ComponentManager> contextComponentManagerProvider;", "modifier": "@Inject\n    @Named(\"context\")\n    private", "type": "Provider<ComponentManager>", "declarator": "contextComponentManagerProvider", "var_name": "contextComponentManagerProvider"}, {"original_string": "@Inject\n    private QueryManager queryManager;", "modifier": "@Inject\n    private", "type": "QueryManager", "declarator": "queryManager", "var_name": "queryManager"}, {"original_string": "@Inject\n    @Named(\"document\")\n    private QueryFilter documentQueryFilter;", "modifier": "@Inject\n    @Named(\"document\")\n    private", "type": "QueryFilter", "declarator": "documentQueryFilter", "var_name": "documentQueryFilter"}, {"original_string": "@Inject\n    @Named(\"current\")\n    private DocumentReferenceResolver<String> currentDocumentReferenceResolver;", "modifier": "@Inject\n    @Named(\"current\")\n    private", "type": "DocumentReferenceResolver<String>", "declarator": "currentDocumentReferenceResolver", "var_name": "currentDocumentReferenceResolver"}, {"original_string": "@Inject\n    @Named(\"local\")\n    private EntityReferenceSerializer<String> localEntityReferenceSerializer;", "modifier": "@Inject\n    @Named(\"local\")\n    private", "type": "EntityReferenceSerializer<String>", "declarator": "localEntityReferenceSerializer", "var_name": "localEntityReferenceSerializer"}], "methods": [{"identifier": "isSelectionSpecified", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSelectionSpecified()", "full_signature": "public boolean isSelectionSpecified()", "class_method_signature": "DocumentSelectionResolver.isSelectionSpecified()", "testcase": false, "constructor": false}, {"identifier": "getSelectedDocuments", "parameters": "()", "modifiers": "public", "return": "Collection<DocumentReference>", "signature": "Collection<DocumentReference> getSelectedDocuments()", "full_signature": "public Collection<DocumentReference> getSelectedDocuments()", "class_method_signature": "DocumentSelectionResolver.getSelectedDocuments()", "testcase": false, "constructor": false}, {"identifier": "isExactMatch", "parameters": "(DocumentReference documentReference)", "modifiers": "private", "return": "boolean", "signature": "boolean isExactMatch(DocumentReference documentReference)", "full_signature": "private boolean isExactMatch(DocumentReference documentReference)", "class_method_signature": "DocumentSelectionResolver.isExactMatch(DocumentReference documentReference)", "testcase": false, "constructor": false}, {"identifier": "getSelectedDocuments", "parameters": "(\n        Map<DocumentReference, Collection<DocumentReference>> selection)", "modifiers": "private", "return": "Collection<DocumentReference>", "signature": "Collection<DocumentReference> getSelectedDocuments(\n        Map<DocumentReference, Collection<DocumentReference>> selection)", "full_signature": "private Collection<DocumentReference> getSelectedDocuments(\n        Map<DocumentReference, Collection<DocumentReference>> selection)", "class_method_signature": "DocumentSelectionResolver.getSelectedDocuments(\n        Map<DocumentReference, Collection<DocumentReference>> selection)", "testcase": false, "constructor": false}, {"identifier": "buildQueriesByWiki", "parameters": "(Map<DocumentReference, Collection<DocumentReference>> selection)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "Map<String, Object[]>", "signature": "Map<String, Object[]> buildQueriesByWiki(Map<DocumentReference, Collection<DocumentReference>> selection)", "full_signature": "@SuppressWarnings(\"unchecked\") private Map<String, Object[]> buildQueriesByWiki(Map<DocumentReference, Collection<DocumentReference>> selection)", "class_method_signature": "DocumentSelectionResolver.buildQueriesByWiki(Map<DocumentReference, Collection<DocumentReference>> selection)", "testcase": false, "constructor": false}, {"identifier": "extendQuery", "parameters": "(DocumentReference includedDocumentReference,\n        Collection<DocumentReference> excludedDocumentReferences, List<Object> parameters)", "modifiers": "private", "return": "List<String>", "signature": "List<String> extendQuery(DocumentReference includedDocumentReference,\n        Collection<DocumentReference> excludedDocumentReferences, List<Object> parameters)", "full_signature": "private List<String> extendQuery(DocumentReference includedDocumentReference,\n        Collection<DocumentReference> excludedDocumentReferences, List<Object> parameters)", "class_method_signature": "DocumentSelectionResolver.extendQuery(DocumentReference includedDocumentReference,\n        Collection<DocumentReference> excludedDocumentReferences, List<Object> parameters)", "testcase": false, "constructor": false}, {"identifier": "executeQuery", "parameters": "(Map.Entry<String, Object[]> entry)", "modifiers": "private", "return": "Set<DocumentReference>", "signature": "Set<DocumentReference> executeQuery(Map.Entry<String, Object[]> entry)", "full_signature": "private Set<DocumentReference> executeQuery(Map.Entry<String, Object[]> entry)", "class_method_signature": "DocumentSelectionResolver.executeQuery(Map.Entry<String, Object[]> entry)", "testcase": false, "constructor": false}, {"identifier": "getSelectionFromRequest", "parameters": "()", "modifiers": "private", "return": "Map<DocumentReference, Collection<DocumentReference>>", "signature": "Map<DocumentReference, Collection<DocumentReference>> getSelectionFromRequest()", "full_signature": "private Map<DocumentReference, Collection<DocumentReference>> getSelectionFromRequest()", "class_method_signature": "DocumentSelectionResolver.getSelectionFromRequest()", "testcase": false, "constructor": false}, {"identifier": "decodeExcludes", "parameters": "(String encodedString)", "modifiers": "private", "return": "Collection<DocumentReference>", "signature": "Collection<DocumentReference> decodeExcludes(String encodedString)", "full_signature": "private Collection<DocumentReference> decodeExcludes(String encodedString)", "class_method_signature": "DocumentSelectionResolver.decodeExcludes(String encodedString)", "testcase": false, "constructor": false}, {"identifier": "getFilterFromRequest", "parameters": "()", "modifiers": "private", "return": "EntityTreeFilter", "signature": "EntityTreeFilter getFilterFromRequest()", "full_signature": "private EntityTreeFilter getFilterFromRequest()", "class_method_signature": "DocumentSelectionResolver.getFilterFromRequest()", "testcase": false, "constructor": false}, {"identifier": "extendSelection", "parameters": "(Map<DocumentReference, Collection<DocumentReference>> selection,\n        EntityTreeFilter filter)", "modifiers": "private", "return": "void", "signature": "void extendSelection(Map<DocumentReference, Collection<DocumentReference>> selection,\n        EntityTreeFilter filter)", "full_signature": "private void extendSelection(Map<DocumentReference, Collection<DocumentReference>> selection,\n        EntityTreeFilter filter)", "class_method_signature": "DocumentSelectionResolver.extendSelection(Map<DocumentReference, Collection<DocumentReference>> selection,\n        EntityTreeFilter filter)", "testcase": false, "constructor": false}, {"identifier": "extendExclusions", "parameters": "(DocumentReference includedDocumentReference,\n        Collection<DocumentReference> excludedDocumentReferences, EntityTreeFilter filter)", "modifiers": "private", "return": "void", "signature": "void extendExclusions(DocumentReference includedDocumentReference,\n        Collection<DocumentReference> excludedDocumentReferences, EntityTreeFilter filter)", "full_signature": "private void extendExclusions(DocumentReference includedDocumentReference,\n        Collection<DocumentReference> excludedDocumentReferences, EntityTreeFilter filter)", "class_method_signature": "DocumentSelectionResolver.extendExclusions(DocumentReference includedDocumentReference,\n        Collection<DocumentReference> excludedDocumentReferences, EntityTreeFilter filter)", "testcase": false, "constructor": false}, {"identifier": "getDocumentExclusions", "parameters": "(Set<EntityReference> exclusions)", "modifiers": "private", "return": "Set<DocumentReference>", "signature": "Set<DocumentReference> getDocumentExclusions(Set<EntityReference> exclusions)", "full_signature": "private Set<DocumentReference> getDocumentExclusions(Set<EntityReference> exclusions)", "class_method_signature": "DocumentSelectionResolver.getDocumentExclusions(Set<EntityReference> exclusions)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/internal/export/DocumentSelectionResolver.java"}, "focal_method": {"identifier": "isSelectionSpecified", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isSelectionSpecified()\n    {\n        Map<String, String[]> parameters = this.xcontextProvider.get().getRequest().getParameterMap();\n        return parameters.containsKey(REQUEST_PARAMETER_PAGES)\n            || !parameters.getOrDefault(REQUEST_PARAMETER_FILTER, new String[] {\"\"})[0].isEmpty();\n    }", "signature": "boolean isSelectionSpecified()", "full_signature": "public boolean isSelectionSpecified()", "class_method_signature": "DocumentSelectionResolver.isSelectionSpecified()", "testcase": false, "constructor": false, "invocations": ["getParameterMap", "getRequest", "get", "containsKey", "isEmpty", "getOrDefault"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}