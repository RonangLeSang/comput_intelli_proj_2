{"test_class": {"identifier": "ColorThemeListenerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public MockitoComponentMockingRule<ColorThemeListener> mocker =\n            new MockitoComponentMockingRule<>(ColorThemeListener.class);", "modifier": "@Rule\n    public", "type": "MockitoComponentMockingRule<ColorThemeListener>", "declarator": "mocker =\n            new MockitoComponentMockingRule<>(ColorThemeListener.class)", "var_name": "mocker"}, {"original_string": "private LESSResourcesCache lessResourcesCache;", "modifier": "private", "type": "LESSResourcesCache", "declarator": "lessResourcesCache", "var_name": "lessResourcesCache"}, {"original_string": "private ColorThemeCache colorThemeCache;", "modifier": "private", "type": "ColorThemeCache", "declarator": "colorThemeCache", "var_name": "colorThemeCache"}, {"original_string": "private ColorThemeReferenceFactory colorThemeReferenceFactory;", "modifier": "private", "type": "ColorThemeReferenceFactory", "declarator": "colorThemeReferenceFactory", "var_name": "colorThemeReferenceFactory"}], "file": "xwiki-platform-core/xwiki-platform-lesscss/xwiki-platform-lesscss-default/src/test/java/org/xwiki/lesscss/internal/listeners/ColorThemeListenerTest.java"}, "test_case": {"identifier": "onEventWhenFlamingoThemeChanged", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void onEventWhenFlamingoThemeChanged() throws Exception\n    {\n        // Mocks\n        Event event = mock(Event.class);\n        XWikiDocument doc = mock(XWikiDocument.class);\n        Object data = new Object();\n\n        EntityReference classReference = new LocalDocumentReference(\"FlamingoThemesCode\", \"ThemeClass\");\n        List<BaseObject> objects = new ArrayList<>();\n        BaseObject object = mock(BaseObject.class);\n        objects.add(object);\n        when(doc.getXObjects(classReference)).thenReturn(objects);\n\n        DocumentReference documentReference = new DocumentReference(\"wiki\", \"space\", \"page\");\n        when(doc.getDocumentReference()).thenReturn(documentReference);\n\n        ColorThemeReference colorThemeReference = new DocumentColorThemeReference(documentReference, null);\n        when(colorThemeReferenceFactory.createReference(eq(documentReference))).thenReturn(colorThemeReference);\n\n        // Test\n        mocker.getComponentUnderTest().onEvent(event, doc, data);\n\n        // Verify\n        verify(lessResourcesCache).clearFromColorTheme(colorThemeReference);\n        verify(colorThemeCache).clearFromColorTheme(colorThemeReference);\n    }", "signature": "void onEventWhenFlamingoThemeChanged()", "full_signature": "@Test public void onEventWhenFlamingoThemeChanged()", "class_method_signature": "ColorThemeListenerTest.onEventWhenFlamingoThemeChanged()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "mock", "add", "thenReturn", "when", "getXObjects", "thenReturn", "when", "getDocumentReference", "thenReturn", "when", "createReference", "eq", "onEvent", "getComponentUnderTest", "clearFromColorTheme", "verify", "clearFromColorTheme", "verify"]}, "focal_class": {"identifier": "ColorThemeListener", "superclass": "", "interfaces": "implements EventListener", "fields": [{"original_string": "private static final LocalDocumentReference COLOR_THEME_CLASS =\n            new LocalDocumentReference(\"ColorThemes\", \"ColorThemeClass\");", "modifier": "private static final", "type": "LocalDocumentReference", "declarator": "COLOR_THEME_CLASS =\n            new LocalDocumentReference(\"ColorThemes\", \"ColorThemeClass\")", "var_name": "COLOR_THEME_CLASS"}, {"original_string": "private static final LocalDocumentReference FLAMINGO_THEME_CLASS =\n            new LocalDocumentReference(\"FlamingoThemesCode\", \"ThemeClass\");", "modifier": "private static final", "type": "LocalDocumentReference", "declarator": "FLAMINGO_THEME_CLASS =\n            new LocalDocumentReference(\"FlamingoThemesCode\", \"ThemeClass\")", "var_name": "FLAMINGO_THEME_CLASS"}, {"original_string": "@Inject\n    private LESSResourcesCache lessResourcesCache;", "modifier": "@Inject\n    private", "type": "LESSResourcesCache", "declarator": "lessResourcesCache", "var_name": "lessResourcesCache"}, {"original_string": "@Inject\n    private ColorThemeCache colorThemeCache;", "modifier": "@Inject\n    private", "type": "ColorThemeCache", "declarator": "colorThemeCache", "var_name": "colorThemeCache"}, {"original_string": "@Inject\n    private ColorThemeReferenceFactory colorThemeReferenceFactory;", "modifier": "@Inject\n    private", "type": "ColorThemeReferenceFactory", "declarator": "colorThemeReferenceFactory", "var_name": "colorThemeReferenceFactory"}], "methods": [{"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "ColorThemeListener.getName()", "testcase": false, "constructor": false}, {"identifier": "getEvents", "parameters": "()", "modifiers": "@Override public", "return": "List<Event>", "signature": "List<Event> getEvents()", "full_signature": "@Override public List<Event> getEvents()", "class_method_signature": "ColorThemeListener.getEvents()", "testcase": false, "constructor": false}, {"identifier": "onEvent", "parameters": "(Event event, Object source, Object data)", "modifiers": "@Override public", "return": "void", "signature": "void onEvent(Event event, Object source, Object data)", "full_signature": "@Override public void onEvent(Event event, Object source, Object data)", "class_method_signature": "ColorThemeListener.onEvent(Event event, Object source, Object data)", "testcase": false, "constructor": false}, {"identifier": "clearCacheFromColorTheme", "parameters": "(XWikiDocument document)", "modifiers": "private", "return": "void", "signature": "void clearCacheFromColorTheme(XWikiDocument document)", "full_signature": "private void clearCacheFromColorTheme(XWikiDocument document)", "class_method_signature": "ColorThemeListener.clearCacheFromColorTheme(XWikiDocument document)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-lesscss/xwiki-platform-lesscss-default/src/main/java/org/xwiki/lesscss/internal/listeners/ColorThemeListener.java"}, "focal_method": {"identifier": "onEvent", "parameters": "(Event event, Object source, Object data)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onEvent(Event event, Object source, Object data)\n    {\n        XWikiDocument document = (XWikiDocument) source;\n\n        List<BaseObject> flamingoThemeObjects = document.getXObjects(FLAMINGO_THEME_CLASS);\n        if (flamingoThemeObjects != null && !flamingoThemeObjects.isEmpty()) {\n            clearCacheFromColorTheme(document);\n            return;\n        }\n\n        List<BaseObject> colorThemeObjects = document.getXObjects(COLOR_THEME_CLASS);\n        if (colorThemeObjects != null && !colorThemeObjects.isEmpty()) {\n            clearCacheFromColorTheme(document);\n            return;\n        }\n    }", "signature": "void onEvent(Event event, Object source, Object data)", "full_signature": "@Override public void onEvent(Event event, Object source, Object data)", "class_method_signature": "ColorThemeListener.onEvent(Event event, Object source, Object data)", "testcase": false, "constructor": false, "invocations": ["getXObjects", "isEmpty", "clearCacheFromColorTheme", "getXObjects", "isEmpty", "clearCacheFromColorTheme"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}