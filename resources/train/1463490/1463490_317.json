{"test_class": {"identifier": "ModelFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_STRING_FIELD = \"textValue\";", "modifier": "private static final", "type": "String", "declarator": "TEST_STRING_FIELD = \"textValue\"", "var_name": "TEST_STRING_FIELD"}, {"original_string": "private static final String TEST_STRING_VALUE = \"abcd\";", "modifier": "private static final", "type": "String", "declarator": "TEST_STRING_VALUE = \"abcd\"", "var_name": "TEST_STRING_VALUE"}, {"original_string": "private static final String TEST_PASSWORD_FIELD = \"passwordValue\";", "modifier": "private static final", "type": "String", "declarator": "TEST_PASSWORD_FIELD = \"passwordValue\"", "var_name": "TEST_PASSWORD_FIELD"}, {"original_string": "private static final String TEST_PASSWORD_VALUE = \"secret\";", "modifier": "private static final", "type": "String", "declarator": "TEST_PASSWORD_VALUE = \"secret\"", "var_name": "TEST_PASSWORD_VALUE"}, {"original_string": "@InjectComponentManager\n    private ComponentManager componentManager;", "modifier": "@InjectComponentManager\n    private", "type": "ComponentManager", "declarator": "componentManager", "var_name": "componentManager"}, {"original_string": "@MockComponent\n    private ContextualAuthorizationManager authorizationManager;", "modifier": "@MockComponent\n    private", "type": "ContextualAuthorizationManager", "declarator": "authorizationManager", "var_name": "authorizationManager"}, {"original_string": "@MockComponent\n    private SpaceReferenceResolver<String> resolver;", "modifier": "@MockComponent\n    private", "type": "SpaceReferenceResolver<String>", "declarator": "resolver", "var_name": "resolver"}, {"original_string": "@MockComponent\n    private WikiDescriptorManager wikiDescriptorManager;", "modifier": "@MockComponent\n    private", "type": "WikiDescriptorManager", "declarator": "wikiDescriptorManager", "var_name": "wikiDescriptorManager"}, {"original_string": "@MockComponent\n    private EntityReferenceSerializer<String> defaultEntityReferenceSerializer;", "modifier": "@MockComponent\n    private", "type": "EntityReferenceSerializer<String>", "declarator": "defaultEntityReferenceSerializer", "var_name": "defaultEntityReferenceSerializer"}, {"original_string": "@InjectMockComponents\n    private ModelFactory modelFactory;", "modifier": "@InjectMockComponents\n    private", "type": "ModelFactory", "declarator": "modelFactory", "var_name": "modelFactory"}, {"original_string": "@InjectMockitoOldcore\n    private MockitoOldcore oldCore;", "modifier": "@InjectMockitoOldcore\n    private", "type": "MockitoOldcore", "declarator": "oldCore", "var_name": "oldCore"}, {"original_string": "private XWikiContext xcontext;", "modifier": "private", "type": "XWikiContext", "declarator": "xcontext", "var_name": "xcontext"}, {"original_string": "@Mock\n    private XWiki xwiki;", "modifier": "@Mock\n    private", "type": "XWiki", "declarator": "xwiki", "var_name": "xwiki"}, {"original_string": "private URI baseURI;", "modifier": "private", "type": "URI", "declarator": "baseURI", "var_name": "baseURI"}, {"original_string": "private Document testDocument;", "modifier": "private", "type": "Document", "declarator": "testDocument", "var_name": "testDocument"}], "file": "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/test/java/org/xwiki/rest/internal/ModelFactoryTest.java"}, "test_case": {"identifier": "toRestHierarchyFromDocumentWithPrettyNames", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toRestHierarchyFromDocumentWithPrettyNames() throws Exception\n    {\n        DocumentReference documentReference = new DocumentReference(\"dev\", \"API\", \"WebHome\");\n        XWikiDocument document = mock(XWikiDocument.class, \"en\");\n        when(this.xwiki.getDocument((EntityReference) documentReference, this.xcontext)).thenReturn(document);\n        when(this.xwiki.getDocument(documentReference.getParent(), this.xcontext)).thenReturn(document);\n\n        XWikiDocument translatedDocument = mock(XWikiDocument.class, \"fr\");\n        when(document.getTranslatedDocument(this.xcontext)).thenReturn(translatedDocument);\n        when(translatedDocument.getRenderedTitle(Syntax.PLAIN_1_0, this.xcontext)).thenReturn(\"API Title\");\n\n        DocumentReference documentReferenceWithLocale = new DocumentReference(documentReference, Locale.FRENCH);\n        when(translatedDocument.getDocumentReferenceWithLocale()).thenReturn(documentReferenceWithLocale);\n        when(this.xwiki.getURL(documentReferenceWithLocale, this.xcontext)).thenReturn(\"tdoc URL\");\n\n        WikiDescriptor wikiDescriptor = new WikiDescriptor(\"dev\", \"dev\");\n        wikiDescriptor.setPrettyName(\"Development Wiki\");\n        when(this.wikiDescriptorManager.getById(\"dev\")).thenReturn(wikiDescriptor);\n\n        Hierarchy hierarchy = this.modelFactory.toRestHierarchy(documentReference, true);\n\n        assertEquals(3, hierarchy.getItems().size());\n\n        HierarchyItem item = hierarchy.getItems().get(0);\n        assertEquals(\"Development Wiki\", item.getLabel());\n\n        item = hierarchy.getItems().get(1);\n        assertEquals(\"API Title\", item.getLabel());\n        assertEquals(\"tdoc URL\", item.getUrl());\n\n        item = hierarchy.getItems().get(2);\n        assertEquals(\"API Title\", item.getLabel());\n        assertEquals(\"tdoc URL\", item.getUrl());\n    }", "signature": "void toRestHierarchyFromDocumentWithPrettyNames()", "full_signature": "@Test public void toRestHierarchyFromDocumentWithPrettyNames()", "class_method_signature": "ModelFactoryTest.toRestHierarchyFromDocumentWithPrettyNames()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getDocument", "thenReturn", "when", "getDocument", "getParent", "mock", "thenReturn", "when", "getTranslatedDocument", "thenReturn", "when", "getRenderedTitle", "thenReturn", "when", "getDocumentReferenceWithLocale", "thenReturn", "when", "getURL", "setPrettyName", "thenReturn", "when", "getById", "toRestHierarchy", "assertEquals", "size", "getItems", "get", "getItems", "assertEquals", "getLabel", "get", "getItems", "assertEquals", "getLabel", "assertEquals", "getUrl", "get", "getItems", "assertEquals", "getLabel", "assertEquals", "getUrl"]}, "focal_class": {"identifier": "ModelFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PASSWORD_TYPE = \"Password\";", "modifier": "private static final", "type": "String", "declarator": "PASSWORD_TYPE = \"Password\"", "var_name": "PASSWORD_TYPE"}, {"original_string": "private final ObjectFactory objectFactory;", "modifier": "private final", "type": "ObjectFactory", "declarator": "objectFactory", "var_name": "objectFactory"}, {"original_string": "@Inject\n    private Provider<XWikiContext> xcontextProvider;", "modifier": "@Inject\n    private", "type": "Provider<XWikiContext>", "declarator": "xcontextProvider", "var_name": "xcontextProvider"}, {"original_string": "@Inject\n    private EntityReferenceSerializer<String> serializer;", "modifier": "@Inject\n    private", "type": "EntityReferenceSerializer<String>", "declarator": "serializer", "var_name": "serializer"}, {"original_string": "@Inject\n    private JAXBConverter jaxbConverter;", "modifier": "@Inject\n    private", "type": "JAXBConverter", "declarator": "jaxbConverter", "var_name": "jaxbConverter"}, {"original_string": "@Inject\n    private Provider<ContextualAuthorizationManager> authorizationManagerProvider;", "modifier": "@Inject\n    private", "type": "Provider<ContextualAuthorizationManager>", "declarator": "authorizationManagerProvider", "var_name": "authorizationManagerProvider"}, {"original_string": "@Inject\n    private Logger logger;", "modifier": "@Inject\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "@Inject\n    private EntityReferenceSerializer<String> defaultEntityReferenceSerializer;", "modifier": "@Inject\n    private", "type": "EntityReferenceSerializer<String>", "declarator": "defaultEntityReferenceSerializer", "var_name": "defaultEntityReferenceSerializer"}, {"original_string": "@Inject\n    private WikiDescriptorManager wikiDescriptorManager;", "modifier": "@Inject\n    private", "type": "WikiDescriptorManager", "declarator": "wikiDescriptorManager", "var_name": "wikiDescriptorManager"}], "methods": [{"identifier": "ModelFactory", "parameters": "()", "modifiers": "public", "return": "", "signature": " ModelFactory()", "full_signature": "public  ModelFactory()", "class_method_signature": "ModelFactory.ModelFactory()", "testcase": false, "constructor": true}, {"identifier": "toDocument", "parameters": "(Document doc, org.xwiki.rest.model.jaxb.Page restPage)", "modifiers": "public", "return": "boolean", "signature": "boolean toDocument(Document doc, org.xwiki.rest.model.jaxb.Page restPage)", "full_signature": "public boolean toDocument(Document doc, org.xwiki.rest.model.jaxb.Page restPage)", "class_method_signature": "ModelFactory.toDocument(Document doc, org.xwiki.rest.model.jaxb.Page restPage)", "testcase": false, "constructor": false}, {"identifier": "fillObjectSummary", "parameters": "(ObjectSummary objectSummary, Document doc, BaseObject xwikiObject,\n        Boolean withPrettyNames)", "modifiers": "private", "return": "void", "signature": "void fillObjectSummary(ObjectSummary objectSummary, Document doc, BaseObject xwikiObject,\n        Boolean withPrettyNames)", "full_signature": "private void fillObjectSummary(ObjectSummary objectSummary, Document doc, BaseObject xwikiObject,\n        Boolean withPrettyNames)", "class_method_signature": "ModelFactory.fillObjectSummary(ObjectSummary objectSummary, Document doc, BaseObject xwikiObject,\n        Boolean withPrettyNames)", "testcase": false, "constructor": false}, {"identifier": "toRestObjectSummary", "parameters": "(URI baseUri, Document doc, BaseObject xwikiObject, boolean useVersion,\n        Boolean withPrettyNames)", "modifiers": "public", "return": "ObjectSummary", "signature": "ObjectSummary toRestObjectSummary(URI baseUri, Document doc, BaseObject xwikiObject, boolean useVersion,\n        Boolean withPrettyNames)", "full_signature": "public ObjectSummary toRestObjectSummary(URI baseUri, Document doc, BaseObject xwikiObject, boolean useVersion,\n        Boolean withPrettyNames)", "class_method_signature": "ModelFactory.toRestObjectSummary(URI baseUri, Document doc, BaseObject xwikiObject, boolean useVersion,\n        Boolean withPrettyNames)", "testcase": false, "constructor": false}, {"identifier": "toObject", "parameters": "(com.xpn.xwiki.api.Object xwikiObject, org.xwiki.rest.model.jaxb.Object restObject)", "modifiers": "public", "return": "void", "signature": "void toObject(com.xpn.xwiki.api.Object xwikiObject, org.xwiki.rest.model.jaxb.Object restObject)", "full_signature": "public void toObject(com.xpn.xwiki.api.Object xwikiObject, org.xwiki.rest.model.jaxb.Object restObject)", "class_method_signature": "ModelFactory.toObject(com.xpn.xwiki.api.Object xwikiObject, org.xwiki.rest.model.jaxb.Object restObject)", "testcase": false, "constructor": false}, {"identifier": "toRestObject", "parameters": "(URI baseUri, Document doc, BaseObject xwikiObject, boolean useVersion,\n        Boolean withPrettyNames)", "modifiers": "public", "return": "Object", "signature": "Object toRestObject(URI baseUri, Document doc, BaseObject xwikiObject, boolean useVersion,\n        Boolean withPrettyNames)", "full_signature": "public Object toRestObject(URI baseUri, Document doc, BaseObject xwikiObject, boolean useVersion,\n        Boolean withPrettyNames)", "class_method_signature": "ModelFactory.toRestObject(URI baseUri, Document doc, BaseObject xwikiObject, boolean useVersion,\n        Boolean withPrettyNames)", "testcase": false, "constructor": false}, {"identifier": "getObjectLink", "parameters": "(ObjectFactory objectFactory, URI baseUri, Document doc, BaseObject xwikiObject,\n        boolean useVersion, String relation)", "modifiers": "private static", "return": "Link", "signature": "Link getObjectLink(ObjectFactory objectFactory, URI baseUri, Document doc, BaseObject xwikiObject,\n        boolean useVersion, String relation)", "full_signature": "private static Link getObjectLink(ObjectFactory objectFactory, URI baseUri, Document doc, BaseObject xwikiObject,\n        boolean useVersion, String relation)", "class_method_signature": "ModelFactory.getObjectLink(ObjectFactory objectFactory, URI baseUri, Document doc, BaseObject xwikiObject,\n        boolean useVersion, String relation)", "testcase": false, "constructor": false}, {"identifier": "toRestWiki", "parameters": "(URI baseUri, String wikiName)", "modifiers": "public", "return": "Wiki", "signature": "Wiki toRestWiki(URI baseUri, String wikiName)", "full_signature": "public Wiki toRestWiki(URI baseUri, String wikiName)", "class_method_signature": "ModelFactory.toRestWiki(URI baseUri, String wikiName)", "testcase": false, "constructor": false}, {"identifier": "toRestSpace", "parameters": "(URI baseUri, String wikiName, List<String> spaces, Document home)", "modifiers": "public", "return": "Space", "signature": "Space toRestSpace(URI baseUri, String wikiName, List<String> spaces, Document home)", "full_signature": "public Space toRestSpace(URI baseUri, String wikiName, List<String> spaces, Document home)", "class_method_signature": "ModelFactory.toRestSpace(URI baseUri, String wikiName, List<String> spaces, Document home)", "testcase": false, "constructor": false}, {"identifier": "toRestTranslations", "parameters": "(URI baseUri, Document doc)", "modifiers": "public", "return": "Translations", "signature": "Translations toRestTranslations(URI baseUri, Document doc)", "full_signature": "public Translations toRestTranslations(URI baseUri, Document doc)", "class_method_signature": "ModelFactory.toRestTranslations(URI baseUri, Document doc)", "testcase": false, "constructor": false}, {"identifier": "toRestPageSummary", "parameters": "(PageSummary pageSummary, URI baseUri, Document doc, boolean useVersion,\n        Boolean withPrettyNames)", "modifiers": "private", "return": "void", "signature": "void toRestPageSummary(PageSummary pageSummary, URI baseUri, Document doc, boolean useVersion,\n        Boolean withPrettyNames)", "full_signature": "private void toRestPageSummary(PageSummary pageSummary, URI baseUri, Document doc, boolean useVersion,\n        Boolean withPrettyNames)", "class_method_signature": "ModelFactory.toRestPageSummary(PageSummary pageSummary, URI baseUri, Document doc, boolean useVersion,\n        Boolean withPrettyNames)", "testcase": false, "constructor": false}, {"identifier": "toRestPageSummary", "parameters": "(URI baseUri, Document doc, Boolean withPrettyNames)", "modifiers": "public", "return": "PageSummary", "signature": "PageSummary toRestPageSummary(URI baseUri, Document doc, Boolean withPrettyNames)", "full_signature": "public PageSummary toRestPageSummary(URI baseUri, Document doc, Boolean withPrettyNames)", "class_method_signature": "ModelFactory.toRestPageSummary(URI baseUri, Document doc, Boolean withPrettyNames)", "testcase": false, "constructor": false}, {"identifier": "toRestPage", "parameters": "(URI baseUri, URI self, Document doc, boolean useVersion, Boolean withPrettyNames,\n        Boolean withObjects, Boolean withXClass, Boolean withAttachments)", "modifiers": "public", "return": "Page", "signature": "Page toRestPage(URI baseUri, URI self, Document doc, boolean useVersion, Boolean withPrettyNames,\n        Boolean withObjects, Boolean withXClass, Boolean withAttachments)", "full_signature": "public Page toRestPage(URI baseUri, URI self, Document doc, boolean useVersion, Boolean withPrettyNames,\n        Boolean withObjects, Boolean withXClass, Boolean withAttachments)", "class_method_signature": "ModelFactory.toRestPage(URI baseUri, URI self, Document doc, boolean useVersion, Boolean withPrettyNames,\n        Boolean withObjects, Boolean withXClass, Boolean withAttachments)", "testcase": false, "constructor": false}, {"identifier": "toRestClass", "parameters": "(URI baseUri, com.xpn.xwiki.api.Class xwikiClass)", "modifiers": "public", "return": "Class", "signature": "Class toRestClass(URI baseUri, com.xpn.xwiki.api.Class xwikiClass)", "full_signature": "public Class toRestClass(URI baseUri, com.xpn.xwiki.api.Class xwikiClass)", "class_method_signature": "ModelFactory.toRestClass(URI baseUri, com.xpn.xwiki.api.Class xwikiClass)", "testcase": false, "constructor": false}, {"identifier": "toRestAttachment", "parameters": "(URI baseUri, com.xpn.xwiki.api.Attachment xwikiAttachment,\n        Boolean withPrettyNames, boolean versionURL)", "modifiers": "public", "return": "Attachment", "signature": "Attachment toRestAttachment(URI baseUri, com.xpn.xwiki.api.Attachment xwikiAttachment,\n        Boolean withPrettyNames, boolean versionURL)", "full_signature": "public Attachment toRestAttachment(URI baseUri, com.xpn.xwiki.api.Attachment xwikiAttachment,\n        Boolean withPrettyNames, boolean versionURL)", "class_method_signature": "ModelFactory.toRestAttachment(URI baseUri, com.xpn.xwiki.api.Attachment xwikiAttachment,\n        Boolean withPrettyNames, boolean versionURL)", "testcase": false, "constructor": false}, {"identifier": "toRestAttachment", "parameters": "(URI baseUri, com.xpn.xwiki.api.Attachment xwikiAttachment,\n        String xwikiRelativeUrl, String xwikiAbsoluteUrl, Boolean withPrettyNames, boolean versionURL)", "modifiers": "public", "return": "Attachment", "signature": "Attachment toRestAttachment(URI baseUri, com.xpn.xwiki.api.Attachment xwikiAttachment,\n        String xwikiRelativeUrl, String xwikiAbsoluteUrl, Boolean withPrettyNames, boolean versionURL)", "full_signature": "public Attachment toRestAttachment(URI baseUri, com.xpn.xwiki.api.Attachment xwikiAttachment,\n        String xwikiRelativeUrl, String xwikiAbsoluteUrl, Boolean withPrettyNames, boolean versionURL)", "class_method_signature": "ModelFactory.toRestAttachment(URI baseUri, com.xpn.xwiki.api.Attachment xwikiAttachment,\n        String xwikiRelativeUrl, String xwikiAbsoluteUrl, Boolean withPrettyNames, boolean versionURL)", "testcase": false, "constructor": false}, {"identifier": "toRestHierarchy", "parameters": "(EntityReference targetEntityReference, Boolean withPrettyNames)", "modifiers": "public", "return": "Hierarchy", "signature": "Hierarchy toRestHierarchy(EntityReference targetEntityReference, Boolean withPrettyNames)", "full_signature": "public Hierarchy toRestHierarchy(EntityReference targetEntityReference, Boolean withPrettyNames)", "class_method_signature": "ModelFactory.toRestHierarchy(EntityReference targetEntityReference, Boolean withPrettyNames)", "testcase": false, "constructor": false}, {"identifier": "serializePropertyValue", "parameters": "(PropertyInterface property)", "modifiers": "private static", "return": "String", "signature": "String serializePropertyValue(PropertyInterface property)", "full_signature": "private static String serializePropertyValue(PropertyInterface property)", "class_method_signature": "ModelFactory.serializePropertyValue(PropertyInterface property)", "testcase": false, "constructor": false}, {"identifier": "serializePropertyValue", "parameters": "(PropertyInterface property,\n        com.xpn.xwiki.objects.classes.PropertyClass propertyClass, XWikiContext context)", "modifiers": "private", "return": "String", "signature": "String serializePropertyValue(PropertyInterface property,\n        com.xpn.xwiki.objects.classes.PropertyClass propertyClass, XWikiContext context)", "full_signature": "private String serializePropertyValue(PropertyInterface property,\n        com.xpn.xwiki.objects.classes.PropertyClass propertyClass, XWikiContext context)", "class_method_signature": "ModelFactory.serializePropertyValue(PropertyInterface property,\n        com.xpn.xwiki.objects.classes.PropertyClass propertyClass, XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "toRestJobRequest", "parameters": "(Request request)", "modifiers": "public", "return": "JobRequest", "signature": "JobRequest toRestJobRequest(Request request)", "full_signature": "public JobRequest toRestJobRequest(Request request)", "class_method_signature": "ModelFactory.toRestJobRequest(Request request)", "testcase": false, "constructor": false}, {"identifier": "toRestJobId", "parameters": "(List<String> id)", "modifiers": "public", "return": "JobId", "signature": "JobId toRestJobId(List<String> id)", "full_signature": "public JobId toRestJobId(List<String> id)", "class_method_signature": "ModelFactory.toRestJobId(List<String> id)", "testcase": false, "constructor": false}, {"identifier": "toRestMapEntry", "parameters": "(String key, java.lang.Object value)", "modifiers": "public", "return": "MapEntry", "signature": "MapEntry toRestMapEntry(String key, java.lang.Object value)", "full_signature": "public MapEntry toRestMapEntry(String key, java.lang.Object value)", "class_method_signature": "ModelFactory.toRestMapEntry(String key, java.lang.Object value)", "testcase": false, "constructor": false}, {"identifier": "toJobRequest", "parameters": "(JobRequest restJobRequest)", "modifiers": "public", "return": "DefaultRequest", "signature": "DefaultRequest toJobRequest(JobRequest restJobRequest)", "full_signature": "public DefaultRequest toJobRequest(JobRequest restJobRequest)", "class_method_signature": "ModelFactory.toJobRequest(JobRequest restJobRequest)", "testcase": false, "constructor": false}, {"identifier": "toRestJobStatus", "parameters": "(org.xwiki.job.event.status.JobStatus jobStatus, URI self, boolean request,\n        boolean progress, boolean log, String logFromLevel)", "modifiers": "public", "return": "JobStatus", "signature": "JobStatus toRestJobStatus(org.xwiki.job.event.status.JobStatus jobStatus, URI self, boolean request,\n        boolean progress, boolean log, String logFromLevel)", "full_signature": "public JobStatus toRestJobStatus(org.xwiki.job.event.status.JobStatus jobStatus, URI self, boolean request,\n        boolean progress, boolean log, String logFromLevel)", "class_method_signature": "ModelFactory.toRestJobStatus(org.xwiki.job.event.status.JobStatus jobStatus, URI self, boolean request,\n        boolean progress, boolean log, String logFromLevel)", "testcase": false, "constructor": false}, {"identifier": "toRestJobProgress", "parameters": "(org.xwiki.job.event.status.JobProgress progress)", "modifiers": "public", "return": "JobProgress", "signature": "JobProgress toRestJobProgress(org.xwiki.job.event.status.JobProgress progress)", "full_signature": "public JobProgress toRestJobProgress(org.xwiki.job.event.status.JobProgress progress)", "class_method_signature": "ModelFactory.toRestJobProgress(org.xwiki.job.event.status.JobProgress progress)", "testcase": false, "constructor": false}, {"identifier": "toRestJobLog", "parameters": "(LogTail logQueue, URI self, String level, String fromLevel)", "modifiers": "public", "return": "JobLog", "signature": "JobLog toRestJobLog(LogTail logQueue, URI self, String level, String fromLevel)", "full_signature": "public JobLog toRestJobLog(LogTail logQueue, URI self, String level, String fromLevel)", "class_method_signature": "ModelFactory.toRestJobLog(LogTail logQueue, URI self, String level, String fromLevel)", "testcase": false, "constructor": false}, {"identifier": "toRestJobLog", "parameters": "(Iterable<LogEvent> logs, URI self)", "modifiers": "public", "return": "JobLog", "signature": "JobLog toRestJobLog(Iterable<LogEvent> logs, URI self)", "full_signature": "public JobLog toRestJobLog(Iterable<LogEvent> logs, URI self)", "class_method_signature": "ModelFactory.toRestJobLog(Iterable<LogEvent> logs, URI self)", "testcase": false, "constructor": false}, {"identifier": "hasAccess", "parameters": "(Property restProperty)", "modifiers": "private", "return": "boolean", "signature": "boolean hasAccess(Property restProperty)", "full_signature": "private boolean hasAccess(Property restProperty)", "class_method_signature": "ModelFactory.hasAccess(Property restProperty)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/ModelFactory.java"}, "focal_method": {"identifier": "toRestHierarchy", "parameters": "(EntityReference targetEntityReference, Boolean withPrettyNames)", "modifiers": "public", "return": "Hierarchy", "body": "public Hierarchy toRestHierarchy(EntityReference targetEntityReference, Boolean withPrettyNames)\n    {\n        XWikiContext xcontext = this.xcontextProvider.get();\n        XWiki xwiki = xcontext.getWiki();\n        Hierarchy hierarchy = new Hierarchy();\n        for (EntityReference entityReference : targetEntityReference.getReversedReferenceChain()) {\n            HierarchyItem hierarchyItem = new HierarchyItem();\n            hierarchyItem.setName(entityReference.getName());\n            hierarchyItem.setLabel(entityReference.getName());\n            hierarchyItem.setType(entityReference.getType().getLowerCase());\n            hierarchyItem.setUrl(xwiki.getURL(entityReference, xcontext));\n            if (withPrettyNames) {\n                try {\n                    if (entityReference.getType() == EntityType.SPACE\n                        || entityReference.getType() == EntityType.DOCUMENT) {\n                        XWikiDocument document =\n                            xwiki.getDocument(entityReference, xcontext).getTranslatedDocument(xcontext);\n                        hierarchyItem.setLabel(document.getRenderedTitle(Syntax.PLAIN_1_0, xcontext));\n                        hierarchyItem.setUrl(xwiki.getURL(document.getDocumentReferenceWithLocale(), xcontext));\n                    } else if (entityReference.getType() == EntityType.WIKI) {\n                        WikiDescriptor wikiDescriptor = this.wikiDescriptorManager.getById(entityReference.getName());\n                        if (wikiDescriptor != null) {\n                            hierarchyItem.setLabel(wikiDescriptor.getPrettyName());\n                        }\n                    }\n                } catch (Exception e) {\n                    this.logger.warn(\n                        \"Failed to get the pretty name of entity [{}]. Continue using the entity name. Root cause is [{}].\",\n                        entityReference, ExceptionUtils.getRootCauseMessage(e));\n                }\n            }\n            hierarchy.withItems(hierarchyItem);\n        }\n        return hierarchy;\n    }", "signature": "Hierarchy toRestHierarchy(EntityReference targetEntityReference, Boolean withPrettyNames)", "full_signature": "public Hierarchy toRestHierarchy(EntityReference targetEntityReference, Boolean withPrettyNames)", "class_method_signature": "ModelFactory.toRestHierarchy(EntityReference targetEntityReference, Boolean withPrettyNames)", "testcase": false, "constructor": false, "invocations": ["get", "getWiki", "getReversedReferenceChain", "setName", "getName", "setLabel", "getName", "setType", "getLowerCase", "getType", "setUrl", "getURL", "getType", "getType", "getTranslatedDocument", "getDocument", "setLabel", "getRenderedTitle", "setUrl", "getURL", "getDocumentReferenceWithLocale", "getType", "getById", "getName", "setLabel", "getPrettyName", "warn", "getRootCauseMessage", "withItems"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}