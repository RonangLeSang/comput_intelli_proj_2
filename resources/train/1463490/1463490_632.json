{"test_class": {"identifier": "ModelValidationScriptServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_NAME = \"foo\";", "modifier": "private static final", "type": "String", "declarator": "TEST_NAME = \"foo\"", "var_name": "TEST_NAME"}, {"original_string": "private static final String HINT = TEST_NAME;", "modifier": "private static final", "type": "String", "declarator": "HINT = TEST_NAME", "var_name": "HINT"}, {"original_string": "private static final String TRANSFORMED_NAME = \"bar\";", "modifier": "private static final", "type": "String", "declarator": "TRANSFORMED_NAME = \"bar\"", "var_name": "TRANSFORMED_NAME"}, {"original_string": "@InjectMockComponents\n    private ModelValidationScriptService scriptService;", "modifier": "@InjectMockComponents\n    private", "type": "ModelValidationScriptService", "declarator": "scriptService", "var_name": "scriptService"}, {"original_string": "@MockComponent\n    private ContextualAuthorizationManager authorizationManager;", "modifier": "@MockComponent\n    private", "type": "ContextualAuthorizationManager", "declarator": "authorizationManager", "var_name": "authorizationManager"}, {"original_string": "@MockComponent\n    private EntityNameValidationManager nameStrategyManager;", "modifier": "@MockComponent\n    private", "type": "EntityNameValidationManager", "declarator": "nameStrategyManager", "var_name": "nameStrategyManager"}, {"original_string": "@MockComponent\n    private EntityNameValidationConfiguration configuration;", "modifier": "@MockComponent\n    private", "type": "EntityNameValidationConfiguration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "@MockComponent\n    private ReplaceCharacterEntityNameValidationConfiguration replaceCharacterEntityNameValidationConfiguration;", "modifier": "@MockComponent\n    private", "type": "ReplaceCharacterEntityNameValidationConfiguration", "declarator": "replaceCharacterEntityNameValidationConfiguration", "var_name": "replaceCharacterEntityNameValidationConfiguration"}, {"original_string": "@MockComponent\n    private EntityNameValidation nameStrategy;", "modifier": "@MockComponent\n    private", "type": "EntityNameValidation", "declarator": "nameStrategy", "var_name": "nameStrategy"}, {"original_string": "@Mock\n    private EntityReference entityReferenceSource;", "modifier": "@Mock\n    private", "type": "EntityReference", "declarator": "entityReferenceSource", "var_name": "entityReferenceSource"}, {"original_string": "@Mock\n    private EntityReference entityReferenceTarget;", "modifier": "@Mock\n    private", "type": "EntityReference", "declarator": "entityReferenceTarget", "var_name": "entityReferenceTarget"}], "file": "xwiki-platform-core/xwiki-platform-model/xwiki-platform-model-validation/xwiki-platform-model-validation-default/src/test/java/org/xwiki/model/validation/script/ModelValidationScriptServiceTest.java"}, "test_case": {"identifier": "getConfiguration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getConfiguration()\n    {\n        when(authorizationManager.hasAccess(Right.PROGRAM)).thenReturn(false);\n        assertNull(scriptService.getConfiguration());\n\n        when(authorizationManager.hasAccess(Right.PROGRAM)).thenReturn(true);\n        assertSame(configuration, scriptService.getConfiguration());\n    }", "signature": "void getConfiguration()", "full_signature": "@Test public void getConfiguration()", "class_method_signature": "ModelValidationScriptServiceTest.getConfiguration()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "hasAccess", "assertNull", "getConfiguration", "thenReturn", "when", "hasAccess", "assertSame", "getConfiguration"]}, "focal_class": {"identifier": "ModelValidationScriptService", "superclass": "", "interfaces": "implements ScriptService", "fields": [{"original_string": "@Inject\n    private EntityNameValidationManager entityNameValidationManager;", "modifier": "@Inject\n    private", "type": "EntityNameValidationManager", "declarator": "entityNameValidationManager", "var_name": "entityNameValidationManager"}, {"original_string": "@Inject\n    private EntityNameValidationConfiguration entityNameValidationConfiguration;", "modifier": "@Inject\n    private", "type": "EntityNameValidationConfiguration", "declarator": "entityNameValidationConfiguration", "var_name": "entityNameValidationConfiguration"}, {"original_string": "@Inject\n    private ReplaceCharacterEntityNameValidationConfiguration replaceCharacterEntityNameValidationConfiguration;", "modifier": "@Inject\n    private", "type": "ReplaceCharacterEntityNameValidationConfiguration", "declarator": "replaceCharacterEntityNameValidationConfiguration", "var_name": "replaceCharacterEntityNameValidationConfiguration"}, {"original_string": "@Inject\n    private ContextualAuthorizationManager authorizationManager;", "modifier": "@Inject\n    private", "type": "ContextualAuthorizationManager", "declarator": "authorizationManager", "var_name": "authorizationManager"}], "methods": [{"identifier": "getManager", "parameters": "()", "modifiers": "public", "return": "EntityNameValidationManager", "signature": "EntityNameValidationManager getManager()", "full_signature": "public EntityNameValidationManager getManager()", "class_method_signature": "ModelValidationScriptService.getManager()", "testcase": false, "constructor": false}, {"identifier": "getConfiguration", "parameters": "()", "modifiers": "public", "return": "EntityNameValidationConfiguration", "signature": "EntityNameValidationConfiguration getConfiguration()", "full_signature": "public EntityNameValidationConfiguration getConfiguration()", "class_method_signature": "ModelValidationScriptService.getConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getReplaceCharacterEntityNameValidationConfiguration", "parameters": "()", "modifiers": "public", "return": "ReplaceCharacterEntityNameValidationConfiguration", "signature": "ReplaceCharacterEntityNameValidationConfiguration getReplaceCharacterEntityNameValidationConfiguration()", "full_signature": "public ReplaceCharacterEntityNameValidationConfiguration getReplaceCharacterEntityNameValidationConfiguration()", "class_method_signature": "ModelValidationScriptService.getReplaceCharacterEntityNameValidationConfiguration()", "testcase": false, "constructor": false}, {"identifier": "transformName", "parameters": "(String name)", "modifiers": "public", "return": "String", "signature": "String transformName(String name)", "full_signature": "public String transformName(String name)", "class_method_signature": "ModelValidationScriptService.transformName(String name)", "testcase": false, "constructor": false}, {"identifier": "transformEntityReference", "parameters": "(EntityReference sourceEntity)", "modifiers": "public", "return": "EntityReference", "signature": "EntityReference transformEntityReference(EntityReference sourceEntity)", "full_signature": "public EntityReference transformEntityReference(EntityReference sourceEntity)", "class_method_signature": "ModelValidationScriptService.transformEntityReference(EntityReference sourceEntity)", "testcase": false, "constructor": false}, {"identifier": "transformName", "parameters": "(String name, String hint)", "modifiers": "public", "return": "String", "signature": "String transformName(String name, String hint)", "full_signature": "public String transformName(String name, String hint)", "class_method_signature": "ModelValidationScriptService.transformName(String name, String hint)", "testcase": false, "constructor": false}, {"identifier": "transformEntityReference", "parameters": "(EntityReference sourceEntity, String hint)", "modifiers": "public", "return": "EntityReference", "signature": "EntityReference transformEntityReference(EntityReference sourceEntity, String hint)", "full_signature": "public EntityReference transformEntityReference(EntityReference sourceEntity, String hint)", "class_method_signature": "ModelValidationScriptService.transformEntityReference(EntityReference sourceEntity, String hint)", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "(String name)", "modifiers": "public", "return": "boolean", "signature": "boolean isValid(String name)", "full_signature": "public boolean isValid(String name)", "class_method_signature": "ModelValidationScriptService.isValid(String name)", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "(EntityReference sourceEntity)", "modifiers": "public", "return": "boolean", "signature": "boolean isValid(EntityReference sourceEntity)", "full_signature": "public boolean isValid(EntityReference sourceEntity)", "class_method_signature": "ModelValidationScriptService.isValid(EntityReference sourceEntity)", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "(String name, String hint)", "modifiers": "public", "return": "boolean", "signature": "boolean isValid(String name, String hint)", "full_signature": "public boolean isValid(String name, String hint)", "class_method_signature": "ModelValidationScriptService.isValid(String name, String hint)", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "(EntityReference sourceEntity, String hint)", "modifiers": "public", "return": "boolean", "signature": "boolean isValid(EntityReference sourceEntity, String hint)", "full_signature": "public boolean isValid(EntityReference sourceEntity, String hint)", "class_method_signature": "ModelValidationScriptService.isValid(EntityReference sourceEntity, String hint)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-model/xwiki-platform-model-validation/xwiki-platform-model-validation-default/src/main/java/org/xwiki/model/validation/script/ModelValidationScriptService.java"}, "focal_method": {"identifier": "getConfiguration", "parameters": "()", "modifiers": "public", "return": "EntityNameValidationConfiguration", "body": "public EntityNameValidationConfiguration getConfiguration()\n    {\n        if (this.authorizationManager.hasAccess(Right.PROGRAM)) {\n            return this.entityNameValidationConfiguration;\n        } else {\n            return null;\n        }\n    }", "signature": "EntityNameValidationConfiguration getConfiguration()", "full_signature": "public EntityNameValidationConfiguration getConfiguration()", "class_method_signature": "ModelValidationScriptService.getConfiguration()", "testcase": false, "constructor": false, "invocations": ["hasAccess"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}