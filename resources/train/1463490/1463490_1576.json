{"test_class": {"identifier": "ExtensionManagerScriptServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MockitoComponentManagerRule mocker = new MockitoComponentManagerRule();", "modifier": "private", "type": "MockitoComponentManagerRule", "declarator": "mocker = new MockitoComponentManagerRule()", "var_name": "mocker"}, {"original_string": "private MockitoOldcoreRule xwikiBridge = new MockitoOldcoreRule(this.mocker);", "modifier": "private", "type": "MockitoOldcoreRule", "declarator": "xwikiBridge = new MockitoOldcoreRule(this.mocker)", "var_name": "xwikiBridge"}, {"original_string": "@Rule\n    public MockitoRepositoryUtilsRule repositoryUtil = new MockitoRepositoryUtilsRule(this.mocker, this.xwikiBridge);", "modifier": "@Rule\n    public", "type": "MockitoRepositoryUtilsRule", "declarator": "repositoryUtil = new MockitoRepositoryUtilsRule(this.mocker, this.xwikiBridge)", "var_name": "repositoryUtil"}, {"original_string": "private XWiki mockXWiki;", "modifier": "private", "type": "XWiki", "declarator": "mockXWiki", "var_name": "mockXWiki"}, {"original_string": "private Map<String, BaseClass> classes = new HashMap<String, BaseClass>();", "modifier": "private", "type": "Map<String, BaseClass>", "declarator": "classes = new HashMap<String, BaseClass>()", "var_name": "classes"}, {"original_string": "private DocumentReference contextUser;", "modifier": "private", "type": "DocumentReference", "declarator": "contextUser", "var_name": "contextUser"}, {"original_string": "private ExtensionManagerScriptService scriptService;", "modifier": "private", "type": "ExtensionManagerScriptService", "declarator": "scriptService", "var_name": "scriptService"}], "file": "xwiki-platform-core/xwiki-platform-extension/xwiki-platform-extension-script/src/test/java/org/xwiki/extension/script/ExtensionManagerScriptServiceTest.java"}, "test_case": {"identifier": "testInstallOnNamespaceWithoutProgrammingRigths", "parameters": "()", "modifiers": "@Test(expected = InstallException.class) public", "return": "void", "body": "@Test(expected = InstallException.class)\n    public void testInstallOnNamespaceWithoutProgrammingRigths() throws Throwable\n    {\n        doThrow(AccessDeniedException.class).when(this.xwikiBridge.getMockAuthorizationManager())\n            .checkAccess(Right.PROGRAM, new DocumentReference(\"xwiki\", \"XWiki\", \"ExtensionUser\"), null);\n\n        install(\"extension\", \"version\", \"namespace\");\n    }", "signature": "void testInstallOnNamespaceWithoutProgrammingRigths()", "full_signature": "@Test(expected = InstallException.class) public void testInstallOnNamespaceWithoutProgrammingRigths()", "class_method_signature": "ExtensionManagerScriptServiceTest.testInstallOnNamespaceWithoutProgrammingRigths()", "testcase": true, "constructor": false, "invocations": ["checkAccess", "when", "doThrow", "getMockAuthorizationManager", "install"]}, "focal_class": {"identifier": "ExtensionManagerScriptService", "superclass": "extends AbstractExtensionScriptService", "interfaces": "", "fields": [{"original_string": "public static final String ROLEHINT = \"extension\";", "modifier": "public static final", "type": "String", "declarator": "ROLEHINT = \"extension\"", "var_name": "ROLEHINT"}, {"original_string": "@Deprecated\n    public static final String EXTENSION_JOBID_PREFIX = ExtensionRequest.JOBID_PREFIX;", "modifier": "@Deprecated\n    public static final", "type": "String", "declarator": "EXTENSION_JOBID_PREFIX = ExtensionRequest.JOBID_PREFIX", "var_name": "EXTENSION_JOBID_PREFIX"}, {"original_string": "@Deprecated\n    public static final String EXTENSIONACTION_JOBID_PREFIX = ExtensionRequest.JOBID_ACTION_PREFIX;", "modifier": "@Deprecated\n    public static final", "type": "String", "declarator": "EXTENSIONACTION_JOBID_PREFIX = ExtensionRequest.JOBID_ACTION_PREFIX", "var_name": "EXTENSIONACTION_JOBID_PREFIX"}, {"original_string": "@Deprecated\n    public static final String EXTENSIONPLAN_JOBID_PREFIX = ExtensionRequest.JOBID_PLAN_PREFIX;", "modifier": "@Deprecated\n    public static final", "type": "String", "declarator": "EXTENSIONPLAN_JOBID_PREFIX = ExtensionRequest.JOBID_PLAN_PREFIX", "var_name": "EXTENSIONPLAN_JOBID_PREFIX"}, {"original_string": "@Inject\n    private ExtensionManager extensionManager;", "modifier": "@Inject\n    private", "type": "ExtensionManager", "declarator": "extensionManager", "var_name": "extensionManager"}, {"original_string": "@Inject\n    private ExtensionRepositoryManager repositoryManager;", "modifier": "@Inject\n    private", "type": "ExtensionRepositoryManager", "declarator": "repositoryManager", "var_name": "repositoryManager"}, {"original_string": "@Inject\n    private ScriptServiceManager scriptServiceManager;", "modifier": "@Inject\n    private", "type": "ScriptServiceManager", "declarator": "scriptServiceManager", "var_name": "scriptServiceManager"}, {"original_string": "@Inject\n    private NamespaceValidator namespaceResolver;", "modifier": "@Inject\n    private", "type": "NamespaceValidator", "declarator": "namespaceResolver", "var_name": "namespaceResolver"}, {"original_string": "@Inject\n    private ExtensionFactory factory;", "modifier": "@Inject\n    private", "type": "ExtensionFactory", "declarator": "factory", "var_name": "factory"}], "methods": [{"identifier": "get", "parameters": "(String serviceName)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "S", "signature": "S get(String serviceName)", "full_signature": "@SuppressWarnings(\"unchecked\") public S get(String serviceName)", "class_method_signature": "ExtensionManagerScriptService.get(String serviceName)", "testcase": false, "constructor": false}, {"identifier": "getRepositories", "parameters": "()", "modifiers": "public", "return": "Collection<ExtensionRepository>", "signature": "Collection<ExtensionRepository> getRepositories()", "full_signature": "public Collection<ExtensionRepository> getRepositories()", "class_method_signature": "ExtensionManagerScriptService.getRepositories()", "testcase": false, "constructor": false}, {"identifier": "getRepository", "parameters": "(String repositoryId)", "modifiers": "public", "return": "ExtensionRepository", "signature": "ExtensionRepository getRepository(String repositoryId)", "full_signature": "public ExtensionRepository getRepository(String repositoryId)", "class_method_signature": "ExtensionManagerScriptService.getRepository(String repositoryId)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(String pattern, int offset, int nb)", "modifiers": "public", "return": "IterableResult<Extension>", "signature": "IterableResult<Extension> search(String pattern, int offset, int nb)", "full_signature": "public IterableResult<Extension> search(String pattern, int offset, int nb)", "class_method_signature": "ExtensionManagerScriptService.search(String pattern, int offset, int nb)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(ExtensionQuery query)", "modifiers": "public", "return": "IterableResult<Extension>", "signature": "IterableResult<Extension> search(ExtensionQuery query)", "full_signature": "public IterableResult<Extension> search(ExtensionQuery query)", "class_method_signature": "ExtensionManagerScriptService.search(ExtensionQuery query)", "testcase": false, "constructor": false}, {"identifier": "newQuery", "parameters": "(String query)", "modifiers": "public", "return": "ExtensionQuery", "signature": "ExtensionQuery newQuery(String query)", "full_signature": "public ExtensionQuery newQuery(String query)", "class_method_signature": "ExtensionManagerScriptService.newQuery(String query)", "testcase": false, "constructor": false}, {"identifier": "resolve", "parameters": "(String id, String version)", "modifiers": "public", "return": "Extension", "signature": "Extension resolve(String id, String version)", "full_signature": "public Extension resolve(String id, String version)", "class_method_signature": "ExtensionManagerScriptService.resolve(String id, String version)", "testcase": false, "constructor": false}, {"identifier": "resolve", "parameters": "(ExtensionDependency extensionDependency)", "modifiers": "@Deprecated public", "return": "Extension", "signature": "Extension resolve(ExtensionDependency extensionDependency)", "full_signature": "@Deprecated public Extension resolve(ExtensionDependency extensionDependency)", "class_method_signature": "ExtensionManagerScriptService.resolve(ExtensionDependency extensionDependency)", "testcase": false, "constructor": false}, {"identifier": "resolve", "parameters": "(ExtensionDependency extensionDependency, String namespace)", "modifiers": "public", "return": "Extension", "signature": "Extension resolve(ExtensionDependency extensionDependency, String namespace)", "full_signature": "public Extension resolve(ExtensionDependency extensionDependency, String namespace)", "class_method_signature": "ExtensionManagerScriptService.resolve(ExtensionDependency extensionDependency, String namespace)", "testcase": false, "constructor": false}, {"identifier": "resolveVersions", "parameters": "(String id, int offset, int nb)", "modifiers": "public", "return": "IterableResult<Version>", "signature": "IterableResult<Version> resolveVersions(String id, int offset, int nb)", "full_signature": "public IterableResult<Version> resolveVersions(String id, int offset, int nb)", "class_method_signature": "ExtensionManagerScriptService.resolveVersions(String id, int offset, int nb)", "testcase": false, "constructor": false}, {"identifier": "createExtensionId", "parameters": "(String id, String version)", "modifiers": "public", "return": "ExtensionId", "signature": "ExtensionId createExtensionId(String id, String version)", "full_signature": "public ExtensionId createExtensionId(String id, String version)", "class_method_signature": "ExtensionManagerScriptService.createExtensionId(String id, String version)", "testcase": false, "constructor": false}, {"identifier": "createInstallRequest", "parameters": "(String id, String version, String namespace)", "modifiers": "public", "return": "InstallRequest", "signature": "InstallRequest createInstallRequest(String id, String version, String namespace)", "full_signature": "public InstallRequest createInstallRequest(String id, String version, String namespace)", "class_method_signature": "ExtensionManagerScriptService.createInstallRequest(String id, String version, String namespace)", "testcase": false, "constructor": false}, {"identifier": "install", "parameters": "(String id, String version, String namespace)", "modifiers": "public", "return": "Job", "signature": "Job install(String id, String version, String namespace)", "full_signature": "public Job install(String id, String version, String namespace)", "class_method_signature": "ExtensionManagerScriptService.install(String id, String version, String namespace)", "testcase": false, "constructor": false}, {"identifier": "install", "parameters": "(InstallRequest installRequest)", "modifiers": "public", "return": "Job", "signature": "Job install(InstallRequest installRequest)", "full_signature": "public Job install(InstallRequest installRequest)", "class_method_signature": "ExtensionManagerScriptService.install(InstallRequest installRequest)", "testcase": false, "constructor": false}, {"identifier": "createInstallPlanRequest", "parameters": "(String id, String version, String namespace)", "modifiers": "public", "return": "InstallRequest", "signature": "InstallRequest createInstallPlanRequest(String id, String version, String namespace)", "full_signature": "public InstallRequest createInstallPlanRequest(String id, String version, String namespace)", "class_method_signature": "ExtensionManagerScriptService.createInstallPlanRequest(String id, String version, String namespace)", "testcase": false, "constructor": false}, {"identifier": "createInstallPlan", "parameters": "(InstallRequest installRequest)", "modifiers": "public", "return": "Job", "signature": "Job createInstallPlan(InstallRequest installRequest)", "full_signature": "public Job createInstallPlan(InstallRequest installRequest)", "class_method_signature": "ExtensionManagerScriptService.createInstallPlan(InstallRequest installRequest)", "testcase": false, "constructor": false}, {"identifier": "createInstallPlan", "parameters": "(String id, String version, String namespace)", "modifiers": "public", "return": "Job", "signature": "Job createInstallPlan(String id, String version, String namespace)", "full_signature": "public Job createInstallPlan(String id, String version, String namespace)", "class_method_signature": "ExtensionManagerScriptService.createInstallPlan(String id, String version, String namespace)", "testcase": false, "constructor": false}, {"identifier": "uninstall", "parameters": "(String id, String namespace)", "modifiers": "public", "return": "Job", "signature": "Job uninstall(String id, String namespace)", "full_signature": "public Job uninstall(String id, String namespace)", "class_method_signature": "ExtensionManagerScriptService.uninstall(String id, String namespace)", "testcase": false, "constructor": false}, {"identifier": "uninstall", "parameters": "(ExtensionId extensionId)", "modifiers": "public", "return": "Job", "signature": "Job uninstall(ExtensionId extensionId)", "full_signature": "public Job uninstall(ExtensionId extensionId)", "class_method_signature": "ExtensionManagerScriptService.uninstall(ExtensionId extensionId)", "testcase": false, "constructor": false}, {"identifier": "uninstall", "parameters": "(UninstallRequest uninstallRequest)", "modifiers": "public", "return": "Job", "signature": "Job uninstall(UninstallRequest uninstallRequest)", "full_signature": "public Job uninstall(UninstallRequest uninstallRequest)", "class_method_signature": "ExtensionManagerScriptService.uninstall(UninstallRequest uninstallRequest)", "testcase": false, "constructor": false}, {"identifier": "createUninstallRequest", "parameters": "(String id, String namespace)", "modifiers": "public", "return": "UninstallRequest", "signature": "UninstallRequest createUninstallRequest(String id, String namespace)", "full_signature": "public UninstallRequest createUninstallRequest(String id, String namespace)", "class_method_signature": "ExtensionManagerScriptService.createUninstallRequest(String id, String namespace)", "testcase": false, "constructor": false}, {"identifier": "createUninstallRequest", "parameters": "(ExtensionId extensionId, String namespace)", "modifiers": "private", "return": "UninstallRequest", "signature": "UninstallRequest createUninstallRequest(ExtensionId extensionId, String namespace)", "full_signature": "private UninstallRequest createUninstallRequest(ExtensionId extensionId, String namespace)", "class_method_signature": "ExtensionManagerScriptService.createUninstallRequest(ExtensionId extensionId, String namespace)", "testcase": false, "constructor": false}, {"identifier": "createUninstallPlanRequest", "parameters": "(ExtensionId extensionId, String namespace)", "modifiers": "private", "return": "UninstallRequest", "signature": "UninstallRequest createUninstallPlanRequest(ExtensionId extensionId, String namespace)", "full_signature": "private UninstallRequest createUninstallPlanRequest(ExtensionId extensionId, String namespace)", "class_method_signature": "ExtensionManagerScriptService.createUninstallPlanRequest(ExtensionId extensionId, String namespace)", "testcase": false, "constructor": false}, {"identifier": "createUninstallRequest", "parameters": "()", "modifiers": "@Unstable public", "return": "UninstallRequest", "signature": "UninstallRequest createUninstallRequest()", "full_signature": "@Unstable public UninstallRequest createUninstallRequest()", "class_method_signature": "ExtensionManagerScriptService.createUninstallRequest()", "testcase": false, "constructor": false}, {"identifier": "createUninstallPlan", "parameters": "(String id, String namespace)", "modifiers": "public", "return": "Job", "signature": "Job createUninstallPlan(String id, String namespace)", "full_signature": "public Job createUninstallPlan(String id, String namespace)", "class_method_signature": "ExtensionManagerScriptService.createUninstallPlan(String id, String namespace)", "testcase": false, "constructor": false}, {"identifier": "createUninstallPlan", "parameters": "(ExtensionId extensionId)", "modifiers": "public", "return": "Job", "signature": "Job createUninstallPlan(ExtensionId extensionId)", "full_signature": "public Job createUninstallPlan(ExtensionId extensionId)", "class_method_signature": "ExtensionManagerScriptService.createUninstallPlan(ExtensionId extensionId)", "testcase": false, "constructor": false}, {"identifier": "createUninstallPlan", "parameters": "(UninstallRequest uninstallRequest)", "modifiers": "@Unstable public", "return": "Job", "signature": "Job createUninstallPlan(UninstallRequest uninstallRequest)", "full_signature": "@Unstable public Job createUninstallPlan(UninstallRequest uninstallRequest)", "class_method_signature": "ExtensionManagerScriptService.createUninstallPlan(UninstallRequest uninstallRequest)", "testcase": false, "constructor": false}, {"identifier": "createUpgradePlanRequest", "parameters": "(String namespace)", "modifiers": "public", "return": "InstallRequest", "signature": "InstallRequest createUpgradePlanRequest(String namespace)", "full_signature": "public InstallRequest createUpgradePlanRequest(String namespace)", "class_method_signature": "ExtensionManagerScriptService.createUpgradePlanRequest(String namespace)", "testcase": false, "constructor": false}, {"identifier": "createUpgradePlanRequest", "parameters": "()", "modifiers": "private", "return": "InstallRequest", "signature": "InstallRequest createUpgradePlanRequest()", "full_signature": "private InstallRequest createUpgradePlanRequest()", "class_method_signature": "ExtensionManagerScriptService.createUpgradePlanRequest()", "testcase": false, "constructor": false}, {"identifier": "createUpgradePlanRequest", "parameters": "(ExtensionId extensionId, String namespace)", "modifiers": "public", "return": "InstallRequest", "signature": "InstallRequest createUpgradePlanRequest(ExtensionId extensionId, String namespace)", "full_signature": "public InstallRequest createUpgradePlanRequest(ExtensionId extensionId, String namespace)", "class_method_signature": "ExtensionManagerScriptService.createUpgradePlanRequest(ExtensionId extensionId, String namespace)", "testcase": false, "constructor": false}, {"identifier": "createUpgradePlan", "parameters": "(InstallRequest request)", "modifiers": "public", "return": "Job", "signature": "Job createUpgradePlan(InstallRequest request)", "full_signature": "public Job createUpgradePlan(InstallRequest request)", "class_method_signature": "ExtensionManagerScriptService.createUpgradePlan(InstallRequest request)", "testcase": false, "constructor": false}, {"identifier": "createUpgradePlan", "parameters": "(String namespace)", "modifiers": "public", "return": "Job", "signature": "Job createUpgradePlan(String namespace)", "full_signature": "public Job createUpgradePlan(String namespace)", "class_method_signature": "ExtensionManagerScriptService.createUpgradePlan(String namespace)", "testcase": false, "constructor": false}, {"identifier": "createUpgradePlan", "parameters": "()", "modifiers": "public", "return": "Job", "signature": "Job createUpgradePlan()", "full_signature": "public Job createUpgradePlan()", "class_method_signature": "ExtensionManagerScriptService.createUpgradePlan()", "testcase": false, "constructor": false}, {"identifier": "getCurrentJob", "parameters": "()", "modifiers": "public", "return": "Job", "signature": "Job getCurrentJob()", "full_signature": "public Job getCurrentJob()", "class_method_signature": "ExtensionManagerScriptService.getCurrentJob()", "testcase": false, "constructor": false}, {"identifier": "getCurrentJobInternal", "parameters": "()", "modifiers": "private", "return": "Job", "signature": "Job getCurrentJobInternal()", "full_signature": "private Job getCurrentJobInternal()", "class_method_signature": "ExtensionManagerScriptService.getCurrentJobInternal()", "testcase": false, "constructor": false}, {"identifier": "getExtensionJobStatus", "parameters": "(String extensionId, String namespace)", "modifiers": "public", "return": "JobStatus", "signature": "JobStatus getExtensionJobStatus(String extensionId, String namespace)", "full_signature": "public JobStatus getExtensionJobStatus(String extensionId, String namespace)", "class_method_signature": "ExtensionManagerScriptService.getExtensionJobStatus(String extensionId, String namespace)", "testcase": false, "constructor": false}, {"identifier": "getExtensionPlanJobStatus", "parameters": "(String extensionId, String namespace)", "modifiers": "public", "return": "JobStatus", "signature": "JobStatus getExtensionPlanJobStatus(String extensionId, String namespace)", "full_signature": "public JobStatus getExtensionPlanJobStatus(String extensionId, String namespace)", "class_method_signature": "ExtensionManagerScriptService.getExtensionPlanJobStatus(String extensionId, String namespace)", "testcase": false, "constructor": false}, {"identifier": "getCurrentJobStatus", "parameters": "()", "modifiers": "public", "return": "JobStatus", "signature": "JobStatus getCurrentJobStatus()", "full_signature": "public JobStatus getCurrentJobStatus()", "class_method_signature": "ExtensionManagerScriptService.getCurrentJobStatus()", "testcase": false, "constructor": false}, {"identifier": "parseVersion", "parameters": "(String version)", "modifiers": "public", "return": "Version", "signature": "Version parseVersion(String version)", "full_signature": "public Version parseVersion(String version)", "class_method_signature": "ExtensionManagerScriptService.parseVersion(String version)", "testcase": false, "constructor": false}, {"identifier": "parseVersionRange", "parameters": "(String versionRange)", "modifiers": "public", "return": "VersionRange", "signature": "VersionRange parseVersionRange(String versionRange)", "full_signature": "public VersionRange parseVersionRange(String versionRange)", "class_method_signature": "ExtensionManagerScriptService.parseVersionRange(String versionRange)", "testcase": false, "constructor": false}, {"identifier": "parseVersionConstraint", "parameters": "(String versionConstraint)", "modifiers": "public", "return": "VersionConstraint", "signature": "VersionConstraint parseVersionConstraint(String versionConstraint)", "full_signature": "public VersionConstraint parseVersionConstraint(String versionConstraint)", "class_method_signature": "ExtensionManagerScriptService.parseVersionConstraint(String versionConstraint)", "testcase": false, "constructor": false}, {"identifier": "createExtensionDependency", "parameters": "(String id, String versionConstraint)", "modifiers": "public", "return": "ExtensionDependency", "signature": "ExtensionDependency createExtensionDependency(String id, String versionConstraint)", "full_signature": "public ExtensionDependency createExtensionDependency(String id, String versionConstraint)", "class_method_signature": "ExtensionManagerScriptService.createExtensionDependency(String id, String versionConstraint)", "testcase": false, "constructor": false}, {"identifier": "createExtensionDependency", "parameters": "(String id, String versionConstraint, boolean optional)", "modifiers": "public", "return": "ExtensionDependency", "signature": "ExtensionDependency createExtensionDependency(String id, String versionConstraint, boolean optional)", "full_signature": "public ExtensionDependency createExtensionDependency(String id, String versionConstraint, boolean optional)", "class_method_signature": "ExtensionManagerScriptService.createExtensionDependency(String id, String versionConstraint, boolean optional)", "testcase": false, "constructor": false}, {"identifier": "isAllowed", "parameters": "(Collection<String> allowedNamespaces, String namespace)", "modifiers": "public", "return": "boolean", "signature": "boolean isAllowed(Collection<String> allowedNamespaces, String namespace)", "full_signature": "public boolean isAllowed(Collection<String> allowedNamespaces, String namespace)", "class_method_signature": "ExtensionManagerScriptService.isAllowed(Collection<String> allowedNamespaces, String namespace)", "testcase": false, "constructor": false}, {"identifier": "isAllowed", "parameters": "(Extension extension, String namespace)", "modifiers": "public", "return": "boolean", "signature": "boolean isAllowed(Extension extension, String namespace)", "full_signature": "public boolean isAllowed(Extension extension, String namespace)", "class_method_signature": "ExtensionManagerScriptService.isAllowed(Extension extension, String namespace)", "testcase": false, "constructor": false}, {"identifier": "getInstalledExtensions", "parameters": "()", "modifiers": "@Deprecated public", "return": "Collection<InstalledExtension>", "signature": "Collection<InstalledExtension> getInstalledExtensions()", "full_signature": "@Deprecated public Collection<InstalledExtension> getInstalledExtensions()", "class_method_signature": "ExtensionManagerScriptService.getInstalledExtensions()", "testcase": false, "constructor": false}, {"identifier": "getInstalledExtensions", "parameters": "(String namespace)", "modifiers": "@Deprecated public", "return": "Collection<InstalledExtension>", "signature": "Collection<InstalledExtension> getInstalledExtensions(String namespace)", "full_signature": "@Deprecated public Collection<InstalledExtension> getInstalledExtensions(String namespace)", "class_method_signature": "ExtensionManagerScriptService.getInstalledExtensions(String namespace)", "testcase": false, "constructor": false}, {"identifier": "getInstalledExtension", "parameters": "(String feature, String namespace)", "modifiers": "@Deprecated public", "return": "InstalledExtension", "signature": "InstalledExtension getInstalledExtension(String feature, String namespace)", "full_signature": "@Deprecated public InstalledExtension getInstalledExtension(String feature, String namespace)", "class_method_signature": "ExtensionManagerScriptService.getInstalledExtension(String feature, String namespace)", "testcase": false, "constructor": false}, {"identifier": "getBackwardDependencies", "parameters": "(String feature, String version)", "modifiers": "@Deprecated public", "return": "Map<String, Collection<InstalledExtension>>", "signature": "Map<String, Collection<InstalledExtension>> getBackwardDependencies(String feature, String version)", "full_signature": "@Deprecated public Map<String, Collection<InstalledExtension>> getBackwardDependencies(String feature, String version)", "class_method_signature": "ExtensionManagerScriptService.getBackwardDependencies(String feature, String version)", "testcase": false, "constructor": false}, {"identifier": "getCoreExtensions", "parameters": "()", "modifiers": "@Deprecated public", "return": "Collection<CoreExtension>", "signature": "Collection<CoreExtension> getCoreExtensions()", "full_signature": "@Deprecated public Collection<CoreExtension> getCoreExtensions()", "class_method_signature": "ExtensionManagerScriptService.getCoreExtensions()", "testcase": false, "constructor": false}, {"identifier": "getCoreExtension", "parameters": "(String feature)", "modifiers": "@Deprecated public", "return": "CoreExtension", "signature": "CoreExtension getCoreExtension(String feature)", "full_signature": "@Deprecated public CoreExtension getCoreExtension(String feature)", "class_method_signature": "ExtensionManagerScriptService.getCoreExtension(String feature)", "testcase": false, "constructor": false}, {"identifier": "getLocalExtensions", "parameters": "()", "modifiers": "@Deprecated public", "return": "Collection<LocalExtension>", "signature": "Collection<LocalExtension> getLocalExtensions()", "full_signature": "@Deprecated public Collection<LocalExtension> getLocalExtensions()", "class_method_signature": "ExtensionManagerScriptService.getLocalExtensions()", "testcase": false, "constructor": false}, {"identifier": "getAccessibleExtension", "parameters": "(String feature, Namespace namespace)", "modifiers": "public", "return": "Extension", "signature": "Extension getAccessibleExtension(String feature, Namespace namespace)", "full_signature": "public Extension getAccessibleExtension(String feature, Namespace namespace)", "class_method_signature": "ExtensionManagerScriptService.getAccessibleExtension(String feature, Namespace namespace)", "testcase": false, "constructor": false}, {"identifier": "searchAccessibleExtensions", "parameters": "(Namespace namespace, ExtensionQuery query)", "modifiers": "public", "return": "IterableResult<Extension>", "signature": "IterableResult<Extension> searchAccessibleExtensions(Namespace namespace, ExtensionQuery query)", "full_signature": "public IterableResult<Extension> searchAccessibleExtensions(Namespace namespace, ExtensionQuery query)", "class_method_signature": "ExtensionManagerScriptService.searchAccessibleExtensions(Namespace namespace, ExtensionQuery query)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-extension/xwiki-platform-extension-script/src/main/java/org/xwiki/extension/script/ExtensionManagerScriptService.java"}, "focal_method": {"identifier": "install", "parameters": "(String id, String version, String namespace)", "modifiers": "public", "return": "Job", "body": "public Job install(String id, String version, String namespace)\n    {\n        return install(createInstallRequest(id, version, namespace));\n    }", "signature": "Job install(String id, String version, String namespace)", "full_signature": "public Job install(String id, String version, String namespace)", "class_method_signature": "ExtensionManagerScriptService.install(String id, String version, String namespace)", "testcase": false, "constructor": false, "invocations": ["install", "createInstallRequest"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}