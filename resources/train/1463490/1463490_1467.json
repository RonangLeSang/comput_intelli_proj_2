{"test_class": {"identifier": "DefaultMailSenderConfigurationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@RegisterExtension\n    LogCaptureExtension logCapture = new LogCaptureExtension(LogLevel.WARN);", "modifier": "@RegisterExtension", "type": "LogCaptureExtension", "declarator": "logCapture = new LogCaptureExtension(LogLevel.WARN)", "var_name": "logCapture"}, {"original_string": "@InjectMockComponents\n    private DefaultMailSenderConfiguration configuration;", "modifier": "@InjectMockComponents\n    private", "type": "DefaultMailSenderConfiguration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "@MockComponent\n    @Named(\"mailsend\")\n    private ConfigurationSource mailConfigDocumentSource;", "modifier": "@MockComponent\n    @Named(\"mailsend\")\n    private", "type": "ConfigurationSource", "declarator": "mailConfigDocumentSource", "var_name": "mailConfigDocumentSource"}, {"original_string": "@MockComponent\n    @Named(\"mailsendmainwiki\")\n    private ConfigurationSource mainWikiMailConfigDocumentSource;", "modifier": "@MockComponent\n    @Named(\"mailsendmainwiki\")\n    private", "type": "ConfigurationSource", "declarator": "mainWikiMailConfigDocumentSource", "var_name": "mainWikiMailConfigDocumentSource"}, {"original_string": "@MockComponent\n    @Named(\"xwikiproperties\")\n    private ConfigurationSource xwikiPropertiesSource;", "modifier": "@MockComponent\n    @Named(\"xwikiproperties\")\n    private", "type": "ConfigurationSource", "declarator": "xwikiPropertiesSource", "var_name": "xwikiPropertiesSource"}, {"original_string": "@MockComponent\n    private WikiDescriptorManager wikiDescriptorManager;", "modifier": "@MockComponent\n    private", "type": "WikiDescriptorManager", "declarator": "wikiDescriptorManager", "var_name": "wikiDescriptorManager"}], "file": "xwiki-platform-core/xwiki-platform-mail/xwiki-platform-mail-send/xwiki-platform-mail-send-default/src/test/java/org/xwiki/mail/internal/configuration/DefaultMailSenderConfigurationTest.java"}, "test_case": {"identifier": "getAllProperties", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getAllProperties()\n    {\n        when(this.mailConfigDocumentSource.getProperty(\"properties\", String.class)).thenReturn(\n            \"mail.smtp.starttls.enable=true\");\n        when(this.mailConfigDocumentSource.getProperty(\"username\", String.class)).thenReturn(null);\n        when(this.mailConfigDocumentSource.getProperty(\"password\", String.class)).thenReturn(null);\n        when(this.mailConfigDocumentSource.getProperty(\"host\", String.class)).thenReturn(\"server\");\n        when(this.mailConfigDocumentSource.getProperty(\"port\", Integer.class)).thenReturn(25);\n        when(this.mailConfigDocumentSource.getProperty(\"from\", String.class)).thenReturn(\"john@doe.com\");\n\n        Properties returnedProperties = this.configuration.getAllProperties();\n\n        assertEquals(4, returnedProperties.size());\n        assertEquals(\"true\", returnedProperties.getProperty(\"mail.smtp.starttls.enable\"));\n        assertEquals(\"server\", returnedProperties.getProperty(\"mail.smtp.host\"));\n        assertEquals(\"25\", returnedProperties.getProperty(\"mail.smtp.port\"));\n        assertEquals(\"smtp\", returnedProperties.getProperty(\"mail.transport.protocol\"));\n        assertNull(returnedProperties.getProperty(\"mail.smtp.from\"));\n        assertNull(returnedProperties.getProperty(\"mail.smtp.user\"));\n    }", "signature": "void getAllProperties()", "full_signature": "@Test public void getAllProperties()", "class_method_signature": "DefaultMailSenderConfigurationTest.getAllProperties()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getProperty", "thenReturn", "when", "getProperty", "thenReturn", "when", "getProperty", "thenReturn", "when", "getProperty", "thenReturn", "when", "getProperty", "thenReturn", "when", "getProperty", "getAllProperties", "assertEquals", "size", "assertEquals", "getProperty", "assertEquals", "getProperty", "assertEquals", "getProperty", "assertEquals", "getProperty", "assertNull", "getProperty", "assertNull", "getProperty"]}, "focal_class": {"identifier": "DefaultMailSenderConfiguration", "superclass": "", "interfaces": "implements MailSenderConfiguration", "fields": [{"original_string": "public static final String JAVAMAIL_TRANSPORT_PROTOCOL = \"mail.transport.protocol\";", "modifier": "public static final", "type": "String", "declarator": "JAVAMAIL_TRANSPORT_PROTOCOL = \"mail.transport.protocol\"", "var_name": "JAVAMAIL_TRANSPORT_PROTOCOL"}, {"original_string": "public static final String JAVAMAIL_SMTP_HOST = \"mail.smtp.host\";", "modifier": "public static final", "type": "String", "declarator": "JAVAMAIL_SMTP_HOST = \"mail.smtp.host\"", "var_name": "JAVAMAIL_SMTP_HOST"}, {"original_string": "public static final String JAVAMAIL_SMTP_PORT = \"mail.smtp.port\";", "modifier": "public static final", "type": "String", "declarator": "JAVAMAIL_SMTP_PORT = \"mail.smtp.port\"", "var_name": "JAVAMAIL_SMTP_PORT"}, {"original_string": "public static final String JAVAMAIL_SMTP_USERNAME = \"mail.smtp.user\";", "modifier": "public static final", "type": "String", "declarator": "JAVAMAIL_SMTP_USERNAME = \"mail.smtp.user\"", "var_name": "JAVAMAIL_SMTP_USERNAME"}, {"original_string": "public static final String JAVAMAIL_SMTP_AUTH = \"mail.smtp.auth\";", "modifier": "public static final", "type": "String", "declarator": "JAVAMAIL_SMTP_AUTH = \"mail.smtp.auth\"", "var_name": "JAVAMAIL_SMTP_AUTH"}, {"original_string": "private static final String PREFIX = \"mail.sender.\";", "modifier": "private static final", "type": "String", "declarator": "PREFIX = \"mail.sender.\"", "var_name": "PREFIX"}, {"original_string": "private static final int DEFAULT_PORT = 25;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_PORT = 25", "var_name": "DEFAULT_PORT"}, {"original_string": "private static final long DEFAULT_SEND_WAIT_TIME = 8 * 1000L;", "modifier": "private static final", "type": "long", "declarator": "DEFAULT_SEND_WAIT_TIME = 8 * 1000L", "var_name": "DEFAULT_SEND_WAIT_TIME"}, {"original_string": "private static final String FROM_PROPERTY = \"from\";", "modifier": "private static final", "type": "String", "declarator": "FROM_PROPERTY = \"from\"", "var_name": "FROM_PROPERTY"}, {"original_string": "private static final String BCC_PROPERTY = \"bcc\";", "modifier": "private static final", "type": "String", "declarator": "BCC_PROPERTY = \"bcc\"", "var_name": "BCC_PROPERTY"}, {"original_string": "private static final String HOST_PROPERTY = \"host\";", "modifier": "private static final", "type": "String", "declarator": "HOST_PROPERTY = \"host\"", "var_name": "HOST_PROPERTY"}, {"original_string": "private static final String PORT_PROPERTY = \"port\";", "modifier": "private static final", "type": "String", "declarator": "PORT_PROPERTY = \"port\"", "var_name": "PORT_PROPERTY"}, {"original_string": "private static final String USERNAME_PROPERTY = \"username\";", "modifier": "private static final", "type": "String", "declarator": "USERNAME_PROPERTY = \"username\"", "var_name": "USERNAME_PROPERTY"}, {"original_string": "private static final String PASSWORD_PROPERTY = \"password\";", "modifier": "private static final", "type": "String", "declarator": "PASSWORD_PROPERTY = \"password\"", "var_name": "PASSWORD_PROPERTY"}, {"original_string": "private static final String PROPERTIES_PROPERTY = \"properties\";", "modifier": "private static final", "type": "String", "declarator": "PROPERTIES_PROPERTY = \"properties\"", "var_name": "PROPERTIES_PROPERTY"}, {"original_string": "private static final String SEND_WAIT_TIME = \"sendWaitTime\";", "modifier": "private static final", "type": "String", "declarator": "SEND_WAIT_TIME = \"sendWaitTime\"", "var_name": "SEND_WAIT_TIME"}, {"original_string": "private static final String PREPARE_QUEUE_CAPACITY_PROPERTY = \"prepareQueueCapacity\";", "modifier": "private static final", "type": "String", "declarator": "PREPARE_QUEUE_CAPACITY_PROPERTY = \"prepareQueueCapacity\"", "var_name": "PREPARE_QUEUE_CAPACITY_PROPERTY"}, {"original_string": "private static final String SEND_QUEUE_CAPACITY_PROPERTY = \"sendQueueCapacity\";", "modifier": "private static final", "type": "String", "declarator": "SEND_QUEUE_CAPACITY_PROPERTY = \"sendQueueCapacity\"", "var_name": "SEND_QUEUE_CAPACITY_PROPERTY"}, {"original_string": "private static final int PREPARE_QUEUE_CAPACITY_DEFAULT = 1000;", "modifier": "private static final", "type": "int", "declarator": "PREPARE_QUEUE_CAPACITY_DEFAULT = 1000", "var_name": "PREPARE_QUEUE_CAPACITY_DEFAULT"}, {"original_string": "private static final int SEND_QUEUE_CAPACITY_DEFAULT = 1000;", "modifier": "private static final", "type": "int", "declarator": "SEND_QUEUE_CAPACITY_DEFAULT = 1000", "var_name": "SEND_QUEUE_CAPACITY_DEFAULT"}, {"original_string": "@Inject\n    private Logger logger;", "modifier": "@Inject\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "@Inject\n    @Named(\"mailsend\")\n    private ConfigurationSource currentWikiMailConfigSource;", "modifier": "@Inject\n    @Named(\"mailsend\")\n    private", "type": "ConfigurationSource", "declarator": "currentWikiMailConfigSource", "var_name": "currentWikiMailConfigSource"}, {"original_string": "@Inject\n    @Named(\"mailsendmainwiki\")\n    private ConfigurationSource mainWikiMailConfigSource;", "modifier": "@Inject\n    @Named(\"mailsendmainwiki\")\n    private", "type": "ConfigurationSource", "declarator": "mainWikiMailConfigSource", "var_name": "mainWikiMailConfigSource"}, {"original_string": "@Inject\n    @Named(\"xwikiproperties\")\n    private ConfigurationSource xwikiPropertiesSource;", "modifier": "@Inject\n    @Named(\"xwikiproperties\")\n    private", "type": "ConfigurationSource", "declarator": "xwikiPropertiesSource", "var_name": "xwikiPropertiesSource"}, {"original_string": "@Inject\n    private WikiDescriptorManager wikiDescriptorManager;", "modifier": "@Inject\n    private", "type": "WikiDescriptorManager", "declarator": "wikiDescriptorManager", "var_name": "wikiDescriptorManager"}], "methods": [{"identifier": "getHost", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getHost()", "full_signature": "@Override public String getHost()", "class_method_signature": "DefaultMailSenderConfiguration.getHost()", "testcase": false, "constructor": false}, {"identifier": "getPort", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getPort()", "full_signature": "@Override public int getPort()", "class_method_signature": "DefaultMailSenderConfiguration.getPort()", "testcase": false, "constructor": false}, {"identifier": "getUsername", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getUsername()", "full_signature": "@Override public String getUsername()", "class_method_signature": "DefaultMailSenderConfiguration.getUsername()", "testcase": false, "constructor": false}, {"identifier": "getPassword", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPassword()", "full_signature": "@Override public String getPassword()", "class_method_signature": "DefaultMailSenderConfiguration.getPassword()", "testcase": false, "constructor": false}, {"identifier": "getBCCAddresses", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getBCCAddresses()", "full_signature": "@Override public List<String> getBCCAddresses()", "class_method_signature": "DefaultMailSenderConfiguration.getBCCAddresses()", "testcase": false, "constructor": false}, {"identifier": "getFromAddress", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getFromAddress()", "full_signature": "@Override public String getFromAddress()", "class_method_signature": "DefaultMailSenderConfiguration.getFromAddress()", "testcase": false, "constructor": false}, {"identifier": "getAdditionalProperties", "parameters": "()", "modifiers": "@Override public", "return": "Properties", "signature": "Properties getAdditionalProperties()", "full_signature": "@Override public Properties getAdditionalProperties()", "class_method_signature": "DefaultMailSenderConfiguration.getAdditionalProperties()", "testcase": false, "constructor": false}, {"identifier": "getAllProperties", "parameters": "()", "modifiers": "@Override public", "return": "Properties", "signature": "Properties getAllProperties()", "full_signature": "@Override public Properties getAllProperties()", "class_method_signature": "DefaultMailSenderConfiguration.getAllProperties()", "testcase": false, "constructor": false}, {"identifier": "addProperty", "parameters": "(Properties properties, String key, String value)", "modifiers": "private", "return": "void", "signature": "void addProperty(Properties properties, String key, String value)", "full_signature": "private void addProperty(Properties properties, String key, String value)", "class_method_signature": "DefaultMailSenderConfiguration.addProperty(Properties properties, String key, String value)", "testcase": false, "constructor": false}, {"identifier": "usesAuthentication", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean usesAuthentication()", "full_signature": "@Override public boolean usesAuthentication()", "class_method_signature": "DefaultMailSenderConfiguration.usesAuthentication()", "testcase": false, "constructor": false}, {"identifier": "getScriptServicePermissionCheckerHint", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getScriptServicePermissionCheckerHint()", "full_signature": "@Override public String getScriptServicePermissionCheckerHint()", "class_method_signature": "DefaultMailSenderConfiguration.getScriptServicePermissionCheckerHint()", "testcase": false, "constructor": false}, {"identifier": "getSendWaitTime", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getSendWaitTime()", "full_signature": "@Override public long getSendWaitTime()", "class_method_signature": "DefaultMailSenderConfiguration.getSendWaitTime()", "testcase": false, "constructor": false}, {"identifier": "getPrepareQueueCapacity", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getPrepareQueueCapacity()", "full_signature": "@Override public int getPrepareQueueCapacity()", "class_method_signature": "DefaultMailSenderConfiguration.getPrepareQueueCapacity()", "testcase": false, "constructor": false}, {"identifier": "getSendQueueCapacity", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSendQueueCapacity()", "full_signature": "@Override public int getSendQueueCapacity()", "class_method_signature": "DefaultMailSenderConfiguration.getSendQueueCapacity()", "testcase": false, "constructor": false}, {"identifier": "isMainWiki", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isMainWiki()", "full_signature": "private boolean isMainWiki()", "class_method_signature": "DefaultMailSenderConfiguration.isMainWiki()", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-mail/xwiki-platform-mail-send/xwiki-platform-mail-send-default/src/main/java/org/xwiki/mail/internal/configuration/DefaultMailSenderConfiguration.java"}, "focal_method": {"identifier": "getAllProperties", "parameters": "()", "modifiers": "@Override public", "return": "Properties", "body": "@Override\n    public Properties getAllProperties()\n    {\n        Properties properties = new Properties();\n        addProperty(properties, JAVAMAIL_TRANSPORT_PROTOCOL, \"smtp\");\n        addProperty(properties, JAVAMAIL_SMTP_HOST, getHost());\n        addProperty(properties, JAVAMAIL_SMTP_USERNAME, getUsername());\n        addProperty(properties, JAVAMAIL_SMTP_PORT, Integer.toString(getPort()));\n\n        // Important: We don't set the \"mail.smtp.from\" property because the default behavior of JavaMail is to get\n        // it from the MimeMessage's FROM field  when it's not set (see\n        // https://javaee.github.io/javamail/docs/api/com/sun/mail/smtp/package-summary.html), which is the behavior\n        // we want.\n        // This also avoids setting a bad email address. Indeed, must not have any pretty name or \"<\" and \">\" characters\n        // as that wouldn't obey the RFC5321 (see section 4.1.2 from https://tools.ietf.org/html/rfc5321). Thus if\n        // we were setting the address we would need to get internal address and not the full \"pretty\" one.\n\n        // If a username and a password have been provided consider we're authenticating against the SMTP server\n        if (usesAuthentication()) {\n            properties.put(JAVAMAIL_SMTP_AUTH, \"true\");\n        }\n\n        // Add user-specified mail properties.\n        // Note: We're only supporting SMTP (and not SMTPS) at the moment, which means that for sending emails to a\n        // SMTP server requiring TLS the user will need to pass the \"mail.smtp.starttls.enable=true\" property and use\n        // the proper port for TLS (587 for Gmail for example, while port 465 is used for SMTPS/SSL).\n        properties.putAll(getAdditionalProperties());\n\n        return properties;\n    }", "signature": "Properties getAllProperties()", "full_signature": "@Override public Properties getAllProperties()", "class_method_signature": "DefaultMailSenderConfiguration.getAllProperties()", "testcase": false, "constructor": false, "invocations": ["addProperty", "addProperty", "getHost", "addProperty", "getUsername", "addProperty", "toString", "getPort", "usesAuthentication", "put", "putAll", "getAdditionalProperties"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}