{"test_class": {"identifier": "ContextExtendedURLURLNormalizerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMockComponents\n    private ContextExtendedURLURLNormalizer normalizer;", "modifier": "@InjectMockComponents\n    private", "type": "ContextExtendedURLURLNormalizer", "declarator": "normalizer", "var_name": "normalizer"}, {"original_string": "@MockComponent\n    @Named(\"xwikicfg\")\n    private ConfigurationSource configurationSource;", "modifier": "@MockComponent\n    @Named(\"xwikicfg\")\n    private", "type": "ConfigurationSource", "declarator": "configurationSource", "var_name": "configurationSource"}, {"original_string": "@InjectComponentManager\n    private MockitoComponentManager componentManager;", "modifier": "@InjectComponentManager\n    private", "type": "MockitoComponentManager", "declarator": "componentManager", "var_name": "componentManager"}, {"original_string": "private ServletEnvironment environment;", "modifier": "private", "type": "ServletEnvironment", "declarator": "environment", "var_name": "environment"}], "file": "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-container/src/test/java/org/xwiki/url/internal/container/ContextExtendedURLURLNormalizerTest.java"}, "test_case": {"identifier": "normalizeWhenConfigurationPropertyDefinedButWithLeadingAndTrailingSlash", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void normalizeWhenConfigurationPropertyDefinedButWithLeadingAndTrailingSlash()\n    {\n        when(this.configurationSource.getProperty(\"xwiki.webapppath\")).thenReturn(\"/xwiki/\");\n\n        ExtendedURL extendedURL = new ExtendedURL(Arrays.asList(\"one\", \"two\"));\n        assertEquals(\"/xwiki/one/two\", this.normalizer.normalize(extendedURL).serialize());\n    }", "signature": "void normalizeWhenConfigurationPropertyDefinedButWithLeadingAndTrailingSlash()", "full_signature": "@Test void normalizeWhenConfigurationPropertyDefinedButWithLeadingAndTrailingSlash()", "class_method_signature": "ContextExtendedURLURLNormalizerTest.normalizeWhenConfigurationPropertyDefinedButWithLeadingAndTrailingSlash()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getProperty", "asList", "assertEquals", "serialize", "normalize"]}, "focal_class": {"identifier": "ContextExtendedURLURLNormalizer", "superclass": "", "interfaces": "implements URLNormalizer<ExtendedURL>", "fields": [{"original_string": "private static final String URL_SEGMENT_DELIMITER = \"/\";", "modifier": "private static final", "type": "String", "declarator": "URL_SEGMENT_DELIMITER = \"/\"", "var_name": "URL_SEGMENT_DELIMITER"}, {"original_string": "@Inject\n    @Named(\"xwikicfg\")\n    private ConfigurationSource configurationSource;", "modifier": "@Inject\n    @Named(\"xwikicfg\")\n    private", "type": "ConfigurationSource", "declarator": "configurationSource", "var_name": "configurationSource"}, {"original_string": "@Inject\n    private Environment environment;", "modifier": "@Inject\n    private", "type": "Environment", "declarator": "environment", "var_name": "environment"}], "methods": [{"identifier": "normalize", "parameters": "(ExtendedURL partialURL)", "modifiers": "@Override public", "return": "ExtendedURL", "signature": "ExtendedURL normalize(ExtendedURL partialURL)", "full_signature": "@Override public ExtendedURL normalize(ExtendedURL partialURL)", "class_method_signature": "ContextExtendedURLURLNormalizer.normalize(ExtendedURL partialURL)", "testcase": false, "constructor": false}, {"identifier": "getContextPath", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getContextPath()", "full_signature": "private String getContextPath()", "class_method_signature": "ContextExtendedURLURLNormalizer.getContextPath()", "testcase": false, "constructor": false}, {"identifier": "getContextPathFromConfiguration", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getContextPathFromConfiguration()", "full_signature": "private String getContextPathFromConfiguration()", "class_method_signature": "ContextExtendedURLURLNormalizer.getContextPathFromConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getContextPathFromApplicationContext", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getContextPathFromApplicationContext()", "full_signature": "private String getContextPathFromApplicationContext()", "class_method_signature": "ContextExtendedURLURLNormalizer.getContextPathFromApplicationContext()", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-container/src/main/java/org/xwiki/url/internal/container/ContextExtendedURLURLNormalizer.java"}, "focal_method": {"identifier": "normalize", "parameters": "(ExtendedURL partialURL)", "modifiers": "@Override public", "return": "ExtendedURL", "body": "@Override\n    public ExtendedURL normalize(ExtendedURL partialURL)\n    {\n        String contextPath = StringUtils.strip(getContextPath(), URL_SEGMENT_DELIMITER);\n\n        if (contextPath == null) {\n            throw new RuntimeException(String.format(\"Failed to normalize the URL [%s] since the \"\n                + \"application's Servlet context couldn't be computed.\", partialURL));\n        }\n\n        List<String> segments = new ArrayList<>();\n        if (StringUtils.isNotEmpty(contextPath)) {\n            segments.add(contextPath);\n        }\n        segments.addAll(partialURL.getSegments());\n\n        return new ExtendedURL(segments, partialURL.getParameters());\n    }", "signature": "ExtendedURL normalize(ExtendedURL partialURL)", "full_signature": "@Override public ExtendedURL normalize(ExtendedURL partialURL)", "class_method_signature": "ContextExtendedURLURLNormalizer.normalize(ExtendedURL partialURL)", "testcase": false, "constructor": false, "invocations": ["strip", "getContextPath", "format", "isNotEmpty", "add", "addAll", "getSegments", "getParameters"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}