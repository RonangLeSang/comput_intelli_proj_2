{"test_class": {"identifier": "XWikiDismaxQParserPluginTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private XWikiDismaxQParserPlugin plugin = new XWikiDismaxQParserPlugin();", "modifier": "private", "type": "XWikiDismaxQParserPlugin", "declarator": "plugin = new XWikiDismaxQParserPlugin()", "var_name": "plugin"}], "file": "xwiki-platform-core/xwiki-platform-search/xwiki-platform-search-solr/xwiki-platform-search-solr-server/xwiki-platform-search-solr-server-plugin/src/test/java/org/xwiki/search/solr/internal/XWikiDismaxQParserPluginTest.java"}, "test_case": {"identifier": "withFieldAliasesWhenNoSupportedLocales", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void withFieldAliasesWhenNoSupportedLocales()\n    {\n        Map<String, String> parameters = new HashMap<String, String>();\n        parameters.put(\"qf\", \"comment^0.40\");\n        parameters.put(\"xwiki.multilingualFields\", \"title, comment\");\n\n        SolrParams paramsWithAliases = plugin.withFieldAliases(\"title:text\", new MapSolrParams(parameters));\n\n        // Aliases for the ROOT locale.\n        assertEquals(\"title__\", paramsWithAliases.get(\"f.title.qf\"));\n        assertEquals(\"comment__\", paramsWithAliases.get(\"f.comment.qf\"));\n    }", "signature": "void withFieldAliasesWhenNoSupportedLocales()", "full_signature": "@Test public void withFieldAliasesWhenNoSupportedLocales()", "class_method_signature": "XWikiDismaxQParserPluginTest.withFieldAliasesWhenNoSupportedLocales()", "testcase": true, "constructor": false, "invocations": ["put", "put", "withFieldAliases", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "XWikiDismaxQParserPlugin", "superclass": "extends ExtendedDismaxQParserPlugin", "interfaces": "", "fields": [{"original_string": "private static final Pattern LIST_SEPARATOR = Pattern.compile(\"\\\\s*,\\\\s*\");", "modifier": "private static final", "type": "Pattern", "declarator": "LIST_SEPARATOR = Pattern.compile(\"\\\\s*,\\\\s*\")", "var_name": "LIST_SEPARATOR"}, {"original_string": "private static final Pattern FIELD_PATTERN = Pattern.compile(\"(?:^|[+\\\\-(\\\\s])([a-z_][\\\\p{L}\\\\p{N}_\\\\-.$]*):\");", "modifier": "private static final", "type": "Pattern", "declarator": "FIELD_PATTERN = Pattern.compile(\"(?:^|[+\\\\-(\\\\s])([a-z_][\\\\p{L}\\\\p{N}_\\\\-.$]*):\")", "var_name": "FIELD_PATTERN"}, {"original_string": "private static final String WILDCARD = \"*\";", "modifier": "private static final", "type": "String", "declarator": "WILDCARD = \"*\"", "var_name": "WILDCARD"}], "methods": [{"identifier": "createParser", "parameters": "(String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req)", "modifiers": "@Override public", "return": "QParser", "signature": "QParser createParser(String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req)", "full_signature": "@Override public QParser createParser(String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req)", "class_method_signature": "XWikiDismaxQParserPlugin.createParser(String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req)", "testcase": false, "constructor": false}, {"identifier": "withFieldAliases", "parameters": "(String query, SolrParams parameters)", "modifiers": "public", "return": "SolrParams", "signature": "SolrParams withFieldAliases(String query, SolrParams parameters)", "full_signature": "public SolrParams withFieldAliases(String query, SolrParams parameters)", "class_method_signature": "XWikiDismaxQParserPlugin.withFieldAliases(String query, SolrParams parameters)", "testcase": false, "constructor": false}, {"identifier": "addMultilingualFieldAliases", "parameters": "(Set<String> fieldNames, Map<String, String> aliasParameters,\n        SolrParams parameters)", "modifiers": "private", "return": "void", "signature": "void addMultilingualFieldAliases(Set<String> fieldNames, Map<String, String> aliasParameters,\n        SolrParams parameters)", "full_signature": "private void addMultilingualFieldAliases(Set<String> fieldNames, Map<String, String> aliasParameters,\n        SolrParams parameters)", "class_method_signature": "XWikiDismaxQParserPlugin.addMultilingualFieldAliases(Set<String> fieldNames, Map<String, String> aliasParameters,\n        SolrParams parameters)", "testcase": false, "constructor": false}, {"identifier": "addTypedDynamicFieldAliases", "parameters": "(Set<String> fieldNames, Map<String, String> aliasParameters,\n        SolrParams parameters)", "modifiers": "private", "return": "void", "signature": "void addTypedDynamicFieldAliases(Set<String> fieldNames, Map<String, String> aliasParameters,\n        SolrParams parameters)", "full_signature": "private void addTypedDynamicFieldAliases(Set<String> fieldNames, Map<String, String> aliasParameters,\n        SolrParams parameters)", "class_method_signature": "XWikiDismaxQParserPlugin.addTypedDynamicFieldAliases(Set<String> fieldNames, Map<String, String> aliasParameters,\n        SolrParams parameters)", "testcase": false, "constructor": false}, {"identifier": "extractFieldNames", "parameters": "(String query)", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> extractFieldNames(String query)", "full_signature": "public Set<String> extractFieldNames(String query)", "class_method_signature": "XWikiDismaxQParserPlugin.extractFieldNames(String query)", "testcase": false, "constructor": false}, {"identifier": "getListParameter", "parameters": "(String parameter, SolrParams parameters)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> getListParameter(String parameter, SolrParams parameters)", "full_signature": "private static List<String> getListParameter(String parameter, SolrParams parameters)", "class_method_signature": "XWikiDismaxQParserPlugin.getListParameter(String parameter, SolrParams parameters)", "testcase": false, "constructor": false}, {"identifier": "getSupportedLocales", "parameters": "(SolrParams parameters)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> getSupportedLocales(SolrParams parameters)", "full_signature": "private static List<String> getSupportedLocales(SolrParams parameters)", "class_method_signature": "XWikiDismaxQParserPlugin.getSupportedLocales(SolrParams parameters)", "testcase": false, "constructor": false}, {"identifier": "matchesFieldName", "parameters": "(String fieldName, List<String> fieldNamePatterns)", "modifiers": "private", "return": "boolean", "signature": "boolean matchesFieldName(String fieldName, List<String> fieldNamePatterns)", "full_signature": "private boolean matchesFieldName(String fieldName, List<String> fieldNamePatterns)", "class_method_signature": "XWikiDismaxQParserPlugin.matchesFieldName(String fieldName, List<String> fieldNamePatterns)", "testcase": false, "constructor": false}, {"identifier": "addAliases", "parameters": "(String fieldName, List<String> suffixes, Map<String, String> aliasParameters)", "modifiers": "private", "return": "void", "signature": "void addAliases(String fieldName, List<String> suffixes, Map<String, String> aliasParameters)", "full_signature": "private void addAliases(String fieldName, List<String> suffixes, Map<String, String> aliasParameters)", "class_method_signature": "XWikiDismaxQParserPlugin.addAliases(String fieldName, List<String> suffixes, Map<String, String> aliasParameters)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-search/xwiki-platform-search-solr/xwiki-platform-search-solr-server/xwiki-platform-search-solr-server-plugin/src/main/java/org/xwiki/search/solr/internal/XWikiDismaxQParserPlugin.java"}, "focal_method": {"identifier": "withFieldAliases", "parameters": "(String query, SolrParams parameters)", "modifiers": "public", "return": "SolrParams", "body": "public SolrParams withFieldAliases(String query, SolrParams parameters)\n    {\n        Set<String> fieldNames = extractFieldNames(query);\n        // Add default query fields (these fields are used to search for free text that appears in the query).\n        String defaultQueryFields = parameters.get(\"qf\");\n        if (defaultQueryFields != null) {\n            fieldNames.addAll(SolrPluginUtils.parseFieldBoosts(defaultQueryFields).keySet());\n        }\n        if (fieldNames.isEmpty()) {\n            return parameters;\n        }\n\n        Map<String, String> aliasParameters = new HashMap<String, String>();\n        addMultilingualFieldAliases(fieldNames, aliasParameters, parameters);\n        addTypedDynamicFieldAliases(fieldNames, aliasParameters, parameters);\n\n        return aliasParameters.isEmpty() ? parameters : SolrParams.wrapDefaults(new MapSolrParams(aliasParameters),\n            parameters);\n    }", "signature": "SolrParams withFieldAliases(String query, SolrParams parameters)", "full_signature": "public SolrParams withFieldAliases(String query, SolrParams parameters)", "class_method_signature": "XWikiDismaxQParserPlugin.withFieldAliases(String query, SolrParams parameters)", "testcase": false, "constructor": false, "invocations": ["extractFieldNames", "get", "addAll", "keySet", "parseFieldBoosts", "isEmpty", "addMultilingualFieldAliases", "addTypedDynamicFieldAliases", "isEmpty", "wrapDefaults"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}