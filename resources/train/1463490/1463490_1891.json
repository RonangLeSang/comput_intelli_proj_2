{"test_class": {"identifier": "XClassRelativeStringEntityReferenceResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public MockitoComponentMockingRule<EntityReferenceResolver<String>> mocker =\n        new MockitoComponentMockingRule<>(XClassRelativeStringEntityReferenceResolver.class);", "modifier": "@Rule\n    public", "type": "MockitoComponentMockingRule<EntityReferenceResolver<String>>", "declarator": "mocker =\n        new MockitoComponentMockingRule<>(XClassRelativeStringEntityReferenceResolver.class)", "var_name": "mocker"}, {"original_string": "private EntityReferenceResolver<String> resolver;", "modifier": "private", "type": "EntityReferenceResolver<String>", "declarator": "resolver", "var_name": "resolver"}], "file": "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/internal/model/reference/XClassRelativeStringEntityReferenceResolverTest.java"}, "test_case": {"identifier": "testResolveWhenExplicitParameterAndNoPageInStringRepresentation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testResolveWhenExplicitParameterAndNoPageInStringRepresentation()\n    {\n        EntityReference reference =\n            this.resolver.resolve(\"\", EntityType.DOCUMENT, new DocumentReference(\"dummy\", \"dummy\", \"page\"));\n        Assert.assertEquals(\"page\", reference.extractReference(EntityType.DOCUMENT).getName());\n        Assert.assertEquals(\"XWiki\", reference.extractReference(EntityType.SPACE).getName());\n        Assert.assertNull(reference.extractReference(EntityType.WIKI));\n    }", "signature": "void testResolveWhenExplicitParameterAndNoPageInStringRepresentation()", "full_signature": "@Test public void testResolveWhenExplicitParameterAndNoPageInStringRepresentation()", "class_method_signature": "XClassRelativeStringEntityReferenceResolverTest.testResolveWhenExplicitParameterAndNoPageInStringRepresentation()", "testcase": true, "constructor": false, "invocations": ["resolve", "assertEquals", "getName", "extractReference", "assertEquals", "getName", "extractReference", "assertNull", "extractReference"]}, "focal_class": {"identifier": "XClassRelativeStringEntityReferenceResolver", "superclass": "extends AbstractStringEntityReferenceResolver", "interfaces": "", "fields": [], "methods": [{"identifier": "getDefaultReference", "parameters": "(EntityType type, Object... parameters)", "modifiers": "@Override protected", "return": "EntityReference", "signature": "EntityReference getDefaultReference(EntityType type, Object... parameters)", "full_signature": "@Override protected EntityReference getDefaultReference(EntityType type, Object... parameters)", "class_method_signature": "XClassRelativeStringEntityReferenceResolver.getDefaultReference(EntityType type, Object... parameters)", "testcase": false, "constructor": false}, {"identifier": "resolve", "parameters": "(String entityReferenceRepresentation, EntityType type, Object... parameters)", "modifiers": "@Override public", "return": "EntityReference", "signature": "EntityReference resolve(String entityReferenceRepresentation, EntityType type, Object... parameters)", "full_signature": "@Override public EntityReference resolve(String entityReferenceRepresentation, EntityType type, Object... parameters)", "class_method_signature": "XClassRelativeStringEntityReferenceResolver.resolve(String entityReferenceRepresentation, EntityType type, Object... parameters)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/internal/model/reference/XClassRelativeStringEntityReferenceResolver.java"}, "focal_method": {"identifier": "resolve", "parameters": "(String entityReferenceRepresentation, EntityType type, Object... parameters)", "modifiers": "@Override public", "return": "EntityReference", "body": "@Override\n    public EntityReference resolve(String entityReferenceRepresentation, EntityType type, Object... parameters)\n    {\n        // We allow to pass a page reference in parameter. If the passed representation doesn't contain a page then the\n        // page from the parameter will be used.\n        EntityReference explicitReference = new EntityReference(\"XWiki\", EntityType.SPACE);\n        if (parameters.length > 0 && (parameters[0] instanceof EntityReference)) {\n            EntityReference extractedPageReference =\n                ((EntityReference) parameters[0]).extractReference(EntityType.DOCUMENT);\n            if (extractedPageReference != null) {\n                explicitReference =\n                    new EntityReference(extractedPageReference.getName(), EntityType.DOCUMENT, explicitReference);\n            }\n        }\n\n        return super.resolve(entityReferenceRepresentation, type, explicitReference);\n    }", "signature": "EntityReference resolve(String entityReferenceRepresentation, EntityType type, Object... parameters)", "full_signature": "@Override public EntityReference resolve(String entityReferenceRepresentation, EntityType type, Object... parameters)", "class_method_signature": "XClassRelativeStringEntityReferenceResolver.resolve(String entityReferenceRepresentation, EntityType type, Object... parameters)", "testcase": false, "constructor": false, "invocations": ["extractReference", "getName", "resolve"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}