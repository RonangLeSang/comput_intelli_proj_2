{"test_class": {"identifier": "DocumentDocumentReferenceUserReferenceSerializerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMockComponents\n    private DocumentDocumentReferenceUserReferenceSerializer serializer;", "modifier": "@InjectMockComponents\n    private", "type": "DocumentDocumentReferenceUserReferenceSerializer", "declarator": "serializer", "var_name": "serializer"}, {"original_string": "@MockComponent\n    private EntityReferenceProvider entityReferenceProvider;", "modifier": "@MockComponent\n    private", "type": "EntityReferenceProvider", "declarator": "entityReferenceProvider", "var_name": "entityReferenceProvider"}, {"original_string": "@MockComponent\n    private UserReferenceResolver<CurrentUserReference> currentUserReferenceUserReferenceResolver;", "modifier": "@MockComponent\n    private", "type": "UserReferenceResolver<CurrentUserReference>", "declarator": "currentUserReferenceUserReferenceResolver", "var_name": "currentUserReferenceUserReferenceResolver"}], "file": "xwiki-platform-core/xwiki-platform-user/xwiki-platform-user-default/src/test/java/org/xwiki/user/internal/document/DocumentDocumentReferenceUserReferenceSerializerTest.java"}, "test_case": {"identifier": "serializeWhenSuperAdmin", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void serializeWhenSuperAdmin()\n    {\n        DocumentReference expected = new DocumentReference(\"xwiki\", \"XWiki\", \"superadmin\");\n        assertEquals(expected, this.serializer.serialize(SuperAdminUserReference.INSTANCE));\n    }", "signature": "void serializeWhenSuperAdmin()", "full_signature": "@Test void serializeWhenSuperAdmin()", "class_method_signature": "DocumentDocumentReferenceUserReferenceSerializerTest.serializeWhenSuperAdmin()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "serialize"]}, "focal_class": {"identifier": "DocumentDocumentReferenceUserReferenceSerializer", "superclass": "", "interfaces": "implements UserReferenceSerializer<DocumentReference>", "fields": [{"original_string": "private static final String XWIKI_SPACE = \"XWiki\";", "modifier": "private static final", "type": "String", "declarator": "XWIKI_SPACE = \"XWiki\"", "var_name": "XWIKI_SPACE"}, {"original_string": "@Inject\n    private EntityReferenceProvider entityReferenceProvider;", "modifier": "@Inject\n    private", "type": "EntityReferenceProvider", "declarator": "entityReferenceProvider", "var_name": "entityReferenceProvider"}, {"original_string": "@Inject\n    private UserReferenceResolver<CurrentUserReference> currentUserReferenceUserReferenceResolver;", "modifier": "@Inject\n    private", "type": "UserReferenceResolver<CurrentUserReference>", "declarator": "currentUserReferenceUserReferenceResolver", "var_name": "currentUserReferenceUserReferenceResolver"}], "methods": [{"identifier": "serialize", "parameters": "(UserReference userReference)", "modifiers": "@Override public", "return": "DocumentReference", "signature": "DocumentReference serialize(UserReference userReference)", "full_signature": "@Override public DocumentReference serialize(UserReference userReference)", "class_method_signature": "DocumentDocumentReferenceUserReferenceSerializer.serialize(UserReference userReference)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-user/xwiki-platform-user-default/src/main/java/org/xwiki/user/internal/document/DocumentDocumentReferenceUserReferenceSerializer.java"}, "focal_method": {"identifier": "serialize", "parameters": "(UserReference userReference)", "modifiers": "@Override public", "return": "DocumentReference", "body": "@Override\n    public DocumentReference serialize(UserReference userReference)\n    {\n        DocumentReference result;\n        if (SuperAdminUserReference.INSTANCE == userReference) {\n            result = new DocumentReference(\n                this.entityReferenceProvider.getDefaultReference(EntityType.WIKI).getName(), XWIKI_SPACE, \"superadmin\");\n        } else if (GuestUserReference.INSTANCE == userReference) {\n            result = new DocumentReference(\n                this.entityReferenceProvider.getDefaultReference(EntityType.WIKI).getName(), XWIKI_SPACE, \"XWikiGuest\");\n        } else {\n            UserReference normalizedUserReference = userReference;\n            if (normalizedUserReference == null || CurrentUserReference.INSTANCE == normalizedUserReference) {\n                normalizedUserReference = this.currentUserReferenceUserReferenceResolver.resolve(null);\n            }\n            if (!(normalizedUserReference instanceof DocumentUserReference)) {\n                throw new IllegalArgumentException(String.format(\"Passed user reference must be of type [%s]\",\n                    DocumentUserReference.class.getName()));\n            }\n            result = ((DocumentUserReference) normalizedUserReference).getReference();\n        }\n        return result;\n    }", "signature": "DocumentReference serialize(UserReference userReference)", "full_signature": "@Override public DocumentReference serialize(UserReference userReference)", "class_method_signature": "DocumentDocumentReferenceUserReferenceSerializer.serialize(UserReference userReference)", "testcase": false, "constructor": false, "invocations": ["getName", "getDefaultReference", "getName", "getDefaultReference", "resolve", "format", "getName", "getReference"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}