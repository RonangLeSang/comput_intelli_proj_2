{"test_class": {"identifier": "PreferenceDateNotificationFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMockComponents\n    private PreferenceDateNotificationFilter notificationFilter;", "modifier": "@InjectMockComponents\n    private", "type": "PreferenceDateNotificationFilter", "declarator": "notificationFilter", "var_name": "notificationFilter"}], "file": "xwiki-platform-core/xwiki-platform-notifications/xwiki-platform-notifications-sources/src/test/java/org/xwiki/notifications/sources/internal/PreferenceDateNotificationFilterTest.java"}, "test_case": {"identifier": "shouldFilterDefault", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldFilterDefault()\n    {\n        assertFalse(this.notificationFilter.shouldFilter(mock(Event.class), Collections.emptyList()));\n    }", "signature": "void shouldFilterDefault()", "full_signature": "@Test void shouldFilterDefault()", "class_method_signature": "PreferenceDateNotificationFilterTest.shouldFilterDefault()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "shouldFilter", "mock", "emptyList"]}, "focal_class": {"identifier": "PreferenceDateNotificationFilter", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "shouldFilter", "parameters": "(Event event, Collection<NotificationPreference> preferences)", "modifiers": "public", "return": "boolean", "signature": "boolean shouldFilter(Event event, Collection<NotificationPreference> preferences)", "full_signature": "public boolean shouldFilter(Event event, Collection<NotificationPreference> preferences)", "class_method_signature": "PreferenceDateNotificationFilter.shouldFilter(Event event, Collection<NotificationPreference> preferences)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-notifications/xwiki-platform-notifications-sources/src/main/java/org/xwiki/notifications/sources/internal/PreferenceDateNotificationFilter.java"}, "focal_method": {"identifier": "shouldFilter", "parameters": "(Event event, Collection<NotificationPreference> preferences)", "modifiers": "public", "return": "boolean", "body": "public boolean shouldFilter(Event event, Collection<NotificationPreference> preferences)\n    {\n        for (NotificationPreference preference : preferences) {\n            Object preferenceEventType = preference.getProperties().get(NotificationPreferenceProperty.EVENT_TYPE);\n            if (preferenceEventType != null && event.getType().equals(preferenceEventType)\n                    // We filter (i.e. don't record) only if the preference starting strictly after the event\n                    // event starting on same date are not filtered.\n                    && preference.getStartDate().after(event.getDate())) {\n                return true;\n            }\n        }\n\n        return false;\n    }", "signature": "boolean shouldFilter(Event event, Collection<NotificationPreference> preferences)", "full_signature": "public boolean shouldFilter(Event event, Collection<NotificationPreference> preferences)", "class_method_signature": "PreferenceDateNotificationFilter.shouldFilter(Event event, Collection<NotificationPreference> preferences)", "testcase": false, "constructor": false, "invocations": ["get", "getProperties", "equals", "getType", "after", "getStartDate", "getDate"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}