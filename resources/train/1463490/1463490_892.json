{"test_class": {"identifier": "EntityTreeNodeIdConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMockComponents\n    private EntityTreeNodeIdConverter converter;", "modifier": "@InjectMockComponents\n    private", "type": "EntityTreeNodeIdConverter", "declarator": "converter", "var_name": "converter"}, {"original_string": "@MockComponent\n    protected EntityReferenceSerializer<String> defaultEntityReferenceSerializer;", "modifier": "@MockComponent\n    protected", "type": "EntityReferenceSerializer<String>", "declarator": "defaultEntityReferenceSerializer", "var_name": "defaultEntityReferenceSerializer"}, {"original_string": "@MockComponent\n    @Named(\"current\")\n    private EntityReferenceResolver<String> currentEntityReferenceResolver;", "modifier": "@MockComponent\n    @Named(\"current\")\n    private", "type": "EntityReferenceResolver<String>", "declarator": "currentEntityReferenceResolver", "var_name": "currentEntityReferenceResolver"}], "file": "xwiki-platform-core/xwiki-platform-tree/xwiki-platform-tree-api/src/test/java/org/xwiki/tree/internal/EntityTreeNodeIdConverterTest.java"}, "test_case": {"identifier": "convertToEntityReferenceWithoutEntityType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void convertToEntityReferenceWithoutEntityType()\n    {\n        assertNull(this.converter.convertToType(null, \"test\"));\n    }", "signature": "void convertToEntityReferenceWithoutEntityType()", "full_signature": "@Test public void convertToEntityReferenceWithoutEntityType()", "class_method_signature": "EntityTreeNodeIdConverterTest.convertToEntityReferenceWithoutEntityType()", "testcase": true, "constructor": false, "invocations": ["assertNull", "convertToType"]}, "focal_class": {"identifier": "EntityTreeNodeIdConverter", "superclass": "extends AbstractConverter<EntityReference>", "interfaces": "", "fields": [{"original_string": "@Inject\n    protected EntityReferenceSerializer<String> defaultEntityReferenceSerializer;", "modifier": "@Inject\n    protected", "type": "EntityReferenceSerializer<String>", "declarator": "defaultEntityReferenceSerializer", "var_name": "defaultEntityReferenceSerializer"}, {"original_string": "@Inject\n    @Named(\"current\")\n    private EntityReferenceResolver<String> currentEntityReferenceResolver;", "modifier": "@Inject\n    @Named(\"current\")\n    private", "type": "EntityReferenceResolver<String>", "declarator": "currentEntityReferenceResolver", "var_name": "currentEntityReferenceResolver"}], "methods": [{"identifier": "convertToString", "parameters": "(EntityReference entityReference)", "modifiers": "@Override protected", "return": "String", "signature": "String convertToString(EntityReference entityReference)", "full_signature": "@Override protected String convertToString(EntityReference entityReference)", "class_method_signature": "EntityTreeNodeIdConverter.convertToString(EntityReference entityReference)", "testcase": false, "constructor": false}, {"identifier": "underscoreToCamelCase", "parameters": "(String entityType)", "modifiers": "private", "return": "String", "signature": "String underscoreToCamelCase(String entityType)", "full_signature": "private String underscoreToCamelCase(String entityType)", "class_method_signature": "EntityTreeNodeIdConverter.underscoreToCamelCase(String entityType)", "testcase": false, "constructor": false}, {"identifier": "convertToType", "parameters": "(Type targetType, Object value)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override protected", "return": "EntityReference", "signature": "EntityReference convertToType(Type targetType, Object value)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override protected EntityReference convertToType(Type targetType, Object value)", "class_method_signature": "EntityTreeNodeIdConverter.convertToType(Type targetType, Object value)", "testcase": false, "constructor": false}, {"identifier": "camelCaseToUnderscore", "parameters": "(String nodeType)", "modifiers": "private", "return": "String", "signature": "String camelCaseToUnderscore(String nodeType)", "full_signature": "private String camelCaseToUnderscore(String nodeType)", "class_method_signature": "EntityTreeNodeIdConverter.camelCaseToUnderscore(String nodeType)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-tree/xwiki-platform-tree-api/src/main/java/org/xwiki/tree/internal/EntityTreeNodeIdConverter.java"}, "focal_method": {"identifier": "convertToType", "parameters": "(Type targetType, Object value)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override protected", "return": "EntityReference", "body": "@SuppressWarnings(\"unchecked\")\n    @Override\n    protected EntityReference convertToType(Type targetType, Object value)\n    {\n        String[] parts = StringUtils.split(String.valueOf(value), \":\", 2);\n        if (parts == null || parts.length != 2) {\n            return null;\n        }\n\n        try {\n            EntityType entityType = EntityType.valueOf(camelCaseToUnderscore(parts[0]).toUpperCase());\n            return this.currentEntityReferenceResolver.resolve(parts[1], entityType);\n        } catch (IllegalArgumentException e) {\n            return null;\n        }\n    }", "signature": "EntityReference convertToType(Type targetType, Object value)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override protected EntityReference convertToType(Type targetType, Object value)", "class_method_signature": "EntityTreeNodeIdConverter.convertToType(Type targetType, Object value)", "testcase": false, "constructor": false, "invocations": ["split", "valueOf", "valueOf", "toUpperCase", "camelCaseToUnderscore", "resolve"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}