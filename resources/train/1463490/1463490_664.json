{"test_class": {"identifier": "LESSExportActionListenerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public MockitoComponentMockingRule<LESSExportActionListener> mocker =\n        new MockitoComponentMockingRule<>(LESSExportActionListener.class);", "modifier": "@Rule\n    public", "type": "MockitoComponentMockingRule<LESSExportActionListener>", "declarator": "mocker =\n        new MockitoComponentMockingRule<>(LESSExportActionListener.class)", "var_name": "mocker"}], "file": "xwiki-platform-core/xwiki-platform-lesscss/xwiki-platform-lesscss-default/src/test/java/org/xwiki/lesscss/internal/listeners/LESSExportActionListenerTest.java"}, "test_case": {"identifier": "onEventWhenHTMLExport", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void onEventWhenHTMLExport() throws Exception\n    {\n        XWikiContext xcontext = mock(XWikiContext.class);\n        XWikiRequest request = mock(XWikiRequest.class);\n        when(xcontext.getRequest()).thenReturn(request);\n        when(request.get(\"format\")).thenReturn(\"html\");\n\n        this.mocker.getComponentUnderTest().onEvent(new ActionExecutingEvent(\"export\"), null, xcontext);\n\n        // The test is here: we verify that the cache is disabled!\n        LESSContext lessContext = mocker.getInstance(LESSContext.class);\n        verify(lessContext).setHtmlExport(true);\n    }", "signature": "void onEventWhenHTMLExport()", "full_signature": "@Test public void onEventWhenHTMLExport()", "class_method_signature": "LESSExportActionListenerTest.onEventWhenHTMLExport()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "getRequest", "thenReturn", "when", "get", "onEvent", "getComponentUnderTest", "getInstance", "setHtmlExport", "verify"]}, "focal_class": {"identifier": "LESSExportActionListener", "superclass": "", "interfaces": "implements EventListener", "fields": [{"original_string": "@Inject\n    private LESSContext lessContext;", "modifier": "@Inject\n    private", "type": "LESSContext", "declarator": "lessContext", "var_name": "lessContext"}], "methods": [{"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "LESSExportActionListener.getName()", "testcase": false, "constructor": false}, {"identifier": "getEvents", "parameters": "()", "modifiers": "@Override public", "return": "List<Event>", "signature": "List<Event> getEvents()", "full_signature": "@Override public List<Event> getEvents()", "class_method_signature": "LESSExportActionListener.getEvents()", "testcase": false, "constructor": false}, {"identifier": "onEvent", "parameters": "(Event event, Object source, Object data)", "modifiers": "@Override public", "return": "void", "signature": "void onEvent(Event event, Object source, Object data)", "full_signature": "@Override public void onEvent(Event event, Object source, Object data)", "class_method_signature": "LESSExportActionListener.onEvent(Event event, Object source, Object data)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-lesscss/xwiki-platform-lesscss-default/src/main/java/org/xwiki/lesscss/internal/listeners/LESSExportActionListener.java"}, "focal_method": {"identifier": "onEvent", "parameters": "(Event event, Object source, Object data)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onEvent(Event event, Object source, Object data)\n    {\n        // Do not use the the LESS cache if we're doing an HTML export because we need that URLs located in less file be\n        // recomputed (see ExportURLFactory).\n        XWikiContext xcontext = (XWikiContext) data;\n        XWikiRequest request = xcontext.getRequest();\n        String format = request.get(\"format\");\n        if (\"html\".equals(format)) {\n            lessContext.setHtmlExport(true);\n        }\n    }", "signature": "void onEvent(Event event, Object source, Object data)", "full_signature": "@Override public void onEvent(Event event, Object source, Object data)", "class_method_signature": "LESSExportActionListener.onEvent(Event event, Object source, Object data)", "testcase": false, "constructor": false, "invocations": ["getRequest", "get", "equals", "setHtmlExport"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}