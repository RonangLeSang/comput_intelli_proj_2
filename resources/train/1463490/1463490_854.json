{"test_class": {"identifier": "EntitySelectionTest", "superclass": "", "interfaces": "", "fields": [], "file": "xwiki-platform-core/xwiki-platform-refactoring/xwiki-platform-refactoring-api/src/test/java/org/xwiki/refactoring/job/question/EntitySelectionTest.java"}, "test_case": {"identifier": "compareToEntityReferenceNull", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void compareToEntityReferenceNull()\n    {\n        EntitySelection o = new EntitySelection(null);\n        assertEquals(-1, o.compareTo(new EntitySelection(null)));\n    }", "signature": "void compareToEntityReferenceNull()", "full_signature": "@Test void compareToEntityReferenceNull()", "class_method_signature": "EntitySelectionTest.compareToEntityReferenceNull()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "compareTo"]}, "focal_class": {"identifier": "EntitySelection", "superclass": "", "interfaces": "implements Comparable<EntitySelection>", "fields": [{"original_string": "private EntityReference entityReference;", "modifier": "private", "type": "EntityReference", "declarator": "entityReference", "var_name": "entityReference"}, {"original_string": "private State isSelected = State.UNKNOWN;", "modifier": "private", "type": "State", "declarator": "isSelected = State.UNKNOWN", "var_name": "isSelected"}], "methods": [{"identifier": "EntitySelection", "parameters": "(EntityReference entityReference)", "modifiers": "public", "return": "", "signature": " EntitySelection(EntityReference entityReference)", "full_signature": "public  EntitySelection(EntityReference entityReference)", "class_method_signature": "EntitySelection.EntitySelection(EntityReference entityReference)", "testcase": false, "constructor": true}, {"identifier": "getEntityReference", "parameters": "()", "modifiers": "public", "return": "EntityReference", "signature": "EntityReference getEntityReference()", "full_signature": "public EntityReference getEntityReference()", "class_method_signature": "EntitySelection.getEntityReference()", "testcase": false, "constructor": false}, {"identifier": "isSelected", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSelected()", "full_signature": "public boolean isSelected()", "class_method_signature": "EntitySelection.isSelected()", "testcase": false, "constructor": false}, {"identifier": "getState", "parameters": "()", "modifiers": "public", "return": "State", "signature": "State getState()", "full_signature": "public State getState()", "class_method_signature": "EntitySelection.getState()", "testcase": false, "constructor": false}, {"identifier": "setSelected", "parameters": "(boolean selected)", "modifiers": "public", "return": "void", "signature": "void setSelected(boolean selected)", "full_signature": "public void setSelected(boolean selected)", "class_method_signature": "EntitySelection.setSelected(boolean selected)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "EntitySelection.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object object)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object object)", "full_signature": "@Override public boolean equals(Object object)", "class_method_signature": "EntitySelection.equals(Object object)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(EntitySelection entitySelection)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(EntitySelection entitySelection)", "full_signature": "@Override public int compareTo(EntitySelection entitySelection)", "class_method_signature": "EntitySelection.compareTo(EntitySelection entitySelection)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-refactoring/xwiki-platform-refactoring-api/src/main/java/org/xwiki/refactoring/job/question/EntitySelection.java"}, "focal_method": {"identifier": "compareTo", "parameters": "(EntitySelection entitySelection)", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int compareTo(EntitySelection entitySelection)\n    {\n        if (entitySelection == null) {\n            throw new NullPointerException(\"Provided entitySelection should not be null.\");\n        }\n\n        if (entitySelection == this) {\n            return 0;\n        }\n\n        if (entityReference == null) {\n            return -1;\n        }\n\n        if (entitySelection.entityReference == null) {\n            return 1;\n        }\n\n        int result = entityReference.compareTo(entitySelection.entityReference);\n\n        if (result == 0) {\n            return isSelected.compareTo(entitySelection.isSelected);\n        } else {\n            return result;\n        }\n    }", "signature": "int compareTo(EntitySelection entitySelection)", "full_signature": "@Override public int compareTo(EntitySelection entitySelection)", "class_method_signature": "EntitySelection.compareTo(EntitySelection entitySelection)", "testcase": false, "constructor": false, "invocations": ["compareTo", "compareTo"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}