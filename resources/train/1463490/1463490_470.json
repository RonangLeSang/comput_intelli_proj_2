{"test_class": {"identifier": "WikiDescriptorMigratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public MockitoComponentMockingRule<WikiDescriptorMigrator> mocker =\n            new MockitoComponentMockingRule(WikiDescriptorMigrator.class, HibernateDataMigration.class,\n                    \"R54300WikiDescriptorMigration\");", "modifier": "@Rule\n    public", "type": "MockitoComponentMockingRule<WikiDescriptorMigrator>", "declarator": "mocker =\n            new MockitoComponentMockingRule(WikiDescriptorMigrator.class, HibernateDataMigration.class,\n                    \"R54300WikiDescriptorMigration\")", "var_name": "mocker"}, {"original_string": "private QueryManager queryManager;", "modifier": "private", "type": "QueryManager", "declarator": "queryManager", "var_name": "queryManager"}, {"original_string": "private WikiDescriptorManager wikiDescriptorManager;", "modifier": "private", "type": "WikiDescriptorManager", "declarator": "wikiDescriptorManager", "var_name": "wikiDescriptorManager"}, {"original_string": "private Provider<XWikiContext> xcontextProvider;", "modifier": "private", "type": "Provider<XWikiContext>", "declarator": "xcontextProvider", "var_name": "xcontextProvider"}, {"original_string": "private DocumentReferenceResolver<String> documentReferenceResolver;", "modifier": "private", "type": "DocumentReferenceResolver<String>", "declarator": "documentReferenceResolver", "var_name": "documentReferenceResolver"}, {"original_string": "private XWikiContext context;", "modifier": "private", "type": "XWikiContext", "declarator": "context", "var_name": "context"}, {"original_string": "private XWiki xwiki;", "modifier": "private", "type": "XWiki", "declarator": "xwiki", "var_name": "xwiki"}], "file": "xwiki-platform-core/xwiki-platform-wiki/xwiki-platform-wiki-default/src/test/java/org/xwiki/wiki/internal/descriptor/migrator/WikiDescriptorMigratorTest.java"}, "test_case": {"identifier": "hibernateMigrateWhenXWikiException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void hibernateMigrateWhenXWikiException() throws Exception\n    {\n        List<String> documentList = new ArrayList<>();\n        documentList.add(\"XWiki.XWikiServerSubwiki1\");\n\n        Query query = mock(Query.class);\n        when(queryManager.createQuery(any(), eq(Query.HQL))).thenReturn(query);\n        when(query.<String>execute()).thenReturn(documentList);\n\n        DocumentReference documentReference = new DocumentReference(\"mainWiki\", \"XWiki\", \"XWikiServerSubwiki1\");\n        when(documentReferenceResolver.resolve(documentList.get(0))).thenReturn(documentReference);\n\n        Exception exception = new XWikiException(0, 0, \"error in xwiki.getDocument()\");\n        when(xwiki.getDocument(documentReference, context)).thenThrow(exception);\n\n        // Test\n        mocker.getComponentUnderTest().hibernateMigrate();\n\n        // Verify\n        verify(mocker.getMockedLogger()).warn(\"Failed to get or save the wiki descriptor document [{}]. You\" +\n                \" will not see the corresponding wiki in the Wiki Index unless you give it a Pretty Name manually. {}\",\n                documentList.get(0), ExceptionUtils.getRootCauseMessage(exception));\n    }", "signature": "void hibernateMigrateWhenXWikiException()", "full_signature": "@Test public void hibernateMigrateWhenXWikiException()", "class_method_signature": "WikiDescriptorMigratorTest.hibernateMigrateWhenXWikiException()", "testcase": true, "constructor": false, "invocations": ["add", "mock", "thenReturn", "when", "createQuery", "any", "eq", "thenReturn", "when", "execute", "thenReturn", "when", "resolve", "get", "thenThrow", "when", "getDocument", "hibernateMigrate", "getComponentUnderTest", "warn", "verify", "getMockedLogger", "get", "getRootCauseMessage"]}, "focal_class": {"identifier": "WikiDescriptorMigrator", "superclass": "extends AbstractHibernateDataMigration", "interfaces": "", "fields": [{"original_string": "@Inject\n    private QueryManager queryManager;", "modifier": "@Inject\n    private", "type": "QueryManager", "declarator": "queryManager", "var_name": "queryManager"}, {"original_string": "@Inject\n    private WikiDescriptorManager wikiDescriptorManager;", "modifier": "@Inject\n    private", "type": "WikiDescriptorManager", "declarator": "wikiDescriptorManager", "var_name": "wikiDescriptorManager"}, {"original_string": "@Inject\n    private Provider<XWikiContext> xcontextProvider;", "modifier": "@Inject\n    private", "type": "Provider<XWikiContext>", "declarator": "xcontextProvider", "var_name": "xcontextProvider"}, {"original_string": "@Inject\n    private DocumentReferenceResolver<String> documentReferenceResolver;", "modifier": "@Inject\n    private", "type": "DocumentReferenceResolver<String>", "declarator": "documentReferenceResolver", "var_name": "documentReferenceResolver"}, {"original_string": "@Inject\n    private Logger logger;", "modifier": "@Inject\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}], "methods": [{"identifier": "getDescription", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDescription()", "full_signature": "@Override public String getDescription()", "class_method_signature": "WikiDescriptorMigrator.getDescription()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "@Override public", "return": "XWikiDBVersion", "signature": "XWikiDBVersion getVersion()", "full_signature": "@Override public XWikiDBVersion getVersion()", "class_method_signature": "WikiDescriptorMigrator.getVersion()", "testcase": false, "constructor": false}, {"identifier": "shouldExecute", "parameters": "(XWikiDBVersion startupVersion)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean shouldExecute(XWikiDBVersion startupVersion)", "full_signature": "@Override public boolean shouldExecute(XWikiDBVersion startupVersion)", "class_method_signature": "WikiDescriptorMigrator.shouldExecute(XWikiDBVersion startupVersion)", "testcase": false, "constructor": false}, {"identifier": "hibernateMigrate", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void hibernateMigrate()", "full_signature": "@Override protected void hibernateMigrate()", "class_method_signature": "WikiDescriptorMigrator.hibernateMigrate()", "testcase": false, "constructor": false}, {"identifier": "fixDocument", "parameters": "(String documentName)", "modifiers": "private", "return": "void", "signature": "void fixDocument(String documentName)", "full_signature": "private void fixDocument(String documentName)", "class_method_signature": "WikiDescriptorMigrator.fixDocument(String documentName)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-wiki/xwiki-platform-wiki-default/src/main/java/org/xwiki/wiki/internal/descriptor/migrator/WikiDescriptorMigrator.java"}, "focal_method": {"identifier": "hibernateMigrate", "parameters": "()", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void hibernateMigrate() throws DataMigrationException, XWikiException\n    {\n        String hql = \"SELECT DISTINCT doc.fullName FROM XWikiDocument doc, BaseObject obj WHERE doc.fullName = obj.name\"\n            + \" AND obj.className = :className AND doc.fullName <> :template AND doc.fullName NOT IN \"\n            + \"(SELECT DISTINCT doc2.fullName FROM XWikiDocument doc2, BaseObject obj2, StringProperty propPrettyName\"\n            + \" WHERE doc2.fullName = obj2.name AND obj2.className = :className\"\n            + \" AND propPrettyName.id = obj2.id AND propPrettyName.name = :propertyName)\";\n\n        try {\n            Query query = queryManager.createQuery(hql, Query.HQL);\n            query.bindValue(\"className\", String.format(\"%s.%s\", XWiki.SYSTEM_SPACE,\n                    XWikiServerClassDocumentInitializer.DOCUMENT_NAME));\n            query.bindValue(\"propertyName\", XWikiServerClassDocumentInitializer.FIELD_WIKIPRETTYNAME);\n            query.bindValue(\"template\", \"XWiki.XWikiServerClassTemplate\");\n            List<String> results = query.execute();\n            for (String result : results) {\n                fixDocument(result);\n            }\n        } catch (QueryException e) {\n            logger.error(\"Failed to perform a query on the main wiki.\", e);\n        }\n    }", "signature": "void hibernateMigrate()", "full_signature": "@Override protected void hibernateMigrate()", "class_method_signature": "WikiDescriptorMigrator.hibernateMigrate()", "testcase": false, "constructor": false, "invocations": ["createQuery", "bindValue", "format", "bindValue", "bindValue", "execute", "fixDocument", "error"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}