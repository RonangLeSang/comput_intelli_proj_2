{"test_class": {"identifier": "DefaultDocumentSplitterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public MockitoComponentMockingRule<DocumentSplitter> mocker = new MockitoComponentMockingRule<DocumentSplitter>(\n        DefaultDocumentSplitter.class);", "modifier": "@Rule\n    public", "type": "MockitoComponentMockingRule<DocumentSplitter>", "declarator": "mocker = new MockitoComponentMockingRule<DocumentSplitter>(\n        DefaultDocumentSplitter.class)", "var_name": "mocker"}], "file": "xwiki-platform-core/xwiki-platform-refactoring/xwiki-platform-refactoring-api/src/test/java/org/xwiki/refactoring/internal/splitter/DefaultDocumentSplitterTest.java"}, "test_case": {"identifier": "updateAnchors", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void updateAnchors() throws Exception\n    {\n        SplittingCriterion splittingCriterion = mock(SplittingCriterion.class);\n        when(splittingCriterion.shouldSplit(any(Block.class), anyInt())).thenReturn(false, false, true, true);\n        when(splittingCriterion.shouldIterate(any(SectionBlock.class), anyInt())).thenReturn(false, false, false);\n\n        NamingCriterion namingCriterion = mock(NamingCriterion.class);\n        when(namingCriterion.getDocumentName(any(XDOM.class))).thenReturn(\"Child1\", \"Child2\");\n\n        // [[link>>||anchor=\"chapter1\"]]\n        ResourceReference reference = new ResourceReference(\"\", ResourceType.DOCUMENT);\n        reference.setParameter(\"anchor\", \"chapter1\");\n        LinkBlock link = new LinkBlock(Arrays.<Block>asList(new WordBlock(\"link\")), reference, false);\n        ParagraphBlock firstParagraph = new ParagraphBlock(Arrays.<Block>asList(link));\n\n        // [[link>>path:||anchor=\"chapter1\"]]\n        reference = new ResourceReference(\"\", ResourceType.PATH);\n        reference.setParameter(\"anchor\", \"chapter1\");\n        link = new LinkBlock(Arrays.<Block>asList(new WordBlock(\"link\")), reference, false);\n        ParagraphBlock secondParagraph = new ParagraphBlock(Arrays.<Block>asList(link));\n\n        // = {{id name=\"chapter1\"}}Chapter 1 =\n        HeaderBlock header = new HeaderBlock(Arrays.<Block>asList(new IdBlock(\"chapter1\"), new WordBlock(\"Chapter 1\")),\n            HeaderLevel.LEVEL1);\n        SectionBlock section1 = new SectionBlock(Arrays.<Block>asList(header));\n\n        // = Chapter 2 ==\n        // [[link>>path:#chapter1]]\n        header = new HeaderBlock(Arrays.<Block>asList(new WordBlock(\"Chapter 2\")), HeaderLevel.LEVEL1);\n        reference = new ResourceReference(\"#chapter1\", ResourceType.PATH);\n        link = new LinkBlock(Arrays.<Block>asList(new WordBlock(\"link\")), reference, false);\n        SectionBlock section2 =\n            new SectionBlock(Arrays.<Block>asList(header, new ParagraphBlock(Arrays.<Block>asList(link))));\n\n        XDOM xdom = new XDOM(Arrays.<Block>asList(firstParagraph, secondParagraph, section1, section2));\n        WikiDocument document = new WikiDocument(\"Space.Page\", xdom, null);\n\n        List<WikiDocument> result = mocker.getComponentUnderTest().split(document, splittingCriterion, namingCriterion);\n\n        ClassBlockMatcher linkMatcher = new ClassBlockMatcher(LinkBlock.class);\n\n        ResourceReference updatedReference =\n            document.getXdom().<LinkBlock>getFirstBlock(linkMatcher, Axes.DESCENDANT).getReference();\n        assertEquals(\"chapter1\", updatedReference.getParameter(\"anchor\"));\n        assertEquals(result.get(1).getFullName(), updatedReference.getReference());\n\n        // Verify that the path reference was not updated.\n        updatedReference = document.getXdom().<LinkBlock>getBlocks(linkMatcher, Axes.DESCENDANT).get(1).getReference();\n        assertEquals(\"\", updatedReference.getReference());\n        assertEquals(\"chapter1\", updatedReference.getParameter(\"anchor\"));\n\n        updatedReference =\n            result.get(2).getXdom().<LinkBlock>getFirstBlock(linkMatcher, Axes.DESCENDANT).getReference();\n        assertEquals(ResourceType.DOCUMENT, updatedReference.getType());\n        assertEquals(\"chapter1\", updatedReference.getParameter(\"anchor\"));\n        assertEquals(result.get(1).getFullName(), updatedReference.getReference());\n    }", "signature": "void updateAnchors()", "full_signature": "@Test public void updateAnchors()", "class_method_signature": "DefaultDocumentSplitterTest.updateAnchors()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "shouldSplit", "any", "anyInt", "thenReturn", "when", "shouldIterate", "any", "anyInt", "mock", "thenReturn", "when", "getDocumentName", "any", "setParameter", "asList", "asList", "setParameter", "asList", "asList", "asList", "asList", "asList", "asList", "asList", "asList", "asList", "split", "getComponentUnderTest", "getReference", "getFirstBlock", "getXdom", "assertEquals", "getParameter", "assertEquals", "getFullName", "get", "getReference", "getReference", "get", "getBlocks", "getXdom", "assertEquals", "getReference", "assertEquals", "getParameter", "getReference", "getFirstBlock", "getXdom", "get", "assertEquals", "getType", "assertEquals", "getParameter", "assertEquals", "getFullName", "get", "getReference"]}, "focal_class": {"identifier": "DefaultDocumentSplitter", "superclass": "", "interfaces": "implements DocumentSplitter", "fields": [{"original_string": "private static final String ANCHOR_PARAMETER = \"anchor\";", "modifier": "private static final", "type": "String", "declarator": "ANCHOR_PARAMETER = \"anchor\"", "var_name": "ANCHOR_PARAMETER"}], "methods": [{"identifier": "split", "parameters": "(WikiDocument rootDoc, SplittingCriterion splittingCriterion,\n        NamingCriterion namingCriterion)", "modifiers": "@Override public", "return": "List<WikiDocument>", "signature": "List<WikiDocument> split(WikiDocument rootDoc, SplittingCriterion splittingCriterion,\n        NamingCriterion namingCriterion)", "full_signature": "@Override public List<WikiDocument> split(WikiDocument rootDoc, SplittingCriterion splittingCriterion,\n        NamingCriterion namingCriterion)", "class_method_signature": "DefaultDocumentSplitter.split(WikiDocument rootDoc, SplittingCriterion splittingCriterion,\n        NamingCriterion namingCriterion)", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "(WikiDocument parentDoc, List<Block> children, int depth, List<WikiDocument> result,\n        SplittingCriterion splittingCriterion, NamingCriterion namingCriterion)", "modifiers": "private", "return": "void", "signature": "void split(WikiDocument parentDoc, List<Block> children, int depth, List<WikiDocument> result,\n        SplittingCriterion splittingCriterion, NamingCriterion namingCriterion)", "full_signature": "private void split(WikiDocument parentDoc, List<Block> children, int depth, List<WikiDocument> result,\n        SplittingCriterion splittingCriterion, NamingCriterion namingCriterion)", "class_method_signature": "DefaultDocumentSplitter.split(WikiDocument parentDoc, List<Block> children, int depth, List<WikiDocument> result,\n        SplittingCriterion splittingCriterion, NamingCriterion namingCriterion)", "testcase": false, "constructor": false}, {"identifier": "createLink", "parameters": "(Block block, String target)", "modifiers": "private", "return": "LinkBlock", "signature": "LinkBlock createLink(Block block, String target)", "full_signature": "private LinkBlock createLink(Block block, String target)", "class_method_signature": "DefaultDocumentSplitter.createLink(Block block, String target)", "testcase": false, "constructor": false}, {"identifier": "updateAnchors", "parameters": "(List<WikiDocument> documents)", "modifiers": "private", "return": "void", "signature": "void updateAnchors(List<WikiDocument> documents)", "full_signature": "private void updateAnchors(List<WikiDocument> documents)", "class_method_signature": "DefaultDocumentSplitter.updateAnchors(List<WikiDocument> documents)", "testcase": false, "constructor": false}, {"identifier": "isDocument", "parameters": "(ResourceType resourceType)", "modifiers": "private", "return": "boolean", "signature": "boolean isDocument(ResourceType resourceType)", "full_signature": "private boolean isDocument(ResourceType resourceType)", "class_method_signature": "DefaultDocumentSplitter.isDocument(ResourceType resourceType)", "testcase": false, "constructor": false}, {"identifier": "updateAnchors", "parameters": "(WikiDocument document, Map<String, String> fragments)", "modifiers": "private", "return": "void", "signature": "void updateAnchors(WikiDocument document, Map<String, String> fragments)", "full_signature": "private void updateAnchors(WikiDocument document, Map<String, String> fragments)", "class_method_signature": "DefaultDocumentSplitter.updateAnchors(WikiDocument document, Map<String, String> fragments)", "testcase": false, "constructor": false}, {"identifier": "collectDocumentFragments", "parameters": "(List<WikiDocument> documents)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> collectDocumentFragments(List<WikiDocument> documents)", "full_signature": "private Map<String, String> collectDocumentFragments(List<WikiDocument> documents)", "class_method_signature": "DefaultDocumentSplitter.collectDocumentFragments(List<WikiDocument> documents)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-refactoring/xwiki-platform-refactoring-api/src/main/java/org/xwiki/refactoring/internal/splitter/DefaultDocumentSplitter.java"}, "focal_method": {"identifier": "updateAnchors", "parameters": "(List<WikiDocument> documents)", "modifiers": "private", "return": "void", "body": "private void updateAnchors(List<WikiDocument> documents)\n    {\n        // First we need to collect all the document fragments and map them to their new location.\n        Map<String, String> fragments = collectDocumentFragments(documents);\n\n        // Update the anchors.\n        for (WikiDocument document : documents) {\n            updateAnchors(document, fragments);\n        }\n    }", "signature": "void updateAnchors(List<WikiDocument> documents)", "full_signature": "private void updateAnchors(List<WikiDocument> documents)", "class_method_signature": "DefaultDocumentSplitter.updateAnchors(List<WikiDocument> documents)", "testcase": false, "constructor": false, "invocations": ["collectDocumentFragments", "updateAnchors"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}