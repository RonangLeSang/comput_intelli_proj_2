{"test_class": {"identifier": "DBListClassTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public MockitoOldcoreRule oldcore = new MockitoOldcoreRule();", "modifier": "@Rule\n    public", "type": "MockitoOldcoreRule", "declarator": "oldcore = new MockitoOldcoreRule()", "var_name": "oldcore"}], "file": "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/objects/classes/DBListClassTest.java"}, "test_case": {"identifier": "testReturnColWithOneColumn", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReturnColWithOneColumn()\n    {\n        DBListClass dblc = new DBListClass();\n        assertEquals(\"doc.fullName\", dblc.returnCol(\"select doc.fullName from XWikiDocument as doc\", true));\n        assertEquals(\"-\", dblc.returnCol(\"select doc.fullName from XWikiDocument as doc\", false));\n    }", "signature": "void testReturnColWithOneColumn()", "full_signature": "@Test public void testReturnColWithOneColumn()", "class_method_signature": "DBListClassTest.testReturnColWithOneColumn()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "returnCol", "assertEquals", "returnCol"]}, "focal_class": {"identifier": "DBListClass", "superclass": "extends ListClass", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private static final String XCLASSNAME = \"dblist\";", "modifier": "private static final", "type": "String", "declarator": "XCLASSNAME = \"dblist\"", "var_name": "XCLASSNAME"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(DBListClass.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(DBListClass.class)", "var_name": "LOGGER"}, {"original_string": "protected static final String DEFAULT_QUERY = \"select doc.name from XWikiDocument doc where 1 = 0\";", "modifier": "protected static final", "type": "String", "declarator": "DEFAULT_QUERY = \"select doc.name from XWikiDocument doc where 1 = 0\"", "var_name": "DEFAULT_QUERY"}, {"original_string": "private List<ListItem> cachedDBList;", "modifier": "private", "type": "List<ListItem>", "declarator": "cachedDBList", "var_name": "cachedDBList"}], "methods": [{"identifier": "DBListClass", "parameters": "(String name, String prettyname, PropertyMetaClass wclass)", "modifiers": "public", "return": "", "signature": " DBListClass(String name, String prettyname, PropertyMetaClass wclass)", "full_signature": "public  DBListClass(String name, String prettyname, PropertyMetaClass wclass)", "class_method_signature": "DBListClass.DBListClass(String name, String prettyname, PropertyMetaClass wclass)", "testcase": false, "constructor": true}, {"identifier": "DBListClass", "parameters": "(PropertyMetaClass wclass)", "modifiers": "public", "return": "", "signature": " DBListClass(PropertyMetaClass wclass)", "full_signature": "public  DBListClass(PropertyMetaClass wclass)", "class_method_signature": "DBListClass.DBListClass(PropertyMetaClass wclass)", "testcase": false, "constructor": true}, {"identifier": "DBListClass", "parameters": "()", "modifiers": "public", "return": "", "signature": " DBListClass()", "full_signature": "public  DBListClass()", "class_method_signature": "DBListClass.DBListClass()", "testcase": false, "constructor": true}, {"identifier": "makeList", "parameters": "(List<Object> list)", "modifiers": "public", "return": "List<ListItem>", "signature": "List<ListItem> makeList(List<Object> list)", "full_signature": "public List<ListItem> makeList(List<Object> list)", "class_method_signature": "DBListClass.makeList(List<Object> list)", "testcase": false, "constructor": false}, {"identifier": "toStringButEmptyIfNull", "parameters": "(Object object)", "modifiers": "private", "return": "String", "signature": "String toStringButEmptyIfNull(Object object)", "full_signature": "private String toStringButEmptyIfNull(Object object)", "class_method_signature": "DBListClass.toStringButEmptyIfNull(Object object)", "testcase": false, "constructor": false}, {"identifier": "getDBList", "parameters": "(XWikiContext context)", "modifiers": "public", "return": "List<ListItem>", "signature": "List<ListItem> getDBList(XWikiContext context)", "full_signature": "public List<ListItem> getDBList(XWikiContext context)", "class_method_signature": "DBListClass.getDBList(XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "getList", "parameters": "(XWikiContext context)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getList(XWikiContext context)", "full_signature": "@Override public List<String> getList(XWikiContext context)", "class_method_signature": "DBListClass.getList(XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "getMap", "parameters": "(XWikiContext context)", "modifiers": "@Override public", "return": "Map<String, ListItem>", "signature": "Map<String, ListItem> getMap(XWikiContext context)", "full_signature": "@Override public Map<String, ListItem> getMap(XWikiContext context)", "class_method_signature": "DBListClass.getMap(XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "getQuery", "parameters": "(XWikiContext context)", "modifiers": "@Deprecated public", "return": "String", "signature": "String getQuery(XWikiContext context)", "full_signature": "@Deprecated public String getQuery(XWikiContext context)", "class_method_signature": "DBListClass.getQuery(XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "getSql", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSql()", "full_signature": "public String getSql()", "class_method_signature": "DBListClass.getSql()", "testcase": false, "constructor": false}, {"identifier": "setSql", "parameters": "(String sql)", "modifiers": "public", "return": "void", "signature": "void setSql(String sql)", "full_signature": "public void setSql(String sql)", "class_method_signature": "DBListClass.setSql(String sql)", "testcase": false, "constructor": false}, {"identifier": "getClassname", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getClassname()", "full_signature": "public String getClassname()", "class_method_signature": "DBListClass.getClassname()", "testcase": false, "constructor": false}, {"identifier": "setClassname", "parameters": "(String classname)", "modifiers": "public", "return": "void", "signature": "void setClassname(String classname)", "full_signature": "public void setClassname(String classname)", "class_method_signature": "DBListClass.setClassname(String classname)", "testcase": false, "constructor": false}, {"identifier": "getIdField", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIdField()", "full_signature": "public String getIdField()", "class_method_signature": "DBListClass.getIdField()", "testcase": false, "constructor": false}, {"identifier": "setIdField", "parameters": "(String idField)", "modifiers": "public", "return": "void", "signature": "void setIdField(String idField)", "full_signature": "public void setIdField(String idField)", "class_method_signature": "DBListClass.setIdField(String idField)", "testcase": false, "constructor": false}, {"identifier": "getValueField", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getValueField()", "full_signature": "public String getValueField()", "class_method_signature": "DBListClass.getValueField()", "testcase": false, "constructor": false}, {"identifier": "setValueField", "parameters": "(String valueField)", "modifiers": "public", "return": "void", "signature": "void setValueField(String valueField)", "full_signature": "public void setValueField(String valueField)", "class_method_signature": "DBListClass.setValueField(String valueField)", "testcase": false, "constructor": false}, {"identifier": "getCachedDBList", "parameters": "(XWikiContext context)", "modifiers": "public", "return": "List<ListItem>", "signature": "List<ListItem> getCachedDBList(XWikiContext context)", "full_signature": "public List<ListItem> getCachedDBList(XWikiContext context)", "class_method_signature": "DBListClass.getCachedDBList(XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "setCachedDBList", "parameters": "(List<ListItem> cachedDBList, XWikiContext context)", "modifiers": "public", "return": "void", "signature": "void setCachedDBList(List<ListItem> cachedDBList, XWikiContext context)", "full_signature": "public void setCachedDBList(List<ListItem> cachedDBList, XWikiContext context)", "class_method_signature": "DBListClass.setCachedDBList(List<ListItem> cachedDBList, XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "flushCache", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void flushCache()", "full_signature": "@Override public void flushCache()", "class_method_signature": "DBListClass.flushCache()", "testcase": false, "constructor": false}, {"identifier": "returnCol", "parameters": "(String hqlQuery, boolean first)", "modifiers": "public", "return": "String", "signature": "String returnCol(String hqlQuery, boolean first)", "full_signature": "public String returnCol(String hqlQuery, boolean first)", "class_method_signature": "DBListClass.returnCol(String hqlQuery, boolean first)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(String val, String sql, XWikiContext context)", "modifiers": "public", "return": "String", "signature": "String getValue(String val, String sql, XWikiContext context)", "full_signature": "public String getValue(String val, String sql, XWikiContext context)", "class_method_signature": "DBListClass.getValue(String val, String sql, XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "displayEdit", "parameters": "(StringBuffer buffer, String name, String prefix, BaseCollection object,\n        XWikiContext context)", "modifiers": "@Override public", "return": "void", "signature": "void displayEdit(StringBuffer buffer, String name, String prefix, BaseCollection object,\n        XWikiContext context)", "full_signature": "@Override public void displayEdit(StringBuffer buffer, String name, String prefix, BaseCollection object,\n        XWikiContext context)", "class_method_signature": "DBListClass.displayEdit(StringBuffer buffer, String name, String prefix, BaseCollection object,\n        XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "displayView", "parameters": "(StringBuffer buffer, String name, String prefix, BaseCollection object,\n        XWikiContext context)", "modifiers": "@Override public", "return": "void", "signature": "void displayView(StringBuffer buffer, String name, String prefix, BaseCollection object,\n        XWikiContext context)", "full_signature": "@Override public void displayView(StringBuffer buffer, String name, String prefix, BaseCollection object,\n        XWikiContext context)", "class_method_signature": "DBListClass.displayView(StringBuffer buffer, String name, String prefix, BaseCollection object,\n        XWikiContext context)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/objects/classes/DBListClass.java"}, "focal_method": {"identifier": "returnCol", "parameters": "(String hqlQuery, boolean first)", "modifiers": "public", "return": "String", "body": "public String returnCol(String hqlQuery, boolean first)\n    {\n        String firstCol = \"-\", secondCol = \"-\";\n        if (StringUtils.isEmpty(hqlQuery)) {\n            return firstCol;\n        }\n\n        int fromIndx = hqlQuery.toLowerCase().indexOf(\"from\");\n\n        if (fromIndx > 0) {\n            String beforeFrom = hqlQuery.substring(0, fromIndx).replaceAll(\"\\\\s+\", \" \");\n            int commaIndex = beforeFrom.indexOf(\",\");\n\n            // There are two columns selected\n            if (commaIndex > 0) {\n                StringTokenizer st = new StringTokenizer(beforeFrom, \" ,()\", true);\n                ArrayList<String> words = new ArrayList<>();\n\n                while (st.hasMoreTokens()) {\n                    words.add(st.nextToken());\n                }\n\n                int comma = words.indexOf(\",\") - 1;\n                while (words.get(comma).compareTo(\" \") == 0) {\n                    comma--;\n                }\n                firstCol = words.get(comma).trim();\n\n                comma = words.indexOf(\",\") + 1;\n                while (words.get(comma).compareTo(\" \") == 0) {\n                    comma++;\n                }\n\n                if (words.get(comma).compareTo(\"(\") == 0) {\n                    int i = comma + 1;\n                    while (words.get(i).compareTo(\")\") != 0) {\n                        secondCol += words.get(i);\n                        i++;\n                    }\n                    secondCol += \")\";\n                } else {\n                    secondCol = words.get(comma).trim();\n                }\n            }\n            // Only one column selected\n            else {\n                firstCol = StringUtils.substringAfterLast(beforeFrom.trim(), \" \");\n            }\n        }\n        if (first == true) {\n            return firstCol;\n        } else {\n            return secondCol;\n        }\n    }", "signature": "String returnCol(String hqlQuery, boolean first)", "full_signature": "public String returnCol(String hqlQuery, boolean first)", "class_method_signature": "DBListClass.returnCol(String hqlQuery, boolean first)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "indexOf", "toLowerCase", "replaceAll", "substring", "indexOf", "hasMoreTokens", "add", "nextToken", "indexOf", "compareTo", "get", "trim", "get", "indexOf", "compareTo", "get", "compareTo", "get", "compareTo", "get", "get", "trim", "get", "substringAfterLast", "trim"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}