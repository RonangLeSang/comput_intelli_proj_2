{"test_class": {"identifier": "SignedMacroBlockReferenceResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public final MockitoComponentMockingRule<BlockReferenceResolver<Block>> mocker =\n        new MockitoComponentMockingRule<BlockReferenceResolver<Block>>(SignedMacroBlockReferenceResolver.class);", "modifier": "@Rule\n    public final", "type": "MockitoComponentMockingRule<BlockReferenceResolver<Block>>", "declarator": "mocker =\n        new MockitoComponentMockingRule<BlockReferenceResolver<Block>>(SignedMacroBlockReferenceResolver.class)", "var_name": "mocker"}, {"original_string": "private static final byte[] DIGEST_BLOCK = \"digest\".getBytes();", "modifier": "private static final", "type": "byte[]", "declarator": "DIGEST_BLOCK = \"digest\".getBytes()", "var_name": "DIGEST_BLOCK"}, {"original_string": "private static final Block BLOCK = new XDOM(Collections.<Block>emptyList());", "modifier": "private static final", "type": "Block", "declarator": "BLOCK = new XDOM(Collections.<Block>emptyList())", "var_name": "BLOCK"}, {"original_string": "private static final String ENCODED = \"abcd\";", "modifier": "private static final", "type": "String", "declarator": "ENCODED = \"abcd\"", "var_name": "ENCODED"}, {"original_string": "private BlockDumper dumper;", "modifier": "private", "type": "BlockDumper", "declarator": "dumper", "var_name": "dumper"}, {"original_string": "private OutputStream stream;", "modifier": "private", "type": "OutputStream", "declarator": "stream", "var_name": "stream"}], "file": "xwiki-platform-core/xwiki-platform-rendering/xwiki-platform-rendering-signature/src/test/java/org/xwiki/model/reference/internal/SignedMacroBlockReferenceResolverTest.java"}, "test_case": {"identifier": "testResolveWithoutParent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testResolveWithoutParent() throws Exception\n    {\n        assertThat(mocker.getComponentUnderTest().resolve(BLOCK), equalTo(new BlockReference(ENCODED)));\n        verify(dumper).dump(stream, BLOCK);\n    }", "signature": "void testResolveWithoutParent()", "full_signature": "@Test public void testResolveWithoutParent()", "class_method_signature": "SignedMacroBlockReferenceResolverTest.testResolveWithoutParent()", "testcase": true, "constructor": false, "invocations": ["assertThat", "resolve", "getComponentUnderTest", "equalTo", "dump", "verify"]}, "focal_class": {"identifier": "SignedMacroBlockReferenceResolver", "superclass": "", "interfaces": "implements BlockReferenceResolver<Block>", "fields": [{"original_string": "@Inject\n    @Named(\"SHA-1\")\n    private DigestFactory digestFactory;", "modifier": "@Inject\n    @Named(\"SHA-1\")\n    private", "type": "DigestFactory", "declarator": "digestFactory", "var_name": "digestFactory"}, {"original_string": "@Inject\n    @Named(\"Base64\")\n    private BinaryStringEncoder encoder;", "modifier": "@Inject\n    @Named(\"Base64\")\n    private", "type": "BinaryStringEncoder", "declarator": "encoder", "var_name": "encoder"}, {"original_string": "@Inject\n    @Named(\"macro\")\n    private BlockDumper dumper;", "modifier": "@Inject\n    @Named(\"macro\")\n    private", "type": "BlockDumper", "declarator": "dumper", "var_name": "dumper"}], "methods": [{"identifier": "resolve", "parameters": "(Block block, Object... parameters)", "modifiers": "@Override public", "return": "BlockReference", "signature": "BlockReference resolve(Block block, Object... parameters)", "full_signature": "@Override public BlockReference resolve(Block block, Object... parameters)", "class_method_signature": "SignedMacroBlockReferenceResolver.resolve(Block block, Object... parameters)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-rendering/xwiki-platform-rendering-signature/src/main/java/org/xwiki/model/reference/internal/SignedMacroBlockReferenceResolver.java"}, "focal_method": {"identifier": "resolve", "parameters": "(Block block, Object... parameters)", "modifiers": "@Override public", "return": "BlockReference", "body": "@Override\n    public BlockReference resolve(Block block, Object... parameters)\n    {\n        EntityReference parent = null;\n\n        if (parameters.length > 0 && parameters[0] instanceof EntityReference) {\n            // Try to extract the type from the passed parameter.\n            parent = (EntityReference) parameters[0];\n        }\n\n        Digest digest = digestFactory.getInstance();\n\n        try {\n            dumper.dump(digest.getOutputStream(), block);\n            return new BlockReference(new EntityReference(encoder.encode(digest.digest()), EntityType.BLOCK, parent));\n        } catch (IOException ignore) {\n            // Ignored\n        }\n        return null;\n    }", "signature": "BlockReference resolve(Block block, Object... parameters)", "full_signature": "@Override public BlockReference resolve(Block block, Object... parameters)", "class_method_signature": "SignedMacroBlockReferenceResolver.resolve(Block block, Object... parameters)", "testcase": false, "constructor": false, "invocations": ["getInstance", "dump", "getOutputStream", "encode", "digest"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}