{"test_class": {"identifier": "OfficeServerScriptServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static String ERROR_PRIVILEGES = \"Inadequate privileges.\";", "modifier": "private final static", "type": "String", "declarator": "ERROR_PRIVILEGES = \"Inadequate privileges.\"", "var_name": "ERROR_PRIVILEGES"}, {"original_string": "private static final String ERROR_FORBIDDEN = \"Office server administration is forbidden for sub-wikis.\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_FORBIDDEN = \"Office server administration is forbidden for sub-wikis.\"", "var_name": "ERROR_FORBIDDEN"}, {"original_string": "@InjectMockComponents\n    private OfficeServerScriptService officeServerScriptService;", "modifier": "@InjectMockComponents\n    private", "type": "OfficeServerScriptService", "declarator": "officeServerScriptService", "var_name": "officeServerScriptService"}, {"original_string": "@MockComponent\n    private ModelContext modelContext;", "modifier": "@MockComponent\n    private", "type": "ModelContext", "declarator": "modelContext", "var_name": "modelContext"}, {"original_string": "@MockComponent\n    private DocumentAccessBridge documentAccessBridge;", "modifier": "@MockComponent\n    private", "type": "DocumentAccessBridge", "declarator": "documentAccessBridge", "var_name": "documentAccessBridge"}, {"original_string": "@MockComponent\n    private OfficeServer officeServer;", "modifier": "@MockComponent\n    private", "type": "OfficeServer", "declarator": "officeServer", "var_name": "officeServer"}, {"original_string": "@MockComponent\n    private Execution execution;", "modifier": "@MockComponent\n    private", "type": "Execution", "declarator": "execution", "var_name": "execution"}, {"original_string": "@Mock\n    private ExecutionContext executionContext;", "modifier": "@Mock\n    private", "type": "ExecutionContext", "declarator": "executionContext", "var_name": "executionContext"}, {"original_string": "@RegisterExtension\n    LogCaptureExtension logCapture = new LogCaptureExtension(LogLevel.INFO);", "modifier": "@RegisterExtension", "type": "LogCaptureExtension", "declarator": "logCapture = new LogCaptureExtension(LogLevel.INFO)", "var_name": "logCapture"}], "file": "xwiki-platform-core/xwiki-platform-office/xwiki-platform-office-importer/src/test/java/org/xwiki/officeimporter/server/script/OfficeServerScriptServiceTest.java"}, "test_case": {"identifier": "startServerError", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void startServerError() throws OfficeServerException\n    {\n        when(this.modelContext.getCurrentEntityReference()).thenReturn(new WikiReference(\"xwiki\"));\n        when(this.documentAccessBridge.hasProgrammingRights()).thenReturn(true);\n        doThrow(new OfficeServerException(\"Error while starting\")).when(this.officeServer).start();\n        assertFalse(this.officeServerScriptService.startServer());\n        verify(this.officeServer).start();\n        verify(this.executionContext).setProperty(OfficeServerScriptService.OFFICE_MANAGER_ERROR,\n            \"Error while starting\");\n\n        assertEquals(\"Error while starting\", logCapture.getMessage(0));\n    }", "signature": "void startServerError()", "full_signature": "@Test public void startServerError()", "class_method_signature": "OfficeServerScriptServiceTest.startServerError()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getCurrentEntityReference", "thenReturn", "when", "hasProgrammingRights", "start", "when", "doThrow", "assertFalse", "startServer", "start", "verify", "setProperty", "verify", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "OfficeServerScriptService", "superclass": "", "interfaces": "implements ScriptService", "fields": [{"original_string": "public static final String OFFICE_MANAGER_ERROR = \"OFFICE_MANAGER_ERROR\";", "modifier": "public static final", "type": "String", "declarator": "OFFICE_MANAGER_ERROR = \"OFFICE_MANAGER_ERROR\"", "var_name": "OFFICE_MANAGER_ERROR"}, {"original_string": "private static final String ERROR_FORBIDDEN = \"Office server administration is forbidden for sub-wikis.\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_FORBIDDEN = \"Office server administration is forbidden for sub-wikis.\"", "var_name": "ERROR_FORBIDDEN"}, {"original_string": "private static final String ERROR_PRIVILEGES = \"Inadequate privileges.\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_PRIVILEGES = \"Inadequate privileges.\"", "var_name": "ERROR_PRIVILEGES"}, {"original_string": "private static final String TRANSLATION_KEY_SERVER_STATE_PREFIX = \"office.config.serverState.\";", "modifier": "private static final", "type": "String", "declarator": "TRANSLATION_KEY_SERVER_STATE_PREFIX = \"office.config.serverState.\"", "var_name": "TRANSLATION_KEY_SERVER_STATE_PREFIX"}, {"original_string": "@Inject\n    private ContextualLocalizationManager contextualLocalizationManager;", "modifier": "@Inject\n    private", "type": "ContextualLocalizationManager", "declarator": "contextualLocalizationManager", "var_name": "contextualLocalizationManager"}, {"original_string": "@Inject\n    private Logger logger;", "modifier": "@Inject\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "@Inject\n    private Execution execution;", "modifier": "@Inject\n    private", "type": "Execution", "declarator": "execution", "var_name": "execution"}, {"original_string": "@Inject\n    private ModelContext modelContext;", "modifier": "@Inject\n    private", "type": "ModelContext", "declarator": "modelContext", "var_name": "modelContext"}, {"original_string": "@Inject\n    private OfficeServer officeServer;", "modifier": "@Inject\n    private", "type": "OfficeServer", "declarator": "officeServer", "var_name": "officeServer"}, {"original_string": "@Inject\n    private DocumentAccessBridge docBridge;", "modifier": "@Inject\n    private", "type": "DocumentAccessBridge", "declarator": "docBridge", "var_name": "docBridge"}, {"original_string": "@Inject\n    private OfficeServerConfiguration officeServerConfig;", "modifier": "@Inject\n    private", "type": "OfficeServerConfiguration", "declarator": "officeServerConfig", "var_name": "officeServerConfig"}], "methods": [{"identifier": "startServer", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean startServer()", "full_signature": "public boolean startServer()", "class_method_signature": "OfficeServerScriptService.startServer()", "testcase": false, "constructor": false}, {"identifier": "stopServer", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean stopServer()", "full_signature": "public boolean stopServer()", "class_method_signature": "OfficeServerScriptService.stopServer()", "testcase": false, "constructor": false}, {"identifier": "isConnected", "parameters": "()", "modifiers": "@Unstable public", "return": "boolean", "signature": "boolean isConnected()", "full_signature": "@Unstable public boolean isConnected()", "class_method_signature": "OfficeServerScriptService.isConnected()", "testcase": false, "constructor": false}, {"identifier": "displayServerState", "parameters": "()", "modifiers": "@Unstable public", "return": "String", "signature": "String displayServerState()", "full_signature": "@Unstable public String displayServerState()", "class_method_signature": "OfficeServerScriptService.displayServerState()", "testcase": false, "constructor": false}, {"identifier": "getServerState", "parameters": "()", "modifiers": "@Deprecated public", "return": "String", "signature": "String getServerState()", "full_signature": "@Deprecated public String getServerState()", "class_method_signature": "OfficeServerScriptService.getServerState()", "testcase": false, "constructor": false}, {"identifier": "getConfig", "parameters": "()", "modifiers": "public", "return": "OfficeServerConfiguration", "signature": "OfficeServerConfiguration getConfig()", "full_signature": "public OfficeServerConfiguration getConfig()", "class_method_signature": "OfficeServerScriptService.getConfig()", "testcase": false, "constructor": false}, {"identifier": "getLastErrorMessage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLastErrorMessage()", "full_signature": "public String getLastErrorMessage()", "class_method_signature": "OfficeServerScriptService.getLastErrorMessage()", "testcase": false, "constructor": false}, {"identifier": "setErrorMessage", "parameters": "(String message)", "modifiers": "private", "return": "void", "signature": "void setErrorMessage(String message)", "full_signature": "private void setErrorMessage(String message)", "class_method_signature": "OfficeServerScriptService.setErrorMessage(String message)", "testcase": false, "constructor": false}, {"identifier": "isMainXWiki", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isMainXWiki()", "full_signature": "private boolean isMainXWiki()", "class_method_signature": "OfficeServerScriptService.isMainXWiki()", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-office/xwiki-platform-office-importer/src/main/java/org/xwiki/officeimporter/server/script/OfficeServerScriptService.java"}, "focal_method": {"identifier": "startServer", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean startServer()\n    {\n        if (!isMainXWiki()) {\n            setErrorMessage(ERROR_FORBIDDEN);\n        } else if (!this.docBridge.hasProgrammingRights()) {\n            setErrorMessage(ERROR_PRIVILEGES);\n        } else {\n            try {\n                this.officeServer.start();\n                return true;\n            } catch (OfficeServerException ex) {\n                logger.error(ex.getMessage(), ex);\n                setErrorMessage(ex.getMessage());\n            }\n        }\n        return false;\n    }", "signature": "boolean startServer()", "full_signature": "public boolean startServer()", "class_method_signature": "OfficeServerScriptService.startServer()", "testcase": false, "constructor": false, "invocations": ["isMainXWiki", "setErrorMessage", "hasProgrammingRights", "setErrorMessage", "start", "error", "getMessage", "setErrorMessage", "getMessage"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}