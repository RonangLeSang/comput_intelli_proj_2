{"test_class": {"identifier": "X509KeyWikiStoreTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final byte[] PASSWORD = \"password\".getBytes();", "modifier": "private static final", "type": "byte[]", "declarator": "PASSWORD = \"password\".getBytes()", "var_name": "PASSWORD"}, {"original_string": "private static final byte[] PRIVATEKEY = \"privatekey\".getBytes();", "modifier": "private static final", "type": "byte[]", "declarator": "PRIVATEKEY = \"privatekey\".getBytes()", "var_name": "PRIVATEKEY"}, {"original_string": "private static final String ENCODED_PRIVATEKEY = \"encoded_privatekey\";", "modifier": "private static final", "type": "String", "declarator": "ENCODED_PRIVATEKEY = \"encoded_privatekey\"", "var_name": "ENCODED_PRIVATEKEY"}, {"original_string": "private static final byte[] ENCRYPTED_PRIVATEKEY = \"encrypted_privatekey\".getBytes();", "modifier": "private static final", "type": "byte[]", "declarator": "ENCRYPTED_PRIVATEKEY = \"encrypted_privatekey\".getBytes()", "var_name": "ENCRYPTED_PRIVATEKEY"}, {"original_string": "private static final String ENCODED_ENCRYPTED_PRIVATEKEY = \"encoded_encrypted_privatekey\";", "modifier": "private static final", "type": "String", "declarator": "ENCODED_ENCRYPTED_PRIVATEKEY = \"encoded_encrypted_privatekey\"", "var_name": "ENCODED_ENCRYPTED_PRIVATEKEY"}, {"original_string": "private static final byte[] CERTIFICATE = \"certificate\".getBytes();", "modifier": "private static final", "type": "byte[]", "declarator": "CERTIFICATE = \"certificate\".getBytes()", "var_name": "CERTIFICATE"}, {"original_string": "private static final String ENCODED_CERTIFICATE = \"encoded_certificate\";", "modifier": "private static final", "type": "String", "declarator": "ENCODED_CERTIFICATE = \"encoded_certificate\"", "var_name": "ENCODED_CERTIFICATE"}, {"original_string": "private static final byte[] SUBJECT_KEYID = \"subjectKeyId\".getBytes();", "modifier": "private static final", "type": "byte[]", "declarator": "SUBJECT_KEYID = \"subjectKeyId\".getBytes()", "var_name": "SUBJECT_KEYID"}, {"original_string": "private static final String ENCODED_SUBJECTKEYID = \"encoded_subjectKeyId\";", "modifier": "private static final", "type": "String", "declarator": "ENCODED_SUBJECTKEYID = \"encoded_subjectKeyId\"", "var_name": "ENCODED_SUBJECTKEYID"}, {"original_string": "private static final String SUBJECT = \"CN=Subject\";", "modifier": "private static final", "type": "String", "declarator": "SUBJECT = \"CN=Subject\"", "var_name": "SUBJECT"}, {"original_string": "private static final String ISSUER = \"CN=Issuer\";", "modifier": "private static final", "type": "String", "declarator": "ISSUER = \"CN=Issuer\"", "var_name": "ISSUER"}, {"original_string": "private static final BigInteger SERIAL = new BigInteger(\"1234567890\");", "modifier": "private static final", "type": "BigInteger", "declarator": "SERIAL = new BigInteger(\"1234567890\")", "var_name": "SERIAL"}, {"original_string": "private static final String WIKI = \"wiki\";", "modifier": "private static final", "type": "String", "declarator": "WIKI = \"wiki\"", "var_name": "WIKI"}, {"original_string": "private static final String SPACE = \"space\";", "modifier": "private static final", "type": "String", "declarator": "SPACE = \"space\"", "var_name": "SPACE"}, {"original_string": "private static final String DOCUMENT = \"document\";", "modifier": "private static final", "type": "String", "declarator": "DOCUMENT = \"document\"", "var_name": "DOCUMENT"}, {"original_string": "private static final WikiReference WIKI_REFERENCE = new WikiReference(WIKI);", "modifier": "private static final", "type": "WikiReference", "declarator": "WIKI_REFERENCE = new WikiReference(WIKI)", "var_name": "WIKI_REFERENCE"}, {"original_string": "private static final EntityReference SPACE_REFERENCE = new EntityReference(SPACE, EntityType.WIKI);", "modifier": "private static final", "type": "EntityReference", "declarator": "SPACE_REFERENCE = new EntityReference(SPACE, EntityType.WIKI)", "var_name": "SPACE_REFERENCE"}, {"original_string": "private static final EntityReference DOCUMENT_REFERENCE = new EntityReference(DOCUMENT, EntityType.DOCUMENT);", "modifier": "private static final", "type": "EntityReference", "declarator": "DOCUMENT_REFERENCE = new EntityReference(DOCUMENT, EntityType.DOCUMENT)", "var_name": "DOCUMENT_REFERENCE"}, {"original_string": "private static final LocalDocumentReference DOC_STORE_ENTREF = new LocalDocumentReference(\"space\", DOCUMENT);", "modifier": "private static final", "type": "LocalDocumentReference", "declarator": "DOC_STORE_ENTREF = new LocalDocumentReference(\"space\", DOCUMENT)", "var_name": "DOC_STORE_ENTREF"}, {"original_string": "private static final EntityReference SPACE_STORE_ENTREF = new EntityReference(SPACE, EntityType.SPACE);", "modifier": "private static final", "type": "EntityReference", "declarator": "SPACE_STORE_ENTREF = new EntityReference(SPACE, EntityType.SPACE)", "var_name": "SPACE_STORE_ENTREF"}, {"original_string": "private static final StoreReference DOC_STORE_REF = new WikiStoreReference(DOC_STORE_ENTREF);", "modifier": "private static final", "type": "StoreReference", "declarator": "DOC_STORE_REF = new WikiStoreReference(DOC_STORE_ENTREF)", "var_name": "DOC_STORE_REF"}, {"original_string": "private static final StoreReference SPACE_STORE_REF = new WikiStoreReference(SPACE_STORE_ENTREF);", "modifier": "private static final", "type": "StoreReference", "declarator": "SPACE_STORE_REF = new WikiStoreReference(SPACE_STORE_ENTREF)", "var_name": "SPACE_STORE_REF"}, {"original_string": "@Rule\n    public MockitoComponentMockingRule<KeyStore> mocker = new MockitoComponentMockingRule<>(X509KeyWikiStore.class);", "modifier": "@Rule\n    public", "type": "MockitoComponentMockingRule<KeyStore>", "declarator": "mocker = new MockitoComponentMockingRule<>(X509KeyWikiStore.class)", "var_name": "mocker"}, {"original_string": "private XWikiContext xcontext;", "modifier": "private", "type": "XWikiContext", "declarator": "xcontext", "var_name": "xcontext"}, {"original_string": "private XWiki xwiki;", "modifier": "private", "type": "XWiki", "declarator": "xwiki", "var_name": "xwiki"}, {"original_string": "private Query query;", "modifier": "private", "type": "Query", "declarator": "query", "var_name": "query"}, {"original_string": "private KeyStore store;", "modifier": "private", "type": "KeyStore", "declarator": "store", "var_name": "store"}, {"original_string": "PrivateKeyParameters privateKey;", "modifier": "", "type": "PrivateKeyParameters", "declarator": "privateKey", "var_name": "privateKey"}, {"original_string": "X509CertifiedPublicKey certificate;", "modifier": "", "type": "X509CertifiedPublicKey", "declarator": "certificate", "var_name": "certificate"}, {"original_string": "CertifiedKeyPair keyPair;", "modifier": "", "type": "CertifiedKeyPair", "declarator": "keyPair", "var_name": "keyPair"}], "file": "xwiki-platform-core/xwiki-platform-crypto/xwiki-platform-crypto-store/xwiki-platform-crypto-store-wiki/src/test/java/org/xwiki/crypto/store/wiki/internal/X509KeyWikiStoreTest.java"}, "test_case": {"identifier": "storingEncryptedPrivateKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void storingEncryptedPrivateKey() throws Exception\n    {\n        XWikiDocument storeDoc = mock(XWikiDocument.class);\n        when(xwiki.getDocument(new DocumentReference(WIKI, SPACE, DOCUMENT), xcontext)).thenReturn(storeDoc);\n\n        BaseObject certObj = mock(BaseObject.class);\n        when(storeDoc.newXObject(X509CertificateWikiStore.CERTIFICATECLASS, xcontext)).thenReturn(certObj);\n\n        BaseObject pkObj = mock(BaseObject.class);\n        when(storeDoc.newXObject(X509KeyWikiStore.PRIVATEKEYCLASS, xcontext)).thenReturn(pkObj);\n\n        store.store(DOC_STORE_REF, keyPair, PASSWORD);\n\n        verify(certObj).setStringValue(X509CertificateWikiStore.CERTIFICATECLASS_PROP_KEYID, ENCODED_SUBJECTKEYID);\n        verify(certObj).setStringValue(X509CertificateWikiStore.CERTIFICATECLASS_PROP_ISSUER, ISSUER);\n        verify(certObj).setStringValue(X509CertificateWikiStore.CERTIFICATECLASS_PROP_SERIAL, SERIAL.toString());\n        verify(certObj).setStringValue(X509CertificateWikiStore.CERTIFICATECLASS_PROP_SUBJECT, SUBJECT);\n        verify(certObj).setLargeStringValue(X509CertificateWikiStore.CERTIFICATECLASS_PROP_CERTIFICATE, ENCODED_CERTIFICATE);\n        verify(pkObj).setLargeStringValue(X509KeyWikiStore.PRIVATEKEYCLASS_PROP_KEY, ENCODED_ENCRYPTED_PRIVATEKEY);\n\n        verify(xwiki).saveDocument(storeDoc, xcontext);\n    }", "signature": "void storingEncryptedPrivateKey()", "full_signature": "@Test public void storingEncryptedPrivateKey()", "class_method_signature": "X509KeyWikiStoreTest.storingEncryptedPrivateKey()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getDocument", "mock", "thenReturn", "when", "newXObject", "mock", "thenReturn", "when", "newXObject", "store", "setStringValue", "verify", "setStringValue", "verify", "setStringValue", "verify", "toString", "setStringValue", "verify", "setLargeStringValue", "verify", "setLargeStringValue", "verify", "saveDocument", "verify"]}, "focal_class": {"identifier": "X509KeyWikiStore", "superclass": "extends AbstractX509WikiStore", "interfaces": "implements KeyStore", "fields": [{"original_string": "public static final String PRIVATEKEYCLASS_SPACE = \"Crypto\";", "modifier": "public static final", "type": "String", "declarator": "PRIVATEKEYCLASS_SPACE = \"Crypto\"", "var_name": "PRIVATEKEYCLASS_SPACE"}, {"original_string": "public static final String PRIVATEKEYCLASS_NAME = \"PrivateKeyClass\";", "modifier": "public static final", "type": "String", "declarator": "PRIVATEKEYCLASS_NAME = \"PrivateKeyClass\"", "var_name": "PRIVATEKEYCLASS_NAME"}, {"original_string": "public static final String PRIVATEKEYCLASS_FULLNAME = PRIVATEKEYCLASS_SPACE + \".\" + PRIVATEKEYCLASS_NAME;", "modifier": "public static final", "type": "String", "declarator": "PRIVATEKEYCLASS_FULLNAME = PRIVATEKEYCLASS_SPACE + \".\" + PRIVATEKEYCLASS_NAME", "var_name": "PRIVATEKEYCLASS_FULLNAME"}, {"original_string": "public static final LocalDocumentReference PRIVATEKEYCLASS =\n        new LocalDocumentReference(PRIVATEKEYCLASS_SPACE, PRIVATEKEYCLASS_NAME);", "modifier": "public static final", "type": "LocalDocumentReference", "declarator": "PRIVATEKEYCLASS =\n        new LocalDocumentReference(PRIVATEKEYCLASS_SPACE, PRIVATEKEYCLASS_NAME)", "var_name": "PRIVATEKEYCLASS"}, {"original_string": "public static final String PRIVATEKEYCLASS_PROP_KEY = \"key\";", "modifier": "public static final", "type": "String", "declarator": "PRIVATEKEYCLASS_PROP_KEY = \"key\"", "var_name": "PRIVATEKEYCLASS_PROP_KEY"}, {"original_string": "@Inject\n    private PrivateKeyPasswordBasedEncryptor encryptor;", "modifier": "@Inject\n    private", "type": "PrivateKeyPasswordBasedEncryptor", "declarator": "encryptor", "var_name": "encryptor"}, {"original_string": "@Inject\n    private AsymmetricKeyFactory keyFactory;", "modifier": "@Inject\n    private", "type": "AsymmetricKeyFactory", "declarator": "keyFactory", "var_name": "keyFactory"}], "methods": [{"identifier": "store", "parameters": "(StoreReference store, CertifiedKeyPair keyPair)", "modifiers": "@Override public", "return": "void", "signature": "void store(StoreReference store, CertifiedKeyPair keyPair)", "full_signature": "@Override public void store(StoreReference store, CertifiedKeyPair keyPair)", "class_method_signature": "X509KeyWikiStore.store(StoreReference store, CertifiedKeyPair keyPair)", "testcase": false, "constructor": false}, {"identifier": "store", "parameters": "(StoreReference store, CertifiedKeyPair keyPair, byte[] password)", "modifiers": "@Override public", "return": "void", "signature": "void store(StoreReference store, CertifiedKeyPair keyPair, byte[] password)", "full_signature": "@Override public void store(StoreReference store, CertifiedKeyPair keyPair, byte[] password)", "class_method_signature": "X509KeyWikiStore.store(StoreReference store, CertifiedKeyPair keyPair, byte[] password)", "testcase": false, "constructor": false}, {"identifier": "storeKeyPair", "parameters": "(StoreReference store, CertifiedPublicKey certificate, byte[] privateKey)", "modifiers": "private", "return": "void", "signature": "void storeKeyPair(StoreReference store, CertifiedPublicKey certificate, byte[] privateKey)", "full_signature": "private void storeKeyPair(StoreReference store, CertifiedPublicKey certificate, byte[] privateKey)", "class_method_signature": "X509KeyWikiStore.storeKeyPair(StoreReference store, CertifiedPublicKey certificate, byte[] privateKey)", "testcase": false, "constructor": false}, {"identifier": "retrieve", "parameters": "(StoreReference store)", "modifiers": "@Override public", "return": "CertifiedKeyPair", "signature": "CertifiedKeyPair retrieve(StoreReference store)", "full_signature": "@Override public CertifiedKeyPair retrieve(StoreReference store)", "class_method_signature": "X509KeyWikiStore.retrieve(StoreReference store)", "testcase": false, "constructor": false}, {"identifier": "retrieve", "parameters": "(StoreReference store, byte[] password)", "modifiers": "@Override public", "return": "CertifiedKeyPair", "signature": "CertifiedKeyPair retrieve(StoreReference store, byte[] password)", "full_signature": "@Override public CertifiedKeyPair retrieve(StoreReference store, byte[] password)", "class_method_signature": "X509KeyWikiStore.retrieve(StoreReference store, byte[] password)", "testcase": false, "constructor": false}, {"identifier": "retrieve", "parameters": "(StoreReference store, CertifiedPublicKey publicKey)", "modifiers": "@Override public", "return": "CertifiedKeyPair", "signature": "CertifiedKeyPair retrieve(StoreReference store, CertifiedPublicKey publicKey)", "full_signature": "@Override public CertifiedKeyPair retrieve(StoreReference store, CertifiedPublicKey publicKey)", "class_method_signature": "X509KeyWikiStore.retrieve(StoreReference store, CertifiedPublicKey publicKey)", "testcase": false, "constructor": false}, {"identifier": "retrieve", "parameters": "(StoreReference store, CertifiedPublicKey certificate, byte[] password)", "modifiers": "@Override public", "return": "CertifiedKeyPair", "signature": "CertifiedKeyPair retrieve(StoreReference store, CertifiedPublicKey certificate, byte[] password)", "full_signature": "@Override public CertifiedKeyPair retrieve(StoreReference store, CertifiedPublicKey certificate, byte[] password)", "class_method_signature": "X509KeyWikiStore.retrieve(StoreReference store, CertifiedPublicKey certificate, byte[] password)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-crypto/xwiki-platform-crypto-store/xwiki-platform-crypto-store-wiki/src/main/java/org/xwiki/crypto/store/wiki/internal/X509KeyWikiStore.java"}, "focal_method": {"identifier": "store", "parameters": "(StoreReference store, CertifiedKeyPair keyPair)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void store(StoreReference store, CertifiedKeyPair keyPair) throws KeyStoreException\n    {\n        storeKeyPair(store, keyPair.getCertificate(), keyPair.getPrivateKey().getEncoded());\n    }", "signature": "void store(StoreReference store, CertifiedKeyPair keyPair)", "full_signature": "@Override public void store(StoreReference store, CertifiedKeyPair keyPair)", "class_method_signature": "X509KeyWikiStore.store(StoreReference store, CertifiedKeyPair keyPair)", "testcase": false, "constructor": false, "invocations": ["storeKeyPair", "getCertificate", "getEncoded", "getPrivateKey"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}