{"test_class": {"identifier": "StaticListClassPropertyValuesProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMockComponents\n    private StaticListClassPropertyValuesProvider staticListClassPropertyValuesProvider;", "modifier": "@InjectMockComponents\n    private", "type": "StaticListClassPropertyValuesProvider", "declarator": "staticListClassPropertyValuesProvider", "var_name": "staticListClassPropertyValuesProvider"}], "file": "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/test/java/org/xwiki/rest/internal/resources/classes/StaticListClassPropertyValuesProviderTest.java"}, "test_case": {"identifier": "getAllowedValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getAllowedValues() throws Exception\n    {\n        StaticListClass staticListClass = new StaticListClass();\n        staticListClass.setValues(\"Foo|Bar|Toto|Tata|Foobar\");\n        PropertyValues allowedValues = staticListClassPropertyValuesProvider.getAllowedValues(staticListClass, 1, \"f\");\n        assertEquals(Collections.singletonList(new PropertyValue(\"Foo\")), allowedValues.getPropertyValues());\n\n        allowedValues = staticListClassPropertyValuesProvider.getAllowedValues(staticListClass, 2, \"f\");\n        assertEquals(Arrays.asList(new PropertyValue(\"Foo\"), new PropertyValue(\"Foobar\")),\n            allowedValues.getPropertyValues());\n\n        allowedValues = staticListClassPropertyValuesProvider.getAllowedValues(staticListClass, 1, \"\");\n        assertEquals(Collections.singletonList(new PropertyValue(\"Foo\")),\n            allowedValues.getPropertyValues());\n\n        allowedValues = staticListClassPropertyValuesProvider.getAllowedValues(staticListClass, 5, \"\");\n        assertEquals(Arrays.asList(new PropertyValue(\"Foo\"), new PropertyValue(\"Bar\"), new PropertyValue(\"Toto\"),\n            new PropertyValue(\"Tata\"), new PropertyValue(\"Foobar\")),\n            allowedValues.getPropertyValues());\n\n        allowedValues = staticListClassPropertyValuesProvider.getAllowedValues(staticListClass, 2, \"foobar\");\n        assertEquals(Collections.singletonList(new PropertyValue(\"Foobar\")),\n            allowedValues.getPropertyValues());\n\n        allowedValues = staticListClassPropertyValuesProvider.getAllowedValues(staticListClass, 1, \"baz\");\n        assertEquals(Collections.emptyList(),\n            allowedValues.getPropertyValues());\n\n        allowedValues = staticListClassPropertyValuesProvider.getAllowedValues(staticListClass, 3, \"o\");\n        assertEquals(Arrays.asList(new PropertyValue(\"Foo\"), new PropertyValue(\"Toto\"), new PropertyValue(\"Foobar\")),\n            allowedValues.getPropertyValues());\n    }", "signature": "void getAllowedValues()", "full_signature": "@Test public void getAllowedValues()", "class_method_signature": "StaticListClassPropertyValuesProviderTest.getAllowedValues()", "testcase": true, "constructor": false, "invocations": ["setValues", "getAllowedValues", "assertEquals", "singletonList", "getPropertyValues", "getAllowedValues", "assertEquals", "asList", "getPropertyValues", "getAllowedValues", "assertEquals", "singletonList", "getPropertyValues", "getAllowedValues", "assertEquals", "asList", "getPropertyValues", "getAllowedValues", "assertEquals", "singletonList", "getPropertyValues", "getAllowedValues", "assertEquals", "emptyList", "getPropertyValues", "getAllowedValues", "assertEquals", "asList", "getPropertyValues"]}, "focal_class": {"identifier": "StaticListClassPropertyValuesProvider", "superclass": "extends AbstractListClassPropertyValuesProvider<StaticListClass>", "interfaces": "", "fields": [], "methods": [{"identifier": "getPropertyType", "parameters": "()", "modifiers": "@Override protected", "return": "Class<StaticListClass>", "signature": "Class<StaticListClass> getPropertyType()", "full_signature": "@Override protected Class<StaticListClass> getPropertyType()", "class_method_signature": "StaticListClassPropertyValuesProvider.getPropertyType()", "testcase": false, "constructor": false}, {"identifier": "getAllowedValues", "parameters": "(StaticListClass propertyDefinition, int limit, String filter)", "modifiers": "@Override protected", "return": "PropertyValues", "signature": "PropertyValues getAllowedValues(StaticListClass propertyDefinition, int limit, String filter)", "full_signature": "@Override protected PropertyValues getAllowedValues(StaticListClass propertyDefinition, int limit, String filter)", "class_method_signature": "StaticListClassPropertyValuesProvider.getAllowedValues(StaticListClass propertyDefinition, int limit, String filter)", "testcase": false, "constructor": false}], "file": "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/resources/classes/StaticListClassPropertyValuesProvider.java"}, "focal_method": {"identifier": "getAllowedValues", "parameters": "(StaticListClass propertyDefinition, int limit, String filter)", "modifiers": "@Override protected", "return": "PropertyValues", "body": "@Override\n    protected PropertyValues getAllowedValues(StaticListClass propertyDefinition, int limit, String filter)\n        throws Exception\n    {\n        final PropertyValues result = new PropertyValues();\n        List<String> allValues = StaticListClass.getListFromString(propertyDefinition.getValues());\n\n        allValues.stream().filter(s -> s.toLowerCase().contains(filter.toLowerCase())).limit(limit)\n            .forEach(item -> result.withPropertyValues(new PropertyValue(item)));\n        return result;\n    }", "signature": "PropertyValues getAllowedValues(StaticListClass propertyDefinition, int limit, String filter)", "full_signature": "@Override protected PropertyValues getAllowedValues(StaticListClass propertyDefinition, int limit, String filter)", "class_method_signature": "StaticListClassPropertyValuesProvider.getAllowedValues(StaticListClass propertyDefinition, int limit, String filter)", "testcase": false, "constructor": false, "invocations": ["getListFromString", "getValues", "forEach", "limit", "filter", "stream", "contains", "toLowerCase", "toLowerCase", "withPropertyValues"]}, "repository": {"repo_id": 1463490, "url": "https://github.com/xwiki/xwiki-platform", "stars": 495, "created": "3/10/2011 1:26:41 PM +00:00", "updates": "2020-01-27T14:12:16+00:00", "fork": "False", "license": "licensed"}}