{"test_class": {"identifier": "TaskTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static boolean LINUX;", "modifier": "private static", "type": "boolean", "declarator": "LINUX", "var_name": "LINUX"}, {"original_string": "private static boolean WINDOWS;", "modifier": "private static", "type": "boolean", "declarator": "WINDOWS", "var_name": "WINDOWS"}], "file": "src/tools/ant/src/test/java/it/geosolutions/tools/ant/TaskTest.java"}, "test_case": {"identifier": "taskEchoTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void taskEchoTest(){\n\t\tif(LINUX){\n\t\t\tVariable var=new Variable();\n\t\t\tvar.setKey(\"~\");\n\t\t\tvar.setValue(\"/\");\n\t\t\ttry {\n\t\t\t\tProject p;\n\t\t\t\tString targetName=\"NAME\";\n\t\t\t\tp=Task.buildSimpleProject(targetName,\"echo\");\n\t\t\t\tp.executeTarget(targetName);\n\t\t\t\t\t\t\t\n\t\t\t} catch (Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t\tAssert.fail(e.getLocalizedMessage());\n\t\t\t\t\n\t\t\t}\n\n\t\t} else if(WINDOWS){\n\t\t\t\n\t\t}\t\t\t\t\n\t}", "signature": "void taskEchoTest()", "full_signature": "@Test public void taskEchoTest()", "class_method_signature": "TaskTest.taskEchoTest()", "testcase": true, "constructor": false, "invocations": ["setKey", "setValue", "buildSimpleProject", "executeTarget", "printStackTrace", "fail", "getLocalizedMessage"]}, "focal_class": {"identifier": "Task", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "updateEnv", "parameters": "(final File props, Environment env)", "modifiers": "public static", "return": "void", "signature": "void updateEnv(final File props, Environment env)", "full_signature": "public static void updateEnv(final File props, Environment env)", "class_method_signature": "Task.updateEnv(final File props, Environment env)", "testcase": false, "constructor": false}, {"identifier": "loadVars", "parameters": "(final File props)", "modifiers": "public static", "return": "Variable[]", "signature": "Variable[] loadVars(final File props)", "full_signature": "public static Variable[] loadVars(final File props)", "class_method_signature": "Task.loadVars(final File props)", "testcase": false, "constructor": false}, {"identifier": "buildSimpleProject", "parameters": "(String targetName, String... executables)", "modifiers": "public static", "return": "Project", "signature": "Project buildSimpleProject(String targetName, String... executables)", "full_signature": "public static Project buildSimpleProject(String targetName, String... executables)", "class_method_signature": "Task.buildSimpleProject(String targetName, String... executables)", "testcase": false, "constructor": false}, {"identifier": "buildSimpleProject", "parameters": "(String targetName, org.apache.tools.ant.Task... tasks)", "modifiers": "public static", "return": "Project", "signature": "Project buildSimpleProject(String targetName, org.apache.tools.ant.Task... tasks)", "full_signature": "public static Project buildSimpleProject(String targetName, org.apache.tools.ant.Task... tasks)", "class_method_signature": "Task.buildSimpleProject(String targetName, org.apache.tools.ant.Task... tasks)", "testcase": false, "constructor": false}, {"identifier": "buildProject", "parameters": "(final Target... targets)", "modifiers": "public static", "return": "Project", "signature": "Project buildProject(final Target... targets)", "full_signature": "public static Project buildProject(final Target... targets)", "class_method_signature": "Task.buildProject(final Target... targets)", "testcase": false, "constructor": false}, {"identifier": "connectTargets", "parameters": "(final Project project, final boolean updateChild,\n                                     final boolean updateParent, final Target... targets)", "modifiers": "public static", "return": "int", "signature": "int connectTargets(final Project project, final boolean updateChild,\n                                     final boolean updateParent, final Target... targets)", "full_signature": "public static int connectTargets(final Project project, final boolean updateChild,\n                                     final boolean updateParent, final Target... targets)", "class_method_signature": "Task.connectTargets(final Project project, final boolean updateChild,\n                                     final boolean updateParent, final Target... targets)", "testcase": false, "constructor": false}, {"identifier": "connectTasks", "parameters": "(final Target target, final boolean updateChild,\n                                   final boolean updateParent, final org.apache.tools.ant.Task... tasks)", "modifiers": "public static", "return": "int", "signature": "int connectTasks(final Target target, final boolean updateChild,\n                                   final boolean updateParent, final org.apache.tools.ant.Task... tasks)", "full_signature": "public static int connectTasks(final Target target, final boolean updateChild,\n                                   final boolean updateParent, final org.apache.tools.ant.Task... tasks)", "class_method_signature": "Task.connectTasks(final Target target, final boolean updateChild,\n                                   final boolean updateParent, final org.apache.tools.ant.Task... tasks)", "testcase": false, "constructor": false}, {"identifier": "addToProject", "parameters": "(final Project project, final Target... targets)", "modifiers": "public static", "return": "void", "signature": "void addToProject(final Project project, final Target... targets)", "full_signature": "public static void addToProject(final Project project, final Target... targets)", "class_method_signature": "Task.addToProject(final Project project, final Target... targets)", "testcase": false, "constructor": false}, {"identifier": "addToTarget", "parameters": "(final Target target, final org.apache.tools.ant.Task... tasks)", "modifiers": "public static", "return": "void", "signature": "void addToTarget(final Target target, final org.apache.tools.ant.Task... tasks)", "full_signature": "public static void addToTarget(final Target target, final org.apache.tools.ant.Task... tasks)", "class_method_signature": "Task.addToTarget(final Target target, final org.apache.tools.ant.Task... tasks)", "testcase": false, "constructor": false}, {"identifier": "buildTask", "parameters": "(final String executable, final File workingDir, final String[] args,\n                                     final Variable[] envVars)", "modifiers": "public static", "return": "ExecTask", "signature": "ExecTask buildTask(final String executable, final File workingDir, final String[] args,\n                                     final Variable[] envVars)", "full_signature": "public static ExecTask buildTask(final String executable, final File workingDir, final String[] args,\n                                     final Variable[] envVars)", "class_method_signature": "Task.buildTask(final String executable, final File workingDir, final String[] args,\n                                     final Variable[] envVars)", "testcase": false, "constructor": false}, {"identifier": "buildTask", "parameters": "(String... executables)", "modifiers": "public static", "return": "ExecTask[]", "signature": "ExecTask[] buildTask(String... executables)", "full_signature": "public static ExecTask[] buildTask(String... executables)", "class_method_signature": "Task.buildTask(String... executables)", "testcase": false, "constructor": false}, {"identifier": "buildTask", "parameters": "(String executable, String[] args)", "modifiers": "public static", "return": "ExecTask", "signature": "ExecTask buildTask(String executable, String[] args)", "full_signature": "public static ExecTask buildTask(String executable, String[] args)", "class_method_signature": "Task.buildTask(String executable, String[] args)", "testcase": false, "constructor": false}], "file": "src/tools/ant/src/main/java/it/geosolutions/tools/ant/Task.java"}, "focal_method": {"identifier": "buildSimpleProject", "parameters": "(String targetName, String... executables)", "modifiers": "public static", "return": "Project", "body": "public static Project buildSimpleProject(String targetName, String... executables)\n        throws IllegalArgumentException {\n        final Project project = new Project();\n        Target target = new Target();\n        target.setName(targetName);\n        target.setProject(project);\n        addToTarget(target, buildTask(executables));\n        project.addTarget(target);\n        project.setDefault(target.getName());\n        project.init();\n        return project;\n    }", "signature": "Project buildSimpleProject(String targetName, String... executables)", "full_signature": "public static Project buildSimpleProject(String targetName, String... executables)", "class_method_signature": "Task.buildSimpleProject(String targetName, String... executables)", "testcase": false, "constructor": false, "invocations": ["setName", "setProject", "addToTarget", "buildTask", "addTarget", "setDefault", "getName", "init"]}, "repository": {"repo_id": 4112450, "url": "https://github.com/geosolutions-it/geobatch", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 22, "size": 27664, "license": "licensed"}}