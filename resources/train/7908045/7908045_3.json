{"test_class": {"identifier": "ReleaseTest", "superclass": "", "interfaces": "", "fields": [], "file": "src/com/objectmentor/fitnesse/releases/ReleaseTest.java"}, "test_case": {"identifier": "testReleaseInfo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testReleaseInfo() throws Exception {\n    Release release = prepareReleaseWithFiles();\n    release.saveInfo();\n    String info = FileUtil.getFileContent(\"releases/xyz/.releaseInfo\");\n    assertSubString(\"file1\", info);\n    assertSubString(\"file2\", info);\n  }", "signature": "void testReleaseInfo()", "full_signature": "@Test public void testReleaseInfo()", "class_method_signature": "ReleaseTest.testReleaseInfo()", "testcase": true, "constructor": false, "invocations": ["prepareReleaseWithFiles", "saveInfo", "getFileContent", "assertSubString", "assertSubString"]}, "focal_class": {"identifier": "Release", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String ENDL = System.getProperty(\"line.separator\");", "modifier": "public static final", "type": "String", "declarator": "ENDL = System.getProperty(\"line.separator\")", "var_name": "ENDL"}, {"original_string": "private static final File releaseHome = new File(\"releases\");", "modifier": "private static final", "type": "File", "declarator": "releaseHome = new File(\"releases\")", "var_name": "releaseHome"}, {"original_string": "private final File releaseDir;", "modifier": "private final", "type": "File", "declarator": "releaseDir", "var_name": "releaseDir"}, {"original_string": "private final Map<String, ReleaseFile> releaseFiles;", "modifier": "private final", "type": "Map<String, ReleaseFile>", "declarator": "releaseFiles", "var_name": "releaseFiles"}, {"original_string": "private final File infoFile;", "modifier": "private final", "type": "File", "declarator": "infoFile", "var_name": "infoFile"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}], "methods": [{"identifier": "Release", "parameters": "(String name)", "modifiers": "public", "return": "", "signature": " Release(String name)", "full_signature": "public  Release(String name)", "class_method_signature": "Release.Release(String name)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "Release.getName()", "testcase": false, "constructor": false}, {"identifier": "exists", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean exists()", "full_signature": "public boolean exists()", "class_method_signature": "Release.exists()", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void load()", "full_signature": "private void load()", "class_method_signature": "Release.load()", "testcase": false, "constructor": false}, {"identifier": "loadLocalFiles", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void loadLocalFiles()", "full_signature": "private void loadLocalFiles()", "class_method_signature": "Release.loadLocalFiles()", "testcase": false, "constructor": false}, {"identifier": "loadRecordedFiles", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void loadRecordedFiles()", "full_signature": "private void loadRecordedFiles()", "class_method_signature": "Release.loadRecordedFiles()", "testcase": false, "constructor": false}, {"identifier": "fileCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int fileCount()", "full_signature": "public int fileCount()", "class_method_signature": "Release.fileCount()", "testcase": false, "constructor": false}, {"identifier": "saveInfo", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void saveInfo()", "full_signature": "public void saveInfo()", "class_method_signature": "Release.saveInfo()", "testcase": false, "constructor": false}, {"identifier": "getFiles", "parameters": "()", "modifiers": "public", "return": "List<ReleaseFile>", "signature": "List<ReleaseFile> getFiles()", "full_signature": "public List<ReleaseFile> getFiles()", "class_method_signature": "Release.getFiles()", "testcase": false, "constructor": false}, {"identifier": "getFile", "parameters": "(String filename)", "modifiers": "public", "return": "ReleaseFile", "signature": "ReleaseFile getFile(String filename)", "full_signature": "public ReleaseFile getFile(String filename)", "class_method_signature": "Release.getFile(String filename)", "testcase": false, "constructor": false}, {"identifier": "isCorrupted", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCorrupted()", "full_signature": "public boolean isCorrupted()", "class_method_signature": "Release.isCorrupted()", "testcase": false, "constructor": false}], "file": "src/com/objectmentor/fitnesse/releases/Release.java"}, "focal_method": {"identifier": "saveInfo", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void saveInfo()  {\n    FileWriter writer = null;\n\ttry {\n\t\twriter = new FileWriter(infoFile);\n\t\tfor (Iterator iterator = getFiles().iterator(); iterator.hasNext();)\n\t\t  writer.write(iterator.next().toString() + \"\\n\");\n\t\twriter.flush();\n\t\twriter.close();\n\t\twriter = null;\n\t} catch (IOException e) {\n\t\t// TODO Auto-generated catch block\n\t\te.printStackTrace();\n\t}\n\tfinally{\n\t\t// Handle the case where something failed that you *didn't* catch\n        if (writer != null) {\n            try {\n                writer.close();\n            } catch (Exception e2) {\n            }\n        }\n\t}\n  }", "signature": "void saveInfo()", "full_signature": "public void saveInfo()", "class_method_signature": "Release.saveInfo()", "testcase": false, "constructor": false, "invocations": ["iterator", "getFiles", "hasNext", "write", "toString", "next", "flush", "close", "printStackTrace", "close"]}, "repository": {"repo_id": 7908045, "url": "https://github.com/woodybrood/fitnessedotorg", "language": "Java", "is_fork": false, "fork_count": 16, "stargazer_count": 6, "size": 85576, "license": "licensed"}}