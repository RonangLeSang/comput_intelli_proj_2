{"test_class": {"identifier": "MidaoFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    Connection conn;", "modifier": "@Mock", "type": "Connection", "declarator": "conn", "var_name": "conn"}, {"original_string": "@Mock\n    Overrider overrider;", "modifier": "@Mock", "type": "Overrider", "declarator": "overrider", "var_name": "overrider"}, {"original_string": "@Mock\n    DataSource ds;", "modifier": "@Mock", "type": "DataSource", "declarator": "ds", "var_name": "ds"}, {"original_string": "@Mock\n    TypeHandler typeHandler;", "modifier": "@Mock", "type": "TypeHandler", "declarator": "typeHandler", "var_name": "typeHandler"}], "file": "midao-jdbc-core/src/test/java/org/midao/jdbc/core/MidaoFactoryTest.java"}, "test_case": {"identifier": "testGetQueryRunnerDataSourceTypeStatementHandler", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetQueryRunnerDataSourceTypeStatementHandler() throws Exception {\n        Assert.assertEquals(true, MidaoFactory.getQueryRunner(ds, EmptyTypeHandler.class, BaseStatementHandler.class) instanceof QueryRunner);\n    }", "signature": "void testGetQueryRunnerDataSourceTypeStatementHandler()", "full_signature": "@Test public void testGetQueryRunnerDataSourceTypeStatementHandler()", "class_method_signature": "MidaoFactoryTest.testGetQueryRunnerDataSourceTypeStatementHandler()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getQueryRunner"]}, "focal_class": {"identifier": "MidaoFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ERROR_COULDNT_FIND_POOL_PROVIDER = \"Error. Couldn't find any accepted pool provider. Please put midao-jdbc-c3p0(<=0.9.1), midao-jdbc-dbcp(<=1.3/4.1) etc. into CLASSPATH. For never versions please use MjdbcFactory.\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_COULDNT_FIND_POOL_PROVIDER = \"Error. Couldn't find any accepted pool provider. Please put midao-jdbc-c3p0(<=0.9.1), midao-jdbc-dbcp(<=1.3/4.1) etc. into CLASSPATH. For never versions please use MjdbcFactory.\"", "var_name": "ERROR_COULDNT_FIND_POOL_PROVIDER"}], "methods": [{"identifier": "getQueryRunner", "parameters": "(DataSource ds)", "modifiers": "public static", "return": "QueryRunnerService", "signature": "QueryRunnerService getQueryRunner(DataSource ds)", "full_signature": "public static QueryRunnerService getQueryRunner(DataSource ds)", "class_method_signature": "MidaoFactory.getQueryRunner(DataSource ds)", "testcase": false, "constructor": false}, {"identifier": "getQueryRunner", "parameters": "(DataSource ds, Class<? extends TypeHandler> typeHandlerClazz)", "modifiers": "public static", "return": "QueryRunnerService", "signature": "QueryRunnerService getQueryRunner(DataSource ds, Class<? extends TypeHandler> typeHandlerClazz)", "full_signature": "public static QueryRunnerService getQueryRunner(DataSource ds, Class<? extends TypeHandler> typeHandlerClazz)", "class_method_signature": "MidaoFactory.getQueryRunner(DataSource ds, Class<? extends TypeHandler> typeHandlerClazz)", "testcase": false, "constructor": false}, {"identifier": "getQueryRunner", "parameters": "(DataSource ds, Class<? extends TypeHandler> typeHandlerClazz, Class<? extends StatementHandler> statementHandlerClazz)", "modifiers": "public static", "return": "QueryRunnerService", "signature": "QueryRunnerService getQueryRunner(DataSource ds, Class<? extends TypeHandler> typeHandlerClazz, Class<? extends StatementHandler> statementHandlerClazz)", "full_signature": "public static QueryRunnerService getQueryRunner(DataSource ds, Class<? extends TypeHandler> typeHandlerClazz, Class<? extends StatementHandler> statementHandlerClazz)", "class_method_signature": "MidaoFactory.getQueryRunner(DataSource ds, Class<? extends TypeHandler> typeHandlerClazz, Class<? extends StatementHandler> statementHandlerClazz)", "testcase": false, "constructor": false}, {"identifier": "getQueryRunner", "parameters": "(Connection conn)", "modifiers": "public static", "return": "QueryRunnerService", "signature": "QueryRunnerService getQueryRunner(Connection conn)", "full_signature": "public static QueryRunnerService getQueryRunner(Connection conn)", "class_method_signature": "MidaoFactory.getQueryRunner(Connection conn)", "testcase": false, "constructor": false}, {"identifier": "getQueryRunner", "parameters": "(Connection conn, Class<? extends TypeHandler> typeHandlerClazz)", "modifiers": "public static", "return": "QueryRunnerService", "signature": "QueryRunnerService getQueryRunner(Connection conn, Class<? extends TypeHandler> typeHandlerClazz)", "full_signature": "public static QueryRunnerService getQueryRunner(Connection conn, Class<? extends TypeHandler> typeHandlerClazz)", "class_method_signature": "MidaoFactory.getQueryRunner(Connection conn, Class<? extends TypeHandler> typeHandlerClazz)", "testcase": false, "constructor": false}, {"identifier": "getQueryRunner", "parameters": "(Connection conn, Class<? extends TypeHandler> typeHandlerClazz, Class<? extends StatementHandler> statementHandlerClazz)", "modifiers": "public static", "return": "QueryRunnerService", "signature": "QueryRunnerService getQueryRunner(Connection conn, Class<? extends TypeHandler> typeHandlerClazz, Class<? extends StatementHandler> statementHandlerClazz)", "full_signature": "public static QueryRunnerService getQueryRunner(Connection conn, Class<? extends TypeHandler> typeHandlerClazz, Class<? extends StatementHandler> statementHandlerClazz)", "class_method_signature": "MidaoFactory.getQueryRunner(Connection conn, Class<? extends TypeHandler> typeHandlerClazz, Class<? extends StatementHandler> statementHandlerClazz)", "testcase": false, "constructor": false}, {"identifier": "getAsyncQueryRunner", "parameters": "(QueryRunner runner, ExecutorService executorService)", "modifiers": "public static", "return": "AsyncQueryRunnerService", "signature": "AsyncQueryRunnerService getAsyncQueryRunner(QueryRunner runner, ExecutorService executorService)", "full_signature": "public static AsyncQueryRunnerService getAsyncQueryRunner(QueryRunner runner, ExecutorService executorService)", "class_method_signature": "MidaoFactory.getAsyncQueryRunner(QueryRunner runner, ExecutorService executorService)", "testcase": false, "constructor": false}, {"identifier": "createDataSource", "parameters": "(Properties poolProperties)", "modifiers": "public static", "return": "DataSource", "signature": "DataSource createDataSource(Properties poolProperties)", "full_signature": "public static DataSource createDataSource(Properties poolProperties)", "class_method_signature": "MidaoFactory.createDataSource(Properties poolProperties)", "testcase": false, "constructor": false}, {"identifier": "createDataSource", "parameters": "(String url)", "modifiers": "public static", "return": "DataSource", "signature": "DataSource createDataSource(String url)", "full_signature": "public static DataSource createDataSource(String url)", "class_method_signature": "MidaoFactory.createDataSource(String url)", "testcase": false, "constructor": false}, {"identifier": "createDataSource", "parameters": "(String url, String userName, String password)", "modifiers": "public static", "return": "DataSource", "signature": "DataSource createDataSource(String url, String userName, String password)", "full_signature": "public static DataSource createDataSource(String url, String userName, String password)", "class_method_signature": "MidaoFactory.createDataSource(String url, String userName, String password)", "testcase": false, "constructor": false}, {"identifier": "createDataSource", "parameters": "(String driverClassName, String url, String userName, String password)", "modifiers": "public static", "return": "DataSource", "signature": "DataSource createDataSource(String driverClassName, String url, String userName, String password)", "full_signature": "public static DataSource createDataSource(String driverClassName, String url, String userName, String password)", "class_method_signature": "MidaoFactory.createDataSource(String driverClassName, String url, String userName, String password)", "testcase": false, "constructor": false}, {"identifier": "createDataSource", "parameters": "(String driverClassName, String url, String userName, String password, int initialSize, int maxActive)", "modifiers": "public static", "return": "DataSource", "signature": "DataSource createDataSource(String driverClassName, String url, String userName, String password, int initialSize, int maxActive)", "full_signature": "public static DataSource createDataSource(String driverClassName, String url, String userName, String password, int initialSize, int maxActive)", "class_method_signature": "MidaoFactory.createDataSource(String driverClassName, String url, String userName, String password, int initialSize, int maxActive)", "testcase": false, "constructor": false}], "file": "midao-jdbc-core/src/main/java/org/midao/jdbc/core/MidaoFactory.java"}, "focal_method": {"identifier": "getQueryRunner", "parameters": "(DataSource ds)", "modifiers": "public static", "return": "QueryRunnerService", "body": "public static QueryRunnerService getQueryRunner(DataSource ds) {\n        return (QueryRunnerService) ProfilerFactory.newInstance(new QueryRunner(ds));\n    }", "signature": "QueryRunnerService getQueryRunner(DataSource ds)", "full_signature": "public static QueryRunnerService getQueryRunner(DataSource ds)", "class_method_signature": "MidaoFactory.getQueryRunner(DataSource ds)", "testcase": false, "constructor": false, "invocations": ["newInstance"]}, "repository": {"repo_id": 8967798, "url": "https://github.com/pryzach/midao", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 10, "size": 9516, "license": "licensed"}}