{"test_class": {"identifier": "ConnectionProxyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    Connection conn;", "modifier": "@Mock", "type": "Connection", "declarator": "conn", "var_name": "conn"}], "file": "midao-jdbc-core/src/test/java/org/midao/jdbc/core/wrappers/ConnectionProxyTest.java"}, "test_case": {"identifier": "testInvoke", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInvoke() throws Exception {\n        Connection result = null;\n\n        result = ConnectionProxy.newInstance(conn);\n\n        result.isClosed();\n        result.close();\n\n        verify(conn, times(1)).isClosed();\n        verify(conn, never()).close();\n    }", "signature": "void testInvoke()", "full_signature": "@Test public void testInvoke()", "class_method_signature": "ConnectionProxyTest.testInvoke()", "testcase": true, "constructor": false, "invocations": ["newInstance", "isClosed", "close", "isClosed", "verify", "times", "close", "verify", "never"]}, "focal_class": {"identifier": "ConnectionProxy", "superclass": "", "interfaces": "implements java.lang.reflect.InvocationHandler", "fields": [{"original_string": "private final Connection conn;", "modifier": "private final", "type": "Connection", "declarator": "conn", "var_name": "conn"}], "methods": [{"identifier": "newInstance", "parameters": "(Connection conn)", "modifiers": "public static", "return": "Connection", "signature": "Connection newInstance(Connection conn)", "full_signature": "public static Connection newInstance(Connection conn)", "class_method_signature": "ConnectionProxy.newInstance(Connection conn)", "testcase": false, "constructor": false}, {"identifier": "ConnectionProxy", "parameters": "(Connection conn)", "modifiers": "public", "return": "", "signature": " ConnectionProxy(Connection conn)", "full_signature": "public  ConnectionProxy(Connection conn)", "class_method_signature": "ConnectionProxy.ConnectionProxy(Connection conn)", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "(Object proxy, Method method, Object[] args)", "modifiers": "public", "return": "Object", "signature": "Object invoke(Object proxy, Method method, Object[] args)", "full_signature": "public Object invoke(Object proxy, Method method, Object[] args)", "class_method_signature": "ConnectionProxy.invoke(Object proxy, Method method, Object[] args)", "testcase": false, "constructor": false}], "file": "midao-jdbc-core/src/main/java/org/midao/jdbc/core/wrappers/ConnectionProxy.java"}, "focal_method": {"identifier": "invoke", "parameters": "(Object proxy, Method method, Object[] args)", "modifiers": "public", "return": "Object", "body": "public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n        Object result = null;\n        String methodName = method.getName();\n\n        if (\"close\".equals(methodName) == true) {\n            // nothing should be\n        } else {\n\n            try {\n                result = method.invoke(conn, args);\n            } catch (InvocationTargetException e) {\n                throw e.getTargetException();\n            } catch (Exception e) {\n                throw new RuntimeException(\"unexpected invocation exception: \" + e.getMessage());\n            }\n        }\n\n        return result;\n    }", "signature": "Object invoke(Object proxy, Method method, Object[] args)", "full_signature": "public Object invoke(Object proxy, Method method, Object[] args)", "class_method_signature": "ConnectionProxy.invoke(Object proxy, Method method, Object[] args)", "testcase": false, "constructor": false, "invocations": ["getName", "equals", "invoke", "getTargetException", "getMessage"]}, "repository": {"repo_id": 8967798, "url": "https://github.com/pryzach/midao", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 10, "size": 9516, "license": "licensed"}}