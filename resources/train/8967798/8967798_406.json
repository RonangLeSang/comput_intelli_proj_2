{"test_class": {"identifier": "MjdbcLoggerTest", "superclass": "", "interfaces": "", "fields": [], "file": "midao-jdbc-core/src/test/java/org/midao/jdbc/core/MjdbcLoggerTest.java"}, "test_case": {"identifier": "testInfo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInfo() throws Exception {\n\n    }", "signature": "void testInfo()", "full_signature": "@Test public void testInfo()", "class_method_signature": "MjdbcLoggerTest.testInfo()", "testcase": true, "constructor": false, "invocations": []}, "focal_class": {"identifier": "MjdbcLogger", "superclass": "extends Logger", "interfaces": "", "fields": [{"original_string": "private static Boolean SLF4jAvailable = null;", "modifier": "private static", "type": "Boolean", "declarator": "SLF4jAvailable = null", "var_name": "SLF4jAvailable"}, {"original_string": "private static Boolean SLF4jImplementationAvailable = null;", "modifier": "private static", "type": "Boolean", "declarator": "SLF4jImplementationAvailable = null", "var_name": "SLF4jImplementationAvailable"}, {"original_string": "private Object slfLogger = null;", "modifier": "private", "type": "Object", "declarator": "slfLogger = null", "var_name": "slfLogger"}], "methods": [{"identifier": "MjdbcLogger", "parameters": "(String name, String resourceBundleName)", "modifiers": "private", "return": "", "signature": " MjdbcLogger(String name, String resourceBundleName)", "full_signature": "private  MjdbcLogger(String name, String resourceBundleName)", "class_method_signature": "MjdbcLogger.MjdbcLogger(String name, String resourceBundleName)", "testcase": false, "constructor": true}, {"identifier": "getLogger", "parameters": "(String name)", "modifiers": "public static", "return": "MjdbcLogger", "signature": "MjdbcLogger getLogger(String name)", "full_signature": "public static MjdbcLogger getLogger(String name)", "class_method_signature": "MjdbcLogger.getLogger(String name)", "testcase": false, "constructor": false}, {"identifier": "getLogger", "parameters": "(Class clazz)", "modifiers": "public static", "return": "MjdbcLogger", "signature": "MjdbcLogger getLogger(Class clazz)", "full_signature": "public static MjdbcLogger getLogger(Class clazz)", "class_method_signature": "MjdbcLogger.getLogger(Class clazz)", "testcase": false, "constructor": false}, {"identifier": "info", "parameters": "(String msg)", "modifiers": "@Override public", "return": "void", "signature": "void info(String msg)", "full_signature": "@Override public void info(String msg)", "class_method_signature": "MjdbcLogger.info(String msg)", "testcase": false, "constructor": false}, {"identifier": "warning", "parameters": "(String msg)", "modifiers": "@Override public", "return": "void", "signature": "void warning(String msg)", "full_signature": "@Override public void warning(String msg)", "class_method_signature": "MjdbcLogger.warning(String msg)", "testcase": false, "constructor": false}, {"identifier": "severe", "parameters": "(String msg)", "modifiers": "@Override public", "return": "void", "signature": "void severe(String msg)", "full_signature": "@Override public void severe(String msg)", "class_method_signature": "MjdbcLogger.severe(String msg)", "testcase": false, "constructor": false}, {"identifier": "isSLF4jAvailable", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isSLF4jAvailable()", "full_signature": "public static boolean isSLF4jAvailable()", "class_method_signature": "MjdbcLogger.isSLF4jAvailable()", "testcase": false, "constructor": false}, {"identifier": "isSLF4jImplementationAvailable", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isSLF4jImplementationAvailable()", "full_signature": "public static boolean isSLF4jImplementationAvailable()", "class_method_signature": "MjdbcLogger.isSLF4jImplementationAvailable()", "testcase": false, "constructor": false}, {"identifier": "setSLF4jAvailable", "parameters": "(boolean slf4jAvailable)", "modifiers": "private static", "return": "void", "signature": "void setSLF4jAvailable(boolean slf4jAvailable)", "full_signature": "private static void setSLF4jAvailable(boolean slf4jAvailable)", "class_method_signature": "MjdbcLogger.setSLF4jAvailable(boolean slf4jAvailable)", "testcase": false, "constructor": false}, {"identifier": "setSlfLogger", "parameters": "(Object logger)", "modifiers": "private", "return": "void", "signature": "void setSlfLogger(Object logger)", "full_signature": "private void setSlfLogger(Object logger)", "class_method_signature": "MjdbcLogger.setSlfLogger(Object logger)", "testcase": false, "constructor": false}], "file": "midao-jdbc-core/src/main/java/org/midao/jdbc/core/MjdbcLogger.java"}, "focal_method": {"identifier": "info", "parameters": "(String msg)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void info(String msg) {\n        if (isSLF4jAvailable() == false) {\n            super.info(msg);\n        } else {\n            try {\n                MappingUtils.invokeFunction(slfLogger, \"info\", new Class[]{String.class}, new Object[]{msg});\n            } catch (MjdbcException e) {\n                setSLF4jAvailable(false);\n                super.info(msg);\n            }\n        }\n    }", "signature": "void info(String msg)", "full_signature": "@Override public void info(String msg)", "class_method_signature": "MjdbcLogger.info(String msg)", "testcase": false, "constructor": false, "invocations": ["isSLF4jAvailable", "info", "invokeFunction", "setSLF4jAvailable", "info"]}, "repository": {"repo_id": 8967798, "url": "https://github.com/pryzach/midao", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 10, "size": 9516, "license": "licensed"}}