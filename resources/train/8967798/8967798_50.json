{"test_class": {"identifier": "MjdbcConfigTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    Connection conn;", "modifier": "@Mock", "type": "Connection", "declarator": "conn", "var_name": "conn"}, {"original_string": "@Mock\n    Overrider overrider;", "modifier": "@Mock", "type": "Overrider", "declarator": "overrider", "var_name": "overrider"}, {"original_string": "@Mock\n    DataSource ds;", "modifier": "@Mock", "type": "DataSource", "declarator": "ds", "var_name": "ds"}], "file": "midao-jdbc-core/src/test/java/org/midao/jdbc/core/MjdbcConfigTest.java"}, "test_case": {"identifier": "testGetDefaultStatementHandler", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetDefaultStatementHandler() throws Exception {\n        Assert.assertEquals(true, MjdbcConfig.getDefaultStatementHandler(overrider) instanceof StatementHandler);\n    }", "signature": "void testGetDefaultStatementHandler()", "full_signature": "@Test public void testGetDefaultStatementHandler()", "class_method_signature": "MjdbcConfigTest.testGetDefaultStatementHandler()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getDefaultStatementHandler"]}, "focal_class": {"identifier": "MjdbcConfig", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ERROR_TH_INIT_FAILED = \"Error! Every transaction handler should have two public constructors with Connection and DataSource as parameter!\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_TH_INIT_FAILED = \"Error! Every transaction handler should have two public constructors with Connection and DataSource as parameter!\"", "var_name": "ERROR_TH_INIT_FAILED"}, {"original_string": "private static final String ERROR_MH_INIT_FAILED = \"Error! Every metadata handler should have two public constructors with (Connection, useCache) or (DataSource, useCache) as parameter!\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_MH_INIT_FAILED = \"Error! Every metadata handler should have two public constructors with (Connection, useCache) or (DataSource, useCache) as parameter!\"", "var_name": "ERROR_MH_INIT_FAILED"}, {"original_string": "private static final String ERROR_SH_INIT_FAILED = \"Error! Failed to initialize Statement Handler class. Please make sure there is public constructor which accepts Overrider class\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_SH_INIT_FAILED = \"Error! Failed to initialize Statement Handler class. Please make sure there is public constructor which accepts Overrider class\"", "var_name": "ERROR_SH_INIT_FAILED"}, {"original_string": "private static final String ERROR_TyH_INIT_FAILED = \"Error! Failed to initialize Type Handler class. Please make sure there is public constructor which accepts Overrider class\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_TyH_INIT_FAILED = \"Error! Failed to initialize Type Handler class. Please make sure there is public constructor which accepts Overrider class\"", "var_name": "ERROR_TyH_INIT_FAILED"}, {"original_string": "private static final String ERROR_OR_INIT_FAILED = \"Error! Failed to initialize Overrider class... Please make sure default constructor is available!\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_OR_INIT_FAILED = \"Error! Failed to initialize Overrider class... Please make sure default constructor is available!\"", "var_name": "ERROR_OR_INIT_FAILED"}, {"original_string": "private static MjdbcConfig defaultMjdbcConfig = new MjdbcConfig();", "modifier": "private static", "type": "MjdbcConfig", "declarator": "defaultMjdbcConfig = new MjdbcConfig()", "var_name": "defaultMjdbcConfig"}, {"original_string": "private QueryInputProcessor defaultQueryInputProcessor = new BasicQueryInputProcessor();", "modifier": "private", "type": "QueryInputProcessor", "declarator": "defaultQueryInputProcessor = new BasicQueryInputProcessor()", "var_name": "defaultQueryInputProcessor"}, {"original_string": "private boolean queryInputProcessorUseCache = true;", "modifier": "private", "type": "boolean", "declarator": "queryInputProcessorUseCache = true", "var_name": "queryInputProcessorUseCache"}, {"original_string": "private QueryOutputProcessor defaultQueryOutputProcessor = new BasicQueryOutputProcessor();", "modifier": "private", "type": "QueryOutputProcessor", "declarator": "defaultQueryOutputProcessor = new BasicQueryOutputProcessor()", "var_name": "defaultQueryOutputProcessor"}, {"original_string": "private Class<? extends StatementHandler> defaultStatementHandler = LazyStatementHandler.class;", "modifier": "private", "type": "Class<? extends StatementHandler>", "declarator": "defaultStatementHandler = LazyStatementHandler.class", "var_name": "defaultStatementHandler"}, {"original_string": "private Class<? extends TypeHandler> defaultTypeHandler = EmptyTypeHandler.class;", "modifier": "private", "type": "Class<? extends TypeHandler>", "declarator": "defaultTypeHandler = EmptyTypeHandler.class", "var_name": "defaultTypeHandler"}, {"original_string": "private Class<? extends TransactionHandler> defaultTransactionHandler = BaseTransactionHandler.class;", "modifier": "private", "type": "Class<? extends TransactionHandler>", "declarator": "defaultTransactionHandler = BaseTransactionHandler.class", "var_name": "defaultTransactionHandler"}, {"original_string": "private Class<? extends ExceptionHandler> defaultExceptionHandler = BaseExceptionHandler.class;", "modifier": "private", "type": "Class<? extends ExceptionHandler>", "declarator": "defaultExceptionHandler = BaseExceptionHandler.class", "var_name": "defaultExceptionHandler"}, {"original_string": "private Class<? extends MetadataHandler> defaultMetadataHandler = BaseMetadataHandler.class;", "modifier": "private", "type": "Class<? extends MetadataHandler>", "declarator": "defaultMetadataHandler = BaseMetadataHandler.class", "var_name": "defaultMetadataHandler"}, {"original_string": "private Class<Overrider> defaultOverrider = Overrider.class;", "modifier": "private", "type": "Class<Overrider>", "declarator": "defaultOverrider = Overrider.class", "var_name": "defaultOverrider"}, {"original_string": "private boolean profilerEnabled = false;", "modifier": "private", "type": "boolean", "declarator": "profilerEnabled = false", "var_name": "profilerEnabled"}, {"original_string": "private String profilerOutputFormat = \"Invoked class [%s].\\n - Method [%s{}]\\n - Args   [%s]\\n - Time   [%5.3f] sec \";", "modifier": "private", "type": "String", "declarator": "profilerOutputFormat = \"Invoked class [%s].\\n - Method [%s{}]\\n - Args   [%s]\\n - Time   [%5.3f] sec \"", "var_name": "profilerOutputFormat"}, {"original_string": "private int defaultLazyCacheMaxSize = 20;", "modifier": "private", "type": "int", "declarator": "defaultLazyCacheMaxSize = 20", "var_name": "defaultLazyCacheMaxSize"}, {"original_string": "private static String OUTPUT_HANDLER_PACKAGE = \"org.midao.jdbc.core.handlers.output.\";", "modifier": "private static", "type": "String", "declarator": "OUTPUT_HANDLER_PACKAGE = \"org.midao.jdbc.core.handlers.output.\"", "var_name": "OUTPUT_HANDLER_PACKAGE"}, {"original_string": "private static Map<String, OutputHandler> defaultOutputHandlers = new HashMap<String, OutputHandler>() {\n        {\n            put(OUTPUT_HANDLER_PACKAGE + \"ArrayListOutputHandler\", MjdbcConstants.ARRAY_LIST_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"ArrayOutputHandler\", MjdbcConstants.ARRAY_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"ColumnListOutputHandler\", MjdbcConstants.COLUMN_LIST_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"KeyedOutputHandler\", MjdbcConstants.KEYED_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"MapListOutputHandler\", MjdbcConstants.MAP_LIST_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"MapOutputHandler\", MjdbcConstants.MAP_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"RowCountOutputHandler\", MjdbcConstants.ROW_COUNT_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"ScalarOutputHandler\", MjdbcConstants.SCALAR_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"lazy.MapLazyOutputHandler\", MjdbcConstants.MAP_LAZY_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"lazy.MapLazyScrollOutputHandler\", MjdbcConstants.MAP_LAZY_SCROLL_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"lazy.MapLazyScrollUpdateOutputHandler\", MjdbcConstants.MAP_LAZY_SCROLL_UPDATE_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"lazy.MapLazyUpdateOutputHandler\", MjdbcConstants.MAP_LAZY_UPDATE_OUTPUT_HANDLER);\n        }\n    };", "modifier": "private static", "type": "Map<String, OutputHandler>", "declarator": "defaultOutputHandlers = new HashMap<String, OutputHandler>() {\n        {\n            put(OUTPUT_HANDLER_PACKAGE + \"ArrayListOutputHandler\", MjdbcConstants.ARRAY_LIST_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"ArrayOutputHandler\", MjdbcConstants.ARRAY_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"ColumnListOutputHandler\", MjdbcConstants.COLUMN_LIST_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"KeyedOutputHandler\", MjdbcConstants.KEYED_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"MapListOutputHandler\", MjdbcConstants.MAP_LIST_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"MapOutputHandler\", MjdbcConstants.MAP_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"RowCountOutputHandler\", MjdbcConstants.ROW_COUNT_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"ScalarOutputHandler\", MjdbcConstants.SCALAR_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"lazy.MapLazyOutputHandler\", MjdbcConstants.MAP_LAZY_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"lazy.MapLazyScrollOutputHandler\", MjdbcConstants.MAP_LAZY_SCROLL_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"lazy.MapLazyScrollUpdateOutputHandler\", MjdbcConstants.MAP_LAZY_SCROLL_UPDATE_OUTPUT_HANDLER);\n            put(OUTPUT_HANDLER_PACKAGE + \"lazy.MapLazyUpdateOutputHandler\", MjdbcConstants.MAP_LAZY_UPDATE_OUTPUT_HANDLER);\n        }\n    }", "var_name": "defaultOutputHandlers"}], "methods": [{"identifier": "getDefaultQueryInputProcessor", "parameters": "()", "modifiers": "public static", "return": "QueryInputProcessor", "signature": "QueryInputProcessor getDefaultQueryInputProcessor()", "full_signature": "public static QueryInputProcessor getDefaultQueryInputProcessor()", "class_method_signature": "MjdbcConfig.getDefaultQueryInputProcessor()", "testcase": false, "constructor": false}, {"identifier": "setDefaultQueryInputProcessor", "parameters": "(QueryInputProcessor defaultQueryInputProcessor)", "modifiers": "public static", "return": "void", "signature": "void setDefaultQueryInputProcessor(QueryInputProcessor defaultQueryInputProcessor)", "full_signature": "public static void setDefaultQueryInputProcessor(QueryInputProcessor defaultQueryInputProcessor)", "class_method_signature": "MjdbcConfig.setDefaultQueryInputProcessor(QueryInputProcessor defaultQueryInputProcessor)", "testcase": false, "constructor": false}, {"identifier": "isQueryInputProcessorUseCache", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isQueryInputProcessorUseCache()", "full_signature": "public static boolean isQueryInputProcessorUseCache()", "class_method_signature": "MjdbcConfig.isQueryInputProcessorUseCache()", "testcase": false, "constructor": false}, {"identifier": "setQueryInputProcessorUseCache", "parameters": "(boolean queryInputProcessorUseCache)", "modifiers": "public static", "return": "void", "signature": "void setQueryInputProcessorUseCache(boolean queryInputProcessorUseCache)", "full_signature": "public static void setQueryInputProcessorUseCache(boolean queryInputProcessorUseCache)", "class_method_signature": "MjdbcConfig.setQueryInputProcessorUseCache(boolean queryInputProcessorUseCache)", "testcase": false, "constructor": false}, {"identifier": "getDefaultQueryOutputProcessor", "parameters": "()", "modifiers": "public static", "return": "QueryOutputProcessor", "signature": "QueryOutputProcessor getDefaultQueryOutputProcessor()", "full_signature": "public static QueryOutputProcessor getDefaultQueryOutputProcessor()", "class_method_signature": "MjdbcConfig.getDefaultQueryOutputProcessor()", "testcase": false, "constructor": false}, {"identifier": "setDefaultQueryOutputProcessor", "parameters": "(QueryOutputProcessor defaultQueryOutputProcessor)", "modifiers": "public static", "return": "void", "signature": "void setDefaultQueryOutputProcessor(QueryOutputProcessor defaultQueryOutputProcessor)", "full_signature": "public static void setDefaultQueryOutputProcessor(QueryOutputProcessor defaultQueryOutputProcessor)", "class_method_signature": "MjdbcConfig.setDefaultQueryOutputProcessor(QueryOutputProcessor defaultQueryOutputProcessor)", "testcase": false, "constructor": false}, {"identifier": "getDefaultStatementHandler", "parameters": "(Overrider overrider)", "modifiers": "public static", "return": "StatementHandler", "signature": "StatementHandler getDefaultStatementHandler(Overrider overrider)", "full_signature": "public static StatementHandler getDefaultStatementHandler(Overrider overrider)", "class_method_signature": "MjdbcConfig.getDefaultStatementHandler(Overrider overrider)", "testcase": false, "constructor": false}, {"identifier": "setDefaultStatementHandler", "parameters": "(Class<? extends StatementHandler> defaultStatementHandler)", "modifiers": "public static", "return": "void", "signature": "void setDefaultStatementHandler(Class<? extends StatementHandler> defaultStatementHandler)", "full_signature": "public static void setDefaultStatementHandler(Class<? extends StatementHandler> defaultStatementHandler)", "class_method_signature": "MjdbcConfig.setDefaultStatementHandler(Class<? extends StatementHandler> defaultStatementHandler)", "testcase": false, "constructor": false}, {"identifier": "getDefaultTypeHandler", "parameters": "(Overrider overrider)", "modifiers": "public static", "return": "TypeHandler", "signature": "TypeHandler getDefaultTypeHandler(Overrider overrider)", "full_signature": "public static TypeHandler getDefaultTypeHandler(Overrider overrider)", "class_method_signature": "MjdbcConfig.getDefaultTypeHandler(Overrider overrider)", "testcase": false, "constructor": false}, {"identifier": "setDefaultTypeHandler", "parameters": "(Class<? extends TypeHandler> defaultTypeHandler)", "modifiers": "public static", "return": "void", "signature": "void setDefaultTypeHandler(Class<? extends TypeHandler> defaultTypeHandler)", "full_signature": "public static void setDefaultTypeHandler(Class<? extends TypeHandler> defaultTypeHandler)", "class_method_signature": "MjdbcConfig.setDefaultTypeHandler(Class<? extends TypeHandler> defaultTypeHandler)", "testcase": false, "constructor": false}, {"identifier": "getDefaultTransactionHandler", "parameters": "(Connection conn)", "modifiers": "public static", "return": "TransactionHandler", "signature": "TransactionHandler getDefaultTransactionHandler(Connection conn)", "full_signature": "public static TransactionHandler getDefaultTransactionHandler(Connection conn)", "class_method_signature": "MjdbcConfig.getDefaultTransactionHandler(Connection conn)", "testcase": false, "constructor": false}, {"identifier": "getDefaultTransactionHandler", "parameters": "(DataSource ds)", "modifiers": "public static", "return": "TransactionHandler", "signature": "TransactionHandler getDefaultTransactionHandler(DataSource ds)", "full_signature": "public static TransactionHandler getDefaultTransactionHandler(DataSource ds)", "class_method_signature": "MjdbcConfig.getDefaultTransactionHandler(DataSource ds)", "testcase": false, "constructor": false}, {"identifier": "setDefaultTransactionHandler", "parameters": "(Class<? extends TransactionHandler> defaultTransactionHandler)", "modifiers": "public static", "return": "void", "signature": "void setDefaultTransactionHandler(Class<? extends TransactionHandler> defaultTransactionHandler)", "full_signature": "public static void setDefaultTransactionHandler(Class<? extends TransactionHandler> defaultTransactionHandler)", "class_method_signature": "MjdbcConfig.setDefaultTransactionHandler(Class<? extends TransactionHandler> defaultTransactionHandler)", "testcase": false, "constructor": false}, {"identifier": "getDefaultExceptionHandler", "parameters": "(String dbName)", "modifiers": "public static", "return": "ExceptionHandler", "signature": "ExceptionHandler getDefaultExceptionHandler(String dbName)", "full_signature": "public static ExceptionHandler getDefaultExceptionHandler(String dbName)", "class_method_signature": "MjdbcConfig.getDefaultExceptionHandler(String dbName)", "testcase": false, "constructor": false}, {"identifier": "setDefaultExceptionHandler", "parameters": "(Class<? extends ExceptionHandler> defaultExceptionHandler)", "modifiers": "public static", "return": "void", "signature": "void setDefaultExceptionHandler(Class<? extends ExceptionHandler> defaultExceptionHandler)", "full_signature": "public static void setDefaultExceptionHandler(Class<? extends ExceptionHandler> defaultExceptionHandler)", "class_method_signature": "MjdbcConfig.setDefaultExceptionHandler(Class<? extends ExceptionHandler> defaultExceptionHandler)", "testcase": false, "constructor": false}, {"identifier": "getDefaultMetadataHandler", "parameters": "(Connection conn)", "modifiers": "public static", "return": "MetadataHandler", "signature": "MetadataHandler getDefaultMetadataHandler(Connection conn)", "full_signature": "public static MetadataHandler getDefaultMetadataHandler(Connection conn)", "class_method_signature": "MjdbcConfig.getDefaultMetadataHandler(Connection conn)", "testcase": false, "constructor": false}, {"identifier": "getDefaultMetadataHandler", "parameters": "(DataSource ds)", "modifiers": "public static", "return": "MetadataHandler", "signature": "MetadataHandler getDefaultMetadataHandler(DataSource ds)", "full_signature": "public static MetadataHandler getDefaultMetadataHandler(DataSource ds)", "class_method_signature": "MjdbcConfig.getDefaultMetadataHandler(DataSource ds)", "testcase": false, "constructor": false}, {"identifier": "setDefaultMetadataHandler", "parameters": "(Class<? extends MetadataHandler> defaultMetadataHandler)", "modifiers": "public static", "return": "void", "signature": "void setDefaultMetadataHandler(Class<? extends MetadataHandler> defaultMetadataHandler)", "full_signature": "public static void setDefaultMetadataHandler(Class<? extends MetadataHandler> defaultMetadataHandler)", "class_method_signature": "MjdbcConfig.setDefaultMetadataHandler(Class<? extends MetadataHandler> defaultMetadataHandler)", "testcase": false, "constructor": false}, {"identifier": "getDefaultOverrider", "parameters": "()", "modifiers": "public static", "return": "Overrider", "signature": "Overrider getDefaultOverrider()", "full_signature": "public static Overrider getDefaultOverrider()", "class_method_signature": "MjdbcConfig.getDefaultOverrider()", "testcase": false, "constructor": false}, {"identifier": "setDefaultOverrider", "parameters": "(Class<Overrider> defaultOverrider)", "modifiers": "public static", "return": "void", "signature": "void setDefaultOverrider(Class<Overrider> defaultOverrider)", "full_signature": "public static void setDefaultOverrider(Class<Overrider> defaultOverrider)", "class_method_signature": "MjdbcConfig.setDefaultOverrider(Class<Overrider> defaultOverrider)", "testcase": false, "constructor": false}, {"identifier": "isProfilerEnabled", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isProfilerEnabled()", "full_signature": "public static boolean isProfilerEnabled()", "class_method_signature": "MjdbcConfig.isProfilerEnabled()", "testcase": false, "constructor": false}, {"identifier": "setProfilerEnabled", "parameters": "(boolean profilerEnabled)", "modifiers": "public static", "return": "void", "signature": "void setProfilerEnabled(boolean profilerEnabled)", "full_signature": "public static void setProfilerEnabled(boolean profilerEnabled)", "class_method_signature": "MjdbcConfig.setProfilerEnabled(boolean profilerEnabled)", "testcase": false, "constructor": false}, {"identifier": "getProfilerOutputFormat", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getProfilerOutputFormat()", "full_signature": "public static String getProfilerOutputFormat()", "class_method_signature": "MjdbcConfig.getProfilerOutputFormat()", "testcase": false, "constructor": false}, {"identifier": "setProfilerOutputFormat", "parameters": "(String profilerOutputFormat)", "modifiers": "public static", "return": "void", "signature": "void setProfilerOutputFormat(String profilerOutputFormat)", "full_signature": "public static void setProfilerOutputFormat(String profilerOutputFormat)", "class_method_signature": "MjdbcConfig.setProfilerOutputFormat(String profilerOutputFormat)", "testcase": false, "constructor": false}, {"identifier": "getDefaultLazyCacheMaxSize", "parameters": "()", "modifiers": "public static", "return": "int", "signature": "int getDefaultLazyCacheMaxSize()", "full_signature": "public static int getDefaultLazyCacheMaxSize()", "class_method_signature": "MjdbcConfig.getDefaultLazyCacheMaxSize()", "testcase": false, "constructor": false}, {"identifier": "setDefaultLazyCacheMaxSize", "parameters": "(int lazyCacheMaxSize)", "modifiers": "public static", "return": "void", "signature": "void setDefaultLazyCacheMaxSize(int lazyCacheMaxSize)", "full_signature": "public static void setDefaultLazyCacheMaxSize(int lazyCacheMaxSize)", "class_method_signature": "MjdbcConfig.setDefaultLazyCacheMaxSize(int lazyCacheMaxSize)", "testcase": false, "constructor": false}, {"identifier": "getOutputHandlerPackage", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getOutputHandlerPackage()", "full_signature": "public static String getOutputHandlerPackage()", "class_method_signature": "MjdbcConfig.getOutputHandlerPackage()", "testcase": false, "constructor": false}, {"identifier": "getDefaultOutputHandlers", "parameters": "()", "modifiers": "public static", "return": "Map<String, OutputHandler>", "signature": "Map<String, OutputHandler> getDefaultOutputHandlers()", "full_signature": "public static Map<String, OutputHandler> getDefaultOutputHandlers()", "class_method_signature": "MjdbcConfig.getDefaultOutputHandlers()", "testcase": false, "constructor": false}, {"identifier": "instance", "parameters": "()", "modifiers": "private static", "return": "MjdbcConfig", "signature": "MjdbcConfig instance()", "full_signature": "private static MjdbcConfig instance()", "class_method_signature": "MjdbcConfig.instance()", "testcase": false, "constructor": false}], "file": "midao-jdbc-core/src/main/java/org/midao/jdbc/core/MjdbcConfig.java"}, "focal_method": {"identifier": "getDefaultStatementHandler", "parameters": "(Overrider overrider)", "modifiers": "public static", "return": "StatementHandler", "body": "public static StatementHandler getDefaultStatementHandler(Overrider overrider) {\n        StatementHandler result = null;\n        Constructor<? extends StatementHandler> constructor = null;\n\n        Class<? extends StatementHandler> clazz = instance().defaultStatementHandler;\n\n        try {\n            constructor = clazz.getConstructor(Overrider.class);\n            result = constructor.newInstance(overrider);\n        } catch (SecurityException e) {\n            throw new MjdbcRuntimeException(ERROR_SH_INIT_FAILED, e);\n        } catch (NoSuchMethodException e) {\n            throw new MjdbcRuntimeException(ERROR_SH_INIT_FAILED, e);\n        } catch (IllegalArgumentException e) {\n            throw new MjdbcRuntimeException(ERROR_SH_INIT_FAILED, e);\n        } catch (InstantiationException e) {\n            throw new MjdbcRuntimeException(ERROR_SH_INIT_FAILED, e);\n        } catch (IllegalAccessException e) {\n            throw new MjdbcRuntimeException(ERROR_SH_INIT_FAILED, e);\n        } catch (InvocationTargetException e) {\n            throw new MjdbcRuntimeException(ERROR_SH_INIT_FAILED, e);\n        }\n\n        return result;\n    }", "signature": "StatementHandler getDefaultStatementHandler(Overrider overrider)", "full_signature": "public static StatementHandler getDefaultStatementHandler(Overrider overrider)", "class_method_signature": "MjdbcConfig.getDefaultStatementHandler(Overrider overrider)", "testcase": false, "constructor": false, "invocations": ["instance", "getConstructor", "newInstance"]}, "repository": {"repo_id": 8967798, "url": "https://github.com/pryzach/midao", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 10, "size": 9516, "license": "licensed"}}