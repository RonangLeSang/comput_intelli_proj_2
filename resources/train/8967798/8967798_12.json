{"test_class": {"identifier": "BaseExceptionHandlerTest", "superclass": "extends ExceptionHandlerTest", "interfaces": "", "fields": [{"original_string": "BaseExceptionHandler baseExceptionHandler = new BaseExceptionHandler(\"absent\");", "modifier": "", "type": "BaseExceptionHandler", "declarator": "baseExceptionHandler = new BaseExceptionHandler(\"absent\")", "var_name": "baseExceptionHandler"}, {"original_string": "@Mock\n    BaseExceptionHandler mockBaseExceptionHandler;", "modifier": "@Mock", "type": "BaseExceptionHandler", "declarator": "mockBaseExceptionHandler", "var_name": "mockBaseExceptionHandler"}], "file": "midao-jdbc-core/src/test/java/org/midao/jdbc/core/exception/BaseExceptionHandlerTest.java"}, "test_case": {"identifier": "testBaseExceptionHandler", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBaseExceptionHandler() throws SQLException {\n        ((QueryRunner) runner).setExceptionHandler(baseExceptionHandler);\n\n        try {\n            runner.query(\"SQL generates Exception\", new MapOutputHandler());\n        } catch (Exception ex) {\n            Assert.assertEquals(\" Query: SQL generates Exception Parameters: [QueryParameters CI { }]\", ex.getMessage());\n        }\n    }", "signature": "void testBaseExceptionHandler()", "full_signature": "@Test public void testBaseExceptionHandler()", "class_method_signature": "BaseExceptionHandlerTest.testBaseExceptionHandler()", "testcase": true, "constructor": false, "invocations": ["setExceptionHandler", "query", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "BaseExceptionHandler", "superclass": "", "interfaces": "implements ExceptionHandler", "fields": [{"original_string": "private final String dbName;", "modifier": "private final", "type": "String", "declarator": "dbName", "var_name": "dbName"}], "methods": [{"identifier": "BaseExceptionHandler", "parameters": "(String dbName)", "modifiers": "public", "return": "", "signature": " BaseExceptionHandler(String dbName)", "full_signature": "public  BaseExceptionHandler(String dbName)", "class_method_signature": "BaseExceptionHandler.BaseExceptionHandler(String dbName)", "testcase": false, "constructor": true}, {"identifier": "convert", "parameters": "(Connection conn, SQLException cause, String sql, Object... params)", "modifiers": "public", "return": "MjdbcSQLException", "signature": "MjdbcSQLException convert(Connection conn, SQLException cause, String sql, Object... params)", "full_signature": "public MjdbcSQLException convert(Connection conn, SQLException cause, String sql, Object... params)", "class_method_signature": "BaseExceptionHandler.convert(Connection conn, SQLException cause, String sql, Object... params)", "testcase": false, "constructor": false}], "file": "midao-jdbc-core/src/main/java/org/midao/jdbc/core/exception/BaseExceptionHandler.java"}, "focal_method": {"identifier": "BaseExceptionHandler", "parameters": "(String dbName)", "modifiers": "public", "return": "", "body": "public BaseExceptionHandler(String dbName) {\n        this.dbName = dbName;\n    }", "signature": " BaseExceptionHandler(String dbName)", "full_signature": "public  BaseExceptionHandler(String dbName)", "class_method_signature": "BaseExceptionHandler.BaseExceptionHandler(String dbName)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 8967798, "url": "https://github.com/pryzach/midao", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 10, "size": 9516, "license": "licensed"}}