{"test_class": {"identifier": "TypeHandlerUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    Connection conn;", "modifier": "@Mock", "type": "Connection", "declarator": "conn", "var_name": "conn"}, {"original_string": "@Mock\n    Array array;", "modifier": "@Mock", "type": "Array", "declarator": "array", "var_name": "array"}, {"original_string": "@Mock\n    Blob blob;", "modifier": "@Mock", "type": "Blob", "declarator": "blob", "var_name": "blob"}, {"original_string": "@Mock\n    Clob clob;", "modifier": "@Mock", "type": "Clob", "declarator": "clob", "var_name": "clob"}, {"original_string": "@Mock\n    OutputStream output;", "modifier": "@Mock", "type": "OutputStream", "declarator": "output", "var_name": "output"}, {"original_string": "@Mock\n    InputStream input;", "modifier": "@Mock", "type": "InputStream", "declarator": "input", "var_name": "input"}, {"original_string": "Object sqlXml;", "modifier": "", "type": "Object", "declarator": "sqlXml", "var_name": "sqlXml"}], "file": "midao-jdbc-core/src/test/java/org/midao/jdbc/core/handlers/type/TypeHandlerUtilsTest.java"}, "test_case": {"identifier": "testConvertClobConnInputStream", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConvertClobConnInputStream() throws Exception {\n        testConvertClobPrepare();\n\n        TypeHandlerUtils.convertClob(conn, new ByteArrayInputStream(\"BMP\".getBytes()));\n\n        //verify(conn, times(1)).createClob();\n        MappingUtils.invokeFunction(verify(conn, times(1)), \"createClob\", new Class[]{}, new Object[]{});\n        testConvertClobCheck();\n    }", "signature": "void testConvertClobConnInputStream()", "full_signature": "@Test public void testConvertClobConnInputStream()", "class_method_signature": "TypeHandlerUtilsTest.testConvertClobConnInputStream()", "testcase": true, "constructor": false, "invocations": ["testConvertClobPrepare", "convertClob", "getBytes", "invokeFunction", "verify", "times", "testConvertClobCheck"]}, "focal_class": {"identifier": "TypeHandlerUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int EOF = -1;", "modifier": "private static final", "type": "int", "declarator": "EOF = -1", "var_name": "EOF"}, {"original_string": "private static final int DEFAULT_BUFFER_SIZE = 1024 * 4;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_BUFFER_SIZE = 1024 * 4", "var_name": "DEFAULT_BUFFER_SIZE"}], "methods": [{"identifier": "convertArray", "parameters": "(Connection conn, Object[] array)", "modifiers": "public static", "return": "Object", "signature": "Object convertArray(Connection conn, Object[] array)", "full_signature": "public static Object convertArray(Connection conn, Object[] array)", "class_method_signature": "TypeHandlerUtils.convertArray(Connection conn, Object[] array)", "testcase": false, "constructor": false}, {"identifier": "convertArray", "parameters": "(Connection conn, Collection<?> array)", "modifiers": "public static", "return": "Object", "signature": "Object convertArray(Connection conn, Collection<?> array)", "full_signature": "public static Object convertArray(Connection conn, Collection<?> array)", "class_method_signature": "TypeHandlerUtils.convertArray(Connection conn, Collection<?> array)", "testcase": false, "constructor": false}, {"identifier": "convertBlob", "parameters": "(Connection conn, byte[] value)", "modifiers": "public static", "return": "Object", "signature": "Object convertBlob(Connection conn, byte[] value)", "full_signature": "public static Object convertBlob(Connection conn, byte[] value)", "class_method_signature": "TypeHandlerUtils.convertBlob(Connection conn, byte[] value)", "testcase": false, "constructor": false}, {"identifier": "convertBlob", "parameters": "(Connection conn, InputStream input)", "modifiers": "public static", "return": "Object", "signature": "Object convertBlob(Connection conn, InputStream input)", "full_signature": "public static Object convertBlob(Connection conn, InputStream input)", "class_method_signature": "TypeHandlerUtils.convertBlob(Connection conn, InputStream input)", "testcase": false, "constructor": false}, {"identifier": "convertBlob", "parameters": "(Connection conn, String value)", "modifiers": "public static", "return": "Object", "signature": "Object convertBlob(Connection conn, String value)", "full_signature": "public static Object convertBlob(Connection conn, String value)", "class_method_signature": "TypeHandlerUtils.convertBlob(Connection conn, String value)", "testcase": false, "constructor": false}, {"identifier": "convertBlob", "parameters": "(Object blob, byte[] value)", "modifiers": "public static", "return": "Object", "signature": "Object convertBlob(Object blob, byte[] value)", "full_signature": "public static Object convertBlob(Object blob, byte[] value)", "class_method_signature": "TypeHandlerUtils.convertBlob(Object blob, byte[] value)", "testcase": false, "constructor": false}, {"identifier": "convertBlob", "parameters": "(Object blob, InputStream input)", "modifiers": "public static", "return": "Object", "signature": "Object convertBlob(Object blob, InputStream input)", "full_signature": "public static Object convertBlob(Object blob, InputStream input)", "class_method_signature": "TypeHandlerUtils.convertBlob(Object blob, InputStream input)", "testcase": false, "constructor": false}, {"identifier": "convertBlob", "parameters": "(Object blob, String value)", "modifiers": "public static", "return": "Object", "signature": "Object convertBlob(Object blob, String value)", "full_signature": "public static Object convertBlob(Object blob, String value)", "class_method_signature": "TypeHandlerUtils.convertBlob(Object blob, String value)", "testcase": false, "constructor": false}, {"identifier": "convertClob", "parameters": "(Connection conn, byte[] value)", "modifiers": "public static", "return": "Object", "signature": "Object convertClob(Connection conn, byte[] value)", "full_signature": "public static Object convertClob(Connection conn, byte[] value)", "class_method_signature": "TypeHandlerUtils.convertClob(Connection conn, byte[] value)", "testcase": false, "constructor": false}, {"identifier": "convertClob", "parameters": "(Connection conn, String value)", "modifiers": "public static", "return": "Object", "signature": "Object convertClob(Connection conn, String value)", "full_signature": "public static Object convertClob(Connection conn, String value)", "class_method_signature": "TypeHandlerUtils.convertClob(Connection conn, String value)", "testcase": false, "constructor": false}, {"identifier": "convertClob", "parameters": "(Connection conn, InputStream input)", "modifiers": "public static", "return": "Object", "signature": "Object convertClob(Connection conn, InputStream input)", "full_signature": "public static Object convertClob(Connection conn, InputStream input)", "class_method_signature": "TypeHandlerUtils.convertClob(Connection conn, InputStream input)", "testcase": false, "constructor": false}, {"identifier": "convertClob", "parameters": "(Object clob, byte[] value)", "modifiers": "public static", "return": "Object", "signature": "Object convertClob(Object clob, byte[] value)", "full_signature": "public static Object convertClob(Object clob, byte[] value)", "class_method_signature": "TypeHandlerUtils.convertClob(Object clob, byte[] value)", "testcase": false, "constructor": false}, {"identifier": "convertClob", "parameters": "(Object clob, String value)", "modifiers": "public static", "return": "Object", "signature": "Object convertClob(Object clob, String value)", "full_signature": "public static Object convertClob(Object clob, String value)", "class_method_signature": "TypeHandlerUtils.convertClob(Object clob, String value)", "testcase": false, "constructor": false}, {"identifier": "convertClob", "parameters": "(Object clob, InputStream input)", "modifiers": "public static", "return": "Object", "signature": "Object convertClob(Object clob, InputStream input)", "full_signature": "public static Object convertClob(Object clob, InputStream input)", "class_method_signature": "TypeHandlerUtils.convertClob(Object clob, InputStream input)", "testcase": false, "constructor": false}, {"identifier": "convertJavaClassToSqlType", "parameters": "(String simpleClassName)", "modifiers": "public static", "return": "String", "signature": "String convertJavaClassToSqlType(String simpleClassName)", "full_signature": "public static String convertJavaClassToSqlType(String simpleClassName)", "class_method_signature": "TypeHandlerUtils.convertJavaClassToSqlType(String simpleClassName)", "testcase": false, "constructor": false}, {"identifier": "convertSqlXml", "parameters": "(Connection conn, byte[] value)", "modifiers": "public static", "return": "Object", "signature": "Object convertSqlXml(Connection conn, byte[] value)", "full_signature": "public static Object convertSqlXml(Connection conn, byte[] value)", "class_method_signature": "TypeHandlerUtils.convertSqlXml(Connection conn, byte[] value)", "testcase": false, "constructor": false}, {"identifier": "convertSqlXml", "parameters": "(Connection conn, String value)", "modifiers": "public static", "return": "Object", "signature": "Object convertSqlXml(Connection conn, String value)", "full_signature": "public static Object convertSqlXml(Connection conn, String value)", "class_method_signature": "TypeHandlerUtils.convertSqlXml(Connection conn, String value)", "testcase": false, "constructor": false}, {"identifier": "convertSqlXml", "parameters": "(Connection conn, InputStream input)", "modifiers": "public static", "return": "Object", "signature": "Object convertSqlXml(Connection conn, InputStream input)", "full_signature": "public static Object convertSqlXml(Connection conn, InputStream input)", "class_method_signature": "TypeHandlerUtils.convertSqlXml(Connection conn, InputStream input)", "testcase": false, "constructor": false}, {"identifier": "convertSqlXml", "parameters": "(Object sqlXml, byte[] value)", "modifiers": "public static", "return": "Object", "signature": "Object convertSqlXml(Object sqlXml, byte[] value)", "full_signature": "public static Object convertSqlXml(Object sqlXml, byte[] value)", "class_method_signature": "TypeHandlerUtils.convertSqlXml(Object sqlXml, byte[] value)", "testcase": false, "constructor": false}, {"identifier": "convertSqlXml", "parameters": "(Object sqlXml, String value)", "modifiers": "public static", "return": "Object", "signature": "Object convertSqlXml(Object sqlXml, String value)", "full_signature": "public static Object convertSqlXml(Object sqlXml, String value)", "class_method_signature": "TypeHandlerUtils.convertSqlXml(Object sqlXml, String value)", "testcase": false, "constructor": false}, {"identifier": "convertSqlXml", "parameters": "(Object sqlXml, InputStream input)", "modifiers": "public static", "return": "Object", "signature": "Object convertSqlXml(Object sqlXml, InputStream input)", "full_signature": "public static Object convertSqlXml(Object sqlXml, InputStream input)", "class_method_signature": "TypeHandlerUtils.convertSqlXml(Object sqlXml, InputStream input)", "testcase": false, "constructor": false}, {"identifier": "readBlob", "parameters": "(Object blob, boolean close)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] readBlob(Object blob, boolean close)", "full_signature": "public static byte[] readBlob(Object blob, boolean close)", "class_method_signature": "TypeHandlerUtils.readBlob(Object blob, boolean close)", "testcase": false, "constructor": false}, {"identifier": "readBlob", "parameters": "(Object blob)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] readBlob(Object blob)", "full_signature": "public static byte[] readBlob(Object blob)", "class_method_signature": "TypeHandlerUtils.readBlob(Object blob)", "testcase": false, "constructor": false}, {"identifier": "readClob", "parameters": "(Object clob, boolean close)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] readClob(Object clob, boolean close)", "full_signature": "public static byte[] readClob(Object clob, boolean close)", "class_method_signature": "TypeHandlerUtils.readClob(Object clob, boolean close)", "testcase": false, "constructor": false}, {"identifier": "readClob", "parameters": "(Object clob)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] readClob(Object clob)", "full_signature": "public static byte[] readClob(Object clob)", "class_method_signature": "TypeHandlerUtils.readClob(Object clob)", "testcase": false, "constructor": false}, {"identifier": "readSqlXml", "parameters": "(Object sqlXml, boolean close)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] readSqlXml(Object sqlXml, boolean close)", "full_signature": "public static byte[] readSqlXml(Object sqlXml, boolean close)", "class_method_signature": "TypeHandlerUtils.readSqlXml(Object sqlXml, boolean close)", "testcase": false, "constructor": false}, {"identifier": "readSqlXml", "parameters": "(Object sqlXml)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] readSqlXml(Object sqlXml)", "full_signature": "public static byte[] readSqlXml(Object sqlXml)", "class_method_signature": "TypeHandlerUtils.readSqlXml(Object sqlXml)", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "(InputStream input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toByteArray(InputStream input)", "full_signature": "public static byte[] toByteArray(InputStream input)", "class_method_signature": "TypeHandlerUtils.toByteArray(InputStream input)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(Reader reader)", "modifiers": "public static", "return": "String", "signature": "String toString(Reader reader)", "full_signature": "public static String toString(Reader reader)", "class_method_signature": "TypeHandlerUtils.toString(Reader reader)", "testcase": false, "constructor": false}, {"identifier": "closeQuietly", "parameters": "(InputStream input)", "modifiers": "public static", "return": "void", "signature": "void closeQuietly(InputStream input)", "full_signature": "public static void closeQuietly(InputStream input)", "class_method_signature": "TypeHandlerUtils.closeQuietly(InputStream input)", "testcase": false, "constructor": false}, {"identifier": "closeQuietly", "parameters": "(OutputStream output)", "modifiers": "public static", "return": "void", "signature": "void closeQuietly(OutputStream output)", "full_signature": "public static void closeQuietly(OutputStream output)", "class_method_signature": "TypeHandlerUtils.closeQuietly(OutputStream output)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(InputStream input, OutputStream output)", "modifiers": "public static", "return": "long", "signature": "long copy(InputStream input, OutputStream output)", "full_signature": "public static long copy(InputStream input, OutputStream output)", "class_method_signature": "TypeHandlerUtils.copy(InputStream input, OutputStream output)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(Reader input, StringBuilder output)", "modifiers": "public static", "return": "long", "signature": "long copy(Reader input, StringBuilder output)", "full_signature": "public static long copy(Reader input, StringBuilder output)", "class_method_signature": "TypeHandlerUtils.copy(Reader input, StringBuilder output)", "testcase": false, "constructor": false}, {"identifier": "createBlob", "parameters": "(Connection conn)", "modifiers": "public static", "return": "Object", "signature": "Object createBlob(Connection conn)", "full_signature": "public static Object createBlob(Connection conn)", "class_method_signature": "TypeHandlerUtils.createBlob(Connection conn)", "testcase": false, "constructor": false}, {"identifier": "createClob", "parameters": "(Connection conn)", "modifiers": "public static", "return": "Object", "signature": "Object createClob(Connection conn)", "full_signature": "public static Object createClob(Connection conn)", "class_method_signature": "TypeHandlerUtils.createClob(Connection conn)", "testcase": false, "constructor": false}, {"identifier": "createSQLXML", "parameters": "(Connection conn)", "modifiers": "public static", "return": "Object", "signature": "Object createSQLXML(Connection conn)", "full_signature": "public static Object createSQLXML(Connection conn)", "class_method_signature": "TypeHandlerUtils.createSQLXML(Connection conn)", "testcase": false, "constructor": false}, {"identifier": "createArrayOf", "parameters": "(Connection conn, String typeName, Object[] elements)", "modifiers": "public static", "return": "Object", "signature": "Object createArrayOf(Connection conn, String typeName, Object[] elements)", "full_signature": "public static Object createArrayOf(Connection conn, String typeName, Object[] elements)", "class_method_signature": "TypeHandlerUtils.createArrayOf(Connection conn, String typeName, Object[] elements)", "testcase": false, "constructor": false}, {"identifier": "isJDBC3", "parameters": "(Overrider overrider)", "modifiers": "public static", "return": "boolean", "signature": "boolean isJDBC3(Overrider overrider)", "full_signature": "public static boolean isJDBC3(Overrider overrider)", "class_method_signature": "TypeHandlerUtils.isJDBC3(Overrider overrider)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(InputStream input, OutputStream output, byte[] buffer)", "modifiers": "private static", "return": "long", "signature": "long copy(InputStream input, OutputStream output, byte[] buffer)", "full_signature": "private static long copy(InputStream input, OutputStream output, byte[] buffer)", "class_method_signature": "TypeHandlerUtils.copy(InputStream input, OutputStream output, byte[] buffer)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(Reader input, StringBuilder output, char[] buffer)", "modifiers": "private static", "return": "long", "signature": "long copy(Reader input, StringBuilder output, char[] buffer)", "full_signature": "private static long copy(Reader input, StringBuilder output, char[] buffer)", "class_method_signature": "TypeHandlerUtils.copy(Reader input, StringBuilder output, char[] buffer)", "testcase": false, "constructor": false}], "file": "midao-jdbc-core/src/main/java/org/midao/jdbc/core/handlers/type/TypeHandlerUtils.java"}, "focal_method": {"identifier": "convertClob", "parameters": "(Connection conn, byte[] value)", "modifiers": "public static", "return": "Object", "body": "public static Object convertClob(Connection conn, byte[] value) throws SQLException {\n        Object result = (Object) createClob(conn);\n\n        result = convertClob(result, value);\n\n        return result;\n    }", "signature": "Object convertClob(Connection conn, byte[] value)", "full_signature": "public static Object convertClob(Connection conn, byte[] value)", "class_method_signature": "TypeHandlerUtils.convertClob(Connection conn, byte[] value)", "testcase": false, "constructor": false, "invocations": ["createClob", "convertClob"]}, "repository": {"repo_id": 8967798, "url": "https://github.com/pryzach/midao", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 10, "size": 9516, "license": "licensed"}}