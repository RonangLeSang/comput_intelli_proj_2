{"test_class": {"identifier": "ReaderInputStreamTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final char LEADING_SURROGATE = 0xd841;", "modifier": "private static final", "type": "char", "declarator": "LEADING_SURROGATE = 0xd841", "var_name": "LEADING_SURROGATE"}, {"original_string": "private static final char TRAILING_SURROGATE = 0xdf0e;", "modifier": "private static final", "type": "char", "declarator": "TRAILING_SURROGATE = 0xdf0e", "var_name": "TRAILING_SURROGATE"}], "file": "pgjdbc/src/test/java/org/postgresql/util/ReaderInputStreamTest.java"}, "test_case": {"identifier": "negativeOffsetArrayReadTest", "parameters": "()", "modifiers": "@Test(expected = IndexOutOfBoundsException.class) public", "return": "void", "body": "@Test(expected = IndexOutOfBoundsException.class)\n  public void negativeOffsetArrayReadTest() throws IOException {\n    Reader reader = new StringReader(\"abc\");\n    InputStream is = new ReaderInputStream(reader);\n    byte[] bytes = new byte[4];\n    is.read(bytes, -1, 4);\n  }", "signature": "void negativeOffsetArrayReadTest()", "full_signature": "@Test(expected = IndexOutOfBoundsException.class) public void negativeOffsetArrayReadTest()", "class_method_signature": "ReaderInputStreamTest.negativeOffsetArrayReadTest()", "testcase": true, "constructor": false, "invocations": ["read"]}, "focal_class": {"identifier": "ReaderInputStream", "superclass": "extends InputStream", "interfaces": "", "fields": [{"original_string": "private static final int DEFAULT_CHAR_BUFFER_SIZE = 8 * 1024;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_CHAR_BUFFER_SIZE = 8 * 1024", "var_name": "DEFAULT_CHAR_BUFFER_SIZE"}, {"original_string": "private static final Charset UTF_8 = Charset.forName(\"UTF-8\");", "modifier": "private static final", "type": "Charset", "declarator": "UTF_8 = Charset.forName(\"UTF-8\")", "var_name": "UTF_8"}, {"original_string": "private final Reader reader;", "modifier": "private final", "type": "Reader", "declarator": "reader", "var_name": "reader"}, {"original_string": "private final CharsetEncoder encoder;", "modifier": "private final", "type": "CharsetEncoder", "declarator": "encoder", "var_name": "encoder"}, {"original_string": "private final ByteBuffer bbuf;", "modifier": "private final", "type": "ByteBuffer", "declarator": "bbuf", "var_name": "bbuf"}, {"original_string": "private final CharBuffer cbuf;", "modifier": "private final", "type": "CharBuffer", "declarator": "cbuf", "var_name": "cbuf"}, {"original_string": "private boolean endOfInput;", "modifier": "private", "type": "boolean", "declarator": "endOfInput", "var_name": "endOfInput"}, {"original_string": "private final byte[] oneByte = new byte[1];", "modifier": "private final", "type": "byte[]", "declarator": "oneByte = new byte[1]", "var_name": "oneByte"}], "methods": [{"identifier": "ReaderInputStream", "parameters": "(Reader reader)", "modifiers": "public", "return": "", "signature": " ReaderInputStream(Reader reader)", "full_signature": "public  ReaderInputStream(Reader reader)", "class_method_signature": "ReaderInputStream.ReaderInputStream(Reader reader)", "testcase": false, "constructor": true}, {"identifier": "ReaderInputStream", "parameters": "(Reader reader, int charBufferSize)", "modifiers": "", "return": "", "signature": " ReaderInputStream(Reader reader, int charBufferSize)", "full_signature": "  ReaderInputStream(Reader reader, int charBufferSize)", "class_method_signature": "ReaderInputStream.ReaderInputStream(Reader reader, int charBufferSize)", "testcase": false, "constructor": true}, {"identifier": "advance", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void advance()", "full_signature": "private void advance()", "class_method_signature": "ReaderInputStream.advance()", "testcase": false, "constructor": false}, {"identifier": "checkEncodeResult", "parameters": "(CoderResult result)", "modifiers": "private", "return": "void", "signature": "void checkEncodeResult(CoderResult result)", "full_signature": "private void checkEncodeResult(CoderResult result)", "class_method_signature": "ReaderInputStream.checkEncodeResult(CoderResult result)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int read()", "full_signature": "@Override public int read()", "class_method_signature": "ReaderInputStream.read()", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(byte[] b, int off, int len)", "modifiers": "@Override public", "return": "int", "signature": "int read(byte[] b, int off, int len)", "full_signature": "@Override public int read(byte[] b, int off, int len)", "class_method_signature": "ReaderInputStream.read(byte[] b, int off, int len)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "ReaderInputStream.close()", "testcase": false, "constructor": false}], "file": "pgjdbc/src/main/java/org/postgresql/util/ReaderInputStream.java"}, "focal_method": {"identifier": "read", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n  public int read() throws IOException {\n    int res = 0;\n    while (res != -1) {\n      res = read(oneByte);\n      if (res > 0) {\n        return (oneByte[0] & 0xFF);\n      }\n    }\n    return -1;\n  }", "signature": "int read()", "full_signature": "@Override public int read()", "class_method_signature": "ReaderInputStream.read()", "testcase": false, "constructor": false, "invocations": ["read"]}, "repository": {"repo_id": 3370128, "url": "https://github.com/pgjdbc/pgjdbc", "stars": 772, "created": "2/6/2012 7:30:35 PM +00:00", "updates": "2020-01-25T07:41:33+00:00", "fork": "False", "license": "licensed"}}