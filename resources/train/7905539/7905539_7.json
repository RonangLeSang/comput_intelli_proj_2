{"test_class": {"identifier": "MultiCallbackTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock View view;", "modifier": "@Mock", "type": "View", "declarator": "view", "var_name": "view"}, {"original_string": "@Spy Drawable drawable;", "modifier": "@Spy", "type": "Drawable", "declarator": "drawable", "var_name": "drawable"}, {"original_string": "private Runnable action;", "modifier": "private", "type": "Runnable", "declarator": "action", "var_name": "action"}, {"original_string": "private MultiCallback simpleMultiCallback;", "modifier": "private", "type": "MultiCallback", "declarator": "simpleMultiCallback", "var_name": "simpleMultiCallback"}], "file": "android-gif-drawable/src/test/java/pl/droidsonroids/gif/MultiCallbackTest.java"}, "test_case": {"identifier": "testViewInvalidate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testViewInvalidate() {\n\t\tfinal MultiCallback viewInvalidateMultiCallback = new MultiCallback(true);\n\t\tviewInvalidateMultiCallback.addView(view);\n\t\tdrawable.setCallback(viewInvalidateMultiCallback);\n\t\tdrawable.invalidateSelf();\n\t\tverify(view).invalidate();\n\t}", "signature": "void testViewInvalidate()", "full_signature": "@Test public void testViewInvalidate()", "class_method_signature": "MultiCallbackTest.testViewInvalidate()", "testcase": true, "constructor": false, "invocations": ["addView", "setCallback", "invalidateSelf", "invalidate", "verify"]}, "focal_class": {"identifier": "MultiCallback", "superclass": "", "interfaces": "implements Callback", "fields": [{"original_string": "private final CopyOnWriteArrayList<CallbackWeakReference> mCallbacks = new CopyOnWriteArrayList<>();", "modifier": "private final", "type": "CopyOnWriteArrayList<CallbackWeakReference>", "declarator": "mCallbacks = new CopyOnWriteArrayList<>()", "var_name": "mCallbacks"}, {"original_string": "private final boolean mUseViewInvalidate;", "modifier": "private final", "type": "boolean", "declarator": "mUseViewInvalidate", "var_name": "mUseViewInvalidate"}], "methods": [{"identifier": "MultiCallback", "parameters": "()", "modifiers": "public", "return": "", "signature": " MultiCallback()", "full_signature": "public  MultiCallback()", "class_method_signature": "MultiCallback.MultiCallback()", "testcase": false, "constructor": true}, {"identifier": "MultiCallback", "parameters": "(final boolean useViewInvalidate)", "modifiers": "public", "return": "", "signature": " MultiCallback(final boolean useViewInvalidate)", "full_signature": "public  MultiCallback(final boolean useViewInvalidate)", "class_method_signature": "MultiCallback.MultiCallback(final boolean useViewInvalidate)", "testcase": false, "constructor": true}, {"identifier": "invalidateDrawable", "parameters": "(@NonNull final Drawable who)", "modifiers": "@Override public", "return": "void", "signature": "void invalidateDrawable(@NonNull final Drawable who)", "full_signature": "@Override public void invalidateDrawable(@NonNull final Drawable who)", "class_method_signature": "MultiCallback.invalidateDrawable(@NonNull final Drawable who)", "testcase": false, "constructor": false}, {"identifier": "scheduleDrawable", "parameters": "(@NonNull final Drawable who, @NonNull final Runnable what, final long when)", "modifiers": "@Override public", "return": "void", "signature": "void scheduleDrawable(@NonNull final Drawable who, @NonNull final Runnable what, final long when)", "full_signature": "@Override public void scheduleDrawable(@NonNull final Drawable who, @NonNull final Runnable what, final long when)", "class_method_signature": "MultiCallback.scheduleDrawable(@NonNull final Drawable who, @NonNull final Runnable what, final long when)", "testcase": false, "constructor": false}, {"identifier": "unscheduleDrawable", "parameters": "(@NonNull final Drawable who, @NonNull final Runnable what)", "modifiers": "@Override public", "return": "void", "signature": "void unscheduleDrawable(@NonNull final Drawable who, @NonNull final Runnable what)", "full_signature": "@Override public void unscheduleDrawable(@NonNull final Drawable who, @NonNull final Runnable what)", "class_method_signature": "MultiCallback.unscheduleDrawable(@NonNull final Drawable who, @NonNull final Runnable what)", "testcase": false, "constructor": false}, {"identifier": "addView", "parameters": "(final Callback callback)", "modifiers": "public", "return": "void", "signature": "void addView(final Callback callback)", "full_signature": "public void addView(final Callback callback)", "class_method_signature": "MultiCallback.addView(final Callback callback)", "testcase": false, "constructor": false}, {"identifier": "removeView", "parameters": "(final Callback callback)", "modifiers": "public", "return": "void", "signature": "void removeView(final Callback callback)", "full_signature": "public void removeView(final Callback callback)", "class_method_signature": "MultiCallback.removeView(final Callback callback)", "testcase": false, "constructor": false}], "file": "android-gif-drawable/src/main/java/pl/droidsonroids/gif/MultiCallback.java"}, "focal_method": {"identifier": "addView", "parameters": "(final Callback callback)", "modifiers": "public", "return": "void", "body": "public void addView(final Callback callback) {\n\t\tfor (int i = 0; i < mCallbacks.size(); i++) {\n\t\t\tfinal CallbackWeakReference reference = mCallbacks.get(i);\n\t\t\tfinal Callback item = reference.get();\n\t\t\tif (item == null) {\n\t\t\t\t// Always remove null references to reduce list size\n\t\t\t\tmCallbacks.remove(reference);\n\t\t\t}\n\t\t}\n\t\tmCallbacks.addIfAbsent(new CallbackWeakReference(callback));\n\t}", "signature": "void addView(final Callback callback)", "full_signature": "public void addView(final Callback callback)", "class_method_signature": "MultiCallback.addView(final Callback callback)", "testcase": false, "constructor": false, "invocations": ["size", "get", "get", "remove", "addIfAbsent"]}, "repository": {"repo_id": 7905539, "url": "https://github.com/koral--/android-gif-drawable", "language": "Java", "is_fork": false, "fork_count": 1674, "stargazer_count": 8376, "size": 5816, "license": "licensed"}}