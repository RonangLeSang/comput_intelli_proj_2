{"test_class": {"identifier": "JMXFactoryTest", "superclass": "", "interfaces": "implements JMXFactoryTestMBean", "fields": [], "file": "red5_base/src/test/java/org/red5/server/jmx/JMXFactoryTest.java"}, "test_case": {"identifier": "testGetMBeanServer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetMBeanServer() {\n\t\tSystem.out.println(\"Not yet implemented\"); // TODO\n\t}", "signature": "void testGetMBeanServer()", "full_signature": "@Test public void testGetMBeanServer()", "class_method_signature": "JMXFactoryTest.testGetMBeanServer()", "testcase": true, "constructor": false, "invocations": ["println"]}, "focal_class": {"identifier": "JMXFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static String domain = \"org.red5.server\";", "modifier": "private static", "type": "String", "declarator": "domain = \"org.red5.server\"", "var_name": "domain"}, {"original_string": "private static Logger log = LoggerFactory.getLogger(JMXFactory.class);", "modifier": "private static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(JMXFactory.class)", "var_name": "log"}, {"original_string": "private static MBeanServer mbs;", "modifier": "private static", "type": "MBeanServer", "declarator": "mbs", "var_name": "mbs"}], "methods": [{"identifier": "createMBean", "parameters": "(String className, String attributes)", "modifiers": "public static", "return": "ObjectName", "signature": "ObjectName createMBean(String className, String attributes)", "full_signature": "public static ObjectName createMBean(String className, String attributes)", "class_method_signature": "JMXFactory.createMBean(String className, String attributes)", "testcase": false, "constructor": false}, {"identifier": "createObjectName", "parameters": "(String... strings)", "modifiers": "public static", "return": "ObjectName", "signature": "ObjectName createObjectName(String... strings)", "full_signature": "public static ObjectName createObjectName(String... strings)", "class_method_signature": "JMXFactory.createObjectName(String... strings)", "testcase": false, "constructor": false}, {"identifier": "createSimpleMBean", "parameters": "(String className,\n\t\t\tString objectNameStr)", "modifiers": "public static", "return": "ObjectName", "signature": "ObjectName createSimpleMBean(String className,\n\t\t\tString objectNameStr)", "full_signature": "public static ObjectName createSimpleMBean(String className,\n\t\t\tString objectNameStr)", "class_method_signature": "JMXFactory.createSimpleMBean(String className,\n\t\t\tString objectNameStr)", "testcase": false, "constructor": false}, {"identifier": "getDefaultDomain", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getDefaultDomain()", "full_signature": "public static String getDefaultDomain()", "class_method_signature": "JMXFactory.getDefaultDomain()", "testcase": false, "constructor": false}, {"identifier": "getMBeanServer", "parameters": "()", "modifiers": "public static", "return": "MBeanServer", "signature": "MBeanServer getMBeanServer()", "full_signature": "public static MBeanServer getMBeanServer()", "class_method_signature": "JMXFactory.getMBeanServer()", "testcase": false, "constructor": false}, {"identifier": "registerNewMBean", "parameters": "(String className,\n\t\t\tClass interfaceClass)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "boolean", "signature": "boolean registerNewMBean(String className,\n\t\t\tClass interfaceClass)", "full_signature": "@SuppressWarnings(\"unchecked\") public static boolean registerNewMBean(String className,\n\t\t\tClass interfaceClass)", "class_method_signature": "JMXFactory.registerNewMBean(String className,\n\t\t\tClass interfaceClass)", "testcase": false, "constructor": false}, {"identifier": "registerNewMBean", "parameters": "(String className,\n\t\t\tClass interfaceClass, ObjectName name)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "boolean", "signature": "boolean registerNewMBean(String className,\n\t\t\tClass interfaceClass, ObjectName name)", "full_signature": "@SuppressWarnings(\"unchecked\") public static boolean registerNewMBean(String className,\n\t\t\tClass interfaceClass, ObjectName name)", "class_method_signature": "JMXFactory.registerNewMBean(String className,\n\t\t\tClass interfaceClass, ObjectName name)", "testcase": false, "constructor": false}, {"identifier": "registerNewMBean", "parameters": "(String className,\n\t\t\tClass interfaceClass, String name)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "boolean", "signature": "boolean registerNewMBean(String className,\n\t\t\tClass interfaceClass, String name)", "full_signature": "@SuppressWarnings(\"unchecked\") public static boolean registerNewMBean(String className,\n\t\t\tClass interfaceClass, String name)", "class_method_signature": "JMXFactory.registerNewMBean(String className,\n\t\t\tClass interfaceClass, String name)", "testcase": false, "constructor": false}, {"identifier": "getDomain", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDomain()", "full_signature": "public String getDomain()", "class_method_signature": "JMXFactory.getDomain()", "testcase": false, "constructor": false}, {"identifier": "setDomain", "parameters": "(String domain)", "modifiers": "public", "return": "void", "signature": "void setDomain(String domain)", "full_signature": "public void setDomain(String domain)", "class_method_signature": "JMXFactory.setDomain(String domain)", "testcase": false, "constructor": false}], "file": "red5_base/src/main/java/org/red5/server/jmx/JMXFactory.java"}, "focal_method": {"identifier": "getMBeanServer", "parameters": "()", "modifiers": "public static", "return": "MBeanServer", "body": "public static MBeanServer getMBeanServer() {\n\t\treturn mbs;\n\t}", "signature": "MBeanServer getMBeanServer()", "full_signature": "public static MBeanServer getMBeanServer()", "class_method_signature": "JMXFactory.getMBeanServer()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 103035, "url": "https://github.com/mguymon/red5-mavenized", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 13, "size": 11090, "license": "licensed"}}