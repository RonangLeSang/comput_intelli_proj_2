{"test_class": {"identifier": "DomainClassFinderTest", "superclass": "", "interfaces": "", "fields": [], "file": "drm-core/src/test/java/com/nitorcreations/DomainClassFinderTest.java"}, "test_case": {"identifier": "withMultiPackages", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void withMultiPackages() throws Exception {\n        List<Class<?>> classes = findClasses(\"com.nitorcreations.testdomain.person\", \"com.nitorcreations.testdomain.another\");\n        assertThat(classes.size(), is(5));\n    }", "signature": "void withMultiPackages()", "full_signature": "@Test public void withMultiPackages()", "class_method_signature": "DomainClassFinderTest.withMultiPackages()", "testcase": true, "constructor": false, "invocations": ["findClasses", "assertThat", "size", "is"]}, "focal_class": {"identifier": "DomainClassFinder", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "findClasses", "parameters": "(final List<String> packages, final URLClassLoader classLoader)", "modifiers": "public static", "return": "List<Class<?>>", "signature": "List<Class<?>> findClasses(final List<String> packages, final URLClassLoader classLoader)", "full_signature": "public static List<Class<?>> findClasses(final List<String> packages, final URLClassLoader classLoader)", "class_method_signature": "DomainClassFinder.findClasses(final List<String> packages, final URLClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "isNotPackageInfo", "parameters": "(Class<?> clazz)", "modifiers": "private static", "return": "boolean", "signature": "boolean isNotPackageInfo(Class<?> clazz)", "full_signature": "private static boolean isNotPackageInfo(Class<?> clazz)", "class_method_signature": "DomainClassFinder.isNotPackageInfo(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "isNotAnonymousClass", "parameters": "(Class<?> clazz)", "modifiers": "private static", "return": "boolean", "signature": "boolean isNotAnonymousClass(Class<?> clazz)", "full_signature": "private static boolean isNotAnonymousClass(Class<?> clazz)", "class_method_signature": "DomainClassFinder.isNotAnonymousClass(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "getClasses", "parameters": "(URLClassLoader classLoader, String packageName)", "modifiers": "private static", "return": "Set<Class<?>>", "signature": "Set<Class<?>> getClasses(URLClassLoader classLoader, String packageName)", "full_signature": "private static Set<Class<?>> getClasses(URLClassLoader classLoader, String packageName)", "class_method_signature": "DomainClassFinder.getClasses(URLClassLoader classLoader, String packageName)", "testcase": false, "constructor": false}, {"identifier": "DomainClassFinder", "parameters": "()", "modifiers": "private", "return": "", "signature": " DomainClassFinder()", "full_signature": "private  DomainClassFinder()", "class_method_signature": "DomainClassFinder.DomainClassFinder()", "testcase": false, "constructor": true}], "file": "drm-core/src/main/java/com/nitorcreations/DomainClassFinder.java"}, "focal_method": {"identifier": "findClasses", "parameters": "(final List<String> packages, final URLClassLoader classLoader)", "modifiers": "public static", "return": "List<Class<?>>", "body": "public static List<Class<?>> findClasses(final List<String> packages, final URLClassLoader classLoader) {\n        return packages.stream()\n                .map(packageName -> getClasses(classLoader, packageName))\n                .flatMap(Collection::stream)\n                .filter(DomainClassFinder::isNotPackageInfo)\n                .filter(DomainClassFinder::isNotAnonymousClass)\n                .collect(Collectors.toList());\n    }", "signature": "List<Class<?>> findClasses(final List<String> packages, final URLClassLoader classLoader)", "full_signature": "public static List<Class<?>> findClasses(final List<String> packages, final URLClassLoader classLoader)", "class_method_signature": "DomainClassFinder.findClasses(final List<String> packages, final URLClassLoader classLoader)", "testcase": false, "constructor": false, "invocations": ["collect", "filter", "filter", "flatMap", "map", "stream", "getClasses", "toList"]}, "repository": {"repo_id": 14083998, "url": "https://github.com/NitorCreations/DomainReverseMapper", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 23, "size": 609, "license": "licensed"}}