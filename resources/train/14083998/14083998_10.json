{"test_class": {"identifier": "DomainMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DomainMapper domainMapper;", "modifier": "private", "type": "DomainMapper", "declarator": "domainMapper", "var_name": "domainMapper"}], "file": "drm-core/src/test/java/com/nitorcreations/DomainMapperTest.java"}, "test_case": {"identifier": "testCreate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreate() throws Exception {\n        DomainMapper mapper = DomainMapper.create(Arrays.asList(\"com.nitorcreations.testdomain\"));\n        assertThat(mapper.getClasses(), hasItems(Timesheet.class, Task.class, Person.class, Manager.class, Employee.class));\n    }", "signature": "void testCreate()", "full_signature": "@Test public void testCreate()", "class_method_signature": "DomainMapperTest.testCreate()", "testcase": true, "constructor": false, "invocations": ["create", "asList", "assertThat", "getClasses", "hasItems"]}, "focal_class": {"identifier": "DomainMapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(DomainMapper.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(DomainMapper.class)", "var_name": "log"}, {"original_string": "private final FieldScanner fieldScanner;", "modifier": "private final", "type": "FieldScanner", "declarator": "fieldScanner", "var_name": "fieldScanner"}, {"original_string": "private final HierarchyScanner hierarchyScanner;", "modifier": "private final", "type": "HierarchyScanner", "declarator": "hierarchyScanner", "var_name": "hierarchyScanner"}, {"original_string": "private final List<Class<?>> classes;", "modifier": "private final", "type": "List<Class<?>>", "declarator": "classes", "var_name": "classes"}, {"original_string": "private final Presenter presenter = new DefaultGraphvizPresenter();", "modifier": "private final", "type": "Presenter", "declarator": "presenter = new DefaultGraphvizPresenter()", "var_name": "presenter"}], "methods": [{"identifier": "DomainMapper", "parameters": "(final List<Class<?>> classes)", "modifiers": "", "return": "", "signature": " DomainMapper(final List<Class<?>> classes)", "full_signature": "  DomainMapper(final List<Class<?>> classes)", "class_method_signature": "DomainMapper.DomainMapper(final List<Class<?>> classes)", "testcase": false, "constructor": true}, {"identifier": "describeDomain", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String describeDomain()", "full_signature": "public String describeDomain()", "class_method_signature": "DomainMapper.describeDomain()", "testcase": false, "constructor": false}, {"identifier": "getClasses", "parameters": "()", "modifiers": "public", "return": "List<Class<?>>", "signature": "List<Class<?>> getClasses()", "full_signature": "public List<Class<?>> getClasses()", "class_method_signature": "DomainMapper.getClasses()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(List<String> packages, URLClassLoader classLoader)", "modifiers": "public static", "return": "DomainMapper", "signature": "DomainMapper create(List<String> packages, URLClassLoader classLoader)", "full_signature": "public static DomainMapper create(List<String> packages, URLClassLoader classLoader)", "class_method_signature": "DomainMapper.create(List<String> packages, URLClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(final List<String> packages)", "modifiers": "public static", "return": "DomainMapper", "signature": "DomainMapper create(final List<String> packages)", "full_signature": "public static DomainMapper create(final List<String> packages)", "class_method_signature": "DomainMapper.create(final List<String> packages)", "testcase": false, "constructor": false}], "file": "drm-core/src/main/java/com/nitorcreations/DomainMapper.java"}, "focal_method": {"identifier": "create", "parameters": "(List<String> packages, URLClassLoader classLoader)", "modifiers": "public static", "return": "DomainMapper", "body": "public static DomainMapper create(List<String> packages, URLClassLoader classLoader) throws ClassNotFoundException {\n        List<Class<?>> allClasses = DomainClassFinder.findClasses(packages, classLoader);\n        log.debug(\"Found \" + allClasses.size() + \" classes.\");\n        return new DomainMapper(allClasses);\n    }", "signature": "DomainMapper create(List<String> packages, URLClassLoader classLoader)", "full_signature": "public static DomainMapper create(List<String> packages, URLClassLoader classLoader)", "class_method_signature": "DomainMapper.create(List<String> packages, URLClassLoader classLoader)", "testcase": false, "constructor": false, "invocations": ["findClasses", "debug", "size"]}, "repository": {"repo_id": 14083998, "url": "https://github.com/NitorCreations/DomainReverseMapper", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 23, "size": 609, "license": "licensed"}}