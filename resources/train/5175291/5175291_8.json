{"test_class": {"identifier": "TestCoordinator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Coordinator coordinator;", "modifier": "private", "type": "Coordinator", "declarator": "coordinator", "var_name": "coordinator"}, {"original_string": "private MockProvisioner provisioner;", "modifier": "private", "type": "MockProvisioner", "declarator": "provisioner", "var_name": "provisioner"}, {"original_string": "private TestingMavenRepository repository;", "modifier": "private", "type": "TestingMavenRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "private CoordinatorStatus coordinatorStatus;", "modifier": "private", "type": "CoordinatorStatus", "declarator": "coordinatorStatus", "var_name": "coordinatorStatus"}], "file": "airship-coordinator/src/test/java/io/airlift/airship/coordinator/TestCoordinator.java"}, "test_case": {"identifier": "testNoAgents", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNoAgents()\n            throws Exception\n    {\n        assertTrue(coordinator.getAgents().isEmpty());\n    }", "signature": "void testNoAgents()", "full_signature": "@Test public void testNoAgents()", "class_method_signature": "TestCoordinator.testNoAgents()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isEmpty", "getAgents"]}, "focal_class": {"identifier": "Coordinator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = Logger.get(Coordinator.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = Logger.get(Coordinator.class)", "var_name": "log"}, {"original_string": "private final ConcurrentMap<String, RemoteCoordinator> coordinators = new ConcurrentHashMap<>();", "modifier": "private final", "type": "ConcurrentMap<String, RemoteCoordinator>", "declarator": "coordinators = new ConcurrentHashMap<>()", "var_name": "coordinators"}, {"original_string": "private final ConcurrentMap<String, RemoteAgent> agents = new ConcurrentHashMap<>();", "modifier": "private final", "type": "ConcurrentMap<String, RemoteAgent>", "declarator": "agents = new ConcurrentHashMap<>()", "var_name": "agents"}, {"original_string": "private final CoordinatorStatus coordinatorStatus;", "modifier": "private final", "type": "CoordinatorStatus", "declarator": "coordinatorStatus", "var_name": "coordinatorStatus"}, {"original_string": "private final Repository repository;", "modifier": "private final", "type": "Repository", "declarator": "repository", "var_name": "repository"}, {"original_string": "private final ScheduledExecutorService timerService;", "modifier": "private final", "type": "ScheduledExecutorService", "declarator": "timerService", "var_name": "timerService"}, {"original_string": "private final Duration statusExpiration;", "modifier": "private final", "type": "Duration", "declarator": "statusExpiration", "var_name": "statusExpiration"}, {"original_string": "private final Provisioner provisioner;", "modifier": "private final", "type": "Provisioner", "declarator": "provisioner", "var_name": "provisioner"}, {"original_string": "private final RemoteCoordinatorFactory remoteCoordinatorFactory;", "modifier": "private final", "type": "RemoteCoordinatorFactory", "declarator": "remoteCoordinatorFactory", "var_name": "remoteCoordinatorFactory"}, {"original_string": "private final RemoteAgentFactory remoteAgentFactory;", "modifier": "private final", "type": "RemoteAgentFactory", "declarator": "remoteAgentFactory", "var_name": "remoteAgentFactory"}, {"original_string": "private final ServiceInventory serviceInventory;", "modifier": "private final", "type": "ServiceInventory", "declarator": "serviceInventory", "var_name": "serviceInventory"}, {"original_string": "private final StateManager stateManager;", "modifier": "private final", "type": "StateManager", "declarator": "stateManager", "var_name": "stateManager"}, {"original_string": "private final boolean allowDuplicateInstallationsOnAnAgent;", "modifier": "private final", "type": "boolean", "declarator": "allowDuplicateInstallationsOnAnAgent", "var_name": "allowDuplicateInstallationsOnAnAgent"}, {"original_string": "private final ExecutorService executor;", "modifier": "private final", "type": "ExecutorService", "declarator": "executor", "var_name": "executor"}], "methods": [{"identifier": "Coordinator", "parameters": "(NodeInfo nodeInfo,\n            HttpServerInfo httpServerInfo,\n            CoordinatorConfig config,\n            RemoteCoordinatorFactory remoteCoordinatorFactory,\n            RemoteAgentFactory remoteAgentFactory,\n            Repository repository,\n            Provisioner provisioner,\n            StateManager stateManager, ServiceInventory serviceInventory)", "modifiers": "@Inject public", "return": "", "signature": " Coordinator(NodeInfo nodeInfo,\n            HttpServerInfo httpServerInfo,\n            CoordinatorConfig config,\n            RemoteCoordinatorFactory remoteCoordinatorFactory,\n            RemoteAgentFactory remoteAgentFactory,\n            Repository repository,\n            Provisioner provisioner,\n            StateManager stateManager, ServiceInventory serviceInventory)", "full_signature": "@Inject public  Coordinator(NodeInfo nodeInfo,\n            HttpServerInfo httpServerInfo,\n            CoordinatorConfig config,\n            RemoteCoordinatorFactory remoteCoordinatorFactory,\n            RemoteAgentFactory remoteAgentFactory,\n            Repository repository,\n            Provisioner provisioner,\n            StateManager stateManager, ServiceInventory serviceInventory)", "class_method_signature": "Coordinator.Coordinator(NodeInfo nodeInfo,\n            HttpServerInfo httpServerInfo,\n            CoordinatorConfig config,\n            RemoteCoordinatorFactory remoteCoordinatorFactory,\n            RemoteAgentFactory remoteAgentFactory,\n            Repository repository,\n            Provisioner provisioner,\n            StateManager stateManager, ServiceInventory serviceInventory)", "testcase": false, "constructor": true}, {"identifier": "Coordinator", "parameters": "(CoordinatorStatus coordinatorStatus,\n            RemoteCoordinatorFactory remoteCoordinatorFactory,\n            RemoteAgentFactory remoteAgentFactory,\n            Repository repository,\n            Provisioner provisioner,\n            StateManager stateManager,\n            ServiceInventory serviceInventory,\n            Duration statusExpiration,\n            boolean allowDuplicateInstallationsOnAnAgent)", "modifiers": "public", "return": "", "signature": " Coordinator(CoordinatorStatus coordinatorStatus,\n            RemoteCoordinatorFactory remoteCoordinatorFactory,\n            RemoteAgentFactory remoteAgentFactory,\n            Repository repository,\n            Provisioner provisioner,\n            StateManager stateManager,\n            ServiceInventory serviceInventory,\n            Duration statusExpiration,\n            boolean allowDuplicateInstallationsOnAnAgent)", "full_signature": "public  Coordinator(CoordinatorStatus coordinatorStatus,\n            RemoteCoordinatorFactory remoteCoordinatorFactory,\n            RemoteAgentFactory remoteAgentFactory,\n            Repository repository,\n            Provisioner provisioner,\n            StateManager stateManager,\n            ServiceInventory serviceInventory,\n            Duration statusExpiration,\n            boolean allowDuplicateInstallationsOnAnAgent)", "class_method_signature": "Coordinator.Coordinator(CoordinatorStatus coordinatorStatus,\n            RemoteCoordinatorFactory remoteCoordinatorFactory,\n            RemoteAgentFactory remoteAgentFactory,\n            Repository repository,\n            Provisioner provisioner,\n            StateManager stateManager,\n            ServiceInventory serviceInventory,\n            Duration statusExpiration,\n            boolean allowDuplicateInstallationsOnAnAgent)", "testcase": false, "constructor": true}, {"identifier": "start", "parameters": "()", "modifiers": "@PostConstruct public", "return": "void", "signature": "void start()", "full_signature": "@PostConstruct public void start()", "class_method_signature": "Coordinator.start()", "testcase": false, "constructor": false}, {"identifier": "status", "parameters": "()", "modifiers": "public", "return": "CoordinatorStatus", "signature": "CoordinatorStatus status()", "full_signature": "public CoordinatorStatus status()", "class_method_signature": "Coordinator.status()", "testcase": false, "constructor": false}, {"identifier": "getCoordinator", "parameters": "(String instanceId)", "modifiers": "public", "return": "CoordinatorStatus", "signature": "CoordinatorStatus getCoordinator(String instanceId)", "full_signature": "public CoordinatorStatus getCoordinator(String instanceId)", "class_method_signature": "Coordinator.getCoordinator(String instanceId)", "testcase": false, "constructor": false}, {"identifier": "getCoordinators", "parameters": "()", "modifiers": "public", "return": "List<CoordinatorStatus>", "signature": "List<CoordinatorStatus> getCoordinators()", "full_signature": "public List<CoordinatorStatus> getCoordinators()", "class_method_signature": "Coordinator.getCoordinators()", "testcase": false, "constructor": false}, {"identifier": "getCoordinators", "parameters": "(Predicate<CoordinatorStatus> coordinatorFilter)", "modifiers": "public", "return": "List<CoordinatorStatus>", "signature": "List<CoordinatorStatus> getCoordinators(Predicate<CoordinatorStatus> coordinatorFilter)", "full_signature": "public List<CoordinatorStatus> getCoordinators(Predicate<CoordinatorStatus> coordinatorFilter)", "class_method_signature": "Coordinator.getCoordinators(Predicate<CoordinatorStatus> coordinatorFilter)", "testcase": false, "constructor": false}, {"identifier": "provisionCoordinators", "parameters": "(String coordinatorConfigSpec,\n            int coordinatorCount,\n            String instanceType,\n            String availabilityZone,\n            String ami,\n            String keyPair,\n            String securityGroup,\n            String provisioningScriptsArtifact)", "modifiers": "public", "return": "List<CoordinatorStatus>", "signature": "List<CoordinatorStatus> provisionCoordinators(String coordinatorConfigSpec,\n            int coordinatorCount,\n            String instanceType,\n            String availabilityZone,\n            String ami,\n            String keyPair,\n            String securityGroup,\n            String provisioningScriptsArtifact)", "full_signature": "public List<CoordinatorStatus> provisionCoordinators(String coordinatorConfigSpec,\n            int coordinatorCount,\n            String instanceType,\n            String availabilityZone,\n            String ami,\n            String keyPair,\n            String securityGroup,\n            String provisioningScriptsArtifact)", "class_method_signature": "Coordinator.provisionCoordinators(String coordinatorConfigSpec,\n            int coordinatorCount,\n            String instanceType,\n            String availabilityZone,\n            String ami,\n            String keyPair,\n            String securityGroup,\n            String provisioningScriptsArtifact)", "testcase": false, "constructor": false}, {"identifier": "getAgents", "parameters": "()", "modifiers": "public", "return": "List<AgentStatus>", "signature": "List<AgentStatus> getAgents()", "full_signature": "public List<AgentStatus> getAgents()", "class_method_signature": "Coordinator.getAgents()", "testcase": false, "constructor": false}, {"identifier": "getAgents", "parameters": "(Predicate<AgentStatus> agentFilter)", "modifiers": "public", "return": "List<AgentStatus>", "signature": "List<AgentStatus> getAgents(Predicate<AgentStatus> agentFilter)", "full_signature": "public List<AgentStatus> getAgents(Predicate<AgentStatus> agentFilter)", "class_method_signature": "Coordinator.getAgents(Predicate<AgentStatus> agentFilter)", "testcase": false, "constructor": false}, {"identifier": "getAgent", "parameters": "(String instanceId)", "modifiers": "public", "return": "AgentStatus", "signature": "AgentStatus getAgent(String instanceId)", "full_signature": "public AgentStatus getAgent(String instanceId)", "class_method_signature": "Coordinator.getAgent(String instanceId)", "testcase": false, "constructor": false}, {"identifier": "getAgentByAgentId", "parameters": "(String agentId)", "modifiers": "public", "return": "AgentStatus", "signature": "AgentStatus getAgentByAgentId(String agentId)", "full_signature": "public AgentStatus getAgentByAgentId(String agentId)", "class_method_signature": "Coordinator.getAgentByAgentId(String agentId)", "testcase": false, "constructor": false}, {"identifier": "updateAllCoordinatorsAndWait", "parameters": "()", "modifiers": "@VisibleForTesting public", "return": "void", "signature": "void updateAllCoordinatorsAndWait()", "full_signature": "@VisibleForTesting public void updateAllCoordinatorsAndWait()", "class_method_signature": "Coordinator.updateAllCoordinatorsAndWait()", "testcase": false, "constructor": false}, {"identifier": "updateAllCoordinators", "parameters": "()", "modifiers": "private", "return": "List<ListenableFuture<?>>", "signature": "List<ListenableFuture<?>> updateAllCoordinators()", "full_signature": "private List<ListenableFuture<?>> updateAllCoordinators()", "class_method_signature": "Coordinator.updateAllCoordinators()", "testcase": false, "constructor": false}, {"identifier": "updateAllAgentsAndWait", "parameters": "()", "modifiers": "@VisibleForTesting public", "return": "void", "signature": "void updateAllAgentsAndWait()", "full_signature": "@VisibleForTesting public void updateAllAgentsAndWait()", "class_method_signature": "Coordinator.updateAllAgentsAndWait()", "testcase": false, "constructor": false}, {"identifier": "updateAllAgents", "parameters": "()", "modifiers": "private", "return": "List<ListenableFuture<?>>", "signature": "List<ListenableFuture<?>> updateAllAgents()", "full_signature": "private List<ListenableFuture<?>> updateAllAgents()", "class_method_signature": "Coordinator.updateAllAgents()", "testcase": false, "constructor": false}, {"identifier": "provisionAgents", "parameters": "(String agentConfigSpec,\n            int agentCount,\n            String instanceType,\n            String availabilityZone,\n            String ami,\n            String keyPair,\n            String securityGroup,\n            String provisioningScriptsArtifact)", "modifiers": "public", "return": "List<AgentStatus>", "signature": "List<AgentStatus> provisionAgents(String agentConfigSpec,\n            int agentCount,\n            String instanceType,\n            String availabilityZone,\n            String ami,\n            String keyPair,\n            String securityGroup,\n            String provisioningScriptsArtifact)", "full_signature": "public List<AgentStatus> provisionAgents(String agentConfigSpec,\n            int agentCount,\n            String instanceType,\n            String availabilityZone,\n            String ami,\n            String keyPair,\n            String securityGroup,\n            String provisioningScriptsArtifact)", "class_method_signature": "Coordinator.provisionAgents(String agentConfigSpec,\n            int agentCount,\n            String instanceType,\n            String availabilityZone,\n            String ami,\n            String keyPair,\n            String securityGroup,\n            String provisioningScriptsArtifact)", "testcase": false, "constructor": false}, {"identifier": "terminateAgent", "parameters": "(String agentId)", "modifiers": "public", "return": "AgentStatus", "signature": "AgentStatus terminateAgent(String agentId)", "full_signature": "public AgentStatus terminateAgent(String agentId)", "class_method_signature": "Coordinator.terminateAgent(String agentId)", "testcase": false, "constructor": false}, {"identifier": "install", "parameters": "(Predicate<AgentStatus> filter, int limit, Assignment assignment)", "modifiers": "public", "return": "List<SlotStatus>", "signature": "List<SlotStatus> install(Predicate<AgentStatus> filter, int limit, Assignment assignment)", "full_signature": "public List<SlotStatus> install(Predicate<AgentStatus> filter, int limit, Assignment assignment)", "class_method_signature": "Coordinator.install(Predicate<AgentStatus> filter, int limit, Assignment assignment)", "testcase": false, "constructor": false}, {"identifier": "selectAgents", "parameters": "(Predicate<AgentStatus> filter, Installation installation)", "modifiers": "private", "return": "List<RemoteAgent>", "signature": "List<RemoteAgent> selectAgents(Predicate<AgentStatus> filter, Installation installation)", "full_signature": "private List<RemoteAgent> selectAgents(Predicate<AgentStatus> filter, Installation installation)", "class_method_signature": "Coordinator.selectAgents(Predicate<AgentStatus> filter, Installation installation)", "testcase": false, "constructor": false}, {"identifier": "upgrade", "parameters": "(Predicate<SlotStatus> filter, UpgradeVersions upgradeVersions, String expectedSlotsVersion, boolean force)", "modifiers": "public", "return": "List<SlotStatus>", "signature": "List<SlotStatus> upgrade(Predicate<SlotStatus> filter, UpgradeVersions upgradeVersions, String expectedSlotsVersion, boolean force)", "full_signature": "public List<SlotStatus> upgrade(Predicate<SlotStatus> filter, UpgradeVersions upgradeVersions, String expectedSlotsVersion, boolean force)", "class_method_signature": "Coordinator.upgrade(Predicate<SlotStatus> filter, UpgradeVersions upgradeVersions, String expectedSlotsVersion, boolean force)", "testcase": false, "constructor": false}, {"identifier": "sameBinary", "parameters": "(Collection<Assignment> values)", "modifiers": "private", "return": "boolean", "signature": "boolean sameBinary(Collection<Assignment> values)", "full_signature": "private boolean sameBinary(Collection<Assignment> values)", "class_method_signature": "Coordinator.sameBinary(Collection<Assignment> values)", "testcase": false, "constructor": false}, {"identifier": "terminate", "parameters": "(Predicate<SlotStatus> filter, String expectedSlotsVersion)", "modifiers": "public", "return": "List<SlotStatus>", "signature": "List<SlotStatus> terminate(Predicate<SlotStatus> filter, String expectedSlotsVersion)", "full_signature": "public List<SlotStatus> terminate(Predicate<SlotStatus> filter, String expectedSlotsVersion)", "class_method_signature": "Coordinator.terminate(Predicate<SlotStatus> filter, String expectedSlotsVersion)", "testcase": false, "constructor": false}, {"identifier": "setState", "parameters": "(final SlotLifecycleState state, Predicate<SlotStatus> filter, String expectedSlotsVersion)", "modifiers": "public", "return": "List<SlotStatus>", "signature": "List<SlotStatus> setState(final SlotLifecycleState state, Predicate<SlotStatus> filter, String expectedSlotsVersion)", "full_signature": "public List<SlotStatus> setState(final SlotLifecycleState state, Predicate<SlotStatus> filter, String expectedSlotsVersion)", "class_method_signature": "Coordinator.setState(final SlotLifecycleState state, Predicate<SlotStatus> filter, String expectedSlotsVersion)", "testcase": false, "constructor": false}, {"identifier": "resetExpectedState", "parameters": "(Predicate<SlotStatus> filter, String expectedSlotsVersion)", "modifiers": "public", "return": "List<SlotStatus>", "signature": "List<SlotStatus> resetExpectedState(Predicate<SlotStatus> filter, String expectedSlotsVersion)", "full_signature": "public List<SlotStatus> resetExpectedState(Predicate<SlotStatus> filter, String expectedSlotsVersion)", "class_method_signature": "Coordinator.resetExpectedState(Predicate<SlotStatus> filter, String expectedSlotsVersion)", "testcase": false, "constructor": false}, {"identifier": "selectRemoteSlots", "parameters": "(Predicate<SlotStatus> filter, String expectedSlotsVersion)", "modifiers": "private", "return": "List<RemoteSlot>", "signature": "List<RemoteSlot> selectRemoteSlots(Predicate<SlotStatus> filter, String expectedSlotsVersion)", "full_signature": "private List<RemoteSlot> selectRemoteSlots(Predicate<SlotStatus> filter, String expectedSlotsVersion)", "class_method_signature": "Coordinator.selectRemoteSlots(Predicate<SlotStatus> filter, String expectedSlotsVersion)", "testcase": false, "constructor": false}, {"identifier": "getAllSlotStatus", "parameters": "()", "modifiers": "public", "return": "List<SlotStatus>", "signature": "List<SlotStatus> getAllSlotStatus()", "full_signature": "public List<SlotStatus> getAllSlotStatus()", "class_method_signature": "Coordinator.getAllSlotStatus()", "testcase": false, "constructor": false}, {"identifier": "getAllSlotsStatus", "parameters": "(Predicate<SlotStatus> slotFilter)", "modifiers": "public", "return": "List<SlotStatus>", "signature": "List<SlotStatus> getAllSlotsStatus(Predicate<SlotStatus> slotFilter)", "full_signature": "public List<SlotStatus> getAllSlotsStatus(Predicate<SlotStatus> slotFilter)", "class_method_signature": "Coordinator.getAllSlotsStatus(Predicate<SlotStatus> slotFilter)", "testcase": false, "constructor": false}, {"identifier": "getAllSlotsStatus", "parameters": "(Predicate<SlotStatus> slotFilter, List<RemoteSlot> allSlots)", "modifiers": "private", "return": "List<SlotStatus>", "signature": "List<SlotStatus> getAllSlotsStatus(Predicate<SlotStatus> slotFilter, List<RemoteSlot> allSlots)", "full_signature": "private List<SlotStatus> getAllSlotsStatus(Predicate<SlotStatus> slotFilter, List<RemoteSlot> allSlots)", "class_method_signature": "Coordinator.getAllSlotsStatus(Predicate<SlotStatus> slotFilter, List<RemoteSlot> allSlots)", "testcase": false, "constructor": false}, {"identifier": "filterSlotsBy", "parameters": "(final Predicate<SlotStatus> filter)", "modifiers": "private", "return": "Predicate<RemoteSlot>", "signature": "Predicate<RemoteSlot> filterSlotsBy(final Predicate<SlotStatus> filter)", "full_signature": "private Predicate<RemoteSlot> filterSlotsBy(final Predicate<SlotStatus> filter)", "class_method_signature": "Coordinator.filterSlotsBy(final Predicate<SlotStatus> filter)", "testcase": false, "constructor": false}, {"identifier": "getAllSlots", "parameters": "()", "modifiers": "private", "return": "List<RemoteSlot>", "signature": "List<RemoteSlot> getAllSlots()", "full_signature": "private List<RemoteSlot> getAllSlots()", "class_method_signature": "Coordinator.getAllSlots()", "testcase": false, "constructor": false}, {"identifier": "filterAgentsBy", "parameters": "(final Predicate<AgentStatus> filter)", "modifiers": "private", "return": "Predicate<RemoteAgent>", "signature": "Predicate<RemoteAgent> filterAgentsBy(final Predicate<AgentStatus> filter)", "full_signature": "private Predicate<RemoteAgent> filterAgentsBy(final Predicate<AgentStatus> filter)", "class_method_signature": "Coordinator.filterAgentsBy(final Predicate<AgentStatus> filter)", "testcase": false, "constructor": false}, {"identifier": "getSlotStatus", "parameters": "()", "modifiers": "private", "return": "Function<RemoteSlot, SlotStatus>", "signature": "Function<RemoteSlot, SlotStatus> getSlotStatus()", "full_signature": "private Function<RemoteSlot, SlotStatus> getSlotStatus()", "class_method_signature": "Coordinator.getSlotStatus()", "testcase": false, "constructor": false}, {"identifier": "getAgentStatus", "parameters": "()", "modifiers": "private", "return": "Function<RemoteAgent, AgentStatus>", "signature": "Function<RemoteAgent, AgentStatus> getAgentStatus()", "full_signature": "private Function<RemoteAgent, AgentStatus> getAgentStatus()", "class_method_signature": "Coordinator.getAgentStatus()", "testcase": false, "constructor": false}, {"identifier": "filterAgentsWithAssignment", "parameters": "(Installation installation)", "modifiers": "private", "return": "Predicate<RemoteAgent>", "signature": "Predicate<RemoteAgent> filterAgentsWithAssignment(Installation installation)", "full_signature": "private Predicate<RemoteAgent> filterAgentsWithAssignment(Installation installation)", "class_method_signature": "Coordinator.filterAgentsWithAssignment(Installation installation)", "testcase": false, "constructor": false}, {"identifier": "assignmentEqualsIgnoreVersion", "parameters": "(Assignment a, Assignment b)", "modifiers": "private", "return": "boolean", "signature": "boolean assignmentEqualsIgnoreVersion(Assignment a, Assignment b)", "full_signature": "private boolean assignmentEqualsIgnoreVersion(Assignment a, Assignment b)", "class_method_signature": "Coordinator.assignmentEqualsIgnoreVersion(Assignment a, Assignment b)", "testcase": false, "constructor": false}, {"identifier": "parallelCommand", "parameters": "(Iterable<RemoteSlot> items, final Function<RemoteSlot, T> function)", "modifiers": "private", "return": "ImmutableList<T>", "signature": "ImmutableList<T> parallelCommand(Iterable<RemoteSlot> items, final Function<RemoteSlot, T> function)", "full_signature": "private ImmutableList<T> parallelCommand(Iterable<RemoteSlot> items, final Function<RemoteSlot, T> function)", "class_method_signature": "Coordinator.parallelCommand(Iterable<RemoteSlot> items, final Function<RemoteSlot, T> function)", "testcase": false, "constructor": false}, {"identifier": "parallel", "parameters": "(Iterable<F> items, final Function<F, T> function)", "modifiers": "private", "return": "ImmutableList<T>", "signature": "ImmutableList<T> parallel(Iterable<F> items, final Function<F, T> function)", "full_signature": "private ImmutableList<T> parallel(Iterable<F> items, final Function<F, T> function)", "class_method_signature": "Coordinator.parallel(Iterable<F> items, final Function<F, T> function)", "testcase": false, "constructor": false}, {"identifier": "waitForFutures", "parameters": "(Iterable<ListenableFuture<?>> futures)", "modifiers": "private static", "return": "void", "signature": "void waitForFutures(Iterable<ListenableFuture<?>> futures)", "full_signature": "private static void waitForFutures(Iterable<ListenableFuture<?>> futures)", "class_method_signature": "Coordinator.waitForFutures(Iterable<ListenableFuture<?>> futures)", "testcase": false, "constructor": false}], "file": "airship-coordinator/src/main/java/io/airlift/airship/coordinator/Coordinator.java"}, "focal_method": {"identifier": "getAgents", "parameters": "()", "modifiers": "public", "return": "List<AgentStatus>", "body": "public List<AgentStatus> getAgents()\n    {\n        return ImmutableList.copyOf(Iterables.transform(agents.values(), new Function<RemoteAgent, AgentStatus>()\n        {\n            public AgentStatus apply(RemoteAgent agent)\n            {\n                return agent.status();\n            }\n        }));\n    }", "signature": "List<AgentStatus> getAgents()", "full_signature": "public List<AgentStatus> getAgents()", "class_method_signature": "Coordinator.getAgents()", "testcase": false, "constructor": false, "invocations": ["copyOf", "transform", "values", "status"]}, "repository": {"repo_id": 5175291, "url": "https://github.com/airlift/airship", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 31, "size": 4899, "license": "licensed"}}