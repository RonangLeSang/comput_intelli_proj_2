{"test_class": {"identifier": "SimplePathPatternTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/httpobjects/path/SimplePathPatternTest.java"}, "test_case": {"identifier": "returnsRawPath", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void returnsRawPath(){\n\t\tPathPattern p = new SimplePathPattern(\"/house/{apple*}\");\n\t\tassertEquals(\"/house/{apple*}\", p.raw());\n\t}", "signature": "void returnsRawPath()", "full_signature": "@Test public void returnsRawPath()", "class_method_signature": "SimplePathPatternTest.returnsRawPath()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "raw"]}, "focal_class": {"identifier": "SimplePathPattern", "superclass": "", "interfaces": "implements PathPattern", "fields": [{"original_string": "private final String pattern;", "modifier": "private final", "type": "String", "declarator": "pattern", "var_name": "pattern"}, {"original_string": "private final List<Seg> segs = new ArrayList<Seg>();", "modifier": "private final", "type": "List<Seg>", "declarator": "segs = new ArrayList<Seg>()", "var_name": "segs"}], "methods": [{"identifier": "SimplePathPattern", "parameters": "(String pattern)", "modifiers": "public", "return": "", "signature": " SimplePathPattern(String pattern)", "full_signature": "public  SimplePathPattern(String pattern)", "class_method_signature": "SimplePathPattern.SimplePathPattern(String pattern)", "testcase": false, "constructor": true}, {"identifier": "varNames", "parameters": "()", "modifiers": "public", "return": "List<PathParamName>", "signature": "List<PathParamName> varNames()", "full_signature": "public List<PathParamName> varNames()", "class_method_signature": "SimplePathPattern.varNames()", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(String path)", "modifiers": "public", "return": "boolean", "signature": "boolean matches(String path)", "full_signature": "public boolean matches(String path)", "class_method_signature": "SimplePathPattern.matches(String path)", "testcase": false, "constructor": false}, {"identifier": "stripQueryString", "parameters": "(String[] segments)", "modifiers": "private", "return": "void", "signature": "void stripQueryString(String[] segments)", "full_signature": "private void stripQueryString(String[] segments)", "class_method_signature": "SimplePathPattern.stripQueryString(String[] segments)", "testcase": false, "constructor": false}, {"identifier": "match", "parameters": "(String path)", "modifiers": "public", "return": "Path", "signature": "Path match(String path)", "full_signature": "public Path match(String path)", "class_method_signature": "SimplePathPattern.match(String path)", "testcase": false, "constructor": false}, {"identifier": "raw", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String raw()", "full_signature": "public String raw()", "class_method_signature": "SimplePathPattern.raw()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/httpobjects/path/SimplePathPattern.java"}, "focal_method": {"identifier": "raw", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String raw() {\n        return pattern;\n    }", "signature": "String raw()", "full_signature": "public String raw()", "class_method_signature": "SimplePathPattern.raw()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 3988459, "url": "https://github.com/cjdev/httpobjects", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 794, "license": "licensed"}}