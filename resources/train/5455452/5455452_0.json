{"test_class": {"identifier": "AsnOutputStreamTest", "superclass": "extends TestCase", "interfaces": "", "fields": [{"original_string": "private AsnOutputStream output;", "modifier": "private", "type": "AsnOutputStream", "declarator": "output", "var_name": "output"}], "file": "asn-impl/src/test/java/org/mobicents/protocols/asn/AsnOutputStreamTest.java"}, "test_case": {"identifier": "testReal10_Basic", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testReal10_Basic() throws Exception {\n\t\ttry {\n\t\t\tthis.output.writeReal(\"3\", BERStatics.REAL_NR1 - 1);\n\t\t\tfail();\n\t\t} catch (AsnException asne) {\n\n\t\t}\n\t\ttry {\n\t\t\tthis.output.writeReal(\"3\", BERStatics.REAL_NR3 + 1);\n\t\t\tfail();\n\t\t} catch (AsnException asne) {\n\n\t\t}\n\t\ttry {\n\t\t\tthis.output.writeReal(\"x3\", BERStatics.REAL_NR3);\n\t\t\tfail();\n\t\t} catch (NumberFormatException e) {\n\n\t\t}\n\t\ttry {\n\t\t\tthis.output.writeReal(\"3x\", BERStatics.REAL_NR3);\n\t\t\tfail();\n\t\t} catch (NumberFormatException e) {\n\n\t\t}\n\t}", "signature": "void testReal10_Basic()", "full_signature": "@Test public void testReal10_Basic()", "class_method_signature": "AsnOutputStreamTest.testReal10_Basic()", "testcase": true, "constructor": false, "invocations": ["writeReal", "fail", "writeReal", "fail", "writeReal", "fail", "writeReal", "fail"]}, "focal_class": {"identifier": "AsnOutputStream", "superclass": "extends OutputStream", "interfaces": "", "fields": [{"original_string": "private static final String _REAL_BASE10_CHARSET = \"US-ASCII\";", "modifier": "private static final", "type": "String", "declarator": "_REAL_BASE10_CHARSET = \"US-ASCII\"", "var_name": "_REAL_BASE10_CHARSET"}, {"original_string": "private static final byte _BOOLEAN_POSITIVE = (byte) 0xFF;", "modifier": "private static final", "type": "byte", "declarator": "_BOOLEAN_POSITIVE = (byte) 0xFF", "var_name": "_BOOLEAN_POSITIVE"}, {"original_string": "private static final byte _BOOLEAN_NEGATIVE = 0x00;", "modifier": "private static final", "type": "byte", "declarator": "_BOOLEAN_NEGATIVE = 0x00", "var_name": "_BOOLEAN_NEGATIVE"}, {"original_string": "private byte[] buffer;", "modifier": "private", "type": "byte[]", "declarator": "buffer", "var_name": "buffer"}, {"original_string": "private int pos;", "modifier": "private", "type": "int", "declarator": "pos", "var_name": "pos"}, {"original_string": "private int length;", "modifier": "private", "type": "int", "declarator": "length", "var_name": "length"}], "methods": [{"identifier": "AsnOutputStream", "parameters": "()", "modifiers": "public", "return": "", "signature": " AsnOutputStream()", "full_signature": "public  AsnOutputStream()", "class_method_signature": "AsnOutputStream.AsnOutputStream()", "testcase": false, "constructor": true}, {"identifier": "toByteArray", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] toByteArray()", "full_signature": "public byte[] toByteArray()", "class_method_signature": "AsnOutputStream.toByteArray()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "AsnOutputStream.size()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reset()", "full_signature": "public void reset()", "class_method_signature": "AsnOutputStream.reset()", "testcase": false, "constructor": false}, {"identifier": "checkIncreaseArray", "parameters": "( int addCount )", "modifiers": "private", "return": "void", "signature": "void checkIncreaseArray( int addCount )", "full_signature": "private void checkIncreaseArray( int addCount )", "class_method_signature": "AsnOutputStream.checkIncreaseArray( int addCount )", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "( int b )", "modifiers": "@Override public", "return": "void", "signature": "void write( int b )", "full_signature": "@Override public void write( int b )", "class_method_signature": "AsnOutputStream.write( int b )", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(byte[] b, int off, int len)", "modifiers": "@Override public", "return": "void", "signature": "void write(byte[] b, int off, int len)", "full_signature": "@Override public void write(byte[] b, int off, int len)", "class_method_signature": "AsnOutputStream.write(byte[] b, int off, int len)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(byte[] b)", "modifiers": "@Override public", "return": "void", "signature": "void write(byte[] b)", "full_signature": "@Override public void write(byte[] b)", "class_method_signature": "AsnOutputStream.write(byte[] b)", "testcase": false, "constructor": false}, {"identifier": "writeTag", "parameters": "(int tagClass, boolean primitive, int tag)", "modifiers": "public", "return": "void", "signature": "void writeTag(int tagClass, boolean primitive, int tag)", "full_signature": "public void writeTag(int tagClass, boolean primitive, int tag)", "class_method_signature": "AsnOutputStream.writeTag(int tagClass, boolean primitive, int tag)", "testcase": false, "constructor": false}, {"identifier": "writeLength", "parameters": "(int v)", "modifiers": "public", "return": "void", "signature": "void writeLength(int v)", "full_signature": "public void writeLength(int v)", "class_method_signature": "AsnOutputStream.writeLength(int v)", "testcase": false, "constructor": false}, {"identifier": "StartContentDefiniteLength", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int StartContentDefiniteLength()", "full_signature": "public int StartContentDefiniteLength()", "class_method_signature": "AsnOutputStream.StartContentDefiniteLength()", "testcase": false, "constructor": false}, {"identifier": "StartContentIndefiniteLength", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int StartContentIndefiniteLength()", "full_signature": "public int StartContentIndefiniteLength()", "class_method_signature": "AsnOutputStream.StartContentIndefiniteLength()", "testcase": false, "constructor": false}, {"identifier": "FinalizeContent", "parameters": "( int lenPos )", "modifiers": "public", "return": "void", "signature": "void FinalizeContent( int lenPos )", "full_signature": "public void FinalizeContent( int lenPos )", "class_method_signature": "AsnOutputStream.FinalizeContent( int lenPos )", "testcase": false, "constructor": false}, {"identifier": "writeSequence", "parameters": "(byte[] data)", "modifiers": "public", "return": "void", "signature": "void writeSequence(byte[] data)", "full_signature": "public void writeSequence(byte[] data)", "class_method_signature": "AsnOutputStream.writeSequence(byte[] data)", "testcase": false, "constructor": false}, {"identifier": "writeSequence", "parameters": "(int tagClass, int tag, byte[] data)", "modifiers": "public", "return": "void", "signature": "void writeSequence(int tagClass, int tag, byte[] data)", "full_signature": "public void writeSequence(int tagClass, int tag, byte[] data)", "class_method_signature": "AsnOutputStream.writeSequence(int tagClass, int tag, byte[] data)", "testcase": false, "constructor": false}, {"identifier": "writeSequenceData", "parameters": "(byte[] data)", "modifiers": "public", "return": "int", "signature": "int writeSequenceData(byte[] data)", "full_signature": "public int writeSequenceData(byte[] data)", "class_method_signature": "AsnOutputStream.writeSequenceData(byte[] data)", "testcase": false, "constructor": false}, {"identifier": "writeBoolean", "parameters": "(boolean value)", "modifiers": "public", "return": "void", "signature": "void writeBoolean(boolean value)", "full_signature": "public void writeBoolean(boolean value)", "class_method_signature": "AsnOutputStream.writeBoolean(boolean value)", "testcase": false, "constructor": false}, {"identifier": "writeBoolean", "parameters": "(int tagClass, int tag, boolean value)", "modifiers": "public", "return": "void", "signature": "void writeBoolean(int tagClass, int tag, boolean value)", "full_signature": "public void writeBoolean(int tagClass, int tag, boolean value)", "class_method_signature": "AsnOutputStream.writeBoolean(int tagClass, int tag, boolean value)", "testcase": false, "constructor": false}, {"identifier": "writeBooleanData", "parameters": "(boolean value)", "modifiers": "public", "return": "int", "signature": "int writeBooleanData(boolean value)", "full_signature": "public int writeBooleanData(boolean value)", "class_method_signature": "AsnOutputStream.writeBooleanData(boolean value)", "testcase": false, "constructor": false}, {"identifier": "writeInteger", "parameters": "(long value)", "modifiers": "public", "return": "void", "signature": "void writeInteger(long value)", "full_signature": "public void writeInteger(long value)", "class_method_signature": "AsnOutputStream.writeInteger(long value)", "testcase": false, "constructor": false}, {"identifier": "writeInteger", "parameters": "(int tagClass, int tag, long v)", "modifiers": "public", "return": "void", "signature": "void writeInteger(int tagClass, int tag, long v)", "full_signature": "public void writeInteger(int tagClass, int tag, long v)", "class_method_signature": "AsnOutputStream.writeInteger(int tagClass, int tag, long v)", "testcase": false, "constructor": false}, {"identifier": "writeIntegerData", "parameters": "(long v)", "modifiers": "public", "return": "int", "signature": "int writeIntegerData(long v)", "full_signature": "public int writeIntegerData(long v)", "class_method_signature": "AsnOutputStream.writeIntegerData(long v)", "testcase": false, "constructor": false}, {"identifier": "writeReal", "parameters": "(String d, int NR)", "modifiers": "public", "return": "void", "signature": "void writeReal(String d, int NR)", "full_signature": "public void writeReal(String d, int NR)", "class_method_signature": "AsnOutputStream.writeReal(String d, int NR)", "testcase": false, "constructor": false}, {"identifier": "writeReal", "parameters": "(double d)", "modifiers": "public", "return": "void", "signature": "void writeReal(double d)", "full_signature": "public void writeReal(double d)", "class_method_signature": "AsnOutputStream.writeReal(double d)", "testcase": false, "constructor": false}, {"identifier": "writeReal", "parameters": "(int tagClass, int tag, String d, int NR)", "modifiers": "public", "return": "void", "signature": "void writeReal(int tagClass, int tag, String d, int NR)", "full_signature": "public void writeReal(int tagClass, int tag, String d, int NR)", "class_method_signature": "AsnOutputStream.writeReal(int tagClass, int tag, String d, int NR)", "testcase": false, "constructor": false}, {"identifier": "writeReal", "parameters": "(int tagClass, int tag, double d)", "modifiers": "public", "return": "void", "signature": "void writeReal(int tagClass, int tag, double d)", "full_signature": "public void writeReal(int tagClass, int tag, double d)", "class_method_signature": "AsnOutputStream.writeReal(int tagClass, int tag, double d)", "testcase": false, "constructor": false}, {"identifier": "writeRealData", "parameters": "(String d, int NR)", "modifiers": "public", "return": "int", "signature": "int writeRealData(String d, int NR)", "full_signature": "public int writeRealData(String d, int NR)", "class_method_signature": "AsnOutputStream.writeRealData(String d, int NR)", "testcase": false, "constructor": false}, {"identifier": "writeRealData", "parameters": "(double d)", "modifiers": "public", "return": "int", "signature": "int writeRealData(double d)", "full_signature": "public int writeRealData(double d)", "class_method_signature": "AsnOutputStream.writeRealData(double d)", "testcase": false, "constructor": false}, {"identifier": "writeBitString", "parameters": "(BitSetStrictLength bitString)", "modifiers": "public", "return": "void", "signature": "void writeBitString(BitSetStrictLength bitString)", "full_signature": "public void writeBitString(BitSetStrictLength bitString)", "class_method_signature": "AsnOutputStream.writeBitString(BitSetStrictLength bitString)", "testcase": false, "constructor": false}, {"identifier": "writeBitString", "parameters": "(int tagClass, int tag, BitSetStrictLength bitString)", "modifiers": "public", "return": "void", "signature": "void writeBitString(int tagClass, int tag, BitSetStrictLength bitString)", "full_signature": "public void writeBitString(int tagClass, int tag, BitSetStrictLength bitString)", "class_method_signature": "AsnOutputStream.writeBitString(int tagClass, int tag, BitSetStrictLength bitString)", "testcase": false, "constructor": false}, {"identifier": "writeBitStringData", "parameters": "(BitSetStrictLength bitString)", "modifiers": "public", "return": "int", "signature": "int writeBitStringData(BitSetStrictLength bitString)", "full_signature": "public int writeBitStringData(BitSetStrictLength bitString)", "class_method_signature": "AsnOutputStream.writeBitStringData(BitSetStrictLength bitString)", "testcase": false, "constructor": false}, {"identifier": "_getByte", "parameters": "(int startIndex, BitSetStrictLength set)", "modifiers": "private static", "return": "byte", "signature": "byte _getByte(int startIndex, BitSetStrictLength set)", "full_signature": "private static byte _getByte(int startIndex, BitSetStrictLength set)", "class_method_signature": "AsnOutputStream._getByte(int startIndex, BitSetStrictLength set)", "testcase": false, "constructor": false}, {"identifier": "writeOctetString", "parameters": "(byte[] value)", "modifiers": "public", "return": "void", "signature": "void writeOctetString(byte[] value)", "full_signature": "public void writeOctetString(byte[] value)", "class_method_signature": "AsnOutputStream.writeOctetString(byte[] value)", "testcase": false, "constructor": false}, {"identifier": "writeOctetString", "parameters": "(int tagClass, int tag, byte[] value)", "modifiers": "public", "return": "void", "signature": "void writeOctetString(int tagClass, int tag, byte[] value)", "full_signature": "public void writeOctetString(int tagClass, int tag, byte[] value)", "class_method_signature": "AsnOutputStream.writeOctetString(int tagClass, int tag, byte[] value)", "testcase": false, "constructor": false}, {"identifier": "writeOctetStringData", "parameters": "(byte[] value)", "modifiers": "public", "return": "int", "signature": "int writeOctetStringData(byte[] value)", "full_signature": "public int writeOctetStringData(byte[] value)", "class_method_signature": "AsnOutputStream.writeOctetStringData(byte[] value)", "testcase": false, "constructor": false}, {"identifier": "writeStringOctet", "parameters": "(int tagClass, int tag, InputStream io)", "modifiers": "@Deprecated public", "return": "void", "signature": "void writeStringOctet(int tagClass, int tag, InputStream io)", "full_signature": "@Deprecated public void writeStringOctet(int tagClass, int tag, InputStream io)", "class_method_signature": "AsnOutputStream.writeStringOctet(int tagClass, int tag, InputStream io)", "testcase": false, "constructor": false}, {"identifier": "writeStringOctet", "parameters": "(InputStream io)", "modifiers": "@Deprecated public", "return": "void", "signature": "void writeStringOctet(InputStream io)", "full_signature": "@Deprecated public void writeStringOctet(InputStream io)", "class_method_signature": "AsnOutputStream.writeStringOctet(InputStream io)", "testcase": false, "constructor": false}, {"identifier": "writeStringOctetData", "parameters": "(InputStream io)", "modifiers": "@Deprecated public", "return": "void", "signature": "void writeStringOctetData(InputStream io)", "full_signature": "@Deprecated public void writeStringOctetData(InputStream io)", "class_method_signature": "AsnOutputStream.writeStringOctetData(InputStream io)", "testcase": false, "constructor": false}, {"identifier": "writeNull", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void writeNull()", "full_signature": "public void writeNull()", "class_method_signature": "AsnOutputStream.writeNull()", "testcase": false, "constructor": false}, {"identifier": "writeNull", "parameters": "(int tagClass, int tag)", "modifiers": "public", "return": "void", "signature": "void writeNull(int tagClass, int tag)", "full_signature": "public void writeNull(int tagClass, int tag)", "class_method_signature": "AsnOutputStream.writeNull(int tagClass, int tag)", "testcase": false, "constructor": false}, {"identifier": "writeNULLData", "parameters": "()", "modifiers": "@Deprecated public", "return": "void", "signature": "void writeNULLData()", "full_signature": "@Deprecated public void writeNULLData()", "class_method_signature": "AsnOutputStream.writeNULLData()", "testcase": false, "constructor": false}, {"identifier": "writeNullData", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int writeNullData()", "full_signature": "public int writeNullData()", "class_method_signature": "AsnOutputStream.writeNullData()", "testcase": false, "constructor": false}, {"identifier": "writeObjectIdentifier", "parameters": "(long[] oid)", "modifiers": "public", "return": "void", "signature": "void writeObjectIdentifier(long[] oid)", "full_signature": "public void writeObjectIdentifier(long[] oid)", "class_method_signature": "AsnOutputStream.writeObjectIdentifier(long[] oid)", "testcase": false, "constructor": false}, {"identifier": "writeObjectIdentifier", "parameters": "(int tagClass, int tag, long[] oid)", "modifiers": "public", "return": "void", "signature": "void writeObjectIdentifier(int tagClass, int tag, long[] oid)", "full_signature": "public void writeObjectIdentifier(int tagClass, int tag, long[] oid)", "class_method_signature": "AsnOutputStream.writeObjectIdentifier(int tagClass, int tag, long[] oid)", "testcase": false, "constructor": false}, {"identifier": "writeObjectIdentifierData", "parameters": "(long[] oidLeafs)", "modifiers": "public", "return": "int", "signature": "int writeObjectIdentifierData(long[] oidLeafs)", "full_signature": "public int writeObjectIdentifierData(long[] oidLeafs)", "class_method_signature": "AsnOutputStream.writeObjectIdentifierData(long[] oidLeafs)", "testcase": false, "constructor": false}, {"identifier": "getOIDLeafLength", "parameters": "(long leaf)", "modifiers": "private", "return": "int", "signature": "int getOIDLeafLength(long leaf)", "full_signature": "private int getOIDLeafLength(long leaf)", "class_method_signature": "AsnOutputStream.getOIDLeafLength(long leaf)", "testcase": false, "constructor": false}, {"identifier": "writeStringUTF8", "parameters": "(String data)", "modifiers": "public", "return": "void", "signature": "void writeStringUTF8(String data)", "full_signature": "public void writeStringUTF8(String data)", "class_method_signature": "AsnOutputStream.writeStringUTF8(String data)", "testcase": false, "constructor": false}, {"identifier": "writeStringUTF8", "parameters": "(int tagClass, int tag, String data)", "modifiers": "public", "return": "void", "signature": "void writeStringUTF8(int tagClass, int tag, String data)", "full_signature": "public void writeStringUTF8(int tagClass, int tag, String data)", "class_method_signature": "AsnOutputStream.writeStringUTF8(int tagClass, int tag, String data)", "testcase": false, "constructor": false}, {"identifier": "writeStringUTF8Data", "parameters": "(String data)", "modifiers": "public", "return": "void", "signature": "void writeStringUTF8Data(String data)", "full_signature": "public void writeStringUTF8Data(String data)", "class_method_signature": "AsnOutputStream.writeStringUTF8Data(String data)", "testcase": false, "constructor": false}, {"identifier": "writeStringIA5", "parameters": "(String data)", "modifiers": "public", "return": "void", "signature": "void writeStringIA5(String data)", "full_signature": "public void writeStringIA5(String data)", "class_method_signature": "AsnOutputStream.writeStringIA5(String data)", "testcase": false, "constructor": false}, {"identifier": "writeStringIA5", "parameters": "(int tagClass, int tag, String data)", "modifiers": "public", "return": "void", "signature": "void writeStringIA5(int tagClass, int tag, String data)", "full_signature": "public void writeStringIA5(int tagClass, int tag, String data)", "class_method_signature": "AsnOutputStream.writeStringIA5(int tagClass, int tag, String data)", "testcase": false, "constructor": false}, {"identifier": "writeStringIA5Data", "parameters": "(String data)", "modifiers": "public", "return": "void", "signature": "void writeStringIA5Data(String data)", "full_signature": "public void writeStringIA5Data(String data)", "class_method_signature": "AsnOutputStream.writeStringIA5Data(String data)", "testcase": false, "constructor": false}, {"identifier": "writeStringGraphic", "parameters": "(String data)", "modifiers": "public", "return": "void", "signature": "void writeStringGraphic(String data)", "full_signature": "public void writeStringGraphic(String data)", "class_method_signature": "AsnOutputStream.writeStringGraphic(String data)", "testcase": false, "constructor": false}, {"identifier": "writeStringGraphic", "parameters": "(int tagClass, int tag, String data)", "modifiers": "public", "return": "void", "signature": "void writeStringGraphic(int tagClass, int tag, String data)", "full_signature": "public void writeStringGraphic(int tagClass, int tag, String data)", "class_method_signature": "AsnOutputStream.writeStringGraphic(int tagClass, int tag, String data)", "testcase": false, "constructor": false}, {"identifier": "writeStringGraphicData", "parameters": "(String data)", "modifiers": "public", "return": "void", "signature": "void writeStringGraphicData(String data)", "full_signature": "public void writeStringGraphicData(String data)", "class_method_signature": "AsnOutputStream.writeStringGraphicData(String data)", "testcase": false, "constructor": false}, {"identifier": "writeStringBinary", "parameters": "(BitSet bitString)", "modifiers": "@Deprecated public", "return": "void", "signature": "void writeStringBinary(BitSet bitString)", "full_signature": "@Deprecated public void writeStringBinary(BitSet bitString)", "class_method_signature": "AsnOutputStream.writeStringBinary(BitSet bitString)", "testcase": false, "constructor": false}, {"identifier": "writeStringBinary", "parameters": "(int tagClass, int tag, BitSet bitString)", "modifiers": "@Deprecated public", "return": "void", "signature": "void writeStringBinary(int tagClass, int tag, BitSet bitString)", "full_signature": "@Deprecated public void writeStringBinary(int tagClass, int tag, BitSet bitString)", "class_method_signature": "AsnOutputStream.writeStringBinary(int tagClass, int tag, BitSet bitString)", "testcase": false, "constructor": false}, {"identifier": "writeNULL", "parameters": "()", "modifiers": "@Deprecated public", "return": "void", "signature": "void writeNULL()", "full_signature": "@Deprecated public void writeNULL()", "class_method_signature": "AsnOutputStream.writeNULL()", "testcase": false, "constructor": false}, {"identifier": "writeStringBinaryData", "parameters": "(BitSet bitString)", "modifiers": "@Deprecated public", "return": "void", "signature": "void writeStringBinaryData(BitSet bitString)", "full_signature": "@Deprecated public void writeStringBinaryData(BitSet bitString)", "class_method_signature": "AsnOutputStream.writeStringBinaryData(BitSet bitString)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "AsnOutputStream.toString()", "testcase": false, "constructor": false}, {"identifier": "arrayToString", "parameters": "(byte[] bf)", "modifiers": "protected static", "return": "String", "signature": "String arrayToString(byte[] bf)", "full_signature": "protected static String arrayToString(byte[] bf)", "class_method_signature": "AsnOutputStream.arrayToString(byte[] bf)", "testcase": false, "constructor": false}], "file": "asn-impl/src/main/java/org/mobicents/protocols/asn/AsnOutputStream.java"}, "focal_method": {"identifier": "writeReal", "parameters": "(String d, int NR)", "modifiers": "public", "return": "void", "body": "public void writeReal(String d, int NR) throws IOException, AsnException {\n\n\t\tthis.writeReal(Tag.CLASS_UNIVERSAL, Tag.REAL, d, NR);\n\t}", "signature": "void writeReal(String d, int NR)", "full_signature": "public void writeReal(String d, int NR)", "class_method_signature": "AsnOutputStream.writeReal(String d, int NR)", "testcase": false, "constructor": false, "invocations": ["writeReal"]}, "repository": {"repo_id": 5455452, "url": "https://github.com/RestComm/jasn", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 5, "size": 483, "license": "licensed"}}