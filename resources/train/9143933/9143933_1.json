{"test_class": {"identifier": "HashTableHipsterDirectedGraphTest", "superclass": "extends HashTableHipsterGraphTest", "interfaces": "", "fields": [{"original_string": "private HashTableHipsterDirectedGraph<String, Double> directedGraph;", "modifier": "private", "type": "HashTableHipsterDirectedGraph<String, Double>", "declarator": "directedGraph", "var_name": "directedGraph"}], "file": "hipster-extensions/src/test/java/es/usc/citius/hipster/extensions/graph/HashTableHipsterDirectedGraphTest.java"}, "test_case": {"identifier": "testOutgoingEdgesOf", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOutgoingEdgesOf() throws Exception {\n        Set<DirectedEdge<String, Double>> expected = new HashSet<DirectedEdge<String, Double>>();\n        expected.add(new DirectedEdge<String, Double>(\"B\", \"C\", 5d));\n        expected.add(new DirectedEdge<String, Double>(\"B\", \"D\", 10d));\n        assertEquals(expected, Sets.newHashSet(directedGraph.outgoingEdgesOf(\"B\")));\n    }", "signature": "void testOutgoingEdgesOf()", "full_signature": "@Test public void testOutgoingEdgesOf()", "class_method_signature": "HashTableHipsterDirectedGraphTest.testOutgoingEdgesOf()", "testcase": true, "constructor": false, "invocations": ["add", "add", "assertEquals", "newHashSet", "outgoingEdgesOf"]}, "focal_class": {"identifier": "HashTableHipsterDirectedGraph", "superclass": "extends HashTableHipsterGraph<V,E>", "interfaces": "implements HipsterDirectedGraph<V,E>", "fields": [], "methods": [{"identifier": "connect", "parameters": "(V v1, V v2, E value)", "modifiers": "@Override public", "return": "GraphEdge<V,E>", "signature": "GraphEdge<V,E> connect(V v1, V v2, E value)", "full_signature": "@Override public GraphEdge<V,E> connect(V v1, V v2, E value)", "class_method_signature": "HashTableHipsterDirectedGraph.connect(V v1, V v2, E value)", "testcase": false, "constructor": false}, {"identifier": "outgoingEdgesOf", "parameters": "(V vertex)", "modifiers": "@Override public", "return": "Iterable<GraphEdge<V, E>>", "signature": "Iterable<GraphEdge<V, E>> outgoingEdgesOf(V vertex)", "full_signature": "@Override public Iterable<GraphEdge<V, E>> outgoingEdgesOf(V vertex)", "class_method_signature": "HashTableHipsterDirectedGraph.outgoingEdgesOf(V vertex)", "testcase": false, "constructor": false}, {"identifier": "incomingEdgesOf", "parameters": "(V vertex)", "modifiers": "@Override public", "return": "Iterable<GraphEdge<V, E>>", "signature": "Iterable<GraphEdge<V, E>> incomingEdgesOf(V vertex)", "full_signature": "@Override public Iterable<GraphEdge<V, E>> incomingEdgesOf(V vertex)", "class_method_signature": "HashTableHipsterDirectedGraph.incomingEdgesOf(V vertex)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "()", "modifiers": "public static", "return": "HashTableHipsterDirectedGraph<V, E>", "signature": "HashTableHipsterDirectedGraph<V, E> create()", "full_signature": "public static HashTableHipsterDirectedGraph<V, E> create()", "class_method_signature": "HashTableHipsterDirectedGraph.create()", "testcase": false, "constructor": false}], "file": "hipster-extensions/src/main/java/es/usc/citius/hipster/extensions/graph/HashTableHipsterDirectedGraph.java"}, "focal_method": {"identifier": "outgoingEdgesOf", "parameters": "(V vertex)", "modifiers": "@Override public", "return": "Iterable<GraphEdge<V, E>>", "body": "@Override\n    public Iterable<GraphEdge<V, E>> outgoingEdgesOf(V vertex) {\n        return graphTable.row(vertex).values();\n    }", "signature": "Iterable<GraphEdge<V, E>> outgoingEdgesOf(V vertex)", "full_signature": "@Override public Iterable<GraphEdge<V, E>> outgoingEdgesOf(V vertex)", "class_method_signature": "HashTableHipsterDirectedGraph.outgoingEdgesOf(V vertex)", "testcase": false, "constructor": false, "invocations": ["values", "row"]}, "repository": {"repo_id": 9143933, "url": "https://github.com/citiususc/hipster", "language": "Java", "is_fork": false, "fork_count": 87, "stargazer_count": 292, "size": 5736, "license": "licensed"}}