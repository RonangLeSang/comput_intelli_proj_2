{"test_class": {"identifier": "AttributeServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AttributeService service;", "modifier": "private", "type": "AttributeService", "declarator": "service", "var_name": "service"}], "file": "jimfs/src/test/java/com/google/common/jimfs/AttributeServiceTest.java"}, "test_case": {"identifier": "testSupportedFileAttributeViews", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSupportedFileAttributeViews() {\n    assertThat(service.supportedFileAttributeViews())\n        .isEqualTo(ImmutableSet.of(\"basic\", \"test\", \"owner\"));\n  }", "signature": "void testSupportedFileAttributeViews()", "full_signature": "@Test public void testSupportedFileAttributeViews()", "class_method_signature": "AttributeServiceTest.testSupportedFileAttributeViews()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "supportedFileAttributeViews", "of"]}, "focal_class": {"identifier": "AttributeService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ALL_ATTRIBUTES = \"*\";", "modifier": "private static final", "type": "String", "declarator": "ALL_ATTRIBUTES = \"*\"", "var_name": "ALL_ATTRIBUTES"}, {"original_string": "private final ImmutableMap<String, AttributeProvider> providersByName;", "modifier": "private final", "type": "ImmutableMap<String, AttributeProvider>", "declarator": "providersByName", "var_name": "providersByName"}, {"original_string": "private final ImmutableMap<Class<?>, AttributeProvider> providersByViewType;", "modifier": "private final", "type": "ImmutableMap<Class<?>, AttributeProvider>", "declarator": "providersByViewType", "var_name": "providersByViewType"}, {"original_string": "private final ImmutableMap<Class<?>, AttributeProvider> providersByAttributesType;", "modifier": "private final", "type": "ImmutableMap<Class<?>, AttributeProvider>", "declarator": "providersByAttributesType", "var_name": "providersByAttributesType"}, {"original_string": "private final ImmutableList<FileAttribute<?>> defaultValues;", "modifier": "private final", "type": "ImmutableList<FileAttribute<?>>", "declarator": "defaultValues", "var_name": "defaultValues"}, {"original_string": "private static final Splitter ATTRIBUTE_SPLITTER = Splitter.on(',');", "modifier": "private static final", "type": "Splitter", "declarator": "ATTRIBUTE_SPLITTER = Splitter.on(',')", "var_name": "ATTRIBUTE_SPLITTER"}], "methods": [{"identifier": "AttributeService", "parameters": "(Configuration configuration)", "modifiers": "public", "return": "", "signature": " AttributeService(Configuration configuration)", "full_signature": "public  AttributeService(Configuration configuration)", "class_method_signature": "AttributeService.AttributeService(Configuration configuration)", "testcase": false, "constructor": true}, {"identifier": "AttributeService", "parameters": "(\n      Iterable<? extends AttributeProvider> providers, Map<String, ?> userProvidedDefaults)", "modifiers": "public", "return": "", "signature": " AttributeService(\n      Iterable<? extends AttributeProvider> providers, Map<String, ?> userProvidedDefaults)", "full_signature": "public  AttributeService(\n      Iterable<? extends AttributeProvider> providers, Map<String, ?> userProvidedDefaults)", "class_method_signature": "AttributeService.AttributeService(\n      Iterable<? extends AttributeProvider> providers, Map<String, ?> userProvidedDefaults)", "testcase": false, "constructor": true}, {"identifier": "getProviders", "parameters": "(Configuration configuration)", "modifiers": "private static", "return": "Iterable<AttributeProvider>", "signature": "Iterable<AttributeProvider> getProviders(Configuration configuration)", "full_signature": "private static Iterable<AttributeProvider> getProviders(Configuration configuration)", "class_method_signature": "AttributeService.getProviders(Configuration configuration)", "testcase": false, "constructor": false}, {"identifier": "addMissingProviders", "parameters": "(Map<String, AttributeProvider> providers)", "modifiers": "private static", "return": "void", "signature": "void addMissingProviders(Map<String, AttributeProvider> providers)", "full_signature": "private static void addMissingProviders(Map<String, AttributeProvider> providers)", "class_method_signature": "AttributeService.addMissingProviders(Map<String, AttributeProvider> providers)", "testcase": false, "constructor": false}, {"identifier": "addStandardProvider", "parameters": "(Map<String, AttributeProvider> result, String view)", "modifiers": "private static", "return": "void", "signature": "void addStandardProvider(Map<String, AttributeProvider> result, String view)", "full_signature": "private static void addStandardProvider(Map<String, AttributeProvider> result, String view)", "class_method_signature": "AttributeService.addStandardProvider(Map<String, AttributeProvider> result, String view)", "testcase": false, "constructor": false}, {"identifier": "supportedFileAttributeViews", "parameters": "()", "modifiers": "public", "return": "ImmutableSet<String>", "signature": "ImmutableSet<String> supportedFileAttributeViews()", "full_signature": "public ImmutableSet<String> supportedFileAttributeViews()", "class_method_signature": "AttributeService.supportedFileAttributeViews()", "testcase": false, "constructor": false}, {"identifier": "supportsFileAttributeView", "parameters": "(Class<? extends FileAttributeView> type)", "modifiers": "public", "return": "boolean", "signature": "boolean supportsFileAttributeView(Class<? extends FileAttributeView> type)", "full_signature": "public boolean supportsFileAttributeView(Class<? extends FileAttributeView> type)", "class_method_signature": "AttributeService.supportsFileAttributeView(Class<? extends FileAttributeView> type)", "testcase": false, "constructor": false}, {"identifier": "setInitialAttributes", "parameters": "(File file, FileAttribute<?>... attrs)", "modifiers": "public", "return": "void", "signature": "void setInitialAttributes(File file, FileAttribute<?>... attrs)", "full_signature": "public void setInitialAttributes(File file, FileAttribute<?>... attrs)", "class_method_signature": "AttributeService.setInitialAttributes(File file, FileAttribute<?>... attrs)", "testcase": false, "constructor": false}, {"identifier": "copyAttributes", "parameters": "(File file, File copy, AttributeCopyOption copyOption)", "modifiers": "public", "return": "void", "signature": "void copyAttributes(File file, File copy, AttributeCopyOption copyOption)", "full_signature": "public void copyAttributes(File file, File copy, AttributeCopyOption copyOption)", "class_method_signature": "AttributeService.copyAttributes(File file, File copy, AttributeCopyOption copyOption)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(File file, String attribute)", "modifiers": "public", "return": "Object", "signature": "Object getAttribute(File file, String attribute)", "full_signature": "public Object getAttribute(File file, String attribute)", "class_method_signature": "AttributeService.getAttribute(File file, String attribute)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(File file, String view, String attribute)", "modifiers": "public", "return": "Object", "signature": "Object getAttribute(File file, String view, String attribute)", "full_signature": "public Object getAttribute(File file, String view, String attribute)", "class_method_signature": "AttributeService.getAttribute(File file, String view, String attribute)", "testcase": false, "constructor": false}, {"identifier": "getAttributeInternal", "parameters": "(File file, String view, String attribute)", "modifiers": "@NullableDecl private", "return": "Object", "signature": "Object getAttributeInternal(File file, String view, String attribute)", "full_signature": "@NullableDecl private Object getAttributeInternal(File file, String view, String attribute)", "class_method_signature": "AttributeService.getAttributeInternal(File file, String view, String attribute)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(File file, String attribute, Object value, boolean create)", "modifiers": "public", "return": "void", "signature": "void setAttribute(File file, String attribute, Object value, boolean create)", "full_signature": "public void setAttribute(File file, String attribute, Object value, boolean create)", "class_method_signature": "AttributeService.setAttribute(File file, String attribute, Object value, boolean create)", "testcase": false, "constructor": false}, {"identifier": "setAttributeInternal", "parameters": "(\n      File file, String view, String attribute, Object value, boolean create)", "modifiers": "private", "return": "void", "signature": "void setAttributeInternal(\n      File file, String view, String attribute, Object value, boolean create)", "full_signature": "private void setAttributeInternal(\n      File file, String view, String attribute, Object value, boolean create)", "class_method_signature": "AttributeService.setAttributeInternal(\n      File file, String view, String attribute, Object value, boolean create)", "testcase": false, "constructor": false}, {"identifier": "getFileAttributeView", "parameters": "(FileLookup lookup, Class<V> type)", "modifiers": "@SuppressWarnings(\"unchecked\") @NullableDecl public", "return": "V", "signature": "V getFileAttributeView(FileLookup lookup, Class<V> type)", "full_signature": "@SuppressWarnings(\"unchecked\") @NullableDecl public V getFileAttributeView(FileLookup lookup, Class<V> type)", "class_method_signature": "AttributeService.getFileAttributeView(FileLookup lookup, Class<V> type)", "testcase": false, "constructor": false}, {"identifier": "getFileAttributeView", "parameters": "(\n      FileLookup lookup,\n      Class<? extends FileAttributeView> viewType,\n      Map<String, FileAttributeView> inheritedViews)", "modifiers": "private", "return": "FileAttributeView", "signature": "FileAttributeView getFileAttributeView(\n      FileLookup lookup,\n      Class<? extends FileAttributeView> viewType,\n      Map<String, FileAttributeView> inheritedViews)", "full_signature": "private FileAttributeView getFileAttributeView(\n      FileLookup lookup,\n      Class<? extends FileAttributeView> viewType,\n      Map<String, FileAttributeView> inheritedViews)", "class_method_signature": "AttributeService.getFileAttributeView(\n      FileLookup lookup,\n      Class<? extends FileAttributeView> viewType,\n      Map<String, FileAttributeView> inheritedViews)", "testcase": false, "constructor": false}, {"identifier": "createInheritedViews", "parameters": "(\n      FileLookup lookup, AttributeProvider provider)", "modifiers": "private", "return": "ImmutableMap<String, FileAttributeView>", "signature": "ImmutableMap<String, FileAttributeView> createInheritedViews(\n      FileLookup lookup, AttributeProvider provider)", "full_signature": "private ImmutableMap<String, FileAttributeView> createInheritedViews(\n      FileLookup lookup, AttributeProvider provider)", "class_method_signature": "AttributeService.createInheritedViews(\n      FileLookup lookup, AttributeProvider provider)", "testcase": false, "constructor": false}, {"identifier": "createInheritedViews", "parameters": "(\n      FileLookup lookup,\n      AttributeProvider provider,\n      Map<String, FileAttributeView> inheritedViews)", "modifiers": "private", "return": "void", "signature": "void createInheritedViews(\n      FileLookup lookup,\n      AttributeProvider provider,\n      Map<String, FileAttributeView> inheritedViews)", "full_signature": "private void createInheritedViews(\n      FileLookup lookup,\n      AttributeProvider provider,\n      Map<String, FileAttributeView> inheritedViews)", "class_method_signature": "AttributeService.createInheritedViews(\n      FileLookup lookup,\n      AttributeProvider provider,\n      Map<String, FileAttributeView> inheritedViews)", "testcase": false, "constructor": false}, {"identifier": "readAttributes", "parameters": "(File file, String attributes)", "modifiers": "public", "return": "ImmutableMap<String, Object>", "signature": "ImmutableMap<String, Object> readAttributes(File file, String attributes)", "full_signature": "public ImmutableMap<String, Object> readAttributes(File file, String attributes)", "class_method_signature": "AttributeService.readAttributes(File file, String attributes)", "testcase": false, "constructor": false}, {"identifier": "readAttributes", "parameters": "(File file, Class<A> type)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "A", "signature": "A readAttributes(File file, Class<A> type)", "full_signature": "@SuppressWarnings(\"unchecked\") public A readAttributes(File file, Class<A> type)", "class_method_signature": "AttributeService.readAttributes(File file, Class<A> type)", "testcase": false, "constructor": false}, {"identifier": "readAll", "parameters": "(File file, AttributeProvider provider, Map<String, Object> map)", "modifiers": "private static", "return": "void", "signature": "void readAll(File file, AttributeProvider provider, Map<String, Object> map)", "full_signature": "private static void readAll(File file, AttributeProvider provider, Map<String, Object> map)", "class_method_signature": "AttributeService.readAll(File file, AttributeProvider provider, Map<String, Object> map)", "testcase": false, "constructor": false}, {"identifier": "getViewName", "parameters": "(String attribute)", "modifiers": "private static", "return": "String", "signature": "String getViewName(String attribute)", "full_signature": "private static String getViewName(String attribute)", "class_method_signature": "AttributeService.getViewName(String attribute)", "testcase": false, "constructor": false}, {"identifier": "getAttributeNames", "parameters": "(String attributes)", "modifiers": "private static", "return": "ImmutableList<String>", "signature": "ImmutableList<String> getAttributeNames(String attributes)", "full_signature": "private static ImmutableList<String> getAttributeNames(String attributes)", "class_method_signature": "AttributeService.getAttributeNames(String attributes)", "testcase": false, "constructor": false}, {"identifier": "getSingleAttribute", "parameters": "(String attribute)", "modifiers": "private static", "return": "String", "signature": "String getSingleAttribute(String attribute)", "full_signature": "private static String getSingleAttribute(String attribute)", "class_method_signature": "AttributeService.getSingleAttribute(String attribute)", "testcase": false, "constructor": false}], "file": "jimfs/src/main/java/com/google/common/jimfs/AttributeService.java"}, "focal_method": {"identifier": "supportedFileAttributeViews", "parameters": "()", "modifiers": "public", "return": "ImmutableSet<String>", "body": "public ImmutableSet<String> supportedFileAttributeViews() {\n    return providersByName.keySet();\n  }", "signature": "ImmutableSet<String> supportedFileAttributeViews()", "full_signature": "public ImmutableSet<String> supportedFileAttributeViews()", "class_method_signature": "AttributeService.supportedFileAttributeViews()", "testcase": false, "constructor": false, "invocations": ["keySet"]}, "repository": {"repo_id": 13745124, "url": "https://github.com/google/jimfs", "stars": 1731, "created": "10/21/2013 2:39:27 PM +00:00", "updates": "2020-01-27T18:46:07+00:00", "fork": "False", "license": "licensed"}}