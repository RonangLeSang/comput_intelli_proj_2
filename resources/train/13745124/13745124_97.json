{"test_class": {"identifier": "JimfsOutputStreamTest", "superclass": "", "interfaces": "", "fields": [], "file": "jimfs/src/test/java/com/google/common/jimfs/JimfsOutputStreamTest.java"}, "test_case": {"identifier": "testWrite_wholeArray_appendMode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testWrite_wholeArray_appendMode() throws IOException {\n    JimfsOutputStream out = newOutputStream(true);\n    addBytesToStore(out, 9, 8, 7);\n    out.write(new byte[] {1, 2, 3, 4});\n    assertStoreContains(out, 9, 8, 7, 1, 2, 3, 4);\n  }", "signature": "void testWrite_wholeArray_appendMode()", "full_signature": "@Test public void testWrite_wholeArray_appendMode()", "class_method_signature": "JimfsOutputStreamTest.testWrite_wholeArray_appendMode()", "testcase": true, "constructor": false, "invocations": ["newOutputStream", "addBytesToStore", "write", "assertStoreContains"]}, "focal_class": {"identifier": "JimfsOutputStream", "superclass": "extends OutputStream", "interfaces": "", "fields": [{"original_string": "@GuardedBy(\"this\")\n  @VisibleForTesting\n  RegularFile file;", "modifier": "@GuardedBy(\"this\")\n  @VisibleForTesting", "type": "RegularFile", "declarator": "file", "var_name": "file"}, {"original_string": "@GuardedBy(\"this\")\n  private long pos;", "modifier": "@GuardedBy(\"this\")\n  private", "type": "long", "declarator": "pos", "var_name": "pos"}, {"original_string": "private final boolean append;", "modifier": "private final", "type": "boolean", "declarator": "append", "var_name": "append"}, {"original_string": "private final FileSystemState fileSystemState;", "modifier": "private final", "type": "FileSystemState", "declarator": "fileSystemState", "var_name": "fileSystemState"}], "methods": [{"identifier": "JimfsOutputStream", "parameters": "(RegularFile file, boolean append, FileSystemState fileSystemState)", "modifiers": "", "return": "", "signature": " JimfsOutputStream(RegularFile file, boolean append, FileSystemState fileSystemState)", "full_signature": "  JimfsOutputStream(RegularFile file, boolean append, FileSystemState fileSystemState)", "class_method_signature": "JimfsOutputStream.JimfsOutputStream(RegularFile file, boolean append, FileSystemState fileSystemState)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(int b)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void write(int b)", "full_signature": "@Override public synchronized void write(int b)", "class_method_signature": "JimfsOutputStream.write(int b)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(byte[] b)", "modifiers": "@Override public", "return": "void", "signature": "void write(byte[] b)", "full_signature": "@Override public void write(byte[] b)", "class_method_signature": "JimfsOutputStream.write(byte[] b)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(byte[] b, int off, int len)", "modifiers": "@Override public", "return": "void", "signature": "void write(byte[] b, int off, int len)", "full_signature": "@Override public void write(byte[] b, int off, int len)", "class_method_signature": "JimfsOutputStream.write(byte[] b, int off, int len)", "testcase": false, "constructor": false}, {"identifier": "writeInternal", "parameters": "(byte[] b, int off, int len)", "modifiers": "private synchronized", "return": "void", "signature": "void writeInternal(byte[] b, int off, int len)", "full_signature": "private synchronized void writeInternal(byte[] b, int off, int len)", "class_method_signature": "JimfsOutputStream.writeInternal(byte[] b, int off, int len)", "testcase": false, "constructor": false}, {"identifier": "checkNotClosed", "parameters": "()", "modifiers": "@GuardedBy(\"this\") private", "return": "void", "signature": "void checkNotClosed()", "full_signature": "@GuardedBy(\"this\") private void checkNotClosed()", "class_method_signature": "JimfsOutputStream.checkNotClosed()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public synchronized", "return": "void", "signature": "void close()", "full_signature": "@Override public synchronized void close()", "class_method_signature": "JimfsOutputStream.close()", "testcase": false, "constructor": false}, {"identifier": "isOpen", "parameters": "()", "modifiers": "@GuardedBy(\"this\") private", "return": "boolean", "signature": "boolean isOpen()", "full_signature": "@GuardedBy(\"this\") private boolean isOpen()", "class_method_signature": "JimfsOutputStream.isOpen()", "testcase": false, "constructor": false}], "file": "jimfs/src/main/java/com/google/common/jimfs/JimfsOutputStream.java"}, "focal_method": {"identifier": "write", "parameters": "(int b)", "modifiers": "@Override public synchronized", "return": "void", "body": "@Override\n  public synchronized void write(int b) throws IOException {\n    checkNotClosed();\n\n    file.writeLock().lock();\n    try {\n      if (append) {\n        pos = file.sizeWithoutLocking();\n      }\n      file.write(pos++, (byte) b);\n\n      file.updateModifiedTime();\n    } finally {\n      file.writeLock().unlock();\n    }\n  }", "signature": "void write(int b)", "full_signature": "@Override public synchronized void write(int b)", "class_method_signature": "JimfsOutputStream.write(int b)", "testcase": false, "constructor": false, "invocations": ["checkNotClosed", "lock", "writeLock", "sizeWithoutLocking", "write", "updateModifiedTime", "unlock", "writeLock"]}, "repository": {"repo_id": 13745124, "url": "https://github.com/google/jimfs", "stars": 1731, "created": "10/21/2013 2:39:27 PM +00:00", "updates": "2020-01-27T18:46:07+00:00", "fork": "False", "license": "licensed"}}