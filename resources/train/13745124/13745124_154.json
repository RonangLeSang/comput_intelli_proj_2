{"test_class": {"identifier": "DirectoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Directory root;", "modifier": "private", "type": "Directory", "declarator": "root", "var_name": "root"}, {"original_string": "private Directory dir;", "modifier": "private", "type": "Directory", "declarator": "dir", "var_name": "dir"}, {"original_string": "private static final Directory A = Directory.create(0);", "modifier": "private static final", "type": "Directory", "declarator": "A = Directory.create(0)", "var_name": "A"}], "file": "jimfs/src/test/java/com/google/common/jimfs/DirectoryTest.java"}, "test_case": {"identifier": "testUnlink", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testUnlink() {\n    assertThat(root.get(Name.simple(\"foo\"))).isNotNull();\n\n    root.unlink(Name.simple(\"foo\"));\n\n    assertThat(root.get(Name.simple(\"foo\"))).isNull();\n  }", "signature": "void testUnlink()", "full_signature": "@Test public void testUnlink()", "class_method_signature": "DirectoryTest.testUnlink()", "testcase": true, "constructor": false, "invocations": ["isNotNull", "assertThat", "get", "simple", "unlink", "simple", "isNull", "assertThat", "get", "simple"]}, "focal_class": {"identifier": "Directory", "superclass": "extends File", "interfaces": "implements Iterable<DirectoryEntry>", "fields": [{"original_string": "private DirectoryEntry entryInParent;", "modifier": "private", "type": "DirectoryEntry", "declarator": "entryInParent", "var_name": "entryInParent"}, {"original_string": "private static final int INITIAL_CAPACITY = 16;", "modifier": "private static final", "type": "int", "declarator": "INITIAL_CAPACITY = 16", "var_name": "INITIAL_CAPACITY"}, {"original_string": "private static final int INITIAL_RESIZE_THRESHOLD = (int) (INITIAL_CAPACITY * 0.75);", "modifier": "private static final", "type": "int", "declarator": "INITIAL_RESIZE_THRESHOLD = (int) (INITIAL_CAPACITY * 0.75)", "var_name": "INITIAL_RESIZE_THRESHOLD"}, {"original_string": "private DirectoryEntry[] table = new DirectoryEntry[INITIAL_CAPACITY];", "modifier": "private", "type": "DirectoryEntry[]", "declarator": "table = new DirectoryEntry[INITIAL_CAPACITY]", "var_name": "table"}, {"original_string": "private int resizeThreshold = INITIAL_RESIZE_THRESHOLD;", "modifier": "private", "type": "int", "declarator": "resizeThreshold = INITIAL_RESIZE_THRESHOLD", "var_name": "resizeThreshold"}, {"original_string": "private int entryCount;", "modifier": "private", "type": "int", "declarator": "entryCount", "var_name": "entryCount"}], "methods": [{"identifier": "create", "parameters": "(int id)", "modifiers": "public static", "return": "Directory", "signature": "Directory create(int id)", "full_signature": "public static Directory create(int id)", "class_method_signature": "Directory.create(int id)", "testcase": false, "constructor": false}, {"identifier": "createRoot", "parameters": "(int id, Name name)", "modifiers": "public static", "return": "Directory", "signature": "Directory createRoot(int id, Name name)", "full_signature": "public static Directory createRoot(int id, Name name)", "class_method_signature": "Directory.createRoot(int id, Name name)", "testcase": false, "constructor": false}, {"identifier": "Directory", "parameters": "(int id)", "modifiers": "private", "return": "", "signature": " Directory(int id)", "full_signature": "private  Directory(int id)", "class_method_signature": "Directory.Directory(int id)", "testcase": false, "constructor": true}, {"identifier": "Directory", "parameters": "(int id, Name rootName)", "modifiers": "private", "return": "", "signature": " Directory(int id, Name rootName)", "full_signature": "private  Directory(int id, Name rootName)", "class_method_signature": "Directory.Directory(int id, Name rootName)", "testcase": false, "constructor": true}, {"identifier": "copyWithoutContent", "parameters": "(int id)", "modifiers": "@Override", "return": "Directory", "signature": "Directory copyWithoutContent(int id)", "full_signature": "@Override Directory copyWithoutContent(int id)", "class_method_signature": "Directory.copyWithoutContent(int id)", "testcase": false, "constructor": false}, {"identifier": "entryInParent", "parameters": "()", "modifiers": "public", "return": "DirectoryEntry", "signature": "DirectoryEntry entryInParent()", "full_signature": "public DirectoryEntry entryInParent()", "class_method_signature": "Directory.entryInParent()", "testcase": false, "constructor": false}, {"identifier": "parent", "parameters": "()", "modifiers": "public", "return": "Directory", "signature": "Directory parent()", "full_signature": "public Directory parent()", "class_method_signature": "Directory.parent()", "testcase": false, "constructor": false}, {"identifier": "linked", "parameters": "(DirectoryEntry entry)", "modifiers": "@Override", "return": "void", "signature": "void linked(DirectoryEntry entry)", "full_signature": "@Override void linked(DirectoryEntry entry)", "class_method_signature": "Directory.linked(DirectoryEntry entry)", "testcase": false, "constructor": false}, {"identifier": "unlinked", "parameters": "()", "modifiers": "@Override", "return": "void", "signature": "void unlinked()", "full_signature": "@Override void unlinked()", "class_method_signature": "Directory.unlinked()", "testcase": false, "constructor": false}, {"identifier": "entryCount", "parameters": "()", "modifiers": "@VisibleForTesting", "return": "int", "signature": "int entryCount()", "full_signature": "@VisibleForTesting int entryCount()", "class_method_signature": "Directory.entryCount()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "Directory.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Name name)", "modifiers": "@NullableDecl public", "return": "DirectoryEntry", "signature": "DirectoryEntry get(Name name)", "full_signature": "@NullableDecl public DirectoryEntry get(Name name)", "class_method_signature": "Directory.get(Name name)", "testcase": false, "constructor": false}, {"identifier": "link", "parameters": "(Name name, File file)", "modifiers": "public", "return": "void", "signature": "void link(Name name, File file)", "full_signature": "public void link(Name name, File file)", "class_method_signature": "Directory.link(Name name, File file)", "testcase": false, "constructor": false}, {"identifier": "unlink", "parameters": "(Name name)", "modifiers": "public", "return": "void", "signature": "void unlink(Name name)", "full_signature": "public void unlink(Name name)", "class_method_signature": "Directory.unlink(Name name)", "testcase": false, "constructor": false}, {"identifier": "snapshot", "parameters": "()", "modifiers": "public", "return": "ImmutableSortedSet<Name>", "signature": "ImmutableSortedSet<Name> snapshot()", "full_signature": "public ImmutableSortedSet<Name> snapshot()", "class_method_signature": "Directory.snapshot()", "testcase": false, "constructor": false}, {"identifier": "checkNotReserved", "parameters": "(Name name, String action)", "modifiers": "private static", "return": "Name", "signature": "Name checkNotReserved(Name name, String action)", "full_signature": "private static Name checkNotReserved(Name name, String action)", "class_method_signature": "Directory.checkNotReserved(Name name, String action)", "testcase": false, "constructor": false}, {"identifier": "isReserved", "parameters": "(Name name)", "modifiers": "private static", "return": "boolean", "signature": "boolean isReserved(Name name)", "full_signature": "private static boolean isReserved(Name name)", "class_method_signature": "Directory.isReserved(Name name)", "testcase": false, "constructor": false}, {"identifier": "bucketIndex", "parameters": "(Name name, int tableLength)", "modifiers": "private static", "return": "int", "signature": "int bucketIndex(Name name, int tableLength)", "full_signature": "private static int bucketIndex(Name name, int tableLength)", "class_method_signature": "Directory.bucketIndex(Name name, int tableLength)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(DirectoryEntry entry)", "modifiers": "@VisibleForTesting", "return": "void", "signature": "void put(DirectoryEntry entry)", "full_signature": "@VisibleForTesting void put(DirectoryEntry entry)", "class_method_signature": "Directory.put(DirectoryEntry entry)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(DirectoryEntry entry, boolean overwriteExisting)", "modifiers": "private", "return": "void", "signature": "void put(DirectoryEntry entry, boolean overwriteExisting)", "full_signature": "private void put(DirectoryEntry entry, boolean overwriteExisting)", "class_method_signature": "Directory.put(DirectoryEntry entry, boolean overwriteExisting)", "testcase": false, "constructor": false}, {"identifier": "forcePut", "parameters": "(DirectoryEntry entry)", "modifiers": "private", "return": "void", "signature": "void forcePut(DirectoryEntry entry)", "full_signature": "private void forcePut(DirectoryEntry entry)", "class_method_signature": "Directory.forcePut(DirectoryEntry entry)", "testcase": false, "constructor": false}, {"identifier": "expandIfNeeded", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean expandIfNeeded()", "full_signature": "private boolean expandIfNeeded()", "class_method_signature": "Directory.expandIfNeeded()", "testcase": false, "constructor": false}, {"identifier": "addToBucket", "parameters": "(\n      int bucketIndex, DirectoryEntry[] table, DirectoryEntry entryToAdd)", "modifiers": "private static", "return": "void", "signature": "void addToBucket(\n      int bucketIndex, DirectoryEntry[] table, DirectoryEntry entryToAdd)", "full_signature": "private static void addToBucket(\n      int bucketIndex, DirectoryEntry[] table, DirectoryEntry entryToAdd)", "class_method_signature": "Directory.addToBucket(\n      int bucketIndex, DirectoryEntry[] table, DirectoryEntry entryToAdd)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Name name)", "modifiers": "@VisibleForTesting", "return": "DirectoryEntry", "signature": "DirectoryEntry remove(Name name)", "full_signature": "@VisibleForTesting DirectoryEntry remove(Name name)", "class_method_signature": "Directory.remove(Name name)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<DirectoryEntry>", "signature": "Iterator<DirectoryEntry> iterator()", "full_signature": "@Override public Iterator<DirectoryEntry> iterator()", "class_method_signature": "Directory.iterator()", "testcase": false, "constructor": false}], "file": "jimfs/src/main/java/com/google/common/jimfs/Directory.java"}, "focal_method": {"identifier": "unlink", "parameters": "(Name name)", "modifiers": "public", "return": "void", "body": "public void unlink(Name name) {\n    DirectoryEntry entry = remove(checkNotReserved(name, \"unlink\"));\n    entry.file().unlinked();\n  }", "signature": "void unlink(Name name)", "full_signature": "public void unlink(Name name)", "class_method_signature": "Directory.unlink(Name name)", "testcase": false, "constructor": false, "invocations": ["remove", "checkNotReserved", "unlinked", "file"]}, "repository": {"repo_id": 13745124, "url": "https://github.com/google/jimfs", "stars": 1731, "created": "10/21/2013 2:39:27 PM +00:00", "updates": "2020-01-27T18:46:07+00:00", "fork": "False", "license": "licensed"}}