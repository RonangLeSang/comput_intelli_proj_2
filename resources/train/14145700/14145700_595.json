{"test_class": {"identifier": "FieldAndRValueTest", "superclass": "", "interfaces": "", "fields": [], "file": "query-api/src/test/java/com/redhat/lightblue/query/FieldAndRValueTest.java"}, "test_case": {"identifier": "testSetField", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetField() {\n        Path expResult = null;\n        FieldAndRValue instance = new FieldAndRValue();\n        instance.setField(expResult);\n        Path result = instance.getField();\n        assertEquals(expResult, result);\n\n        expResult = new Path(\"Test\");\n        instance.setField(expResult);\n        result = instance.getField();\n        assertEquals(expResult, result);\n    }", "signature": "void testSetField()", "full_signature": "@Test public void testSetField()", "class_method_signature": "FieldAndRValueTest.testSetField()", "testcase": true, "constructor": false, "invocations": ["setField", "getField", "assertEquals", "setField", "getField", "assertEquals"]}, "focal_class": {"identifier": "FieldAndRValue", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 1l;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1l", "var_name": "serialVersionUID"}, {"original_string": "private Path field;", "modifier": "private", "type": "Path", "declarator": "field", "var_name": "field"}, {"original_string": "private RValueExpression rvalue;", "modifier": "private", "type": "RValueExpression", "declarator": "rvalue", "var_name": "rvalue"}], "methods": [{"identifier": "FieldAndRValue", "parameters": "()", "modifiers": "public", "return": "", "signature": " FieldAndRValue()", "full_signature": "public  FieldAndRValue()", "class_method_signature": "FieldAndRValue.FieldAndRValue()", "testcase": false, "constructor": true}, {"identifier": "FieldAndRValue", "parameters": "(Path field, RValueExpression rvalue)", "modifiers": "public", "return": "", "signature": " FieldAndRValue(Path field, RValueExpression rvalue)", "full_signature": "public  FieldAndRValue(Path field, RValueExpression rvalue)", "class_method_signature": "FieldAndRValue.FieldAndRValue(Path field, RValueExpression rvalue)", "testcase": false, "constructor": true}, {"identifier": "getField", "parameters": "()", "modifiers": "public", "return": "Path", "signature": "Path getField()", "full_signature": "public Path getField()", "class_method_signature": "FieldAndRValue.getField()", "testcase": false, "constructor": false}, {"identifier": "setField", "parameters": "(Path p)", "modifiers": "public", "return": "void", "signature": "void setField(Path p)", "full_signature": "public void setField(Path p)", "class_method_signature": "FieldAndRValue.setField(Path p)", "testcase": false, "constructor": false}, {"identifier": "getRValue", "parameters": "()", "modifiers": "public", "return": "RValueExpression", "signature": "RValueExpression getRValue()", "full_signature": "public RValueExpression getRValue()", "class_method_signature": "FieldAndRValue.getRValue()", "testcase": false, "constructor": false}, {"identifier": "setRValue", "parameters": "(RValueExpression e)", "modifiers": "public", "return": "void", "signature": "void setRValue(RValueExpression e)", "full_signature": "public void setRValue(RValueExpression e)", "class_method_signature": "FieldAndRValue.setRValue(RValueExpression e)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "FieldAndRValue.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "FieldAndRValue.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "FieldAndRValue.equals(Object obj)", "testcase": false, "constructor": false}], "file": "query-api/src/main/java/com/redhat/lightblue/query/FieldAndRValue.java"}, "focal_method": {"identifier": "setField", "parameters": "(Path p)", "modifiers": "public", "return": "void", "body": "public void setField(Path p) {\n        field = p;\n    }", "signature": "void setField(Path p)", "full_signature": "public void setField(Path p)", "class_method_signature": "FieldAndRValue.setField(Path p)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 14145700, "url": "https://github.com/lightblue-platform/lightblue-core", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 9487, "license": "licensed"}}