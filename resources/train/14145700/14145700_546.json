{"test_class": {"identifier": "ArraySizeCheckerTest", "superclass": "", "interfaces": "", "fields": [], "file": "crud/src/test/java/com/redhat/lightblue/crud/validator/ArraySizeCheckerTest.java"}, "test_case": {"identifier": "testCheckConstraint_TooLarge", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCheckConstraint_TooLarge() {\n        ConstraintValidator validator = mock(ConstraintValidator.class);\n\n        ArraySizeConstraint constraint = new ArraySizeConstraint(\"Fake Type\");\n        constraint.setValue(2);\n\n        ArrayNode fieldValue = mock(ArrayNode.class);\n        when(fieldValue.size()).thenReturn(3);\n\n        new ArraySizeChecker().checkConstraint(validator, null, null, constraint, null, null, fieldValue);\n\n        verify(validator, times(1)).addDocError(any(Error.class));\n    }", "signature": "void testCheckConstraint_TooLarge()", "full_signature": "@Test public void testCheckConstraint_TooLarge()", "class_method_signature": "ArraySizeCheckerTest.testCheckConstraint_TooLarge()", "testcase": true, "constructor": false, "invocations": ["mock", "setValue", "mock", "thenReturn", "when", "size", "checkConstraint", "addDocError", "verify", "times", "any"]}, "focal_class": {"identifier": "ArraySizeChecker", "superclass": "", "interfaces": "implements FieldConstraintValueChecker", "fields": [], "methods": [{"identifier": "checkConstraint", "parameters": "(ConstraintValidator validator,\n                                FieldTreeNode fieldMetadata,\n                                Path fieldMetadataPath,\n                                FieldConstraint constraint,\n                                Path valuePath,\n                                JsonDoc doc,\n                                JsonNode fieldValue)", "modifiers": "@Override public", "return": "void", "signature": "void checkConstraint(ConstraintValidator validator,\n                                FieldTreeNode fieldMetadata,\n                                Path fieldMetadataPath,\n                                FieldConstraint constraint,\n                                Path valuePath,\n                                JsonDoc doc,\n                                JsonNode fieldValue)", "full_signature": "@Override public void checkConstraint(ConstraintValidator validator,\n                                FieldTreeNode fieldMetadata,\n                                Path fieldMetadataPath,\n                                FieldConstraint constraint,\n                                Path valuePath,\n                                JsonDoc doc,\n                                JsonNode fieldValue)", "class_method_signature": "ArraySizeChecker.checkConstraint(ConstraintValidator validator,\n                                FieldTreeNode fieldMetadata,\n                                Path fieldMetadataPath,\n                                FieldConstraint constraint,\n                                Path valuePath,\n                                JsonDoc doc,\n                                JsonNode fieldValue)", "testcase": false, "constructor": false}], "file": "crud/src/main/java/com/redhat/lightblue/crud/validator/ArraySizeChecker.java"}, "focal_method": {"identifier": "checkConstraint", "parameters": "(ConstraintValidator validator,\n                                FieldTreeNode fieldMetadata,\n                                Path fieldMetadataPath,\n                                FieldConstraint constraint,\n                                Path valuePath,\n                                JsonDoc doc,\n                                JsonNode fieldValue)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void checkConstraint(ConstraintValidator validator,\n                                FieldTreeNode fieldMetadata,\n                                Path fieldMetadataPath,\n                                FieldConstraint constraint,\n                                Path valuePath,\n                                JsonDoc doc,\n                                JsonNode fieldValue) {\n        int value = ((ArraySizeConstraint) constraint).getValue();\n        String type = ((ArraySizeConstraint) constraint).getType();\n        if (fieldValue != null && !(fieldValue instanceof NullNode)) {\n            if (ArraySizeConstraint.MIN.equals(type)) {\n                if (((ArrayNode) fieldValue).size() < value) {\n                    validator.addDocError(Error.get(CrudConstants.ERR_ARRAY_TOO_SMALL, Integer.toString(((ArrayNode) fieldValue).size())));\n                }\n            } else if (((ArrayNode) fieldValue).size() > value) {\n                validator.addDocError(Error.get(CrudConstants.ERR_ARRAY_TOO_LARGE, Integer.toString(((ArrayNode) fieldValue).size())));\n            }\n        }\n    }", "signature": "void checkConstraint(ConstraintValidator validator,\n                                FieldTreeNode fieldMetadata,\n                                Path fieldMetadataPath,\n                                FieldConstraint constraint,\n                                Path valuePath,\n                                JsonDoc doc,\n                                JsonNode fieldValue)", "full_signature": "@Override public void checkConstraint(ConstraintValidator validator,\n                                FieldTreeNode fieldMetadata,\n                                Path fieldMetadataPath,\n                                FieldConstraint constraint,\n                                Path valuePath,\n                                JsonDoc doc,\n                                JsonNode fieldValue)", "class_method_signature": "ArraySizeChecker.checkConstraint(ConstraintValidator validator,\n                                FieldTreeNode fieldMetadata,\n                                Path fieldMetadataPath,\n                                FieldConstraint constraint,\n                                Path valuePath,\n                                JsonDoc doc,\n                                JsonNode fieldValue)", "testcase": false, "constructor": false, "invocations": ["getValue", "getType", "equals", "size", "addDocError", "get", "toString", "size", "size", "addDocError", "get", "toString", "size"]}, "repository": {"repo_id": 14145700, "url": "https://github.com/lightblue-platform/lightblue-core", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 9487, "license": "licensed"}}