{"test_class": {"identifier": "ArrayAddExpressionTest", "superclass": "", "interfaces": "", "fields": [], "file": "query-api/src/test/java/com/redhat/lightblue/query/ArrayAddExpressionTest.java"}, "test_case": {"identifier": "testHashCode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHashCode() {\n        assertEquals(new ArrayAddExpression(Path.EMPTY, UpdateOperator._set, null).hashCode(), new ArrayAddExpression(Path.EMPTY, UpdateOperator._set, null).hashCode());\n    }", "signature": "void testHashCode()", "full_signature": "@Test public void testHashCode()", "class_method_signature": "ArrayAddExpressionTest.testHashCode()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "hashCode", "hashCode"]}, "focal_class": {"identifier": "ArrayAddExpression", "superclass": "extends ArrayUpdateExpression", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private final List<RValueExpression> values;", "modifier": "private final", "type": "List<RValueExpression>", "declarator": "values", "var_name": "values"}, {"original_string": "private final UpdateOperator op;", "modifier": "private final", "type": "UpdateOperator", "declarator": "op", "var_name": "op"}, {"original_string": "private final Path field;", "modifier": "private final", "type": "Path", "declarator": "field", "var_name": "field"}], "methods": [{"identifier": "ArrayAddExpression", "parameters": "(Path field, UpdateOperator op, List<RValueExpression> list)", "modifiers": "public", "return": "", "signature": " ArrayAddExpression(Path field, UpdateOperator op, List<RValueExpression> list)", "full_signature": "public  ArrayAddExpression(Path field, UpdateOperator op, List<RValueExpression> list)", "class_method_signature": "ArrayAddExpression.ArrayAddExpression(Path field, UpdateOperator op, List<RValueExpression> list)", "testcase": false, "constructor": true}, {"identifier": "getField", "parameters": "()", "modifiers": "public", "return": "Path", "signature": "Path getField()", "full_signature": "public Path getField()", "class_method_signature": "ArrayAddExpression.getField()", "testcase": false, "constructor": false}, {"identifier": "getValues", "parameters": "()", "modifiers": "public", "return": "List<RValueExpression>", "signature": "List<RValueExpression> getValues()", "full_signature": "public List<RValueExpression> getValues()", "class_method_signature": "ArrayAddExpression.getValues()", "testcase": false, "constructor": false}, {"identifier": "getOp", "parameters": "()", "modifiers": "public", "return": "UpdateOperator", "signature": "UpdateOperator getOp()", "full_signature": "public UpdateOperator getOp()", "class_method_signature": "ArrayAddExpression.getOp()", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "()", "modifiers": "@Override public", "return": "JsonNode", "signature": "JsonNode toJson()", "full_signature": "@Override public JsonNode toJson()", "class_method_signature": "ArrayAddExpression.toJson()", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(ObjectNode node)", "modifiers": "public static", "return": "ArrayAddExpression", "signature": "ArrayAddExpression fromJson(ObjectNode node)", "full_signature": "public static ArrayAddExpression fromJson(ObjectNode node)", "class_method_signature": "ArrayAddExpression.fromJson(ObjectNode node)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ArrayAddExpression.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "ArrayAddExpression.equals(Object obj)", "testcase": false, "constructor": false}], "file": "query-api/src/main/java/com/redhat/lightblue/query/ArrayAddExpression.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int hashCode() {\n        int hash = 7;\n        hash = 89 * hash + Objects.hashCode(this.values);\n        hash = 89 * hash + Objects.hashCode(this.op);\n        hash = 89 * hash + Objects.hashCode(this.field);\n        return hash;\n    }", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ArrayAddExpression.hashCode()", "testcase": false, "constructor": false, "invocations": ["hashCode", "hashCode", "hashCode"]}, "repository": {"repo_id": 14145700, "url": "https://github.com/lightblue-platform/lightblue-core", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 9487, "license": "licensed"}}