{"test_class": {"identifier": "UtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "util/src/test/java/com/redhat/lightblue/util/UtilTest.java"}, "test_case": {"identifier": "isNumber_true", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isNumber_true() {\n        Assert.assertTrue(Util.isNumber(\"0\"));\n        Assert.assertTrue(Util.isNumber(\"1\"));\n        Assert.assertTrue(Util.isNumber(\"+1\"));\n        Assert.assertTrue(Util.isNumber(\"-1\"));\n        Assert.assertTrue(Util.isNumber(\"100\"));\n        Assert.assertTrue(Util.isNumber(\"+100\"));\n        Assert.assertTrue(Util.isNumber(\"-100\"));\n    }", "signature": "void isNumber_true()", "full_signature": "@Test public void isNumber_true()", "class_method_signature": "UtilTest.isNumber_true()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isNumber", "assertTrue", "isNumber", "assertTrue", "isNumber", "assertTrue", "isNumber", "assertTrue", "isNumber", "assertTrue", "isNumber", "assertTrue", "isNumber"]}, "focal_class": {"identifier": "Util", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "isNumber", "parameters": "(String value)", "modifiers": "public static", "return": "boolean", "signature": "boolean isNumber(String value)", "full_signature": "public static boolean isNumber(String value)", "class_method_signature": "Util.isNumber(String value)", "testcase": false, "constructor": false}, {"identifier": "Util", "parameters": "()", "modifiers": "private", "return": "", "signature": " Util()", "full_signature": "private  Util()", "class_method_signature": "Util.Util()", "testcase": false, "constructor": true}], "file": "util/src/main/java/com/redhat/lightblue/util/Util.java"}, "focal_method": {"identifier": "isNumber", "parameters": "(String value)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isNumber(String value) {\n        if (value != null) {\n            int n = value.length();\n            for (int i = 0; i < n; i++) {\n                char x = value.charAt(i);\n                if (!Character.isDigit(x)\n                        && !(i == 0 && (x == '-' || x == '+'))) {\n                    return false;\n                }\n            }\n            return n > 0;\n        }\n        return false;\n    }", "signature": "boolean isNumber(String value)", "full_signature": "public static boolean isNumber(String value)", "class_method_signature": "Util.isNumber(String value)", "testcase": false, "constructor": false, "invocations": ["length", "charAt", "isDigit"]}, "repository": {"repo_id": 14145700, "url": "https://github.com/lightblue-platform/lightblue-core", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 9487, "license": "licensed"}}