{"test_class": {"identifier": "TranslatorFromJsonTest", "superclass": "", "interfaces": "", "fields": [], "file": "metadata/src/test/java/com/redhat/lightblue/metadata/translator/TranslatorFromJsonTest.java"}, "test_case": {"identifier": "testTranslateSimpleArrayField", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTranslateSimpleArrayField() throws Exception {\n        EntityMetadata md = fakeEntityMetadata(\"fakeMetadata\",\n                new ArrayField(\"array\", new SimpleArrayElement(StringType.TYPE)));\n\n        FakeTranslatorFromJson<SingleFieldObject<String[]>> translator = new FakeTranslatorFromJson<SingleFieldObject<String[]>>(md) {\n\n            @SuppressWarnings(\"unchecked\")\n            @Override\n            protected void translate(ArrayField field, List<Object> items, Object target) {\n                if (target instanceof SingleFieldObject) {\n                    List<String> translatedItems = new ArrayList<>();\n                    items.forEach(item -> translatedItems.add(item.toString()));\n\n                    ((SingleFieldObject<String[]>) target).value = translatedItems.toArray(new String[0]);\n                }\n                else {\n                    throw new RuntimeException(\"Unexpected\");\n                }\n            }\n\n        };\n\n        SingleFieldObject<String[]> response = new SingleFieldObject<>();\n        translator.translate(new JsonDoc(json(\"{\\\"array\\\":[\\\"hello\\\",\\\"world\\\"]}\")), response);\n\n        assertNotNull(response);\n        assertEquals(2, response.value.length);\n        assertEquals(\"hello\", response.value[0]);\n        assertEquals(\"world\", response.value[1]);\n    }", "signature": "void testTranslateSimpleArrayField()", "full_signature": "@Test public void testTranslateSimpleArrayField()", "class_method_signature": "TranslatorFromJsonTest.testTranslateSimpleArrayField()", "testcase": true, "constructor": false, "invocations": ["fakeEntityMetadata", "forEach", "add", "toString", "toArray", "translate", "json", "assertNotNull", "assertEquals", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "TranslatorFromJson", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected final EntityMetadata entityMetadata;", "modifier": "protected final", "type": "EntityMetadata", "declarator": "entityMetadata", "var_name": "entityMetadata"}], "methods": [{"identifier": "TranslatorFromJson", "parameters": "(EntityMetadata entityMetadata)", "modifiers": "public", "return": "", "signature": " TranslatorFromJson(EntityMetadata entityMetadata)", "full_signature": "public  TranslatorFromJson(EntityMetadata entityMetadata)", "class_method_signature": "TranslatorFromJson.TranslatorFromJson(EntityMetadata entityMetadata)", "testcase": false, "constructor": true}, {"identifier": "fromJson", "parameters": "(Type type, JsonNode node)", "modifiers": "protected", "return": "Object", "signature": "Object fromJson(Type type, JsonNode node)", "full_signature": "protected Object fromJson(Type type, JsonNode node)", "class_method_signature": "TranslatorFromJson.fromJson(Type type, JsonNode node)", "testcase": false, "constructor": false}, {"identifier": "translate", "parameters": "(JsonDoc document, T target)", "modifiers": "public", "return": "void", "signature": "void translate(JsonDoc document, T target)", "full_signature": "public void translate(JsonDoc document, T target)", "class_method_signature": "TranslatorFromJson.translate(JsonDoc document, T target)", "testcase": false, "constructor": false}, {"identifier": "translate", "parameters": "(JsonNodeCursor cursor, Object target)", "modifiers": "protected", "return": "void", "signature": "void translate(JsonNodeCursor cursor, Object target)", "full_signature": "protected void translate(JsonNodeCursor cursor, Object target)", "class_method_signature": "TranslatorFromJson.translate(JsonNodeCursor cursor, Object target)", "testcase": false, "constructor": false}, {"identifier": "translate", "parameters": "(ArrayField field, JsonNodeCursor cursor, Object target)", "modifiers": "private", "return": "void", "signature": "void translate(ArrayField field, JsonNodeCursor cursor, Object target)", "full_signature": "private void translate(ArrayField field, JsonNodeCursor cursor, Object target)", "class_method_signature": "TranslatorFromJson.translate(ArrayField field, JsonNodeCursor cursor, Object target)", "testcase": false, "constructor": false}, {"identifier": "translate", "parameters": "(ObjectField field, JsonNodeCursor cursor, Object target)", "modifiers": "protected", "return": "void", "signature": "void translate(ObjectField field, JsonNodeCursor cursor, Object target)", "full_signature": "protected void translate(ObjectField field, JsonNodeCursor cursor, Object target)", "class_method_signature": "TranslatorFromJson.translate(ObjectField field, JsonNodeCursor cursor, Object target)", "testcase": false, "constructor": false}, {"identifier": "translate", "parameters": "(final ObjectArrayElement objectArrayElement, JsonNode node, Object target)", "modifiers": "protected", "return": "void", "signature": "void translate(final ObjectArrayElement objectArrayElement, JsonNode node, Object target)", "full_signature": "protected void translate(final ObjectArrayElement objectArrayElement, JsonNode node, Object target)", "class_method_signature": "TranslatorFromJson.translate(final ObjectArrayElement objectArrayElement, JsonNode node, Object target)", "testcase": false, "constructor": false}, {"identifier": "translate", "parameters": "(SimpleField field, JsonNode node, Object target)", "modifiers": "protected abstract", "return": "void", "signature": "void translate(SimpleField field, JsonNode node, Object target)", "full_signature": "protected abstract void translate(SimpleField field, JsonNode node, Object target)", "class_method_signature": "TranslatorFromJson.translate(SimpleField field, JsonNode node, Object target)", "testcase": false, "constructor": false}, {"identifier": "translate", "parameters": "(ArrayField field, List<Object> items, Object target)", "modifiers": "protected abstract", "return": "void", "signature": "void translate(ArrayField field, List<Object> items, Object target)", "full_signature": "protected abstract void translate(ArrayField field, List<Object> items, Object target)", "class_method_signature": "TranslatorFromJson.translate(ArrayField field, List<Object> items, Object target)", "testcase": false, "constructor": false}, {"identifier": "createInstanceFor", "parameters": "(Path path)", "modifiers": "protected abstract", "return": "Object", "signature": "Object createInstanceFor(Path path)", "full_signature": "protected abstract Object createInstanceFor(Path path)", "class_method_signature": "TranslatorFromJson.createInstanceFor(Path path)", "testcase": false, "constructor": false}], "file": "metadata/src/main/java/com/redhat/lightblue/metadata/translator/TranslatorFromJson.java"}, "focal_method": {"identifier": "translate", "parameters": "(JsonDoc document, T target)", "modifiers": "public", "return": "void", "body": "public void translate(JsonDoc document, T target){\n        Error.push(\"translating from json\");\n        try{\n            JsonNodeCursor cursor = document.cursor();\n            if (!cursor.firstChild()) {\n                //TODO throw exception?\n                return;\n            }\n\n            do {\n                translate(cursor, target);\n            } while (cursor.nextSibling());\n        }\n        finally{\n            Error.pop();\n        }\n    }", "signature": "void translate(JsonDoc document, T target)", "full_signature": "public void translate(JsonDoc document, T target)", "class_method_signature": "TranslatorFromJson.translate(JsonDoc document, T target)", "testcase": false, "constructor": false, "invocations": ["push", "cursor", "firstChild", "translate", "nextSibling", "pop"]}, "repository": {"repo_id": 14145700, "url": "https://github.com/lightblue-platform/lightblue-core", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 9487, "license": "licensed"}}