{"test_class": {"identifier": "WritableSimpleIteratorTest", "superclass": "extends TestBase", "interfaces": "", "fields": [{"original_string": "private static final int WIDTH = 17;", "modifier": "private static final", "type": "int", "declarator": "WIDTH = 17", "var_name": "WIDTH"}, {"original_string": "private static final int HEIGHT = 19;", "modifier": "private static final", "type": "int", "declarator": "HEIGHT = 19", "var_name": "HEIGHT"}, {"original_string": "private static final int TILE_WIDTH = 7;", "modifier": "private static final", "type": "int", "declarator": "TILE_WIDTH = 7", "var_name": "TILE_WIDTH"}, {"original_string": "private static final int TILE_HEIGHT = 11;", "modifier": "private static final", "type": "int", "declarator": "TILE_HEIGHT = 11", "var_name": "TILE_HEIGHT"}, {"original_string": "private TiledImage image;", "modifier": "private", "type": "TiledImage", "declarator": "image", "var_name": "image"}, {"original_string": "private WritableSimpleIterator iter;", "modifier": "private", "type": "WritableSimpleIterator", "declarator": "iter", "var_name": "iter"}], "file": "utils/src/test/java/org/jaitools/imageutils/iterator/WritableSimpleIteratorTest.java"}, "test_case": {"identifier": "setSequentialSpecifiedBand", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setSequentialSpecifiedBand() {\n        final int[] startValues = {100, 200, 300};\n        \n        Integer[] fill = new Integer[startValues.length];\n        Arrays.fill(fill, 0);\n        image = ImageUtils.createConstantImage(-3, 3, WIDTH, HEIGHT, fill);\n        iter = new WritableSimpleIterator(image, null, 0);\n\n        int k = 0;\n        do {\n            for (int band = 0; band < startValues.length; band++) {\n                iter.setSample(band, startValues[band] + k);\n            }\n            k++ ;\n        } while (iter.next());\n\n        assertImageValues(startValues, Order.IMAGE_X_Y);\n    }", "signature": "void setSequentialSpecifiedBand()", "full_signature": "@Test public void setSequentialSpecifiedBand()", "class_method_signature": "WritableSimpleIteratorTest.setSequentialSpecifiedBand()", "testcase": true, "constructor": false, "invocations": ["fill", "createConstantImage", "setSample", "next", "assertImageValues"]}, "focal_class": {"identifier": "WritableSimpleIterator", "superclass": "extends AbstractSimpleIterator", "interfaces": "", "fields": [], "methods": [{"identifier": "WritableSimpleIterator", "parameters": "(WritableRenderedImage image, Rectangle bounds, Number outsideValue)", "modifiers": "public", "return": "", "signature": " WritableSimpleIterator(WritableRenderedImage image, Rectangle bounds, Number outsideValue)", "full_signature": "public  WritableSimpleIterator(WritableRenderedImage image, Rectangle bounds, Number outsideValue)", "class_method_signature": "WritableSimpleIterator.WritableSimpleIterator(WritableRenderedImage image, Rectangle bounds, Number outsideValue)", "testcase": false, "constructor": true}, {"identifier": "WritableSimpleIterator", "parameters": "(WritableRenderedImage image, Rectangle bounds, Number outsideValue,\n            Order order)", "modifiers": "public", "return": "", "signature": " WritableSimpleIterator(WritableRenderedImage image, Rectangle bounds, Number outsideValue,\n            Order order)", "full_signature": "public  WritableSimpleIterator(WritableRenderedImage image, Rectangle bounds, Number outsideValue,\n            Order order)", "class_method_signature": "WritableSimpleIterator.WritableSimpleIterator(WritableRenderedImage image, Rectangle bounds, Number outsideValue,\n            Order order)", "testcase": false, "constructor": true}, {"identifier": "setSample", "parameters": "(Number value)", "modifiers": "public", "return": "boolean", "signature": "boolean setSample(Number value)", "full_signature": "public boolean setSample(Number value)", "class_method_signature": "WritableSimpleIterator.setSample(Number value)", "testcase": false, "constructor": false}, {"identifier": "setSample", "parameters": "(Point pos, Number value)", "modifiers": "public", "return": "boolean", "signature": "boolean setSample(Point pos, Number value)", "full_signature": "public boolean setSample(Point pos, Number value)", "class_method_signature": "WritableSimpleIterator.setSample(Point pos, Number value)", "testcase": false, "constructor": false}, {"identifier": "setSample", "parameters": "(int x, int y, Number value)", "modifiers": "public", "return": "boolean", "signature": "boolean setSample(int x, int y, Number value)", "full_signature": "public boolean setSample(int x, int y, Number value)", "class_method_signature": "WritableSimpleIterator.setSample(int x, int y, Number value)", "testcase": false, "constructor": false}, {"identifier": "setSample", "parameters": "(int band, Number value)", "modifiers": "public", "return": "boolean", "signature": "boolean setSample(int band, Number value)", "full_signature": "public boolean setSample(int band, Number value)", "class_method_signature": "WritableSimpleIterator.setSample(int band, Number value)", "testcase": false, "constructor": false}, {"identifier": "setSample", "parameters": "(Point pos, int band, Number value)", "modifiers": "public", "return": "boolean", "signature": "boolean setSample(Point pos, int band, Number value)", "full_signature": "public boolean setSample(Point pos, int band, Number value)", "class_method_signature": "WritableSimpleIterator.setSample(Point pos, int band, Number value)", "testcase": false, "constructor": false}, {"identifier": "setSample", "parameters": "(int x, int y, int band, Number value)", "modifiers": "public", "return": "boolean", "signature": "boolean setSample(int x, int y, int band, Number value)", "full_signature": "public boolean setSample(int x, int y, int band, Number value)", "class_method_signature": "WritableSimpleIterator.setSample(int x, int y, int band, Number value)", "testcase": false, "constructor": false}], "file": "utils/src/main/java/org/jaitools/imageutils/iterator/WritableSimpleIterator.java"}, "focal_method": {"identifier": "setSample", "parameters": "(Number value)", "modifiers": "public", "return": "boolean", "body": "public boolean setSample(Number value) {\n        return setSample(0, value);\n    }", "signature": "boolean setSample(Number value)", "full_signature": "public boolean setSample(Number value)", "class_method_signature": "WritableSimpleIterator.setSample(Number value)", "testcase": false, "constructor": false, "invocations": ["setSample"]}, "repository": {"repo_id": 7623114, "url": "https://github.com/mbedward/jaitools", "stars": 14, "created": "1/15/2013 10:48:42 AM +00:00", "updates": "2018-10-23T16:04:20+00:00", "fork": "False", "license": "licensed"}}