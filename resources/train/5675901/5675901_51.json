{"test_class": {"identifier": "ContentTypeTest", "superclass": "", "interfaces": "", "fields": [], "file": "gwtp-core/gwtp-dispatch-rest-shared/src/test/java/com/gwtplatform/dispatch/rest/shared/ContentTypeTest.java"}, "test_case": {"identifier": "toString_type_type", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toString_type_type() {\n        // given\n        ContentType contentType = new ContentType(\"text\", \"html\", new HashMap<>());\n\n        // when\n        String string = contentType.toString();\n\n        // then\n        assertThat(string).isEqualTo(\"text/html\");\n    }", "signature": "void toString_type_type()", "full_signature": "@Test public void toString_type_type()", "class_method_signature": "ContentTypeTest.toString_type_type()", "testcase": true, "constructor": false, "invocations": ["toString", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "ContentType", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String KEY_VALUE_DELIMITER = \"=\";", "modifier": "private static final", "type": "String", "declarator": "KEY_VALUE_DELIMITER = \"=\"", "var_name": "KEY_VALUE_DELIMITER"}, {"original_string": "private static final String PARAMETER_DELIMITER = \";\";", "modifier": "private static final", "type": "String", "declarator": "PARAMETER_DELIMITER = \";\"", "var_name": "PARAMETER_DELIMITER"}, {"original_string": "private static final String TYPE_DELIMITER = \"/\";", "modifier": "private static final", "type": "String", "declarator": "TYPE_DELIMITER = \"/\"", "var_name": "TYPE_DELIMITER"}, {"original_string": "private static final String WILDCARD = \"*\";", "modifier": "private static final", "type": "String", "declarator": "WILDCARD = \"*\"", "var_name": "WILDCARD"}, {"original_string": "private final String type;", "modifier": "private final", "type": "String", "declarator": "type", "var_name": "type"}, {"original_string": "private final String subType;", "modifier": "private final", "type": "String", "declarator": "subType", "var_name": "subType"}, {"original_string": "private final Map<String, String> parameters;", "modifier": "private final", "type": "Map<String, String>", "declarator": "parameters", "var_name": "parameters"}], "methods": [{"identifier": "ContentType", "parameters": "(\n            String type,\n            String subType,\n            Map<String, String> parameters)", "modifiers": "public", "return": "", "signature": " ContentType(\n            String type,\n            String subType,\n            Map<String, String> parameters)", "full_signature": "public  ContentType(\n            String type,\n            String subType,\n            Map<String, String> parameters)", "class_method_signature": "ContentType.ContentType(\n            String type,\n            String subType,\n            Map<String, String> parameters)", "testcase": false, "constructor": true}, {"identifier": "valueOf", "parameters": "(String value)", "modifiers": "public static", "return": "ContentType", "signature": "ContentType valueOf(String value)", "full_signature": "public static ContentType valueOf(String value)", "class_method_signature": "ContentType.valueOf(String value)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ContentType.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "ContentType.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ContentType.hashCode()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getType()", "full_signature": "public String getType()", "class_method_signature": "ContentType.getType()", "testcase": false, "constructor": false}, {"identifier": "isWildcardType", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isWildcardType()", "full_signature": "public boolean isWildcardType()", "class_method_signature": "ContentType.isWildcardType()", "testcase": false, "constructor": false}, {"identifier": "getSubType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSubType()", "full_signature": "public String getSubType()", "class_method_signature": "ContentType.getSubType()", "testcase": false, "constructor": false}, {"identifier": "isWildcardSubType", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isWildcardSubType()", "full_signature": "public boolean isWildcardSubType()", "class_method_signature": "ContentType.isWildcardSubType()", "testcase": false, "constructor": false}, {"identifier": "isWildcard", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isWildcard()", "full_signature": "public boolean isWildcard()", "class_method_signature": "ContentType.isWildcard()", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getParameters()", "full_signature": "public Map<String, String> getParameters()", "class_method_signature": "ContentType.getParameters()", "testcase": false, "constructor": false}, {"identifier": "isCompatible", "parameters": "(ContentType other)", "modifiers": "public", "return": "boolean", "signature": "boolean isCompatible(ContentType other)", "full_signature": "public boolean isCompatible(ContentType other)", "class_method_signature": "ContentType.isCompatible(ContentType other)", "testcase": false, "constructor": false}, {"identifier": "valueOrWildcard", "parameters": "(String type)", "modifiers": "private", "return": "String", "signature": "String valueOrWildcard(String type)", "full_signature": "private String valueOrWildcard(String type)", "class_method_signature": "ContentType.valueOrWildcard(String type)", "testcase": false, "constructor": false}], "file": "gwtp-core/gwtp-dispatch-rest-shared/src/main/java/com/gwtplatform/dispatch/rest/shared/ContentType.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        StringBuilder builder = new StringBuilder().append(type).append('/').append(subType);\n\n        for (Entry<String, String> parameter : parameters.entrySet()) {\n            builder.append(\"; \").append(parameter.getKey()).append('=').append(parameter.getValue());\n        }\n\n        return builder.toString();\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ContentType.toString()", "testcase": false, "constructor": false, "invocations": ["append", "append", "append", "entrySet", "append", "append", "append", "append", "getKey", "getValue", "toString"]}, "repository": {"repo_id": 5675901, "url": "https://github.com/ArcBees/GWTP", "language": "Java", "is_fork": false, "fork_count": 127, "stargazer_count": 331, "size": 41866, "license": "licensed"}}