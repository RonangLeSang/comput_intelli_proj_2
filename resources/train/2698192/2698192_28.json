{"test_class": {"identifier": "ValidationUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "httpfixture/src/test/java/org/sonatype/goodies/httpfixture/validation/ValidationUtilTest.java"}, "test_case": {"identifier": "testVerifyValidatorsFailOnlyNullArg", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n  public void testVerifyValidatorsFailOnlyNullArg() {\n    ValidationUtil.verifyValidators(null);\n  }", "signature": "void testVerifyValidatorsFailOnlyNullArg()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testVerifyValidatorsFailOnlyNullArg()", "class_method_signature": "ValidationUtilTest.testVerifyValidatorsFailOnlyNullArg()", "testcase": true, "constructor": false, "invocations": ["verifyValidators"]}, "focal_class": {"identifier": "ValidationUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ValidationUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " ValidationUtil()", "full_signature": "private  ValidationUtil()", "class_method_signature": "ValidationUtil.ValidationUtil()", "testcase": false, "constructor": true}, {"identifier": "verifyValidators", "parameters": "(HttpValidator... validators)", "modifiers": "public static", "return": "void", "signature": "void verifyValidators(HttpValidator... validators)", "full_signature": "public static void verifyValidators(HttpValidator... validators)", "class_method_signature": "ValidationUtil.verifyValidators(HttpValidator... validators)", "testcase": false, "constructor": false}], "file": "httpfixture/src/main/java/org/sonatype/goodies/httpfixture/validation/ValidationUtil.java"}, "focal_method": {"identifier": "verifyValidators", "parameters": "(HttpValidator... validators)", "modifiers": "public static", "return": "void", "body": "public static void verifyValidators(HttpValidator... validators) {\n    checkArgument(validators != null && validators.length > 0, \"Must have at least one validator set.\");\n    for (HttpValidator v : validators) {\n      checkNotNull(v, \"Cannot have a null validator.\");\n    }\n  }", "signature": "void verifyValidators(HttpValidator... validators)", "full_signature": "public static void verifyValidators(HttpValidator... validators)", "class_method_signature": "ValidationUtil.verifyValidators(HttpValidator... validators)", "testcase": false, "constructor": false, "invocations": ["checkArgument", "checkNotNull"]}, "repository": {"repo_id": 2698192, "url": "https://github.com/sonatype/goodies", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 7, "size": 1450, "license": "licensed"}}