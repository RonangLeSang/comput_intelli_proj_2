{"test_class": {"identifier": "SpecificCharacterSetTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String LT_DELIMS = \"\\t\\n\\f\\r\";", "modifier": "private static final", "type": "String", "declarator": "LT_DELIMS = \"\\t\\n\\f\\r\"", "var_name": "LT_DELIMS"}, {"original_string": "private static final String PN_DELIMS = \"^=\\\\\";", "modifier": "private static final", "type": "String", "declarator": "PN_DELIMS = \"^=\\\\\"", "var_name": "PN_DELIMS"}, {"original_string": "private static final String GERMAN_PERSON_NAME = \"\u00c4neas^R\u00fcdiger\";", "modifier": "private static final", "type": "String", "declarator": "GERMAN_PERSON_NAME = \"\u00c4neas^R\u00fcdiger\";", "var_name": "GERMAN_PERSON_NAME"}, {"original_string": "private static final String FRENCH_PERSON_NAME = \"Buc^J\u00e9r\u00f4me\";", "modifier": "private static final", "type": "String", "declarator": "FRENCH_PERSON_NAME = \"Buc^J\u00e9r\u00f4me\";", "var_name": "FRENCH_PERSON_NAME"}, {"original_string": "private static final String RUSSIAN_PERSON_NAME = \"\u041b\u044e\u043ace\u043c\u0431yp\u0433\";", "modifier": "private static final", "type": "String", "declarator": "RUSSIAN_PERSON_NAME = \"\u041b\u044e\u043ace\u043c\u0431yp\u0433\";", "var_name": "RUSSIAN_PERSON_NAME"}, {"original_string": "private static final String ARABIC_PERSON_NAME = \"\u0642\u0628\u0627\u0646\u064a^\u0644\u0646\u0632\u0627\u0631\";", "modifier": "private static final", "type": "String", "declarator": "ARABIC_PERSON_NAME = \"\u0642\u0628\u0627\u0646\u064a^\u0644\u0646\u0632\u0627\u0631\";", "var_name": "ARABIC_PERSON_NAME"}, {"original_string": "private static final String GREEK_PERSON_NAME = \"\u0394\u03b9\u03bf\u03bd\u03c5\u03c3\u03b9\u03bf\u03c2\";", "modifier": "private static final", "type": "String", "declarator": "GREEK_PERSON_NAME = \"\u0394\u03b9\u03bf\u03bd\u03c5\u03c3\u03b9\u03bf\u03c2\";", "var_name": "GREEK_PERSON_NAME"}, {"original_string": "private static final String HEBREW_PERSON_NAME = \"\u05e9\u05e8\u05d5\u05df^\u05d3\u05d1\u05d5\u05e8\u05d4\";", "modifier": "private static final", "type": "String", "declarator": "HEBREW_PERSON_NAME = \"\u05e9\u05e8\u05d5\u05df^\u05d3\u05d1\u05d5\u05e8\u05d4\";", "var_name": "HEBREW_PERSON_NAME"}, {"original_string": "private static final String JAPANESE_PERSON_NAME_ASCII =\n            \"Yamada^Tarou=\u5c71\u7530^\u592a\u90ce=\u3084\u307e\u3060^\u305f\u308d\u3046\";", "modifier": "private static final", "type": "String", "declarator": "JAPANESE_PERSON_NAME_ASCII =\n            \"Yamada^Tarou=\u5c71\u7530^\u592a\u90ce=\u3084\u307e\u3060^\u305f\u308d\u3046\";", "var_name": "JAPANESE_PERSON_NAME_ASCII"}, {"original_string": "private static final String JAPANESE_PERSON_NAME_JISX0201 =\n            \"\uff94\uff8f\uff80\uff9e^\uff80\uff9b\uff73=\u5c71\u7530^\u592a\u90ce=\u3084\u307e\u3060^\u305f\u308d\u3046\";", "modifier": "private static final", "type": "String", "declarator": "JAPANESE_PERSON_NAME_JISX0201 =\n            \"\uff94\uff8f\uff80\uff9e^\uff80\uff9b\uff73=\u5c71\u7530^\u592a\u90ce=\u3084\u307e\u3060^\u305f\u308d\u3046\";", "var_name": "JAPANESE_PERSON_NAME_JISX0201"}, {"original_string": "private static final String KOREAN_PERSON_NAME =\n            \"Hong^Gildong=\u6d2a^\u5409\u6d1e=\ud64d^\uae38\ub3d9\";", "modifier": "private static final", "type": "String", "declarator": "KOREAN_PERSON_NAME =\n            \"Hong^Gildong=\u6d2a^\u5409\u6d1e=\ud64d^\uae38\ub3d9\";", "var_name": "KOREAN_PERSON_NAME"}, {"original_string": "private static final String KOREAN_LONG_TEXT = \n            \"The 1st line includes \uae38\ub3d9.\\r\\n\" +\n            \"The 2nd line includes \uae38\ub3d9, too.\\r\\n\" +\n            \"The 3rd line.\";", "modifier": "private static final", "type": "String", "declarator": "KOREAN_LONG_TEXT = \n            \"The 1st line includes \uae38\ub3d9.\\r\\n\" +\n            \"The 2nd line includes \uae38\ub3d9, too.\\r\\n\" +\n            \"The 3rd line.\"", "var_name": "KOREAN_LONG_TEXT"}, {"original_string": "private static final String CHINESE_PERSON_NAME_GB2312 =\n            \"Zhang^XiaoDong=\u5f20^\u5c0f\u4e1c=\";", "modifier": "private static final", "type": "String", "declarator": "CHINESE_PERSON_NAME_GB2312 =\n            \"Zhang^XiaoDong=\u5f20^\u5c0f\u4e1c=\";", "var_name": "CHINESE_PERSON_NAME_GB2312"}, {"original_string": "private static final String CHINESE_LONG_TEXT_GB2312 =\n            \"1.\u7b2c\u4e00\u884c\u6587\u5b57\u3002\\r\\n\" +\n            \"2.\u7b2c\u4e00\u884c\u6587\u5b57\u3002\\r\\n\" +\n            \"3.\u7b2c\u4e00\u884c\u6587\u5b57\u3002\\r\\n\";", "modifier": "private static final", "type": "String", "declarator": "CHINESE_LONG_TEXT_GB2312 =\n            \"1.\u7b2c\u4e00\u884c\u6587\u5b57\u3002\\r\\n\" +\n            \"2.\u7b2c\u4e00\u884c\u6587\u5b57\u3002\\r\\n\" +\n            \"3.\u7b2c\u4e00\u884c\u6587\u5b57\u3002\\r\\n\";", "var_name": "CHINESE_LONG_TEXT_GB2312"}, {"original_string": "private static final String CHINESE_PERSON_NAME_UTF8 =\n            \"Wang^XiaoDong=\u738b^\u5c0f\u6771=\";", "modifier": "private static final", "type": "String", "declarator": "CHINESE_PERSON_NAME_UTF8 =\n            \"Wang^XiaoDong=\u738b^\u5c0f\u6771=\";", "var_name": "CHINESE_PERSON_NAME_UTF8"}, {"original_string": "private static final String CHINESE_PERSON_NAME_GB18030 =\n            \"Wang^XiaoDong=\u738b^\u5c0f\u4e1c=\";", "modifier": "private static final", "type": "String", "declarator": "CHINESE_PERSON_NAME_GB18030 =\n            \"Wang^XiaoDong=\u738b^\u5c0f\u4e1c=\";", "var_name": "CHINESE_PERSON_NAME_GB18030"}, {"original_string": "private static final String FINNISH_PERSON_NAME = \"\u0160i\u0161kino^\u017du\u017ea\";", "modifier": "private static final", "type": "String", "declarator": "FINNISH_PERSON_NAME = \"\u0160i\u0161kino^\u017du\u017ea\";", "var_name": "FINNISH_PERSON_NAME"}, {"original_string": "private static final byte[] GERMAN_PERSON_NAME_BYTE = {\n            (byte) 0xc4, (byte) 0x6e, (byte) 0x65, (byte) 0x61, (byte) 0x73,\n            (byte) 0x5e, (byte) 0x52, (byte) 0xfc, (byte) 0x64, (byte) 0x69,\n            (byte) 0x67, (byte) 0x65, (byte) 0x72 };", "modifier": "private static final", "type": "byte[]", "declarator": "GERMAN_PERSON_NAME_BYTE = {\n            (byte) 0xc4, (byte) 0x6e, (byte) 0x65, (byte) 0x61, (byte) 0x73,\n            (byte) 0x5e, (byte) 0x52, (byte) 0xfc, (byte) 0x64, (byte) 0x69,\n            (byte) 0x67, (byte) 0x65, (byte) 0x72 }", "var_name": "GERMAN_PERSON_NAME_BYTE"}, {"original_string": "private static final byte[] FRENCH_PERSON_NAME_BYTE = {\n            (byte) 0x42, (byte) 0x75, (byte) 0x63, (byte) 0x5e, (byte) 0x4a,\n            (byte) 0xe9, (byte) 0x72, (byte) 0xf4, (byte) 0x6d, (byte) 0x65 };", "modifier": "private static final", "type": "byte[]", "declarator": "FRENCH_PERSON_NAME_BYTE = {\n            (byte) 0x42, (byte) 0x75, (byte) 0x63, (byte) 0x5e, (byte) 0x4a,\n            (byte) 0xe9, (byte) 0x72, (byte) 0xf4, (byte) 0x6d, (byte) 0x65 }", "var_name": "FRENCH_PERSON_NAME_BYTE"}, {"original_string": "private static final byte[] RUSSIAN_PERSON_NAME_BYTE = {\n            (byte) 0xbb, (byte) 0xee, (byte) 0xda, (byte) 0x63, (byte) 0x65,\n            (byte) 0xdc, (byte) 0xd1, (byte) 0x79, (byte) 0x70, (byte) 0xd3 };", "modifier": "private static final", "type": "byte[]", "declarator": "RUSSIAN_PERSON_NAME_BYTE = {\n            (byte) 0xbb, (byte) 0xee, (byte) 0xda, (byte) 0x63, (byte) 0x65,\n            (byte) 0xdc, (byte) 0xd1, (byte) 0x79, (byte) 0x70, (byte) 0xd3 }", "var_name": "RUSSIAN_PERSON_NAME_BYTE"}, {"original_string": "private static final byte[] ARABIC_PERSON_NAME_BYTE = {\n            (byte) 0xe2, (byte) 0xc8, (byte) 0xc7, (byte) 0xe6, (byte) 0xea,\n            (byte) 0x5e, (byte) 0xe4, (byte) 0xe6, (byte) 0xd2, (byte) 0xc7,\n            (byte) 0xd1 };", "modifier": "private static final", "type": "byte[]", "declarator": "ARABIC_PERSON_NAME_BYTE = {\n            (byte) 0xe2, (byte) 0xc8, (byte) 0xc7, (byte) 0xe6, (byte) 0xea,\n            (byte) 0x5e, (byte) 0xe4, (byte) 0xe6, (byte) 0xd2, (byte) 0xc7,\n            (byte) 0xd1 }", "var_name": "ARABIC_PERSON_NAME_BYTE"}, {"original_string": "private static final byte[] GREEK_PERSON_NAME_BYTE = {\n            (byte) 0xc4, (byte) 0xe9, (byte) 0xef, (byte) 0xed, (byte) 0xf5,\n            (byte) 0xf3, (byte) 0xe9, (byte) 0xef, (byte) 0xf2 };", "modifier": "private static final", "type": "byte[]", "declarator": "GREEK_PERSON_NAME_BYTE = {\n            (byte) 0xc4, (byte) 0xe9, (byte) 0xef, (byte) 0xed, (byte) 0xf5,\n            (byte) 0xf3, (byte) 0xe9, (byte) 0xef, (byte) 0xf2 }", "var_name": "GREEK_PERSON_NAME_BYTE"}, {"original_string": "private static final byte[] HEBREW_PERSON_NAME_BYTE = {\n            (byte) 0xf9, (byte) 0xf8, (byte) 0xe5, (byte) 0xef, (byte) 0x5e,\n            (byte) 0xe3, (byte) 0xe1, (byte) 0xe5, (byte) 0xf8, (byte) 0xe4 };", "modifier": "private static final", "type": "byte[]", "declarator": "HEBREW_PERSON_NAME_BYTE = {\n            (byte) 0xf9, (byte) 0xf8, (byte) 0xe5, (byte) 0xef, (byte) 0x5e,\n            (byte) 0xe3, (byte) 0xe1, (byte) 0xe5, (byte) 0xf8, (byte) 0xe4 }", "var_name": "HEBREW_PERSON_NAME_BYTE"}, {"original_string": "private static final byte[] JAPANESE_PERSON_NAME_ASCII_BYTES = {\n            (byte) 0x59, (byte) 0x61, (byte) 0x6d, (byte) 0x61, (byte) 0x64,\n            (byte) 0x61, (byte) 0x5e, (byte) 0x54, (byte) 0x61, (byte) 0x72,\n            (byte) 0x6f, (byte) 0x75, (byte) 0x3d, (byte) 0x1b, (byte) 0x24,\n            (byte) 0x42, (byte) 0x3b, (byte) 0x33, (byte) 0x45, (byte) 0x44,\n            (byte) 0x1b, (byte) 0x28, (byte) 0x42, (byte) 0x5e, (byte) 0x1b,\n            (byte) 0x24, (byte) 0x42, (byte) 0x42, (byte) 0x40, (byte) 0x4f,\n            (byte) 0x3a, (byte) 0x1b, (byte) 0x28, (byte) 0x42, (byte) 0x3d,\n            (byte) 0x1b, (byte) 0x24, (byte) 0x42, (byte) 0x24, (byte) 0x64,\n            (byte) 0x24, (byte) 0x5e, (byte) 0x24, (byte) 0x40, (byte) 0x1b,\n            (byte) 0x28, (byte) 0x42, (byte) 0x5e, (byte) 0x1b, (byte) 0x24,\n            (byte) 0x42, (byte) 0x24, (byte) 0x3f, (byte) 0x24, (byte) 0x6d,\n            (byte) 0x24, (byte) 0x26, (byte) 0x1b, (byte) 0x28, (byte) 0x42 };", "modifier": "private static final", "type": "byte[]", "declarator": "JAPANESE_PERSON_NAME_ASCII_BYTES = {\n            (byte) 0x59, (byte) 0x61, (byte) 0x6d, (byte) 0x61, (byte) 0x64,\n            (byte) 0x61, (byte) 0x5e, (byte) 0x54, (byte) 0x61, (byte) 0x72,\n            (byte) 0x6f, (byte) 0x75, (byte) 0x3d, (byte) 0x1b, (byte) 0x24,\n            (byte) 0x42, (byte) 0x3b, (byte) 0x33, (byte) 0x45, (byte) 0x44,\n            (byte) 0x1b, (byte) 0x28, (byte) 0x42, (byte) 0x5e, (byte) 0x1b,\n            (byte) 0x24, (byte) 0x42, (byte) 0x42, (byte) 0x40, (byte) 0x4f,\n            (byte) 0x3a, (byte) 0x1b, (byte) 0x28, (byte) 0x42, (byte) 0x3d,\n            (byte) 0x1b, (byte) 0x24, (byte) 0x42, (byte) 0x24, (byte) 0x64,\n            (byte) 0x24, (byte) 0x5e, (byte) 0x24, (byte) 0x40, (byte) 0x1b,\n            (byte) 0x28, (byte) 0x42, (byte) 0x5e, (byte) 0x1b, (byte) 0x24,\n            (byte) 0x42, (byte) 0x24, (byte) 0x3f, (byte) 0x24, (byte) 0x6d,\n            (byte) 0x24, (byte) 0x26, (byte) 0x1b, (byte) 0x28, (byte) 0x42 }", "var_name": "JAPANESE_PERSON_NAME_ASCII_BYTES"}, {"original_string": "private static final byte[] JAPANESE_PERSON_NAME_JISX0201_BYTES = {\n            (byte) 0xd4, (byte) 0xcf, (byte) 0xc0, (byte) 0xde, (byte) 0x5e,\n            (byte) 0xc0, (byte) 0xdb, (byte) 0xb3, (byte) 0x3d, (byte) 0x1b,\n            (byte) 0x24, (byte) 0x42, (byte) 0x3b, (byte) 0x33, (byte) 0x45,\n            (byte) 0x44, (byte) 0x1b, (byte) 0x28, (byte) 0x4a, (byte) 0x5e,\n            (byte) 0x1b, (byte) 0x24, (byte) 0x42, (byte) 0x42, (byte) 0x40,\n            (byte) 0x4f, (byte) 0x3a, (byte) 0x1b, (byte) 0x28, (byte) 0x4a,\n            (byte) 0x3d, (byte) 0x1b, (byte) 0x24, (byte) 0x42, (byte) 0x24,\n            (byte) 0x64, (byte) 0x24, (byte) 0x5e, (byte) 0x24, (byte) 0x40,\n            (byte) 0x1b, (byte) 0x28, (byte) 0x4a, (byte) 0x5e, (byte) 0x1b,\n            (byte) 0x24, (byte) 0x42, (byte) 0x24, (byte) 0x3f, (byte) 0x24,\n            (byte) 0x6d, (byte) 0x24, (byte) 0x26, (byte) 0x1b, (byte) 0x28,\n            (byte) 0x4a };", "modifier": "private static final", "type": "byte[]", "declarator": "JAPANESE_PERSON_NAME_JISX0201_BYTES = {\n            (byte) 0xd4, (byte) 0xcf, (byte) 0xc0, (byte) 0xde, (byte) 0x5e,\n            (byte) 0xc0, (byte) 0xdb, (byte) 0xb3, (byte) 0x3d, (byte) 0x1b,\n            (byte) 0x24, (byte) 0x42, (byte) 0x3b, (byte) 0x33, (byte) 0x45,\n            (byte) 0x44, (byte) 0x1b, (byte) 0x28, (byte) 0x4a, (byte) 0x5e,\n            (byte) 0x1b, (byte) 0x24, (byte) 0x42, (byte) 0x42, (byte) 0x40,\n            (byte) 0x4f, (byte) 0x3a, (byte) 0x1b, (byte) 0x28, (byte) 0x4a,\n            (byte) 0x3d, (byte) 0x1b, (byte) 0x24, (byte) 0x42, (byte) 0x24,\n            (byte) 0x64, (byte) 0x24, (byte) 0x5e, (byte) 0x24, (byte) 0x40,\n            (byte) 0x1b, (byte) 0x28, (byte) 0x4a, (byte) 0x5e, (byte) 0x1b,\n            (byte) 0x24, (byte) 0x42, (byte) 0x24, (byte) 0x3f, (byte) 0x24,\n            (byte) 0x6d, (byte) 0x24, (byte) 0x26, (byte) 0x1b, (byte) 0x28,\n            (byte) 0x4a }", "var_name": "JAPANESE_PERSON_NAME_JISX0201_BYTES"}, {"original_string": "private static final byte[] KOREAN_PERSON_NAME_BYTES = {\n            (byte) 0x48, (byte) 0x6f, (byte) 0x6e, (byte) 0x67, (byte) 0x5e,\n            (byte) 0x47, (byte) 0x69, (byte) 0x6c, (byte) 0x64, (byte) 0x6f,\n            (byte) 0x6e, (byte) 0x67, (byte) 0x3d, (byte) 0x1b, (byte) 0x24,\n            (byte) 0x29, (byte) 0x43, (byte) 0xfb, (byte) 0xf3, (byte) 0x5e,\n            (byte) 0x1b, (byte) 0x24, (byte) 0x29, (byte) 0x43, (byte) 0xd1,\n            (byte) 0xce, (byte) 0xd4, (byte) 0xd7, (byte) 0x3d, (byte) 0x1b,\n            (byte) 0x24, (byte) 0x29, (byte) 0x43, (byte) 0xc8, (byte) 0xab,\n            (byte) 0x5e, (byte) 0x1b, (byte) 0x24, (byte) 0x29, (byte) 0x43,\n            (byte) 0xb1, (byte) 0xe6, (byte) 0xb5, (byte) 0xbf };", "modifier": "private static final", "type": "byte[]", "declarator": "KOREAN_PERSON_NAME_BYTES = {\n            (byte) 0x48, (byte) 0x6f, (byte) 0x6e, (byte) 0x67, (byte) 0x5e,\n            (byte) 0x47, (byte) 0x69, (byte) 0x6c, (byte) 0x64, (byte) 0x6f,\n            (byte) 0x6e, (byte) 0x67, (byte) 0x3d, (byte) 0x1b, (byte) 0x24,\n            (byte) 0x29, (byte) 0x43, (byte) 0xfb, (byte) 0xf3, (byte) 0x5e,\n            (byte) 0x1b, (byte) 0x24, (byte) 0x29, (byte) 0x43, (byte) 0xd1,\n            (byte) 0xce, (byte) 0xd4, (byte) 0xd7, (byte) 0x3d, (byte) 0x1b,\n            (byte) 0x24, (byte) 0x29, (byte) 0x43, (byte) 0xc8, (byte) 0xab,\n            (byte) 0x5e, (byte) 0x1b, (byte) 0x24, (byte) 0x29, (byte) 0x43,\n            (byte) 0xb1, (byte) 0xe6, (byte) 0xb5, (byte) 0xbf }", "var_name": "KOREAN_PERSON_NAME_BYTES"}, {"original_string": "private static final byte[] KOREAN_LONG_TEXT_BYTES = {\n            (byte) 0x1b, (byte) 0x24, (byte) 0x29, (byte) 0x43, (byte) 0x54,\n            (byte) 0x68, (byte) 0x65, (byte) 0x20, (byte) 0x31, (byte) 0x73,\n            (byte) 0x74, (byte) 0x20, (byte) 0x6c, (byte) 0x69, (byte) 0x6e,\n            (byte) 0x65, (byte) 0x20, (byte) 0x69, (byte) 0x6e, (byte) 0x63,\n            (byte) 0x6c, (byte) 0x75, (byte) 0x64, (byte) 0x65, (byte) 0x73,\n            (byte) 0x20, (byte) 0xb1, (byte) 0xe6, (byte) 0xb5, (byte) 0xbf,\n            (byte) 0x2e, (byte) 0x0d, (byte) 0x0a, (byte) 0x1b, (byte) 0x24,\n            (byte) 0x29, (byte) 0x43, (byte) 0x54, (byte) 0x68, (byte) 0x65,\n            (byte) 0x20, (byte) 0x32, (byte) 0x6e, (byte) 0x64, (byte) 0x20,\n            (byte) 0x6c, (byte) 0x69, (byte) 0x6e, (byte) 0x65, (byte) 0x20,\n            (byte) 0x69, (byte) 0x6e, (byte) 0x63, (byte) 0x6c, (byte) 0x75,\n            (byte) 0x64, (byte) 0x65, (byte) 0x73, (byte) 0x20, (byte) 0xb1,\n            (byte) 0xe6, (byte) 0xb5, (byte) 0xbf, (byte) 0x2c, (byte) 0x20,\n            (byte) 0x74, (byte) 0x6f, (byte) 0x6f, (byte) 0x2e, (byte) 0x0d,\n            (byte) 0x0a, (byte) 0x54, (byte) 0x68, (byte) 0x65, (byte) 0x20,\n            (byte) 0x33, (byte) 0x72, (byte) 0x64, (byte) 0x20, (byte) 0x6c,\n            (byte) 0x69, (byte) 0x6e, (byte) 0x65, (byte) 0x2e };", "modifier": "private static final", "type": "byte[]", "declarator": "KOREAN_LONG_TEXT_BYTES = {\n            (byte) 0x1b, (byte) 0x24, (byte) 0x29, (byte) 0x43, (byte) 0x54,\n            (byte) 0x68, (byte) 0x65, (byte) 0x20, (byte) 0x31, (byte) 0x73,\n            (byte) 0x74, (byte) 0x20, (byte) 0x6c, (byte) 0x69, (byte) 0x6e,\n            (byte) 0x65, (byte) 0x20, (byte) 0x69, (byte) 0x6e, (byte) 0x63,\n            (byte) 0x6c, (byte) 0x75, (byte) 0x64, (byte) 0x65, (byte) 0x73,\n            (byte) 0x20, (byte) 0xb1, (byte) 0xe6, (byte) 0xb5, (byte) 0xbf,\n            (byte) 0x2e, (byte) 0x0d, (byte) 0x0a, (byte) 0x1b, (byte) 0x24,\n            (byte) 0x29, (byte) 0x43, (byte) 0x54, (byte) 0x68, (byte) 0x65,\n            (byte) 0x20, (byte) 0x32, (byte) 0x6e, (byte) 0x64, (byte) 0x20,\n            (byte) 0x6c, (byte) 0x69, (byte) 0x6e, (byte) 0x65, (byte) 0x20,\n            (byte) 0x69, (byte) 0x6e, (byte) 0x63, (byte) 0x6c, (byte) 0x75,\n            (byte) 0x64, (byte) 0x65, (byte) 0x73, (byte) 0x20, (byte) 0xb1,\n            (byte) 0xe6, (byte) 0xb5, (byte) 0xbf, (byte) 0x2c, (byte) 0x20,\n            (byte) 0x74, (byte) 0x6f, (byte) 0x6f, (byte) 0x2e, (byte) 0x0d,\n            (byte) 0x0a, (byte) 0x54, (byte) 0x68, (byte) 0x65, (byte) 0x20,\n            (byte) 0x33, (byte) 0x72, (byte) 0x64, (byte) 0x20, (byte) 0x6c,\n            (byte) 0x69, (byte) 0x6e, (byte) 0x65, (byte) 0x2e }", "var_name": "KOREAN_LONG_TEXT_BYTES"}, {"original_string": "private static final byte[] CHINESE_PERSON_NAME_GB2312_BYTES = {\n            (byte) 0x5A, (byte) 0x68, (byte) 0x61, (byte) 0x6E, (byte) 0x67,\n            (byte) 0x5E, (byte) 0x58, (byte) 0x69, (byte) 0x61, (byte) 0x6F,\n            (byte) 0x44, (byte) 0x6F, (byte) 0x6E, (byte) 0x67, (byte) 0x3D,\n            (byte) 0x1B, (byte) 0x24, (byte) 0x29, (byte) 0x41, (byte) 0xD5,\n            (byte) 0xC5, (byte) 0x5E, (byte) 0x1B, (byte) 0x24, (byte) 0x29,\n            (byte) 0x41, (byte) 0xD0, (byte) 0xA1, (byte) 0xB6, (byte) 0xAB,\n            (byte) 0x3D };", "modifier": "private static final", "type": "byte[]", "declarator": "CHINESE_PERSON_NAME_GB2312_BYTES = {\n            (byte) 0x5A, (byte) 0x68, (byte) 0x61, (byte) 0x6E, (byte) 0x67,\n            (byte) 0x5E, (byte) 0x58, (byte) 0x69, (byte) 0x61, (byte) 0x6F,\n            (byte) 0x44, (byte) 0x6F, (byte) 0x6E, (byte) 0x67, (byte) 0x3D,\n            (byte) 0x1B, (byte) 0x24, (byte) 0x29, (byte) 0x41, (byte) 0xD5,\n            (byte) 0xC5, (byte) 0x5E, (byte) 0x1B, (byte) 0x24, (byte) 0x29,\n            (byte) 0x41, (byte) 0xD0, (byte) 0xA1, (byte) 0xB6, (byte) 0xAB,\n            (byte) 0x3D }", "var_name": "CHINESE_PERSON_NAME_GB2312_BYTES"}, {"original_string": "private static final byte[] CHINESE_LONG_TEXT_GB2312_BYTES = {\n            (byte) 0x1B, (byte) 0x24, (byte) 0x29, (byte) 0x41, (byte) 0x31,\n            (byte) 0x2E, (byte) 0xB5, (byte) 0xDA, (byte) 0xD2, (byte) 0xBB,\n            (byte) 0xD0, (byte) 0xD0, (byte) 0xCE, (byte) 0xC4, (byte) 0xD7,\n            (byte) 0xD6, (byte) 0xA1, (byte) 0xA3, (byte) 0x0D, (byte) 0x0A,\n            (byte) 0x1B, (byte) 0x24, (byte) 0x29, (byte) 0x41, (byte) 0x32,\n            (byte) 0x2E, (byte) 0xB5, (byte) 0xDA, (byte) 0xD2, (byte) 0xBB,\n            (byte) 0xD0, (byte) 0xD0, (byte) 0xCE, (byte) 0xC4, (byte) 0xD7,\n            (byte) 0xD6, (byte) 0xA1, (byte) 0xA3, (byte) 0x0D, (byte) 0x0A,\n            (byte) 0x1B, (byte) 0x24, (byte) 0x29, (byte) 0x41, (byte) 0x33,\n            (byte) 0x2E, (byte) 0xB5, (byte) 0xDA, (byte) 0xD2, (byte) 0xBB,\n            (byte) 0xD0, (byte) 0xD0, (byte) 0xCE, (byte) 0xC4, (byte) 0xD7,\n            (byte) 0xD6, (byte) 0xA1, (byte) 0xA3, (byte) 0x0D, (byte) 0x0A };", "modifier": "private static final", "type": "byte[]", "declarator": "CHINESE_LONG_TEXT_GB2312_BYTES = {\n            (byte) 0x1B, (byte) 0x24, (byte) 0x29, (byte) 0x41, (byte) 0x31,\n            (byte) 0x2E, (byte) 0xB5, (byte) 0xDA, (byte) 0xD2, (byte) 0xBB,\n            (byte) 0xD0, (byte) 0xD0, (byte) 0xCE, (byte) 0xC4, (byte) 0xD7,\n            (byte) 0xD6, (byte) 0xA1, (byte) 0xA3, (byte) 0x0D, (byte) 0x0A,\n            (byte) 0x1B, (byte) 0x24, (byte) 0x29, (byte) 0x41, (byte) 0x32,\n            (byte) 0x2E, (byte) 0xB5, (byte) 0xDA, (byte) 0xD2, (byte) 0xBB,\n            (byte) 0xD0, (byte) 0xD0, (byte) 0xCE, (byte) 0xC4, (byte) 0xD7,\n            (byte) 0xD6, (byte) 0xA1, (byte) 0xA3, (byte) 0x0D, (byte) 0x0A,\n            (byte) 0x1B, (byte) 0x24, (byte) 0x29, (byte) 0x41, (byte) 0x33,\n            (byte) 0x2E, (byte) 0xB5, (byte) 0xDA, (byte) 0xD2, (byte) 0xBB,\n            (byte) 0xD0, (byte) 0xD0, (byte) 0xCE, (byte) 0xC4, (byte) 0xD7,\n            (byte) 0xD6, (byte) 0xA1, (byte) 0xA3, (byte) 0x0D, (byte) 0x0A }", "var_name": "CHINESE_LONG_TEXT_GB2312_BYTES"}, {"original_string": "private static final byte[] CHINESE_PERSON_NAME_UTF8_BYTES = {\n            (byte) 0x57, (byte) 0x61, (byte) 0x6e, (byte) 0x67, (byte) 0x5e,\n            (byte) 0x58, (byte) 0x69, (byte) 0x61, (byte) 0x6f, (byte) 0x44,\n            (byte) 0x6f, (byte) 0x6e, (byte) 0x67, (byte) 0x3d, (byte) 0xe7,\n            (byte) 0x8e, (byte) 0x8b, (byte) 0x5e, (byte) 0xe5, (byte) 0xb0,\n            (byte) 0x8f, (byte) 0xe6, (byte) 0x9d, (byte) 0xb1, (byte) 0x3d };", "modifier": "private static final", "type": "byte[]", "declarator": "CHINESE_PERSON_NAME_UTF8_BYTES = {\n            (byte) 0x57, (byte) 0x61, (byte) 0x6e, (byte) 0x67, (byte) 0x5e,\n            (byte) 0x58, (byte) 0x69, (byte) 0x61, (byte) 0x6f, (byte) 0x44,\n            (byte) 0x6f, (byte) 0x6e, (byte) 0x67, (byte) 0x3d, (byte) 0xe7,\n            (byte) 0x8e, (byte) 0x8b, (byte) 0x5e, (byte) 0xe5, (byte) 0xb0,\n            (byte) 0x8f, (byte) 0xe6, (byte) 0x9d, (byte) 0xb1, (byte) 0x3d }", "var_name": "CHINESE_PERSON_NAME_UTF8_BYTES"}, {"original_string": "private static final byte[] CHINESE_PERSON_NAME_GB18030_BYTES = {\n            (byte) 0x57, (byte) 0x61, (byte) 0x6e, (byte) 0x67, (byte) 0x5e,\n            (byte) 0x58, (byte) 0x69, (byte) 0x61, (byte) 0x6f, (byte) 0x44,\n            (byte) 0x6f, (byte) 0x6e, (byte) 0x67, (byte) 0x3d, (byte) 0xcd,\n            (byte) 0xf5, (byte) 0x5e, (byte) 0xd0, (byte) 0xa1, (byte) 0xb6,\n            (byte) 0xab, (byte) 0x3d };", "modifier": "private static final", "type": "byte[]", "declarator": "CHINESE_PERSON_NAME_GB18030_BYTES = {\n            (byte) 0x57, (byte) 0x61, (byte) 0x6e, (byte) 0x67, (byte) 0x5e,\n            (byte) 0x58, (byte) 0x69, (byte) 0x61, (byte) 0x6f, (byte) 0x44,\n            (byte) 0x6f, (byte) 0x6e, (byte) 0x67, (byte) 0x3d, (byte) 0xcd,\n            (byte) 0xf5, (byte) 0x5e, (byte) 0xd0, (byte) 0xa1, (byte) 0xb6,\n            (byte) 0xab, (byte) 0x3d }", "var_name": "CHINESE_PERSON_NAME_GB18030_BYTES"}, {"original_string": "private static final byte[] FINNISH_PERSON_NAME_8859_15_BYTES = {\n            (byte) 0xa6, (byte) 0x69, (byte) 0xa8, (byte) 0x6b, (byte) 0x69,\n            (byte) 0x6e, (byte) 0x6f, (byte) 0x5e, (byte) 0xb4, (byte) 0x75,\n            (byte) 0xb8, (byte) 0x61 };", "modifier": "private static final", "type": "byte[]", "declarator": "FINNISH_PERSON_NAME_8859_15_BYTES = {\n            (byte) 0xa6, (byte) 0x69, (byte) 0xa8, (byte) 0x6b, (byte) 0x69,\n            (byte) 0x6e, (byte) 0x6f, (byte) 0x5e, (byte) 0xb4, (byte) 0x75,\n            (byte) 0xb8, (byte) 0x61 }", "var_name": "FINNISH_PERSON_NAME_8859_15_BYTES"}, {"original_string": "private static final byte[] FINNISH_PERSON_NAME_WINDOWS_1252_BYTE = {\n            (byte) 0x8a, (byte) 0x69, (byte) 0x9a, (byte) 0x6b, (byte) 0x69,\n            (byte) 0x6e, (byte) 0x6f, (byte) 0x5e, (byte) 0x8e, (byte) 0x75,\n            (byte) 0x9e, (byte) 0x61 };", "modifier": "private static final", "type": "byte[]", "declarator": "FINNISH_PERSON_NAME_WINDOWS_1252_BYTE = {\n            (byte) 0x8a, (byte) 0x69, (byte) 0x9a, (byte) 0x6b, (byte) 0x69,\n            (byte) 0x6e, (byte) 0x6f, (byte) 0x5e, (byte) 0x8e, (byte) 0x75,\n            (byte) 0x9e, (byte) 0x61 }", "var_name": "FINNISH_PERSON_NAME_WINDOWS_1252_BYTE"}], "file": "dcm4che-core/src/test/java/org/dcm4che3/data/SpecificCharacterSetTest.java"}, "test_case": {"identifier": "testEncodeGreekPersonName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEncodeGreekPersonName() {\n        assertArrayEquals(GREEK_PERSON_NAME_BYTE,\n                iso8859_7().encode(GREEK_PERSON_NAME, PN_DELIMS));\n    }", "signature": "void testEncodeGreekPersonName()", "full_signature": "@Test public void testEncodeGreekPersonName()", "class_method_signature": "SpecificCharacterSetTest.testEncodeGreekPersonName()", "testcase": true, "constructor": false, "invocations": ["assertArrayEquals", "encode", "iso8859_7"]}, "focal_class": {"identifier": "SpecificCharacterSet", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(SpecificCharacterSet.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(SpecificCharacterSet.class)", "var_name": "LOG"}, {"original_string": "public static final SpecificCharacterSet ASCII = new SpecificCharacterSet(new Codec[]{Codec.ISO_646});", "modifier": "public static final", "type": "SpecificCharacterSet", "declarator": "ASCII = new SpecificCharacterSet(new Codec[]{Codec.ISO_646})", "var_name": "ASCII"}, {"original_string": "private static SpecificCharacterSet DEFAULT = ASCII;", "modifier": "private static", "type": "SpecificCharacterSet", "declarator": "DEFAULT = ASCII", "var_name": "DEFAULT"}, {"original_string": "private static final ThreadLocal<SoftReference<Encoder>> cachedEncoder1 = new ThreadLocal<SoftReference<Encoder>>();", "modifier": "private static final", "type": "ThreadLocal<SoftReference<Encoder>>", "declarator": "cachedEncoder1 = new ThreadLocal<SoftReference<Encoder>>()", "var_name": "cachedEncoder1"}, {"original_string": "private static final ThreadLocal<SoftReference<Encoder>> cachedEncoder2 = new ThreadLocal<SoftReference<Encoder>>();", "modifier": "private static final", "type": "ThreadLocal<SoftReference<Encoder>>", "declarator": "cachedEncoder2 = new ThreadLocal<SoftReference<Encoder>>()", "var_name": "cachedEncoder2"}, {"original_string": "protected final Codec[] codecs;", "modifier": "protected final", "type": "Codec[]", "declarator": "codecs", "var_name": "codecs"}, {"original_string": "protected final String[] dicomCodes;", "modifier": "protected final", "type": "String[]", "declarator": "dicomCodes", "var_name": "dicomCodes"}], "methods": [{"identifier": "getDefaultCharacterSet", "parameters": "()", "modifiers": "public static", "return": "SpecificCharacterSet", "signature": "SpecificCharacterSet getDefaultCharacterSet()", "full_signature": "public static SpecificCharacterSet getDefaultCharacterSet()", "class_method_signature": "SpecificCharacterSet.getDefaultCharacterSet()", "testcase": false, "constructor": false}, {"identifier": "setDefaultCharacterSet", "parameters": "(String code)", "modifiers": "public static", "return": "void", "signature": "void setDefaultCharacterSet(String code)", "full_signature": "public static void setDefaultCharacterSet(String code)", "class_method_signature": "SpecificCharacterSet.setDefaultCharacterSet(String code)", "testcase": false, "constructor": false}, {"identifier": "setCharsetNameMapping", "parameters": "(String code, String charsetName)", "modifiers": "public static", "return": "void", "signature": "void setCharsetNameMapping(String code, String charsetName)", "full_signature": "public static void setCharsetNameMapping(String code, String charsetName)", "class_method_signature": "SpecificCharacterSet.setCharsetNameMapping(String code, String charsetName)", "testcase": false, "constructor": false}, {"identifier": "resetCharsetNameMappings", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void resetCharsetNameMappings()", "full_signature": "public static void resetCharsetNameMappings()", "class_method_signature": "SpecificCharacterSet.resetCharsetNameMappings()", "testcase": false, "constructor": false}, {"identifier": "checkSpecificCharacterSet", "parameters": "(String code)", "modifiers": "public static", "return": "String", "signature": "String checkSpecificCharacterSet(String code)", "full_signature": "public static String checkSpecificCharacterSet(String code)", "class_method_signature": "SpecificCharacterSet.checkSpecificCharacterSet(String code)", "testcase": false, "constructor": false}, {"identifier": "checkCharsetName", "parameters": "(String charsetName)", "modifiers": "public static", "return": "String", "signature": "String checkCharsetName(String charsetName)", "full_signature": "public static String checkCharsetName(String charsetName)", "class_method_signature": "SpecificCharacterSet.checkCharsetName(String charsetName)", "testcase": false, "constructor": false}, {"identifier": "valueOf", "parameters": "(String... codes)", "modifiers": "public static", "return": "SpecificCharacterSet", "signature": "SpecificCharacterSet valueOf(String... codes)", "full_signature": "public static SpecificCharacterSet valueOf(String... codes)", "class_method_signature": "SpecificCharacterSet.valueOf(String... codes)", "testcase": false, "constructor": false}, {"identifier": "trimISO2022", "parameters": "(String[] codes)", "modifiers": "public static", "return": "boolean", "signature": "boolean trimISO2022(String[] codes)", "full_signature": "public static boolean trimISO2022(String[] codes)", "class_method_signature": "SpecificCharacterSet.trimISO2022(String[] codes)", "testcase": false, "constructor": false}, {"identifier": "checkISO2022", "parameters": "(String[] codes)", "modifiers": "private static", "return": "String[]", "signature": "String[] checkISO2022(String[] codes)", "full_signature": "private static String[] checkISO2022(String[] codes)", "class_method_signature": "SpecificCharacterSet.checkISO2022(String[] codes)", "testcase": false, "constructor": false}, {"identifier": "toCodes", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] toCodes()", "full_signature": "public String[] toCodes()", "class_method_signature": "SpecificCharacterSet.toCodes()", "testcase": false, "constructor": false}, {"identifier": "encoder", "parameters": "(ThreadLocal<SoftReference<Encoder>> tl,\n            Codec codec)", "modifiers": "private static", "return": "Encoder", "signature": "Encoder encoder(ThreadLocal<SoftReference<Encoder>> tl,\n            Codec codec)", "full_signature": "private static Encoder encoder(ThreadLocal<SoftReference<Encoder>> tl,\n            Codec codec)", "class_method_signature": "SpecificCharacterSet.encoder(ThreadLocal<SoftReference<Encoder>> tl,\n            Codec codec)", "testcase": false, "constructor": false}, {"identifier": "SpecificCharacterSet", "parameters": "(Codec[] codecs, String... codes)", "modifiers": "protected", "return": "", "signature": " SpecificCharacterSet(Codec[] codecs, String... codes)", "full_signature": "protected  SpecificCharacterSet(Codec[] codecs, String... codes)", "class_method_signature": "SpecificCharacterSet.SpecificCharacterSet(Codec[] codecs, String... codes)", "testcase": false, "constructor": true}, {"identifier": "encode", "parameters": "(String val, String delimiters)", "modifiers": "public", "return": "byte[]", "signature": "byte[] encode(String val, String delimiters)", "full_signature": "public byte[] encode(String val, String delimiters)", "class_method_signature": "SpecificCharacterSet.encode(String val, String delimiters)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(byte[] val)", "modifiers": "public", "return": "String", "signature": "String decode(byte[] val)", "full_signature": "public String decode(byte[] val)", "class_method_signature": "SpecificCharacterSet.decode(byte[] val)", "testcase": false, "constructor": false}, {"identifier": "isUTF8", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isUTF8()", "full_signature": "public boolean isUTF8()", "class_method_signature": "SpecificCharacterSet.isUTF8()", "testcase": false, "constructor": false}, {"identifier": "isASCII", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isASCII()", "full_signature": "public boolean isASCII()", "class_method_signature": "SpecificCharacterSet.isASCII()", "testcase": false, "constructor": false}, {"identifier": "containsASCII", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean containsASCII()", "full_signature": "public boolean containsASCII()", "class_method_signature": "SpecificCharacterSet.containsASCII()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(SpecificCharacterSet other)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(SpecificCharacterSet other)", "full_signature": "public boolean contains(SpecificCharacterSet other)", "class_method_signature": "SpecificCharacterSet.contains(SpecificCharacterSet other)", "testcase": false, "constructor": false}, {"identifier": "toText", "parameters": "(String s)", "modifiers": "public", "return": "String", "signature": "String toText(String s)", "full_signature": "public String toText(String s)", "class_method_signature": "SpecificCharacterSet.toText(String s)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "SpecificCharacterSet.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SpecificCharacterSet.hashCode()", "testcase": false, "constructor": false}], "file": "dcm4che-core/src/main/java/org/dcm4che3/data/SpecificCharacterSet.java"}, "focal_method": {"identifier": "encode", "parameters": "(String val, String delimiters)", "modifiers": "public", "return": "byte[]", "body": "public byte[] encode(String val, String delimiters) {\n        return codecs[0].encode(val);\n    }", "signature": "byte[] encode(String val, String delimiters)", "full_signature": "public byte[] encode(String val, String delimiters)", "class_method_signature": "SpecificCharacterSet.encode(String val, String delimiters)", "testcase": false, "constructor": false, "invocations": ["encode"]}, "repository": {"repo_id": 912291, "url": "https://github.com/dcm4che/dcm4che", "stars": 573, "created": "9/15/2010 11:13:55 AM +00:00", "updates": "2020-01-27T15:08:39+00:00", "fork": "False", "license": "licensed"}}