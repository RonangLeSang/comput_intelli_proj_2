{"test_class": {"identifier": "IntHashMapTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IntHashMap<Integer> map;", "modifier": "private", "type": "IntHashMap<Integer>", "declarator": "map", "var_name": "map"}], "file": "dcm4che-core/src/test/java/org/dcm4che3/util/IntHashMapTest.java"}, "test_case": {"identifier": "testRemove", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRemove() {\n        for (int i = 1; i < 45; i += 2)\n            if ((i % 3) == 1)\n                assertEquals(Integer.valueOf(i), map.remove(i));\n            else\n                assertNull(map.remove(i));\n    }", "signature": "void testRemove()", "full_signature": "@Test public void testRemove()", "class_method_signature": "IntHashMapTest.testRemove()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "valueOf", "remove", "assertNull", "remove"]}, "focal_class": {"identifier": "IntHashMap", "superclass": "", "interfaces": "implements Cloneable, java.io.Serializable", "fields": [{"original_string": "private static final int DEFAULT_CAPACITY = 32;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_CAPACITY = 32", "var_name": "DEFAULT_CAPACITY"}, {"original_string": "private static final int MINIMUM_CAPACITY = 4;", "modifier": "private static final", "type": "int", "declarator": "MINIMUM_CAPACITY = 4", "var_name": "MINIMUM_CAPACITY"}, {"original_string": "private static final int MAXIMUM_CAPACITY = 1 << 30;", "modifier": "private static final", "type": "int", "declarator": "MAXIMUM_CAPACITY = 1 << 30", "var_name": "MAXIMUM_CAPACITY"}, {"original_string": "private static final byte FREE = 0;", "modifier": "private static final", "type": "byte", "declarator": "FREE = 0", "var_name": "FREE"}, {"original_string": "private static final byte FULL = 1;", "modifier": "private static final", "type": "byte", "declarator": "FULL = 1", "var_name": "FULL"}, {"original_string": "private static final byte REMOVED = -1;", "modifier": "private static final", "type": "byte", "declarator": "REMOVED = -1", "var_name": "REMOVED"}, {"original_string": "private transient int[] keys;", "modifier": "private transient", "type": "int[]", "declarator": "keys", "var_name": "keys"}, {"original_string": "private transient Object[] values;", "modifier": "private transient", "type": "Object[]", "declarator": "values", "var_name": "values"}, {"original_string": "private transient byte[] states;", "modifier": "private transient", "type": "byte[]", "declarator": "states", "var_name": "states"}, {"original_string": "private transient int free;", "modifier": "private transient", "type": "int", "declarator": "free", "var_name": "free"}, {"original_string": "private transient int size;", "modifier": "private transient", "type": "int", "declarator": "size", "var_name": "size"}, {"original_string": "private static final long serialVersionUID = 9153226350279204066L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 9153226350279204066L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "IntHashMap", "parameters": "()", "modifiers": "public", "return": "", "signature": " IntHashMap()", "full_signature": "public  IntHashMap()", "class_method_signature": "IntHashMap.IntHashMap()", "testcase": false, "constructor": true}, {"identifier": "IntHashMap", "parameters": "(int expectedMaxSize)", "modifiers": "public", "return": "", "signature": " IntHashMap(int expectedMaxSize)", "full_signature": "public  IntHashMap(int expectedMaxSize)", "class_method_signature": "IntHashMap.IntHashMap(int expectedMaxSize)", "testcase": false, "constructor": true}, {"identifier": "capacity", "parameters": "(int expectedMaxSize)", "modifiers": "private", "return": "int", "signature": "int capacity(int expectedMaxSize)", "full_signature": "private int capacity(int expectedMaxSize)", "class_method_signature": "IntHashMap.capacity(int expectedMaxSize)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(int initCapacity)", "modifiers": "private", "return": "void", "signature": "void init(int initCapacity)", "full_signature": "private void init(int initCapacity)", "class_method_signature": "IntHashMap.init(int initCapacity)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "IntHashMap.size()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "IntHashMap.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int key)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "V", "signature": "V get(int key)", "full_signature": "@SuppressWarnings(\"unchecked\") public V get(int key)", "class_method_signature": "IntHashMap.get(int key)", "testcase": false, "constructor": false}, {"identifier": "containsKey", "parameters": "(int key)", "modifiers": "public", "return": "boolean", "signature": "boolean containsKey(int key)", "full_signature": "public boolean containsKey(int key)", "class_method_signature": "IntHashMap.containsKey(int key)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(int key, V value)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "V", "signature": "V put(int key, V value)", "full_signature": "@SuppressWarnings(\"unchecked\") public V put(int key, V value)", "class_method_signature": "IntHashMap.put(int key, V value)", "testcase": false, "constructor": false}, {"identifier": "trimToSize", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void trimToSize()", "full_signature": "public void trimToSize()", "class_method_signature": "IntHashMap.trimToSize()", "testcase": false, "constructor": false}, {"identifier": "rehash", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void rehash()", "full_signature": "public void rehash()", "class_method_signature": "IntHashMap.rehash()", "testcase": false, "constructor": false}, {"identifier": "resize", "parameters": "(int newLength)", "modifiers": "private", "return": "void", "signature": "void resize(int newLength)", "full_signature": "private void resize(int newLength)", "class_method_signature": "IntHashMap.resize(int newLength)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(int key)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "V", "signature": "V remove(int key)", "full_signature": "@SuppressWarnings(\"unchecked\") public V remove(int key)", "class_method_signature": "IntHashMap.remove(int key)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "IntHashMap.clear()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "Object", "signature": "Object clone()", "full_signature": "@SuppressWarnings(\"unchecked\") public Object clone()", "class_method_signature": "IntHashMap.clone()", "testcase": false, "constructor": false}, {"identifier": "accept", "parameters": "(Visitor<V> visitor)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "boolean", "signature": "boolean accept(Visitor<V> visitor)", "full_signature": "@SuppressWarnings(\"unchecked\") public boolean accept(Visitor<V> visitor)", "class_method_signature": "IntHashMap.accept(Visitor<V> visitor)", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(java.io.ObjectOutputStream s)", "modifiers": "private", "return": "void", "signature": "void writeObject(java.io.ObjectOutputStream s)", "full_signature": "private void writeObject(java.io.ObjectOutputStream s)", "class_method_signature": "IntHashMap.writeObject(java.io.ObjectOutputStream s)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(java.io.ObjectInputStream s)", "modifiers": "private", "return": "void", "signature": "void readObject(java.io.ObjectInputStream s)", "full_signature": "private void readObject(java.io.ObjectInputStream s)", "class_method_signature": "IntHashMap.readObject(java.io.ObjectInputStream s)", "testcase": false, "constructor": false}], "file": "dcm4che-core/src/main/java/org/dcm4che3/util/IntHashMap.java"}, "focal_method": {"identifier": "remove", "parameters": "(int key)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "V", "body": "@SuppressWarnings(\"unchecked\")\n    public V remove(int key) {\n        byte[] states = this.states;\n        int[] keys = this.keys;\n        int mask = keys.length - 1;\n        int i = key & mask;\n        while (states[i] != FREE) {\n            if (keys[i] == key) {\n                if (states[i] < FREE) // states[i] == REMOVED\n                    return null;\n\n                states[i] = REMOVED;\n                V oldValue = (V) values[i];\n                values[i] = null;\n                size--;\n                return oldValue;\n            }\n            i = (i + 1) & mask;\n        }\n        return null;\n    }", "signature": "V remove(int key)", "full_signature": "@SuppressWarnings(\"unchecked\") public V remove(int key)", "class_method_signature": "IntHashMap.remove(int key)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 912291, "url": "https://github.com/dcm4che/dcm4che", "stars": 573, "created": "9/15/2010 11:13:55 AM +00:00", "updates": "2020-01-27T15:08:39+00:00", "fork": "False", "license": "licensed"}}