{"test_class": {"identifier": "WSDLToServiceProcessorTest", "superclass": "extends ProcessorTestBase", "interfaces": "", "fields": [], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/tools/wsdlto/misc/src/test/java/org/apache/cxf/tools/misc/processor/WSDLToServiceProcessorTest.java"}, "test_case": {"identifier": "testServiceExist", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testServiceExist() throws Exception {\n\n        WSDLToServiceProcessor processor = new WSDLToServiceProcessor();\n\n        env.put(ToolConstants.CFG_WSDLURL, getLocation(\"/misctools_wsdl/hello_world.wsdl\"));\n        env.put(ToolConstants.CFG_TRANSPORT, new String(\"http\"));\n        env.put(ToolConstants.CFG_SERVICE, new String(\"SOAPService_Test1\"));\n        env.put(ToolConstants.CFG_PORT, new String(\"SoapPort_Test1\"));\n        env.put(ToolConstants.CFG_BINDING_ATTR, new String(\"Greeter_SOAPBinding\"));\n\n        processor.setEnvironment(env);\n\n        try {\n            processor.process();\n            fail(\"Do not catch expected tool exception for service and port exist\");\n        } catch (Exception e) {\n            if (!(e instanceof ToolException && e.toString()\n                .indexOf(\"Input service and port already exist in imported contract\") >= 0)) {\n                fail(\"Do not catch tool exception for service and port exist, \"\n                     + \"catch other unexpected exception!\");\n            }\n        }\n    }", "signature": "void testServiceExist()", "full_signature": "@Test public void testServiceExist()", "class_method_signature": "WSDLToServiceProcessorTest.testServiceExist()", "testcase": true, "constructor": false, "invocations": ["put", "getLocation", "put", "put", "put", "put", "setEnvironment", "process", "fail", "indexOf", "toString", "fail"]}, "focal_class": {"identifier": "WSDLToServiceProcessor", "superclass": "extends AbstractWSDLToProcessor", "interfaces": "", "fields": [{"original_string": "private static final String NEW_FILE_NAME_MODIFIER = \"-service\";", "modifier": "private static final", "type": "String", "declarator": "NEW_FILE_NAME_MODIFIER = \"-service\"", "var_name": "NEW_FILE_NAME_MODIFIER"}, {"original_string": "private Map<QName, Service> services;", "modifier": "private", "type": "Map<QName, Service>", "declarator": "services", "var_name": "services"}, {"original_string": "private Service service;", "modifier": "private", "type": "Service", "declarator": "service", "var_name": "service"}, {"original_string": "private Map<String, Port> ports;", "modifier": "private", "type": "Map<String, Port>", "declarator": "ports", "var_name": "ports"}, {"original_string": "private Port port;", "modifier": "private", "type": "Port", "declarator": "port", "var_name": "port"}, {"original_string": "private Binding binding;", "modifier": "private", "type": "Binding", "declarator": "binding", "var_name": "binding"}], "methods": [{"identifier": "process", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void process()", "full_signature": "public void process()", "class_method_signature": "WSDLToServiceProcessor.process()", "testcase": false, "constructor": false}, {"identifier": "isServicePortExisted", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isServicePortExisted()", "full_signature": "private boolean isServicePortExisted()", "class_method_signature": "WSDLToServiceProcessor.isServicePortExisted()", "testcase": false, "constructor": false}, {"identifier": "isServiceExisted", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isServiceExisted()", "full_signature": "private boolean isServiceExisted()", "class_method_signature": "WSDLToServiceProcessor.isServiceExisted()", "testcase": false, "constructor": false}, {"identifier": "isPortExisted", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isPortExisted()", "full_signature": "private boolean isPortExisted()", "class_method_signature": "WSDLToServiceProcessor.isPortExisted()", "testcase": false, "constructor": false}, {"identifier": "isBindingExisted", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isBindingExisted()", "full_signature": "private boolean isBindingExisted()", "class_method_signature": "WSDLToServiceProcessor.isBindingExisted()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void init()", "full_signature": "protected void init()", "class_method_signature": "WSDLToServiceProcessor.init()", "testcase": false, "constructor": false}, {"identifier": "doAppendService", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void doAppendService()", "full_signature": "private void doAppendService()", "class_method_signature": "WSDLToServiceProcessor.doAppendService()", "testcase": false, "constructor": false}, {"identifier": "setAddrElement", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setAddrElement()", "full_signature": "private void setAddrElement()", "class_method_signature": "WSDLToServiceProcessor.setAddrElement()", "testcase": false, "constructor": false}], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/tools/wsdlto/misc/src/main/java/org/apache/cxf/tools/misc/processor/WSDLToServiceProcessor.java"}, "focal_method": {"identifier": "process", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void process() throws ToolException {\n        init();\n        if (isServicePortExisted()) {\n            Message msg = new Message(\"SERVICE_PORT_EXIST\", LOG);\n            throw new ToolException(msg);\n        }\n        if (!isBindingExisted()) {\n            Message msg = new Message(\"BINDING_NOT_EXIST\", LOG);\n            throw new ToolException(msg);\n        }\n        doAppendService();\n    }", "signature": "void process()", "full_signature": "public void process()", "class_method_signature": "WSDLToServiceProcessor.process()", "testcase": false, "constructor": false, "invocations": ["init", "isServicePortExisted", "isBindingExisted", "doAppendService"]}, "repository": {"repo_id": 6822394, "url": "https://github.com/jerrtop/Java_demo_set", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 13, "size": 123833, "license": "licensed"}}