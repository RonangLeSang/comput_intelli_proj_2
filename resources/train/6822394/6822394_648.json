{"test_class": {"identifier": "JettyHTTPDestinationTest", "superclass": "extends Assert", "interfaces": "", "fields": [{"original_string": "protected static final String AUTH_HEADER = \"Authorization\";", "modifier": "protected static final", "type": "String", "declarator": "AUTH_HEADER = \"Authorization\"", "var_name": "AUTH_HEADER"}, {"original_string": "protected static final String USER = \"copernicus\";", "modifier": "protected static final", "type": "String", "declarator": "USER = \"copernicus\"", "var_name": "USER"}, {"original_string": "protected static final String PASSWD = \"epicycles\";", "modifier": "protected static final", "type": "String", "declarator": "PASSWD = \"epicycles\"", "var_name": "PASSWD"}, {"original_string": "protected static final String BASIC_AUTH =\n        \"Basic \" + Base64Utility.encode((USER + \":\" + PASSWD).getBytes());", "modifier": "protected static final", "type": "String", "declarator": "BASIC_AUTH =\n        \"Basic \" + Base64Utility.encode((USER + \":\" + PASSWD).getBytes())", "var_name": "BASIC_AUTH"}, {"original_string": "private static final String NOWHERE = \"http://nada.nothing.nowhere.null/\";", "modifier": "private static final", "type": "String", "declarator": "NOWHERE = \"http://nada.nothing.nowhere.null/\"", "var_name": "NOWHERE"}, {"original_string": "private static final String PAYLOAD = \"message payload\";", "modifier": "private static final", "type": "String", "declarator": "PAYLOAD = \"message payload\"", "var_name": "PAYLOAD"}, {"original_string": "private static final String CHALLENGE_HEADER = \"WWW-Authenticate\";", "modifier": "private static final", "type": "String", "declarator": "CHALLENGE_HEADER = \"WWW-Authenticate\"", "var_name": "CHALLENGE_HEADER"}, {"original_string": "private static final String BASIC_CHALLENGE = \"Basic realm=terra\";", "modifier": "private static final", "type": "String", "declarator": "BASIC_CHALLENGE = \"Basic realm=terra\"", "var_name": "BASIC_CHALLENGE"}, {"original_string": "private static final String DIGEST_CHALLENGE = \"Digest realm=luna\";", "modifier": "private static final", "type": "String", "declarator": "DIGEST_CHALLENGE = \"Digest realm=luna\"", "var_name": "DIGEST_CHALLENGE"}, {"original_string": "private static final String CUSTOM_CHALLENGE = \"Custom realm=sol\";", "modifier": "private static final", "type": "String", "declarator": "CUSTOM_CHALLENGE = \"Custom realm=sol\"", "var_name": "CUSTOM_CHALLENGE"}, {"original_string": "private Bus bus;", "modifier": "private", "type": "Bus", "declarator": "bus", "var_name": "bus"}, {"original_string": "private Bus threadDefaultBus;", "modifier": "private", "type": "Bus", "declarator": "threadDefaultBus", "var_name": "threadDefaultBus"}, {"original_string": "private Conduit decoupledBackChannel;", "modifier": "private", "type": "Conduit", "declarator": "decoupledBackChannel", "var_name": "decoupledBackChannel"}, {"original_string": "private EndpointInfo endpointInfo;", "modifier": "private", "type": "EndpointInfo", "declarator": "endpointInfo", "var_name": "endpointInfo"}, {"original_string": "private EndpointReferenceType address;", "modifier": "private", "type": "EndpointReferenceType", "declarator": "address", "var_name": "address"}, {"original_string": "private EndpointReferenceType replyTo;", "modifier": "private", "type": "EndpointReferenceType", "declarator": "replyTo", "var_name": "replyTo"}, {"original_string": "private JettyHTTPServerEngine engine;", "modifier": "private", "type": "JettyHTTPServerEngine", "declarator": "engine", "var_name": "engine"}, {"original_string": "private HTTPServerPolicy policy;", "modifier": "private", "type": "HTTPServerPolicy", "declarator": "policy", "var_name": "policy"}, {"original_string": "private JettyHTTPDestination destination;", "modifier": "private", "type": "JettyHTTPDestination", "declarator": "destination", "var_name": "destination"}, {"original_string": "private Request request;", "modifier": "private", "type": "Request", "declarator": "request", "var_name": "request"}, {"original_string": "private Response response;", "modifier": "private", "type": "Response", "declarator": "response", "var_name": "response"}, {"original_string": "private Message inMessage;", "modifier": "private", "type": "Message", "declarator": "inMessage", "var_name": "inMessage"}, {"original_string": "private Message outMessage;", "modifier": "private", "type": "Message", "declarator": "outMessage", "var_name": "outMessage"}, {"original_string": "private MessageObserver observer;", "modifier": "private", "type": "MessageObserver", "declarator": "observer", "var_name": "observer"}, {"original_string": "private ServletInputStream is;", "modifier": "private", "type": "ServletInputStream", "declarator": "is", "var_name": "is"}, {"original_string": "private ServletOutputStream os;", "modifier": "private", "type": "ServletOutputStream", "declarator": "os", "var_name": "os"}, {"original_string": "private QueryHandler wsdlQueryHandler;", "modifier": "private", "type": "QueryHandler", "declarator": "wsdlQueryHandler", "var_name": "wsdlQueryHandler"}, {"original_string": "private QueryHandlerRegistry  queryHandlerRegistry;", "modifier": "private", "type": "QueryHandlerRegistry", "declarator": "queryHandlerRegistry", "var_name": "queryHandlerRegistry"}, {"original_string": "private List<QueryHandler> queryHandlerList;", "modifier": "private", "type": "List<QueryHandler>", "declarator": "queryHandlerList", "var_name": "queryHandlerList"}, {"original_string": "private HTTPTransportFactory transportFactory;", "modifier": "private", "type": "HTTPTransportFactory", "declarator": "transportFactory", "var_name": "transportFactory"}], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/rt/transports/http-jetty/src/test/java/org/apache/cxf/transport/http_jetty/JettyHTTPDestinationTest.java"}, "test_case": {"identifier": "testDoServiceWithHttpGETandStemMatchingQueryWSDL", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDoServiceWithHttpGETandStemMatchingQueryWSDL() throws Exception {\n        destination = setUpDestination(false, true);\n        setUpQueryHandler(true);\n        setUpDoService(false,\n                       false,\n                       false,\n                       \"GET\",\n                       \"?wsdl\",\n                       200);\n        \n        destination.doService(request, response);\n        assertNotNull(\"unexpected null response\", response);\n        \n        \n    }", "signature": "void testDoServiceWithHttpGETandStemMatchingQueryWSDL()", "full_signature": "@Test public void testDoServiceWithHttpGETandStemMatchingQueryWSDL()", "class_method_signature": "JettyHTTPDestinationTest.testDoServiceWithHttpGETandStemMatchingQueryWSDL()", "testcase": true, "constructor": false, "invocations": ["setUpDestination", "setUpQueryHandler", "setUpDoService", "doService", "assertNotNull"]}, "focal_class": {"identifier": "JettyHTTPDestination", "superclass": "extends AbstractHTTPDestination", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG =\n        LogUtils.getL7dLogger(JettyHTTPDestination.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG =\n        LogUtils.getL7dLogger(JettyHTTPDestination.class)", "var_name": "LOG"}, {"original_string": "protected JettyHTTPServerEngine engine;", "modifier": "protected", "type": "JettyHTTPServerEngine", "declarator": "engine", "var_name": "engine"}, {"original_string": "protected JettyHTTPServerEngineFactory serverEngineFactory;", "modifier": "protected", "type": "JettyHTTPServerEngineFactory", "declarator": "serverEngineFactory", "var_name": "serverEngineFactory"}, {"original_string": "protected ServletContext servletContext;", "modifier": "protected", "type": "ServletContext", "declarator": "servletContext", "var_name": "servletContext"}, {"original_string": "protected URL nurl;", "modifier": "protected", "type": "URL", "declarator": "nurl", "var_name": "nurl"}, {"original_string": "protected ClassLoader loader;", "modifier": "protected", "type": "ClassLoader", "declarator": "loader", "var_name": "loader"}, {"original_string": "private boolean configFinalized;", "modifier": "private", "type": "boolean", "declarator": "configFinalized", "var_name": "configFinalized"}], "methods": [{"identifier": "JettyHTTPDestination", "parameters": "(\n            Bus bus,\n            DestinationRegistry registry, \n            EndpointInfo ei, \n            JettyHTTPServerEngineFactory serverEngineFactory\n    )", "modifiers": "public", "return": "", "signature": " JettyHTTPDestination(\n            Bus bus,\n            DestinationRegistry registry, \n            EndpointInfo ei, \n            JettyHTTPServerEngineFactory serverEngineFactory\n    )", "full_signature": "public  JettyHTTPDestination(\n            Bus bus,\n            DestinationRegistry registry, \n            EndpointInfo ei, \n            JettyHTTPServerEngineFactory serverEngineFactory\n    )", "class_method_signature": "JettyHTTPDestination.JettyHTTPDestination(\n            Bus bus,\n            DestinationRegistry registry, \n            EndpointInfo ei, \n            JettyHTTPServerEngineFactory serverEngineFactory\n    )", "testcase": false, "constructor": true}, {"identifier": "getLogger", "parameters": "()", "modifiers": "protected", "return": "Logger", "signature": "Logger getLogger()", "full_signature": "protected Logger getLogger()", "class_method_signature": "JettyHTTPDestination.getLogger()", "testcase": false, "constructor": false}, {"identifier": "setServletContext", "parameters": "(ServletContext sc)", "modifiers": "public", "return": "void", "signature": "void setServletContext(ServletContext sc)", "full_signature": "public void setServletContext(ServletContext sc)", "class_method_signature": "JettyHTTPDestination.setServletContext(ServletContext sc)", "testcase": false, "constructor": false}, {"identifier": "retrieveEngine", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void retrieveEngine()", "full_signature": "protected void retrieveEngine()", "class_method_signature": "JettyHTTPDestination.retrieveEngine()", "testcase": false, "constructor": false}, {"identifier": "finalizeConfig", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void finalizeConfig()", "full_signature": "public void finalizeConfig()", "class_method_signature": "JettyHTTPDestination.finalizeConfig()", "testcase": false, "constructor": false}, {"identifier": "activate", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void activate()", "full_signature": "protected void activate()", "class_method_signature": "JettyHTTPDestination.activate()", "testcase": false, "constructor": false}, {"identifier": "deactivate", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void deactivate()", "full_signature": "protected void deactivate()", "class_method_signature": "JettyHTTPDestination.deactivate()", "testcase": false, "constructor": false}, {"identifier": "getBasePathForFullAddress", "parameters": "(String addr)", "modifiers": "protected", "return": "String", "signature": "String getBasePathForFullAddress(String addr)", "full_signature": "protected String getBasePathForFullAddress(String addr)", "class_method_signature": "JettyHTTPDestination.getBasePathForFullAddress(String addr)", "testcase": false, "constructor": false}, {"identifier": "removeTrailingSeparator", "parameters": "(String addr)", "modifiers": "private", "return": "String", "signature": "String removeTrailingSeparator(String addr)", "full_signature": "private String removeTrailingSeparator(String addr)", "class_method_signature": "JettyHTTPDestination.removeTrailingSeparator(String addr)", "testcase": false, "constructor": false}, {"identifier": "updateEndpointAddress", "parameters": "(String addr)", "modifiers": "private synchronized", "return": "String", "signature": "String updateEndpointAddress(String addr)", "full_signature": "private synchronized String updateEndpointAddress(String addr)", "class_method_signature": "JettyHTTPDestination.updateEndpointAddress(String addr)", "testcase": false, "constructor": false}, {"identifier": "doService", "parameters": "(HttpServletRequest req,\n                             HttpServletResponse resp)", "modifiers": "protected", "return": "void", "signature": "void doService(HttpServletRequest req,\n                             HttpServletResponse resp)", "full_signature": "protected void doService(HttpServletRequest req,\n                             HttpServletResponse resp)", "class_method_signature": "JettyHTTPDestination.doService(HttpServletRequest req,\n                             HttpServletResponse resp)", "testcase": false, "constructor": false}, {"identifier": "getConnectionForRequest", "parameters": "(Request r)", "modifiers": "static", "return": "AbstractConnection", "signature": "AbstractConnection getConnectionForRequest(Request r)", "full_signature": "static AbstractConnection getConnectionForRequest(Request r)", "class_method_signature": "JettyHTTPDestination.getConnectionForRequest(Request r)", "testcase": false, "constructor": false}, {"identifier": "setHeadFalse", "parameters": "(AbstractConnection con)", "modifiers": "private", "return": "void", "signature": "void setHeadFalse(AbstractConnection con)", "full_signature": "private void setHeadFalse(AbstractConnection con)", "class_method_signature": "JettyHTTPDestination.setHeadFalse(AbstractConnection con)", "testcase": false, "constructor": false}, {"identifier": "doService", "parameters": "(ServletContext context,\n                             HttpServletRequest req,\n                             HttpServletResponse resp)", "modifiers": "protected", "return": "void", "signature": "void doService(ServletContext context,\n                             HttpServletRequest req,\n                             HttpServletResponse resp)", "full_signature": "protected void doService(ServletContext context,\n                             HttpServletRequest req,\n                             HttpServletResponse resp)", "class_method_signature": "JettyHTTPDestination.doService(ServletContext context,\n                             HttpServletRequest req,\n                             HttpServletResponse resp)", "testcase": false, "constructor": false}, {"identifier": "serviceRequest", "parameters": "(final ServletContext context, \n                                  final HttpServletRequest req, \n                                  final HttpServletResponse resp)", "modifiers": "protected", "return": "void", "signature": "void serviceRequest(final ServletContext context, \n                                  final HttpServletRequest req, \n                                  final HttpServletResponse resp)", "full_signature": "protected void serviceRequest(final ServletContext context, \n                                  final HttpServletRequest req, \n                                  final HttpServletResponse resp)", "class_method_signature": "JettyHTTPDestination.serviceRequest(final ServletContext context, \n                                  final HttpServletRequest req, \n                                  final HttpServletResponse resp)", "testcase": false, "constructor": false}, {"identifier": "flushHeaders", "parameters": "(Message outMessage, boolean getStream)", "modifiers": "protected", "return": "OutputStream", "signature": "OutputStream flushHeaders(Message outMessage, boolean getStream)", "full_signature": "protected OutputStream flushHeaders(Message outMessage, boolean getStream)", "class_method_signature": "JettyHTTPDestination.flushHeaders(Message outMessage, boolean getStream)", "testcase": false, "constructor": false}, {"identifier": "wrapOutput", "parameters": "(OutputStream out)", "modifiers": "private", "return": "OutputStream", "signature": "OutputStream wrapOutput(OutputStream out)", "full_signature": "private OutputStream wrapOutput(OutputStream out)", "class_method_signature": "JettyHTTPDestination.wrapOutput(OutputStream out)", "testcase": false, "constructor": false}, {"identifier": "getEngine", "parameters": "()", "modifiers": "public", "return": "ServerEngine", "signature": "ServerEngine getEngine()", "full_signature": "public ServerEngine getEngine()", "class_method_signature": "JettyHTTPDestination.getEngine()", "testcase": false, "constructor": false}, {"identifier": "getStem", "parameters": "(String baseURI)", "modifiers": "private", "return": "String", "signature": "String getStem(String baseURI)", "full_signature": "private String getStem(String baseURI)", "class_method_signature": "JettyHTTPDestination.getStem(String baseURI)", "testcase": false, "constructor": false}, {"identifier": "retrieveFromContinuation", "parameters": "(HttpServletRequest req)", "modifiers": "protected", "return": "Message", "signature": "Message retrieveFromContinuation(HttpServletRequest req)", "full_signature": "protected Message retrieveFromContinuation(HttpServletRequest req)", "class_method_signature": "JettyHTTPDestination.retrieveFromContinuation(HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "setupContinuation", "parameters": "(Message inMessage,\n                      final HttpServletRequest req, \n                      final HttpServletResponse resp)", "modifiers": "protected", "return": "void", "signature": "void setupContinuation(Message inMessage,\n                      final HttpServletRequest req, \n                      final HttpServletResponse resp)", "full_signature": "protected void setupContinuation(Message inMessage,\n                      final HttpServletRequest req, \n                      final HttpServletResponse resp)", "class_method_signature": "JettyHTTPDestination.setupContinuation(Message inMessage,\n                      final HttpServletRequest req, \n                      final HttpServletResponse resp)", "testcase": false, "constructor": false}, {"identifier": "getCurrentConnection", "parameters": "()", "modifiers": "private", "return": "AbstractConnection", "signature": "AbstractConnection getCurrentConnection()", "full_signature": "private AbstractConnection getCurrentConnection()", "class_method_signature": "JettyHTTPDestination.getCurrentConnection()", "testcase": false, "constructor": false}, {"identifier": "getCurrentRequest", "parameters": "()", "modifiers": "private", "return": "Request", "signature": "Request getCurrentRequest()", "full_signature": "private Request getCurrentRequest()", "class_method_signature": "JettyHTTPDestination.getCurrentRequest()", "testcase": false, "constructor": false}], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/rt/transports/http-jetty/src/main/java/org/apache/cxf/transport/http_jetty/JettyHTTPDestination.java"}, "focal_method": {"identifier": "doService", "parameters": "(HttpServletRequest req,\n                             HttpServletResponse resp)", "modifiers": "protected", "return": "void", "body": "protected void doService(HttpServletRequest req,\n                             HttpServletResponse resp) throws IOException {\n        doService(servletContext, req, resp);\n    }", "signature": "void doService(HttpServletRequest req,\n                             HttpServletResponse resp)", "full_signature": "protected void doService(HttpServletRequest req,\n                             HttpServletResponse resp)", "class_method_signature": "JettyHTTPDestination.doService(HttpServletRequest req,\n                             HttpServletResponse resp)", "testcase": false, "constructor": false, "invocations": ["doService"]}, "repository": {"repo_id": 6822394, "url": "https://github.com/jerrtop/Java_demo_set", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 13, "size": 123833, "license": "licensed"}}