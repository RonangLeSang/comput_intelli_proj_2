{"test_class": {"identifier": "JavaToWSTest", "superclass": "extends ToolTestBase", "interfaces": "", "fields": [{"original_string": "protected String cp;", "modifier": "protected", "type": "String", "declarator": "cp", "var_name": "cp"}, {"original_string": "protected ToolContext env;", "modifier": "protected", "type": "ToolContext", "declarator": "env", "var_name": "env"}, {"original_string": "protected File output;", "modifier": "protected", "type": "File", "declarator": "output", "var_name": "output"}, {"original_string": "protected File classDir;", "modifier": "protected", "type": "File", "declarator": "classDir", "var_name": "classDir"}], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/tools/javato/ws/src/test/java/org/apache/cxf/tools/java2ws/JavaToWSTest.java"}, "test_case": {"identifier": "testJaxwsFrontend", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testJaxwsFrontend() throws Exception {\n        File wsdlFile = outputFile(\"tmp.wsdl\");\n        String[] args = new String[] {\"-wsdl\", \"-o\", output.getPath() + \"/tmp.wsdl\", \"-s\",\n                                      output.getPath(), \"-frontend\", \"jaxws\", \"-client\", \"-server\",\n                                      \"-address\", \"http://localhost:1234/test\",\n                                      \"org.apache.hello_world_doc_lit.Greeter\"};\n        JavaToWS.main(args);\n        //checkStdErr();\n        assertTrue(\"Failed to generate WSDL file\", wsdlFile.exists());\n        String str = FileUtils.getStringFromFile(wsdlFile);\n        assertTrue(\"Port address in generated wsdl is not correct\",\n                   str.indexOf(\"http://localhost:1234/test\") > -1);\n        File client = outputFile(\"org/apache/hello_world_doc_lit/GreeterClient.java\");\n        str = FileUtils.getStringFromFile(client);\n        assertTrue(\"Address generated in client side code is not correct\",\n                   str.indexOf(\"http://localhost:1234/test\") > -1);\n\n        File server = outputFile(\"org/apache/hello_world_doc_lit/GreeterServer.java\");\n        str = FileUtils.getStringFromFile(server);\n        assertTrue(\"Address generated in server side code is not correct\",\n                   str.indexOf(\"http://localhost:1234/test\") > -1);\n\n        File impl = outputFile(\"org/apache/hello_world_doc_lit/GreeterImpl.java\");\n        Compiler compiler = new Compiler();\n        String[] files = new String[]{client.getAbsoluteFile().toString(),\n                                     server.getAbsoluteFile().toString(),\n                                     impl.getAbsoluteFile().toString()};\n        compiler.setOutputDir(this.classDir);\n        compiler.compileFiles(files);\n    }", "signature": "void testJaxwsFrontend()", "full_signature": "@Test public void testJaxwsFrontend()", "class_method_signature": "JavaToWSTest.testJaxwsFrontend()", "testcase": true, "constructor": false, "invocations": ["outputFile", "getPath", "getPath", "main", "assertTrue", "exists", "getStringFromFile", "assertTrue", "indexOf", "outputFile", "getStringFromFile", "assertTrue", "indexOf", "outputFile", "getStringFromFile", "assertTrue", "indexOf", "outputFile", "toString", "getAbsoluteFile", "toString", "getAbsoluteFile", "toString", "getAbsoluteFile", "setOutputDir", "compileFiles"]}, "focal_class": {"identifier": "JavaToWS", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String[] args;", "modifier": "private", "type": "String[]", "declarator": "args", "var_name": "args"}], "methods": [{"identifier": "JavaToWS", "parameters": "()", "modifiers": "public", "return": "", "signature": " JavaToWS()", "full_signature": "public  JavaToWS()", "class_method_signature": "JavaToWS.JavaToWS()", "testcase": false, "constructor": true}, {"identifier": "JavaToWS", "parameters": "(String pargs[])", "modifiers": "public", "return": "", "signature": " JavaToWS(String pargs[])", "full_signature": "public  JavaToWS(String pargs[])", "class_method_signature": "JavaToWS.JavaToWS(String pargs[])", "testcase": false, "constructor": true}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "JavaToWS.main(String[] args)", "testcase": false, "constructor": false}, {"identifier": "isVerbose", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isVerbose()", "full_signature": "public boolean isVerbose()", "class_method_signature": "JavaToWS.isVerbose()", "testcase": false, "constructor": false}, {"identifier": "isSet", "parameters": "(String[] keys)", "modifiers": "private", "return": "boolean", "signature": "boolean isSet(String[] keys)", "full_signature": "private boolean isSet(String[] keys)", "class_method_signature": "JavaToWS.isSet(String[] keys)", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void run()", "full_signature": "public void run()", "class_method_signature": "JavaToWS.run()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "(OutputStream os)", "modifiers": "public", "return": "void", "signature": "void run(OutputStream os)", "full_signature": "public void run(OutputStream os)", "class_method_signature": "JavaToWS.run(OutputStream os)", "testcase": false, "constructor": false}, {"identifier": "isExitOnFinish", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isExitOnFinish()", "full_signature": "private boolean isExitOnFinish()", "class_method_signature": "JavaToWS.isExitOnFinish()", "testcase": false, "constructor": false}], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/tools/javato/ws/src/main/java/org/apache/cxf/tools/java2ws/JavaToWS.java"}, "focal_method": {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "body": "public static void main(String[] args) {\n        CommandInterfaceUtils.commandCommonMain();\n        JavaToWS j2w = new JavaToWS(args);\n        try {\n            j2w.run();\n        } catch (Throwable ex) {\n            System.err.println(\"JavaToWS Error: \" + ex.toString());\n            System.err.println();\n            if (j2w.isVerbose()) {\n                ex.printStackTrace();\n            }\n            if (j2w.isExitOnFinish()) {\n                System.exit(1);\n            }\n        }\n    }", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "JavaToWS.main(String[] args)", "testcase": false, "constructor": false, "invocations": ["commandCommonMain", "run", "println", "toString", "println", "isVerbose", "printStackTrace", "isExitOnFinish", "exit"]}, "repository": {"repo_id": 6822394, "url": "https://github.com/jerrtop/Java_demo_set", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 13, "size": 123833, "license": "licensed"}}