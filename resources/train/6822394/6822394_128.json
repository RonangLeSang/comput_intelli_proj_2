{"test_class": {"identifier": "JAXBExtensionHelperTest", "superclass": "extends Assert", "interfaces": "", "fields": [{"original_string": "private WSDLFactory wsdlFactory;", "modifier": "private", "type": "WSDLFactory", "declarator": "wsdlFactory", "var_name": "wsdlFactory"}, {"original_string": "private WSDLReader wsdlReader;", "modifier": "private", "type": "WSDLReader", "declarator": "wsdlReader", "var_name": "wsdlReader"}, {"original_string": "private Definition wsdlDefinition;", "modifier": "private", "type": "Definition", "declarator": "wsdlDefinition", "var_name": "wsdlDefinition"}, {"original_string": "private ExtensionRegistry registry;", "modifier": "private", "type": "ExtensionRegistry", "declarator": "registry", "var_name": "registry"}], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/api/src/test/java/org/apache/cxf/wsdl/JAXBExtensionHelperTest.java"}, "test_case": {"identifier": "testAddTestExtension", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAddTestExtension() throws Exception {\n\n        JAXBExtensionHelper.addExtensions(registry, \"javax.wsdl.Port\",\n                        \"org.apache.cxf.abc.test.TestPolicyType\");\n\n        JAXBExtensionHelper.addExtensions(registry, \"javax.wsdl.Port\",\n                        \"org.apache.cxf.abc.test.AnotherPolicyType\");\n\n        JAXBExtensionHelper.addExtensions(registry, \"javax.wsdl.Definition\",\n                        \"org.apache.cxf.abc.test.NewServiceType\");\n\n        String file = this.getClass().getResource(\"/wsdl/test_ext.wsdl\").toURI().toString();\n\n        wsdlReader.setExtensionRegistry(registry);\n\n        wsdlDefinition = wsdlReader.readWSDL(file);\n        checkTestExt();\n    }", "signature": "void testAddTestExtension()", "full_signature": "@Test public void testAddTestExtension()", "class_method_signature": "JAXBExtensionHelperTest.testAddTestExtension()", "testcase": true, "constructor": false, "invocations": ["addExtensions", "addExtensions", "addExtensions", "toString", "toURI", "getResource", "getClass", "setExtensionRegistry", "readWSDL", "checkTestExt"]}, "focal_class": {"identifier": "JAXBExtensionHelper", "superclass": "", "interfaces": "implements ExtensionSerializer, ExtensionDeserializer", "fields": [{"original_string": "private static final Logger LOG = LogUtils.getL7dLogger(JAXBExtensionHelper.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LogUtils.getL7dLogger(JAXBExtensionHelper.class)", "var_name": "LOG"}, {"original_string": "final Class<? extends ExtensibilityElement> typeClass;", "modifier": "final", "type": "Class<? extends ExtensibilityElement>", "declarator": "typeClass", "var_name": "typeClass"}, {"original_string": "final String namespace;", "modifier": "final", "type": "String", "declarator": "namespace", "var_name": "namespace"}, {"original_string": "String jaxbNamespace;", "modifier": "", "type": "String", "declarator": "jaxbNamespace", "var_name": "jaxbNamespace"}, {"original_string": "private JAXBContext context;", "modifier": "private", "type": "JAXBContext", "declarator": "context", "var_name": "context"}, {"original_string": "private Set<Class<?>> classes;", "modifier": "private", "type": "Set<Class<?>>", "declarator": "classes", "var_name": "classes"}], "methods": [{"identifier": "JAXBExtensionHelper", "parameters": "(Class<? extends ExtensibilityElement> cls,\n                               String ns)", "modifiers": "public", "return": "", "signature": " JAXBExtensionHelper(Class<? extends ExtensibilityElement> cls,\n                               String ns)", "full_signature": "public  JAXBExtensionHelper(Class<? extends ExtensibilityElement> cls,\n                               String ns)", "class_method_signature": "JAXBExtensionHelper.JAXBExtensionHelper(Class<? extends ExtensibilityElement> cls,\n                               String ns)", "testcase": false, "constructor": true}, {"identifier": "setJaxbNamespace", "parameters": "(String ns)", "modifiers": "", "return": "void", "signature": "void setJaxbNamespace(String ns)", "full_signature": " void setJaxbNamespace(String ns)", "class_method_signature": "JAXBExtensionHelper.setJaxbNamespace(String ns)", "testcase": false, "constructor": false}, {"identifier": "addExtensions", "parameters": "(ExtensionRegistry registry, String parentType, String elementType)", "modifiers": "public static", "return": "void", "signature": "void addExtensions(ExtensionRegistry registry, String parentType, String elementType)", "full_signature": "public static void addExtensions(ExtensionRegistry registry, String parentType, String elementType)", "class_method_signature": "JAXBExtensionHelper.addExtensions(ExtensionRegistry registry, String parentType, String elementType)", "testcase": false, "constructor": false}, {"identifier": "addExtensions", "parameters": "(ExtensionRegistry registry,\n                                     String parentType, \n                                     String elementType,\n                                     String namespace)", "modifiers": "public static", "return": "void", "signature": "void addExtensions(ExtensionRegistry registry,\n                                     String parentType, \n                                     String elementType,\n                                     String namespace)", "full_signature": "public static void addExtensions(ExtensionRegistry registry,\n                                     String parentType, \n                                     String elementType,\n                                     String namespace)", "class_method_signature": "JAXBExtensionHelper.addExtensions(ExtensionRegistry registry,\n                                     String parentType, \n                                     String elementType,\n                                     String namespace)", "testcase": false, "constructor": false}, {"identifier": "addExtensions", "parameters": "(ExtensionRegistry registry,\n                                     Class<?> parentType,\n                                     Class<? extends ExtensibilityElement> cls)", "modifiers": "public static", "return": "void", "signature": "void addExtensions(ExtensionRegistry registry,\n                                     Class<?> parentType,\n                                     Class<? extends ExtensibilityElement> cls)", "full_signature": "public static void addExtensions(ExtensionRegistry registry,\n                                     Class<?> parentType,\n                                     Class<? extends ExtensibilityElement> cls)", "class_method_signature": "JAXBExtensionHelper.addExtensions(ExtensionRegistry registry,\n                                     Class<?> parentType,\n                                     Class<? extends ExtensibilityElement> cls)", "testcase": false, "constructor": false}, {"identifier": "addExtensions", "parameters": "(ExtensionRegistry registry,\n                                     Class<?> parentType,\n                                     Class<? extends ExtensibilityElement> cls,\n                                     String namespace)", "modifiers": "public static", "return": "void", "signature": "void addExtensions(ExtensionRegistry registry,\n                                     Class<?> parentType,\n                                     Class<? extends ExtensibilityElement> cls,\n                                     String namespace)", "full_signature": "public static void addExtensions(ExtensionRegistry registry,\n                                     Class<?> parentType,\n                                     Class<? extends ExtensibilityElement> cls,\n                                     String namespace)", "class_method_signature": "JAXBExtensionHelper.addExtensions(ExtensionRegistry registry,\n                                     Class<?> parentType,\n                                     Class<? extends ExtensibilityElement> cls,\n                                     String namespace)", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "()", "modifiers": "private synchronized", "return": "JAXBContext", "signature": "JAXBContext getContext()", "full_signature": "private synchronized JAXBContext getContext()", "class_method_signature": "JAXBExtensionHelper.getContext()", "testcase": false, "constructor": false}, {"identifier": "marshall", "parameters": "(@SuppressWarnings(\"rawtypes\") Class parent, QName qname,\n                         ExtensibilityElement obj, PrintWriter pw,\n                         final Definition wsdl, ExtensionRegistry registry)", "modifiers": "public", "return": "void", "signature": "void marshall(@SuppressWarnings(\"rawtypes\") Class parent, QName qname,\n                         ExtensibilityElement obj, PrintWriter pw,\n                         final Definition wsdl, ExtensionRegistry registry)", "full_signature": "public void marshall(@SuppressWarnings(\"rawtypes\") Class parent, QName qname,\n                         ExtensibilityElement obj, PrintWriter pw,\n                         final Definition wsdl, ExtensionRegistry registry)", "class_method_signature": "JAXBExtensionHelper.marshall(@SuppressWarnings(\"rawtypes\") Class parent, QName qname,\n                         ExtensibilityElement obj, PrintWriter pw,\n                         final Definition wsdl, ExtensionRegistry registry)", "testcase": false, "constructor": false}, {"identifier": "unmarshall", "parameters": "(@SuppressWarnings(\"rawtypes\") Class parent, \n                                           QName qname, Element element, Definition wsdl,\n                                           ExtensionRegistry registry)", "modifiers": "public", "return": "ExtensibilityElement", "signature": "ExtensibilityElement unmarshall(@SuppressWarnings(\"rawtypes\") Class parent, \n                                           QName qname, Element element, Definition wsdl,\n                                           ExtensionRegistry registry)", "full_signature": "public ExtensibilityElement unmarshall(@SuppressWarnings(\"rawtypes\") Class parent, \n                                           QName qname, Element element, Definition wsdl,\n                                           ExtensionRegistry registry)", "class_method_signature": "JAXBExtensionHelper.unmarshall(@SuppressWarnings(\"rawtypes\") Class parent, \n                                           QName qname, Element element, Definition wsdl,\n                                           ExtensionRegistry registry)", "testcase": false, "constructor": false}], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/api/src/main/java/org/apache/cxf/wsdl/JAXBExtensionHelper.java"}, "focal_method": {"identifier": "addExtensions", "parameters": "(ExtensionRegistry registry, String parentType, String elementType)", "modifiers": "public static", "return": "void", "body": "public static void addExtensions(ExtensionRegistry registry, String parentType, String elementType)\n        throws JAXBException, ClassNotFoundException {\n        Class<?> parentTypeClass = ClassLoaderUtils.loadClass(parentType, JAXBExtensionHelper.class);\n\n        Class<? extends ExtensibilityElement> elementTypeClass = \n            ClassLoaderUtils.loadClass(elementType, JAXBExtensionHelper.class)\n                .asSubclass(ExtensibilityElement.class);\n        addExtensions(registry, parentTypeClass, elementTypeClass, null);\n    }", "signature": "void addExtensions(ExtensionRegistry registry, String parentType, String elementType)", "full_signature": "public static void addExtensions(ExtensionRegistry registry, String parentType, String elementType)", "class_method_signature": "JAXBExtensionHelper.addExtensions(ExtensionRegistry registry, String parentType, String elementType)", "testcase": false, "constructor": false, "invocations": ["loadClass", "asSubclass", "loadClass", "addExtensions"]}, "repository": {"repo_id": 6822394, "url": "https://github.com/jerrtop/Java_demo_set", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 13, "size": 123833, "license": "licensed"}}