{"test_class": {"identifier": "JAXRSUtilsTest", "superclass": "extends Assert", "interfaces": "", "fields": [], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/utils/JAXRSUtilsTest.java"}, "test_case": {"identifier": "testConstructorFirstAndParameterHandler", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConstructorFirstAndParameterHandler() throws Exception {\n        Message messageImpl = createMessage();\n        ProviderFactory.getInstance(messageImpl).registerUserProvider(\n            new CustomerParameterHandler());\n        Class<?>[] argType = {Customer.class, Customer[].class, Customer2.class};\n        Method m = Customer.class.getMethod(\"testCustomerParam\", argType);\n        \n        messageImpl.put(Message.QUERY_STRING, \"p3=jack\");\n        List<Object> params = JAXRSUtils.processParameters(new OperationResourceInfo(m, null),\n                                                           null, \n                                                           messageImpl);\n        assertEquals(3, params.size());\n        Customer2 c3 = (Customer2)params.get(2);\n        assertEquals(\"jack\", c3.getName());\n    }", "signature": "void testConstructorFirstAndParameterHandler()", "full_signature": "@Test public void testConstructorFirstAndParameterHandler()", "class_method_signature": "JAXRSUtilsTest.testConstructorFirstAndParameterHandler()", "testcase": true, "constructor": false, "invocations": ["createMessage", "registerUserProvider", "getInstance", "getMethod", "put", "processParameters", "assertEquals", "size", "get", "assertEquals", "getName"]}, "focal_class": {"identifier": "JAXRSUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final MediaType ALL_TYPES = new MediaType();", "modifier": "public static final", "type": "MediaType", "declarator": "ALL_TYPES = new MediaType()", "var_name": "ALL_TYPES"}, {"original_string": "public static final String ROOT_RESOURCE_CLASS = \"root.resource.class\";", "modifier": "public static final", "type": "String", "declarator": "ROOT_RESOURCE_CLASS = \"root.resource.class\"", "var_name": "ROOT_RESOURCE_CLASS"}, {"original_string": "public static final String IGNORE_MESSAGE_WRITERS = \"ignore.message.writers\";", "modifier": "public static final", "type": "String", "declarator": "IGNORE_MESSAGE_WRITERS = \"ignore.message.writers\"", "var_name": "IGNORE_MESSAGE_WRITERS"}, {"original_string": "public static final String ROOT_INSTANCE = \"service.root.instance\";", "modifier": "public static final", "type": "String", "declarator": "ROOT_INSTANCE = \"service.root.instance\"", "var_name": "ROOT_INSTANCE"}, {"original_string": "public static final String ROOT_PROVIDER = \"service.root.provider\";", "modifier": "public static final", "type": "String", "declarator": "ROOT_PROVIDER = \"service.root.provider\"", "var_name": "ROOT_PROVIDER"}, {"original_string": "public static final String DOC_LOCATION = \"wadl.location\";", "modifier": "public static final", "type": "String", "declarator": "DOC_LOCATION = \"wadl.location\"", "var_name": "DOC_LOCATION"}, {"original_string": "private static final Logger LOG = LogUtils.getL7dLogger(JAXRSUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LogUtils.getL7dLogger(JAXRSUtils.class)", "var_name": "LOG"}, {"original_string": "private static final ResourceBundle BUNDLE = BundleUtils.getBundle(JAXRSUtils.class);", "modifier": "private static final", "type": "ResourceBundle", "declarator": "BUNDLE = BundleUtils.getBundle(JAXRSUtils.class)", "var_name": "BUNDLE"}, {"original_string": "private static final String PROPAGATE_EXCEPTION = \"org.apache.cxf.propagate.exception\";", "modifier": "private static final", "type": "String", "declarator": "PROPAGATE_EXCEPTION = \"org.apache.cxf.propagate.exception\"", "var_name": "PROPAGATE_EXCEPTION"}, {"original_string": "private static final String REPORT_FAULT_MESSAGE_PROPERTY = \"org.apache.cxf.jaxrs.report-fault-message\";", "modifier": "private static final", "type": "String", "declarator": "REPORT_FAULT_MESSAGE_PROPERTY = \"org.apache.cxf.jaxrs.report-fault-message\"", "var_name": "REPORT_FAULT_MESSAGE_PROPERTY"}, {"original_string": "private static final Map<Integer, Class<?>> EXCEPTIONS_MAP;", "modifier": "private static final", "type": "Map<Integer, Class<?>>", "declarator": "EXCEPTIONS_MAP", "var_name": "EXCEPTIONS_MAP"}], "methods": [{"identifier": "JAXRSUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " JAXRSUtils()", "full_signature": "private  JAXRSUtils()", "class_method_signature": "JAXRSUtils.JAXRSUtils()", "testcase": false, "constructor": true}, {"identifier": "getPathSegments", "parameters": "(String thePath, boolean decode)", "modifiers": "public static", "return": "List<PathSegment>", "signature": "List<PathSegment> getPathSegments(String thePath, boolean decode)", "full_signature": "public static List<PathSegment> getPathSegments(String thePath, boolean decode)", "class_method_signature": "JAXRSUtils.getPathSegments(String thePath, boolean decode)", "testcase": false, "constructor": false}, {"identifier": "getPathSegments", "parameters": "(String thePath, boolean decode, \n                                                    boolean ignoreLastSlash)", "modifiers": "public static", "return": "List<PathSegment>", "signature": "List<PathSegment> getPathSegments(String thePath, boolean decode, \n                                                    boolean ignoreLastSlash)", "full_signature": "public static List<PathSegment> getPathSegments(String thePath, boolean decode, \n                                                    boolean ignoreLastSlash)", "class_method_signature": "JAXRSUtils.getPathSegments(String thePath, boolean decode, \n                                                    boolean ignoreLastSlash)", "testcase": false, "constructor": false}, {"identifier": "getUserMediaTypes", "parameters": "(Object provider, String methodName)", "modifiers": "@SuppressWarnings(\"unchecked\") private static", "return": "String[]", "signature": "String[] getUserMediaTypes(Object provider, String methodName)", "full_signature": "@SuppressWarnings(\"unchecked\") private static String[] getUserMediaTypes(Object provider, String methodName)", "class_method_signature": "JAXRSUtils.getUserMediaTypes(Object provider, String methodName)", "testcase": false, "constructor": false}, {"identifier": "getProviderConsumeTypes", "parameters": "(MessageBodyReader<?> provider)", "modifiers": "public static", "return": "List<MediaType>", "signature": "List<MediaType> getProviderConsumeTypes(MessageBodyReader<?> provider)", "full_signature": "public static List<MediaType> getProviderConsumeTypes(MessageBodyReader<?> provider)", "class_method_signature": "JAXRSUtils.getProviderConsumeTypes(MessageBodyReader<?> provider)", "testcase": false, "constructor": false}, {"identifier": "getProviderProduceTypes", "parameters": "(MessageBodyWriter<?> provider)", "modifiers": "public static", "return": "List<MediaType>", "signature": "List<MediaType> getProviderProduceTypes(MessageBodyWriter<?> provider)", "full_signature": "public static List<MediaType> getProviderProduceTypes(MessageBodyWriter<?> provider)", "class_method_signature": "JAXRSUtils.getProviderProduceTypes(MessageBodyWriter<?> provider)", "testcase": false, "constructor": false}, {"identifier": "getMediaTypes", "parameters": "(String[] values)", "modifiers": "public static", "return": "List<MediaType>", "signature": "List<MediaType> getMediaTypes(String[] values)", "full_signature": "public static List<MediaType> getMediaTypes(String[] values)", "class_method_signature": "JAXRSUtils.getMediaTypes(String[] values)", "testcase": false, "constructor": false}, {"identifier": "injectParameters", "parameters": "(OperationResourceInfo ori,\n                                        Object requestObject,\n                                        Message message)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "void", "signature": "void injectParameters(OperationResourceInfo ori,\n                                        Object requestObject,\n                                        Message message)", "full_signature": "@SuppressWarnings(\"unchecked\") public static void injectParameters(OperationResourceInfo ori,\n                                        Object requestObject,\n                                        Message message)", "class_method_signature": "JAXRSUtils.injectParameters(OperationResourceInfo ori,\n                                        Object requestObject,\n                                        Message message)", "testcase": false, "constructor": false}, {"identifier": "selectResourceClass", "parameters": "(List<ClassResourceInfo> resources,\n                                                 String path, \n                                                 MultivaluedMap<String, String> values,\n                                                 Message message)", "modifiers": "public static", "return": "ClassResourceInfo", "signature": "ClassResourceInfo selectResourceClass(List<ClassResourceInfo> resources,\n                                                 String path, \n                                                 MultivaluedMap<String, String> values,\n                                                 Message message)", "full_signature": "public static ClassResourceInfo selectResourceClass(List<ClassResourceInfo> resources,\n                                                 String path, \n                                                 MultivaluedMap<String, String> values,\n                                                 Message message)", "class_method_signature": "JAXRSUtils.selectResourceClass(List<ClassResourceInfo> resources,\n                                                 String path, \n                                                 MultivaluedMap<String, String> values,\n                                                 Message message)", "testcase": false, "constructor": false}, {"identifier": "findTargetMethod", "parameters": "(ClassResourceInfo resource,\n                                                         Message message,\n                                                         String httpMethod, \n                                                         MultivaluedMap<String, String> values, \n                                                         String requestContentType, \n                                                         List<MediaType> acceptContentTypes,\n                                                         boolean logNow)", "modifiers": "public static", "return": "OperationResourceInfo", "signature": "OperationResourceInfo findTargetMethod(ClassResourceInfo resource,\n                                                         Message message,\n                                                         String httpMethod, \n                                                         MultivaluedMap<String, String> values, \n                                                         String requestContentType, \n                                                         List<MediaType> acceptContentTypes,\n                                                         boolean logNow)", "full_signature": "public static OperationResourceInfo findTargetMethod(ClassResourceInfo resource,\n                                                         Message message,\n                                                         String httpMethod, \n                                                         MultivaluedMap<String, String> values, \n                                                         String requestContentType, \n                                                         List<MediaType> acceptContentTypes,\n                                                         boolean logNow)", "class_method_signature": "JAXRSUtils.findTargetMethod(ClassResourceInfo resource,\n                                                         Message message,\n                                                         String httpMethod, \n                                                         MultivaluedMap<String, String> values, \n                                                         String requestContentType, \n                                                         List<MediaType> acceptContentTypes,\n                                                         boolean logNow)", "testcase": false, "constructor": false}, {"identifier": "noResourceMethodForOptions", "parameters": "(Response exResponse, String httpMethod)", "modifiers": "public static", "return": "boolean", "signature": "boolean noResourceMethodForOptions(Response exResponse, String httpMethod)", "full_signature": "public static boolean noResourceMethodForOptions(Response exResponse, String httpMethod)", "class_method_signature": "JAXRSUtils.noResourceMethodForOptions(Response exResponse, String httpMethod)", "testcase": false, "constructor": false}, {"identifier": "logNoMatchMessage", "parameters": "(OperationResourceInfo ori, \n        String path, String httpMethod, MediaType requestType, List<MediaType> acceptContentTypes)", "modifiers": "private static", "return": "void", "signature": "void logNoMatchMessage(OperationResourceInfo ori, \n        String path, String httpMethod, MediaType requestType, List<MediaType> acceptContentTypes)", "full_signature": "private static void logNoMatchMessage(OperationResourceInfo ori, \n        String path, String httpMethod, MediaType requestType, List<MediaType> acceptContentTypes)", "class_method_signature": "JAXRSUtils.logNoMatchMessage(OperationResourceInfo ori, \n        String path, String httpMethod, MediaType requestType, List<MediaType> acceptContentTypes)", "testcase": false, "constructor": false}, {"identifier": "createResponse", "parameters": "(ClassResourceInfo cri, Message msg,\n                                          String responseMessage, int status, boolean addAllow)", "modifiers": "public static", "return": "Response", "signature": "Response createResponse(ClassResourceInfo cri, Message msg,\n                                          String responseMessage, int status, boolean addAllow)", "full_signature": "public static Response createResponse(ClassResourceInfo cri, Message msg,\n                                          String responseMessage, int status, boolean addAllow)", "class_method_signature": "JAXRSUtils.createResponse(ClassResourceInfo cri, Message msg,\n                                          String responseMessage, int status, boolean addAllow)", "testcase": false, "constructor": false}, {"identifier": "matchHttpMethod", "parameters": "(String expectedMethod, String httpMethod)", "modifiers": "private static", "return": "boolean", "signature": "boolean matchHttpMethod(String expectedMethod, String httpMethod)", "full_signature": "private static boolean matchHttpMethod(String expectedMethod, String httpMethod)", "class_method_signature": "JAXRSUtils.matchHttpMethod(String expectedMethod, String httpMethod)", "testcase": false, "constructor": false}, {"identifier": "headMethodPossible", "parameters": "(String expectedMethod, String httpMethod)", "modifiers": "public static", "return": "boolean", "signature": "boolean headMethodPossible(String expectedMethod, String httpMethod)", "full_signature": "public static boolean headMethodPossible(String expectedMethod, String httpMethod)", "class_method_signature": "JAXRSUtils.headMethodPossible(String expectedMethod, String httpMethod)", "testcase": false, "constructor": false}, {"identifier": "convertTypesToString", "parameters": "(List<MediaType> types)", "modifiers": "private static", "return": "String", "signature": "String convertTypesToString(List<MediaType> types)", "full_signature": "private static String convertTypesToString(List<MediaType> types)", "class_method_signature": "JAXRSUtils.convertTypesToString(List<MediaType> types)", "testcase": false, "constructor": false}, {"identifier": "getConsumeTypes", "parameters": "(Consumes cm)", "modifiers": "public static", "return": "List<MediaType>", "signature": "List<MediaType> getConsumeTypes(Consumes cm)", "full_signature": "public static List<MediaType> getConsumeTypes(Consumes cm)", "class_method_signature": "JAXRSUtils.getConsumeTypes(Consumes cm)", "testcase": false, "constructor": false}, {"identifier": "getProduceTypes", "parameters": "(Produces pm)", "modifiers": "public static", "return": "List<MediaType>", "signature": "List<MediaType> getProduceTypes(Produces pm)", "full_signature": "public static List<MediaType> getProduceTypes(Produces pm)", "class_method_signature": "JAXRSUtils.getProduceTypes(Produces pm)", "testcase": false, "constructor": false}, {"identifier": "compareSortedMediaTypes", "parameters": "(List<MediaType> mts1, List<MediaType> mts2)", "modifiers": "public static", "return": "int", "signature": "int compareSortedMediaTypes(List<MediaType> mts1, List<MediaType> mts2)", "full_signature": "public static int compareSortedMediaTypes(List<MediaType> mts1, List<MediaType> mts2)", "class_method_signature": "JAXRSUtils.compareSortedMediaTypes(List<MediaType> mts1, List<MediaType> mts2)", "testcase": false, "constructor": false}, {"identifier": "compareMediaTypes", "parameters": "(MediaType mt1, MediaType mt2)", "modifiers": "public static", "return": "int", "signature": "int compareMediaTypes(MediaType mt1, MediaType mt2)", "full_signature": "public static int compareMediaTypes(MediaType mt1, MediaType mt2)", "class_method_signature": "JAXRSUtils.compareMediaTypes(MediaType mt1, MediaType mt2)", "testcase": false, "constructor": false}, {"identifier": "compareMediaTypesQualityFactors", "parameters": "(MediaType mt1, MediaType mt2)", "modifiers": "public static", "return": "int", "signature": "int compareMediaTypesQualityFactors(MediaType mt1, MediaType mt2)", "full_signature": "public static int compareMediaTypesQualityFactors(MediaType mt1, MediaType mt2)", "class_method_signature": "JAXRSUtils.compareMediaTypesQualityFactors(MediaType mt1, MediaType mt2)", "testcase": false, "constructor": false}, {"identifier": "getMediaTypeQualityFactor", "parameters": "(String q)", "modifiers": "public static", "return": "float", "signature": "float getMediaTypeQualityFactor(String q)", "full_signature": "public static float getMediaTypeQualityFactor(String q)", "class_method_signature": "JAXRSUtils.getMediaTypeQualityFactor(String q)", "testcase": false, "constructor": false}, {"identifier": "processParameters", "parameters": "(OperationResourceInfo ori, \n                                                 MultivaluedMap<String, String> values, \n                                                 Message message)", "modifiers": "public static", "return": "List<Object>", "signature": "List<Object> processParameters(OperationResourceInfo ori, \n                                                 MultivaluedMap<String, String> values, \n                                                 Message message)", "full_signature": "public static List<Object> processParameters(OperationResourceInfo ori, \n                                                 MultivaluedMap<String, String> values, \n                                                 Message message)", "class_method_signature": "JAXRSUtils.processParameters(OperationResourceInfo ori, \n                                                 MultivaluedMap<String, String> values, \n                                                 Message message)", "testcase": false, "constructor": false}, {"identifier": "processParameter", "parameters": "(Class<?> parameterClass, \n                                           Type parameterType,\n                                           Annotation[] parameterAnns,\n                                           Parameter parameter, \n                                           MultivaluedMap<String, String> values,\n                                           Message message,\n                                           OperationResourceInfo ori)", "modifiers": "private static", "return": "Object", "signature": "Object processParameter(Class<?> parameterClass, \n                                           Type parameterType,\n                                           Annotation[] parameterAnns,\n                                           Parameter parameter, \n                                           MultivaluedMap<String, String> values,\n                                           Message message,\n                                           OperationResourceInfo ori)", "full_signature": "private static Object processParameter(Class<?> parameterClass, \n                                           Type parameterType,\n                                           Annotation[] parameterAnns,\n                                           Parameter parameter, \n                                           MultivaluedMap<String, String> values,\n                                           Message message,\n                                           OperationResourceInfo ori)", "class_method_signature": "JAXRSUtils.processParameter(Class<?> parameterClass, \n                                           Type parameterType,\n                                           Annotation[] parameterAnns,\n                                           Parameter parameter, \n                                           MultivaluedMap<String, String> values,\n                                           Message message,\n                                           OperationResourceInfo ori)", "testcase": false, "constructor": false}, {"identifier": "createHttpParameterValue", "parameters": "(Parameter parameter, \n                                            Class<?> parameterClass, \n                                            Type genericParam,\n                                            Annotation[] paramAnns,\n                                            Message message,\n                                            MultivaluedMap<String, String> values,\n                                            OperationResourceInfo ori)", "modifiers": "public static", "return": "Object", "signature": "Object createHttpParameterValue(Parameter parameter, \n                                            Class<?> parameterClass, \n                                            Type genericParam,\n                                            Annotation[] paramAnns,\n                                            Message message,\n                                            MultivaluedMap<String, String> values,\n                                            OperationResourceInfo ori)", "full_signature": "public static Object createHttpParameterValue(Parameter parameter, \n                                            Class<?> parameterClass, \n                                            Type genericParam,\n                                            Annotation[] paramAnns,\n                                            Message message,\n                                            MultivaluedMap<String, String> values,\n                                            OperationResourceInfo ori)", "class_method_signature": "JAXRSUtils.createHttpParameterValue(Parameter parameter, \n                                            Class<?> parameterClass, \n                                            Type genericParam,\n                                            Annotation[] paramAnns,\n                                            Message message,\n                                            MultivaluedMap<String, String> values,\n                                            OperationResourceInfo ori)", "testcase": false, "constructor": false}, {"identifier": "processMatrixParam", "parameters": "(Message m, String key, \n                                             Class<?> pClass, Type genericType,\n                                             Annotation[] paramAnns,\n                                             String defaultValue,\n                                             boolean decode)", "modifiers": "private static", "return": "Object", "signature": "Object processMatrixParam(Message m, String key, \n                                             Class<?> pClass, Type genericType,\n                                             Annotation[] paramAnns,\n                                             String defaultValue,\n                                             boolean decode)", "full_signature": "private static Object processMatrixParam(Message m, String key, \n                                             Class<?> pClass, Type genericType,\n                                             Annotation[] paramAnns,\n                                             String defaultValue,\n                                             boolean decode)", "class_method_signature": "JAXRSUtils.processMatrixParam(Message m, String key, \n                                             Class<?> pClass, Type genericType,\n                                             Annotation[] paramAnns,\n                                             String defaultValue,\n                                             boolean decode)", "testcase": false, "constructor": false}, {"identifier": "processFormParam", "parameters": "(Message m, String key, \n                                           Class<?> pClass, Type genericType,\n                                           Annotation[] paramAnns,\n                                           String defaultValue,\n                                           boolean decode)", "modifiers": "private static", "return": "Object", "signature": "Object processFormParam(Message m, String key, \n                                           Class<?> pClass, Type genericType,\n                                           Annotation[] paramAnns,\n                                           String defaultValue,\n                                           boolean decode)", "full_signature": "private static Object processFormParam(Message m, String key, \n                                           Class<?> pClass, Type genericType,\n                                           Annotation[] paramAnns,\n                                           String defaultValue,\n                                           boolean decode)", "class_method_signature": "JAXRSUtils.processFormParam(Message m, String key, \n                                           Class<?> pClass, Type genericType,\n                                           Annotation[] paramAnns,\n                                           String defaultValue,\n                                           boolean decode)", "testcase": false, "constructor": false}, {"identifier": "getMatrixParams", "parameters": "(String path, boolean decode)", "modifiers": "public static", "return": "MultivaluedMap<String, String>", "signature": "MultivaluedMap<String, String> getMatrixParams(String path, boolean decode)", "full_signature": "public static MultivaluedMap<String, String> getMatrixParams(String path, boolean decode)", "class_method_signature": "JAXRSUtils.getMatrixParams(String path, boolean decode)", "testcase": false, "constructor": false}, {"identifier": "processHeaderParam", "parameters": "(Message m, \n                                             String header, \n                                             Class<?> pClass,\n                                             Type genericType, \n                                             Annotation[] paramAnns,\n                                             String defaultValue)", "modifiers": "private static", "return": "Object", "signature": "Object processHeaderParam(Message m, \n                                             String header, \n                                             Class<?> pClass,\n                                             Type genericType, \n                                             Annotation[] paramAnns,\n                                             String defaultValue)", "full_signature": "private static Object processHeaderParam(Message m, \n                                             String header, \n                                             Class<?> pClass,\n                                             Type genericType, \n                                             Annotation[] paramAnns,\n                                             String defaultValue)", "class_method_signature": "JAXRSUtils.processHeaderParam(Message m, \n                                             String header, \n                                             Class<?> pClass,\n                                             Type genericType, \n                                             Annotation[] paramAnns,\n                                             String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "processCookieParam", "parameters": "(Message m, String cookieName, \n                              Class<?> pClass, Type genericType, \n                              Annotation[] paramAnns, String defaultValue)", "modifiers": "private static", "return": "Object", "signature": "Object processCookieParam(Message m, String cookieName, \n                              Class<?> pClass, Type genericType, \n                              Annotation[] paramAnns, String defaultValue)", "full_signature": "private static Object processCookieParam(Message m, String cookieName, \n                              Class<?> pClass, Type genericType, \n                              Annotation[] paramAnns, String defaultValue)", "class_method_signature": "JAXRSUtils.processCookieParam(Message m, String cookieName, \n                              Class<?> pClass, Type genericType, \n                              Annotation[] paramAnns, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "createContextValue", "parameters": "(Message m, Type genericType, Class<T> clazz)", "modifiers": "public static", "return": "T", "signature": "T createContextValue(Message m, Type genericType, Class<T> clazz)", "full_signature": "public static T createContextValue(Message m, Type genericType, Class<T> clazz)", "class_method_signature": "JAXRSUtils.createContextValue(Message m, Type genericType, Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "createUriInfo", "parameters": "(Message m)", "modifiers": "@SuppressWarnings(\"unchecked\") private static", "return": "UriInfo", "signature": "UriInfo createUriInfo(Message m)", "full_signature": "@SuppressWarnings(\"unchecked\") private static UriInfo createUriInfo(Message m)", "class_method_signature": "JAXRSUtils.createUriInfo(Message m)", "testcase": false, "constructor": false}, {"identifier": "createHttpHeaders", "parameters": "(Message m, Class<?> ctxClass)", "modifiers": "private static", "return": "Object", "signature": "Object createHttpHeaders(Message m, Class<?> ctxClass)", "full_signature": "private static Object createHttpHeaders(Message m, Class<?> ctxClass)", "class_method_signature": "JAXRSUtils.createHttpHeaders(Message m, Class<?> ctxClass)", "testcase": false, "constructor": false}, {"identifier": "createContextResolver", "parameters": "(Type genericType, Message m)", "modifiers": "public static", "return": "ContextResolver<?>", "signature": "ContextResolver<?> createContextResolver(Type genericType, Message m)", "full_signature": "public static ContextResolver<?> createContextResolver(Type genericType, Message m)", "class_method_signature": "JAXRSUtils.createContextResolver(Type genericType, Message m)", "testcase": false, "constructor": false}, {"identifier": "createResourceValue", "parameters": "(Message m, Type genericType, Class<?> clazz)", "modifiers": "public static", "return": "Object", "signature": "Object createResourceValue(Message m, Type genericType, Class<?> clazz)", "full_signature": "public static Object createResourceValue(Message m, Type genericType, Class<?> clazz)", "class_method_signature": "JAXRSUtils.createResourceValue(Message m, Type genericType, Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "createServletResourceValue", "parameters": "(Message m, Class<T> clazz)", "modifiers": "public static", "return": "T", "signature": "T createServletResourceValue(Message m, Class<T> clazz)", "full_signature": "public static T createServletResourceValue(Message m, Class<T> clazz)", "class_method_signature": "JAXRSUtils.createServletResourceValue(Message m, Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "readFromUriParam", "parameters": "(Message m,\n                                           String parameterName,\n                                           Class<?> paramType,\n                                           Type genericType,\n                                           Annotation[] paramAnns,\n                                           MultivaluedMap<String, String> values,\n                                           String defaultValue,\n                                           boolean decoded)", "modifiers": "private static", "return": "Object", "signature": "Object readFromUriParam(Message m,\n                                           String parameterName,\n                                           Class<?> paramType,\n                                           Type genericType,\n                                           Annotation[] paramAnns,\n                                           MultivaluedMap<String, String> values,\n                                           String defaultValue,\n                                           boolean decoded)", "full_signature": "private static Object readFromUriParam(Message m,\n                                           String parameterName,\n                                           Class<?> paramType,\n                                           Type genericType,\n                                           Annotation[] paramAnns,\n                                           MultivaluedMap<String, String> values,\n                                           String defaultValue,\n                                           boolean decoded)", "class_method_signature": "JAXRSUtils.readFromUriParam(Message m,\n                                           String parameterName,\n                                           Class<?> paramType,\n                                           Type genericType,\n                                           Annotation[] paramAnns,\n                                           MultivaluedMap<String, String> values,\n                                           String defaultValue,\n                                           boolean decoded)", "testcase": false, "constructor": false}, {"identifier": "readQueryString", "parameters": "(String queryName,\n                                          Class<?> paramType,\n                                          Type genericType,\n                                          Annotation[] paramAnns,\n                                          Message m, \n                                          String defaultValue,\n                                          boolean decode)", "modifiers": "private static", "return": "Object", "signature": "Object readQueryString(String queryName,\n                                          Class<?> paramType,\n                                          Type genericType,\n                                          Annotation[] paramAnns,\n                                          Message m, \n                                          String defaultValue,\n                                          boolean decode)", "full_signature": "private static Object readQueryString(String queryName,\n                                          Class<?> paramType,\n                                          Type genericType,\n                                          Annotation[] paramAnns,\n                                          Message m, \n                                          String defaultValue,\n                                          boolean decode)", "class_method_signature": "JAXRSUtils.readQueryString(String queryName,\n                                          Class<?> paramType,\n                                          Type genericType,\n                                          Annotation[] paramAnns,\n                                          Message m, \n                                          String defaultValue,\n                                          boolean decode)", "testcase": false, "constructor": false}, {"identifier": "getStructuredParams", "parameters": "(String query, \n                                                                    String sep, \n                                                                    boolean decode,\n                                                                    boolean decodePlus)", "modifiers": "public static", "return": "MultivaluedMap<String, String>", "signature": "MultivaluedMap<String, String> getStructuredParams(String query, \n                                                                    String sep, \n                                                                    boolean decode,\n                                                                    boolean decodePlus)", "full_signature": "public static MultivaluedMap<String, String> getStructuredParams(String query, \n                                                                    String sep, \n                                                                    boolean decode,\n                                                                    boolean decodePlus)", "class_method_signature": "JAXRSUtils.getStructuredParams(String query, \n                                                                    String sep, \n                                                                    boolean decode,\n                                                                    boolean decodePlus)", "testcase": false, "constructor": false}, {"identifier": "getStructuredParams", "parameters": "(MultivaluedMap<String, String> queries,\n                                           String query, \n                                           String sep, \n                                           boolean decode,\n                                           boolean decodePlus)", "modifiers": "public static", "return": "void", "signature": "void getStructuredParams(MultivaluedMap<String, String> queries,\n                                           String query, \n                                           String sep, \n                                           boolean decode,\n                                           boolean decodePlus)", "full_signature": "public static void getStructuredParams(MultivaluedMap<String, String> queries,\n                                           String query, \n                                           String sep, \n                                           boolean decode,\n                                           boolean decodePlus)", "class_method_signature": "JAXRSUtils.getStructuredParams(MultivaluedMap<String, String> queries,\n                                           String query, \n                                           String sep, \n                                           boolean decode,\n                                           boolean decodePlus)", "testcase": false, "constructor": false}, {"identifier": "readFromMessageBody", "parameters": "(Class<?> targetTypeClass,\n                                                  Type parameterType,\n                                                  Annotation[] parameterAnnotations,\n                                                  InputStream is, \n                                                  MediaType contentType, \n                                                  List<MediaType> consumeTypes,\n                                                  Message m)", "modifiers": "private static", "return": "Object", "signature": "Object readFromMessageBody(Class<?> targetTypeClass,\n                                                  Type parameterType,\n                                                  Annotation[] parameterAnnotations,\n                                                  InputStream is, \n                                                  MediaType contentType, \n                                                  List<MediaType> consumeTypes,\n                                                  Message m)", "full_signature": "private static Object readFromMessageBody(Class<?> targetTypeClass,\n                                                  Type parameterType,\n                                                  Annotation[] parameterAnnotations,\n                                                  InputStream is, \n                                                  MediaType contentType, \n                                                  List<MediaType> consumeTypes,\n                                                  Message m)", "class_method_signature": "JAXRSUtils.readFromMessageBody(Class<?> targetTypeClass,\n                                                  Type parameterType,\n                                                  Annotation[] parameterAnnotations,\n                                                  InputStream is, \n                                                  MediaType contentType, \n                                                  List<MediaType> consumeTypes,\n                                                  Message m)", "testcase": false, "constructor": false}, {"identifier": "readFromMessageBodyReader", "parameters": "(List<ReaderInterceptor> readers,\n                                                   Class<?> targetTypeClass,\n                                                   Type parameterType,\n                                                   Annotation[] parameterAnnotations,\n                                                   InputStream is, \n                                                   MediaType mediaType, \n                                                   Message m)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "Object", "signature": "Object readFromMessageBodyReader(List<ReaderInterceptor> readers,\n                                                   Class<?> targetTypeClass,\n                                                   Type parameterType,\n                                                   Annotation[] parameterAnnotations,\n                                                   InputStream is, \n                                                   MediaType mediaType, \n                                                   Message m)", "full_signature": "@SuppressWarnings(\"unchecked\") public static Object readFromMessageBodyReader(List<ReaderInterceptor> readers,\n                                                   Class<?> targetTypeClass,\n                                                   Type parameterType,\n                                                   Annotation[] parameterAnnotations,\n                                                   InputStream is, \n                                                   MediaType mediaType, \n                                                   Message m)", "class_method_signature": "JAXRSUtils.readFromMessageBodyReader(List<ReaderInterceptor> readers,\n                                                   Class<?> targetTypeClass,\n                                                   Type parameterType,\n                                                   Annotation[] parameterAnnotations,\n                                                   InputStream is, \n                                                   MediaType mediaType, \n                                                   Message m)", "testcase": false, "constructor": false}, {"identifier": "writeMessageBody", "parameters": "(List<WriterInterceptor> writers, \n                                Object entity,\n                                Class<?> type, Type genericType,\n                                Annotation[] annotations, \n                                MediaType mediaType,\n                                MultivaluedMap<String, Object> httpHeaders,\n                                Message message)", "modifiers": "public static", "return": "void", "signature": "void writeMessageBody(List<WriterInterceptor> writers, \n                                Object entity,\n                                Class<?> type, Type genericType,\n                                Annotation[] annotations, \n                                MediaType mediaType,\n                                MultivaluedMap<String, Object> httpHeaders,\n                                Message message)", "full_signature": "public static void writeMessageBody(List<WriterInterceptor> writers, \n                                Object entity,\n                                Class<?> type, Type genericType,\n                                Annotation[] annotations, \n                                MediaType mediaType,\n                                MultivaluedMap<String, Object> httpHeaders,\n                                Message message)", "class_method_signature": "JAXRSUtils.writeMessageBody(List<WriterInterceptor> writers, \n                                Object entity,\n                                Class<?> type, Type genericType,\n                                Annotation[] annotations, \n                                MediaType mediaType,\n                                MultivaluedMap<String, Object> httpHeaders,\n                                Message message)", "testcase": false, "constructor": false}, {"identifier": "matchConsumeTypes", "parameters": "(MediaType requestContentType, \n                                            OperationResourceInfo ori)", "modifiers": "public static", "return": "boolean", "signature": "boolean matchConsumeTypes(MediaType requestContentType, \n                                            OperationResourceInfo ori)", "full_signature": "public static boolean matchConsumeTypes(MediaType requestContentType, \n                                            OperationResourceInfo ori)", "class_method_signature": "JAXRSUtils.matchConsumeTypes(MediaType requestContentType, \n                                            OperationResourceInfo ori)", "testcase": false, "constructor": false}, {"identifier": "matchProduceTypes", "parameters": "(MediaType acceptContentType, \n                                            OperationResourceInfo ori)", "modifiers": "public static", "return": "boolean", "signature": "boolean matchProduceTypes(MediaType acceptContentType, \n                                            OperationResourceInfo ori)", "full_signature": "public static boolean matchProduceTypes(MediaType acceptContentType, \n                                            OperationResourceInfo ori)", "class_method_signature": "JAXRSUtils.matchProduceTypes(MediaType acceptContentType, \n                                            OperationResourceInfo ori)", "testcase": false, "constructor": false}, {"identifier": "matchMimeTypes", "parameters": "(MediaType requestContentType, \n                                         MediaType acceptContentType, \n                                         OperationResourceInfo ori)", "modifiers": "public static", "return": "boolean", "signature": "boolean matchMimeTypes(MediaType requestContentType, \n                                         MediaType acceptContentType, \n                                         OperationResourceInfo ori)", "full_signature": "public static boolean matchMimeTypes(MediaType requestContentType, \n                                         MediaType acceptContentType, \n                                         OperationResourceInfo ori)", "class_method_signature": "JAXRSUtils.matchMimeTypes(MediaType requestContentType, \n                                         MediaType acceptContentType, \n                                         OperationResourceInfo ori)", "testcase": false, "constructor": false}, {"identifier": "parseMediaTypes", "parameters": "(String types)", "modifiers": "public static", "return": "List<MediaType>", "signature": "List<MediaType> parseMediaTypes(String types)", "full_signature": "public static List<MediaType> parseMediaTypes(String types)", "class_method_signature": "JAXRSUtils.parseMediaTypes(String types)", "testcase": false, "constructor": false}, {"identifier": "intersectMimeTypes", "parameters": "(List<MediaType> requiredMediaTypes, \n                                                     List<MediaType> userMediaTypes,\n                                                     boolean addRequiredParamsIfPossible)", "modifiers": "public static", "return": "List<MediaType>", "signature": "List<MediaType> intersectMimeTypes(List<MediaType> requiredMediaTypes, \n                                                     List<MediaType> userMediaTypes,\n                                                     boolean addRequiredParamsIfPossible)", "full_signature": "public static List<MediaType> intersectMimeTypes(List<MediaType> requiredMediaTypes, \n                                                     List<MediaType> userMediaTypes,\n                                                     boolean addRequiredParamsIfPossible)", "class_method_signature": "JAXRSUtils.intersectMimeTypes(List<MediaType> requiredMediaTypes, \n                                                     List<MediaType> userMediaTypes,\n                                                     boolean addRequiredParamsIfPossible)", "testcase": false, "constructor": false}, {"identifier": "splitMediaSubType", "parameters": "(String type, boolean after)", "modifiers": "private static", "return": "String", "signature": "String splitMediaSubType(String type, boolean after)", "full_signature": "private static String splitMediaSubType(String type, boolean after)", "class_method_signature": "JAXRSUtils.splitMediaSubType(String type, boolean after)", "testcase": false, "constructor": false}, {"identifier": "intersectMimeTypes", "parameters": "(List<MediaType> mimeTypesA, \n                                                     MediaType mimeTypeB)", "modifiers": "public static", "return": "List<MediaType>", "signature": "List<MediaType> intersectMimeTypes(List<MediaType> mimeTypesA, \n                                                     MediaType mimeTypeB)", "full_signature": "public static List<MediaType> intersectMimeTypes(List<MediaType> mimeTypesA, \n                                                     MediaType mimeTypeB)", "class_method_signature": "JAXRSUtils.intersectMimeTypes(List<MediaType> mimeTypesA, \n                                                     MediaType mimeTypeB)", "testcase": false, "constructor": false}, {"identifier": "intersectMimeTypes", "parameters": "(String mimeTypesA, \n                                                     String mimeTypesB)", "modifiers": "public static", "return": "List<MediaType>", "signature": "List<MediaType> intersectMimeTypes(String mimeTypesA, \n                                                     String mimeTypesB)", "full_signature": "public static List<MediaType> intersectMimeTypes(String mimeTypesA, \n                                                     String mimeTypesB)", "class_method_signature": "JAXRSUtils.intersectMimeTypes(String mimeTypesA, \n                                                     String mimeTypesB)", "testcase": false, "constructor": false}, {"identifier": "sortMediaTypes", "parameters": "(String mediaTypes)", "modifiers": "public static", "return": "List<MediaType>", "signature": "List<MediaType> sortMediaTypes(String mediaTypes)", "full_signature": "public static List<MediaType> sortMediaTypes(String mediaTypes)", "class_method_signature": "JAXRSUtils.sortMediaTypes(String mediaTypes)", "testcase": false, "constructor": false}, {"identifier": "sortMediaTypes", "parameters": "(List<MediaType> types)", "modifiers": "public static", "return": "List<MediaType>", "signature": "List<MediaType> sortMediaTypes(List<MediaType> types)", "full_signature": "public static List<MediaType> sortMediaTypes(List<MediaType> types)", "class_method_signature": "JAXRSUtils.sortMediaTypes(List<MediaType> types)", "testcase": false, "constructor": false}, {"identifier": "getWebApplicationExceptionClass", "parameters": "(Response exResponse,\n                                                           Class<?> defaultExceptionType)", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> getWebApplicationExceptionClass(Response exResponse,\n                                                           Class<?> defaultExceptionType)", "full_signature": "public static Class<?> getWebApplicationExceptionClass(Response exResponse,\n                                                           Class<?> defaultExceptionType)", "class_method_signature": "JAXRSUtils.getWebApplicationExceptionClass(Response exResponse,\n                                                           Class<?> defaultExceptionType)", "testcase": false, "constructor": false}, {"identifier": "convertFaultToResponse", "parameters": "(T ex, Message inMessage)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "Response", "signature": "Response convertFaultToResponse(T ex, Message inMessage)", "full_signature": "@SuppressWarnings(\"unchecked\") public static Response convertFaultToResponse(T ex, Message inMessage)", "class_method_signature": "JAXRSUtils.convertFaultToResponse(T ex, Message inMessage)", "testcase": false, "constructor": false}, {"identifier": "removeMediaTypeParameter", "parameters": "(MediaType mt, String paramName)", "modifiers": "public static", "return": "String", "signature": "String removeMediaTypeParameter(MediaType mt, String paramName)", "full_signature": "public static String removeMediaTypeParameter(MediaType mt, String paramName)", "class_method_signature": "JAXRSUtils.removeMediaTypeParameter(MediaType mt, String paramName)", "testcase": false, "constructor": false}, {"identifier": "propogateException", "parameters": "(Message m)", "modifiers": "public static", "return": "boolean", "signature": "boolean propogateException(Message m)", "full_signature": "public static boolean propogateException(Message m)", "class_method_signature": "JAXRSUtils.propogateException(Message m)", "testcase": false, "constructor": false}, {"identifier": "getClassQName", "parameters": "(Class<?> type)", "modifiers": "public static", "return": "QName", "signature": "QName getClassQName(Class<?> type)", "full_signature": "public static QName getClassQName(Class<?> type)", "class_method_signature": "JAXRSUtils.getClassQName(Class<?> type)", "testcase": false, "constructor": false}, {"identifier": "convertStringToQName", "parameters": "(String name)", "modifiers": "public static", "return": "QName", "signature": "QName convertStringToQName(String name)", "full_signature": "public static QName convertStringToQName(String name)", "class_method_signature": "JAXRSUtils.convertStringToQName(String name)", "testcase": false, "constructor": false}, {"identifier": "runContainerRequestFilters", "parameters": "(ProviderFactory pf, Message m, boolean preMatch, \n                                              List<String> names)", "modifiers": "public static", "return": "boolean", "signature": "boolean runContainerRequestFilters(ProviderFactory pf, Message m, boolean preMatch, \n                                              List<String> names)", "full_signature": "public static boolean runContainerRequestFilters(ProviderFactory pf, Message m, boolean preMatch, \n                                              List<String> names)", "class_method_signature": "JAXRSUtils.runContainerRequestFilters(ProviderFactory pf, Message m, boolean preMatch, \n                                              List<String> names)", "testcase": false, "constructor": false}, {"identifier": "runContainerResponseFilters", "parameters": "(ProviderFactory pf,\n                                                   Response r,\n                                                   Message m, \n                                                   OperationResourceInfo ori)", "modifiers": "public static", "return": "void", "signature": "void runContainerResponseFilters(ProviderFactory pf,\n                                                   Response r,\n                                                   Message m, \n                                                   OperationResourceInfo ori)", "full_signature": "public static void runContainerResponseFilters(ProviderFactory pf,\n                                                   Response r,\n                                                   Message m, \n                                                   OperationResourceInfo ori)", "class_method_signature": "JAXRSUtils.runContainerResponseFilters(ProviderFactory pf,\n                                                   Response r,\n                                                   Message m, \n                                                   OperationResourceInfo ori)", "testcase": false, "constructor": false}], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/utils/JAXRSUtils.java"}, "focal_method": {"identifier": "processParameters", "parameters": "(OperationResourceInfo ori, \n                                                 MultivaluedMap<String, String> values, \n                                                 Message message)", "modifiers": "public static", "return": "List<Object>", "body": "public static List<Object> processParameters(OperationResourceInfo ori, \n                                                 MultivaluedMap<String, String> values, \n                                                 Message message)\n        throws IOException, WebApplicationException {\n        \n        \n        Method method = ori.getMethodToInvoke();\n        Class<?>[] parameterTypes = method.getParameterTypes();\n        Parameter[] paramsInfo = ori.getParameters().toArray(new Parameter[ori.getParameters().size()]);  \n        Method annotatedMethod = ori.getAnnotatedMethod();\n        Type[] genericParameterTypes = annotatedMethod == null ? method.getGenericParameterTypes() \n                                      : annotatedMethod.getGenericParameterTypes();\n        Annotation[][] anns = annotatedMethod == null ? null : annotatedMethod.getParameterAnnotations();\n        List<Object> params = new ArrayList<Object>(parameterTypes.length);\n\n        for (int i = 0; i < parameterTypes.length; i++) {\n            Class<?> param = parameterTypes[i]; \n            Type genericParam = genericParameterTypes[i];\n            if (genericParam instanceof TypeVariable) {\n                genericParam = InjectionUtils.getSuperType(ori.getClassResourceInfo().getServiceClass(), \n                                                           (TypeVariable<?>)genericParam);\n            }\n            if (param == Object.class) {\n                param = (Class<?>)genericParam; \n            } else if (genericParam == Object.class) {\n                genericParam = param;\n            }\n            \n            \n            Object paramValue = processParameter(param, \n                                                 genericParam,\n                                                 anns == null ? new Annotation[0] : anns[i],\n                                                 paramsInfo[i], \n                                                 values, \n                                                 message,\n                                                 ori);\n            params.add(paramValue);\n        }\n\n        return params;\n    }", "signature": "List<Object> processParameters(OperationResourceInfo ori, \n                                                 MultivaluedMap<String, String> values, \n                                                 Message message)", "full_signature": "public static List<Object> processParameters(OperationResourceInfo ori, \n                                                 MultivaluedMap<String, String> values, \n                                                 Message message)", "class_method_signature": "JAXRSUtils.processParameters(OperationResourceInfo ori, \n                                                 MultivaluedMap<String, String> values, \n                                                 Message message)", "testcase": false, "constructor": false, "invocations": ["getMethodToInvoke", "getParameterTypes", "toArray", "getParameters", "size", "getParameters", "getAnnotatedMethod", "getGenericParameterTypes", "getGenericParameterTypes", "getParameterAnnotations", "getSuperType", "getServiceClass", "getClassResourceInfo", "processParameter", "add"]}, "repository": {"repo_id": 6822394, "url": "https://github.com/jerrtop/Java_demo_set", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 13, "size": 123833, "license": "licensed"}}