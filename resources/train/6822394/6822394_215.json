{"test_class": {"identifier": "ManagedConnectionFactoryImplTest", "superclass": "extends Assert", "interfaces": "", "fields": [{"original_string": "protected ManagedConnectionFactoryImpl mci;", "modifier": "protected", "type": "ManagedConnectionFactoryImpl", "declarator": "mci", "var_name": "mci"}, {"original_string": "protected CXFConnectionRequestInfo cri;", "modifier": "protected", "type": "CXFConnectionRequestInfo", "declarator": "cri", "var_name": "cri"}, {"original_string": "protected CXFConnectionRequestInfo cri2;", "modifier": "protected", "type": "CXFConnectionRequestInfo", "declarator": "cri2", "var_name": "cri2"}, {"original_string": "protected CXFConnectionRequestInfo cri3;", "modifier": "protected", "type": "CXFConnectionRequestInfo", "declarator": "cri3", "var_name": "cri3"}], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/integration/jca/src/test/java/org/apache/cxf/jca/cxf/ManagedConnectionFactoryImplTest.java"}, "test_case": {"identifier": "testSetEJBServicePropertiesPollInterval", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetEJBServicePropertiesPollInterval() throws Exception {\n        final Integer value = new Integer(10);\n        Properties p = new Properties();\n        ManagedConnectionFactoryImpl mcf = new ManagedConnectionFactoryImpl(p);\n\n        mcf.setEJBServicePropertiesPollInterval(value);\n        assertTrue(p.containsValue(value.toString()));\n        assertEquals(value, mcf.getEJBServicePropertiesPollInterval());\n    }", "signature": "void testSetEJBServicePropertiesPollInterval()", "full_signature": "@Test public void testSetEJBServicePropertiesPollInterval()", "class_method_signature": "ManagedConnectionFactoryImplTest.testSetEJBServicePropertiesPollInterval()", "testcase": true, "constructor": false, "invocations": ["setEJBServicePropertiesPollInterval", "assertTrue", "containsValue", "toString", "assertEquals", "getEJBServicePropertiesPollInterval"]}, "focal_class": {"identifier": "ManagedConnectionFactoryImpl", "superclass": "extends AbstractManagedConnectionFactoryImpl", "interfaces": "implements CXFManagedConnectionFactory", "fields": [{"original_string": "private static final long serialVersionUID = -891927761318109853L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -891927761318109853L", "var_name": "serialVersionUID"}, {"original_string": "private static final Logger LOG = LogUtils.getL7dLogger(ManagedConnectionFactoryImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LogUtils.getL7dLogger(ManagedConnectionFactoryImpl.class)", "var_name": "LOG"}, {"original_string": "private static final ResourceBundle BUNDLE = BundleUtils.getBundle(ManagedConnectionFactoryImpl.class);", "modifier": "private static final", "type": "ResourceBundle", "declarator": "BUNDLE = BundleUtils.getBundle(ManagedConnectionFactoryImpl.class)", "var_name": "BUNDLE"}, {"original_string": "protected JCABusFactory jcaBusFactory;", "modifier": "protected", "type": "JCABusFactory", "declarator": "jcaBusFactory", "var_name": "jcaBusFactory"}], "methods": [{"identifier": "ManagedConnectionFactoryImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " ManagedConnectionFactoryImpl()", "full_signature": "public  ManagedConnectionFactoryImpl()", "class_method_signature": "ManagedConnectionFactoryImpl.ManagedConnectionFactoryImpl()", "testcase": false, "constructor": true}, {"identifier": "ManagedConnectionFactoryImpl", "parameters": "(Properties props)", "modifiers": "public", "return": "", "signature": " ManagedConnectionFactoryImpl(Properties props)", "full_signature": "public  ManagedConnectionFactoryImpl(Properties props)", "class_method_signature": "ManagedConnectionFactoryImpl.ManagedConnectionFactoryImpl(Properties props)", "testcase": false, "constructor": true}, {"identifier": "setLogLevel", "parameters": "(String logLevel)", "modifiers": "public", "return": "void", "signature": "void setLogLevel(String logLevel)", "full_signature": "public void setLogLevel(String logLevel)", "class_method_signature": "ManagedConnectionFactoryImpl.setLogLevel(String logLevel)", "testcase": false, "constructor": false}, {"identifier": "setEJBServicePropertiesURL", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void setEJBServicePropertiesURL(String name)", "full_signature": "public void setEJBServicePropertiesURL(String name)", "class_method_signature": "ManagedConnectionFactoryImpl.setEJBServicePropertiesURL(String name)", "testcase": false, "constructor": false}, {"identifier": "setMonitorEJBServiceProperties", "parameters": "(Boolean monitor)", "modifiers": "public", "return": "void", "signature": "void setMonitorEJBServiceProperties(Boolean monitor)", "full_signature": "public void setMonitorEJBServiceProperties(Boolean monitor)", "class_method_signature": "ManagedConnectionFactoryImpl.setMonitorEJBServiceProperties(Boolean monitor)", "testcase": false, "constructor": false}, {"identifier": "setEJBServicePropertiesPollInterval", "parameters": "(Integer pollInterval)", "modifiers": "public", "return": "void", "signature": "void setEJBServicePropertiesPollInterval(Integer pollInterval)", "full_signature": "public void setEJBServicePropertiesPollInterval(Integer pollInterval)", "class_method_signature": "ManagedConnectionFactoryImpl.setEJBServicePropertiesPollInterval(Integer pollInterval)", "testcase": false, "constructor": false}, {"identifier": "getLogLevel", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLogLevel()", "full_signature": "public String getLogLevel()", "class_method_signature": "ManagedConnectionFactoryImpl.getLogLevel()", "testcase": false, "constructor": false}, {"identifier": "getEJBServicePropertiesURL", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getEJBServicePropertiesURL()", "full_signature": "public String getEJBServicePropertiesURL()", "class_method_signature": "ManagedConnectionFactoryImpl.getEJBServicePropertiesURL()", "testcase": false, "constructor": false}, {"identifier": "getMonitorEJBServiceProperties", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean getMonitorEJBServiceProperties()", "full_signature": "public Boolean getMonitorEJBServiceProperties()", "class_method_signature": "ManagedConnectionFactoryImpl.getMonitorEJBServiceProperties()", "testcase": false, "constructor": false}, {"identifier": "getEJBServicePropertiesPollInterval", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getEJBServicePropertiesPollInterval()", "full_signature": "public Integer getEJBServicePropertiesPollInterval()", "class_method_signature": "ManagedConnectionFactoryImpl.getEJBServicePropertiesPollInterval()", "testcase": false, "constructor": false}, {"identifier": "getEJBServicePropertiesURLInstance", "parameters": "()", "modifiers": "public", "return": "URL", "signature": "URL getEJBServicePropertiesURLInstance()", "full_signature": "public URL getEJBServicePropertiesURLInstance()", "class_method_signature": "ManagedConnectionFactoryImpl.getEJBServicePropertiesURLInstance()", "testcase": false, "constructor": false}, {"identifier": "getEJBServantBaseURL", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getEJBServantBaseURL()", "full_signature": "public String getEJBServantBaseURL()", "class_method_signature": "ManagedConnectionFactoryImpl.getEJBServantBaseURL()", "testcase": false, "constructor": false}, {"identifier": "setEJBServantBaseURL", "parameters": "(String url)", "modifiers": "public", "return": "void", "signature": "void setEJBServantBaseURL(String url)", "full_signature": "public void setEJBServantBaseURL(String url)", "class_method_signature": "ManagedConnectionFactoryImpl.setEJBServantBaseURL(String url)", "testcase": false, "constructor": false}, {"identifier": "validateReference", "parameters": "(AbstractManagedConnectionImpl conn, javax.security.auth.Subject subj)", "modifiers": "protected", "return": "void", "signature": "void validateReference(AbstractManagedConnectionImpl conn, javax.security.auth.Subject subj)", "full_signature": "protected void validateReference(AbstractManagedConnectionImpl conn, javax.security.auth.Subject subj)", "class_method_signature": "ManagedConnectionFactoryImpl.validateReference(AbstractManagedConnectionImpl conn, javax.security.auth.Subject subj)", "testcase": false, "constructor": false}, {"identifier": "createConnectionFactory", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object createConnectionFactory()", "full_signature": "public Object createConnectionFactory()", "class_method_signature": "ManagedConnectionFactoryImpl.createConnectionFactory()", "testcase": false, "constructor": false}, {"identifier": "createConnectionFactory", "parameters": "(ConnectionManager connMgr)", "modifiers": "public", "return": "Object", "signature": "Object createConnectionFactory(ConnectionManager connMgr)", "full_signature": "public Object createConnectionFactory(ConnectionManager connMgr)", "class_method_signature": "ManagedConnectionFactoryImpl.createConnectionFactory(ConnectionManager connMgr)", "testcase": false, "constructor": false}, {"identifier": "createManagedConnection", "parameters": "(Subject subject, ConnectionRequestInfo connReqInfo)", "modifiers": "public", "return": "ManagedConnection", "signature": "ManagedConnection createManagedConnection(Subject subject, ConnectionRequestInfo connReqInfo)", "full_signature": "public ManagedConnection createManagedConnection(Subject subject, ConnectionRequestInfo connReqInfo)", "class_method_signature": "ManagedConnectionFactoryImpl.createManagedConnection(Subject subject, ConnectionRequestInfo connReqInfo)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "ManagedConnectionFactoryImpl.close()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(ClassLoader appserverClassLoader)", "modifiers": "protected synchronized", "return": "void", "signature": "void init(ClassLoader appserverClassLoader)", "full_signature": "protected synchronized void init(ClassLoader appserverClassLoader)", "class_method_signature": "ManagedConnectionFactoryImpl.init(ClassLoader appserverClassLoader)", "testcase": false, "constructor": false}, {"identifier": "getBus", "parameters": "()", "modifiers": "public", "return": "Bus", "signature": "Bus getBus()", "full_signature": "public Bus getBus()", "class_method_signature": "ManagedConnectionFactoryImpl.getBus()", "testcase": false, "constructor": false}, {"identifier": "getBootstrapContext", "parameters": "()", "modifiers": "protected", "return": "Object", "signature": "Object getBootstrapContext()", "full_signature": "protected Object getBootstrapContext()", "class_method_signature": "ManagedConnectionFactoryImpl.getBootstrapContext()", "testcase": false, "constructor": false}], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/integration/jca/src/main/java/org/apache/cxf/jca/cxf/ManagedConnectionFactoryImpl.java"}, "focal_method": {"identifier": "setEJBServicePropertiesPollInterval", "parameters": "(Integer pollInterval)", "modifiers": "public", "return": "void", "body": "public void setEJBServicePropertiesPollInterval(Integer pollInterval) {\n        setProperty(MONITOR_POLL_INTERVAL, pollInterval.toString());\n    }", "signature": "void setEJBServicePropertiesPollInterval(Integer pollInterval)", "full_signature": "public void setEJBServicePropertiesPollInterval(Integer pollInterval)", "class_method_signature": "ManagedConnectionFactoryImpl.setEJBServicePropertiesPollInterval(Integer pollInterval)", "testcase": false, "constructor": false, "invocations": ["setProperty", "toString"]}, "repository": {"repo_id": 6822394, "url": "https://github.com/jerrtop/Java_demo_set", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 13, "size": 123833, "license": "licensed"}}