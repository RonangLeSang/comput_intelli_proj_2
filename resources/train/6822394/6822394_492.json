{"test_class": {"identifier": "JaxbAssertionBuilderTest", "superclass": "extends Assert", "interfaces": "", "fields": [], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/rt/ws/policy/src/test/java/org/apache/cxf/ws/policy/builder/jaxb/JaxbAssertionBuilderTest.java"}, "test_case": {"identifier": "testGetKnownElements", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetKnownElements() throws Exception {\n        QName qn = new QName(\"http://cxf.apache.org/test/assertions/foo\", \"FooType\");\n        JaxbAssertionBuilder<FooType> ab = new JaxbAssertionBuilder<FooType>(FooType.class, qn);\n        assertNotNull(ab);\n        assertEquals(1, ab.getKnownElements().length);\n        assertSame(qn, ab.getKnownElements()[0]);\n    }", "signature": "void testGetKnownElements()", "full_signature": "@Test public void testGetKnownElements()", "class_method_signature": "JaxbAssertionBuilderTest.testGetKnownElements()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "assertEquals", "getKnownElements", "assertSame", "getKnownElements"]}, "focal_class": {"identifier": "JaxbAssertionBuilder", "superclass": "", "interfaces": "implements AssertionBuilder<Element>", "fields": [{"original_string": "private static final Logger LOG = LogUtils.getL7dLogger(JaxbAssertionBuilder.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LogUtils.getL7dLogger(JaxbAssertionBuilder.class)", "var_name": "LOG"}, {"original_string": "private Collection<QName> supportedTypes;", "modifier": "private", "type": "Collection<QName>", "declarator": "supportedTypes", "var_name": "supportedTypes"}, {"original_string": "private Class<T> type;", "modifier": "private", "type": "Class<T>", "declarator": "type", "var_name": "type"}, {"original_string": "private JAXBContext context;", "modifier": "private", "type": "JAXBContext", "declarator": "context", "var_name": "context"}, {"original_string": "private Set<Class<?>> classes;", "modifier": "private", "type": "Set<Class<?>>", "declarator": "classes", "var_name": "classes"}], "methods": [{"identifier": "JaxbAssertionBuilder", "parameters": "(QName qn)", "modifiers": "public", "return": "", "signature": " JaxbAssertionBuilder(QName qn)", "full_signature": "public  JaxbAssertionBuilder(QName qn)", "class_method_signature": "JaxbAssertionBuilder.JaxbAssertionBuilder(QName qn)", "testcase": false, "constructor": true}, {"identifier": "JaxbAssertionBuilder", "parameters": "(String className, QName qn)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "", "signature": " JaxbAssertionBuilder(String className, QName qn)", "full_signature": "@SuppressWarnings(\"unchecked\") public  JaxbAssertionBuilder(String className, QName qn)", "class_method_signature": "JaxbAssertionBuilder.JaxbAssertionBuilder(String className, QName qn)", "testcase": false, "constructor": true}, {"identifier": "JaxbAssertionBuilder", "parameters": "(Class<T> type, QName qn)", "modifiers": "public", "return": "", "signature": " JaxbAssertionBuilder(Class<T> type, QName qn)", "full_signature": "public  JaxbAssertionBuilder(Class<T> type, QName qn)", "class_method_signature": "JaxbAssertionBuilder.JaxbAssertionBuilder(Class<T> type, QName qn)", "testcase": false, "constructor": true}, {"identifier": "getContext", "parameters": "()", "modifiers": "private synchronized", "return": "JAXBContext", "signature": "JAXBContext getContext()", "full_signature": "private synchronized JAXBContext getContext()", "class_method_signature": "JaxbAssertionBuilder.getContext()", "testcase": false, "constructor": false}, {"identifier": "getUnmarshaller", "parameters": "()", "modifiers": "protected", "return": "Unmarshaller", "signature": "Unmarshaller getUnmarshaller()", "full_signature": "protected Unmarshaller getUnmarshaller()", "class_method_signature": "JaxbAssertionBuilder.getUnmarshaller()", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(Element element, AssertionBuilderFactory factory)", "modifiers": "public", "return": "Assertion", "signature": "Assertion build(Element element, AssertionBuilderFactory factory)", "full_signature": "public Assertion build(Element element, AssertionBuilderFactory factory)", "class_method_signature": "JaxbAssertionBuilder.build(Element element, AssertionBuilderFactory factory)", "testcase": false, "constructor": false}, {"identifier": "getKnownElements", "parameters": "()", "modifiers": "public", "return": "QName[]", "signature": "QName[] getKnownElements()", "full_signature": "public QName[] getKnownElements()", "class_method_signature": "JaxbAssertionBuilder.getKnownElements()", "testcase": false, "constructor": false}, {"identifier": "buildAssertion", "parameters": "()", "modifiers": "protected", "return": "JaxbAssertion<T>", "signature": "JaxbAssertion<T> buildAssertion()", "full_signature": "protected JaxbAssertion<T> buildAssertion()", "class_method_signature": "JaxbAssertionBuilder.buildAssertion()", "testcase": false, "constructor": false}, {"identifier": "getOptionality", "parameters": "(Element element)", "modifiers": "protected", "return": "boolean", "signature": "boolean getOptionality(Element element)", "full_signature": "protected boolean getOptionality(Element element)", "class_method_signature": "JaxbAssertionBuilder.getOptionality(Element element)", "testcase": false, "constructor": false}, {"identifier": "getData", "parameters": "(Element element)", "modifiers": "@SuppressWarnings(\"unchecked\") protected", "return": "T", "signature": "T getData(Element element)", "full_signature": "@SuppressWarnings(\"unchecked\") protected T getData(Element element)", "class_method_signature": "JaxbAssertionBuilder.getData(Element element)", "testcase": false, "constructor": false}], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/rt/ws/policy/src/main/java/org/apache/cxf/ws/policy/builder/jaxb/JaxbAssertionBuilder.java"}, "focal_method": {"identifier": "getKnownElements", "parameters": "()", "modifiers": "public", "return": "QName[]", "body": "public QName[] getKnownElements() {\n        return supportedTypes.toArray(new QName[supportedTypes.size()]);\n    }", "signature": "QName[] getKnownElements()", "full_signature": "public QName[] getKnownElements()", "class_method_signature": "JaxbAssertionBuilder.getKnownElements()", "testcase": false, "constructor": false, "invocations": ["toArray", "size"]}, "repository": {"repo_id": 6822394, "url": "https://github.com/jerrtop/Java_demo_set", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 13, "size": 123833, "license": "licensed"}}