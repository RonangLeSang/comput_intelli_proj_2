{"test_class": {"identifier": "CorbaObjectWriterTest", "superclass": "extends Assert", "interfaces": "", "fields": [{"original_string": "private static ORB orb;", "modifier": "private static", "type": "ORB", "declarator": "orb", "var_name": "orb"}], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/rt/bindings/corba/src/test/java/org/apache/cxf/binding/corba/runtime/CorbaObjectWriterTest.java"}, "test_case": {"identifier": "testWriteException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWriteException() {\n        // create the following exception\n        // exception TestExcept {\n        //     short code;\n        //     string message;\n        // }\n        short code = 12345;\n        String message = \"54321\";\n        String reposID = \"IDL:org.apache.cxf.TestException/1.0\";\n        \n        QName exceptIdlType = new QName(CorbaConstants.NU_WSDL_CORBA,\n                                        \"exception\", CorbaConstants.NP_WSDL_CORBA);\n        QName shortIdlType = new QName(CorbaConstants.NU_WSDL_CORBA,\n                                       \"short\", CorbaConstants.NP_WSDL_CORBA);\n        QName stringIdlType = new QName(CorbaConstants.NU_WSDL_CORBA,\n                                        \"string\", CorbaConstants.NP_WSDL_CORBA);\n        \n        Exception exceptType = new Exception();\n        exceptType.setName(\"TestException\");\n        exceptType.setRepositoryID(reposID);\n        MemberType m1 = new MemberType();\n        m1.setIdltype(shortIdlType);\n        m1.setName(\"code\");\n        MemberType m2 = new MemberType();\n        m2.setIdltype(stringIdlType);\n        m2.setName(\"message\");\n        exceptType.getMember().add(m1);\n        exceptType.getMember().add(m2);\n\n        // build the object holder\n        StructMember[] exceptMembers = new StructMember[2];\n        exceptMembers[0] = new StructMember(\"code\", orb.get_primitive_tc(TCKind.tk_short), null);\n        exceptMembers[1] = new StructMember(\"message\", orb.get_primitive_tc(TCKind.tk_string), null);\n        TypeCode exceptTC = orb.create_exception_tc(reposID, \"TestException\", exceptMembers);\n        CorbaExceptionHandler obj = new CorbaExceptionHandler(new QName(\"TestException\"), exceptIdlType, \n                                                              exceptTC, exceptType);\n        \n        CorbaPrimitiveHandler member1 = \n            new CorbaPrimitiveHandler(new QName(\"code\"), shortIdlType, exceptMembers[0].type, null);\n        member1.setValueFromData(Short.toString(code));\n        CorbaPrimitiveHandler member2 = \n            new CorbaPrimitiveHandler(new QName(\"message\"), stringIdlType, exceptMembers[1].type, null);\n        member2.setValueFromData(message);\n        obj.addMember(member1);\n        obj.addMember(member2);\n\n        OutputStream oStream = orb.create_output_stream();\n        CorbaObjectWriter writer = new CorbaObjectWriter(oStream);\n        writer.writeException(obj);\n\n        InputStream iStream = oStream.create_input_stream();\n        \n        String readId = iStream.read_string();\n        assertTrue(readId.equals(reposID));\n        short readCode = iStream.read_short();\n        assertTrue(readCode == code);\n        String readMessage = iStream.read_string();\n        assertTrue(readMessage.equals(message));\n    }", "signature": "void testWriteException()", "full_signature": "@Test public void testWriteException()", "class_method_signature": "CorbaObjectWriterTest.testWriteException()", "testcase": true, "constructor": false, "invocations": ["setName", "setRepositoryID", "setIdltype", "setName", "setIdltype", "setName", "add", "getMember", "add", "getMember", "get_primitive_tc", "get_primitive_tc", "create_exception_tc", "setValueFromData", "toString", "setValueFromData", "addMember", "addMember", "create_output_stream", "writeException", "create_input_stream", "read_string", "assertTrue", "equals", "read_short", "assertTrue", "read_string", "assertTrue", "equals"]}, "focal_class": {"identifier": "CorbaObjectWriter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private OutputStream stream;", "modifier": "private", "type": "OutputStream", "declarator": "stream", "var_name": "stream"}], "methods": [{"identifier": "CorbaObjectWriter", "parameters": "(OutputStream outStream)", "modifiers": "public", "return": "", "signature": " CorbaObjectWriter(OutputStream outStream)", "full_signature": "public  CorbaObjectWriter(OutputStream outStream)", "class_method_signature": "CorbaObjectWriter.CorbaObjectWriter(OutputStream outStream)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(CorbaObjectHandler obj)", "modifiers": "public", "return": "void", "signature": "void write(CorbaObjectHandler obj)", "full_signature": "public void write(CorbaObjectHandler obj)", "class_method_signature": "CorbaObjectWriter.write(CorbaObjectHandler obj)", "testcase": false, "constructor": false}, {"identifier": "writeBoolean", "parameters": "(Boolean b)", "modifiers": "public", "return": "void", "signature": "void writeBoolean(Boolean b)", "full_signature": "public void writeBoolean(Boolean b)", "class_method_signature": "CorbaObjectWriter.writeBoolean(Boolean b)", "testcase": false, "constructor": false}, {"identifier": "writeChar", "parameters": "(Character c)", "modifiers": "public", "return": "void", "signature": "void writeChar(Character c)", "full_signature": "public void writeChar(Character c)", "class_method_signature": "CorbaObjectWriter.writeChar(Character c)", "testcase": false, "constructor": false}, {"identifier": "writeWChar", "parameters": "(Character c)", "modifiers": "public", "return": "void", "signature": "void writeWChar(Character c)", "full_signature": "public void writeWChar(Character c)", "class_method_signature": "CorbaObjectWriter.writeWChar(Character c)", "testcase": false, "constructor": false}, {"identifier": "writeOctet", "parameters": "(Byte b)", "modifiers": "public", "return": "void", "signature": "void writeOctet(Byte b)", "full_signature": "public void writeOctet(Byte b)", "class_method_signature": "CorbaObjectWriter.writeOctet(Byte b)", "testcase": false, "constructor": false}, {"identifier": "writeShort", "parameters": "(Short s)", "modifiers": "public", "return": "void", "signature": "void writeShort(Short s)", "full_signature": "public void writeShort(Short s)", "class_method_signature": "CorbaObjectWriter.writeShort(Short s)", "testcase": false, "constructor": false}, {"identifier": "writeUShort", "parameters": "(Integer s)", "modifiers": "public", "return": "void", "signature": "void writeUShort(Integer s)", "full_signature": "public void writeUShort(Integer s)", "class_method_signature": "CorbaObjectWriter.writeUShort(Integer s)", "testcase": false, "constructor": false}, {"identifier": "writeLong", "parameters": "(Integer l)", "modifiers": "public", "return": "void", "signature": "void writeLong(Integer l)", "full_signature": "public void writeLong(Integer l)", "class_method_signature": "CorbaObjectWriter.writeLong(Integer l)", "testcase": false, "constructor": false}, {"identifier": "writeULong", "parameters": "(Long l)", "modifiers": "public", "return": "void", "signature": "void writeULong(Long l)", "full_signature": "public void writeULong(Long l)", "class_method_signature": "CorbaObjectWriter.writeULong(Long l)", "testcase": false, "constructor": false}, {"identifier": "writeLongLong", "parameters": "(Long l)", "modifiers": "public", "return": "void", "signature": "void writeLongLong(Long l)", "full_signature": "public void writeLongLong(Long l)", "class_method_signature": "CorbaObjectWriter.writeLongLong(Long l)", "testcase": false, "constructor": false}, {"identifier": "writeULongLong", "parameters": "(java.math.BigInteger l)", "modifiers": "public", "return": "void", "signature": "void writeULongLong(java.math.BigInteger l)", "full_signature": "public void writeULongLong(java.math.BigInteger l)", "class_method_signature": "CorbaObjectWriter.writeULongLong(java.math.BigInteger l)", "testcase": false, "constructor": false}, {"identifier": "writeFloat", "parameters": "(Float f)", "modifiers": "public", "return": "void", "signature": "void writeFloat(Float f)", "full_signature": "public void writeFloat(Float f)", "class_method_signature": "CorbaObjectWriter.writeFloat(Float f)", "testcase": false, "constructor": false}, {"identifier": "writeDouble", "parameters": "(Double d)", "modifiers": "public", "return": "void", "signature": "void writeDouble(Double d)", "full_signature": "public void writeDouble(Double d)", "class_method_signature": "CorbaObjectWriter.writeDouble(Double d)", "testcase": false, "constructor": false}, {"identifier": "writeString", "parameters": "(String s)", "modifiers": "public", "return": "void", "signature": "void writeString(String s)", "full_signature": "public void writeString(String s)", "class_method_signature": "CorbaObjectWriter.writeString(String s)", "testcase": false, "constructor": false}, {"identifier": "writeWString", "parameters": "(String s)", "modifiers": "public", "return": "void", "signature": "void writeWString(String s)", "full_signature": "public void writeWString(String s)", "class_method_signature": "CorbaObjectWriter.writeWString(String s)", "testcase": false, "constructor": false}, {"identifier": "writeAny", "parameters": "(CorbaObjectHandler obj)", "modifiers": "public", "return": "void", "signature": "void writeAny(CorbaObjectHandler obj)", "full_signature": "public void writeAny(CorbaObjectHandler obj)", "class_method_signature": "CorbaObjectWriter.writeAny(CorbaObjectHandler obj)", "testcase": false, "constructor": false}, {"identifier": "writeEnum", "parameters": "(CorbaObjectHandler obj)", "modifiers": "public", "return": "void", "signature": "void writeEnum(CorbaObjectHandler obj)", "full_signature": "public void writeEnum(CorbaObjectHandler obj)", "class_method_signature": "CorbaObjectWriter.writeEnum(CorbaObjectHandler obj)", "testcase": false, "constructor": false}, {"identifier": "writeStruct", "parameters": "(CorbaObjectHandler obj)", "modifiers": "public", "return": "void", "signature": "void writeStruct(CorbaObjectHandler obj)", "full_signature": "public void writeStruct(CorbaObjectHandler obj)", "class_method_signature": "CorbaObjectWriter.writeStruct(CorbaObjectHandler obj)", "testcase": false, "constructor": false}, {"identifier": "writeException", "parameters": "(CorbaObjectHandler obj)", "modifiers": "public", "return": "void", "signature": "void writeException(CorbaObjectHandler obj)", "full_signature": "public void writeException(CorbaObjectHandler obj)", "class_method_signature": "CorbaObjectWriter.writeException(CorbaObjectHandler obj)", "testcase": false, "constructor": false}, {"identifier": "writeFixed", "parameters": "(CorbaObjectHandler obj)", "modifiers": "public", "return": "void", "signature": "void writeFixed(CorbaObjectHandler obj)", "full_signature": "public void writeFixed(CorbaObjectHandler obj)", "class_method_signature": "CorbaObjectWriter.writeFixed(CorbaObjectHandler obj)", "testcase": false, "constructor": false}, {"identifier": "writeUnion", "parameters": "(CorbaObjectHandler obj)", "modifiers": "public", "return": "void", "signature": "void writeUnion(CorbaObjectHandler obj)", "full_signature": "public void writeUnion(CorbaObjectHandler obj)", "class_method_signature": "CorbaObjectWriter.writeUnion(CorbaObjectHandler obj)", "testcase": false, "constructor": false}, {"identifier": "writeArray", "parameters": "(CorbaObjectHandler obj)", "modifiers": "public", "return": "void", "signature": "void writeArray(CorbaObjectHandler obj)", "full_signature": "public void writeArray(CorbaObjectHandler obj)", "class_method_signature": "CorbaObjectWriter.writeArray(CorbaObjectHandler obj)", "testcase": false, "constructor": false}, {"identifier": "writeSequence", "parameters": "(CorbaObjectHandler obj)", "modifiers": "public", "return": "void", "signature": "void writeSequence(CorbaObjectHandler obj)", "full_signature": "public void writeSequence(CorbaObjectHandler obj)", "class_method_signature": "CorbaObjectWriter.writeSequence(CorbaObjectHandler obj)", "testcase": false, "constructor": false}, {"identifier": "writeObjectReference", "parameters": "(CorbaObjectHandler obj)", "modifiers": "public", "return": "void", "signature": "void writeObjectReference(CorbaObjectHandler obj)", "full_signature": "public void writeObjectReference(CorbaObjectHandler obj)", "class_method_signature": "CorbaObjectWriter.writeObjectReference(CorbaObjectHandler obj)", "testcase": false, "constructor": false}], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/runtime/CorbaObjectWriter.java"}, "focal_method": {"identifier": "writeException", "parameters": "(CorbaObjectHandler obj)", "modifiers": "public", "return": "void", "body": "public void writeException(CorbaObjectHandler obj) throws CorbaBindingException {\n        CorbaExceptionHandler exHandler = (CorbaExceptionHandler)obj;\n        Exception exType = (Exception)exHandler.getType();\n        List<CorbaObjectHandler> exMembers = exHandler.getMembers();\n        stream.write_string(exType.getRepositoryID());\n        for (int i = 0; i < exMembers.size(); ++i) {\n            this.write(exMembers.get(i));\n        }\n    }", "signature": "void writeException(CorbaObjectHandler obj)", "full_signature": "public void writeException(CorbaObjectHandler obj)", "class_method_signature": "CorbaObjectWriter.writeException(CorbaObjectHandler obj)", "testcase": false, "constructor": false, "invocations": ["getType", "getMembers", "write_string", "getRepositoryID", "size", "write", "get"]}, "repository": {"repo_id": 6822394, "url": "https://github.com/jerrtop/Java_demo_set", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 13, "size": 123833, "license": "licensed"}}