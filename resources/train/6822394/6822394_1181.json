{"test_class": {"identifier": "JAXBEncoderDecoderTest", "superclass": "extends Assert", "interfaces": "", "fields": [{"original_string": "public static final QName  SOAP_ENV = \n            new QName(\"http://schemas.xmlsoap.org/soap/envelope/\", \"Envelope\");", "modifier": "public static final", "type": "QName", "declarator": "SOAP_ENV = \n            new QName(\"http://schemas.xmlsoap.org/soap/envelope/\", \"Envelope\")", "var_name": "SOAP_ENV"}, {"original_string": "public static final QName  SOAP_BODY = \n            new QName(\"http://schemas.xmlsoap.org/soap/envelope/\", \"Body\");", "modifier": "public static final", "type": "QName", "declarator": "SOAP_BODY = \n            new QName(\"http://schemas.xmlsoap.org/soap/envelope/\", \"Body\")", "var_name": "SOAP_BODY"}, {"original_string": "RequestWrapper wrapperAnnotation;", "modifier": "", "type": "RequestWrapper", "declarator": "wrapperAnnotation", "var_name": "wrapperAnnotation"}, {"original_string": "JAXBContext context;", "modifier": "", "type": "JAXBContext", "declarator": "context", "var_name": "context"}, {"original_string": "Schema schema;", "modifier": "", "type": "Schema", "declarator": "schema", "var_name": "schema"}, {"original_string": "Map<String, String> mapField;", "modifier": "", "type": "Map<String, String>", "declarator": "mapField", "var_name": "mapField"}, {"original_string": "String arrayField[];", "modifier": "", "type": "String", "declarator": "arrayField[]", "var_name": "arrayField"}, {"original_string": "List<String> listField;", "modifier": "", "type": "List<String>", "declarator": "listField", "var_name": "listField"}], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/rt/databinding/jaxb/src/test/java/org/apache/cxf/jaxb/JAXBEncoderDecoderTest.java"}, "test_case": {"identifier": "testMarshalRPCLit", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMarshalRPCLit() throws Exception {\n        QName elName = new QName(\"http://test_jaxb_marshall\", \"in\");\n        MessagePartInfo part = new MessagePartInfo(elName, null);\n        part.setElement(true);\n        part.setElementQName(elName);\n        \n\n        Document doc = DOMUtils.createDocument();\n        Element elNode = doc.createElementNS(elName.getNamespaceURI(), \n                                             elName.getLocalPart());\n        JAXBEncoderDecoder.marshall(context.createMarshaller(), \n                                    new String(\"TestSOAPMessage\"), part,  elNode);\n        \n        assertEquals(\"TestSOAPMessage\", elNode.getFirstChild().getFirstChild().getNodeValue());\n    }", "signature": "void testMarshalRPCLit()", "full_signature": "@Test public void testMarshalRPCLit()", "class_method_signature": "JAXBEncoderDecoderTest.testMarshalRPCLit()", "testcase": true, "constructor": false, "invocations": ["setElement", "setElementQName", "createDocument", "createElementNS", "getNamespaceURI", "getLocalPart", "marshall", "createMarshaller", "assertEquals", "getNodeValue", "getFirstChild", "getFirstChild"]}, "focal_class": {"identifier": "JAXBEncoderDecoder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LogUtils.getLogger(JAXBEncoderDecoder.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LogUtils.getLogger(JAXBEncoderDecoder.class)", "var_name": "LOG"}], "methods": [{"identifier": "JAXBEncoderDecoder", "parameters": "()", "modifiers": "private", "return": "", "signature": " JAXBEncoderDecoder()", "full_signature": "private  JAXBEncoderDecoder()", "class_method_signature": "JAXBEncoderDecoder.JAXBEncoderDecoder()", "testcase": false, "constructor": true}, {"identifier": "marshall", "parameters": "(Marshaller marshaller, \n                                Object elValue, \n                                MessagePartInfo part,\n                                Object source)", "modifiers": "public static", "return": "void", "signature": "void marshall(Marshaller marshaller, \n                                Object elValue, \n                                MessagePartInfo part,\n                                Object source)", "full_signature": "public static void marshall(Marshaller marshaller, \n                                Object elValue, \n                                MessagePartInfo part,\n                                Object source)", "class_method_signature": "JAXBEncoderDecoder.marshall(Marshaller marshaller, \n                                Object elValue, \n                                MessagePartInfo part,\n                                Object source)", "testcase": false, "constructor": false}, {"identifier": "newJAXBElement", "parameters": "(QName elName, Class<?> cls, Object mObj)", "modifiers": "@SuppressWarnings({ \"unchecked\", \"rawtypes\" }) private static", "return": "JAXBElement<?>", "signature": "JAXBElement<?> newJAXBElement(QName elName, Class<?> cls, Object mObj)", "full_signature": "@SuppressWarnings({ \"unchecked\", \"rawtypes\" }) private static JAXBElement<?> newJAXBElement(QName elName, Class<?> cls, Object mObj)", "class_method_signature": "JAXBEncoderDecoder.newJAXBElement(QName elName, Class<?> cls, Object mObj)", "testcase": false, "constructor": false}, {"identifier": "marshalWithBridge", "parameters": "(QName qname,\n                                         Class<?> cls,\n                                         Annotation anns[],\n                                         Set<Class<?>> ctxClasses,\n                                         Object elValue,\n                                         Object source, AttachmentMarshaller am)", "modifiers": "public static", "return": "void", "signature": "void marshalWithBridge(QName qname,\n                                         Class<?> cls,\n                                         Annotation anns[],\n                                         Set<Class<?>> ctxClasses,\n                                         Object elValue,\n                                         Object source, AttachmentMarshaller am)", "full_signature": "public static void marshalWithBridge(QName qname,\n                                         Class<?> cls,\n                                         Annotation anns[],\n                                         Set<Class<?>> ctxClasses,\n                                         Object elValue,\n                                         Object source, AttachmentMarshaller am)", "class_method_signature": "JAXBEncoderDecoder.marshalWithBridge(QName qname,\n                                         Class<?> cls,\n                                         Annotation anns[],\n                                         Set<Class<?>> ctxClasses,\n                                         Object elValue,\n                                         Object source, AttachmentMarshaller am)", "testcase": false, "constructor": false}, {"identifier": "unmarshalWithBridge", "parameters": "(QName qname,\n                                             Class<?> cls,\n                                             Annotation anns[],\n                                             Set<Class<?>> ctxClasses,\n                                             Object source,\n                                             AttachmentUnmarshaller am)", "modifiers": "public static", "return": "Object", "signature": "Object unmarshalWithBridge(QName qname,\n                                             Class<?> cls,\n                                             Annotation anns[],\n                                             Set<Class<?>> ctxClasses,\n                                             Object source,\n                                             AttachmentUnmarshaller am)", "full_signature": "public static Object unmarshalWithBridge(QName qname,\n                                             Class<?> cls,\n                                             Annotation anns[],\n                                             Set<Class<?>> ctxClasses,\n                                             Object source,\n                                             AttachmentUnmarshaller am)", "class_method_signature": "JAXBEncoderDecoder.unmarshalWithBridge(QName qname,\n                                             Class<?> cls,\n                                             Annotation anns[],\n                                             Set<Class<?>> ctxClasses,\n                                             Object source,\n                                             AttachmentUnmarshaller am)", "testcase": false, "constructor": false}, {"identifier": "marshallException", "parameters": "(Marshaller marshaller, Exception elValue,\n                                         MessagePartInfo part, Object source)", "modifiers": "public static", "return": "void", "signature": "void marshallException(Marshaller marshaller, Exception elValue,\n                                         MessagePartInfo part, Object source)", "full_signature": "public static void marshallException(Marshaller marshaller, Exception elValue,\n                                         MessagePartInfo part, Object source)", "class_method_signature": "JAXBEncoderDecoder.marshallException(Marshaller marshaller, Exception elValue,\n                                         MessagePartInfo part, Object source)", "testcase": false, "constructor": false}, {"identifier": "writeArrayObject", "parameters": "(Marshaller marshaller, \n                                         Object source,\n                                         QName mname,\n                                         Object mObj)", "modifiers": "private static", "return": "void", "signature": "void writeArrayObject(Marshaller marshaller, \n                                         Object source,\n                                         QName mname,\n                                         Object mObj)", "full_signature": "private static void writeArrayObject(Marshaller marshaller, \n                                         Object source,\n                                         QName mname,\n                                         Object mObj)", "class_method_signature": "JAXBEncoderDecoder.writeArrayObject(Marshaller marshaller, \n                                         Object source,\n                                         QName mname,\n                                         Object mObj)", "testcase": false, "constructor": false}, {"identifier": "unmarshallException", "parameters": "(Unmarshaller u, \n                                                Object source,\n                                                MessagePartInfo part)", "modifiers": "public static", "return": "Exception", "signature": "Exception unmarshallException(Unmarshaller u, \n                                                Object source,\n                                                MessagePartInfo part)", "full_signature": "public static Exception unmarshallException(Unmarshaller u, \n                                                Object source,\n                                                MessagePartInfo part)", "class_method_signature": "JAXBEncoderDecoder.unmarshallException(Unmarshaller u, \n                                                Object source,\n                                                MessagePartInfo part)", "testcase": false, "constructor": false}, {"identifier": "getFieldType", "parameters": "(final Field f)", "modifiers": "private static", "return": "Class<?>", "signature": "Class<?> getFieldType(final Field f)", "full_signature": "private static Class<?> getFieldType(final Field f)", "class_method_signature": "JAXBEncoderDecoder.getFieldType(final Field f)", "testcase": false, "constructor": false}, {"identifier": "getMethodReturnType", "parameters": "(final Method m)", "modifiers": "private static", "return": "Class<?>", "signature": "Class<?> getMethodReturnType(final Method m)", "full_signature": "private static Class<?> getMethodReturnType(final Method m)", "class_method_signature": "JAXBEncoderDecoder.getMethodReturnType(final Method m)", "testcase": false, "constructor": false}, {"identifier": "getFieldValue", "parameters": "(Field f, Object target)", "modifiers": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) private static", "return": "Object", "signature": "Object getFieldValue(Field f, Object target)", "full_signature": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) private static Object getFieldValue(Field f, Object target)", "class_method_signature": "JAXBEncoderDecoder.getFieldValue(Field f, Object target)", "testcase": false, "constructor": false}, {"identifier": "getMethodValue", "parameters": "(Method m, Object target)", "modifiers": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) private static", "return": "Object", "signature": "Object getMethodValue(Method m, Object target)", "full_signature": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) private static Object getMethodValue(Method m, Object target)", "class_method_signature": "JAXBEncoderDecoder.getMethodValue(Method m, Object target)", "testcase": false, "constructor": false}, {"identifier": "setFieldValue", "parameters": "(Field f, Object target, Object value)", "modifiers": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) private static", "return": "void", "signature": "void setFieldValue(Field f, Object target, Object value)", "full_signature": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) private static void setFieldValue(Field f, Object target, Object value)", "class_method_signature": "JAXBEncoderDecoder.setFieldValue(Field f, Object target, Object value)", "testcase": false, "constructor": false}, {"identifier": "setMethodValue", "parameters": "(Method getter, Method setter, Object target, Object value)", "modifiers": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) private static", "return": "void", "signature": "void setMethodValue(Method getter, Method setter, Object target, Object value)", "full_signature": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) private static void setMethodValue(Method getter, Method setter, Object target, Object value)", "class_method_signature": "JAXBEncoderDecoder.setMethodValue(Method getter, Method setter, Object target, Object value)", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(Marshaller u, Object source, Object mObj)", "modifiers": "private static", "return": "void", "signature": "void writeObject(Marshaller u, Object source, Object mObj)", "full_signature": "private static void writeObject(Marshaller u, Object source, Object mObj)", "class_method_signature": "JAXBEncoderDecoder.writeObject(Marshaller u, Object source, Object mObj)", "testcase": false, "constructor": false}, {"identifier": "getStreamWriter", "parameters": "(Object source)", "modifiers": "private static", "return": "XMLStreamWriter", "signature": "XMLStreamWriter getStreamWriter(Object source)", "full_signature": "private static XMLStreamWriter getStreamWriter(Object source)", "class_method_signature": "JAXBEncoderDecoder.getStreamWriter(Object source)", "testcase": false, "constructor": false}, {"identifier": "marshallNullElement", "parameters": "(Marshaller marshaller,\n                                           Object source,\n                                           MessagePartInfo part)", "modifiers": "public static", "return": "void", "signature": "void marshallNullElement(Marshaller marshaller,\n                                           Object source,\n                                           MessagePartInfo part)", "full_signature": "public static void marshallNullElement(Marshaller marshaller,\n                                           Object source,\n                                           MessagePartInfo part)", "class_method_signature": "JAXBEncoderDecoder.marshallNullElement(Marshaller marshaller,\n                                           Object source,\n                                           MessagePartInfo part)", "testcase": false, "constructor": false}, {"identifier": "unmarshall", "parameters": "(Unmarshaller u, \n                                    Object source, \n                                    MessagePartInfo part,\n                                    boolean unwrap)", "modifiers": "public static", "return": "Object", "signature": "Object unmarshall(Unmarshaller u, \n                                    Object source, \n                                    MessagePartInfo part,\n                                    boolean unwrap)", "full_signature": "public static Object unmarshall(Unmarshaller u, \n                                    Object source, \n                                    MessagePartInfo part,\n                                    boolean unwrap)", "class_method_signature": "JAXBEncoderDecoder.unmarshall(Unmarshaller u, \n                                    Object source, \n                                    MessagePartInfo part,\n                                    boolean unwrap)", "testcase": false, "constructor": false}, {"identifier": "updateSourceWithXSIType", "parameters": "(Object source, final QName typeQName)", "modifiers": "private static", "return": "Object", "signature": "Object updateSourceWithXSIType(Object source, final QName typeQName)", "full_signature": "private static Object updateSourceWithXSIType(Object source, final QName typeQName)", "class_method_signature": "JAXBEncoderDecoder.updateSourceWithXSIType(Object source, final QName typeQName)", "testcase": false, "constructor": false}, {"identifier": "createSet", "parameters": "(MessagePartInfo part, List<Object> ret)", "modifiers": "private static", "return": "Object", "signature": "Object createSet(MessagePartInfo part, List<Object> ret)", "full_signature": "private static Object createSet(MessagePartInfo part, List<Object> ret)", "class_method_signature": "JAXBEncoderDecoder.createSet(MessagePartInfo part, List<Object> ret)", "testcase": false, "constructor": false}, {"identifier": "isSet", "parameters": "(MessagePartInfo part)", "modifiers": "private static", "return": "boolean", "signature": "boolean isSet(MessagePartInfo part)", "full_signature": "private static boolean isSet(MessagePartInfo part)", "class_method_signature": "JAXBEncoderDecoder.isSet(MessagePartInfo part)", "testcase": false, "constructor": false}, {"identifier": "createList", "parameters": "(MessagePartInfo part)", "modifiers": "private static", "return": "List<Object>", "signature": "List<Object> createList(MessagePartInfo part)", "full_signature": "private static List<Object> createList(MessagePartInfo part)", "class_method_signature": "JAXBEncoderDecoder.createList(MessagePartInfo part)", "testcase": false, "constructor": false}, {"identifier": "createList", "parameters": "(Type genericType)", "modifiers": "private static", "return": "List<Object>", "signature": "List<Object> createList(Type genericType)", "full_signature": "private static List<Object> createList(Type genericType)", "class_method_signature": "JAXBEncoderDecoder.createList(Type genericType)", "testcase": false, "constructor": false}, {"identifier": "isList", "parameters": "(Type cls)", "modifiers": "private static", "return": "boolean", "signature": "boolean isList(Type cls)", "full_signature": "private static boolean isList(Type cls)", "class_method_signature": "JAXBEncoderDecoder.isList(Type cls)", "testcase": false, "constructor": false}, {"identifier": "isList", "parameters": "(MessagePartInfo part)", "modifiers": "private static", "return": "boolean", "signature": "boolean isList(MessagePartInfo part)", "full_signature": "private static boolean isList(MessagePartInfo part)", "class_method_signature": "JAXBEncoderDecoder.isList(MessagePartInfo part)", "testcase": false, "constructor": false}, {"identifier": "doUnmarshal", "parameters": "(final Unmarshaller u,\n                                      final Object source,\n                                      final QName elName,\n                                      final Class<?> clazz,\n                                      final boolean unwrap)", "modifiers": "private static", "return": "Object", "signature": "Object doUnmarshal(final Unmarshaller u,\n                                      final Object source,\n                                      final QName elName,\n                                      final Class<?> clazz,\n                                      final boolean unwrap)", "full_signature": "private static Object doUnmarshal(final Unmarshaller u,\n                                      final Object source,\n                                      final QName elName,\n                                      final Class<?> clazz,\n                                      final boolean unwrap)", "class_method_signature": "JAXBEncoderDecoder.doUnmarshal(final Unmarshaller u,\n                                      final Object source,\n                                      final QName elName,\n                                      final Class<?> clazz,\n                                      final boolean unwrap)", "testcase": false, "constructor": false}, {"identifier": "unmarshall", "parameters": "(final Unmarshaller u,\n                                    final Object source,\n                                    final QName elName,\n                                    final Class<?> clazz,\n                                    final boolean unwrap)", "modifiers": "public static", "return": "Object", "signature": "Object unmarshall(final Unmarshaller u,\n                                    final Object source,\n                                    final QName elName,\n                                    final Class<?> clazz,\n                                    final boolean unwrap)", "full_signature": "public static Object unmarshall(final Unmarshaller u,\n                                    final Object source,\n                                    final QName elName,\n                                    final Class<?> clazz,\n                                    final boolean unwrap)", "class_method_signature": "JAXBEncoderDecoder.unmarshall(final Unmarshaller u,\n                                    final Object source,\n                                    final QName elName,\n                                    final Class<?> clazz,\n                                    final boolean unwrap)", "testcase": false, "constructor": false}, {"identifier": "findExtraNamespaces", "parameters": "(XMLStreamReader source)", "modifiers": "private static", "return": "XMLStreamReader", "signature": "XMLStreamReader findExtraNamespaces(XMLStreamReader source)", "full_signature": "private static XMLStreamReader findExtraNamespaces(XMLStreamReader source)", "class_method_signature": "JAXBEncoderDecoder.findExtraNamespaces(XMLStreamReader source)", "testcase": false, "constructor": false}, {"identifier": "getElementValue", "parameters": "(Object obj)", "modifiers": "public static", "return": "Object", "signature": "Object getElementValue(Object obj)", "full_signature": "public static Object getElementValue(Object obj)", "class_method_signature": "JAXBEncoderDecoder.getElementValue(Object obj)", "testcase": false, "constructor": false}, {"identifier": "getClassFromType", "parameters": "(Type t)", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> getClassFromType(Type t)", "full_signature": "public static Class<?> getClassFromType(Type t)", "class_method_signature": "JAXBEncoderDecoder.getClassFromType(Type t)", "testcase": false, "constructor": false}, {"identifier": "unmarshallArray", "parameters": "(Unmarshaller u, Object source,\n                                               QName elName, Class<?> clazz,\n                                               List<Object> ret)", "modifiers": "public static", "return": "List<Object>", "signature": "List<Object> unmarshallArray(Unmarshaller u, Object source,\n                                               QName elName, Class<?> clazz,\n                                               List<Object> ret)", "full_signature": "public static List<Object> unmarshallArray(Unmarshaller u, Object source,\n                                               QName elName, Class<?> clazz,\n                                               List<Object> ret)", "class_method_signature": "JAXBEncoderDecoder.unmarshallArray(Unmarshaller u, Object source,\n                                               QName elName, Class<?> clazz,\n                                               List<Object> ret)", "testcase": false, "constructor": false}], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/JAXBEncoderDecoder.java"}, "focal_method": {"identifier": "marshall", "parameters": "(Marshaller marshaller, \n                                Object elValue, \n                                MessagePartInfo part,\n                                Object source)", "modifiers": "public static", "return": "void", "body": "public static void marshall(Marshaller marshaller, \n                                Object elValue, \n                                MessagePartInfo part,\n                                Object source) {\n        try {\n            // The Marshaller.JAXB_FRAGMENT will tell the Marshaller not to\n            // generate the xml declaration.\n            marshaller.setProperty(Marshaller.JAXB_FRAGMENT, true);\n            marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, false);\n        } catch (javax.xml.bind.PropertyException e) {\n            // intentionally empty.\n        }\n        \n        Class<?> cls = null;\n        if (part != null) {\n            cls = part.getTypeClass();\n        }\n\n        if (cls == null) {\n            cls = null != elValue ? elValue.getClass() : null;\n        }\n\n        if (cls != null && cls.isArray() && elValue instanceof Collection) {\n            Collection<?> col = (Collection<?>)elValue;\n            elValue = col.toArray((Object[])Array.newInstance(cls.getComponentType(), col.size()));\n        }\n\n        try {\n            Object mObj = elValue;\n            QName elName = null;\n            if (part != null) {\n                elName = part.getConcreteName();\n            }\n\n            if (null != elName) {\n\n                if (part != null && part.getXmlSchema() instanceof XmlSchemaElement) {\n\n                    XmlSchemaElement el = (XmlSchemaElement)part.getXmlSchema();\n\n                    if (mObj.getClass().isArray()\n                        && el.getSchemaType() instanceof XmlSchemaSimpleType\n                        && ((XmlSchemaSimpleType)el.getSchemaType()).\n                        getContent() instanceof XmlSchemaSimpleTypeList) {\n                        mObj = Arrays.asList((Object[])mObj);\n                        writeObject(marshaller, source, newJAXBElement(elName, cls, mObj));\n                    } else if (part.getMessageInfo().getOperation().isUnwrapped()\n                               && (mObj.getClass().isArray() || mObj instanceof List)\n                               && el.getMaxOccurs() != 1) {\n                        writeArrayObject(marshaller, \n                                         source,\n                                         elName,\n                                         mObj);\n                    } else {\n                        writeObject(marshaller, source, newJAXBElement(elName, cls, mObj));\n                    }\n                } else if (byte[].class == cls && part.getTypeQName() != null\n                           && part.getTypeQName().getLocalPart().equals(\"hexBinary\")) {\n                    mObj = new HexBinaryAdapter().marshal((byte[])mObj);\n                    writeObject(marshaller, source, newJAXBElement(elName, String.class, mObj));\n                } else if (mObj instanceof JAXBElement) {\n                    writeObject(marshaller, source, mObj);\n                } else if (marshaller.getSchema() != null) {\n                    //force xsi:type so types can be validated instead of trying to \n                    //use the RPC/lit element names that aren't in the schema \n                    writeObject(marshaller, source, newJAXBElement(elName, Object.class, mObj));\n                } else {\n                    writeObject(marshaller, source, newJAXBElement(elName, cls, mObj));\n                }\n            } else {\n                writeObject(marshaller, source, mObj);\n            }\n        } catch (Fault ex) {\n            throw ex;\n        } catch (Exception ex) {\n            if (ex instanceof javax.xml.bind.MarshalException) {\n                javax.xml.bind.MarshalException marshalEx = (javax.xml.bind.MarshalException)ex;\n                Message faultMessage = new Message(\"MARSHAL_ERROR\", LOG, marshalEx.getLinkedException()\n                    .getMessage());\n                throw new Fault(faultMessage, ex);\n            } else {\n                throw new Fault(new Message(\"MARSHAL_ERROR\", LOG, ex.getMessage()), ex);\n            }\n        }\n    }", "signature": "void marshall(Marshaller marshaller, \n                                Object elValue, \n                                MessagePartInfo part,\n                                Object source)", "full_signature": "public static void marshall(Marshaller marshaller, \n                                Object elValue, \n                                MessagePartInfo part,\n                                Object source)", "class_method_signature": "JAXBEncoderDecoder.marshall(Marshaller marshaller, \n                                Object elValue, \n                                MessagePartInfo part,\n                                Object source)", "testcase": false, "constructor": false, "invocations": ["setProperty", "setProperty", "getTypeClass", "getClass", "isArray", "toArray", "newInstance", "getComponentType", "size", "getConcreteName", "getXmlSchema", "getXmlSchema", "isArray", "getClass", "getSchemaType", "getContent", "getSchemaType", "asList", "writeObject", "newJAXBElement", "isUnwrapped", "getOperation", "getMessageInfo", "isArray", "getClass", "getMaxOccurs", "writeArrayObject", "writeObject", "newJAXBElement", "getTypeQName", "equals", "getLocalPart", "getTypeQName", "marshal", "writeObject", "newJAXBElement", "writeObject", "getSchema", "writeObject", "newJAXBElement", "writeObject", "newJAXBElement", "writeObject", "getMessage", "getLinkedException", "getMessage"]}, "repository": {"repo_id": 6822394, "url": "https://github.com/jerrtop/Java_demo_set", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 13, "size": 123833, "license": "licensed"}}