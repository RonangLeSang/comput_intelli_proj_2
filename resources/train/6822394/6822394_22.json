{"test_class": {"identifier": "MethodMapperTest", "superclass": "extends Assert", "interfaces": "", "fields": [], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/tools/wsdlto/frontend/jaxws/src/test/java/org/apache/cxf/tools/wsdlto/frontend/jaxws/processor/internal/mapper/MethodMapperTest.java"}, "test_case": {"identifier": "testMap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMap() throws Exception {\n        JavaMethod method = new MethodMapper().map(getOperation());\n        assertNotNull(method);\n\n        assertEquals(javax.jws.soap.SOAPBinding.Style.DOCUMENT, method.getSoapStyle());\n        assertEquals(\"operationTest\", method.getName());\n        assertEquals(\"OperationTest\", method.getOperationName());\n        assertEquals(OperationType.REQUEST_RESPONSE, method.getStyle());\n        assertFalse(method.isWrapperStyle());\n        assertFalse(method.isOneWay());\n    }", "signature": "void testMap()", "full_signature": "@Test public void testMap()", "class_method_signature": "MethodMapperTest.testMap()", "testcase": true, "constructor": false, "invocations": ["map", "getOperation", "assertNotNull", "assertEquals", "getSoapStyle", "assertEquals", "getName", "assertEquals", "getOperationName", "assertEquals", "getStyle", "assertFalse", "isWrapperStyle", "assertFalse", "isOneWay"]}, "focal_class": {"identifier": "MethodMapper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "map", "parameters": "(OperationInfo operation)", "modifiers": "public", "return": "JavaMethod", "signature": "JavaMethod map(OperationInfo operation)", "full_signature": "public JavaMethod map(OperationInfo operation)", "class_method_signature": "MethodMapper.map(OperationInfo operation)", "testcase": false, "constructor": false}], "file": "webserviceCXF/WebContent/officaldoc/apache-cxf-2.7.0-src/tools/wsdlto/frontend/jaxws/src/main/java/org/apache/cxf/tools/wsdlto/frontend/jaxws/processor/internal/mapper/MethodMapper.java"}, "focal_method": {"identifier": "map", "parameters": "(OperationInfo operation)", "modifiers": "public", "return": "JavaMethod", "body": "public JavaMethod map(OperationInfo operation) {\n        JavaMethod method = new JavaMethod();\n        // set default Document Bare style\n        method.setSoapStyle(javax.jws.soap.SOAPBinding.Style.DOCUMENT);\n\n        String operationName = operation.getName().getLocalPart();\n\n        method.setName(ProcessorUtil.mangleNameToVariableName(operationName));\n        method.setOperationName(operationName);\n\n        JAXWSBinding opBinding = operation.getExtensor(JAXWSBinding.class);\n        if (opBinding != null\n            && opBinding.getMethodName() != null) {\n            method.setName(opBinding.getMethodName());\n        }\n        \n        if (opBinding != null\n            && opBinding.getMethodJavaDoc() != null) {\n            method.setJavaDoc(opBinding.getMethodJavaDoc());\n        } else {\n            method.setJavaDoc(operation.getDocumentation());\n        }\n\n        if (operation.isOneWay()) {\n            method.setStyle(OperationType.ONE_WAY);\n        } else {\n            method.setStyle(OperationType.REQUEST_RESPONSE);\n        }\n\n        method.setWrapperStyle(operation.isUnwrappedCapable());\n\n        return method;\n    }", "signature": "JavaMethod map(OperationInfo operation)", "full_signature": "public JavaMethod map(OperationInfo operation)", "class_method_signature": "MethodMapper.map(OperationInfo operation)", "testcase": false, "constructor": false, "invocations": ["setSoapStyle", "getLocalPart", "getName", "setName", "mangleNameToVariableName", "setOperationName", "getExtensor", "getMethodName", "setName", "getMethodName", "getMethodJavaDoc", "setJavaDoc", "getMethodJavaDoc", "setJavaDoc", "getDocumentation", "isOneWay", "setStyle", "setStyle", "setWrapperStyle", "isUnwrappedCapable"]}, "repository": {"repo_id": 6822394, "url": "https://github.com/jerrtop/Java_demo_set", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 13, "size": 123833, "license": "licensed"}}