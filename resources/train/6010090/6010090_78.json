{"test_class": {"identifier": "ResourceLinkGeneratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final URI APPLICATION_BASE_URI = URI.create(\"http://app.example.org\");", "modifier": "public static final", "type": "URI", "declarator": "APPLICATION_BASE_URI = URI.create(\"http://app.example.org\")", "var_name": "APPLICATION_BASE_URI"}, {"original_string": "public static final URI RELATION_TYPE_BASE_URI = URI.create(\"http://spec.example.org\");", "modifier": "public static final", "type": "URI", "declarator": "RELATION_TYPE_BASE_URI = URI.create(\"http://spec.example.org\")", "var_name": "RELATION_TYPE_BASE_URI"}, {"original_string": "public static final URI VAR_TYPE_BASE_URI = URI.create(\"http://spec.example.org/vartypes\");", "modifier": "public static final", "type": "URI", "declarator": "VAR_TYPE_BASE_URI = URI.create(\"http://spec.example.org/vartypes\")", "var_name": "VAR_TYPE_BASE_URI"}], "file": "jsonhome-generator/src/test/java/de/otto/jsonhome/generator/ResourceLinkGeneratorTest.java"}, "test_case": {"identifier": "testRelationTypeFrom", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRelationTypeFrom() throws Exception {\n        // given:\n        ResourceLinkGenerator generator = new TestResourceLinkGenerator();\n        // when:\n        final URI rel = generator.relationTypeFrom(TestController.class.getMethod(\"directLink\"));\n        // then:\n        assertEquals(rel, URI.create(RELATION_TYPE_BASE_URI + \"/rel/test\"));\n    }", "signature": "void testRelationTypeFrom()", "full_signature": "@Test public void testRelationTypeFrom()", "class_method_signature": "ResourceLinkGeneratorTest.testRelationTypeFrom()", "testcase": true, "constructor": false, "invocations": ["relationTypeFrom", "getMethod", "assertEquals", "create"]}, "focal_class": {"identifier": "ResourceLinkGenerator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final URI applicationBaseUri;", "modifier": "private final", "type": "URI", "declarator": "applicationBaseUri", "var_name": "applicationBaseUri"}, {"original_string": "private final URI relationTypeBaseUri;", "modifier": "private final", "type": "URI", "declarator": "relationTypeBaseUri", "var_name": "relationTypeBaseUri"}, {"original_string": "private final URI varTypeBaseUri;", "modifier": "private final", "type": "URI", "declarator": "varTypeBaseUri", "var_name": "varTypeBaseUri"}, {"original_string": "private final HintsGenerator hintsGenerator;", "modifier": "private final", "type": "HintsGenerator", "declarator": "hintsGenerator", "var_name": "hintsGenerator"}, {"original_string": "private final HrefVarsGenerator hrefVarsGenerator;", "modifier": "private final", "type": "HrefVarsGenerator", "declarator": "hrefVarsGenerator", "var_name": "hrefVarsGenerator"}], "methods": [{"identifier": "ResourceLinkGenerator", "parameters": "(final URI applicationBaseUri,\n                                    final URI relationTypeBaseUri,\n                                    final URI varTypeBaseUri,\n                                    final HintsGenerator hintsGenerator,\n                                    final HrefVarsGenerator hrefVarsGenerator)", "modifiers": "protected", "return": "", "signature": " ResourceLinkGenerator(final URI applicationBaseUri,\n                                    final URI relationTypeBaseUri,\n                                    final URI varTypeBaseUri,\n                                    final HintsGenerator hintsGenerator,\n                                    final HrefVarsGenerator hrefVarsGenerator)", "full_signature": "protected  ResourceLinkGenerator(final URI applicationBaseUri,\n                                    final URI relationTypeBaseUri,\n                                    final URI varTypeBaseUri,\n                                    final HintsGenerator hintsGenerator,\n                                    final HrefVarsGenerator hrefVarsGenerator)", "class_method_signature": "ResourceLinkGenerator.ResourceLinkGenerator(final URI applicationBaseUri,\n                                    final URI relationTypeBaseUri,\n                                    final URI varTypeBaseUri,\n                                    final HintsGenerator hintsGenerator,\n                                    final HrefVarsGenerator hrefVarsGenerator)", "testcase": false, "constructor": true}, {"identifier": "resourceLinkFor", "parameters": "(final Method method)", "modifiers": "public", "return": "ResourceLink", "signature": "ResourceLink resourceLinkFor(final Method method)", "full_signature": "public ResourceLink resourceLinkFor(final Method method)", "class_method_signature": "ResourceLinkGenerator.resourceLinkFor(final Method method)", "testcase": false, "constructor": false}, {"identifier": "overriddenOrCalculatedResourcePathFor", "parameters": "(final Method method)", "modifiers": "protected", "return": "String", "signature": "String overriddenOrCalculatedResourcePathFor(final Method method)", "full_signature": "protected String overriddenOrCalculatedResourcePathFor(final Method method)", "class_method_signature": "ResourceLinkGenerator.overriddenOrCalculatedResourcePathFor(final Method method)", "testcase": false, "constructor": false}, {"identifier": "queryTemplateFrom", "parameters": "(final Method method)", "modifiers": "protected", "return": "String", "signature": "String queryTemplateFrom(final Method method)", "full_signature": "protected String queryTemplateFrom(final Method method)", "class_method_signature": "ResourceLinkGenerator.queryTemplateFrom(final Method method)", "testcase": false, "constructor": false}, {"identifier": "relationTypeFrom", "parameters": "(final Method method)", "modifiers": "protected", "return": "URI", "signature": "URI relationTypeFrom(final Method method)", "full_signature": "protected URI relationTypeFrom(final Method method)", "class_method_signature": "ResourceLinkGenerator.relationTypeFrom(final Method method)", "testcase": false, "constructor": false}, {"identifier": "isCandidateForAnalysis", "parameters": "(final Method method)", "modifiers": "protected abstract", "return": "boolean", "signature": "boolean isCandidateForAnalysis(final Method method)", "full_signature": "protected abstract boolean isCandidateForAnalysis(final Method method)", "class_method_signature": "ResourceLinkGenerator.isCandidateForAnalysis(final Method method)", "testcase": false, "constructor": false}, {"identifier": "resourcePathFor", "parameters": "(final Method method)", "modifiers": "protected abstract", "return": "String", "signature": "String resourcePathFor(final Method method)", "full_signature": "protected abstract String resourcePathFor(final Method method)", "class_method_signature": "ResourceLinkGenerator.resourcePathFor(final Method method)", "testcase": false, "constructor": false}], "file": "jsonhome-generator/src/main/java/de/otto/jsonhome/generator/ResourceLinkGenerator.java"}, "focal_method": {"identifier": "relationTypeFrom", "parameters": "(final Method method)", "modifiers": "protected", "return": "URI", "body": "protected URI relationTypeFrom(final Method method) {\n        final Rel controllerRel = findAnnotation(method.getDeclaringClass(), Rel.class);\n        final Rel methodRel = findAnnotation(method, Rel.class);\n        if (controllerRel == null && methodRel == null) {\n            return null;\n        } else {\n            final String linkRelationType = methodRel != null\n                    ? methodRel.value()\n                    : controllerRel.value();\n            if (linkRelationType.startsWith(\"http://\")) {\n                return create(linkRelationType);\n            } else {\n                return normalized(relationTypeBaseUri).withPathSegment(linkRelationType).toUri();\n            }\n        }\n    }", "signature": "URI relationTypeFrom(final Method method)", "full_signature": "protected URI relationTypeFrom(final Method method)", "class_method_signature": "ResourceLinkGenerator.relationTypeFrom(final Method method)", "testcase": false, "constructor": false, "invocations": ["findAnnotation", "getDeclaringClass", "findAnnotation", "value", "value", "startsWith", "create", "toUri", "withPathSegment", "normalized"]}, "repository": {"repo_id": 6010090, "url": "https://github.com/otto-de/jsonhome", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 37, "size": 1643, "license": "licensed"}}