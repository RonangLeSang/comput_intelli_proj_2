{"test_class": {"identifier": "LinkConverterTest", "superclass": "", "interfaces": "", "fields": [], "file": "jsonhome-registry/src/test/java/de/otto/jsonhome/registry/controller/LinkConverterTest.java"}, "test_case": {"identifier": "shouldHandleNullTitleProperly", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldHandleNullTitleProperly() throws Exception {\n        final Link link = new Link(create(\"http://example.org/foo\"), null);\n        final Map<String, String> map = linkToJson(link);\n        assertEquals(map.get(\"href\"), \"http://example.org/foo\");\n        assertEquals(map.containsKey(\"title\"), false);\n    }", "signature": "void shouldHandleNullTitleProperly()", "full_signature": "@Test public void shouldHandleNullTitleProperly()", "class_method_signature": "LinkConverterTest.shouldHandleNullTitleProperly()", "testcase": true, "constructor": false, "invocations": ["create", "linkToJson", "assertEquals", "get", "assertEquals", "containsKey"]}, "focal_class": {"identifier": "LinkConverter", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "LinkConverter", "parameters": "()", "modifiers": "private", "return": "", "signature": " LinkConverter()", "full_signature": "private  LinkConverter()", "class_method_signature": "LinkConverter.LinkConverter()", "testcase": false, "constructor": true}, {"identifier": "linkToJson", "parameters": "(final Link link)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> linkToJson(final Link link)", "full_signature": "public static Map<String, String> linkToJson(final Link link)", "class_method_signature": "LinkConverter.linkToJson(final Link link)", "testcase": false, "constructor": false}, {"identifier": "jsonToLink", "parameters": "(final Map<String, String> json)", "modifiers": "public static", "return": "Link", "signature": "Link jsonToLink(final Map<String, String> json)", "full_signature": "public static Link jsonToLink(final Map<String, String> json)", "class_method_signature": "LinkConverter.jsonToLink(final Map<String, String> json)", "testcase": false, "constructor": false}, {"identifier": "linksToJson", "parameters": "(final Collection<Link> links)", "modifiers": "public static", "return": "List<Map<String,String>>", "signature": "List<Map<String,String>> linksToJson(final Collection<Link> links)", "full_signature": "public static List<Map<String,String>> linksToJson(final Collection<Link> links)", "class_method_signature": "LinkConverter.linksToJson(final Collection<Link> links)", "testcase": false, "constructor": false}, {"identifier": "jsonToLinks", "parameters": "(final Collection<Map<String,String>> json)", "modifiers": "public static", "return": "List<Link>", "signature": "List<Link> jsonToLinks(final Collection<Map<String,String>> json)", "full_signature": "public static List<Link> jsonToLinks(final Collection<Map<String,String>> json)", "class_method_signature": "LinkConverter.jsonToLinks(final Collection<Map<String,String>> json)", "testcase": false, "constructor": false}], "file": "jsonhome-registry/src/main/java/de/otto/jsonhome/registry/controller/LinkConverter.java"}, "focal_method": {"identifier": "linkToJson", "parameters": "(final Link link)", "modifiers": "public static", "return": "Map<String, String>", "body": "public static Map<String, String> linkToJson(final Link link) {\n        final Map<String, String> json = new LinkedHashMap<>();\n        json.put(\"href\", link.getHref().toString());\n        if (!link.getTitle().isEmpty()) {\n            json.put(\"title\", link.getTitle());\n        }\n        return json;\n    }", "signature": "Map<String, String> linkToJson(final Link link)", "full_signature": "public static Map<String, String> linkToJson(final Link link)", "class_method_signature": "LinkConverter.linkToJson(final Link link)", "testcase": false, "constructor": false, "invocations": ["put", "toString", "getHref", "isEmpty", "getTitle", "put", "getTitle"]}, "repository": {"repo_id": 6010090, "url": "https://github.com/otto-de/jsonhome", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 37, "size": 1643, "license": "licensed"}}