{"test_class": {"identifier": "FileSerializedObjectCacheTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static TempDirManager tempDir = new TempDirManager();", "modifier": "public static", "type": "TempDirManager", "declarator": "tempDir = new TempDirManager()", "var_name": "tempDir"}], "file": "engine/src/test/java/org/genemania/engine/cache/FileSerializedObjectCacheTest.java"}, "test_case": {"identifier": "testList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void testList() throws Exception {\n        IObjectCache cache = new FileSerializedObjectCache(tempDir.getTempDir());\n\n        String [] key = {\"A\", \"B.txt\"};\n        cache.put(key, key, true);\n    \t\n        // should return empty\n        List<String[]> result;\n        result = cache.list(new String[] {\"C\"});\n        assertNotNull(result);\n        assertEquals(0, result.size());\n        \n        // listing parent should return they original key\n        result = cache.list(new String[] {\"A\"});\n        assertNotNull(result);\n        assertEquals(1, result.size());\n        String[] childKey = result.get(0);\n        assertEquals(2, childKey.length);\n        assertEquals(\"A\", childKey[0]);\n        assertEquals(\"B.txt\", childKey[1]);\n        \n    }", "signature": "void testList()", "full_signature": "@Test public void testList()", "class_method_signature": "FileSerializedObjectCacheTest.testList()", "testcase": true, "constructor": false, "invocations": ["getTempDir", "put", "list", "assertNotNull", "assertEquals", "size", "list", "assertNotNull", "assertEquals", "size", "get", "assertEquals", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "FileSerializedObjectCache", "superclass": "", "interfaces": "implements IObjectCache", "fields": [{"original_string": "private String cacheDir;", "modifier": "private", "type": "String", "declarator": "cacheDir", "var_name": "cacheDir"}, {"original_string": "private boolean zipEnabled = false;", "modifier": "private", "type": "boolean", "declarator": "zipEnabled = false", "var_name": "zipEnabled"}], "methods": [{"identifier": "getCacheDir", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCacheDir()", "full_signature": "public String getCacheDir()", "class_method_signature": "FileSerializedObjectCache.getCacheDir()", "testcase": false, "constructor": false}, {"identifier": "FileSerializedObjectCache", "parameters": "(String cacheDir, boolean zipEnabled)", "modifiers": "public", "return": "", "signature": " FileSerializedObjectCache(String cacheDir, boolean zipEnabled)", "full_signature": "public  FileSerializedObjectCache(String cacheDir, boolean zipEnabled)", "class_method_signature": "FileSerializedObjectCache.FileSerializedObjectCache(String cacheDir, boolean zipEnabled)", "testcase": false, "constructor": true}, {"identifier": "FileSerializedObjectCache", "parameters": "(String cacheDir)", "modifiers": "public", "return": "", "signature": " FileSerializedObjectCache(String cacheDir)", "full_signature": "public  FileSerializedObjectCache(String cacheDir)", "class_method_signature": "FileSerializedObjectCache.FileSerializedObjectCache(String cacheDir)", "testcase": false, "constructor": true}, {"identifier": "getFilename", "parameters": "(String key)", "modifiers": "private", "return": "String", "signature": "String getFilename(String key)", "full_signature": "private String getFilename(String key)", "class_method_signature": "FileSerializedObjectCache.getFilename(String key)", "testcase": false, "constructor": false}, {"identifier": "getFilename", "parameters": "(String subdir, String key)", "modifiers": "private", "return": "String", "signature": "String getFilename(String subdir, String key)", "full_signature": "private String getFilename(String subdir, String key)", "class_method_signature": "FileSerializedObjectCache.getFilename(String subdir, String key)", "testcase": false, "constructor": false}, {"identifier": "getFilename", "parameters": "(String [] key)", "modifiers": "public", "return": "String", "signature": "String getFilename(String [] key)", "full_signature": "public String getFilename(String [] key)", "class_method_signature": "FileSerializedObjectCache.getFilename(String [] key)", "testcase": false, "constructor": false}, {"identifier": "getSubdirname", "parameters": "(String [] key, int len)", "modifiers": "public", "return": "String", "signature": "String getSubdirname(String [] key, int len)", "full_signature": "public String getSubdirname(String [] key, int len)", "class_method_signature": "FileSerializedObjectCache.getSubdirname(String [] key, int len)", "testcase": false, "constructor": false}, {"identifier": "fileToKey", "parameters": "(File file)", "modifiers": "private", "return": "String[]", "signature": "String[] fileToKey(File file)", "full_signature": "private String[] fileToKey(File file)", "class_method_signature": "FileSerializedObjectCache.fileToKey(File file)", "testcase": false, "constructor": false}, {"identifier": "getDir", "parameters": "(String subdir)", "modifiers": "private", "return": "String", "signature": "String getDir(String subdir)", "full_signature": "private String getDir(String subdir)", "class_method_signature": "FileSerializedObjectCache.getDir(String subdir)", "testcase": false, "constructor": false}, {"identifier": "getObject", "parameters": "(String subdir, String key)", "modifiers": "private", "return": "Object", "signature": "Object getObject(String subdir, String key)", "full_signature": "private Object getObject(String subdir, String key)", "class_method_signature": "FileSerializedObjectCache.getObject(String subdir, String key)", "testcase": false, "constructor": false}, {"identifier": "checkCreateDir", "parameters": "(String subdir)", "modifiers": "private", "return": "void", "signature": "void checkCreateDir(String subdir)", "full_signature": "private void checkCreateDir(String subdir)", "class_method_signature": "FileSerializedObjectCache.checkCreateDir(String subdir)", "testcase": false, "constructor": false}, {"identifier": "checkCreateDirs", "parameters": "(String [] key)", "modifiers": "private", "return": "void", "signature": "void checkCreateDirs(String [] key)", "full_signature": "private void checkCreateDirs(String [] key)", "class_method_signature": "FileSerializedObjectCache.checkCreateDirs(String [] key)", "testcase": false, "constructor": false}, {"identifier": "checkDir", "parameters": "(String subdir)", "modifiers": "private", "return": "void", "signature": "void checkDir(String subdir)", "full_signature": "private void checkDir(String subdir)", "class_method_signature": "FileSerializedObjectCache.checkDir(String subdir)", "testcase": false, "constructor": false}, {"identifier": "putObject", "parameters": "(String subdir, String key, Object value)", "modifiers": "public", "return": "void", "signature": "void putObject(String subdir, String key, Object value)", "full_signature": "public void putObject(String subdir, String key, Object value)", "class_method_signature": "FileSerializedObjectCache.putObject(String subdir, String key, Object value)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(String [] key, Object value, boolean isVolatile)", "modifiers": "public", "return": "void", "signature": "void put(String [] key, Object value, boolean isVolatile)", "full_signature": "public void put(String [] key, Object value, boolean isVolatile)", "class_method_signature": "FileSerializedObjectCache.put(String [] key, Object value, boolean isVolatile)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String [] key, boolean isVolatile)", "modifiers": "public", "return": "Object", "signature": "Object get(String [] key, boolean isVolatile)", "full_signature": "public Object get(String [] key, boolean isVolatile)", "class_method_signature": "FileSerializedObjectCache.get(String [] key, boolean isVolatile)", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(String filename)", "modifiers": "protected", "return": "Object", "signature": "Object deserialize(String filename)", "full_signature": "protected Object deserialize(String filename)", "class_method_signature": "FileSerializedObjectCache.deserialize(String filename)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(String [] key)", "modifiers": "public", "return": "void", "signature": "void remove(String [] key)", "full_signature": "public void remove(String [] key)", "class_method_signature": "FileSerializedObjectCache.remove(String [] key)", "testcase": false, "constructor": false}, {"identifier": "recursiveDeleteDir", "parameters": "(File dir)", "modifiers": "private static", "return": "void", "signature": "void recursiveDeleteDir(File dir)", "full_signature": "private static void recursiveDeleteDir(File dir)", "class_method_signature": "FileSerializedObjectCache.recursiveDeleteDir(File dir)", "testcase": false, "constructor": false}, {"identifier": "exists", "parameters": "(String[] key)", "modifiers": "public", "return": "boolean", "signature": "boolean exists(String[] key)", "full_signature": "public boolean exists(String[] key)", "class_method_signature": "FileSerializedObjectCache.exists(String[] key)", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "(String[] key)", "modifiers": "public", "return": "List<String[]>", "signature": "List<String[]> list(String[] key)", "full_signature": "public List<String[]> list(String[] key)", "class_method_signature": "FileSerializedObjectCache.list(String[] key)", "testcase": false, "constructor": false}], "file": "engine/src/main/java/org/genemania/engine/cache/FileSerializedObjectCache.java"}, "focal_method": {"identifier": "list", "parameters": "(String[] key)", "modifiers": "public", "return": "List<String[]>", "body": "public List<String[]> list(String[] key) throws ApplicationException {\n        if (key == null || key.length == 0) {\n            throw new ApplicationException(\"null or empty object key\");\n        }\n\n        List<String[]> result = new ArrayList<String[]>();\n\n//        String filename = getFilename(key);\n//        File file = new File(filename);\n//        \n//        \n//        // should we throw an error if its not a dir?\n//        if (!file.isDirectory()) {\n//        \treturn result;\n//        }\n        \n        String dirName = getSubdirname(key, key.length);\n        File dir = new File(dirName);\n        \n        if (!dir.isDirectory()) {\n        \treturn result;        \t\n        }\n        \n        File[] entries = dir.listFiles();\n\n        for (File entry: entries) {\n        \tresult.add(fileToKey(entry));\n        }\n        \n        return result;\n    }", "signature": "List<String[]> list(String[] key)", "full_signature": "public List<String[]> list(String[] key)", "class_method_signature": "FileSerializedObjectCache.list(String[] key)", "testcase": false, "constructor": false, "invocations": ["getSubdirname", "isDirectory", "listFiles", "add", "fileToKey"]}, "repository": {"repo_id": 12473833, "url": "https://github.com/GeneMANIA/genemania", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 34, "size": 44902, "license": "licensed"}}