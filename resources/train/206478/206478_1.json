{"test_class": {"identifier": "SsiMacroTest", "superclass": "", "interfaces": "", "fields": [], "file": "doxia-core/src/test/java/org/apache/maven/doxia/macro/SsiMacroTest.java"}, "test_case": {"identifier": "testExecute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecute()\n        throws MacroExecutionException\n    {\n\n        Map<String, Object> macroParameters = new HashMap<>();\n        macroParameters.put( \"function\", \"include\" );\n        macroParameters.put( \"file\", \"include-file.html\" );\n\n        MacroRequest request = new MacroRequest( \"source\", new XhtmlBaseParser(), macroParameters, new File( \".\" ) );\n        SsiMacro macro = new SsiMacro();\n\n        SinkEventTestingSink sink = new SinkEventTestingSink();\n        macro.execute( sink, request );\n\n        Iterator<SinkEventElement> it = sink.getEventList().iterator();\n        SinkEventElement event = it.next();\n\n        assertEquals( \"comment\", event.getName() );\n        String comment = (String) event.getArgs()[0];\n        assertEquals( \"#include file=\\\"include-file.html\\\" \", comment );\n        assertFalse( it.hasNext() );\n    }", "signature": "void testExecute()", "full_signature": "@Test public void testExecute()", "class_method_signature": "SsiMacroTest.testExecute()", "testcase": true, "constructor": false, "invocations": ["put", "put", "execute", "iterator", "getEventList", "next", "assertEquals", "getName", "getArgs", "assertEquals", "assertFalse", "hasNext"]}, "focal_class": {"identifier": "SsiMacro", "superclass": "extends AbstractMacro", "interfaces": "", "fields": [{"original_string": "private static final String PARAM_FUNCTION = \"function\";", "modifier": "private static final", "type": "String", "declarator": "PARAM_FUNCTION = \"function\"", "var_name": "PARAM_FUNCTION"}], "methods": [{"identifier": "isInternalParameter", "parameters": "( String name )", "modifiers": "private", "return": "boolean", "signature": "boolean isInternalParameter( String name )", "full_signature": "private boolean isInternalParameter( String name )", "class_method_signature": "SsiMacro.isInternalParameter( String name )", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "( Sink sink, MacroRequest request )", "modifiers": "public", "return": "void", "signature": "void execute( Sink sink, MacroRequest request )", "full_signature": "public void execute( Sink sink, MacroRequest request )", "class_method_signature": "SsiMacro.execute( Sink sink, MacroRequest request )", "testcase": false, "constructor": false}], "file": "doxia-core/src/main/java/org/apache/maven/doxia/macro/SsiMacro.java"}, "focal_method": {"identifier": "execute", "parameters": "( Sink sink, MacroRequest request )", "modifiers": "public", "return": "void", "body": "public void execute( Sink sink, MacroRequest request )\n        throws MacroExecutionException\n    {\n        String function = (String) request.getParameter( PARAM_FUNCTION );\n\n        required( PARAM_FUNCTION, function );\n\n        StringBuilder buff = new StringBuilder();\n        buff.append( '#' );\n        buff.append( function );\n\n        for ( Map.Entry<String, Object> entry : request.getParameters().entrySet() )\n        {\n            if ( !isInternalParameter( entry.getKey() ) )\n            {\n                buff.append( ' ' );\n                buff.append( entry.getKey() );\n                buff.append( \"=\\\"\" );\n                buff.append( entry.getValue() );\n                buff.append( '\"' );\n            }\n        }\n\n        buff.append( ' ' );\n        sink.comment( buff.toString() );\n    }", "signature": "void execute( Sink sink, MacroRequest request )", "full_signature": "public void execute( Sink sink, MacroRequest request )", "class_method_signature": "SsiMacro.execute( Sink sink, MacroRequest request )", "testcase": false, "constructor": false, "invocations": ["getParameter", "required", "append", "append", "entrySet", "getParameters", "isInternalParameter", "getKey", "append", "append", "getKey", "append", "append", "getValue", "append", "append", "comment", "toString"]}, "repository": {"repo_id": 206478, "url": "https://github.com/apache/maven-doxia", "stars": 15, "created": "5/21/2009 3:16:25 AM +00:00", "updates": "2019-11-24T15:24:49+00:00", "fork": "False", "license": "licensed"}}