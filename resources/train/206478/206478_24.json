{"test_class": {"identifier": "XhtmlBaseSinkTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final String LS = Markup.EOL;", "modifier": "protected static final", "type": "String", "declarator": "LS = Markup.EOL", "var_name": "LS"}, {"original_string": "private final SinkEventAttributes attributes = SinkEventAttributeSet.BOLD;", "modifier": "private final", "type": "SinkEventAttributes", "declarator": "attributes = SinkEventAttributeSet.BOLD", "var_name": "attributes"}, {"original_string": "private XhtmlBaseSink sink;", "modifier": "private", "type": "XhtmlBaseSink", "declarator": "sink", "var_name": "sink"}, {"original_string": "private Writer writer;", "modifier": "private", "type": "Writer", "declarator": "writer", "var_name": "writer"}], "file": "doxia-core/src/test/java/org/apache/maven/doxia/sink/impl/XhtmlBaseSinkTest.java"}, "test_case": {"identifier": "testTableCell", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTableCell()\n    {\n        try\n        {\n            sink = new XhtmlBaseSink( writer );\n\n            sink.tableCell( attributes );\n            sink.tableCell_();\n        }\n        finally\n        {\n            sink.close();\n        }\n\n        assertEquals( \"<td style=\\\"bold\\\"></td>\", writer.toString() );\n    }", "signature": "void testTableCell()", "full_signature": "@Test public void testTableCell()", "class_method_signature": "XhtmlBaseSinkTest.testTableCell()", "testcase": true, "constructor": false, "invocations": ["tableCell", "tableCell_", "close", "assertEquals", "toString"]}, "focal_class": {"identifier": "XhtmlBaseSink", "superclass": "extends AbstractXmlSink", "interfaces": "implements HtmlMarkup", "fields": [{"original_string": "private final PrintWriter writer;", "modifier": "private final", "type": "PrintWriter", "declarator": "writer", "var_name": "writer"}, {"original_string": "private StringBuffer textBuffer = new StringBuffer();", "modifier": "private", "type": "StringBuffer", "declarator": "textBuffer = new StringBuffer()", "var_name": "textBuffer"}, {"original_string": "private boolean headFlag;", "modifier": "private", "type": "boolean", "declarator": "headFlag", "var_name": "headFlag"}, {"original_string": "private boolean figureCaptionFlag;", "modifier": "private", "type": "boolean", "declarator": "figureCaptionFlag", "var_name": "figureCaptionFlag"}, {"original_string": "private boolean paragraphFlag;", "modifier": "private", "type": "boolean", "declarator": "paragraphFlag", "var_name": "paragraphFlag"}, {"original_string": "private boolean verbatimFlag;", "modifier": "private", "type": "boolean", "declarator": "verbatimFlag", "var_name": "verbatimFlag"}, {"original_string": "private final LinkedList<int[]> cellJustifStack;", "modifier": "private final", "type": "LinkedList<int[]>", "declarator": "cellJustifStack", "var_name": "cellJustifStack"}, {"original_string": "private final LinkedList<Boolean> isCellJustifStack;", "modifier": "private final", "type": "LinkedList<Boolean>", "declarator": "isCellJustifStack", "var_name": "isCellJustifStack"}, {"original_string": "private final LinkedList<Integer> cellCountStack;", "modifier": "private final", "type": "LinkedList<Integer>", "declarator": "cellCountStack", "var_name": "cellCountStack"}, {"original_string": "private boolean evenTableRow = true;", "modifier": "private", "type": "boolean", "declarator": "evenTableRow = true", "var_name": "evenTableRow"}, {"original_string": "private final LinkedList<StringWriter> tableContentWriterStack;", "modifier": "private final", "type": "LinkedList<StringWriter>", "declarator": "tableContentWriterStack", "var_name": "tableContentWriterStack"}, {"original_string": "private final LinkedList<StringWriter> tableCaptionWriterStack;", "modifier": "private final", "type": "LinkedList<StringWriter>", "declarator": "tableCaptionWriterStack", "var_name": "tableCaptionWriterStack"}, {"original_string": "private final LinkedList<PrettyPrintXMLWriter> tableCaptionXMLWriterStack;", "modifier": "private final", "type": "LinkedList<PrettyPrintXMLWriter>", "declarator": "tableCaptionXMLWriterStack", "var_name": "tableCaptionXMLWriterStack"}, {"original_string": "private final LinkedList<String> tableCaptionStack;", "modifier": "private final", "type": "LinkedList<String>", "declarator": "tableCaptionStack", "var_name": "tableCaptionStack"}, {"original_string": "protected MutableAttributeSet tableAttributes;", "modifier": "protected", "type": "MutableAttributeSet", "declarator": "tableAttributes", "var_name": "tableAttributes"}, {"original_string": "private boolean legacyFigure;", "modifier": "private", "type": "boolean", "declarator": "legacyFigure", "var_name": "legacyFigure"}, {"original_string": "private boolean legacyFigureCaption;", "modifier": "private", "type": "boolean", "declarator": "legacyFigureCaption", "var_name": "legacyFigureCaption"}, {"original_string": "private boolean inFigure;", "modifier": "private", "type": "boolean", "declarator": "inFigure", "var_name": "inFigure"}, {"original_string": "protected boolean tableRows = false;", "modifier": "protected", "type": "boolean", "declarator": "tableRows = false", "var_name": "tableRows"}, {"original_string": "protected Stack<List<Tag>> inlineStack = new Stack<>();", "modifier": "protected", "type": "Stack<List<Tag>>", "declarator": "inlineStack = new Stack<>()", "var_name": "inlineStack"}, {"original_string": "private Map<String, Set<String>> warnMessages;", "modifier": "private", "type": "Map<String, Set<String>>", "declarator": "warnMessages", "var_name": "warnMessages"}], "methods": [{"identifier": "XhtmlBaseSink", "parameters": "( Writer out )", "modifiers": "public", "return": "", "signature": " XhtmlBaseSink( Writer out )", "full_signature": "public  XhtmlBaseSink( Writer out )", "class_method_signature": "XhtmlBaseSink.XhtmlBaseSink( Writer out )", "testcase": false, "constructor": true}, {"identifier": "getTextBuffer", "parameters": "()", "modifiers": "protected", "return": "StringBuffer", "signature": "StringBuffer getTextBuffer()", "full_signature": "protected StringBuffer getTextBuffer()", "class_method_signature": "XhtmlBaseSink.getTextBuffer()", "testcase": false, "constructor": false}, {"identifier": "setHeadFlag", "parameters": "( boolean headFlag )", "modifiers": "protected", "return": "void", "signature": "void setHeadFlag( boolean headFlag )", "full_signature": "protected void setHeadFlag( boolean headFlag )", "class_method_signature": "XhtmlBaseSink.setHeadFlag( boolean headFlag )", "testcase": false, "constructor": false}, {"identifier": "isHeadFlag", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean isHeadFlag()", "full_signature": "protected boolean isHeadFlag()", "class_method_signature": "XhtmlBaseSink.isHeadFlag()", "testcase": false, "constructor": false}, {"identifier": "setVerbatimFlag", "parameters": "( boolean verb )", "modifiers": "protected", "return": "void", "signature": "void setVerbatimFlag( boolean verb )", "full_signature": "protected void setVerbatimFlag( boolean verb )", "class_method_signature": "XhtmlBaseSink.setVerbatimFlag( boolean verb )", "testcase": false, "constructor": false}, {"identifier": "isVerbatimFlag", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean isVerbatimFlag()", "full_signature": "protected boolean isVerbatimFlag()", "class_method_signature": "XhtmlBaseSink.isVerbatimFlag()", "testcase": false, "constructor": false}, {"identifier": "setCellJustif", "parameters": "( int[] justif )", "modifiers": "protected", "return": "void", "signature": "void setCellJustif( int[] justif )", "full_signature": "protected void setCellJustif( int[] justif )", "class_method_signature": "XhtmlBaseSink.setCellJustif( int[] justif )", "testcase": false, "constructor": false}, {"identifier": "getCellJustif", "parameters": "()", "modifiers": "protected", "return": "int[]", "signature": "int[] getCellJustif()", "full_signature": "protected int[] getCellJustif()", "class_method_signature": "XhtmlBaseSink.getCellJustif()", "testcase": false, "constructor": false}, {"identifier": "setCellCount", "parameters": "( int count )", "modifiers": "protected", "return": "void", "signature": "void setCellCount( int count )", "full_signature": "protected void setCellCount( int count )", "class_method_signature": "XhtmlBaseSink.setCellCount( int count )", "testcase": false, "constructor": false}, {"identifier": "getCellCount", "parameters": "()", "modifiers": "protected", "return": "int", "signature": "int getCellCount()", "full_signature": "protected int getCellCount()", "class_method_signature": "XhtmlBaseSink.getCellCount()", "testcase": false, "constructor": false}, {"identifier": "resetState", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void resetState()", "full_signature": "protected void resetState()", "class_method_signature": "XhtmlBaseSink.resetState()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void init()", "full_signature": "@Override protected void init()", "class_method_signature": "XhtmlBaseSink.init()", "testcase": false, "constructor": false}, {"identifier": "resetTextBuffer", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void resetTextBuffer()", "full_signature": "protected void resetTextBuffer()", "class_method_signature": "XhtmlBaseSink.resetTextBuffer()", "testcase": false, "constructor": false}, {"identifier": "section", "parameters": "( int level, SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void section( int level, SinkEventAttributes attributes )", "full_signature": "@Override public void section( int level, SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.section( int level, SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "sectionTitle", "parameters": "( int level, SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void sectionTitle( int level, SinkEventAttributes attributes )", "full_signature": "@Override public void sectionTitle( int level, SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.sectionTitle( int level, SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "sectionTitle_", "parameters": "( int level )", "modifiers": "@Override public", "return": "void", "signature": "void sectionTitle_( int level )", "full_signature": "@Override public void sectionTitle_( int level )", "class_method_signature": "XhtmlBaseSink.sectionTitle_( int level )", "testcase": false, "constructor": false}, {"identifier": "section_", "parameters": "( int level )", "modifiers": "@Override public", "return": "void", "signature": "void section_( int level )", "full_signature": "@Override public void section_( int level )", "class_method_signature": "XhtmlBaseSink.section_( int level )", "testcase": false, "constructor": false}, {"identifier": "section1", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void section1()", "full_signature": "@Override public void section1()", "class_method_signature": "XhtmlBaseSink.section1()", "testcase": false, "constructor": false}, {"identifier": "sectionTitle1", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void sectionTitle1()", "full_signature": "@Override public void sectionTitle1()", "class_method_signature": "XhtmlBaseSink.sectionTitle1()", "testcase": false, "constructor": false}, {"identifier": "sectionTitle1_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void sectionTitle1_()", "full_signature": "@Override public void sectionTitle1_()", "class_method_signature": "XhtmlBaseSink.sectionTitle1_()", "testcase": false, "constructor": false}, {"identifier": "section1_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void section1_()", "full_signature": "@Override public void section1_()", "class_method_signature": "XhtmlBaseSink.section1_()", "testcase": false, "constructor": false}, {"identifier": "section2", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void section2()", "full_signature": "@Override public void section2()", "class_method_signature": "XhtmlBaseSink.section2()", "testcase": false, "constructor": false}, {"identifier": "sectionTitle2", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void sectionTitle2()", "full_signature": "@Override public void sectionTitle2()", "class_method_signature": "XhtmlBaseSink.sectionTitle2()", "testcase": false, "constructor": false}, {"identifier": "sectionTitle2_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void sectionTitle2_()", "full_signature": "@Override public void sectionTitle2_()", "class_method_signature": "XhtmlBaseSink.sectionTitle2_()", "testcase": false, "constructor": false}, {"identifier": "section2_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void section2_()", "full_signature": "@Override public void section2_()", "class_method_signature": "XhtmlBaseSink.section2_()", "testcase": false, "constructor": false}, {"identifier": "section3", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void section3()", "full_signature": "@Override public void section3()", "class_method_signature": "XhtmlBaseSink.section3()", "testcase": false, "constructor": false}, {"identifier": "sectionTitle3", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void sectionTitle3()", "full_signature": "@Override public void sectionTitle3()", "class_method_signature": "XhtmlBaseSink.sectionTitle3()", "testcase": false, "constructor": false}, {"identifier": "sectionTitle3_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void sectionTitle3_()", "full_signature": "@Override public void sectionTitle3_()", "class_method_signature": "XhtmlBaseSink.sectionTitle3_()", "testcase": false, "constructor": false}, {"identifier": "section3_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void section3_()", "full_signature": "@Override public void section3_()", "class_method_signature": "XhtmlBaseSink.section3_()", "testcase": false, "constructor": false}, {"identifier": "section4", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void section4()", "full_signature": "@Override public void section4()", "class_method_signature": "XhtmlBaseSink.section4()", "testcase": false, "constructor": false}, {"identifier": "sectionTitle4", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void sectionTitle4()", "full_signature": "@Override public void sectionTitle4()", "class_method_signature": "XhtmlBaseSink.sectionTitle4()", "testcase": false, "constructor": false}, {"identifier": "sectionTitle4_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void sectionTitle4_()", "full_signature": "@Override public void sectionTitle4_()", "class_method_signature": "XhtmlBaseSink.sectionTitle4_()", "testcase": false, "constructor": false}, {"identifier": "section4_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void section4_()", "full_signature": "@Override public void section4_()", "class_method_signature": "XhtmlBaseSink.section4_()", "testcase": false, "constructor": false}, {"identifier": "section5", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void section5()", "full_signature": "@Override public void section5()", "class_method_signature": "XhtmlBaseSink.section5()", "testcase": false, "constructor": false}, {"identifier": "sectionTitle5", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void sectionTitle5()", "full_signature": "@Override public void sectionTitle5()", "class_method_signature": "XhtmlBaseSink.sectionTitle5()", "testcase": false, "constructor": false}, {"identifier": "sectionTitle5_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void sectionTitle5_()", "full_signature": "@Override public void sectionTitle5_()", "class_method_signature": "XhtmlBaseSink.sectionTitle5_()", "testcase": false, "constructor": false}, {"identifier": "section5_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void section5_()", "full_signature": "@Override public void section5_()", "class_method_signature": "XhtmlBaseSink.section5_()", "testcase": false, "constructor": false}, {"identifier": "onSection", "parameters": "( int depth, SinkEventAttributes attributes )", "modifiers": "protected", "return": "void", "signature": "void onSection( int depth, SinkEventAttributes attributes )", "full_signature": "protected void onSection( int depth, SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.onSection( int depth, SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "onSection_", "parameters": "( int depth )", "modifiers": "protected", "return": "void", "signature": "void onSection_( int depth )", "full_signature": "protected void onSection_( int depth )", "class_method_signature": "XhtmlBaseSink.onSection_( int depth )", "testcase": false, "constructor": false}, {"identifier": "onSectionTitle", "parameters": "( int depth, SinkEventAttributes attributes )", "modifiers": "protected", "return": "void", "signature": "void onSectionTitle( int depth, SinkEventAttributes attributes )", "full_signature": "protected void onSectionTitle( int depth, SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.onSectionTitle( int depth, SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "onSectionTitle_", "parameters": "( int depth )", "modifiers": "protected", "return": "void", "signature": "void onSectionTitle_( int depth )", "full_signature": "protected void onSectionTitle_( int depth )", "class_method_signature": "XhtmlBaseSink.onSectionTitle_( int depth )", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void list()", "full_signature": "@Override public void list()", "class_method_signature": "XhtmlBaseSink.list()", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void list( SinkEventAttributes attributes )", "full_signature": "@Override public void list( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.list( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "list_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void list_()", "full_signature": "@Override public void list_()", "class_method_signature": "XhtmlBaseSink.list_()", "testcase": false, "constructor": false}, {"identifier": "listItem", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void listItem()", "full_signature": "@Override public void listItem()", "class_method_signature": "XhtmlBaseSink.listItem()", "testcase": false, "constructor": false}, {"identifier": "listItem", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void listItem( SinkEventAttributes attributes )", "full_signature": "@Override public void listItem( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.listItem( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "listItem_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void listItem_()", "full_signature": "@Override public void listItem_()", "class_method_signature": "XhtmlBaseSink.listItem_()", "testcase": false, "constructor": false}, {"identifier": "numberedList", "parameters": "( int numbering )", "modifiers": "@Override public", "return": "void", "signature": "void numberedList( int numbering )", "full_signature": "@Override public void numberedList( int numbering )", "class_method_signature": "XhtmlBaseSink.numberedList( int numbering )", "testcase": false, "constructor": false}, {"identifier": "numberedList", "parameters": "( int numbering, SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void numberedList( int numbering, SinkEventAttributes attributes )", "full_signature": "@Override public void numberedList( int numbering, SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.numberedList( int numbering, SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "numberedList_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void numberedList_()", "full_signature": "@Override public void numberedList_()", "class_method_signature": "XhtmlBaseSink.numberedList_()", "testcase": false, "constructor": false}, {"identifier": "numberedListItem", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void numberedListItem()", "full_signature": "@Override public void numberedListItem()", "class_method_signature": "XhtmlBaseSink.numberedListItem()", "testcase": false, "constructor": false}, {"identifier": "numberedListItem", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void numberedListItem( SinkEventAttributes attributes )", "full_signature": "@Override public void numberedListItem( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.numberedListItem( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "numberedListItem_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void numberedListItem_()", "full_signature": "@Override public void numberedListItem_()", "class_method_signature": "XhtmlBaseSink.numberedListItem_()", "testcase": false, "constructor": false}, {"identifier": "definitionList", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void definitionList()", "full_signature": "@Override public void definitionList()", "class_method_signature": "XhtmlBaseSink.definitionList()", "testcase": false, "constructor": false}, {"identifier": "definitionList", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void definitionList( SinkEventAttributes attributes )", "full_signature": "@Override public void definitionList( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.definitionList( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "definitionList_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void definitionList_()", "full_signature": "@Override public void definitionList_()", "class_method_signature": "XhtmlBaseSink.definitionList_()", "testcase": false, "constructor": false}, {"identifier": "definedTerm", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void definedTerm( SinkEventAttributes attributes )", "full_signature": "@Override public void definedTerm( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.definedTerm( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "definedTerm", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void definedTerm()", "full_signature": "@Override public void definedTerm()", "class_method_signature": "XhtmlBaseSink.definedTerm()", "testcase": false, "constructor": false}, {"identifier": "definedTerm_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void definedTerm_()", "full_signature": "@Override public void definedTerm_()", "class_method_signature": "XhtmlBaseSink.definedTerm_()", "testcase": false, "constructor": false}, {"identifier": "definition", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void definition()", "full_signature": "@Override public void definition()", "class_method_signature": "XhtmlBaseSink.definition()", "testcase": false, "constructor": false}, {"identifier": "definition", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void definition( SinkEventAttributes attributes )", "full_signature": "@Override public void definition( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.definition( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "definition_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void definition_()", "full_signature": "@Override public void definition_()", "class_method_signature": "XhtmlBaseSink.definition_()", "testcase": false, "constructor": false}, {"identifier": "figure", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void figure()", "full_signature": "@Override public void figure()", "class_method_signature": "XhtmlBaseSink.figure()", "testcase": false, "constructor": false}, {"identifier": "figure", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void figure( SinkEventAttributes attributes )", "full_signature": "@Override public void figure( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.figure( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "figure_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void figure_()", "full_signature": "@Override public void figure_()", "class_method_signature": "XhtmlBaseSink.figure_()", "testcase": false, "constructor": false}, {"identifier": "figureGraphics", "parameters": "( String name )", "modifiers": "@Override public", "return": "void", "signature": "void figureGraphics( String name )", "full_signature": "@Override public void figureGraphics( String name )", "class_method_signature": "XhtmlBaseSink.figureGraphics( String name )", "testcase": false, "constructor": false}, {"identifier": "figureGraphics", "parameters": "( String src, SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void figureGraphics( String src, SinkEventAttributes attributes )", "full_signature": "@Override public void figureGraphics( String src, SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.figureGraphics( String src, SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "figureCaption", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void figureCaption()", "full_signature": "@Override public void figureCaption()", "class_method_signature": "XhtmlBaseSink.figureCaption()", "testcase": false, "constructor": false}, {"identifier": "figureCaption", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void figureCaption( SinkEventAttributes attributes )", "full_signature": "@Override public void figureCaption( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.figureCaption( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "figureCaption_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void figureCaption_()", "full_signature": "@Override public void figureCaption_()", "class_method_signature": "XhtmlBaseSink.figureCaption_()", "testcase": false, "constructor": false}, {"identifier": "paragraph", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void paragraph()", "full_signature": "@Override public void paragraph()", "class_method_signature": "XhtmlBaseSink.paragraph()", "testcase": false, "constructor": false}, {"identifier": "paragraph", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void paragraph( SinkEventAttributes attributes )", "full_signature": "@Override public void paragraph( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.paragraph( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "paragraph_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void paragraph_()", "full_signature": "@Override public void paragraph_()", "class_method_signature": "XhtmlBaseSink.paragraph_()", "testcase": false, "constructor": false}, {"identifier": "address", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void address()", "full_signature": "@Override public void address()", "class_method_signature": "XhtmlBaseSink.address()", "testcase": false, "constructor": false}, {"identifier": "address", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void address( SinkEventAttributes attributes )", "full_signature": "@Override public void address( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.address( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "address_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void address_()", "full_signature": "@Override public void address_()", "class_method_signature": "XhtmlBaseSink.address_()", "testcase": false, "constructor": false}, {"identifier": "blockquote", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void blockquote()", "full_signature": "@Override public void blockquote()", "class_method_signature": "XhtmlBaseSink.blockquote()", "testcase": false, "constructor": false}, {"identifier": "blockquote", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void blockquote( SinkEventAttributes attributes )", "full_signature": "@Override public void blockquote( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.blockquote( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "blockquote_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void blockquote_()", "full_signature": "@Override public void blockquote_()", "class_method_signature": "XhtmlBaseSink.blockquote_()", "testcase": false, "constructor": false}, {"identifier": "division", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void division()", "full_signature": "@Override public void division()", "class_method_signature": "XhtmlBaseSink.division()", "testcase": false, "constructor": false}, {"identifier": "division", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void division( SinkEventAttributes attributes )", "full_signature": "@Override public void division( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.division( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "division_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void division_()", "full_signature": "@Override public void division_()", "class_method_signature": "XhtmlBaseSink.division_()", "testcase": false, "constructor": false}, {"identifier": "verbatim", "parameters": "( boolean boxed )", "modifiers": "@Override public", "return": "void", "signature": "void verbatim( boolean boxed )", "full_signature": "@Override public void verbatim( boolean boxed )", "class_method_signature": "XhtmlBaseSink.verbatim( boolean boxed )", "testcase": false, "constructor": false}, {"identifier": "verbatim", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void verbatim( SinkEventAttributes attributes )", "full_signature": "@Override public void verbatim( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.verbatim( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "verbatim_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void verbatim_()", "full_signature": "@Override public void verbatim_()", "class_method_signature": "XhtmlBaseSink.verbatim_()", "testcase": false, "constructor": false}, {"identifier": "horizontalRule", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void horizontalRule()", "full_signature": "@Override public void horizontalRule()", "class_method_signature": "XhtmlBaseSink.horizontalRule()", "testcase": false, "constructor": false}, {"identifier": "horizontalRule", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void horizontalRule( SinkEventAttributes attributes )", "full_signature": "@Override public void horizontalRule( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.horizontalRule( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "table", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void table()", "full_signature": "@Override public void table()", "class_method_signature": "XhtmlBaseSink.table()", "testcase": false, "constructor": false}, {"identifier": "table", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void table( SinkEventAttributes attributes )", "full_signature": "@Override public void table( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.table( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "table_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void table_()", "full_signature": "@Override public void table_()", "class_method_signature": "XhtmlBaseSink.table_()", "testcase": false, "constructor": false}, {"identifier": "tableRows", "parameters": "( int[] justification, boolean grid )", "modifiers": "@Override public", "return": "void", "signature": "void tableRows( int[] justification, boolean grid )", "full_signature": "@Override public void tableRows( int[] justification, boolean grid )", "class_method_signature": "XhtmlBaseSink.tableRows( int[] justification, boolean grid )", "testcase": false, "constructor": false}, {"identifier": "tableRows_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void tableRows_()", "full_signature": "@Override public void tableRows_()", "class_method_signature": "XhtmlBaseSink.tableRows_()", "testcase": false, "constructor": false}, {"identifier": "tableRow", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void tableRow()", "full_signature": "@Override public void tableRow()", "class_method_signature": "XhtmlBaseSink.tableRow()", "testcase": false, "constructor": false}, {"identifier": "tableRow", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void tableRow( SinkEventAttributes attributes )", "full_signature": "@Override public void tableRow( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.tableRow( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "tableRow_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void tableRow_()", "full_signature": "@Override public void tableRow_()", "class_method_signature": "XhtmlBaseSink.tableRow_()", "testcase": false, "constructor": false}, {"identifier": "tableCell", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void tableCell()", "full_signature": "@Override public void tableCell()", "class_method_signature": "XhtmlBaseSink.tableCell()", "testcase": false, "constructor": false}, {"identifier": "tableHeaderCell", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void tableHeaderCell()", "full_signature": "@Override public void tableHeaderCell()", "class_method_signature": "XhtmlBaseSink.tableHeaderCell()", "testcase": false, "constructor": false}, {"identifier": "tableCell", "parameters": "( String width )", "modifiers": "@Override public", "return": "void", "signature": "void tableCell( String width )", "full_signature": "@Override public void tableCell( String width )", "class_method_signature": "XhtmlBaseSink.tableCell( String width )", "testcase": false, "constructor": false}, {"identifier": "tableHeaderCell", "parameters": "( String width )", "modifiers": "@Override public", "return": "void", "signature": "void tableHeaderCell( String width )", "full_signature": "@Override public void tableHeaderCell( String width )", "class_method_signature": "XhtmlBaseSink.tableHeaderCell( String width )", "testcase": false, "constructor": false}, {"identifier": "tableCell", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void tableCell( SinkEventAttributes attributes )", "full_signature": "@Override public void tableCell( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.tableCell( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "tableHeaderCell", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void tableHeaderCell( SinkEventAttributes attributes )", "full_signature": "@Override public void tableHeaderCell( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.tableHeaderCell( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "tableCell", "parameters": "( boolean headerRow, MutableAttributeSet attributes )", "modifiers": "private", "return": "void", "signature": "void tableCell( boolean headerRow, MutableAttributeSet attributes )", "full_signature": "private void tableCell( boolean headerRow, MutableAttributeSet attributes )", "class_method_signature": "XhtmlBaseSink.tableCell( boolean headerRow, MutableAttributeSet attributes )", "testcase": false, "constructor": false}, {"identifier": "tableCell_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void tableCell_()", "full_signature": "@Override public void tableCell_()", "class_method_signature": "XhtmlBaseSink.tableCell_()", "testcase": false, "constructor": false}, {"identifier": "tableHeaderCell_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void tableHeaderCell_()", "full_signature": "@Override public void tableHeaderCell_()", "class_method_signature": "XhtmlBaseSink.tableHeaderCell_()", "testcase": false, "constructor": false}, {"identifier": "tableCell_", "parameters": "( boolean headerRow )", "modifiers": "private", "return": "void", "signature": "void tableCell_( boolean headerRow )", "full_signature": "private void tableCell_( boolean headerRow )", "class_method_signature": "XhtmlBaseSink.tableCell_( boolean headerRow )", "testcase": false, "constructor": false}, {"identifier": "tableCaption", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void tableCaption()", "full_signature": "@Override public void tableCaption()", "class_method_signature": "XhtmlBaseSink.tableCaption()", "testcase": false, "constructor": false}, {"identifier": "tableCaption", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void tableCaption( SinkEventAttributes attributes )", "full_signature": "@Override public void tableCaption( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.tableCaption( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "tableCaption_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void tableCaption_()", "full_signature": "@Override public void tableCaption_()", "class_method_signature": "XhtmlBaseSink.tableCaption_()", "testcase": false, "constructor": false}, {"identifier": "anchor", "parameters": "( String name )", "modifiers": "@Override public", "return": "void", "signature": "void anchor( String name )", "full_signature": "@Override public void anchor( String name )", "class_method_signature": "XhtmlBaseSink.anchor( String name )", "testcase": false, "constructor": false}, {"identifier": "anchor", "parameters": "( String name, SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void anchor( String name, SinkEventAttributes attributes )", "full_signature": "@Override public void anchor( String name, SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.anchor( String name, SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "anchor_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void anchor_()", "full_signature": "@Override public void anchor_()", "class_method_signature": "XhtmlBaseSink.anchor_()", "testcase": false, "constructor": false}, {"identifier": "link", "parameters": "( String name )", "modifiers": "@Override public", "return": "void", "signature": "void link( String name )", "full_signature": "@Override public void link( String name )", "class_method_signature": "XhtmlBaseSink.link( String name )", "testcase": false, "constructor": false}, {"identifier": "link", "parameters": "( String name, SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void link( String name, SinkEventAttributes attributes )", "full_signature": "@Override public void link( String name, SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.link( String name, SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "link", "parameters": "( String href, String target, MutableAttributeSet attributes )", "modifiers": "private", "return": "void", "signature": "void link( String href, String target, MutableAttributeSet attributes )", "full_signature": "private void link( String href, String target, MutableAttributeSet attributes )", "class_method_signature": "XhtmlBaseSink.link( String href, String target, MutableAttributeSet attributes )", "testcase": false, "constructor": false}, {"identifier": "link_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void link_()", "full_signature": "@Override public void link_()", "class_method_signature": "XhtmlBaseSink.link_()", "testcase": false, "constructor": false}, {"identifier": "inline", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void inline()", "full_signature": "@Override public void inline()", "class_method_signature": "XhtmlBaseSink.inline()", "testcase": false, "constructor": false}, {"identifier": "inlineSemantics", "parameters": "( SinkEventAttributes attributes, String semantic,\n            List<Tag> tags, Tag tag )", "modifiers": "private", "return": "void", "signature": "void inlineSemantics( SinkEventAttributes attributes, String semantic,\n            List<Tag> tags, Tag tag )", "full_signature": "private void inlineSemantics( SinkEventAttributes attributes, String semantic,\n            List<Tag> tags, Tag tag )", "class_method_signature": "XhtmlBaseSink.inlineSemantics( SinkEventAttributes attributes, String semantic,\n            List<Tag> tags, Tag tag )", "testcase": false, "constructor": false}, {"identifier": "inline", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void inline( SinkEventAttributes attributes )", "full_signature": "@Override public void inline( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.inline( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "inline_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void inline_()", "full_signature": "@Override public void inline_()", "class_method_signature": "XhtmlBaseSink.inline_()", "testcase": false, "constructor": false}, {"identifier": "italic", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void italic()", "full_signature": "@Override public void italic()", "class_method_signature": "XhtmlBaseSink.italic()", "testcase": false, "constructor": false}, {"identifier": "italic_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void italic_()", "full_signature": "@Override public void italic_()", "class_method_signature": "XhtmlBaseSink.italic_()", "testcase": false, "constructor": false}, {"identifier": "bold", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void bold()", "full_signature": "@Override public void bold()", "class_method_signature": "XhtmlBaseSink.bold()", "testcase": false, "constructor": false}, {"identifier": "bold_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void bold_()", "full_signature": "@Override public void bold_()", "class_method_signature": "XhtmlBaseSink.bold_()", "testcase": false, "constructor": false}, {"identifier": "monospaced", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void monospaced()", "full_signature": "@Override public void monospaced()", "class_method_signature": "XhtmlBaseSink.monospaced()", "testcase": false, "constructor": false}, {"identifier": "monospaced_", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void monospaced_()", "full_signature": "@Override public void monospaced_()", "class_method_signature": "XhtmlBaseSink.monospaced_()", "testcase": false, "constructor": false}, {"identifier": "lineBreak", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void lineBreak()", "full_signature": "@Override public void lineBreak()", "class_method_signature": "XhtmlBaseSink.lineBreak()", "testcase": false, "constructor": false}, {"identifier": "lineBreak", "parameters": "( SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void lineBreak( SinkEventAttributes attributes )", "full_signature": "@Override public void lineBreak( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.lineBreak( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "pageBreak", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void pageBreak()", "full_signature": "@Override public void pageBreak()", "class_method_signature": "XhtmlBaseSink.pageBreak()", "testcase": false, "constructor": false}, {"identifier": "nonBreakingSpace", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void nonBreakingSpace()", "full_signature": "@Override public void nonBreakingSpace()", "class_method_signature": "XhtmlBaseSink.nonBreakingSpace()", "testcase": false, "constructor": false}, {"identifier": "text", "parameters": "( String text )", "modifiers": "@Override public", "return": "void", "signature": "void text( String text )", "full_signature": "@Override public void text( String text )", "class_method_signature": "XhtmlBaseSink.text( String text )", "testcase": false, "constructor": false}, {"identifier": "text", "parameters": "( String text, SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void text( String text, SinkEventAttributes attributes )", "full_signature": "@Override public void text( String text, SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.text( String text, SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "rawText", "parameters": "( String text )", "modifiers": "@Override public", "return": "void", "signature": "void rawText( String text )", "full_signature": "@Override public void rawText( String text )", "class_method_signature": "XhtmlBaseSink.rawText( String text )", "testcase": false, "constructor": false}, {"identifier": "comment", "parameters": "( String comment )", "modifiers": "@Override public", "return": "void", "signature": "void comment( String comment )", "full_signature": "@Override public void comment( String comment )", "class_method_signature": "XhtmlBaseSink.comment( String comment )", "testcase": false, "constructor": false}, {"identifier": "unknown", "parameters": "( String name, Object[] requiredParams, SinkEventAttributes attributes )", "modifiers": "@Override public", "return": "void", "signature": "void unknown( String name, Object[] requiredParams, SinkEventAttributes attributes )", "full_signature": "@Override public void unknown( String name, Object[] requiredParams, SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.unknown( String name, Object[] requiredParams, SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "escapeAttributeValues", "parameters": "( SinkEventAttributes attributes )", "modifiers": "private", "return": "SinkEventAttributes", "signature": "SinkEventAttributes escapeAttributeValues( SinkEventAttributes attributes )", "full_signature": "private SinkEventAttributes escapeAttributeValues( SinkEventAttributes attributes )", "class_method_signature": "XhtmlBaseSink.escapeAttributeValues( SinkEventAttributes attributes )", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void flush()", "full_signature": "@Override public void flush()", "class_method_signature": "XhtmlBaseSink.flush()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "XhtmlBaseSink.close()", "testcase": false, "constructor": false}, {"identifier": "content", "parameters": "( String text )", "modifiers": "protected", "return": "void", "signature": "void content( String text )", "full_signature": "protected void content( String text )", "class_method_signature": "XhtmlBaseSink.content( String text )", "testcase": false, "constructor": false}, {"identifier": "verbatimContent", "parameters": "( String text )", "modifiers": "protected", "return": "void", "signature": "void verbatimContent( String text )", "full_signature": "protected void verbatimContent( String text )", "class_method_signature": "XhtmlBaseSink.verbatimContent( String text )", "testcase": false, "constructor": false}, {"identifier": "escapeHTML", "parameters": "( String text )", "modifiers": "protected static", "return": "String", "signature": "String escapeHTML( String text )", "full_signature": "protected static String escapeHTML( String text )", "class_method_signature": "XhtmlBaseSink.escapeHTML( String text )", "testcase": false, "constructor": false}, {"identifier": "encodeURL", "parameters": "( String text )", "modifiers": "protected static", "return": "String", "signature": "String encodeURL( String text )", "full_signature": "protected static String encodeURL( String text )", "class_method_signature": "XhtmlBaseSink.encodeURL( String text )", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "( String text )", "modifiers": "protected", "return": "void", "signature": "void write( String text )", "full_signature": "protected void write( String text )", "class_method_signature": "XhtmlBaseSink.write( String text )", "testcase": false, "constructor": false}, {"identifier": "writeStartTag", "parameters": "( Tag t, MutableAttributeSet att, boolean isSimpleTag )", "modifiers": "@Override protected", "return": "void", "signature": "void writeStartTag( Tag t, MutableAttributeSet att, boolean isSimpleTag )", "full_signature": "@Override protected void writeStartTag( Tag t, MutableAttributeSet att, boolean isSimpleTag )", "class_method_signature": "XhtmlBaseSink.writeStartTag( Tag t, MutableAttributeSet att, boolean isSimpleTag )", "testcase": false, "constructor": false}, {"identifier": "writeEndTag", "parameters": "( Tag t )", "modifiers": "@Override protected", "return": "void", "signature": "void writeEndTag( Tag t )", "full_signature": "@Override protected void writeEndTag( Tag t )", "class_method_signature": "XhtmlBaseSink.writeEndTag( Tag t )", "testcase": false, "constructor": false}, {"identifier": "logMessage", "parameters": "( String key, String msg )", "modifiers": "private", "return": "void", "signature": "void logMessage( String key, String msg )", "full_signature": "private void logMessage( String key, String msg )", "class_method_signature": "XhtmlBaseSink.logMessage( String key, String msg )", "testcase": false, "constructor": false}], "file": "doxia-core/src/main/java/org/apache/maven/doxia/sink/impl/XhtmlBaseSink.java"}, "focal_method": {"identifier": "tableCell", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void tableCell()\n    {\n        tableCell( (SinkEventAttributeSet) null );\n    }", "signature": "void tableCell()", "full_signature": "@Override public void tableCell()", "class_method_signature": "XhtmlBaseSink.tableCell()", "testcase": false, "constructor": false, "invocations": ["tableCell"]}, "repository": {"repo_id": 206478, "url": "https://github.com/apache/maven-doxia", "stars": 15, "created": "5/21/2009 3:16:25 AM +00:00", "updates": "2019-11-24T15:24:49+00:00", "fork": "False", "license": "licensed"}}