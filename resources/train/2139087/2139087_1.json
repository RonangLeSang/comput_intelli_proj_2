{"test_class": {"identifier": "TestBasicHttpRequest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HttpRequest request;", "modifier": "private", "type": "HttpRequest", "declarator": "request", "var_name": "request"}], "file": "mapserver/src/test/java/org/geolatte/mapserver/http/TestBasicHttpRequest.java"}, "test_case": {"identifier": "testMethod", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMethod() {\n        assertEquals(\"GET\", request.method());\n    }", "signature": "void testMethod()", "full_signature": "@Test public void testMethod()", "class_method_signature": "TestBasicHttpRequest.testMethod()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "method"]}, "focal_class": {"identifier": "BasicHttpRequest", "superclass": "", "interfaces": "implements HttpRequest", "fields": [{"original_string": "private final URI uri;", "modifier": "private final", "type": "URI", "declarator": "uri", "var_name": "uri"}, {"original_string": "private final String method;", "modifier": "private final", "type": "String", "declarator": "method", "var_name": "method"}, {"original_string": "private final HttpHeaders headers;", "modifier": "private final", "type": "HttpHeaders", "declarator": "headers", "var_name": "headers"}], "methods": [{"identifier": "BasicHttpRequest", "parameters": "(URI uri, String method, Map<String, List<String>> headers)", "modifiers": "", "return": "", "signature": " BasicHttpRequest(URI uri, String method, Map<String, List<String>> headers)", "full_signature": "  BasicHttpRequest(URI uri, String method, Map<String, List<String>> headers)", "class_method_signature": "BasicHttpRequest.BasicHttpRequest(URI uri, String method, Map<String, List<String>> headers)", "testcase": false, "constructor": true}, {"identifier": "uri", "parameters": "()", "modifiers": "@Override public", "return": "URI", "signature": "URI uri()", "full_signature": "@Override public URI uri()", "class_method_signature": "BasicHttpRequest.uri()", "testcase": false, "constructor": false}, {"identifier": "method", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String method()", "full_signature": "@Override public String method()", "class_method_signature": "BasicHttpRequest.method()", "testcase": false, "constructor": false}, {"identifier": "headers", "parameters": "()", "modifiers": "@Override public", "return": "HttpHeaders", "signature": "HttpHeaders headers()", "full_signature": "@Override public HttpHeaders headers()", "class_method_signature": "BasicHttpRequest.headers()", "testcase": false, "constructor": false}, {"identifier": "parseQuery", "parameters": "()", "modifiers": "@Override public", "return": "HttpQueryParams", "signature": "HttpQueryParams parseQuery()", "full_signature": "@Override public HttpQueryParams parseQuery()", "class_method_signature": "BasicHttpRequest.parseQuery()", "testcase": false, "constructor": false}], "file": "mapserver/src/main/java/org/geolatte/mapserver/http/BasicHttpRequest.java"}, "focal_method": {"identifier": "method", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String method() {\n        return method;\n    }", "signature": "String method()", "full_signature": "@Override public String method()", "class_method_signature": "BasicHttpRequest.method()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2139087, "url": "https://github.com/GeoLatte/geolatte-mapserver", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 10, "size": 1302, "license": "licensed"}}