{"test_class": {"identifier": "TestTileSetCoordinateSpace", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CoordinateReferenceSystem<C2D> crs = CoordinateReferenceSystems.PROJECTED_2D_METER;", "modifier": "private", "type": "CoordinateReferenceSystem<C2D>", "declarator": "crs = CoordinateReferenceSystems.PROJECTED_2D_METER", "var_name": "crs"}, {"original_string": "private TileSetCoordinateSpace space1 = new TileSetCoordinateSpace(point(crs, c(500, 500)),\n            new Dimension(10, 10), new Envelope<>(50, 50, 1050, 1050, crs), 5);", "modifier": "private", "type": "TileSetCoordinateSpace", "declarator": "space1 = new TileSetCoordinateSpace(point(crs, c(500, 500)),\n            new Dimension(10, 10), new Envelope<>(50, 50, 1050, 1050, crs), 5)", "var_name": "space1"}, {"original_string": "private TileSetCoordinateSpace space2 = new TileSetCoordinateSpace(point(crs, c(-180, -90)),\n            new Dimension(256, 256), new Envelope<>(-180, -90, 180, 90, crs), 0.17578125);", "modifier": "private", "type": "TileSetCoordinateSpace", "declarator": "space2 = new TileSetCoordinateSpace(point(crs, c(-180, -90)),\n            new Dimension(256, 256), new Envelope<>(-180, -90, 180, 90, crs), 0.17578125)", "var_name": "space2"}], "file": "mapserver/src/test/java/org/geolatte/mapserver/tilemap/TestTileSetCoordinateSpace.java"}, "test_case": {"identifier": "test_tileset_pixeldimension", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_tileset_pixeldimension() {\n        Dimension received = space1.tileSetPixelDimension();\n        Dimension expected = new Dimension(200, 200);\n        assertEquals(expected, received);\n\n        TileSetCoordinateSpace tcs = new TileSetCoordinateSpace(point(crs, c(500, 500)), new Dimension(20, 40),\n                new Envelope<>(0, 0, 1000, 5000, crs), 10);\n        expected = new Dimension(100, 500);\n        received = tcs.tileSetPixelDimension();\n        assertEquals(expected, received);\n    }", "signature": "void test_tileset_pixeldimension()", "full_signature": "@Test public void test_tileset_pixeldimension()", "class_method_signature": "TestTileSetCoordinateSpace.test_tileset_pixeldimension()", "testcase": true, "constructor": false, "invocations": ["tileSetPixelDimension", "assertEquals", "point", "c", "tileSetPixelDimension", "assertEquals"]}, "focal_class": {"identifier": "TileSetCoordinateSpace", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Point<C2D> origin;", "modifier": "private final", "type": "Point<C2D>", "declarator": "origin", "var_name": "origin"}, {"original_string": "private final Dimension tileDimension;", "modifier": "private final", "type": "Dimension", "declarator": "tileDimension", "var_name": "tileDimension"}, {"original_string": "private final Envelope<C2D> extent;", "modifier": "private final", "type": "Envelope<C2D>", "declarator": "extent", "var_name": "extent"}, {"original_string": "private final double unitsPerPixel;", "modifier": "private final", "type": "double", "declarator": "unitsPerPixel", "var_name": "unitsPerPixel"}, {"original_string": "private final MapUnitToPixelTransform mupTransform;", "modifier": "private final", "type": "MapUnitToPixelTransform", "declarator": "mupTransform", "var_name": "mupTransform"}], "methods": [{"identifier": "TileSetCoordinateSpace", "parameters": "(Point<C2D> origin, Dimension tileDimension, Envelope<C2D> extent, double unitsPerPixel)", "modifiers": "", "return": "", "signature": " TileSetCoordinateSpace(Point<C2D> origin, Dimension tileDimension, Envelope<C2D> extent, double unitsPerPixel)", "full_signature": "  TileSetCoordinateSpace(Point<C2D> origin, Dimension tileDimension, Envelope<C2D> extent, double unitsPerPixel)", "class_method_signature": "TileSetCoordinateSpace.TileSetCoordinateSpace(Point<C2D> origin, Dimension tileDimension, Envelope<C2D> extent, double unitsPerPixel)", "testcase": false, "constructor": true}, {"identifier": "boundingBox", "parameters": "(TileCoordinate coordinate)", "modifiers": "public", "return": "Envelope<C2D>", "signature": "Envelope<C2D> boundingBox(TileCoordinate coordinate)", "full_signature": "public Envelope<C2D> boundingBox(TileCoordinate coordinate)", "class_method_signature": "TileSetCoordinateSpace.boundingBox(TileCoordinate coordinate)", "testcase": false, "constructor": false}, {"identifier": "tilePixelRange", "parameters": "(TileCoordinate coordinate)", "modifiers": "public", "return": "PixelRange", "signature": "PixelRange tilePixelRange(TileCoordinate coordinate)", "full_signature": "public PixelRange tilePixelRange(TileCoordinate coordinate)", "class_method_signature": "TileSetCoordinateSpace.tilePixelRange(TileCoordinate coordinate)", "testcase": false, "constructor": false}, {"identifier": "tileSetPixelDimension", "parameters": "()", "modifiers": "public", "return": "Dimension", "signature": "Dimension tileSetPixelDimension()", "full_signature": "public Dimension tileSetPixelDimension()", "class_method_signature": "TileSetCoordinateSpace.tileSetPixelDimension()", "testcase": false, "constructor": false}, {"identifier": "tileWidthInMapUnits", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double tileWidthInMapUnits()", "full_signature": "public double tileWidthInMapUnits()", "class_method_signature": "TileSetCoordinateSpace.tileWidthInMapUnits()", "testcase": false, "constructor": false}, {"identifier": "tileHeightInMapUnits", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double tileHeightInMapUnits()", "full_signature": "public double tileHeightInMapUnits()", "class_method_signature": "TileSetCoordinateSpace.tileHeightInMapUnits()", "testcase": false, "constructor": false}, {"identifier": "tileCoordinateContaining", "parameters": "(Point<C2D> point, boolean lowerLeftInclusive)", "modifiers": "public", "return": "TileCoordinate", "signature": "TileCoordinate tileCoordinateContaining(Point<C2D> point, boolean lowerLeftInclusive)", "full_signature": "public TileCoordinate tileCoordinateContaining(Point<C2D> point, boolean lowerLeftInclusive)", "class_method_signature": "TileSetCoordinateSpace.tileCoordinateContaining(Point<C2D> point, boolean lowerLeftInclusive)", "testcase": false, "constructor": false}, {"identifier": "removeRoundingError", "parameters": "(double i)", "modifiers": "private", "return": "double", "signature": "double removeRoundingError(double i)", "full_signature": "private double removeRoundingError(double i)", "class_method_signature": "TileSetCoordinateSpace.removeRoundingError(double i)", "testcase": false, "constructor": false}, {"identifier": "unitsPerPixel", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double unitsPerPixel()", "full_signature": "public double unitsPerPixel()", "class_method_signature": "TileSetCoordinateSpace.unitsPerPixel()", "testcase": false, "constructor": false}, {"identifier": "pixelRange", "parameters": "(Envelope<C2D> bbox)", "modifiers": "public", "return": "PixelRange", "signature": "PixelRange pixelRange(Envelope<C2D> bbox)", "full_signature": "public PixelRange pixelRange(Envelope<C2D> bbox)", "class_method_signature": "TileSetCoordinateSpace.pixelRange(Envelope<C2D> bbox)", "testcase": false, "constructor": false}, {"identifier": "toPixel", "parameters": "(Point<C2D> point)", "modifiers": "public", "return": "Pixel", "signature": "Pixel toPixel(Point<C2D> point)", "full_signature": "public Pixel toPixel(Point<C2D> point)", "class_method_signature": "TileSetCoordinateSpace.toPixel(Point<C2D> point)", "testcase": false, "constructor": false}, {"identifier": "toPoint", "parameters": "(Pixel pixel)", "modifiers": "public", "return": "Point<C2D>", "signature": "Point<C2D> toPoint(Pixel pixel)", "full_signature": "public Point<C2D> toPoint(Pixel pixel)", "class_method_signature": "TileSetCoordinateSpace.toPoint(Pixel pixel)", "testcase": false, "constructor": false}, {"identifier": "relativeToOrigin", "parameters": "(Point<C2D> point)", "modifiers": "private", "return": "C2D", "signature": "C2D relativeToOrigin(Point<C2D> point)", "full_signature": "private C2D relativeToOrigin(Point<C2D> point)", "class_method_signature": "TileSetCoordinateSpace.relativeToOrigin(Point<C2D> point)", "testcase": false, "constructor": false}], "file": "mapserver/src/main/java/org/geolatte/mapserver/tilemap/TileSetCoordinateSpace.java"}, "focal_method": {"identifier": "tileSetPixelDimension", "parameters": "()", "modifiers": "public", "return": "Dimension", "body": "public Dimension tileSetPixelDimension() {\n        int h = (int) (height(extent) / unitsPerPixel);\n        int w = (int) (width(extent) / unitsPerPixel);\n        return new Dimension(w, h);\n    }", "signature": "Dimension tileSetPixelDimension()", "full_signature": "public Dimension tileSetPixelDimension()", "class_method_signature": "TileSetCoordinateSpace.tileSetPixelDimension()", "testcase": false, "constructor": false, "invocations": ["height", "width"]}, "repository": {"repo_id": 2139087, "url": "https://github.com/GeoLatte/geolatte-mapserver", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 10, "size": 1302, "license": "licensed"}}