{"test_class": {"identifier": "MavenSettingsTest", "superclass": "extends TestSupport", "interfaces": "", "fields": [], "file": "common/src/test/java/org/sonatype/maven/mojo/settings/MavenSettingsTest.java"}, "test_case": {"identifier": "proxySelectionStrictHttpOnly", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void proxySelectionStrictHttpOnly() throws Exception {\n    final Settings settings = new Settings();\n    {\n      Proxy httpProxy = new Proxy();\n      httpProxy.setId(\"http\");\n      httpProxy.setActive(true);\n      httpProxy.setProtocol(\"http\");\n      httpProxy.setHost(\"somehost\");\n      httpProxy.setPort(8080);\n      httpProxy.setNonProxyHosts(\"localhost\");\n      settings.addProxy(httpProxy);\n    }\n    {\n      // is non proxy host\n      final Proxy proxy = MavenSettings.selectProxy(settings, \"http://localhost/\", true);\n      assertThat(proxy, nullValue());\n    }\n    {\n      // is defined\n      final Proxy proxy = MavenSettings.selectProxy(settings, \"http://remote/\", true);\n      assertThat(proxy, notNullValue());\n      assertThat(proxy.getId(), is(\"http\"));\n    }\n    {\n      // is not defined\n      final Proxy proxy = MavenSettings.selectProxy(settings, \"https://remote/\", true);\n      assertThat(proxy, nullValue());\n    }\n  }", "signature": "void proxySelectionStrictHttpOnly()", "full_signature": "@Test public void proxySelectionStrictHttpOnly()", "class_method_signature": "MavenSettingsTest.proxySelectionStrictHttpOnly()", "testcase": true, "constructor": false, "invocations": ["setId", "setActive", "setProtocol", "setHost", "setPort", "setNonProxyHosts", "addProxy", "selectProxy", "assertThat", "nullValue", "selectProxy", "assertThat", "notNullValue", "assertThat", "getId", "is", "selectProxy", "assertThat", "nullValue"]}, "focal_class": {"identifier": "MavenSettings", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "MavenSettings", "parameters": "()", "modifiers": "private", "return": "", "signature": " MavenSettings()", "full_signature": "private  MavenSettings()", "class_method_signature": "MavenSettings.MavenSettings()", "testcase": false, "constructor": true}, {"identifier": "selectServer", "parameters": "(final Settings settings, final String serverId)", "modifiers": "public static", "return": "Server", "signature": "Server selectServer(final Settings settings, final String serverId)", "full_signature": "public static Server selectServer(final Settings settings, final String serverId)", "class_method_signature": "MavenSettings.selectServer(final Settings settings, final String serverId)", "testcase": false, "constructor": false}, {"identifier": "selectProxy", "parameters": "(final Settings settings, final String serverUrl)", "modifiers": "public static", "return": "Proxy", "signature": "Proxy selectProxy(final Settings settings, final String serverUrl)", "full_signature": "public static Proxy selectProxy(final Settings settings, final String serverUrl)", "class_method_signature": "MavenSettings.selectProxy(final Settings settings, final String serverUrl)", "testcase": false, "constructor": false}, {"identifier": "selectProxy", "parameters": "(final Settings settings, final String serverUrl, final boolean strict)", "modifiers": "public static", "return": "Proxy", "signature": "Proxy selectProxy(final Settings settings, final String serverUrl, final boolean strict)", "full_signature": "public static Proxy selectProxy(final Settings settings, final String serverUrl, final boolean strict)", "class_method_signature": "MavenSettings.selectProxy(final Settings settings, final String serverUrl, final boolean strict)", "testcase": false, "constructor": false}, {"identifier": "decrypt", "parameters": "(final SecDispatcher secDispatcher, final Server server)", "modifiers": "public static", "return": "Server", "signature": "Server decrypt(final SecDispatcher secDispatcher, final Server server)", "full_signature": "public static Server decrypt(final SecDispatcher secDispatcher, final Server server)", "class_method_signature": "MavenSettings.decrypt(final SecDispatcher secDispatcher, final Server server)", "testcase": false, "constructor": false}, {"identifier": "decrypt", "parameters": "(final SecDispatcher secDispatcher, final Proxy server)", "modifiers": "public static", "return": "Proxy", "signature": "Proxy decrypt(final SecDispatcher secDispatcher, final Proxy server)", "full_signature": "public static Proxy decrypt(final SecDispatcher secDispatcher, final Proxy server)", "class_method_signature": "MavenSettings.decrypt(final SecDispatcher secDispatcher, final Proxy server)", "testcase": false, "constructor": false}, {"identifier": "isNonProxyHosts", "parameters": "(String host, String nonProxyHosts)", "modifiers": "private static", "return": "boolean", "signature": "boolean isNonProxyHosts(String host, String nonProxyHosts)", "full_signature": "private static boolean isNonProxyHosts(String host, String nonProxyHosts)", "class_method_signature": "MavenSettings.isNonProxyHosts(String host, String nonProxyHosts)", "testcase": false, "constructor": false}, {"identifier": "decrypt", "parameters": "(final SecDispatcher secDispatcher, final String str)", "modifiers": "private static", "return": "String", "signature": "String decrypt(final SecDispatcher secDispatcher, final String str)", "full_signature": "private static String decrypt(final SecDispatcher secDispatcher, final String str)", "class_method_signature": "MavenSettings.decrypt(final SecDispatcher secDispatcher, final String str)", "testcase": false, "constructor": false}], "file": "common/src/main/java/org/sonatype/maven/mojo/settings/MavenSettings.java"}, "focal_method": {"identifier": "selectProxy", "parameters": "(final Settings settings, final String serverUrl)", "modifiers": "public static", "return": "Proxy", "body": "public static Proxy selectProxy(final Settings settings, final String serverUrl)\n      throws MalformedURLException\n  {\n    return selectProxy(settings, serverUrl, false);\n  }", "signature": "Proxy selectProxy(final Settings settings, final String serverUrl)", "full_signature": "public static Proxy selectProxy(final Settings settings, final String serverUrl)", "class_method_signature": "MavenSettings.selectProxy(final Settings settings, final String serverUrl)", "testcase": false, "constructor": false, "invocations": ["selectProxy"]}, "repository": {"repo_id": 4664478, "url": "https://github.com/sonatype/nexus-maven-plugins", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 63, "size": 1545, "license": "licensed"}}