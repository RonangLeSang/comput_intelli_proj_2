{"test_class": {"identifier": "JSONFormatterTest", "superclass": "", "interfaces": "", "fields": [], "file": "plugins/json/src/test/java/com/atlantbh/jmeter/plugins/jsonutils/jsonformatter/JSONFormatterTest.java"}, "test_case": {"identifier": "testProcess_null", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcess_null() {\n        System.out.println(\"process null\");\n        JSONFormatter instance = new JSONFormatter();\n        JMeterContext threadContext = JMeterContextService.getContext();\n        SampleResult res = new SampleResult();\n        res.setResponseData(\"null\", \"UTF8\");\n        threadContext.setPreviousResult(res);\n        instance.process();\n    }", "signature": "void testProcess_null()", "full_signature": "@Test public void testProcess_null()", "class_method_signature": "JSONFormatterTest.testProcess_null()", "testcase": true, "constructor": false, "invocations": ["println", "getContext", "setResponseData", "setPreviousResult", "process"]}, "focal_class": {"identifier": "JSONFormatter", "superclass": "extends AbstractTestElement", "interfaces": "implements PostProcessor", "fields": [{"original_string": "private static final Logger log = LoggingManager.getLoggerForClass();", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggingManager.getLoggerForClass()", "var_name": "log"}, {"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private static final JsonConfig config = new JsonConfig();", "modifier": "private static final", "type": "JsonConfig", "declarator": "config = new JsonConfig()", "var_name": "config"}], "methods": [{"identifier": "JSONFormatter", "parameters": "()", "modifiers": "public", "return": "", "signature": " JSONFormatter()", "full_signature": "public  JSONFormatter()", "class_method_signature": "JSONFormatter.JSONFormatter()", "testcase": false, "constructor": true}, {"identifier": "formatJSON", "parameters": "(String json)", "modifiers": "private", "return": "String", "signature": "String formatJSON(String json)", "full_signature": "private String formatJSON(String json)", "class_method_signature": "JSONFormatter.formatJSON(String json)", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void process()", "full_signature": "@Override public void process()", "class_method_signature": "JSONFormatter.process()", "testcase": false, "constructor": false}], "file": "plugins/json/src/main/java/com/atlantbh/jmeter/plugins/jsonutils/jsonformatter/JSONFormatter.java"}, "focal_method": {"identifier": "process", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void process() {\n        JMeterContext context = getThreadContext();\n        String responseData = context.getPreviousResult().getResponseDataAsString();\n        try {\n            String str = this.formatJSON(responseData);\n            context.getPreviousResult().setResponseData(str.getBytes());\n        } catch (JSONException e) {\n            log.warn(\"Failed to format JSON: \" + e.getMessage());\n            log.debug(\"Failed to format JSON\", e);\n        }\n    }", "signature": "void process()", "full_signature": "@Override public void process()", "class_method_signature": "JSONFormatter.process()", "testcase": false, "constructor": false, "invocations": ["getThreadContext", "getResponseDataAsString", "getPreviousResult", "formatJSON", "setResponseData", "getPreviousResult", "getBytes", "warn", "getMessage", "debug"]}, "repository": {"repo_id": 8197357, "url": "https://github.com/undera/jmeter-plugins", "stars": 388, "created": "2/14/2013 10:17:40 AM +00:00", "updates": "2020-01-26T06:36:21+00:00", "fork": "False", "license": "licensed"}}