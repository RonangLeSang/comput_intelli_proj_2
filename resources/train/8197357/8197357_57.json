{"test_class": {"identifier": "FilterPanelTest", "superclass": "", "interfaces": "", "fields": [], "file": "tools/filterresults/src/test/java/org/jmeterplugins/visualizers/gui/FilterPanelTest.java"}, "test_case": {"identifier": "testSetStartOffset", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetStartOffset() {\n        System.out.println(\"setStartOffset\");\n        FilterPanel instance = new FilterPanel();\n        instance.setStartOffset(180);\n    }", "signature": "void testSetStartOffset()", "full_signature": "@Test public void testSetStartOffset()", "class_method_signature": "FilterPanelTest.testSetStartOffset()", "testcase": true, "constructor": false, "invocations": ["println", "setStartOffset"]}, "focal_class": {"identifier": "FilterPanel", "superclass": "extends JPanel", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 240L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 240L", "var_name": "serialVersionUID"}, {"original_string": "private JCheckBox jCheckBoxExclude;", "modifier": "private", "type": "JCheckBox", "declarator": "jCheckBoxExclude", "var_name": "jCheckBoxExclude"}, {"original_string": "private JCheckBox jCheckBoxInclude;", "modifier": "private", "type": "JCheckBox", "declarator": "jCheckBoxInclude", "var_name": "jCheckBoxInclude"}, {"original_string": "private JLabel jLabelExclude;", "modifier": "private", "type": "JLabel", "declarator": "jLabelExclude", "var_name": "jLabelExclude"}, {"original_string": "private JLabel jLabelInclude;", "modifier": "private", "type": "JLabel", "declarator": "jLabelInclude", "var_name": "jLabelInclude"}, {"original_string": "private JLabel jLabelRegExpExclude;", "modifier": "private", "type": "JLabel", "declarator": "jLabelRegExpExclude", "var_name": "jLabelRegExpExclude"}, {"original_string": "private JLabel jLabelRegExpInclude;", "modifier": "private", "type": "JLabel", "declarator": "jLabelRegExpInclude", "var_name": "jLabelRegExpInclude"}, {"original_string": "private JLabel jLabelStartEndOffset;", "modifier": "private", "type": "JLabel", "declarator": "jLabelStartEndOffset", "var_name": "jLabelStartEndOffset"}, {"original_string": "private JTextField jTextFieldEndOffset;", "modifier": "private", "type": "JTextField", "declarator": "jTextFieldEndOffset", "var_name": "jTextFieldEndOffset"}, {"original_string": "private JTextField jTextFieldExclude;", "modifier": "private", "type": "JTextField", "declarator": "jTextFieldExclude", "var_name": "jTextFieldExclude"}, {"original_string": "private JTextField jTextFieldInclude;", "modifier": "private", "type": "JTextField", "declarator": "jTextFieldInclude", "var_name": "jTextFieldInclude"}, {"original_string": "private JTextField jTextFieldStartOffset;", "modifier": "private", "type": "JTextField", "declarator": "jTextFieldStartOffset", "var_name": "jTextFieldStartOffset"}], "methods": [{"identifier": "FilterPanel", "parameters": "()", "modifiers": "public", "return": "", "signature": " FilterPanel()", "full_signature": "public  FilterPanel()", "class_method_signature": "FilterPanel.FilterPanel()", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void init()", "full_signature": "private void init()", "class_method_signature": "FilterPanel.init()", "testcase": false, "constructor": false}, {"identifier": "getIncludeSampleLabels", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIncludeSampleLabels()", "full_signature": "public String getIncludeSampleLabels()", "class_method_signature": "FilterPanel.getIncludeSampleLabels()", "testcase": false, "constructor": false}, {"identifier": "setIncludeSampleLabels", "parameters": "(String str)", "modifiers": "public", "return": "void", "signature": "void setIncludeSampleLabels(String str)", "full_signature": "public void setIncludeSampleLabels(String str)", "class_method_signature": "FilterPanel.setIncludeSampleLabels(String str)", "testcase": false, "constructor": false}, {"identifier": "getExcludeSampleLabels", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getExcludeSampleLabels()", "full_signature": "public String getExcludeSampleLabels()", "class_method_signature": "FilterPanel.getExcludeSampleLabels()", "testcase": false, "constructor": false}, {"identifier": "setExcludeSampleLabels", "parameters": "(String str)", "modifiers": "public", "return": "void", "signature": "void setExcludeSampleLabels(String str)", "full_signature": "public void setExcludeSampleLabels(String str)", "class_method_signature": "FilterPanel.setExcludeSampleLabels(String str)", "testcase": false, "constructor": false}, {"identifier": "isSelectedRegExpInc", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSelectedRegExpInc()", "full_signature": "public boolean isSelectedRegExpInc()", "class_method_signature": "FilterPanel.isSelectedRegExpInc()", "testcase": false, "constructor": false}, {"identifier": "setSelectedRegExpInc", "parameters": "(boolean b)", "modifiers": "public", "return": "void", "signature": "void setSelectedRegExpInc(boolean b)", "full_signature": "public void setSelectedRegExpInc(boolean b)", "class_method_signature": "FilterPanel.setSelectedRegExpInc(boolean b)", "testcase": false, "constructor": false}, {"identifier": "isSelectedRegExpExc", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSelectedRegExpExc()", "full_signature": "public boolean isSelectedRegExpExc()", "class_method_signature": "FilterPanel.isSelectedRegExpExc()", "testcase": false, "constructor": false}, {"identifier": "setSelectedRegExpExc", "parameters": "(boolean b)", "modifiers": "public", "return": "void", "signature": "void setSelectedRegExpExc(boolean b)", "full_signature": "public void setSelectedRegExpExc(boolean b)", "class_method_signature": "FilterPanel.setSelectedRegExpExc(boolean b)", "testcase": false, "constructor": false}, {"identifier": "getStartOffset", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStartOffset()", "full_signature": "public String getStartOffset()", "class_method_signature": "FilterPanel.getStartOffset()", "testcase": false, "constructor": false}, {"identifier": "setStartOffset", "parameters": "(long startOffset)", "modifiers": "public", "return": "void", "signature": "void setStartOffset(long startOffset)", "full_signature": "public void setStartOffset(long startOffset)", "class_method_signature": "FilterPanel.setStartOffset(long startOffset)", "testcase": false, "constructor": false}, {"identifier": "getEndOffset", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getEndOffset()", "full_signature": "public String getEndOffset()", "class_method_signature": "FilterPanel.getEndOffset()", "testcase": false, "constructor": false}, {"identifier": "setEndOffset", "parameters": "(long endOffset)", "modifiers": "public", "return": "void", "signature": "void setEndOffset(long endOffset)", "full_signature": "public void setEndOffset(long endOffset)", "class_method_signature": "FilterPanel.setEndOffset(long endOffset)", "testcase": false, "constructor": false}, {"identifier": "clearGui", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearGui()", "full_signature": "public void clearGui()", "class_method_signature": "FilterPanel.clearGui()", "testcase": false, "constructor": false}], "file": "tools/filterresults/src/main/java/org/jmeterplugins/visualizers/gui/FilterPanel.java"}, "focal_method": {"identifier": "setStartOffset", "parameters": "(long startOffset)", "modifiers": "public", "return": "void", "body": "public void setStartOffset(long startOffset) {\n        jTextFieldStartOffset.setText(String.valueOf(startOffset));\n    }", "signature": "void setStartOffset(long startOffset)", "full_signature": "public void setStartOffset(long startOffset)", "class_method_signature": "FilterPanel.setStartOffset(long startOffset)", "testcase": false, "constructor": false, "invocations": ["setText", "valueOf"]}, "repository": {"repo_id": 8197357, "url": "https://github.com/undera/jmeter-plugins", "stars": 388, "created": "2/14/2013 10:17:40 AM +00:00", "updates": "2020-01-26T06:36:21+00:00", "fork": "False", "license": "licensed"}}