{"test_class": {"identifier": "PerfMonGuiTest", "superclass": "", "interfaces": "", "fields": [], "file": "plugins/perfmon/src/test/java/kg/apc/jmeter/vizualizers/PerfMonGuiTest.java"}, "test_case": {"identifier": "testCreateTestElement", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateTestElement() {\n        System.out.println(\"createTestElement\");\n        PerfMonGui instance = new PerfMonGui();\n        TestElement result = instance.createTestElement();\n        assertTrue(result instanceof PerfMonCollector);\n    }", "signature": "void testCreateTestElement()", "full_signature": "@Test public void testCreateTestElement()", "class_method_signature": "PerfMonGuiTest.testCreateTestElement()", "testcase": true, "constructor": false, "invocations": ["println", "createTestElement", "assertTrue"]}, "focal_class": {"identifier": "PerfMonGui", "superclass": "extends AbstractOverTimeVisualizer", "interfaces": "", "fields": [{"original_string": "public static final List<String> metrics = Arrays.asList(\"CPU\", \"Memory\", \"Swap\", \"Disks I/O\", \"Network I/O\");", "modifier": "public static final", "type": "List<String>", "declarator": "metrics = Arrays.asList(\"CPU\", \"Memory\", \"Swap\", \"Disks I/O\", \"Network I/O\")", "var_name": "metrics"}, {"original_string": "private static final Logger log = LoggingManager.getLoggerForClass();", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggingManager.getLoggerForClass()", "var_name": "log"}, {"original_string": "private PowerTableModel tableModel;", "modifier": "private", "type": "PowerTableModel", "declarator": "tableModel", "var_name": "tableModel"}, {"original_string": "private JTable grid;", "modifier": "private", "type": "JTable", "declarator": "grid", "var_name": "grid"}, {"original_string": "private JTextArea errorTextArea;", "modifier": "private", "type": "JTextArea", "declarator": "errorTextArea", "var_name": "errorTextArea"}, {"original_string": "private JScrollPane errorPane;", "modifier": "private", "type": "JScrollPane", "declarator": "errorPane", "var_name": "errorPane"}, {"original_string": "public static final String[] columnIdentifiers = new String[]{\n            \"Host / IP\", \"Port\", \"Metric to collect\", \"Metric parameter (see help)\"\n    };", "modifier": "public static final", "type": "String[]", "declarator": "columnIdentifiers = new String[]{\n            \"Host / IP\", \"Port\", \"Metric to collect\", \"Metric parameter (see help)\"\n    }", "var_name": "columnIdentifiers"}, {"original_string": "public static final Class[] columnClasses = new Class[]{\n            String.class, String.class, String.class, String.class\n    };", "modifier": "public static final", "type": "Class[]", "declarator": "columnClasses = new Class[]{\n            String.class, String.class, String.class, String.class\n    }", "var_name": "columnClasses"}, {"original_string": "private static String[] defaultValues = new String[]{\n            \"localhost\", \"4444\", \"CPU\", \"\"\n    };", "modifier": "private static", "type": "String[]", "declarator": "defaultValues = new String[]{\n            \"localhost\", \"4444\", \"CPU\", \"\"\n    }", "var_name": "defaultValues"}], "methods": [{"identifier": "PerfMonGui", "parameters": "()", "modifiers": "public", "return": "", "signature": " PerfMonGui()", "full_signature": "public  PerfMonGui()", "class_method_signature": "PerfMonGui.PerfMonGui()", "testcase": false, "constructor": true}, {"identifier": "createSettingsPanel", "parameters": "()", "modifiers": "@Override protected", "return": "JSettingsPanel", "signature": "JSettingsPanel createSettingsPanel()", "full_signature": "@Override protected JSettingsPanel createSettingsPanel()", "class_method_signature": "PerfMonGui.createSettingsPanel()", "testcase": false, "constructor": false}, {"identifier": "getWikiPage", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getWikiPage()", "full_signature": "@Override public String getWikiPage()", "class_method_signature": "PerfMonGui.getWikiPage()", "testcase": false, "constructor": false}, {"identifier": "getLabelResource", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getLabelResource()", "full_signature": "@Override public String getLabelResource()", "class_method_signature": "PerfMonGui.getLabelResource()", "testcase": false, "constructor": false}, {"identifier": "getStaticLabel", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getStaticLabel()", "full_signature": "@Override public String getStaticLabel()", "class_method_signature": "PerfMonGui.getStaticLabel()", "testcase": false, "constructor": false}, {"identifier": "getGraphPanelContainer", "parameters": "()", "modifiers": "@Override protected", "return": "JPanel", "signature": "JPanel getGraphPanelContainer()", "full_signature": "@Override protected JPanel getGraphPanelContainer()", "class_method_signature": "PerfMonGui.getGraphPanelContainer()", "testcase": false, "constructor": false}, {"identifier": "addErrorMessage", "parameters": "(String msg, long time)", "modifiers": "private", "return": "void", "signature": "void addErrorMessage(String msg, long time)", "full_signature": "private void addErrorMessage(String msg, long time)", "class_method_signature": "PerfMonGui.addErrorMessage(String msg, long time)", "testcase": false, "constructor": false}, {"identifier": "clearErrorMessage", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearErrorMessage()", "full_signature": "public void clearErrorMessage()", "class_method_signature": "PerfMonGui.clearErrorMessage()", "testcase": false, "constructor": false}, {"identifier": "registerPopup", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void registerPopup()", "full_signature": "private void registerPopup()", "class_method_signature": "PerfMonGui.registerPopup()", "testcase": false, "constructor": false}, {"identifier": "clearData", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clearData()", "full_signature": "@Override public void clearData()", "class_method_signature": "PerfMonGui.clearData()", "testcase": false, "constructor": false}, {"identifier": "createConnectionsPanel", "parameters": "()", "modifiers": "private", "return": "Component", "signature": "Component createConnectionsPanel()", "full_signature": "private Component createConnectionsPanel()", "class_method_signature": "PerfMonGui.createConnectionsPanel()", "testcase": false, "constructor": false}, {"identifier": "createGrid", "parameters": "()", "modifiers": "private", "return": "JTable", "signature": "JTable createGrid()", "full_signature": "private JTable createGrid()", "class_method_signature": "PerfMonGui.createGrid()", "testcase": false, "constructor": false}, {"identifier": "createTableModel", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void createTableModel()", "full_signature": "private void createTableModel()", "class_method_signature": "PerfMonGui.createTableModel()", "testcase": false, "constructor": false}, {"identifier": "createTestElement", "parameters": "()", "modifiers": "@Override public", "return": "TestElement", "signature": "TestElement createTestElement()", "full_signature": "@Override public TestElement createTestElement()", "class_method_signature": "PerfMonGui.createTestElement()", "testcase": false, "constructor": false}, {"identifier": "modifyTestElement", "parameters": "(TestElement te)", "modifiers": "@Override public", "return": "void", "signature": "void modifyTestElement(TestElement te)", "full_signature": "@Override public void modifyTestElement(TestElement te)", "class_method_signature": "PerfMonGui.modifyTestElement(TestElement te)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(TestElement te)", "modifiers": "@Override public", "return": "void", "signature": "void configure(TestElement te)", "full_signature": "@Override public void configure(TestElement te)", "class_method_signature": "PerfMonGui.configure(TestElement te)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(SampleResult res)", "modifiers": "@Override public", "return": "void", "signature": "void add(SampleResult res)", "full_signature": "@Override public void add(SampleResult res)", "class_method_signature": "PerfMonGui.add(SampleResult res)", "testcase": false, "constructor": false}, {"identifier": "addPerfMonRecord", "parameters": "(String rowName, long time, double value)", "modifiers": "private", "return": "void", "signature": "void addPerfMonRecord(String rowName, long time, double value)", "full_signature": "private void addPerfMonRecord(String rowName, long time, double value)", "class_method_signature": "PerfMonGui.addPerfMonRecord(String rowName, long time, double value)", "testcase": false, "constructor": false}], "file": "plugins/perfmon/src/main/java/kg/apc/jmeter/vizualizers/PerfMonGui.java"}, "focal_method": {"identifier": "createTestElement", "parameters": "()", "modifiers": "@Override public", "return": "TestElement", "body": "@Override\n    public TestElement createTestElement() {\n        TestElement te = new PerfMonCollector();\n        modifyTestElement(te);\n        te.setComment(JMeterPluginsUtils.getWikiLinkText(getWikiPage()));\n        return te;\n    }", "signature": "TestElement createTestElement()", "full_signature": "@Override public TestElement createTestElement()", "class_method_signature": "PerfMonGui.createTestElement()", "testcase": false, "constructor": false, "invocations": ["modifyTestElement", "setComment", "getWikiLinkText", "getWikiPage"]}, "repository": {"repo_id": 8197357, "url": "https://github.com/undera/jmeter-plugins", "stars": 388, "created": "2/14/2013 10:17:40 AM +00:00", "updates": "2020-01-26T06:36:21+00:00", "fork": "False", "license": "licensed"}}