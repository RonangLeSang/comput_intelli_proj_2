{"test_class": {"identifier": "SteppingThreadGroupTest", "superclass": "", "interfaces": "", "fields": [], "file": "plugins/casutg/src/test/java/kg/apc/jmeter/threads/SteppingThreadGroupTest.java"}, "test_case": {"identifier": "testGetInUserCountAsInt", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetInUserCountAsInt() {\n        System.out.println(\"getInUserCountAsInt\");\n        SteppingThreadGroup instance = new SteppingThreadGroup();\n        int expResult = 0;\n        int result = instance.getInUserCountAsInt();\n        assertEquals(expResult, result);\n    }", "signature": "void testGetInUserCountAsInt()", "full_signature": "@Test public void testGetInUserCountAsInt()", "class_method_signature": "SteppingThreadGroupTest.testGetInUserCountAsInt()", "testcase": true, "constructor": false, "invocations": ["println", "getInUserCountAsInt", "assertEquals"]}, "focal_class": {"identifier": "SteppingThreadGroup", "superclass": "extends AbstractSimpleThreadGroup", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggingManager.getLoggerForClass();", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggingManager.getLoggerForClass()", "var_name": "log"}, {"original_string": "private static final String THREAD_GROUP_DELAY = \"Threads initial delay\";", "modifier": "private static final", "type": "String", "declarator": "THREAD_GROUP_DELAY = \"Threads initial delay\"", "var_name": "THREAD_GROUP_DELAY"}, {"original_string": "private static final String INC_USER_PERIOD = \"Start users period\";", "modifier": "private static final", "type": "String", "declarator": "INC_USER_PERIOD = \"Start users period\"", "var_name": "INC_USER_PERIOD"}, {"original_string": "private static final String INC_USER_COUNT = \"Start users count\";", "modifier": "private static final", "type": "String", "declarator": "INC_USER_COUNT = \"Start users count\"", "var_name": "INC_USER_COUNT"}, {"original_string": "private static final String INC_USER_COUNT_BURST = \"Start users count burst\";", "modifier": "private static final", "type": "String", "declarator": "INC_USER_COUNT_BURST = \"Start users count burst\"", "var_name": "INC_USER_COUNT_BURST"}, {"original_string": "private static final String DEC_USER_PERIOD = \"Stop users period\";", "modifier": "private static final", "type": "String", "declarator": "DEC_USER_PERIOD = \"Stop users period\"", "var_name": "DEC_USER_PERIOD"}, {"original_string": "private static final String DEC_USER_COUNT = \"Stop users count\";", "modifier": "private static final", "type": "String", "declarator": "DEC_USER_COUNT = \"Stop users count\"", "var_name": "DEC_USER_COUNT"}, {"original_string": "private static final String FLIGHT_TIME = \"flighttime\";", "modifier": "private static final", "type": "String", "declarator": "FLIGHT_TIME = \"flighttime\"", "var_name": "FLIGHT_TIME"}, {"original_string": "private static final String RAMPUP = \"rampUp\";", "modifier": "private static final", "type": "String", "declarator": "RAMPUP = \"rampUp\"", "var_name": "RAMPUP"}], "methods": [{"identifier": "SteppingThreadGroup", "parameters": "()", "modifiers": "public", "return": "", "signature": " SteppingThreadGroup()", "full_signature": "public  SteppingThreadGroup()", "class_method_signature": "SteppingThreadGroup.SteppingThreadGroup()", "testcase": false, "constructor": true}, {"identifier": "scheduleThread", "parameters": "(JMeterThread thread, long tgStartTime)", "modifiers": "@Override protected", "return": "void", "signature": "void scheduleThread(JMeterThread thread, long tgStartTime)", "full_signature": "@Override protected void scheduleThread(JMeterThread thread, long tgStartTime)", "class_method_signature": "SteppingThreadGroup.scheduleThread(JMeterThread thread, long tgStartTime)", "testcase": false, "constructor": false}, {"identifier": "getThreadGroupDelay", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getThreadGroupDelay()", "full_signature": "public String getThreadGroupDelay()", "class_method_signature": "SteppingThreadGroup.getThreadGroupDelay()", "testcase": false, "constructor": false}, {"identifier": "setThreadGroupDelay", "parameters": "(String delay)", "modifiers": "public", "return": "void", "signature": "void setThreadGroupDelay(String delay)", "full_signature": "public void setThreadGroupDelay(String delay)", "class_method_signature": "SteppingThreadGroup.setThreadGroupDelay(String delay)", "testcase": false, "constructor": false}, {"identifier": "getInUserPeriod", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getInUserPeriod()", "full_signature": "public String getInUserPeriod()", "class_method_signature": "SteppingThreadGroup.getInUserPeriod()", "testcase": false, "constructor": false}, {"identifier": "setInUserPeriod", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setInUserPeriod(String value)", "full_signature": "public void setInUserPeriod(String value)", "class_method_signature": "SteppingThreadGroup.setInUserPeriod(String value)", "testcase": false, "constructor": false}, {"identifier": "getInUserCount", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getInUserCount()", "full_signature": "public String getInUserCount()", "class_method_signature": "SteppingThreadGroup.getInUserCount()", "testcase": false, "constructor": false}, {"identifier": "setInUserCount", "parameters": "(String delay)", "modifiers": "public", "return": "void", "signature": "void setInUserCount(String delay)", "full_signature": "public void setInUserCount(String delay)", "class_method_signature": "SteppingThreadGroup.setInUserCount(String delay)", "testcase": false, "constructor": false}, {"identifier": "getInUserCountBurst", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getInUserCountBurst()", "full_signature": "public String getInUserCountBurst()", "class_method_signature": "SteppingThreadGroup.getInUserCountBurst()", "testcase": false, "constructor": false}, {"identifier": "setInUserCountBurst", "parameters": "(String text)", "modifiers": "public", "return": "void", "signature": "void setInUserCountBurst(String text)", "full_signature": "public void setInUserCountBurst(String text)", "class_method_signature": "SteppingThreadGroup.setInUserCountBurst(String text)", "testcase": false, "constructor": false}, {"identifier": "getFlightTime", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFlightTime()", "full_signature": "public String getFlightTime()", "class_method_signature": "SteppingThreadGroup.getFlightTime()", "testcase": false, "constructor": false}, {"identifier": "setFlightTime", "parameters": "(String delay)", "modifiers": "public", "return": "void", "signature": "void setFlightTime(String delay)", "full_signature": "public void setFlightTime(String delay)", "class_method_signature": "SteppingThreadGroup.setFlightTime(String delay)", "testcase": false, "constructor": false}, {"identifier": "getOutUserPeriod", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getOutUserPeriod()", "full_signature": "public String getOutUserPeriod()", "class_method_signature": "SteppingThreadGroup.getOutUserPeriod()", "testcase": false, "constructor": false}, {"identifier": "setOutUserPeriod", "parameters": "(String delay)", "modifiers": "public", "return": "void", "signature": "void setOutUserPeriod(String delay)", "full_signature": "public void setOutUserPeriod(String delay)", "class_method_signature": "SteppingThreadGroup.setOutUserPeriod(String delay)", "testcase": false, "constructor": false}, {"identifier": "getOutUserCount", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getOutUserCount()", "full_signature": "public String getOutUserCount()", "class_method_signature": "SteppingThreadGroup.getOutUserCount()", "testcase": false, "constructor": false}, {"identifier": "setOutUserCount", "parameters": "(String delay)", "modifiers": "public", "return": "void", "signature": "void setOutUserCount(String delay)", "full_signature": "public void setOutUserCount(String delay)", "class_method_signature": "SteppingThreadGroup.setOutUserCount(String delay)", "testcase": false, "constructor": false}, {"identifier": "getRampUp", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRampUp()", "full_signature": "public String getRampUp()", "class_method_signature": "SteppingThreadGroup.getRampUp()", "testcase": false, "constructor": false}, {"identifier": "setRampUp", "parameters": "(String delay)", "modifiers": "public", "return": "void", "signature": "void setRampUp(String delay)", "full_signature": "public void setRampUp(String delay)", "class_method_signature": "SteppingThreadGroup.setRampUp(String delay)", "testcase": false, "constructor": false}, {"identifier": "getThreadGroupDelayAsInt", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getThreadGroupDelayAsInt()", "full_signature": "public int getThreadGroupDelayAsInt()", "class_method_signature": "SteppingThreadGroup.getThreadGroupDelayAsInt()", "testcase": false, "constructor": false}, {"identifier": "getInUserPeriodAsInt", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getInUserPeriodAsInt()", "full_signature": "public int getInUserPeriodAsInt()", "class_method_signature": "SteppingThreadGroup.getInUserPeriodAsInt()", "testcase": false, "constructor": false}, {"identifier": "getInUserCountAsInt", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getInUserCountAsInt()", "full_signature": "public int getInUserCountAsInt()", "class_method_signature": "SteppingThreadGroup.getInUserCountAsInt()", "testcase": false, "constructor": false}, {"identifier": "getInUserCountBurstAsInt", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getInUserCountBurstAsInt()", "full_signature": "public int getInUserCountBurstAsInt()", "class_method_signature": "SteppingThreadGroup.getInUserCountBurstAsInt()", "testcase": false, "constructor": false}, {"identifier": "getRampUpAsInt", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRampUpAsInt()", "full_signature": "public int getRampUpAsInt()", "class_method_signature": "SteppingThreadGroup.getRampUpAsInt()", "testcase": false, "constructor": false}, {"identifier": "getFlightTimeAsInt", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getFlightTimeAsInt()", "full_signature": "public int getFlightTimeAsInt()", "class_method_signature": "SteppingThreadGroup.getFlightTimeAsInt()", "testcase": false, "constructor": false}, {"identifier": "getOutUserPeriodAsInt", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getOutUserPeriodAsInt()", "full_signature": "public int getOutUserPeriodAsInt()", "class_method_signature": "SteppingThreadGroup.getOutUserPeriodAsInt()", "testcase": false, "constructor": false}, {"identifier": "getOutUserCountAsInt", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getOutUserCountAsInt()", "full_signature": "public int getOutUserCountAsInt()", "class_method_signature": "SteppingThreadGroup.getOutUserCountAsInt()", "testcase": false, "constructor": false}, {"identifier": "setNumThreads", "parameters": "(String execute)", "modifiers": "public", "return": "void", "signature": "void setNumThreads(String execute)", "full_signature": "public void setNumThreads(String execute)", "class_method_signature": "SteppingThreadGroup.setNumThreads(String execute)", "testcase": false, "constructor": false}, {"identifier": "getNumThreadsAsString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getNumThreadsAsString()", "full_signature": "public String getNumThreadsAsString()", "class_method_signature": "SteppingThreadGroup.getNumThreadsAsString()", "testcase": false, "constructor": false}], "file": "plugins/casutg/src/main/java/kg/apc/jmeter/threads/SteppingThreadGroup.java"}, "focal_method": {"identifier": "getInUserCountAsInt", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int getInUserCountAsInt() {\n        return getPropertyAsInt(INC_USER_COUNT);\n    }", "signature": "int getInUserCountAsInt()", "full_signature": "public int getInUserCountAsInt()", "class_method_signature": "SteppingThreadGroup.getInUserCountAsInt()", "testcase": false, "constructor": false, "invocations": ["getPropertyAsInt"]}, "repository": {"repo_id": 8197357, "url": "https://github.com/undera/jmeter-plugins", "stars": 388, "created": "2/14/2013 10:17:40 AM +00:00", "updates": "2020-01-26T06:36:21+00:00", "fork": "False", "license": "licensed"}}