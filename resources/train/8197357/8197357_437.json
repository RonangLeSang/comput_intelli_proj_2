{"test_class": {"identifier": "GraphPanelChartTest", "superclass": "", "interfaces": "", "fields": [], "file": "infra/common/src/test/java/kg/apc/charting/GraphPanelChartTest.java"}, "test_case": {"identifier": "testSetTestStartTime", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetTestStartTime() {\n        System.out.println(\"setTestStartTime\");\n        long time = System.currentTimeMillis();\n        GraphPanelChart instance = new GraphPanelChart();\n        instance.setTestStartTime(time);\n    }", "signature": "void testSetTestStartTime()", "full_signature": "@Test public void testSetTestStartTime()", "class_method_signature": "GraphPanelChartTest.testSetTestStartTime()", "testcase": true, "constructor": false, "invocations": ["println", "currentTimeMillis", "setTestStartTime"]}, "focal_class": {"identifier": "GraphPanelChart", "superclass": "extends JComponent", "interfaces": "implements ClipboardOwner", "fields": [{"original_string": "private static BufferedImage cache = null;", "modifier": "private static", "type": "BufferedImage", "declarator": "cache = null", "var_name": "cache"}, {"original_string": "private static int cacheWitdh, cacheHeight;", "modifier": "private static", "type": "int", "declarator": "cacheWitdh", "var_name": "cacheWitdh"}, {"original_string": "private boolean cacheValid = false;", "modifier": "private", "type": "boolean", "declarator": "cacheValid = false", "var_name": "cacheValid"}, {"original_string": "private static int cacheOwner = -1;", "modifier": "private static", "type": "int", "declarator": "cacheOwner = -1", "var_name": "cacheOwner"}, {"original_string": "private int gpcId;", "modifier": "private", "type": "int", "declarator": "gpcId", "var_name": "gpcId"}, {"original_string": "private static int uidGenerator = 0;", "modifier": "private static", "type": "int", "declarator": "uidGenerator = 0", "var_name": "uidGenerator"}, {"original_string": "BarRowPlotter barRowPlotter = null;", "modifier": "", "type": "BarRowPlotter", "declarator": "barRowPlotter = null", "var_name": "barRowPlotter"}, {"original_string": "LineRowPlotter lineRowPlotter = null;", "modifier": "", "type": "LineRowPlotter", "declarator": "lineRowPlotter = null", "var_name": "lineRowPlotter"}, {"original_string": "CSplineRowPlotter cSplineRowPlotter = null;", "modifier": "", "type": "CSplineRowPlotter", "declarator": "cSplineRowPlotter = null", "var_name": "cSplineRowPlotter"}, {"original_string": "AbstractRowPlotter currentPlotter = null;", "modifier": "", "type": "AbstractRowPlotter", "declarator": "currentPlotter = null", "var_name": "currentPlotter"}, {"original_string": "JPopupMenu popup = new JPopupMenu();", "modifier": "", "type": "JPopupMenu", "declarator": "popup = new JPopupMenu()", "var_name": "popup"}, {"original_string": "private static final String AD_TEXT = \"jmeter-plugins.org\";", "modifier": "private static final", "type": "String", "declarator": "AD_TEXT = \"jmeter-plugins.org\"", "var_name": "AD_TEXT"}, {"original_string": "private static final String NO_SAMPLES = \"Waiting for samples...\";", "modifier": "private static final", "type": "String", "declarator": "NO_SAMPLES = \"Waiting for samples...\"", "var_name": "NO_SAMPLES"}, {"original_string": "private static final int spacing = 5;", "modifier": "private static final", "type": "int", "declarator": "spacing = 5", "var_name": "spacing"}, {"original_string": "private static final int previewInset = 4;", "modifier": "private static final", "type": "int", "declarator": "previewInset = 4", "var_name": "previewInset"}, {"original_string": "public static final int CHART_PERCENTAGE = 0;", "modifier": "public static final", "type": "int", "declarator": "CHART_PERCENTAGE = 0", "var_name": "CHART_PERCENTAGE"}, {"original_string": "public static final int CHART_DEFAULT = -1;", "modifier": "public static final", "type": "int", "declarator": "CHART_DEFAULT = -1", "var_name": "CHART_DEFAULT"}, {"original_string": "private static final Logger log = LoggingManager.getLoggerForClass();", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggingManager.getLoggerForClass()", "var_name": "log"}, {"original_string": "private Rectangle legendRect;", "modifier": "private", "type": "Rectangle", "declarator": "legendRect", "var_name": "legendRect"}, {"original_string": "private Rectangle xAxisRect;", "modifier": "private", "type": "Rectangle", "declarator": "xAxisRect", "var_name": "xAxisRect"}, {"original_string": "private Rectangle yAxisRect;", "modifier": "private", "type": "Rectangle", "declarator": "yAxisRect", "var_name": "yAxisRect"}, {"original_string": "private Rectangle chartRect;", "modifier": "private", "type": "Rectangle", "declarator": "chartRect", "var_name": "chartRect"}, {"original_string": "private static final Rectangle zeroRect = new Rectangle();", "modifier": "private static final", "type": "Rectangle", "declarator": "zeroRect = new Rectangle()", "var_name": "zeroRect"}, {"original_string": "private AbstractMap<String, AbstractGraphRow> rows;", "modifier": "private", "type": "AbstractMap<String, AbstractGraphRow>", "declarator": "rows", "var_name": "rows"}, {"original_string": "private double maxYVal;", "modifier": "private", "type": "double", "declarator": "maxYVal", "var_name": "maxYVal"}, {"original_string": "private double minYVal;", "modifier": "private", "type": "double", "declarator": "minYVal", "var_name": "minYVal"}, {"original_string": "private long maxXVal;", "modifier": "private", "type": "long", "declarator": "maxXVal", "var_name": "maxXVal"}, {"original_string": "private long minXVal;", "modifier": "private", "type": "long", "declarator": "minXVal", "var_name": "minXVal"}, {"original_string": "private long currentXVal;", "modifier": "private", "type": "long", "declarator": "currentXVal", "var_name": "currentXVal"}, {"original_string": "private static final int gridLinesCount = 10;", "modifier": "private static final", "type": "int", "declarator": "gridLinesCount = 10", "var_name": "gridLinesCount"}, {"original_string": "private NumberRenderer yAxisLabelRenderer;", "modifier": "private", "type": "NumberRenderer", "declarator": "yAxisLabelRenderer", "var_name": "yAxisLabelRenderer"}, {"original_string": "private NumberRenderer xAxisLabelRenderer;", "modifier": "private", "type": "NumberRenderer", "declarator": "xAxisLabelRenderer", "var_name": "xAxisLabelRenderer"}, {"original_string": "private long forcedMinX = -1;", "modifier": "private", "type": "long", "declarator": "forcedMinX = -1", "var_name": "forcedMinX"}, {"original_string": "private int chartType = CHART_DEFAULT;", "modifier": "private", "type": "int", "declarator": "chartType = CHART_DEFAULT", "var_name": "chartType"}, {"original_string": "private String errorMessage = null;", "modifier": "private", "type": "String", "declarator": "errorMessage = null", "var_name": "errorMessage"}, {"original_string": "private final static Color gradientColor = new Color(229, 236, 246);", "modifier": "private final static", "type": "Color", "declarator": "gradientColor = new Color(229, 236, 246)", "var_name": "gradientColor"}, {"original_string": "private final static Color axisColor = new Color(189, 196, 206);", "modifier": "private final static", "type": "Color", "declarator": "axisColor = new Color(189, 196, 206)", "var_name": "axisColor"}, {"original_string": "private static String savePath = null;", "modifier": "private static", "type": "String", "declarator": "savePath = null", "var_name": "savePath"}, {"original_string": "private ChartSettings chartSettings = new ChartSettings();", "modifier": "private", "type": "ChartSettings", "declarator": "chartSettings = new ChartSettings()", "var_name": "chartSettings"}, {"original_string": "private CustomNumberRenderer nbFormatter = new CustomNumberRenderer(\"#,#00.#\", ' ');", "modifier": "private", "type": "CustomNumberRenderer", "declarator": "nbFormatter = new CustomNumberRenderer(\"#,#00.#\", ' ')", "var_name": "nbFormatter"}, {"original_string": "private final static int legendAdjust = 3;", "modifier": "private final static", "type": "int", "declarator": "legendAdjust = 3", "var_name": "legendAdjust"}, {"original_string": "private boolean reSetColors = false;", "modifier": "private", "type": "boolean", "declarator": "reSetColors = false", "var_name": "reSetColors"}, {"original_string": "private JWindow hoverWindow;", "modifier": "private", "type": "JWindow", "declarator": "hoverWindow", "var_name": "hoverWindow"}, {"original_string": "private final static int hoverGap = 20;", "modifier": "private final static", "type": "int", "declarator": "hoverGap = 20", "var_name": "hoverGap"}, {"original_string": "private boolean forceHoverPosition = true;", "modifier": "private", "type": "boolean", "declarator": "forceHoverPosition = true", "var_name": "forceHoverPosition"}, {"original_string": "private JTextField hoverLabel;", "modifier": "private", "type": "JTextField", "declarator": "hoverLabel", "var_name": "hoverLabel"}, {"original_string": "private int xHoverInfo = -1;", "modifier": "private", "type": "int", "declarator": "xHoverInfo = -1", "var_name": "xHoverInfo"}, {"original_string": "private int yHoverInfo = -1;", "modifier": "private", "type": "int", "declarator": "yHoverInfo = -1", "var_name": "yHoverInfo"}, {"original_string": "private HoverMotionListener motionListener = new HoverMotionListener();", "modifier": "private", "type": "HoverMotionListener", "declarator": "motionListener = new HoverMotionListener()", "var_name": "motionListener"}, {"original_string": "private String xAxisLabel = \"X axis label\";", "modifier": "private", "type": "String", "declarator": "xAxisLabel = \"X axis label\"", "var_name": "xAxisLabel"}, {"original_string": "private String yAxisLabel = \"Y axis label\";", "modifier": "private", "type": "String", "declarator": "yAxisLabel = \"Y axis label\"", "var_name": "yAxisLabel"}, {"original_string": "private int precisionLabel = -1;", "modifier": "private", "type": "int", "declarator": "precisionLabel = -1", "var_name": "precisionLabel"}, {"original_string": "private int limitPointFactor = 1;", "modifier": "private", "type": "int", "declarator": "limitPointFactor = 1", "var_name": "limitPointFactor"}, {"original_string": "private boolean displayPrecision = false;", "modifier": "private", "type": "boolean", "declarator": "displayPrecision = false", "var_name": "displayPrecision"}, {"original_string": "private boolean isPreview = false;", "modifier": "private", "type": "boolean", "declarator": "isPreview = false", "var_name": "isPreview"}, {"original_string": "private long testStartTime = 0;", "modifier": "private", "type": "long", "declarator": "testStartTime = 0", "var_name": "testStartTime"}, {"original_string": "private HashMap<String, Double> rowsZoomFactor = new HashMap<>();", "modifier": "private", "type": "HashMap<String, Double>", "declarator": "rowsZoomFactor = new HashMap<>()", "var_name": "rowsZoomFactor"}], "methods": [{"identifier": "getChartSettings", "parameters": "()", "modifiers": "public", "return": "ChartSettings", "signature": "ChartSettings getChartSettings()", "full_signature": "public ChartSettings getChartSettings()", "class_method_signature": "GraphPanelChart.getChartSettings()", "testcase": false, "constructor": false}, {"identifier": "setReSetColors", "parameters": "(boolean reSetColors)", "modifiers": "public", "return": "void", "signature": "void setReSetColors(boolean reSetColors)", "full_signature": "public void setReSetColors(boolean reSetColors)", "class_method_signature": "GraphPanelChart.setReSetColors(boolean reSetColors)", "testcase": false, "constructor": false}, {"identifier": "setDisplayPrecision", "parameters": "(boolean displayPrecision)", "modifiers": "public", "return": "void", "signature": "void setDisplayPrecision(boolean displayPrecision)", "full_signature": "public void setDisplayPrecision(boolean displayPrecision)", "class_method_signature": "GraphPanelChart.setDisplayPrecision(boolean displayPrecision)", "testcase": false, "constructor": false}, {"identifier": "setxAxisLabel", "parameters": "(String xAxisLabel)", "modifiers": "public", "return": "void", "signature": "void setxAxisLabel(String xAxisLabel)", "full_signature": "public void setxAxisLabel(String xAxisLabel)", "class_method_signature": "GraphPanelChart.setxAxisLabel(String xAxisLabel)", "testcase": false, "constructor": false}, {"identifier": "setYAxisLabel", "parameters": "(String yAxisLabel)", "modifiers": "public", "return": "void", "signature": "void setYAxisLabel(String yAxisLabel)", "full_signature": "public void setYAxisLabel(String yAxisLabel)", "class_method_signature": "GraphPanelChart.setYAxisLabel(String yAxisLabel)", "testcase": false, "constructor": false}, {"identifier": "setPrecisionLabel", "parameters": "(int precision)", "modifiers": "public", "return": "void", "signature": "void setPrecisionLabel(int precision)", "full_signature": "public void setPrecisionLabel(int precision)", "class_method_signature": "GraphPanelChart.setPrecisionLabel(int precision)", "testcase": false, "constructor": false}, {"identifier": "autoZoom_orig", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void autoZoom_orig()", "full_signature": "private void autoZoom_orig()", "class_method_signature": "GraphPanelChart.autoZoom_orig()", "testcase": false, "constructor": false}, {"identifier": "getXAxisLabel", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getXAxisLabel()", "full_signature": "private String getXAxisLabel()", "class_method_signature": "GraphPanelChart.getXAxisLabel()", "testcase": false, "constructor": false}, {"identifier": "setIsPreview", "parameters": "(boolean isPreview)", "modifiers": "public", "return": "void", "signature": "void setIsPreview(boolean isPreview)", "full_signature": "public void setIsPreview(boolean isPreview)", "class_method_signature": "GraphPanelChart.setIsPreview(boolean isPreview)", "testcase": false, "constructor": false}, {"identifier": "setTestStartTime", "parameters": "(long time)", "modifiers": "public", "return": "void", "signature": "void setTestStartTime(long time)", "full_signature": "public void setTestStartTime(long time)", "class_method_signature": "GraphPanelChart.setTestStartTime(long time)", "testcase": false, "constructor": false}, {"identifier": "getNextId", "parameters": "()", "modifiers": "private static synchronized", "return": "int", "signature": "int getNextId()", "full_signature": "private static synchronized int getNextId()", "class_method_signature": "GraphPanelChart.getNextId()", "testcase": false, "constructor": false}, {"identifier": "GraphPanelChart", "parameters": "(boolean allowCsvExport, boolean haveGUI)", "modifiers": "public", "return": "", "signature": " GraphPanelChart(boolean allowCsvExport, boolean haveGUI)", "full_signature": "public  GraphPanelChart(boolean allowCsvExport, boolean haveGUI)", "class_method_signature": "GraphPanelChart.GraphPanelChart(boolean allowCsvExport, boolean haveGUI)", "testcase": false, "constructor": true}, {"identifier": "GraphPanelChart", "parameters": "(boolean haveGUI)", "modifiers": "public", "return": "", "signature": " GraphPanelChart(boolean haveGUI)", "full_signature": "public  GraphPanelChart(boolean haveGUI)", "class_method_signature": "GraphPanelChart.GraphPanelChart(boolean haveGUI)", "testcase": false, "constructor": true}, {"identifier": "GraphPanelChart", "parameters": "()", "modifiers": "public", "return": "", "signature": " GraphPanelChart()", "full_signature": "public  GraphPanelChart()", "class_method_signature": "GraphPanelChart.GraphPanelChart()", "testcase": false, "constructor": true}, {"identifier": "isModelContainsRow", "parameters": "(AbstractGraphRow row)", "modifiers": "public", "return": "boolean", "signature": "boolean isModelContainsRow(AbstractGraphRow row)", "full_signature": "public boolean isModelContainsRow(AbstractGraphRow row)", "class_method_signature": "GraphPanelChart.isModelContainsRow(AbstractGraphRow row)", "testcase": false, "constructor": false}, {"identifier": "setChartType", "parameters": "(int type)", "modifiers": "public", "return": "void", "signature": "void setChartType(int type)", "full_signature": "public void setChartType(int type)", "class_method_signature": "GraphPanelChart.setChartType(int type)", "testcase": false, "constructor": false}, {"identifier": "drawMessages", "parameters": "(Graphics2D g)", "modifiers": "private", "return": "boolean", "signature": "boolean drawMessages(Graphics2D g)", "full_signature": "private boolean drawMessages(Graphics2D g)", "class_method_signature": "GraphPanelChart.drawMessages(Graphics2D g)", "testcase": false, "constructor": false}, {"identifier": "getMinMaxDataValues", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void getMinMaxDataValues()", "full_signature": "private void getMinMaxDataValues()", "class_method_signature": "GraphPanelChart.getMinMaxDataValues()", "testcase": false, "constructor": false}, {"identifier": "computeChartSteps", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void computeChartSteps()", "full_signature": "private void computeChartSteps()", "class_method_signature": "GraphPanelChart.computeChartSteps()", "testcase": false, "constructor": false}, {"identifier": "setDefaultDimensions", "parameters": "(Graphics g)", "modifiers": "private", "return": "void", "signature": "void setDefaultDimensions(Graphics g)", "full_signature": "private void setDefaultDimensions(Graphics g)", "class_method_signature": "GraphPanelChart.setDefaultDimensions(Graphics g)", "testcase": false, "constructor": false}, {"identifier": "getYLabelsMaxWidth", "parameters": "(FontMetrics fm)", "modifiers": "private", "return": "int", "signature": "int getYLabelsMaxWidth(FontMetrics fm)", "full_signature": "private int getYLabelsMaxWidth(FontMetrics fm)", "class_method_signature": "GraphPanelChart.getYLabelsMaxWidth(FontMetrics fm)", "testcase": false, "constructor": false}, {"identifier": "calculateYAxisDimensions", "parameters": "(Graphics g)", "modifiers": "private", "return": "void", "signature": "void calculateYAxisDimensions(Graphics g)", "full_signature": "private void calculateYAxisDimensions(Graphics g)", "class_method_signature": "GraphPanelChart.calculateYAxisDimensions(Graphics g)", "testcase": false, "constructor": false}, {"identifier": "calculateXAxisDimensions", "parameters": "(Graphics g)", "modifiers": "private", "return": "void", "signature": "void calculateXAxisDimensions(Graphics g)", "full_signature": "private void calculateXAxisDimensions(Graphics g)", "class_method_signature": "GraphPanelChart.calculateXAxisDimensions(Graphics g)", "testcase": false, "constructor": false}, {"identifier": "invalidateCache", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void invalidateCache()", "full_signature": "public void invalidateCache()", "class_method_signature": "GraphPanelChart.invalidateCache()", "testcase": false, "constructor": false}, {"identifier": "paintComponent", "parameters": "(Graphics g)", "modifiers": "@Override public", "return": "void", "signature": "void paintComponent(Graphics g)", "full_signature": "@Override public void paintComponent(Graphics g)", "class_method_signature": "GraphPanelChart.paintComponent(Graphics g)", "testcase": false, "constructor": false}, {"identifier": "drawPanel", "parameters": "(Graphics2D g)", "modifiers": "private", "return": "void", "signature": "void drawPanel(Graphics2D g)", "full_signature": "private void drawPanel(Graphics2D g)", "class_method_signature": "GraphPanelChart.drawPanel(Graphics2D g)", "testcase": false, "constructor": false}, {"identifier": "drawPanel", "parameters": "(Graphics2D g, boolean drawHoverInfo)", "modifiers": "private", "return": "void", "signature": "void drawPanel(Graphics2D g, boolean drawHoverInfo)", "full_signature": "private void drawPanel(Graphics2D g, boolean drawHoverInfo)", "class_method_signature": "GraphPanelChart.drawPanel(Graphics2D g, boolean drawHoverInfo)", "testcase": false, "constructor": false}, {"identifier": "getNiceNumber", "parameters": "(int nb)", "modifiers": "private", "return": "String", "signature": "String getNiceNumber(int nb)", "full_signature": "private String getNiceNumber(int nb)", "class_method_signature": "GraphPanelChart.getNiceNumber(int nb)", "testcase": false, "constructor": false}, {"identifier": "paintLegend", "parameters": "(Graphics g)", "modifiers": "private", "return": "void", "signature": "void paintLegend(Graphics g)", "full_signature": "private void paintLegend(Graphics g)", "class_method_signature": "GraphPanelChart.paintLegend(Graphics g)", "testcase": false, "constructor": false}, {"identifier": "paintYAxis", "parameters": "(Graphics g)", "modifiers": "private", "return": "void", "signature": "void paintYAxis(Graphics g)", "full_signature": "private void paintYAxis(Graphics g)", "class_method_signature": "GraphPanelChart.paintYAxis(Graphics g)", "testcase": false, "constructor": false}, {"identifier": "paintXAxis", "parameters": "(Graphics g)", "modifiers": "private", "return": "void", "signature": "void paintXAxis(Graphics g)", "full_signature": "private void paintXAxis(Graphics g)", "class_method_signature": "GraphPanelChart.paintXAxis(Graphics g)", "testcase": false, "constructor": false}, {"identifier": "paintChart", "parameters": "(Graphics g)", "modifiers": "private", "return": "void", "signature": "void paintChart(Graphics g)", "full_signature": "private void paintChart(Graphics g)", "class_method_signature": "GraphPanelChart.paintChart(Graphics g)", "testcase": false, "constructor": false}, {"identifier": "paintRows", "parameters": "(Graphics g, ColorsDispatcher dispatcher, Iterator<Entry<String, AbstractGraphRow>> it, boolean rowsWithLabel)", "modifiers": "private", "return": "void", "signature": "void paintRows(Graphics g, ColorsDispatcher dispatcher, Iterator<Entry<String, AbstractGraphRow>> it, boolean rowsWithLabel)", "full_signature": "private void paintRows(Graphics g, ColorsDispatcher dispatcher, Iterator<Entry<String, AbstractGraphRow>> it, boolean rowsWithLabel)", "class_method_signature": "GraphPanelChart.paintRows(Graphics g, ColorsDispatcher dispatcher, Iterator<Entry<String, AbstractGraphRow>> it, boolean rowsWithLabel)", "testcase": false, "constructor": false}, {"identifier": "paintRow", "parameters": "(Graphics g, AbstractGraphRow row, String rowLabel, Color color)", "modifiers": "private", "return": "void", "signature": "void paintRow(Graphics g, AbstractGraphRow row, String rowLabel, Color color)", "full_signature": "private void paintRow(Graphics g, AbstractGraphRow row, String rowLabel, Color color)", "class_method_signature": "GraphPanelChart.paintRow(Graphics g, AbstractGraphRow row, String rowLabel, Color color)", "testcase": false, "constructor": false}, {"identifier": "setRows", "parameters": "(AbstractMap<String, AbstractGraphRow> aRows)", "modifiers": "public", "return": "void", "signature": "void setRows(AbstractMap<String, AbstractGraphRow> aRows)", "full_signature": "public void setRows(AbstractMap<String, AbstractGraphRow> aRows)", "class_method_signature": "GraphPanelChart.setRows(AbstractMap<String, AbstractGraphRow> aRows)", "testcase": false, "constructor": false}, {"identifier": "setyAxisLabelRenderer", "parameters": "(NumberRenderer yAxisLabelRenderer)", "modifiers": "public", "return": "void", "signature": "void setyAxisLabelRenderer(NumberRenderer yAxisLabelRenderer)", "full_signature": "public void setyAxisLabelRenderer(NumberRenderer yAxisLabelRenderer)", "class_method_signature": "GraphPanelChart.setyAxisLabelRenderer(NumberRenderer yAxisLabelRenderer)", "testcase": false, "constructor": false}, {"identifier": "setxAxisLabelRenderer", "parameters": "(NumberRenderer xAxisLabelRenderer)", "modifiers": "public", "return": "void", "signature": "void setxAxisLabelRenderer(NumberRenderer xAxisLabelRenderer)", "full_signature": "public void setxAxisLabelRenderer(NumberRenderer xAxisLabelRenderer)", "class_method_signature": "GraphPanelChart.setxAxisLabelRenderer(NumberRenderer xAxisLabelRenderer)", "testcase": false, "constructor": false}, {"identifier": "setCurrentX", "parameters": "(long currentX)", "modifiers": "public", "return": "void", "signature": "void setCurrentX(long currentX)", "full_signature": "public void setCurrentX(long currentX)", "class_method_signature": "GraphPanelChart.setCurrentX(long currentX)", "testcase": false, "constructor": false}, {"identifier": "setForcedMinX", "parameters": "(long minX)", "modifiers": "public", "return": "void", "signature": "void setForcedMinX(long minX)", "full_signature": "public void setForcedMinX(long minX)", "class_method_signature": "GraphPanelChart.setForcedMinX(long minX)", "testcase": false, "constructor": false}, {"identifier": "paintAd", "parameters": "(Graphics2D g)", "modifiers": "private", "return": "void", "signature": "void paintAd(Graphics2D g)", "full_signature": "private void paintAd(Graphics2D g)", "class_method_signature": "GraphPanelChart.paintAd(Graphics2D g)", "testcase": false, "constructor": false}, {"identifier": "clearErrorMessage", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearErrorMessage()", "full_signature": "public void clearErrorMessage()", "class_method_signature": "GraphPanelChart.clearErrorMessage()", "testcase": false, "constructor": false}, {"identifier": "setErrorMessage", "parameters": "(String msg)", "modifiers": "public", "return": "void", "signature": "void setErrorMessage(String msg)", "full_signature": "public void setErrorMessage(String msg)", "class_method_signature": "GraphPanelChart.setErrorMessage(String msg)", "testcase": false, "constructor": false}, {"identifier": "lostOwnership", "parameters": "(Clipboard clipboard, Transferable contents)", "modifiers": "@Override public", "return": "void", "signature": "void lostOwnership(Clipboard clipboard, Transferable contents)", "full_signature": "@Override public void lostOwnership(Clipboard clipboard, Transferable contents)", "class_method_signature": "GraphPanelChart.lostOwnership(Clipboard clipboard, Transferable contents)", "testcase": false, "constructor": false}, {"identifier": "getImage", "parameters": "()", "modifiers": "private", "return": "Image", "signature": "Image getImage()", "full_signature": "private Image getImage()", "class_method_signature": "GraphPanelChart.getImage()", "testcase": false, "constructor": false}, {"identifier": "getBufferedImage", "parameters": "(int w, int h)", "modifiers": "private", "return": "BufferedImage", "signature": "BufferedImage getBufferedImage(int w, int h)", "full_signature": "private BufferedImage getBufferedImage(int w, int h)", "class_method_signature": "GraphPanelChart.getBufferedImage(int w, int h)", "testcase": false, "constructor": false}, {"identifier": "registerPopup", "parameters": "(boolean allowCsvExport)", "modifiers": "private", "return": "void", "signature": "void registerPopup(boolean allowCsvExport)", "full_signature": "private void registerPopup(boolean allowCsvExport)", "class_method_signature": "GraphPanelChart.registerPopup(boolean allowCsvExport)", "testcase": false, "constructor": false}, {"identifier": "registerHoverInfo", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void registerHoverInfo()", "full_signature": "private void registerHoverInfo()", "class_method_signature": "GraphPanelChart.registerHoverInfo()", "testcase": false, "constructor": false}, {"identifier": "hideHoverInfo", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void hideHoverInfo()", "full_signature": "private void hideHoverInfo()", "class_method_signature": "GraphPanelChart.hideHoverInfo()", "testcase": false, "constructor": false}, {"identifier": "showHoverInfo", "parameters": "()", "modifiers": "private synchronized", "return": "void", "signature": "void showHoverInfo()", "full_signature": "private synchronized void showHoverInfo()", "class_method_signature": "GraphPanelChart.showHoverInfo()", "testcase": false, "constructor": false}, {"identifier": "chartMouseMoved", "parameters": "(java.awt.event.MouseEvent evt)", "modifiers": "private", "return": "void", "signature": "void chartMouseMoved(java.awt.event.MouseEvent evt)", "full_signature": "private void chartMouseMoved(java.awt.event.MouseEvent evt)", "class_method_signature": "GraphPanelChart.chartMouseMoved(java.awt.event.MouseEvent evt)", "testcase": false, "constructor": false}, {"identifier": "setUseRelativeTime", "parameters": "(boolean selected)", "modifiers": "public", "return": "void", "signature": "void setUseRelativeTime(boolean selected)", "full_signature": "public void setUseRelativeTime(boolean selected)", "class_method_signature": "GraphPanelChart.setUseRelativeTime(boolean selected)", "testcase": false, "constructor": false}, {"identifier": "saveGraphToPNG", "parameters": "(File file, int w, int h)", "modifiers": "public", "return": "void", "signature": "void saveGraphToPNG(File file, int w, int h)", "full_signature": "public void saveGraphToPNG(File file, int w, int h)", "class_method_signature": "GraphPanelChart.saveGraphToPNG(File file, int w, int h)", "testcase": false, "constructor": false}, {"identifier": "saveGraphToCSV", "parameters": "(File file)", "modifiers": "public", "return": "void", "signature": "void saveGraphToCSV(File file)", "full_signature": "public void saveGraphToCSV(File file)", "class_method_signature": "GraphPanelChart.saveGraphToCSV(File file)", "testcase": false, "constructor": false}], "file": "infra/common/src/main/java/kg/apc/charting/GraphPanelChart.java"}, "focal_method": {"identifier": "setTestStartTime", "parameters": "(long time)", "modifiers": "public", "return": "void", "body": "public void setTestStartTime(long time) {\n        testStartTime = time;\n    }", "signature": "void setTestStartTime(long time)", "full_signature": "public void setTestStartTime(long time)", "class_method_signature": "GraphPanelChart.setTestStartTime(long time)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 8197357, "url": "https://github.com/undera/jmeter-plugins", "stars": 388, "created": "2/14/2013 10:17:40 AM +00:00", "updates": "2020-01-26T06:36:21+00:00", "fork": "False", "license": "licensed"}}