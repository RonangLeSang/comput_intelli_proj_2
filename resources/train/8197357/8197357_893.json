{"test_class": {"identifier": "EnvTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static String key, value;", "modifier": "private static", "type": "String", "declarator": "key", "var_name": "key"}], "file": "plugins/functions/src/test/java/kg/apc/jmeter/functions/EnvTest.java"}, "test_case": {"identifier": "testGetReferenceKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetReferenceKey() {\n        System.out.println(\"getReferenceKey\");\n        Env instance = new Env();\n        String expResult = \"__env\";\n        String result = instance.getReferenceKey();\n        Assert.assertEquals(expResult, result);\n    }", "signature": "void testGetReferenceKey()", "full_signature": "@Test public void testGetReferenceKey()", "class_method_signature": "EnvTest.testGetReferenceKey()", "testcase": true, "constructor": false, "invocations": ["println", "getReferenceKey", "assertEquals"]}, "focal_class": {"identifier": "Env", "superclass": "extends AbstractFunction", "interfaces": "", "fields": [{"original_string": "private static final List<String> desc = new LinkedList<String>();", "modifier": "private static final", "type": "List<String>", "declarator": "desc = new LinkedList<String>()", "var_name": "desc"}, {"original_string": "private static final String KEY = \"__env\";", "modifier": "private static final", "type": "String", "declarator": "KEY = \"__env\"", "var_name": "KEY"}, {"original_string": "private static final int MIN_PARAMETER_COUNT = 1;", "modifier": "private static final", "type": "int", "declarator": "MIN_PARAMETER_COUNT = 1", "var_name": "MIN_PARAMETER_COUNT"}, {"original_string": "private static final int MAX_PARAMETER_COUNT = 3;", "modifier": "private static final", "type": "int", "declarator": "MAX_PARAMETER_COUNT = 3", "var_name": "MAX_PARAMETER_COUNT"}, {"original_string": "private CompoundVariable[] values;", "modifier": "private", "type": "CompoundVariable[]", "declarator": "values", "var_name": "values"}], "methods": [{"identifier": "Env", "parameters": "()", "modifiers": "public", "return": "", "signature": " Env()", "full_signature": "public  Env()", "class_method_signature": "Env.Env()", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "(SampleResult previousResult, Sampler currentSampler)", "modifiers": "@Override public synchronized", "return": "String", "signature": "String execute(SampleResult previousResult, Sampler currentSampler)", "full_signature": "@Override public synchronized String execute(SampleResult previousResult, Sampler currentSampler)", "class_method_signature": "Env.execute(SampleResult previousResult, Sampler currentSampler)", "testcase": false, "constructor": false}, {"identifier": "setParameters", "parameters": "(Collection<CompoundVariable> parameters)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void setParameters(Collection<CompoundVariable> parameters)", "full_signature": "@Override public synchronized void setParameters(Collection<CompoundVariable> parameters)", "class_method_signature": "Env.setParameters(Collection<CompoundVariable> parameters)", "testcase": false, "constructor": false}, {"identifier": "getReferenceKey", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getReferenceKey()", "full_signature": "@Override public String getReferenceKey()", "class_method_signature": "Env.getReferenceKey()", "testcase": false, "constructor": false}, {"identifier": "getArgumentDesc", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getArgumentDesc()", "full_signature": "@Override public List<String> getArgumentDesc()", "class_method_signature": "Env.getArgumentDesc()", "testcase": false, "constructor": false}], "file": "plugins/functions/src/main/java/kg/apc/jmeter/functions/Env.java"}, "focal_method": {"identifier": "getReferenceKey", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getReferenceKey() {\n        return KEY;\n    }", "signature": "String getReferenceKey()", "full_signature": "@Override public String getReferenceKey()", "class_method_signature": "Env.getReferenceKey()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 8197357, "url": "https://github.com/undera/jmeter-plugins", "stars": 388, "created": "2/14/2013 10:17:40 AM +00:00", "updates": "2020-01-26T06:36:21+00:00", "fork": "False", "license": "licensed"}}