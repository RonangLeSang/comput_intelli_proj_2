{"test_class": {"identifier": "ChartSettingsTest", "superclass": "", "interfaces": "", "fields": [], "file": "infra/common/src/test/java/kg/apc/charting/ChartSettingsTest.java"}, "test_case": {"identifier": "testSetUseRelativeTime", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetUseRelativeTime() {\n        System.out.println(\"setUseRelativeTime\");\n        boolean useRelativeTime = false;\n        ChartSettings instance = new ChartSettings();\n        instance.setUseRelativeTime(useRelativeTime);\n    }", "signature": "void testSetUseRelativeTime()", "full_signature": "@Test public void testSetUseRelativeTime()", "class_method_signature": "ChartSettingsTest.testSetUseRelativeTime()", "testcase": true, "constructor": false, "invocations": ["println", "setUseRelativeTime"]}, "focal_class": {"identifier": "ChartSettings", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "public final static int CHART_TYPE_DEFAULT = 0;", "modifier": "public final static", "type": "int", "declarator": "CHART_TYPE_DEFAULT = 0", "var_name": "CHART_TYPE_DEFAULT"}, {"original_string": "public final static int CHART_TYPE_LINE = 1;", "modifier": "public final static", "type": "int", "declarator": "CHART_TYPE_LINE = 1", "var_name": "CHART_TYPE_LINE"}, {"original_string": "public final static int CHART_TYPE_BAR = 2;", "modifier": "public final static", "type": "int", "declarator": "CHART_TYPE_BAR = 2", "var_name": "CHART_TYPE_BAR"}, {"original_string": "public final static int CHART_TYPE_CSPLINE = 3;", "modifier": "public final static", "type": "int", "declarator": "CHART_TYPE_CSPLINE = 3", "var_name": "CHART_TYPE_CSPLINE"}, {"original_string": "public final static int CHART_MARKERS_DEFAULT = 0;", "modifier": "public final static", "type": "int", "declarator": "CHART_MARKERS_DEFAULT = 0", "var_name": "CHART_MARKERS_DEFAULT"}, {"original_string": "public final static int CHART_MARKERS_YES = 1;", "modifier": "public final static", "type": "int", "declarator": "CHART_MARKERS_YES = 1", "var_name": "CHART_MARKERS_YES"}, {"original_string": "public final static int CHART_MARKERS_NO = 2;", "modifier": "public final static", "type": "int", "declarator": "CHART_MARKERS_NO = 2", "var_name": "CHART_MARKERS_NO"}, {"original_string": "private boolean configNeverDrawFinalZeroingLines = false;", "modifier": "private", "type": "boolean", "declarator": "configNeverDrawFinalZeroingLines = false", "var_name": "configNeverDrawFinalZeroingLines"}, {"original_string": "private boolean configOptimizeYAxis = true;", "modifier": "private", "type": "boolean", "declarator": "configOptimizeYAxis = true", "var_name": "configOptimizeYAxis"}, {"original_string": "private boolean configNeverDrawCurrentX = false;", "modifier": "private", "type": "boolean", "declarator": "configNeverDrawCurrentX = false", "var_name": "configNeverDrawCurrentX"}, {"original_string": "private String configCsvSeparator;", "modifier": "private", "type": "String", "declarator": "configCsvSeparator", "var_name": "configCsvSeparator"}, {"original_string": "private boolean drawGradient = true;", "modifier": "private", "type": "boolean", "declarator": "drawGradient = true", "var_name": "drawGradient"}, {"original_string": "private boolean drawFinalZeroingLines = false;", "modifier": "private", "type": "boolean", "declarator": "drawFinalZeroingLines = false", "var_name": "drawFinalZeroingLines"}, {"original_string": "private boolean drawCurrentX = false;", "modifier": "private", "type": "boolean", "declarator": "drawCurrentX = false", "var_name": "drawCurrentX"}, {"original_string": "private boolean useRelativeTime = true;", "modifier": "private", "type": "boolean", "declarator": "useRelativeTime = true", "var_name": "useRelativeTime"}, {"original_string": "private boolean preventXAxisOverScaling = false;", "modifier": "private", "type": "boolean", "declarator": "preventXAxisOverScaling = false", "var_name": "preventXAxisOverScaling"}, {"original_string": "private int hideNonRepValLimit = -1;", "modifier": "private", "type": "int", "declarator": "hideNonRepValLimit = -1", "var_name": "hideNonRepValLimit"}, {"original_string": "private int maxPointPerRow = -1;", "modifier": "private", "type": "int", "declarator": "maxPointPerRow = -1", "var_name": "maxPointPerRow"}, {"original_string": "private long forcedMaxY = -1;", "modifier": "private", "type": "long", "declarator": "forcedMaxY = -1", "var_name": "forcedMaxY"}, {"original_string": "private boolean expendRows = false;", "modifier": "private", "type": "boolean", "declarator": "expendRows = false", "var_name": "expendRows"}, {"original_string": "private int chartType = CHART_TYPE_DEFAULT;", "modifier": "private", "type": "int", "declarator": "chartType = CHART_TYPE_DEFAULT", "var_name": "chartType"}, {"original_string": "private int chartMarkers = CHART_MARKERS_DEFAULT;", "modifier": "private", "type": "int", "declarator": "chartMarkers = CHART_MARKERS_DEFAULT", "var_name": "chartMarkers"}, {"original_string": "private float lineWidth = 1.0f;", "modifier": "private", "type": "float", "declarator": "lineWidth = 1.0f", "var_name": "lineWidth"}, {"original_string": "private final static Stroke dashStroke = new BasicStroke(\n            1.0f, // Width\n            BasicStroke.CAP_SQUARE, // End cap\n            BasicStroke.JOIN_MITER, // Join style\n            10.0f, // Miter limit\n            new float[]{\n                    1.0f, 4.0f\n            }, // Dash pattern\n            0.0f);", "modifier": "private final static", "type": "Stroke", "declarator": "dashStroke = new BasicStroke(\n            1.0f, // Width\n            BasicStroke.CAP_SQUARE, // End cap\n            BasicStroke.JOIN_MITER, // Join style\n            10.0f, // Miter limit\n            new float[]{\n                    1.0f, 4.0f\n            }, // Dash pattern\n            0.0f)", "var_name": "dashStroke"}, {"original_string": "private final static Stroke thickStroke = new BasicStroke(\n            AbstractGraphRow.LINE_THICKNESS_BIG,\n            BasicStroke.CAP_BUTT,\n            BasicStroke.JOIN_BEVEL);", "modifier": "private final static", "type": "Stroke", "declarator": "thickStroke = new BasicStroke(\n            AbstractGraphRow.LINE_THICKNESS_BIG,\n            BasicStroke.CAP_BUTT,\n            BasicStroke.JOIN_BEVEL)", "var_name": "thickStroke"}, {"original_string": "private final static AlphaComposite barComposite = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f);", "modifier": "private final static", "type": "AlphaComposite", "declarator": "barComposite = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f)", "var_name": "barComposite"}], "methods": [{"identifier": "ChartSettings", "parameters": "()", "modifiers": "public", "return": "", "signature": " ChartSettings()", "full_signature": "public  ChartSettings()", "class_method_signature": "ChartSettings.ChartSettings()", "testcase": false, "constructor": true}, {"identifier": "getConfigCsvSeparator", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getConfigCsvSeparator()", "full_signature": "public String getConfigCsvSeparator()", "class_method_signature": "ChartSettings.getConfigCsvSeparator()", "testcase": false, "constructor": false}, {"identifier": "setConfigCsvSeparator", "parameters": "(String configCsvSeparator)", "modifiers": "public", "return": "void", "signature": "void setConfigCsvSeparator(String configCsvSeparator)", "full_signature": "public void setConfigCsvSeparator(String configCsvSeparator)", "class_method_signature": "ChartSettings.setConfigCsvSeparator(String configCsvSeparator)", "testcase": false, "constructor": false}, {"identifier": "setConfigNeverDrawCurrentX", "parameters": "(boolean configNeverDrawCurrentX)", "modifiers": "public", "return": "void", "signature": "void setConfigNeverDrawCurrentX(boolean configNeverDrawCurrentX)", "full_signature": "public void setConfigNeverDrawCurrentX(boolean configNeverDrawCurrentX)", "class_method_signature": "ChartSettings.setConfigNeverDrawCurrentX(boolean configNeverDrawCurrentX)", "testcase": false, "constructor": false}, {"identifier": "setConfigNeverDrawFinalZeroingLines", "parameters": "(boolean configNeverDrawFinalZeroingLines)", "modifiers": "public", "return": "void", "signature": "void setConfigNeverDrawFinalZeroingLines(boolean configNeverDrawFinalZeroingLines)", "full_signature": "public void setConfigNeverDrawFinalZeroingLines(boolean configNeverDrawFinalZeroingLines)", "class_method_signature": "ChartSettings.setConfigNeverDrawFinalZeroingLines(boolean configNeverDrawFinalZeroingLines)", "testcase": false, "constructor": false}, {"identifier": "isConfigOptimizeYAxis", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isConfigOptimizeYAxis()", "full_signature": "public boolean isConfigOptimizeYAxis()", "class_method_signature": "ChartSettings.isConfigOptimizeYAxis()", "testcase": false, "constructor": false}, {"identifier": "setConfigOptimizeYAxis", "parameters": "(boolean configOptimizeYAxis)", "modifiers": "public", "return": "void", "signature": "void setConfigOptimizeYAxis(boolean configOptimizeYAxis)", "full_signature": "public void setConfigOptimizeYAxis(boolean configOptimizeYAxis)", "class_method_signature": "ChartSettings.setConfigOptimizeYAxis(boolean configOptimizeYAxis)", "testcase": false, "constructor": false}, {"identifier": "isDrawCurrentX", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDrawCurrentX()", "full_signature": "public boolean isDrawCurrentX()", "class_method_signature": "ChartSettings.isDrawCurrentX()", "testcase": false, "constructor": false}, {"identifier": "setDrawCurrentX", "parameters": "(boolean drawCurrentX)", "modifiers": "public", "return": "void", "signature": "void setDrawCurrentX(boolean drawCurrentX)", "full_signature": "public void setDrawCurrentX(boolean drawCurrentX)", "class_method_signature": "ChartSettings.setDrawCurrentX(boolean drawCurrentX)", "testcase": false, "constructor": false}, {"identifier": "isDrawFinalZeroingLines", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDrawFinalZeroingLines()", "full_signature": "public boolean isDrawFinalZeroingLines()", "class_method_signature": "ChartSettings.isDrawFinalZeroingLines()", "testcase": false, "constructor": false}, {"identifier": "setDrawFinalZeroingLines", "parameters": "(boolean drawFinalZeroingLines)", "modifiers": "public", "return": "void", "signature": "void setDrawFinalZeroingLines(boolean drawFinalZeroingLines)", "full_signature": "public void setDrawFinalZeroingLines(boolean drawFinalZeroingLines)", "class_method_signature": "ChartSettings.setDrawFinalZeroingLines(boolean drawFinalZeroingLines)", "testcase": false, "constructor": false}, {"identifier": "isDrawGradient", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDrawGradient()", "full_signature": "public boolean isDrawGradient()", "class_method_signature": "ChartSettings.isDrawGradient()", "testcase": false, "constructor": false}, {"identifier": "setDrawGradient", "parameters": "(boolean drawGradient)", "modifiers": "public", "return": "void", "signature": "void setDrawGradient(boolean drawGradient)", "full_signature": "public void setDrawGradient(boolean drawGradient)", "class_method_signature": "ChartSettings.setDrawGradient(boolean drawGradient)", "testcase": false, "constructor": false}, {"identifier": "getHideNonRepValLimit", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getHideNonRepValLimit()", "full_signature": "public int getHideNonRepValLimit()", "class_method_signature": "ChartSettings.getHideNonRepValLimit()", "testcase": false, "constructor": false}, {"identifier": "setHideNonRepValLimit", "parameters": "(int hideNonRepValLimit)", "modifiers": "public", "return": "void", "signature": "void setHideNonRepValLimit(int hideNonRepValLimit)", "full_signature": "public void setHideNonRepValLimit(int hideNonRepValLimit)", "class_method_signature": "ChartSettings.setHideNonRepValLimit(int hideNonRepValLimit)", "testcase": false, "constructor": false}, {"identifier": "isPreventXAxisOverScaling", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isPreventXAxisOverScaling()", "full_signature": "public boolean isPreventXAxisOverScaling()", "class_method_signature": "ChartSettings.isPreventXAxisOverScaling()", "testcase": false, "constructor": false}, {"identifier": "setPreventXAxisOverScaling", "parameters": "(boolean preventXAxisOverScaling)", "modifiers": "public", "return": "void", "signature": "void setPreventXAxisOverScaling(boolean preventXAxisOverScaling)", "full_signature": "public void setPreventXAxisOverScaling(boolean preventXAxisOverScaling)", "class_method_signature": "ChartSettings.setPreventXAxisOverScaling(boolean preventXAxisOverScaling)", "testcase": false, "constructor": false}, {"identifier": "isUseRelativeTime", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isUseRelativeTime()", "full_signature": "public boolean isUseRelativeTime()", "class_method_signature": "ChartSettings.isUseRelativeTime()", "testcase": false, "constructor": false}, {"identifier": "setUseRelativeTime", "parameters": "(boolean useRelativeTime)", "modifiers": "public", "return": "void", "signature": "void setUseRelativeTime(boolean useRelativeTime)", "full_signature": "public void setUseRelativeTime(boolean useRelativeTime)", "class_method_signature": "ChartSettings.setUseRelativeTime(boolean useRelativeTime)", "testcase": false, "constructor": false}, {"identifier": "getMaxPointPerRow", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxPointPerRow()", "full_signature": "public int getMaxPointPerRow()", "class_method_signature": "ChartSettings.getMaxPointPerRow()", "testcase": false, "constructor": false}, {"identifier": "setMaxPointPerRow", "parameters": "(int maxPointPerRow)", "modifiers": "public", "return": "void", "signature": "void setMaxPointPerRow(int maxPointPerRow)", "full_signature": "public void setMaxPointPerRow(int maxPointPerRow)", "class_method_signature": "ChartSettings.setMaxPointPerRow(int maxPointPerRow)", "testcase": false, "constructor": false}, {"identifier": "getForcedMaxY", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getForcedMaxY()", "full_signature": "public long getForcedMaxY()", "class_method_signature": "ChartSettings.getForcedMaxY()", "testcase": false, "constructor": false}, {"identifier": "setForcedMaxY", "parameters": "(long forcedMaxY)", "modifiers": "public", "return": "void", "signature": "void setForcedMaxY(long forcedMaxY)", "full_signature": "public void setForcedMaxY(long forcedMaxY)", "class_method_signature": "ChartSettings.setForcedMaxY(long forcedMaxY)", "testcase": false, "constructor": false}, {"identifier": "enableDrawFinalZeroingLines", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void enableDrawFinalZeroingLines()", "full_signature": "public void enableDrawFinalZeroingLines()", "class_method_signature": "ChartSettings.enableDrawFinalZeroingLines()", "testcase": false, "constructor": false}, {"identifier": "enableDrawCurrentX", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void enableDrawCurrentX()", "full_signature": "public void enableDrawCurrentX()", "class_method_signature": "ChartSettings.enableDrawCurrentX()", "testcase": false, "constructor": false}, {"identifier": "getChartType", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getChartType()", "full_signature": "public int getChartType()", "class_method_signature": "ChartSettings.getChartType()", "testcase": false, "constructor": false}, {"identifier": "setChartType", "parameters": "(int chartType)", "modifiers": "public", "return": "void", "signature": "void setChartType(int chartType)", "full_signature": "public void setChartType(int chartType)", "class_method_signature": "ChartSettings.setChartType(int chartType)", "testcase": false, "constructor": false}, {"identifier": "getChartMarkers", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getChartMarkers()", "full_signature": "public int getChartMarkers()", "class_method_signature": "ChartSettings.getChartMarkers()", "testcase": false, "constructor": false}, {"identifier": "setChartMarkers", "parameters": "(int chartMarkers)", "modifiers": "public", "return": "void", "signature": "void setChartMarkers(int chartMarkers)", "full_signature": "public void setChartMarkers(int chartMarkers)", "class_method_signature": "ChartSettings.setChartMarkers(int chartMarkers)", "testcase": false, "constructor": false}, {"identifier": "getDashStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getDashStroke()", "full_signature": "public Stroke getDashStroke()", "class_method_signature": "ChartSettings.getDashStroke()", "testcase": false, "constructor": false}, {"identifier": "getThickStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getThickStroke()", "full_signature": "public Stroke getThickStroke()", "class_method_signature": "ChartSettings.getThickStroke()", "testcase": false, "constructor": false}, {"identifier": "getBarComposite", "parameters": "()", "modifiers": "public", "return": "AlphaComposite", "signature": "AlphaComposite getBarComposite()", "full_signature": "public AlphaComposite getBarComposite()", "class_method_signature": "ChartSettings.getBarComposite()", "testcase": false, "constructor": false}, {"identifier": "isExpendRows", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isExpendRows()", "full_signature": "public boolean isExpendRows()", "class_method_signature": "ChartSettings.isExpendRows()", "testcase": false, "constructor": false}, {"identifier": "setExpendRows", "parameters": "(boolean expendRows)", "modifiers": "public", "return": "void", "signature": "void setExpendRows(boolean expendRows)", "full_signature": "public void setExpendRows(boolean expendRows)", "class_method_signature": "ChartSettings.setExpendRows(boolean expendRows)", "testcase": false, "constructor": false}, {"identifier": "getLineWidth", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getLineWidth()", "full_signature": "public float getLineWidth()", "class_method_signature": "ChartSettings.getLineWidth()", "testcase": false, "constructor": false}, {"identifier": "setLineWidth", "parameters": "(float lineWidth)", "modifiers": "public", "return": "void", "signature": "void setLineWidth(float lineWidth)", "full_signature": "public void setLineWidth(float lineWidth)", "class_method_signature": "ChartSettings.setLineWidth(float lineWidth)", "testcase": false, "constructor": false}], "file": "infra/common/src/main/java/kg/apc/charting/ChartSettings.java"}, "focal_method": {"identifier": "setUseRelativeTime", "parameters": "(boolean useRelativeTime)", "modifiers": "public", "return": "void", "body": "public void setUseRelativeTime(boolean useRelativeTime) {\n        this.useRelativeTime = useRelativeTime;\n    }", "signature": "void setUseRelativeTime(boolean useRelativeTime)", "full_signature": "public void setUseRelativeTime(boolean useRelativeTime)", "class_method_signature": "ChartSettings.setUseRelativeTime(boolean useRelativeTime)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 8197357, "url": "https://github.com/undera/jmeter-plugins", "stars": 388, "created": "2/14/2013 10:17:40 AM +00:00", "updates": "2020-01-26T06:36:21+00:00", "fork": "False", "license": "licensed"}}