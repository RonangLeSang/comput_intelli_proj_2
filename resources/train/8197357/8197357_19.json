{"test_class": {"identifier": "AggregateReportGuiTest", "superclass": "", "interfaces": "", "fields": [], "file": "tools/synthesis/src/test/java/kg/apc/jmeter/vizualizers/AggregateReportGuiTest.java"}, "test_case": {"identifier": "testGetMenuCategories", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetMenuCategories() {\n        System.out.println(\"getMenuCategories\");\n        AggregateReportGui instance = new AggregateReportGui();\n        Collection result = instance.getMenuCategories();\n        assertTrue(result.isEmpty());\n    }", "signature": "void testGetMenuCategories()", "full_signature": "@Test public void testGetMenuCategories()", "class_method_signature": "AggregateReportGuiTest.testGetMenuCategories()", "testcase": true, "constructor": false, "invocations": ["println", "getMenuCategories", "assertTrue", "isEmpty"]}, "focal_class": {"identifier": "AggregateReportGui", "superclass": "extends AbstractGraphPanelVisualizer", "interfaces": "", "fields": [{"original_string": "private Collection<String> emptyCollection = new ArrayList<>();", "modifier": "private", "type": "Collection<String>", "declarator": "emptyCollection = new ArrayList<>()", "var_name": "emptyCollection"}, {"original_string": "private static final long serialVersionUID = 241L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 241L", "var_name": "serialVersionUID"}, {"original_string": "private static final Logger log = LoggingManager.getLoggerForClass();", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggingManager.getLoggerForClass()", "var_name": "log"}, {"original_string": "private static final String USE_GROUP_NAME = \"useGroupName\";", "modifier": "private static final", "type": "String", "declarator": "USE_GROUP_NAME = \"useGroupName\"", "var_name": "USE_GROUP_NAME"}, {"original_string": "private static final String SAVE_HEADERS = \"saveHeaders\";", "modifier": "private static final", "type": "String", "declarator": "SAVE_HEADERS = \"saveHeaders\"", "var_name": "SAVE_HEADERS"}, {"original_string": "private static final String[] COLUMNS = {\n        \"sampler_label\",\n        \"aggregate_report_count\",\n        \"average\",\n        \"aggregate_report_median\",\n        \"aggregate_report_xx_pct1_line\",\n        \"aggregate_report_xx_pct2_line\",\n        \"aggregate_report_xx_pct3_line\",\n        \"aggregate_report_min\",\n        \"aggregate_report_max\",\n        \"aggregate_report_error%\",\n        \"aggregate_report_rate\",\n        \"aggregate_report_bandwidth\",\n        \"aggregate_report_stddev\",};", "modifier": "private static final", "type": "String[]", "declarator": "COLUMNS = {\n        \"sampler_label\",\n        \"aggregate_report_count\",\n        \"average\",\n        \"aggregate_report_median\",\n        \"aggregate_report_xx_pct1_line\",\n        \"aggregate_report_xx_pct2_line\",\n        \"aggregate_report_xx_pct3_line\",\n        \"aggregate_report_min\",\n        \"aggregate_report_max\",\n        \"aggregate_report_error%\",\n        \"aggregate_report_rate\",\n        \"aggregate_report_bandwidth\",\n        \"aggregate_report_stddev\",}", "var_name": "COLUMNS"}, {"original_string": "private final String TOTAL_ROW_LABEL = JMeterUtils.getResString(\"aggregate_report_total_label\");", "modifier": "private final", "type": "String", "declarator": "TOTAL_ROW_LABEL = JMeterUtils.getResString(\"aggregate_report_total_label\")", "var_name": "TOTAL_ROW_LABEL"}, {"original_string": "private static final String PCT1_LABEL = JMeterUtils.getPropDefault(\"aggregate_rpt_pct1\", \"90\");", "modifier": "private static final", "type": "String", "declarator": "PCT1_LABEL = JMeterUtils.getPropDefault(\"aggregate_rpt_pct1\", \"90\")", "var_name": "PCT1_LABEL"}, {"original_string": "private static final String PCT2_LABEL = JMeterUtils.getPropDefault(\"aggregate_rpt_pct2\", \"95\");", "modifier": "private static final", "type": "String", "declarator": "PCT2_LABEL = JMeterUtils.getPropDefault(\"aggregate_rpt_pct2\", \"95\")", "var_name": "PCT2_LABEL"}, {"original_string": "private static final String PCT3_LABEL = JMeterUtils.getPropDefault(\"aggregate_rpt_pct3\", \"99\");", "modifier": "private static final", "type": "String", "declarator": "PCT3_LABEL = JMeterUtils.getPropDefault(\"aggregate_rpt_pct3\", \"99\")", "var_name": "PCT3_LABEL"}, {"original_string": "private static final Float PCT1_VALUE = new Float(Float.parseFloat(PCT1_LABEL)/100);", "modifier": "private static final", "type": "Float", "declarator": "PCT1_VALUE = new Float(Float.parseFloat(PCT1_LABEL)/100)", "var_name": "PCT1_VALUE"}, {"original_string": "private static final Float PCT2_VALUE =  new Float(Float.parseFloat(PCT2_LABEL)/100);", "modifier": "private static final", "type": "Float", "declarator": "PCT2_VALUE =  new Float(Float.parseFloat(PCT2_LABEL)/100)", "var_name": "PCT2_VALUE"}, {"original_string": "private static final Float PCT3_VALUE =  new Float(Float.parseFloat(PCT3_LABEL)/100);", "modifier": "private static final", "type": "Float", "declarator": "PCT3_VALUE =  new Float(Float.parseFloat(PCT3_LABEL)/100)", "var_name": "PCT3_VALUE"}, {"original_string": "private JTable myJTable;", "modifier": "private", "type": "JTable", "declarator": "myJTable", "var_name": "myJTable"}, {"original_string": "private JScrollPane myScrollPane;", "modifier": "private", "type": "JScrollPane", "declarator": "myScrollPane", "var_name": "myScrollPane"}, {"original_string": "private final JButton saveTable =\n            new JButton(JMeterUtils.getResString(\"aggregate_graph_save_table\"));", "modifier": "private final", "type": "JButton", "declarator": "saveTable =\n            new JButton(JMeterUtils.getResString(\"aggregate_graph_save_table\"))", "var_name": "saveTable"}, {"original_string": "private final JCheckBox saveHeaders = // should header be saved with the data?\n            new JCheckBox(JMeterUtils.getResString(\"aggregate_graph_save_table_header\"), true);", "modifier": "private final", "type": "JCheckBox", "declarator": "saveHeaders = // should header be saved with the data?\n            new JCheckBox(JMeterUtils.getResString(\"aggregate_graph_save_table_header\"), true)", "var_name": "saveHeaders"}, {"original_string": "private final JCheckBox useGroupName =\n            new JCheckBox(JMeterUtils.getResString(\"aggregate_graph_use_group_name\"));", "modifier": "private final", "type": "JCheckBox", "declarator": "useGroupName =\n            new JCheckBox(JMeterUtils.getResString(\"aggregate_graph_use_group_name\"))", "var_name": "useGroupName"}, {"original_string": "private transient ObjectTableModel statModel;", "modifier": "private transient", "type": "ObjectTableModel", "declarator": "statModel", "var_name": "statModel"}, {"original_string": "private final Map<String, SamplingStatCalculator> tableRows =\n            new ConcurrentHashMap<>();", "modifier": "private final", "type": "Map<String, SamplingStatCalculator>", "declarator": "tableRows =\n            new ConcurrentHashMap<>()", "var_name": "tableRows"}, {"original_string": "private static final TableCellRenderer[] RENDERERS =\n        new TableCellRenderer[]{\n            null, // Label\n            null, // count\n            null, // Mean\n            null, // median\n            null, // 90%\n            null, // 95%\n            null, // 99%\n            null, // Min\n            null, // Max\n            new NumberRenderer(\"#0.00%\"), // Error %age\n            new RateRenderer(\"#.0\"), // Throughput\n            new NumberRenderer(\"#.0\"), // pageSize\n            new NumberRenderer(\"#0.00\"), // Std Dev.\n        };", "modifier": "private static final", "type": "TableCellRenderer[]", "declarator": "RENDERERS =\n        new TableCellRenderer[]{\n            null, // Label\n            null, // count\n            null, // Mean\n            null, // median\n            null, // 90%\n            null, // 95%\n            null, // 99%\n            null, // Min\n            null, // Max\n            new NumberRenderer(\"#0.00%\"), // Error %age\n            new RateRenderer(\"#.0\"), // Throughput\n            new NumberRenderer(\"#.0\"), // pageSize\n            new NumberRenderer(\"#0.00\"), // Std Dev.\n        }", "var_name": "RENDERERS"}, {"original_string": "static final Format[] FORMATS =\n        new Format[]{\n            null, // Label\n            null, // count\n            null, // Mean\n            null, // median\n            null, // 90%\n            null, // 95%\n            null, // 99%\n            null, // Min\n            null, // Max\n            new DecimalFormat(\"#0.00%\"), // Error %age\n            new DecimalFormat(\"#.0\"), // Throughput\n            new DecimalFormat(\"#.0\"), // pageSize\n            new DecimalFormat(\"#0.00\"), // Std Dev.\n        };", "modifier": "static final", "type": "Format[]", "declarator": "FORMATS =\n        new Format[]{\n            null, // Label\n            null, // count\n            null, // Mean\n            null, // median\n            null, // 90%\n            null, // 95%\n            null, // 99%\n            null, // Min\n            null, // Max\n            new DecimalFormat(\"#0.00%\"), // Error %age\n            new DecimalFormat(\"#.0\"), // Throughput\n            new DecimalFormat(\"#.0\"), // pageSize\n            new DecimalFormat(\"#0.00\"), // Std Dev.\n        }", "var_name": "FORMATS"}], "methods": [{"identifier": "AggregateReportGui", "parameters": "()", "modifiers": "public", "return": "", "signature": " AggregateReportGui()", "full_signature": "public  AggregateReportGui()", "class_method_signature": "AggregateReportGui.AggregateReportGui()", "testcase": false, "constructor": true}, {"identifier": "getMenuCategories", "parameters": "()", "modifiers": "@Override public", "return": "Collection<String>", "signature": "Collection<String> getMenuCategories()", "full_signature": "@Override public Collection<String> getMenuCategories()", "class_method_signature": "AggregateReportGui.getMenuCategories()", "testcase": false, "constructor": false}, {"identifier": "getLabels", "parameters": "(String[] keys)", "modifiers": "static", "return": "String[]", "signature": "String[] getLabels(String[] keys)", "full_signature": "static String[] getLabels(String[] keys)", "class_method_signature": "AggregateReportGui.getLabels(String[] keys)", "testcase": false, "constructor": false}, {"identifier": "getColumnsMsgParameters", "parameters": "()", "modifiers": "static final", "return": "Object[][]", "signature": "Object[][] getColumnsMsgParameters()", "full_signature": "static final Object[][] getColumnsMsgParameters()", "class_method_signature": "AggregateReportGui.getColumnsMsgParameters()", "testcase": false, "constructor": false}, {"identifier": "getLabelResource", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getLabelResource()", "full_signature": "@Override public String getLabelResource()", "class_method_signature": "AggregateReportGui.getLabelResource()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(SampleResult res)", "modifiers": "@Override public", "return": "void", "signature": "void add(SampleResult res)", "full_signature": "@Override public void add(SampleResult res)", "class_method_signature": "AggregateReportGui.add(SampleResult res)", "testcase": false, "constructor": false}, {"identifier": "clearData", "parameters": "()", "modifiers": "@Override public final", "return": "void", "signature": "void clearData()", "full_signature": "@Override public final void clearData()", "class_method_signature": "AggregateReportGui.clearData()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void init()", "full_signature": "private void init()", "class_method_signature": "AggregateReportGui.init()", "testcase": false, "constructor": false}, {"identifier": "modifyTestElement", "parameters": "(TestElement c)", "modifiers": "@Override public", "return": "void", "signature": "void modifyTestElement(TestElement c)", "full_signature": "@Override public void modifyTestElement(TestElement c)", "class_method_signature": "AggregateReportGui.modifyTestElement(TestElement c)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(TestElement el)", "modifiers": "@Override public", "return": "void", "signature": "void configure(TestElement el)", "full_signature": "@Override public void configure(TestElement el)", "class_method_signature": "AggregateReportGui.configure(TestElement el)", "testcase": false, "constructor": false}, {"identifier": "createSettingsPanel", "parameters": "()", "modifiers": "@Override protected", "return": "JSettingsPanel", "signature": "JSettingsPanel createSettingsPanel()", "full_signature": "@Override protected JSettingsPanel createSettingsPanel()", "class_method_signature": "AggregateReportGui.createSettingsPanel()", "testcase": false, "constructor": false}, {"identifier": "getWikiPage", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getWikiPage()", "full_signature": "@Override public String getWikiPage()", "class_method_signature": "AggregateReportGui.getWikiPage()", "testcase": false, "constructor": false}, {"identifier": "getGraphPanelChart", "parameters": "()", "modifiers": "@Override public", "return": "GraphPanelChart", "signature": "GraphPanelChart getGraphPanelChart()", "full_signature": "@Override public GraphPanelChart getGraphPanelChart()", "class_method_signature": "AggregateReportGui.getGraphPanelChart()", "testcase": false, "constructor": false}, {"identifier": "getStaticLabel", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getStaticLabel()", "full_signature": "@Override public String getStaticLabel()", "class_method_signature": "AggregateReportGui.getStaticLabel()", "testcase": false, "constructor": false}], "file": "tools/synthesis/src/main/java/kg/apc/jmeter/vizualizers/AggregateReportGui.java"}, "focal_method": {"identifier": "getMenuCategories", "parameters": "()", "modifiers": "@Override public", "return": "Collection<String>", "body": "@Override\n    public Collection<String> getMenuCategories() {\n        return emptyCollection;\n    }", "signature": "Collection<String> getMenuCategories()", "full_signature": "@Override public Collection<String> getMenuCategories()", "class_method_signature": "AggregateReportGui.getMenuCategories()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 8197357, "url": "https://github.com/undera/jmeter-plugins", "stars": 388, "created": "2/14/2013 10:17:40 AM +00:00", "updates": "2020-01-26T06:36:21+00:00", "fork": "False", "license": "licensed"}}