{"test_class": {"identifier": "GraphRowSumValuesTest", "superclass": "", "interfaces": "", "fields": [], "file": "infra/common/src/test/java/kg/apc/charting/rows/GraphRowSumValuesTest.java"}, "test_case": {"identifier": "testHasNext", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHasNext() {\n        System.out.println(\"hasNext\");\n        GraphRowSumValues instance = new GraphRowSumValues();\n        Iterator it = instance.iterator();\n        boolean result = it.hasNext();\n        Assert.assertEquals(false, result);\n    }", "signature": "void testHasNext()", "full_signature": "@Test public void testHasNext()", "class_method_signature": "GraphRowSumValuesTest.testHasNext()", "testcase": true, "constructor": false, "invocations": ["println", "iterator", "hasNext", "assertEquals"]}, "focal_class": {"identifier": "GraphRowSumValues", "superclass": "extends AbstractGraphRow", "interfaces": "implements Iterator<Entry<Long, AbstractGraphPanelChartElement>>", "fields": [{"original_string": "private ConcurrentSkipListMap<Long, GraphPanelChartSumElement> values;", "modifier": "private", "type": "ConcurrentSkipListMap<Long, GraphPanelChartSumElement>", "declarator": "values", "var_name": "values"}, {"original_string": "private double rollingSum;", "modifier": "private", "type": "double", "declarator": "rollingSum", "var_name": "rollingSum"}, {"original_string": "private Iterator<Entry<Long, GraphPanelChartSumElement>> iterator;", "modifier": "private", "type": "Iterator<Entry<Long, GraphPanelChartSumElement>>", "declarator": "iterator", "var_name": "iterator"}, {"original_string": "private boolean isRollingSum = true;", "modifier": "private", "type": "boolean", "declarator": "isRollingSum = true", "var_name": "isRollingSum"}, {"original_string": "private boolean excludeOutOfRangeValues = false;", "modifier": "private", "type": "boolean", "declarator": "excludeOutOfRangeValues = false", "var_name": "excludeOutOfRangeValues"}, {"original_string": "private final static long excludeCount = 15;", "modifier": "private final static", "type": "long", "declarator": "excludeCount = 15", "var_name": "excludeCount"}, {"original_string": "private int countX = 0;", "modifier": "private", "type": "int", "declarator": "countX = 0", "var_name": "countX"}], "methods": [{"identifier": "setExcludeOutOfRangeValues", "parameters": "(boolean excludeOutOfRangeValues)", "modifiers": "@Override public", "return": "void", "signature": "void setExcludeOutOfRangeValues(boolean excludeOutOfRangeValues)", "full_signature": "@Override public void setExcludeOutOfRangeValues(boolean excludeOutOfRangeValues)", "class_method_signature": "GraphRowSumValues.setExcludeOutOfRangeValues(boolean excludeOutOfRangeValues)", "testcase": false, "constructor": false}, {"identifier": "GraphRowSumValues", "parameters": "()", "modifiers": "public", "return": "", "signature": " GraphRowSumValues()", "full_signature": "public  GraphRowSumValues()", "class_method_signature": "GraphRowSumValues.GraphRowSumValues()", "testcase": false, "constructor": true}, {"identifier": "GraphRowSumValues", "parameters": "(boolean doRollingSum)", "modifiers": "public", "return": "", "signature": " GraphRowSumValues(boolean doRollingSum)", "full_signature": "public  GraphRowSumValues(boolean doRollingSum)", "class_method_signature": "GraphRowSumValues.GraphRowSumValues(boolean doRollingSum)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(long xVal, double yVal)", "modifiers": "@Override public", "return": "void", "signature": "void add(long xVal, double yVal)", "full_signature": "@Override public void add(long xVal, double yVal)", "class_method_signature": "GraphRowSumValues.add(long xVal, double yVal)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "public", "return": "Iterator<Entry<Long, AbstractGraphPanelChartElement>>", "signature": "Iterator<Entry<Long, AbstractGraphPanelChartElement>> iterator()", "full_signature": "public Iterator<Entry<Long, AbstractGraphPanelChartElement>> iterator()", "class_method_signature": "GraphRowSumValues.iterator()", "testcase": false, "constructor": false}, {"identifier": "hasNext", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasNext()", "full_signature": "public boolean hasNext()", "class_method_signature": "GraphRowSumValues.hasNext()", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "()", "modifiers": "public", "return": "Entry<Long, AbstractGraphPanelChartElement>", "signature": "Entry<Long, AbstractGraphPanelChartElement> next()", "full_signature": "public Entry<Long, AbstractGraphPanelChartElement> next()", "class_method_signature": "GraphRowSumValues.next()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void remove()", "full_signature": "public void remove()", "class_method_signature": "GraphRowSumValues.remove()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "GraphRowSumValues.size()", "testcase": false, "constructor": false}, {"identifier": "getMaxX", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getMaxX()", "full_signature": "@Override public long getMaxX()", "class_method_signature": "GraphRowSumValues.getMaxX()", "testcase": false, "constructor": false}, {"identifier": "getElement", "parameters": "(long value)", "modifiers": "@Override public", "return": "AbstractGraphPanelChartElement", "signature": "AbstractGraphPanelChartElement getElement(long value)", "full_signature": "@Override public AbstractGraphPanelChartElement getElement(long value)", "class_method_signature": "GraphRowSumValues.getElement(long value)", "testcase": false, "constructor": false}], "file": "infra/common/src/main/java/kg/apc/charting/rows/GraphRowSumValues.java"}, "focal_method": {"identifier": "hasNext", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean hasNext() {\n        return iterator.hasNext();\n    }", "signature": "boolean hasNext()", "full_signature": "public boolean hasNext()", "class_method_signature": "GraphRowSumValues.hasNext()", "testcase": false, "constructor": false, "invocations": ["hasNext"]}, "repository": {"repo_id": 8197357, "url": "https://github.com/undera/jmeter-plugins", "stars": 388, "created": "2/14/2013 10:17:40 AM +00:00", "updates": "2020-01-26T06:36:21+00:00", "fork": "False", "license": "licensed"}}