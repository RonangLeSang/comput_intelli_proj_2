{"test_class": {"identifier": "DatagramChannelWithTimeoutsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DatagramChannelWithTimeoutsEmul instance;", "modifier": "private", "type": "DatagramChannelWithTimeoutsEmul", "declarator": "instance", "var_name": "instance"}], "file": "infra/common-io/src/test/java/kg/apc/io/DatagramChannelWithTimeoutsTest.java"}, "test_case": {"identifier": "testDisconnect", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDisconnect() throws Exception {\n        System.out.println(\"disconnect\");\n        DatagramChannel result = instance.disconnect();\n        Assert.assertNotNull(result);\n    }", "signature": "void testDisconnect()", "full_signature": "@Test public void testDisconnect()", "class_method_signature": "DatagramChannelWithTimeoutsTest.testDisconnect()", "testcase": true, "constructor": false, "invocations": ["println", "disconnect", "assertNotNull"]}, "focal_class": {"identifier": "DatagramChannelWithTimeouts", "superclass": "extends DatagramChannel", "interfaces": "", "fields": [{"original_string": "protected DatagramChannel channel;", "modifier": "protected", "type": "DatagramChannel", "declarator": "channel", "var_name": "channel"}, {"original_string": "protected Selector selector;", "modifier": "protected", "type": "Selector", "declarator": "selector", "var_name": "selector"}, {"original_string": "private long readTimeout = 10000;", "modifier": "private", "type": "long", "declarator": "readTimeout = 10000", "var_name": "readTimeout"}, {"original_string": "protected SelectionKey channelKey;", "modifier": "protected", "type": "SelectionKey", "declarator": "channelKey", "var_name": "channelKey"}, {"original_string": "private static final Logger log = LoggingManager.getLoggerForClass();", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggingManager.getLoggerForClass()", "var_name": "log"}, {"original_string": "private boolean fastFirstPacketRead;", "modifier": "private", "type": "boolean", "declarator": "fastFirstPacketRead", "var_name": "fastFirstPacketRead"}], "methods": [{"identifier": "DatagramChannelWithTimeouts", "parameters": "()", "modifiers": "protected", "return": "", "signature": " DatagramChannelWithTimeouts()", "full_signature": "protected  DatagramChannelWithTimeouts()", "class_method_signature": "DatagramChannelWithTimeouts.DatagramChannelWithTimeouts()", "testcase": false, "constructor": true}, {"identifier": "open", "parameters": "()", "modifiers": "public static", "return": "DatagramChannel", "signature": "DatagramChannel open()", "full_signature": "public static DatagramChannel open()", "class_method_signature": "DatagramChannelWithTimeouts.open()", "testcase": false, "constructor": false}, {"identifier": "bind", "parameters": "(SocketAddress socketAddress)", "modifiers": "@Override public", "return": "DatagramChannel", "signature": "DatagramChannel bind(SocketAddress socketAddress)", "full_signature": "@Override public DatagramChannel bind(SocketAddress socketAddress)", "class_method_signature": "DatagramChannelWithTimeouts.bind(SocketAddress socketAddress)", "testcase": false, "constructor": false}, {"identifier": "getLocalAddress", "parameters": "()", "modifiers": "@Override public", "return": "SocketAddress", "signature": "SocketAddress getLocalAddress()", "full_signature": "@Override public SocketAddress getLocalAddress()", "class_method_signature": "DatagramChannelWithTimeouts.getLocalAddress()", "testcase": false, "constructor": false}, {"identifier": "setOption", "parameters": "(SocketOption<T> socketOption, T t)", "modifiers": "@Override public", "return": "DatagramChannel", "signature": "DatagramChannel setOption(SocketOption<T> socketOption, T t)", "full_signature": "@Override public DatagramChannel setOption(SocketOption<T> socketOption, T t)", "class_method_signature": "DatagramChannelWithTimeouts.setOption(SocketOption<T> socketOption, T t)", "testcase": false, "constructor": false}, {"identifier": "getOption", "parameters": "(SocketOption<T> socketOption)", "modifiers": "@Override public", "return": "T", "signature": "T getOption(SocketOption<T> socketOption)", "full_signature": "@Override public T getOption(SocketOption<T> socketOption)", "class_method_signature": "DatagramChannelWithTimeouts.getOption(SocketOption<T> socketOption)", "testcase": false, "constructor": false}, {"identifier": "supportedOptions", "parameters": "()", "modifiers": "@Override public", "return": "Set<SocketOption<?>>", "signature": "Set<SocketOption<?>> supportedOptions()", "full_signature": "@Override public Set<SocketOption<?>> supportedOptions()", "class_method_signature": "DatagramChannelWithTimeouts.supportedOptions()", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(ByteBuffer dst)", "modifiers": "public", "return": "int", "signature": "int read(ByteBuffer dst)", "full_signature": "public int read(ByteBuffer dst)", "class_method_signature": "DatagramChannelWithTimeouts.read(ByteBuffer dst)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(ByteBuffer[] dsts, int offset, int length)", "modifiers": "public", "return": "long", "signature": "long read(ByteBuffer[] dsts, int offset, int length)", "full_signature": "public long read(ByteBuffer[] dsts, int offset, int length)", "class_method_signature": "DatagramChannelWithTimeouts.read(ByteBuffer[] dsts, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(ByteBuffer src)", "modifiers": "public", "return": "int", "signature": "int write(ByteBuffer src)", "full_signature": "public int write(ByteBuffer src)", "class_method_signature": "DatagramChannelWithTimeouts.write(ByteBuffer src)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(ByteBuffer[] srcs, int offset, int length)", "modifiers": "public", "return": "long", "signature": "long write(ByteBuffer[] srcs, int offset, int length)", "full_signature": "public long write(ByteBuffer[] srcs, int offset, int length)", "class_method_signature": "DatagramChannelWithTimeouts.write(ByteBuffer[] srcs, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "implCloseSelectableChannel", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void implCloseSelectableChannel()", "full_signature": "protected void implCloseSelectableChannel()", "class_method_signature": "DatagramChannelWithTimeouts.implCloseSelectableChannel()", "testcase": false, "constructor": false}, {"identifier": "implConfigureBlocking", "parameters": "(boolean block)", "modifiers": "protected", "return": "void", "signature": "void implConfigureBlocking(boolean block)", "full_signature": "protected void implConfigureBlocking(boolean block)", "class_method_signature": "DatagramChannelWithTimeouts.implConfigureBlocking(boolean block)", "testcase": false, "constructor": false}, {"identifier": "isConnected", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isConnected()", "full_signature": "public boolean isConnected()", "class_method_signature": "DatagramChannelWithTimeouts.isConnected()", "testcase": false, "constructor": false}, {"identifier": "setReadTimeout", "parameters": "(int t)", "modifiers": "public", "return": "void", "signature": "void setReadTimeout(int t)", "full_signature": "public void setReadTimeout(int t)", "class_method_signature": "DatagramChannelWithTimeouts.setReadTimeout(int t)", "testcase": false, "constructor": false}, {"identifier": "socket", "parameters": "()", "modifiers": "public", "return": "DatagramSocket", "signature": "DatagramSocket socket()", "full_signature": "public DatagramSocket socket()", "class_method_signature": "DatagramChannelWithTimeouts.socket()", "testcase": false, "constructor": false}, {"identifier": "disconnect", "parameters": "()", "modifiers": "public", "return": "DatagramChannel", "signature": "DatagramChannel disconnect()", "full_signature": "public DatagramChannel disconnect()", "class_method_signature": "DatagramChannelWithTimeouts.disconnect()", "testcase": false, "constructor": false}, {"identifier": "receive", "parameters": "(ByteBuffer dst)", "modifiers": "public", "return": "SocketAddress", "signature": "SocketAddress receive(ByteBuffer dst)", "full_signature": "public SocketAddress receive(ByteBuffer dst)", "class_method_signature": "DatagramChannelWithTimeouts.receive(ByteBuffer dst)", "testcase": false, "constructor": false}, {"identifier": "send", "parameters": "(ByteBuffer src, SocketAddress target)", "modifiers": "public", "return": "int", "signature": "int send(ByteBuffer src, SocketAddress target)", "full_signature": "public int send(ByteBuffer src, SocketAddress target)", "class_method_signature": "DatagramChannelWithTimeouts.send(ByteBuffer src, SocketAddress target)", "testcase": false, "constructor": false}, {"identifier": "connect", "parameters": "(SocketAddress remote)", "modifiers": "public", "return": "DatagramChannel", "signature": "DatagramChannel connect(SocketAddress remote)", "full_signature": "public DatagramChannel connect(SocketAddress remote)", "class_method_signature": "DatagramChannelWithTimeouts.connect(SocketAddress remote)", "testcase": false, "constructor": false}, {"identifier": "getRemoteAddress", "parameters": "()", "modifiers": "public", "return": "SocketAddress", "signature": "SocketAddress getRemoteAddress()", "full_signature": "public SocketAddress getRemoteAddress()", "class_method_signature": "DatagramChannelWithTimeouts.getRemoteAddress()", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(InetAddress inetAddress, NetworkInterface networkInterface)", "modifiers": "@Override public", "return": "MembershipKey", "signature": "MembershipKey join(InetAddress inetAddress, NetworkInterface networkInterface)", "full_signature": "@Override public MembershipKey join(InetAddress inetAddress, NetworkInterface networkInterface)", "class_method_signature": "DatagramChannelWithTimeouts.join(InetAddress inetAddress, NetworkInterface networkInterface)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(InetAddress inetAddress, NetworkInterface networkInterface, InetAddress inetAddress1)", "modifiers": "@Override public", "return": "MembershipKey", "signature": "MembershipKey join(InetAddress inetAddress, NetworkInterface networkInterface, InetAddress inetAddress1)", "full_signature": "@Override public MembershipKey join(InetAddress inetAddress, NetworkInterface networkInterface, InetAddress inetAddress1)", "class_method_signature": "DatagramChannelWithTimeouts.join(InetAddress inetAddress, NetworkInterface networkInterface, InetAddress inetAddress1)", "testcase": false, "constructor": false}], "file": "infra/common-io/src/main/java/kg/apc/io/DatagramChannelWithTimeouts.java"}, "focal_method": {"identifier": "disconnect", "parameters": "()", "modifiers": "public", "return": "DatagramChannel", "body": "public DatagramChannel disconnect() throws IOException {\n        return channel.disconnect();\n    }", "signature": "DatagramChannel disconnect()", "full_signature": "public DatagramChannel disconnect()", "class_method_signature": "DatagramChannelWithTimeouts.disconnect()", "testcase": false, "constructor": false, "invocations": ["disconnect"]}, "repository": {"repo_id": 8197357, "url": "https://github.com/undera/jmeter-plugins", "stars": 388, "created": "2/14/2013 10:17:40 AM +00:00", "updates": "2020-01-26T06:36:21+00:00", "fork": "False", "license": "licensed"}}