{"test_class": {"identifier": "ChooseRandomTest", "superclass": "", "interfaces": "", "fields": [], "file": "plugins/functions/src/test/java/kg/apc/jmeter/functions/ChooseRandomTest.java"}, "test_case": {"identifier": "testSetParameters", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetParameters() throws Exception {\n        System.out.println(\"setParameters\");\n        Collection<CompoundVariable> parameters = new ArrayList<>();\n        parameters.add(new CompoundVariable(\"1.256\"));\n        parameters.add(new CompoundVariable(\"4.3346\"));\n        parameters.add(new CompoundVariable(\"5.3346\"));\n        ChooseRandom instance = new ChooseRandom();\n        instance.setParameters(parameters);\n    }", "signature": "void testSetParameters()", "full_signature": "@Test public void testSetParameters()", "class_method_signature": "ChooseRandomTest.testSetParameters()", "testcase": true, "constructor": false, "invocations": ["println", "add", "add", "add", "setParameters"]}, "focal_class": {"identifier": "ChooseRandom", "superclass": "extends AbstractFunction", "interfaces": "", "fields": [{"original_string": "private static final List<String> desc = new LinkedList<String>();", "modifier": "private static final", "type": "List<String>", "declarator": "desc = new LinkedList<String>()", "var_name": "desc"}, {"original_string": "private static final String KEY = \"__chooseRandom\";", "modifier": "private static final", "type": "String", "declarator": "KEY = \"__chooseRandom\"", "var_name": "KEY"}, {"original_string": "private static final Random random = new Random(System.currentTimeMillis());", "modifier": "private static final", "type": "Random", "declarator": "random = new Random(System.currentTimeMillis())", "var_name": "random"}, {"original_string": "private Object[] values;", "modifier": "private", "type": "Object[]", "declarator": "values", "var_name": "values"}], "methods": [{"identifier": "ChooseRandom", "parameters": "()", "modifiers": "public", "return": "", "signature": " ChooseRandom()", "full_signature": "public  ChooseRandom()", "class_method_signature": "ChooseRandom.ChooseRandom()", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "(SampleResult previousResult, Sampler currentSampler)", "modifiers": "@Override public synchronized", "return": "String", "signature": "String execute(SampleResult previousResult, Sampler currentSampler)", "full_signature": "@Override public synchronized String execute(SampleResult previousResult, Sampler currentSampler)", "class_method_signature": "ChooseRandom.execute(SampleResult previousResult, Sampler currentSampler)", "testcase": false, "constructor": false}, {"identifier": "setParameters", "parameters": "(Collection<CompoundVariable> parameters)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void setParameters(Collection<CompoundVariable> parameters)", "full_signature": "@Override public synchronized void setParameters(Collection<CompoundVariable> parameters)", "class_method_signature": "ChooseRandom.setParameters(Collection<CompoundVariable> parameters)", "testcase": false, "constructor": false}, {"identifier": "getReferenceKey", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getReferenceKey()", "full_signature": "@Override public String getReferenceKey()", "class_method_signature": "ChooseRandom.getReferenceKey()", "testcase": false, "constructor": false}, {"identifier": "getArgumentDesc", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getArgumentDesc()", "full_signature": "@Override public List<String> getArgumentDesc()", "class_method_signature": "ChooseRandom.getArgumentDesc()", "testcase": false, "constructor": false}], "file": "plugins/functions/src/main/java/kg/apc/jmeter/functions/ChooseRandom.java"}, "focal_method": {"identifier": "setParameters", "parameters": "(Collection<CompoundVariable> parameters)", "modifiers": "@Override public synchronized", "return": "void", "body": "@Override\n    public synchronized void setParameters(Collection<CompoundVariable> parameters) throws InvalidVariableException {\n        checkMinParameterCount(parameters, 3);\n        values = parameters.toArray();\n    }", "signature": "void setParameters(Collection<CompoundVariable> parameters)", "full_signature": "@Override public synchronized void setParameters(Collection<CompoundVariable> parameters)", "class_method_signature": "ChooseRandom.setParameters(Collection<CompoundVariable> parameters)", "testcase": false, "constructor": false, "invocations": ["checkMinParameterCount", "toArray"]}, "repository": {"repo_id": 8197357, "url": "https://github.com/undera/jmeter-plugins", "stars": 388, "created": "2/14/2013 10:17:40 AM +00:00", "updates": "2020-01-26T06:36:21+00:00", "fork": "False", "license": "licensed"}}