{"test_class": {"identifier": "TestContainer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static Class<?>[] CONTAINER_TYPES =\n      new Class[] {ArrayContainer.class, BitmapContainer.class, RunContainer.class};", "modifier": "private final static", "type": "Class<?>[]", "declarator": "CONTAINER_TYPES =\n      new Class[] {ArrayContainer.class, BitmapContainer.class, RunContainer.class}", "var_name": "CONTAINER_TYPES"}], "file": "RoaringBitmap/src/test/java/org/roaringbitmap/TestContainer.java"}, "test_case": {"identifier": "inotTest1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void inotTest1() {\n    // Array container, range is complete\n    final char[] content = {1, 3, 5, 7, 9};\n    Container c = makeContainer(content);\n    c = c.inot(0, 65536);\n    final char[] s = new char[65536 - content.length];\n    int pos = 0;\n    for (int i = 0; i < 65536; ++i) {\n      if (Arrays.binarySearch(content, (char) i) < 0) {\n        s[pos++] = (char) i;\n      }\n    }\n    assertTrue(checkContent(c, s));\n  }", "signature": "void inotTest1()", "full_signature": "@Test public void inotTest1()", "class_method_signature": "TestContainer.inotTest1()", "testcase": true, "constructor": false, "invocations": ["makeContainer", "inot", "binarySearch", "assertTrue", "checkContent"]}, "focal_class": {"identifier": "Container", "superclass": "", "interfaces": "implements Iterable<Character>, Cloneable, Externalizable,\n        WordStorage<Container>", "fields": [{"original_string": "public static final String[] ContainerNames = {\"bitmap\",\"array\",\"run\"};", "modifier": "public static final", "type": "String[]", "declarator": "ContainerNames = {\"bitmap\",\"array\",\"run\"}", "var_name": "ContainerNames"}], "methods": [{"identifier": "rangeOfOnes", "parameters": "(final int start, final int last)", "modifiers": "public static", "return": "Container", "signature": "Container rangeOfOnes(final int start, final int last)", "full_signature": "public static Container rangeOfOnes(final int start, final int last)", "class_method_signature": "Container.rangeOfOnes(final int start, final int last)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(int begin, int end)", "modifiers": "public abstract", "return": "Container", "signature": "Container add(int begin, int end)", "full_signature": "public abstract Container add(int begin, int end)", "class_method_signature": "Container.add(int begin, int end)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(char x)", "modifiers": "public abstract", "return": "Container", "signature": "Container add(char x)", "full_signature": "public abstract Container add(char x)", "class_method_signature": "Container.add(char x)", "testcase": false, "constructor": false}, {"identifier": "and", "parameters": "(ArrayContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container and(ArrayContainer x)", "full_signature": "public abstract Container and(ArrayContainer x)", "class_method_signature": "Container.and(ArrayContainer x)", "testcase": false, "constructor": false}, {"identifier": "and", "parameters": "(BitmapContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container and(BitmapContainer x)", "full_signature": "public abstract Container and(BitmapContainer x)", "class_method_signature": "Container.and(BitmapContainer x)", "testcase": false, "constructor": false}, {"identifier": "and", "parameters": "(Container x)", "modifiers": "public", "return": "Container", "signature": "Container and(Container x)", "full_signature": "public Container and(Container x)", "class_method_signature": "Container.and(Container x)", "testcase": false, "constructor": false}, {"identifier": "and", "parameters": "(RunContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container and(RunContainer x)", "full_signature": "public abstract Container and(RunContainer x)", "class_method_signature": "Container.and(RunContainer x)", "testcase": false, "constructor": false}, {"identifier": "andCardinality", "parameters": "(ArrayContainer x)", "modifiers": "protected abstract", "return": "int", "signature": "int andCardinality(ArrayContainer x)", "full_signature": "protected abstract int andCardinality(ArrayContainer x)", "class_method_signature": "Container.andCardinality(ArrayContainer x)", "testcase": false, "constructor": false}, {"identifier": "andCardinality", "parameters": "(BitmapContainer x)", "modifiers": "protected abstract", "return": "int", "signature": "int andCardinality(BitmapContainer x)", "full_signature": "protected abstract int andCardinality(BitmapContainer x)", "class_method_signature": "Container.andCardinality(BitmapContainer x)", "testcase": false, "constructor": false}, {"identifier": "andCardinality", "parameters": "(RunContainer x)", "modifiers": "protected abstract", "return": "int", "signature": "int andCardinality(RunContainer x)", "full_signature": "protected abstract int andCardinality(RunContainer x)", "class_method_signature": "Container.andCardinality(RunContainer x)", "testcase": false, "constructor": false}, {"identifier": "andCardinality", "parameters": "(Container x)", "modifiers": "public", "return": "int", "signature": "int andCardinality(Container x)", "full_signature": "public int andCardinality(Container x)", "class_method_signature": "Container.andCardinality(Container x)", "testcase": false, "constructor": false}, {"identifier": "xorCardinality", "parameters": "(Container other)", "modifiers": "public", "return": "int", "signature": "int xorCardinality(Container other)", "full_signature": "public int xorCardinality(Container other)", "class_method_signature": "Container.xorCardinality(Container other)", "testcase": false, "constructor": false}, {"identifier": "andNot", "parameters": "(ArrayContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container andNot(ArrayContainer x)", "full_signature": "public abstract Container andNot(ArrayContainer x)", "class_method_signature": "Container.andNot(ArrayContainer x)", "testcase": false, "constructor": false}, {"identifier": "andNot", "parameters": "(BitmapContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container andNot(BitmapContainer x)", "full_signature": "public abstract Container andNot(BitmapContainer x)", "class_method_signature": "Container.andNot(BitmapContainer x)", "testcase": false, "constructor": false}, {"identifier": "andNot", "parameters": "(Container x)", "modifiers": "public", "return": "Container", "signature": "Container andNot(Container x)", "full_signature": "public Container andNot(Container x)", "class_method_signature": "Container.andNot(Container x)", "testcase": false, "constructor": false}, {"identifier": "andNot", "parameters": "(RunContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container andNot(RunContainer x)", "full_signature": "public abstract Container andNot(RunContainer x)", "class_method_signature": "Container.andNot(RunContainer x)", "testcase": false, "constructor": false}, {"identifier": "orNot", "parameters": "(Container x, int endOfRange)", "modifiers": "public", "return": "Container", "signature": "Container orNot(Container x, int endOfRange)", "full_signature": "public Container orNot(Container x, int endOfRange)", "class_method_signature": "Container.orNot(Container x, int endOfRange)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public abstract", "return": "void", "signature": "void clear()", "full_signature": "public abstract void clear()", "class_method_signature": "Container.clear()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public abstract", "return": "Container", "signature": "Container clone()", "full_signature": "@Override public abstract Container clone()", "class_method_signature": "Container.clone()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public abstract", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public abstract boolean isEmpty()", "class_method_signature": "Container.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "isFull", "parameters": "()", "modifiers": "public abstract", "return": "boolean", "signature": "boolean isFull()", "full_signature": "public abstract boolean isFull()", "class_method_signature": "Container.isFull()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(char x)", "modifiers": "public abstract", "return": "boolean", "signature": "boolean contains(char x)", "full_signature": "public abstract boolean contains(char x)", "class_method_signature": "Container.contains(char x)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(int minimum, int supremum)", "modifiers": "public abstract", "return": "boolean", "signature": "boolean contains(int minimum, int supremum)", "full_signature": "public abstract boolean contains(int minimum, int supremum)", "class_method_signature": "Container.contains(int minimum, int supremum)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(Container subset)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(Container subset)", "full_signature": "public boolean contains(Container subset)", "class_method_signature": "Container.contains(Container subset)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(RunContainer runContainer)", "modifiers": "protected abstract", "return": "boolean", "signature": "boolean contains(RunContainer runContainer)", "full_signature": "protected abstract boolean contains(RunContainer runContainer)", "class_method_signature": "Container.contains(RunContainer runContainer)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(ArrayContainer arrayContainer)", "modifiers": "protected abstract", "return": "boolean", "signature": "boolean contains(ArrayContainer arrayContainer)", "full_signature": "protected abstract boolean contains(ArrayContainer arrayContainer)", "class_method_signature": "Container.contains(ArrayContainer arrayContainer)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(BitmapContainer bitmapContainer)", "modifiers": "protected abstract", "return": "boolean", "signature": "boolean contains(BitmapContainer bitmapContainer)", "full_signature": "protected abstract boolean contains(BitmapContainer bitmapContainer)", "class_method_signature": "Container.contains(BitmapContainer bitmapContainer)", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(DataInput in)", "modifiers": "public abstract", "return": "void", "signature": "void deserialize(DataInput in)", "full_signature": "public abstract void deserialize(DataInput in)", "class_method_signature": "Container.deserialize(DataInput in)", "testcase": false, "constructor": false}, {"identifier": "fillLeastSignificant16bits", "parameters": "(int[] x, int i, int mask)", "modifiers": "public abstract", "return": "void", "signature": "void fillLeastSignificant16bits(int[] x, int i, int mask)", "full_signature": "public abstract void fillLeastSignificant16bits(int[] x, int i, int mask)", "class_method_signature": "Container.fillLeastSignificant16bits(int[] x, int i, int mask)", "testcase": false, "constructor": false}, {"identifier": "flip", "parameters": "(char x)", "modifiers": "public abstract", "return": "Container", "signature": "Container flip(char x)", "full_signature": "public abstract Container flip(char x)", "class_method_signature": "Container.flip(char x)", "testcase": false, "constructor": false}, {"identifier": "getArraySizeInBytes", "parameters": "()", "modifiers": "public abstract", "return": "int", "signature": "int getArraySizeInBytes()", "full_signature": "public abstract int getArraySizeInBytes()", "class_method_signature": "Container.getArraySizeInBytes()", "testcase": false, "constructor": false}, {"identifier": "getCardinality", "parameters": "()", "modifiers": "public abstract", "return": "int", "signature": "int getCardinality()", "full_signature": "public abstract int getCardinality()", "class_method_signature": "Container.getCardinality()", "testcase": false, "constructor": false}, {"identifier": "getContainerName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getContainerName()", "full_signature": "public String getContainerName()", "class_method_signature": "Container.getContainerName()", "testcase": false, "constructor": false}, {"identifier": "forEach", "parameters": "(char msb, IntConsumer ic)", "modifiers": "public abstract", "return": "void", "signature": "void forEach(char msb, IntConsumer ic)", "full_signature": "public abstract void forEach(char msb, IntConsumer ic)", "class_method_signature": "Container.forEach(char msb, IntConsumer ic)", "testcase": false, "constructor": false}, {"identifier": "getReverseCharIterator", "parameters": "()", "modifiers": "public abstract", "return": "CharIterator", "signature": "CharIterator getReverseCharIterator()", "full_signature": "public abstract CharIterator getReverseCharIterator()", "class_method_signature": "Container.getReverseCharIterator()", "testcase": false, "constructor": false}, {"identifier": "getCharIterator", "parameters": "()", "modifiers": "public abstract", "return": "PeekableCharIterator", "signature": "PeekableCharIterator getCharIterator()", "full_signature": "public abstract PeekableCharIterator getCharIterator()", "class_method_signature": "Container.getCharIterator()", "testcase": false, "constructor": false}, {"identifier": "getCharRankIterator", "parameters": "()", "modifiers": "public abstract", "return": "PeekableCharRankIterator", "signature": "PeekableCharRankIterator getCharRankIterator()", "full_signature": "public abstract PeekableCharRankIterator getCharRankIterator()", "class_method_signature": "Container.getCharRankIterator()", "testcase": false, "constructor": false}, {"identifier": "getBatchIterator", "parameters": "()", "modifiers": "public abstract", "return": "ContainerBatchIterator", "signature": "ContainerBatchIterator getBatchIterator()", "full_signature": "public abstract ContainerBatchIterator getBatchIterator()", "class_method_signature": "Container.getBatchIterator()", "testcase": false, "constructor": false}, {"identifier": "getSizeInBytes", "parameters": "()", "modifiers": "public abstract", "return": "int", "signature": "int getSizeInBytes()", "full_signature": "public abstract int getSizeInBytes()", "class_method_signature": "Container.getSizeInBytes()", "testcase": false, "constructor": false}, {"identifier": "iadd", "parameters": "(int begin, int end)", "modifiers": "public abstract", "return": "Container", "signature": "Container iadd(int begin, int end)", "full_signature": "public abstract Container iadd(int begin, int end)", "class_method_signature": "Container.iadd(int begin, int end)", "testcase": false, "constructor": false}, {"identifier": "iand", "parameters": "(ArrayContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container iand(ArrayContainer x)", "full_signature": "public abstract Container iand(ArrayContainer x)", "class_method_signature": "Container.iand(ArrayContainer x)", "testcase": false, "constructor": false}, {"identifier": "iand", "parameters": "(BitmapContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container iand(BitmapContainer x)", "full_signature": "public abstract Container iand(BitmapContainer x)", "class_method_signature": "Container.iand(BitmapContainer x)", "testcase": false, "constructor": false}, {"identifier": "iand", "parameters": "(Container x)", "modifiers": "public", "return": "Container", "signature": "Container iand(Container x)", "full_signature": "public Container iand(Container x)", "class_method_signature": "Container.iand(Container x)", "testcase": false, "constructor": false}, {"identifier": "iand", "parameters": "(RunContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container iand(RunContainer x)", "full_signature": "public abstract Container iand(RunContainer x)", "class_method_signature": "Container.iand(RunContainer x)", "testcase": false, "constructor": false}, {"identifier": "iandNot", "parameters": "(ArrayContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container iandNot(ArrayContainer x)", "full_signature": "public abstract Container iandNot(ArrayContainer x)", "class_method_signature": "Container.iandNot(ArrayContainer x)", "testcase": false, "constructor": false}, {"identifier": "iandNot", "parameters": "(BitmapContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container iandNot(BitmapContainer x)", "full_signature": "public abstract Container iandNot(BitmapContainer x)", "class_method_signature": "Container.iandNot(BitmapContainer x)", "testcase": false, "constructor": false}, {"identifier": "iandNot", "parameters": "(Container x)", "modifiers": "public", "return": "Container", "signature": "Container iandNot(Container x)", "full_signature": "public Container iandNot(Container x)", "class_method_signature": "Container.iandNot(Container x)", "testcase": false, "constructor": false}, {"identifier": "iandNot", "parameters": "(RunContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container iandNot(RunContainer x)", "full_signature": "public abstract Container iandNot(RunContainer x)", "class_method_signature": "Container.iandNot(RunContainer x)", "testcase": false, "constructor": false}, {"identifier": "iorNot", "parameters": "(Container x, int endOfRange)", "modifiers": "public", "return": "Container", "signature": "Container iorNot(Container x, int endOfRange)", "full_signature": "public Container iorNot(Container x, int endOfRange)", "class_method_signature": "Container.iorNot(Container x, int endOfRange)", "testcase": false, "constructor": false}, {"identifier": "inot", "parameters": "(int rangeStart, int rangeEnd)", "modifiers": "public abstract", "return": "Container", "signature": "Container inot(int rangeStart, int rangeEnd)", "full_signature": "public abstract Container inot(int rangeStart, int rangeEnd)", "class_method_signature": "Container.inot(int rangeStart, int rangeEnd)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(ArrayContainer x)", "modifiers": "public abstract", "return": "boolean", "signature": "boolean intersects(ArrayContainer x)", "full_signature": "public abstract boolean intersects(ArrayContainer x)", "class_method_signature": "Container.intersects(ArrayContainer x)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(BitmapContainer x)", "modifiers": "public abstract", "return": "boolean", "signature": "boolean intersects(BitmapContainer x)", "full_signature": "public abstract boolean intersects(BitmapContainer x)", "class_method_signature": "Container.intersects(BitmapContainer x)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(Container x)", "modifiers": "public", "return": "boolean", "signature": "boolean intersects(Container x)", "full_signature": "public boolean intersects(Container x)", "class_method_signature": "Container.intersects(Container x)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(RunContainer x)", "modifiers": "public abstract", "return": "boolean", "signature": "boolean intersects(RunContainer x)", "full_signature": "public abstract boolean intersects(RunContainer x)", "class_method_signature": "Container.intersects(RunContainer x)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(int minimum, int supremum)", "modifiers": "public abstract", "return": "boolean", "signature": "boolean intersects(int minimum, int supremum)", "full_signature": "public abstract boolean intersects(int minimum, int supremum)", "class_method_signature": "Container.intersects(int minimum, int supremum)", "testcase": false, "constructor": false}, {"identifier": "ior", "parameters": "(ArrayContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container ior(ArrayContainer x)", "full_signature": "public abstract Container ior(ArrayContainer x)", "class_method_signature": "Container.ior(ArrayContainer x)", "testcase": false, "constructor": false}, {"identifier": "ior", "parameters": "(BitmapContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container ior(BitmapContainer x)", "full_signature": "public abstract Container ior(BitmapContainer x)", "class_method_signature": "Container.ior(BitmapContainer x)", "testcase": false, "constructor": false}, {"identifier": "ior", "parameters": "(Container x)", "modifiers": "public", "return": "Container", "signature": "Container ior(Container x)", "full_signature": "public Container ior(Container x)", "class_method_signature": "Container.ior(Container x)", "testcase": false, "constructor": false}, {"identifier": "ior", "parameters": "(RunContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container ior(RunContainer x)", "full_signature": "public abstract Container ior(RunContainer x)", "class_method_signature": "Container.ior(RunContainer x)", "testcase": false, "constructor": false}, {"identifier": "iremove", "parameters": "(int begin, int end)", "modifiers": "public abstract", "return": "Container", "signature": "Container iremove(int begin, int end)", "full_signature": "public abstract Container iremove(int begin, int end)", "class_method_signature": "Container.iremove(int begin, int end)", "testcase": false, "constructor": false}, {"identifier": "ixor", "parameters": "(ArrayContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container ixor(ArrayContainer x)", "full_signature": "public abstract Container ixor(ArrayContainer x)", "class_method_signature": "Container.ixor(ArrayContainer x)", "testcase": false, "constructor": false}, {"identifier": "ixor", "parameters": "(BitmapContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container ixor(BitmapContainer x)", "full_signature": "public abstract Container ixor(BitmapContainer x)", "class_method_signature": "Container.ixor(BitmapContainer x)", "testcase": false, "constructor": false}, {"identifier": "ixor", "parameters": "(Container x)", "modifiers": "public", "return": "Container", "signature": "Container ixor(Container x)", "full_signature": "public Container ixor(Container x)", "class_method_signature": "Container.ixor(Container x)", "testcase": false, "constructor": false}, {"identifier": "ixor", "parameters": "(RunContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container ixor(RunContainer x)", "full_signature": "public abstract Container ixor(RunContainer x)", "class_method_signature": "Container.ixor(RunContainer x)", "testcase": false, "constructor": false}, {"identifier": "lazyIOR", "parameters": "(Container x)", "modifiers": "public", "return": "Container", "signature": "Container lazyIOR(Container x)", "full_signature": "public Container lazyIOR(Container x)", "class_method_signature": "Container.lazyIOR(Container x)", "testcase": false, "constructor": false}, {"identifier": "lazyOR", "parameters": "(Container x)", "modifiers": "public", "return": "Container", "signature": "Container lazyOR(Container x)", "full_signature": "public Container lazyOR(Container x)", "class_method_signature": "Container.lazyOR(Container x)", "testcase": false, "constructor": false}, {"identifier": "limit", "parameters": "(int maxcardinality)", "modifiers": "public abstract", "return": "Container", "signature": "Container limit(int maxcardinality)", "full_signature": "public abstract Container limit(int maxcardinality)", "class_method_signature": "Container.limit(int maxcardinality)", "testcase": false, "constructor": false}, {"identifier": "not", "parameters": "(int rangeStart, int rangeEnd)", "modifiers": "public abstract", "return": "Container", "signature": "Container not(int rangeStart, int rangeEnd)", "full_signature": "public abstract Container not(int rangeStart, int rangeEnd)", "class_method_signature": "Container.not(int rangeStart, int rangeEnd)", "testcase": false, "constructor": false}, {"identifier": "numberOfRuns", "parameters": "()", "modifiers": "abstract", "return": "int", "signature": "int numberOfRuns()", "full_signature": "abstract int numberOfRuns()", "class_method_signature": "Container.numberOfRuns()", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(ArrayContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container or(ArrayContainer x)", "full_signature": "public abstract Container or(ArrayContainer x)", "class_method_signature": "Container.or(ArrayContainer x)", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(BitmapContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container or(BitmapContainer x)", "full_signature": "public abstract Container or(BitmapContainer x)", "class_method_signature": "Container.or(BitmapContainer x)", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(Container x)", "modifiers": "public", "return": "Container", "signature": "Container or(Container x)", "full_signature": "public Container or(Container x)", "class_method_signature": "Container.or(Container x)", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(RunContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container or(RunContainer x)", "full_signature": "public abstract Container or(RunContainer x)", "class_method_signature": "Container.or(RunContainer x)", "testcase": false, "constructor": false}, {"identifier": "rank", "parameters": "(char lowbits)", "modifiers": "public abstract", "return": "int", "signature": "int rank(char lowbits)", "full_signature": "public abstract int rank(char lowbits)", "class_method_signature": "Container.rank(char lowbits)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(int begin, int end)", "modifiers": "public abstract", "return": "Container", "signature": "Container remove(int begin, int end)", "full_signature": "public abstract Container remove(int begin, int end)", "class_method_signature": "Container.remove(int begin, int end)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(char x)", "modifiers": "public abstract", "return": "Container", "signature": "Container remove(char x)", "full_signature": "public abstract Container remove(char x)", "class_method_signature": "Container.remove(char x)", "testcase": false, "constructor": false}, {"identifier": "repairAfterLazy", "parameters": "()", "modifiers": "public abstract", "return": "Container", "signature": "Container repairAfterLazy()", "full_signature": "public abstract Container repairAfterLazy()", "class_method_signature": "Container.repairAfterLazy()", "testcase": false, "constructor": false}, {"identifier": "runOptimize", "parameters": "()", "modifiers": "public abstract", "return": "Container", "signature": "Container runOptimize()", "full_signature": "public abstract Container runOptimize()", "class_method_signature": "Container.runOptimize()", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(int j)", "modifiers": "public abstract", "return": "char", "signature": "char select(int j)", "full_signature": "public abstract char select(int j)", "class_method_signature": "Container.select(int j)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(DataOutput out)", "modifiers": "public abstract", "return": "void", "signature": "void serialize(DataOutput out)", "full_signature": "public abstract void serialize(DataOutput out)", "class_method_signature": "Container.serialize(DataOutput out)", "testcase": false, "constructor": false}, {"identifier": "serializedSizeInBytes", "parameters": "()", "modifiers": "public abstract", "return": "int", "signature": "int serializedSizeInBytes()", "full_signature": "public abstract int serializedSizeInBytes()", "class_method_signature": "Container.serializedSizeInBytes()", "testcase": false, "constructor": false}, {"identifier": "toMappeableContainer", "parameters": "()", "modifiers": "public abstract", "return": "MappeableContainer", "signature": "MappeableContainer toMappeableContainer()", "full_signature": "public abstract MappeableContainer toMappeableContainer()", "class_method_signature": "Container.toMappeableContainer()", "testcase": false, "constructor": false}, {"identifier": "trim", "parameters": "()", "modifiers": "public abstract", "return": "void", "signature": "void trim()", "full_signature": "public abstract void trim()", "class_method_signature": "Container.trim()", "testcase": false, "constructor": false}, {"identifier": "writeArray", "parameters": "(DataOutput out)", "modifiers": "public abstract", "return": "void", "signature": "void writeArray(DataOutput out)", "full_signature": "public abstract void writeArray(DataOutput out)", "class_method_signature": "Container.writeArray(DataOutput out)", "testcase": false, "constructor": false}, {"identifier": "writeArray", "parameters": "(ByteBuffer buffer)", "modifiers": "public abstract", "return": "void", "signature": "void writeArray(ByteBuffer buffer)", "full_signature": "public abstract void writeArray(ByteBuffer buffer)", "class_method_signature": "Container.writeArray(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "xor", "parameters": "(ArrayContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container xor(ArrayContainer x)", "full_signature": "public abstract Container xor(ArrayContainer x)", "class_method_signature": "Container.xor(ArrayContainer x)", "testcase": false, "constructor": false}, {"identifier": "xor", "parameters": "(BitmapContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container xor(BitmapContainer x)", "full_signature": "public abstract Container xor(BitmapContainer x)", "class_method_signature": "Container.xor(BitmapContainer x)", "testcase": false, "constructor": false}, {"identifier": "xor", "parameters": "(Container x)", "modifiers": "public", "return": "Container", "signature": "Container xor(Container x)", "full_signature": "public Container xor(Container x)", "class_method_signature": "Container.xor(Container x)", "testcase": false, "constructor": false}, {"identifier": "xor", "parameters": "(RunContainer x)", "modifiers": "public abstract", "return": "Container", "signature": "Container xor(RunContainer x)", "full_signature": "public abstract Container xor(RunContainer x)", "class_method_signature": "Container.xor(RunContainer x)", "testcase": false, "constructor": false}, {"identifier": "toBitmapContainer", "parameters": "()", "modifiers": "public abstract", "return": "BitmapContainer", "signature": "BitmapContainer toBitmapContainer()", "full_signature": "public abstract BitmapContainer toBitmapContainer()", "class_method_signature": "Container.toBitmapContainer()", "testcase": false, "constructor": false}, {"identifier": "nextValue", "parameters": "(char fromValue)", "modifiers": "public abstract", "return": "int", "signature": "int nextValue(char fromValue)", "full_signature": "public abstract int nextValue(char fromValue)", "class_method_signature": "Container.nextValue(char fromValue)", "testcase": false, "constructor": false}, {"identifier": "previousValue", "parameters": "(char fromValue)", "modifiers": "public abstract", "return": "int", "signature": "int previousValue(char fromValue)", "full_signature": "public abstract int previousValue(char fromValue)", "class_method_signature": "Container.previousValue(char fromValue)", "testcase": false, "constructor": false}, {"identifier": "nextAbsentValue", "parameters": "(char fromValue)", "modifiers": "public abstract", "return": "int", "signature": "int nextAbsentValue(char fromValue)", "full_signature": "public abstract int nextAbsentValue(char fromValue)", "class_method_signature": "Container.nextAbsentValue(char fromValue)", "testcase": false, "constructor": false}, {"identifier": "previousAbsentValue", "parameters": "(char fromValue)", "modifiers": "public abstract", "return": "int", "signature": "int previousAbsentValue(char fromValue)", "full_signature": "public abstract int previousAbsentValue(char fromValue)", "class_method_signature": "Container.previousAbsentValue(char fromValue)", "testcase": false, "constructor": false}, {"identifier": "first", "parameters": "()", "modifiers": "public abstract", "return": "int", "signature": "int first()", "full_signature": "public abstract int first()", "class_method_signature": "Container.first()", "testcase": false, "constructor": false}, {"identifier": "last", "parameters": "()", "modifiers": "public abstract", "return": "int", "signature": "int last()", "full_signature": "public abstract int last()", "class_method_signature": "Container.last()", "testcase": false, "constructor": false}, {"identifier": "assertNonEmpty", "parameters": "(boolean condition)", "modifiers": "protected", "return": "void", "signature": "void assertNonEmpty(boolean condition)", "full_signature": "protected void assertNonEmpty(boolean condition)", "class_method_signature": "Container.assertNonEmpty(boolean condition)", "testcase": false, "constructor": false}], "file": "RoaringBitmap/src/main/java/org/roaringbitmap/Container.java"}, "focal_method": {"identifier": "inot", "parameters": "(int rangeStart, int rangeEnd)", "modifiers": "public abstract", "return": "Container", "body": "public abstract Container inot(int rangeStart, int rangeEnd);", "signature": "Container inot(int rangeStart, int rangeEnd)", "full_signature": "public abstract Container inot(int rangeStart, int rangeEnd)", "class_method_signature": "Container.inot(int rangeStart, int rangeEnd)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 10746583, "url": "https://github.com/RoaringBitmap/RoaringBitmap", "language": "Java", "is_fork": false, "fork_count": 335, "stargazer_count": 1786, "size": 88641, "license": "licensed"}}