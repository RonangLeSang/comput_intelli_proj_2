{"test_class": {"identifier": "TestMappeableBitmapContainer", "superclass": "", "interfaces": "", "fields": [], "file": "RoaringBitmap/src/test/java/org/roaringbitmap/buffer/TestMappeableBitmapContainer.java"}, "test_case": {"identifier": "testOR", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test  \n  public void testOR() {\n    MappeableBitmapContainer bc = new MappeableBitmapContainer(100,10000);\n    MappeableBitmapContainer bc2 = new MappeableBitmapContainer();\n    MappeableBitmapContainer bc3 = new MappeableBitmapContainer();\n\n    for(int i = 100; i < 10000; ++i) {\n      if((i%2 ) == 0) {\n        bc2.add((char) i);\n      } else {\n        bc3.add((char) i);\n      }\n    }\n    bc2 = (MappeableBitmapContainer) bc2.ior(bc3);\n    assertEquals(bc, bc2);\n    bc2 = (MappeableBitmapContainer) bc2.ior(bc);\n    assertEquals(bc, bc2);\n    MappeableRunContainer rc = new MappeableRunContainer();\n    rc.iadd(0, 1<<16);\n    assertEquals(0, bc.iandNot(rc).getCardinality());\n  }", "signature": "void testOR()", "full_signature": "@Test public void testOR()", "class_method_signature": "TestMappeableBitmapContainer.testOR()", "testcase": true, "constructor": false, "invocations": ["add", "add", "ior", "assertEquals", "ior", "assertEquals", "iadd", "assertEquals", "getCardinality", "iandNot"]}, "focal_class": {"identifier": "MappeableBitmapContainer", "superclass": "extends MappeableContainer", "interfaces": "implements Cloneable", "fields": [{"original_string": "protected static final int MAX_CAPACITY = 1 << 16;", "modifier": "protected static final", "type": "int", "declarator": "MAX_CAPACITY = 1 << 16", "var_name": "MAX_CAPACITY"}, {"original_string": "private static final long serialVersionUID = 2L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 2L", "var_name": "serialVersionUID"}, {"original_string": "private static final int BLOCKSIZE = 128;", "modifier": "private static final", "type": "int", "declarator": "BLOCKSIZE = 128", "var_name": "BLOCKSIZE"}, {"original_string": "private static final boolean USE_BRANCHLESS = true;", "modifier": "private static final", "type": "boolean", "declarator": "USE_BRANCHLESS = true", "var_name": "USE_BRANCHLESS"}, {"original_string": "LongBuffer bitmap;", "modifier": "", "type": "LongBuffer", "declarator": "bitmap", "var_name": "bitmap"}, {"original_string": "int cardinality;", "modifier": "", "type": "int", "declarator": "cardinality", "var_name": "cardinality"}, {"original_string": "private final int MAXRUNS = (getArraySizeInBytes() - 2) / 4;", "modifier": "private final", "type": "int", "declarator": "MAXRUNS = (getArraySizeInBytes() - 2) / 4", "var_name": "MAXRUNS"}], "methods": [{"identifier": "serializedSizeInBytes", "parameters": "(int unusedCardinality)", "modifiers": "protected static", "return": "int", "signature": "int serializedSizeInBytes(int unusedCardinality)", "full_signature": "protected static int serializedSizeInBytes(int unusedCardinality)", "class_method_signature": "MappeableBitmapContainer.serializedSizeInBytes(int unusedCardinality)", "testcase": false, "constructor": false}, {"identifier": "MappeableBitmapContainer", "parameters": "()", "modifiers": "public", "return": "", "signature": " MappeableBitmapContainer()", "full_signature": "public  MappeableBitmapContainer()", "class_method_signature": "MappeableBitmapContainer.MappeableBitmapContainer()", "testcase": false, "constructor": true}, {"identifier": "MappeableBitmapContainer", "parameters": "(BitmapContainer bc)", "modifiers": "public", "return": "", "signature": " MappeableBitmapContainer(BitmapContainer bc)", "full_signature": "public  MappeableBitmapContainer(BitmapContainer bc)", "class_method_signature": "MappeableBitmapContainer.MappeableBitmapContainer(BitmapContainer bc)", "testcase": false, "constructor": true}, {"identifier": "MappeableBitmapContainer", "parameters": "(final int firstOfRun, final int lastOfRun)", "modifiers": "public", "return": "", "signature": " MappeableBitmapContainer(final int firstOfRun, final int lastOfRun)", "full_signature": "public  MappeableBitmapContainer(final int firstOfRun, final int lastOfRun)", "class_method_signature": "MappeableBitmapContainer.MappeableBitmapContainer(final int firstOfRun, final int lastOfRun)", "testcase": false, "constructor": true}, {"identifier": "MappeableBitmapContainer", "parameters": "(int newCardinality, LongBuffer newBitmap)", "modifiers": "", "return": "", "signature": " MappeableBitmapContainer(int newCardinality, LongBuffer newBitmap)", "full_signature": "  MappeableBitmapContainer(int newCardinality, LongBuffer newBitmap)", "class_method_signature": "MappeableBitmapContainer.MappeableBitmapContainer(int newCardinality, LongBuffer newBitmap)", "testcase": false, "constructor": true}, {"identifier": "MappeableBitmapContainer", "parameters": "(final LongBuffer array, final int initCardinality)", "modifiers": "public", "return": "", "signature": " MappeableBitmapContainer(final LongBuffer array, final int initCardinality)", "full_signature": "public  MappeableBitmapContainer(final LongBuffer array, final int initCardinality)", "class_method_signature": "MappeableBitmapContainer.MappeableBitmapContainer(final LongBuffer array, final int initCardinality)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(int begin, int end)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer add(int begin, int end)", "full_signature": "@Override public MappeableContainer add(int begin, int end)", "class_method_signature": "MappeableBitmapContainer.add(int begin, int end)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final char i)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer add(final char i)", "full_signature": "@Override public MappeableContainer add(final char i)", "class_method_signature": "MappeableBitmapContainer.add(final char i)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "MappeableBitmapContainer.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "and", "parameters": "(final MappeableArrayContainer value2)", "modifiers": "@Override public", "return": "MappeableArrayContainer", "signature": "MappeableArrayContainer and(final MappeableArrayContainer value2)", "full_signature": "@Override public MappeableArrayContainer and(final MappeableArrayContainer value2)", "class_method_signature": "MappeableBitmapContainer.and(final MappeableArrayContainer value2)", "testcase": false, "constructor": false}, {"identifier": "and", "parameters": "(final MappeableBitmapContainer value2)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer and(final MappeableBitmapContainer value2)", "full_signature": "@Override public MappeableContainer and(final MappeableBitmapContainer value2)", "class_method_signature": "MappeableBitmapContainer.and(final MappeableBitmapContainer value2)", "testcase": false, "constructor": false}, {"identifier": "and", "parameters": "(final MappeableRunContainer value2)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer and(final MappeableRunContainer value2)", "full_signature": "@Override public MappeableContainer and(final MappeableRunContainer value2)", "class_method_signature": "MappeableBitmapContainer.and(final MappeableRunContainer value2)", "testcase": false, "constructor": false}, {"identifier": "andNot", "parameters": "(final MappeableArrayContainer value2)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer andNot(final MappeableArrayContainer value2)", "full_signature": "@Override public MappeableContainer andNot(final MappeableArrayContainer value2)", "class_method_signature": "MappeableBitmapContainer.andNot(final MappeableArrayContainer value2)", "testcase": false, "constructor": false}, {"identifier": "andNot", "parameters": "(final MappeableBitmapContainer value2)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer andNot(final MappeableBitmapContainer value2)", "full_signature": "@Override public MappeableContainer andNot(final MappeableBitmapContainer value2)", "class_method_signature": "MappeableBitmapContainer.andNot(final MappeableBitmapContainer value2)", "testcase": false, "constructor": false}, {"identifier": "andNot", "parameters": "(final MappeableRunContainer value2)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer andNot(final MappeableRunContainer value2)", "full_signature": "@Override public MappeableContainer andNot(final MappeableRunContainer value2)", "class_method_signature": "MappeableBitmapContainer.andNot(final MappeableRunContainer value2)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "MappeableBitmapContainer.clear()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "MappeableBitmapContainer", "signature": "MappeableBitmapContainer clone()", "full_signature": "@Override public MappeableBitmapContainer clone()", "class_method_signature": "MappeableBitmapContainer.clone()", "testcase": false, "constructor": false}, {"identifier": "computeCardinality", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void computeCardinality()", "full_signature": "private void computeCardinality()", "class_method_signature": "MappeableBitmapContainer.computeCardinality()", "testcase": false, "constructor": false}, {"identifier": "cardinalityInRange", "parameters": "(int start, int end)", "modifiers": "", "return": "int", "signature": "int cardinalityInRange(int start, int end)", "full_signature": " int cardinalityInRange(int start, int end)", "class_method_signature": "MappeableBitmapContainer.cardinalityInRange(int start, int end)", "testcase": false, "constructor": false}, {"identifier": "updateCardinality", "parameters": "(int prevOnes, int newOnes)", "modifiers": "", "return": "void", "signature": "void updateCardinality(int prevOnes, int newOnes)", "full_signature": " void updateCardinality(int prevOnes, int newOnes)", "class_method_signature": "MappeableBitmapContainer.updateCardinality(int prevOnes, int newOnes)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(final char i)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(final char i)", "full_signature": "@Override public boolean contains(final char i)", "class_method_signature": "MappeableBitmapContainer.contains(final char i)", "testcase": false, "constructor": false}, {"identifier": "bitValue", "parameters": "(final char i)", "modifiers": "", "return": "long", "signature": "long bitValue(final char i)", "full_signature": " long bitValue(final char i)", "class_method_signature": "MappeableBitmapContainer.bitValue(final char i)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(ByteBuffer buf, int position, final char i)", "modifiers": "public static", "return": "boolean", "signature": "boolean contains(ByteBuffer buf, int position, final char i)", "full_signature": "public static boolean contains(ByteBuffer buf, int position, final char i)", "class_method_signature": "MappeableBitmapContainer.contains(ByteBuffer buf, int position, final char i)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "MappeableBitmapContainer.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "fillArray", "parameters": "(final char[] array)", "modifiers": "", "return": "void", "signature": "void fillArray(final char[] array)", "full_signature": " void fillArray(final char[] array)", "class_method_signature": "MappeableBitmapContainer.fillArray(final char[] array)", "testcase": false, "constructor": false}, {"identifier": "fillLeastSignificant16bits", "parameters": "(int[] x, int i, int mask)", "modifiers": "@Override public", "return": "void", "signature": "void fillLeastSignificant16bits(int[] x, int i, int mask)", "full_signature": "@Override public void fillLeastSignificant16bits(int[] x, int i, int mask)", "class_method_signature": "MappeableBitmapContainer.fillLeastSignificant16bits(int[] x, int i, int mask)", "testcase": false, "constructor": false}, {"identifier": "flip", "parameters": "(char i)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer flip(char i)", "full_signature": "@Override public MappeableContainer flip(char i)", "class_method_signature": "MappeableBitmapContainer.flip(char i)", "testcase": false, "constructor": false}, {"identifier": "getArraySizeInBytes", "parameters": "()", "modifiers": "@Override protected", "return": "int", "signature": "int getArraySizeInBytes()", "full_signature": "@Override protected int getArraySizeInBytes()", "class_method_signature": "MappeableBitmapContainer.getArraySizeInBytes()", "testcase": false, "constructor": false}, {"identifier": "getCardinality", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getCardinality()", "full_signature": "@Override public int getCardinality()", "class_method_signature": "MappeableBitmapContainer.getCardinality()", "testcase": false, "constructor": false}, {"identifier": "getReverseCharIterator", "parameters": "()", "modifiers": "@Override public", "return": "CharIterator", "signature": "CharIterator getReverseCharIterator()", "full_signature": "@Override public CharIterator getReverseCharIterator()", "class_method_signature": "MappeableBitmapContainer.getReverseCharIterator()", "testcase": false, "constructor": false}, {"identifier": "getCharIterator", "parameters": "()", "modifiers": "@Override public", "return": "PeekableCharIterator", "signature": "PeekableCharIterator getCharIterator()", "full_signature": "@Override public PeekableCharIterator getCharIterator()", "class_method_signature": "MappeableBitmapContainer.getCharIterator()", "testcase": false, "constructor": false}, {"identifier": "getBatchIterator", "parameters": "()", "modifiers": "@Override public", "return": "ContainerBatchIterator", "signature": "ContainerBatchIterator getBatchIterator()", "full_signature": "@Override public ContainerBatchIterator getBatchIterator()", "class_method_signature": "MappeableBitmapContainer.getBatchIterator()", "testcase": false, "constructor": false}, {"identifier": "getSizeInBytes", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSizeInBytes()", "full_signature": "@Override public int getSizeInBytes()", "class_method_signature": "MappeableBitmapContainer.getSizeInBytes()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "MappeableBitmapContainer.hashCode()", "testcase": false, "constructor": false}, {"identifier": "iadd", "parameters": "(int begin, int end)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer iadd(int begin, int end)", "full_signature": "@Override public MappeableContainer iadd(int begin, int end)", "class_method_signature": "MappeableBitmapContainer.iadd(int begin, int end)", "testcase": false, "constructor": false}, {"identifier": "iand", "parameters": "(final MappeableArrayContainer b2)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer iand(final MappeableArrayContainer b2)", "full_signature": "@Override public MappeableContainer iand(final MappeableArrayContainer b2)", "class_method_signature": "MappeableBitmapContainer.iand(final MappeableArrayContainer b2)", "testcase": false, "constructor": false}, {"identifier": "iand", "parameters": "(final MappeableBitmapContainer b2)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer iand(final MappeableBitmapContainer b2)", "full_signature": "@Override public MappeableContainer iand(final MappeableBitmapContainer b2)", "class_method_signature": "MappeableBitmapContainer.iand(final MappeableBitmapContainer b2)", "testcase": false, "constructor": false}, {"identifier": "iand", "parameters": "(final MappeableRunContainer x)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer iand(final MappeableRunContainer x)", "full_signature": "@Override public MappeableContainer iand(final MappeableRunContainer x)", "class_method_signature": "MappeableBitmapContainer.iand(final MappeableRunContainer x)", "testcase": false, "constructor": false}, {"identifier": "iandNot", "parameters": "(final MappeableArrayContainer b2)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer iandNot(final MappeableArrayContainer b2)", "full_signature": "@Override public MappeableContainer iandNot(final MappeableArrayContainer b2)", "class_method_signature": "MappeableBitmapContainer.iandNot(final MappeableArrayContainer b2)", "testcase": false, "constructor": false}, {"identifier": "iandNot", "parameters": "(final MappeableBitmapContainer b2)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer iandNot(final MappeableBitmapContainer b2)", "full_signature": "@Override public MappeableContainer iandNot(final MappeableBitmapContainer b2)", "class_method_signature": "MappeableBitmapContainer.iandNot(final MappeableBitmapContainer b2)", "testcase": false, "constructor": false}, {"identifier": "iandNot", "parameters": "(final MappeableRunContainer x)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer iandNot(final MappeableRunContainer x)", "full_signature": "@Override public MappeableContainer iandNot(final MappeableRunContainer x)", "class_method_signature": "MappeableBitmapContainer.iandNot(final MappeableRunContainer x)", "testcase": false, "constructor": false}, {"identifier": "ilazyor", "parameters": "(MappeableArrayContainer value2)", "modifiers": "", "return": "MappeableContainer", "signature": "MappeableContainer ilazyor(MappeableArrayContainer value2)", "full_signature": " MappeableContainer ilazyor(MappeableArrayContainer value2)", "class_method_signature": "MappeableBitmapContainer.ilazyor(MappeableArrayContainer value2)", "testcase": false, "constructor": false}, {"identifier": "ilazyor", "parameters": "(MappeableBitmapContainer x)", "modifiers": "", "return": "MappeableContainer", "signature": "MappeableContainer ilazyor(MappeableBitmapContainer x)", "full_signature": " MappeableContainer ilazyor(MappeableBitmapContainer x)", "class_method_signature": "MappeableBitmapContainer.ilazyor(MappeableBitmapContainer x)", "testcase": false, "constructor": false}, {"identifier": "ilazyor", "parameters": "(MappeableRunContainer x)", "modifiers": "", "return": "MappeableContainer", "signature": "MappeableContainer ilazyor(MappeableRunContainer x)", "full_signature": " MappeableContainer ilazyor(MappeableRunContainer x)", "class_method_signature": "MappeableBitmapContainer.ilazyor(MappeableRunContainer x)", "testcase": false, "constructor": false}, {"identifier": "inot", "parameters": "(final int firstOfRange, final int lastOfRange)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer inot(final int firstOfRange, final int lastOfRange)", "full_signature": "@Override public MappeableContainer inot(final int firstOfRange, final int lastOfRange)", "class_method_signature": "MappeableBitmapContainer.inot(final int firstOfRange, final int lastOfRange)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(MappeableArrayContainer value2)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean intersects(MappeableArrayContainer value2)", "full_signature": "@Override public boolean intersects(MappeableArrayContainer value2)", "class_method_signature": "MappeableBitmapContainer.intersects(MappeableArrayContainer value2)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(MappeableBitmapContainer value2)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean intersects(MappeableBitmapContainer value2)", "full_signature": "@Override public boolean intersects(MappeableBitmapContainer value2)", "class_method_signature": "MappeableBitmapContainer.intersects(MappeableBitmapContainer value2)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(MappeableRunContainer x)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean intersects(MappeableRunContainer x)", "full_signature": "@Override public boolean intersects(MappeableRunContainer x)", "class_method_signature": "MappeableBitmapContainer.intersects(MappeableRunContainer x)", "testcase": false, "constructor": false}, {"identifier": "ior", "parameters": "(final MappeableArrayContainer value2)", "modifiers": "@Override public", "return": "MappeableBitmapContainer", "signature": "MappeableBitmapContainer ior(final MappeableArrayContainer value2)", "full_signature": "@Override public MappeableBitmapContainer ior(final MappeableArrayContainer value2)", "class_method_signature": "MappeableBitmapContainer.ior(final MappeableArrayContainer value2)", "testcase": false, "constructor": false}, {"identifier": "ior", "parameters": "(final MappeableBitmapContainer b2)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer ior(final MappeableBitmapContainer b2)", "full_signature": "@Override public MappeableContainer ior(final MappeableBitmapContainer b2)", "class_method_signature": "MappeableBitmapContainer.ior(final MappeableBitmapContainer b2)", "testcase": false, "constructor": false}, {"identifier": "isFull", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isFull()", "full_signature": "@Override public boolean isFull()", "class_method_signature": "MappeableBitmapContainer.isFull()", "testcase": false, "constructor": false}, {"identifier": "ior", "parameters": "(final MappeableRunContainer x)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer ior(final MappeableRunContainer x)", "full_signature": "@Override public MappeableContainer ior(final MappeableRunContainer x)", "class_method_signature": "MappeableBitmapContainer.ior(final MappeableRunContainer x)", "testcase": false, "constructor": false}, {"identifier": "iremove", "parameters": "(int begin, int end)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer iremove(int begin, int end)", "full_signature": "@Override public MappeableContainer iremove(int begin, int end)", "class_method_signature": "MappeableBitmapContainer.iremove(int begin, int end)", "testcase": false, "constructor": false}, {"identifier": "isArrayBacked", "parameters": "()", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean isArrayBacked()", "full_signature": "@Override protected boolean isArrayBacked()", "class_method_signature": "MappeableBitmapContainer.isArrayBacked()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Character>", "signature": "Iterator<Character> iterator()", "full_signature": "@Override public Iterator<Character> iterator()", "class_method_signature": "MappeableBitmapContainer.iterator()", "testcase": false, "constructor": false}, {"identifier": "ixor", "parameters": "(final MappeableArrayContainer value2)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer ixor(final MappeableArrayContainer value2)", "full_signature": "@Override public MappeableContainer ixor(final MappeableArrayContainer value2)", "class_method_signature": "MappeableBitmapContainer.ixor(final MappeableArrayContainer value2)", "testcase": false, "constructor": false}, {"identifier": "ixor", "parameters": "(MappeableBitmapContainer b2)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer ixor(MappeableBitmapContainer b2)", "full_signature": "@Override public MappeableContainer ixor(MappeableBitmapContainer b2)", "class_method_signature": "MappeableBitmapContainer.ixor(MappeableBitmapContainer b2)", "testcase": false, "constructor": false}, {"identifier": "ixor", "parameters": "(final MappeableRunContainer x)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer ixor(final MappeableRunContainer x)", "full_signature": "@Override public MappeableContainer ixor(final MappeableRunContainer x)", "class_method_signature": "MappeableBitmapContainer.ixor(final MappeableRunContainer x)", "testcase": false, "constructor": false}, {"identifier": "lazyor", "parameters": "(MappeableArrayContainer value2)", "modifiers": "protected", "return": "MappeableContainer", "signature": "MappeableContainer lazyor(MappeableArrayContainer value2)", "full_signature": "protected MappeableContainer lazyor(MappeableArrayContainer value2)", "class_method_signature": "MappeableBitmapContainer.lazyor(MappeableArrayContainer value2)", "testcase": false, "constructor": false}, {"identifier": "lazyor", "parameters": "(MappeableBitmapContainer x)", "modifiers": "protected", "return": "MappeableContainer", "signature": "MappeableContainer lazyor(MappeableBitmapContainer x)", "full_signature": "protected MappeableContainer lazyor(MappeableBitmapContainer x)", "class_method_signature": "MappeableBitmapContainer.lazyor(MappeableBitmapContainer x)", "testcase": false, "constructor": false}, {"identifier": "lazyor", "parameters": "(MappeableRunContainer x)", "modifiers": "protected", "return": "MappeableContainer", "signature": "MappeableContainer lazyor(MappeableRunContainer x)", "full_signature": "protected MappeableContainer lazyor(MappeableRunContainer x)", "class_method_signature": "MappeableBitmapContainer.lazyor(MappeableRunContainer x)", "testcase": false, "constructor": false}, {"identifier": "limit", "parameters": "(int maxcardinality)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer limit(int maxcardinality)", "full_signature": "@Override public MappeableContainer limit(int maxcardinality)", "class_method_signature": "MappeableBitmapContainer.limit(int maxcardinality)", "testcase": false, "constructor": false}, {"identifier": "loadData", "parameters": "(final MappeableArrayContainer arrayContainer)", "modifiers": "", "return": "void", "signature": "void loadData(final MappeableArrayContainer arrayContainer)", "full_signature": " void loadData(final MappeableArrayContainer arrayContainer)", "class_method_signature": "MappeableBitmapContainer.loadData(final MappeableArrayContainer arrayContainer)", "testcase": false, "constructor": false}, {"identifier": "nextSetBit", "parameters": "(final int i)", "modifiers": "public", "return": "int", "signature": "int nextSetBit(final int i)", "full_signature": "public int nextSetBit(final int i)", "class_method_signature": "MappeableBitmapContainer.nextSetBit(final int i)", "testcase": false, "constructor": false}, {"identifier": "nextClearBit", "parameters": "(final int i)", "modifiers": "private", "return": "int", "signature": "int nextClearBit(final int i)", "full_signature": "private int nextClearBit(final int i)", "class_method_signature": "MappeableBitmapContainer.nextClearBit(final int i)", "testcase": false, "constructor": false}, {"identifier": "not", "parameters": "(final int firstOfRange, final int lastOfRange)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer not(final int firstOfRange, final int lastOfRange)", "full_signature": "@Override public MappeableContainer not(final int firstOfRange, final int lastOfRange)", "class_method_signature": "MappeableBitmapContainer.not(final int firstOfRange, final int lastOfRange)", "testcase": false, "constructor": false}, {"identifier": "numberOfRuns", "parameters": "()", "modifiers": "@Override", "return": "int", "signature": "int numberOfRuns()", "full_signature": "@Override int numberOfRuns()", "class_method_signature": "MappeableBitmapContainer.numberOfRuns()", "testcase": false, "constructor": false}, {"identifier": "numberOfRunsAdjustment", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int numberOfRunsAdjustment()", "full_signature": "private int numberOfRunsAdjustment()", "class_method_signature": "MappeableBitmapContainer.numberOfRunsAdjustment()", "testcase": false, "constructor": false}, {"identifier": "numberOfRunsLowerBound", "parameters": "(int mustNotExceed)", "modifiers": "private", "return": "int", "signature": "int numberOfRunsLowerBound(int mustNotExceed)", "full_signature": "private int numberOfRunsLowerBound(int mustNotExceed)", "class_method_signature": "MappeableBitmapContainer.numberOfRunsLowerBound(int mustNotExceed)", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(final MappeableArrayContainer value2)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer or(final MappeableArrayContainer value2)", "full_signature": "@Override public MappeableContainer or(final MappeableArrayContainer value2)", "class_method_signature": "MappeableBitmapContainer.or(final MappeableArrayContainer value2)", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(final MappeableBitmapContainer value2)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer or(final MappeableBitmapContainer value2)", "full_signature": "@Override public MappeableContainer or(final MappeableBitmapContainer value2)", "class_method_signature": "MappeableBitmapContainer.or(final MappeableBitmapContainer value2)", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(final MappeableRunContainer value2)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer or(final MappeableRunContainer value2)", "full_signature": "@Override public MappeableContainer or(final MappeableRunContainer value2)", "class_method_signature": "MappeableBitmapContainer.or(final MappeableRunContainer value2)", "testcase": false, "constructor": false}, {"identifier": "prevSetBit", "parameters": "(final int i)", "modifiers": "", "return": "int", "signature": "int prevSetBit(final int i)", "full_signature": " int prevSetBit(final int i)", "class_method_signature": "MappeableBitmapContainer.prevSetBit(final int i)", "testcase": false, "constructor": false}, {"identifier": "prevClearBit", "parameters": "(final int i)", "modifiers": "private", "return": "int", "signature": "int prevClearBit(final int i)", "full_signature": "private int prevClearBit(final int i)", "class_method_signature": "MappeableBitmapContainer.prevClearBit(final int i)", "testcase": false, "constructor": false}, {"identifier": "rank", "parameters": "(char lowbits)", "modifiers": "@Override public", "return": "int", "signature": "int rank(char lowbits)", "full_signature": "@Override public int rank(char lowbits)", "class_method_signature": "MappeableBitmapContainer.rank(char lowbits)", "testcase": false, "constructor": false}, {"identifier": "readExternal", "parameters": "(ObjectInput in)", "modifiers": "@Override public", "return": "void", "signature": "void readExternal(ObjectInput in)", "full_signature": "@Override public void readExternal(ObjectInput in)", "class_method_signature": "MappeableBitmapContainer.readExternal(ObjectInput in)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(int begin, int end)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer remove(int begin, int end)", "full_signature": "@Override public MappeableContainer remove(int begin, int end)", "class_method_signature": "MappeableBitmapContainer.remove(int begin, int end)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(final char i)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer remove(final char i)", "full_signature": "@Override public MappeableContainer remove(final char i)", "class_method_signature": "MappeableBitmapContainer.remove(final char i)", "testcase": false, "constructor": false}, {"identifier": "repairAfterLazy", "parameters": "()", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer repairAfterLazy()", "full_signature": "@Override public MappeableContainer repairAfterLazy()", "class_method_signature": "MappeableBitmapContainer.repairAfterLazy()", "testcase": false, "constructor": false}, {"identifier": "runOptimize", "parameters": "()", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer runOptimize()", "full_signature": "@Override public MappeableContainer runOptimize()", "class_method_signature": "MappeableBitmapContainer.runOptimize()", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(int j)", "modifiers": "@Override public", "return": "char", "signature": "char select(int j)", "full_signature": "@Override public char select(int j)", "class_method_signature": "MappeableBitmapContainer.select(int j)", "testcase": false, "constructor": false}, {"identifier": "serializedSizeInBytes", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int serializedSizeInBytes()", "full_signature": "@Override public int serializedSizeInBytes()", "class_method_signature": "MappeableBitmapContainer.serializedSizeInBytes()", "testcase": false, "constructor": false}, {"identifier": "toArrayContainer", "parameters": "()", "modifiers": "", "return": "MappeableArrayContainer", "signature": "MappeableArrayContainer toArrayContainer()", "full_signature": " MappeableArrayContainer toArrayContainer()", "class_method_signature": "MappeableBitmapContainer.toArrayContainer()", "testcase": false, "constructor": false}, {"identifier": "toContainer", "parameters": "()", "modifiers": "@Override public", "return": "Container", "signature": "Container toContainer()", "full_signature": "@Override public Container toContainer()", "class_method_signature": "MappeableBitmapContainer.toContainer()", "testcase": false, "constructor": false}, {"identifier": "toLongArray", "parameters": "()", "modifiers": "public", "return": "long[]", "signature": "long[] toLongArray()", "full_signature": "public long[] toLongArray()", "class_method_signature": "MappeableBitmapContainer.toLongArray()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "MappeableBitmapContainer.toString()", "testcase": false, "constructor": false}, {"identifier": "trim", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void trim()", "full_signature": "@Override public void trim()", "class_method_signature": "MappeableBitmapContainer.trim()", "testcase": false, "constructor": false}, {"identifier": "writeArray", "parameters": "(DataOutput out)", "modifiers": "@Override protected", "return": "void", "signature": "void writeArray(DataOutput out)", "full_signature": "@Override protected void writeArray(DataOutput out)", "class_method_signature": "MappeableBitmapContainer.writeArray(DataOutput out)", "testcase": false, "constructor": false}, {"identifier": "writeArray", "parameters": "(ByteBuffer buffer)", "modifiers": "@Override protected", "return": "void", "signature": "void writeArray(ByteBuffer buffer)", "full_signature": "@Override protected void writeArray(ByteBuffer buffer)", "class_method_signature": "MappeableBitmapContainer.writeArray(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "writeExternal", "parameters": "(ObjectOutput out)", "modifiers": "@Override public", "return": "void", "signature": "void writeExternal(ObjectOutput out)", "full_signature": "@Override public void writeExternal(ObjectOutput out)", "class_method_signature": "MappeableBitmapContainer.writeExternal(ObjectOutput out)", "testcase": false, "constructor": false}, {"identifier": "xor", "parameters": "(final MappeableArrayContainer value2)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer xor(final MappeableArrayContainer value2)", "full_signature": "@Override public MappeableContainer xor(final MappeableArrayContainer value2)", "class_method_signature": "MappeableBitmapContainer.xor(final MappeableArrayContainer value2)", "testcase": false, "constructor": false}, {"identifier": "xor", "parameters": "(MappeableBitmapContainer value2)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer xor(MappeableBitmapContainer value2)", "full_signature": "@Override public MappeableContainer xor(MappeableBitmapContainer value2)", "class_method_signature": "MappeableBitmapContainer.xor(MappeableBitmapContainer value2)", "testcase": false, "constructor": false}, {"identifier": "xor", "parameters": "(final MappeableRunContainer value2)", "modifiers": "@Override public", "return": "MappeableContainer", "signature": "MappeableContainer xor(final MappeableRunContainer value2)", "full_signature": "@Override public MappeableContainer xor(final MappeableRunContainer value2)", "class_method_signature": "MappeableBitmapContainer.xor(final MappeableRunContainer value2)", "testcase": false, "constructor": false}, {"identifier": "forEach", "parameters": "(char msb, IntConsumer ic)", "modifiers": "@Override public", "return": "void", "signature": "void forEach(char msb, IntConsumer ic)", "full_signature": "@Override public void forEach(char msb, IntConsumer ic)", "class_method_signature": "MappeableBitmapContainer.forEach(char msb, IntConsumer ic)", "testcase": false, "constructor": false}, {"identifier": "andCardinality", "parameters": "(final MappeableArrayContainer value2)", "modifiers": "@Override public", "return": "int", "signature": "int andCardinality(final MappeableArrayContainer value2)", "full_signature": "@Override public int andCardinality(final MappeableArrayContainer value2)", "class_method_signature": "MappeableBitmapContainer.andCardinality(final MappeableArrayContainer value2)", "testcase": false, "constructor": false}, {"identifier": "andCardinality", "parameters": "(final MappeableBitmapContainer value2)", "modifiers": "@Override public", "return": "int", "signature": "int andCardinality(final MappeableBitmapContainer value2)", "full_signature": "@Override public int andCardinality(final MappeableBitmapContainer value2)", "class_method_signature": "MappeableBitmapContainer.andCardinality(final MappeableBitmapContainer value2)", "testcase": false, "constructor": false}, {"identifier": "andCardinality", "parameters": "(MappeableRunContainer x)", "modifiers": "@Override public", "return": "int", "signature": "int andCardinality(MappeableRunContainer x)", "full_signature": "@Override public int andCardinality(MappeableRunContainer x)", "class_method_signature": "MappeableBitmapContainer.andCardinality(MappeableRunContainer x)", "testcase": false, "constructor": false}, {"identifier": "toBitmapContainer", "parameters": "()", "modifiers": "@Override public", "return": "MappeableBitmapContainer", "signature": "MappeableBitmapContainer toBitmapContainer()", "full_signature": "@Override public MappeableBitmapContainer toBitmapContainer()", "class_method_signature": "MappeableBitmapContainer.toBitmapContainer()", "testcase": false, "constructor": false}, {"identifier": "first", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int first()", "full_signature": "@Override public int first()", "class_method_signature": "MappeableBitmapContainer.first()", "testcase": false, "constructor": false}, {"identifier": "last", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int last()", "full_signature": "@Override public int last()", "class_method_signature": "MappeableBitmapContainer.last()", "testcase": false, "constructor": false}, {"identifier": "nextValue", "parameters": "(char fromValue)", "modifiers": "@Override public", "return": "int", "signature": "int nextValue(char fromValue)", "full_signature": "@Override public int nextValue(char fromValue)", "class_method_signature": "MappeableBitmapContainer.nextValue(char fromValue)", "testcase": false, "constructor": false}, {"identifier": "previousValue", "parameters": "(char fromValue)", "modifiers": "@Override public", "return": "int", "signature": "int previousValue(char fromValue)", "full_signature": "@Override public int previousValue(char fromValue)", "class_method_signature": "MappeableBitmapContainer.previousValue(char fromValue)", "testcase": false, "constructor": false}, {"identifier": "nextAbsentValue", "parameters": "(char fromValue)", "modifiers": "@Override public", "return": "int", "signature": "int nextAbsentValue(char fromValue)", "full_signature": "@Override public int nextAbsentValue(char fromValue)", "class_method_signature": "MappeableBitmapContainer.nextAbsentValue(char fromValue)", "testcase": false, "constructor": false}, {"identifier": "previousAbsentValue", "parameters": "(char fromValue)", "modifiers": "@Override public", "return": "int", "signature": "int previousAbsentValue(char fromValue)", "full_signature": "@Override public int previousAbsentValue(char fromValue)", "class_method_signature": "MappeableBitmapContainer.previousAbsentValue(char fromValue)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(MappeableBitmapContainer bitmapContainer)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean contains(MappeableBitmapContainer bitmapContainer)", "full_signature": "@Override protected boolean contains(MappeableBitmapContainer bitmapContainer)", "class_method_signature": "MappeableBitmapContainer.contains(MappeableBitmapContainer bitmapContainer)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(int minimum, int supremum)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean intersects(int minimum, int supremum)", "full_signature": "@Override public boolean intersects(int minimum, int supremum)", "class_method_signature": "MappeableBitmapContainer.intersects(int minimum, int supremum)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(int minimum, int supremum)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(int minimum, int supremum)", "full_signature": "@Override public boolean contains(int minimum, int supremum)", "class_method_signature": "MappeableBitmapContainer.contains(int minimum, int supremum)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(MappeableRunContainer runContainer)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean contains(MappeableRunContainer runContainer)", "full_signature": "@Override protected boolean contains(MappeableRunContainer runContainer)", "class_method_signature": "MappeableBitmapContainer.contains(MappeableRunContainer runContainer)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(MappeableArrayContainer arrayContainer)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean contains(MappeableArrayContainer arrayContainer)", "full_signature": "@Override protected boolean contains(MappeableArrayContainer arrayContainer)", "class_method_signature": "MappeableBitmapContainer.contains(MappeableArrayContainer arrayContainer)", "testcase": false, "constructor": false}], "file": "RoaringBitmap/src/main/java/org/roaringbitmap/buffer/MappeableBitmapContainer.java"}, "focal_method": {"identifier": "or", "parameters": "(final MappeableArrayContainer value2)", "modifiers": "@Override public", "return": "MappeableContainer", "body": "@Override\n  public MappeableContainer or(final MappeableArrayContainer value2) {\n    final MappeableBitmapContainer answer = clone();\n    if (!BufferUtil.isBackedBySimpleArray(answer.bitmap)) {\n      throw new RuntimeException(\"Should not happen. Internal bug.\");\n    }\n    long[] bitArray = answer.bitmap.array();\n    if (BufferUtil.isBackedBySimpleArray(answer.bitmap)\n        && BufferUtil.isBackedBySimpleArray(value2.content)) {\n      long[] ab = answer.bitmap.array();\n      char[] v2 = value2.content.array();\n      int c = value2.cardinality;\n      for (int k = 0; k < c; ++k) {\n        char v = v2[k];\n        final int i = v >>> 6;\n        long w = ab[i];\n        long aft = w | (1L << v);\n        bitArray[i] = aft;\n        if (USE_BRANCHLESS) {\n          answer.cardinality += (int)((w - aft) >>> 63);\n        } else {\n          if (w != aft) {\n            answer.cardinality++;\n          }\n        }\n      }\n    } else {\n      int c = value2.cardinality;\n      for (int k = 0; k < c; ++k) {\n        char v2 = value2.content.get(k);\n        final int i = (v2) >>> 6;\n        long w = answer.bitmap.get(i);\n        long aft = w | (1L << v2);\n        bitArray[i] = aft;\n        if (USE_BRANCHLESS) {\n          answer.cardinality += (int)((w - aft) >>> 63);\n        } else {\n          if (w != aft) {\n            answer.cardinality++;\n          }\n        }\n      }\n    }\n    if (answer.isFull()) {\n      return MappeableRunContainer.full();\n    }\n    return answer;\n  }", "signature": "MappeableContainer or(final MappeableArrayContainer value2)", "full_signature": "@Override public MappeableContainer or(final MappeableArrayContainer value2)", "class_method_signature": "MappeableBitmapContainer.or(final MappeableArrayContainer value2)", "testcase": false, "constructor": false, "invocations": ["clone", "isBackedBySimpleArray", "array", "isBackedBySimpleArray", "isBackedBySimpleArray", "array", "array", "get", "get", "isFull", "full"]}, "repository": {"repo_id": 10746583, "url": "https://github.com/RoaringBitmap/RoaringBitmap", "language": "Java", "is_fork": false, "fork_count": 335, "stargazer_count": 1786, "size": 88641, "license": "licensed"}}