{"test_class": {"identifier": "ParallelAggregationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static ForkJoinPool POOL;", "modifier": "private static", "type": "ForkJoinPool", "declarator": "POOL", "var_name": "POOL"}, {"original_string": "private static ForkJoinPool BIG_POOL;", "modifier": "private static", "type": "ForkJoinPool", "declarator": "BIG_POOL", "var_name": "BIG_POOL"}, {"original_string": "private static ForkJoinPool NO_PARALLELISM_AVAILABLE;", "modifier": "private static", "type": "ForkJoinPool", "declarator": "NO_PARALLELISM_AVAILABLE", "var_name": "NO_PARALLELISM_AVAILABLE"}], "file": "RoaringBitmap/src/test/java/org/roaringbitmap/ParallelAggregationTest.java"}, "test_case": {"identifier": "twoContainerXOR", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void twoContainerXOR() {\n    RoaringBitmap one = testCase().withRunAt(0).withArrayAt(1).build();\n    RoaringBitmap two = testCase().withBitmapAt(1).build();\n    RoaringBitmap three = testCase().withArrayAt(1).build();\n    assertEquals(FastAggregation.xor(one, two, three), ParallelAggregation.xor(one, two, three));\n  }", "signature": "void twoContainerXOR()", "full_signature": "@Test public void twoContainerXOR()", "class_method_signature": "ParallelAggregationTest.twoContainerXOR()", "testcase": true, "constructor": false, "invocations": ["build", "withArrayAt", "withRunAt", "testCase", "build", "withBitmapAt", "testCase", "build", "withArrayAt", "testCase", "assertEquals", "xor", "xor"]}, "focal_class": {"identifier": "ParallelAggregation", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Collector<Map.Entry<Character, List<Container>>,\n          RoaringArray, RoaringBitmap>\n          XOR = new ContainerCollector(ParallelAggregation::xor);", "modifier": "private static final", "type": "Collector<Map.Entry<Character, List<Container>>,\n          RoaringArray, RoaringBitmap>", "declarator": "XOR = new ContainerCollector(ParallelAggregation::xor)", "var_name": "XOR"}, {"original_string": "private static final OrCollector OR = new OrCollector();", "modifier": "private static final", "type": "OrCollector", "declarator": "OR = new OrCollector()", "var_name": "OR"}], "methods": [{"identifier": "groupByKey", "parameters": "(RoaringBitmap... bitmaps)", "modifiers": "public static", "return": "SortedMap<Character, List<Container>>", "signature": "SortedMap<Character, List<Container>> groupByKey(RoaringBitmap... bitmaps)", "full_signature": "public static SortedMap<Character, List<Container>> groupByKey(RoaringBitmap... bitmaps)", "class_method_signature": "ParallelAggregation.groupByKey(RoaringBitmap... bitmaps)", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(RoaringBitmap... bitmaps)", "modifiers": "public static", "return": "RoaringBitmap", "signature": "RoaringBitmap or(RoaringBitmap... bitmaps)", "full_signature": "public static RoaringBitmap or(RoaringBitmap... bitmaps)", "class_method_signature": "ParallelAggregation.or(RoaringBitmap... bitmaps)", "testcase": false, "constructor": false}, {"identifier": "xor", "parameters": "(RoaringBitmap... bitmaps)", "modifiers": "public static", "return": "RoaringBitmap", "signature": "RoaringBitmap xor(RoaringBitmap... bitmaps)", "full_signature": "public static RoaringBitmap xor(RoaringBitmap... bitmaps)", "class_method_signature": "ParallelAggregation.xor(RoaringBitmap... bitmaps)", "testcase": false, "constructor": false}, {"identifier": "xor", "parameters": "(List<Container> containers)", "modifiers": "private static", "return": "Container", "signature": "Container xor(List<Container> containers)", "full_signature": "private static Container xor(List<Container> containers)", "class_method_signature": "ParallelAggregation.xor(List<Container> containers)", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(List<Container> containers)", "modifiers": "private static", "return": "Container", "signature": "Container or(List<Container> containers)", "full_signature": "private static Container or(List<Container> containers)", "class_method_signature": "ParallelAggregation.or(List<Container> containers)", "testcase": false, "constructor": false}, {"identifier": "availableParallelism", "parameters": "()", "modifiers": "private static", "return": "int", "signature": "int availableParallelism()", "full_signature": "private static int availableParallelism()", "class_method_signature": "ParallelAggregation.availableParallelism()", "testcase": false, "constructor": false}], "file": "RoaringBitmap/src/main/java/org/roaringbitmap/ParallelAggregation.java"}, "focal_method": {"identifier": "xor", "parameters": "(RoaringBitmap... bitmaps)", "modifiers": "public static", "return": "RoaringBitmap", "body": "public static RoaringBitmap xor(RoaringBitmap... bitmaps) {\n    return groupByKey(bitmaps)\n            .entrySet()\n            .parallelStream()\n            .collect(XOR);\n  }", "signature": "RoaringBitmap xor(RoaringBitmap... bitmaps)", "full_signature": "public static RoaringBitmap xor(RoaringBitmap... bitmaps)", "class_method_signature": "ParallelAggregation.xor(RoaringBitmap... bitmaps)", "testcase": false, "constructor": false, "invocations": ["collect", "parallelStream", "entrySet", "groupByKey"]}, "repository": {"repo_id": 10746583, "url": "https://github.com/RoaringBitmap/RoaringBitmap", "language": "Java", "is_fork": false, "fork_count": 335, "stargazer_count": 1786, "size": 88641, "license": "licensed"}}