{"test_class": {"identifier": "TestPersistenceServiceImpl", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PersistenceServiceImpl serviceImpl;", "modifier": "private", "type": "PersistenceServiceImpl", "declarator": "serviceImpl", "var_name": "serviceImpl"}, {"original_string": "private EntityManagerFactory factory;", "modifier": "private", "type": "EntityManagerFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "private EntityManager em;", "modifier": "private", "type": "EntityManager", "declarator": "em", "var_name": "em"}, {"original_string": "@Mock private Platform mockPlatform;", "modifier": "@Mock private", "type": "Platform", "declarator": "mockPlatform", "var_name": "mockPlatform"}, {"original_string": "@Mock private PolicyManager mockPolicyManager;", "modifier": "@Mock private", "type": "PolicyManager", "declarator": "mockPolicyManager", "var_name": "mockPolicyManager"}], "file": "databasePersistence/src/test/java/gov/nasa/arc/mct/dbpersistence/service/TestPersistenceServiceImpl.java"}, "test_case": {"identifier": "testPersist", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testPersist() {\n\t\tfinal TestAbstractComponent grandparent = createAbstractComponent(\"grandparent\", \"0\");\n\t\tfinal TestAbstractComponent parent = createAbstractComponent(\"parent\", \"1\");\n\t\tfinal TestAbstractComponent child = createAbstractComponent(\"child\", \"2\");\n\t\tList<AbstractComponent> comps = Arrays.<AbstractComponent>asList(grandparent,parent,child);\n\t\tgrandparent.addDelegateComponent(parent);\n\t\tparent.addDelegateComponent(child);\n\t\tfor (AbstractComponent ac:comps) {\t\n\t\t\tAssert.assertTrue(ac.isDirty());\n\t\t\tAssert.assertNull(ac.getCreationDate());\n\t\t}\n\t\t\n\t\tserviceImpl.persist(Arrays.<AbstractComponent>asList(grandparent,parent,child));\n\t\tfor (AbstractComponent ac:comps) {\t\n\t\t\tAssert.assertFalse(ac.isDirty());\n\t\t\tAssert.assertNotNull(ac.getCreationDate());\n\t\t}\n\t\t\n\t\tTestAbstractComponent persistedGrandparent = (TestAbstractComponent) serviceImpl.getComponent(grandparent.getComponentId());\n\t\tAssert.assertEquals(persistedGrandparent.getDisplayName(), grandparent.getDisplayName());\n\t\tAssert.assertEquals(persistedGrandparent.getComponents().size(), 1, persistedGrandparent.getComponents().toString());\n\t\tAssert.assertEquals(persistedGrandparent.getModelValue(), grandparent.getDisplayName());\n\t\tAssert.assertEquals(persistedGrandparent.getComponents().iterator().next().getComponentId(), parent.getComponentId());\n\t\t\n\t\tTestAbstractComponent persistedParent = (TestAbstractComponent) serviceImpl.getComponent(parent.getComponentId());\n\t\tAssert.assertEquals(persistedParent.getDisplayName(), parent.getDisplayName());\n\t\tAssert.assertEquals(persistedParent.getComponents().size(), 1);\n\t\tAssert.assertEquals(persistedParent.getDisplayName(), persistedParent.getDisplayName());\n\t\tAssert.assertEquals(persistedParent.getComponents().iterator().next().getComponentId(), child.getComponentId());\n\t}", "signature": "void testPersist()", "full_signature": "@Test public void testPersist()", "class_method_signature": "TestPersistenceServiceImpl.testPersist()", "testcase": true, "constructor": false, "invocations": ["createAbstractComponent", "createAbstractComponent", "createAbstractComponent", "asList", "addDelegateComponent", "addDelegateComponent", "assertTrue", "isDirty", "assertNull", "getCreationDate", "persist", "asList", "assertFalse", "isDirty", "assertNotNull", "getCreationDate", "getComponent", "getComponentId", "assertEquals", "getDisplayName", "getDisplayName", "assertEquals", "size", "getComponents", "toString", "getComponents", "assertEquals", "getModelValue", "getDisplayName", "assertEquals", "getComponentId", "next", "iterator", "getComponents", "getComponentId", "getComponent", "getComponentId", "assertEquals", "getDisplayName", "getDisplayName", "assertEquals", "size", "getComponents", "assertEquals", "getDisplayName", "getDisplayName", "assertEquals", "getComponentId", "next", "iterator", "getComponents", "getComponentId"]}, "focal_class": {"identifier": "PersistenceServiceImpl", "superclass": "", "interfaces": "implements PersistenceProvider", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(PersistenceServiceImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(PersistenceServiceImpl.class)", "var_name": "LOGGER"}, {"original_string": "private static final String PERSISTENCE_PROPS = \"properties/persistence.properties\";", "modifier": "private static final", "type": "String", "declarator": "PERSISTENCE_PROPS = \"properties/persistence.properties\"", "var_name": "PERSISTENCE_PROPS"}, {"original_string": "private static final String VERSION_PROPS = \"properties/version.properties\";", "modifier": "private static final", "type": "String", "declarator": "VERSION_PROPS = \"properties/version.properties\"", "var_name": "VERSION_PROPS"}, {"original_string": "private static final JAXBContext propContext;", "modifier": "private static final", "type": "JAXBContext", "declarator": "propContext", "var_name": "propContext"}, {"original_string": "private static final ComponentIdComparator COMPONENT_ID_COMPARATOR = new ComponentIdComparator();", "modifier": "private static final", "type": "ComponentIdComparator", "declarator": "COMPONENT_ID_COMPARATOR = new ComponentIdComparator()", "var_name": "COMPONENT_ID_COMPARATOR"}, {"original_string": "private static final long MINIMUM_POLLING_INTERVAL = 10;", "modifier": "private static final", "type": "long", "declarator": "MINIMUM_POLLING_INTERVAL = 10", "var_name": "MINIMUM_POLLING_INTERVAL"}, {"original_string": "private static final int DEFAULT_MAX_RESULTS = 100;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_MAX_RESULTS = 100", "var_name": "DEFAULT_MAX_RESULTS"}, {"original_string": "private final ConcurrentHashMap<String, List<WeakReference<AbstractComponent>>> cache = \n\t\t\tnew ConcurrentHashMap<String, List<WeakReference<AbstractComponent>>>();", "modifier": "private final", "type": "ConcurrentHashMap<String, List<WeakReference<AbstractComponent>>>", "declarator": "cache = \n\t\t\tnew ConcurrentHashMap<String, List<WeakReference<AbstractComponent>>>()", "var_name": "cache"}, {"original_string": "private Platform platform = null;", "modifier": "private", "type": "Platform", "declarator": "platform = null", "var_name": "platform"}, {"original_string": "private StepBehindCache<Set<String>> allUsers =\n\t\t\tnew StepBehindCache<Set<String>>(new Lookup<Set<String>>() {\n\t\t\t\tpublic Set<String> lookup() {\n\t\t\t\t\treturn lookupAllUsers();\n\t\t\t\t}\n\t\t\t});", "modifier": "private", "type": "StepBehindCache<Set<String>>", "declarator": "allUsers =\n\t\t\tnew StepBehindCache<Set<String>>(new Lookup<Set<String>>() {\n\t\t\t\tpublic Set<String> lookup() {\n\t\t\t\t\treturn lookupAllUsers();\n\t\t\t\t}\n\t\t\t})", "var_name": "allUsers"}, {"original_string": "private StepBehindCache<List<String>> bootstrapComponentIds =\n\t\t\tnew StepBehindCache<List<String>>(new Lookup<List<String>>() {\n\t\t\t\tpublic List<String> lookup() {\n\t\t\t\t\treturn lookupBootstrapComponents();\n\t\t\t\t}\n\t\t\t});", "modifier": "private", "type": "StepBehindCache<List<String>>", "declarator": "bootstrapComponentIds =\n\t\t\tnew StepBehindCache<List<String>>(new Lookup<List<String>>() {\n\t\t\t\tpublic List<String> lookup() {\n\t\t\t\t\treturn lookupBootstrapComponents();\n\t\t\t\t}\n\t\t\t})", "var_name": "bootstrapComponentIds"}, {"original_string": "private static final ThreadLocal<Set<AbstractComponent>> components = new ThreadLocal<Set<AbstractComponent>>(){\n\t\t@Override\n\t\tprotected Set<AbstractComponent> initialValue() {\n\t\t\treturn Collections.emptySet();\n\t\t}\n\t};", "modifier": "private static final", "type": "ThreadLocal<Set<AbstractComponent>>", "declarator": "components = new ThreadLocal<Set<AbstractComponent>>(){\n\t\t@Override\n\t\tprotected Set<AbstractComponent> initialValue() {\n\t\t\treturn Collections.emptySet();\n\t\t}\n\t}", "var_name": "components"}, {"original_string": "private EntityManagerFactory entityManagerFactory;", "modifier": "private", "type": "EntityManagerFactory", "declarator": "entityManagerFactory", "var_name": "entityManagerFactory"}, {"original_string": "private PollTime lastPollTime;", "modifier": "private", "type": "PollTime", "declarator": "lastPollTime", "var_name": "lastPollTime"}, {"original_string": "private Date lastModified;", "modifier": "private", "type": "Date", "declarator": "lastModified", "var_name": "lastModified"}, {"original_string": "private long pollingInterval;", "modifier": "private", "type": "long", "declarator": "pollingInterval", "var_name": "pollingInterval"}, {"original_string": "private int maxResults = DEFAULT_MAX_RESULTS;", "modifier": "private", "type": "int", "declarator": "maxResults = DEFAULT_MAX_RESULTS", "var_name": "maxResults"}, {"original_string": "private int pollCounter = 0;", "modifier": "private", "type": "int", "declarator": "pollCounter = 0", "var_name": "pollCounter"}], "methods": [{"identifier": "bind", "parameters": "(Platform platform)", "modifiers": "public", "return": "void", "signature": "void bind(Platform platform)", "full_signature": "public void bind(Platform platform)", "class_method_signature": "PersistenceServiceImpl.bind(Platform platform)", "testcase": false, "constructor": false}, {"identifier": "unbind", "parameters": "(Platform platform)", "modifiers": "public", "return": "void", "signature": "void unbind(Platform platform)", "full_signature": "public void unbind(Platform platform)", "class_method_signature": "PersistenceServiceImpl.unbind(Platform platform)", "testcase": false, "constructor": false}, {"identifier": "setEntityManagerProperties", "parameters": "(Properties p)", "modifiers": "public", "return": "void", "signature": "void setEntityManagerProperties(Properties p)", "full_signature": "public void setEntityManagerProperties(Properties p)", "class_method_signature": "PersistenceServiceImpl.setEntityManagerProperties(Properties p)", "testcase": false, "constructor": false}, {"identifier": "activate", "parameters": "(ComponentContext context)", "modifiers": "public", "return": "void", "signature": "void activate(ComponentContext context)", "full_signature": "public void activate(ComponentContext context)", "class_method_signature": "PersistenceServiceImpl.activate(ComponentContext context)", "testcase": false, "constructor": false}, {"identifier": "getPersistenceProperties", "parameters": "()", "modifiers": "private", "return": "Properties", "signature": "Properties getPersistenceProperties()", "full_signature": "private Properties getPersistenceProperties()", "class_method_signature": "PersistenceServiceImpl.getPersistenceProperties()", "testcase": false, "constructor": false}, {"identifier": "checkDatabaseVersion", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkDatabaseVersion()", "full_signature": "private void checkDatabaseVersion()", "class_method_signature": "PersistenceServiceImpl.checkDatabaseVersion()", "testcase": false, "constructor": false}, {"identifier": "getComponentFromStore", "parameters": "(String componentId)", "modifiers": "@Override public", "return": "AbstractComponent", "signature": "AbstractComponent getComponentFromStore(String componentId)", "full_signature": "@Override public AbstractComponent getComponentFromStore(String componentId)", "class_method_signature": "PersistenceServiceImpl.getComponentFromStore(String componentId)", "testcase": false, "constructor": false}, {"identifier": "getComponent", "parameters": "(String componentId)", "modifiers": "@Override public", "return": "AbstractComponent", "signature": "AbstractComponent getComponent(String componentId)", "full_signature": "@Override public AbstractComponent getComponent(String componentId)", "class_method_signature": "PersistenceServiceImpl.getComponent(String componentId)", "testcase": false, "constructor": false}, {"identifier": "getReferences", "parameters": "(AbstractComponent component)", "modifiers": "@Override public", "return": "Collection<AbstractComponent>", "signature": "Collection<AbstractComponent> getReferences(AbstractComponent component)", "full_signature": "@Override public Collection<AbstractComponent> getReferences(AbstractComponent component)", "class_method_signature": "PersistenceServiceImpl.getReferences(AbstractComponent component)", "testcase": false, "constructor": false}, {"identifier": "hasWorkUnitBeenStarted", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean hasWorkUnitBeenStarted()", "full_signature": "private boolean hasWorkUnitBeenStarted()", "class_method_signature": "PersistenceServiceImpl.hasWorkUnitBeenStarted()", "testcase": false, "constructor": false}, {"identifier": "startRelatedOperations", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void startRelatedOperations()", "full_signature": "@Override public void startRelatedOperations()", "class_method_signature": "PersistenceServiceImpl.startRelatedOperations()", "testcase": false, "constructor": false}, {"identifier": "completeRelatedOperations", "parameters": "(boolean save)", "modifiers": "@Override public", "return": "void", "signature": "void completeRelatedOperations(boolean save)", "full_signature": "@Override public void completeRelatedOperations(boolean save)", "class_method_signature": "PersistenceServiceImpl.completeRelatedOperations(boolean save)", "testcase": false, "constructor": false}, {"identifier": "addComponentToWorkUnit", "parameters": "(AbstractComponent component)", "modifiers": "@Override public", "return": "void", "signature": "void addComponentToWorkUnit(AbstractComponent component)", "full_signature": "@Override public void addComponentToWorkUnit(AbstractComponent component)", "class_method_signature": "PersistenceServiceImpl.addComponentToWorkUnit(AbstractComponent component)", "testcase": false, "constructor": false}, {"identifier": "getCurrentComponents", "parameters": "()", "modifiers": "public", "return": "Collection<AbstractComponent>", "signature": "Collection<AbstractComponent> getCurrentComponents()", "full_signature": "public Collection<AbstractComponent> getCurrentComponents()", "class_method_signature": "PersistenceServiceImpl.getCurrentComponents()", "testcase": false, "constructor": false}, {"identifier": "getAllUsers", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getAllUsers()", "full_signature": "@Override public Set<String> getAllUsers()", "class_method_signature": "PersistenceServiceImpl.getAllUsers()", "testcase": false, "constructor": false}, {"identifier": "lookupAllUsers", "parameters": "()", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> lookupAllUsers()", "full_signature": "private Set<String> lookupAllUsers()", "class_method_signature": "PersistenceServiceImpl.lookupAllUsers()", "testcase": false, "constructor": false}, {"identifier": "getUsersInGroup", "parameters": "(String group)", "modifiers": "@Override public", "return": "Collection<String>", "signature": "Collection<String> getUsersInGroup(String group)", "full_signature": "@Override public Collection<String> getUsersInGroup(String group)", "class_method_signature": "PersistenceServiceImpl.getUsersInGroup(String group)", "testcase": false, "constructor": false}, {"identifier": "createExtendedProperties", "parameters": "(String props)", "modifiers": "private", "return": "ExtendedProperties", "signature": "ExtendedProperties createExtendedProperties(String props)", "full_signature": "private ExtendedProperties createExtendedProperties(String props)", "class_method_signature": "PersistenceServiceImpl.createExtendedProperties(String props)", "testcase": false, "constructor": false}, {"identifier": "generateStringFromView", "parameters": "(ExtendedProperties viewState)", "modifiers": "private", "return": "String", "signature": "String generateStringFromView(ExtendedProperties viewState)", "full_signature": "private String generateStringFromView(ExtendedProperties viewState)", "class_method_signature": "PersistenceServiceImpl.generateStringFromView(ExtendedProperties viewState)", "testcase": false, "constructor": false}, {"identifier": "createViewState", "parameters": "(String viewType, String componentId, ExtendedProperties viewData, EntityManager em, ComponentSpec cs)", "modifiers": "private", "return": "ViewState", "signature": "ViewState createViewState(String viewType, String componentId, ExtendedProperties viewData, EntityManager em, ComponentSpec cs)", "full_signature": "private ViewState createViewState(String viewType, String componentId, ExtendedProperties viewData, EntityManager em, ComponentSpec cs)", "class_method_signature": "PersistenceServiceImpl.createViewState(String viewType, String componentId, ExtendedProperties viewData, EntityManager em, ComponentSpec cs)", "testcase": false, "constructor": false}, {"identifier": "updateComponentSpec", "parameters": "(AbstractComponent ac,ComponentSpec cs,EntityManager em, boolean fullSave)", "modifiers": "private", "return": "void", "signature": "void updateComponentSpec(AbstractComponent ac,ComponentSpec cs,EntityManager em, boolean fullSave)", "full_signature": "private void updateComponentSpec(AbstractComponent ac,ComponentSpec cs,EntityManager em, boolean fullSave)", "class_method_signature": "PersistenceServiceImpl.updateComponentSpec(AbstractComponent ac,ComponentSpec cs,EntityManager em, boolean fullSave)", "testcase": false, "constructor": false}, {"identifier": "persist", "parameters": "(Collection<AbstractComponent> componentsToPersist)", "modifiers": "@Override public", "return": "void", "signature": "void persist(Collection<AbstractComponent> componentsToPersist)", "full_signature": "@Override public void persist(Collection<AbstractComponent> componentsToPersist)", "class_method_signature": "PersistenceServiceImpl.persist(Collection<AbstractComponent> componentsToPersist)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Collection<AbstractComponent> componentsToDelete)", "modifiers": "@Override public", "return": "void", "signature": "void delete(Collection<AbstractComponent> componentsToDelete)", "full_signature": "@Override public void delete(Collection<AbstractComponent> componentsToDelete)", "class_method_signature": "PersistenceServiceImpl.delete(Collection<AbstractComponent> componentsToDelete)", "testcase": false, "constructor": false}, {"identifier": "hasComponentsTaggedBy", "parameters": "(String tagId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasComponentsTaggedBy(String tagId)", "full_signature": "@Override public boolean hasComponentsTaggedBy(String tagId)", "class_method_signature": "PersistenceServiceImpl.hasComponentsTaggedBy(String tagId)", "testcase": false, "constructor": false}, {"identifier": "getReferencedComponents", "parameters": "(\n\t\t\tAbstractComponent component)", "modifiers": "@Override public", "return": "List<AbstractComponent>", "signature": "List<AbstractComponent> getReferencedComponents(\n\t\t\tAbstractComponent component)", "full_signature": "@Override public List<AbstractComponent> getReferencedComponents(\n\t\t\tAbstractComponent component)", "class_method_signature": "PersistenceServiceImpl.getReferencedComponents(\n\t\t\tAbstractComponent component)", "testcase": false, "constructor": false}, {"identifier": "getUser", "parameters": "(String userId)", "modifiers": "@Override public", "return": "User", "signature": "User getUser(String userId)", "full_signature": "@Override public User getUser(String userId)", "class_method_signature": "PersistenceServiceImpl.getUser(String userId)", "testcase": false, "constructor": false}, {"identifier": "findComponentsByBaseDisplayedNamePattern", "parameters": "(String pattern, Properties props)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "QueryResult", "signature": "QueryResult findComponentsByBaseDisplayedNamePattern(String pattern, Properties props)", "full_signature": "@SuppressWarnings(\"unchecked\") public QueryResult findComponentsByBaseDisplayedNamePattern(String pattern, Properties props)", "class_method_signature": "PersistenceServiceImpl.findComponentsByBaseDisplayedNamePattern(String pattern, Properties props)", "testcase": false, "constructor": false}, {"identifier": "newAbstractComponent", "parameters": "(ComponentSpec cs)", "modifiers": "", "return": "AbstractComponent", "signature": "AbstractComponent newAbstractComponent(ComponentSpec cs)", "full_signature": " AbstractComponent newAbstractComponent(ComponentSpec cs)", "class_method_signature": "PersistenceServiceImpl.newAbstractComponent(ComponentSpec cs)", "testcase": false, "constructor": false}, {"identifier": "createAbstractComponent", "parameters": "(ComponentSpec cs)", "modifiers": "private", "return": "AbstractComponent", "signature": "AbstractComponent createAbstractComponent(ComponentSpec cs)", "full_signature": "private AbstractComponent createAbstractComponent(ComponentSpec cs)", "class_method_signature": "PersistenceServiceImpl.createAbstractComponent(ComponentSpec cs)", "testcase": false, "constructor": false}, {"identifier": "getComponent", "parameters": "(String externalKey, Class<T> componentType)", "modifiers": "@Override public", "return": "T", "signature": "T getComponent(String externalKey, Class<T> componentType)", "full_signature": "@Override public T getComponent(String externalKey, Class<T> componentType)", "class_method_signature": "PersistenceServiceImpl.getComponent(String externalKey, Class<T> componentType)", "testcase": false, "constructor": false}, {"identifier": "getCurrentTimeFromDatabase", "parameters": "()", "modifiers": "private", "return": "Date", "signature": "Date getCurrentTimeFromDatabase()", "full_signature": "private Date getCurrentTimeFromDatabase()", "class_method_signature": "PersistenceServiceImpl.getCurrentTimeFromDatabase()", "testcase": false, "constructor": false}, {"identifier": "iterateOverChangedComponents", "parameters": "(ChangedComponentVisitor v)", "modifiers": "private", "return": "void", "signature": "void iterateOverChangedComponents(ChangedComponentVisitor v)", "full_signature": "private void iterateOverChangedComponents(ChangedComponentVisitor v)", "class_method_signature": "PersistenceServiceImpl.iterateOverChangedComponents(ChangedComponentVisitor v)", "testcase": false, "constructor": false}, {"identifier": "cleanCacheIfNecessary", "parameters": "(String componentId, int latestVersion)", "modifiers": "private", "return": "void", "signature": "void cleanCacheIfNecessary(String componentId, int latestVersion)", "full_signature": "private void cleanCacheIfNecessary(String componentId, int latestVersion)", "class_method_signature": "PersistenceServiceImpl.cleanCacheIfNecessary(String componentId, int latestVersion)", "testcase": false, "constructor": false}, {"identifier": "updateComponentIfNecessary", "parameters": "(final ComponentSpec c, final Collection<AbstractComponent> cachedComponents)", "modifiers": "private", "return": "void", "signature": "void updateComponentIfNecessary(final ComponentSpec c, final Collection<AbstractComponent> cachedComponents)", "full_signature": "private void updateComponentIfNecessary(final ComponentSpec c, final Collection<AbstractComponent> cachedComponents)", "class_method_signature": "PersistenceServiceImpl.updateComponentIfNecessary(final ComponentSpec c, final Collection<AbstractComponent> cachedComponents)", "testcase": false, "constructor": false}, {"identifier": "updateComponentsFromDatabase", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void updateComponentsFromDatabase()", "full_signature": "@Override public void updateComponentsFromDatabase()", "class_method_signature": "PersistenceServiceImpl.updateComponentsFromDatabase()", "testcase": false, "constructor": false}, {"identifier": "getBootstrapComponents", "parameters": "()", "modifiers": "@Override public", "return": "List<AbstractComponent>", "signature": "List<AbstractComponent> getBootstrapComponents()", "full_signature": "@Override public List<AbstractComponent> getBootstrapComponents()", "class_method_signature": "PersistenceServiceImpl.getBootstrapComponents()", "testcase": false, "constructor": false}, {"identifier": "lookupBootstrapComponents", "parameters": "()", "modifiers": "private", "return": "List<String>", "signature": "List<String> lookupBootstrapComponents()", "full_signature": "private List<String> lookupBootstrapComponents()", "class_method_signature": "PersistenceServiceImpl.lookupBootstrapComponents()", "testcase": false, "constructor": false}, {"identifier": "cleanCache", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void cleanCache()", "full_signature": "private void cleanCache()", "class_method_signature": "PersistenceServiceImpl.cleanCache()", "testcase": false, "constructor": false}, {"identifier": "addNewUser", "parameters": "(String userId, String groupId, AbstractComponent mysandbox, AbstractComponent dropbox)", "modifiers": "@Override public", "return": "void", "signature": "void addNewUser(String userId, String groupId, AbstractComponent mysandbox, AbstractComponent dropbox)", "full_signature": "@Override public void addNewUser(String userId, String groupId, AbstractComponent mysandbox, AbstractComponent dropbox)", "class_method_signature": "PersistenceServiceImpl.addNewUser(String userId, String groupId, AbstractComponent mysandbox, AbstractComponent dropbox)", "testcase": false, "constructor": false}, {"identifier": "getAllProperties", "parameters": "(String componentId)", "modifiers": "@Override public", "return": "Map<String, ExtendedProperties>", "signature": "Map<String, ExtendedProperties> getAllProperties(String componentId)", "full_signature": "@Override public Map<String, ExtendedProperties> getAllProperties(String componentId)", "class_method_signature": "PersistenceServiceImpl.getAllProperties(String componentId)", "testcase": false, "constructor": false}, {"identifier": "getComponent", "parameters": "(String externalKey,\n\t\t\tString componentType)", "modifiers": "@Override public", "return": "AbstractComponent", "signature": "AbstractComponent getComponent(String externalKey,\n\t\t\tString componentType)", "full_signature": "@Override public AbstractComponent getComponent(String externalKey,\n\t\t\tString componentType)", "class_method_signature": "PersistenceServiceImpl.getComponent(String externalKey,\n\t\t\tString componentType)", "testcase": false, "constructor": false}, {"identifier": "tagComponents", "parameters": "(String tag,\n\t\t\tCollection<AbstractComponent> components)", "modifiers": "@Override public", "return": "void", "signature": "void tagComponents(String tag,\n\t\t\tCollection<AbstractComponent> components)", "full_signature": "@Override public void tagComponents(String tag,\n\t\t\tCollection<AbstractComponent> components)", "class_method_signature": "PersistenceServiceImpl.tagComponents(String tag,\n\t\t\tCollection<AbstractComponent> components)", "testcase": false, "constructor": false}], "file": "databasePersistence/src/main/java/gov/nasa/arc/mct/dbpersistence/service/PersistenceServiceImpl.java"}, "focal_method": {"identifier": "persist", "parameters": "(Collection<AbstractComponent> componentsToPersist)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void persist(Collection<AbstractComponent> componentsToPersist) {\n\t\tEntityManager em = entityManagerFactory.createEntityManager();\n\t\tlastModified = lastPollTime != null ? \n\t\t\t\tlastPollTime.getAdjustedNow() : // Predict database time \n\t\t\t\tgetCurrentTimeFromDatabase();   // Or read it, if we haven't yet\n\t\tif (lastModified == null) {\n\t\t\tlastModified = new Date(); // Use system time as a fallback\n\t\t}\n\t\ttry {\n\t\t\tem.getTransaction().begin();\n\t\t\t// first persist all new components, without relationships, model, and view states \n\t\t\tfor (AbstractComponent nc : componentsToPersist) {\n\t\t\t\tif (nc.getCreationDate() == null) {\n\t\t\t\t\tComponentSpec cs = new ComponentSpec();\n\t\t\t\t\tupdateComponentSpec(nc, cs, em, false);\n\t\t\t\t\tem.persist(cs);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// now persist the data\n\t\t\tfor (AbstractComponent c : componentsToPersist) {\n\t\t\t\tupdateComponentSpec(c, em.find(ComponentSpec.class, c.getComponentId()), em, true);\n\t\t\t}\n\t\t\tem.flush();\n\t\t\tem.getTransaction().commit();\n\t\t\tfor (AbstractComponent c : componentsToPersist) {\n\t\t\t\tComponentInitializer ci = c.getCapability(ComponentInitializer.class);\n\t\t\t\tci.componentSaved();\n\t\t\t\tif (c.getCreationDate() == null) {\n\t\t\t\t\tci.setCreationDate(em.find(ComponentSpec.class, c.getComponentId()).getDateCreated());\n\t\t\t\t}\n\t\t\t\tc.getCapability(Updatable.class).setVersion(em.find(ComponentSpec.class, c.getComponentId()).getObjVersion());\n\t\t\t\tc.componentSaved();\n\t\t\t\tList<WeakReference<AbstractComponent>> list = cache.get(c.getComponentId());\n\t\t\t\tif (list == null) {\n\t\t\t\t\tlist = Collections.synchronizedList(new LinkedList<WeakReference<AbstractComponent>>());\n\t\t\t\t\tcache.put(c.getComponentId(), list);\n\t\t\t\t}\n\t\t\t\tlist.add(new WeakReference<AbstractComponent>(c));\n\t\t\t}\n\t\t} catch(OptimisticLockException ole) {\n\t\t\tthrow new gov.nasa.arc.mct.api.persistence.OptimisticLockException(ole);\n\t\t} finally {\n\t\t\tif (em.getTransaction().isActive()) {\n\t\t\t\tem.getTransaction().rollback();\n\t\t\t}\n\t\t\tem.close();\n\t\t}\n\t}", "signature": "void persist(Collection<AbstractComponent> componentsToPersist)", "full_signature": "@Override public void persist(Collection<AbstractComponent> componentsToPersist)", "class_method_signature": "PersistenceServiceImpl.persist(Collection<AbstractComponent> componentsToPersist)", "testcase": false, "constructor": false, "invocations": ["createEntityManager", "getAdjustedNow", "getCurrentTimeFromDatabase", "begin", "getTransaction", "getCreationDate", "updateComponentSpec", "persist", "updateComponentSpec", "find", "getComponentId", "flush", "commit", "getTransaction", "getCapability", "componentSaved", "getCreationDate", "setCreationDate", "getDateCreated", "find", "getComponentId", "setVersion", "getCapability", "getObjVersion", "find", "getComponentId", "componentSaved", "get", "getComponentId", "synchronizedList", "put", "getComponentId", "add", "isActive", "getTransaction", "rollback", "getTransaction", "close"]}, "repository": {"repo_id": 4193864, "url": "https://github.com/nasa/mct", "language": "Java", "is_fork": false, "fork_count": 272, "stargazer_count": 804, "size": 8823, "license": "licensed"}}