{"test_class": {"identifier": "InventoryServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Connection sampleFeedConnection;", "modifier": "", "type": "Connection", "declarator": "sampleFeedConnection", "var_name": "sampleFeedConnection"}, {"original_string": "InventoryServiceImpl inventoryService;", "modifier": "", "type": "InventoryServiceImpl", "declarator": "inventoryService", "var_name": "inventoryService"}, {"original_string": "MessageService mockMessageService;", "modifier": "", "type": "MessageService", "declarator": "mockMessageService", "var_name": "mockMessageService"}], "file": "core/src/test/java/com/streamreduce/core/service/InventoryServiceImplTest.java"}, "test_case": {"identifier": "testRefreshFeedMessagesIncludesFeedEntryDetails", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRefreshFeedMessagesIncludesFeedEntryDetails() throws Exception {\n        final List<FeedEntryDetails> feedEntryDetailList = Lists.newArrayList();\n        doAnswer(new Answer() {\n            @Override\n            public Object answer(InvocationOnMock invocation) throws Throwable {\n                FeedEntryDetails feedEntryDetails = (FeedEntryDetails) invocation.getArguments()[3];\n                feedEntryDetailList.add(feedEntryDetails);\n                return null;\n            }\n        }).when(mockMessageService).sendActivityMessage(any(Event.class),\n                any(Connection.class),\n                anyLong(),\n                any(SobaMessageDetails.class));\n\n        inventoryService.eventService = mock(EventService.class);\n\n        ReflectionTestUtils.setField(inventoryService, \"messageService\", mockMessageService);\n\n        inventoryService.pullInventoryItemActivity(sampleFeedConnection);\n\n        assertEquals(2, feedEntryDetailList.size());\n\n        FeedEntryDetails degradedPerformanceDetails = feedEntryDetailList.get(0);\n        assertEquals(\"Informational message: Investigating degraded performance of EBS volumes\", degradedPerformanceDetails.getTitle());\n        assertEquals(\"http://status.aws.amazon.com/#EC2_1330560778\", degradedPerformanceDetails.getUrl());\n\n        SimpleDateFormat sdf = new SimpleDateFormat(\"EEE, dd MMM yyyy HH:mm:ss zzz\");\n        assertEquals(sdf.parse(\"Wed, 29 Feb 2012 16:12:58 PST\"), degradedPerformanceDetails.getPublishedDate());\n        assertTrue(degradedPerformanceDetails.getDescription().startsWith(\"We are investigating\"));\n    }", "signature": "void testRefreshFeedMessagesIncludesFeedEntryDetails()", "full_signature": "@Test public void testRefreshFeedMessagesIncludesFeedEntryDetails()", "class_method_signature": "InventoryServiceImplTest.testRefreshFeedMessagesIncludesFeedEntryDetails()", "testcase": true, "constructor": false, "invocations": ["newArrayList", "sendActivityMessage", "when", "doAnswer", "getArguments", "add", "any", "any", "anyLong", "any", "mock", "setField", "pullInventoryItemActivity", "assertEquals", "size", "get", "assertEquals", "getTitle", "assertEquals", "getUrl", "assertEquals", "parse", "getPublishedDate", "assertTrue", "startsWith", "getDescription"]}, "focal_class": {"identifier": "InventoryServiceImpl", "superclass": "", "interfaces": "implements InventoryService", "fields": [{"original_string": "protected transient Logger logger = LoggerFactory.getLogger(getClass());", "modifier": "protected transient", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(getClass())", "var_name": "logger"}, {"original_string": "private Map<String, Unit> ec2CloudWatchMetricNames = null;", "modifier": "private", "type": "Map<String, Unit>", "declarator": "ec2CloudWatchMetricNames = null", "var_name": "ec2CloudWatchMetricNames"}, {"original_string": "private Set<Statistics> ec2CloudWatchStatisticsSet = ImmutableSet.of(\n            Statistics.AVERAGE,\n            Statistics.MINIMUM,\n            Statistics.MAXIMUM\n    );", "modifier": "private", "type": "Set<Statistics>", "declarator": "ec2CloudWatchStatisticsSet = ImmutableSet.of(\n            Statistics.AVERAGE,\n            Statistics.MINIMUM,\n            Statistics.MAXIMUM\n    )", "var_name": "ec2CloudWatchStatisticsSet"}, {"original_string": "private final Cache<ObjectId, ExternalIntegrationClient> externalClientCache =\n            CacheBuilder.newBuilder()\n                        .expireAfterWrite(3, TimeUnit.MINUTES)\n                        .removalListener(new RemovalListener<ObjectId, ExternalIntegrationClient>() {\n                            /**\n                             * {@inheritDoc}\n                             */\n                            @Override\n                            public void onRemoval(RemovalNotification<ObjectId, ExternalIntegrationClient> n) {\n                                ExternalIntegrationClient client = n.getValue();\n\n                                if (client != null) {\n                                    logger.debug(\"Cleaning up ExternalIntegrationClient [\" + client.getConnectionId() + \"]\");\n                                    client.cleanUp();\n                                }\n                            }\n                        }).build();", "modifier": "private final", "type": "Cache<ObjectId, ExternalIntegrationClient>", "declarator": "externalClientCache =\n            CacheBuilder.newBuilder()\n                        .expireAfterWrite(3, TimeUnit.MINUTES)\n                        .removalListener(new RemovalListener<ObjectId, ExternalIntegrationClient>() {\n                            /**\n                             * {@inheritDoc}\n                             */\n                            @Override\n                            public void onRemoval(RemovalNotification<ObjectId, ExternalIntegrationClient> n) {\n                                ExternalIntegrationClient client = n.getValue();\n\n                                if (client != null) {\n                                    logger.debug(\"Cleaning up ExternalIntegrationClient [\" + client.getConnectionId() + \"]\");\n                                    client.cleanUp();\n                                }\n                            }\n                        }).build()", "var_name": "externalClientCache"}, {"original_string": "@Autowired\n    InventoryItemDAO inventoryItemDAO;", "modifier": "@Autowired", "type": "InventoryItemDAO", "declarator": "inventoryItemDAO", "var_name": "inventoryItemDAO"}, {"original_string": "@Autowired\n    GenericCollectionDAO genericCollectionDAO;", "modifier": "@Autowired", "type": "GenericCollectionDAO", "declarator": "genericCollectionDAO", "var_name": "genericCollectionDAO"}, {"original_string": "@Autowired\n    EmailService emailService;", "modifier": "@Autowired", "type": "EmailService", "declarator": "emailService", "var_name": "emailService"}, {"original_string": "@Autowired\n    EventService eventService;", "modifier": "@Autowired", "type": "EventService", "declarator": "eventService", "var_name": "eventService"}, {"original_string": "@Autowired\n    MessageService messageService;", "modifier": "@Autowired", "type": "MessageService", "declarator": "messageService", "var_name": "messageService"}, {"original_string": "@Autowired\n    ConnectionService connectionService;", "modifier": "@Autowired", "type": "ConnectionService", "declarator": "connectionService", "var_name": "connectionService"}, {"original_string": "@Autowired\n    ConnectionProviderFactory connectionProviderFactory;", "modifier": "@Autowired", "type": "ConnectionProviderFactory", "declarator": "connectionProviderFactory", "var_name": "connectionProviderFactory"}], "methods": [{"identifier": "getInventoryItemPayload", "parameters": "(InventoryItem inventoryItem)", "modifiers": "@Override public", "return": "BasicDBObject", "signature": "BasicDBObject getInventoryItemPayload(InventoryItem inventoryItem)", "full_signature": "@Override public BasicDBObject getInventoryItemPayload(InventoryItem inventoryItem)", "class_method_signature": "InventoryServiceImpl.getInventoryItemPayload(InventoryItem inventoryItem)", "testcase": false, "constructor": false}, {"identifier": "createInventoryItem", "parameters": "(Connection connection, JSONObject json)", "modifiers": "@Override public", "return": "InventoryItem", "signature": "InventoryItem createInventoryItem(Connection connection, JSONObject json)", "full_signature": "@Override public InventoryItem createInventoryItem(Connection connection, JSONObject json)", "class_method_signature": "InventoryServiceImpl.createInventoryItem(Connection connection, JSONObject json)", "testcase": false, "constructor": false}, {"identifier": "updateInventoryItem", "parameters": "(InventoryItem inventoryItem, JSONObject json)", "modifiers": "@Override public", "return": "InventoryItem", "signature": "InventoryItem updateInventoryItem(InventoryItem inventoryItem, JSONObject json)", "full_signature": "@Override public InventoryItem updateInventoryItem(InventoryItem inventoryItem, JSONObject json)", "class_method_signature": "InventoryServiceImpl.updateInventoryItem(InventoryItem inventoryItem, JSONObject json)", "testcase": false, "constructor": false}, {"identifier": "updateInventoryItem", "parameters": "(InventoryItem inventoryItem, boolean silentUpdate)", "modifiers": "@Override public", "return": "InventoryItem", "signature": "InventoryItem updateInventoryItem(InventoryItem inventoryItem, boolean silentUpdate)", "full_signature": "@Override public InventoryItem updateInventoryItem(InventoryItem inventoryItem, boolean silentUpdate)", "class_method_signature": "InventoryServiceImpl.updateInventoryItem(InventoryItem inventoryItem, boolean silentUpdate)", "testcase": false, "constructor": false}, {"identifier": "deleteInventoryItem", "parameters": "(InventoryItem inventoryItem)", "modifiers": "@Override public", "return": "void", "signature": "void deleteInventoryItem(InventoryItem inventoryItem)", "full_signature": "@Override public void deleteInventoryItem(InventoryItem inventoryItem)", "class_method_signature": "InventoryServiceImpl.deleteInventoryItem(InventoryItem inventoryItem)", "testcase": false, "constructor": false}, {"identifier": "markInventoryItemDeleted", "parameters": "(InventoryItem inventoryItem)", "modifiers": "@Override public", "return": "void", "signature": "void markInventoryItemDeleted(InventoryItem inventoryItem)", "full_signature": "@Override public void markInventoryItemDeleted(InventoryItem inventoryItem)", "class_method_signature": "InventoryServiceImpl.markInventoryItemDeleted(InventoryItem inventoryItem)", "testcase": false, "constructor": false}, {"identifier": "getInventoryItems", "parameters": "(Connection connection)", "modifiers": "@Override public", "return": "List<InventoryItem>", "signature": "List<InventoryItem> getInventoryItems(Connection connection)", "full_signature": "@Override public List<InventoryItem> getInventoryItems(Connection connection)", "class_method_signature": "InventoryServiceImpl.getInventoryItems(Connection connection)", "testcase": false, "constructor": false}, {"identifier": "getInventoryItems", "parameters": "(Connection connection, User user)", "modifiers": "@Override public", "return": "List<InventoryItem>", "signature": "List<InventoryItem> getInventoryItems(Connection connection, User user)", "full_signature": "@Override public List<InventoryItem> getInventoryItems(Connection connection, User user)", "class_method_signature": "InventoryServiceImpl.getInventoryItems(Connection connection, User user)", "testcase": false, "constructor": false}, {"identifier": "getInventoryItems", "parameters": "(ObjectId connectionId)", "modifiers": "@Override public", "return": "List<InventoryItem>", "signature": "List<InventoryItem> getInventoryItems(ObjectId connectionId)", "full_signature": "@Override public List<InventoryItem> getInventoryItems(ObjectId connectionId)", "class_method_signature": "InventoryServiceImpl.getInventoryItems(ObjectId connectionId)", "testcase": false, "constructor": false}, {"identifier": "getInventoryItemsForExternalId", "parameters": "(String externalId)", "modifiers": "@Override public", "return": "List<InventoryItem>", "signature": "List<InventoryItem> getInventoryItemsForExternalId(String externalId)", "full_signature": "@Override public List<InventoryItem> getInventoryItemsForExternalId(String externalId)", "class_method_signature": "InventoryServiceImpl.getInventoryItemsForExternalId(String externalId)", "testcase": false, "constructor": false}, {"identifier": "getInventoryItem", "parameters": "(ObjectId objectId)", "modifiers": "@Override public", "return": "InventoryItem", "signature": "InventoryItem getInventoryItem(ObjectId objectId)", "full_signature": "@Override public InventoryItem getInventoryItem(ObjectId objectId)", "class_method_signature": "InventoryServiceImpl.getInventoryItem(ObjectId objectId)", "testcase": false, "constructor": false}, {"identifier": "getInventoryItemForExternalId", "parameters": "(Connection connection, String externalId)", "modifiers": "@Override public", "return": "InventoryItem", "signature": "InventoryItem getInventoryItemForExternalId(Connection connection, String externalId)", "full_signature": "@Override public InventoryItem getInventoryItemForExternalId(Connection connection, String externalId)", "class_method_signature": "InventoryServiceImpl.getInventoryItemForExternalId(Connection connection, String externalId)", "testcase": false, "constructor": false}, {"identifier": "refreshInventoryItemCache", "parameters": "(Connection connection)", "modifiers": "@Override public", "return": "void", "signature": "void refreshInventoryItemCache(Connection connection)", "full_signature": "@Override public void refreshInventoryItemCache(Connection connection)", "class_method_signature": "InventoryServiceImpl.refreshInventoryItemCache(Connection connection)", "testcase": false, "constructor": false}, {"identifier": "pullInventoryItemActivity", "parameters": "(Connection connection)", "modifiers": "@Override public", "return": "void", "signature": "void pullInventoryItemActivity(Connection connection)", "full_signature": "@Override public void pullInventoryItemActivity(Connection connection)", "class_method_signature": "InventoryServiceImpl.pullInventoryItemActivity(Connection connection)", "testcase": false, "constructor": false}, {"identifier": "getComputeInstanceIPAddress", "parameters": "(InventoryItem inventoryItem)", "modifiers": "@Override public", "return": "String", "signature": "String getComputeInstanceIPAddress(InventoryItem inventoryItem)", "full_signature": "@Override public String getComputeInstanceIPAddress(InventoryItem inventoryItem)", "class_method_signature": "InventoryServiceImpl.getComputeInstanceIPAddress(InventoryItem inventoryItem)", "testcase": false, "constructor": false}, {"identifier": "getComputeInstanceIPAddress", "parameters": "(JSONObject json)", "modifiers": "@Override public", "return": "String", "signature": "String getComputeInstanceIPAddress(JSONObject json)", "full_signature": "@Override public String getComputeInstanceIPAddress(JSONObject json)", "class_method_signature": "InventoryServiceImpl.getComputeInstanceIPAddress(JSONObject json)", "testcase": false, "constructor": false}, {"identifier": "getComputeInstanceOSName", "parameters": "(InventoryItem inventoryItem)", "modifiers": "@Override public", "return": "String", "signature": "String getComputeInstanceOSName(InventoryItem inventoryItem)", "full_signature": "@Override public String getComputeInstanceOSName(InventoryItem inventoryItem)", "class_method_signature": "InventoryServiceImpl.getComputeInstanceOSName(InventoryItem inventoryItem)", "testcase": false, "constructor": false}, {"identifier": "getComputeInstanceOSName", "parameters": "(JSONObject json)", "modifiers": "@Override public", "return": "String", "signature": "String getComputeInstanceOSName(JSONObject json)", "full_signature": "@Override public String getComputeInstanceOSName(JSONObject json)", "class_method_signature": "InventoryServiceImpl.getComputeInstanceOSName(JSONObject json)", "testcase": false, "constructor": false}, {"identifier": "getLocationByScope", "parameters": "(InventoryItem inventoryItem, LocationScope scope)", "modifiers": "@Override public", "return": "Location", "signature": "Location getLocationByScope(InventoryItem inventoryItem, LocationScope scope)", "full_signature": "@Override public Location getLocationByScope(InventoryItem inventoryItem, LocationScope scope)", "class_method_signature": "InventoryServiceImpl.getLocationByScope(InventoryItem inventoryItem, LocationScope scope)", "testcase": false, "constructor": false}, {"identifier": "getLocationByScope", "parameters": "(JSONObject json, LocationScope scope)", "modifiers": "@Override public", "return": "Location", "signature": "Location getLocationByScope(JSONObject json, LocationScope scope)", "full_signature": "@Override public Location getLocationByScope(JSONObject json, LocationScope scope)", "class_method_signature": "InventoryServiceImpl.getLocationByScope(JSONObject json, LocationScope scope)", "testcase": false, "constructor": false}, {"identifier": "addHashtag", "parameters": "(InventoryItem inventoryItem, SobaObject tagger, String tag)", "modifiers": "@Override public", "return": "void", "signature": "void addHashtag(InventoryItem inventoryItem, SobaObject tagger, String tag)", "full_signature": "@Override public void addHashtag(InventoryItem inventoryItem, SobaObject tagger, String tag)", "class_method_signature": "InventoryServiceImpl.addHashtag(InventoryItem inventoryItem, SobaObject tagger, String tag)", "testcase": false, "constructor": false}, {"identifier": "removeHashtag", "parameters": "(InventoryItem inventoryItem, SobaObject tagger, String tag)", "modifiers": "@Override public", "return": "void", "signature": "void removeHashtag(InventoryItem inventoryItem, SobaObject tagger, String tag)", "full_signature": "@Override public void removeHashtag(InventoryItem inventoryItem, SobaObject tagger, String tag)", "class_method_signature": "InventoryServiceImpl.removeHashtag(InventoryItem inventoryItem, SobaObject tagger, String tag)", "testcase": false, "constructor": false}, {"identifier": "rebootComputeInstance", "parameters": "(InventoryItem inventoryItem)", "modifiers": "@Override public", "return": "void", "signature": "void rebootComputeInstance(InventoryItem inventoryItem)", "full_signature": "@Override public void rebootComputeInstance(InventoryItem inventoryItem)", "class_method_signature": "InventoryServiceImpl.rebootComputeInstance(InventoryItem inventoryItem)", "testcase": false, "constructor": false}, {"identifier": "destroyComputeInstance", "parameters": "(InventoryItem inventoryItem)", "modifiers": "@Override public", "return": "void", "signature": "void destroyComputeInstance(InventoryItem inventoryItem)", "full_signature": "@Override public void destroyComputeInstance(InventoryItem inventoryItem)", "class_method_signature": "InventoryServiceImpl.destroyComputeInstance(InventoryItem inventoryItem)", "testcase": false, "constructor": false}, {"identifier": "buildLocationFromJSON", "parameters": "(JSONObject json)", "modifiers": "private", "return": "Location", "signature": "Location buildLocationFromJSON(JSONObject json)", "full_signature": "private Location buildLocationFromJSON(JSONObject json)", "class_method_signature": "InventoryServiceImpl.buildLocationFromJSON(JSONObject json)", "testcase": false, "constructor": false}, {"identifier": "extendAWSInventoryItem", "parameters": "(InventoryItem inventoryItem, JSONObject json)", "modifiers": "private", "return": "void", "signature": "void extendAWSInventoryItem(InventoryItem inventoryItem, JSONObject json)", "full_signature": "private void extendAWSInventoryItem(InventoryItem inventoryItem, JSONObject json)", "class_method_signature": "InventoryServiceImpl.extendAWSInventoryItem(InventoryItem inventoryItem, JSONObject json)", "testcase": false, "constructor": false}, {"identifier": "extendGitHubInventoryItem", "parameters": "(InventoryItem inventoryItem, JSONObject json)", "modifiers": "private", "return": "void", "signature": "void extendGitHubInventoryItem(InventoryItem inventoryItem, JSONObject json)", "full_signature": "private void extendGitHubInventoryItem(InventoryItem inventoryItem, JSONObject json)", "class_method_signature": "InventoryServiceImpl.extendGitHubInventoryItem(InventoryItem inventoryItem, JSONObject json)", "testcase": false, "constructor": false}, {"identifier": "extendGoogleAnalyticsInventoryItem", "parameters": "(InventoryItem inventoryItem, JSONObject json)", "modifiers": "private", "return": "void", "signature": "void extendGoogleAnalyticsInventoryItem(InventoryItem inventoryItem, JSONObject json)", "full_signature": "private void extendGoogleAnalyticsInventoryItem(InventoryItem inventoryItem, JSONObject json)", "class_method_signature": "InventoryServiceImpl.extendGoogleAnalyticsInventoryItem(InventoryItem inventoryItem, JSONObject json)", "testcase": false, "constructor": false}, {"identifier": "extendJiraInventoryItem", "parameters": "(InventoryItem inventoryItem, JSONObject json)", "modifiers": "private", "return": "void", "signature": "void extendJiraInventoryItem(InventoryItem inventoryItem, JSONObject json)", "full_signature": "private void extendJiraInventoryItem(InventoryItem inventoryItem, JSONObject json)", "class_method_signature": "InventoryServiceImpl.extendJiraInventoryItem(InventoryItem inventoryItem, JSONObject json)", "testcase": false, "constructor": false}, {"identifier": "extendPingdomInventoryItem", "parameters": "(InventoryItem inventoryItem, JSONObject json)", "modifiers": "private", "return": "void", "signature": "void extendPingdomInventoryItem(InventoryItem inventoryItem, JSONObject json)", "full_signature": "private void extendPingdomInventoryItem(InventoryItem inventoryItem, JSONObject json)", "class_method_signature": "InventoryServiceImpl.extendPingdomInventoryItem(InventoryItem inventoryItem, JSONObject json)", "testcase": false, "constructor": false}, {"identifier": "extendGenericInventoryItem", "parameters": "(InventoryItem inventoryItem, JSONObject json)", "modifiers": "private", "return": "void", "signature": "void extendGenericInventoryItem(InventoryItem inventoryItem, JSONObject json)", "full_signature": "private void extendGenericInventoryItem(InventoryItem inventoryItem, JSONObject json)", "class_method_signature": "InventoryServiceImpl.extendGenericInventoryItem(InventoryItem inventoryItem, JSONObject json)", "testcase": false, "constructor": false}, {"identifier": "handleHashtagEvent", "parameters": "(EventId eventId, InventoryItem inventoryItem, SobaObject tagger, String tag)", "modifiers": "private", "return": "void", "signature": "void handleHashtagEvent(EventId eventId, InventoryItem inventoryItem, SobaObject tagger, String tag)", "full_signature": "private void handleHashtagEvent(EventId eventId, InventoryItem inventoryItem, SobaObject tagger, String tag)", "class_method_signature": "InventoryServiceImpl.handleHashtagEvent(EventId eventId, InventoryItem inventoryItem, SobaObject tagger, String tag)", "testcase": false, "constructor": false}, {"identifier": "getInventoryItemMap", "parameters": "(Connection connection)", "modifiers": "private", "return": "Map<String, InventoryItem>", "signature": "Map<String, InventoryItem> getInventoryItemMap(Connection connection)", "full_signature": "private Map<String, InventoryItem> getInventoryItemMap(Connection connection)", "class_method_signature": "InventoryServiceImpl.getInventoryItemMap(Connection connection)", "testcase": false, "constructor": false}, {"identifier": "pullEC2CloudWatchMetrics", "parameters": "(Connection connection)", "modifiers": "private", "return": "void", "signature": "void pullEC2CloudWatchMetrics(Connection connection)", "full_signature": "private void pullEC2CloudWatchMetrics(Connection connection)", "class_method_signature": "InventoryServiceImpl.pullEC2CloudWatchMetrics(Connection connection)", "testcase": false, "constructor": false}, {"identifier": "pullGitHubActivity", "parameters": "(Connection connection)", "modifiers": "private", "return": "void", "signature": "void pullGitHubActivity(Connection connection)", "full_signature": "private void pullGitHubActivity(Connection connection)", "class_method_signature": "InventoryServiceImpl.pullGitHubActivity(Connection connection)", "testcase": false, "constructor": false}, {"identifier": "pullGoogleAnalyticsActivity", "parameters": "(Connection connection)", "modifiers": "private", "return": "void", "signature": "void pullGoogleAnalyticsActivity(Connection connection)", "full_signature": "private void pullGoogleAnalyticsActivity(Connection connection)", "class_method_signature": "InventoryServiceImpl.pullGoogleAnalyticsActivity(Connection connection)", "testcase": false, "constructor": false}, {"identifier": "pullJiraActivity", "parameters": "(Connection connection)", "modifiers": "private", "return": "void", "signature": "void pullJiraActivity(Connection connection)", "full_signature": "private void pullJiraActivity(Connection connection)", "class_method_signature": "InventoryServiceImpl.pullJiraActivity(Connection connection)", "testcase": false, "constructor": false}, {"identifier": "pullFeedActivity", "parameters": "(Connection connection)", "modifiers": "private", "return": "void", "signature": "void pullFeedActivity(Connection connection)", "full_signature": "private void pullFeedActivity(Connection connection)", "class_method_signature": "InventoryServiceImpl.pullFeedActivity(Connection connection)", "testcase": false, "constructor": false}, {"identifier": "pullPingdomActivity", "parameters": "(Connection connection)", "modifiers": "private", "return": "void", "signature": "void pullPingdomActivity(Connection connection)", "full_signature": "private void pullPingdomActivity(Connection connection)", "class_method_signature": "InventoryServiceImpl.pullPingdomActivity(Connection connection)", "testcase": false, "constructor": false}, {"identifier": "pullTwitterActivity", "parameters": "(Connection connection)", "modifiers": "private", "return": "void", "signature": "void pullTwitterActivity(Connection connection)", "full_signature": "private void pullTwitterActivity(Connection connection)", "class_method_signature": "InventoryServiceImpl.pullTwitterActivity(Connection connection)", "testcase": false, "constructor": false}, {"identifier": "determineMessageBodyAsJsonFromSyndEntry", "parameters": "(SyndEntry entry)", "modifiers": "private", "return": "String", "signature": "String determineMessageBodyAsJsonFromSyndEntry(SyndEntry entry)", "full_signature": "private String determineMessageBodyAsJsonFromSyndEntry(SyndEntry entry)", "class_method_signature": "InventoryServiceImpl.determineMessageBodyAsJsonFromSyndEntry(SyndEntry entry)", "testcase": false, "constructor": false}, {"identifier": "getJiraActivityDetailsFromActivityParts", "parameters": "(Map<String, Object> activityParts)", "modifiers": "private", "return": "JiraActivityDetails", "signature": "JiraActivityDetails getJiraActivityDetailsFromActivityParts(Map<String, Object> activityParts)", "full_signature": "private JiraActivityDetails getJiraActivityDetailsFromActivityParts(Map<String, Object> activityParts)", "class_method_signature": "InventoryServiceImpl.getJiraActivityDetailsFromActivityParts(Map<String, Object> activityParts)", "testcase": false, "constructor": false}, {"identifier": "getClient", "parameters": "(Connection connection)", "modifiers": "private", "return": "ExternalIntegrationClient", "signature": "ExternalIntegrationClient getClient(Connection connection)", "full_signature": "private ExternalIntegrationClient getClient(Connection connection)", "class_method_signature": "InventoryServiceImpl.getClient(Connection connection)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/streamreduce/core/service/InventoryServiceImpl.java"}, "focal_method": {"identifier": "pullInventoryItemActivity", "parameters": "(Connection connection)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void pullInventoryItemActivity(Connection connection)\n            throws ConnectionNotFoundException, InvalidCredentialsException, IOException {\n        Preconditions.checkNotNull(connection, \"connection cannot be null.\");\n\n        String providerId = connection.getProviderId();\n\n        // TODO: pullGitHubActivity and pullJiraActivity could be simplified\n\n        // No other way...\n        if (providerId.equals(ProviderIdConstants.AWS_PROVIDER_ID)) {\n            pullEC2CloudWatchMetrics(connection);\n            // AWS S3 doesn't do CloudWatch metrics so we can tackle \"metrics\" when we do the same for GitHub/Jira\n        } else if (providerId.equals(ProviderIdConstants.GITHUB_PROVIDER_ID)) {\n            pullGitHubActivity(connection);\n        } else if (providerId.equals(ProviderIdConstants.GOOGLE_ANALYTICS_PROVIDER_ID)) {\n            pullGoogleAnalyticsActivity(connection);\n        } else if (providerId.equals(ProviderIdConstants.JIRA_PROVIDER_ID)) {\n            pullJiraActivity(connection);\n        } else if (providerId.equals(ProviderIdConstants.PINGDOM_PROVIDER_ID)) {\n            pullPingdomActivity(connection);\n        } else if (providerId.equals(ProviderIdConstants.FEED_PROVIDER_ID)) {\n            pullFeedActivity(connection);\n        } else if (providerId.equals(ProviderIdConstants.TWITTER_PROVIDER_ID)) {\n            pullTwitterActivity(connection);\n        } else {\n            throw new IllegalArgumentException(providerId + \" does not support polling for activity.\");\n        }\n    }", "signature": "void pullInventoryItemActivity(Connection connection)", "full_signature": "@Override public void pullInventoryItemActivity(Connection connection)", "class_method_signature": "InventoryServiceImpl.pullInventoryItemActivity(Connection connection)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "getProviderId", "equals", "pullEC2CloudWatchMetrics", "equals", "pullGitHubActivity", "equals", "pullGoogleAnalyticsActivity", "equals", "pullJiraActivity", "equals", "pullPingdomActivity", "equals", "pullFeedActivity", "equals", "pullTwitterActivity"]}, "repository": {"repo_id": 6281707, "url": "https://github.com/StreamReduce/streamreduce-core", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 21, "size": 2334, "license": "licensed"}}