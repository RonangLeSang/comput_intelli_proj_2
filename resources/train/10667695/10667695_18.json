{"test_class": {"identifier": "DatasetBuilderTest", "superclass": "extends StandardUnitTest", "interfaces": "", "fields": [], "file": "device-detection-core/src/test/java/fiftyone/mobile/detection/DatasetBuilderTest.java"}, "test_case": {"identifier": "testMemoryStreamDatasetConsistentPartialLruCache", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMemoryStreamDatasetConsistentPartialLruCache () throws IOException {\n\n        IndirectDataset indirectDataset = DatasetBuilder.file()\n                .configureCache(NodesCache, new CacheOptions(20, LruCache.builder()))\n                .configureCache(ValuesCache, new CacheOptions(100, LruCache.builder()))\n                .configureCache(StringsCache, new CacheOptions(100, LruCache.builder()))\n                .build(Filename.LITE_PATTERN_V32);\n        Dataset memoryDataset = MemoryFactory.create(Filename.LITE_PATTERN_V32);\n\n        compareDatasets(indirectDataset, memoryDataset);\n    }", "signature": "void testMemoryStreamDatasetConsistentPartialLruCache()", "full_signature": "@Test public void testMemoryStreamDatasetConsistentPartialLruCache()", "class_method_signature": "DatasetBuilderTest.testMemoryStreamDatasetConsistentPartialLruCache()", "testcase": true, "constructor": false, "invocations": ["build", "configureCache", "configureCache", "configureCache", "file", "builder", "builder", "builder", "create", "compareDatasets"]}, "focal_class": {"identifier": "DatasetBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int STRINGS_CACHE_SIZE = 5000;", "modifier": "public static final", "type": "int", "declarator": "STRINGS_CACHE_SIZE = 5000", "var_name": "STRINGS_CACHE_SIZE"}, {"original_string": "public static final int NODES_CACHE_SIZE = 15000;", "modifier": "public static final", "type": "int", "declarator": "NODES_CACHE_SIZE = 15000", "var_name": "NODES_CACHE_SIZE"}, {"original_string": "public static final int VALUES_CACHE_SIZE = 5000;", "modifier": "public static final", "type": "int", "declarator": "VALUES_CACHE_SIZE = 5000", "var_name": "VALUES_CACHE_SIZE"}, {"original_string": "public static final int PROFILES_CACHE_SIZE = 600;", "modifier": "public static final", "type": "int", "declarator": "PROFILES_CACHE_SIZE = 600", "var_name": "PROFILES_CACHE_SIZE"}, {"original_string": "public static final int SIGNATURES_CACHE_SIZE = 500;", "modifier": "public static final", "type": "int", "declarator": "SIGNATURES_CACHE_SIZE = 500", "var_name": "SIGNATURES_CACHE_SIZE"}, {"original_string": "private static ICacheBuilder lruBuilder = LruCache.builder();", "modifier": "private static", "type": "ICacheBuilder", "declarator": "lruBuilder = LruCache.builder()", "var_name": "lruBuilder"}, {"original_string": "private static EnumMap<CacheType, ICacheOptions> defaultCacheSizes =\n            new EnumMap<CacheType, ICacheOptions>(CacheType.class);", "modifier": "private static", "type": "EnumMap<CacheType, ICacheOptions>", "declarator": "defaultCacheSizes =\n            new EnumMap<CacheType, ICacheOptions>(CacheType.class)", "var_name": "defaultCacheSizes"}, {"original_string": "private static EnumMap<CacheType, ICacheOptions> MtCacheSizes =\n            new EnumMap<CacheType, ICacheOptions>(CacheType.class);", "modifier": "private static", "type": "EnumMap<CacheType, ICacheOptions>", "declarator": "MtCacheSizes =\n            new EnumMap<CacheType, ICacheOptions>(CacheType.class)", "var_name": "MtCacheSizes"}, {"original_string": "private static EnumMap<CacheType, ICacheOptions> StCacheSizes =\n            new EnumMap<CacheType, ICacheOptions>(CacheType.class);", "modifier": "private static", "type": "EnumMap<CacheType, ICacheOptions>", "declarator": "StCacheSizes =\n            new EnumMap<CacheType, ICacheOptions>(CacheType.class)", "var_name": "StCacheSizes"}, {"original_string": "private static EnumMap<CacheType, ICacheOptions> StlmCacheSizes =\n            new EnumMap<CacheType, ICacheOptions>(CacheType.class);", "modifier": "private static", "type": "EnumMap<CacheType, ICacheOptions>", "declarator": "StlmCacheSizes =\n            new EnumMap<CacheType, ICacheOptions>(CacheType.class)", "var_name": "StlmCacheSizes"}, {"original_string": "private static EnumMap<CacheType, ICacheOptions> MtlmCacheSizes =\n            new EnumMap<CacheType, ICacheOptions>(CacheType.class);", "modifier": "private static", "type": "EnumMap<CacheType, ICacheOptions>", "declarator": "MtlmCacheSizes =\n            new EnumMap<CacheType, ICacheOptions>(CacheType.class)", "var_name": "MtlmCacheSizes"}, {"original_string": "private static EnumMap<CacheType, ICacheOptions> HcCacheSizes =\n            new EnumMap<CacheType, ICacheOptions>(CacheType.class);", "modifier": "private static", "type": "EnumMap<CacheType, ICacheOptions>", "declarator": "HcCacheSizes =\n            new EnumMap<CacheType, ICacheOptions>(CacheType.class)", "var_name": "HcCacheSizes"}, {"original_string": "private java.util.Map<CacheType, ICacheOptions> cacheMap = new EnumMap<CacheType, ICacheOptions>(CacheType.class);", "modifier": "private", "type": "java.util.Map<CacheType, ICacheOptions>", "declarator": "cacheMap = new EnumMap<CacheType, ICacheOptions>(CacheType.class)", "var_name": "cacheMap"}], "methods": [{"identifier": "DatasetBuilder", "parameters": "()", "modifiers": "private", "return": "", "signature": " DatasetBuilder()", "full_signature": "private  DatasetBuilder()", "class_method_signature": "DatasetBuilder.DatasetBuilder()", "testcase": false, "constructor": true}, {"identifier": "file", "parameters": "()", "modifiers": "public static", "return": "BuildFromFile", "signature": "BuildFromFile file()", "full_signature": "public static BuildFromFile file()", "class_method_signature": "DatasetBuilder.file()", "testcase": false, "constructor": false}, {"identifier": "buffer", "parameters": "()", "modifiers": "public static", "return": "BuildFromBuffer", "signature": "BuildFromBuffer buffer()", "full_signature": "public static BuildFromBuffer buffer()", "class_method_signature": "DatasetBuilder.buffer()", "testcase": false, "constructor": false}, {"identifier": "getLoaderFor", "parameters": "(Header header, ICache cache, IndirectDataset dataset, BaseEntityFactory factory)", "modifiers": "@SuppressWarnings(\"unchecked\") private static", "return": "EntityLoader<T>", "signature": "EntityLoader<T> getLoaderFor(Header header, ICache cache, IndirectDataset dataset, BaseEntityFactory factory)", "full_signature": "@SuppressWarnings(\"unchecked\") private static EntityLoader<T> getLoaderFor(Header header, ICache cache, IndirectDataset dataset, BaseEntityFactory factory)", "class_method_signature": "DatasetBuilder.getLoaderFor(Header header, ICache cache, IndirectDataset dataset, BaseEntityFactory factory)", "testcase": false, "constructor": false}, {"identifier": "loadForStreaming", "parameters": "(IndirectDataset dataSet, java.util.Map<CacheType, ICacheOptions> cacheConfiguration)", "modifiers": "@SuppressWarnings(\"null\") private static", "return": "void", "signature": "void loadForStreaming(IndirectDataset dataSet, java.util.Map<CacheType, ICacheOptions> cacheConfiguration)", "full_signature": "@SuppressWarnings(\"null\") private static void loadForStreaming(IndirectDataset dataSet, java.util.Map<CacheType, ICacheOptions> cacheConfiguration)", "class_method_signature": "DatasetBuilder.loadForStreaming(IndirectDataset dataSet, java.util.Map<CacheType, ICacheOptions> cacheConfiguration)", "testcase": false, "constructor": false}, {"identifier": "buildCaches", "parameters": "(\n            java.util.Map<CacheType, ICacheOptions> cacheConfiguration)", "modifiers": "private static", "return": "java.util.Map<CacheType, ICache>", "signature": "java.util.Map<CacheType, ICache> buildCaches(\n            java.util.Map<CacheType, ICacheOptions> cacheConfiguration)", "full_signature": "private static java.util.Map<CacheType, ICache> buildCaches(\n            java.util.Map<CacheType, ICacheOptions> cacheConfiguration)", "class_method_signature": "DatasetBuilder.buildCaches(\n            java.util.Map<CacheType, ICacheOptions> cacheConfiguration)", "testcase": false, "constructor": false}], "file": "device-detection-core/src/main/java/fiftyone/mobile/detection/DatasetBuilder.java"}, "focal_method": {"identifier": "file", "parameters": "()", "modifiers": "public static", "return": "BuildFromFile", "body": "public static BuildFromFile file() {\n        return new DatasetBuilder().new BuildFromFile();\n    }", "signature": "BuildFromFile file()", "full_signature": "public static BuildFromFile file()", "class_method_signature": "DatasetBuilder.file()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 10667695, "url": "https://github.com/51Degrees/Java-Device-Detection", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 23, "size": 28560, "license": "licensed"}}