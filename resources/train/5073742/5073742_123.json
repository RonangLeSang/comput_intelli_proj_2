{"test_class": {"identifier": "ProjectMetadataTest", "superclass": "extends ValueObjectTestSupport", "interfaces": "", "fields": [{"original_string": "private Hierarchy hierarchy;", "modifier": "private", "type": "Hierarchy", "declarator": "hierarchy", "var_name": "hierarchy"}, {"original_string": "private Set<File> files;", "modifier": "private", "type": "Set<File>", "declarator": "files", "var_name": "files"}, {"original_string": "private ProjectMetadata metadata;", "modifier": "private", "type": "ProjectMetadata", "declarator": "metadata", "var_name": "metadata"}], "file": "vhdllab-common/src/test/java/hr/fer/zemris/vhdllab/service/workspace/ProjectMetadataTest.java"}, "test_case": {"identifier": "getProject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getProject() {\n        Project project = metadata.getProject();\n        project.setName(\"new_name\");\n        assertFalse(project.equals(metadata.getProject()));\n    }", "signature": "void getProject()", "full_signature": "@Test public void getProject()", "class_method_signature": "ProjectMetadataTest.getProject()", "testcase": true, "constructor": false, "invocations": ["getProject", "setName", "assertFalse", "equals", "getProject"]}, "focal_class": {"identifier": "ProjectMetadata", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 6024599240022056727L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 6024599240022056727L", "var_name": "serialVersionUID"}, {"original_string": "private Set<File> files;", "modifier": "private", "type": "Set<File>", "declarator": "files", "var_name": "files"}, {"original_string": "private Hierarchy hierarchy;", "modifier": "private", "type": "Hierarchy", "declarator": "hierarchy", "var_name": "hierarchy"}], "methods": [{"identifier": "ProjectMetadata", "parameters": "(Project project)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "", "signature": " ProjectMetadata(Project project)", "full_signature": "@SuppressWarnings(\"unchecked\") public  ProjectMetadata(Project project)", "class_method_signature": "ProjectMetadata.ProjectMetadata(Project project)", "testcase": false, "constructor": true}, {"identifier": "ProjectMetadata", "parameters": "(Hierarchy hierarchy, Set<File> files)", "modifiers": "public", "return": "", "signature": " ProjectMetadata(Hierarchy hierarchy, Set<File> files)", "full_signature": "public  ProjectMetadata(Hierarchy hierarchy, Set<File> files)", "class_method_signature": "ProjectMetadata.ProjectMetadata(Hierarchy hierarchy, Set<File> files)", "testcase": false, "constructor": true}, {"identifier": "getProject", "parameters": "()", "modifiers": "public", "return": "Project", "signature": "Project getProject()", "full_signature": "public Project getProject()", "class_method_signature": "ProjectMetadata.getProject()", "testcase": false, "constructor": false}, {"identifier": "getFiles", "parameters": "()", "modifiers": "public", "return": "Set<File>", "signature": "Set<File> getFiles()", "full_signature": "public Set<File> getFiles()", "class_method_signature": "ProjectMetadata.getFiles()", "testcase": false, "constructor": false}, {"identifier": "getHierarchy", "parameters": "()", "modifiers": "public", "return": "Hierarchy", "signature": "Hierarchy getHierarchy()", "full_signature": "public Hierarchy getHierarchy()", "class_method_signature": "ProjectMetadata.getHierarchy()", "testcase": false, "constructor": false}, {"identifier": "setHierarchy", "parameters": "(Hierarchy hierarchy)", "modifiers": "public", "return": "void", "signature": "void setHierarchy(Hierarchy hierarchy)", "full_signature": "public void setHierarchy(Hierarchy hierarchy)", "class_method_signature": "ProjectMetadata.setHierarchy(Hierarchy hierarchy)", "testcase": false, "constructor": false}, {"identifier": "addFile", "parameters": "(File file)", "modifiers": "public", "return": "void", "signature": "void addFile(File file)", "full_signature": "public void addFile(File file)", "class_method_signature": "ProjectMetadata.addFile(File file)", "testcase": false, "constructor": false}, {"identifier": "removeFile", "parameters": "(File file)", "modifiers": "public", "return": "void", "signature": "void removeFile(File file)", "full_signature": "public void removeFile(File file)", "class_method_signature": "ProjectMetadata.removeFile(File file)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ProjectMetadata.toString()", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(java.io.ObjectInputStream in)", "modifiers": "private", "return": "void", "signature": "void readObject(java.io.ObjectInputStream in)", "full_signature": "private void readObject(java.io.ObjectInputStream in)", "class_method_signature": "ProjectMetadata.readObject(java.io.ObjectInputStream in)", "testcase": false, "constructor": false}], "file": "vhdllab-common/src/main/java/hr/fer/zemris/vhdllab/service/workspace/ProjectMetadata.java"}, "focal_method": {"identifier": "getProject", "parameters": "()", "modifiers": "public", "return": "Project", "body": "public Project getProject() {\n        return EntityUtils.lightweightClone(hierarchy.getProject());\n    }", "signature": "Project getProject()", "full_signature": "public Project getProject()", "class_method_signature": "ProjectMetadata.getProject()", "testcase": false, "constructor": false, "invocations": ["lightweightClone", "getProject"]}, "repository": {"repo_id": 5073742, "url": "https://github.com/mbezjak/vhdllab", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 47526, "license": "licensed"}}