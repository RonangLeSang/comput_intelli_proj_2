{"test_class": {"identifier": "ElasticSearchRelatedItemHttpGetRepositoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String FOUND_TWO = \"{\\\"docs\\\":[{\\\"_index\\\":\\\"relateddocs\\\",\\\"_type\\\":\\\"relateddoc\\\",\\\"_id\\\":\\\"1\\\",\\\"_version\\\":1,\\\"found\\\":true, \\\"_source\\\" : {\\\"channel\\\":\\\"de\\\",\\\"site\\\":\\\"amazon\\\",\\\"type\\\":\\\"map\\\",\\\"md5\\\":\\\"a8f346c5ddbbd8d438bc40f0049cc7f8\\\"}},{\\\"_index\\\":\\\"relateddocs\\\",\\\"_type\\\":\\\"relateddoc\\\",\\\"_id\\\":\\\"2\\\",\\\"_version\\\":1,\\\"found\\\":true, \\\"_source\\\" : {\\\"channel\\\":\\\"de\\\",\\\"site\\\":\\\"amazon\\\",\\\"type\\\":\\\"compass\\\",\\\"md5\\\":\\\"71a5120bdf4d998c2b043a681b1bd211\\\"}}]}\";", "modifier": "private final", "type": "String", "declarator": "FOUND_TWO = \"{\\\"docs\\\":[{\\\"_index\\\":\\\"relateddocs\\\",\\\"_type\\\":\\\"relateddoc\\\",\\\"_id\\\":\\\"1\\\",\\\"_version\\\":1,\\\"found\\\":true, \\\"_source\\\" : {\\\"channel\\\":\\\"de\\\",\\\"site\\\":\\\"amazon\\\",\\\"type\\\":\\\"map\\\",\\\"md5\\\":\\\"a8f346c5ddbbd8d438bc40f0049cc7f8\\\"}},{\\\"_index\\\":\\\"relateddocs\\\",\\\"_type\\\":\\\"relateddoc\\\",\\\"_id\\\":\\\"2\\\",\\\"_version\\\":1,\\\"found\\\":true, \\\"_source\\\" : {\\\"channel\\\":\\\"de\\\",\\\"site\\\":\\\"amazon\\\",\\\"type\\\":\\\"compass\\\",\\\"md5\\\":\\\"71a5120bdf4d998c2b043a681b1bd211\\\"}}]}\"", "var_name": "FOUND_TWO"}, {"original_string": "private final String FOUND_ONE_ONE_WITH_ERROR = \"{\\\"docs\\\":[{\\\"_index\\\":\\\"relateddocs\\\",\\\"_type\\\":\\\"relateddoc\\\",\\\"_id\\\":\\\"1\\\",\\\"_version\\\":1,\\\"found\\\":true, \\\"_source\\\" : {\\\"channel\\\":\\\"de\\\",\\\"site\\\":\\\"amazon\\\",\\\"type\\\":\\\"map\\\",\\\"md5\\\":\\\"a8f346c5ddbbd8d438bc40f0049cc7f8\\\"}},{\\\"_index\\\":\\\"relateddocs\\\",\\\"_type\\\":\\\"relateddoc\\\",\\\"_id\\\":\\\"2\\\",\\\"error\\\":\\\"EsRejectedExecutionException[rejected execution (queue capacity 1) on org.elasticsearch.action.support.single.shard.TransportShardSingleOperationAction$AsyncSingleAction$1@4149696c]\\\"}]}\";", "modifier": "private final", "type": "String", "declarator": "FOUND_ONE_ONE_WITH_ERROR = \"{\\\"docs\\\":[{\\\"_index\\\":\\\"relateddocs\\\",\\\"_type\\\":\\\"relateddoc\\\",\\\"_id\\\":\\\"1\\\",\\\"_version\\\":1,\\\"found\\\":true, \\\"_source\\\" : {\\\"channel\\\":\\\"de\\\",\\\"site\\\":\\\"amazon\\\",\\\"type\\\":\\\"map\\\",\\\"md5\\\":\\\"a8f346c5ddbbd8d438bc40f0049cc7f8\\\"}},{\\\"_index\\\":\\\"relateddocs\\\",\\\"_type\\\":\\\"relateddoc\\\",\\\"_id\\\":\\\"2\\\",\\\"error\\\":\\\"EsRejectedExecutionException[rejected execution (queue capacity 1) on org.elasticsearch.action.support.single.shard.TransportShardSingleOperationAction$AsyncSingleAction$1@4149696c]\\\"}]}\"", "var_name": "FOUND_ONE_ONE_WITH_ERROR"}, {"original_string": "private final String FOUND_TWO_ONE_NOT_FOUND = \"{\\\"docs\\\":[{\\\"_index\\\":\\\"relateddocs\\\",\\\"_type\\\":\\\"relateddoc\\\",\\\"_id\\\":\\\"1\\\",\\\"_version\\\":1,\\\"found\\\":true, \\\"_source\\\" : {\\\"channel\\\":\\\"de\\\",\\\"site\\\":\\\"amazon\\\",\\\"type\\\":\\\"map\\\",\\\"md5\\\":\\\"a8f346c5ddbbd8d438bc40f0049cc7f8\\\"}},{\\\"_index\\\":\\\"relateddocs\\\",\\\"_type\\\":\\\"relateddoc\\\",\\\"_id\\\":\\\"2\\\",\\\"_version\\\":1,\\\"found\\\":true, \\\"_source\\\" : {\\\"channel\\\":\\\"de\\\",\\\"site\\\":\\\"amazon\\\",\\\"type\\\":\\\"compass\\\",\\\"md5\\\":\\\"71a5120bdf4d998c2b043a681b1bd211\\\"}},{\\\"_index\\\":\\\"relateddocs\\\",\\\"_type\\\":\\\"relateddoc\\\",\\\"_id\\\":\\\"3\\\",\\\"found\\\":false}]}\";", "modifier": "private final", "type": "String", "declarator": "FOUND_TWO_ONE_NOT_FOUND = \"{\\\"docs\\\":[{\\\"_index\\\":\\\"relateddocs\\\",\\\"_type\\\":\\\"relateddoc\\\",\\\"_id\\\":\\\"1\\\",\\\"_version\\\":1,\\\"found\\\":true, \\\"_source\\\" : {\\\"channel\\\":\\\"de\\\",\\\"site\\\":\\\"amazon\\\",\\\"type\\\":\\\"map\\\",\\\"md5\\\":\\\"a8f346c5ddbbd8d438bc40f0049cc7f8\\\"}},{\\\"_index\\\":\\\"relateddocs\\\",\\\"_type\\\":\\\"relateddoc\\\",\\\"_id\\\":\\\"2\\\",\\\"_version\\\":1,\\\"found\\\":true, \\\"_source\\\" : {\\\"channel\\\":\\\"de\\\",\\\"site\\\":\\\"amazon\\\",\\\"type\\\":\\\"compass\\\",\\\"md5\\\":\\\"71a5120bdf4d998c2b043a681b1bd211\\\"}},{\\\"_index\\\":\\\"relateddocs\\\",\\\"_type\\\":\\\"relateddoc\\\",\\\"_id\\\":\\\"3\\\",\\\"found\\\":false}]}\"", "var_name": "FOUND_TWO_ONE_NOT_FOUND"}, {"original_string": "private final String FOUND_NO_DOCS = \"{}\";", "modifier": "private final", "type": "String", "declarator": "FOUND_NO_DOCS = \"{}\"", "var_name": "FOUND_NO_DOCS"}, {"original_string": "private final String FOUND_NO_DOCS_404 = \"<html lang=en>  <meta charset=utf-8>  <meta name=viewport content=\\\"initial-scale=1, minimum-scale=1, width=device-width\\\">  <title>Error 404 (Not Found)!!1</title>  <body>404</body></html>\";", "modifier": "private final", "type": "String", "declarator": "FOUND_NO_DOCS_404 = \"<html lang=en>  <meta charset=utf-8>  <meta name=viewport content=\\\"initial-scale=1, minimum-scale=1, width=device-width\\\">  <title>Error 404 (Not Found)!!1</title>  <body>404</body></html>\"", "var_name": "FOUND_NO_DOCS_404"}, {"original_string": "public static int[] ports;", "modifier": "public static", "type": "int[]", "declarator": "ports", "var_name": "ports"}, {"original_string": "@Rule\n    public WireMockRule wireMockRule1 = new WireMockRule(ports[0]);", "modifier": "@Rule\n    public", "type": "WireMockRule", "declarator": "wireMockRule1 = new WireMockRule(ports[0])", "var_name": "wireMockRule1"}, {"original_string": "@Rule\n    public WireMockRule wireMockRule2 = new WireMockRule(ports[1]);", "modifier": "@Rule\n    public", "type": "WireMockRule", "declarator": "wireMockRule2 = new WireMockRule(ports[1])", "var_name": "wireMockRule2"}, {"original_string": "@Rule\n    public WireMockRule wireMockRule3 = new WireMockRule(ports[2]);", "modifier": "@Rule\n    public", "type": "WireMockRule", "declarator": "wireMockRule3 = new WireMockRule(ports[2])", "var_name": "wireMockRule3"}, {"original_string": "RelatedItemGetRepository repository;", "modifier": "", "type": "RelatedItemGetRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "Configuration configuration;", "modifier": "", "type": "Configuration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "WireMock wireMock1;", "modifier": "", "type": "WireMock", "declarator": "wireMock1", "var_name": "wireMock1"}, {"original_string": "WireMock wireMock2;", "modifier": "", "type": "WireMock", "declarator": "wireMock2", "var_name": "wireMock2"}, {"original_string": "WireMock wireMock3;", "modifier": "", "type": "WireMock", "declarator": "wireMock3", "var_name": "wireMock3"}], "file": "app/core/searching/src/test/java/org/greencheek/related/searching/repository/http/ElasticSearchRelatedItemHttpGetRepositoryTest.java"}, "test_case": {"identifier": "testHttpParseFoundThreeSourcesOneWithAnError", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHttpParseFoundThreeSourcesOneWithAnError() {\n        System.setProperty(ConfigurationConstants.PROPNAME_ELASTIC_SEARCH_HTTP_HOSTS, \"http://localhost:\" + ports[2]);\n        Configuration configuration = new SystemPropertiesConfiguration();\n\n\n        HttpElasticSearchClientFactory factory = new AHCHttpElasticSearchClientFactory(configuration);\n        repository = new ElasticSearchRelatedItemHttpGetRepository(configuration,factory);\n\n        Map<String,String> map = repository.getRelatedItemDocument(new String[]{\"1\",\"2\",\"3\"});\n\n        assertEquals(\"Should have parsed to items\", 4, map.size());\n\n        assertTrue(\"Document id 1 contains correct hash values\",map.get(\"1\").contains(\"a8f346c5ddbbd8d438bc40f0049cc7f8\"));\n        assertTrue(\"Document id 2 contains correct hash values\", map.get(\"2\").contains(\"71a5120bdf4d998c2b043a681b1bd211\"));\n        assertEquals(\"Document id 3 contains no source\",\"{}\",map.get(\"3\"));\n    }", "signature": "void testHttpParseFoundThreeSourcesOneWithAnError()", "full_signature": "@Test public void testHttpParseFoundThreeSourcesOneWithAnError()", "class_method_signature": "ElasticSearchRelatedItemHttpGetRepositoryTest.testHttpParseFoundThreeSourcesOneWithAnError()", "testcase": true, "constructor": false, "invocations": ["setProperty", "getRelatedItemDocument", "assertEquals", "size", "assertTrue", "contains", "get", "assertTrue", "contains", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "ElasticSearchRelatedItemHttpGetRepository", "superclass": "", "interfaces": "implements RelatedItemGetRepository", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(ElasticSearchRelatedItemHttpGetRepository.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(ElasticSearchRelatedItemHttpGetRepository.class)", "var_name": "log"}, {"original_string": "private final String url;", "modifier": "private final", "type": "String", "declarator": "url", "var_name": "url"}, {"original_string": "private final HttpElasticClient elasticClient;", "modifier": "private final", "type": "HttpElasticClient", "declarator": "elasticClient", "var_name": "elasticClient"}, {"original_string": "private final String keyForTiming;", "modifier": "private final", "type": "String", "declarator": "keyForTiming", "var_name": "keyForTiming"}], "methods": [{"identifier": "ElasticSearchRelatedItemHttpGetRepository", "parameters": "(Configuration configuration,\n                                                     HttpElasticSearchClientFactory factory)", "modifiers": "public", "return": "", "signature": " ElasticSearchRelatedItemHttpGetRepository(Configuration configuration,\n                                                     HttpElasticSearchClientFactory factory)", "full_signature": "public  ElasticSearchRelatedItemHttpGetRepository(Configuration configuration,\n                                                     HttpElasticSearchClientFactory factory)", "class_method_signature": "ElasticSearchRelatedItemHttpGetRepository.ElasticSearchRelatedItemHttpGetRepository(Configuration configuration,\n                                                     HttpElasticSearchClientFactory factory)", "testcase": false, "constructor": true}, {"identifier": "createArray", "parameters": "(String[] ids)", "modifiers": "private", "return": "String", "signature": "String createArray(String[] ids)", "full_signature": "private String createArray(String[] ids)", "class_method_signature": "ElasticSearchRelatedItemHttpGetRepository.createArray(String[] ids)", "testcase": false, "constructor": false}, {"identifier": "getRelatedItemDocument", "parameters": "(String[] ids)", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getRelatedItemDocument(String[] ids)", "full_signature": "@Override public Map<String, String> getRelatedItemDocument(String[] ids)", "class_method_signature": "ElasticSearchRelatedItemHttpGetRepository.getRelatedItemDocument(String[] ids)", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void shutdown()", "full_signature": "@Override public void shutdown()", "class_method_signature": "ElasticSearchRelatedItemHttpGetRepository.shutdown()", "testcase": false, "constructor": false}, {"identifier": "processResults", "parameters": "(String responseBody)", "modifiers": "public static", "return": "Map<String,String>", "signature": "Map<String,String> processResults(String responseBody)", "full_signature": "public static Map<String,String> processResults(String responseBody)", "class_method_signature": "ElasticSearchRelatedItemHttpGetRepository.processResults(String responseBody)", "testcase": false, "constructor": false}, {"identifier": "parseDocs", "parameters": "(JSONArray array)", "modifiers": "public static", "return": "Map<String,String>", "signature": "Map<String,String> parseDocs(JSONArray array)", "full_signature": "public static Map<String,String> parseDocs(JSONArray array)", "class_method_signature": "ElasticSearchRelatedItemHttpGetRepository.parseDocs(JSONArray array)", "testcase": false, "constructor": false}, {"identifier": "parseDoc", "parameters": "(JSONObject doc, Map<String,String> results)", "modifiers": "private static", "return": "void", "signature": "void parseDoc(JSONObject doc, Map<String,String> results)", "full_signature": "private static void parseDoc(JSONObject doc, Map<String,String> results)", "class_method_signature": "ElasticSearchRelatedItemHttpGetRepository.parseDoc(JSONObject doc, Map<String,String> results)", "testcase": false, "constructor": false}], "file": "app/core/searching/src/main/java/org/greencheek/related/searching/repository/http/ElasticSearchRelatedItemHttpGetRepository.java"}, "focal_method": {"identifier": "getRelatedItemDocument", "parameters": "(String[] ids)", "modifiers": "@Override public", "return": "Map<String, String>", "body": "@Override\n    public Map<String, String> getRelatedItemDocument(String[] ids) {\n        Map<String,String> getResults = RelatedItemNoopGetRepository.getEmptyResults(ids);\n        log.debug(\"MGET request to execute {} get request\", ids.length);\n\n        String arrayString = createArray(ids);\n        String jsonStart = \"{\\\"ids\\\":\";\n        StringBuilder b = new StringBuilder(arrayString.length()+jsonStart.length()+1);\n        b.append(jsonStart).append(arrayString).append('}');\n\n        String searchJson = b.toString();\n\n        log.debug(\"MGET request json is {}\",searchJson);\n\n        SearchResultEventWithSearchRequestKey[] results;\n        HttpResult sr;\n        long startNanos = System.nanoTime();\n\n        sr = elasticClient.executeSearch(HttpMethod.POST,url,searchJson);\n\n        HttpSearchExecutionStatus searchRequestStatus = sr.getStatus();\n        if (searchRequestStatus == HttpSearchExecutionStatus.OK) {\n            log.debug(\"MGET Processing results for get request(s)\");\n            String responseBody = sr.getResult();\n            Map<String,String> mappedResults = processResults(responseBody);\n            getResults.putAll(mappedResults);\n            log.debug(\"MGET Completed, returning processed results.\");\n        } else if (searchRequestStatus == HttpSearchExecutionStatus.REQUEST_FAILURE) {\n            log.warn(\"MGET Exception executing get request\");\n        } else {\n            if (searchRequestStatus == HttpSearchExecutionStatus.REQUEST_TIMEOUT) {\n                log.warn(\"Request timeout executing search request\");\n            } else {\n                log.warn(\"Connection timeout executing search request\");\n            }\n\n        }\n        long time = (System.nanoTime() - startNanos) / 1000000;\n        getResults.put(keyForTiming,Long.toString(time));\n\n        return getResults;\n    }", "signature": "Map<String, String> getRelatedItemDocument(String[] ids)", "full_signature": "@Override public Map<String, String> getRelatedItemDocument(String[] ids)", "class_method_signature": "ElasticSearchRelatedItemHttpGetRepository.getRelatedItemDocument(String[] ids)", "testcase": false, "constructor": false, "invocations": ["getEmptyResults", "debug", "createArray", "length", "length", "append", "append", "append", "toString", "debug", "nanoTime", "executeSearch", "getStatus", "debug", "getResult", "processResults", "putAll", "debug", "warn", "warn", "warn", "nanoTime", "put", "toString"]}, "repository": {"repo_id": 10422484, "url": "https://github.com/tootedom/related", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 14, "size": 20852, "license": "licensed"}}