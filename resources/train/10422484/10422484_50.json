{"test_class": {"identifier": "JodaUTCCurrentDateAndHourAndMinuteFormatterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final JodaUTCCurrentDateAndHourAndMinuteFormatter formatter = new JodaUTCCurrentDateAndHourAndMinuteFormatter();", "modifier": "private final", "type": "JodaUTCCurrentDateAndHourAndMinuteFormatter", "declarator": "formatter = new JodaUTCCurrentDateAndHourAndMinuteFormatter()", "var_name": "formatter"}], "file": "app/core/indexing/src/test/java/org/greencheek/related/indexing/util/JodaUTCCurrentDateAndHourAndMinuteFormatterTest.java"}, "test_case": {"identifier": "testCurrentTimeDayAndHour", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCurrentTimeDayAndHour() {\n        String before = getNow();\n        String s = formatter.getCurrentDayAndHourAndMinute();\n        String after = getNow();\n        checkEquals(s,before,after);\n    }", "signature": "void testCurrentTimeDayAndHour()", "full_signature": "@Test public void testCurrentTimeDayAndHour()", "class_method_signature": "JodaUTCCurrentDateAndHourAndMinuteFormatterTest.testCurrentTimeDayAndHour()", "testcase": true, "constructor": false, "invocations": ["getNow", "getCurrentDayAndHourAndMinute", "getNow", "checkEquals"]}, "focal_class": {"identifier": "JodaUTCCurrentDateAndHourAndMinuteFormatter", "superclass": "", "interfaces": "implements UTCCurrentDateAndHourAndMinuteFormatter", "fields": [{"original_string": "private final DateTimeParser[] parsers = {\n            ISODateTimeFormat.dateTimeParser().getParser(),\n            ISODateTimeFormat.basicDateTime().getParser(),\n            ISODateTimeFormat.basicDateTimeNoMillis().getParser(),\n            ISODateTimeFormat.basicDate().getParser()\n    };", "modifier": "private final", "type": "DateTimeParser[]", "declarator": "parsers = {\n            ISODateTimeFormat.dateTimeParser().getParser(),\n            ISODateTimeFormat.basicDateTime().getParser(),\n            ISODateTimeFormat.basicDateTimeNoMillis().getParser(),\n            ISODateTimeFormat.basicDate().getParser()\n    }", "var_name": "parsers"}, {"original_string": "private final DateTimeFormatter formatterUTC = new DateTimeFormatterBuilder().append( null, parsers ).toFormatter().withZoneUTC();", "modifier": "private final", "type": "DateTimeFormatter", "declarator": "formatterUTC = new DateTimeFormatterBuilder().append( null, parsers ).toFormatter().withZoneUTC()", "var_name": "formatterUTC"}, {"original_string": "private final DateTimeFormatter formatter = DateTimeFormat.forPattern(\"yyyy-MM-dd'_'HH':'mm\");", "modifier": "private final", "type": "DateTimeFormatter", "declarator": "formatter = DateTimeFormat.forPattern(\"yyyy-MM-dd'_'HH':'mm\")", "var_name": "formatter"}], "methods": [{"identifier": "getCurrentDayAndHourAndMinute", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getCurrentDayAndHourAndMinute()", "full_signature": "@Override public String getCurrentDayAndHourAndMinute()", "class_method_signature": "JodaUTCCurrentDateAndHourAndMinuteFormatter.getCurrentDayAndHourAndMinute()", "testcase": false, "constructor": false}, {"identifier": "parseToDateAndHourAndMinute", "parameters": "(String dateAndOrTime)", "modifiers": "@Override public", "return": "String", "signature": "String parseToDateAndHourAndMinute(String dateAndOrTime)", "full_signature": "@Override public String parseToDateAndHourAndMinute(String dateAndOrTime)", "class_method_signature": "JodaUTCCurrentDateAndHourAndMinuteFormatter.parseToDateAndHourAndMinute(String dateAndOrTime)", "testcase": false, "constructor": false}], "file": "app/core/indexing/src/main/java/org/greencheek/related/indexing/util/JodaUTCCurrentDateAndHourAndMinuteFormatter.java"}, "focal_method": {"identifier": "getCurrentDayAndHourAndMinute", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getCurrentDayAndHourAndMinute() {\n        DateTime dt = new DateTime();\n        DateTime utc =dt.withZone(DateTimeZone.UTC);\n        return formatter.print(utc);\n    }", "signature": "String getCurrentDayAndHourAndMinute()", "full_signature": "@Override public String getCurrentDayAndHourAndMinute()", "class_method_signature": "JodaUTCCurrentDateAndHourAndMinuteFormatter.getCurrentDayAndHourAndMinute()", "testcase": false, "constructor": false, "invocations": ["withZone", "print"]}, "repository": {"repo_id": 10422484, "url": "https://github.com/tootedom/related", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 14, "size": 20852, "license": "licensed"}}