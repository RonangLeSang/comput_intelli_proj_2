{"test_class": {"identifier": "ClouderaManagerClientBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "java/src/test/java/com/cloudera/api/ClouderaManagerClientBuilderTest.java"}, "test_case": {"identifier": "testResourceConfig", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testResourceConfig() {\n    ClouderaManagerClientBuilder builder = new ClouderaManagerClientBuilder();\n    ApiRootResource a = newProxy(builder);\n    assertNotNull(a);\n    ApiRootResource b = newProxy(builder);\n    assertNotNull(b);\n\n    ClouderaManagerClientBuilder.clearCachedResources();\n    // test after clear\n    assertNotNull(newProxy(builder));\n  }", "signature": "void testResourceConfig()", "full_signature": "@Test public void testResourceConfig()", "class_method_signature": "ClouderaManagerClientBuilderTest.testResourceConfig()", "testcase": true, "constructor": false, "invocations": ["newProxy", "assertNotNull", "newProxy", "assertNotNull", "clearCachedResources", "assertNotNull", "newProxy"]}, "focal_class": {"identifier": "ClouderaManagerClientBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int DEFAULT_TCP_PORT = 7180;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_TCP_PORT = 7180", "var_name": "DEFAULT_TCP_PORT"}, {"original_string": "public static final long DEFAULT_CONNECTION_TIMEOUT = 0;", "modifier": "public static final", "type": "long", "declarator": "DEFAULT_CONNECTION_TIMEOUT = 0", "var_name": "DEFAULT_CONNECTION_TIMEOUT"}, {"original_string": "public static final TimeUnit DEFAULT_CONNECTION_TIMEOUT_UNITS =\n      TimeUnit.MILLISECONDS;", "modifier": "public static final", "type": "TimeUnit", "declarator": "DEFAULT_CONNECTION_TIMEOUT_UNITS =\n      TimeUnit.MILLISECONDS", "var_name": "DEFAULT_CONNECTION_TIMEOUT_UNITS"}, {"original_string": "public static final long DEFAULT_RECEIVE_TIMEOUT = 0;", "modifier": "public static final", "type": "long", "declarator": "DEFAULT_RECEIVE_TIMEOUT = 0", "var_name": "DEFAULT_RECEIVE_TIMEOUT"}, {"original_string": "public static final TimeUnit DEFAULT_RECEIVE_TIMEOUT_UNITS =\n      TimeUnit.MILLISECONDS;", "modifier": "public static final", "type": "TimeUnit", "declarator": "DEFAULT_RECEIVE_TIMEOUT_UNITS =\n      TimeUnit.MILLISECONDS", "var_name": "DEFAULT_RECEIVE_TIMEOUT_UNITS"}, {"original_string": "private URL baseUrl;", "modifier": "private", "type": "URL", "declarator": "baseUrl", "var_name": "baseUrl"}, {"original_string": "private String hostname;", "modifier": "private", "type": "String", "declarator": "hostname", "var_name": "hostname"}, {"original_string": "private int port = DEFAULT_TCP_PORT;", "modifier": "private", "type": "int", "declarator": "port = DEFAULT_TCP_PORT", "var_name": "port"}, {"original_string": "private boolean enableTLS;", "modifier": "private", "type": "boolean", "declarator": "enableTLS", "var_name": "enableTLS"}, {"original_string": "private boolean enableLogging;", "modifier": "private", "type": "boolean", "declarator": "enableLogging", "var_name": "enableLogging"}, {"original_string": "private String username;", "modifier": "private", "type": "String", "declarator": "username", "var_name": "username"}, {"original_string": "private String password;", "modifier": "private", "type": "String", "declarator": "password", "var_name": "password"}, {"original_string": "private long connectionTimeout = DEFAULT_CONNECTION_TIMEOUT;", "modifier": "private", "type": "long", "declarator": "connectionTimeout = DEFAULT_CONNECTION_TIMEOUT", "var_name": "connectionTimeout"}, {"original_string": "private TimeUnit connectionTimeoutUnits = DEFAULT_CONNECTION_TIMEOUT_UNITS;", "modifier": "private", "type": "TimeUnit", "declarator": "connectionTimeoutUnits = DEFAULT_CONNECTION_TIMEOUT_UNITS", "var_name": "connectionTimeoutUnits"}, {"original_string": "private long receiveTimeout = DEFAULT_RECEIVE_TIMEOUT;", "modifier": "private", "type": "long", "declarator": "receiveTimeout = DEFAULT_RECEIVE_TIMEOUT", "var_name": "receiveTimeout"}, {"original_string": "private TimeUnit receiveTimeoutUnits = DEFAULT_RECEIVE_TIMEOUT_UNITS;", "modifier": "private", "type": "TimeUnit", "declarator": "receiveTimeoutUnits = DEFAULT_RECEIVE_TIMEOUT_UNITS", "var_name": "receiveTimeoutUnits"}, {"original_string": "private boolean validateCerts = true;", "modifier": "private", "type": "boolean", "declarator": "validateCerts = true", "var_name": "validateCerts"}, {"original_string": "private boolean validateCn = true;", "modifier": "private", "type": "boolean", "declarator": "validateCn = true", "var_name": "validateCn"}, {"original_string": "private boolean threadSafe;", "modifier": "private", "type": "boolean", "declarator": "threadSafe", "var_name": "threadSafe"}, {"original_string": "private boolean maintainSessionAcrossRequests;", "modifier": "private", "type": "boolean", "declarator": "maintainSessionAcrossRequests", "var_name": "maintainSessionAcrossRequests"}, {"original_string": "private boolean streamAutoClosure;", "modifier": "private", "type": "boolean", "declarator": "streamAutoClosure", "var_name": "streamAutoClosure"}, {"original_string": "private TrustManager[] trustManagers;", "modifier": "private", "type": "TrustManager[]", "declarator": "trustManagers", "var_name": "trustManagers"}, {"original_string": "private String acceptLanguage;", "modifier": "private", "type": "String", "declarator": "acceptLanguage", "var_name": "acceptLanguage"}, {"original_string": "private static final LoadingCache<Class<?>, JAXRSClientFactoryBean>\n    clientStaticResources =\n      CacheBuilder.newBuilder()\n      .softValues()\n      .build(\n        new CacheLoader<Class<?>, JAXRSClientFactoryBean>(){\n          @Override\n          public JAXRSClientFactoryBean load(Class<?> proxyType) throws Exception {\n            JAXRSClientFactoryBean clientFactoryBean = new JAXRSClientFactoryBean();\n            clientFactoryBean.setResourceClass(proxyType);\n            clientFactoryBean.setProvider(new JacksonJsonProvider(new ApiObjectMapper()));\n            return clientFactoryBean;\n          }\n        });", "modifier": "private static final", "type": "LoadingCache<Class<?>, JAXRSClientFactoryBean>", "declarator": "clientStaticResources =\n      CacheBuilder.newBuilder()\n      .softValues()\n      .build(\n        new CacheLoader<Class<?>, JAXRSClientFactoryBean>(){\n          @Override\n          public JAXRSClientFactoryBean load(Class<?> proxyType) throws Exception {\n            JAXRSClientFactoryBean clientFactoryBean = new JAXRSClientFactoryBean();\n            clientFactoryBean.setResourceClass(proxyType);\n            clientFactoryBean.setProvider(new JacksonJsonProvider(new ApiObjectMapper()));\n            return clientFactoryBean;\n          }\n        })", "var_name": "clientStaticResources"}], "methods": [{"identifier": "withAcceptLanguage", "parameters": "(\n      String acceptLaunguage)", "modifiers": "public", "return": "ClouderaManagerClientBuilder", "signature": "ClouderaManagerClientBuilder withAcceptLanguage(\n      String acceptLaunguage)", "full_signature": "public ClouderaManagerClientBuilder withAcceptLanguage(\n      String acceptLaunguage)", "class_method_signature": "ClouderaManagerClientBuilder.withAcceptLanguage(\n      String acceptLaunguage)", "testcase": false, "constructor": false}, {"identifier": "withBaseURL", "parameters": "(URL baseUrl)", "modifiers": "public", "return": "ClouderaManagerClientBuilder", "signature": "ClouderaManagerClientBuilder withBaseURL(URL baseUrl)", "full_signature": "public ClouderaManagerClientBuilder withBaseURL(URL baseUrl)", "class_method_signature": "ClouderaManagerClientBuilder.withBaseURL(URL baseUrl)", "testcase": false, "constructor": false}, {"identifier": "withHost", "parameters": "(String hostname)", "modifiers": "public", "return": "ClouderaManagerClientBuilder", "signature": "ClouderaManagerClientBuilder withHost(String hostname)", "full_signature": "public ClouderaManagerClientBuilder withHost(String hostname)", "class_method_signature": "ClouderaManagerClientBuilder.withHost(String hostname)", "testcase": false, "constructor": false}, {"identifier": "withPort", "parameters": "(int port)", "modifiers": "public", "return": "ClouderaManagerClientBuilder", "signature": "ClouderaManagerClientBuilder withPort(int port)", "full_signature": "public ClouderaManagerClientBuilder withPort(int port)", "class_method_signature": "ClouderaManagerClientBuilder.withPort(int port)", "testcase": false, "constructor": false}, {"identifier": "enableTLS", "parameters": "()", "modifiers": "public", "return": "ClouderaManagerClientBuilder", "signature": "ClouderaManagerClientBuilder enableTLS()", "full_signature": "public ClouderaManagerClientBuilder enableTLS()", "class_method_signature": "ClouderaManagerClientBuilder.enableTLS()", "testcase": false, "constructor": false}, {"identifier": "enableLogging", "parameters": "()", "modifiers": "public", "return": "ClouderaManagerClientBuilder", "signature": "ClouderaManagerClientBuilder enableLogging()", "full_signature": "public ClouderaManagerClientBuilder enableLogging()", "class_method_signature": "ClouderaManagerClientBuilder.enableLogging()", "testcase": false, "constructor": false}, {"identifier": "setThreadSafe", "parameters": "(boolean threadSafe)", "modifiers": "public", "return": "ClouderaManagerClientBuilder", "signature": "ClouderaManagerClientBuilder setThreadSafe(boolean threadSafe)", "full_signature": "public ClouderaManagerClientBuilder setThreadSafe(boolean threadSafe)", "class_method_signature": "ClouderaManagerClientBuilder.setThreadSafe(boolean threadSafe)", "testcase": false, "constructor": false}, {"identifier": "setMaintainSessionAcrossRequests", "parameters": "(\n      boolean maintainSessionAcrossRequests)", "modifiers": "public", "return": "ClouderaManagerClientBuilder", "signature": "ClouderaManagerClientBuilder setMaintainSessionAcrossRequests(\n      boolean maintainSessionAcrossRequests)", "full_signature": "public ClouderaManagerClientBuilder setMaintainSessionAcrossRequests(\n      boolean maintainSessionAcrossRequests)", "class_method_signature": "ClouderaManagerClientBuilder.setMaintainSessionAcrossRequests(\n      boolean maintainSessionAcrossRequests)", "testcase": false, "constructor": false}, {"identifier": "withUsernamePassword", "parameters": "(String username,\n                                                           String password)", "modifiers": "public", "return": "ClouderaManagerClientBuilder", "signature": "ClouderaManagerClientBuilder withUsernamePassword(String username,\n                                                           String password)", "full_signature": "public ClouderaManagerClientBuilder withUsernamePassword(String username,\n                                                           String password)", "class_method_signature": "ClouderaManagerClientBuilder.withUsernamePassword(String username,\n                                                           String password)", "testcase": false, "constructor": false}, {"identifier": "withConnectionTimeout", "parameters": "(\n      long connectionTimeout,\n      TimeUnit connectionTimeoutUnits)", "modifiers": "public", "return": "ClouderaManagerClientBuilder", "signature": "ClouderaManagerClientBuilder withConnectionTimeout(\n      long connectionTimeout,\n      TimeUnit connectionTimeoutUnits)", "full_signature": "public ClouderaManagerClientBuilder withConnectionTimeout(\n      long connectionTimeout,\n      TimeUnit connectionTimeoutUnits)", "class_method_signature": "ClouderaManagerClientBuilder.withConnectionTimeout(\n      long connectionTimeout,\n      TimeUnit connectionTimeoutUnits)", "testcase": false, "constructor": false}, {"identifier": "withReceiveTimeout", "parameters": "(\n      long receiveTimeout,\n      TimeUnit receiveTimeoutUnits)", "modifiers": "public", "return": "ClouderaManagerClientBuilder", "signature": "ClouderaManagerClientBuilder withReceiveTimeout(\n      long receiveTimeout,\n      TimeUnit receiveTimeoutUnits)", "full_signature": "public ClouderaManagerClientBuilder withReceiveTimeout(\n      long receiveTimeout,\n      TimeUnit receiveTimeoutUnits)", "class_method_signature": "ClouderaManagerClientBuilder.withReceiveTimeout(\n      long receiveTimeout,\n      TimeUnit receiveTimeoutUnits)", "testcase": false, "constructor": false}, {"identifier": "disableTlsCertValidation", "parameters": "()", "modifiers": "public", "return": "ClouderaManagerClientBuilder", "signature": "ClouderaManagerClientBuilder disableTlsCertValidation()", "full_signature": "public ClouderaManagerClientBuilder disableTlsCertValidation()", "class_method_signature": "ClouderaManagerClientBuilder.disableTlsCertValidation()", "testcase": false, "constructor": false}, {"identifier": "disableTlsCnValidation", "parameters": "()", "modifiers": "public", "return": "ClouderaManagerClientBuilder", "signature": "ClouderaManagerClientBuilder disableTlsCnValidation()", "full_signature": "public ClouderaManagerClientBuilder disableTlsCnValidation()", "class_method_signature": "ClouderaManagerClientBuilder.disableTlsCnValidation()", "testcase": false, "constructor": false}, {"identifier": "enableStreamAutoClosure", "parameters": "()", "modifiers": "public", "return": "ClouderaManagerClientBuilder", "signature": "ClouderaManagerClientBuilder enableStreamAutoClosure()", "full_signature": "public ClouderaManagerClientBuilder enableStreamAutoClosure()", "class_method_signature": "ClouderaManagerClientBuilder.enableStreamAutoClosure()", "testcase": false, "constructor": false}, {"identifier": "generateAddress", "parameters": "()", "modifiers": "@VisibleForTesting", "return": "String", "signature": "String generateAddress()", "full_signature": "@VisibleForTesting String generateAddress()", "class_method_signature": "ClouderaManagerClientBuilder.generateAddress()", "testcase": false, "constructor": false}, {"identifier": "setTrustManagers", "parameters": "(TrustManager[] managers)", "modifiers": "public", "return": "void", "signature": "void setTrustManagers(TrustManager[] managers)", "full_signature": "public void setTrustManagers(TrustManager[] managers)", "class_method_signature": "ClouderaManagerClientBuilder.setTrustManagers(TrustManager[] managers)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "ApiRootResource", "signature": "ApiRootResource build()", "full_signature": "public ApiRootResource build()", "class_method_signature": "ClouderaManagerClientBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(Class<T> proxyType)", "modifiers": "protected", "return": "T", "signature": "T build(Class<T> proxyType)", "full_signature": "protected T build(Class<T> proxyType)", "class_method_signature": "ClouderaManagerClientBuilder.build(Class<T> proxyType)", "testcase": false, "constructor": false}, {"identifier": "cleanFactory", "parameters": "(JAXRSClientFactoryBean bean)", "modifiers": "private static", "return": "JAXRSClientFactoryBean", "signature": "JAXRSClientFactoryBean cleanFactory(JAXRSClientFactoryBean bean)", "full_signature": "private static JAXRSClientFactoryBean cleanFactory(JAXRSClientFactoryBean bean)", "class_method_signature": "ClouderaManagerClientBuilder.cleanFactory(JAXRSClientFactoryBean bean)", "testcase": false, "constructor": false}, {"identifier": "closeClient", "parameters": "(Object root)", "modifiers": "public static", "return": "void", "signature": "void closeClient(Object root)", "full_signature": "public static void closeClient(Object root)", "class_method_signature": "ClouderaManagerClientBuilder.closeClient(Object root)", "testcase": false, "constructor": false}, {"identifier": "clearCachedResources", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void clearCachedResources()", "full_signature": "public static void clearCachedResources()", "class_method_signature": "ClouderaManagerClientBuilder.clearCachedResources()", "testcase": false, "constructor": false}], "file": "java/src/main/java/com/cloudera/api/ClouderaManagerClientBuilder.java"}, "focal_method": {"identifier": "clearCachedResources", "parameters": "()", "modifiers": "public static", "return": "void", "body": "public static void clearCachedResources() {\n    clientStaticResources.invalidateAll();\n  }", "signature": "void clearCachedResources()", "full_signature": "public static void clearCachedResources()", "class_method_signature": "ClouderaManagerClientBuilder.clearCachedResources()", "testcase": false, "constructor": false, "invocations": ["invalidateAll"]}, "repository": {"repo_id": 4298401, "url": "https://github.com/cloudera/cm_api", "language": "Java", "is_fork": false, "fork_count": 265, "stargazer_count": 261, "size": 28975, "license": "licensed"}}