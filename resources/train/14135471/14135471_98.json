{"test_class": {"identifier": "ShardEntryGroupTest", "superclass": "", "interfaces": "", "fields": [], "file": "stack/corepersistence/graph/src/test/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/ShardEntryGroupTest.java"}, "test_case": {"identifier": "testIsNew", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsNew() {\n        //set with no shard\n\n        final long delta = 10000;\n\n        //created at 10000\n        final Shard firstShard = new Shard( 10000, 10000, true );\n\n        final Shard secondShard = new Shard( 10000, 10001, true );\n\n        final ShardEntryGroup shardGroup = new ShardEntryGroup( delta );\n\n        shardGroup.addShard( secondShard );\n        shardGroup.addShard( firstShard );\n\n        final boolean resultCreateTime = shardGroup.isNew( secondShard.getCreatedTime() );\n\n        assertTrue( \"This is a new shard\", resultCreateTime );\n\n        final boolean resultEqualToDelta = shardGroup.isNew( secondShard.getCreatedTime() + delta );\n\n        assertTrue( \"This is a new shard\", resultEqualToDelta );\n\n\n        final boolean greaterThan = shardGroup.isNew( secondShard.getCreatedTime() + delta + 1 );\n\n        assertFalse( \"This is not a new shard\", greaterThan );\n    }", "signature": "void testIsNew()", "full_signature": "@Test public void testIsNew()", "class_method_signature": "ShardEntryGroupTest.testIsNew()", "testcase": true, "constructor": false, "invocations": ["addShard", "addShard", "isNew", "getCreatedTime", "assertTrue", "isNew", "getCreatedTime", "assertTrue", "isNew", "getCreatedTime", "assertFalse"]}, "focal_class": {"identifier": "ShardEntryGroup", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger( ShardEntryGroup.class );", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger( ShardEntryGroup.class )", "var_name": "logger"}, {"original_string": "private List<Shard> shards;", "modifier": "private", "type": "List<Shard>", "declarator": "shards", "var_name": "shards"}, {"original_string": "private final long delta;", "modifier": "private final", "type": "long", "declarator": "delta", "var_name": "delta"}, {"original_string": "private long maxCreatedTime;", "modifier": "private", "type": "long", "declarator": "maxCreatedTime", "var_name": "maxCreatedTime"}, {"original_string": "private Shard compactionTarget;", "modifier": "private", "type": "Shard", "declarator": "compactionTarget", "var_name": "compactionTarget"}, {"original_string": "private Shard rootShard;", "modifier": "private", "type": "Shard", "declarator": "rootShard", "var_name": "rootShard"}], "methods": [{"identifier": "ShardEntryGroup", "parameters": "( final long delta )", "modifiers": "public", "return": "", "signature": " ShardEntryGroup( final long delta )", "full_signature": "public  ShardEntryGroup( final long delta )", "class_method_signature": "ShardEntryGroup.ShardEntryGroup( final long delta )", "testcase": false, "constructor": true}, {"identifier": "addShard", "parameters": "( final Shard shard )", "modifiers": "public", "return": "boolean", "signature": "boolean addShard( final Shard shard )", "full_signature": "public boolean addShard( final Shard shard )", "class_method_signature": "ShardEntryGroup.addShard( final Shard shard )", "testcase": false, "constructor": false}, {"identifier": "addShardInternal", "parameters": "( final Shard shard )", "modifiers": "private", "return": "void", "signature": "void addShardInternal( final Shard shard )", "full_signature": "private void addShardInternal( final Shard shard )", "class_method_signature": "ShardEntryGroup.addShardInternal( final Shard shard )", "testcase": false, "constructor": false}, {"identifier": "getMinShard", "parameters": "()", "modifiers": "public", "return": "Shard", "signature": "Shard getMinShard()", "full_signature": "public Shard getMinShard()", "class_method_signature": "ShardEntryGroup.getMinShard()", "testcase": false, "constructor": false}, {"identifier": "getReadShards", "parameters": "()", "modifiers": "public", "return": "Collection<Shard>", "signature": "Collection<Shard> getReadShards()", "full_signature": "public Collection<Shard> getReadShards()", "class_method_signature": "ShardEntryGroup.getReadShards()", "testcase": false, "constructor": false}, {"identifier": "getWriteShards", "parameters": "( long currentTime )", "modifiers": "public", "return": "Collection<Shard>", "signature": "Collection<Shard> getWriteShards( long currentTime )", "full_signature": "public Collection<Shard> getWriteShards( long currentTime )", "class_method_signature": "ShardEntryGroup.getWriteShards( long currentTime )", "testcase": false, "constructor": false}, {"identifier": "isCompactionPending", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCompactionPending()", "full_signature": "public boolean isCompactionPending()", "class_method_signature": "ShardEntryGroup.isCompactionPending()", "testcase": false, "constructor": false}, {"identifier": "getRootShard", "parameters": "()", "modifiers": "private", "return": "Shard", "signature": "Shard getRootShard()", "full_signature": "private Shard getRootShard()", "class_method_signature": "ShardEntryGroup.getRootShard()", "testcase": false, "constructor": false}, {"identifier": "getCompactionTarget", "parameters": "()", "modifiers": "public", "return": "Shard", "signature": "Shard getCompactionTarget()", "full_signature": "public Shard getCompactionTarget()", "class_method_signature": "ShardEntryGroup.getCompactionTarget()", "testcase": false, "constructor": false}, {"identifier": "entrySize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int entrySize()", "full_signature": "public int entrySize()", "class_method_signature": "ShardEntryGroup.entrySize()", "testcase": false, "constructor": false}, {"identifier": "isTooSmallToCompact", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isTooSmallToCompact()", "full_signature": "private boolean isTooSmallToCompact()", "class_method_signature": "ShardEntryGroup.isTooSmallToCompact()", "testcase": false, "constructor": false}, {"identifier": "shouldCompact", "parameters": "( final long currentTime )", "modifiers": "public", "return": "boolean", "signature": "boolean shouldCompact( final long currentTime )", "full_signature": "public boolean shouldCompact( final long currentTime )", "class_method_signature": "ShardEntryGroup.shouldCompact( final long currentTime )", "testcase": false, "constructor": false}, {"identifier": "isNew", "parameters": "(final long currentTime)", "modifiers": "public", "return": "boolean", "signature": "boolean isNew(final long currentTime)", "full_signature": "public boolean isNew(final long currentTime)", "class_method_signature": "ShardEntryGroup.isNew(final long currentTime)", "testcase": false, "constructor": false}, {"identifier": "canBeDeleted", "parameters": "( final Shard shard )", "modifiers": "public", "return": "boolean", "signature": "boolean canBeDeleted( final Shard shard )", "full_signature": "public boolean canBeDeleted( final Shard shard )", "class_method_signature": "ShardEntryGroup.canBeDeleted( final Shard shard )", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ShardEntryGroup.toString()", "testcase": false, "constructor": false}], "file": "stack/corepersistence/graph/src/main/java/org/apache/usergrid/persistence/graph/serialization/impl/shard/ShardEntryGroup.java"}, "focal_method": {"identifier": "isNew", "parameters": "(final long currentTime)", "modifiers": "public", "return": "boolean", "body": "public boolean isNew(final long currentTime){\n        return currentTime - delta <= maxCreatedTime;\n    }", "signature": "boolean isNew(final long currentTime)", "full_signature": "public boolean isNew(final long currentTime)", "class_method_signature": "ShardEntryGroup.isNew(final long currentTime)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 14135471, "url": "https://github.com/apache/usergrid", "language": "Java", "is_fork": false, "fork_count": 432, "stargazer_count": 983, "size": 383432, "license": "licensed"}}