{"test_class": {"identifier": "NoteDaoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger LOG = LoggerFactory.getLogger( NoteDaoTest.class );", "modifier": "private static", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger( NoteDaoTest.class )", "var_name": "LOG"}], "file": "chop/webapp/src/test/java/org/apache/usergrid/chop/webapp/dao/NoteDaoTest.java"}, "test_case": {"identifier": "testGet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGet() {\n\n        LOG.info( \"\\n===NoteDaoTest.testGet===\\n\" );\n\n        Note note = ESSuiteTest.noteDao.get( ESSuiteTest.COMMIT_ID_1, 1 );\n\n        assertEquals( ESSuiteTest.NOTE, note.getText() );\n    }", "signature": "void testGet()", "full_signature": "@Test public void testGet()", "class_method_signature": "NoteDaoTest.testGet()", "testcase": true, "constructor": false, "invocations": ["info", "get", "assertEquals", "getText"]}, "focal_class": {"identifier": "NoteDao", "superclass": "extends Dao", "interfaces": "", "fields": [{"original_string": "public static final String DAO_INDEX_KEY = \"modules\";", "modifier": "public static final", "type": "String", "declarator": "DAO_INDEX_KEY = \"modules\"", "var_name": "DAO_INDEX_KEY"}, {"original_string": "public static final String DAO_TYPE_KEY = \"note\";", "modifier": "public static final", "type": "String", "declarator": "DAO_TYPE_KEY = \"note\"", "var_name": "DAO_TYPE_KEY"}], "methods": [{"identifier": "NoteDao", "parameters": "( IElasticSearchClient elasticSearchClient )", "modifiers": "@Inject public", "return": "", "signature": " NoteDao( IElasticSearchClient elasticSearchClient )", "full_signature": "@Inject public  NoteDao( IElasticSearchClient elasticSearchClient )", "class_method_signature": "NoteDao.NoteDao( IElasticSearchClient elasticSearchClient )", "testcase": false, "constructor": true}, {"identifier": "save", "parameters": "( Note note )", "modifiers": "public", "return": "boolean", "signature": "boolean save( Note note )", "full_signature": "public boolean save( Note note )", "class_method_signature": "NoteDao.save( Note note )", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "( String commitId, int runNumber )", "modifiers": "public", "return": "Note", "signature": "Note get( String commitId, int runNumber )", "full_signature": "public Note get( String commitId, int runNumber )", "class_method_signature": "NoteDao.get( String commitId, int runNumber )", "testcase": false, "constructor": false}], "file": "chop/webapp/src/main/java/org/apache/usergrid/chop/webapp/dao/NoteDao.java"}, "focal_method": {"identifier": "get", "parameters": "( String commitId, int runNumber )", "modifiers": "public", "return": "Note", "body": "public Note get( String commitId, int runNumber ) {\n\n        BoolQueryBuilder queryBuilder = QueryBuilders.boolQuery()\n                .must( termQuery( \"commitId\", commitId.toLowerCase() ) )\n                .must( termQuery( \"runNumber\", runNumber ) );\n\n        SearchResponse response = elasticSearchClient.getClient()\n                .prepareSearch( DAO_INDEX_KEY )\n                .setTypes( DAO_TYPE_KEY )\n                .setQuery( queryBuilder )\n                .execute()\n                .actionGet();\n\n        SearchHit hits[] = response.getHits().getHits();\n\n        if ( hits.length == 0 ) {\n            return null;\n        }\n\n        Map<String, Object> json = hits[ 0 ].getSource();\n\n        return new Note(\n                Util.getString( json, \"moduleId\" ),\n                Util.getInt( json, \"runNumber\" ),\n                Util.getString( json, \"text\" )\n        );\n    }", "signature": "Note get( String commitId, int runNumber )", "full_signature": "public Note get( String commitId, int runNumber )", "class_method_signature": "NoteDao.get( String commitId, int runNumber )", "testcase": false, "constructor": false, "invocations": ["must", "must", "boolQuery", "termQuery", "toLowerCase", "termQuery", "actionGet", "execute", "setQuery", "setTypes", "prepareSearch", "getClient", "getHits", "getHits", "getSource", "getString", "getInt", "getString"]}, "repository": {"repo_id": 14135471, "url": "https://github.com/apache/usergrid", "language": "Java", "is_fork": false, "fork_count": 432, "stargazer_count": 983, "size": 383432, "license": "licensed"}}