{"test_class": {"identifier": "PairsWithSumToGivenNumberTest", "superclass": "", "interfaces": "", "fields": [], "file": "CareerCup/src/test/java/com/github/holodnov/careercup/PairsWithSumToGivenNumberTest.java"}, "test_case": {"identifier": "testGetPairsWithSumToGivenNumber6", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetPairsWithSumToGivenNumber6() {\n        List<Pair> actual = getPairsWithSumToGivenNumber(new int[]{-1, -2, -3, -4, -5, 2, 3, 4, 5, 0, 6}, 0);\n        List<Pair> expected = asList(\n                new Pair(-2, 2),\n                new Pair(-3, 3),\n                new Pair(-4, 4),\n                new Pair(-5, 5)\n        );\n        assertThat(actual, is(expected));\n    }", "signature": "void testGetPairsWithSumToGivenNumber6()", "full_signature": "@Test public void testGetPairsWithSumToGivenNumber6()", "class_method_signature": "PairsWithSumToGivenNumberTest.testGetPairsWithSumToGivenNumber6()", "testcase": true, "constructor": false, "invocations": ["getPairsWithSumToGivenNumber", "asList", "assertThat", "is"]}, "focal_class": {"identifier": "PairsWithSumToGivenNumber", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getPairsWithSumToGivenNumber", "parameters": "(int[] sequence, int n)", "modifiers": "public static", "return": "List<Pair>", "signature": "List<Pair> getPairsWithSumToGivenNumber(int[] sequence, int n)", "full_signature": "public static List<Pair> getPairsWithSumToGivenNumber(int[] sequence, int n)", "class_method_signature": "PairsWithSumToGivenNumber.getPairsWithSumToGivenNumber(int[] sequence, int n)", "testcase": false, "constructor": false}], "file": "CareerCup/src/main/java/com/github/holodnov/careercup/PairsWithSumToGivenNumber.java"}, "focal_method": {"identifier": "getPairsWithSumToGivenNumber", "parameters": "(int[] sequence, int n)", "modifiers": "public static", "return": "List<Pair>", "body": "public static List<Pair> getPairsWithSumToGivenNumber(int[] sequence, int n) {\n        if (sequence == null) {\n            throw new IllegalArgumentException(\"Input array is null\");\n        }\n        ArrayList<Pair> pairs = new ArrayList<>();\n        Set<Integer> elementsSet = new HashSet<>();\n        boolean firstNDiv2 = false;\n        boolean secondNDiv2 = false;\n        for (int element : sequence) {\n            if ((n & 1) == 0 && element == (n >> 1)) {\n                if (firstNDiv2 && secondNDiv2) {\n                    continue;\n                }\n                if (!firstNDiv2) {\n                    firstNDiv2 = true;\n                    continue;\n                } else {\n                    secondNDiv2 = true;\n                    pairs.add(new Pair(n >> 1, n >> 1));\n                    continue;\n                }\n            }\n            boolean added = elementsSet.add(element);\n            if (!added) {\n                continue;\n            }\n            if (elementsSet.contains(n - element)) {\n                pairs.add(new Pair(n - element, element));\n            }\n        }\n        return pairs;\n    }", "signature": "List<Pair> getPairsWithSumToGivenNumber(int[] sequence, int n)", "full_signature": "public static List<Pair> getPairsWithSumToGivenNumber(int[] sequence, int n)", "class_method_signature": "PairsWithSumToGivenNumber.getPairsWithSumToGivenNumber(int[] sequence, int n)", "testcase": false, "constructor": false, "invocations": ["add", "add", "contains", "add"]}, "repository": {"repo_id": 11324849, "url": "https://github.com/kyryloholodnov/niagara", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 6, "size": 227, "license": "licensed"}}