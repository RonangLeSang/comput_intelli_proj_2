{"test_class": {"identifier": "UnionFindTest", "superclass": "", "interfaces": "", "fields": [], "file": "Algorithms/src/test/java/com/github/holodnov/algorithms/unionfind/UnionFindTest.java"}, "test_case": {"identifier": "testSubsetSizeIllegalArgument2", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testSubsetSizeIllegalArgument2() {\n        UnionFind unionFind = new UnionFind(5);\n        unionFind.getSubsetSize(5);\n    }", "signature": "void testSubsetSizeIllegalArgument2()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testSubsetSizeIllegalArgument2()", "class_method_signature": "UnionFindTest.testSubsetSizeIllegalArgument2()", "testcase": true, "constructor": false, "invocations": ["getSubsetSize"]}, "focal_class": {"identifier": "UnionFind", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final int n;", "modifier": "private final", "type": "int", "declarator": "n", "var_name": "n"}, {"original_string": "private final int[] roots;", "modifier": "private final", "type": "int[]", "declarator": "roots", "var_name": "roots"}, {"original_string": "private final int[] ranks;", "modifier": "private final", "type": "int[]", "declarator": "ranks", "var_name": "ranks"}, {"original_string": "private final int[] sizes;", "modifier": "private final", "type": "int[]", "declarator": "sizes", "var_name": "sizes"}, {"original_string": "private int subsetsCount;", "modifier": "private", "type": "int", "declarator": "subsetsCount", "var_name": "subsetsCount"}], "methods": [{"identifier": "UnionFind", "parameters": "(int n)", "modifiers": "public", "return": "", "signature": " UnionFind(int n)", "full_signature": "public  UnionFind(int n)", "class_method_signature": "UnionFind.UnionFind(int n)", "testcase": false, "constructor": true}, {"identifier": "find", "parameters": "(int i)", "modifiers": "public", "return": "int", "signature": "int find(int i)", "full_signature": "public int find(int i)", "class_method_signature": "UnionFind.find(int i)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(int i, int j)", "modifiers": "public", "return": "int", "signature": "int union(int i, int j)", "full_signature": "public int union(int i, int j)", "class_method_signature": "UnionFind.union(int i, int j)", "testcase": false, "constructor": false}, {"identifier": "getSubsetSize", "parameters": "(int i)", "modifiers": "public", "return": "int", "signature": "int getSubsetSize(int i)", "full_signature": "public int getSubsetSize(int i)", "class_method_signature": "UnionFind.getSubsetSize(int i)", "testcase": false, "constructor": false}, {"identifier": "getSubsetsCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSubsetsCount()", "full_signature": "public int getSubsetsCount()", "class_method_signature": "UnionFind.getSubsetsCount()", "testcase": false, "constructor": false}], "file": "Algorithms/src/main/java/com/github/holodnov/algorithms/unionfind/UnionFind.java"}, "focal_method": {"identifier": "getSubsetSize", "parameters": "(int i)", "modifiers": "public", "return": "int", "body": "public int getSubsetSize(int i) {\n        return sizes[find(i)];\n    }", "signature": "int getSubsetSize(int i)", "full_signature": "public int getSubsetSize(int i)", "class_method_signature": "UnionFind.getSubsetSize(int i)", "testcase": false, "constructor": false, "invocations": ["find"]}, "repository": {"repo_id": 11324849, "url": "https://github.com/kyryloholodnov/niagara", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 6, "size": 227, "license": "licensed"}}