{"test_class": {"identifier": "JsonDecoderTest", "superclass": "", "interfaces": "", "fields": [], "file": "swallow-common/src/test/java/com/dianping/swallow/common/internal/codec/JsonDecoderTest.java"}, "test_case": {"identifier": "testEncode2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testEncode2() throws Exception {\n      Object o = new Object();\n      JsonDecoder jsonDecoder = new JsonDecoder(SwallowMessage.class);\n      Assert.assertEquals(o, jsonDecoder.decode(null, null, o));\n   }", "signature": "void testEncode2()", "full_signature": "@Test public void testEncode2()", "class_method_signature": "JsonDecoderTest.testEncode2()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "decode"]}, "focal_class": {"identifier": "JsonDecoder", "superclass": "extends OneToOneDecoder", "interfaces": "", "fields": [{"original_string": "private Class clazz;", "modifier": "private", "type": "Class", "declarator": "clazz", "var_name": "clazz"}], "methods": [{"identifier": "JsonDecoder", "parameters": "(Class clazz)", "modifiers": "public", "return": "", "signature": " JsonDecoder(Class clazz)", "full_signature": "public  JsonDecoder(Class clazz)", "class_method_signature": "JsonDecoder.JsonDecoder(Class clazz)", "testcase": false, "constructor": true}, {"identifier": "decode", "parameters": "(ChannelHandlerContext ctx, Channel channel, Object msg)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override protected", "return": "Object", "signature": "Object decode(ChannelHandlerContext ctx, Channel channel, Object msg)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override protected Object decode(ChannelHandlerContext ctx, Channel channel, Object msg)", "class_method_signature": "JsonDecoder.decode(ChannelHandlerContext ctx, Channel channel, Object msg)", "testcase": false, "constructor": false}], "file": "swallow-common/src/main/java/com/dianping/swallow/common/internal/codec/JsonDecoder.java"}, "focal_method": {"identifier": "decode", "parameters": "(ChannelHandlerContext ctx, Channel channel, Object msg)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override protected", "return": "Object", "body": "@SuppressWarnings(\"unchecked\")\n   @Override\n   protected Object decode(ChannelHandlerContext ctx, Channel channel, Object msg) throws Exception {\n      if (!(msg instanceof ChannelBuffer)) {\n         return msg;\n      }\n\n      ChannelBuffer buf = (ChannelBuffer) msg;\n      String json = buf.toString(Charset.forName(\"UTF-8\"));\n      JsonBinder jsonBinder = JsonBinder.getNonEmptyBinder();\n      return jsonBinder.fromJson(json, clazz);\n   }", "signature": "Object decode(ChannelHandlerContext ctx, Channel channel, Object msg)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override protected Object decode(ChannelHandlerContext ctx, Channel channel, Object msg)", "class_method_signature": "JsonDecoder.decode(ChannelHandlerContext ctx, Channel channel, Object msg)", "testcase": false, "constructor": false, "invocations": ["toString", "forName", "getNonEmptyBinder", "fromJson"]}, "repository": {"repo_id": 7450263, "url": "https://github.com/liangliu/swallow", "language": "Java", "is_fork": false, "fork_count": 17, "stargazer_count": 5, "size": 2614, "license": "licensed"}}