{"test_class": {"identifier": "ConsoleResultConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String LINE_SEPARATOR = System.getProperty(\"line.separator\");", "modifier": "private static final", "type": "String", "declarator": "LINE_SEPARATOR = System.getProperty(\"line.separator\")", "var_name": "LINE_SEPARATOR"}, {"original_string": "private Writer writer;", "modifier": "private", "type": "Writer", "declarator": "writer", "var_name": "writer"}, {"original_string": "private ConsoleResultConverter converter;", "modifier": "private", "type": "ConsoleResultConverter", "declarator": "converter", "var_name": "converter"}], "file": "rexster-protocol/src/test/java/com/tinkerpop/rexster/gremlin/converter/ConsoleResultConverterTest.java"}, "test_case": {"identifier": "convertIterator", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void convertIterator() throws Exception {\n\n        ArrayList<FunObject> funList = new ArrayList<FunObject>();\n        funList.add(new FunObject(\"x\"));\n        funList.add(new FunObject(\"y\"));\n        Iterator<FunObject> iterable = funList.iterator();\n\n        List<String> converted = this.converter.convert(iterable);\n\n        Assert.assertNotNull(converted);\n        Assert.assertEquals(2, converted.size());\n\n        Assert.assertEquals(\"x\", converted.get(0));\n        Assert.assertEquals(\"y\", converted.get(1));\n    }", "signature": "void convertIterator()", "full_signature": "@Test public void convertIterator()", "class_method_signature": "ConsoleResultConverterTest.convertIterator()", "testcase": true, "constructor": false, "invocations": ["add", "add", "iterator", "convert", "assertNotNull", "assertEquals", "size", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "ConsoleResultConverter", "superclass": "", "interfaces": "implements ResultConverter<List<String>>", "fields": [{"original_string": "private static final String LINE_SEPARATOR = System.getProperty(\"line.separator\");", "modifier": "private static final", "type": "String", "declarator": "LINE_SEPARATOR = System.getProperty(\"line.separator\")", "var_name": "LINE_SEPARATOR"}, {"original_string": "private final Writer outputWriter;", "modifier": "private final", "type": "Writer", "declarator": "outputWriter", "var_name": "outputWriter"}], "methods": [{"identifier": "ConsoleResultConverter", "parameters": "(final Writer outputWriter)", "modifiers": "public", "return": "", "signature": " ConsoleResultConverter(final Writer outputWriter)", "full_signature": "public  ConsoleResultConverter(final Writer outputWriter)", "class_method_signature": "ConsoleResultConverter.ConsoleResultConverter(final Writer outputWriter)", "testcase": false, "constructor": true}, {"identifier": "convert", "parameters": "(final Object result)", "modifiers": "public", "return": "List<String>", "signature": "List<String> convert(final Object result)", "full_signature": "public List<String> convert(final Object result)", "class_method_signature": "ConsoleResultConverter.convert(final Object result)", "testcase": false, "constructor": false}], "file": "rexster-protocol/src/main/java/com/tinkerpop/rexster/gremlin/converter/ConsoleResultConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(final Object result)", "modifiers": "public", "return": "List<String>", "body": "public List<String> convert(final Object result) throws Exception {\n        try {\n            final List<Object> resultLines = new ArrayList<Object>();\n            final Iterator itty;\n            if (result instanceof Iterable) {\n                itty = ((Iterable) result).iterator();\n            } else if (result instanceof Iterator) {\n                itty = (Iterator) result;\n            } else if (result instanceof Object[]) {\n                itty = new ArrayIterator((Object[]) result);\n            } else if (result instanceof Map) {\n                itty = ((Map) result).entrySet().iterator();\n            } else if (result instanceof Throwable) {\n                itty = new SingleIterator<Object>(((Throwable) result).getMessage());\n            } else {\n                itty = new SingleIterator<Object>(result);\n            }\n\n            while (itty.hasNext()) {\n                resultLines.add(itty.next());\n            }\n\n            // Handle output data\n            final List<String> outputLines = new ArrayList<String>();\n\n            // Handle eval() result\n            final String[] printLines = this.outputWriter.toString().split(LINE_SEPARATOR);\n\n            if (printLines.length > 0 && printLines[0].length() > 0) {\n                for (String printLine : printLines) {\n                    outputLines.add(printLine);\n                }\n            }\n\n            if (resultLines != null && resultLines.size() > 0) {\n                // Make sure all lines are strings\n                for (Object resultLine : resultLines) {\n                    outputLines.add(resultLine != null ? resultLine.toString() : \"null\");\n                }\n            }\n\n            return outputLines;\n        } catch (Exception ex) {\n            final ArrayList<String> resultList = new ArrayList<String>();\n            resultList.add(ex.getMessage());\n            return resultList;\n        }\n    }", "signature": "List<String> convert(final Object result)", "full_signature": "public List<String> convert(final Object result)", "class_method_signature": "ConsoleResultConverter.convert(final Object result)", "testcase": false, "constructor": false, "invocations": ["iterator", "iterator", "entrySet", "getMessage", "hasNext", "add", "next", "split", "toString", "length", "add", "size", "add", "toString", "add", "getMessage"]}, "repository": {"repo_id": 514315, "url": "https://github.com/tinkerpop/rexster", "language": "Java", "is_fork": false, "fork_count": 114, "stargazer_count": 435, "size": 90958, "license": "licensed"}}