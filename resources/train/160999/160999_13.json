{"test_class": {"identifier": "NetUtilsTest", "superclass": "extends ZKTestCase", "interfaces": "", "fields": [{"original_string": "private Integer port = 1234;", "modifier": "private", "type": "Integer", "declarator": "port = 1234", "var_name": "port"}, {"original_string": "private String v4addr = \"127.0.0.1\";", "modifier": "private", "type": "String", "declarator": "v4addr = \"127.0.0.1\"", "var_name": "v4addr"}, {"original_string": "private String v6addr = \"[0:0:0:0:0:0:0:1]\";", "modifier": "private", "type": "String", "declarator": "v6addr = \"[0:0:0:0:0:0:0:1]\"", "var_name": "v6addr"}, {"original_string": "private String v6addr2 = \"[2600:0:0:0:0:0:0:0]\";", "modifier": "private", "type": "String", "declarator": "v6addr2 = \"[2600:0:0:0:0:0:0:0]\"", "var_name": "v6addr2"}, {"original_string": "private String v4local = v4addr + \":\" + port.toString();", "modifier": "private", "type": "String", "declarator": "v4local = v4addr + \":\" + port.toString()", "var_name": "v4local"}, {"original_string": "private String v6local = v6addr + \":\" + port.toString();", "modifier": "private", "type": "String", "declarator": "v6local = v6addr + \":\" + port.toString()", "var_name": "v6local"}, {"original_string": "private String v6ext = v6addr2 + \":\" + port.toString();", "modifier": "private", "type": "String", "declarator": "v6ext = v6addr2 + \":\" + port.toString()", "var_name": "v6ext"}], "file": "zookeeper-server/src/test/java/org/apache/zookeeper/common/NetUtilsTest.java"}, "test_case": {"identifier": "tetGetIPV6HostAndPort_WhenHostDoesNotEndWithBracket", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void tetGetIPV6HostAndPort_WhenHostDoesNotEndWithBracket() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            NetUtils.getIPV6HostAndPort(\"[2001:0db8:85a3:0000:0000:8a2e:0370:7334:443\");\n        });\n    }", "signature": "void tetGetIPV6HostAndPort_WhenHostDoesNotEndWithBracket()", "full_signature": "@Test public void tetGetIPV6HostAndPort_WhenHostDoesNotEndWithBracket()", "class_method_signature": "NetUtilsTest.tetGetIPV6HostAndPort_WhenHostDoesNotEndWithBracket()", "testcase": true, "constructor": false, "invocations": ["assertThrows", "getIPV6HostAndPort"]}, "focal_class": {"identifier": "NetUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "formatInetAddr", "parameters": "(InetSocketAddress addr)", "modifiers": "public static", "return": "String", "signature": "String formatInetAddr(InetSocketAddress addr)", "full_signature": "public static String formatInetAddr(InetSocketAddress addr)", "class_method_signature": "NetUtils.formatInetAddr(InetSocketAddress addr)", "testcase": false, "constructor": false}, {"identifier": "getIPV6HostAndPort", "parameters": "(String hostPort)", "modifiers": "public static", "return": "String[]", "signature": "String[] getIPV6HostAndPort(String hostPort)", "full_signature": "public static String[] getIPV6HostAndPort(String hostPort)", "class_method_signature": "NetUtils.getIPV6HostAndPort(String hostPort)", "testcase": false, "constructor": false}, {"identifier": "getHostPort", "parameters": "(String hostPort, int indexOfClosingBracket, String host)", "modifiers": "private static", "return": "String[]", "signature": "String[] getHostPort(String hostPort, int indexOfClosingBracket, String host)", "full_signature": "private static String[] getHostPort(String hostPort, int indexOfClosingBracket, String host)", "class_method_signature": "NetUtils.getHostPort(String hostPort, int indexOfClosingBracket, String host)", "testcase": false, "constructor": false}], "file": "zookeeper-server/src/main/java/org/apache/zookeeper/common/NetUtils.java"}, "focal_method": {"identifier": "getIPV6HostAndPort", "parameters": "(String hostPort)", "modifiers": "public static", "return": "String[]", "body": "public static String[] getIPV6HostAndPort(String hostPort) {\n        if (hostPort.startsWith(\"[\")) {\n            int i = hostPort.lastIndexOf(']');\n            if (i < 0) {\n                throw new IllegalArgumentException(\n                    hostPort + \" starts with '[' but has no matching ']'\");\n            }\n            String host = hostPort.substring(1, i);\n            if (host.isEmpty()) {\n                throw new IllegalArgumentException(host + \" is empty.\");\n            }\n            if (hostPort.length() > i + 1) {\n                return getHostPort(hostPort, i, host);\n            }\n            return new String[] { host };\n        } else {\n            //Not an IPV6 host port string\n            return new String[] {};\n        }\n    }", "signature": "String[] getIPV6HostAndPort(String hostPort)", "full_signature": "public static String[] getIPV6HostAndPort(String hostPort)", "class_method_signature": "NetUtils.getIPV6HostAndPort(String hostPort)", "testcase": false, "constructor": false, "invocations": ["startsWith", "lastIndexOf", "substring", "isEmpty", "length", "getHostPort"]}, "repository": {"repo_id": 160999, "url": "https://github.com/apache/zookeeper", "stars": 7612, "created": "3/27/2009 3:41:56 PM +00:00", "updates": "2020-01-27T13:06:42+00:00", "fork": "False", "license": "licensed"}}