{"test_class": {"identifier": "OMIServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "OMPManager mockOMP;", "modifier": "", "type": "OMPManager", "declarator": "mockOMP", "var_name": "mockOMP"}, {"original_string": "CoreManager mockCore;", "modifier": "", "type": "CoreManager", "declarator": "mockCore", "var_name": "mockCore"}, {"original_string": "Transaction mockTrans;", "modifier": "", "type": "Transaction", "declarator": "mockTrans", "var_name": "mockTrans"}, {"original_string": "OMIServiceImpl instance;", "modifier": "", "type": "OMIServiceImpl", "declarator": "instance", "var_name": "instance"}, {"original_string": "MessageStoreManager mockStore;", "modifier": "", "type": "MessageStoreManager", "declarator": "mockStore", "var_name": "mockStore"}, {"original_string": "MessageRequestDAO mockRequestDao;", "modifier": "", "type": "MessageRequestDAO", "declarator": "mockRequestDao", "var_name": "mockRequestDao"}, {"original_string": "LanguageDAO mockLangDao;", "modifier": "", "type": "LanguageDAO", "declarator": "mockLangDao", "var_name": "mockLangDao"}, {"original_string": "NotificationTypeDAO mockNoteDao;", "modifier": "", "type": "NotificationTypeDAO", "declarator": "mockNoteDao", "var_name": "mockNoteDao"}, {"original_string": "MobileMessagingService mockMobileMessagingService;", "modifier": "", "type": "MobileMessagingService", "declarator": "mockMobileMessagingService", "var_name": "mockMobileMessagingService"}, {"original_string": "GatewayRequestDAO mockGatewayDao;", "modifier": "", "type": "GatewayRequestDAO", "declarator": "mockGatewayDao", "var_name": "mockGatewayDao"}, {"original_string": "GatewayResponseDAO mockResponseDao;", "modifier": "", "type": "GatewayResponseDAO", "declarator": "mockResponseDao", "var_name": "mockResponseDao"}, {"original_string": "GatewayRequestDetailsDAO mockGwDetDao;", "modifier": "", "type": "GatewayRequestDetailsDAO", "declarator": "mockGwDetDao", "var_name": "mockGwDetDao"}, {"original_string": "StatusHandler mockHandler;", "modifier": "", "type": "StatusHandler", "declarator": "mockHandler", "var_name": "mockHandler"}, {"original_string": "OMIServiceWorker mockWorker;", "modifier": "", "type": "OMIServiceWorker", "declarator": "mockWorker", "var_name": "mockWorker"}], "file": "motech-mobile-omi/src/test/java/org/motechproject/mobile/omi/service/OMIServiceImplTest.java"}, "test_case": {"identifier": "testProcessMessageRetries", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcessMessageRetries(){\n        System.out.println(\"processMessageRetries\");\n        List<MessageRequest> messageList = new ArrayList<MessageRequest>();\n        \n        MessageRequest msgReq1 = new MessageRequestImpl();\n        msgReq1.setDateFrom(new Date());\n        msgReq1.setDateTo(new Date());\n        msgReq1.setId(19000000003l);\n        msgReq1.setTryNumber(1);\n        msgReq1.setMessageType(MessageType.TEXT);\n        msgReq1.setRecipientName(\"Tester\");\n        msgReq1.setRecipientNumber(\"000000000000\");\n        msgReq1.setStatus(MStatus.QUEUED);\n        messageList.add(msgReq1);\n        \n        GatewayRequestDetails details = new GatewayRequestDetailsImpl();\n        details.setId(19000000004l);\n        details.setMessage(\"Some message\");\n        details.setMessageType(MessageType.TEXT);\n        details.setNumberOfPages(1);\n        details.setGatewayRequests(new HashSet());\n        \n        msgReq1.setGatewayRequestDetails(details);\n      \n        expect(\n                mockCore.createMessageRequestDAO()\n                ).andReturn(mockRequestDao);\n        expect(\n                mockRequestDao.getMsgRequestByStatusAndTryNumber((MStatus) anyObject(), anyInt())\n                ).andReturn(messageList);\n        \n        replay(mockCore, mockRequestDao);\n        instance.processMessageRetries();\n        verify(mockCore, mockRequestDao);\n    }", "signature": "void testProcessMessageRetries()", "full_signature": "@Test public void testProcessMessageRetries()", "class_method_signature": "OMIServiceImplTest.testProcessMessageRetries()", "testcase": true, "constructor": false, "invocations": ["println", "setDateFrom", "setDateTo", "setId", "setTryNumber", "setMessageType", "setRecipientName", "setRecipientNumber", "setStatus", "add", "setId", "setMessage", "setMessageType", "setNumberOfPages", "setGatewayRequests", "setGatewayRequestDetails", "andReturn", "expect", "createMessageRequestDAO", "andReturn", "expect", "getMsgRequestByStatusAndTryNumber", "anyObject", "anyInt", "replay", "processMessageRetries", "verify"]}, "focal_class": {"identifier": "OMIServiceImpl", "superclass": "", "interfaces": "implements OMIService", "fields": [{"original_string": "private MessageStoreManager storeManager;", "modifier": "private", "type": "MessageStoreManager", "declarator": "storeManager", "var_name": "storeManager"}, {"original_string": "private OMIManager omiManager;", "modifier": "private", "type": "OMIManager", "declarator": "omiManager", "var_name": "omiManager"}, {"original_string": "private OMPManager ompManager;", "modifier": "private", "type": "OMPManager", "declarator": "ompManager", "var_name": "ompManager"}, {"original_string": "private CoreManager coreManager;", "modifier": "private", "type": "CoreManager", "declarator": "coreManager", "var_name": "coreManager"}, {"original_string": "private StatusHandler statHandler;", "modifier": "private", "type": "StatusHandler", "declarator": "statHandler", "var_name": "statHandler"}, {"original_string": "private static Logger logger = Logger.getLogger(OMIServiceImpl.class);", "modifier": "private static", "type": "Logger", "declarator": "logger = Logger.getLogger(OMIServiceImpl.class)", "var_name": "logger"}, {"original_string": "private String defaultLang;", "modifier": "private", "type": "String", "declarator": "defaultLang", "var_name": "defaultLang"}, {"original_string": "private int maxTries;", "modifier": "private", "type": "int", "declarator": "maxTries", "var_name": "maxTries"}, {"original_string": "private OMIServiceWorker worker;", "modifier": "private", "type": "OMIServiceWorker", "declarator": "worker", "var_name": "worker"}], "methods": [{"identifier": "OMIServiceImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " OMIServiceImpl()", "full_signature": "public  OMIServiceImpl()", "class_method_signature": "OMIServiceImpl.OMIServiceImpl()", "testcase": false, "constructor": true}, {"identifier": "savePatientMessageRequest", "parameters": "(String messageId,\n                                                   NameValuePair[] personalInfo,\n                                                   String patientNumber,\n                                                   ContactNumberType patientNumberType,\n                                                   String langCode,\n                                                   MediaType mediaType,\n                                                   Long notificationType,\n                                                   Date startDate,\n                                                   Date endDate,\n                                                   String recipientId)", "modifiers": "public", "return": "MessageStatus", "signature": "MessageStatus savePatientMessageRequest(String messageId,\n                                                   NameValuePair[] personalInfo,\n                                                   String patientNumber,\n                                                   ContactNumberType patientNumberType,\n                                                   String langCode,\n                                                   MediaType mediaType,\n                                                   Long notificationType,\n                                                   Date startDate,\n                                                   Date endDate,\n                                                   String recipientId)", "full_signature": "public MessageStatus savePatientMessageRequest(String messageId,\n                                                   NameValuePair[] personalInfo,\n                                                   String patientNumber,\n                                                   ContactNumberType patientNumberType,\n                                                   String langCode,\n                                                   MediaType mediaType,\n                                                   Long notificationType,\n                                                   Date startDate,\n                                                   Date endDate,\n                                                   String recipientId)", "class_method_signature": "OMIServiceImpl.savePatientMessageRequest(String messageId,\n                                                   NameValuePair[] personalInfo,\n                                                   String patientNumber,\n                                                   ContactNumberType patientNumberType,\n                                                   String langCode,\n                                                   MediaType mediaType,\n                                                   Long notificationType,\n                                                   Date startDate,\n                                                   Date endDate,\n                                                   String recipientId)", "testcase": false, "constructor": false}, {"identifier": "getNotificationType", "parameters": "(Long notificationTypeNumber)", "modifiers": "private", "return": "NotificationType", "signature": "NotificationType getNotificationType(Long notificationTypeNumber)", "full_signature": "private NotificationType getNotificationType(Long notificationTypeNumber)", "class_method_signature": "OMIServiceImpl.getNotificationType(Long notificationTypeNumber)", "testcase": false, "constructor": false}, {"identifier": "saveCHPSMessageRequest", "parameters": "(String messageId, NameValuePair[] personalInfo, String workerNumber, Patient[] patientList, String langCode, MediaType messageType, Long notificationType, Date startDate, Date endDate)", "modifiers": "public", "return": "MessageStatus", "signature": "MessageStatus saveCHPSMessageRequest(String messageId, NameValuePair[] personalInfo, String workerNumber, Patient[] patientList, String langCode, MediaType messageType, Long notificationType, Date startDate, Date endDate)", "full_signature": "public MessageStatus saveCHPSMessageRequest(String messageId, NameValuePair[] personalInfo, String workerNumber, Patient[] patientList, String langCode, MediaType messageType, Long notificationType, Date startDate, Date endDate)", "class_method_signature": "OMIServiceImpl.saveCHPSMessageRequest(String messageId, NameValuePair[] personalInfo, String workerNumber, Patient[] patientList, String langCode, MediaType messageType, Long notificationType, Date startDate, Date endDate)", "testcase": false, "constructor": false}, {"identifier": "sendMessage", "parameters": "(MessageRequest message)", "modifiers": "public", "return": "MessageStatus", "signature": "MessageStatus sendMessage(MessageRequest message)", "full_signature": "public MessageStatus sendMessage(MessageRequest message)", "class_method_signature": "OMIServiceImpl.sendMessage(MessageRequest message)", "testcase": false, "constructor": false}, {"identifier": "sendMessage", "parameters": "(MessageRequest message, String content)", "modifiers": "public", "return": "MessageStatus", "signature": "MessageStatus sendMessage(MessageRequest message, String content)", "full_signature": "public MessageStatus sendMessage(MessageRequest message, String content)", "class_method_signature": "OMIServiceImpl.sendMessage(MessageRequest message, String content)", "testcase": false, "constructor": false}, {"identifier": "sendMessage", "parameters": "(String content, String recipient)", "modifiers": "public", "return": "MessageStatus", "signature": "MessageStatus sendMessage(String content, String recipient)", "full_signature": "public MessageStatus sendMessage(String content, String recipient)", "class_method_signature": "OMIServiceImpl.sendMessage(String content, String recipient)", "testcase": false, "constructor": false}, {"identifier": "scheduleMessage", "parameters": "(String content, String recipient)", "modifiers": "public", "return": "MessageStatus", "signature": "MessageStatus scheduleMessage(String content, String recipient)", "full_signature": "public MessageStatus scheduleMessage(String content, String recipient)", "class_method_signature": "OMIServiceImpl.scheduleMessage(String content, String recipient)", "testcase": false, "constructor": false}, {"identifier": "scheduleMessage", "parameters": "(MessageRequest message, String content)", "modifiers": "public", "return": "MessageStatus", "signature": "MessageStatus scheduleMessage(MessageRequest message, String content)", "full_signature": "public MessageStatus scheduleMessage(MessageRequest message, String content)", "class_method_signature": "OMIServiceImpl.scheduleMessage(MessageRequest message, String content)", "testcase": false, "constructor": false}, {"identifier": "sendDefaulterMessage", "parameters": "(String messageId, String workerNumber, Care[] cares,\n                                              CareMessageGroupingStrategy groupingStrategy,\n                                              MediaType messageType, Date startDate, Date endDate)", "modifiers": "public", "return": "MessageStatus", "signature": "MessageStatus sendDefaulterMessage(String messageId, String workerNumber, Care[] cares,\n                                              CareMessageGroupingStrategy groupingStrategy,\n                                              MediaType messageType, Date startDate, Date endDate)", "full_signature": "public MessageStatus sendDefaulterMessage(String messageId, String workerNumber, Care[] cares,\n                                              CareMessageGroupingStrategy groupingStrategy,\n                                              MediaType messageType, Date startDate, Date endDate)", "class_method_signature": "OMIServiceImpl.sendDefaulterMessage(String messageId, String workerNumber, Care[] cares,\n                                              CareMessageGroupingStrategy groupingStrategy,\n                                              MediaType messageType, Date startDate, Date endDate)", "testcase": false, "constructor": false}, {"identifier": "sendDeliveriesMessage", "parameters": "(String messageId, String workerNumber, Patient[] patients, String deliveryStatus, MediaType messageType, Date startDate, Date endDate)", "modifiers": "public", "return": "MessageStatus", "signature": "MessageStatus sendDeliveriesMessage(String messageId, String workerNumber, Patient[] patients, String deliveryStatus, MediaType messageType, Date startDate, Date endDate)", "full_signature": "public MessageStatus sendDeliveriesMessage(String messageId, String workerNumber, Patient[] patients, String deliveryStatus, MediaType messageType, Date startDate, Date endDate)", "class_method_signature": "OMIServiceImpl.sendDeliveriesMessage(String messageId, String workerNumber, Patient[] patients, String deliveryStatus, MediaType messageType, Date startDate, Date endDate)", "testcase": false, "constructor": false}, {"identifier": "sendUpcomingCaresMessage", "parameters": "(String messageId, String workerNumber, Patient patient, MediaType messageType, Date startDate, Date endDate)", "modifiers": "public", "return": "MessageStatus", "signature": "MessageStatus sendUpcomingCaresMessage(String messageId, String workerNumber, Patient patient, MediaType messageType, Date startDate, Date endDate)", "full_signature": "public MessageStatus sendUpcomingCaresMessage(String messageId, String workerNumber, Patient patient, MediaType messageType, Date startDate, Date endDate)", "class_method_signature": "OMIServiceImpl.sendUpcomingCaresMessage(String messageId, String workerNumber, Patient patient, MediaType messageType, Date startDate, Date endDate)", "testcase": false, "constructor": false}, {"identifier": "sendBulkCaresMessage", "parameters": "(String messageId, String workerNumber, Care[] cares,\n                                              CareMessageGroupingStrategy groupingStrategy,\n                                              MediaType messageType, Date startDate, Date endDate)", "modifiers": "public", "return": "MessageStatus", "signature": "MessageStatus sendBulkCaresMessage(String messageId, String workerNumber, Care[] cares,\n                                              CareMessageGroupingStrategy groupingStrategy,\n                                              MediaType messageType, Date startDate, Date endDate)", "full_signature": "public MessageStatus sendBulkCaresMessage(String messageId, String workerNumber, Care[] cares,\n                                              CareMessageGroupingStrategy groupingStrategy,\n                                              MediaType messageType, Date startDate, Date endDate)", "class_method_signature": "OMIServiceImpl.sendBulkCaresMessage(String messageId, String workerNumber, Care[] cares,\n                                              CareMessageGroupingStrategy groupingStrategy,\n                                              MediaType messageType, Date startDate, Date endDate)", "testcase": false, "constructor": false}, {"identifier": "processMessageRequests", "parameters": "()", "modifiers": "@Transactional(readOnly = true) public", "return": "void", "signature": "void processMessageRequests()", "full_signature": "@Transactional(readOnly = true) public void processMessageRequests()", "class_method_signature": "OMIServiceImpl.processMessageRequests()", "testcase": false, "constructor": false}, {"identifier": "processMessageRequest", "parameters": "(MessageRequest message, Language defaultLanguage)", "modifiers": "public", "return": "void", "signature": "void processMessageRequest(MessageRequest message, Language defaultLanguage)", "full_signature": "public void processMessageRequest(MessageRequest message, Language defaultLanguage)", "class_method_signature": "OMIServiceImpl.processMessageRequest(MessageRequest message, Language defaultLanguage)", "testcase": false, "constructor": false}, {"identifier": "processMessageRetries", "parameters": "()", "modifiers": "@Transactional(readOnly = true) public", "return": "void", "signature": "void processMessageRetries()", "full_signature": "@Transactional(readOnly = true) public void processMessageRetries()", "class_method_signature": "OMIServiceImpl.processMessageRetries()", "testcase": false, "constructor": false}, {"identifier": "processMessageRetry", "parameters": "(MessageRequest message)", "modifiers": "public", "return": "void", "signature": "void processMessageRetry(MessageRequest message)", "full_signature": "public void processMessageRetry(MessageRequest message)", "class_method_signature": "OMIServiceImpl.processMessageRetry(MessageRequest message)", "testcase": false, "constructor": false}, {"identifier": "processMessageResponses", "parameters": "()", "modifiers": "@Transactional(readOnly = true) public", "return": "void", "signature": "void processMessageResponses()", "full_signature": "@Transactional(readOnly = true) public void processMessageResponses()", "class_method_signature": "OMIServiceImpl.processMessageResponses()", "testcase": false, "constructor": false}, {"identifier": "processMessageResponse", "parameters": "(GatewayResponse response)", "modifiers": "public", "return": "void", "signature": "void processMessageResponse(GatewayResponse response)", "full_signature": "public void processMessageResponse(GatewayResponse response)", "class_method_signature": "OMIServiceImpl.processMessageResponse(GatewayResponse response)", "testcase": false, "constructor": false}, {"identifier": "getStoreManager", "parameters": "()", "modifiers": "public", "return": "MessageStoreManager", "signature": "MessageStoreManager getStoreManager()", "full_signature": "public MessageStoreManager getStoreManager()", "class_method_signature": "OMIServiceImpl.getStoreManager()", "testcase": false, "constructor": false}, {"identifier": "setStoreManager", "parameters": "(MessageStoreManager storeManager)", "modifiers": "public", "return": "void", "signature": "void setStoreManager(MessageStoreManager storeManager)", "full_signature": "public void setStoreManager(MessageStoreManager storeManager)", "class_method_signature": "OMIServiceImpl.setStoreManager(MessageStoreManager storeManager)", "testcase": false, "constructor": false}, {"identifier": "getOmpManager", "parameters": "()", "modifiers": "public", "return": "OMPManager", "signature": "OMPManager getOmpManager()", "full_signature": "public OMPManager getOmpManager()", "class_method_signature": "OMIServiceImpl.getOmpManager()", "testcase": false, "constructor": false}, {"identifier": "setOmpManager", "parameters": "(OMPManager ompManager)", "modifiers": "public", "return": "void", "signature": "void setOmpManager(OMPManager ompManager)", "full_signature": "public void setOmpManager(OMPManager ompManager)", "class_method_signature": "OMIServiceImpl.setOmpManager(OMPManager ompManager)", "testcase": false, "constructor": false}, {"identifier": "getCoreManager", "parameters": "()", "modifiers": "public", "return": "CoreManager", "signature": "CoreManager getCoreManager()", "full_signature": "public CoreManager getCoreManager()", "class_method_signature": "OMIServiceImpl.getCoreManager()", "testcase": false, "constructor": false}, {"identifier": "setCoreManager", "parameters": "(CoreManager coreManager)", "modifiers": "public", "return": "void", "signature": "void setCoreManager(CoreManager coreManager)", "full_signature": "public void setCoreManager(CoreManager coreManager)", "class_method_signature": "OMIServiceImpl.setCoreManager(CoreManager coreManager)", "testcase": false, "constructor": false}, {"identifier": "getStatHandler", "parameters": "()", "modifiers": "public", "return": "StatusHandler", "signature": "StatusHandler getStatHandler()", "full_signature": "public StatusHandler getStatHandler()", "class_method_signature": "OMIServiceImpl.getStatHandler()", "testcase": false, "constructor": false}, {"identifier": "setStatHandler", "parameters": "(StatusHandler statHandler)", "modifiers": "public", "return": "void", "signature": "void setStatHandler(StatusHandler statHandler)", "full_signature": "public void setStatHandler(StatusHandler statHandler)", "class_method_signature": "OMIServiceImpl.setStatHandler(StatusHandler statHandler)", "testcase": false, "constructor": false}, {"identifier": "getDefaultLang", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDefaultLang()", "full_signature": "public String getDefaultLang()", "class_method_signature": "OMIServiceImpl.getDefaultLang()", "testcase": false, "constructor": false}, {"identifier": "setDefaultLang", "parameters": "(String defaultLang)", "modifiers": "public", "return": "void", "signature": "void setDefaultLang(String defaultLang)", "full_signature": "public void setDefaultLang(String defaultLang)", "class_method_signature": "OMIServiceImpl.setDefaultLang(String defaultLang)", "testcase": false, "constructor": false}, {"identifier": "getMaxTries", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxTries()", "full_signature": "public int getMaxTries()", "class_method_signature": "OMIServiceImpl.getMaxTries()", "testcase": false, "constructor": false}, {"identifier": "setMaxTries", "parameters": "(int maxRetries)", "modifiers": "public", "return": "void", "signature": "void setMaxTries(int maxRetries)", "full_signature": "public void setMaxTries(int maxRetries)", "class_method_signature": "OMIServiceImpl.setMaxTries(int maxRetries)", "testcase": false, "constructor": false}, {"identifier": "setOmiManager", "parameters": "(OMIManager omiManager)", "modifiers": "public", "return": "void", "signature": "void setOmiManager(OMIManager omiManager)", "full_signature": "public void setOmiManager(OMIManager omiManager)", "class_method_signature": "OMIServiceImpl.setOmiManager(OMIManager omiManager)", "testcase": false, "constructor": false}, {"identifier": "getWorker", "parameters": "()", "modifiers": "public", "return": "OMIServiceWorker", "signature": "OMIServiceWorker getWorker()", "full_signature": "public OMIServiceWorker getWorker()", "class_method_signature": "OMIServiceImpl.getWorker()", "testcase": false, "constructor": false}, {"identifier": "setWorker", "parameters": "(OMIServiceWorker worker)", "modifiers": "public", "return": "void", "signature": "void setWorker(OMIServiceWorker worker)", "full_signature": "public void setWorker(OMIServiceWorker worker)", "class_method_signature": "OMIServiceImpl.setWorker(OMIServiceWorker worker)", "testcase": false, "constructor": false}], "file": "motech-mobile-omi/src/main/java/org/motechproject/mobile/omi/service/OMIServiceImpl.java"}, "focal_method": {"identifier": "processMessageRetries", "parameters": "()", "modifiers": "@Transactional(readOnly = true) public", "return": "void", "body": "@Transactional(readOnly = true)\n    public void processMessageRetries() {\n        MessageRequestDAO msgReqDao = coreManager.createMessageRequestDAO();\n        List<MessageRequest> messages = msgReqDao.getMsgRequestByStatusAndTryNumber(MStatus.RETRY, maxTries);\n\n        if (messages == null || messages.isEmpty()) {\n            logger.info(\"No message request to retry\");\n            return;\n        }\n        logger.info(\"Fetched \" + messages.size() + \" message requests for retry\");\n\n        logger.info(\"Processing messages...\");\n        for (MessageRequest message : messages) {\n            try {\n                processMessageRetry(message);\n            } catch (Exception e) {\n                logger.error(\"Error while retrying message requests: \", e);\n            }\n        }\n\n        logger.info(\"Messages processed successfully\");\n    }", "signature": "void processMessageRetries()", "full_signature": "@Transactional(readOnly = true) public void processMessageRetries()", "class_method_signature": "OMIServiceImpl.processMessageRetries()", "testcase": false, "constructor": false, "invocations": ["createMessageRequestDAO", "getMsgRequestByStatusAndTryNumber", "isEmpty", "info", "info", "size", "info", "processMessageRetry", "error", "info"]}, "repository": {"repo_id": 1076094, "url": "https://github.com/motech/MOTECH-Mobile", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 4295, "license": "licensed"}}