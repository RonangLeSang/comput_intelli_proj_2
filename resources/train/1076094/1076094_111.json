{"test_class": {"identifier": "IntellIVRBeanTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Resource\n\tIntellIVRBean intellivrBean;", "modifier": "@Resource", "type": "IntellIVRBean", "declarator": "intellivrBean", "var_name": "intellivrBean"}, {"original_string": "Language english;", "modifier": "", "type": "Language", "declarator": "english", "var_name": "english"}, {"original_string": "NotificationType n1,n2,n3;", "modifier": "", "type": "NotificationType", "declarator": "n1", "var_name": "n1"}, {"original_string": "long n1Id = 1;", "modifier": "", "type": "long", "declarator": "n1Id = 1", "var_name": "n1Id"}, {"original_string": "String n1IvrEntityName = \"weekly_tree_name\";", "modifier": "", "type": "String", "declarator": "n1IvrEntityName = \"weekly_tree_name\"", "var_name": "n1IvrEntityName"}, {"original_string": "long n2Id = 2;", "modifier": "", "type": "long", "declarator": "n2Id = 2", "var_name": "n2Id"}, {"original_string": "String n2IvrEntityName = \"reminder_message1.wav\";", "modifier": "", "type": "String", "declarator": "n2IvrEntityName = \"reminder_message1.wav\"", "var_name": "n2IvrEntityName"}, {"original_string": "long n3Id = 3;", "modifier": "", "type": "long", "declarator": "n3Id = 3", "var_name": "n3Id"}, {"original_string": "String n3IvrEntityName = \"reminder_message2.wav\";", "modifier": "", "type": "String", "declarator": "n3IvrEntityName = \"reminder_message2.wav\"", "var_name": "n3IvrEntityName"}, {"original_string": "String primaryInfoRecordingName = \"grameengh_pregnancy_week_11StartingMenuesPwd\";", "modifier": "", "type": "String", "declarator": "primaryInfoRecordingName = \"grameengh_pregnancy_week_11StartingMenuesPwd\"", "var_name": "primaryInfoRecordingName"}, {"original_string": "String secondaryInfoRecordingName = \"grameengh_TertiaryMessagep_wk11b\";", "modifier": "", "type": "String", "declarator": "secondaryInfoRecordingName = \"grameengh_TertiaryMessagep_wk11b\"", "var_name": "secondaryInfoRecordingName"}, {"original_string": "String recipientId1 = \"1234567\";", "modifier": "", "type": "String", "declarator": "recipientId1 = \"1234567\"", "var_name": "recipientId1"}, {"original_string": "String phone1 = \"5555551\";", "modifier": "", "type": "String", "declarator": "phone1 = \"5555551\"", "var_name": "phone1"}, {"original_string": "List<ErrorCodeType> fatalServerErrorCodes = new ArrayList<ErrorCodeType>();", "modifier": "", "type": "List<ErrorCodeType>", "declarator": "fatalServerErrorCodes = new ArrayList<ErrorCodeType>()", "var_name": "fatalServerErrorCodes"}, {"original_string": "List<ReportStatusType> reportFailedStatusTypes = new ArrayList<ReportStatusType>();", "modifier": "", "type": "List<ReportStatusType>", "declarator": "reportFailedStatusTypes = new ArrayList<ReportStatusType>()", "var_name": "reportFailedStatusTypes"}, {"original_string": "private long nextRequestId = 0;", "modifier": "private", "type": "long", "declarator": "nextRequestId = 0", "var_name": "nextRequestId"}], "file": "motech-mobile-omp/src/test/java/org/motechproject/mobile/omp/manager/intellivr/IntellIVRBeanTest.java"}, "test_case": {"identifier": "testProcessWaitingSessions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testProcessWaitingSessions() {\n\t\t\n\t\tDate now = new Date();\n\t\tDate oneMinuteAgo = addToDate(now, GregorianCalendar.MINUTE, -1);\n\t\tDate oneMinuteLessBundlingDelayAgo = addToDate(now, GregorianCalendar.MINUTE, (int)intellivrBean.getBundlingDelay()*-1);\n\t\t\n\t\tIVRCallSession session = new IVRCallSession(recipientId1, phone1, english.getName(), IVRCallSession.OUTBOUND, 0, 0, IVRCallSession.SEND_WAIT, oneMinuteLessBundlingDelayAgo, oneMinuteAgo);\n\t\t\n\t\tList<IVRCallSession> expectedDaoResponse = new ArrayList<IVRCallSession>();\n\t\texpectedDaoResponse.add(session);\n\t\t\n\t\tIVRDAO mockDao = createMock(IVRDAO.class);\n\t\tintellivrBean.setIvrDao(mockDao);\n\t\t\n\t\tInteger[] states = { IVRCallSession.SEND_WAIT };\n\t\t\n\t\texpect(mockDao.loadIVRCallSessionsByStateNextAttemptBeforeDate(EasyMock.aryEq(states), (Date)EasyMock.anyObject())).andReturn(expectedDaoResponse);\n\t\t\n\t\tIVRCallRequester mockRequester = createMock(IVRCallRequester.class);\n\t\tintellivrBean.setIvrCallRequester(mockRequester);\n\t\t\n\t\tmockRequester.requestCall((IVRCallSession)EasyMock.anyObject(), (String)EasyMock.anyObject());\n\t\t\n\t\treplay(mockDao,mockRequester);\n\t\t\n\t\tintellivrBean.processWaitingSessions();\n\t\t\n\t\tassertEquals(IVRCallSession.SEND_WAIT, session.getState());\n\t\t\n\t\tverify(mockDao,mockRequester);\n\t\t\n\t}", "signature": "void testProcessWaitingSessions()", "full_signature": "@Test public void testProcessWaitingSessions()", "class_method_signature": "IntellIVRBeanTest.testProcessWaitingSessions()", "testcase": true, "constructor": false, "invocations": ["addToDate", "addToDate", "getBundlingDelay", "getName", "add", "createMock", "setIvrDao", "andReturn", "expect", "loadIVRCallSessionsByStateNextAttemptBeforeDate", "aryEq", "anyObject", "createMock", "setIvrCallRequester", "requestCall", "anyObject", "anyObject", "replay", "processWaitingSessions", "assertEquals", "getState", "verify"]}, "focal_class": {"identifier": "IntellIVRBean", "superclass": "", "interfaces": "implements GatewayManager, GetIVRConfigRequestHandler, IVRCallRequester, IVRCallSessionProcessor, IVRCallStatsProvider, ReportHandler", "fields": [{"original_string": "private GatewayMessageHandler messageHandler;", "modifier": "private", "type": "GatewayMessageHandler", "declarator": "messageHandler", "var_name": "messageHandler"}, {"original_string": "protected String reportURL;", "modifier": "protected", "type": "String", "declarator": "reportURL", "var_name": "reportURL"}, {"original_string": "private String apiID;", "modifier": "private", "type": "String", "declarator": "apiID", "var_name": "apiID"}, {"original_string": "private String method;", "modifier": "private", "type": "String", "declarator": "method", "var_name": "method"}, {"original_string": "private String defaultLanguage;", "modifier": "private", "type": "String", "declarator": "defaultLanguage", "var_name": "defaultLanguage"}, {"original_string": "private String defaultTree;", "modifier": "private", "type": "String", "declarator": "defaultTree", "var_name": "defaultTree"}, {"original_string": "private String defaultReminder;", "modifier": "private", "type": "String", "declarator": "defaultReminder", "var_name": "defaultReminder"}, {"original_string": "private IntellIVRServer ivrServer;", "modifier": "private", "type": "IntellIVRServer", "declarator": "ivrServer", "var_name": "ivrServer"}, {"original_string": "private MessageStatusStore statusStore;", "modifier": "private", "type": "MessageStatusStore", "declarator": "statusStore", "var_name": "statusStore"}, {"original_string": "protected Map<Long, IVRNotificationMapping> ivrNotificationMap;", "modifier": "protected", "type": "Map<Long, IVRNotificationMapping>", "declarator": "ivrNotificationMap", "var_name": "ivrNotificationMap"}, {"original_string": "protected Map<String, Long> ivrReminderIds;", "modifier": "protected", "type": "Map<String, Long>", "declarator": "ivrReminderIds", "var_name": "ivrReminderIds"}, {"original_string": "private long bundlingDelay;", "modifier": "private", "type": "long", "declarator": "bundlingDelay", "var_name": "bundlingDelay"}, {"original_string": "private int retryDelay;", "modifier": "private", "type": "int", "declarator": "retryDelay", "var_name": "retryDelay"}, {"original_string": "private int maxAttempts;", "modifier": "private", "type": "int", "declarator": "maxAttempts", "var_name": "maxAttempts"}, {"original_string": "private int maxDays;", "modifier": "private", "type": "int", "declarator": "maxDays", "var_name": "maxDays"}, {"original_string": "private int availableDays;", "modifier": "private", "type": "int", "declarator": "availableDays", "var_name": "availableDays"}, {"original_string": "private int callCompletedThreshold;", "modifier": "private", "type": "int", "declarator": "callCompletedThreshold", "var_name": "callCompletedThreshold"}, {"original_string": "private int preReminderDelay;", "modifier": "private", "type": "int", "declarator": "preReminderDelay", "var_name": "preReminderDelay"}, {"original_string": "private boolean accelerateRetries;", "modifier": "private", "type": "boolean", "declarator": "accelerateRetries", "var_name": "accelerateRetries"}, {"original_string": "private String noPendingMessagesRecordingName;", "modifier": "private", "type": "String", "declarator": "noPendingMessagesRecordingName", "var_name": "noPendingMessagesRecordingName"}, {"original_string": "private String welcomeMessageRecordingName;", "modifier": "private", "type": "String", "declarator": "welcomeMessageRecordingName", "var_name": "welcomeMessageRecordingName"}, {"original_string": "private Resource mappingResource;", "modifier": "private", "type": "Resource", "declarator": "mappingResource", "var_name": "mappingResource"}, {"original_string": "private CoreManager coreManager;", "modifier": "private", "type": "CoreManager", "declarator": "coreManager", "var_name": "coreManager"}, {"original_string": "private RegistrarService registrarService;", "modifier": "private", "type": "RegistrarService", "declarator": "registrarService", "var_name": "registrarService"}, {"original_string": "private IVRDAO ivrDao;", "modifier": "private", "type": "IVRDAO", "declarator": "ivrDao", "var_name": "ivrDao"}, {"original_string": "private IVRCallRequester ivrCallRequester;", "modifier": "private", "type": "IVRCallRequester", "declarator": "ivrCallRequester", "var_name": "ivrCallRequester"}, {"original_string": "private Log log = LogFactory.getLog(IntellIVRBean.class);", "modifier": "private", "type": "Log", "declarator": "log = LogFactory.getLog(IntellIVRBean.class)", "var_name": "log"}, {"original_string": "private Log reportLog = LogFactory.getLog(IntellIVRBean.class.getName() + \".reportlog\");", "modifier": "private", "type": "Log", "declarator": "reportLog = LogFactory.getLog(IntellIVRBean.class.getName() + \".reportlog\")", "var_name": "reportLog"}, {"original_string": "private Log callLog = LogFactory.getLog(IntellIVRBean.class.getName() + \".calllog\");", "modifier": "private", "type": "Log", "declarator": "callLog = LogFactory.getLog(IntellIVRBean.class.getName() + \".calllog\")", "var_name": "callLog"}], "methods": [{"identifier": "init", "parameters": "()", "modifiers": "@Transactional public", "return": "void", "signature": "void init()", "full_signature": "@Transactional public void init()", "class_method_signature": "IntellIVRBean.init()", "testcase": false, "constructor": false}, {"identifier": "addIvrNotificationMappingDetails", "parameters": "(Matcher matcher)", "modifiers": "private", "return": "void", "signature": "void addIvrNotificationMappingDetails(Matcher matcher)", "full_signature": "private void addIvrNotificationMappingDetails(Matcher matcher)", "class_method_signature": "IntellIVRBean.addIvrNotificationMappingDetails(Matcher matcher)", "testcase": false, "constructor": false}, {"identifier": "cleanUp", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void cleanUp()", "full_signature": "public void cleanUp()", "class_method_signature": "IntellIVRBean.cleanUp()", "testcase": false, "constructor": false}, {"identifier": "getMessageStatus", "parameters": "(GatewayResponse response)", "modifiers": "public", "return": "String", "signature": "String getMessageStatus(GatewayResponse response)", "full_signature": "public String getMessageStatus(GatewayResponse response)", "class_method_signature": "IntellIVRBean.getMessageStatus(GatewayResponse response)", "testcase": false, "constructor": false}, {"identifier": "mapMessageStatus", "parameters": "(GatewayResponse response)", "modifiers": "public", "return": "MStatus", "signature": "MStatus mapMessageStatus(GatewayResponse response)", "full_signature": "public MStatus mapMessageStatus(GatewayResponse response)", "class_method_signature": "IntellIVRBean.mapMessageStatus(GatewayResponse response)", "testcase": false, "constructor": false}, {"identifier": "sendMessage", "parameters": "(GatewayRequest gatewayRequest)", "modifiers": "@Transactional public", "return": "Set<GatewayResponse>", "signature": "Set<GatewayResponse> sendMessage(GatewayRequest gatewayRequest)", "full_signature": "@Transactional public Set<GatewayResponse> sendMessage(GatewayRequest gatewayRequest)", "class_method_signature": "IntellIVRBean.sendMessage(GatewayRequest gatewayRequest)", "testcase": false, "constructor": false}, {"identifier": "processOpenSessions", "parameters": "()", "modifiers": "@Transactional public", "return": "void", "signature": "void processOpenSessions()", "full_signature": "@Transactional public void processOpenSessions()", "class_method_signature": "IntellIVRBean.processOpenSessions()", "testcase": false, "constructor": false}, {"identifier": "processWaitingSessions", "parameters": "()", "modifiers": "@Transactional public", "return": "void", "signature": "void processWaitingSessions()", "full_signature": "@Transactional public void processWaitingSessions()", "class_method_signature": "IntellIVRBean.processWaitingSessions()", "testcase": false, "constructor": false}, {"identifier": "requestCall", "parameters": "(IVRCallSession session, String externalId)", "modifiers": "@Transactional public", "return": "void", "signature": "void requestCall(IVRCallSession session, String externalId)", "full_signature": "@Transactional public void requestCall(IVRCallSession session, String externalId)", "class_method_signature": "IntellIVRBean.requestCall(IVRCallSession session, String externalId)", "testcase": false, "constructor": false}, {"identifier": "createIVRRequest", "parameters": "(IVRCallSession session, String externalId)", "modifiers": "public", "return": "RequestType", "signature": "RequestType createIVRRequest(IVRCallSession session, String externalId)", "full_signature": "public RequestType createIVRRequest(IVRCallSession session, String externalId)", "class_method_signature": "IntellIVRBean.createIVRRequest(IVRCallSession session, String externalId)", "testcase": false, "constructor": false}, {"identifier": "handleRequest", "parameters": "(GetIVRConfigRequest request)", "modifiers": "@Transactional public", "return": "ResponseType", "signature": "ResponseType handleRequest(GetIVRConfigRequest request)", "full_signature": "@Transactional public ResponseType handleRequest(GetIVRConfigRequest request)", "class_method_signature": "IntellIVRBean.handleRequest(GetIVRConfigRequest request)", "testcase": false, "constructor": false}, {"identifier": "handleRequest", "parameters": "(GetIVRConfigRequest request, String externalId)", "modifiers": "@SuppressWarnings(\"unchecked\") @Transactional public", "return": "ResponseType", "signature": "ResponseType handleRequest(GetIVRConfigRequest request, String externalId)", "full_signature": "@SuppressWarnings(\"unchecked\") @Transactional public ResponseType handleRequest(GetIVRConfigRequest request, String externalId)", "class_method_signature": "IntellIVRBean.handleRequest(GetIVRConfigRequest request, String externalId)", "testcase": false, "constructor": false}, {"identifier": "handleReport", "parameters": "(ReportType report)", "modifiers": "@Transactional public", "return": "ResponseType", "signature": "ResponseType handleReport(ReportType report)", "full_signature": "@Transactional public ResponseType handleReport(ReportType report)", "class_method_signature": "IntellIVRBean.handleReport(ReportType report)", "testcase": false, "constructor": false}, {"identifier": "callExceedsThreshold", "parameters": "(IVRCallSession session, ReportType report)", "modifiers": "protected", "return": "boolean", "signature": "boolean callExceedsThreshold(IVRCallSession session, ReportType report)", "full_signature": "protected boolean callExceedsThreshold(IVRCallSession session, ReportType report)", "class_method_signature": "IntellIVRBean.callExceedsThreshold(IVRCallSession session, ReportType report)", "testcase": false, "constructor": false}, {"identifier": "getCountIVRCallSessions", "parameters": "()", "modifiers": "@Transactional public", "return": "int", "signature": "int getCountIVRCallSessions()", "full_signature": "@Transactional public int getCountIVRCallSessions()", "class_method_signature": "IntellIVRBean.getCountIVRCallSessions()", "testcase": false, "constructor": false}, {"identifier": "getCountIVRSessionsInLastMinutes", "parameters": "(int minutes)", "modifiers": "@Transactional public", "return": "int", "signature": "int getCountIVRSessionsInLastMinutes(int minutes)", "full_signature": "@Transactional public int getCountIVRSessionsInLastMinutes(int minutes)", "class_method_signature": "IntellIVRBean.getCountIVRSessionsInLastMinutes(int minutes)", "testcase": false, "constructor": false}, {"identifier": "getCountIVRCallSessionsInLastHours", "parameters": "(int hours)", "modifiers": "@Transactional public", "return": "int", "signature": "int getCountIVRCallSessionsInLastHours(int hours)", "full_signature": "@Transactional public int getCountIVRCallSessionsInLastHours(int hours)", "class_method_signature": "IntellIVRBean.getCountIVRCallSessionsInLastHours(int hours)", "testcase": false, "constructor": false}, {"identifier": "getCountIVRCallSessionsInLastDays", "parameters": "(int days)", "modifiers": "@Transactional public", "return": "int", "signature": "int getCountIVRCallSessionsInLastDays(int days)", "full_signature": "@Transactional public int getCountIVRCallSessionsInLastDays(int days)", "class_method_signature": "IntellIVRBean.getCountIVRCallSessionsInLastDays(int days)", "testcase": false, "constructor": false}, {"identifier": "getCountIVRCalls", "parameters": "()", "modifiers": "@Transactional public", "return": "int", "signature": "int getCountIVRCalls()", "full_signature": "@Transactional public int getCountIVRCalls()", "class_method_signature": "IntellIVRBean.getCountIVRCalls()", "testcase": false, "constructor": false}, {"identifier": "getCountIVRCallsInLastMinutes", "parameters": "(int minutes)", "modifiers": "@Transactional public", "return": "int", "signature": "int getCountIVRCallsInLastMinutes(int minutes)", "full_signature": "@Transactional public int getCountIVRCallsInLastMinutes(int minutes)", "class_method_signature": "IntellIVRBean.getCountIVRCallsInLastMinutes(int minutes)", "testcase": false, "constructor": false}, {"identifier": "getCountIVRCallsInLastHours", "parameters": "(int hours)", "modifiers": "@Transactional public", "return": "int", "signature": "int getCountIVRCallsInLastHours(int hours)", "full_signature": "@Transactional public int getCountIVRCallsInLastHours(int hours)", "class_method_signature": "IntellIVRBean.getCountIVRCallsInLastHours(int hours)", "testcase": false, "constructor": false}, {"identifier": "getCountIVRCallsInLastDays", "parameters": "(int days)", "modifiers": "@Transactional public", "return": "int", "signature": "int getCountIVRCallsInLastDays(int days)", "full_signature": "@Transactional public int getCountIVRCallsInLastDays(int days)", "class_method_signature": "IntellIVRBean.getCountIVRCallsInLastDays(int days)", "testcase": false, "constructor": false}, {"identifier": "getCountIVRCallsWithStatus", "parameters": "(IVRCallStatus status)", "modifiers": "@Transactional public", "return": "int", "signature": "int getCountIVRCallsWithStatus(IVRCallStatus status)", "full_signature": "@Transactional public int getCountIVRCallsWithStatus(IVRCallStatus status)", "class_method_signature": "IntellIVRBean.getCountIVRCallsWithStatus(IVRCallStatus status)", "testcase": false, "constructor": false}, {"identifier": "getCountIVRCallsInLastMinutesWithStatus", "parameters": "(int minutes, IVRCallStatus status)", "modifiers": "@Transactional public", "return": "int", "signature": "int getCountIVRCallsInLastMinutesWithStatus(int minutes, IVRCallStatus status)", "full_signature": "@Transactional public int getCountIVRCallsInLastMinutesWithStatus(int minutes, IVRCallStatus status)", "class_method_signature": "IntellIVRBean.getCountIVRCallsInLastMinutesWithStatus(int minutes, IVRCallStatus status)", "testcase": false, "constructor": false}, {"identifier": "getCountIVRCallsInLastHoursWithStatus", "parameters": "(int hours, IVRCallStatus status)", "modifiers": "@Transactional public", "return": "int", "signature": "int getCountIVRCallsInLastHoursWithStatus(int hours, IVRCallStatus status)", "full_signature": "@Transactional public int getCountIVRCallsInLastHoursWithStatus(int hours, IVRCallStatus status)", "class_method_signature": "IntellIVRBean.getCountIVRCallsInLastHoursWithStatus(int hours, IVRCallStatus status)", "testcase": false, "constructor": false}, {"identifier": "getCountIVRCallsInLastDaysWithStatus", "parameters": "(int days, IVRCallStatus status)", "modifiers": "@Transactional public", "return": "int", "signature": "int getCountIVRCallsInLastDaysWithStatus(int days, IVRCallStatus status)", "full_signature": "@Transactional public int getCountIVRCallsInLastDaysWithStatus(int days, IVRCallStatus status)", "class_method_signature": "IntellIVRBean.getCountIVRCallsInLastDaysWithStatus(int days, IVRCallStatus status)", "testcase": false, "constructor": false}, {"identifier": "getIVRRecordingStats", "parameters": "()", "modifiers": "@Transactional public", "return": "List<IVRRecordingStat>", "signature": "List<IVRRecordingStat> getIVRRecordingStats()", "full_signature": "@Transactional public List<IVRRecordingStat> getIVRRecordingStats()", "class_method_signature": "IntellIVRBean.getIVRRecordingStats()", "testcase": false, "constructor": false}, {"identifier": "getIVRCallStatusStats", "parameters": "()", "modifiers": "@Transactional public", "return": "List<IVRCallStatusStat>", "signature": "List<IVRCallStatusStat> getIVRCallStatusStats()", "full_signature": "@Transactional public List<IVRCallStatusStat> getIVRCallStatusStats()", "class_method_signature": "IntellIVRBean.getIVRCallStatusStats()", "testcase": false, "constructor": false}, {"identifier": "getIVRCallStatusStatsFromLastMinutes", "parameters": "(int minutes)", "modifiers": "@Transactional public", "return": "List<IVRCallStatusStat>", "signature": "List<IVRCallStatusStat> getIVRCallStatusStatsFromLastMinutes(int minutes)", "full_signature": "@Transactional public List<IVRCallStatusStat> getIVRCallStatusStatsFromLastMinutes(int minutes)", "class_method_signature": "IntellIVRBean.getIVRCallStatusStatsFromLastMinutes(int minutes)", "testcase": false, "constructor": false}, {"identifier": "getIVRCallStatusStatsFromLastHours", "parameters": "(int hours)", "modifiers": "@Transactional public", "return": "List<IVRCallStatusStat>", "signature": "List<IVRCallStatusStat> getIVRCallStatusStatsFromLastHours(int hours)", "full_signature": "@Transactional public List<IVRCallStatusStat> getIVRCallStatusStatsFromLastHours(int hours)", "class_method_signature": "IntellIVRBean.getIVRCallStatusStatsFromLastHours(int hours)", "testcase": false, "constructor": false}, {"identifier": "getIVRCallStatusStatsFromLastDays", "parameters": "(int days)", "modifiers": "@Transactional public", "return": "List<IVRCallStatusStat>", "signature": "List<IVRCallStatusStat> getIVRCallStatusStatsFromLastDays(int days)", "full_signature": "@Transactional public List<IVRCallStatusStat> getIVRCallStatusStatsFromLastDays(int days)", "class_method_signature": "IntellIVRBean.getIVRCallStatusStatsFromLastDays(int days)", "testcase": false, "constructor": false}, {"identifier": "getIVRCallSessions", "parameters": "()", "modifiers": "@Transactional public", "return": "List<IVRCallSession>", "signature": "List<IVRCallSession> getIVRCallSessions()", "full_signature": "@Transactional public List<IVRCallSession> getIVRCallSessions()", "class_method_signature": "IntellIVRBean.getIVRCallSessions()", "testcase": false, "constructor": false}, {"identifier": "getIVRCallSessionsInLastMinutes", "parameters": "(int minutes)", "modifiers": "@Transactional public", "return": "List<IVRCallSession>", "signature": "List<IVRCallSession> getIVRCallSessionsInLastMinutes(int minutes)", "full_signature": "@Transactional public List<IVRCallSession> getIVRCallSessionsInLastMinutes(int minutes)", "class_method_signature": "IntellIVRBean.getIVRCallSessionsInLastMinutes(int minutes)", "testcase": false, "constructor": false}, {"identifier": "getIVRCallSessionsInLastHours", "parameters": "(int hours)", "modifiers": "@Transactional public", "return": "List<IVRCallSession>", "signature": "List<IVRCallSession> getIVRCallSessionsInLastHours(int hours)", "full_signature": "@Transactional public List<IVRCallSession> getIVRCallSessionsInLastHours(int hours)", "class_method_signature": "IntellIVRBean.getIVRCallSessionsInLastHours(int hours)", "testcase": false, "constructor": false}, {"identifier": "getIVRCallSessionsInLastDays", "parameters": "(int days)", "modifiers": "@Transactional public", "return": "List<IVRCallSession>", "signature": "List<IVRCallSession> getIVRCallSessionsInLastDays(int days)", "full_signature": "@Transactional public List<IVRCallSession> getIVRCallSessionsInLastDays(int days)", "class_method_signature": "IntellIVRBean.getIVRCallSessionsInLastDays(int days)", "testcase": false, "constructor": false}, {"identifier": "getIVRCallSessionsForUser", "parameters": "(String user)", "modifiers": "@Transactional public", "return": "List<IVRCallSession>", "signature": "List<IVRCallSession> getIVRCallSessionsForUser(String user)", "full_signature": "@Transactional public List<IVRCallSession> getIVRCallSessionsForUser(String user)", "class_method_signature": "IntellIVRBean.getIVRCallSessionsForUser(String user)", "testcase": false, "constructor": false}, {"identifier": "getIVRCallSessionsForPhone", "parameters": "(String phone)", "modifiers": "@Transactional public", "return": "List<IVRCallSession>", "signature": "List<IVRCallSession> getIVRCallSessionsForPhone(String phone)", "full_signature": "@Transactional public List<IVRCallSession> getIVRCallSessionsForPhone(String phone)", "class_method_signature": "IntellIVRBean.getIVRCallSessionsForPhone(String phone)", "testcase": false, "constructor": false}, {"identifier": "setMessageHandler", "parameters": "(GatewayMessageHandler messageHandler)", "modifiers": "public", "return": "void", "signature": "void setMessageHandler(GatewayMessageHandler messageHandler)", "full_signature": "public void setMessageHandler(GatewayMessageHandler messageHandler)", "class_method_signature": "IntellIVRBean.setMessageHandler(GatewayMessageHandler messageHandler)", "testcase": false, "constructor": false}, {"identifier": "getMessageHandler", "parameters": "()", "modifiers": "public", "return": "GatewayMessageHandler", "signature": "GatewayMessageHandler getMessageHandler()", "full_signature": "public GatewayMessageHandler getMessageHandler()", "class_method_signature": "IntellIVRBean.getMessageHandler()", "testcase": false, "constructor": false}, {"identifier": "getReportURL", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getReportURL()", "full_signature": "public String getReportURL()", "class_method_signature": "IntellIVRBean.getReportURL()", "testcase": false, "constructor": false}, {"identifier": "setReportURL", "parameters": "(String reportURL)", "modifiers": "public", "return": "void", "signature": "void setReportURL(String reportURL)", "full_signature": "public void setReportURL(String reportURL)", "class_method_signature": "IntellIVRBean.setReportURL(String reportURL)", "testcase": false, "constructor": false}, {"identifier": "getApiID", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getApiID()", "full_signature": "public String getApiID()", "class_method_signature": "IntellIVRBean.getApiID()", "testcase": false, "constructor": false}, {"identifier": "setApiID", "parameters": "(String apiID)", "modifiers": "public", "return": "void", "signature": "void setApiID(String apiID)", "full_signature": "public void setApiID(String apiID)", "class_method_signature": "IntellIVRBean.setApiID(String apiID)", "testcase": false, "constructor": false}, {"identifier": "getIvrServer", "parameters": "()", "modifiers": "public", "return": "IntellIVRServer", "signature": "IntellIVRServer getIvrServer()", "full_signature": "public IntellIVRServer getIvrServer()", "class_method_signature": "IntellIVRBean.getIvrServer()", "testcase": false, "constructor": false}, {"identifier": "setIvrServer", "parameters": "(IntellIVRServer ivrServer)", "modifiers": "public", "return": "void", "signature": "void setIvrServer(IntellIVRServer ivrServer)", "full_signature": "public void setIvrServer(IntellIVRServer ivrServer)", "class_method_signature": "IntellIVRBean.setIvrServer(IntellIVRServer ivrServer)", "testcase": false, "constructor": false}, {"identifier": "getMethod", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMethod()", "full_signature": "public String getMethod()", "class_method_signature": "IntellIVRBean.getMethod()", "testcase": false, "constructor": false}, {"identifier": "setMethod", "parameters": "(String method)", "modifiers": "public", "return": "void", "signature": "void setMethod(String method)", "full_signature": "public void setMethod(String method)", "class_method_signature": "IntellIVRBean.setMethod(String method)", "testcase": false, "constructor": false}, {"identifier": "getDefaultLanguage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDefaultLanguage()", "full_signature": "public String getDefaultLanguage()", "class_method_signature": "IntellIVRBean.getDefaultLanguage()", "testcase": false, "constructor": false}, {"identifier": "setDefaultLanguage", "parameters": "(String defaultLanguage)", "modifiers": "public", "return": "void", "signature": "void setDefaultLanguage(String defaultLanguage)", "full_signature": "public void setDefaultLanguage(String defaultLanguage)", "class_method_signature": "IntellIVRBean.setDefaultLanguage(String defaultLanguage)", "testcase": false, "constructor": false}, {"identifier": "getDefaultTree", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDefaultTree()", "full_signature": "public String getDefaultTree()", "class_method_signature": "IntellIVRBean.getDefaultTree()", "testcase": false, "constructor": false}, {"identifier": "setDefaultTree", "parameters": "(String defaultTree)", "modifiers": "public", "return": "void", "signature": "void setDefaultTree(String defaultTree)", "full_signature": "public void setDefaultTree(String defaultTree)", "class_method_signature": "IntellIVRBean.setDefaultTree(String defaultTree)", "testcase": false, "constructor": false}, {"identifier": "getDefaultReminder", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDefaultReminder()", "full_signature": "public String getDefaultReminder()", "class_method_signature": "IntellIVRBean.getDefaultReminder()", "testcase": false, "constructor": false}, {"identifier": "setDefaultReminder", "parameters": "(String defaultReminder)", "modifiers": "public", "return": "void", "signature": "void setDefaultReminder(String defaultReminder)", "full_signature": "public void setDefaultReminder(String defaultReminder)", "class_method_signature": "IntellIVRBean.setDefaultReminder(String defaultReminder)", "testcase": false, "constructor": false}, {"identifier": "getStatusStore", "parameters": "()", "modifiers": "public", "return": "MessageStatusStore", "signature": "MessageStatusStore getStatusStore()", "full_signature": "public MessageStatusStore getStatusStore()", "class_method_signature": "IntellIVRBean.getStatusStore()", "testcase": false, "constructor": false}, {"identifier": "setStatusStore", "parameters": "(MessageStatusStore statusStore)", "modifiers": "public", "return": "void", "signature": "void setStatusStore(MessageStatusStore statusStore)", "full_signature": "public void setStatusStore(MessageStatusStore statusStore)", "class_method_signature": "IntellIVRBean.setStatusStore(MessageStatusStore statusStore)", "testcase": false, "constructor": false}, {"identifier": "getBundlingDelay", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getBundlingDelay()", "full_signature": "public long getBundlingDelay()", "class_method_signature": "IntellIVRBean.getBundlingDelay()", "testcase": false, "constructor": false}, {"identifier": "setBundlingDelay", "parameters": "(long bundlingDelay)", "modifiers": "public", "return": "void", "signature": "void setBundlingDelay(long bundlingDelay)", "full_signature": "public void setBundlingDelay(long bundlingDelay)", "class_method_signature": "IntellIVRBean.setBundlingDelay(long bundlingDelay)", "testcase": false, "constructor": false}, {"identifier": "getRetryDelay", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRetryDelay()", "full_signature": "public int getRetryDelay()", "class_method_signature": "IntellIVRBean.getRetryDelay()", "testcase": false, "constructor": false}, {"identifier": "setRetryDelay", "parameters": "(int retryDelay)", "modifiers": "public", "return": "void", "signature": "void setRetryDelay(int retryDelay)", "full_signature": "public void setRetryDelay(int retryDelay)", "class_method_signature": "IntellIVRBean.setRetryDelay(int retryDelay)", "testcase": false, "constructor": false}, {"identifier": "getMaxAttempts", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxAttempts()", "full_signature": "public int getMaxAttempts()", "class_method_signature": "IntellIVRBean.getMaxAttempts()", "testcase": false, "constructor": false}, {"identifier": "setMaxAttempts", "parameters": "(int maxAttempts)", "modifiers": "public", "return": "void", "signature": "void setMaxAttempts(int maxAttempts)", "full_signature": "public void setMaxAttempts(int maxAttempts)", "class_method_signature": "IntellIVRBean.setMaxAttempts(int maxAttempts)", "testcase": false, "constructor": false}, {"identifier": "getMaxDays", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxDays()", "full_signature": "public int getMaxDays()", "class_method_signature": "IntellIVRBean.getMaxDays()", "testcase": false, "constructor": false}, {"identifier": "setMaxDays", "parameters": "(int maxDays)", "modifiers": "public", "return": "void", "signature": "void setMaxDays(int maxDays)", "full_signature": "public void setMaxDays(int maxDays)", "class_method_signature": "IntellIVRBean.setMaxDays(int maxDays)", "testcase": false, "constructor": false}, {"identifier": "getAvailableDays", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getAvailableDays()", "full_signature": "public int getAvailableDays()", "class_method_signature": "IntellIVRBean.getAvailableDays()", "testcase": false, "constructor": false}, {"identifier": "setAvailableDays", "parameters": "(int availableDays)", "modifiers": "public", "return": "void", "signature": "void setAvailableDays(int availableDays)", "full_signature": "public void setAvailableDays(int availableDays)", "class_method_signature": "IntellIVRBean.setAvailableDays(int availableDays)", "testcase": false, "constructor": false}, {"identifier": "getCallCompletedThreshold", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getCallCompletedThreshold()", "full_signature": "public int getCallCompletedThreshold()", "class_method_signature": "IntellIVRBean.getCallCompletedThreshold()", "testcase": false, "constructor": false}, {"identifier": "setCallCompletedThreshold", "parameters": "(int callCompletedThreshold)", "modifiers": "public", "return": "void", "signature": "void setCallCompletedThreshold(int callCompletedThreshold)", "full_signature": "public void setCallCompletedThreshold(int callCompletedThreshold)", "class_method_signature": "IntellIVRBean.setCallCompletedThreshold(int callCompletedThreshold)", "testcase": false, "constructor": false}, {"identifier": "getPreReminderDelay", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPreReminderDelay()", "full_signature": "public int getPreReminderDelay()", "class_method_signature": "IntellIVRBean.getPreReminderDelay()", "testcase": false, "constructor": false}, {"identifier": "setPreReminderDelay", "parameters": "(int preReminderDelay)", "modifiers": "public", "return": "void", "signature": "void setPreReminderDelay(int preReminderDelay)", "full_signature": "public void setPreReminderDelay(int preReminderDelay)", "class_method_signature": "IntellIVRBean.setPreReminderDelay(int preReminderDelay)", "testcase": false, "constructor": false}, {"identifier": "isAccelerateRetries", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAccelerateRetries()", "full_signature": "public boolean isAccelerateRetries()", "class_method_signature": "IntellIVRBean.isAccelerateRetries()", "testcase": false, "constructor": false}, {"identifier": "setAccelerateRetries", "parameters": "(boolean accelerateRetries)", "modifiers": "public", "return": "void", "signature": "void setAccelerateRetries(boolean accelerateRetries)", "full_signature": "public void setAccelerateRetries(boolean accelerateRetries)", "class_method_signature": "IntellIVRBean.setAccelerateRetries(boolean accelerateRetries)", "testcase": false, "constructor": false}, {"identifier": "getNoPendingMessagesRecordingName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getNoPendingMessagesRecordingName()", "full_signature": "public String getNoPendingMessagesRecordingName()", "class_method_signature": "IntellIVRBean.getNoPendingMessagesRecordingName()", "testcase": false, "constructor": false}, {"identifier": "setNoPendingMessagesRecordingName", "parameters": "(\n            String noPendingMessagesRecordingName)", "modifiers": "public", "return": "void", "signature": "void setNoPendingMessagesRecordingName(\n            String noPendingMessagesRecordingName)", "full_signature": "public void setNoPendingMessagesRecordingName(\n            String noPendingMessagesRecordingName)", "class_method_signature": "IntellIVRBean.setNoPendingMessagesRecordingName(\n            String noPendingMessagesRecordingName)", "testcase": false, "constructor": false}, {"identifier": "getWelcomeMessageRecordingName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getWelcomeMessageRecordingName()", "full_signature": "public String getWelcomeMessageRecordingName()", "class_method_signature": "IntellIVRBean.getWelcomeMessageRecordingName()", "testcase": false, "constructor": false}, {"identifier": "setWelcomeMessageRecordingName", "parameters": "(String welcomeMessageRecordingName)", "modifiers": "public", "return": "void", "signature": "void setWelcomeMessageRecordingName(String welcomeMessageRecordingName)", "full_signature": "public void setWelcomeMessageRecordingName(String welcomeMessageRecordingName)", "class_method_signature": "IntellIVRBean.setWelcomeMessageRecordingName(String welcomeMessageRecordingName)", "testcase": false, "constructor": false}, {"identifier": "getMappingResource", "parameters": "()", "modifiers": "public", "return": "Resource", "signature": "Resource getMappingResource()", "full_signature": "public Resource getMappingResource()", "class_method_signature": "IntellIVRBean.getMappingResource()", "testcase": false, "constructor": false}, {"identifier": "setMappingResource", "parameters": "(Resource mappingsFile)", "modifiers": "public", "return": "void", "signature": "void setMappingResource(Resource mappingsFile)", "full_signature": "public void setMappingResource(Resource mappingsFile)", "class_method_signature": "IntellIVRBean.setMappingResource(Resource mappingsFile)", "testcase": false, "constructor": false}, {"identifier": "getCoreManager", "parameters": "()", "modifiers": "public", "return": "CoreManager", "signature": "CoreManager getCoreManager()", "full_signature": "public CoreManager getCoreManager()", "class_method_signature": "IntellIVRBean.getCoreManager()", "testcase": false, "constructor": false}, {"identifier": "setCoreManager", "parameters": "(CoreManager coreManager)", "modifiers": "public", "return": "void", "signature": "void setCoreManager(CoreManager coreManager)", "full_signature": "public void setCoreManager(CoreManager coreManager)", "class_method_signature": "IntellIVRBean.setCoreManager(CoreManager coreManager)", "testcase": false, "constructor": false}, {"identifier": "getRegistrarService", "parameters": "()", "modifiers": "public", "return": "RegistrarService", "signature": "RegistrarService getRegistrarService()", "full_signature": "public RegistrarService getRegistrarService()", "class_method_signature": "IntellIVRBean.getRegistrarService()", "testcase": false, "constructor": false}, {"identifier": "setRegistrarService", "parameters": "(RegistrarService registrarService)", "modifiers": "public", "return": "void", "signature": "void setRegistrarService(RegistrarService registrarService)", "full_signature": "public void setRegistrarService(RegistrarService registrarService)", "class_method_signature": "IntellIVRBean.setRegistrarService(RegistrarService registrarService)", "testcase": false, "constructor": false}, {"identifier": "getIvrDao", "parameters": "()", "modifiers": "public", "return": "IVRDAO", "signature": "IVRDAO getIvrDao()", "full_signature": "public IVRDAO getIvrDao()", "class_method_signature": "IntellIVRBean.getIvrDao()", "testcase": false, "constructor": false}, {"identifier": "setIvrDao", "parameters": "(IVRDAO ivrDao)", "modifiers": "public", "return": "void", "signature": "void setIvrDao(IVRDAO ivrDao)", "full_signature": "public void setIvrDao(IVRDAO ivrDao)", "class_method_signature": "IntellIVRBean.setIvrDao(IVRDAO ivrDao)", "testcase": false, "constructor": false}, {"identifier": "getIvrCallRequester", "parameters": "()", "modifiers": "public", "return": "IVRCallRequester", "signature": "IVRCallRequester getIvrCallRequester()", "full_signature": "public IVRCallRequester getIvrCallRequester()", "class_method_signature": "IntellIVRBean.getIvrCallRequester()", "testcase": false, "constructor": false}, {"identifier": "setIvrCallRequester", "parameters": "(IVRCallRequester ivrCallRequester)", "modifiers": "public", "return": "void", "signature": "void setIvrCallRequester(IVRCallRequester ivrCallRequester)", "full_signature": "public void setIvrCallRequester(IVRCallRequester ivrCallRequester)", "class_method_signature": "IntellIVRBean.setIvrCallRequester(IVRCallRequester ivrCallRequester)", "testcase": false, "constructor": false}, {"identifier": "toDate", "parameters": "(XMLGregorianCalendar time)", "modifiers": "private", "return": "Date", "signature": "Date toDate(XMLGregorianCalendar time)", "full_signature": "private Date toDate(XMLGregorianCalendar time)", "class_method_signature": "IntellIVRBean.toDate(XMLGregorianCalendar time)", "testcase": false, "constructor": false}, {"identifier": "addToDate", "parameters": "(Date start, int field, int amount)", "modifiers": "private", "return": "Date", "signature": "Date addToDate(Date start, int field, int amount)", "full_signature": "private Date addToDate(Date start, int field, int amount)", "class_method_signature": "IntellIVRBean.addToDate(Date start, int field, int amount)", "testcase": false, "constructor": false}, {"identifier": "toIvrCallStatus", "parameters": "(ReportStatusType status)", "modifiers": "private", "return": "IVRCallStatus", "signature": "IVRCallStatus toIvrCallStatus(ReportStatusType status)", "full_signature": "private IVRCallStatus toIvrCallStatus(ReportStatusType status)", "class_method_signature": "IntellIVRBean.toIvrCallStatus(ReportStatusType status)", "testcase": false, "constructor": false}, {"identifier": "formatReportLogMessages", "parameters": "(ReportType report)", "modifiers": "private", "return": "List<String>", "signature": "List<String> formatReportLogMessages(ReportType report)", "full_signature": "private List<String> formatReportLogMessages(ReportType report)", "class_method_signature": "IntellIVRBean.formatReportLogMessages(ReportType report)", "testcase": false, "constructor": false}], "file": "motech-mobile-omp/src/main/java/org/motechproject/mobile/omp/manager/intellivr/IntellIVRBean.java"}, "focal_method": {"identifier": "processWaitingSessions", "parameters": "()", "modifiers": "@Transactional public", "return": "void", "body": "@Transactional\n    public void processWaitingSessions() {\n\n        log.debug(\"Start processing SEND_WAIT IVRCallSessions\");\n\n        Integer[] states = {IVRCallSession.SEND_WAIT};\n\n        List<IVRCallSession> sessions = ivrDao.loadIVRCallSessionsByStateNextAttemptBeforeDate(states, new Date());\n\n        for (IVRCallSession session : sessions)\n            ivrCallRequester.requestCall(session, UUID.randomUUID().toString());\n\n        log.debug(\"End processing SEND_WAIT IVRCallSessions\");\n\n    }", "signature": "void processWaitingSessions()", "full_signature": "@Transactional public void processWaitingSessions()", "class_method_signature": "IntellIVRBean.processWaitingSessions()", "testcase": false, "constructor": false, "invocations": ["debug", "loadIVRCallSessionsByStateNextAttemptBeforeDate", "requestCall", "toString", "randomUUID", "debug"]}, "repository": {"repo_id": 1076094, "url": "https://github.com/motech/MOTECH-Mobile", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 4295, "license": "licensed"}}