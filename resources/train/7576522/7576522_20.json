{"test_class": {"identifier": "ConsolidatorsTest", "superclass": "extends AbstractHelperClassTest", "interfaces": "", "fields": [{"original_string": "@Rule\n  public final LoggerRule loggerRule = new LoggerRule(Loggers.BASE_LOGGER);", "modifier": "@Rule\n  public final", "type": "LoggerRule", "declarator": "loggerRule = new LoggerRule(Loggers.BASE_LOGGER)", "var_name": "loggerRule"}], "file": "core/src/test/java/com/github/jeluard/stone/helper/ConsolidatorsTest.java"}, "test_case": {"identifier": "shouldConsolidatorsBeSuccessful", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldConsolidatorsBeSuccessful() {\n    Assert.assertEquals(2, Consolidators.createConsolidators(Arrays.asList(MinConsolidator.class, MaxConsolidator.class), 1).length);\n  }", "signature": "void shouldConsolidatorsBeSuccessful()", "full_signature": "@Test public void shouldConsolidatorsBeSuccessful()", "class_method_signature": "ConsolidatorsTest.shouldConsolidatorsBeSuccessful()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "createConsolidators", "asList"]}, "focal_class": {"identifier": "Consolidators", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Consolidators", "parameters": "()", "modifiers": "private", "return": "", "signature": " Consolidators()", "full_signature": "private  Consolidators()", "class_method_signature": "Consolidators.Consolidators()", "testcase": false, "constructor": true}, {"identifier": "createConsolidator", "parameters": "(final Class<? extends Consolidator> type, final int maxSamples)", "modifiers": "public static", "return": "Consolidator", "signature": "Consolidator createConsolidator(final Class<? extends Consolidator> type, final int maxSamples)", "full_signature": "public static Consolidator createConsolidator(final Class<? extends Consolidator> type, final int maxSamples)", "class_method_signature": "Consolidators.createConsolidator(final Class<? extends Consolidator> type, final int maxSamples)", "testcase": false, "constructor": false}, {"identifier": "createConsolidators", "parameters": "(final List<? extends Class<? extends Consolidator>> consolidatorTypes, final int maxSamples)", "modifiers": "public static", "return": "Consolidator[]", "signature": "Consolidator[] createConsolidators(final List<? extends Class<? extends Consolidator>> consolidatorTypes, final int maxSamples)", "full_signature": "public static Consolidator[] createConsolidators(final List<? extends Class<? extends Consolidator>> consolidatorTypes, final int maxSamples)", "class_method_signature": "Consolidators.createConsolidators(final List<? extends Class<? extends Consolidator>> consolidatorTypes, final int maxSamples)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/github/jeluard/stone/helper/Consolidators.java"}, "focal_method": {"identifier": "createConsolidators", "parameters": "(final List<? extends Class<? extends Consolidator>> consolidatorTypes, final int maxSamples)", "modifiers": "public static", "return": "Consolidator[]", "body": "public static Consolidator[] createConsolidators(final List<? extends Class<? extends Consolidator>> consolidatorTypes, final int maxSamples) {\n    Preconditions.checkNotNull(consolidatorTypes, \"null consolidatorTypes\");\n    Preconditions2.checkSize(maxSamples);\n\n    final Consolidator[] consolidators = new Consolidator[consolidatorTypes.size()];\n    for (final Iterables2.Indexed<? extends Class<? extends Consolidator>> indexed : Iterables2.withIndex(consolidatorTypes)) {\n      consolidators[indexed.index] = createConsolidator(indexed.value, maxSamples);\n    }\n    return consolidators;\n  }", "signature": "Consolidator[] createConsolidators(final List<? extends Class<? extends Consolidator>> consolidatorTypes, final int maxSamples)", "full_signature": "public static Consolidator[] createConsolidators(final List<? extends Class<? extends Consolidator>> consolidatorTypes, final int maxSamples)", "class_method_signature": "Consolidators.createConsolidators(final List<? extends Class<? extends Consolidator>> consolidatorTypes, final int maxSamples)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "checkSize", "size", "withIndex", "createConsolidator"]}, "repository": {"repo_id": 7576522, "url": "https://github.com/jeluard/stone", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 6, "size": 1168, "license": "licensed"}}