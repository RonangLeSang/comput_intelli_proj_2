{"test_class": {"identifier": "PubkeyUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final byte[] EC_KEY_PKCS8 = new byte[] { (byte) 0x30, (byte) 0x81, (byte) 0x87,\n\t\t\t(byte) 0x02, (byte) 0x01, (byte) 0x00, (byte) 0x30, (byte) 0x13, (byte) 0x06,\n\t\t\t(byte) 0x07, (byte) 0x2A, (byte) 0x86, (byte) 0x48, (byte) 0xCE, (byte) 0x3D,\n\t\t\t(byte) 0x02, (byte) 0x01, (byte) 0x06, (byte) 0x08, (byte) 0x2A, (byte) 0x86,\n\t\t\t(byte) 0x48, (byte) 0xCE, (byte) 0x3D, (byte) 0x03, (byte) 0x01, (byte) 0x07,\n\t\t\t(byte) 0x04, (byte) 0x6D, (byte) 0x30, (byte) 0x6B, (byte) 0x02, (byte) 0x01,\n\t\t\t(byte) 0x01, (byte) 0x04, (byte) 0x20, (byte) 0xC7, (byte) 0x6B, (byte) 0xA5,\n\t\t\t(byte) 0xB6, (byte) 0xB7, (byte) 0x4E, (byte) 0x0B, (byte) 0x70, (byte) 0x2E,\n\t\t\t(byte) 0xA0, (byte) 0x5D, (byte) 0x8D, (byte) 0x0A, (byte) 0xF5, (byte) 0x43,\n\t\t\t(byte) 0xEF, (byte) 0x54, (byte) 0x2F, (byte) 0x05, (byte) 0x5B, (byte) 0x66,\n\t\t\t(byte) 0x50, (byte) 0xC5, (byte) 0xB4, (byte) 0xA8, (byte) 0x60, (byte) 0x16,\n\t\t\t(byte) 0x8E, (byte) 0x8D, (byte) 0xCD, (byte) 0x11, (byte) 0xFA, (byte) 0xA1,\n\t\t\t(byte) 0x44, (byte) 0x03, (byte) 0x42, (byte) 0x00, (byte) 0x04, (byte) 0x12,\n\t\t\t(byte) 0xE2, (byte) 0x70, (byte) 0x30, (byte) 0x87, (byte) 0x2F, (byte) 0xDE,\n\t\t\t(byte) 0x10, (byte) 0xD9, (byte) 0xC9, (byte) 0x83, (byte) 0xC7, (byte) 0x8D,\n\t\t\t(byte) 0xC9, (byte) 0x9B, (byte) 0x94, (byte) 0x24, (byte) 0x50, (byte) 0x5D,\n\t\t\t(byte) 0xEC, (byte) 0xF1, (byte) 0x4F, (byte) 0x52, (byte) 0xC6, (byte) 0xE7,\n\t\t\t(byte) 0xA3, (byte) 0xD7, (byte) 0xF4, (byte) 0x7C, (byte) 0x09, (byte) 0xA1,\n\t\t\t(byte) 0x10, (byte) 0x11, (byte) 0xE4, (byte) 0x9E, (byte) 0x90, (byte) 0xAF,\n\t\t\t(byte) 0xF9, (byte) 0x4A, (byte) 0x74, (byte) 0x09, (byte) 0x93, (byte) 0xC7,\n\t\t\t(byte) 0x9A, (byte) 0xB3, (byte) 0xE2, (byte) 0xD8, (byte) 0x61, (byte) 0x5F,\n\t\t\t(byte) 0x86, (byte) 0x14, (byte) 0x91, (byte) 0x7A, (byte) 0x23, (byte) 0x81,\n\t\t\t(byte) 0x42, (byte) 0xA9, (byte) 0x02, (byte) 0x1D, (byte) 0x33, (byte) 0x19,\n\t\t\t(byte) 0xC0, (byte) 0x4B, (byte) 0xCE\n\t};", "modifier": "private static final", "type": "byte[]", "declarator": "EC_KEY_PKCS8 = new byte[] { (byte) 0x30, (byte) 0x81, (byte) 0x87,\n\t\t\t(byte) 0x02, (byte) 0x01, (byte) 0x00, (byte) 0x30, (byte) 0x13, (byte) 0x06,\n\t\t\t(byte) 0x07, (byte) 0x2A, (byte) 0x86, (byte) 0x48, (byte) 0xCE, (byte) 0x3D,\n\t\t\t(byte) 0x02, (byte) 0x01, (byte) 0x06, (byte) 0x08, (byte) 0x2A, (byte) 0x86,\n\t\t\t(byte) 0x48, (byte) 0xCE, (byte) 0x3D, (byte) 0x03, (byte) 0x01, (byte) 0x07,\n\t\t\t(byte) 0x04, (byte) 0x6D, (byte) 0x30, (byte) 0x6B, (byte) 0x02, (byte) 0x01,\n\t\t\t(byte) 0x01, (byte) 0x04, (byte) 0x20, (byte) 0xC7, (byte) 0x6B, (byte) 0xA5,\n\t\t\t(byte) 0xB6, (byte) 0xB7, (byte) 0x4E, (byte) 0x0B, (byte) 0x70, (byte) 0x2E,\n\t\t\t(byte) 0xA0, (byte) 0x5D, (byte) 0x8D, (byte) 0x0A, (byte) 0xF5, (byte) 0x43,\n\t\t\t(byte) 0xEF, (byte) 0x54, (byte) 0x2F, (byte) 0x05, (byte) 0x5B, (byte) 0x66,\n\t\t\t(byte) 0x50, (byte) 0xC5, (byte) 0xB4, (byte) 0xA8, (byte) 0x60, (byte) 0x16,\n\t\t\t(byte) 0x8E, (byte) 0x8D, (byte) 0xCD, (byte) 0x11, (byte) 0xFA, (byte) 0xA1,\n\t\t\t(byte) 0x44, (byte) 0x03, (byte) 0x42, (byte) 0x00, (byte) 0x04, (byte) 0x12,\n\t\t\t(byte) 0xE2, (byte) 0x70, (byte) 0x30, (byte) 0x87, (byte) 0x2F, (byte) 0xDE,\n\t\t\t(byte) 0x10, (byte) 0xD9, (byte) 0xC9, (byte) 0x83, (byte) 0xC7, (byte) 0x8D,\n\t\t\t(byte) 0xC9, (byte) 0x9B, (byte) 0x94, (byte) 0x24, (byte) 0x50, (byte) 0x5D,\n\t\t\t(byte) 0xEC, (byte) 0xF1, (byte) 0x4F, (byte) 0x52, (byte) 0xC6, (byte) 0xE7,\n\t\t\t(byte) 0xA3, (byte) 0xD7, (byte) 0xF4, (byte) 0x7C, (byte) 0x09, (byte) 0xA1,\n\t\t\t(byte) 0x10, (byte) 0x11, (byte) 0xE4, (byte) 0x9E, (byte) 0x90, (byte) 0xAF,\n\t\t\t(byte) 0xF9, (byte) 0x4A, (byte) 0x74, (byte) 0x09, (byte) 0x93, (byte) 0xC7,\n\t\t\t(byte) 0x9A, (byte) 0xB3, (byte) 0xE2, (byte) 0xD8, (byte) 0x61, (byte) 0x5F,\n\t\t\t(byte) 0x86, (byte) 0x14, (byte) 0x91, (byte) 0x7A, (byte) 0x23, (byte) 0x81,\n\t\t\t(byte) 0x42, (byte) 0xA9, (byte) 0x02, (byte) 0x1D, (byte) 0x33, (byte) 0x19,\n\t\t\t(byte) 0xC0, (byte) 0x4B, (byte) 0xCE\n\t}", "var_name": "EC_KEY_PKCS8"}, {"original_string": "private static final BigInteger EC_KEY_priv = new BigInteger(\"c76ba5b6b74e0b702ea05d8d0af543ef542f055b6650c5b4a860168e8dcd11fa\", 16);", "modifier": "private static final", "type": "BigInteger", "declarator": "EC_KEY_priv = new BigInteger(\"c76ba5b6b74e0b702ea05d8d0af543ef542f055b6650c5b4a860168e8dcd11fa\", 16)", "var_name": "EC_KEY_priv"}, {"original_string": "private static final BigInteger EC_KEY_pub_x = new BigInteger(\"12e27030872fde10d9c983c78dc99b9424505decf14f52c6e7a3d7f47c09a110\", 16);", "modifier": "private static final", "type": "BigInteger", "declarator": "EC_KEY_pub_x = new BigInteger(\"12e27030872fde10d9c983c78dc99b9424505decf14f52c6e7a3d7f47c09a110\", 16)", "var_name": "EC_KEY_pub_x"}, {"original_string": "private static final BigInteger EC_KEY_pub_y = new BigInteger(\"11e49e90aff94a740993c79ab3e2d8615f8614917a238142a9021d3319c04bce\", 16);", "modifier": "private static final", "type": "BigInteger", "declarator": "EC_KEY_pub_y = new BigInteger(\"11e49e90aff94a740993c79ab3e2d8615f8614917a238142a9021d3319c04bce\", 16)", "var_name": "EC_KEY_pub_y"}, {"original_string": "private static final byte[] RSA_KEY_PKCS8 = new byte[] { (byte) 0x30, (byte) 0x82, (byte) 0x01,\n\t\t\t(byte) 0x55, (byte) 0x02, (byte) 0x01, (byte) 0x00, (byte) 0x30, (byte) 0x0D,\n\t\t\t(byte) 0x06, (byte) 0x09, (byte) 0x2A, (byte) 0x86, (byte) 0x48, (byte) 0x86,\n\t\t\t(byte) 0xF7, (byte) 0x0D, (byte) 0x01, (byte) 0x01, (byte) 0x01, (byte) 0x05,\n\t\t\t(byte) 0x00, (byte) 0x04, (byte) 0x82, (byte) 0x01, (byte) 0x3F, (byte) 0x30,\n\t\t\t(byte) 0x82, (byte) 0x01, (byte) 0x3B, (byte) 0x02, (byte) 0x01, (byte) 0x00,\n\t\t\t(byte) 0x02, (byte) 0x41, (byte) 0x00, (byte) 0xC6, (byte) 0x00, (byte) 0x79,\n\t\t\t(byte) 0x0C, (byte) 0x46, (byte) 0xF9, (byte) 0x03, (byte) 0x15, (byte) 0xBA,\n\t\t\t(byte) 0x35, (byte) 0x63, (byte) 0x6C, (byte) 0x97, (byte) 0x3A, (byte) 0x6C,\n\t\t\t(byte) 0xC8, (byte) 0x15, (byte) 0x32, (byte) 0x2A, (byte) 0x62, (byte) 0x72,\n\t\t\t(byte) 0xBD, (byte) 0x05, (byte) 0x01, (byte) 0xCF, (byte) 0xE6, (byte) 0x49,\n\t\t\t(byte) 0xEC, (byte) 0xC9, (byte) 0x8A, (byte) 0x3A, (byte) 0x4E, (byte) 0xB1,\n\t\t\t(byte) 0xF2, (byte) 0x3E, (byte) 0x86, (byte) 0x3C, (byte) 0x64, (byte) 0x4A,\n\t\t\t(byte) 0x0A, (byte) 0x29, (byte) 0xD6, (byte) 0xFA, (byte) 0xF9, (byte) 0xAC,\n\t\t\t(byte) 0xD8, (byte) 0x7B, (byte) 0x9F, (byte) 0x2A, (byte) 0x6B, (byte) 0x13,\n\t\t\t(byte) 0x06, (byte) 0x06, (byte) 0xEB, (byte) 0x83, (byte) 0x1B, (byte) 0xB8,\n\t\t\t(byte) 0x97, (byte) 0xA3, (byte) 0x91, (byte) 0x95, (byte) 0x60, (byte) 0x15,\n\t\t\t(byte) 0xE5, (byte) 0x02, (byte) 0x03, (byte) 0x01, (byte) 0x00, (byte) 0x01,\n\t\t\t(byte) 0x02, (byte) 0x40, (byte) 0x0F, (byte) 0xDA, (byte) 0x33, (byte) 0xD6,\n\t\t\t(byte) 0xCE, (byte) 0xCB, (byte) 0xDA, (byte) 0xFA, (byte) 0x5F, (byte) 0x59,\n\t\t\t(byte) 0x2C, (byte) 0xE7, (byte) 0xA1, (byte) 0xC7, (byte) 0xF4, (byte) 0xB3,\n\t\t\t(byte) 0xA4, (byte) 0x36, (byte) 0xCA, (byte) 0xFB, (byte) 0xEC, (byte) 0xD1,\n\t\t\t(byte) 0xC3, (byte) 0x57, (byte) 0xDC, (byte) 0xCC, (byte) 0x44, (byte) 0x38,\n\t\t\t(byte) 0xE7, (byte) 0xFD, (byte) 0xE0, (byte) 0x23, (byte) 0x0E, (byte) 0x97,\n\t\t\t(byte) 0x87, (byte) 0x55, (byte) 0x80, (byte) 0x2B, (byte) 0xF2, (byte) 0xF4,\n\t\t\t(byte) 0x1C, (byte) 0x03, (byte) 0xD2, (byte) 0x3E, (byte) 0x09, (byte) 0x72,\n\t\t\t(byte) 0x49, (byte) 0xD8, (byte) 0x9C, (byte) 0xAC, (byte) 0xDA, (byte) 0x65,\n\t\t\t(byte) 0x68, (byte) 0x4D, (byte) 0x38, (byte) 0x19, (byte) 0xD8, (byte) 0xB1,\n\t\t\t(byte) 0x5B, (byte) 0xB7, (byte) 0x38, (byte) 0xC8, (byte) 0x94, (byte) 0xB5,\n\t\t\t(byte) 0x02, (byte) 0x21, (byte) 0x00, (byte) 0xF7, (byte) 0x8E, (byte) 0x20,\n\t\t\t(byte) 0xDC, (byte) 0x26, (byte) 0x12, (byte) 0x3A, (byte) 0x85, (byte) 0x91,\n\t\t\t(byte) 0x5F, (byte) 0x45, (byte) 0xA6, (byte) 0x95, (byte) 0xE5, (byte) 0x22,\n\t\t\t(byte) 0xD0, (byte) 0xC4, (byte) 0xD7, (byte) 0x6A, (byte) 0xF1, (byte) 0x43,\n\t\t\t(byte) 0x38, (byte) 0x88, (byte) 0x20, (byte) 0x7D, (byte) 0x80, (byte) 0x73,\n\t\t\t(byte) 0x7B, (byte) 0xDC, (byte) 0x73, (byte) 0x51, (byte) 0x3B, (byte) 0x02,\n\t\t\t(byte) 0x21, (byte) 0x00, (byte) 0xCC, (byte) 0xC1, (byte) 0x99, (byte) 0xC8,\n\t\t\t(byte) 0xC0, (byte) 0x54, (byte) 0xBC, (byte) 0xE9, (byte) 0xFB, (byte) 0x77,\n\t\t\t(byte) 0x28, (byte) 0xB8, (byte) 0x26, (byte) 0x02, (byte) 0xC0, (byte) 0x0C,\n\t\t\t(byte) 0xDE, (byte) 0xFD, (byte) 0xEA, (byte) 0xD0, (byte) 0x15, (byte) 0x4B,\n\t\t\t(byte) 0x3B, (byte) 0xD1, (byte) 0xDD, (byte) 0xFD, (byte) 0x5B, (byte) 0xAC,\n\t\t\t(byte) 0xB3, (byte) 0xCF, (byte) 0xC3, (byte) 0x5F, (byte) 0x02, (byte) 0x21,\n\t\t\t(byte) 0x00, (byte) 0xCD, (byte) 0x8C, (byte) 0x25, (byte) 0x9C, (byte) 0xA5,\n\t\t\t(byte) 0xBF, (byte) 0xDC, (byte) 0xF7, (byte) 0xAA, (byte) 0x8D, (byte) 0x00,\n\t\t\t(byte) 0xB8, (byte) 0x21, (byte) 0x1D, (byte) 0xF0, (byte) 0x9A, (byte) 0x87,\n\t\t\t(byte) 0xD6, (byte) 0x95, (byte) 0xE5, (byte) 0x5D, (byte) 0x7B, (byte) 0x43,\n\t\t\t(byte) 0x0C, (byte) 0x37, (byte) 0x28, (byte) 0xC0, (byte) 0xBA, (byte) 0xC7,\n\t\t\t(byte) 0x80, (byte) 0xB8, (byte) 0xA1, (byte) 0x02, (byte) 0x21, (byte) 0x00,\n\t\t\t(byte) 0xCC, (byte) 0x26, (byte) 0x6F, (byte) 0xAD, (byte) 0x60, (byte) 0x4E,\n\t\t\t(byte) 0x5C, (byte) 0xB9, (byte) 0x32, (byte) 0x57, (byte) 0x61, (byte) 0x8B,\n\t\t\t(byte) 0x11, (byte) 0xA3, (byte) 0x06, (byte) 0x57, (byte) 0x0E, (byte) 0xF2,\n\t\t\t(byte) 0xBE, (byte) 0x6F, (byte) 0x4F, (byte) 0xFB, (byte) 0xDE, (byte) 0x1D,\n\t\t\t(byte) 0xE6, (byte) 0xA7, (byte) 0x19, (byte) 0x03, (byte) 0x7D, (byte) 0x98,\n\t\t\t(byte) 0xB6, (byte) 0x23, (byte) 0x02, (byte) 0x20, (byte) 0x24, (byte) 0x80,\n\t\t\t(byte) 0x94, (byte) 0xFF, (byte) 0xDD, (byte) 0x7A, (byte) 0x22, (byte) 0x7D,\n\t\t\t(byte) 0xC4, (byte) 0x5A, (byte) 0xFD, (byte) 0x84, (byte) 0xC1, (byte) 0xAD,\n\t\t\t(byte) 0x8A, (byte) 0x13, (byte) 0x2A, (byte) 0xF9, (byte) 0x5D, (byte) 0xFF,\n\t\t\t(byte) 0x0B, (byte) 0x2E, (byte) 0x0F, (byte) 0x61, (byte) 0x42, (byte) 0x88,\n\t\t\t(byte) 0x57, (byte) 0xCF, (byte) 0xC1, (byte) 0x71, (byte) 0xC9, (byte) 0xB9\n\t};", "modifier": "private static final", "type": "byte[]", "declarator": "RSA_KEY_PKCS8 = new byte[] { (byte) 0x30, (byte) 0x82, (byte) 0x01,\n\t\t\t(byte) 0x55, (byte) 0x02, (byte) 0x01, (byte) 0x00, (byte) 0x30, (byte) 0x0D,\n\t\t\t(byte) 0x06, (byte) 0x09, (byte) 0x2A, (byte) 0x86, (byte) 0x48, (byte) 0x86,\n\t\t\t(byte) 0xF7, (byte) 0x0D, (byte) 0x01, (byte) 0x01, (byte) 0x01, (byte) 0x05,\n\t\t\t(byte) 0x00, (byte) 0x04, (byte) 0x82, (byte) 0x01, (byte) 0x3F, (byte) 0x30,\n\t\t\t(byte) 0x82, (byte) 0x01, (byte) 0x3B, (byte) 0x02, (byte) 0x01, (byte) 0x00,\n\t\t\t(byte) 0x02, (byte) 0x41, (byte) 0x00, (byte) 0xC6, (byte) 0x00, (byte) 0x79,\n\t\t\t(byte) 0x0C, (byte) 0x46, (byte) 0xF9, (byte) 0x03, (byte) 0x15, (byte) 0xBA,\n\t\t\t(byte) 0x35, (byte) 0x63, (byte) 0x6C, (byte) 0x97, (byte) 0x3A, (byte) 0x6C,\n\t\t\t(byte) 0xC8, (byte) 0x15, (byte) 0x32, (byte) 0x2A, (byte) 0x62, (byte) 0x72,\n\t\t\t(byte) 0xBD, (byte) 0x05, (byte) 0x01, (byte) 0xCF, (byte) 0xE6, (byte) 0x49,\n\t\t\t(byte) 0xEC, (byte) 0xC9, (byte) 0x8A, (byte) 0x3A, (byte) 0x4E, (byte) 0xB1,\n\t\t\t(byte) 0xF2, (byte) 0x3E, (byte) 0x86, (byte) 0x3C, (byte) 0x64, (byte) 0x4A,\n\t\t\t(byte) 0x0A, (byte) 0x29, (byte) 0xD6, (byte) 0xFA, (byte) 0xF9, (byte) 0xAC,\n\t\t\t(byte) 0xD8, (byte) 0x7B, (byte) 0x9F, (byte) 0x2A, (byte) 0x6B, (byte) 0x13,\n\t\t\t(byte) 0x06, (byte) 0x06, (byte) 0xEB, (byte) 0x83, (byte) 0x1B, (byte) 0xB8,\n\t\t\t(byte) 0x97, (byte) 0xA3, (byte) 0x91, (byte) 0x95, (byte) 0x60, (byte) 0x15,\n\t\t\t(byte) 0xE5, (byte) 0x02, (byte) 0x03, (byte) 0x01, (byte) 0x00, (byte) 0x01,\n\t\t\t(byte) 0x02, (byte) 0x40, (byte) 0x0F, (byte) 0xDA, (byte) 0x33, (byte) 0xD6,\n\t\t\t(byte) 0xCE, (byte) 0xCB, (byte) 0xDA, (byte) 0xFA, (byte) 0x5F, (byte) 0x59,\n\t\t\t(byte) 0x2C, (byte) 0xE7, (byte) 0xA1, (byte) 0xC7, (byte) 0xF4, (byte) 0xB3,\n\t\t\t(byte) 0xA4, (byte) 0x36, (byte) 0xCA, (byte) 0xFB, (byte) 0xEC, (byte) 0xD1,\n\t\t\t(byte) 0xC3, (byte) 0x57, (byte) 0xDC, (byte) 0xCC, (byte) 0x44, (byte) 0x38,\n\t\t\t(byte) 0xE7, (byte) 0xFD, (byte) 0xE0, (byte) 0x23, (byte) 0x0E, (byte) 0x97,\n\t\t\t(byte) 0x87, (byte) 0x55, (byte) 0x80, (byte) 0x2B, (byte) 0xF2, (byte) 0xF4,\n\t\t\t(byte) 0x1C, (byte) 0x03, (byte) 0xD2, (byte) 0x3E, (byte) 0x09, (byte) 0x72,\n\t\t\t(byte) 0x49, (byte) 0xD8, (byte) 0x9C, (byte) 0xAC, (byte) 0xDA, (byte) 0x65,\n\t\t\t(byte) 0x68, (byte) 0x4D, (byte) 0x38, (byte) 0x19, (byte) 0xD8, (byte) 0xB1,\n\t\t\t(byte) 0x5B, (byte) 0xB7, (byte) 0x38, (byte) 0xC8, (byte) 0x94, (byte) 0xB5,\n\t\t\t(byte) 0x02, (byte) 0x21, (byte) 0x00, (byte) 0xF7, (byte) 0x8E, (byte) 0x20,\n\t\t\t(byte) 0xDC, (byte) 0x26, (byte) 0x12, (byte) 0x3A, (byte) 0x85, (byte) 0x91,\n\t\t\t(byte) 0x5F, (byte) 0x45, (byte) 0xA6, (byte) 0x95, (byte) 0xE5, (byte) 0x22,\n\t\t\t(byte) 0xD0, (byte) 0xC4, (byte) 0xD7, (byte) 0x6A, (byte) 0xF1, (byte) 0x43,\n\t\t\t(byte) 0x38, (byte) 0x88, (byte) 0x20, (byte) 0x7D, (byte) 0x80, (byte) 0x73,\n\t\t\t(byte) 0x7B, (byte) 0xDC, (byte) 0x73, (byte) 0x51, (byte) 0x3B, (byte) 0x02,\n\t\t\t(byte) 0x21, (byte) 0x00, (byte) 0xCC, (byte) 0xC1, (byte) 0x99, (byte) 0xC8,\n\t\t\t(byte) 0xC0, (byte) 0x54, (byte) 0xBC, (byte) 0xE9, (byte) 0xFB, (byte) 0x77,\n\t\t\t(byte) 0x28, (byte) 0xB8, (byte) 0x26, (byte) 0x02, (byte) 0xC0, (byte) 0x0C,\n\t\t\t(byte) 0xDE, (byte) 0xFD, (byte) 0xEA, (byte) 0xD0, (byte) 0x15, (byte) 0x4B,\n\t\t\t(byte) 0x3B, (byte) 0xD1, (byte) 0xDD, (byte) 0xFD, (byte) 0x5B, (byte) 0xAC,\n\t\t\t(byte) 0xB3, (byte) 0xCF, (byte) 0xC3, (byte) 0x5F, (byte) 0x02, (byte) 0x21,\n\t\t\t(byte) 0x00, (byte) 0xCD, (byte) 0x8C, (byte) 0x25, (byte) 0x9C, (byte) 0xA5,\n\t\t\t(byte) 0xBF, (byte) 0xDC, (byte) 0xF7, (byte) 0xAA, (byte) 0x8D, (byte) 0x00,\n\t\t\t(byte) 0xB8, (byte) 0x21, (byte) 0x1D, (byte) 0xF0, (byte) 0x9A, (byte) 0x87,\n\t\t\t(byte) 0xD6, (byte) 0x95, (byte) 0xE5, (byte) 0x5D, (byte) 0x7B, (byte) 0x43,\n\t\t\t(byte) 0x0C, (byte) 0x37, (byte) 0x28, (byte) 0xC0, (byte) 0xBA, (byte) 0xC7,\n\t\t\t(byte) 0x80, (byte) 0xB8, (byte) 0xA1, (byte) 0x02, (byte) 0x21, (byte) 0x00,\n\t\t\t(byte) 0xCC, (byte) 0x26, (byte) 0x6F, (byte) 0xAD, (byte) 0x60, (byte) 0x4E,\n\t\t\t(byte) 0x5C, (byte) 0xB9, (byte) 0x32, (byte) 0x57, (byte) 0x61, (byte) 0x8B,\n\t\t\t(byte) 0x11, (byte) 0xA3, (byte) 0x06, (byte) 0x57, (byte) 0x0E, (byte) 0xF2,\n\t\t\t(byte) 0xBE, (byte) 0x6F, (byte) 0x4F, (byte) 0xFB, (byte) 0xDE, (byte) 0x1D,\n\t\t\t(byte) 0xE6, (byte) 0xA7, (byte) 0x19, (byte) 0x03, (byte) 0x7D, (byte) 0x98,\n\t\t\t(byte) 0xB6, (byte) 0x23, (byte) 0x02, (byte) 0x20, (byte) 0x24, (byte) 0x80,\n\t\t\t(byte) 0x94, (byte) 0xFF, (byte) 0xDD, (byte) 0x7A, (byte) 0x22, (byte) 0x7D,\n\t\t\t(byte) 0xC4, (byte) 0x5A, (byte) 0xFD, (byte) 0x84, (byte) 0xC1, (byte) 0xAD,\n\t\t\t(byte) 0x8A, (byte) 0x13, (byte) 0x2A, (byte) 0xF9, (byte) 0x5D, (byte) 0xFF,\n\t\t\t(byte) 0x0B, (byte) 0x2E, (byte) 0x0F, (byte) 0x61, (byte) 0x42, (byte) 0x88,\n\t\t\t(byte) 0x57, (byte) 0xCF, (byte) 0xC1, (byte) 0x71, (byte) 0xC9, (byte) 0xB9\n\t}", "var_name": "RSA_KEY_PKCS8"}, {"original_string": "private static final BigInteger RSA_KEY_N = new BigInteger(\"C600790C46F90315BA35636C973A6CC815322A6272BD0501CFE649ECC98A3A4EB1F23E863C644A0A29D6FAF9ACD87B9F2A6B130606EB831BB897A391956015E5\", 16);", "modifier": "private static final", "type": "BigInteger", "declarator": "RSA_KEY_N = new BigInteger(\"C600790C46F90315BA35636C973A6CC815322A6272BD0501CFE649ECC98A3A4EB1F23E863C644A0A29D6FAF9ACD87B9F2A6B130606EB831BB897A391956015E5\", 16)", "var_name": "RSA_KEY_N"}, {"original_string": "private static final BigInteger RSA_KEY_E = new BigInteger(\"010001\", 16);", "modifier": "private static final", "type": "BigInteger", "declarator": "RSA_KEY_E = new BigInteger(\"010001\", 16)", "var_name": "RSA_KEY_E"}, {"original_string": "private static final byte[] DSA_KEY_PKCS8 = new byte[] {\n\t\t\t(byte) 0x30, (byte) 0x82, (byte) 0x01, (byte) 0x4A, (byte) 0x02, (byte) 0x01,\n\t\t\t(byte) 0x00, (byte) 0x30, (byte) 0x82, (byte) 0x01, (byte) 0x2B, (byte) 0x06,\n\t\t\t(byte) 0x07, (byte) 0x2A, (byte) 0x86, (byte) 0x48, (byte) 0xCE, (byte) 0x38,\n\t\t\t(byte) 0x04, (byte) 0x01, (byte) 0x30, (byte) 0x82, (byte) 0x01, (byte) 0x1E,\n\t\t\t(byte) 0x02, (byte) 0x81, (byte) 0x81, (byte) 0x00, (byte) 0xD2, (byte) 0x18,\n\t\t\t(byte) 0xDB, (byte) 0x94, (byte) 0x7C, (byte) 0xD6, (byte) 0x2E, (byte) 0xE2,\n\t\t\t(byte) 0x07, (byte) 0x38, (byte) 0x42, (byte) 0xC4, (byte) 0x16, (byte) 0x24,\n\t\t\t(byte) 0x94, (byte) 0x2F, (byte) 0xC1, (byte) 0x0F, (byte) 0x92, (byte) 0x0A,\n\t\t\t(byte) 0x44, (byte) 0x44, (byte) 0x99, (byte) 0xFC, (byte) 0x01, (byte) 0x1B,\n\t\t\t(byte) 0xF8, (byte) 0xF3, (byte) 0x82, (byte) 0x57, (byte) 0x01, (byte) 0x8D,\n\t\t\t(byte) 0xE6, (byte) 0x22, (byte) 0x70, (byte) 0xA0, (byte) 0xD6, (byte) 0x05,\n\t\t\t(byte) 0x0F, (byte) 0xF1, (byte) 0xD0, (byte) 0xF4, (byte) 0x0B, (byte) 0xA2,\n\t\t\t(byte) 0xE4, (byte) 0x1E, (byte) 0xD3, (byte) 0x44, (byte) 0x79, (byte) 0x74,\n\t\t\t(byte) 0x4C, (byte) 0xC1, (byte) 0xA7, (byte) 0xA5, (byte) 0x84, (byte) 0xD8,\n\t\t\t(byte) 0xB9, (byte) 0xDF, (byte) 0xA3, (byte) 0x85, (byte) 0xFA, (byte) 0xF2,\n\t\t\t(byte) 0xFD, (byte) 0x44, (byte) 0x0B, (byte) 0xB1, (byte) 0xA5, (byte) 0x82,\n\t\t\t(byte) 0x8D, (byte) 0x06, (byte) 0x92, (byte) 0xCA, (byte) 0xB4, (byte) 0xFB,\n\t\t\t(byte) 0xDF, (byte) 0xC2, (byte) 0xFD, (byte) 0xA7, (byte) 0xCB, (byte) 0x6F,\n\t\t\t(byte) 0x03, (byte) 0xB9, (byte) 0xEF, (byte) 0xFD, (byte) 0x7F, (byte) 0xBC,\n\t\t\t(byte) 0xB3, (byte) 0x1D, (byte) 0xA4, (byte) 0xE8, (byte) 0x7D, (byte) 0xA2,\n\t\t\t(byte) 0xCF, (byte) 0x62, (byte) 0x35, (byte) 0x06, (byte) 0xC8, (byte) 0xFE,\n\t\t\t(byte) 0xE6, (byte) 0xE7, (byte) 0x6E, (byte) 0xAE, (byte) 0x22, (byte) 0xE7,\n\t\t\t(byte) 0x82, (byte) 0x38, (byte) 0x54, (byte) 0x82, (byte) 0xCD, (byte) 0xEA,\n\t\t\t(byte) 0xD8, (byte) 0x69, (byte) 0xBB, (byte) 0x1C, (byte) 0xD3, (byte) 0x70,\n\t\t\t(byte) 0x32, (byte) 0xB1, (byte) 0xFB, (byte) 0x07, (byte) 0x01, (byte) 0x66,\n\t\t\t(byte) 0xCC, (byte) 0x24, (byte) 0xD6, (byte) 0x50, (byte) 0x46, (byte) 0x9B,\n\t\t\t(byte) 0x02, (byte) 0x15, (byte) 0x00, (byte) 0xD6, (byte) 0xE6, (byte) 0x7E,\n\t\t\t(byte) 0x1A, (byte) 0xE5, (byte) 0xCA, (byte) 0x1D, (byte) 0xB6, (byte) 0xAF,\n\t\t\t(byte) 0x4E, (byte) 0xD9, (byte) 0x18, (byte) 0xE8, (byte) 0x87, (byte) 0xB1,\n\t\t\t(byte) 0xBC, (byte) 0x93, (byte) 0xE1, (byte) 0x80, (byte) 0xF5, (byte) 0x02,\n\t\t\t(byte) 0x81, (byte) 0x80, (byte) 0x19, (byte) 0x20, (byte) 0xCC, (byte) 0x18,\n\t\t\t(byte) 0xF6, (byte) 0x8F, (byte) 0x73, (byte) 0xFA, (byte) 0x9F, (byte) 0x50,\n\t\t\t(byte) 0xC8, (byte) 0x92, (byte) 0xBE, (byte) 0x07, (byte) 0x7C, (byte) 0x34,\n\t\t\t(byte) 0xD8, (byte) 0x6F, (byte) 0x63, (byte) 0xC9, (byte) 0x35, (byte) 0x48,\n\t\t\t(byte) 0x79, (byte) 0x79, (byte) 0x26, (byte) 0xEF, (byte) 0x1E, (byte) 0x99,\n\t\t\t(byte) 0x54, (byte) 0xD7, (byte) 0x30, (byte) 0x2C, (byte) 0x68, (byte) 0xBC,\n\t\t\t(byte) 0xFF, (byte) 0xF2, (byte) 0x4C, (byte) 0x6A, (byte) 0xD3, (byte) 0x2D,\n\t\t\t(byte) 0x1C, (byte) 0x7A, (byte) 0x06, (byte) 0x11, (byte) 0x72, (byte) 0x92,\n\t\t\t(byte) 0x9C, (byte) 0xAA, (byte) 0x95, (byte) 0x0E, (byte) 0x44, (byte) 0x2C,\n\t\t\t(byte) 0x5F, (byte) 0x19, (byte) 0x25, (byte) 0xB4, (byte) 0xBF, (byte) 0x21,\n\t\t\t(byte) 0x8F, (byte) 0xB7, (byte) 0x7E, (byte) 0x4B, (byte) 0x64, (byte) 0x83,\n\t\t\t(byte) 0x59, (byte) 0x20, (byte) 0x20, (byte) 0x36, (byte) 0x84, (byte) 0xA4,\n\t\t\t(byte) 0x1D, (byte) 0xB5, (byte) 0xCA, (byte) 0x7F, (byte) 0x10, (byte) 0x4E,\n\t\t\t(byte) 0x27, (byte) 0x21, (byte) 0x8E, (byte) 0x2C, (byte) 0xA5, (byte) 0xF8,\n\t\t\t(byte) 0xAC, (byte) 0xBD, (byte) 0xF5, (byte) 0xB5, (byte) 0xBA, (byte) 0xEB,\n\t\t\t(byte) 0x86, (byte) 0x6F, (byte) 0x7F, (byte) 0xB1, (byte) 0xE0, (byte) 0x90,\n\t\t\t(byte) 0x35, (byte) 0xCA, (byte) 0xA8, (byte) 0x64, (byte) 0x6E, (byte) 0x06,\n\t\t\t(byte) 0x3D, (byte) 0x02, (byte) 0x3D, (byte) 0x95, (byte) 0x57, (byte) 0xB3,\n\t\t\t(byte) 0x8A, (byte) 0xE2, (byte) 0x0B, (byte) 0xD3, (byte) 0x9E, (byte) 0x1C,\n\t\t\t(byte) 0x13, (byte) 0xDE, (byte) 0x48, (byte) 0xA3, (byte) 0xC2, (byte) 0x11,\n\t\t\t(byte) 0xDA, (byte) 0x75, (byte) 0x09, (byte) 0xF6, (byte) 0x92, (byte) 0x0F,\n\t\t\t(byte) 0x0F, (byte) 0xA6, (byte) 0xF3, (byte) 0x3E, (byte) 0x04, (byte) 0x16,\n\t\t\t(byte) 0x02, (byte) 0x14, (byte) 0x29, (byte) 0x50, (byte) 0xE4, (byte) 0x77,\n\t\t\t(byte) 0x4F, (byte) 0xB2, (byte) 0xFF, (byte) 0xFB, (byte) 0x5D, (byte) 0x33,\n\t\t\t(byte) 0xC9, (byte) 0x37, (byte) 0xF0, (byte) 0xB5, (byte) 0x8F, (byte) 0xFB,\n\t\t\t(byte) 0x0D, (byte) 0x45, (byte) 0xC2, (byte) 0x00\n\t};", "modifier": "private static final", "type": "byte[]", "declarator": "DSA_KEY_PKCS8 = new byte[] {\n\t\t\t(byte) 0x30, (byte) 0x82, (byte) 0x01, (byte) 0x4A, (byte) 0x02, (byte) 0x01,\n\t\t\t(byte) 0x00, (byte) 0x30, (byte) 0x82, (byte) 0x01, (byte) 0x2B, (byte) 0x06,\n\t\t\t(byte) 0x07, (byte) 0x2A, (byte) 0x86, (byte) 0x48, (byte) 0xCE, (byte) 0x38,\n\t\t\t(byte) 0x04, (byte) 0x01, (byte) 0x30, (byte) 0x82, (byte) 0x01, (byte) 0x1E,\n\t\t\t(byte) 0x02, (byte) 0x81, (byte) 0x81, (byte) 0x00, (byte) 0xD2, (byte) 0x18,\n\t\t\t(byte) 0xDB, (byte) 0x94, (byte) 0x7C, (byte) 0xD6, (byte) 0x2E, (byte) 0xE2,\n\t\t\t(byte) 0x07, (byte) 0x38, (byte) 0x42, (byte) 0xC4, (byte) 0x16, (byte) 0x24,\n\t\t\t(byte) 0x94, (byte) 0x2F, (byte) 0xC1, (byte) 0x0F, (byte) 0x92, (byte) 0x0A,\n\t\t\t(byte) 0x44, (byte) 0x44, (byte) 0x99, (byte) 0xFC, (byte) 0x01, (byte) 0x1B,\n\t\t\t(byte) 0xF8, (byte) 0xF3, (byte) 0x82, (byte) 0x57, (byte) 0x01, (byte) 0x8D,\n\t\t\t(byte) 0xE6, (byte) 0x22, (byte) 0x70, (byte) 0xA0, (byte) 0xD6, (byte) 0x05,\n\t\t\t(byte) 0x0F, (byte) 0xF1, (byte) 0xD0, (byte) 0xF4, (byte) 0x0B, (byte) 0xA2,\n\t\t\t(byte) 0xE4, (byte) 0x1E, (byte) 0xD3, (byte) 0x44, (byte) 0x79, (byte) 0x74,\n\t\t\t(byte) 0x4C, (byte) 0xC1, (byte) 0xA7, (byte) 0xA5, (byte) 0x84, (byte) 0xD8,\n\t\t\t(byte) 0xB9, (byte) 0xDF, (byte) 0xA3, (byte) 0x85, (byte) 0xFA, (byte) 0xF2,\n\t\t\t(byte) 0xFD, (byte) 0x44, (byte) 0x0B, (byte) 0xB1, (byte) 0xA5, (byte) 0x82,\n\t\t\t(byte) 0x8D, (byte) 0x06, (byte) 0x92, (byte) 0xCA, (byte) 0xB4, (byte) 0xFB,\n\t\t\t(byte) 0xDF, (byte) 0xC2, (byte) 0xFD, (byte) 0xA7, (byte) 0xCB, (byte) 0x6F,\n\t\t\t(byte) 0x03, (byte) 0xB9, (byte) 0xEF, (byte) 0xFD, (byte) 0x7F, (byte) 0xBC,\n\t\t\t(byte) 0xB3, (byte) 0x1D, (byte) 0xA4, (byte) 0xE8, (byte) 0x7D, (byte) 0xA2,\n\t\t\t(byte) 0xCF, (byte) 0x62, (byte) 0x35, (byte) 0x06, (byte) 0xC8, (byte) 0xFE,\n\t\t\t(byte) 0xE6, (byte) 0xE7, (byte) 0x6E, (byte) 0xAE, (byte) 0x22, (byte) 0xE7,\n\t\t\t(byte) 0x82, (byte) 0x38, (byte) 0x54, (byte) 0x82, (byte) 0xCD, (byte) 0xEA,\n\t\t\t(byte) 0xD8, (byte) 0x69, (byte) 0xBB, (byte) 0x1C, (byte) 0xD3, (byte) 0x70,\n\t\t\t(byte) 0x32, (byte) 0xB1, (byte) 0xFB, (byte) 0x07, (byte) 0x01, (byte) 0x66,\n\t\t\t(byte) 0xCC, (byte) 0x24, (byte) 0xD6, (byte) 0x50, (byte) 0x46, (byte) 0x9B,\n\t\t\t(byte) 0x02, (byte) 0x15, (byte) 0x00, (byte) 0xD6, (byte) 0xE6, (byte) 0x7E,\n\t\t\t(byte) 0x1A, (byte) 0xE5, (byte) 0xCA, (byte) 0x1D, (byte) 0xB6, (byte) 0xAF,\n\t\t\t(byte) 0x4E, (byte) 0xD9, (byte) 0x18, (byte) 0xE8, (byte) 0x87, (byte) 0xB1,\n\t\t\t(byte) 0xBC, (byte) 0x93, (byte) 0xE1, (byte) 0x80, (byte) 0xF5, (byte) 0x02,\n\t\t\t(byte) 0x81, (byte) 0x80, (byte) 0x19, (byte) 0x20, (byte) 0xCC, (byte) 0x18,\n\t\t\t(byte) 0xF6, (byte) 0x8F, (byte) 0x73, (byte) 0xFA, (byte) 0x9F, (byte) 0x50,\n\t\t\t(byte) 0xC8, (byte) 0x92, (byte) 0xBE, (byte) 0x07, (byte) 0x7C, (byte) 0x34,\n\t\t\t(byte) 0xD8, (byte) 0x6F, (byte) 0x63, (byte) 0xC9, (byte) 0x35, (byte) 0x48,\n\t\t\t(byte) 0x79, (byte) 0x79, (byte) 0x26, (byte) 0xEF, (byte) 0x1E, (byte) 0x99,\n\t\t\t(byte) 0x54, (byte) 0xD7, (byte) 0x30, (byte) 0x2C, (byte) 0x68, (byte) 0xBC,\n\t\t\t(byte) 0xFF, (byte) 0xF2, (byte) 0x4C, (byte) 0x6A, (byte) 0xD3, (byte) 0x2D,\n\t\t\t(byte) 0x1C, (byte) 0x7A, (byte) 0x06, (byte) 0x11, (byte) 0x72, (byte) 0x92,\n\t\t\t(byte) 0x9C, (byte) 0xAA, (byte) 0x95, (byte) 0x0E, (byte) 0x44, (byte) 0x2C,\n\t\t\t(byte) 0x5F, (byte) 0x19, (byte) 0x25, (byte) 0xB4, (byte) 0xBF, (byte) 0x21,\n\t\t\t(byte) 0x8F, (byte) 0xB7, (byte) 0x7E, (byte) 0x4B, (byte) 0x64, (byte) 0x83,\n\t\t\t(byte) 0x59, (byte) 0x20, (byte) 0x20, (byte) 0x36, (byte) 0x84, (byte) 0xA4,\n\t\t\t(byte) 0x1D, (byte) 0xB5, (byte) 0xCA, (byte) 0x7F, (byte) 0x10, (byte) 0x4E,\n\t\t\t(byte) 0x27, (byte) 0x21, (byte) 0x8E, (byte) 0x2C, (byte) 0xA5, (byte) 0xF8,\n\t\t\t(byte) 0xAC, (byte) 0xBD, (byte) 0xF5, (byte) 0xB5, (byte) 0xBA, (byte) 0xEB,\n\t\t\t(byte) 0x86, (byte) 0x6F, (byte) 0x7F, (byte) 0xB1, (byte) 0xE0, (byte) 0x90,\n\t\t\t(byte) 0x35, (byte) 0xCA, (byte) 0xA8, (byte) 0x64, (byte) 0x6E, (byte) 0x06,\n\t\t\t(byte) 0x3D, (byte) 0x02, (byte) 0x3D, (byte) 0x95, (byte) 0x57, (byte) 0xB3,\n\t\t\t(byte) 0x8A, (byte) 0xE2, (byte) 0x0B, (byte) 0xD3, (byte) 0x9E, (byte) 0x1C,\n\t\t\t(byte) 0x13, (byte) 0xDE, (byte) 0x48, (byte) 0xA3, (byte) 0xC2, (byte) 0x11,\n\t\t\t(byte) 0xDA, (byte) 0x75, (byte) 0x09, (byte) 0xF6, (byte) 0x92, (byte) 0x0F,\n\t\t\t(byte) 0x0F, (byte) 0xA6, (byte) 0xF3, (byte) 0x3E, (byte) 0x04, (byte) 0x16,\n\t\t\t(byte) 0x02, (byte) 0x14, (byte) 0x29, (byte) 0x50, (byte) 0xE4, (byte) 0x77,\n\t\t\t(byte) 0x4F, (byte) 0xB2, (byte) 0xFF, (byte) 0xFB, (byte) 0x5D, (byte) 0x33,\n\t\t\t(byte) 0xC9, (byte) 0x37, (byte) 0xF0, (byte) 0xB5, (byte) 0x8F, (byte) 0xFB,\n\t\t\t(byte) 0x0D, (byte) 0x45, (byte) 0xC2, (byte) 0x00\n\t}", "var_name": "DSA_KEY_PKCS8"}, {"original_string": "private static final BigInteger DSA_KEY_P = new BigInteger(\"00d218db947cd62ee2073842c41624942fc10f920a444499fc011bf8f38257018de62270a0d6050ff1d0f40ba2e41ed34479744cc1a7a584d8b9dfa385faf2fd440bb1a5828d0692cab4fbdfc2fda7cb6f03b9effd7fbcb31da4e87da2cf623506c8fee6e76eae22e782385482cdead869bb1cd37032b1fb070166cc24d650469b\", 16);", "modifier": "private static final", "type": "BigInteger", "declarator": "DSA_KEY_P = new BigInteger(\"00d218db947cd62ee2073842c41624942fc10f920a444499fc011bf8f38257018de62270a0d6050ff1d0f40ba2e41ed34479744cc1a7a584d8b9dfa385faf2fd440bb1a5828d0692cab4fbdfc2fda7cb6f03b9effd7fbcb31da4e87da2cf623506c8fee6e76eae22e782385482cdead869bb1cd37032b1fb070166cc24d650469b\", 16)", "var_name": "DSA_KEY_P"}, {"original_string": "private static final BigInteger DSA_KEY_Q = new BigInteger(\"00d6e67e1ae5ca1db6af4ed918e887b1bc93e180f5\", 16);", "modifier": "private static final", "type": "BigInteger", "declarator": "DSA_KEY_Q = new BigInteger(\"00d6e67e1ae5ca1db6af4ed918e887b1bc93e180f5\", 16)", "var_name": "DSA_KEY_Q"}, {"original_string": "private static final BigInteger DSA_KEY_G = new BigInteger(\"1920cc18f68f73fa9f50c892be077c34d86f63c93548797926ef1e9954d7302c68bcfff24c6ad32d1c7a061172929caa950e442c5f1925b4bf218fb77e4b64835920203684a41db5ca7f104e27218e2ca5f8acbdf5b5baeb866f7fb1e09035caa8646e063d023d9557b38ae20bd39e1c13de48a3c211da7509f6920f0fa6f33e\", 16);", "modifier": "private static final", "type": "BigInteger", "declarator": "DSA_KEY_G = new BigInteger(\"1920cc18f68f73fa9f50c892be077c34d86f63c93548797926ef1e9954d7302c68bcfff24c6ad32d1c7a061172929caa950e442c5f1925b4bf218fb77e4b64835920203684a41db5ca7f104e27218e2ca5f8acbdf5b5baeb866f7fb1e09035caa8646e063d023d9557b38ae20bd39e1c13de48a3c211da7509f6920f0fa6f33e\", 16)", "var_name": "DSA_KEY_G"}, {"original_string": "private static final BigInteger DSA_KEY_priv = new BigInteger(\"2950e4774fb2fffb5d33c937f0b58ffb0d45c200\", 16);", "modifier": "private static final", "type": "BigInteger", "declarator": "DSA_KEY_priv = new BigInteger(\"2950e4774fb2fffb5d33c937f0b58ffb0d45c200\", 16)", "var_name": "DSA_KEY_priv"}, {"original_string": "private static final BigInteger DSA_KEY_pub = new BigInteger(\"0087b82cdf3232db3bec0d00e96c8393bc7f5629551ea1a00888961cf56e80a36f2a7b316bc10b1d367a5ea374235c9361a472a9176f6cf61f708b86a52b4fae814abd1f1bdd16eea94aea9281851032b1bad7567624c615d6899ca1c94ad614f14e767e49d2ba5223cd113a0d02b66183653cd346ae76d85843afe66520904274\", 16);", "modifier": "private static final", "type": "BigInteger", "declarator": "DSA_KEY_pub = new BigInteger(\"0087b82cdf3232db3bec0d00e96c8393bc7f5629551ea1a00888961cf56e80a36f2a7b316bc10b1d367a5ea374235c9361a472a9176f6cf61f708b86a52b4fae814abd1f1bdd16eea94aea9281851032b1bad7567624c615d6899ca1c94ad614f14e767e49d2ba5223cd113a0d02b66183653cd346ae76d85843afe66520904274\", 16)", "var_name": "DSA_KEY_pub"}], "file": "app/src/test/java/org/connectbot/util/PubkeyUtilsTest.java"}, "test_case": {"identifier": "getAlgorithmForOid_NullInput_Failure", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void getAlgorithmForOid_NullInput_Failure() throws Exception {\n\t\ttry {\n\t\t\tPubkeyUtils.getAlgorithmForOid(null);\n\t\t\tfail(\"Should throw NoSuchAlgorithmException\");\n\t\t} catch (NoSuchAlgorithmException expected) {\n\t\t}\n\t}", "signature": "void getAlgorithmForOid_NullInput_Failure()", "full_signature": "@Test public void getAlgorithmForOid_NullInput_Failure()", "class_method_signature": "PubkeyUtilsTest.getAlgorithmForOid_NullInput_Failure()", "testcase": true, "constructor": false, "invocations": ["getAlgorithmForOid", "fail"]}, "focal_class": {"identifier": "PubkeyUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TAG = \"CB.PubkeyUtils\";", "modifier": "private static final", "type": "String", "declarator": "TAG = \"CB.PubkeyUtils\"", "var_name": "TAG"}, {"original_string": "public static final String PKCS8_START = \"-----BEGIN PRIVATE KEY-----\";", "modifier": "public static final", "type": "String", "declarator": "PKCS8_START = \"-----BEGIN PRIVATE KEY-----\"", "var_name": "PKCS8_START"}, {"original_string": "public static final String PKCS8_END = \"-----END PRIVATE KEY-----\";", "modifier": "public static final", "type": "String", "declarator": "PKCS8_END = \"-----END PRIVATE KEY-----\"", "var_name": "PKCS8_END"}, {"original_string": "private static final int SALT_SIZE = 8;", "modifier": "private static final", "type": "int", "declarator": "SALT_SIZE = 8", "var_name": "SALT_SIZE"}, {"original_string": "private static final int ITERATIONS = 1000;", "modifier": "private static final", "type": "int", "declarator": "ITERATIONS = 1000", "var_name": "ITERATIONS"}, {"original_string": "private static final char[] HEX_DIGITS = { '0', '1', '2', '3', '4', '5', '6',\n\t\t\t'7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };", "modifier": "private static final", "type": "char[]", "declarator": "HEX_DIGITS = { '0', '1', '2', '3', '4', '5', '6',\n\t\t\t'7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' }", "var_name": "HEX_DIGITS"}], "methods": [{"identifier": "PubkeyUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " PubkeyUtils()", "full_signature": "private  PubkeyUtils()", "class_method_signature": "PubkeyUtils.PubkeyUtils()", "testcase": false, "constructor": true}, {"identifier": "formatKey", "parameters": "(Key key)", "modifiers": "public static", "return": "String", "signature": "String formatKey(Key key)", "full_signature": "public static String formatKey(Key key)", "class_method_signature": "PubkeyUtils.formatKey(Key key)", "testcase": false, "constructor": false}, {"identifier": "encrypt", "parameters": "(byte[] cleartext, String secret)", "modifiers": "private static", "return": "byte[]", "signature": "byte[] encrypt(byte[] cleartext, String secret)", "full_signature": "private static byte[] encrypt(byte[] cleartext, String secret)", "class_method_signature": "PubkeyUtils.encrypt(byte[] cleartext, String secret)", "testcase": false, "constructor": false}, {"identifier": "decrypt", "parameters": "(byte[] saltAndCiphertext, String secret)", "modifiers": "private static", "return": "byte[]", "signature": "byte[] decrypt(byte[] saltAndCiphertext, String secret)", "full_signature": "private static byte[] decrypt(byte[] saltAndCiphertext, String secret)", "class_method_signature": "PubkeyUtils.decrypt(byte[] saltAndCiphertext, String secret)", "testcase": false, "constructor": false}, {"identifier": "getEncodedPrivate", "parameters": "(PrivateKey pk, String secret)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] getEncodedPrivate(PrivateKey pk, String secret)", "full_signature": "public static byte[] getEncodedPrivate(PrivateKey pk, String secret)", "class_method_signature": "PubkeyUtils.getEncodedPrivate(PrivateKey pk, String secret)", "testcase": false, "constructor": false}, {"identifier": "decodePrivate", "parameters": "(byte[] encoded, String keyType)", "modifiers": "public static", "return": "PrivateKey", "signature": "PrivateKey decodePrivate(byte[] encoded, String keyType)", "full_signature": "public static PrivateKey decodePrivate(byte[] encoded, String keyType)", "class_method_signature": "PubkeyUtils.decodePrivate(byte[] encoded, String keyType)", "testcase": false, "constructor": false}, {"identifier": "decodePrivate", "parameters": "(byte[] encoded, String keyType, String secret)", "modifiers": "public static", "return": "PrivateKey", "signature": "PrivateKey decodePrivate(byte[] encoded, String keyType, String secret)", "full_signature": "public static PrivateKey decodePrivate(byte[] encoded, String keyType, String secret)", "class_method_signature": "PubkeyUtils.decodePrivate(byte[] encoded, String keyType, String secret)", "testcase": false, "constructor": false}, {"identifier": "getBitStrength", "parameters": "(byte[] encoded, String keyType)", "modifiers": "public static", "return": "int", "signature": "int getBitStrength(byte[] encoded, String keyType)", "full_signature": "public static int getBitStrength(byte[] encoded, String keyType)", "class_method_signature": "PubkeyUtils.getBitStrength(byte[] encoded, String keyType)", "testcase": false, "constructor": false}, {"identifier": "decodePublic", "parameters": "(byte[] encoded, String keyType)", "modifiers": "public static", "return": "PublicKey", "signature": "PublicKey decodePublic(byte[] encoded, String keyType)", "full_signature": "public static PublicKey decodePublic(byte[] encoded, String keyType)", "class_method_signature": "PubkeyUtils.decodePublic(byte[] encoded, String keyType)", "testcase": false, "constructor": false}, {"identifier": "getAlgorithmForOid", "parameters": "(String oid)", "modifiers": "static", "return": "String", "signature": "String getAlgorithmForOid(String oid)", "full_signature": "static String getAlgorithmForOid(String oid)", "class_method_signature": "PubkeyUtils.getAlgorithmForOid(String oid)", "testcase": false, "constructor": false}, {"identifier": "getOidFromPkcs8Encoded", "parameters": "(byte[] encoded)", "modifiers": "static", "return": "String", "signature": "String getOidFromPkcs8Encoded(byte[] encoded)", "full_signature": "static String getOidFromPkcs8Encoded(byte[] encoded)", "class_method_signature": "PubkeyUtils.getOidFromPkcs8Encoded(byte[] encoded)", "testcase": false, "constructor": false}, {"identifier": "getRSAPublicExponentFromPkcs8Encoded", "parameters": "(byte[] encoded)", "modifiers": "static", "return": "BigInteger", "signature": "BigInteger getRSAPublicExponentFromPkcs8Encoded(byte[] encoded)", "full_signature": "static BigInteger getRSAPublicExponentFromPkcs8Encoded(byte[] encoded)", "class_method_signature": "PubkeyUtils.getRSAPublicExponentFromPkcs8Encoded(byte[] encoded)", "testcase": false, "constructor": false}, {"identifier": "convertToKeyPair", "parameters": "(PubkeyBean keybean, String password)", "modifiers": "public static", "return": "KeyPair", "signature": "KeyPair convertToKeyPair(PubkeyBean keybean, String password)", "full_signature": "public static KeyPair convertToKeyPair(PubkeyBean keybean, String password)", "class_method_signature": "PubkeyUtils.convertToKeyPair(PubkeyBean keybean, String password)", "testcase": false, "constructor": false}, {"identifier": "recoverKeyPair", "parameters": "(byte[] encoded)", "modifiers": "public static", "return": "KeyPair", "signature": "KeyPair recoverKeyPair(byte[] encoded)", "full_signature": "public static KeyPair recoverKeyPair(byte[] encoded)", "class_method_signature": "PubkeyUtils.recoverKeyPair(byte[] encoded)", "testcase": false, "constructor": false}, {"identifier": "recoverPublicKey", "parameters": "(KeyFactory kf, PrivateKey priv)", "modifiers": "static", "return": "PublicKey", "signature": "PublicKey recoverPublicKey(KeyFactory kf, PrivateKey priv)", "full_signature": "static PublicKey recoverPublicKey(KeyFactory kf, PrivateKey priv)", "class_method_signature": "PubkeyUtils.recoverPublicKey(KeyFactory kf, PrivateKey priv)", "testcase": false, "constructor": false}, {"identifier": "convertToOpenSSHFormat", "parameters": "(PublicKey pk, String origNickname)", "modifiers": "public static", "return": "String", "signature": "String convertToOpenSSHFormat(PublicKey pk, String origNickname)", "full_signature": "public static String convertToOpenSSHFormat(PublicKey pk, String origNickname)", "class_method_signature": "PubkeyUtils.convertToOpenSSHFormat(PublicKey pk, String origNickname)", "testcase": false, "constructor": false}, {"identifier": "extractOpenSSHPublic", "parameters": "(KeyPair pair)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] extractOpenSSHPublic(KeyPair pair)", "full_signature": "public static byte[] extractOpenSSHPublic(KeyPair pair)", "class_method_signature": "PubkeyUtils.extractOpenSSHPublic(KeyPair pair)", "testcase": false, "constructor": false}, {"identifier": "exportPEM", "parameters": "(PrivateKey key, String secret)", "modifiers": "public static", "return": "String", "signature": "String exportPEM(PrivateKey key, String secret)", "full_signature": "public static String exportPEM(PrivateKey key, String secret)", "class_method_signature": "PubkeyUtils.exportPEM(PrivateKey key, String secret)", "testcase": false, "constructor": false}, {"identifier": "encodeHex", "parameters": "(byte[] bytes)", "modifiers": "static", "return": "String", "signature": "String encodeHex(byte[] bytes)", "full_signature": "static String encodeHex(byte[] bytes)", "class_method_signature": "PubkeyUtils.encodeHex(byte[] bytes)", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/connectbot/util/PubkeyUtils.java"}, "focal_method": {"identifier": "getAlgorithmForOid", "parameters": "(String oid)", "modifiers": "static", "return": "String", "body": "static String getAlgorithmForOid(String oid) throws NoSuchAlgorithmException {\n\t\tif (\"1.2.840.10045.2.1\".equals(oid)) {\n\t\t\treturn \"EC\";\n\t\t} else if (\"1.2.840.113549.1.1.1\".equals(oid)) {\n\t\t\treturn \"RSA\";\n\t\t} else if (\"1.2.840.10040.4.1\".equals(oid)) {\n\t\t\treturn \"DSA\";\n\t\t} else {\n\t\t\tthrow new NoSuchAlgorithmException(\"Unknown algorithm OID \" + oid);\n\t\t}\n\t}", "signature": "String getAlgorithmForOid(String oid)", "full_signature": "static String getAlgorithmForOid(String oid)", "class_method_signature": "PubkeyUtils.getAlgorithmForOid(String oid)", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "equals"]}, "repository": {"repo_id": 123235, "url": "https://github.com/connectbot/connectbot", "stars": 1400, "created": "2/6/2009 5:52:35 PM +00:00", "updates": "2020-01-24T01:55:47+00:00", "fork": "False", "license": "licensed"}}