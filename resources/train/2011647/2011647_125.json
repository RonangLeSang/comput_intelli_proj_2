{"test_class": {"identifier": "ATransformable3DTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private transformable3D transformable;", "modifier": "private", "type": "transformable3D", "declarator": "transformable", "var_name": "transformable"}], "file": "rajawali/src/test/java/org/rajawali3d/ATransformable3DTest.java"}, "test_case": {"identifier": "testGetScale", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetScale() {\n        double expected = 1;\n        Vector3 scale = transformable.getScale();\n        assertEquals(expected, scale.x, 1e-10);\n        assertEquals(expected, scale.y, 1e-10);\n        assertEquals(expected, scale.z, 1e-10);\n    }", "signature": "void testGetScale()", "full_signature": "@Test public void testGetScale()", "class_method_signature": "ATransformable3DTest.testGetScale()", "testcase": true, "constructor": false, "invocations": ["getScale", "assertEquals", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "ATransformable3D", "superclass": "", "interfaces": "implements IGraphNodeMember", "fields": [{"original_string": "protected final Matrix4 mMMatrix = new Matrix4();", "modifier": "protected final", "type": "Matrix4", "declarator": "mMMatrix = new Matrix4()", "var_name": "mMMatrix"}, {"original_string": "protected final Vector3 mPosition;", "modifier": "protected final", "type": "Vector3", "declarator": "mPosition", "var_name": "mPosition"}, {"original_string": "protected final Vector3 mScale;", "modifier": "protected final", "type": "Vector3", "declarator": "mScale", "var_name": "mScale"}, {"original_string": "protected final Quaternion mOrientation;", "modifier": "protected final", "type": "Quaternion", "declarator": "mOrientation", "var_name": "mOrientation"}, {"original_string": "protected final Quaternion mTmpOrientation;", "modifier": "protected final", "type": "Quaternion", "declarator": "mTmpOrientation", "var_name": "mTmpOrientation"}, {"original_string": "protected final Vector3 mTempVec = new Vector3();", "modifier": "protected final", "type": "Vector3", "declarator": "mTempVec = new Vector3()", "var_name": "mTempVec"}, {"original_string": "protected final Vector3 mUpAxis;", "modifier": "protected final", "type": "Vector3", "declarator": "mUpAxis", "var_name": "mUpAxis"}, {"original_string": "protected Vector3 mLookAt;", "modifier": "protected", "type": "Vector3", "declarator": "mLookAt", "var_name": "mLookAt"}, {"original_string": "protected boolean mLookAtValid = false;", "modifier": "protected", "type": "boolean", "declarator": "mLookAtValid = false", "var_name": "mLookAtValid"}, {"original_string": "protected boolean mLookAtEnabled;", "modifier": "protected", "type": "boolean", "declarator": "mLookAtEnabled", "var_name": "mLookAtEnabled"}, {"original_string": "protected boolean mIsCamera;", "modifier": "protected", "type": "boolean", "declarator": "mIsCamera", "var_name": "mIsCamera"}, {"original_string": "protected boolean mIsModelMatrixDirty = true;", "modifier": "protected", "type": "boolean", "declarator": "mIsModelMatrixDirty = true", "var_name": "mIsModelMatrixDirty"}, {"original_string": "protected boolean mInsideGraph = false;", "modifier": "protected", "type": "boolean", "declarator": "mInsideGraph = false", "var_name": "mInsideGraph"}, {"original_string": "protected IGraphNode mGraphNode;", "modifier": "protected", "type": "IGraphNode", "declarator": "mGraphNode", "var_name": "mGraphNode"}], "methods": [{"identifier": "ATransformable3D", "parameters": "()", "modifiers": "public", "return": "", "signature": " ATransformable3D()", "full_signature": "public  ATransformable3D()", "class_method_signature": "ATransformable3D.ATransformable3D()", "testcase": false, "constructor": true}, {"identifier": "markModelMatrixDirty", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void markModelMatrixDirty()", "full_signature": "protected void markModelMatrixDirty()", "class_method_signature": "ATransformable3D.markModelMatrixDirty()", "testcase": false, "constructor": false}, {"identifier": "onRecalculateModelMatrix", "parameters": "(Matrix4 parentMatrix)", "modifiers": "public", "return": "boolean", "signature": "boolean onRecalculateModelMatrix(Matrix4 parentMatrix)", "full_signature": "public boolean onRecalculateModelMatrix(Matrix4 parentMatrix)", "class_method_signature": "ATransformable3D.onRecalculateModelMatrix(Matrix4 parentMatrix)", "testcase": false, "constructor": false}, {"identifier": "getModelMatrix", "parameters": "()", "modifiers": "public", "return": "Matrix4", "signature": "Matrix4 getModelMatrix()", "full_signature": "public Matrix4 getModelMatrix()", "class_method_signature": "ATransformable3D.getModelMatrix()", "testcase": false, "constructor": false}, {"identifier": "calculateModelMatrix", "parameters": "(final Matrix4 parentMatrix)", "modifiers": "public", "return": "void", "signature": "void calculateModelMatrix(final Matrix4 parentMatrix)", "full_signature": "public void calculateModelMatrix(final Matrix4 parentMatrix)", "class_method_signature": "ATransformable3D.calculateModelMatrix(final Matrix4 parentMatrix)", "testcase": false, "constructor": false}, {"identifier": "setPosition", "parameters": "(Vector3 position)", "modifiers": "public", "return": "void", "signature": "void setPosition(Vector3 position)", "full_signature": "public void setPosition(Vector3 position)", "class_method_signature": "ATransformable3D.setPosition(Vector3 position)", "testcase": false, "constructor": false}, {"identifier": "setPosition", "parameters": "(double x, double y, double z)", "modifiers": "public", "return": "void", "signature": "void setPosition(double x, double y, double z)", "full_signature": "public void setPosition(double x, double y, double z)", "class_method_signature": "ATransformable3D.setPosition(double x, double y, double z)", "testcase": false, "constructor": false}, {"identifier": "moveForward", "parameters": "(double units)", "modifiers": "public", "return": "void", "signature": "void moveForward(double units)", "full_signature": "public void moveForward(double units)", "class_method_signature": "ATransformable3D.moveForward(double units)", "testcase": false, "constructor": false}, {"identifier": "moveRight", "parameters": "(double units)", "modifiers": "public", "return": "void", "signature": "void moveRight(double units)", "full_signature": "public void moveRight(double units)", "class_method_signature": "ATransformable3D.moveRight(double units)", "testcase": false, "constructor": false}, {"identifier": "moveUp", "parameters": "(double units)", "modifiers": "public", "return": "void", "signature": "void moveUp(double units)", "full_signature": "public void moveUp(double units)", "class_method_signature": "ATransformable3D.moveUp(double units)", "testcase": false, "constructor": false}, {"identifier": "setX", "parameters": "(double x)", "modifiers": "public", "return": "void", "signature": "void setX(double x)", "full_signature": "public void setX(double x)", "class_method_signature": "ATransformable3D.setX(double x)", "testcase": false, "constructor": false}, {"identifier": "setY", "parameters": "(double y)", "modifiers": "public", "return": "void", "signature": "void setY(double y)", "full_signature": "public void setY(double y)", "class_method_signature": "ATransformable3D.setY(double y)", "testcase": false, "constructor": false}, {"identifier": "setZ", "parameters": "(double z)", "modifiers": "public", "return": "void", "signature": "void setZ(double z)", "full_signature": "public void setZ(double z)", "class_method_signature": "ATransformable3D.setZ(double z)", "testcase": false, "constructor": false}, {"identifier": "getPosition", "parameters": "()", "modifiers": "public", "return": "Vector3", "signature": "Vector3 getPosition()", "full_signature": "public Vector3 getPosition()", "class_method_signature": "ATransformable3D.getPosition()", "testcase": false, "constructor": false}, {"identifier": "getX", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getX()", "full_signature": "public double getX()", "class_method_signature": "ATransformable3D.getX()", "testcase": false, "constructor": false}, {"identifier": "getY", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getY()", "full_signature": "public double getY()", "class_method_signature": "ATransformable3D.getY()", "testcase": false, "constructor": false}, {"identifier": "getZ", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getZ()", "full_signature": "public double getZ()", "class_method_signature": "ATransformable3D.getZ()", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(final Quaternion quat)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D rotate(final Quaternion quat)", "full_signature": "public ATransformable3D rotate(final Quaternion quat)", "class_method_signature": "ATransformable3D.rotate(final Quaternion quat)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(final Vector3 axis, double angle)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D rotate(final Vector3 axis, double angle)", "full_signature": "public ATransformable3D rotate(final Vector3 axis, double angle)", "class_method_signature": "ATransformable3D.rotate(final Vector3 axis, double angle)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(final Vector3.Axis axis, double angle)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D rotate(final Vector3.Axis axis, double angle)", "full_signature": "public ATransformable3D rotate(final Vector3.Axis axis, double angle)", "class_method_signature": "ATransformable3D.rotate(final Vector3.Axis axis, double angle)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(double x, double y, double z, double angle)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D rotate(double x, double y, double z, double angle)", "full_signature": "public ATransformable3D rotate(double x, double y, double z, double angle)", "class_method_signature": "ATransformable3D.rotate(double x, double y, double z, double angle)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(final Matrix4 matrix)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D rotate(final Matrix4 matrix)", "full_signature": "public ATransformable3D rotate(final Matrix4 matrix)", "class_method_signature": "ATransformable3D.rotate(final Matrix4 matrix)", "testcase": false, "constructor": false}, {"identifier": "setRotation", "parameters": "(final Quaternion quat)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setRotation(final Quaternion quat)", "full_signature": "public ATransformable3D setRotation(final Quaternion quat)", "class_method_signature": "ATransformable3D.setRotation(final Quaternion quat)", "testcase": false, "constructor": false}, {"identifier": "setRotation", "parameters": "(final Vector3 axis, double angle)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setRotation(final Vector3 axis, double angle)", "full_signature": "public ATransformable3D setRotation(final Vector3 axis, double angle)", "class_method_signature": "ATransformable3D.setRotation(final Vector3 axis, double angle)", "testcase": false, "constructor": false}, {"identifier": "setRotation", "parameters": "(final Vector3.Axis axis, double angle)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setRotation(final Vector3.Axis axis, double angle)", "full_signature": "public ATransformable3D setRotation(final Vector3.Axis axis, double angle)", "class_method_signature": "ATransformable3D.setRotation(final Vector3.Axis axis, double angle)", "testcase": false, "constructor": false}, {"identifier": "setRotation", "parameters": "(double x, double y, double z, double angle)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setRotation(double x, double y, double z, double angle)", "full_signature": "public ATransformable3D setRotation(double x, double y, double z, double angle)", "class_method_signature": "ATransformable3D.setRotation(double x, double y, double z, double angle)", "testcase": false, "constructor": false}, {"identifier": "setRotation", "parameters": "(final Matrix4 matrix)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setRotation(final Matrix4 matrix)", "full_signature": "public ATransformable3D setRotation(final Matrix4 matrix)", "class_method_signature": "ATransformable3D.setRotation(final Matrix4 matrix)", "testcase": false, "constructor": false}, {"identifier": "setRotation", "parameters": "(Vector3 rotation)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setRotation(Vector3 rotation)", "full_signature": "public ATransformable3D setRotation(Vector3 rotation)", "class_method_signature": "ATransformable3D.setRotation(Vector3 rotation)", "testcase": false, "constructor": false}, {"identifier": "setRotation", "parameters": "(double rotX, double rotY, double rotZ)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setRotation(double rotX, double rotY, double rotZ)", "full_signature": "public ATransformable3D setRotation(double rotX, double rotY, double rotZ)", "class_method_signature": "ATransformable3D.setRotation(double rotX, double rotY, double rotZ)", "testcase": false, "constructor": false}, {"identifier": "setRotX", "parameters": "(double rotX)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setRotX(double rotX)", "full_signature": "public ATransformable3D setRotX(double rotX)", "class_method_signature": "ATransformable3D.setRotX(double rotX)", "testcase": false, "constructor": false}, {"identifier": "setRotY", "parameters": "(double rotY)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setRotY(double rotY)", "full_signature": "public ATransformable3D setRotY(double rotY)", "class_method_signature": "ATransformable3D.setRotY(double rotY)", "testcase": false, "constructor": false}, {"identifier": "setRotZ", "parameters": "(double rotZ)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setRotZ(double rotZ)", "full_signature": "public ATransformable3D setRotZ(double rotZ)", "class_method_signature": "ATransformable3D.setRotZ(double rotZ)", "testcase": false, "constructor": false}, {"identifier": "getRotX", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getRotX()", "full_signature": "public double getRotX()", "class_method_signature": "ATransformable3D.getRotX()", "testcase": false, "constructor": false}, {"identifier": "getRotY", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getRotY()", "full_signature": "public double getRotY()", "class_method_signature": "ATransformable3D.getRotY()", "testcase": false, "constructor": false}, {"identifier": "getRotZ", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getRotZ()", "full_signature": "public double getRotZ()", "class_method_signature": "ATransformable3D.getRotZ()", "testcase": false, "constructor": false}, {"identifier": "rotateAround", "parameters": "(Vector3 axis, double angle)", "modifiers": "public", "return": "void", "signature": "void rotateAround(Vector3 axis, double angle)", "full_signature": "public void rotateAround(Vector3 axis, double angle)", "class_method_signature": "ATransformable3D.rotateAround(Vector3 axis, double angle)", "testcase": false, "constructor": false}, {"identifier": "rotateAround", "parameters": "(Vector3 axis, double angle, boolean append)", "modifiers": "public", "return": "void", "signature": "void rotateAround(Vector3 axis, double angle, boolean append)", "full_signature": "public void rotateAround(Vector3 axis, double angle, boolean append)", "class_method_signature": "ATransformable3D.rotateAround(Vector3 axis, double angle, boolean append)", "testcase": false, "constructor": false}, {"identifier": "setOrientation", "parameters": "(Quaternion quat)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setOrientation(Quaternion quat)", "full_signature": "public ATransformable3D setOrientation(Quaternion quat)", "class_method_signature": "ATransformable3D.setOrientation(Quaternion quat)", "testcase": false, "constructor": false}, {"identifier": "getOrientation", "parameters": "(Quaternion quat)", "modifiers": "public", "return": "Quaternion", "signature": "Quaternion getOrientation(Quaternion quat)", "full_signature": "public Quaternion getOrientation(Quaternion quat)", "class_method_signature": "ATransformable3D.getOrientation(Quaternion quat)", "testcase": false, "constructor": false}, {"identifier": "getOrientation", "parameters": "()", "modifiers": "public", "return": "Quaternion", "signature": "Quaternion getOrientation()", "full_signature": "public Quaternion getOrientation()", "class_method_signature": "ATransformable3D.getOrientation()", "testcase": false, "constructor": false}, {"identifier": "setLookAt", "parameters": "(Vector3 lookAt)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setLookAt(Vector3 lookAt)", "full_signature": "public ATransformable3D setLookAt(Vector3 lookAt)", "class_method_signature": "ATransformable3D.setLookAt(Vector3 lookAt)", "testcase": false, "constructor": false}, {"identifier": "setLookAt", "parameters": "(double x, double y, double z)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setLookAt(double x, double y, double z)", "full_signature": "public ATransformable3D setLookAt(double x, double y, double z)", "class_method_signature": "ATransformable3D.setLookAt(double x, double y, double z)", "testcase": false, "constructor": false}, {"identifier": "enableLookAt", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void enableLookAt()", "full_signature": "public void enableLookAt()", "class_method_signature": "ATransformable3D.enableLookAt()", "testcase": false, "constructor": false}, {"identifier": "disableLookAt", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void disableLookAt()", "full_signature": "public void disableLookAt()", "class_method_signature": "ATransformable3D.disableLookAt()", "testcase": false, "constructor": false}, {"identifier": "isLookAtEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isLookAtEnabled()", "full_signature": "public boolean isLookAtEnabled()", "class_method_signature": "ATransformable3D.isLookAtEnabled()", "testcase": false, "constructor": false}, {"identifier": "getLookAt", "parameters": "()", "modifiers": "public", "return": "Vector3", "signature": "Vector3 getLookAt()", "full_signature": "public Vector3 getLookAt()", "class_method_signature": "ATransformable3D.getLookAt()", "testcase": false, "constructor": false}, {"identifier": "isLookAtValid", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isLookAtValid()", "full_signature": "public boolean isLookAtValid()", "class_method_signature": "ATransformable3D.isLookAtValid()", "testcase": false, "constructor": false}, {"identifier": "resetToLookAt", "parameters": "()", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D resetToLookAt()", "full_signature": "public ATransformable3D resetToLookAt()", "class_method_signature": "ATransformable3D.resetToLookAt()", "testcase": false, "constructor": false}, {"identifier": "resetToLookAt", "parameters": "(Vector3 upAxis)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D resetToLookAt(Vector3 upAxis)", "full_signature": "public ATransformable3D resetToLookAt(Vector3 upAxis)", "class_method_signature": "ATransformable3D.resetToLookAt(Vector3 upAxis)", "testcase": false, "constructor": false}, {"identifier": "setUpAxis", "parameters": "(Vector3 upAxis)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setUpAxis(Vector3 upAxis)", "full_signature": "public ATransformable3D setUpAxis(Vector3 upAxis)", "class_method_signature": "ATransformable3D.setUpAxis(Vector3 upAxis)", "testcase": false, "constructor": false}, {"identifier": "setUpAxis", "parameters": "(Vector3.Axis upAxis)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setUpAxis(Vector3.Axis upAxis)", "full_signature": "public ATransformable3D setUpAxis(Vector3.Axis upAxis)", "class_method_signature": "ATransformable3D.setUpAxis(Vector3.Axis upAxis)", "testcase": false, "constructor": false}, {"identifier": "setUpAxis", "parameters": "(double x, double y, double z)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setUpAxis(double x, double y, double z)", "full_signature": "public ATransformable3D setUpAxis(double x, double y, double z)", "class_method_signature": "ATransformable3D.setUpAxis(double x, double y, double z)", "testcase": false, "constructor": false}, {"identifier": "resetUpAxis", "parameters": "()", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D resetUpAxis()", "full_signature": "public ATransformable3D resetUpAxis()", "class_method_signature": "ATransformable3D.resetUpAxis()", "testcase": false, "constructor": false}, {"identifier": "setScale", "parameters": "(Vector3 scale)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setScale(Vector3 scale)", "full_signature": "public ATransformable3D setScale(Vector3 scale)", "class_method_signature": "ATransformable3D.setScale(Vector3 scale)", "testcase": false, "constructor": false}, {"identifier": "setScale", "parameters": "(double scaleX, double scaleY, double scaleZ)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setScale(double scaleX, double scaleY, double scaleZ)", "full_signature": "public ATransformable3D setScale(double scaleX, double scaleY, double scaleZ)", "class_method_signature": "ATransformable3D.setScale(double scaleX, double scaleY, double scaleZ)", "testcase": false, "constructor": false}, {"identifier": "setScale", "parameters": "(double scale)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setScale(double scale)", "full_signature": "public ATransformable3D setScale(double scale)", "class_method_signature": "ATransformable3D.setScale(double scale)", "testcase": false, "constructor": false}, {"identifier": "setScaleX", "parameters": "(double scale)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setScaleX(double scale)", "full_signature": "public ATransformable3D setScaleX(double scale)", "class_method_signature": "ATransformable3D.setScaleX(double scale)", "testcase": false, "constructor": false}, {"identifier": "setScaleY", "parameters": "(double scale)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setScaleY(double scale)", "full_signature": "public ATransformable3D setScaleY(double scale)", "class_method_signature": "ATransformable3D.setScaleY(double scale)", "testcase": false, "constructor": false}, {"identifier": "setScaleZ", "parameters": "(double scale)", "modifiers": "public", "return": "ATransformable3D", "signature": "ATransformable3D setScaleZ(double scale)", "full_signature": "public ATransformable3D setScaleZ(double scale)", "class_method_signature": "ATransformable3D.setScaleZ(double scale)", "testcase": false, "constructor": false}, {"identifier": "getScale", "parameters": "()", "modifiers": "public", "return": "Vector3", "signature": "Vector3 getScale()", "full_signature": "public Vector3 getScale()", "class_method_signature": "ATransformable3D.getScale()", "testcase": false, "constructor": false}, {"identifier": "getScaleX", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getScaleX()", "full_signature": "public double getScaleX()", "class_method_signature": "ATransformable3D.getScaleX()", "testcase": false, "constructor": false}, {"identifier": "getScaleY", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getScaleY()", "full_signature": "public double getScaleY()", "class_method_signature": "ATransformable3D.getScaleY()", "testcase": false, "constructor": false}, {"identifier": "getScaleZ", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getScaleZ()", "full_signature": "public double getScaleZ()", "class_method_signature": "ATransformable3D.getScaleZ()", "testcase": false, "constructor": false}, {"identifier": "isZeroScale", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isZeroScale()", "full_signature": "public boolean isZeroScale()", "class_method_signature": "ATransformable3D.isZeroScale()", "testcase": false, "constructor": false}, {"identifier": "setGraphNode", "parameters": "(IGraphNode node, boolean inside)", "modifiers": "public", "return": "void", "signature": "void setGraphNode(IGraphNode node, boolean inside)", "full_signature": "public void setGraphNode(IGraphNode node, boolean inside)", "class_method_signature": "ATransformable3D.setGraphNode(IGraphNode node, boolean inside)", "testcase": false, "constructor": false}, {"identifier": "getGraphNode", "parameters": "()", "modifiers": "public", "return": "IGraphNode", "signature": "IGraphNode getGraphNode()", "full_signature": "public IGraphNode getGraphNode()", "class_method_signature": "ATransformable3D.getGraphNode()", "testcase": false, "constructor": false}, {"identifier": "isInGraph", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isInGraph()", "full_signature": "public boolean isInGraph()", "class_method_signature": "ATransformable3D.isInGraph()", "testcase": false, "constructor": false}, {"identifier": "getTransformedBoundingVolume", "parameters": "()", "modifiers": "public", "return": "IBoundingVolume", "signature": "IBoundingVolume getTransformedBoundingVolume()", "full_signature": "public IBoundingVolume getTransformedBoundingVolume()", "class_method_signature": "ATransformable3D.getTransformedBoundingVolume()", "testcase": false, "constructor": false}, {"identifier": "getScenePosition", "parameters": "()", "modifiers": "public", "return": "Vector3", "signature": "Vector3 getScenePosition()", "full_signature": "public Vector3 getScenePosition()", "class_method_signature": "ATransformable3D.getScenePosition()", "testcase": false, "constructor": false}], "file": "rajawali/src/main/java/org/rajawali3d/ATransformable3D.java"}, "focal_method": {"identifier": "getScale", "parameters": "()", "modifiers": "public", "return": "Vector3", "body": "public Vector3 getScale() {\n        return mScale;\n    }", "signature": "Vector3 getScale()", "full_signature": "public Vector3 getScale()", "class_method_signature": "ATransformable3D.getScale()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2011647, "url": "https://github.com/Rajawali/Rajawali", "language": "Java", "is_fork": false, "fork_count": 666, "stargazer_count": 1984, "size": 83746, "license": "licensed"}}