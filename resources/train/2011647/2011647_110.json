{"test_class": {"identifier": "Matrix4Test", "superclass": "", "interfaces": "", "fields": [], "file": "rajawali/src/test/java/org/rajawali3d/math/Matrix4Test.java"}, "test_case": {"identifier": "testToArray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToArray() {\n        final double[] expected = new double[]{\n                1d, 0d, 0d, 0d,\n                0d, 1d, 0d, 0d,\n                0d, 0d, 1d, 0d,\n                0d, 0d, 0d, 1d\n        };\n\n        final double[] result = new double[16];\n        final Matrix4 m = new Matrix4();\n        m.toArray(result);\n        assertNotNull(result);\n        for (int i = 0; i < expected.length; ++i) {\n            assertEquals(expected[i], result[i], 1e-14);\n        }\n    }", "signature": "void testToArray()", "full_signature": "@Test public void testToArray()", "class_method_signature": "Matrix4Test.testToArray()", "testcase": true, "constructor": false, "invocations": ["toArray", "assertNotNull", "assertEquals"]}, "focal_class": {"identifier": "Matrix4", "superclass": "", "interfaces": "implements Cloneable", "fields": [{"original_string": "public static final int M00 = 0;", "modifier": "public static final", "type": "int", "declarator": "M00 = 0", "var_name": "M00"}, {"original_string": "public static final int M01 = 4;", "modifier": "public static final", "type": "int", "declarator": "M01 = 4", "var_name": "M01"}, {"original_string": "public static final int M02 = 8;", "modifier": "public static final", "type": "int", "declarator": "M02 = 8", "var_name": "M02"}, {"original_string": "public static final int M03 = 12;", "modifier": "public static final", "type": "int", "declarator": "M03 = 12", "var_name": "M03"}, {"original_string": "public static final int M10 = 1;", "modifier": "public static final", "type": "int", "declarator": "M10 = 1", "var_name": "M10"}, {"original_string": "public static final int M11 = 5;", "modifier": "public static final", "type": "int", "declarator": "M11 = 5", "var_name": "M11"}, {"original_string": "public static final int M12 = 9;", "modifier": "public static final", "type": "int", "declarator": "M12 = 9", "var_name": "M12"}, {"original_string": "public static final int M13 = 13;", "modifier": "public static final", "type": "int", "declarator": "M13 = 13", "var_name": "M13"}, {"original_string": "public static final int M20 = 2;", "modifier": "public static final", "type": "int", "declarator": "M20 = 2", "var_name": "M20"}, {"original_string": "public static final int M21 = 6;", "modifier": "public static final", "type": "int", "declarator": "M21 = 6", "var_name": "M21"}, {"original_string": "public static final int M22 = 10;", "modifier": "public static final", "type": "int", "declarator": "M22 = 10", "var_name": "M22"}, {"original_string": "public static final int M23 = 14;", "modifier": "public static final", "type": "int", "declarator": "M23 = 14", "var_name": "M23"}, {"original_string": "public static final int M30 = 3;", "modifier": "public static final", "type": "int", "declarator": "M30 = 3", "var_name": "M30"}, {"original_string": "public static final int M31 = 7;", "modifier": "public static final", "type": "int", "declarator": "M31 = 7", "var_name": "M31"}, {"original_string": "public static final int M32 = 11;", "modifier": "public static final", "type": "int", "declarator": "M32 = 11", "var_name": "M32"}, {"original_string": "public static final int M33 = 15;", "modifier": "public static final", "type": "int", "declarator": "M33 = 15", "var_name": "M33"}, {"original_string": "@NonNull\n    @Size(16)\n    private double[] m = new double[16];", "modifier": "@NonNull\n    @Size(16)\n    private", "type": "double[]", "declarator": "m = new double[16]", "var_name": "m"}, {"original_string": "@NonNull @Size(16) private double[]   mTmp   = new double[16];", "modifier": "@NonNull @Size(16) private", "type": "double[]", "declarator": "mTmp   = new double[16]", "var_name": "mTmp"}, {"original_string": "@NonNull @Size(16) private float[]    mFloat = new float[16];", "modifier": "@NonNull @Size(16) private", "type": "float[]", "declarator": "mFloat = new float[16]", "var_name": "mFloat"}, {"original_string": "@NonNull private final     Quaternion mQuat  = new Quaternion();", "modifier": "@NonNull private final", "type": "Quaternion", "declarator": "mQuat  = new Quaternion()", "var_name": "mQuat"}, {"original_string": "@NonNull private final     Vector3    mVec1  = new Vector3();", "modifier": "@NonNull private final", "type": "Vector3", "declarator": "mVec1  = new Vector3()", "var_name": "mVec1"}, {"original_string": "@NonNull private final     Vector3    mVec2  = new Vector3();", "modifier": "@NonNull private final", "type": "Vector3", "declarator": "mVec2  = new Vector3()", "var_name": "mVec2"}, {"original_string": "@NonNull private final     Vector3    mVec3  = new Vector3();", "modifier": "@NonNull private final", "type": "Vector3", "declarator": "mVec3  = new Vector3()", "var_name": "mVec3"}, {"original_string": "@Nullable private Matrix4 mMatrix;", "modifier": "@Nullable private", "type": "Matrix4", "declarator": "mMatrix", "var_name": "mMatrix"}], "methods": [{"identifier": "Matrix4", "parameters": "()", "modifiers": "public", "return": "", "signature": " Matrix4()", "full_signature": "public  Matrix4()", "class_method_signature": "Matrix4.Matrix4()", "testcase": false, "constructor": true}, {"identifier": "Matrix4", "parameters": "(@NonNull Matrix4 matrix)", "modifiers": "public", "return": "", "signature": " Matrix4(@NonNull Matrix4 matrix)", "full_signature": "public  Matrix4(@NonNull Matrix4 matrix)", "class_method_signature": "Matrix4.Matrix4(@NonNull Matrix4 matrix)", "testcase": false, "constructor": true}, {"identifier": "Matrix4", "parameters": "(@NonNull @Size(min = 16) double[] matrix)", "modifiers": "public", "return": "", "signature": " Matrix4(@NonNull @Size(min = 16) double[] matrix)", "full_signature": "public  Matrix4(@NonNull @Size(min = 16) double[] matrix)", "class_method_signature": "Matrix4.Matrix4(@NonNull @Size(min = 16) double[] matrix)", "testcase": false, "constructor": true}, {"identifier": "Matrix4", "parameters": "(@NonNull @Size(min = 16) float[] matrix)", "modifiers": "public", "return": "", "signature": " Matrix4(@NonNull @Size(min = 16) float[] matrix)", "full_signature": "public  Matrix4(@NonNull @Size(min = 16) float[] matrix)", "class_method_signature": "Matrix4.Matrix4(@NonNull @Size(min = 16) float[] matrix)", "testcase": false, "constructor": true}, {"identifier": "Matrix4", "parameters": "(@NonNull Quaternion quat)", "modifiers": "public", "return": "", "signature": " Matrix4(@NonNull Quaternion quat)", "full_signature": "public  Matrix4(@NonNull Quaternion quat)", "class_method_signature": "Matrix4.Matrix4(@NonNull Quaternion quat)", "testcase": false, "constructor": true}, {"identifier": "setAll", "parameters": "(@NonNull Matrix4 matrix)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setAll(@NonNull Matrix4 matrix)", "full_signature": "@NonNull public Matrix4 setAll(@NonNull Matrix4 matrix)", "class_method_signature": "Matrix4.setAll(@NonNull Matrix4 matrix)", "testcase": false, "constructor": false}, {"identifier": "setAll", "parameters": "(@NonNull @Size(min = 16) double[] matrix)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setAll(@NonNull @Size(min = 16) double[] matrix)", "full_signature": "@NonNull public Matrix4 setAll(@NonNull @Size(min = 16) double[] matrix)", "class_method_signature": "Matrix4.setAll(@NonNull @Size(min = 16) double[] matrix)", "testcase": false, "constructor": false}, {"identifier": "setAll", "parameters": "(@NonNull @Size(min = 16) float[] matrix)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setAll(@NonNull @Size(min = 16) float[] matrix)", "full_signature": "@NonNull public Matrix4 setAll(@NonNull @Size(min = 16) float[] matrix)", "class_method_signature": "Matrix4.setAll(@NonNull @Size(min = 16) float[] matrix)", "testcase": false, "constructor": false}, {"identifier": "setAll", "parameters": "(@NonNull Quaternion quat)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setAll(@NonNull Quaternion quat)", "full_signature": "@NonNull public Matrix4 setAll(@NonNull Quaternion quat)", "class_method_signature": "Matrix4.setAll(@NonNull Quaternion quat)", "testcase": false, "constructor": false}, {"identifier": "setAll", "parameters": "(double w, double x, double y, double z)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setAll(double w, double x, double y, double z)", "full_signature": "@NonNull public Matrix4 setAll(double w, double x, double y, double z)", "class_method_signature": "Matrix4.setAll(double w, double x, double y, double z)", "testcase": false, "constructor": false}, {"identifier": "setAll", "parameters": "(@NonNull Vector3 xAxis, @NonNull Vector3 yAxis, @NonNull Vector3 zAxis, @NonNull Vector3 pos)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setAll(@NonNull Vector3 xAxis, @NonNull Vector3 yAxis, @NonNull Vector3 zAxis, @NonNull Vector3 pos)", "full_signature": "@NonNull public Matrix4 setAll(@NonNull Vector3 xAxis, @NonNull Vector3 yAxis, @NonNull Vector3 zAxis, @NonNull Vector3 pos)", "class_method_signature": "Matrix4.setAll(@NonNull Vector3 xAxis, @NonNull Vector3 yAxis, @NonNull Vector3 zAxis, @NonNull Vector3 pos)", "testcase": false, "constructor": false}, {"identifier": "setAll", "parameters": "(@NonNull Vector3 position, @NonNull Vector3 scale, @NonNull Quaternion rotation)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setAll(@NonNull Vector3 position, @NonNull Vector3 scale, @NonNull Quaternion rotation)", "full_signature": "@NonNull public Matrix4 setAll(@NonNull Vector3 position, @NonNull Vector3 scale, @NonNull Quaternion rotation)", "class_method_signature": "Matrix4.setAll(@NonNull Vector3 position, @NonNull Vector3 scale, @NonNull Quaternion rotation)", "testcase": false, "constructor": false}, {"identifier": "identity", "parameters": "()", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 identity()", "full_signature": "@NonNull public Matrix4 identity()", "class_method_signature": "Matrix4.identity()", "testcase": false, "constructor": false}, {"identifier": "zero", "parameters": "()", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 zero()", "full_signature": "@NonNull public Matrix4 zero()", "class_method_signature": "Matrix4.zero()", "testcase": false, "constructor": false}, {"identifier": "determinant", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double determinant()", "full_signature": "public double determinant()", "class_method_signature": "Matrix4.determinant()", "testcase": false, "constructor": false}, {"identifier": "inverse", "parameters": "()", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 inverse()", "full_signature": "@NonNull public Matrix4 inverse()", "class_method_signature": "Matrix4.inverse()", "testcase": false, "constructor": false}, {"identifier": "transpose", "parameters": "()", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 transpose()", "full_signature": "@NonNull public Matrix4 transpose()", "class_method_signature": "Matrix4.transpose()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(@NonNull Matrix4 matrix)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 add(@NonNull Matrix4 matrix)", "full_signature": "@NonNull public Matrix4 add(@NonNull Matrix4 matrix)", "class_method_signature": "Matrix4.add(@NonNull Matrix4 matrix)", "testcase": false, "constructor": false}, {"identifier": "subtract", "parameters": "(@NonNull Matrix4 matrix)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 subtract(@NonNull Matrix4 matrix)", "full_signature": "@NonNull public Matrix4 subtract(@NonNull Matrix4 matrix)", "class_method_signature": "Matrix4.subtract(@NonNull Matrix4 matrix)", "testcase": false, "constructor": false}, {"identifier": "multiply", "parameters": "(@NonNull Matrix4 matrix)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 multiply(@NonNull Matrix4 matrix)", "full_signature": "@NonNull public Matrix4 multiply(@NonNull Matrix4 matrix)", "class_method_signature": "Matrix4.multiply(@NonNull Matrix4 matrix)", "testcase": false, "constructor": false}, {"identifier": "leftMultiply", "parameters": "(@NonNull Matrix4 matrix)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 leftMultiply(@NonNull Matrix4 matrix)", "full_signature": "@NonNull public Matrix4 leftMultiply(@NonNull Matrix4 matrix)", "class_method_signature": "Matrix4.leftMultiply(@NonNull Matrix4 matrix)", "testcase": false, "constructor": false}, {"identifier": "multiply", "parameters": "(double value)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 multiply(double value)", "full_signature": "@NonNull public Matrix4 multiply(double value)", "class_method_signature": "Matrix4.multiply(double value)", "testcase": false, "constructor": false}, {"identifier": "translate", "parameters": "(@NonNull Vector3 vec)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 translate(@NonNull Vector3 vec)", "full_signature": "@NonNull public Matrix4 translate(@NonNull Vector3 vec)", "class_method_signature": "Matrix4.translate(@NonNull Vector3 vec)", "testcase": false, "constructor": false}, {"identifier": "translate", "parameters": "(double x, double y, double z)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 translate(double x, double y, double z)", "full_signature": "@NonNull public Matrix4 translate(double x, double y, double z)", "class_method_signature": "Matrix4.translate(double x, double y, double z)", "testcase": false, "constructor": false}, {"identifier": "negTranslate", "parameters": "(@NonNull Vector3 vec)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 negTranslate(@NonNull Vector3 vec)", "full_signature": "@NonNull public Matrix4 negTranslate(@NonNull Vector3 vec)", "class_method_signature": "Matrix4.negTranslate(@NonNull Vector3 vec)", "testcase": false, "constructor": false}, {"identifier": "scale", "parameters": "(@NonNull Vector3 vec)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 scale(@NonNull Vector3 vec)", "full_signature": "@NonNull public Matrix4 scale(@NonNull Vector3 vec)", "class_method_signature": "Matrix4.scale(@NonNull Vector3 vec)", "testcase": false, "constructor": false}, {"identifier": "scale", "parameters": "(double x, double y, double z)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 scale(double x, double y, double z)", "full_signature": "@NonNull public Matrix4 scale(double x, double y, double z)", "class_method_signature": "Matrix4.scale(double x, double y, double z)", "testcase": false, "constructor": false}, {"identifier": "scale", "parameters": "(double s)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 scale(double s)", "full_signature": "@NonNull public Matrix4 scale(double s)", "class_method_signature": "Matrix4.scale(double s)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(@NonNull Quaternion quat)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 rotate(@NonNull Quaternion quat)", "full_signature": "@NonNull public Matrix4 rotate(@NonNull Quaternion quat)", "class_method_signature": "Matrix4.rotate(@NonNull Quaternion quat)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(@NonNull Vector3 axis, double angle)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 rotate(@NonNull Vector3 axis, double angle)", "full_signature": "@NonNull public Matrix4 rotate(@NonNull Vector3 axis, double angle)", "class_method_signature": "Matrix4.rotate(@NonNull Vector3 axis, double angle)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(@NonNull Axis axis, double angle)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 rotate(@NonNull Axis axis, double angle)", "full_signature": "@NonNull public Matrix4 rotate(@NonNull Axis axis, double angle)", "class_method_signature": "Matrix4.rotate(@NonNull Axis axis, double angle)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(double x, double y, double z, double angle)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 rotate(double x, double y, double z, double angle)", "full_signature": "@NonNull public Matrix4 rotate(double x, double y, double z, double angle)", "class_method_signature": "Matrix4.rotate(double x, double y, double z, double angle)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(@NonNull Vector3 v1, @NonNull Vector3 v2)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 rotate(@NonNull Vector3 v1, @NonNull Vector3 v2)", "full_signature": "@NonNull public Matrix4 rotate(@NonNull Vector3 v1, @NonNull Vector3 v2)", "class_method_signature": "Matrix4.rotate(@NonNull Vector3 v1, @NonNull Vector3 v2)", "testcase": false, "constructor": false}, {"identifier": "setTranslation", "parameters": "(@NonNull Vector3 vec)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setTranslation(@NonNull Vector3 vec)", "full_signature": "@NonNull public Matrix4 setTranslation(@NonNull Vector3 vec)", "class_method_signature": "Matrix4.setTranslation(@NonNull Vector3 vec)", "testcase": false, "constructor": false}, {"identifier": "setCoordinateZoom", "parameters": "(double zoom)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setCoordinateZoom(double zoom)", "full_signature": "@NonNull public Matrix4 setCoordinateZoom(double zoom)", "class_method_signature": "Matrix4.setCoordinateZoom(double zoom)", "testcase": false, "constructor": false}, {"identifier": "rotateVector", "parameters": "(@NonNull Vector3 vec)", "modifiers": "public", "return": "void", "signature": "void rotateVector(@NonNull Vector3 vec)", "full_signature": "public void rotateVector(@NonNull Vector3 vec)", "class_method_signature": "Matrix4.rotateVector(@NonNull Vector3 vec)", "testcase": false, "constructor": false}, {"identifier": "projectVector", "parameters": "(@NonNull Vector3 vec)", "modifiers": "@NonNull public", "return": "Vector3", "signature": "Vector3 projectVector(@NonNull Vector3 vec)", "full_signature": "@NonNull public Vector3 projectVector(@NonNull Vector3 vec)", "class_method_signature": "Matrix4.projectVector(@NonNull Vector3 vec)", "testcase": false, "constructor": false}, {"identifier": "projectAndCreateVector", "parameters": "(@NonNull Vector3 vec)", "modifiers": "@NonNull public", "return": "Vector3", "signature": "Vector3 projectAndCreateVector(@NonNull Vector3 vec)", "full_signature": "@NonNull public Vector3 projectAndCreateVector(@NonNull Vector3 vec)", "class_method_signature": "Matrix4.projectAndCreateVector(@NonNull Vector3 vec)", "testcase": false, "constructor": false}, {"identifier": "setTranslation", "parameters": "(double x, double y, double z)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setTranslation(double x, double y, double z)", "full_signature": "@NonNull public Matrix4 setTranslation(double x, double y, double z)", "class_method_signature": "Matrix4.setTranslation(double x, double y, double z)", "testcase": false, "constructor": false}, {"identifier": "lerp", "parameters": "(@NonNull Matrix4 matrix, double t)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 lerp(@NonNull Matrix4 matrix, double t)", "full_signature": "@NonNull public Matrix4 lerp(@NonNull Matrix4 matrix, double t)", "class_method_signature": "Matrix4.lerp(@NonNull Matrix4 matrix, double t)", "testcase": false, "constructor": false}, {"identifier": "setToNormalMatrix", "parameters": "()", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToNormalMatrix()", "full_signature": "@NonNull public Matrix4 setToNormalMatrix()", "class_method_signature": "Matrix4.setToNormalMatrix()", "testcase": false, "constructor": false}, {"identifier": "setToPerspective", "parameters": "(double near, double far, double fov, double aspect)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToPerspective(double near, double far, double fov, double aspect)", "full_signature": "@NonNull public Matrix4 setToPerspective(double near, double far, double fov, double aspect)", "class_method_signature": "Matrix4.setToPerspective(double near, double far, double fov, double aspect)", "testcase": false, "constructor": false}, {"identifier": "setToOrthographic2D", "parameters": "(double x, double y, double width, double height)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToOrthographic2D(double x, double y, double width, double height)", "full_signature": "@NonNull public Matrix4 setToOrthographic2D(double x, double y, double width, double height)", "class_method_signature": "Matrix4.setToOrthographic2D(double x, double y, double width, double height)", "testcase": false, "constructor": false}, {"identifier": "setToOrthographic2D", "parameters": "(double x, double y, double width, double height, double near, double far)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToOrthographic2D(double x, double y, double width, double height, double near, double far)", "full_signature": "@NonNull public Matrix4 setToOrthographic2D(double x, double y, double width, double height, double near, double far)", "class_method_signature": "Matrix4.setToOrthographic2D(double x, double y, double width, double height, double near, double far)", "testcase": false, "constructor": false}, {"identifier": "setToOrthographic", "parameters": "(double left, double right, double bottom, double top, double near, double far)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToOrthographic(double left, double right, double bottom, double top, double near, double far)", "full_signature": "@NonNull public Matrix4 setToOrthographic(double left, double right, double bottom, double top, double near, double far)", "class_method_signature": "Matrix4.setToOrthographic(double left, double right, double bottom, double top, double near, double far)", "testcase": false, "constructor": false}, {"identifier": "setToTranslation", "parameters": "(@NonNull Vector3 vec)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToTranslation(@NonNull Vector3 vec)", "full_signature": "@NonNull public Matrix4 setToTranslation(@NonNull Vector3 vec)", "class_method_signature": "Matrix4.setToTranslation(@NonNull Vector3 vec)", "testcase": false, "constructor": false}, {"identifier": "setToTranslation", "parameters": "(double x, double y, double z)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToTranslation(double x, double y, double z)", "full_signature": "@NonNull public Matrix4 setToTranslation(double x, double y, double z)", "class_method_signature": "Matrix4.setToTranslation(double x, double y, double z)", "testcase": false, "constructor": false}, {"identifier": "setToScale", "parameters": "(@NonNull Vector3 vec)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToScale(@NonNull Vector3 vec)", "full_signature": "@NonNull public Matrix4 setToScale(@NonNull Vector3 vec)", "class_method_signature": "Matrix4.setToScale(@NonNull Vector3 vec)", "testcase": false, "constructor": false}, {"identifier": "setToScale", "parameters": "(double x, double y, double z)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToScale(double x, double y, double z)", "full_signature": "@NonNull public Matrix4 setToScale(double x, double y, double z)", "class_method_signature": "Matrix4.setToScale(double x, double y, double z)", "testcase": false, "constructor": false}, {"identifier": "setToTranslationAndScaling", "parameters": "(@NonNull Vector3 translation, @NonNull Vector3 scaling)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToTranslationAndScaling(@NonNull Vector3 translation, @NonNull Vector3 scaling)", "full_signature": "@NonNull public Matrix4 setToTranslationAndScaling(@NonNull Vector3 translation, @NonNull Vector3 scaling)", "class_method_signature": "Matrix4.setToTranslationAndScaling(@NonNull Vector3 translation, @NonNull Vector3 scaling)", "testcase": false, "constructor": false}, {"identifier": "setToTranslationAndScaling", "parameters": "(double tx, double ty, double tz, double sx, double sy, double sz)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToTranslationAndScaling(double tx, double ty, double tz, double sx, double sy, double sz)", "full_signature": "@NonNull public Matrix4 setToTranslationAndScaling(double tx, double ty, double tz, double sx, double sy, double sz)", "class_method_signature": "Matrix4.setToTranslationAndScaling(double tx, double ty, double tz, double sx, double sy, double sz)", "testcase": false, "constructor": false}, {"identifier": "setToRotation", "parameters": "(@NonNull Vector3 axis, double angle)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToRotation(@NonNull Vector3 axis, double angle)", "full_signature": "@NonNull public Matrix4 setToRotation(@NonNull Vector3 axis, double angle)", "class_method_signature": "Matrix4.setToRotation(@NonNull Vector3 axis, double angle)", "testcase": false, "constructor": false}, {"identifier": "setToRotation", "parameters": "(@NonNull Axis axis, double angle)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToRotation(@NonNull Axis axis, double angle)", "full_signature": "@NonNull public Matrix4 setToRotation(@NonNull Axis axis, double angle)", "class_method_signature": "Matrix4.setToRotation(@NonNull Axis axis, double angle)", "testcase": false, "constructor": false}, {"identifier": "setToRotation", "parameters": "(double x, double y, double z, double angle)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToRotation(double x, double y, double z, double angle)", "full_signature": "@NonNull public Matrix4 setToRotation(double x, double y, double z, double angle)", "class_method_signature": "Matrix4.setToRotation(double x, double y, double z, double angle)", "testcase": false, "constructor": false}, {"identifier": "setToRotation", "parameters": "(@NonNull Vector3 v1, @NonNull Vector3 v2)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToRotation(@NonNull Vector3 v1, @NonNull Vector3 v2)", "full_signature": "@NonNull public Matrix4 setToRotation(@NonNull Vector3 v1, @NonNull Vector3 v2)", "class_method_signature": "Matrix4.setToRotation(@NonNull Vector3 v1, @NonNull Vector3 v2)", "testcase": false, "constructor": false}, {"identifier": "setToRotation", "parameters": "(double x1, double y1, double z1, double x2, double y2, double z2)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToRotation(double x1, double y1, double z1, double x2, double y2, double z2)", "full_signature": "@NonNull public Matrix4 setToRotation(double x1, double y1, double z1, double x2, double y2, double z2)", "class_method_signature": "Matrix4.setToRotation(double x1, double y1, double z1, double x2, double y2, double z2)", "testcase": false, "constructor": false}, {"identifier": "setToRotation", "parameters": "(double yaw, double pitch, double roll)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToRotation(double yaw, double pitch, double roll)", "full_signature": "@NonNull public Matrix4 setToRotation(double yaw, double pitch, double roll)", "class_method_signature": "Matrix4.setToRotation(double yaw, double pitch, double roll)", "testcase": false, "constructor": false}, {"identifier": "setToLookAt", "parameters": "(@NonNull Vector3 direction, @NonNull Vector3 up)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToLookAt(@NonNull Vector3 direction, @NonNull Vector3 up)", "full_signature": "@NonNull public Matrix4 setToLookAt(@NonNull Vector3 direction, @NonNull Vector3 up)", "class_method_signature": "Matrix4.setToLookAt(@NonNull Vector3 direction, @NonNull Vector3 up)", "testcase": false, "constructor": false}, {"identifier": "setToLookAt", "parameters": "(@NonNull Vector3 position, @NonNull Vector3 target, @NonNull Vector3 up)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToLookAt(@NonNull Vector3 position, @NonNull Vector3 target, @NonNull Vector3 up)", "full_signature": "@NonNull public Matrix4 setToLookAt(@NonNull Vector3 position, @NonNull Vector3 target, @NonNull Vector3 up)", "class_method_signature": "Matrix4.setToLookAt(@NonNull Vector3 position, @NonNull Vector3 target, @NonNull Vector3 up)", "testcase": false, "constructor": false}, {"identifier": "setToWorld", "parameters": "(@NonNull Vector3 position, @NonNull Vector3 forward, @NonNull Vector3 up)", "modifiers": "@NonNull public", "return": "Matrix4", "signature": "Matrix4 setToWorld(@NonNull Vector3 position, @NonNull Vector3 forward, @NonNull Vector3 up)", "full_signature": "@NonNull public Matrix4 setToWorld(@NonNull Vector3 position, @NonNull Vector3 forward, @NonNull Vector3 up)", "class_method_signature": "Matrix4.setToWorld(@NonNull Vector3 position, @NonNull Vector3 forward, @NonNull Vector3 up)", "testcase": false, "constructor": false}, {"identifier": "getTranslation", "parameters": "()", "modifiers": "@NonNull public", "return": "Vector3", "signature": "Vector3 getTranslation()", "full_signature": "@NonNull public Vector3 getTranslation()", "class_method_signature": "Matrix4.getTranslation()", "testcase": false, "constructor": false}, {"identifier": "getTranslation", "parameters": "(Vector3 vec)", "modifiers": "@NonNull public", "return": "Vector3", "signature": "Vector3 getTranslation(Vector3 vec)", "full_signature": "@NonNull public Vector3 getTranslation(Vector3 vec)", "class_method_signature": "Matrix4.getTranslation(Vector3 vec)", "testcase": false, "constructor": false}, {"identifier": "getScaling", "parameters": "()", "modifiers": "@NonNull public", "return": "Vector3", "signature": "Vector3 getScaling()", "full_signature": "@NonNull public Vector3 getScaling()", "class_method_signature": "Matrix4.getScaling()", "testcase": false, "constructor": false}, {"identifier": "getScaling", "parameters": "(@NonNull Vector3 vec)", "modifiers": "@NonNull public", "return": "Vector3", "signature": "Vector3 getScaling(@NonNull Vector3 vec)", "full_signature": "@NonNull public Vector3 getScaling(@NonNull Vector3 vec)", "class_method_signature": "Matrix4.getScaling(@NonNull Vector3 vec)", "testcase": false, "constructor": false}, {"identifier": "createRotationMatrix", "parameters": "(@NonNull Quaternion quat)", "modifiers": "@NonNull public static", "return": "Matrix4", "signature": "Matrix4 createRotationMatrix(@NonNull Quaternion quat)", "full_signature": "@NonNull public static Matrix4 createRotationMatrix(@NonNull Quaternion quat)", "class_method_signature": "Matrix4.createRotationMatrix(@NonNull Quaternion quat)", "testcase": false, "constructor": false}, {"identifier": "createRotationMatrix", "parameters": "(@NonNull Vector3 axis, double angle)", "modifiers": "@NonNull public static", "return": "Matrix4", "signature": "Matrix4 createRotationMatrix(@NonNull Vector3 axis, double angle)", "full_signature": "@NonNull public static Matrix4 createRotationMatrix(@NonNull Vector3 axis, double angle)", "class_method_signature": "Matrix4.createRotationMatrix(@NonNull Vector3 axis, double angle)", "testcase": false, "constructor": false}, {"identifier": "createRotationMatrix", "parameters": "(@NonNull Axis axis, double angle)", "modifiers": "@NonNull public static", "return": "Matrix4", "signature": "Matrix4 createRotationMatrix(@NonNull Axis axis, double angle)", "full_signature": "@NonNull public static Matrix4 createRotationMatrix(@NonNull Axis axis, double angle)", "class_method_signature": "Matrix4.createRotationMatrix(@NonNull Axis axis, double angle)", "testcase": false, "constructor": false}, {"identifier": "createRotationMatrix", "parameters": "(double x, double y, double z, double angle)", "modifiers": "@NonNull public static", "return": "Matrix4", "signature": "Matrix4 createRotationMatrix(double x, double y, double z, double angle)", "full_signature": "@NonNull public static Matrix4 createRotationMatrix(double x, double y, double z, double angle)", "class_method_signature": "Matrix4.createRotationMatrix(double x, double y, double z, double angle)", "testcase": false, "constructor": false}, {"identifier": "createRotationMatrix", "parameters": "(double yaw, double pitch, double roll)", "modifiers": "@NonNull public static", "return": "Matrix4", "signature": "Matrix4 createRotationMatrix(double yaw, double pitch, double roll)", "full_signature": "@NonNull public static Matrix4 createRotationMatrix(double yaw, double pitch, double roll)", "class_method_signature": "Matrix4.createRotationMatrix(double yaw, double pitch, double roll)", "testcase": false, "constructor": false}, {"identifier": "createTranslationMatrix", "parameters": "(@NonNull Vector3 vec)", "modifiers": "@NonNull public static", "return": "Matrix4", "signature": "Matrix4 createTranslationMatrix(@NonNull Vector3 vec)", "full_signature": "@NonNull public static Matrix4 createTranslationMatrix(@NonNull Vector3 vec)", "class_method_signature": "Matrix4.createTranslationMatrix(@NonNull Vector3 vec)", "testcase": false, "constructor": false}, {"identifier": "createTranslationMatrix", "parameters": "(double x, double y, double z)", "modifiers": "@NonNull public static", "return": "Matrix4", "signature": "Matrix4 createTranslationMatrix(double x, double y, double z)", "full_signature": "@NonNull public static Matrix4 createTranslationMatrix(double x, double y, double z)", "class_method_signature": "Matrix4.createTranslationMatrix(double x, double y, double z)", "testcase": false, "constructor": false}, {"identifier": "createScaleMatrix", "parameters": "(@NonNull Vector3 vec)", "modifiers": "@NonNull public static", "return": "Matrix4", "signature": "Matrix4 createScaleMatrix(@NonNull Vector3 vec)", "full_signature": "@NonNull public static Matrix4 createScaleMatrix(@NonNull Vector3 vec)", "class_method_signature": "Matrix4.createScaleMatrix(@NonNull Vector3 vec)", "testcase": false, "constructor": false}, {"identifier": "createScaleMatrix", "parameters": "(double x, double y, double z)", "modifiers": "@NonNull public static", "return": "Matrix4", "signature": "Matrix4 createScaleMatrix(double x, double y, double z)", "full_signature": "@NonNull public static Matrix4 createScaleMatrix(double x, double y, double z)", "class_method_signature": "Matrix4.createScaleMatrix(double x, double y, double z)", "testcase": false, "constructor": false}, {"identifier": "getFloatValues", "parameters": "()", "modifiers": "@NonNull @Size(16) public", "return": "float[]", "signature": "float[] getFloatValues()", "full_signature": "@NonNull @Size(16) public float[] getFloatValues()", "class_method_signature": "Matrix4.getFloatValues()", "testcase": false, "constructor": false}, {"identifier": "getDoubleValues", "parameters": "()", "modifiers": "@NonNull @Size(16) public", "return": "double[]", "signature": "double[] getDoubleValues()", "full_signature": "@NonNull @Size(16) public double[] getDoubleValues()", "class_method_signature": "Matrix4.getDoubleValues()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@NonNull @Override public", "return": "Matrix4", "signature": "Matrix4 clone()", "full_signature": "@NonNull @Override public Matrix4 clone()", "class_method_signature": "Matrix4.clone()", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "(@NonNull @Size(min = 16) double[] doubleArray)", "modifiers": "public", "return": "void", "signature": "void toArray(@NonNull @Size(min = 16) double[] doubleArray)", "full_signature": "public void toArray(@NonNull @Size(min = 16) double[] doubleArray)", "class_method_signature": "Matrix4.toArray(@NonNull @Size(min = 16) double[] doubleArray)", "testcase": false, "constructor": false}, {"identifier": "toFloatArray", "parameters": "(@NonNull @Size(min = 16) float[] floatArray)", "modifiers": "public", "return": "void", "signature": "void toFloatArray(@NonNull @Size(min = 16) float[] floatArray)", "full_signature": "public void toFloatArray(@NonNull @Size(min = 16) float[] floatArray)", "class_method_signature": "Matrix4.toFloatArray(@NonNull @Size(min = 16) float[] floatArray)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Matrix4.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Matrix4.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@NonNull @Override public", "return": "String", "signature": "String toString()", "full_signature": "@NonNull @Override public String toString()", "class_method_signature": "Matrix4.toString()", "testcase": false, "constructor": false}], "file": "rajawali/src/main/java/org/rajawali3d/math/Matrix4.java"}, "focal_method": {"identifier": "toArray", "parameters": "(@NonNull @Size(min = 16) double[] doubleArray)", "modifiers": "public", "return": "void", "body": "public void toArray(@NonNull @Size(min = 16) double[] doubleArray) {\n        System.arraycopy(m, 0, doubleArray, 0, 16);\n    }", "signature": "void toArray(@NonNull @Size(min = 16) double[] doubleArray)", "full_signature": "public void toArray(@NonNull @Size(min = 16) double[] doubleArray)", "class_method_signature": "Matrix4.toArray(@NonNull @Size(min = 16) double[] doubleArray)", "testcase": false, "constructor": false, "invocations": ["arraycopy"]}, "repository": {"repo_id": 2011647, "url": "https://github.com/Rajawali/Rajawali", "language": "Java", "is_fork": false, "fork_count": 666, "stargazer_count": 1984, "size": 83746, "license": "licensed"}}