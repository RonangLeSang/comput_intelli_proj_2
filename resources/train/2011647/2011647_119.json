{"test_class": {"identifier": "Geometry3Dtest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Geometry3D geometry;", "modifier": "private", "type": "Geometry3D", "declarator": "geometry", "var_name": "geometry"}], "file": "rajawali/src/test/java/org/rajawali3d/Geometry3Dtest.java"}, "test_case": {"identifier": "testGetNumTriangles", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetNumTriangles() {\n        assertEquals(0, geometry.getNumTriangles());\n    }", "signature": "void testGetNumTriangles()", "full_signature": "@Test public void testGetNumTriangles()", "class_method_signature": "Geometry3Dtest.testGetNumTriangles()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getNumTriangles"]}, "focal_class": {"identifier": "Geometry3D", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int FLOAT_SIZE_BYTES = 4;", "modifier": "public static final", "type": "int", "declarator": "FLOAT_SIZE_BYTES = 4", "var_name": "FLOAT_SIZE_BYTES"}, {"original_string": "public static final int INT_SIZE_BYTES   = 4;", "modifier": "public static final", "type": "int", "declarator": "INT_SIZE_BYTES   = 4", "var_name": "INT_SIZE_BYTES"}, {"original_string": "public static final int SHORT_SIZE_BYTES = 2;", "modifier": "public static final", "type": "int", "declarator": "SHORT_SIZE_BYTES = 2", "var_name": "SHORT_SIZE_BYTES"}, {"original_string": "public static final int BYTE_SIZE_BYTES  = 1;", "modifier": "public static final", "type": "int", "declarator": "BYTE_SIZE_BYTES  = 1", "var_name": "BYTE_SIZE_BYTES"}, {"original_string": "public static final int VERTEX_BUFFER_KEY  = 0;", "modifier": "public static final", "type": "int", "declarator": "VERTEX_BUFFER_KEY  = 0", "var_name": "VERTEX_BUFFER_KEY"}, {"original_string": "public static final int NORMAL_BUFFER_KEY  = 1;", "modifier": "public static final", "type": "int", "declarator": "NORMAL_BUFFER_KEY  = 1", "var_name": "NORMAL_BUFFER_KEY"}, {"original_string": "public static final int TEXTURE_BUFFER_KEY = 2;", "modifier": "public static final", "type": "int", "declarator": "TEXTURE_BUFFER_KEY = 2", "var_name": "TEXTURE_BUFFER_KEY"}, {"original_string": "public static final int COLOR_BUFFER_KEY   = 3;", "modifier": "public static final", "type": "int", "declarator": "COLOR_BUFFER_KEY   = 3", "var_name": "COLOR_BUFFER_KEY"}, {"original_string": "public static final int INDEX_BUFFER_KEY   = 4;", "modifier": "public static final", "type": "int", "declarator": "INDEX_BUFFER_KEY   = 4", "var_name": "INDEX_BUFFER_KEY"}, {"original_string": "protected final ArrayList<BufferInfo> mBuffers;", "modifier": "protected final", "type": "ArrayList<BufferInfo>", "declarator": "mBuffers", "var_name": "mBuffers"}, {"original_string": "protected int        mNumIndices;", "modifier": "protected", "type": "int", "declarator": "mNumIndices", "var_name": "mNumIndices"}, {"original_string": "protected int        mNumVertices;", "modifier": "protected", "type": "int", "declarator": "mNumVertices", "var_name": "mNumVertices"}, {"original_string": "protected Geometry3D mOriginalGeometry;", "modifier": "protected", "type": "Geometry3D", "declarator": "mOriginalGeometry", "var_name": "mOriginalGeometry"}, {"original_string": "protected boolean mHaveCreatedBuffers;", "modifier": "protected", "type": "boolean", "declarator": "mHaveCreatedBuffers", "var_name": "mHaveCreatedBuffers"}, {"original_string": "protected BoundingBox    mBoundingBox;", "modifier": "protected", "type": "BoundingBox", "declarator": "mBoundingBox", "var_name": "mBoundingBox"}, {"original_string": "protected BoundingSphere mBoundingSphere;", "modifier": "protected", "type": "BoundingSphere", "declarator": "mBoundingSphere", "var_name": "mBoundingSphere"}, {"original_string": "protected boolean        mHasNormals;", "modifier": "protected", "type": "boolean", "declarator": "mHasNormals", "var_name": "mHasNormals"}, {"original_string": "protected boolean        mHasTextureCoordinates;", "modifier": "protected", "type": "boolean", "declarator": "mHasTextureCoordinates", "var_name": "mHasTextureCoordinates"}], "methods": [{"identifier": "Geometry3D", "parameters": "()", "modifiers": "public", "return": "", "signature": " Geometry3D()", "full_signature": "public  Geometry3D()", "class_method_signature": "Geometry3D.Geometry3D()", "testcase": false, "constructor": true}, {"identifier": "concatAllFloat", "parameters": "(float[]... arrays)", "modifiers": "public static", "return": "float[]", "signature": "float[] concatAllFloat(float[]... arrays)", "full_signature": "public static float[] concatAllFloat(float[]... arrays)", "class_method_signature": "Geometry3D.concatAllFloat(float[]... arrays)", "testcase": false, "constructor": false}, {"identifier": "concatAllInt", "parameters": "(int[]... arrays)", "modifiers": "public static", "return": "int[]", "signature": "int[] concatAllInt(int[]... arrays)", "full_signature": "public static int[] concatAllInt(int[]... arrays)", "class_method_signature": "Geometry3D.concatAllInt(int[]... arrays)", "testcase": false, "constructor": false}, {"identifier": "getFloatArrayFromBuffer", "parameters": "(FloatBuffer buffer)", "modifiers": "public static", "return": "float[]", "signature": "float[] getFloatArrayFromBuffer(FloatBuffer buffer)", "full_signature": "public static float[] getFloatArrayFromBuffer(FloatBuffer buffer)", "class_method_signature": "Geometry3D.getFloatArrayFromBuffer(FloatBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "getIntArrayFromBuffer", "parameters": "(Buffer buffer)", "modifiers": "public static", "return": "int[]", "signature": "int[] getIntArrayFromBuffer(Buffer buffer)", "full_signature": "public static int[] getIntArrayFromBuffer(Buffer buffer)", "class_method_signature": "Geometry3D.getIntArrayFromBuffer(Buffer buffer)", "testcase": false, "constructor": false}, {"identifier": "copyFromGeometry3D", "parameters": "(Geometry3D geom)", "modifiers": "public", "return": "void", "signature": "void copyFromGeometry3D(Geometry3D geom)", "full_signature": "public void copyFromGeometry3D(Geometry3D geom)", "class_method_signature": "Geometry3D.copyFromGeometry3D(Geometry3D geom)", "testcase": false, "constructor": false}, {"identifier": "addFromGeometry3D", "parameters": "(Vector3 offset, Geometry3D geometry, boolean createVBOs)", "modifiers": "public", "return": "void", "signature": "void addFromGeometry3D(Vector3 offset, Geometry3D geometry, boolean createVBOs)", "full_signature": "public void addFromGeometry3D(Vector3 offset, Geometry3D geometry, boolean createVBOs)", "class_method_signature": "Geometry3D.addFromGeometry3D(Vector3 offset, Geometry3D geometry, boolean createVBOs)", "testcase": false, "constructor": false}, {"identifier": "setData", "parameters": "(BufferInfo vertexBufferInfo, BufferInfo normalBufferInfo,\n                        float[] textureCoords, float[] colors, int[] indices, boolean createVBOs)", "modifiers": "public", "return": "void", "signature": "void setData(BufferInfo vertexBufferInfo, BufferInfo normalBufferInfo,\n                        float[] textureCoords, float[] colors, int[] indices, boolean createVBOs)", "full_signature": "public void setData(BufferInfo vertexBufferInfo, BufferInfo normalBufferInfo,\n                        float[] textureCoords, float[] colors, int[] indices, boolean createVBOs)", "class_method_signature": "Geometry3D.setData(BufferInfo vertexBufferInfo, BufferInfo normalBufferInfo,\n                        float[] textureCoords, float[] colors, int[] indices, boolean createVBOs)", "testcase": false, "constructor": false}, {"identifier": "setData", "parameters": "(float[] vertices, float[] normals,\n                        float[] textureCoords, float[] colors, int[] indices, boolean createVBOs)", "modifiers": "public", "return": "void", "signature": "void setData(float[] vertices, float[] normals,\n                        float[] textureCoords, float[] colors, int[] indices, boolean createVBOs)", "full_signature": "public void setData(float[] vertices, float[] normals,\n                        float[] textureCoords, float[] colors, int[] indices, boolean createVBOs)", "class_method_signature": "Geometry3D.setData(float[] vertices, float[] normals,\n                        float[] textureCoords, float[] colors, int[] indices, boolean createVBOs)", "testcase": false, "constructor": false}, {"identifier": "setData", "parameters": "(float[] vertices, int verticesUsage, float[] normals, int normalsUsage,\n                        float[] textureCoords, int textureCoordsUsage, float[] colors, int colorsUsage,\n                        int[] indices, int indicesUsage, boolean createVBOs)", "modifiers": "public", "return": "void", "signature": "void setData(float[] vertices, int verticesUsage, float[] normals, int normalsUsage,\n                        float[] textureCoords, int textureCoordsUsage, float[] colors, int colorsUsage,\n                        int[] indices, int indicesUsage, boolean createVBOs)", "full_signature": "public void setData(float[] vertices, int verticesUsage, float[] normals, int normalsUsage,\n                        float[] textureCoords, int textureCoordsUsage, float[] colors, int colorsUsage,\n                        int[] indices, int indicesUsage, boolean createVBOs)", "class_method_signature": "Geometry3D.setData(float[] vertices, int verticesUsage, float[] normals, int normalsUsage,\n                        float[] textureCoords, int textureCoordsUsage, float[] colors, int colorsUsage,\n                        int[] indices, int indicesUsage, boolean createVBOs)", "testcase": false, "constructor": false}, {"identifier": "createBuffers", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void createBuffers()", "full_signature": "public void createBuffers()", "class_method_signature": "Geometry3D.createBuffers()", "testcase": false, "constructor": false}, {"identifier": "reload", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reload()", "full_signature": "public void reload()", "class_method_signature": "Geometry3D.reload()", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isValid()", "full_signature": "public boolean isValid()", "class_method_signature": "Geometry3D.isValid()", "testcase": false, "constructor": false}, {"identifier": "createVertexAndNormalBuffersOnly", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void createVertexAndNormalBuffersOnly()", "full_signature": "public void createVertexAndNormalBuffersOnly()", "class_method_signature": "Geometry3D.createVertexAndNormalBuffersOnly()", "testcase": false, "constructor": false}, {"identifier": "createBuffer", "parameters": "(BufferInfo bufferInfo, BufferType type, int target)", "modifiers": "public", "return": "void", "signature": "void createBuffer(BufferInfo bufferInfo, BufferType type, int target)", "full_signature": "public void createBuffer(BufferInfo bufferInfo, BufferType type, int target)", "class_method_signature": "Geometry3D.createBuffer(BufferInfo bufferInfo, BufferType type, int target)", "testcase": false, "constructor": false}, {"identifier": "createBuffer", "parameters": "(BufferInfo bufferInfo, BufferType type, int target, int usage)", "modifiers": "public", "return": "void", "signature": "void createBuffer(BufferInfo bufferInfo, BufferType type, int target, int usage)", "full_signature": "public void createBuffer(BufferInfo bufferInfo, BufferType type, int target, int usage)", "class_method_signature": "Geometry3D.createBuffer(BufferInfo bufferInfo, BufferType type, int target, int usage)", "testcase": false, "constructor": false}, {"identifier": "createBuffer", "parameters": "(BufferInfo bufferInfo)", "modifiers": "public", "return": "void", "signature": "void createBuffer(BufferInfo bufferInfo)", "full_signature": "public void createBuffer(BufferInfo bufferInfo)", "class_method_signature": "Geometry3D.createBuffer(BufferInfo bufferInfo)", "testcase": false, "constructor": false}, {"identifier": "addBuffer", "parameters": "(BufferInfo bufferInfo, BufferType type, int target, int usage)", "modifiers": "public", "return": "int", "signature": "int addBuffer(BufferInfo bufferInfo, BufferType type, int target, int usage)", "full_signature": "public int addBuffer(BufferInfo bufferInfo, BufferType type, int target, int usage)", "class_method_signature": "Geometry3D.addBuffer(BufferInfo bufferInfo, BufferType type, int target, int usage)", "testcase": false, "constructor": false}, {"identifier": "addBuffer", "parameters": "(BufferInfo bufferInfo, BufferType type, int target)", "modifiers": "public", "return": "int", "signature": "int addBuffer(BufferInfo bufferInfo, BufferType type, int target)", "full_signature": "public int addBuffer(BufferInfo bufferInfo, BufferType type, int target)", "class_method_signature": "Geometry3D.addBuffer(BufferInfo bufferInfo, BufferType type, int target)", "testcase": false, "constructor": false}, {"identifier": "validateBuffers", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void validateBuffers()", "full_signature": "public void validateBuffers()", "class_method_signature": "Geometry3D.validateBuffers()", "testcase": false, "constructor": false}, {"identifier": "changeBufferUsage", "parameters": "(BufferInfo bufferInfo, final int usage)", "modifiers": "public", "return": "void", "signature": "void changeBufferUsage(BufferInfo bufferInfo, final int usage)", "full_signature": "public void changeBufferUsage(BufferInfo bufferInfo, final int usage)", "class_method_signature": "Geometry3D.changeBufferUsage(BufferInfo bufferInfo, final int usage)", "testcase": false, "constructor": false}, {"identifier": "changeBufferData", "parameters": "(BufferInfo bufferInfo, Buffer newData, int index)", "modifiers": "public", "return": "void", "signature": "void changeBufferData(BufferInfo bufferInfo, Buffer newData, int index)", "full_signature": "public void changeBufferData(BufferInfo bufferInfo, Buffer newData, int index)", "class_method_signature": "Geometry3D.changeBufferData(BufferInfo bufferInfo, Buffer newData, int index)", "testcase": false, "constructor": false}, {"identifier": "changeBufferData", "parameters": "(BufferInfo bufferInfo, Buffer newData, int index, int size)", "modifiers": "public", "return": "void", "signature": "void changeBufferData(BufferInfo bufferInfo, Buffer newData, int index, int size)", "full_signature": "public void changeBufferData(BufferInfo bufferInfo, Buffer newData, int index, int size)", "class_method_signature": "Geometry3D.changeBufferData(BufferInfo bufferInfo, Buffer newData, int index, int size)", "testcase": false, "constructor": false}, {"identifier": "changeBufferData", "parameters": "(BufferInfo bufferInfo, Buffer newData, int index, boolean resizeBuffer)", "modifiers": "public", "return": "void", "signature": "void changeBufferData(BufferInfo bufferInfo, Buffer newData, int index, boolean resizeBuffer)", "full_signature": "public void changeBufferData(BufferInfo bufferInfo, Buffer newData, int index, boolean resizeBuffer)", "class_method_signature": "Geometry3D.changeBufferData(BufferInfo bufferInfo, Buffer newData, int index, boolean resizeBuffer)", "testcase": false, "constructor": false}, {"identifier": "changeBufferData", "parameters": "(BufferInfo bufferInfo, Buffer newData, int index, int size, boolean resizeBuffer)", "modifiers": "public", "return": "void", "signature": "void changeBufferData(BufferInfo bufferInfo, Buffer newData, int index, int size, boolean resizeBuffer)", "full_signature": "public void changeBufferData(BufferInfo bufferInfo, Buffer newData, int index, int size, boolean resizeBuffer)", "class_method_signature": "Geometry3D.changeBufferData(BufferInfo bufferInfo, Buffer newData, int index, int size, boolean resizeBuffer)", "testcase": false, "constructor": false}, {"identifier": "setVertices", "parameters": "(float[] vertices)", "modifiers": "public", "return": "void", "signature": "void setVertices(float[] vertices)", "full_signature": "public void setVertices(float[] vertices)", "class_method_signature": "Geometry3D.setVertices(float[] vertices)", "testcase": false, "constructor": false}, {"identifier": "setVertices", "parameters": "(float[] vertices, boolean override)", "modifiers": "public", "return": "void", "signature": "void setVertices(float[] vertices, boolean override)", "full_signature": "public void setVertices(float[] vertices, boolean override)", "class_method_signature": "Geometry3D.setVertices(float[] vertices, boolean override)", "testcase": false, "constructor": false}, {"identifier": "setVertices", "parameters": "(FloatBuffer vertices)", "modifiers": "public", "return": "void", "signature": "void setVertices(FloatBuffer vertices)", "full_signature": "public void setVertices(FloatBuffer vertices)", "class_method_signature": "Geometry3D.setVertices(FloatBuffer vertices)", "testcase": false, "constructor": false}, {"identifier": "getVertices", "parameters": "()", "modifiers": "public", "return": "FloatBuffer", "signature": "FloatBuffer getVertices()", "full_signature": "public FloatBuffer getVertices()", "class_method_signature": "Geometry3D.getVertices()", "testcase": false, "constructor": false}, {"identifier": "setNormals", "parameters": "(float[] normals)", "modifiers": "public", "return": "void", "signature": "void setNormals(float[] normals)", "full_signature": "public void setNormals(float[] normals)", "class_method_signature": "Geometry3D.setNormals(float[] normals)", "testcase": false, "constructor": false}, {"identifier": "setNormals", "parameters": "(float[] normals, boolean override)", "modifiers": "public", "return": "void", "signature": "void setNormals(float[] normals, boolean override)", "full_signature": "public void setNormals(float[] normals, boolean override)", "class_method_signature": "Geometry3D.setNormals(float[] normals, boolean override)", "testcase": false, "constructor": false}, {"identifier": "setNormals", "parameters": "(FloatBuffer normals)", "modifiers": "public", "return": "void", "signature": "void setNormals(FloatBuffer normals)", "full_signature": "public void setNormals(FloatBuffer normals)", "class_method_signature": "Geometry3D.setNormals(FloatBuffer normals)", "testcase": false, "constructor": false}, {"identifier": "getNormals", "parameters": "()", "modifiers": "public", "return": "FloatBuffer", "signature": "FloatBuffer getNormals()", "full_signature": "public FloatBuffer getNormals()", "class_method_signature": "Geometry3D.getNormals()", "testcase": false, "constructor": false}, {"identifier": "hasNormals", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasNormals()", "full_signature": "public boolean hasNormals()", "class_method_signature": "Geometry3D.hasNormals()", "testcase": false, "constructor": false}, {"identifier": "setIndices", "parameters": "(int[] indices)", "modifiers": "public", "return": "void", "signature": "void setIndices(int[] indices)", "full_signature": "public void setIndices(int[] indices)", "class_method_signature": "Geometry3D.setIndices(int[] indices)", "testcase": false, "constructor": false}, {"identifier": "setIndices", "parameters": "(int[] indices, boolean override)", "modifiers": "public", "return": "void", "signature": "void setIndices(int[] indices, boolean override)", "full_signature": "public void setIndices(int[] indices, boolean override)", "class_method_signature": "Geometry3D.setIndices(int[] indices, boolean override)", "testcase": false, "constructor": false}, {"identifier": "getIndices", "parameters": "()", "modifiers": "public", "return": "IntBuffer", "signature": "IntBuffer getIndices()", "full_signature": "public IntBuffer getIndices()", "class_method_signature": "Geometry3D.getIndices()", "testcase": false, "constructor": false}, {"identifier": "setTextureCoords", "parameters": "(float[] textureCoords)", "modifiers": "public", "return": "void", "signature": "void setTextureCoords(float[] textureCoords)", "full_signature": "public void setTextureCoords(float[] textureCoords)", "class_method_signature": "Geometry3D.setTextureCoords(float[] textureCoords)", "testcase": false, "constructor": false}, {"identifier": "setTextureCoords", "parameters": "(float[] textureCoords, boolean override)", "modifiers": "public", "return": "void", "signature": "void setTextureCoords(float[] textureCoords, boolean override)", "full_signature": "public void setTextureCoords(float[] textureCoords, boolean override)", "class_method_signature": "Geometry3D.setTextureCoords(float[] textureCoords, boolean override)", "testcase": false, "constructor": false}, {"identifier": "getTextureCoords", "parameters": "()", "modifiers": "public", "return": "FloatBuffer", "signature": "FloatBuffer getTextureCoords()", "full_signature": "public FloatBuffer getTextureCoords()", "class_method_signature": "Geometry3D.getTextureCoords()", "testcase": false, "constructor": false}, {"identifier": "hasTextureCoordinates", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasTextureCoordinates()", "full_signature": "public boolean hasTextureCoordinates()", "class_method_signature": "Geometry3D.hasTextureCoordinates()", "testcase": false, "constructor": false}, {"identifier": "setColors", "parameters": "(int color)", "modifiers": "public", "return": "void", "signature": "void setColors(int color)", "full_signature": "public void setColors(int color)", "class_method_signature": "Geometry3D.setColors(int color)", "testcase": false, "constructor": false}, {"identifier": "setColors", "parameters": "(float[] colors)", "modifiers": "public", "return": "void", "signature": "void setColors(float[] colors)", "full_signature": "public void setColors(float[] colors)", "class_method_signature": "Geometry3D.setColors(float[] colors)", "testcase": false, "constructor": false}, {"identifier": "setColors", "parameters": "(float[] colors, boolean override)", "modifiers": "public", "return": "void", "signature": "void setColors(float[] colors, boolean override)", "full_signature": "public void setColors(float[] colors, boolean override)", "class_method_signature": "Geometry3D.setColors(float[] colors, boolean override)", "testcase": false, "constructor": false}, {"identifier": "getColors", "parameters": "()", "modifiers": "public", "return": "FloatBuffer", "signature": "FloatBuffer getColors()", "full_signature": "public FloatBuffer getColors()", "class_method_signature": "Geometry3D.getColors()", "testcase": false, "constructor": false}, {"identifier": "getNumIndices", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumIndices()", "full_signature": "public int getNumIndices()", "class_method_signature": "Geometry3D.getNumIndices()", "testcase": false, "constructor": false}, {"identifier": "getNumVertices", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumVertices()", "full_signature": "public int getNumVertices()", "class_method_signature": "Geometry3D.getNumVertices()", "testcase": false, "constructor": false}, {"identifier": "setNumVertices", "parameters": "(int numVertices)", "modifiers": "public", "return": "void", "signature": "void setNumVertices(int numVertices)", "full_signature": "public void setNumVertices(int numVertices)", "class_method_signature": "Geometry3D.setNumVertices(int numVertices)", "testcase": false, "constructor": false}, {"identifier": "setColor", "parameters": "(float r, float g, float b, float a)", "modifiers": "public", "return": "void", "signature": "void setColor(float r, float g, float b, float a)", "full_signature": "public void setColor(float r, float g, float b, float a)", "class_method_signature": "Geometry3D.setColor(float r, float g, float b, float a)", "testcase": false, "constructor": false}, {"identifier": "setColor", "parameters": "(float r, float g, float b, float a, boolean createNewBuffer)", "modifiers": "public", "return": "void", "signature": "void setColor(float r, float g, float b, float a, boolean createNewBuffer)", "full_signature": "public void setColor(float r, float g, float b, float a, boolean createNewBuffer)", "class_method_signature": "Geometry3D.setColor(float r, float g, float b, float a, boolean createNewBuffer)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "Geometry3D.toString()", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void destroy()", "full_signature": "public void destroy()", "class_method_signature": "Geometry3D.destroy()", "testcase": false, "constructor": false}, {"identifier": "hasBoundingBox", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasBoundingBox()", "full_signature": "public boolean hasBoundingBox()", "class_method_signature": "Geometry3D.hasBoundingBox()", "testcase": false, "constructor": false}, {"identifier": "getBoundingBox", "parameters": "()", "modifiers": "public", "return": "BoundingBox", "signature": "BoundingBox getBoundingBox()", "full_signature": "public BoundingBox getBoundingBox()", "class_method_signature": "Geometry3D.getBoundingBox()", "testcase": false, "constructor": false}, {"identifier": "hasBoundingSphere", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasBoundingSphere()", "full_signature": "public boolean hasBoundingSphere()", "class_method_signature": "Geometry3D.hasBoundingSphere()", "testcase": false, "constructor": false}, {"identifier": "getBoundingSphere", "parameters": "()", "modifiers": "public", "return": "BoundingSphere", "signature": "BoundingSphere getBoundingSphere()", "full_signature": "public BoundingSphere getBoundingSphere()", "class_method_signature": "Geometry3D.getBoundingSphere()", "testcase": false, "constructor": false}, {"identifier": "getVertexBufferInfo", "parameters": "()", "modifiers": "public", "return": "BufferInfo", "signature": "BufferInfo getVertexBufferInfo()", "full_signature": "public BufferInfo getVertexBufferInfo()", "class_method_signature": "Geometry3D.getVertexBufferInfo()", "testcase": false, "constructor": false}, {"identifier": "setVertexBufferInfo", "parameters": "(BufferInfo vertexBufferInfo)", "modifiers": "public", "return": "void", "signature": "void setVertexBufferInfo(BufferInfo vertexBufferInfo)", "full_signature": "public void setVertexBufferInfo(BufferInfo vertexBufferInfo)", "class_method_signature": "Geometry3D.setVertexBufferInfo(BufferInfo vertexBufferInfo)", "testcase": false, "constructor": false}, {"identifier": "getIndexBufferInfo", "parameters": "()", "modifiers": "public", "return": "BufferInfo", "signature": "BufferInfo getIndexBufferInfo()", "full_signature": "public BufferInfo getIndexBufferInfo()", "class_method_signature": "Geometry3D.getIndexBufferInfo()", "testcase": false, "constructor": false}, {"identifier": "setIndexBufferInfo", "parameters": "(BufferInfo indexBufferInfo)", "modifiers": "public", "return": "void", "signature": "void setIndexBufferInfo(BufferInfo indexBufferInfo)", "full_signature": "public void setIndexBufferInfo(BufferInfo indexBufferInfo)", "class_method_signature": "Geometry3D.setIndexBufferInfo(BufferInfo indexBufferInfo)", "testcase": false, "constructor": false}, {"identifier": "getTexCoordBufferInfo", "parameters": "()", "modifiers": "public", "return": "BufferInfo", "signature": "BufferInfo getTexCoordBufferInfo()", "full_signature": "public BufferInfo getTexCoordBufferInfo()", "class_method_signature": "Geometry3D.getTexCoordBufferInfo()", "testcase": false, "constructor": false}, {"identifier": "setTexCoordBufferInfo", "parameters": "(BufferInfo texCoordBufferInfo)", "modifiers": "public", "return": "void", "signature": "void setTexCoordBufferInfo(BufferInfo texCoordBufferInfo)", "full_signature": "public void setTexCoordBufferInfo(BufferInfo texCoordBufferInfo)", "class_method_signature": "Geometry3D.setTexCoordBufferInfo(BufferInfo texCoordBufferInfo)", "testcase": false, "constructor": false}, {"identifier": "getColorBufferInfo", "parameters": "()", "modifiers": "public", "return": "BufferInfo", "signature": "BufferInfo getColorBufferInfo()", "full_signature": "public BufferInfo getColorBufferInfo()", "class_method_signature": "Geometry3D.getColorBufferInfo()", "testcase": false, "constructor": false}, {"identifier": "setColorBufferInfo", "parameters": "(BufferInfo colorBufferInfo)", "modifiers": "public", "return": "void", "signature": "void setColorBufferInfo(BufferInfo colorBufferInfo)", "full_signature": "public void setColorBufferInfo(BufferInfo colorBufferInfo)", "class_method_signature": "Geometry3D.setColorBufferInfo(BufferInfo colorBufferInfo)", "testcase": false, "constructor": false}, {"identifier": "getNormalBufferInfo", "parameters": "()", "modifiers": "public", "return": "BufferInfo", "signature": "BufferInfo getNormalBufferInfo()", "full_signature": "public BufferInfo getNormalBufferInfo()", "class_method_signature": "Geometry3D.getNormalBufferInfo()", "testcase": false, "constructor": false}, {"identifier": "setNormalBufferInfo", "parameters": "(BufferInfo normalBufferInfo)", "modifiers": "public", "return": "void", "signature": "void setNormalBufferInfo(BufferInfo normalBufferInfo)", "full_signature": "public void setNormalBufferInfo(BufferInfo normalBufferInfo)", "class_method_signature": "Geometry3D.setNormalBufferInfo(BufferInfo normalBufferInfo)", "testcase": false, "constructor": false}, {"identifier": "getNumTriangles", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumTriangles()", "full_signature": "public int getNumTriangles()", "class_method_signature": "Geometry3D.getNumTriangles()", "testcase": false, "constructor": false}, {"identifier": "setBuffersCreated", "parameters": "(boolean created)", "modifiers": "public", "return": "void", "signature": "void setBuffersCreated(boolean created)", "full_signature": "public void setBuffersCreated(boolean created)", "class_method_signature": "Geometry3D.setBuffersCreated(boolean created)", "testcase": false, "constructor": false}, {"identifier": "setBoundingBox", "parameters": "(BoundingBox boundingBox)", "modifiers": "", "return": "void", "signature": "void setBoundingBox(BoundingBox boundingBox)", "full_signature": " void setBoundingBox(BoundingBox boundingBox)", "class_method_signature": "Geometry3D.setBoundingBox(BoundingBox boundingBox)", "testcase": false, "constructor": false}], "file": "rajawali/src/main/java/org/rajawali3d/Geometry3D.java"}, "focal_method": {"identifier": "getNumTriangles", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int getNumTriangles() {\n        final Buffer vertBuffer = mBuffers.get(VERTEX_BUFFER_KEY).buffer;\n        return vertBuffer != null ? vertBuffer.limit() / 9 : 0;\n    }", "signature": "int getNumTriangles()", "full_signature": "public int getNumTriangles()", "class_method_signature": "Geometry3D.getNumTriangles()", "testcase": false, "constructor": false, "invocations": ["get", "limit"]}, "repository": {"repo_id": 2011647, "url": "https://github.com/Rajawali/Rajawali", "language": "Java", "is_fork": false, "fork_count": 666, "stargazer_count": 1984, "size": 83746, "license": "licensed"}}