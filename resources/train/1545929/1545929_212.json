{"test_class": {"identifier": "WindGateHadoopGetTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@ClassRule\n    public static final WindowsSupport WINDOWS_SUPPORT = new WindowsSupport();", "modifier": "@ClassRule\n    public static final", "type": "WindowsSupport", "declarator": "WINDOWS_SUPPORT = new WindowsSupport()", "var_name": "WINDOWS_SUPPORT"}, {"original_string": "@Rule\n    public final RuntimeContextKeeper rc = new RuntimeContextKeeper();", "modifier": "@Rule\n    public final", "type": "RuntimeContextKeeper", "declarator": "rc = new RuntimeContextKeeper()", "var_name": "rc"}, {"original_string": "private static final Path PREFIX = new Path(\"target/testing/windgate\");", "modifier": "private static final", "type": "Path", "declarator": "PREFIX = new Path(\"target/testing/windgate\")", "var_name": "PREFIX"}, {"original_string": "private Configuration conf;", "modifier": "private", "type": "Configuration", "declarator": "conf", "var_name": "conf"}, {"original_string": "private FileSystem fs;", "modifier": "private", "type": "FileSystem", "declarator": "fs", "var_name": "fs"}, {"original_string": "private PrintStream stdout;", "modifier": "private", "type": "PrintStream", "declarator": "stdout", "var_name": "stdout"}], "file": "windgate-project/asakusa-windgate-hadoopfs/src/test/java/com/asakusafw/windgate/hadoopfs/ssh/WindGateHadoopGetTest.java"}, "test_case": {"identifier": "missing_sim", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void missing_sim() throws Exception {\n        RuntimeContext.set(RuntimeContext.DEFAULT.mode(ExecutionMode.SIMULATION));\n\n        Path testing = new Path(PREFIX, \"testing\");\n\n        ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n        int result = new WindGateHadoopGet(conf).execute(buffer, testing.toString());\n        assertThat(result, is(0));\n    }", "signature": "void missing_sim()", "full_signature": "@Test public void missing_sim()", "class_method_signature": "WindGateHadoopGetTest.missing_sim()", "testcase": true, "constructor": false, "invocations": ["set", "mode", "execute", "toString", "assertThat", "is"]}, "focal_class": {"identifier": "WindGateHadoopGet", "superclass": "extends WindGateHadoopBase", "interfaces": "", "fields": [{"original_string": "static final WindGateLogger WGLOG = new HadoopFsLogger(WindGateHadoopGet.class);", "modifier": "static final", "type": "WindGateLogger", "declarator": "WGLOG = new HadoopFsLogger(WindGateHadoopGet.class)", "var_name": "WGLOG"}, {"original_string": "static final Logger LOG = LoggerFactory.getLogger(WindGateHadoopGet.class);", "modifier": "static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(WindGateHadoopGet.class)", "var_name": "LOG"}, {"original_string": "static final int BUFFER_SIZE = 1024 * 1024;", "modifier": "static final", "type": "int", "declarator": "BUFFER_SIZE = 1024 * 1024", "var_name": "BUFFER_SIZE"}, {"original_string": "final Configuration conf;", "modifier": "final", "type": "Configuration", "declarator": "conf", "var_name": "conf"}], "methods": [{"identifier": "WindGateHadoopGet", "parameters": "(Configuration conf)", "modifiers": "public", "return": "", "signature": " WindGateHadoopGet(Configuration conf)", "full_signature": "public  WindGateHadoopGet(Configuration conf)", "class_method_signature": "WindGateHadoopGet.WindGateHadoopGet(Configuration conf)", "testcase": false, "constructor": true}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "WindGateHadoopGet.main(String[] args)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(OutputStream out, String... args)", "modifiers": "", "return": "int", "signature": "int execute(OutputStream out, String... args)", "full_signature": " int execute(OutputStream out, String... args)", "class_method_signature": "WindGateHadoopGet.execute(OutputStream out, String... args)", "testcase": false, "constructor": false}, {"identifier": "doGet", "parameters": "(List<Path> paths, FileList.Writer drain)", "modifiers": "", "return": "void", "signature": "void doGet(List<Path> paths, FileList.Writer drain)", "full_signature": " void doGet(List<Path> paths, FileList.Writer drain)", "class_method_signature": "WindGateHadoopGet.doGet(List<Path> paths, FileList.Writer drain)", "testcase": false, "constructor": false}, {"identifier": "fetch", "parameters": "(FileSystem fs, List<Path> paths, BlockingQueue<Pair> queue)", "modifiers": "", "return": "void", "signature": "void fetch(FileSystem fs, List<Path> paths, BlockingQueue<Pair> queue)", "full_signature": " void fetch(FileSystem fs, List<Path> paths, BlockingQueue<Pair> queue)", "class_method_signature": "WindGateHadoopGet.fetch(FileSystem fs, List<Path> paths, BlockingQueue<Pair> queue)", "testcase": false, "constructor": false}, {"identifier": "getInput", "parameters": "(FileSystem fs, FileStatus status)", "modifiers": "private", "return": "InputStream", "signature": "InputStream getInput(FileSystem fs, FileStatus status)", "full_signature": "private InputStream getInput(FileSystem fs, FileStatus status)", "class_method_signature": "WindGateHadoopGet.getInput(FileSystem fs, FileStatus status)", "testcase": false, "constructor": false}, {"identifier": "transfer", "parameters": "(FileSystem fs, FileStatus status, InputStream input, Writer drain)", "modifiers": "private", "return": "void", "signature": "void transfer(FileSystem fs, FileStatus status, InputStream input, Writer drain)", "full_signature": "private void transfer(FileSystem fs, FileStatus status, InputStream input, Writer drain)", "class_method_signature": "WindGateHadoopGet.transfer(FileSystem fs, FileStatus status, InputStream input, Writer drain)", "testcase": false, "constructor": false}], "file": "windgate-project/asakusa-windgate-hadoopfs/src/main/java/com/asakusafw/windgate/hadoopfs/ssh/WindGateHadoopGet.java"}, "focal_method": {"identifier": "execute", "parameters": "(OutputStream out, String... args)", "modifiers": "", "return": "int", "body": "int execute(OutputStream out, String... args) {\n        assert args != null;\n        if (args.length == 0) {\n            WGLOG.error(\"E20001\",\n                    Arrays.toString(args));\n            System.err.printf(\"usage: java -classpath ... %s file1 [file2 ...]%n\",\n                    WindGateHadoopGet.class.getName());\n            return 1;\n        }\n        List<Path> paths = new ArrayList<>();\n        for (String arg : args) {\n            paths.add(new Path(arg));\n        }\n        WGLOG.info(\"I20001\",\n                paths);\n        try (FileList.Writer writer = FileList.createWriter(new BufferedOutputStream(out, BUFFER_SIZE))) {\n            doGet(paths, writer);\n            WGLOG.info(\"I20002\",\n                    paths);\n            writer.close();\n            return 0;\n        } catch (IOException e) {\n            WGLOG.error(e, \"E20002\",\n                    paths);\n            return 1;\n        } catch (InterruptedException e) {\n            WGLOG.error(e, \"E20003\",\n                    paths);\n            return 1;\n        }\n    }", "signature": "int execute(OutputStream out, String... args)", "full_signature": " int execute(OutputStream out, String... args)", "class_method_signature": "WindGateHadoopGet.execute(OutputStream out, String... args)", "testcase": false, "constructor": false, "invocations": ["error", "toString", "printf", "getName", "add", "info", "createWriter", "doGet", "info", "close", "error", "error"]}, "repository": {"repo_id": 1545929, "url": "https://github.com/asakusafw/asakusafw", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 113, "size": 35236, "license": "licensed"}}