{"test_class": {"identifier": "DecimalOptionTest", "superclass": "extends ValueOptionTestRoot", "interfaces": "", "fields": [], "file": "core-project/asakusa-runtime/src/test/java/com/asakusafw/runtime/value/DecimalOptionTest.java"}, "test_case": {"identifier": "or", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void or() {\n        DecimalOption option = new DecimalOption();\n        assertThat(option.or(decimal(30)), is(decimal(30)));\n        assertThat(option.isNull(), is(true));\n    }", "signature": "void or()", "full_signature": "@Test public void or()", "class_method_signature": "DecimalOptionTest.or()", "testcase": true, "constructor": false, "invocations": ["assertThat", "or", "decimal", "is", "decimal", "assertThat", "isNull", "is"]}, "focal_class": {"identifier": "DecimalOption", "superclass": "extends ValueOption<DecimalOption>", "interfaces": "", "fields": [{"original_string": "private static final int HEAD_NULL = 0x00;", "modifier": "private static final", "type": "int", "declarator": "HEAD_NULL = 0x00", "var_name": "HEAD_NULL"}, {"original_string": "private static final int MASK_PRESENT = 0x80;", "modifier": "private static final", "type": "int", "declarator": "MASK_PRESENT = 0x80", "var_name": "MASK_PRESENT"}, {"original_string": "private static final int MASK_PLUS = 0x40;", "modifier": "private static final", "type": "int", "declarator": "MASK_PLUS = 0x40", "var_name": "MASK_PLUS"}, {"original_string": "private static final ThreadLocal<DecimalBuffer> BUFFER_MAIN = ThreadLocal.withInitial(DecimalBuffer::new);", "modifier": "private static final", "type": "ThreadLocal<DecimalBuffer>", "declarator": "BUFFER_MAIN = ThreadLocal.withInitial(DecimalBuffer::new)", "var_name": "BUFFER_MAIN"}, {"original_string": "private static final ThreadLocal<DecimalBuffer> BUFFER_SUB = ThreadLocal.withInitial(DecimalBuffer::new);", "modifier": "private static final", "type": "ThreadLocal<DecimalBuffer>", "declarator": "BUFFER_SUB = ThreadLocal.withInitial(DecimalBuffer::new)", "var_name": "BUFFER_SUB"}, {"original_string": "private BigDecimal entity = BigDecimal.ZERO;", "modifier": "private", "type": "BigDecimal", "declarator": "entity = BigDecimal.ZERO", "var_name": "entity"}], "methods": [{"identifier": "DecimalOption", "parameters": "()", "modifiers": "public", "return": "", "signature": " DecimalOption()", "full_signature": "public  DecimalOption()", "class_method_signature": "DecimalOption.DecimalOption()", "testcase": false, "constructor": true}, {"identifier": "DecimalOption", "parameters": "(BigDecimal valueOrNull)", "modifiers": "public", "return": "", "signature": " DecimalOption(BigDecimal valueOrNull)", "full_signature": "public  DecimalOption(BigDecimal valueOrNull)", "class_method_signature": "DecimalOption.DecimalOption(BigDecimal valueOrNull)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "()", "modifiers": "public", "return": "BigDecimal", "signature": "BigDecimal get()", "full_signature": "public BigDecimal get()", "class_method_signature": "DecimalOption.get()", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(BigDecimal alternate)", "modifiers": "public", "return": "BigDecimal", "signature": "BigDecimal or(BigDecimal alternate)", "full_signature": "public BigDecimal or(BigDecimal alternate)", "class_method_signature": "DecimalOption.or(BigDecimal alternate)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(BigDecimal delta)", "modifiers": "public", "return": "void", "signature": "void add(BigDecimal delta)", "full_signature": "public void add(BigDecimal delta)", "class_method_signature": "DecimalOption.add(BigDecimal delta)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(DecimalOption other)", "modifiers": "public", "return": "void", "signature": "void add(DecimalOption other)", "full_signature": "public void add(DecimalOption other)", "class_method_signature": "DecimalOption.add(DecimalOption other)", "testcase": false, "constructor": false}, {"identifier": "modify", "parameters": "(BigDecimal newValue)", "modifiers": "@Deprecated public", "return": "DecimalOption", "signature": "DecimalOption modify(BigDecimal newValue)", "full_signature": "@Deprecated public DecimalOption modify(BigDecimal newValue)", "class_method_signature": "DecimalOption.modify(BigDecimal newValue)", "testcase": false, "constructor": false}, {"identifier": "copyFrom", "parameters": "(DecimalOption optionOrNull)", "modifiers": "@Override @Deprecated public", "return": "void", "signature": "void copyFrom(DecimalOption optionOrNull)", "full_signature": "@Override @Deprecated public void copyFrom(DecimalOption optionOrNull)", "class_method_signature": "DecimalOption.copyFrom(DecimalOption optionOrNull)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DecimalOption.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "DecimalOption.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "has", "parameters": "(BigDecimal other)", "modifiers": "public", "return": "boolean", "signature": "boolean has(BigDecimal other)", "full_signature": "public boolean has(BigDecimal other)", "class_method_signature": "DecimalOption.has(BigDecimal other)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(WritableRawComparable o)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(WritableRawComparable o)", "full_signature": "@Override public int compareTo(WritableRawComparable o)", "class_method_signature": "DecimalOption.compareTo(WritableRawComparable o)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DecimalOption.toString()", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(DataOutput out)", "modifiers": "@Override public", "return": "void", "signature": "void write(DataOutput out)", "full_signature": "@Override public void write(DataOutput out)", "class_method_signature": "DecimalOption.write(DataOutput out)", "testcase": false, "constructor": false}, {"identifier": "readFields", "parameters": "(DataInput in)", "modifiers": "@SuppressWarnings(\"deprecation\") @Override public", "return": "void", "signature": "void readFields(DataInput in)", "full_signature": "@SuppressWarnings(\"deprecation\") @Override public void readFields(DataInput in)", "class_method_signature": "DecimalOption.readFields(DataInput in)", "testcase": false, "constructor": false}, {"identifier": "restore", "parameters": "(byte[] bytes, int offset, int limit)", "modifiers": "@SuppressWarnings(\"deprecation\") @Override public", "return": "int", "signature": "int restore(byte[] bytes, int offset, int limit)", "full_signature": "@SuppressWarnings(\"deprecation\") @Override public int restore(byte[] bytes, int offset, int limit)", "class_method_signature": "DecimalOption.restore(byte[] bytes, int offset, int limit)", "testcase": false, "constructor": false}, {"identifier": "getSizeInBytes", "parameters": "(byte[] buf, int offset)", "modifiers": "@Override public", "return": "int", "signature": "int getSizeInBytes(byte[] buf, int offset)", "full_signature": "@Override public int getSizeInBytes(byte[] buf, int offset)", "class_method_signature": "DecimalOption.getSizeInBytes(byte[] buf, int offset)", "testcase": false, "constructor": false}, {"identifier": "compareInBytes", "parameters": "(byte[] b1, int o1, byte[] b2, int o2)", "modifiers": "@Override public", "return": "int", "signature": "int compareInBytes(byte[] b1, int o1, byte[] b2, int o2)", "full_signature": "@Override public int compareInBytes(byte[] b1, int o1, byte[] b2, int o2)", "class_method_signature": "DecimalOption.compareInBytes(byte[] b1, int o1, byte[] b2, int o2)", "testcase": false, "constructor": false}, {"identifier": "getBytesLength", "parameters": "(byte[] bytes, int offset, int length)", "modifiers": "public static", "return": "int", "signature": "int getBytesLength(byte[] bytes, int offset, int length)", "full_signature": "public static int getBytesLength(byte[] bytes, int offset, int length)", "class_method_signature": "DecimalOption.getBytesLength(byte[] bytes, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "compareBytes", "parameters": "(\n            byte[] b1, int s1, int l1,\n            byte[] b2, int s2, int l2)", "modifiers": "public static", "return": "int", "signature": "int compareBytes(\n            byte[] b1, int s1, int l1,\n            byte[] b2, int s2, int l2)", "full_signature": "public static int compareBytes(\n            byte[] b1, int s1, int l1,\n            byte[] b2, int s2, int l2)", "class_method_signature": "DecimalOption.compareBytes(\n            byte[] b1, int s1, int l1,\n            byte[] b2, int s2, int l2)", "testcase": false, "constructor": false}], "file": "core-project/asakusa-runtime/src/main/java/com/asakusafw/runtime/value/DecimalOption.java"}, "focal_method": {"identifier": "or", "parameters": "(BigDecimal alternate)", "modifiers": "public", "return": "BigDecimal", "body": "public BigDecimal or(BigDecimal alternate) {\n        if (nullValue) {\n            return alternate;\n        }\n        return get();\n    }", "signature": "BigDecimal or(BigDecimal alternate)", "full_signature": "public BigDecimal or(BigDecimal alternate)", "class_method_signature": "DecimalOption.or(BigDecimal alternate)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 1545929, "url": "https://github.com/asakusafw/asakusafw", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 113, "size": 35236, "license": "licensed"}}