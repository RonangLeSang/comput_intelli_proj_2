{"test_class": {"identifier": "IntOptionTest", "superclass": "extends ValueOptionTestRoot", "interfaces": "", "fields": [], "file": "core-project/asakusa-runtime/src/test/java/com/asakusafw/runtime/value/IntOptionTest.java"}, "test_case": {"identifier": "or", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void or() {\n        IntOption option = new IntOption();\n        assertThat(option.or(30), is(30));\n        assertThat(option.isNull(), is(true));\n    }", "signature": "void or()", "full_signature": "@Test public void or()", "class_method_signature": "IntOptionTest.or()", "testcase": true, "constructor": false, "invocations": ["assertThat", "or", "is", "assertThat", "isNull", "is"]}, "focal_class": {"identifier": "IntOption", "superclass": "extends ValueOption<IntOption>", "interfaces": "", "fields": [{"original_string": "private int value;", "modifier": "private", "type": "int", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "IntOption", "parameters": "()", "modifiers": "public", "return": "", "signature": " IntOption()", "full_signature": "public  IntOption()", "class_method_signature": "IntOption.IntOption()", "testcase": false, "constructor": true}, {"identifier": "IntOption", "parameters": "(int value)", "modifiers": "public", "return": "", "signature": " IntOption(int value)", "full_signature": "public  IntOption(int value)", "class_method_signature": "IntOption.IntOption(int value)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int get()", "full_signature": "public int get()", "class_method_signature": "IntOption.get()", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(int alternate)", "modifiers": "public", "return": "int", "signature": "int or(int alternate)", "full_signature": "public int or(int alternate)", "class_method_signature": "IntOption.or(int alternate)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(int delta)", "modifiers": "public", "return": "void", "signature": "void add(int delta)", "full_signature": "public void add(int delta)", "class_method_signature": "IntOption.add(int delta)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(IntOption other)", "modifiers": "public", "return": "void", "signature": "void add(IntOption other)", "full_signature": "public void add(IntOption other)", "class_method_signature": "IntOption.add(IntOption other)", "testcase": false, "constructor": false}, {"identifier": "modify", "parameters": "(int newValue)", "modifiers": "@Deprecated public", "return": "IntOption", "signature": "IntOption modify(int newValue)", "full_signature": "@Deprecated public IntOption modify(int newValue)", "class_method_signature": "IntOption.modify(int newValue)", "testcase": false, "constructor": false}, {"identifier": "copyFrom", "parameters": "(IntOption optionOrNull)", "modifiers": "@Override @Deprecated public", "return": "void", "signature": "void copyFrom(IntOption optionOrNull)", "full_signature": "@Override @Deprecated public void copyFrom(IntOption optionOrNull)", "class_method_signature": "IntOption.copyFrom(IntOption optionOrNull)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "IntOption.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "IntOption.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "has", "parameters": "(int other)", "modifiers": "public", "return": "boolean", "signature": "boolean has(int other)", "full_signature": "public boolean has(int other)", "class_method_signature": "IntOption.has(int other)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(WritableRawComparable o)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(WritableRawComparable o)", "full_signature": "@Override public int compareTo(WritableRawComparable o)", "class_method_signature": "IntOption.compareTo(WritableRawComparable o)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "IntOption.toString()", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(DataOutput out)", "modifiers": "@Override public", "return": "void", "signature": "void write(DataOutput out)", "full_signature": "@Override public void write(DataOutput out)", "class_method_signature": "IntOption.write(DataOutput out)", "testcase": false, "constructor": false}, {"identifier": "readFields", "parameters": "(DataInput in)", "modifiers": "@SuppressWarnings(\"deprecation\") @Override public", "return": "void", "signature": "void readFields(DataInput in)", "full_signature": "@SuppressWarnings(\"deprecation\") @Override public void readFields(DataInput in)", "class_method_signature": "IntOption.readFields(DataInput in)", "testcase": false, "constructor": false}, {"identifier": "restore", "parameters": "(byte[] bytes, int offset, int limit)", "modifiers": "@SuppressWarnings(\"deprecation\") @Override public", "return": "int", "signature": "int restore(byte[] bytes, int offset, int limit)", "full_signature": "@SuppressWarnings(\"deprecation\") @Override public int restore(byte[] bytes, int offset, int limit)", "class_method_signature": "IntOption.restore(byte[] bytes, int offset, int limit)", "testcase": false, "constructor": false}, {"identifier": "getSizeInBytes", "parameters": "(byte[] buf, int offset)", "modifiers": "@Override public", "return": "int", "signature": "int getSizeInBytes(byte[] buf, int offset)", "full_signature": "@Override public int getSizeInBytes(byte[] buf, int offset)", "class_method_signature": "IntOption.getSizeInBytes(byte[] buf, int offset)", "testcase": false, "constructor": false}, {"identifier": "compareInBytes", "parameters": "(byte[] b1, int o1, byte[] b2, int o2)", "modifiers": "@Override public", "return": "int", "signature": "int compareInBytes(byte[] b1, int o1, byte[] b2, int o2)", "full_signature": "@Override public int compareInBytes(byte[] b1, int o1, byte[] b2, int o2)", "class_method_signature": "IntOption.compareInBytes(byte[] b1, int o1, byte[] b2, int o2)", "testcase": false, "constructor": false}, {"identifier": "getBytesLength", "parameters": "(byte[] bytes, int offset, int length)", "modifiers": "public static", "return": "int", "signature": "int getBytesLength(byte[] bytes, int offset, int length)", "full_signature": "public static int getBytesLength(byte[] bytes, int offset, int length)", "class_method_signature": "IntOption.getBytesLength(byte[] bytes, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "compareBytes", "parameters": "(\n            byte[] b1, int s1, int l1,\n            byte[] b2, int s2, int l2)", "modifiers": "public static", "return": "int", "signature": "int compareBytes(\n            byte[] b1, int s1, int l1,\n            byte[] b2, int s2, int l2)", "full_signature": "public static int compareBytes(\n            byte[] b1, int s1, int l1,\n            byte[] b2, int s2, int l2)", "class_method_signature": "IntOption.compareBytes(\n            byte[] b1, int s1, int l1,\n            byte[] b2, int s2, int l2)", "testcase": false, "constructor": false}], "file": "core-project/asakusa-runtime/src/main/java/com/asakusafw/runtime/value/IntOption.java"}, "focal_method": {"identifier": "or", "parameters": "(int alternate)", "modifiers": "public", "return": "int", "body": "public int or(int alternate) {\n        if (nullValue) {\n            return alternate;\n        }\n        return value;\n    }", "signature": "int or(int alternate)", "full_signature": "public int or(int alternate)", "class_method_signature": "IntOption.or(int alternate)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1545929, "url": "https://github.com/asakusafw/asakusafw", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 113, "size": 35236, "license": "licensed"}}