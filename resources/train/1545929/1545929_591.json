{"test_class": {"identifier": "PropertyConfiguratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public final TemporaryFolder temporary = new TemporaryFolder();", "modifier": "@Rule\n    public final", "type": "TemporaryFolder", "declarator": "temporary = new TemporaryFolder()", "var_name": "temporary"}], "file": "utils-project/gradle-launcher/src/test/java/com/asakusafw/utils/gradle/PropertyConfiguratorTest.java"}, "test_case": {"identifier": "of_map", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void of_map() throws IOException {\n        Map<String, String> vars = new LinkedHashMap<>();\n        vars.put(\"A\", \"1\");\n        vars.put(\"B\", \"2\");\n        vars.put(\"C\", \"3\");\n\n        BasicProject project = project()\n                .with(PropertyConfigurator.of(vars));\n        assertThat(project.property(\"A\"), is(\"1\"));\n        assertThat(project.property(\"B\"), is(\"2\"));\n        assertThat(project.property(\"C\"), is(\"3\"));\n        assertThat(project.property(\"D\"), is(nullValue()));\n\n        Map<String, String> patch = new LinkedHashMap<>();\n        patch.put(\"B\", \"4\");\n        patch.put(\"C\", null);\n        patch.put(\"D\", \"5\");\n        project.with(PropertyConfigurator.of(patch));\n        assertThat(project.property(\"A\"), is(\"1\"));\n        assertThat(project.property(\"B\"), is(\"4\"));\n        assertThat(project.property(\"C\"), is(nullValue()));\n        assertThat(project.property(\"D\"), is(\"5\"));\n    }", "signature": "void of_map()", "full_signature": "@Test public void of_map()", "class_method_signature": "PropertyConfiguratorTest.of_map()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "with", "project", "of", "assertThat", "property", "is", "assertThat", "property", "is", "assertThat", "property", "is", "assertThat", "property", "is", "nullValue", "put", "put", "put", "with", "of", "assertThat", "property", "is", "assertThat", "property", "is", "assertThat", "property", "is", "nullValue", "assertThat", "property", "is"]}, "focal_class": {"identifier": "PropertyConfigurator", "superclass": "", "interfaces": "implements Consumer<BaseProject<?>>", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(PropertyConfigurator.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(PropertyConfigurator.class)", "var_name": "LOG"}, {"original_string": "private final Map<String, String> edit;", "modifier": "private final", "type": "Map<String, String>", "declarator": "edit", "var_name": "edit"}], "methods": [{"identifier": "PropertyConfigurator", "parameters": "(Map<String, String> edit)", "modifiers": "public", "return": "", "signature": " PropertyConfigurator(Map<String, String> edit)", "full_signature": "public  PropertyConfigurator(Map<String, String> edit)", "class_method_signature": "PropertyConfigurator.PropertyConfigurator(Map<String, String> edit)", "testcase": false, "constructor": true}, {"identifier": "nothing", "parameters": "()", "modifiers": "public static", "return": "PropertyConfigurator", "signature": "PropertyConfigurator nothing()", "full_signature": "public static PropertyConfigurator nothing()", "class_method_signature": "PropertyConfigurator.nothing()", "testcase": false, "constructor": false}, {"identifier": "system", "parameters": "()", "modifiers": "public static", "return": "PropertyConfigurator", "signature": "PropertyConfigurator system()", "full_signature": "public static PropertyConfigurator system()", "class_method_signature": "PropertyConfigurator.system()", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(String key, String value)", "modifiers": "public static", "return": "PropertyConfigurator", "signature": "PropertyConfigurator of(String key, String value)", "full_signature": "public static PropertyConfigurator of(String key, String value)", "class_method_signature": "PropertyConfigurator.of(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(String key, Path path)", "modifiers": "public static", "return": "PropertyConfigurator", "signature": "PropertyConfigurator of(String key, Path path)", "full_signature": "public static PropertyConfigurator of(String key, Path path)", "class_method_signature": "PropertyConfigurator.of(String key, Path path)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(Map<String, String> properties)", "modifiers": "public static", "return": "PropertyConfigurator", "signature": "PropertyConfigurator of(Map<String, String> properties)", "full_signature": "public static PropertyConfigurator of(Map<String, String> properties)", "class_method_signature": "PropertyConfigurator.of(Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(Properties properties)", "modifiers": "public static", "return": "PropertyConfigurator", "signature": "PropertyConfigurator of(Properties properties)", "full_signature": "public static PropertyConfigurator of(Properties properties)", "class_method_signature": "PropertyConfigurator.of(Properties properties)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(URL resource)", "modifiers": "public static", "return": "PropertyConfigurator", "signature": "PropertyConfigurator of(URL resource)", "full_signature": "public static PropertyConfigurator of(URL resource)", "class_method_signature": "PropertyConfigurator.of(URL resource)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(Optional<? extends URL> resource)", "modifiers": "public static", "return": "PropertyConfigurator", "signature": "PropertyConfigurator of(Optional<? extends URL> resource)", "full_signature": "public static PropertyConfigurator of(Optional<? extends URL> resource)", "class_method_signature": "PropertyConfigurator.of(Optional<? extends URL> resource)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(Enumeration<? extends URL> resources)", "modifiers": "public static", "return": "PropertyConfigurator", "signature": "PropertyConfigurator of(Enumeration<? extends URL> resources)", "full_signature": "public static PropertyConfigurator of(Enumeration<? extends URL> resources)", "class_method_signature": "PropertyConfigurator.of(Enumeration<? extends URL> resources)", "testcase": false, "constructor": false}, {"identifier": "accept", "parameters": "(BaseProject<?> project)", "modifiers": "@Override public", "return": "void", "signature": "void accept(BaseProject<?> project)", "full_signature": "@Override public void accept(BaseProject<?> project)", "class_method_signature": "PropertyConfigurator.accept(BaseProject<?> project)", "testcase": false, "constructor": false}], "file": "utils-project/gradle-launcher/src/main/java/com/asakusafw/utils/gradle/PropertyConfigurator.java"}, "focal_method": {"identifier": "of", "parameters": "(String key, String value)", "modifiers": "public static", "return": "PropertyConfigurator", "body": "public static PropertyConfigurator of(String key, String value) {\n        return of(Collections.singletonMap(key, value));\n    }", "signature": "PropertyConfigurator of(String key, String value)", "full_signature": "public static PropertyConfigurator of(String key, String value)", "class_method_signature": "PropertyConfigurator.of(String key, String value)", "testcase": false, "constructor": false, "invocations": ["of", "singletonMap"]}, "repository": {"repo_id": 1545929, "url": "https://github.com/asakusafw/asakusafw", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 113, "size": 35236, "license": "licensed"}}