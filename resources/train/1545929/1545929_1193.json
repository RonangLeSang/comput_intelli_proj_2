{"test_class": {"identifier": "HadoopDataSourceCoreTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@ClassRule\n    public static final WindowsSupport WINDOWS_SUPPORT = new WindowsSupport();", "modifier": "@ClassRule\n    public static final", "type": "WindowsSupport", "declarator": "WINDOWS_SUPPORT = new WindowsSupport()", "var_name": "WINDOWS_SUPPORT"}, {"original_string": "@Rule\n    public final TemporaryFolder temp = new TemporaryFolder();", "modifier": "@Rule\n    public final", "type": "TemporaryFolder", "declarator": "temp = new TemporaryFolder()", "var_name": "temp"}, {"original_string": "private final DataDefinition<StringBuilder> definition;", "modifier": "private final", "type": "DataDefinition<StringBuilder>", "declarator": "definition", "var_name": "definition"}, {"original_string": "private Configuration conf;", "modifier": "private", "type": "Configuration", "declarator": "conf", "var_name": "conf"}, {"original_string": "private File mapping;", "modifier": "private", "type": "File", "declarator": "mapping", "var_name": "mapping"}, {"original_string": "private File temporary;", "modifier": "private", "type": "File", "declarator": "temporary", "var_name": "temporary"}, {"original_string": "private File localtemp;", "modifier": "private", "type": "File", "declarator": "localtemp", "var_name": "localtemp"}, {"original_string": "private HadoopDataSourceProfile profile;", "modifier": "private", "type": "HadoopDataSourceProfile", "declarator": "profile", "var_name": "profile"}, {"original_string": "private OutputAttemptContext context;", "modifier": "private", "type": "OutputAttemptContext", "declarator": "context", "var_name": "context"}, {"original_string": "private final Counter counter = new Counter();", "modifier": "private final", "type": "Counter", "declarator": "counter = new Counter()", "var_name": "counter"}], "file": "core-project/asakusa-runtime/src/test/java/com/asakusafw/runtime/directio/hadoop/HadoopDataSourceCoreTest.java"}, "test_case": {"identifier": "output", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void output() throws Exception {\n        HadoopDataSourceCore core = new HadoopDataSourceCore(profile);\n        setup(core);\n        try (ModelOutput<StringBuilder> output = core.openOutput(\n                context,\n                definition,\n                \"output\",\n                \"file.txt\",\n                counter)){\n            output.write(new StringBuilder(\"Hello, world!\"));\n        }\n        assertThat(counter.get(), is(greaterThan(0L)));\n\n        File target = new File(mapping, \"output/file.txt\");\n        assertThat(target.exists(), is(false));\n        commitAttempt(core);\n\n        assertThat(target.exists(), is(false));\n        commitTransaction(core);\n\n        assertThat(target.exists(), is(true));\n\n        assertThat(get(target), is(Arrays.asList(\"Hello, world!\")));\n    }", "signature": "void output()", "full_signature": "@Test public void output()", "class_method_signature": "HadoopDataSourceCoreTest.output()", "testcase": true, "constructor": false, "invocations": ["setup", "openOutput", "write", "assertThat", "get", "is", "greaterThan", "assertThat", "exists", "is", "commitAttempt", "assertThat", "exists", "is", "commitTransaction", "assertThat", "exists", "is", "assertThat", "get", "is", "asList"]}, "focal_class": {"identifier": "HadoopDataSourceCore", "superclass": "", "interfaces": "implements DirectDataSource", "fields": [{"original_string": "static final Log LOG = LogFactory.getLog(HadoopDataSourceCore.class);", "modifier": "static final", "type": "Log", "declarator": "LOG = LogFactory.getLog(HadoopDataSourceCore.class)", "var_name": "LOG"}, {"original_string": "private static final String ATTEMPT_AREA = \"attempts\";", "modifier": "private static final", "type": "String", "declarator": "ATTEMPT_AREA = \"attempts\"", "var_name": "ATTEMPT_AREA"}, {"original_string": "private static final String STAGING_AREA = \"staging\";", "modifier": "private static final", "type": "String", "declarator": "STAGING_AREA = \"staging\"", "var_name": "STAGING_AREA"}, {"original_string": "private final HadoopDataSourceProfile profile;", "modifier": "private final", "type": "HadoopDataSourceProfile", "declarator": "profile", "var_name": "profile"}], "methods": [{"identifier": "HadoopDataSourceCore", "parameters": "(HadoopDataSourceProfile profile)", "modifiers": "public", "return": "", "signature": " HadoopDataSourceCore(HadoopDataSourceProfile profile)", "full_signature": "public  HadoopDataSourceCore(HadoopDataSourceProfile profile)", "class_method_signature": "HadoopDataSourceCore.HadoopDataSourceCore(HadoopDataSourceProfile profile)", "testcase": false, "constructor": true}, {"identifier": "path", "parameters": "(String basePath, ResourcePattern resourcePattern)", "modifiers": "@Override public", "return": "String", "signature": "String path(String basePath, ResourcePattern resourcePattern)", "full_signature": "@Override public String path(String basePath, ResourcePattern resourcePattern)", "class_method_signature": "HadoopDataSourceCore.path(String basePath, ResourcePattern resourcePattern)", "testcase": false, "constructor": false}, {"identifier": "path", "parameters": "(String basePath)", "modifiers": "@Override public", "return": "String", "signature": "String path(String basePath)", "full_signature": "@Override public String path(String basePath)", "class_method_signature": "HadoopDataSourceCore.path(String basePath)", "testcase": false, "constructor": false}, {"identifier": "findInputFragments", "parameters": "(\n            DataDefinition<T> definition,\n            String basePath,\n            ResourcePattern resourcePattern)", "modifiers": "@Override public", "return": "List<DirectInputFragment>", "signature": "List<DirectInputFragment> findInputFragments(\n            DataDefinition<T> definition,\n            String basePath,\n            ResourcePattern resourcePattern)", "full_signature": "@Override public List<DirectInputFragment> findInputFragments(\n            DataDefinition<T> definition,\n            String basePath,\n            ResourcePattern resourcePattern)", "class_method_signature": "HadoopDataSourceCore.findInputFragments(\n            DataDefinition<T> definition,\n            String basePath,\n            ResourcePattern resourcePattern)", "testcase": false, "constructor": false}, {"identifier": "applyFilter", "parameters": "(List<FileStatus> stats, DataFilter<?> filter)", "modifiers": "private", "return": "List<FileStatus>", "signature": "List<FileStatus> applyFilter(List<FileStatus> stats, DataFilter<?> filter)", "full_signature": "private List<FileStatus> applyFilter(List<FileStatus> stats, DataFilter<?> filter)", "class_method_signature": "HadoopDataSourceCore.applyFilter(List<FileStatus> stats, DataFilter<?> filter)", "testcase": false, "constructor": false}, {"identifier": "isIn", "parameters": "(FileStatus stat, Path temporary)", "modifiers": "private", "return": "boolean", "signature": "boolean isIn(FileStatus stat, Path temporary)", "full_signature": "private boolean isIn(FileStatus stat, Path temporary)", "class_method_signature": "HadoopDataSourceCore.isIn(FileStatus stat, Path temporary)", "testcase": false, "constructor": false}, {"identifier": "filesOnly", "parameters": "(List<FileStatus> stats, Path temporary)", "modifiers": "private", "return": "List<FileStatus>", "signature": "List<FileStatus> filesOnly(List<FileStatus> stats, Path temporary)", "full_signature": "private List<FileStatus> filesOnly(List<FileStatus> stats, Path temporary)", "class_method_signature": "HadoopDataSourceCore.filesOnly(List<FileStatus> stats, Path temporary)", "testcase": false, "constructor": false}, {"identifier": "computeInputFragments", "parameters": "(\n            FragmentComputer fragmentComputer,\n            List<FileStatus> stats)", "modifiers": "private", "return": "List<DirectInputFragment>", "signature": "List<DirectInputFragment> computeInputFragments(\n            FragmentComputer fragmentComputer,\n            List<FileStatus> stats)", "full_signature": "private List<DirectInputFragment> computeInputFragments(\n            FragmentComputer fragmentComputer,\n            List<FileStatus> stats)", "class_method_signature": "HadoopDataSourceCore.computeInputFragments(\n            FragmentComputer fragmentComputer,\n            List<FileStatus> stats)", "testcase": false, "constructor": false}, {"identifier": "openInput", "parameters": "(\n            DataDefinition<T> definition,\n            DirectInputFragment fragment,\n            Counter counter)", "modifiers": "@Override public", "return": "ModelInput<T>", "signature": "ModelInput<T> openInput(\n            DataDefinition<T> definition,\n            DirectInputFragment fragment,\n            Counter counter)", "full_signature": "@Override public ModelInput<T> openInput(\n            DataDefinition<T> definition,\n            DirectInputFragment fragment,\n            Counter counter)", "class_method_signature": "HadoopDataSourceCore.openInput(\n            DataDefinition<T> definition,\n            DirectInputFragment fragment,\n            Counter counter)", "testcase": false, "constructor": false}, {"identifier": "openOutput", "parameters": "(\n            OutputAttemptContext context,\n            DataDefinition<T> definition,\n            String basePath,\n            String resourcePath,\n            Counter counter)", "modifiers": "@Override public", "return": "ModelOutput<T>", "signature": "ModelOutput<T> openOutput(\n            OutputAttemptContext context,\n            DataDefinition<T> definition,\n            String basePath,\n            String resourcePath,\n            Counter counter)", "full_signature": "@Override public ModelOutput<T> openOutput(\n            OutputAttemptContext context,\n            DataDefinition<T> definition,\n            String basePath,\n            String resourcePath,\n            Counter counter)", "class_method_signature": "HadoopDataSourceCore.openOutput(\n            OutputAttemptContext context,\n            DataDefinition<T> definition,\n            String basePath,\n            String resourcePath,\n            Counter counter)", "testcase": false, "constructor": false}, {"identifier": "isLocalAttemptOutput", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isLocalAttemptOutput()", "full_signature": " boolean isLocalAttemptOutput()", "class_method_signature": "HadoopDataSourceCore.isLocalAttemptOutput()", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(ResourcePattern pattern)", "modifiers": "private", "return": "FilePattern", "signature": "FilePattern validate(ResourcePattern pattern)", "full_signature": "private FilePattern validate(ResourcePattern pattern)", "class_method_signature": "HadoopDataSourceCore.validate(ResourcePattern pattern)", "testcase": false, "constructor": false}, {"identifier": "convertFormat", "parameters": "(DataFormat<T> format)", "modifiers": "private", "return": "HadoopFileFormat<T>", "signature": "HadoopFileFormat<T> convertFormat(DataFormat<T> format)", "full_signature": "private HadoopFileFormat<T> convertFormat(DataFormat<T> format)", "class_method_signature": "HadoopDataSourceCore.convertFormat(DataFormat<T> format)", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "(\n            String basePath,\n            ResourcePattern resourcePattern,\n            Counter counter)", "modifiers": "@Override public", "return": "List<ResourceInfo>", "signature": "List<ResourceInfo> list(\n            String basePath,\n            ResourcePattern resourcePattern,\n            Counter counter)", "full_signature": "@Override public List<ResourceInfo> list(\n            String basePath,\n            ResourcePattern resourcePattern,\n            Counter counter)", "class_method_signature": "HadoopDataSourceCore.list(\n            String basePath,\n            ResourcePattern resourcePattern,\n            Counter counter)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(\n            String basePath,\n            ResourcePattern resourcePattern,\n            boolean recursive,\n            Counter counter)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean delete(\n            String basePath,\n            ResourcePattern resourcePattern,\n            boolean recursive,\n            Counter counter)", "full_signature": "@Override public boolean delete(\n            String basePath,\n            ResourcePattern resourcePattern,\n            boolean recursive,\n            Counter counter)", "class_method_signature": "HadoopDataSourceCore.delete(\n            String basePath,\n            ResourcePattern resourcePattern,\n            boolean recursive,\n            Counter counter)", "testcase": false, "constructor": false}, {"identifier": "normalize", "parameters": "(List<FileStatus> stats, Path root, Path temporary)", "modifiers": "private", "return": "List<FileStatus>", "signature": "List<FileStatus> normalize(List<FileStatus> stats, Path root, Path temporary)", "full_signature": "private List<FileStatus> normalize(List<FileStatus> stats, Path root, Path temporary)", "class_method_signature": "HadoopDataSourceCore.normalize(List<FileStatus> stats, Path root, Path temporary)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(Path parent, String child)", "modifiers": "private", "return": "Path", "signature": "Path append(Path parent, String child)", "full_signature": "private Path append(Path parent, String child)", "class_method_signature": "HadoopDataSourceCore.append(Path parent, String child)", "testcase": false, "constructor": false}, {"identifier": "setupAttemptOutput", "parameters": "(OutputAttemptContext context)", "modifiers": "@Override public", "return": "void", "signature": "void setupAttemptOutput(OutputAttemptContext context)", "full_signature": "@Override public void setupAttemptOutput(OutputAttemptContext context)", "class_method_signature": "HadoopDataSourceCore.setupAttemptOutput(OutputAttemptContext context)", "testcase": false, "constructor": false}, {"identifier": "commitAttemptOutput", "parameters": "(OutputAttemptContext context)", "modifiers": "@Override public", "return": "void", "signature": "void commitAttemptOutput(OutputAttemptContext context)", "full_signature": "@Override public void commitAttemptOutput(OutputAttemptContext context)", "class_method_signature": "HadoopDataSourceCore.commitAttemptOutput(OutputAttemptContext context)", "testcase": false, "constructor": false}, {"identifier": "cleanupAttemptOutput", "parameters": "(OutputAttemptContext context)", "modifiers": "@Override public", "return": "void", "signature": "void cleanupAttemptOutput(OutputAttemptContext context)", "full_signature": "@Override public void cleanupAttemptOutput(OutputAttemptContext context)", "class_method_signature": "HadoopDataSourceCore.cleanupAttemptOutput(OutputAttemptContext context)", "testcase": false, "constructor": false}, {"identifier": "setupTransactionOutput", "parameters": "(OutputTransactionContext context)", "modifiers": "@Override public", "return": "void", "signature": "void setupTransactionOutput(OutputTransactionContext context)", "full_signature": "@Override public void setupTransactionOutput(OutputTransactionContext context)", "class_method_signature": "HadoopDataSourceCore.setupTransactionOutput(OutputTransactionContext context)", "testcase": false, "constructor": false}, {"identifier": "commitTransactionOutput", "parameters": "(OutputTransactionContext context)", "modifiers": "@Override public", "return": "void", "signature": "void commitTransactionOutput(OutputTransactionContext context)", "full_signature": "@Override public void commitTransactionOutput(OutputTransactionContext context)", "class_method_signature": "HadoopDataSourceCore.commitTransactionOutput(OutputTransactionContext context)", "testcase": false, "constructor": false}, {"identifier": "cleanupTransactionOutput", "parameters": "(OutputTransactionContext context)", "modifiers": "@Override public", "return": "void", "signature": "void cleanupTransactionOutput(OutputTransactionContext context)", "full_signature": "@Override public void cleanupTransactionOutput(OutputTransactionContext context)", "class_method_signature": "HadoopDataSourceCore.cleanupTransactionOutput(OutputTransactionContext context)", "testcase": false, "constructor": false}, {"identifier": "getTemporaryOutput", "parameters": "(OutputTransactionContext context)", "modifiers": "private", "return": "Path", "signature": "Path getTemporaryOutput(OutputTransactionContext context)", "full_signature": "private Path getTemporaryOutput(OutputTransactionContext context)", "class_method_signature": "HadoopDataSourceCore.getTemporaryOutput(OutputTransactionContext context)", "testcase": false, "constructor": false}, {"identifier": "getStagingOutput", "parameters": "(OutputTransactionContext context)", "modifiers": "", "return": "Path", "signature": "Path getStagingOutput(OutputTransactionContext context)", "full_signature": " Path getStagingOutput(OutputTransactionContext context)", "class_method_signature": "HadoopDataSourceCore.getStagingOutput(OutputTransactionContext context)", "testcase": false, "constructor": false}, {"identifier": "getAttemptOutput", "parameters": "(OutputAttemptContext context)", "modifiers": "", "return": "Path", "signature": "Path getAttemptOutput(OutputAttemptContext context)", "full_signature": " Path getAttemptOutput(OutputAttemptContext context)", "class_method_signature": "HadoopDataSourceCore.getAttemptOutput(OutputAttemptContext context)", "testcase": false, "constructor": false}, {"identifier": "getLocalAttemptOutput", "parameters": "(OutputAttemptContext context)", "modifiers": "", "return": "Path", "signature": "Path getLocalAttemptOutput(OutputAttemptContext context)", "full_signature": " Path getLocalAttemptOutput(OutputAttemptContext context)", "class_method_signature": "HadoopDataSourceCore.getLocalAttemptOutput(OutputAttemptContext context)", "testcase": false, "constructor": false}, {"identifier": "findProperty", "parameters": "(Class<T> propertyType)", "modifiers": "@Override public", "return": "Optional<T>", "signature": "Optional<T> findProperty(Class<T> propertyType)", "full_signature": "@Override public Optional<T> findProperty(Class<T> propertyType)", "class_method_signature": "HadoopDataSourceCore.findProperty(Class<T> propertyType)", "testcase": false, "constructor": false}], "file": "core-project/asakusa-runtime/src/main/java/com/asakusafw/runtime/directio/hadoop/HadoopDataSourceCore.java"}, "focal_method": {"identifier": "openOutput", "parameters": "(\n            OutputAttemptContext context,\n            DataDefinition<T> definition,\n            String basePath,\n            String resourcePath,\n            Counter counter)", "modifiers": "@Override public", "return": "ModelOutput<T>", "body": "@Override\n    public <T> ModelOutput<T> openOutput(\n            OutputAttemptContext context,\n            DataDefinition<T> definition,\n            String basePath,\n            String resourcePath,\n            Counter counter) throws IOException, InterruptedException {\n        boolean local = isLocalAttemptOutput();\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(MessageFormat.format(\n                    \"Start opening output (id={0}, path={1}, resource={2}, streaming={3})\", //$NON-NLS-1$\n                    profile.getId(),\n                    basePath,\n                    resourcePath,\n                    local == false));\n        }\n        FileSystem fs = local ? profile.getLocalFileSystem() : profile.getFileSystem();\n        Path attempt = local ? getLocalAttemptOutput(context) : getAttemptOutput(context);\n        DataFormat<T> format = definition.getDataFormat();\n        Class<? extends T> dataType = definition.getDataClass();\n        Path file = append(append(attempt, basePath), resourcePath);\n        HadoopFileFormat<T> fileFormat = convertFormat(format);\n        ModelOutput<T> output = fileFormat.createOutput(dataType, fs, file, counter);\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(MessageFormat.format(\n                    \"Finish opening output (id={0}, path={1}, resource={2}, file={3})\", //$NON-NLS-1$\n                    profile.getId(),\n                    basePath,\n                    resourcePath,\n                    file));\n        }\n        return output;\n    }", "signature": "ModelOutput<T> openOutput(\n            OutputAttemptContext context,\n            DataDefinition<T> definition,\n            String basePath,\n            String resourcePath,\n            Counter counter)", "full_signature": "@Override public ModelOutput<T> openOutput(\n            OutputAttemptContext context,\n            DataDefinition<T> definition,\n            String basePath,\n            String resourcePath,\n            Counter counter)", "class_method_signature": "HadoopDataSourceCore.openOutput(\n            OutputAttemptContext context,\n            DataDefinition<T> definition,\n            String basePath,\n            String resourcePath,\n            Counter counter)", "testcase": false, "constructor": false, "invocations": ["isLocalAttemptOutput", "isDebugEnabled", "debug", "format", "getId", "getLocalFileSystem", "getFileSystem", "getLocalAttemptOutput", "getAttemptOutput", "getDataFormat", "getDataClass", "append", "append", "convertFormat", "createOutput", "isDebugEnabled", "debug", "format", "getId"]}, "repository": {"repo_id": 1545929, "url": "https://github.com/asakusafw/asakusafw", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 113, "size": 35236, "license": "licensed"}}