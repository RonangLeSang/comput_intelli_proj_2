{"test_class": {"identifier": "JdbcImporterDescriptionTest", "superclass": "", "interfaces": "", "fields": [], "file": "windgate-project/asakusa-windgate-vocabulary/src/test/java/com/asakusafw/vocabulary/windgate/JdbcImporterDescriptionTest.java"}, "test_case": {"identifier": "empty_columns", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n    public void empty_columns() {\n        Mock mock = new Mock(String.class, \"testing\", StringSupport.class, \"TESTING\", null);\n        DriverScript script = mock.getDriverScript();\n        assertThat(script.getResourceName(), is(Constants.JDBC_RESOURCE_NAME));\n        script.getConfiguration();\n    }", "signature": "void empty_columns()", "full_signature": "@Test(expected = IllegalStateException.class) public void empty_columns()", "class_method_signature": "JdbcImporterDescriptionTest.empty_columns()", "testcase": true, "constructor": false, "invocations": ["getDriverScript", "assertThat", "getResourceName", "is", "getConfiguration"]}, "focal_class": {"identifier": "JdbcImporterDescription", "superclass": "extends WindGateImporterDescription", "interfaces": "", "fields": [], "methods": [{"identifier": "getJdbcSupport", "parameters": "()", "modifiers": "public abstract", "return": "Class<? extends DataModelJdbcSupport<?>>", "signature": "Class<? extends DataModelJdbcSupport<?>> getJdbcSupport()", "full_signature": "public abstract Class<? extends DataModelJdbcSupport<?>> getJdbcSupport()", "class_method_signature": "JdbcImporterDescription.getJdbcSupport()", "testcase": false, "constructor": false}, {"identifier": "getTableName", "parameters": "()", "modifiers": "public abstract", "return": "String", "signature": "String getTableName()", "full_signature": "public abstract String getTableName()", "class_method_signature": "JdbcImporterDescription.getTableName()", "testcase": false, "constructor": false}, {"identifier": "getColumnNames", "parameters": "()", "modifiers": "public abstract", "return": "List<String>", "signature": "List<String> getColumnNames()", "full_signature": "public abstract List<String> getColumnNames()", "class_method_signature": "JdbcImporterDescription.getColumnNames()", "testcase": false, "constructor": false}, {"identifier": "getCondition", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCondition()", "full_signature": "public String getCondition()", "class_method_signature": "JdbcImporterDescription.getCondition()", "testcase": false, "constructor": false}, {"identifier": "getOptions", "parameters": "()", "modifiers": "public", "return": "Collection<? extends JdbcAttribute>", "signature": "Collection<? extends JdbcAttribute> getOptions()", "full_signature": "public Collection<? extends JdbcAttribute> getOptions()", "class_method_signature": "JdbcImporterDescription.getOptions()", "testcase": false, "constructor": false}, {"identifier": "getDriverScript", "parameters": "()", "modifiers": "@Override public final", "return": "DriverScript", "signature": "DriverScript getDriverScript()", "full_signature": "@Override public final DriverScript getDriverScript()", "class_method_signature": "JdbcImporterDescription.getDriverScript()", "testcase": false, "constructor": false}], "file": "windgate-project/asakusa-windgate-vocabulary/src/main/java/com/asakusafw/vocabulary/windgate/JdbcImporterDescription.java"}, "focal_method": {"identifier": "getDriverScript", "parameters": "()", "modifiers": "@Override public final", "return": "DriverScript", "body": "@Override\n    public final DriverScript getDriverScript() {\n        String descriptionClass = getClass().getName();\n        Class<?> modelType = getModelType();\n        Class<? extends DataModelJdbcSupport<?>> supportClass = getJdbcSupport();\n        String table = getTableName();\n        List<String> columns = getColumnNames();\n        String condition = getCondition();\n        Collection<? extends JdbcAttribute> options = getOptions();\n\n        JdbcDescriptionUtil.checkCommonConfig(descriptionClass, modelType, supportClass, table, columns, options);\n\n        Map<String, String> configuration = new HashMap<>();\n        configuration.put(JdbcProcess.TABLE.key(), table);\n        configuration.put(JdbcProcess.COLUMNS.key(), JdbcDescriptionUtil.join(columns));\n        configuration.put(JdbcProcess.JDBC_SUPPORT.key(), supportClass.getName());\n        if (JdbcDescriptionUtil.isEmpty(condition) == false) {\n            configuration.put(JdbcProcess.CONDITION.key(), condition);\n        }\n        if (options != null && options.isEmpty() == false) {\n            configuration.put(JdbcProcess.OPTIONS.key(), JdbcDescriptionUtil.join(options.stream()\n                    .map(JdbcAttribute::getSymbol)\n                    .collect(Collectors.toList())));\n        }\n\n        Set<String> parameters = VariableTable.collectVariableNames(condition);\n        return new DriverScript(Constants.JDBC_RESOURCE_NAME, configuration, parameters);\n    }", "signature": "DriverScript getDriverScript()", "full_signature": "@Override public final DriverScript getDriverScript()", "class_method_signature": "JdbcImporterDescription.getDriverScript()", "testcase": false, "constructor": false, "invocations": ["getName", "getClass", "getModelType", "getJdbcSupport", "getTableName", "getColumnNames", "getCondition", "getOptions", "checkCommonConfig", "put", "key", "put", "key", "join", "put", "key", "getName", "isEmpty", "put", "key", "isEmpty", "put", "key", "join", "collect", "map", "stream", "toList", "collectVariableNames"]}, "repository": {"repo_id": 1545929, "url": "https://github.com/asakusafw/asakusafw", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 113, "size": 35236, "license": "licensed"}}