{"test_class": {"identifier": "JsonFormatTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PROPERTY_NAME = \"p\";", "modifier": "private static final", "type": "String", "declarator": "PROPERTY_NAME = \"p\"", "var_name": "PROPERTY_NAME"}, {"original_string": "private static final Set<InputOption> IOPTS = JsonFormat.DEFAULT_INPUT_OPTIONS;", "modifier": "private static final", "type": "Set<InputOption>", "declarator": "IOPTS = JsonFormat.DEFAULT_INPUT_OPTIONS", "var_name": "IOPTS"}, {"original_string": "private static final Set<OutputOption> OOPTS = JsonFormat.DEFAULT_OUTPUT_OPTIONS;", "modifier": "private static final", "type": "Set<OutputOption>", "declarator": "OOPTS = JsonFormat.DEFAULT_OUTPUT_OPTIONS", "var_name": "OOPTS"}, {"original_string": "ErrorAction onMalformedInput = ErrorAction.ERROR;", "modifier": "", "type": "ErrorAction", "declarator": "onMalformedInput = ErrorAction.ERROR", "var_name": "onMalformedInput"}, {"original_string": "ErrorAction onMissingInput = ErrorAction.ERROR;", "modifier": "", "type": "ErrorAction", "declarator": "onMissingInput = ErrorAction.ERROR", "var_name": "onMissingInput"}, {"original_string": "Charset inputCharset = StandardCharsets.UTF_8;", "modifier": "", "type": "Charset", "declarator": "inputCharset = StandardCharsets.UTF_8", "var_name": "inputCharset"}], "file": "core-project/json/src/test/java/com/asakusafw/runtime/io/json/JsonFormatTest.java"}, "test_case": {"identifier": "v_long_string", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void v_long_string() throws Exception {\n        JsonFormat<Data> format = builder((r, d) -> d.object = r.readLong(), (w, d) -> w.writeString(d.stringValue))\n                .build();\n        byte[] written = write(format, (data, v) -> data.stringValue = v, \"100\");\n        assertThat(read(format, written), contains(100L));\n    }", "signature": "void v_long_string()", "full_signature": "@Test public void v_long_string()", "class_method_signature": "JsonFormatTest.v_long_string()", "testcase": true, "constructor": false, "invocations": ["build", "builder", "readLong", "writeString", "write", "assertThat", "read", "contains"]}, "focal_class": {"identifier": "JsonFormat", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final JsonFactory DEFAULT_JSON_FACTORY = new JsonFactory();", "modifier": "public static final", "type": "JsonFactory", "declarator": "DEFAULT_JSON_FACTORY = new JsonFactory()", "var_name": "DEFAULT_JSON_FACTORY"}, {"original_string": "public static final Charset DEFAULT_CHARSET = StandardCharsets.UTF_8;", "modifier": "public static final", "type": "Charset", "declarator": "DEFAULT_CHARSET = StandardCharsets.UTF_8", "var_name": "DEFAULT_CHARSET"}, {"original_string": "public static final LineSeparator DEFAULT_LINE_SEPARATOR = LineSeparator.UNIX;", "modifier": "public static final", "type": "LineSeparator", "declarator": "DEFAULT_LINE_SEPARATOR = LineSeparator.UNIX", "var_name": "DEFAULT_LINE_SEPARATOR"}, {"original_string": "public static final boolean DEFAULT_USE_PLAIN_DECIMAL = false;", "modifier": "public static final", "type": "boolean", "declarator": "DEFAULT_USE_PLAIN_DECIMAL = false", "var_name": "DEFAULT_USE_PLAIN_DECIMAL"}, {"original_string": "public static final boolean DEFAULT_ESCAPE_NO_ASCII_CHARACTER = false;", "modifier": "public static final", "type": "boolean", "declarator": "DEFAULT_ESCAPE_NO_ASCII_CHARACTER = false", "var_name": "DEFAULT_ESCAPE_NO_ASCII_CHARACTER"}, {"original_string": "public static final ErrorAction DEFAULT_ON_UNKNOWN_INPUT = ErrorAction.ERROR;", "modifier": "public static final", "type": "ErrorAction", "declarator": "DEFAULT_ON_UNKNOWN_INPUT = ErrorAction.ERROR", "var_name": "DEFAULT_ON_UNKNOWN_INPUT"}, {"original_string": "private static final Map<Charset, JsonEncoding> ENCODING_MAP;", "modifier": "private static final", "type": "Map<Charset, JsonEncoding>", "declarator": "ENCODING_MAP", "var_name": "ENCODING_MAP"}, {"original_string": "public static final Set<InputOption> DEFAULT_INPUT_OPTIONS = Collections.unmodifiableSet(EnumSet.of(\n            InputOption.ENABLE_SOURCE_POSITION,\n            InputOption.ENABLE_RECORD_INDEX));", "modifier": "public static final", "type": "Set<InputOption>", "declarator": "DEFAULT_INPUT_OPTIONS = Collections.unmodifiableSet(EnumSet.of(\n            InputOption.ENABLE_SOURCE_POSITION,\n            InputOption.ENABLE_RECORD_INDEX))", "var_name": "DEFAULT_INPUT_OPTIONS"}, {"original_string": "public static final Set<OutputOption> DEFAULT_OUTPUT_OPTIONS = Collections.emptySet();", "modifier": "public static final", "type": "Set<OutputOption>", "declarator": "DEFAULT_OUTPUT_OPTIONS = Collections.emptySet()", "var_name": "DEFAULT_OUTPUT_OPTIONS"}, {"original_string": "private final JsonFactory factory = new JsonFactory();", "modifier": "private final", "type": "JsonFactory", "declarator": "factory = new JsonFactory()", "var_name": "factory"}, {"original_string": "private final List<PropertyInfo<T, ?>> properties;", "modifier": "private final", "type": "List<PropertyInfo<T, ?>>", "declarator": "properties", "var_name": "properties"}, {"original_string": "private final List<Pattern> excludes;", "modifier": "private final", "type": "List<Pattern>", "declarator": "excludes", "var_name": "excludes"}, {"original_string": "private final Charset charset;", "modifier": "private final", "type": "Charset", "declarator": "charset", "var_name": "charset"}, {"original_string": "private final LineSeparator lineSeparator;", "modifier": "private final", "type": "LineSeparator", "declarator": "lineSeparator", "var_name": "lineSeparator"}, {"original_string": "private final boolean usePlainDecimal;", "modifier": "private final", "type": "boolean", "declarator": "usePlainDecimal", "var_name": "usePlainDecimal"}, {"original_string": "private final boolean escapeNoAsciiCharacter;", "modifier": "private final", "type": "boolean", "declarator": "escapeNoAsciiCharacter", "var_name": "escapeNoAsciiCharacter"}, {"original_string": "private final ErrorAction onUnknownInput;", "modifier": "private final", "type": "ErrorAction", "declarator": "onUnknownInput", "var_name": "onUnknownInput"}], "methods": [{"identifier": "JsonFormat", "parameters": "(Builder<T> builder)", "modifiers": "protected", "return": "", "signature": " JsonFormat(Builder<T> builder)", "full_signature": "protected  JsonFormat(Builder<T> builder)", "class_method_signature": "JsonFormat.JsonFormat(Builder<T> builder)", "testcase": false, "constructor": true}, {"identifier": "builder", "parameters": "(Class<T> dataType)", "modifiers": "public static", "return": "Builder<T>", "signature": "Builder<T> builder(Class<T> dataType)", "full_signature": "public static Builder<T> builder(Class<T> dataType)", "class_method_signature": "JsonFormat.builder(Class<T> dataType)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(\n            String path, InputStream input, Collection<? extends InputOption> options)", "modifiers": "public", "return": "JsonInput<T>", "signature": "JsonInput<T> open(\n            String path, InputStream input, Collection<? extends InputOption> options)", "full_signature": "public JsonInput<T> open(\n            String path, InputStream input, Collection<? extends InputOption> options)", "class_method_signature": "JsonFormat.open(\n            String path, InputStream input, Collection<? extends InputOption> options)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(\n            String path, OutputStream output, Collection<? extends OutputOption> options)", "modifiers": "public", "return": "JsonOutput<T>", "signature": "JsonOutput<T> open(\n            String path, OutputStream output, Collection<? extends OutputOption> options)", "full_signature": "public JsonOutput<T> open(\n            String path, OutputStream output, Collection<? extends OutputOption> options)", "class_method_signature": "JsonFormat.open(\n            String path, OutputStream output, Collection<? extends OutputOption> options)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(\n            String path, Reader input, Collection<? extends InputOption> options)", "modifiers": "public", "return": "JsonInput<T>", "signature": "JsonInput<T> open(\n            String path, Reader input, Collection<? extends InputOption> options)", "full_signature": "public JsonInput<T> open(\n            String path, Reader input, Collection<? extends InputOption> options)", "class_method_signature": "JsonFormat.open(\n            String path, Reader input, Collection<? extends InputOption> options)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(\n            String path, Writer output, Collection<? extends OutputOption> options)", "modifiers": "public", "return": "JsonOutput<T>", "signature": "JsonOutput<T> open(\n            String path, Writer output, Collection<? extends OutputOption> options)", "full_signature": "public JsonOutput<T> open(\n            String path, Writer output, Collection<? extends OutputOption> options)", "class_method_signature": "JsonFormat.open(\n            String path, Writer output, Collection<? extends OutputOption> options)", "testcase": false, "constructor": false}, {"identifier": "createInput", "parameters": "(String path, JsonParser parser, Collection<? extends InputOption> options)", "modifiers": "private", "return": "JsonInput<T>", "signature": "JsonInput<T> createInput(String path, JsonParser parser, Collection<? extends InputOption> options)", "full_signature": "private JsonInput<T> createInput(String path, JsonParser parser, Collection<? extends InputOption> options)", "class_method_signature": "JsonFormat.createInput(String path, JsonParser parser, Collection<? extends InputOption> options)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(JsonParser parser, JsonParser.Feature feature, boolean enabled)", "modifiers": "private static", "return": "void", "signature": "void configure(JsonParser parser, JsonParser.Feature feature, boolean enabled)", "full_signature": "private static void configure(JsonParser parser, JsonParser.Feature feature, boolean enabled)", "class_method_signature": "JsonFormat.configure(JsonParser parser, JsonParser.Feature feature, boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(String path, JsonGenerator generator, Collection<? extends OutputOption> options)", "modifiers": "private", "return": "JsonOutput<T>", "signature": "JsonOutput<T> open(String path, JsonGenerator generator, Collection<? extends OutputOption> options)", "full_signature": "private JsonOutput<T> open(String path, JsonGenerator generator, Collection<? extends OutputOption> options)", "class_method_signature": "JsonFormat.open(String path, JsonGenerator generator, Collection<? extends OutputOption> options)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(JsonGenerator generator, JsonGenerator.Feature feature, boolean enabled)", "modifiers": "private static", "return": "void", "signature": "void configure(JsonGenerator generator, JsonGenerator.Feature feature, boolean enabled)", "full_signature": "private static void configure(JsonGenerator generator, JsonGenerator.Feature feature, boolean enabled)", "class_method_signature": "JsonFormat.configure(JsonGenerator generator, JsonGenerator.Feature feature, boolean enabled)", "testcase": false, "constructor": false}], "file": "core-project/json/src/main/java/com/asakusafw/runtime/io/json/JsonFormat.java"}, "focal_method": {"identifier": "builder", "parameters": "(Class<T> dataType)", "modifiers": "public static", "return": "Builder<T>", "body": "public static <T> Builder<T> builder(Class<T> dataType) {\n        return new Builder<>(dataType);\n    }", "signature": "Builder<T> builder(Class<T> dataType)", "full_signature": "public static Builder<T> builder(Class<T> dataType)", "class_method_signature": "JsonFormat.builder(Class<T> dataType)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1545929, "url": "https://github.com/asakusafw/asakusafw", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 113, "size": 35236, "license": "licensed"}}