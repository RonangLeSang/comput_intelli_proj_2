{"test_class": {"identifier": "BasicParameterTableTest", "superclass": "", "interfaces": "", "fields": [], "file": "iterative-project/asakusa-iterative-common/src/test/java/com/asakusafw/iterative/common/basic/BasicParameterTableTest.java"}, "test_case": {"identifier": "partial", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void partial() {\n        ParameterTable t = new BasicParameterTable.BasicBuilder()\n                .next().put(\"a\", \"A1\").put(\"b\", \"B1\").put(\"c\", \"C1\")\n                .next().put(\"a\", \"A2\").put(\"b\", \"B2\")\n                .next().put(\"a\", \"A3\").put(\"c\", \"C3\")\n                .build();\n\n        assertThat(t.getPartial(), containsInAnyOrder(\"b\", \"c\"));\n    }", "signature": "void partial()", "full_signature": "@Test public void partial()", "class_method_signature": "BasicParameterTableTest.partial()", "testcase": true, "constructor": false, "invocations": ["build", "put", "put", "next", "put", "put", "next", "put", "put", "put", "next", "assertThat", "getPartial", "containsInAnyOrder"]}, "focal_class": {"identifier": "BasicParameterTable", "superclass": "", "interfaces": "implements ParameterTable", "fields": [{"original_string": "private final List<Map<String, String>> entity;", "modifier": "private final", "type": "List<Map<String, String>>", "declarator": "entity", "var_name": "entity"}], "methods": [{"identifier": "BasicParameterTable", "parameters": "(List<? extends Map<String, String>> entity)", "modifiers": "public", "return": "", "signature": " BasicParameterTable(List<? extends Map<String, String>> entity)", "full_signature": "public  BasicParameterTable(List<? extends Map<String, String>> entity)", "class_method_signature": "BasicParameterTable.BasicParameterTable(List<? extends Map<String, String>> entity)", "testcase": false, "constructor": true}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<ParameterSet>", "signature": "Iterator<ParameterSet> iterator()", "full_signature": "@Override public Iterator<ParameterSet> iterator()", "class_method_signature": "BasicParameterTable.iterator()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "BasicParameterTable.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "getRowCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getRowCount()", "full_signature": "@Override public int getRowCount()", "class_method_signature": "BasicParameterTable.getRowCount()", "testcase": false, "constructor": false}, {"identifier": "newCursor", "parameters": "()", "modifiers": "@Override public", "return": "Cursor", "signature": "Cursor newCursor()", "full_signature": "@Override public Cursor newCursor()", "class_method_signature": "BasicParameterTable.newCursor()", "testcase": false, "constructor": false}, {"identifier": "getAvailable", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getAvailable()", "full_signature": "@Override public Set<String> getAvailable()", "class_method_signature": "BasicParameterTable.getAvailable()", "testcase": false, "constructor": false}, {"identifier": "getPartial", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getPartial()", "full_signature": "@Override public Set<String> getPartial()", "class_method_signature": "BasicParameterTable.getPartial()", "testcase": false, "constructor": false}, {"identifier": "getRows", "parameters": "()", "modifiers": "@Override public", "return": "List<ParameterSet>", "signature": "List<ParameterSet> getRows()", "full_signature": "@Override public List<ParameterSet> getRows()", "class_method_signature": "BasicParameterTable.getRows()", "testcase": false, "constructor": false}], "file": "iterative-project/asakusa-iterative-common/src/main/java/com/asakusafw/iterative/common/basic/BasicParameterTable.java"}, "focal_method": {"identifier": "getPartial", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "body": "@Override\n    public Set<String> getPartial() {\n        Set<String> available = getAvailable();\n        Set<String> results = new HashSet<>();\n        for (Map<String, String> map : entity) {\n            for (String key : available) {\n                if (map.get(key) == null) {\n                    results.add(key);\n                }\n            }\n            if (available.size() == results.size()) {\n                break;\n            }\n        }\n        return results;\n    }", "signature": "Set<String> getPartial()", "full_signature": "@Override public Set<String> getPartial()", "class_method_signature": "BasicParameterTable.getPartial()", "testcase": false, "constructor": false, "invocations": ["getAvailable", "get", "add", "size", "size"]}, "repository": {"repo_id": 1545929, "url": "https://github.com/asakusafw/asakusafw", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 113, "size": 35236, "license": "licensed"}}