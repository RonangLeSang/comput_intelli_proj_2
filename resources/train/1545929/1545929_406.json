{"test_class": {"identifier": "ExecutionTaskTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public final TemporaryFolder folder = new TemporaryFolder();", "modifier": "@Rule\n    public final", "type": "TemporaryFolder", "declarator": "folder = new TemporaryFolder()", "var_name": "folder"}], "file": "yaess-project/asakusa-yaess-core/src/test/java/com/asakusafw/yaess/core/task/ExecutionTaskTest.java"}, "test_case": {"identifier": "phase_epilogue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void phase_epilogue() throws Exception {\n        ProfileBuilder prf = new ProfileBuilder(folder.getRoot());\n        ExecutionTask task = prf.task();\n        task.executePhase(\"batch\", \"testing\", \"f-pro\", ExecutionPhase.EPILOGUE);\n\n        List<Record> results = SerialExecutionTracker.get(prf.trackingId);\n        verifyPhaseOrder(results);\n\n        assertThat(results.size(), is(1));\n        List<Record> records = phase(results, \"testing\", ExecutionPhase.EPILOGUE);\n        assertThat(records, is(results));\n    }", "signature": "void phase_epilogue()", "full_signature": "@Test public void phase_epilogue()", "class_method_signature": "ExecutionTaskTest.phase_epilogue()", "testcase": true, "constructor": false, "invocations": ["getRoot", "task", "executePhase", "get", "verifyPhaseOrder", "assertThat", "size", "is", "phase", "assertThat", "is"]}, "focal_class": {"identifier": "ExecutionTask", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String KEY_SKIP_FLOWS = \"skipFlows\";", "modifier": "static final", "type": "String", "declarator": "KEY_SKIP_FLOWS = \"skipFlows\"", "var_name": "KEY_SKIP_FLOWS"}, {"original_string": "static final String KEY_SERIALIZE_FLOWS = \"serializeFlows\";", "modifier": "static final", "type": "String", "declarator": "KEY_SERIALIZE_FLOWS = \"serializeFlows\"", "var_name": "KEY_SERIALIZE_FLOWS"}, {"original_string": "static final String KEY_VERIFY_APPLICATION = \"verifyApplication\";", "modifier": "static final", "type": "String", "declarator": "KEY_VERIFY_APPLICATION = \"verifyApplication\"", "var_name": "KEY_VERIFY_APPLICATION"}, {"original_string": "static final String KEY_VERIFY_DRYRUN = \"dryRun\";", "modifier": "static final", "type": "String", "declarator": "KEY_VERIFY_DRYRUN = \"dryRun\"", "var_name": "KEY_VERIFY_DRYRUN"}, {"original_string": "static final YaessLogger YSLOG = new YaessCoreLogger(ExecutionTask.class);", "modifier": "static final", "type": "YaessLogger", "declarator": "YSLOG = new YaessCoreLogger(ExecutionTask.class)", "var_name": "YSLOG"}, {"original_string": "static final Logger LOG = LoggerFactory.getLogger(ExecutionTask.class);", "modifier": "static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ExecutionTask.class)", "var_name": "LOG"}, {"original_string": "private final ExecutionMonitorProvider monitors;", "modifier": "private final", "type": "ExecutionMonitorProvider", "declarator": "monitors", "var_name": "monitors"}, {"original_string": "private final ExecutionLockProvider locks;", "modifier": "private final", "type": "ExecutionLockProvider", "declarator": "locks", "var_name": "locks"}, {"original_string": "private final JobScheduler scheduler;", "modifier": "private final", "type": "JobScheduler", "declarator": "scheduler", "var_name": "scheduler"}, {"original_string": "private final HadoopScriptHandler hadoopHandler;", "modifier": "private final", "type": "HadoopScriptHandler", "declarator": "hadoopHandler", "var_name": "hadoopHandler"}, {"original_string": "private final Map<String, CommandScriptHandler> commandHandlers;", "modifier": "private final", "type": "Map<String, CommandScriptHandler>", "declarator": "commandHandlers", "var_name": "commandHandlers"}, {"original_string": "private final BatchScript script;", "modifier": "private final", "type": "BatchScript", "declarator": "script", "var_name": "script"}, {"original_string": "private final Map<String, String> batchArguments;", "modifier": "private final", "type": "Map<String, String>", "declarator": "batchArguments", "var_name": "batchArguments"}, {"original_string": "private final Map<String, String> environmentVaritables = new ConcurrentHashMap<>();", "modifier": "private final", "type": "Map<String, String>", "declarator": "environmentVaritables = new ConcurrentHashMap<>()", "var_name": "environmentVaritables"}, {"original_string": "private final Map<String, Blob> extensions;", "modifier": "private final", "type": "Map<String, Blob>", "declarator": "extensions", "var_name": "extensions"}, {"original_string": "private final Set<String> skipFlows = Collections.synchronizedSet(new HashSet<String>());", "modifier": "private final", "type": "Set<String>", "declarator": "skipFlows = Collections.synchronizedSet(new HashSet<String>())", "var_name": "skipFlows"}, {"original_string": "private volatile RuntimeContext runtimeContext;", "modifier": "private volatile", "type": "RuntimeContext", "declarator": "runtimeContext", "var_name": "runtimeContext"}, {"original_string": "private volatile boolean serializeFlows = false;", "modifier": "private volatile", "type": "boolean", "declarator": "serializeFlows = false", "var_name": "serializeFlows"}], "methods": [{"identifier": "ExecutionTask", "parameters": "(\n            ExecutionMonitorProvider monitors,\n            ExecutionLockProvider locks,\n            JobScheduler scheduler,\n            HadoopScriptHandler hadoopHandler,\n            Map<String, CommandScriptHandler> commandHandlers,\n            BatchScript script,\n            Map<String, String> batchArguments,\n            Map<String, Blob> extensions)", "modifiers": "", "return": "", "signature": " ExecutionTask(\n            ExecutionMonitorProvider monitors,\n            ExecutionLockProvider locks,\n            JobScheduler scheduler,\n            HadoopScriptHandler hadoopHandler,\n            Map<String, CommandScriptHandler> commandHandlers,\n            BatchScript script,\n            Map<String, String> batchArguments,\n            Map<String, Blob> extensions)", "full_signature": "  ExecutionTask(\n            ExecutionMonitorProvider monitors,\n            ExecutionLockProvider locks,\n            JobScheduler scheduler,\n            HadoopScriptHandler hadoopHandler,\n            Map<String, CommandScriptHandler> commandHandlers,\n            BatchScript script,\n            Map<String, String> batchArguments,\n            Map<String, Blob> extensions)", "class_method_signature": "ExecutionTask.ExecutionTask(\n            ExecutionMonitorProvider monitors,\n            ExecutionLockProvider locks,\n            JobScheduler scheduler,\n            HadoopScriptHandler hadoopHandler,\n            Map<String, CommandScriptHandler> commandHandlers,\n            BatchScript script,\n            Map<String, String> batchArguments,\n            Map<String, Blob> extensions)", "testcase": false, "constructor": true}, {"identifier": "load", "parameters": "(\n            YaessProfile profile,\n            Properties script,\n            Map<String, String> batchArguments)", "modifiers": "public static", "return": "ExecutionTask", "signature": "ExecutionTask load(\n            YaessProfile profile,\n            Properties script,\n            Map<String, String> batchArguments)", "full_signature": "public static ExecutionTask load(\n            YaessProfile profile,\n            Properties script,\n            Map<String, String> batchArguments)", "class_method_signature": "ExecutionTask.load(\n            YaessProfile profile,\n            Properties script,\n            Map<String, String> batchArguments)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(\n            YaessProfile profile,\n            Properties script,\n            Map<String, String> batchArguments,\n            Map<String, String> yaessArguments)", "modifiers": "public static", "return": "ExecutionTask", "signature": "ExecutionTask load(\n            YaessProfile profile,\n            Properties script,\n            Map<String, String> batchArguments,\n            Map<String, String> yaessArguments)", "full_signature": "public static ExecutionTask load(\n            YaessProfile profile,\n            Properties script,\n            Map<String, String> batchArguments,\n            Map<String, String> yaessArguments)", "class_method_signature": "ExecutionTask.load(\n            YaessProfile profile,\n            Properties script,\n            Map<String, String> batchArguments,\n            Map<String, String> yaessArguments)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(\n            YaessProfile profile,\n            Properties script,\n            Map<String, String> batchArguments,\n            Map<String, String> yaessArguments,\n            Map<String, Blob> extensions)", "modifiers": "public static", "return": "ExecutionTask", "signature": "ExecutionTask load(\n            YaessProfile profile,\n            Properties script,\n            Map<String, String> batchArguments,\n            Map<String, String> yaessArguments,\n            Map<String, Blob> extensions)", "full_signature": "public static ExecutionTask load(\n            YaessProfile profile,\n            Properties script,\n            Map<String, String> batchArguments,\n            Map<String, String> yaessArguments,\n            Map<String, Blob> extensions)", "class_method_signature": "ExecutionTask.load(\n            YaessProfile profile,\n            Properties script,\n            Map<String, String> batchArguments,\n            Map<String, String> yaessArguments,\n            Map<String, Blob> extensions)", "testcase": false, "constructor": false}, {"identifier": "consumeRuntimeContext", "parameters": "(\n            ExecutionTask result,\n            Map<String, String> copyDefinitions,\n            BatchScript script)", "modifiers": "private static", "return": "void", "signature": "void consumeRuntimeContext(\n            ExecutionTask result,\n            Map<String, String> copyDefinitions,\n            BatchScript script)", "full_signature": "private static void consumeRuntimeContext(\n            ExecutionTask result,\n            Map<String, String> copyDefinitions,\n            BatchScript script)", "class_method_signature": "ExecutionTask.consumeRuntimeContext(\n            ExecutionTask result,\n            Map<String, String> copyDefinitions,\n            BatchScript script)", "testcase": false, "constructor": false}, {"identifier": "consumeSkipFlows", "parameters": "(\n            ExecutionTask task,\n            Map<String, String> copyDefinitions,\n            BatchScript script)", "modifiers": "private static", "return": "void", "signature": "void consumeSkipFlows(\n            ExecutionTask task,\n            Map<String, String> copyDefinitions,\n            BatchScript script)", "full_signature": "private static void consumeSkipFlows(\n            ExecutionTask task,\n            Map<String, String> copyDefinitions,\n            BatchScript script)", "class_method_signature": "ExecutionTask.consumeSkipFlows(\n            ExecutionTask task,\n            Map<String, String> copyDefinitions,\n            BatchScript script)", "testcase": false, "constructor": false}, {"identifier": "consumeSerializeFlows", "parameters": "(\n            ExecutionTask task,\n            Map<String, String> copyDefinitions,\n            BatchScript script)", "modifiers": "private static", "return": "void", "signature": "void consumeSerializeFlows(\n            ExecutionTask task,\n            Map<String, String> copyDefinitions,\n            BatchScript script)", "full_signature": "private static void consumeSerializeFlows(\n            ExecutionTask task,\n            Map<String, String> copyDefinitions,\n            BatchScript script)", "class_method_signature": "ExecutionTask.consumeSerializeFlows(\n            ExecutionTask task,\n            Map<String, String> copyDefinitions,\n            BatchScript script)", "testcase": false, "constructor": false}, {"identifier": "consumeBoolean", "parameters": "(Map<String, String> copyDefinitions, String key)", "modifiers": "private static", "return": "Ternary", "signature": "Ternary consumeBoolean(Map<String, String> copyDefinitions, String key)", "full_signature": "private static Ternary consumeBoolean(Map<String, String> copyDefinitions, String key)", "class_method_signature": "ExecutionTask.consumeBoolean(Map<String, String> copyDefinitions, String key)", "testcase": false, "constructor": false}, {"identifier": "checkRest", "parameters": "(Map<String, String> copyDefinitions)", "modifiers": "private static", "return": "void", "signature": "void checkRest(Map<String, String> copyDefinitions)", "full_signature": "private static void checkRest(Map<String, String> copyDefinitions)", "class_method_signature": "ExecutionTask.checkRest(Map<String, String> copyDefinitions)", "testcase": false, "constructor": false}, {"identifier": "getSkipFlows", "parameters": "()", "modifiers": "", "return": "Set<String>", "signature": "Set<String> getSkipFlows()", "full_signature": " Set<String> getSkipFlows()", "class_method_signature": "ExecutionTask.getSkipFlows()", "testcase": false, "constructor": false}, {"identifier": "setSerializeFlows", "parameters": "(boolean serialize)", "modifiers": "", "return": "void", "signature": "void setSerializeFlows(boolean serialize)", "full_signature": " void setSerializeFlows(boolean serialize)", "class_method_signature": "ExecutionTask.setSerializeFlows(boolean serialize)", "testcase": false, "constructor": false}, {"identifier": "setRuntimeContext", "parameters": "(RuntimeContext runtimeContext)", "modifiers": "", "return": "void", "signature": "void setRuntimeContext(RuntimeContext runtimeContext)", "full_signature": " void setRuntimeContext(RuntimeContext runtimeContext)", "class_method_signature": "ExecutionTask.setRuntimeContext(RuntimeContext runtimeContext)", "testcase": false, "constructor": false}, {"identifier": "getEnv", "parameters": "()", "modifiers": "", "return": "Map<String, String>", "signature": "Map<String, String> getEnv()", "full_signature": " Map<String, String> getEnv()", "class_method_signature": "ExecutionTask.getEnv()", "testcase": false, "constructor": false}, {"identifier": "executeBatch", "parameters": "(String batchId)", "modifiers": "public", "return": "void", "signature": "void executeBatch(String batchId)", "full_signature": "public void executeBatch(String batchId)", "class_method_signature": "ExecutionTask.executeBatch(String batchId)", "testcase": false, "constructor": false}, {"identifier": "acquireExecutionLock", "parameters": "(String batchId)", "modifiers": "private", "return": "ExecutionLock", "signature": "ExecutionLock acquireExecutionLock(String batchId)", "full_signature": "private ExecutionLock acquireExecutionLock(String batchId)", "class_method_signature": "ExecutionTask.acquireExecutionLock(String batchId)", "testcase": false, "constructor": false}, {"identifier": "obtainPhaseMonitor", "parameters": "(ExecutionContext context)", "modifiers": "private", "return": "PhaseMonitor", "signature": "PhaseMonitor obtainPhaseMonitor(ExecutionContext context)", "full_signature": "private PhaseMonitor obtainPhaseMonitor(ExecutionContext context)", "class_method_signature": "ExecutionTask.obtainPhaseMonitor(ExecutionContext context)", "testcase": false, "constructor": false}, {"identifier": "createJobflowExecutor", "parameters": "(String batchId)", "modifiers": "private", "return": "ExecutorService", "signature": "ExecutorService createJobflowExecutor(String batchId)", "full_signature": "private ExecutorService createJobflowExecutor(String batchId)", "class_method_signature": "ExecutionTask.createJobflowExecutor(String batchId)", "testcase": false, "constructor": false}, {"identifier": "executeFlow", "parameters": "(\n            String batchId,\n            String flowId,\n            String executionId)", "modifiers": "public", "return": "void", "signature": "void executeFlow(\n            String batchId,\n            String flowId,\n            String executionId)", "full_signature": "public void executeFlow(\n            String batchId,\n            String flowId,\n            String executionId)", "class_method_signature": "ExecutionTask.executeFlow(\n            String batchId,\n            String flowId,\n            String executionId)", "testcase": false, "constructor": false}, {"identifier": "executePhase", "parameters": "(\n            String batchId,\n            String flowId,\n            String executionId,\n            ExecutionPhase phase)", "modifiers": "public", "return": "void", "signature": "void executePhase(\n            String batchId,\n            String flowId,\n            String executionId,\n            ExecutionPhase phase)", "full_signature": "public void executePhase(\n            String batchId,\n            String flowId,\n            String executionId,\n            ExecutionPhase phase)", "class_method_signature": "ExecutionTask.executePhase(\n            String batchId,\n            String flowId,\n            String executionId,\n            ExecutionPhase phase)", "testcase": false, "constructor": false}, {"identifier": "newContext", "parameters": "(String batchId, String flowId, String executionId, ExecutionPhase phase)", "modifiers": "private", "return": "ExecutionContext", "signature": "ExecutionContext newContext(String batchId, String flowId, String executionId, ExecutionPhase phase)", "full_signature": "private ExecutionContext newContext(String batchId, String flowId, String executionId, ExecutionPhase phase)", "class_method_signature": "ExecutionTask.newContext(String batchId, String flowId, String executionId, ExecutionPhase phase)", "testcase": false, "constructor": false}, {"identifier": "executePhase", "parameters": "(ExecutionContext context)", "modifiers": "public", "return": "void", "signature": "void executePhase(ExecutionContext context)", "full_signature": "public void executePhase(ExecutionContext context)", "class_method_signature": "ExecutionTask.executePhase(ExecutionContext context)", "testcase": false, "constructor": false}, {"identifier": "executeFlow", "parameters": "(String batchId, FlowScript flow, String executionId)", "modifiers": "", "return": "void", "signature": "void executeFlow(String batchId, FlowScript flow, String executionId)", "full_signature": " void executeFlow(String batchId, FlowScript flow, String executionId)", "class_method_signature": "ExecutionTask.executeFlow(String batchId, FlowScript flow, String executionId)", "testcase": false, "constructor": false}, {"identifier": "executePhase", "parameters": "(\n            String batchId,\n            FlowScript flow,\n            String executionId,\n            ExecutionPhase phase)", "modifiers": "private", "return": "void", "signature": "void executePhase(\n            String batchId,\n            FlowScript flow,\n            String executionId,\n            ExecutionPhase phase)", "full_signature": "private void executePhase(\n            String batchId,\n            FlowScript flow,\n            String executionId,\n            ExecutionPhase phase)", "class_method_signature": "ExecutionTask.executePhase(\n            String batchId,\n            FlowScript flow,\n            String executionId,\n            ExecutionPhase phase)", "testcase": false, "constructor": false}, {"identifier": "executePhase", "parameters": "(\n            ExecutionContext context,\n            Set<ExecutionScript> executions,\n            Set<ExecutionScript.Kind> enables)", "modifiers": "private", "return": "void", "signature": "void executePhase(\n            ExecutionContext context,\n            Set<ExecutionScript> executions,\n            Set<ExecutionScript.Kind> enables)", "full_signature": "private void executePhase(\n            ExecutionContext context,\n            Set<ExecutionScript> executions,\n            Set<ExecutionScript.Kind> enables)", "class_method_signature": "ExecutionTask.executePhase(\n            ExecutionContext context,\n            Set<ExecutionScript> executions,\n            Set<ExecutionScript.Kind> enables)", "testcase": false, "constructor": false}, {"identifier": "buildSetupJobs", "parameters": "(ExecutionContext context, Set<ExecutionScript.Kind> enables)", "modifiers": "private", "return": "List<SetupJob>", "signature": "List<SetupJob> buildSetupJobs(ExecutionContext context, Set<ExecutionScript.Kind> enables)", "full_signature": "private List<SetupJob> buildSetupJobs(ExecutionContext context, Set<ExecutionScript.Kind> enables)", "class_method_signature": "ExecutionTask.buildSetupJobs(ExecutionContext context, Set<ExecutionScript.Kind> enables)", "testcase": false, "constructor": false}, {"identifier": "buildCleanupJobs", "parameters": "(ExecutionContext context, Set<ExecutionScript.Kind> enables)", "modifiers": "private", "return": "List<CleanupJob>", "signature": "List<CleanupJob> buildCleanupJobs(ExecutionContext context, Set<ExecutionScript.Kind> enables)", "full_signature": "private List<CleanupJob> buildCleanupJobs(ExecutionContext context, Set<ExecutionScript.Kind> enables)", "class_method_signature": "ExecutionTask.buildCleanupJobs(ExecutionContext context, Set<ExecutionScript.Kind> enables)", "testcase": false, "constructor": false}, {"identifier": "buildExecutionJobs", "parameters": "(\n            ExecutionContext context,\n            Set<ExecutionScript> executions,\n            Set<ExecutionScript.Kind> enables)", "modifiers": "private", "return": "List<ScriptJob<?>>", "signature": "List<ScriptJob<?>> buildExecutionJobs(\n            ExecutionContext context,\n            Set<ExecutionScript> executions,\n            Set<ExecutionScript.Kind> enables)", "full_signature": "private List<ScriptJob<?>> buildExecutionJobs(\n            ExecutionContext context,\n            Set<ExecutionScript> executions,\n            Set<ExecutionScript.Kind> enables)", "class_method_signature": "ExecutionTask.buildExecutionJobs(\n            ExecutionContext context,\n            Set<ExecutionScript> executions,\n            Set<ExecutionScript.Kind> enables)", "testcase": false, "constructor": false}], "file": "yaess-project/asakusa-yaess-core/src/main/java/com/asakusafw/yaess/core/task/ExecutionTask.java"}, "focal_method": {"identifier": "executePhase", "parameters": "(\n            String batchId,\n            String flowId,\n            String executionId,\n            ExecutionPhase phase)", "modifiers": "public", "return": "void", "body": "public void executePhase(\n            String batchId,\n            String flowId,\n            String executionId,\n            ExecutionPhase phase) throws InterruptedException, IOException {\n        if (batchId == null) {\n            throw new IllegalArgumentException(\"batchId must not be null\"); //$NON-NLS-1$\n        }\n        if (flowId == null) {\n            throw new IllegalArgumentException(\"flowId must not be null\"); //$NON-NLS-1$\n        }\n        if (executionId == null) {\n            throw new IllegalArgumentException(\"executionId must not be null\"); //$NON-NLS-1$\n        }\n        if (phase == null) {\n            throw new IllegalArgumentException(\"phase must not be null\"); //$NON-NLS-1$\n        }\n        ExecutionContext context = newContext(batchId, flowId, executionId, phase);\n        executePhase(context);\n    }", "signature": "void executePhase(\n            String batchId,\n            String flowId,\n            String executionId,\n            ExecutionPhase phase)", "full_signature": "public void executePhase(\n            String batchId,\n            String flowId,\n            String executionId,\n            ExecutionPhase phase)", "class_method_signature": "ExecutionTask.executePhase(\n            String batchId,\n            String flowId,\n            String executionId,\n            ExecutionPhase phase)", "testcase": false, "constructor": false, "invocations": ["newContext", "executePhase"]}, "repository": {"repo_id": 1545929, "url": "https://github.com/asakusafw/asakusafw", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 113, "size": 35236, "license": "licensed"}}