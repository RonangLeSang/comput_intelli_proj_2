{"test_class": {"identifier": "SortableSlotTest", "superclass": "", "interfaces": "", "fields": [], "file": "core-project/asakusa-runtime/src/test/java/com/asakusafw/runtime/stage/collector/SortableSlotTest.java"}, "test_case": {"identifier": "addByte", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void addByte() throws Exception {\n        Map<String, SortableSlot> slots = new HashMap<>();\n        slots.put(\"min\", createWithByte(Byte.MIN_VALUE));\n        slots.put(\"min-half\", createWithByte(Byte.MIN_VALUE / 2));\n        slots.put(\"-1\", createWithByte(-1));\n        slots.put(\"0\", createWithByte(0));\n        slots.put(\"1\", createWithByte(1));\n        slots.put(\"max-half\", createWithByte(Byte.MAX_VALUE / 2));\n        slots.put(\"max\", createWithByte(Byte.MAX_VALUE));\n\n        slots.put(\"0,-1\", createWithByte(0));\n        slots.get(\"0,-1\").addByte(-1);\n\n        slots.put(\"0,0\", createWithByte(0));\n        slots.get(\"0,0\").addByte(-1);\n\n        slots.put(\"0,1\", createWithByte(0));\n        slots.get(\"0,1\").addByte(-1);\n\n        List<SortableSlot> copy = new ArrayList<>(slots.values());\n        Collections.sort(copy);\n\n        assertThat(copy.get(0), is(slots.get(\"min\")));\n        assertThat(copy.get(1), is(slots.get(\"min-half\")));\n        assertThat(copy.get(2), is(slots.get(\"-1\")));\n        assertThat(copy.get(3), is(slots.get(\"0\")));\n        assertThat(copy.get(4), is(slots.get(\"0,-1\")));\n        assertThat(copy.get(5), is(slots.get(\"0,0\")));\n        assertThat(copy.get(6), is(slots.get(\"0,1\")));\n        assertThat(copy.get(7), is(slots.get(\"1\")));\n        assertThat(copy.get(8), is(slots.get(\"max-half\")));\n        assertThat(copy.get(9), is(slots.get(\"max\")));\n    }", "signature": "void addByte()", "full_signature": "@Test public void addByte()", "class_method_signature": "SortableSlotTest.addByte()", "testcase": true, "constructor": false, "invocations": ["put", "createWithByte", "put", "createWithByte", "put", "createWithByte", "put", "createWithByte", "put", "createWithByte", "put", "createWithByte", "put", "createWithByte", "put", "createWithByte", "addByte", "get", "put", "createWithByte", "addByte", "get", "put", "createWithByte", "addByte", "get", "values", "sort", "assertThat", "get", "is", "get", "assertThat", "get", "is", "get", "assertThat", "get", "is", "get", "assertThat", "get", "is", "get", "assertThat", "get", "is", "get", "assertThat", "get", "is", "get", "assertThat", "get", "is", "get", "assertThat", "get", "is", "get", "assertThat", "get", "is", "get", "assertThat", "get", "is", "get"]}, "focal_class": {"identifier": "SortableSlot", "superclass": "", "interfaces": "implements WritableComparable<SortableSlot>", "fields": [{"original_string": "static final int GROUPING_BITS = 10;", "modifier": "static final", "type": "int", "declarator": "GROUPING_BITS = 10", "var_name": "GROUPING_BITS"}, {"original_string": "public static final String NAME_BEGIN = \"begin\";", "modifier": "public static final", "type": "String", "declarator": "NAME_BEGIN = \"begin\"", "var_name": "NAME_BEGIN"}, {"original_string": "public static final String NAME_ADD_BYTE = \"addByte\";", "modifier": "public static final", "type": "String", "declarator": "NAME_ADD_BYTE = \"addByte\"", "var_name": "NAME_ADD_BYTE"}, {"original_string": "public static final String NAME_ADD_RANDOM = \"addRandom\";", "modifier": "public static final", "type": "String", "declarator": "NAME_ADD_RANDOM = \"addRandom\"", "var_name": "NAME_ADD_RANDOM"}, {"original_string": "public static final String NAME_ADD = \"add\";", "modifier": "public static final", "type": "String", "declarator": "NAME_ADD = \"add\"", "var_name": "NAME_ADD"}, {"original_string": "private final SecureRandom random = new SecureRandom();", "modifier": "private final", "type": "SecureRandom", "declarator": "random = new SecureRandom()", "var_name": "random"}, {"original_string": "private final DataBuffer buffer = new DataBuffer();", "modifier": "private final", "type": "DataBuffer", "declarator": "buffer = new DataBuffer()", "var_name": "buffer"}, {"original_string": "private int slotNumber = -1;", "modifier": "private", "type": "int", "declarator": "slotNumber = -1", "var_name": "slotNumber"}], "methods": [{"identifier": "begin", "parameters": "(int slot)", "modifiers": "public", "return": "void", "signature": "void begin(int slot)", "full_signature": "public void begin(int slot)", "class_method_signature": "SortableSlot.begin(int slot)", "testcase": false, "constructor": false}, {"identifier": "getSlot", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSlot()", "full_signature": "public int getSlot()", "class_method_signature": "SortableSlot.getSlot()", "testcase": false, "constructor": false}, {"identifier": "addByte", "parameters": "(int data)", "modifiers": "public", "return": "void", "signature": "void addByte(int data)", "full_signature": "public void addByte(int data)", "class_method_signature": "SortableSlot.addByte(int data)", "testcase": false, "constructor": false}, {"identifier": "addRandom", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void addRandom()", "full_signature": "public void addRandom()", "class_method_signature": "SortableSlot.addRandom()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Writable data)", "modifiers": "public", "return": "void", "signature": "void add(Writable data)", "full_signature": "public void add(Writable data)", "class_method_signature": "SortableSlot.add(Writable data)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(DataOutput out)", "modifiers": "@Override public", "return": "void", "signature": "void write(DataOutput out)", "full_signature": "@Override public void write(DataOutput out)", "class_method_signature": "SortableSlot.write(DataOutput out)", "testcase": false, "constructor": false}, {"identifier": "readFields", "parameters": "(DataInput in)", "modifiers": "@Override public", "return": "void", "signature": "void readFields(DataInput in)", "full_signature": "@Override public void readFields(DataInput in)", "class_method_signature": "SortableSlot.readFields(DataInput in)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(SortableSlot o)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(SortableSlot o)", "full_signature": "@Override public int compareTo(SortableSlot o)", "class_method_signature": "SortableSlot.compareTo(SortableSlot o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "(int ignoreTailBits)", "modifiers": "", "return": "int", "signature": "int hashCode(int ignoreTailBits)", "full_signature": " int hashCode(int ignoreTailBits)", "class_method_signature": "SortableSlot.hashCode(int ignoreTailBits)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SortableSlot.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "SortableSlot.equals(Object obj)", "testcase": false, "constructor": false}], "file": "core-project/asakusa-runtime/src/main/java/com/asakusafw/runtime/stage/collector/SortableSlot.java"}, "focal_method": {"identifier": "addByte", "parameters": "(int data)", "modifiers": "public", "return": "void", "body": "public void addByte(int data) throws IOException {\n        buffer.writeByte(data);\n    }", "signature": "void addByte(int data)", "full_signature": "public void addByte(int data)", "class_method_signature": "SortableSlot.addByte(int data)", "testcase": false, "constructor": false, "invocations": ["writeByte"]}, "repository": {"repo_id": 1545929, "url": "https://github.com/asakusafw/asakusafw", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 113, "size": 35236, "license": "licensed"}}