{"test_class": {"identifier": "IntervalTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Interval i_1_4 = i(1, 4);", "modifier": "private final", "type": "Interval", "declarator": "i_1_4 = i(1, 4)", "var_name": "i_1_4"}], "file": "util/base/src/test/java/jetbrains/jetpad/base/IntervalTest.java"}, "test_case": {"identifier": "sub", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void sub() {\n    checkSub(i(0, 3), -1);\n    checkSub(i_1_4, 0);\n    checkSub(i(2, 5), 1);\n  }", "signature": "void sub()", "full_signature": "@Test public void sub()", "class_method_signature": "IntervalTest.sub()", "testcase": true, "constructor": false, "invocations": ["checkSub", "i", "checkSub", "checkSub", "i"]}, "focal_class": {"identifier": "Interval", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final int myLowerBound;", "modifier": "private final", "type": "int", "declarator": "myLowerBound", "var_name": "myLowerBound"}, {"original_string": "private final int myUpperBound;", "modifier": "private final", "type": "int", "declarator": "myUpperBound", "var_name": "myUpperBound"}], "methods": [{"identifier": "Interval", "parameters": "(int lowerBound, int upperBound)", "modifiers": "public", "return": "", "signature": " Interval(int lowerBound, int upperBound)", "full_signature": "public  Interval(int lowerBound, int upperBound)", "class_method_signature": "Interval.Interval(int lowerBound, int upperBound)", "testcase": false, "constructor": true}, {"identifier": "getLowerBound", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLowerBound()", "full_signature": "public int getLowerBound()", "class_method_signature": "Interval.getLowerBound()", "testcase": false, "constructor": false}, {"identifier": "getUpperBound", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getUpperBound()", "full_signature": "public int getUpperBound()", "class_method_signature": "Interval.getUpperBound()", "testcase": false, "constructor": false}, {"identifier": "getLength", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLength()", "full_signature": "public int getLength()", "class_method_signature": "Interval.getLength()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(int point)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(int point)", "full_signature": "public boolean contains(int point)", "class_method_signature": "Interval.contains(int point)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(Interval other)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(Interval other)", "full_signature": "public boolean contains(Interval other)", "class_method_signature": "Interval.contains(Interval other)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(Interval other)", "modifiers": "public", "return": "boolean", "signature": "boolean intersects(Interval other)", "full_signature": "public boolean intersects(Interval other)", "class_method_signature": "Interval.intersects(Interval other)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(Interval other)", "modifiers": "public", "return": "Interval", "signature": "Interval union(Interval other)", "full_signature": "public Interval union(Interval other)", "class_method_signature": "Interval.union(Interval other)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(int delta)", "modifiers": "public", "return": "Interval", "signature": "Interval add(int delta)", "full_signature": "public Interval add(int delta)", "class_method_signature": "Interval.add(int delta)", "testcase": false, "constructor": false}, {"identifier": "sub", "parameters": "(int delta)", "modifiers": "public", "return": "Interval", "signature": "Interval sub(int delta)", "full_signature": "public Interval sub(int delta)", "class_method_signature": "Interval.sub(int delta)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Interval.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Interval.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Interval.hashCode()", "testcase": false, "constructor": false}], "file": "util/base/src/main/java/jetbrains/jetpad/base/Interval.java"}, "focal_method": {"identifier": "sub", "parameters": "(int delta)", "modifiers": "public", "return": "Interval", "body": "public Interval sub(int delta) {\n    return new Interval(myLowerBound - delta, myUpperBound - delta);\n  }", "signature": "Interval sub(int delta)", "full_signature": "public Interval sub(int delta)", "class_method_signature": "Interval.sub(int delta)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 8701655, "url": "https://github.com/JetBrains/mapper", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 49, "size": 1987, "license": "licensed"}}