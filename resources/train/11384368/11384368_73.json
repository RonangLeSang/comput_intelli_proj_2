{"test_class": {"identifier": "DefaultFileSystemManagerTest", "superclass": "", "interfaces": "", "fields": [], "file": "commons-vfs2/src/test/java/org/apache/commons/vfs2/impl/DefaultFileSystemManagerTest.java"}, "test_case": {"identifier": "test_close", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_close() throws FileSystemException {\n        try (FileSystemManager fileSystemManager = new DefaultFileSystemManager()) {\n            VFS.setManager(fileSystemManager);\n            VFS.setManager(null);\n        }\n        Assert.assertNotNull(VFS.getManager());\n        Assert.assertFalse(VFS.getManager().resolveFile(Paths.get(\"DoesNotExist.not\").toUri()).exists());\n    }", "signature": "void test_close()", "full_signature": "@Test public void test_close()", "class_method_signature": "DefaultFileSystemManagerTest.test_close()", "testcase": true, "constructor": false, "invocations": ["setManager", "setManager", "assertNotNull", "getManager", "assertFalse", "exists", "resolveFile", "getManager", "toUri", "get"]}, "focal_class": {"identifier": "DefaultFileSystemManager", "superclass": "", "interfaces": "implements FileSystemManager", "fields": [{"original_string": "private final Map<String, FileProvider> providers = new HashMap<>();", "modifier": "private final", "type": "Map<String, FileProvider>", "declarator": "providers = new HashMap<>()", "var_name": "providers"}, {"original_string": "private final List<String> virtualFileSystemSchemes = new ArrayList<>();", "modifier": "private final", "type": "List<String>", "declarator": "virtualFileSystemSchemes = new ArrayList<>()", "var_name": "virtualFileSystemSchemes"}, {"original_string": "private final ArrayList<Object> components = new ArrayList<>();", "modifier": "private final", "type": "ArrayList<Object>", "declarator": "components = new ArrayList<>()", "var_name": "components"}, {"original_string": "private final DefaultVfsComponentContext context = new DefaultVfsComponentContext(this);", "modifier": "private final", "type": "DefaultVfsComponentContext", "declarator": "context = new DefaultVfsComponentContext(this)", "var_name": "context"}, {"original_string": "private final Map<String, List<FileOperationProvider>> operationProviders = new HashMap<>();", "modifier": "private final", "type": "Map<String, List<FileOperationProvider>>", "declarator": "operationProviders = new HashMap<>()", "var_name": "operationProviders"}, {"original_string": "private final FileTypeMap typeMap = new FileTypeMap();", "modifier": "private final", "type": "FileTypeMap", "declarator": "typeMap = new FileTypeMap()", "var_name": "typeMap"}, {"original_string": "private LocalFileProvider localFileProvider;", "modifier": "private", "type": "LocalFileProvider", "declarator": "localFileProvider", "var_name": "localFileProvider"}, {"original_string": "private FileProvider defaultProvider;", "modifier": "private", "type": "FileProvider", "declarator": "defaultProvider", "var_name": "defaultProvider"}, {"original_string": "private FileReplicator fileReplicator;", "modifier": "private", "type": "FileReplicator", "declarator": "fileReplicator", "var_name": "fileReplicator"}, {"original_string": "private FileObject baseFile;", "modifier": "private", "type": "FileObject", "declarator": "baseFile", "var_name": "baseFile"}, {"original_string": "private FilesCache filesCache;", "modifier": "private", "type": "FilesCache", "declarator": "filesCache", "var_name": "filesCache"}, {"original_string": "private CacheStrategy fileCacheStrategy;", "modifier": "private", "type": "CacheStrategy", "declarator": "fileCacheStrategy", "var_name": "fileCacheStrategy"}, {"original_string": "private Class<?> fileObjectDecorator;", "modifier": "private", "type": "Class<?>", "declarator": "fileObjectDecorator", "var_name": "fileObjectDecorator"}, {"original_string": "private Constructor<?> fileObjectDecoratorConst;", "modifier": "private", "type": "Constructor<?>", "declarator": "fileObjectDecoratorConst", "var_name": "fileObjectDecoratorConst"}, {"original_string": "private FileContentInfoFactory fileContentInfoFactory;", "modifier": "private", "type": "FileContentInfoFactory", "declarator": "fileContentInfoFactory", "var_name": "fileContentInfoFactory"}, {"original_string": "private Log log = LogFactory.getLog(getClass());", "modifier": "private", "type": "Log", "declarator": "log = LogFactory.getLog(getClass())", "var_name": "log"}, {"original_string": "private TemporaryFileStore tempFileStore;", "modifier": "private", "type": "TemporaryFileStore", "declarator": "tempFileStore", "var_name": "tempFileStore"}, {"original_string": "private VirtualFileProvider vfsProvider;", "modifier": "private", "type": "VirtualFileProvider", "declarator": "vfsProvider", "var_name": "vfsProvider"}, {"original_string": "private boolean init;", "modifier": "private", "type": "boolean", "declarator": "init", "var_name": "init"}], "methods": [{"identifier": "getLogger", "parameters": "()", "modifiers": "protected", "return": "Log", "signature": "Log getLogger()", "full_signature": "protected Log getLogger()", "class_method_signature": "DefaultFileSystemManager.getLogger()", "testcase": false, "constructor": false}, {"identifier": "addProvider", "parameters": "(final String urlScheme, final FileProvider provider)", "modifiers": "public", "return": "void", "signature": "void addProvider(final String urlScheme, final FileProvider provider)", "full_signature": "public void addProvider(final String urlScheme, final FileProvider provider)", "class_method_signature": "DefaultFileSystemManager.addProvider(final String urlScheme, final FileProvider provider)", "testcase": false, "constructor": false}, {"identifier": "addProvider", "parameters": "(final String[] urlSchemes, final FileProvider provider)", "modifiers": "public", "return": "void", "signature": "void addProvider(final String[] urlSchemes, final FileProvider provider)", "full_signature": "public void addProvider(final String[] urlSchemes, final FileProvider provider)", "class_method_signature": "DefaultFileSystemManager.addProvider(final String[] urlSchemes, final FileProvider provider)", "testcase": false, "constructor": false}, {"identifier": "hasProvider", "parameters": "(final String scheme)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasProvider(final String scheme)", "full_signature": "@Override public boolean hasProvider(final String scheme)", "class_method_signature": "DefaultFileSystemManager.hasProvider(final String scheme)", "testcase": false, "constructor": false}, {"identifier": "addExtensionMap", "parameters": "(final String extension, final String scheme)", "modifiers": "public", "return": "void", "signature": "void addExtensionMap(final String extension, final String scheme)", "full_signature": "public void addExtensionMap(final String extension, final String scheme)", "class_method_signature": "DefaultFileSystemManager.addExtensionMap(final String extension, final String scheme)", "testcase": false, "constructor": false}, {"identifier": "addMimeTypeMap", "parameters": "(final String mimeType, final String scheme)", "modifiers": "public", "return": "void", "signature": "void addMimeTypeMap(final String mimeType, final String scheme)", "full_signature": "public void addMimeTypeMap(final String mimeType, final String scheme)", "class_method_signature": "DefaultFileSystemManager.addMimeTypeMap(final String mimeType, final String scheme)", "testcase": false, "constructor": false}, {"identifier": "setDefaultProvider", "parameters": "(final FileProvider provider)", "modifiers": "public", "return": "void", "signature": "void setDefaultProvider(final FileProvider provider)", "full_signature": "public void setDefaultProvider(final FileProvider provider)", "class_method_signature": "DefaultFileSystemManager.setDefaultProvider(final FileProvider provider)", "testcase": false, "constructor": false}, {"identifier": "getFilesCache", "parameters": "()", "modifiers": "@Override public", "return": "FilesCache", "signature": "FilesCache getFilesCache()", "full_signature": "@Override public FilesCache getFilesCache()", "class_method_signature": "DefaultFileSystemManager.getFilesCache()", "testcase": false, "constructor": false}, {"identifier": "setFilesCache", "parameters": "(final FilesCache filesCache)", "modifiers": "public", "return": "void", "signature": "void setFilesCache(final FilesCache filesCache)", "full_signature": "public void setFilesCache(final FilesCache filesCache)", "class_method_signature": "DefaultFileSystemManager.setFilesCache(final FilesCache filesCache)", "testcase": false, "constructor": false}, {"identifier": "setCacheStrategy", "parameters": "(final CacheStrategy fileCacheStrategy)", "modifiers": "public", "return": "void", "signature": "void setCacheStrategy(final CacheStrategy fileCacheStrategy)", "full_signature": "public void setCacheStrategy(final CacheStrategy fileCacheStrategy)", "class_method_signature": "DefaultFileSystemManager.setCacheStrategy(final CacheStrategy fileCacheStrategy)", "testcase": false, "constructor": false}, {"identifier": "getCacheStrategy", "parameters": "()", "modifiers": "@Override public", "return": "CacheStrategy", "signature": "CacheStrategy getCacheStrategy()", "full_signature": "@Override public CacheStrategy getCacheStrategy()", "class_method_signature": "DefaultFileSystemManager.getCacheStrategy()", "testcase": false, "constructor": false}, {"identifier": "getFileObjectDecorator", "parameters": "()", "modifiers": "@Override public", "return": "Class<?>", "signature": "Class<?> getFileObjectDecorator()", "full_signature": "@Override public Class<?> getFileObjectDecorator()", "class_method_signature": "DefaultFileSystemManager.getFileObjectDecorator()", "testcase": false, "constructor": false}, {"identifier": "getFileObjectDecoratorConst", "parameters": "()", "modifiers": "@Override public", "return": "Constructor<?>", "signature": "Constructor<?> getFileObjectDecoratorConst()", "full_signature": "@Override public Constructor<?> getFileObjectDecoratorConst()", "class_method_signature": "DefaultFileSystemManager.getFileObjectDecoratorConst()", "testcase": false, "constructor": false}, {"identifier": "setFileObjectDecorator", "parameters": "(final Class<?> fileObjectDecorator)", "modifiers": "public", "return": "void", "signature": "void setFileObjectDecorator(final Class<?> fileObjectDecorator)", "full_signature": "public void setFileObjectDecorator(final Class<?> fileObjectDecorator)", "class_method_signature": "DefaultFileSystemManager.setFileObjectDecorator(final Class<?> fileObjectDecorator)", "testcase": false, "constructor": false}, {"identifier": "getFileContentInfoFactory", "parameters": "()", "modifiers": "@Override public", "return": "FileContentInfoFactory", "signature": "FileContentInfoFactory getFileContentInfoFactory()", "full_signature": "@Override public FileContentInfoFactory getFileContentInfoFactory()", "class_method_signature": "DefaultFileSystemManager.getFileContentInfoFactory()", "testcase": false, "constructor": false}, {"identifier": "setFileContentInfoFactory", "parameters": "(final FileContentInfoFactory fileContentInfoFactory)", "modifiers": "public", "return": "void", "signature": "void setFileContentInfoFactory(final FileContentInfoFactory fileContentInfoFactory)", "full_signature": "public void setFileContentInfoFactory(final FileContentInfoFactory fileContentInfoFactory)", "class_method_signature": "DefaultFileSystemManager.setFileContentInfoFactory(final FileContentInfoFactory fileContentInfoFactory)", "testcase": false, "constructor": false}, {"identifier": "setReplicator", "parameters": "(final FileReplicator replicator)", "modifiers": "public", "return": "void", "signature": "void setReplicator(final FileReplicator replicator)", "full_signature": "public void setReplicator(final FileReplicator replicator)", "class_method_signature": "DefaultFileSystemManager.setReplicator(final FileReplicator replicator)", "testcase": false, "constructor": false}, {"identifier": "setTemporaryFileStore", "parameters": "(final TemporaryFileStore tempFileStore)", "modifiers": "public", "return": "void", "signature": "void setTemporaryFileStore(final TemporaryFileStore tempFileStore)", "full_signature": "public void setTemporaryFileStore(final TemporaryFileStore tempFileStore)", "class_method_signature": "DefaultFileSystemManager.setTemporaryFileStore(final TemporaryFileStore tempFileStore)", "testcase": false, "constructor": false}, {"identifier": "setLogger", "parameters": "(final Log log)", "modifiers": "@Override public", "return": "void", "signature": "void setLogger(final Log log)", "full_signature": "@Override public void setLogger(final Log log)", "class_method_signature": "DefaultFileSystemManager.setLogger(final Log log)", "testcase": false, "constructor": false}, {"identifier": "setupComponent", "parameters": "(final Object component)", "modifiers": "private", "return": "void", "signature": "void setupComponent(final Object component)", "full_signature": "private void setupComponent(final Object component)", "class_method_signature": "DefaultFileSystemManager.setupComponent(final Object component)", "testcase": false, "constructor": false}, {"identifier": "closeComponent", "parameters": "(final Object component)", "modifiers": "private", "return": "void", "signature": "void closeComponent(final Object component)", "full_signature": "private void closeComponent(final Object component)", "class_method_signature": "DefaultFileSystemManager.closeComponent(final Object component)", "testcase": false, "constructor": false}, {"identifier": "getReplicator", "parameters": "()", "modifiers": "public", "return": "FileReplicator", "signature": "FileReplicator getReplicator()", "full_signature": "public FileReplicator getReplicator()", "class_method_signature": "DefaultFileSystemManager.getReplicator()", "testcase": false, "constructor": false}, {"identifier": "getTemporaryFileStore", "parameters": "()", "modifiers": "public", "return": "TemporaryFileStore", "signature": "TemporaryFileStore getTemporaryFileStore()", "full_signature": "public TemporaryFileStore getTemporaryFileStore()", "class_method_signature": "DefaultFileSystemManager.getTemporaryFileStore()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void init()", "full_signature": "public void init()", "class_method_signature": "DefaultFileSystemManager.init()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "DefaultFileSystemManager.close()", "testcase": false, "constructor": false}, {"identifier": "freeUnusedResources", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void freeUnusedResources()", "full_signature": "public void freeUnusedResources()", "class_method_signature": "DefaultFileSystemManager.freeUnusedResources()", "testcase": false, "constructor": false}, {"identifier": "setBaseFile", "parameters": "(final FileObject baseFile)", "modifiers": "public", "return": "void", "signature": "void setBaseFile(final FileObject baseFile)", "full_signature": "public void setBaseFile(final FileObject baseFile)", "class_method_signature": "DefaultFileSystemManager.setBaseFile(final FileObject baseFile)", "testcase": false, "constructor": false}, {"identifier": "setBaseFile", "parameters": "(final File baseFile)", "modifiers": "public", "return": "void", "signature": "void setBaseFile(final File baseFile)", "full_signature": "public void setBaseFile(final File baseFile)", "class_method_signature": "DefaultFileSystemManager.setBaseFile(final File baseFile)", "testcase": false, "constructor": false}, {"identifier": "getBaseFile", "parameters": "()", "modifiers": "@Override public", "return": "FileObject", "signature": "FileObject getBaseFile()", "full_signature": "@Override public FileObject getBaseFile()", "class_method_signature": "DefaultFileSystemManager.getBaseFile()", "testcase": false, "constructor": false}, {"identifier": "resolveFile", "parameters": "(final String uri)", "modifiers": "@Override public", "return": "FileObject", "signature": "FileObject resolveFile(final String uri)", "full_signature": "@Override public FileObject resolveFile(final String uri)", "class_method_signature": "DefaultFileSystemManager.resolveFile(final String uri)", "testcase": false, "constructor": false}, {"identifier": "resolveFile", "parameters": "(final String uri, final FileSystemOptions fileSystemOptions)", "modifiers": "@Override public", "return": "FileObject", "signature": "FileObject resolveFile(final String uri, final FileSystemOptions fileSystemOptions)", "full_signature": "@Override public FileObject resolveFile(final String uri, final FileSystemOptions fileSystemOptions)", "class_method_signature": "DefaultFileSystemManager.resolveFile(final String uri, final FileSystemOptions fileSystemOptions)", "testcase": false, "constructor": false}, {"identifier": "resolveFile", "parameters": "(final File baseFile, final String uri)", "modifiers": "@Override public", "return": "FileObject", "signature": "FileObject resolveFile(final File baseFile, final String uri)", "full_signature": "@Override public FileObject resolveFile(final File baseFile, final String uri)", "class_method_signature": "DefaultFileSystemManager.resolveFile(final File baseFile, final String uri)", "testcase": false, "constructor": false}, {"identifier": "resolveFile", "parameters": "(final FileObject baseFile, final String uri)", "modifiers": "@Override public", "return": "FileObject", "signature": "FileObject resolveFile(final FileObject baseFile, final String uri)", "full_signature": "@Override public FileObject resolveFile(final FileObject baseFile, final String uri)", "class_method_signature": "DefaultFileSystemManager.resolveFile(final FileObject baseFile, final String uri)", "testcase": false, "constructor": false}, {"identifier": "resolveFile", "parameters": "(final FileObject baseFile, final String uri,\n            final FileSystemOptions fileSystemOptions)", "modifiers": "public", "return": "FileObject", "signature": "FileObject resolveFile(final FileObject baseFile, final String uri,\n            final FileSystemOptions fileSystemOptions)", "full_signature": "public FileObject resolveFile(final FileObject baseFile, final String uri,\n            final FileSystemOptions fileSystemOptions)", "class_method_signature": "DefaultFileSystemManager.resolveFile(final FileObject baseFile, final String uri,\n            final FileSystemOptions fileSystemOptions)", "testcase": false, "constructor": false}, {"identifier": "resolveName", "parameters": "(final FileName root, final String path)", "modifiers": "@Override public", "return": "FileName", "signature": "FileName resolveName(final FileName root, final String path)", "full_signature": "@Override public FileName resolveName(final FileName root, final String path)", "class_method_signature": "DefaultFileSystemManager.resolveName(final FileName root, final String path)", "testcase": false, "constructor": false}, {"identifier": "resolveName", "parameters": "(final FileName base, final String name, final NameScope scope)", "modifiers": "@Override public", "return": "FileName", "signature": "FileName resolveName(final FileName base, final String name, final NameScope scope)", "full_signature": "@Override public FileName resolveName(final FileName base, final String name, final NameScope scope)", "class_method_signature": "DefaultFileSystemManager.resolveName(final FileName base, final String name, final NameScope scope)", "testcase": false, "constructor": false}, {"identifier": "resolveURI", "parameters": "(final String uri)", "modifiers": "@Override public", "return": "FileName", "signature": "FileName resolveURI(final String uri)", "full_signature": "@Override public FileName resolveURI(final String uri)", "class_method_signature": "DefaultFileSystemManager.resolveURI(final String uri)", "testcase": false, "constructor": false}, {"identifier": "toFileObject", "parameters": "(final File file)", "modifiers": "@Override public", "return": "FileObject", "signature": "FileObject toFileObject(final File file)", "full_signature": "@Override public FileObject toFileObject(final File file)", "class_method_signature": "DefaultFileSystemManager.toFileObject(final File file)", "testcase": false, "constructor": false}, {"identifier": "createFileSystem", "parameters": "(final String scheme, final FileObject file)", "modifiers": "@Override public", "return": "FileObject", "signature": "FileObject createFileSystem(final String scheme, final FileObject file)", "full_signature": "@Override public FileObject createFileSystem(final String scheme, final FileObject file)", "class_method_signature": "DefaultFileSystemManager.createFileSystem(final String scheme, final FileObject file)", "testcase": false, "constructor": false}, {"identifier": "createFileSystem", "parameters": "(final FileObject file)", "modifiers": "@Override public", "return": "FileObject", "signature": "FileObject createFileSystem(final FileObject file)", "full_signature": "@Override public FileObject createFileSystem(final FileObject file)", "class_method_signature": "DefaultFileSystemManager.createFileSystem(final FileObject file)", "testcase": false, "constructor": false}, {"identifier": "canCreateFileSystem", "parameters": "(final FileObject file)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canCreateFileSystem(final FileObject file)", "full_signature": "@Override public boolean canCreateFileSystem(final FileObject file)", "class_method_signature": "DefaultFileSystemManager.canCreateFileSystem(final FileObject file)", "testcase": false, "constructor": false}, {"identifier": "createVirtualFileSystem", "parameters": "(final FileObject rootFile)", "modifiers": "@Override public", "return": "FileObject", "signature": "FileObject createVirtualFileSystem(final FileObject rootFile)", "full_signature": "@Override public FileObject createVirtualFileSystem(final FileObject rootFile)", "class_method_signature": "DefaultFileSystemManager.createVirtualFileSystem(final FileObject rootFile)", "testcase": false, "constructor": false}, {"identifier": "createVirtualFileSystem", "parameters": "(final String rootUri)", "modifiers": "@Override public", "return": "FileObject", "signature": "FileObject createVirtualFileSystem(final String rootUri)", "full_signature": "@Override public FileObject createVirtualFileSystem(final String rootUri)", "class_method_signature": "DefaultFileSystemManager.createVirtualFileSystem(final String rootUri)", "testcase": false, "constructor": false}, {"identifier": "addVirtualFileSystemScheme", "parameters": "(String rootUri)", "modifiers": "protected", "return": "void", "signature": "void addVirtualFileSystemScheme(String rootUri)", "full_signature": "protected void addVirtualFileSystemScheme(String rootUri)", "class_method_signature": "DefaultFileSystemManager.addVirtualFileSystemScheme(String rootUri)", "testcase": false, "constructor": false}, {"identifier": "getLocalFileProvider", "parameters": "()", "modifiers": "private", "return": "LocalFileProvider", "signature": "LocalFileProvider getLocalFileProvider()", "full_signature": "private LocalFileProvider getLocalFileProvider()", "class_method_signature": "DefaultFileSystemManager.getLocalFileProvider()", "testcase": false, "constructor": false}, {"identifier": "getURLStreamHandlerFactory", "parameters": "()", "modifiers": "@Override public", "return": "URLStreamHandlerFactory", "signature": "URLStreamHandlerFactory getURLStreamHandlerFactory()", "full_signature": "@Override public URLStreamHandlerFactory getURLStreamHandlerFactory()", "class_method_signature": "DefaultFileSystemManager.getURLStreamHandlerFactory()", "testcase": false, "constructor": false}, {"identifier": "closeFileSystem", "parameters": "(final FileSystem fileSystem)", "modifiers": "@Override public", "return": "void", "signature": "void closeFileSystem(final FileSystem fileSystem)", "full_signature": "@Override public void closeFileSystem(final FileSystem fileSystem)", "class_method_signature": "DefaultFileSystemManager.closeFileSystem(final FileSystem fileSystem)", "testcase": false, "constructor": false}, {"identifier": "_closeFileSystem", "parameters": "(final FileSystem fileSystem)", "modifiers": "public", "return": "void", "signature": "void _closeFileSystem(final FileSystem fileSystem)", "full_signature": "public void _closeFileSystem(final FileSystem fileSystem)", "class_method_signature": "DefaultFileSystemManager._closeFileSystem(final FileSystem fileSystem)", "testcase": false, "constructor": false}, {"identifier": "getSchemes", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getSchemes()", "full_signature": "@Override public String[] getSchemes()", "class_method_signature": "DefaultFileSystemManager.getSchemes()", "testcase": false, "constructor": false}, {"identifier": "getProviderCapabilities", "parameters": "(final String scheme)", "modifiers": "@Override public", "return": "Collection<Capability>", "signature": "Collection<Capability> getProviderCapabilities(final String scheme)", "full_signature": "@Override public Collection<Capability> getProviderCapabilities(final String scheme)", "class_method_signature": "DefaultFileSystemManager.getProviderCapabilities(final String scheme)", "testcase": false, "constructor": false}, {"identifier": "getFileSystemConfigBuilder", "parameters": "(final String scheme)", "modifiers": "@Override public", "return": "FileSystemConfigBuilder", "signature": "FileSystemConfigBuilder getFileSystemConfigBuilder(final String scheme)", "full_signature": "@Override public FileSystemConfigBuilder getFileSystemConfigBuilder(final String scheme)", "class_method_signature": "DefaultFileSystemManager.getFileSystemConfigBuilder(final String scheme)", "testcase": false, "constructor": false}, {"identifier": "addOperationProvider", "parameters": "(final String scheme, final FileOperationProvider operationProvider)", "modifiers": "@Override public", "return": "void", "signature": "void addOperationProvider(final String scheme, final FileOperationProvider operationProvider)", "full_signature": "@Override public void addOperationProvider(final String scheme, final FileOperationProvider operationProvider)", "class_method_signature": "DefaultFileSystemManager.addOperationProvider(final String scheme, final FileOperationProvider operationProvider)", "testcase": false, "constructor": false}, {"identifier": "addOperationProvider", "parameters": "(final String[] schemes, final FileOperationProvider operationProvider)", "modifiers": "@Override public", "return": "void", "signature": "void addOperationProvider(final String[] schemes, final FileOperationProvider operationProvider)", "full_signature": "@Override public void addOperationProvider(final String[] schemes, final FileOperationProvider operationProvider)", "class_method_signature": "DefaultFileSystemManager.addOperationProvider(final String[] schemes, final FileOperationProvider operationProvider)", "testcase": false, "constructor": false}, {"identifier": "getOperationProviders", "parameters": "(final String scheme)", "modifiers": "@Override public", "return": "FileOperationProvider[]", "signature": "FileOperationProvider[] getOperationProviders(final String scheme)", "full_signature": "@Override public FileOperationProvider[] getOperationProviders(final String scheme)", "class_method_signature": "DefaultFileSystemManager.getOperationProviders(final String scheme)", "testcase": false, "constructor": false}, {"identifier": "resolveFile", "parameters": "(final URI uri)", "modifiers": "@Override public", "return": "FileObject", "signature": "FileObject resolveFile(final URI uri)", "full_signature": "@Override public FileObject resolveFile(final URI uri)", "class_method_signature": "DefaultFileSystemManager.resolveFile(final URI uri)", "testcase": false, "constructor": false}, {"identifier": "resolveFile", "parameters": "(final URL url)", "modifiers": "@Override public", "return": "FileObject", "signature": "FileObject resolveFile(final URL url)", "full_signature": "@Override public FileObject resolveFile(final URL url)", "class_method_signature": "DefaultFileSystemManager.resolveFile(final URL url)", "testcase": false, "constructor": false}], "file": "commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/DefaultFileSystemManager.java"}, "focal_method": {"identifier": "resolveFile", "parameters": "(final String uri)", "modifiers": "@Override public", "return": "FileObject", "body": "@Override\n    public FileObject resolveFile(final String uri) throws FileSystemException {\n        return resolveFile(getBaseFile(), uri);\n    }", "signature": "FileObject resolveFile(final String uri)", "full_signature": "@Override public FileObject resolveFile(final String uri)", "class_method_signature": "DefaultFileSystemManager.resolveFile(final String uri)", "testcase": false, "constructor": false, "invocations": ["resolveFile", "getBaseFile"]}, "repository": {"repo_id": 11384368, "url": "https://github.com/apache/commons-vfs", "stars": 103, "created": "7/13/2013 7:00:13 AM +00:00", "updates": "2020-01-10T18:19:55+00:00", "fork": "False", "license": "licensed"}}