{"test_class": {"identifier": "NameFileFilterTest", "superclass": "extends BaseFilterTest", "interfaces": "", "fields": [], "file": "commons-vfs2/src/test/java/org/apache/commons/vfs2/filter/NameFileFilterTest.java"}, "test_case": {"identifier": "testAcceptListIOCaseInsensitive", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAcceptListIOCaseInsensitive() throws FileSystemException {\n\n        // PREPARE\n        final List<String> list = new ArrayList<>();\n        list.add(\"test1.txt\");\n        list.add(\"test2.txt\");\n        final NameFileFilter filter = new NameFileFilter(IOCase.INSENSITIVE, list);\n\n        // TEST\n        Assert.assertTrue(filter.accept(createFileSelectInfo(new File(\"TEST1.txt\"))));\n        Assert.assertTrue(filter.accept(createFileSelectInfo(new File(\"test2.txt\"))));\n        Assert.assertTrue(filter.accept(createFileSelectInfo(new File(\"Test2.txt\"))));\n        Assert.assertFalse(filter.accept(createFileSelectInfo(new File(\"test.xxx\"))));\n\n    }", "signature": "void testAcceptListIOCaseInsensitive()", "full_signature": "@Test public void testAcceptListIOCaseInsensitive()", "class_method_signature": "NameFileFilterTest.testAcceptListIOCaseInsensitive()", "testcase": true, "constructor": false, "invocations": ["add", "add", "assertTrue", "accept", "createFileSelectInfo", "assertTrue", "accept", "createFileSelectInfo", "assertTrue", "accept", "createFileSelectInfo", "assertFalse", "accept", "createFileSelectInfo"]}, "focal_class": {"identifier": "NameFileFilter", "superclass": "", "interfaces": "implements FileFilter, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private final IOCase caseSensitivity;", "modifier": "private final", "type": "IOCase", "declarator": "caseSensitivity", "var_name": "caseSensitivity"}, {"original_string": "private final List<String> names;", "modifier": "private final", "type": "List<String>", "declarator": "names", "var_name": "names"}], "methods": [{"identifier": "NameFileFilter", "parameters": "(final List<String> names)", "modifiers": "public", "return": "", "signature": " NameFileFilter(final List<String> names)", "full_signature": "public  NameFileFilter(final List<String> names)", "class_method_signature": "NameFileFilter.NameFileFilter(final List<String> names)", "testcase": false, "constructor": true}, {"identifier": "NameFileFilter", "parameters": "(final IOCase caseSensitivity, final List<String> names)", "modifiers": "public", "return": "", "signature": " NameFileFilter(final IOCase caseSensitivity, final List<String> names)", "full_signature": "public  NameFileFilter(final IOCase caseSensitivity, final List<String> names)", "class_method_signature": "NameFileFilter.NameFileFilter(final IOCase caseSensitivity, final List<String> names)", "testcase": false, "constructor": true}, {"identifier": "NameFileFilter", "parameters": "(final String... names)", "modifiers": "public", "return": "", "signature": " NameFileFilter(final String... names)", "full_signature": "public  NameFileFilter(final String... names)", "class_method_signature": "NameFileFilter.NameFileFilter(final String... names)", "testcase": false, "constructor": true}, {"identifier": "NameFileFilter", "parameters": "(final IOCase caseSensitivity, final String... names)", "modifiers": "public", "return": "", "signature": " NameFileFilter(final IOCase caseSensitivity, final String... names)", "full_signature": "public  NameFileFilter(final IOCase caseSensitivity, final String... names)", "class_method_signature": "NameFileFilter.NameFileFilter(final IOCase caseSensitivity, final String... names)", "testcase": false, "constructor": true}, {"identifier": "accept", "parameters": "(final FileSelectInfo fileInfo)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean accept(final FileSelectInfo fileInfo)", "full_signature": "@Override public boolean accept(final FileSelectInfo fileInfo)", "class_method_signature": "NameFileFilter.accept(final FileSelectInfo fileInfo)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "NameFileFilter.toString()", "testcase": false, "constructor": false}], "file": "commons-vfs2/src/main/java/org/apache/commons/vfs2/filter/NameFileFilter.java"}, "focal_method": {"identifier": "accept", "parameters": "(final FileSelectInfo fileInfo)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean accept(final FileSelectInfo fileInfo) {\n        final String name = fileInfo.getFile().getName().getBaseName();\n        for (final String name2 : this.names) {\n            if (caseSensitivity.checkEquals(name, name2)) {\n                return true;\n            }\n        }\n        return false;\n    }", "signature": "boolean accept(final FileSelectInfo fileInfo)", "full_signature": "@Override public boolean accept(final FileSelectInfo fileInfo)", "class_method_signature": "NameFileFilter.accept(final FileSelectInfo fileInfo)", "testcase": false, "constructor": false, "invocations": ["getBaseName", "getName", "getFile", "checkEquals"]}, "repository": {"repo_id": 11384368, "url": "https://github.com/apache/commons-vfs", "stars": 103, "created": "7/13/2013 7:00:13 AM +00:00", "updates": "2020-01-10T18:19:55+00:00", "fork": "False", "license": "licensed"}}