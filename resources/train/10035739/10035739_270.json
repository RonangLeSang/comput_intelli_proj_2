{"test_class": {"identifier": "LoadDataChangeTest", "superclass": "extends AbstractChangeTest", "interfaces": "", "fields": [], "file": "android-liquibase/android-liquibase-core/src/test/java/liquibase/change/core/LoadDataChangeTest.java"}, "test_case": {"identifier": "generateCheckSum", "parameters": "()", "modifiers": "@Override @Test public", "return": "void", "body": "@Override\n    @Test\n    public void generateCheckSum() throws Exception {\n        LoadDataChange refactoring = new LoadDataChange();\n        refactoring.setSchemaName(\"SCHEMA_NAME\");\n        refactoring.setTableName(\"TABLE_NAME\");\n        refactoring.setFile(\"liquibase/change/core/sample.data1.csv\");\n        refactoring.setResourceAccessor(new ClassLoaderResourceAccessor());\n        //refactoring.setFileOpener(new JUnitResourceAccessor());\n\n        String md5sum1 = refactoring.generateCheckSum().toString();\n\n        refactoring.setFile(\"liquibase/change/core/sample.data2.csv\");\n        String md5sum2 = refactoring.generateCheckSum().toString();\n\n        assertTrue(!md5sum1.equals(md5sum2));\n        assertEquals(md5sum2, refactoring.generateCheckSum().toString());\n    }", "signature": "void generateCheckSum()", "full_signature": "@Override @Test public void generateCheckSum()", "class_method_signature": "LoadDataChangeTest.generateCheckSum()", "testcase": true, "constructor": false, "invocations": ["setSchemaName", "setTableName", "setFile", "setResourceAccessor", "toString", "generateCheckSum", "setFile", "toString", "generateCheckSum", "assertTrue", "equals", "assertEquals", "toString", "generateCheckSum"]}, "focal_class": {"identifier": "LoadDataChange", "superclass": "extends AbstractChange", "interfaces": "implements ChangeWithColumns<LoadDataColumnConfig>", "fields": [{"original_string": "private String schemaName;", "modifier": "private", "type": "String", "declarator": "schemaName", "var_name": "schemaName"}, {"original_string": "private String tableName;", "modifier": "private", "type": "String", "declarator": "tableName", "var_name": "tableName"}, {"original_string": "private String file;", "modifier": "private", "type": "String", "declarator": "file", "var_name": "file"}, {"original_string": "private String encoding = null;", "modifier": "private", "type": "String", "declarator": "encoding = null", "var_name": "encoding"}, {"original_string": "private String separator = liquibase.util.csv.opencsv.CSVReader.DEFAULT_SEPARATOR + \"\";", "modifier": "private", "type": "String", "declarator": "separator = liquibase.util.csv.opencsv.CSVReader.DEFAULT_SEPARATOR + \"\"", "var_name": "separator"}, {"original_string": "private String quotchar = liquibase.util.csv.opencsv.CSVReader.DEFAULT_QUOTE_CHARACTER + \"\";", "modifier": "private", "type": "String", "declarator": "quotchar = liquibase.util.csv.opencsv.CSVReader.DEFAULT_QUOTE_CHARACTER + \"\"", "var_name": "quotchar"}, {"original_string": "private List<LoadDataColumnConfig> columns = new ArrayList<LoadDataColumnConfig>();", "modifier": "private", "type": "List<LoadDataColumnConfig>", "declarator": "columns = new ArrayList<LoadDataColumnConfig>()", "var_name": "columns"}], "methods": [{"identifier": "LoadDataChange", "parameters": "()", "modifiers": "public", "return": "", "signature": " LoadDataChange()", "full_signature": "public  LoadDataChange()", "class_method_signature": "LoadDataChange.LoadDataChange()", "testcase": false, "constructor": true}, {"identifier": "LoadDataChange", "parameters": "(String changeName, String changeDescription)", "modifiers": "protected", "return": "", "signature": " LoadDataChange(String changeName, String changeDescription)", "full_signature": "protected  LoadDataChange(String changeName, String changeDescription)", "class_method_signature": "LoadDataChange.LoadDataChange(String changeName, String changeDescription)", "testcase": false, "constructor": true}, {"identifier": "getSchemaName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSchemaName()", "full_signature": "public String getSchemaName()", "class_method_signature": "LoadDataChange.getSchemaName()", "testcase": false, "constructor": false}, {"identifier": "setSchemaName", "parameters": "(String schemaName)", "modifiers": "public", "return": "void", "signature": "void setSchemaName(String schemaName)", "full_signature": "public void setSchemaName(String schemaName)", "class_method_signature": "LoadDataChange.setSchemaName(String schemaName)", "testcase": false, "constructor": false}, {"identifier": "getTableName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTableName()", "full_signature": "public String getTableName()", "class_method_signature": "LoadDataChange.getTableName()", "testcase": false, "constructor": false}, {"identifier": "setTableName", "parameters": "(String tableName)", "modifiers": "public", "return": "void", "signature": "void setTableName(String tableName)", "full_signature": "public void setTableName(String tableName)", "class_method_signature": "LoadDataChange.setTableName(String tableName)", "testcase": false, "constructor": false}, {"identifier": "getFile", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFile()", "full_signature": "public String getFile()", "class_method_signature": "LoadDataChange.getFile()", "testcase": false, "constructor": false}, {"identifier": "setFile", "parameters": "(String file)", "modifiers": "public", "return": "void", "signature": "void setFile(String file)", "full_signature": "public void setFile(String file)", "class_method_signature": "LoadDataChange.setFile(String file)", "testcase": false, "constructor": false}, {"identifier": "getEncoding", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getEncoding()", "full_signature": "public String getEncoding()", "class_method_signature": "LoadDataChange.getEncoding()", "testcase": false, "constructor": false}, {"identifier": "setEncoding", "parameters": "(String encoding)", "modifiers": "public", "return": "void", "signature": "void setEncoding(String encoding)", "full_signature": "public void setEncoding(String encoding)", "class_method_signature": "LoadDataChange.setEncoding(String encoding)", "testcase": false, "constructor": false}, {"identifier": "getSeparator", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSeparator()", "full_signature": "public String getSeparator()", "class_method_signature": "LoadDataChange.getSeparator()", "testcase": false, "constructor": false}, {"identifier": "setSeparator", "parameters": "(String separator)", "modifiers": "public", "return": "void", "signature": "void setSeparator(String separator)", "full_signature": "public void setSeparator(String separator)", "class_method_signature": "LoadDataChange.setSeparator(String separator)", "testcase": false, "constructor": false}, {"identifier": "getQuotchar", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getQuotchar()", "full_signature": "public String getQuotchar()", "class_method_signature": "LoadDataChange.getQuotchar()", "testcase": false, "constructor": false}, {"identifier": "setQuotchar", "parameters": "(String quotchar)", "modifiers": "public", "return": "void", "signature": "void setQuotchar(String quotchar)", "full_signature": "public void setQuotchar(String quotchar)", "class_method_signature": "LoadDataChange.setQuotchar(String quotchar)", "testcase": false, "constructor": false}, {"identifier": "addColumn", "parameters": "(LoadDataColumnConfig column)", "modifiers": "public", "return": "void", "signature": "void addColumn(LoadDataColumnConfig column)", "full_signature": "public void addColumn(LoadDataColumnConfig column)", "class_method_signature": "LoadDataChange.addColumn(LoadDataColumnConfig column)", "testcase": false, "constructor": false}, {"identifier": "getColumns", "parameters": "()", "modifiers": "public", "return": "List<LoadDataColumnConfig>", "signature": "List<LoadDataColumnConfig> getColumns()", "full_signature": "public List<LoadDataColumnConfig> getColumns()", "class_method_signature": "LoadDataChange.getColumns()", "testcase": false, "constructor": false}, {"identifier": "generateStatements", "parameters": "(Database database)", "modifiers": "public", "return": "SqlStatement[]", "signature": "SqlStatement[] generateStatements(Database database)", "full_signature": "public SqlStatement[] generateStatements(Database database)", "class_method_signature": "LoadDataChange.generateStatements(Database database)", "testcase": false, "constructor": false}, {"identifier": "getCSVReader", "parameters": "()", "modifiers": "protected", "return": "CSVReader", "signature": "CSVReader getCSVReader()", "full_signature": "protected CSVReader getCSVReader()", "class_method_signature": "LoadDataChange.getCSVReader()", "testcase": false, "constructor": false}, {"identifier": "createStatement", "parameters": "(String schemaName, String tableName)", "modifiers": "protected", "return": "InsertStatement", "signature": "InsertStatement createStatement(String schemaName, String tableName)", "full_signature": "protected InsertStatement createStatement(String schemaName, String tableName)", "class_method_signature": "LoadDataChange.createStatement(String schemaName, String tableName)", "testcase": false, "constructor": false}, {"identifier": "getColumnConfig", "parameters": "(int index, String header)", "modifiers": "protected", "return": "ColumnConfig", "signature": "ColumnConfig getColumnConfig(int index, String header)", "full_signature": "protected ColumnConfig getColumnConfig(int index, String header)", "class_method_signature": "LoadDataChange.getColumnConfig(int index, String header)", "testcase": false, "constructor": false}, {"identifier": "getConfirmationMessage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getConfirmationMessage()", "full_signature": "public String getConfirmationMessage()", "class_method_signature": "LoadDataChange.getConfirmationMessage()", "testcase": false, "constructor": false}, {"identifier": "generateCheckSum", "parameters": "()", "modifiers": "@Override public", "return": "CheckSum", "signature": "CheckSum generateCheckSum()", "full_signature": "@Override public CheckSum generateCheckSum()", "class_method_signature": "LoadDataChange.generateCheckSum()", "testcase": false, "constructor": false}], "file": "android-liquibase/android-liquibase-core/src/main/java/liquibase/change/core/LoadDataChange.java"}, "focal_method": {"identifier": "generateCheckSum", "parameters": "()", "modifiers": "@Override public", "return": "CheckSum", "body": "@Override\n    public CheckSum generateCheckSum() {\n        InputStream stream = null;\n        try {\n            stream = getResourceAccessor().getResourceAsStream(getFile());\n            if (stream == null) {\n                throw new RuntimeException(getFile() + \" could not be found\");\n            }\n            return CheckSum.compute(stream);\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        } finally {\n            if (stream != null) {\n                try {\n                    stream.close();\n                } catch (IOException e) {\n                    ;\n                }\n            }\n        }\n    }", "signature": "CheckSum generateCheckSum()", "full_signature": "@Override public CheckSum generateCheckSum()", "class_method_signature": "LoadDataChange.generateCheckSum()", "testcase": false, "constructor": false, "invocations": ["getResourceAsStream", "getResourceAccessor", "getFile", "getFile", "compute", "close"]}, "repository": {"repo_id": 10035739, "url": "https://github.com/openforis/android-ports", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 12, "size": 2775, "license": "licensed"}}