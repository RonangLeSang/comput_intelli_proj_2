{"test_class": {"identifier": "StringChangeLogSerializerTest", "superclass": "", "interfaces": "", "fields": [], "file": "android-liquibase/android-liquibase-core/src/test/java/liquibase/serializer/core/string/StringChangeLogSerializerTest.java"}, "test_case": {"identifier": "serialized_AddForeignKeyConstraint", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void serialized_AddForeignKeyConstraint() {\n        AddForeignKeyConstraintChange change = new AddForeignKeyConstraintChange();\n\n        assertEquals(\"addForeignKeyConstraint:[]\", new StringChangeLogSerializer().serialize(change));\n\n        change.setBaseTableName(\"TABLE_NAME\");\n        change.setBaseColumnNames(\"COL1, COL2\");\n        change.setBaseTableSchemaName(\"BASE_SCHEM\");\n        change.setConstraintName(\"FK_TEST\");\n        change.setDeferrable(true);\n        change.setInitiallyDeferred(true);\n\t    change.setReferencesUniqueColumn(false);\n        change.setDeleteCascade(true);\n        change.setOnDelete(\"SET NULL\");\n        change.setOnUpdate(\"NO ACTION\");\n        change.setReferencedTableName(\"REF_TABLE\");\n        change.setReferencedColumnNames(\"COLA, COLB\");\n        change.setReferencedTableSchemaName(\"REF_SCHEM\");\n\n        assertEquals(\"addForeignKeyConstraint:[\\n\" +\n                \"    baseColumnNames=\\\"COL1, COL2\\\"\\n\" +\n                \"    baseTableName=\\\"TABLE_NAME\\\"\\n\" +\n                \"    baseTableSchemaName=\\\"BASE_SCHEM\\\"\\n\" +\n                \"    constraintName=\\\"FK_TEST\\\"\\n\" +\n                \"    deferrable=\\\"true\\\"\\n\" +\n                \"    initiallyDeferred=\\\"true\\\"\\n\" +\n                \"    onDelete=\\\"SET NULL\\\"\\n\" +\n                \"    onUpdate=\\\"NO ACTION\\\"\\n\" +\n                \"    referencedColumnNames=\\\"COLA, COLB\\\"\\n\" +\n                \"    referencedTableName=\\\"REF_TABLE\\\"\\n\" +\n                \"    referencedTableSchemaName=\\\"REF_SCHEM\\\"\\n\" +\n                \"    referencesUniqueColumn=\\\"false\\\"\\n\" +\n                \"]\", new StringChangeLogSerializer().serialize(change));\n\n    }", "signature": "void serialized_AddForeignKeyConstraint()", "full_signature": "@Test public void serialized_AddForeignKeyConstraint()", "class_method_signature": "StringChangeLogSerializerTest.serialized_AddForeignKeyConstraint()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "serialize", "setBaseTableName", "setBaseColumnNames", "setBaseTableSchemaName", "setConstraintName", "setDeferrable", "setInitiallyDeferred", "setReferencesUniqueColumn", "setDeleteCascade", "setOnDelete", "setOnUpdate", "setReferencedTableName", "setReferencedColumnNames", "setReferencedTableSchemaName", "assertEquals", "serialize"]}, "focal_class": {"identifier": "StringChangeLogSerializer", "superclass": "", "interfaces": "implements ChangeLogSerializer", "fields": [{"original_string": "private static final int INDENT_LENGTH = 4;", "modifier": "private static final", "type": "int", "declarator": "INDENT_LENGTH = 4", "var_name": "INDENT_LENGTH"}], "methods": [{"identifier": "getValidFileExtensions", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getValidFileExtensions()", "full_signature": "public String[] getValidFileExtensions()", "class_method_signature": "StringChangeLogSerializer.getValidFileExtensions()", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(DatabaseChangeLog databaseChangeLog)", "modifiers": "public", "return": "String", "signature": "String serialize(DatabaseChangeLog databaseChangeLog)", "full_signature": "public String serialize(DatabaseChangeLog databaseChangeLog)", "class_method_signature": "StringChangeLogSerializer.serialize(DatabaseChangeLog databaseChangeLog)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(Change change)", "modifiers": "public", "return": "String", "signature": "String serialize(Change change)", "full_signature": "public String serialize(Change change)", "class_method_signature": "StringChangeLogSerializer.serialize(Change change)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(SqlVisitor visitor)", "modifiers": "public", "return": "String", "signature": "String serialize(SqlVisitor visitor)", "full_signature": "public String serialize(SqlVisitor visitor)", "class_method_signature": "StringChangeLogSerializer.serialize(SqlVisitor visitor)", "testcase": false, "constructor": false}, {"identifier": "serializeObject", "parameters": "(Object objectToSerialize, int indent)", "modifiers": "private", "return": "String", "signature": "String serializeObject(Object objectToSerialize, int indent)", "full_signature": "private String serializeObject(Object objectToSerialize, int indent)", "class_method_signature": "StringChangeLogSerializer.serializeObject(Object objectToSerialize, int indent)", "testcase": false, "constructor": false}, {"identifier": "indent", "parameters": "(int indent)", "modifiers": "private", "return": "String", "signature": "String indent(int indent)", "full_signature": "private String indent(int indent)", "class_method_signature": "StringChangeLogSerializer.indent(int indent)", "testcase": false, "constructor": false}, {"identifier": "serializeObject", "parameters": "(Object[] collection, int indent)", "modifiers": "private", "return": "String", "signature": "String serializeObject(Object[] collection, int indent)", "full_signature": "private String serializeObject(Object[] collection, int indent)", "class_method_signature": "StringChangeLogSerializer.serializeObject(Object[] collection, int indent)", "testcase": false, "constructor": false}, {"identifier": "serializeObject", "parameters": "(Collection collection, int indent)", "modifiers": "private", "return": "String", "signature": "String serializeObject(Collection collection, int indent)", "full_signature": "private String serializeObject(Collection collection, int indent)", "class_method_signature": "StringChangeLogSerializer.serializeObject(Collection collection, int indent)", "testcase": false, "constructor": false}, {"identifier": "serializeObject", "parameters": "(Map collection, int indent)", "modifiers": "private", "return": "String", "signature": "String serializeObject(Map collection, int indent)", "full_signature": "private String serializeObject(Map collection, int indent)", "class_method_signature": "StringChangeLogSerializer.serializeObject(Map collection, int indent)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(ColumnConfig columnConfig)", "modifiers": "public", "return": "String", "signature": "String serialize(ColumnConfig columnConfig)", "full_signature": "public String serialize(ColumnConfig columnConfig)", "class_method_signature": "StringChangeLogSerializer.serialize(ColumnConfig columnConfig)", "testcase": false, "constructor": false}, {"identifier": "serializeColumnConfig", "parameters": "(ColumnConfig columnConfig, int indent)", "modifiers": "private", "return": "String", "signature": "String serializeColumnConfig(ColumnConfig columnConfig, int indent)", "full_signature": "private String serializeColumnConfig(ColumnConfig columnConfig, int indent)", "class_method_signature": "StringChangeLogSerializer.serializeColumnConfig(ColumnConfig columnConfig, int indent)", "testcase": false, "constructor": false}, {"identifier": "serializeConstraintsConfig", "parameters": "(ConstraintsConfig constraintsConfig, int indent)", "modifiers": "private", "return": "String", "signature": "String serializeConstraintsConfig(ConstraintsConfig constraintsConfig, int indent)", "full_signature": "private String serializeConstraintsConfig(ConstraintsConfig constraintsConfig, int indent)", "class_method_signature": "StringChangeLogSerializer.serializeConstraintsConfig(ConstraintsConfig constraintsConfig, int indent)", "testcase": false, "constructor": false}, {"identifier": "serializeCustomChange", "parameters": "(CustomChange customChange, int indent)", "modifiers": "private", "return": "String", "signature": "String serializeCustomChange(CustomChange customChange, int indent)", "full_signature": "private String serializeCustomChange(CustomChange customChange, int indent)", "class_method_signature": "StringChangeLogSerializer.serializeCustomChange(CustomChange customChange, int indent)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(ChangeSet changeSet)", "modifiers": "public", "return": "String", "signature": "String serialize(ChangeSet changeSet)", "full_signature": "public String serialize(ChangeSet changeSet)", "class_method_signature": "StringChangeLogSerializer.serialize(ChangeSet changeSet)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(List<ChangeSet> changeSets, OutputStream out)", "modifiers": "public", "return": "void", "signature": "void write(List<ChangeSet> changeSets, OutputStream out)", "full_signature": "public void write(List<ChangeSet> changeSets, OutputStream out)", "class_method_signature": "StringChangeLogSerializer.write(List<ChangeSet> changeSets, OutputStream out)", "testcase": false, "constructor": false}], "file": "android-liquibase/android-liquibase-core/src/main/java/liquibase/serializer/core/string/StringChangeLogSerializer.java"}, "focal_method": {"identifier": "serialize", "parameters": "(DatabaseChangeLog databaseChangeLog)", "modifiers": "public", "return": "String", "body": "public String serialize(DatabaseChangeLog databaseChangeLog) {\n        return null; //todo\n    }", "signature": "String serialize(DatabaseChangeLog databaseChangeLog)", "full_signature": "public String serialize(DatabaseChangeLog databaseChangeLog)", "class_method_signature": "StringChangeLogSerializer.serialize(DatabaseChangeLog databaseChangeLog)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 10035739, "url": "https://github.com/openforis/android-ports", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 12, "size": 2775, "license": "licensed"}}