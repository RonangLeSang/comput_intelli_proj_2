{"test_class": {"identifier": "ShouldRunChangeSetFilterTest", "superclass": "", "interfaces": "", "fields": [], "file": "android-liquibase/android-liquibase-core/src/test/java/liquibase/changelog/filter/ShouldRunChangeSetFilterTest.java"}, "test_case": {"identifier": "accepts_noneRun", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void accepts_noneRun() throws DatabaseException {\n        Database database = createMock(Database.class);\n        expect(database.getRanChangeSetList()).andReturn(new ArrayList<RanChangeSet>());\n        replay(database);\n\n        ShouldRunChangeSetFilter filter = new ShouldRunChangeSetFilter(database);\n\n        assertTrue(filter.accepts(new ChangeSet(\"1\", \"testAuthor\", false, false, \"path/changelog\",  null, null)));\n    }", "signature": "void accepts_noneRun()", "full_signature": "@Test public void accepts_noneRun()", "class_method_signature": "ShouldRunChangeSetFilterTest.accepts_noneRun()", "testcase": true, "constructor": false, "invocations": ["createMock", "andReturn", "expect", "getRanChangeSetList", "replay", "assertTrue", "accepts"]}, "focal_class": {"identifier": "ShouldRunChangeSetFilter", "superclass": "", "interfaces": "implements ChangeSetFilter", "fields": [{"original_string": "public List<RanChangeSet> ranChangeSets;", "modifier": "public", "type": "List<RanChangeSet>", "declarator": "ranChangeSets", "var_name": "ranChangeSets"}, {"original_string": "private Database database;", "modifier": "private", "type": "Database", "declarator": "database", "var_name": "database"}], "methods": [{"identifier": "ShouldRunChangeSetFilter", "parameters": "(Database database)", "modifiers": "public", "return": "", "signature": " ShouldRunChangeSetFilter(Database database)", "full_signature": "public  ShouldRunChangeSetFilter(Database database)", "class_method_signature": "ShouldRunChangeSetFilter.ShouldRunChangeSetFilter(Database database)", "testcase": false, "constructor": true}, {"identifier": "accepts", "parameters": "(ChangeSet changeSet)", "modifiers": "@SuppressWarnings({\"RedundantIfStatement\"}) public", "return": "boolean", "signature": "boolean accepts(ChangeSet changeSet)", "full_signature": "@SuppressWarnings({\"RedundantIfStatement\"}) public boolean accepts(ChangeSet changeSet)", "class_method_signature": "ShouldRunChangeSetFilter.accepts(ChangeSet changeSet)", "testcase": false, "constructor": false}, {"identifier": "isPathEquals", "parameters": "(ChangeSet changeSet, RanChangeSet ranChangeSet)", "modifiers": "private", "return": "boolean", "signature": "boolean isPathEquals(ChangeSet changeSet, RanChangeSet ranChangeSet)", "full_signature": "private boolean isPathEquals(ChangeSet changeSet, RanChangeSet ranChangeSet)", "class_method_signature": "ShouldRunChangeSetFilter.isPathEquals(ChangeSet changeSet, RanChangeSet ranChangeSet)", "testcase": false, "constructor": false}], "file": "android-liquibase/android-liquibase-core/src/main/java/liquibase/changelog/filter/ShouldRunChangeSetFilter.java"}, "focal_method": {"identifier": "accepts", "parameters": "(ChangeSet changeSet)", "modifiers": "@SuppressWarnings({\"RedundantIfStatement\"}) public", "return": "boolean", "body": "@SuppressWarnings({\"RedundantIfStatement\"})\n    public boolean accepts(ChangeSet changeSet) {\n        for (RanChangeSet ranChangeSet : ranChangeSets) {\n            if (ranChangeSet.getId().equals(changeSet.getId())\n                    && ranChangeSet.getAuthor().equals(changeSet.getAuthor())\n                    && isPathEquals(changeSet, ranChangeSet)) {\n                if (changeSet.shouldAlwaysRun() && ranChangeSet.getLastCheckSum() != null) {\n                    return true;\n                } else if (changeSet.shouldRunOnChange() && !changeSet.generateCheckSum().equals(ranChangeSet.getLastCheckSum())) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }", "signature": "boolean accepts(ChangeSet changeSet)", "full_signature": "@SuppressWarnings({\"RedundantIfStatement\"}) public boolean accepts(ChangeSet changeSet)", "class_method_signature": "ShouldRunChangeSetFilter.accepts(ChangeSet changeSet)", "testcase": false, "constructor": false, "invocations": ["equals", "getId", "getId", "equals", "getAuthor", "getAuthor", "isPathEquals", "shouldAlwaysRun", "getLastCheckSum", "shouldRunOnChange", "equals", "generateCheckSum", "getLastCheckSum"]}, "repository": {"repo_id": 10035739, "url": "https://github.com/openforis/android-ports", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 12, "size": 2775, "license": "licensed"}}