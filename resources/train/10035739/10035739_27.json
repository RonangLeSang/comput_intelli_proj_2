{"test_class": {"identifier": "RegexMatcherTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RegexMatcher matcher;", "modifier": "private", "type": "RegexMatcher", "declarator": "matcher", "var_name": "matcher"}, {"original_string": "private static final String text=\"Pulp Fiction\\n\" +\n                \"Reservoir Dogs\\n\" +\n                \"Kill Bill\\n\";", "modifier": "private static final", "type": "String", "declarator": "text=\"Pulp Fiction\\n\" +\n                \"Reservoir Dogs\\n\" +\n                \"Kill Bill\\n\"", "var_name": "text"}], "file": "android-liquibase/android-liquibase-core/src/test/java/liquibase/util/RegexMatcherTest.java"}, "test_case": {"identifier": "testMatchingInSequentialOrder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMatchingInSequentialOrder() {\n        matcher=new RegexMatcher(text,new String[]{\"Pulp\",\"Reservoir\",\"Kill\"});\n        assertTrue(\"All matched\",matcher.allMatchedInSequentialOrder());\n\n        matcher=new RegexMatcher(text,new String[]{\"Pulp\",\"ion\"});\n        assertTrue(\"All matched\",matcher.allMatchedInSequentialOrder());\n\n        matcher=new RegexMatcher(text,new String[]{\"Pu.p\",\"^Ki.+ll$\"});\n        assertTrue(\"All matched\",matcher.allMatchedInSequentialOrder());\n\n        matcher=new RegexMatcher(text,new String[]{\"pulP\",\"kiLL\"});\n        assertTrue(\"Case insensitive\",matcher.allMatchedInSequentialOrder());\n\n        matcher=new RegexMatcher(text,new String[]{\"Reservoir\",\"Pulp\",\"Dogs\"});\n        assertFalse(\"Not in order\",matcher.allMatchedInSequentialOrder());\n\n        matcher=new RegexMatcher(text,new String[]{\"Memento\"});\n        assertFalse(\"Not found\",matcher.allMatchedInSequentialOrder());\n    }", "signature": "void testMatchingInSequentialOrder()", "full_signature": "@Test public void testMatchingInSequentialOrder()", "class_method_signature": "RegexMatcherTest.testMatchingInSequentialOrder()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "allMatchedInSequentialOrder", "assertTrue", "allMatchedInSequentialOrder", "assertTrue", "allMatchedInSequentialOrder", "assertTrue", "allMatchedInSequentialOrder", "assertFalse", "allMatchedInSequentialOrder", "assertFalse", "allMatchedInSequentialOrder"]}, "focal_class": {"identifier": "RegexMatcher", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String text;", "modifier": "private", "type": "String", "declarator": "text", "var_name": "text"}, {"original_string": "private Pattern []patterns;", "modifier": "private", "type": "Pattern []", "declarator": "patterns", "var_name": "patterns"}, {"original_string": "private boolean allMatched;", "modifier": "private", "type": "boolean", "declarator": "allMatched", "var_name": "allMatched"}], "methods": [{"identifier": "RegexMatcher", "parameters": "(String text,String [] regexToMatch)", "modifiers": "public", "return": "", "signature": " RegexMatcher(String text,String [] regexToMatch)", "full_signature": "public  RegexMatcher(String text,String [] regexToMatch)", "class_method_signature": "RegexMatcher.RegexMatcher(String text,String [] regexToMatch)", "testcase": false, "constructor": true}, {"identifier": "checkMatchingInSequentialOrder", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean checkMatchingInSequentialOrder()", "full_signature": "private boolean checkMatchingInSequentialOrder()", "class_method_signature": "RegexMatcher.checkMatchingInSequentialOrder()", "testcase": false, "constructor": false}, {"identifier": "allMatchedInSequentialOrder", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean allMatchedInSequentialOrder()", "full_signature": "public boolean allMatchedInSequentialOrder()", "class_method_signature": "RegexMatcher.allMatchedInSequentialOrder()", "testcase": false, "constructor": false}], "file": "android-liquibase/android-liquibase-core/src/main/java/liquibase/util/RegexMatcher.java"}, "focal_method": {"identifier": "allMatchedInSequentialOrder", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean allMatchedInSequentialOrder() {\n        return allMatched;\n    }", "signature": "boolean allMatchedInSequentialOrder()", "full_signature": "public boolean allMatchedInSequentialOrder()", "class_method_signature": "RegexMatcher.allMatchedInSequentialOrder()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 10035739, "url": "https://github.com/openforis/android-ports", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 12, "size": 2775, "license": "licensed"}}