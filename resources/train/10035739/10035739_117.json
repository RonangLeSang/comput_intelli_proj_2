{"test_class": {"identifier": "XMLChangeLogSerializerTest", "superclass": "", "interfaces": "", "fields": [], "file": "android-liquibase/android-liquibase-core/src/test/java/liquibase/serializer/core/xml/XMLChangeLogSerializerTest.java"}, "test_case": {"identifier": "createNode_DropForeignKeyConstraintChange", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createNode_DropForeignKeyConstraintChange() throws Exception {\n        DropForeignKeyConstraintChange change = new DropForeignKeyConstraintChange();\n        change.setBaseTableSchemaName(\"SCHEMA_NAME\");\n        change.setBaseTableName(\"TABLE_NAME\");\n        change.setConstraintName(\"FK_NAME\");\n\n        Element node = new XMLChangeLogSerializer(DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument()).createNode(change);\n        assertEquals(\"dropForeignKeyConstraint\", node.getTagName());\n        assertEquals(\"SCHEMA_NAME\", node.getAttribute(\"baseTableSchemaName\"));\n        assertEquals(\"TABLE_NAME\", node.getAttribute(\"baseTableName\"));\n        assertEquals(\"FK_NAME\", node.getAttribute(\"constraintName\"));\n    }", "signature": "void createNode_DropForeignKeyConstraintChange()", "full_signature": "@Test public void createNode_DropForeignKeyConstraintChange()", "class_method_signature": "XMLChangeLogSerializerTest.createNode_DropForeignKeyConstraintChange()", "testcase": true, "constructor": false, "invocations": ["setBaseTableSchemaName", "setBaseTableName", "setConstraintName", "createNode", "newDocument", "newDocumentBuilder", "newInstance", "assertEquals", "getTagName", "assertEquals", "getAttribute", "assertEquals", "getAttribute", "assertEquals", "getAttribute"]}, "focal_class": {"identifier": "XMLChangeLogSerializer", "superclass": "", "interfaces": "implements ChangeLogSerializer", "fields": [{"original_string": "private Document currentChangeLogFileDOM;", "modifier": "private", "type": "Document", "declarator": "currentChangeLogFileDOM", "var_name": "currentChangeLogFileDOM"}], "methods": [{"identifier": "XMLChangeLogSerializer", "parameters": "()", "modifiers": "public", "return": "", "signature": " XMLChangeLogSerializer()", "full_signature": "public  XMLChangeLogSerializer()", "class_method_signature": "XMLChangeLogSerializer.XMLChangeLogSerializer()", "testcase": false, "constructor": true}, {"identifier": "XMLChangeLogSerializer", "parameters": "(Document currentChangeLogFileDOM)", "modifiers": "protected", "return": "", "signature": " XMLChangeLogSerializer(Document currentChangeLogFileDOM)", "full_signature": "protected  XMLChangeLogSerializer(Document currentChangeLogFileDOM)", "class_method_signature": "XMLChangeLogSerializer.XMLChangeLogSerializer(Document currentChangeLogFileDOM)", "testcase": false, "constructor": true}, {"identifier": "setCurrentChangeLogFileDOM", "parameters": "(Document currentChangeLogFileDOM)", "modifiers": "public", "return": "void", "signature": "void setCurrentChangeLogFileDOM(Document currentChangeLogFileDOM)", "full_signature": "public void setCurrentChangeLogFileDOM(Document currentChangeLogFileDOM)", "class_method_signature": "XMLChangeLogSerializer.setCurrentChangeLogFileDOM(Document currentChangeLogFileDOM)", "testcase": false, "constructor": false}, {"identifier": "getValidFileExtensions", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getValidFileExtensions()", "full_signature": "public String[] getValidFileExtensions()", "class_method_signature": "XMLChangeLogSerializer.getValidFileExtensions()", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(DatabaseChangeLog databaseChangeLog)", "modifiers": "public", "return": "String", "signature": "String serialize(DatabaseChangeLog databaseChangeLog)", "full_signature": "public String serialize(DatabaseChangeLog databaseChangeLog)", "class_method_signature": "XMLChangeLogSerializer.serialize(DatabaseChangeLog databaseChangeLog)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(Change change)", "modifiers": "public", "return": "String", "signature": "String serialize(Change change)", "full_signature": "public String serialize(Change change)", "class_method_signature": "XMLChangeLogSerializer.serialize(Change change)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(SqlVisitor visitor)", "modifiers": "public", "return": "String", "signature": "String serialize(SqlVisitor visitor)", "full_signature": "public String serialize(SqlVisitor visitor)", "class_method_signature": "XMLChangeLogSerializer.serialize(SqlVisitor visitor)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(ColumnConfig columnConfig)", "modifiers": "public", "return": "String", "signature": "String serialize(ColumnConfig columnConfig)", "full_signature": "public String serialize(ColumnConfig columnConfig)", "class_method_signature": "XMLChangeLogSerializer.serialize(ColumnConfig columnConfig)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(ChangeSet changeSet)", "modifiers": "public", "return": "String", "signature": "String serialize(ChangeSet changeSet)", "full_signature": "public String serialize(ChangeSet changeSet)", "class_method_signature": "XMLChangeLogSerializer.serialize(ChangeSet changeSet)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(List<ChangeSet> changeSets, OutputStream out)", "modifiers": "public", "return": "void", "signature": "void write(List<ChangeSet> changeSets, OutputStream out)", "full_signature": "public void write(List<ChangeSet> changeSets, OutputStream out)", "class_method_signature": "XMLChangeLogSerializer.write(List<ChangeSet> changeSets, OutputStream out)", "testcase": false, "constructor": false}, {"identifier": "createNode", "parameters": "(SqlVisitor visitor)", "modifiers": "public", "return": "Element", "signature": "Element createNode(SqlVisitor visitor)", "full_signature": "public Element createNode(SqlVisitor visitor)", "class_method_signature": "XMLChangeLogSerializer.createNode(SqlVisitor visitor)", "testcase": false, "constructor": false}, {"identifier": "createNode", "parameters": "(Change change)", "modifiers": "public", "return": "Element", "signature": "Element createNode(Change change)", "full_signature": "public Element createNode(Change change)", "class_method_signature": "XMLChangeLogSerializer.createNode(Change change)", "testcase": false, "constructor": false}, {"identifier": "createNode", "parameters": "(String nodeName, String nodeContent)", "modifiers": "public", "return": "Element", "signature": "Element createNode(String nodeName, String nodeContent)", "full_signature": "public Element createNode(String nodeName, String nodeContent)", "class_method_signature": "XMLChangeLogSerializer.createNode(String nodeName, String nodeContent)", "testcase": false, "constructor": false}, {"identifier": "createNode", "parameters": "(ColumnConfig columnConfig)", "modifiers": "public", "return": "Element", "signature": "Element createNode(ColumnConfig columnConfig)", "full_signature": "public Element createNode(ColumnConfig columnConfig)", "class_method_signature": "XMLChangeLogSerializer.createNode(ColumnConfig columnConfig)", "testcase": false, "constructor": false}, {"identifier": "createNode", "parameters": "(ChangeSet changeSet)", "modifiers": "public", "return": "Element", "signature": "Element createNode(ChangeSet changeSet)", "full_signature": "public Element createNode(ChangeSet changeSet)", "class_method_signature": "XMLChangeLogSerializer.createNode(ChangeSet changeSet)", "testcase": false, "constructor": false}, {"identifier": "createNode", "parameters": "(CustomChangeWrapper change)", "modifiers": "public", "return": "Element", "signature": "Element createNode(CustomChangeWrapper change)", "full_signature": "public Element createNode(CustomChangeWrapper change)", "class_method_signature": "XMLChangeLogSerializer.createNode(CustomChangeWrapper change)", "testcase": false, "constructor": false}, {"identifier": "nodeToStringBuffer", "parameters": "(Node node, StringBuffer buffer)", "modifiers": "private", "return": "void", "signature": "void nodeToStringBuffer(Node node, StringBuffer buffer)", "full_signature": "private void nodeToStringBuffer(Node node, StringBuffer buffer)", "class_method_signature": "XMLChangeLogSerializer.nodeToStringBuffer(Node node, StringBuffer buffer)", "testcase": false, "constructor": false}], "file": "android-liquibase/android-liquibase-core/src/main/java/liquibase/serializer/core/xml/XMLChangeLogSerializer.java"}, "focal_method": {"identifier": "createNode", "parameters": "(SqlVisitor visitor)", "modifiers": "public", "return": "Element", "body": "public Element createNode(SqlVisitor visitor) {\n        Element node = currentChangeLogFileDOM.createElementNS(XMLChangeLogSAXParser.getDatabaseChangeLogNameSpace(), visitor.getName());\n        try {\n            List<Field> allFields = new ArrayList<Field>();\n            Class classToExtractFieldsFrom = visitor.getClass();\n            while (!classToExtractFieldsFrom.equals(Object.class)) {\n                allFields.addAll(Arrays.asList(classToExtractFieldsFrom.getDeclaredFields()));\n                classToExtractFieldsFrom = classToExtractFieldsFrom.getSuperclass();\n            }\n\n            for (Field field : allFields) {\n                field.setAccessible(true);\n                ChangeProperty changePropertyAnnotation = field.getAnnotation(ChangeProperty.class);\n                if (changePropertyAnnotation != null && !changePropertyAnnotation.includeInSerialization()) {\n                    continue;\n                }\n                if (field.getName().equals(\"serialVersionUID\")) {\n                    continue;\n                }\n                if (field.getName().equals(\"$VRc\")) { //from emma\n                    continue;\n                }\n\n\n                String propertyName = field.getName();\n                Object value = field.get(visitor);\n                if (value != null) {\n                    node.setAttribute(propertyName, value.toString());\n                }\n            }\n        } catch (Exception e) {\n            throw new UnexpectedLiquibaseException(e);\n        }\n\n        return node;\n    }", "signature": "Element createNode(SqlVisitor visitor)", "full_signature": "public Element createNode(SqlVisitor visitor)", "class_method_signature": "XMLChangeLogSerializer.createNode(SqlVisitor visitor)", "testcase": false, "constructor": false, "invocations": ["createElementNS", "getDatabaseChangeLogNameSpace", "getName", "getClass", "equals", "addAll", "asList", "getDeclaredFields", "getSuperclass", "setAccessible", "getAnnotation", "includeInSerialization", "equals", "getName", "equals", "getName", "getName", "get", "setAttribute", "toString"]}, "repository": {"repo_id": 10035739, "url": "https://github.com/openforis/android-ports", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 12, "size": 2775, "license": "licensed"}}