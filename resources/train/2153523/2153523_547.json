{"test_class": {"identifier": "FeedProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static String FEED_TITLE = \"Example Feed\";", "modifier": "private final static", "type": "String", "declarator": "FEED_TITLE = \"Example Feed\"", "var_name": "FEED_TITLE"}, {"original_string": "private final static String FEED_AUTHOR = \"John Doe\";", "modifier": "private final static", "type": "String", "declarator": "FEED_AUTHOR = \"John Doe\"", "var_name": "FEED_AUTHOR"}, {"original_string": "private final static String FEED_AUTHOR_EMAIL = \"john.doe@example.com\";", "modifier": "private final static", "type": "String", "declarator": "FEED_AUTHOR_EMAIL = \"john.doe@example.com\"", "var_name": "FEED_AUTHOR_EMAIL"}, {"original_string": "private final static String FEED_ENTRY_TITLE = \"Atom-Powered Robots Run Amok\";", "modifier": "private final static", "type": "String", "declarator": "FEED_ENTRY_TITLE = \"Atom-Powered Robots Run Amok\"", "var_name": "FEED_ENTRY_TITLE"}, {"original_string": "private final static String FEED_ENTRY_LINK = \"http://example.org/2003/12/13/entry03\";", "modifier": "private final static", "type": "String", "declarator": "FEED_ENTRY_LINK = \"http://example.org/2003/12/13/entry03\"", "var_name": "FEED_ENTRY_LINK"}, {"original_string": "private final static String FEED_ENTRY_SUMMARY = \"Some text.\";", "modifier": "private final static", "type": "String", "declarator": "FEED_ENTRY_SUMMARY = \"Some text.\"", "var_name": "FEED_ENTRY_SUMMARY"}, {"original_string": "private final static String URL_RSS = \"http://www.example.com/rss.xml\";", "modifier": "private final static", "type": "String", "declarator": "URL_RSS = \"http://www.example.com/rss.xml\"", "var_name": "URL_RSS"}, {"original_string": "private final static long TIMESTAMP = 1212790800000L;", "modifier": "private final static", "type": "long", "declarator": "TIMESTAMP = 1212790800000L", "var_name": "TIMESTAMP"}, {"original_string": "private final static String DATE_RSS = \"Fri, 06 Jun 2008 22:20:00 GMT\";", "modifier": "private final static", "type": "String", "declarator": "DATE_RSS = \"Fri, 06 Jun 2008 22:20:00 GMT\"", "var_name": "DATE_RSS"}, {"original_string": "private final static String DATA_RSS =\n      \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\" +\n      \"<rss version=\\\"2.0\\\"><channel>\" +\n      \"<title>\" + FEED_TITLE + \"</title>\" +\n      \"<link>http://example.org/</link>\" +\n      \"<description>Example RSS Feed</description>\" +\n      \"<pubDate>Sun, 19 May 2002 15:21:36 GMT</pubDate>\" +\n      \"<item>\" +\n      \"<title>\" + FEED_ENTRY_TITLE + \"</title>\" +\n      \"<link>\" + FEED_ENTRY_LINK + \"</link>\" +\n      \"<guid>\" + FEED_ENTRY_LINK + \"#item1\" + \"</guid>\" +\n      \"<pubDate>\" + DATE_RSS + \"</pubDate>\" +\n      \"<description>\" + FEED_ENTRY_SUMMARY + \"</description>\" +\n      \"<author>\" + FEED_AUTHOR_EMAIL + \"</author>\" +\n      \"</item>\" +\n      \"<item>\" +\n      \"<title>\" + FEED_ENTRY_TITLE + \"</title>\" +\n      \"<link>\" + FEED_ENTRY_LINK + \"</link>\" +\n      \"<guid>\" + FEED_ENTRY_LINK + \"#item1\" + \"</guid>\" +\n      \"<description>\" + FEED_ENTRY_SUMMARY + \"</description>\" +\n      \"</item>\" +\n      \"</channel></rss>\";", "modifier": "private final static", "type": "String", "declarator": "DATA_RSS =\n      \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\" +\n      \"<rss version=\\\"2.0\\\"><channel>\" +\n      \"<title>\" + FEED_TITLE + \"</title>\" +\n      \"<link>http://example.org/</link>\" +\n      \"<description>Example RSS Feed</description>\" +\n      \"<pubDate>Sun, 19 May 2002 15:21:36 GMT</pubDate>\" +\n      \"<item>\" +\n      \"<title>\" + FEED_ENTRY_TITLE + \"</title>\" +\n      \"<link>\" + FEED_ENTRY_LINK + \"</link>\" +\n      \"<guid>\" + FEED_ENTRY_LINK + \"#item1\" + \"</guid>\" +\n      \"<pubDate>\" + DATE_RSS + \"</pubDate>\" +\n      \"<description>\" + FEED_ENTRY_SUMMARY + \"</description>\" +\n      \"<author>\" + FEED_AUTHOR_EMAIL + \"</author>\" +\n      \"</item>\" +\n      \"<item>\" +\n      \"<title>\" + FEED_ENTRY_TITLE + \"</title>\" +\n      \"<link>\" + FEED_ENTRY_LINK + \"</link>\" +\n      \"<guid>\" + FEED_ENTRY_LINK + \"#item1\" + \"</guid>\" +\n      \"<description>\" + FEED_ENTRY_SUMMARY + \"</description>\" +\n      \"</item>\" +\n      \"</channel></rss>\"", "var_name": "DATA_RSS"}, {"original_string": "private final static String MEDIA_CONTENT_URL1 = \"http://example.com/img1.jpg\";", "modifier": "private final static", "type": "String", "declarator": "MEDIA_CONTENT_URL1 = \"http://example.com/img1.jpg\"", "var_name": "MEDIA_CONTENT_URL1"}, {"original_string": "private final static String MEDIA_CONTENT_URL2 = \"http://example.com/img2.jpg\";", "modifier": "private final static", "type": "String", "declarator": "MEDIA_CONTENT_URL2 = \"http://example.com/img2.jpg\"", "var_name": "MEDIA_CONTENT_URL2"}, {"original_string": "private final static String MEDIA_CONTENT_URL3 = \"http://example.com/img3.jpg\";", "modifier": "private final static", "type": "String", "declarator": "MEDIA_CONTENT_URL3 = \"http://example.com/img3.jpg\"", "var_name": "MEDIA_CONTENT_URL3"}, {"original_string": "private final static String MEDIA_CONTENT_TYPE = \"image/jpeg\";", "modifier": "private final static", "type": "String", "declarator": "MEDIA_CONTENT_TYPE = \"image/jpeg\"", "var_name": "MEDIA_CONTENT_TYPE"}, {"original_string": "private final static int MEDIA_CONTENT_WIDTH = 800;", "modifier": "private final static", "type": "int", "declarator": "MEDIA_CONTENT_WIDTH = 800", "var_name": "MEDIA_CONTENT_WIDTH"}, {"original_string": "private final static int MEDIA_CONTENT_HEIGHT = 600;", "modifier": "private final static", "type": "int", "declarator": "MEDIA_CONTENT_HEIGHT = 600", "var_name": "MEDIA_CONTENT_HEIGHT"}, {"original_string": "private final static String MEDIA_THUMB_URL = \"http://exmaple.com/thumb.jpg\";", "modifier": "private final static", "type": "String", "declarator": "MEDIA_THUMB_URL = \"http://exmaple.com/thumb.jpg\"", "var_name": "MEDIA_THUMB_URL"}, {"original_string": "private final static int MEDIA_THUMB_WIDTH = 75;", "modifier": "private final static", "type": "int", "declarator": "MEDIA_THUMB_WIDTH = 75", "var_name": "MEDIA_THUMB_WIDTH"}, {"original_string": "private final static int MEDIA_THUMB_HEIGHT = 50;", "modifier": "private final static", "type": "int", "declarator": "MEDIA_THUMB_HEIGHT = 50", "var_name": "MEDIA_THUMB_HEIGHT"}, {"original_string": "private final static String DATA_RSS_WITH_MEDIARSS =\n      \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\" +\n      \"<rss version=\\\"2.0\\\" xmlns:media=\\\"http://search.yahoo.com/mrss/\\\"><channel>\" +\n      \"<title>\" + FEED_TITLE + \"</title>\" +\n      \"<link>http://example.org/</link>\" +\n      \"<description>Example RSS Feed</description>\" +\n      \"<pubDate>Sun, 19 May 2002 15:21:36 GMT</pubDate>\" +\n      \"<item>\" +\n      \"<title>\" + FEED_ENTRY_TITLE + \"</title>\" +\n      \"<link>\" + FEED_ENTRY_LINK + \"</link>\" +\n      \"<guid>\" + FEED_ENTRY_LINK + \"#item1\" + \"</guid>\" +\n      \"<pubDate>\" + DATE_RSS + \"</pubDate>\" +\n      \"<description>\" + FEED_ENTRY_SUMMARY + \"</description>\" +\n      \"<author>\" + FEED_AUTHOR_EMAIL + \"</author>\" +\n      \"<media:content url=\\\"\" + MEDIA_CONTENT_URL1 + \"\\\" type=\\\"\" + MEDIA_CONTENT_TYPE + \"\\\" isDefault=\\\"false\\\" expression=\\\"sample\\\" width=\\\"\" + MEDIA_CONTENT_WIDTH + \"\\\" height=\\\"\" + MEDIA_CONTENT_HEIGHT + \"\\\" />\" +\n      \"<media:content url=\\\"\" + MEDIA_CONTENT_URL2 + \"\\\" type=\\\"\" + MEDIA_CONTENT_TYPE + \"\\\" isDefault=\\\"false\\\" expression=\\\"sample\\\" width=\\\"\" + MEDIA_CONTENT_WIDTH + \"\\\" height=\\\"\" + MEDIA_CONTENT_HEIGHT + \"\\\" />\" +\n      \"<media:content url=\\\"\" + MEDIA_CONTENT_URL3 + \"\\\" type=\\\"\" + MEDIA_CONTENT_TYPE + \"\\\" isDefault=\\\"false\\\" expression=\\\"sample\\\" width=\\\"\" + MEDIA_CONTENT_WIDTH + \"\\\" height=\\\"\" + MEDIA_CONTENT_HEIGHT + \"\\\" />\" +\n      \"<media:thumbnail url=\\\"\" + MEDIA_THUMB_URL + \"\\\" width=\\\"\" + MEDIA_THUMB_WIDTH + \"\\\" height=\\\"\" + MEDIA_THUMB_HEIGHT + \"\\\" />\" +\n      \"</item>\" +\n      \"<item>\" +\n      \"<title>\" + FEED_ENTRY_TITLE + \"</title>\" +\n      \"<link>\" + FEED_ENTRY_LINK + \"</link>\" +\n      \"<guid>\" + FEED_ENTRY_LINK + \"#item1\" + \"</guid>\" +\n      \"<description>\" + FEED_ENTRY_SUMMARY + \"</description>\" +\n      \"<media:thumbnail url=\\\"\" + MEDIA_THUMB_URL + \"\\\" />\" +\n      \"</item>\" +\n      \"</channel></rss>\";", "modifier": "private final static", "type": "String", "declarator": "DATA_RSS_WITH_MEDIARSS =\n      \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\" +\n      \"<rss version=\\\"2.0\\\" xmlns:media=\\\"http://search.yahoo.com/mrss/\\\"><channel>\" +\n      \"<title>\" + FEED_TITLE + \"</title>\" +\n      \"<link>http://example.org/</link>\" +\n      \"<description>Example RSS Feed</description>\" +\n      \"<pubDate>Sun, 19 May 2002 15:21:36 GMT</pubDate>\" +\n      \"<item>\" +\n      \"<title>\" + FEED_ENTRY_TITLE + \"</title>\" +\n      \"<link>\" + FEED_ENTRY_LINK + \"</link>\" +\n      \"<guid>\" + FEED_ENTRY_LINK + \"#item1\" + \"</guid>\" +\n      \"<pubDate>\" + DATE_RSS + \"</pubDate>\" +\n      \"<description>\" + FEED_ENTRY_SUMMARY + \"</description>\" +\n      \"<author>\" + FEED_AUTHOR_EMAIL + \"</author>\" +\n      \"<media:content url=\\\"\" + MEDIA_CONTENT_URL1 + \"\\\" type=\\\"\" + MEDIA_CONTENT_TYPE + \"\\\" isDefault=\\\"false\\\" expression=\\\"sample\\\" width=\\\"\" + MEDIA_CONTENT_WIDTH + \"\\\" height=\\\"\" + MEDIA_CONTENT_HEIGHT + \"\\\" />\" +\n      \"<media:content url=\\\"\" + MEDIA_CONTENT_URL2 + \"\\\" type=\\\"\" + MEDIA_CONTENT_TYPE + \"\\\" isDefault=\\\"false\\\" expression=\\\"sample\\\" width=\\\"\" + MEDIA_CONTENT_WIDTH + \"\\\" height=\\\"\" + MEDIA_CONTENT_HEIGHT + \"\\\" />\" +\n      \"<media:content url=\\\"\" + MEDIA_CONTENT_URL3 + \"\\\" type=\\\"\" + MEDIA_CONTENT_TYPE + \"\\\" isDefault=\\\"false\\\" expression=\\\"sample\\\" width=\\\"\" + MEDIA_CONTENT_WIDTH + \"\\\" height=\\\"\" + MEDIA_CONTENT_HEIGHT + \"\\\" />\" +\n      \"<media:thumbnail url=\\\"\" + MEDIA_THUMB_URL + \"\\\" width=\\\"\" + MEDIA_THUMB_WIDTH + \"\\\" height=\\\"\" + MEDIA_THUMB_HEIGHT + \"\\\" />\" +\n      \"</item>\" +\n      \"<item>\" +\n      \"<title>\" + FEED_ENTRY_TITLE + \"</title>\" +\n      \"<link>\" + FEED_ENTRY_LINK + \"</link>\" +\n      \"<guid>\" + FEED_ENTRY_LINK + \"#item1\" + \"</guid>\" +\n      \"<description>\" + FEED_ENTRY_SUMMARY + \"</description>\" +\n      \"<media:thumbnail url=\\\"\" + MEDIA_THUMB_URL + \"\\\" />\" +\n      \"</item>\" +\n      \"</channel></rss>\"", "var_name": "DATA_RSS_WITH_MEDIARSS"}, {"original_string": "private final static String URL_ATOM = \"http://www.example.com/feed.atom\";", "modifier": "private final static", "type": "String", "declarator": "URL_ATOM = \"http://www.example.com/feed.atom\"", "var_name": "URL_ATOM"}, {"original_string": "private final static String DATE_ATOM = \"2008-06-06T22:20:00Z\";", "modifier": "private final static", "type": "String", "declarator": "DATE_ATOM = \"2008-06-06T22:20:00Z\"", "var_name": "DATE_ATOM"}, {"original_string": "private final static String DATA_ATOM =\n      \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\" +\n      \"<feed xmlns=\\\"http://www.w3.org/2005/Atom\\\">\" +\n      \"<title>\" + FEED_TITLE + \"</title>\" +\n      \"<link href=\\\"http://example.org/\\\"/>\" +\n      \"<updated>2003-12-13T18:30:02Z</updated>\" +\n      \"<id>urn:uuid:60a76c80-d399-11d9-b93C-0003939e0af6</id>\" +\n      \"<author><name>\" + FEED_AUTHOR + \"</name></author>\" +\n      \"<entry>\" +\n      \"<title>\" + FEED_ENTRY_TITLE + \"</title>\" +\n      \"<link href=\\\"\" + FEED_ENTRY_LINK + \"\\\"/>\" +\n      \"<id>urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a</id>\" +\n      \"<updated>\" + DATE_ATOM + \"</updated>\" +\n      \"<summary>\" + FEED_ENTRY_SUMMARY + \"</summary>\" +\n      \"</entry>\" +\n      \"<entry>\" +\n      \"<title>\" + FEED_ENTRY_TITLE + \"</title>\" +\n      \"<link href=\\\"\" + FEED_ENTRY_LINK + \"\\\"/>\" +\n      \"<id>urn:uuid:1225c695-cfb8-4ebb-aaaa-80da3443fa6a</id>\" +\n      \"<summary>\" + FEED_ENTRY_SUMMARY + \"</summary>\" +\n      \"</entry>\" +\n      \"</feed>\";", "modifier": "private final static", "type": "String", "declarator": "DATA_ATOM =\n      \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\" +\n      \"<feed xmlns=\\\"http://www.w3.org/2005/Atom\\\">\" +\n      \"<title>\" + FEED_TITLE + \"</title>\" +\n      \"<link href=\\\"http://example.org/\\\"/>\" +\n      \"<updated>2003-12-13T18:30:02Z</updated>\" +\n      \"<id>urn:uuid:60a76c80-d399-11d9-b93C-0003939e0af6</id>\" +\n      \"<author><name>\" + FEED_AUTHOR + \"</name></author>\" +\n      \"<entry>\" +\n      \"<title>\" + FEED_ENTRY_TITLE + \"</title>\" +\n      \"<link href=\\\"\" + FEED_ENTRY_LINK + \"\\\"/>\" +\n      \"<id>urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a</id>\" +\n      \"<updated>\" + DATE_ATOM + \"</updated>\" +\n      \"<summary>\" + FEED_ENTRY_SUMMARY + \"</summary>\" +\n      \"</entry>\" +\n      \"<entry>\" +\n      \"<title>\" + FEED_ENTRY_TITLE + \"</title>\" +\n      \"<link href=\\\"\" + FEED_ENTRY_LINK + \"\\\"/>\" +\n      \"<id>urn:uuid:1225c695-cfb8-4ebb-aaaa-80da3443fa6a</id>\" +\n      \"<summary>\" + FEED_ENTRY_SUMMARY + \"</summary>\" +\n      \"</entry>\" +\n      \"</feed>\"", "var_name": "DATA_ATOM"}, {"original_string": "private final static String DATA_ATOM_WITH_MEDIARSS =\n      \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\" +\n      \"<feed xmlns=\\\"http://www.w3.org/2005/Atom\\\" xmlns:media=\\\"http://search.yahoo.com/mrss/\\\">\" +\n      \"<title>\" + FEED_TITLE + \"</title>\" +\n      \"<link href=\\\"http://example.org/\\\"/>\" +\n      \"<updated>2003-12-13T18:30:02Z</updated>\" +\n      \"<id>urn:uuid:60a76c80-d399-11d9-b93C-0003939e0af6</id>\" +\n      \"<author><name>\" + FEED_AUTHOR + \"</name></author>\" +\n      \"<entry>\" +\n      \"<title>\" + FEED_ENTRY_TITLE + \"</title>\" +\n      \"<link href=\\\"\" + FEED_ENTRY_LINK + \"\\\"/>\" +\n      \"<id>urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a</id>\" +\n      \"<updated>\" + DATE_ATOM + \"</updated>\" +\n      \"<summary>\" + FEED_ENTRY_SUMMARY + \"</summary>\" +\n      \"<media:content url=\\\"\" + MEDIA_CONTENT_URL1 + \"\\\" type=\\\"\" + MEDIA_CONTENT_TYPE + \"\\\" isDefault=\\\"false\\\" expression=\\\"sample\\\" width=\\\"\" + MEDIA_CONTENT_WIDTH + \"\\\" height=\\\"\" + MEDIA_CONTENT_HEIGHT + \"\\\" />\" +\n      \"<media:content url=\\\"\" + MEDIA_CONTENT_URL2 + \"\\\" type=\\\"\" + MEDIA_CONTENT_TYPE + \"\\\" isDefault=\\\"false\\\" expression=\\\"sample\\\" width=\\\"\" + MEDIA_CONTENT_WIDTH + \"\\\" height=\\\"\" + MEDIA_CONTENT_HEIGHT + \"\\\" />\" +\n      \"<media:content url=\\\"\" + MEDIA_CONTENT_URL3 + \"\\\" type=\\\"\" + MEDIA_CONTENT_TYPE + \"\\\" isDefault=\\\"false\\\" expression=\\\"sample\\\" width=\\\"\" + MEDIA_CONTENT_WIDTH + \"\\\" height=\\\"\" + MEDIA_CONTENT_HEIGHT + \"\\\" />\" +\n      \"<media:thumbnail url=\\\"\" + MEDIA_THUMB_URL + \"\\\" width=\\\"\" + MEDIA_THUMB_WIDTH + \"\\\" height=\\\"\" + MEDIA_THUMB_HEIGHT + \"\\\" />\" +\n      \"</entry>\" +\n      \"<entry>\" +\n      \"<title>\" + FEED_ENTRY_TITLE + \"</title>\" +\n      \"<link href=\\\"\" + FEED_ENTRY_LINK + \"\\\"/>\" +\n      \"<id>urn:uuid:1225c695-cfb8-4ebb-aaaa-80da3443fa6a</id>\" +\n      \"<summary>\" + FEED_ENTRY_SUMMARY + \"</summary>\" +\n      \"<media:thumbnail url=\\\"\" + MEDIA_THUMB_URL + \"\\\" />\" +\n      \"</entry>\" +\n      \"</feed>\";", "modifier": "private final static", "type": "String", "declarator": "DATA_ATOM_WITH_MEDIARSS =\n      \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\" +\n      \"<feed xmlns=\\\"http://www.w3.org/2005/Atom\\\" xmlns:media=\\\"http://search.yahoo.com/mrss/\\\">\" +\n      \"<title>\" + FEED_TITLE + \"</title>\" +\n      \"<link href=\\\"http://example.org/\\\"/>\" +\n      \"<updated>2003-12-13T18:30:02Z</updated>\" +\n      \"<id>urn:uuid:60a76c80-d399-11d9-b93C-0003939e0af6</id>\" +\n      \"<author><name>\" + FEED_AUTHOR + \"</name></author>\" +\n      \"<entry>\" +\n      \"<title>\" + FEED_ENTRY_TITLE + \"</title>\" +\n      \"<link href=\\\"\" + FEED_ENTRY_LINK + \"\\\"/>\" +\n      \"<id>urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a</id>\" +\n      \"<updated>\" + DATE_ATOM + \"</updated>\" +\n      \"<summary>\" + FEED_ENTRY_SUMMARY + \"</summary>\" +\n      \"<media:content url=\\\"\" + MEDIA_CONTENT_URL1 + \"\\\" type=\\\"\" + MEDIA_CONTENT_TYPE + \"\\\" isDefault=\\\"false\\\" expression=\\\"sample\\\" width=\\\"\" + MEDIA_CONTENT_WIDTH + \"\\\" height=\\\"\" + MEDIA_CONTENT_HEIGHT + \"\\\" />\" +\n      \"<media:content url=\\\"\" + MEDIA_CONTENT_URL2 + \"\\\" type=\\\"\" + MEDIA_CONTENT_TYPE + \"\\\" isDefault=\\\"false\\\" expression=\\\"sample\\\" width=\\\"\" + MEDIA_CONTENT_WIDTH + \"\\\" height=\\\"\" + MEDIA_CONTENT_HEIGHT + \"\\\" />\" +\n      \"<media:content url=\\\"\" + MEDIA_CONTENT_URL3 + \"\\\" type=\\\"\" + MEDIA_CONTENT_TYPE + \"\\\" isDefault=\\\"false\\\" expression=\\\"sample\\\" width=\\\"\" + MEDIA_CONTENT_WIDTH + \"\\\" height=\\\"\" + MEDIA_CONTENT_HEIGHT + \"\\\" />\" +\n      \"<media:thumbnail url=\\\"\" + MEDIA_THUMB_URL + \"\\\" width=\\\"\" + MEDIA_THUMB_WIDTH + \"\\\" height=\\\"\" + MEDIA_THUMB_HEIGHT + \"\\\" />\" +\n      \"</entry>\" +\n      \"<entry>\" +\n      \"<title>\" + FEED_ENTRY_TITLE + \"</title>\" +\n      \"<link href=\\\"\" + FEED_ENTRY_LINK + \"\\\"/>\" +\n      \"<id>urn:uuid:1225c695-cfb8-4ebb-aaaa-80da3443fa6a</id>\" +\n      \"<summary>\" + FEED_ENTRY_SUMMARY + \"</summary>\" +\n      \"<media:thumbnail url=\\\"\" + MEDIA_THUMB_URL + \"\\\" />\" +\n      \"</entry>\" +\n      \"</feed>\"", "var_name": "DATA_ATOM_WITH_MEDIARSS"}, {"original_string": "private final static String BAD_XML = \"broken xml !!!! & ><\";", "modifier": "private final static", "type": "String", "declarator": "BAD_XML = \"broken xml !!!! & ><\"", "var_name": "BAD_XML"}, {"original_string": "private final static String INVALID_XML = \"<data><foo/></data>\";", "modifier": "private final static", "type": "String", "declarator": "INVALID_XML = \"<data><foo/></data>\"", "var_name": "INVALID_XML"}, {"original_string": "private final FeedProcessor processor;", "modifier": "private final", "type": "FeedProcessor", "declarator": "processor", "var_name": "processor"}], "file": "java/gadgets/src/test/java/org/apache/shindig/gadgets/FeedProcessorTest.java"}, "test_case": {"identifier": "parseAtom", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void parseAtom() throws Exception {\n    JSONObject feed = processor.process(URL_ATOM, DATA_ATOM, true, 1);\n\n    assertEquals(URL_ATOM, feed.getString(\"URL\"));\n    assertEquals(FEED_TITLE, feed.getString(\"Title\"));\n    assertEquals(FEED_AUTHOR, feed.getString(\"Author\"));\n\n    JSONArray entryArray = feed.getJSONArray(\"Entry\");\n    JSONObject entry = entryArray.getJSONObject(0);\n\n    assertEquals(1, entryArray.length());\n    assertEquals(FEED_ENTRY_TITLE, entry.getString(\"Title\"));\n    assertEquals(FEED_ENTRY_LINK, entry.getString(\"Link\"));\n    assertEquals(FEED_ENTRY_SUMMARY, entry.getString(\"Summary\"));\n  }", "signature": "void parseAtom()", "full_signature": "@Test public void parseAtom()", "class_method_signature": "FeedProcessorTest.parseAtom()", "testcase": true, "constructor": false, "invocations": ["process", "assertEquals", "getString", "assertEquals", "getString", "assertEquals", "getString", "getJSONArray", "getJSONObject", "assertEquals", "length", "assertEquals", "getString", "assertEquals", "getString", "assertEquals", "getString"]}, "focal_class": {"identifier": "FeedProcessor", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "process", "parameters": "(String feedUrl, String feedXml, boolean getSummaries, int numEntries)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "JSONObject", "signature": "JSONObject process(String feedUrl, String feedXml, boolean getSummaries, int numEntries)", "full_signature": "@SuppressWarnings(\"unchecked\") public JSONObject process(String feedUrl, String feedXml, boolean getSummaries, int numEntries)", "class_method_signature": "FeedProcessor.process(String feedUrl, String feedXml, boolean getSummaries, int numEntries)", "testcase": false, "constructor": false}], "file": "java/gadgets/src/main/java/org/apache/shindig/gadgets/FeedProcessor.java"}, "focal_method": {"identifier": "process", "parameters": "(String feedUrl, String feedXml, boolean getSummaries, int numEntries)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "JSONObject", "body": "@SuppressWarnings(\"unchecked\")\n  public JSONObject process(String feedUrl, String feedXml, boolean getSummaries, int numEntries)\n          throws GadgetException {\n    try {\n      SyndFeed feed = new SyndFeedInput().build(new StringReader(feedXml));\n      JSONObject json = new JSONObject();\n      json.put(\"Title\", feed.getTitle());\n      json.put(\"URL\", feedUrl);\n      json.put(\"Description\", feed.getDescription());\n      json.put(\"Link\", feed.getLink());\n\n      List<SyndPerson> authors = feed.getAuthors();\n      String jsonAuthor = null;\n      if (authors != null && !authors.isEmpty()) {\n        SyndPerson author = authors.get(0);\n        if (author.getName() != null) {\n          jsonAuthor = author.getName();\n        } else if (author.getEmail() != null) {\n          jsonAuthor = author.getEmail();\n        }\n      }\n      JSONArray entries = new JSONArray();\n      json.put(\"Entry\", entries);\n\n      int entryCnt = 0;\n      for (Object obj : feed.getEntries()) {\n        SyndEntry e = (SyndEntry) obj;\n        if (entryCnt >= numEntries) {\n          break;\n        }\n        entryCnt++;\n\n        JSONObject entry = new JSONObject();\n        entry.put(\"Title\", e.getTitle());\n        entry.put(\"Link\", e.getLink());\n        if (getSummaries) {\n          if (e.getContents() != null && !e.getContents().isEmpty()) {\n            entry.put(\"Summary\", ((SyndContent) e.getContents().get(0)).getValue());\n          } else {\n            entry.put(\"Summary\", e.getDescription() != null ? e.getDescription().getValue() : \"\");\n          }\n        }\n\n        if (e.getUpdatedDate() != null) {\n          entry.put(\"Date\", e.getUpdatedDate().getTime());\n        } else if (e.getPublishedDate() != null) {\n          entry.put(\"Date\", e.getPublishedDate().getTime());\n        } else {\n          entry.put(\"Date\", 0);\n        }\n\n        // if no author at feed level, use the first entry author\n        if (jsonAuthor == null) {\n          jsonAuthor = e.getAuthor();\n        }\n\n        JSONObject media = new JSONObject();\n        MediaEntryModule mediaModule = (MediaEntryModule) e.getModule(MediaModule.URI);\n        if (mediaModule != null) {\n          if (mediaModule.getMediaContents().length > 0) {\n            JSONArray contents = new JSONArray();\n\n            for (MediaContent c : mediaModule.getMediaContents()) {\n              JSONObject content = new JSONObject();\n\n              if (c.getReference() instanceof UrlReference) {\n                content.put(\"URL\", ((UrlReference) c.getReference()).getUrl().toString());\n              }\n\n              if (c.getType() != null) {\n                content.put(\"Type\", c.getType());\n              }\n\n              if (c.getWidth() != null) {\n                content.put(\"Width\", c.getWidth());\n              }\n\n              if (c.getHeight() != null) {\n                content.put(\"Height\", c.getHeight());\n              }\n\n              contents.put(content);\n            }\n\n            media.put(\"Contents\", contents);\n          }\n\n          if (mediaModule.getMetadata() != null) {\n            if (mediaModule.getMetadata().getThumbnail().length > 0) {\n              // \"If multiple thumbnails are included, it is assumed that they are in order of importance\"\n              // Only use the first thumbnail for simplicity's\n              // sake\n\n              JSONObject thumbnail = new JSONObject();\n\n              Thumbnail t = mediaModule.getMetadata().getThumbnail()[0];\n              thumbnail.put(\"URL\", t.getUrl().toString());\n\n              if (t.getWidth() != null) {\n                thumbnail.put(\"Width\", t.getWidth());\n              }\n\n              if (t.getHeight() != null) {\n                thumbnail.put(\"Height\", t.getHeight());\n              }\n\n              media.put(\"Thumbnail\", thumbnail);\n            }\n          }\n        }\n\n        entry.put(\"Media\", media);\n\n        entries.put(entry);\n      }\n\n      json.put(\"Author\", (jsonAuthor != null) ? jsonAuthor : \"\");\n      return json;\n    } catch (JSONException e) {\n      // This shouldn't ever happen.\n      throw new RuntimeException(e);\n    } catch (FeedException e) {\n      throw new GadgetException(GadgetException.Code.MALFORMED_XML_DOCUMENT, e, HttpResponse.SC_BAD_GATEWAY);\n    } catch (IllegalArgumentException e) {\n      throw new GadgetException(GadgetException.Code.MALFORMED_XML_DOCUMENT, e, HttpResponse.SC_BAD_GATEWAY);\n    }\n  }", "signature": "JSONObject process(String feedUrl, String feedXml, boolean getSummaries, int numEntries)", "full_signature": "@SuppressWarnings(\"unchecked\") public JSONObject process(String feedUrl, String feedXml, boolean getSummaries, int numEntries)", "class_method_signature": "FeedProcessor.process(String feedUrl, String feedXml, boolean getSummaries, int numEntries)", "testcase": false, "constructor": false, "invocations": ["build", "put", "getTitle", "put", "put", "getDescription", "put", "getLink", "getAuthors", "isEmpty", "get", "getName", "getName", "getEmail", "getEmail", "put", "getEntries", "put", "getTitle", "put", "getLink", "getContents", "isEmpty", "getContents", "put", "getValue", "get", "getContents", "put", "getDescription", "getValue", "getDescription", "getUpdatedDate", "put", "getTime", "getUpdatedDate", "getPublishedDate", "put", "getTime", "getPublishedDate", "put", "getAuthor", "getModule", "getMediaContents", "getMediaContents", "getReference", "put", "toString", "getUrl", "getReference", "getType", "put", "getType", "getWidth", "put", "getWidth", "getHeight", "put", "getHeight", "put", "put", "getMetadata", "getThumbnail", "getMetadata", "getThumbnail", "getMetadata", "put", "toString", "getUrl", "getWidth", "put", "getWidth", "getHeight", "put", "getHeight", "put", "put", "put", "put"]}, "repository": {"repo_id": 2153523, "url": "https://github.com/gatein/gatein-shindig", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 6, "size": 3564, "license": "licensed"}}