{"test_class": {"identifier": "DefaultServiceFetcherTest", "superclass": "extends EasyMockTestCase", "interfaces": "", "fields": [{"original_string": "protected DefaultServiceFetcher fetcher;", "modifier": "protected", "type": "DefaultServiceFetcher", "declarator": "fetcher", "var_name": "fetcher"}, {"original_string": "protected HttpFetcher mockFetcher;", "modifier": "protected", "type": "HttpFetcher", "declarator": "mockFetcher", "var_name": "mockFetcher"}, {"original_string": "protected Multimap<String, String> configuredServices;", "modifier": "protected", "type": "Multimap<String, String>", "declarator": "configuredServices", "var_name": "configuredServices"}, {"original_string": "protected static final String endPoint1 = \"http://%host%/api/rpc\";", "modifier": "protected static final", "type": "String", "declarator": "endPoint1 = \"http://%host%/api/rpc\"", "var_name": "endPoint1"}, {"original_string": "protected static final String endPoint2 = \"http://%host%/social/api/rpc\";", "modifier": "protected static final", "type": "String", "declarator": "endPoint2 = \"http://%host%/social/api/rpc\"", "var_name": "endPoint2"}], "file": "java/gadgets/src/test/java/org/apache/shindig/gadgets/render/DefaultServiceFetcherTest.java"}, "test_case": {"identifier": "testReadConfigBadContainer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testReadConfigBadContainer() throws Exception {\n    Multimap<String, String> multimap = fetcher.getServicesForContainer(\"badcontainer\", \"dontcare\");\n    assertEquals(0, multimap.size());\n  }", "signature": "void testReadConfigBadContainer()", "full_signature": "@Test public void testReadConfigBadContainer()", "class_method_signature": "DefaultServiceFetcherTest.testReadConfigBadContainer()", "testcase": true, "constructor": false, "invocations": ["getServicesForContainer", "assertEquals", "size"]}, "focal_class": {"identifier": "DefaultServiceFetcher", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final Logger logger = Logger.getLogger(Renderer.class.getName());", "modifier": "static final", "type": "Logger", "declarator": "logger = Logger.getLogger(Renderer.class.getName())", "var_name": "logger"}, {"original_string": "static final String JSON_RESPONSE_WRAPPER_ELEMENT = \"result\";", "modifier": "static final", "type": "String", "declarator": "JSON_RESPONSE_WRAPPER_ELEMENT = \"result\"", "var_name": "JSON_RESPONSE_WRAPPER_ELEMENT"}, {"original_string": "static final String OSAPI_FEATURE_CONFIG = \"osapi\";", "modifier": "static final", "type": "String", "declarator": "OSAPI_FEATURE_CONFIG = \"osapi\"", "var_name": "OSAPI_FEATURE_CONFIG"}, {"original_string": "static final String OSAPI_SERVICES = \"osapi.services\";", "modifier": "static final", "type": "String", "declarator": "OSAPI_SERVICES = \"osapi.services\"", "var_name": "OSAPI_SERVICES"}, {"original_string": "static final String GADGETS_FEATURES_CONFIG = \"gadgets.features\";", "modifier": "static final", "type": "String", "declarator": "GADGETS_FEATURES_CONFIG = \"gadgets.features\"", "var_name": "GADGETS_FEATURES_CONFIG"}, {"original_string": "static final String SYSTEM_LIST_METHODS_METHOD = \"system.listMethods\";", "modifier": "static final", "type": "String", "declarator": "SYSTEM_LIST_METHODS_METHOD = \"system.listMethods\"", "var_name": "SYSTEM_LIST_METHODS_METHOD"}, {"original_string": "static final String OSAPI_BASE_ENDPOINTS = \"endPoints\";", "modifier": "static final", "type": "String", "declarator": "OSAPI_BASE_ENDPOINTS = \"endPoints\"", "var_name": "OSAPI_BASE_ENDPOINTS"}, {"original_string": "private final ContainerConfig containerConfig;", "modifier": "private final", "type": "ContainerConfig", "declarator": "containerConfig", "var_name": "containerConfig"}, {"original_string": "private final HttpFetcher fetcher;", "modifier": "private final", "type": "HttpFetcher", "declarator": "fetcher", "var_name": "fetcher"}], "methods": [{"identifier": "DefaultServiceFetcher", "parameters": "(ContainerConfig config, HttpFetcher fetcher)", "modifiers": "@Inject public", "return": "", "signature": " DefaultServiceFetcher(ContainerConfig config, HttpFetcher fetcher)", "full_signature": "@Inject public  DefaultServiceFetcher(ContainerConfig config, HttpFetcher fetcher)", "class_method_signature": "DefaultServiceFetcher.DefaultServiceFetcher(ContainerConfig config, HttpFetcher fetcher)", "testcase": false, "constructor": true}, {"identifier": "getServicesForContainer", "parameters": "(String container, String host)", "modifiers": "public", "return": "Multimap<String, String>", "signature": "Multimap<String, String> getServicesForContainer(String container, String host)", "full_signature": "public Multimap<String, String> getServicesForContainer(String container, String host)", "class_method_signature": "DefaultServiceFetcher.getServicesForContainer(String container, String host)", "testcase": false, "constructor": false}, {"identifier": "getEndpointsFromContainerConfig", "parameters": "(String container, String host)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "List<String>", "signature": "List<String> getEndpointsFromContainerConfig(String container, String host)", "full_signature": "@SuppressWarnings(\"unchecked\") private List<String> getEndpointsFromContainerConfig(String container, String host)", "class_method_signature": "DefaultServiceFetcher.getEndpointsFromContainerConfig(String container, String host)", "testcase": false, "constructor": false}, {"identifier": "retrieveServices", "parameters": "(String endpoint)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> retrieveServices(String endpoint)", "full_signature": "private Set<String> retrieveServices(String endpoint)", "class_method_signature": "DefaultServiceFetcher.retrieveServices(String endpoint)", "testcase": false, "constructor": false}, {"identifier": "getServicesFromJsonResponse", "parameters": "(String content)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> getServicesFromJsonResponse(String content)", "full_signature": "private Set<String> getServicesFromJsonResponse(String content)", "class_method_signature": "DefaultServiceFetcher.getServicesFromJsonResponse(String content)", "testcase": false, "constructor": false}], "file": "java/gadgets/src/main/java/org/apache/shindig/gadgets/render/DefaultServiceFetcher.java"}, "focal_method": {"identifier": "getServicesForContainer", "parameters": "(String container, String host)", "modifiers": "public", "return": "Multimap<String, String>", "body": "public Multimap<String, String> getServicesForContainer(String container, String host) {\n    if (containerConfig == null) {\n      return ImmutableMultimap.<String, String>builder().build();\n    }\n    LinkedHashMultimap<String, String> endpointServices = LinkedHashMultimap.create();\n\n    // First check services directly declared in container config\n    @SuppressWarnings(\"unchecked\")\n    Map<String, Object> declaredServices = (Map<String, Object>) containerConfig.getMap(container,\n        GADGETS_FEATURES_CONFIG).get(OSAPI_SERVICES);\n    if (declaredServices != null) {\n      for (Map.Entry<String, Object> entry : declaredServices.entrySet()) {\n        @SuppressWarnings(\"unchecked\")\n        Iterable<String> entryValue = (Iterable<String>) entry.getValue();\n        endpointServices.putAll(entry.getKey(), entryValue);\n      }\n    }\n\n    // Merge services lazily loaded from the endpoints if any\n    List<String> endpoints = getEndpointsFromContainerConfig(container, host);\n    for (String endpoint : endpoints) {\n      endpointServices.putAll(endpoint, retrieveServices(endpoint.replace(\"%host%\", host)));\n    }\n    \n    return ImmutableMultimap.copyOf(endpointServices);\n  }", "signature": "Multimap<String, String> getServicesForContainer(String container, String host)", "full_signature": "public Multimap<String, String> getServicesForContainer(String container, String host)", "class_method_signature": "DefaultServiceFetcher.getServicesForContainer(String container, String host)", "testcase": false, "constructor": false, "invocations": ["build", "builder", "create", "get", "getMap", "entrySet", "getValue", "putAll", "getKey", "getEndpointsFromContainerConfig", "putAll", "retrieveServices", "replace", "copyOf"]}, "repository": {"repo_id": 2153523, "url": "https://github.com/gatein/gatein-shindig", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 6, "size": 3564, "license": "licensed"}}