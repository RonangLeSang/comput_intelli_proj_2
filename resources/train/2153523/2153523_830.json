{"test_class": {"identifier": "MediaItemHandlerTest", "superclass": "extends EasyMockTestCase", "interfaces": "", "fields": [{"original_string": "private MediaItemService mediaService;", "modifier": "private", "type": "MediaItemService", "declarator": "mediaService", "var_name": "mediaService"}, {"original_string": "private MediaItemHandler handler;", "modifier": "private", "type": "MediaItemHandler", "declarator": "handler", "var_name": "handler"}, {"original_string": "private ContainerConfig containerConfig;", "modifier": "private", "type": "ContainerConfig", "declarator": "containerConfig", "var_name": "containerConfig"}, {"original_string": "private FakeGadgetToken token;", "modifier": "private", "type": "FakeGadgetToken", "declarator": "token", "var_name": "token"}, {"original_string": "protected HandlerRegistry registry;", "modifier": "protected", "type": "HandlerRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "private BeanJsonConverter converter;", "modifier": "private", "type": "BeanJsonConverter", "declarator": "converter", "var_name": "converter"}], "file": "java/social-api/src/test/java/org/apache/shindig/social/opensocial/service/MediaItemHandlerTest.java"}, "test_case": {"identifier": "testUpdate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testUpdate() throws Exception {\n    // TODO\n  }", "signature": "void testUpdate()", "full_signature": "@Test public void testUpdate()", "class_method_signature": "MediaItemHandlerTest.testUpdate()", "testcase": true, "constructor": false, "invocations": []}, "focal_class": {"identifier": "MediaItemHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final MediaItemService service;", "modifier": "private final", "type": "MediaItemService", "declarator": "service", "var_name": "service"}, {"original_string": "private final ContainerConfig config;", "modifier": "private final", "type": "ContainerConfig", "declarator": "config", "var_name": "config"}], "methods": [{"identifier": "MediaItemHandler", "parameters": "(MediaItemService service, ContainerConfig config)", "modifiers": "@Inject public", "return": "", "signature": " MediaItemHandler(MediaItemService service, ContainerConfig config)", "full_signature": "@Inject public  MediaItemHandler(MediaItemService service, ContainerConfig config)", "class_method_signature": "MediaItemHandler.MediaItemHandler(MediaItemService service, ContainerConfig config)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "(SocialRequestItem request)", "modifiers": "@Operation(httpMethods = \"GET\") public", "return": "Future<?>", "signature": "Future<?> get(SocialRequestItem request)", "full_signature": "@Operation(httpMethods = \"GET\") public Future<?> get(SocialRequestItem request)", "class_method_signature": "MediaItemHandler.get(SocialRequestItem request)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(SocialRequestItem request)", "modifiers": "@Operation(httpMethods = \"DELETE\") public", "return": "Future<?>", "signature": "Future<?> delete(SocialRequestItem request)", "full_signature": "@Operation(httpMethods = \"DELETE\") public Future<?> delete(SocialRequestItem request)", "class_method_signature": "MediaItemHandler.delete(SocialRequestItem request)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(SocialRequestItem request)", "modifiers": "@Operation(httpMethods = \"POST\", bodyParam = \"mediaItem\") public", "return": "Future<?>", "signature": "Future<?> create(SocialRequestItem request)", "full_signature": "@Operation(httpMethods = \"POST\", bodyParam = \"mediaItem\") public Future<?> create(SocialRequestItem request)", "class_method_signature": "MediaItemHandler.create(SocialRequestItem request)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(SocialRequestItem request)", "modifiers": "@Operation(httpMethods = \"PUT\", bodyParam = \"mediaItem\") public", "return": "Future<?>", "signature": "Future<?> update(SocialRequestItem request)", "full_signature": "@Operation(httpMethods = \"PUT\", bodyParam = \"mediaItem\") public Future<?> update(SocialRequestItem request)", "class_method_signature": "MediaItemHandler.update(SocialRequestItem request)", "testcase": false, "constructor": false}, {"identifier": "supportedFields", "parameters": "(RequestItem request)", "modifiers": "@Operation(httpMethods = \"GET\", path = \"/@supportedFields\") public", "return": "List<Object>", "signature": "List<Object> supportedFields(RequestItem request)", "full_signature": "@Operation(httpMethods = \"GET\", path = \"/@supportedFields\") public List<Object> supportedFields(RequestItem request)", "class_method_signature": "MediaItemHandler.supportedFields(RequestItem request)", "testcase": false, "constructor": false}], "file": "java/social-api/src/main/java/org/apache/shindig/social/opensocial/service/MediaItemHandler.java"}, "focal_method": {"identifier": "update", "parameters": "(SocialRequestItem request)", "modifiers": "@Operation(httpMethods = \"PUT\", bodyParam = \"mediaItem\") public", "return": "Future<?>", "body": "@Operation(httpMethods = \"PUT\", bodyParam = \"mediaItem\")\n  public Future<?> update(SocialRequestItem request) throws ProtocolException {\n    // Retrieve userIds, albumIds, and mediaItemIds\n    Set<UserId> userIds = request.getUsers();\n    Set<String> albumIds = ImmutableSet.copyOf(request.getListParameter(\"albumId\"));\n    Set<String> mediaItemIds = ImmutableSet.copyOf(request.getListParameter(\"mediaItemIds\"));\n\n    // Exactly one user, Album, and MediaItem must be specified\n    HandlerPreconditions.requireNotEmpty(userIds, \"No userId specified\");\n    HandlerPreconditions.requireSingular(userIds, \"Exactly one user ID must be specified\");\n    HandlerPreconditions.requireSingular(albumIds, \"Exactly one Album ID must be specified\");\n    HandlerPreconditions.requireSingular(mediaItemIds, \"Exactly one MediaItem ID must be specified\");\n\n    // Service request\n    return service.updateMediaItem(Iterables.getOnlyElement(userIds),\n        request.getAppId(), Iterables.getOnlyElement(albumIds),\n        Iterables.getOnlyElement(mediaItemIds),\n        request.getTypedParameter(\"mediaItem\", MediaItem.class),\n        request.getToken());\n  }", "signature": "Future<?> update(SocialRequestItem request)", "full_signature": "@Operation(httpMethods = \"PUT\", bodyParam = \"mediaItem\") public Future<?> update(SocialRequestItem request)", "class_method_signature": "MediaItemHandler.update(SocialRequestItem request)", "testcase": false, "constructor": false, "invocations": ["getUsers", "copyOf", "getListParameter", "copyOf", "getListParameter", "requireNotEmpty", "requireSingular", "requireSingular", "requireSingular", "updateMediaItem", "getOnlyElement", "getAppId", "getOnlyElement", "getOnlyElement", "getTypedParameter", "getToken"]}, "repository": {"repo_id": 2153523, "url": "https://github.com/gatein/gatein-shindig", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 6, "size": 3564, "license": "licensed"}}