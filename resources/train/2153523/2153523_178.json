{"test_class": {"identifier": "DefaultProxyUriManagerTest", "superclass": "extends UriManagerTestBase", "interfaces": "", "fields": [{"original_string": "private static final Uri RESOURCE_1 = Uri.parse(\"http://example.com/one.dat?param=value\");", "modifier": "private static final", "type": "Uri", "declarator": "RESOURCE_1 = Uri.parse(\"http://example.com/one.dat?param=value\")", "var_name": "RESOURCE_1"}, {"original_string": "private static final Uri RESOURCE_2 = Uri.parse(\"http://gadgets.com/two.dat\");", "modifier": "private static final", "type": "Uri", "declarator": "RESOURCE_2 = Uri.parse(\"http://gadgets.com/two.dat\")", "var_name": "RESOURCE_2"}, {"original_string": "private static final Uri RESOURCE_3 = Uri.parse(\"http://foobar.com/three.dat\");", "modifier": "private static final", "type": "Uri", "declarator": "RESOURCE_3 = Uri.parse(\"http://foobar.com/three.dat\")", "var_name": "RESOURCE_3"}], "file": "java/gadgets/src/test/java/org/apache/shindig/gadgets/uri/DefaultProxyUriManagerTest.java"}, "test_case": {"identifier": "verifyAddedParamsChained", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void verifyAddedParamsChained() throws Exception {\n    String host = \"host.com\";\n    String path = \"/proxy/\" + DefaultProxyUriManager.CHAINED_PARAMS_TOKEN + \"/path\";\n    ProxyUriManager.Versioner versioner = makeVersioner(null, \"version\");\n    DefaultProxyUriManager manager = makeManager(host, path, versioner);\n    List<ProxyUri> proxyUris = Lists.newLinkedList();\n    ProxyUri pUri = new ProxyUri(null, false, true, CONTAINER, SPEC_URI.toString(),\n        RESOURCE_1);\n    pUri.setResize(100, 10, 90, true);\n    proxyUris.add(pUri);\n\n    List<Uri> uris = manager.make(proxyUris, null);\n    assertEquals(1, uris.size());\n    verifyChainedUri(RESOURCE_1, uris.get(0), false, true,\n        null, false, host, path);\n    // Verify added param:\n    assertEquals(\"/proxy/container=container&gadget=http%3A%2F%2Fexample.com%2Fgadget.xml\" +\n        \"&debug=0&nocache=1&v=version&resize_h=10&resize_w=100&resize_q=90&no_expand=1\" +\n        \"/path/http://example.com/one.dat\",\n        uris.get(0).getPath());\n  }", "signature": "void verifyAddedParamsChained()", "full_signature": "@Test public void verifyAddedParamsChained()", "class_method_signature": "DefaultProxyUriManagerTest.verifyAddedParamsChained()", "testcase": true, "constructor": false, "invocations": ["makeVersioner", "makeManager", "newLinkedList", "toString", "setResize", "add", "make", "assertEquals", "size", "verifyChainedUri", "get", "assertEquals", "getPath", "get"]}, "focal_class": {"identifier": "DefaultProxyUriManager", "superclass": "", "interfaces": "implements ProxyUriManager", "fields": [{"original_string": "public static final String PROXY_HOST_PARAM = \"gadgets.uri.proxy.host\";", "modifier": "public static final", "type": "String", "declarator": "PROXY_HOST_PARAM = \"gadgets.uri.proxy.host\"", "var_name": "PROXY_HOST_PARAM"}, {"original_string": "public static final String PROXY_PATH_PARAM = \"gadgets.uri.proxy.path\";", "modifier": "public static final", "type": "String", "declarator": "PROXY_PATH_PARAM = \"gadgets.uri.proxy.path\"", "var_name": "PROXY_PATH_PARAM"}, {"original_string": "static final String CHAINED_PARAMS_TOKEN = \"%chained_params%\";", "modifier": "static final", "type": "String", "declarator": "CHAINED_PARAMS_TOKEN = \"%chained_params%\"", "var_name": "CHAINED_PARAMS_TOKEN"}, {"original_string": "private final ContainerConfig config;", "modifier": "private final", "type": "ContainerConfig", "declarator": "config", "var_name": "config"}, {"original_string": "private final Versioner versioner;", "modifier": "private final", "type": "Versioner", "declarator": "versioner", "var_name": "versioner"}, {"original_string": "private boolean strictParsing = false;", "modifier": "private", "type": "boolean", "declarator": "strictParsing = false", "var_name": "strictParsing"}], "methods": [{"identifier": "DefaultProxyUriManager", "parameters": "(ContainerConfig config,\n                                @Nullable Versioner versioner)", "modifiers": "@Inject public", "return": "", "signature": " DefaultProxyUriManager(ContainerConfig config,\n                                @Nullable Versioner versioner)", "full_signature": "@Inject public  DefaultProxyUriManager(ContainerConfig config,\n                                @Nullable Versioner versioner)", "class_method_signature": "DefaultProxyUriManager.DefaultProxyUriManager(ContainerConfig config,\n                                @Nullable Versioner versioner)", "testcase": false, "constructor": true}, {"identifier": "setUseStrictParsing", "parameters": "(@Named(\"shindig.uri.proxy.use-strict-parsing\") boolean useStrict)", "modifiers": "@Inject(optional = true) public", "return": "void", "signature": "void setUseStrictParsing(@Named(\"shindig.uri.proxy.use-strict-parsing\") boolean useStrict)", "full_signature": "@Inject(optional = true) public void setUseStrictParsing(@Named(\"shindig.uri.proxy.use-strict-parsing\") boolean useStrict)", "class_method_signature": "DefaultProxyUriManager.setUseStrictParsing(@Named(\"shindig.uri.proxy.use-strict-parsing\") boolean useStrict)", "testcase": false, "constructor": false}, {"identifier": "make", "parameters": "(List<ProxyUri> resources, Integer forcedRefresh)", "modifiers": "public", "return": "List<Uri>", "signature": "List<Uri> make(List<ProxyUri> resources, Integer forcedRefresh)", "full_signature": "public List<Uri> make(List<ProxyUri> resources, Integer forcedRefresh)", "class_method_signature": "DefaultProxyUriManager.make(List<ProxyUri> resources, Integer forcedRefresh)", "testcase": false, "constructor": false}, {"identifier": "makeProxiedUri", "parameters": "(ProxyUri puc, Integer forcedRefresh, String version)", "modifiers": "private", "return": "Uri", "signature": "Uri makeProxiedUri(ProxyUri puc, Integer forcedRefresh, String version)", "full_signature": "private Uri makeProxiedUri(ProxyUri puc, Integer forcedRefresh, String version)", "class_method_signature": "DefaultProxyUriManager.makeProxiedUri(ProxyUri puc, Integer forcedRefresh, String version)", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(Uri uriIn)", "modifiers": "@SuppressWarnings(\"deprecation\") public", "return": "ProxyUri", "signature": "ProxyUri process(Uri uriIn)", "full_signature": "@SuppressWarnings(\"deprecation\") public ProxyUri process(Uri uriIn)", "class_method_signature": "DefaultProxyUriManager.process(Uri uriIn)", "testcase": false, "constructor": false}, {"identifier": "getReqConfig", "parameters": "(String container, String key)", "modifiers": "private", "return": "String", "signature": "String getReqConfig(String container, String key)", "full_signature": "private String getReqConfig(String container, String key)", "class_method_signature": "DefaultProxyUriManager.getReqConfig(String container, String key)", "testcase": false, "constructor": false}], "file": "java/gadgets/src/main/java/org/apache/shindig/gadgets/uri/DefaultProxyUriManager.java"}, "focal_method": {"identifier": "make", "parameters": "(List<ProxyUri> resources, Integer forcedRefresh)", "modifiers": "public", "return": "List<Uri>", "body": "public List<Uri> make(List<ProxyUri> resources, Integer forcedRefresh) {\n    if (resources.isEmpty()) {\n      return Collections.emptyList();\n    }\n\n    List<Uri> resourceUris = Lists.newArrayListWithCapacity(resources.size());\n\n    for (ProxyUri puc : resources) {\n      resourceUris.add(puc.getResource());\n    }\n\n    Map<Uri, String> versions;\n    if (versioner == null) {\n      versions = Collections.emptyMap();\n    } else {\n      versions = Maps.newHashMapWithExpectedSize(resources.size());\n      List<String> versionList = versioner.version(resourceUris, resources.get(0).getContainer());\n      if (versionList != null && versionList.size() == resources.size()) {\n        // This should always be the case.\n        // Should we error if not, or just WARNING?\n        Iterator<String> versionIt = versionList.iterator();\n        for (ProxyUri puc : resources) {\n          versions.put(puc.getResource(), versionIt.next());\n        }\n      }\n    }\n\n    List<Uri> result = Lists.newArrayListWithCapacity(resources.size());\n    for (ProxyUri puc : resources) {\n      result.add(makeProxiedUri(puc, forcedRefresh, versions.get(puc.getResource())));\n    }\n\n    return result;\n  }", "signature": "List<Uri> make(List<ProxyUri> resources, Integer forcedRefresh)", "full_signature": "public List<Uri> make(List<ProxyUri> resources, Integer forcedRefresh)", "class_method_signature": "DefaultProxyUriManager.make(List<ProxyUri> resources, Integer forcedRefresh)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "emptyList", "newArrayListWithCapacity", "size", "add", "getResource", "emptyMap", "newHashMapWithExpectedSize", "size", "version", "getContainer", "get", "size", "size", "iterator", "put", "getResource", "next", "newArrayListWithCapacity", "size", "add", "makeProxiedUri", "get", "getResource"]}, "repository": {"repo_id": 2153523, "url": "https://github.com/gatein/gatein-shindig", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 6, "size": 3564, "license": "licensed"}}