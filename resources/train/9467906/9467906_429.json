{"test_class": {"identifier": "ExcelUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "dddlib-excel/src/test/java/org/dayatang/excel/ExcelUtilsTest.java"}, "test_case": {"identifier": "testGetDouble", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetDouble() {\n\t\tassertNull(ExcelUtils.getDouble(null));\n\t\tassertEquals(10.5, ExcelUtils.getDouble(10.5), 0.001);\n\t}", "signature": "void testGetDouble()", "full_signature": "@Test public void testGetDouble()", "class_method_signature": "ExcelUtilsTest.testGetDouble()", "testcase": true, "constructor": false, "invocations": ["assertNull", "getDouble", "assertEquals", "getDouble"]}, "focal_class": {"identifier": "ExcelUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ExcelUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " ExcelUtils()", "full_signature": "private  ExcelUtils()", "class_method_signature": "ExcelUtils.ExcelUtils()", "testcase": false, "constructor": true}, {"identifier": "convertColumnNameToIndex", "parameters": "(String columnName)", "modifiers": "public static", "return": "int", "signature": "int convertColumnNameToIndex(String columnName)", "full_signature": "public static int convertColumnNameToIndex(String columnName)", "class_method_signature": "ExcelUtils.convertColumnNameToIndex(String columnName)", "testcase": false, "constructor": false}, {"identifier": "letterToInt", "parameters": "(int letter)", "modifiers": "private static", "return": "int", "signature": "int letterToInt(int letter)", "full_signature": "private static int letterToInt(int letter)", "class_method_signature": "ExcelUtils.letterToInt(int letter)", "testcase": false, "constructor": false}, {"identifier": "getDouble", "parameters": "(Object data)", "modifiers": "public static", "return": "Double", "signature": "Double getDouble(Object data)", "full_signature": "public static Double getDouble(Object data)", "class_method_signature": "ExcelUtils.getDouble(Object data)", "testcase": false, "constructor": false}, {"identifier": "getInt", "parameters": "(Object data)", "modifiers": "public static", "return": "Integer", "signature": "Integer getInt(Object data)", "full_signature": "public static Integer getInt(Object data)", "class_method_signature": "ExcelUtils.getInt(Object data)", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "(Object data)", "modifiers": "public static", "return": "Long", "signature": "Long getLong(Object data)", "full_signature": "public static Long getLong(Object data)", "class_method_signature": "ExcelUtils.getLong(Object data)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(Object data)", "modifiers": "public static", "return": "Boolean", "signature": "Boolean getBoolean(Object data)", "full_signature": "public static Boolean getBoolean(Object data)", "class_method_signature": "ExcelUtils.getBoolean(Object data)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(Object data)", "modifiers": "public static", "return": "String", "signature": "String getString(Object data)", "full_signature": "public static String getString(Object data)", "class_method_signature": "ExcelUtils.getString(Object data)", "testcase": false, "constructor": false}, {"identifier": "getDate", "parameters": "(Object data, Version version, boolean isDate1904)", "modifiers": "public static", "return": "Date", "signature": "Date getDate(Object data, Version version, boolean isDate1904)", "full_signature": "public static Date getDate(Object data, Version version, boolean isDate1904)", "class_method_signature": "ExcelUtils.getDate(Object data, Version version, boolean isDate1904)", "testcase": false, "constructor": false}], "file": "dddlib-excel/src/main/java/org/dayatang/excel/ExcelUtils.java"}, "focal_method": {"identifier": "getDouble", "parameters": "(Object data)", "modifiers": "public static", "return": "Double", "body": "public static Double getDouble(Object data) {\n\t\tif (data == null) {\n\t\t\treturn null;\n\t\t}\n\t\tif (! (data instanceof Double)) {\n\t\t\tthrow new IllegalStateException(\"\u6570\u636e\u7c7b\u578b\u9519\u8bef\uff1a\u5355\u5143\u683c\u4e2d\u7684\u6570\u636e\u4e0d\u662f\u6570\u503c\u7c7b\u578b\");\n\t\t}\n\t\treturn (Double) data;\n\t}", "signature": "Double getDouble(Object data)", "full_signature": "public static Double getDouble(Object data)", "class_method_signature": "ExcelUtils.getDouble(Object data)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9467906, "url": "https://github.com/dayatang/dddlib", "language": "Java", "is_fork": false, "fork_count": 202, "stargazer_count": 402, "size": 52576, "license": "licensed"}}