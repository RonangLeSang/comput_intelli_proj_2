{"test_class": {"identifier": "DateRangeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DateRange range;", "modifier": "private", "type": "DateRange", "declarator": "range", "var_name": "range"}], "file": "dddlib-utils/src/test/java/org/dayatang/utils/DateRangeTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testToString() throws ParseException {\n\t\tDate from = DateUtils.parseDate(\"2007-12-05 04:10:15\", new String[] {\"yyyy-M-d hh:mm:ss\"});\n\t\tDate to = DateUtils.parseDate(\"2007-12-15 23:10:15\", new String[] {\"yyyy-M-d hh:mm:ss\"});\n\t\tString fromString = DateFormat.getDateInstance().format(from);\n\t\tString toString = DateFormat.getDateInstance().format(to);\n\t\tassertEquals(\"[\" + fromString + \" - \" + toString + \"]\", range.toString());\n\t}", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "DateRangeTest.testToString()", "testcase": true, "constructor": false, "invocations": ["parseDate", "parseDate", "format", "getDateInstance", "format", "getDateInstance", "assertEquals", "toString"]}, "focal_class": {"identifier": "DateRange", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -2800351591055572549L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -2800351591055572549L", "var_name": "serialVersionUID"}, {"original_string": "private Date from;", "modifier": "private", "type": "Date", "declarator": "from", "var_name": "from"}, {"original_string": "private Date to;", "modifier": "private", "type": "Date", "declarator": "to", "var_name": "to"}], "methods": [{"identifier": "DateRange", "parameters": "(Date from, Date to)", "modifiers": "public", "return": "", "signature": " DateRange(Date from, Date to)", "full_signature": "public  DateRange(Date from, Date to)", "class_method_signature": "DateRange.DateRange(Date from, Date to)", "testcase": false, "constructor": true}, {"identifier": "getFrom", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getFrom()", "full_signature": "public Date getFrom()", "class_method_signature": "DateRange.getFrom()", "testcase": false, "constructor": false}, {"identifier": "getTo", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getTo()", "full_signature": "public Date getTo()", "class_method_signature": "DateRange.getTo()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(Date date)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(Date date)", "full_signature": "public boolean contains(Date date)", "class_method_signature": "DateRange.contains(Date date)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object other)", "full_signature": "@Override public boolean equals(final Object other)", "class_method_signature": "DateRange.equals(final Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DateRange.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DateRange.toString()", "testcase": false, "constructor": false}], "file": "dddlib-utils/src/main/java/org/dayatang/utils/DateRange.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        return \"[\" + DateFormat.getDateInstance().format(from)\n                + \" - \"\n                + DateFormat.getDateInstance().format(to) + \"]\";\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DateRange.toString()", "testcase": false, "constructor": false, "invocations": ["format", "getDateInstance", "format", "getDateInstance"]}, "repository": {"repo_id": 9467906, "url": "https://github.com/dayatang/dddlib", "language": "Java", "is_fork": false, "fork_count": 202, "stargazer_count": 402, "size": 52576, "license": "licensed"}}