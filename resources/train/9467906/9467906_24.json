{"test_class": {"identifier": "EntityRepositoryJpaTest", "superclass": "extends AbstractIntegrationTest", "interfaces": "", "fields": [{"original_string": "private DictionaryCategory gender;", "modifier": "private", "type": "DictionaryCategory", "declarator": "gender", "var_name": "gender"}, {"original_string": "private DictionaryCategory education;", "modifier": "private", "type": "DictionaryCategory", "declarator": "education", "var_name": "education"}, {"original_string": "private Dictionary male;", "modifier": "private", "type": "Dictionary", "declarator": "male", "var_name": "male"}, {"original_string": "private Dictionary undergraduate;", "modifier": "private", "type": "Dictionary", "declarator": "undergraduate", "var_name": "undergraduate"}, {"original_string": "private Dictionary graduate;", "modifier": "private", "type": "Dictionary", "declarator": "graduate", "var_name": "graduate"}, {"original_string": "private Dictionary associate;", "modifier": "private", "type": "Dictionary", "declarator": "associate", "var_name": "associate"}], "file": "dddlib-persistence/dddlib-persistence-jpa/src/test/java/org/dayatang/persistence/jpa/EntityRepositoryJpaTest.java"}, "test_case": {"identifier": "testNamedQueryScalar", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNamedQueryScalar() {\n        NamedQuery query = new NamedQuery(repository, \"Dictionay.findNameAndOrder\")\n                .addParameter(\"category\", gender);\n        List<Object[]> results = repository.find(query);\n        for (Object[] row : results) {\n            System.out.println(Arrays.toString(row));\n        }\n    }", "signature": "void testNamedQueryScalar()", "full_signature": "@Test public void testNamedQueryScalar()", "class_method_signature": "EntityRepositoryJpaTest.testNamedQueryScalar()", "testcase": true, "constructor": false, "invocations": ["addParameter", "find", "println", "toString"]}, "focal_class": {"identifier": "EntityRepositoryJpa", "superclass": "", "interfaces": "implements EntityRepository", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(EntityRepositoryJpa.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(EntityRepositoryJpa.class)", "var_name": "LOGGER"}, {"original_string": "private NamedQueryParser namedQueryParser;", "modifier": "private", "type": "NamedQueryParser", "declarator": "namedQueryParser", "var_name": "namedQueryParser"}, {"original_string": "private EntityManagerProvider entityManagerProvider;", "modifier": "private", "type": "EntityManagerProvider", "declarator": "entityManagerProvider", "var_name": "entityManagerProvider"}], "methods": [{"identifier": "EntityRepositoryJpa", "parameters": "()", "modifiers": "public", "return": "", "signature": " EntityRepositoryJpa()", "full_signature": "public  EntityRepositoryJpa()", "class_method_signature": "EntityRepositoryJpa.EntityRepositoryJpa()", "testcase": false, "constructor": true}, {"identifier": "EntityRepositoryJpa", "parameters": "(EntityManager entityManager)", "modifiers": "public", "return": "", "signature": " EntityRepositoryJpa(EntityManager entityManager)", "full_signature": "public  EntityRepositoryJpa(EntityManager entityManager)", "class_method_signature": "EntityRepositoryJpa.EntityRepositoryJpa(EntityManager entityManager)", "testcase": false, "constructor": true}, {"identifier": "EntityRepositoryJpa", "parameters": "(EntityManagerFactory entityManagerFactory)", "modifiers": "public", "return": "", "signature": " EntityRepositoryJpa(EntityManagerFactory entityManagerFactory)", "full_signature": "public  EntityRepositoryJpa(EntityManagerFactory entityManagerFactory)", "class_method_signature": "EntityRepositoryJpa.EntityRepositoryJpa(EntityManagerFactory entityManagerFactory)", "testcase": false, "constructor": true}, {"identifier": "EntityRepositoryJpa", "parameters": "(NamedQueryParser namedQueryParser, EntityManagerFactory entityManagerFactory)", "modifiers": "public", "return": "", "signature": " EntityRepositoryJpa(NamedQueryParser namedQueryParser, EntityManagerFactory entityManagerFactory)", "full_signature": "public  EntityRepositoryJpa(NamedQueryParser namedQueryParser, EntityManagerFactory entityManagerFactory)", "class_method_signature": "EntityRepositoryJpa.EntityRepositoryJpa(NamedQueryParser namedQueryParser, EntityManagerFactory entityManagerFactory)", "testcase": false, "constructor": true}, {"identifier": "getNamedQueryParser", "parameters": "()", "modifiers": "private", "return": "NamedQueryParser", "signature": "NamedQueryParser getNamedQueryParser()", "full_signature": "private NamedQueryParser getNamedQueryParser()", "class_method_signature": "EntityRepositoryJpa.getNamedQueryParser()", "testcase": false, "constructor": false}, {"identifier": "setNamedQueryParser", "parameters": "(NamedQueryParser namedQueryParser)", "modifiers": "public final", "return": "void", "signature": "void setNamedQueryParser(NamedQueryParser namedQueryParser)", "full_signature": "public final void setNamedQueryParser(NamedQueryParser namedQueryParser)", "class_method_signature": "EntityRepositoryJpa.setNamedQueryParser(NamedQueryParser namedQueryParser)", "testcase": false, "constructor": false}, {"identifier": "getEntityManager", "parameters": "()", "modifiers": "", "return": "EntityManager", "signature": "EntityManager getEntityManager()", "full_signature": " EntityManager getEntityManager()", "class_method_signature": "EntityRepositoryJpa.getEntityManager()", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(T entity)", "modifiers": "@Override public", "return": "T", "signature": "T save(T entity)", "full_signature": "@Override public T save(T entity)", "class_method_signature": "EntityRepositoryJpa.save(T entity)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Entity entity)", "modifiers": "@Override public", "return": "void", "signature": "void remove(Entity entity)", "full_signature": "@Override public void remove(Entity entity)", "class_method_signature": "EntityRepositoryJpa.remove(Entity entity)", "testcase": false, "constructor": false}, {"identifier": "exists", "parameters": "(final Class<T> clazz,\n                                             final Serializable id)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean exists(final Class<T> clazz,\n                                             final Serializable id)", "full_signature": "@Override public boolean exists(final Class<T> clazz,\n                                             final Serializable id)", "class_method_signature": "EntityRepositoryJpa.exists(final Class<T> clazz,\n                                             final Serializable id)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final Class<T> clazz, final Serializable id)", "modifiers": "@Override public", "return": "T", "signature": "T get(final Class<T> clazz, final Serializable id)", "full_signature": "@Override public T get(final Class<T> clazz, final Serializable id)", "class_method_signature": "EntityRepositoryJpa.get(final Class<T> clazz, final Serializable id)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(final Class<T> clazz, final Serializable id)", "modifiers": "@Override public", "return": "T", "signature": "T load(final Class<T> clazz, final Serializable id)", "full_signature": "@Override public T load(final Class<T> clazz, final Serializable id)", "class_method_signature": "EntityRepositoryJpa.load(final Class<T> clazz, final Serializable id)", "testcase": false, "constructor": false}, {"identifier": "getUnmodified", "parameters": "(final Class<T> clazz,\n                                              final T entity)", "modifiers": "@Override public", "return": "T", "signature": "T getUnmodified(final Class<T> clazz,\n                                              final T entity)", "full_signature": "@Override public T getUnmodified(final Class<T> clazz,\n                                              final T entity)", "class_method_signature": "EntityRepositoryJpa.getUnmodified(final Class<T> clazz,\n                                              final T entity)", "testcase": false, "constructor": false}, {"identifier": "getByBusinessKeys", "parameters": "(Class<T> clazz, NamedParameters keyValues)", "modifiers": "@Override public", "return": "T", "signature": "T getByBusinessKeys(Class<T> clazz, NamedParameters keyValues)", "full_signature": "@Override public T getByBusinessKeys(Class<T> clazz, NamedParameters keyValues)", "class_method_signature": "EntityRepositoryJpa.getByBusinessKeys(Class<T> clazz, NamedParameters keyValues)", "testcase": false, "constructor": false}, {"identifier": "findAll", "parameters": "(final Class<T> clazz)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> findAll(final Class<T> clazz)", "full_signature": "@Override public List<T> findAll(final Class<T> clazz)", "class_method_signature": "EntityRepositoryJpa.findAll(final Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "createCriteriaQuery", "parameters": "(Class<T> entityClass)", "modifiers": "@Override public", "return": "CriteriaQuery", "signature": "CriteriaQuery createCriteriaQuery(Class<T> entityClass)", "full_signature": "@Override public CriteriaQuery createCriteriaQuery(Class<T> entityClass)", "class_method_signature": "EntityRepositoryJpa.createCriteriaQuery(Class<T> entityClass)", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "(CriteriaQuery criteriaQuery)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> find(CriteriaQuery criteriaQuery)", "full_signature": "@Override public List<T> find(CriteriaQuery criteriaQuery)", "class_method_signature": "EntityRepositoryJpa.find(CriteriaQuery criteriaQuery)", "testcase": false, "constructor": false}, {"identifier": "getSingleResult", "parameters": "(CriteriaQuery criteriaQuery)", "modifiers": "@Override public", "return": "T", "signature": "T getSingleResult(CriteriaQuery criteriaQuery)", "full_signature": "@Override public T getSingleResult(CriteriaQuery criteriaQuery)", "class_method_signature": "EntityRepositoryJpa.getSingleResult(CriteriaQuery criteriaQuery)", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "(Class<T> entityClass, QueryCriterion criterion)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> find(Class<T> entityClass, QueryCriterion criterion)", "full_signature": "@Override public List<T> find(Class<T> entityClass, QueryCriterion criterion)", "class_method_signature": "EntityRepositoryJpa.find(Class<T> entityClass, QueryCriterion criterion)", "testcase": false, "constructor": false}, {"identifier": "getSingleResult", "parameters": "(Class<T> entityClass, QueryCriterion criterion)", "modifiers": "@Override public", "return": "T", "signature": "T getSingleResult(Class<T> entityClass, QueryCriterion criterion)", "full_signature": "@Override public T getSingleResult(Class<T> entityClass, QueryCriterion criterion)", "class_method_signature": "EntityRepositoryJpa.getSingleResult(Class<T> entityClass, QueryCriterion criterion)", "testcase": false, "constructor": false}, {"identifier": "createJpqlQuery", "parameters": "(String jpql)", "modifiers": "@Override public", "return": "JpqlQuery", "signature": "JpqlQuery createJpqlQuery(String jpql)", "full_signature": "@Override public JpqlQuery createJpqlQuery(String jpql)", "class_method_signature": "EntityRepositoryJpa.createJpqlQuery(String jpql)", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "(JpqlQuery jpqlQuery)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> find(JpqlQuery jpqlQuery)", "full_signature": "@Override public List<T> find(JpqlQuery jpqlQuery)", "class_method_signature": "EntityRepositoryJpa.find(JpqlQuery jpqlQuery)", "testcase": false, "constructor": false}, {"identifier": "getSingleResult", "parameters": "(JpqlQuery jpqlQuery)", "modifiers": "@Override public", "return": "T", "signature": "T getSingleResult(JpqlQuery jpqlQuery)", "full_signature": "@Override public T getSingleResult(JpqlQuery jpqlQuery)", "class_method_signature": "EntityRepositoryJpa.getSingleResult(JpqlQuery jpqlQuery)", "testcase": false, "constructor": false}, {"identifier": "executeUpdate", "parameters": "(JpqlQuery jpqlQuery)", "modifiers": "@Override public", "return": "int", "signature": "int executeUpdate(JpqlQuery jpqlQuery)", "full_signature": "@Override public int executeUpdate(JpqlQuery jpqlQuery)", "class_method_signature": "EntityRepositoryJpa.executeUpdate(JpqlQuery jpqlQuery)", "testcase": false, "constructor": false}, {"identifier": "getQuery", "parameters": "(JpqlQuery jpqlQuery)", "modifiers": "private", "return": "Query", "signature": "Query getQuery(JpqlQuery jpqlQuery)", "full_signature": "private Query getQuery(JpqlQuery jpqlQuery)", "class_method_signature": "EntityRepositoryJpa.getQuery(JpqlQuery jpqlQuery)", "testcase": false, "constructor": false}, {"identifier": "createNamedQuery", "parameters": "(String queryName)", "modifiers": "@Override public", "return": "NamedQuery", "signature": "NamedQuery createNamedQuery(String queryName)", "full_signature": "@Override public NamedQuery createNamedQuery(String queryName)", "class_method_signature": "EntityRepositoryJpa.createNamedQuery(String queryName)", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "(NamedQuery namedQuery)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> find(NamedQuery namedQuery)", "full_signature": "@Override public List<T> find(NamedQuery namedQuery)", "class_method_signature": "EntityRepositoryJpa.find(NamedQuery namedQuery)", "testcase": false, "constructor": false}, {"identifier": "getSingleResult", "parameters": "(NamedQuery namedQuery)", "modifiers": "@Override public", "return": "T", "signature": "T getSingleResult(NamedQuery namedQuery)", "full_signature": "@Override public T getSingleResult(NamedQuery namedQuery)", "class_method_signature": "EntityRepositoryJpa.getSingleResult(NamedQuery namedQuery)", "testcase": false, "constructor": false}, {"identifier": "executeUpdate", "parameters": "(NamedQuery namedQuery)", "modifiers": "@Override public", "return": "int", "signature": "int executeUpdate(NamedQuery namedQuery)", "full_signature": "@Override public int executeUpdate(NamedQuery namedQuery)", "class_method_signature": "EntityRepositoryJpa.executeUpdate(NamedQuery namedQuery)", "testcase": false, "constructor": false}, {"identifier": "getQuery", "parameters": "(NamedQuery namedQuery)", "modifiers": "private", "return": "Query", "signature": "Query getQuery(NamedQuery namedQuery)", "full_signature": "private Query getQuery(NamedQuery namedQuery)", "class_method_signature": "EntityRepositoryJpa.getQuery(NamedQuery namedQuery)", "testcase": false, "constructor": false}, {"identifier": "createSqlQuery", "parameters": "(String sql)", "modifiers": "@Override public", "return": "SqlQuery", "signature": "SqlQuery createSqlQuery(String sql)", "full_signature": "@Override public SqlQuery createSqlQuery(String sql)", "class_method_signature": "EntityRepositoryJpa.createSqlQuery(String sql)", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "(SqlQuery sqlQuery)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> find(SqlQuery sqlQuery)", "full_signature": "@Override public List<T> find(SqlQuery sqlQuery)", "class_method_signature": "EntityRepositoryJpa.find(SqlQuery sqlQuery)", "testcase": false, "constructor": false}, {"identifier": "getSingleResult", "parameters": "(SqlQuery sqlQuery)", "modifiers": "@Override public", "return": "T", "signature": "T getSingleResult(SqlQuery sqlQuery)", "full_signature": "@Override public T getSingleResult(SqlQuery sqlQuery)", "class_method_signature": "EntityRepositoryJpa.getSingleResult(SqlQuery sqlQuery)", "testcase": false, "constructor": false}, {"identifier": "executeUpdate", "parameters": "(SqlQuery sqlQuery)", "modifiers": "@Override public", "return": "int", "signature": "int executeUpdate(SqlQuery sqlQuery)", "full_signature": "@Override public int executeUpdate(SqlQuery sqlQuery)", "class_method_signature": "EntityRepositoryJpa.executeUpdate(SqlQuery sqlQuery)", "testcase": false, "constructor": false}, {"identifier": "getQuery", "parameters": "(SqlQuery sqlQuery)", "modifiers": "private", "return": "Query", "signature": "Query getQuery(SqlQuery sqlQuery)", "full_signature": "private Query getQuery(SqlQuery sqlQuery)", "class_method_signature": "EntityRepositoryJpa.getQuery(SqlQuery sqlQuery)", "testcase": false, "constructor": false}, {"identifier": "findByExample", "parameters": "(\n            final E example, final ExampleSettings<T> settings)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> findByExample(\n            final E example, final ExampleSettings<T> settings)", "full_signature": "@Override public List<T> findByExample(\n            final E example, final ExampleSettings<T> settings)", "class_method_signature": "EntityRepositoryJpa.findByExample(\n            final E example, final ExampleSettings<T> settings)", "testcase": false, "constructor": false}, {"identifier": "findByProperty", "parameters": "(Class<T> clazz, String propertyName, Object propertyValue)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> findByProperty(Class<T> clazz, String propertyName, Object propertyValue)", "full_signature": "@Override public List<T> findByProperty(Class<T> clazz, String propertyName, Object propertyValue)", "class_method_signature": "EntityRepositoryJpa.findByProperty(Class<T> clazz, String propertyName, Object propertyValue)", "testcase": false, "constructor": false}, {"identifier": "findByProperties", "parameters": "(Class<T> clazz, NamedParameters properties)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> findByProperties(Class<T> clazz, NamedParameters properties)", "full_signature": "@Override public List<T> findByProperties(Class<T> clazz, NamedParameters properties)", "class_method_signature": "EntityRepositoryJpa.findByProperties(Class<T> clazz, NamedParameters properties)", "testcase": false, "constructor": false}, {"identifier": "getQueryStringOfNamedQuery", "parameters": "(String queryName)", "modifiers": "@Override public", "return": "String", "signature": "String getQueryStringOfNamedQuery(String queryName)", "full_signature": "@Override public String getQueryStringOfNamedQuery(String queryName)", "class_method_signature": "EntityRepositoryJpa.getQueryStringOfNamedQuery(String queryName)", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void flush()", "full_signature": "@Override public void flush()", "class_method_signature": "EntityRepositoryJpa.flush()", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "(Entity entity)", "modifiers": "@Override public", "return": "void", "signature": "void refresh(Entity entity)", "full_signature": "@Override public void refresh(Entity entity)", "class_method_signature": "EntityRepositoryJpa.refresh(Entity entity)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "EntityRepositoryJpa.clear()", "testcase": false, "constructor": false}, {"identifier": "processQuery", "parameters": "(Query query, BaseQuery<?> originQuery)", "modifiers": "private", "return": "void", "signature": "void processQuery(Query query, BaseQuery<?> originQuery)", "full_signature": "private void processQuery(Query query, BaseQuery<?> originQuery)", "class_method_signature": "EntityRepositoryJpa.processQuery(Query query, BaseQuery<?> originQuery)", "testcase": false, "constructor": false}, {"identifier": "processQuery", "parameters": "(Query query, QueryParameters parameters, \n            int firstResult, int maxResults)", "modifiers": "private", "return": "void", "signature": "void processQuery(Query query, QueryParameters parameters, \n            int firstResult, int maxResults)", "full_signature": "private void processQuery(Query query, QueryParameters parameters, \n            int firstResult, int maxResults)", "class_method_signature": "EntityRepositoryJpa.processQuery(Query query, QueryParameters parameters, \n            int firstResult, int maxResults)", "testcase": false, "constructor": false}, {"identifier": "fillParameters", "parameters": "(Query query, QueryParameters params)", "modifiers": "private", "return": "void", "signature": "void fillParameters(Query query, QueryParameters params)", "full_signature": "private void fillParameters(Query query, QueryParameters params)", "class_method_signature": "EntityRepositoryJpa.fillParameters(Query query, QueryParameters params)", "testcase": false, "constructor": false}, {"identifier": "fillParameters", "parameters": "(Query query, PositionalParameters params)", "modifiers": "private", "return": "void", "signature": "void fillParameters(Query query, PositionalParameters params)", "full_signature": "private void fillParameters(Query query, PositionalParameters params)", "class_method_signature": "EntityRepositoryJpa.fillParameters(Query query, PositionalParameters params)", "testcase": false, "constructor": false}, {"identifier": "fillParameters", "parameters": "(Query query, NamedParameters params)", "modifiers": "private", "return": "void", "signature": "void fillParameters(Query query, NamedParameters params)", "full_signature": "private void fillParameters(Query query, NamedParameters params)", "class_method_signature": "EntityRepositoryJpa.fillParameters(Query query, NamedParameters params)", "testcase": false, "constructor": false}], "file": "dddlib-persistence/dddlib-persistence-jpa/src/main/java/org/dayatang/persistence/jpa/EntityRepositoryJpa.java"}, "focal_method": {"identifier": "find", "parameters": "(CriteriaQuery criteriaQuery)", "modifiers": "@Override public", "return": "List<T>", "body": "@Override\n    public <T> List<T> find(CriteriaQuery criteriaQuery) {\n        Query query = getEntityManager().createQuery(criteriaQuery.getQueryString());\n        processQuery(query, criteriaQuery.getParameters(), \n                criteriaQuery.getFirstResult(), criteriaQuery.getMaxResults());\n        return query.getResultList();\n    }", "signature": "List<T> find(CriteriaQuery criteriaQuery)", "full_signature": "@Override public List<T> find(CriteriaQuery criteriaQuery)", "class_method_signature": "EntityRepositoryJpa.find(CriteriaQuery criteriaQuery)", "testcase": false, "constructor": false, "invocations": ["createQuery", "getEntityManager", "getQueryString", "processQuery", "getParameters", "getFirstResult", "getMaxResults", "getResultList"]}, "repository": {"repo_id": 9467906, "url": "https://github.com/dayatang/dddlib", "language": "Java", "is_fork": false, "fork_count": 202, "stargazer_count": 402, "size": 52576, "license": "licensed"}}