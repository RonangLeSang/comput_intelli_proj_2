{"test_class": {"identifier": "Slf4jLoggerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Slf4JLogger instance;", "modifier": "private", "type": "Slf4JLogger", "declarator": "instance", "var_name": "instance"}, {"original_string": "private Logger logger;", "modifier": "private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "private String msg = \"Hello, {}, {}, and {}\";", "modifier": "private", "type": "String", "declarator": "msg = \"Hello, {}, {}, and {}\"", "var_name": "msg"}, {"original_string": "private String errorMsg = \"Oh, No!!!\";", "modifier": "private", "type": "String", "declarator": "errorMsg = \"Oh, No!!!\"", "var_name": "errorMsg"}, {"original_string": "private Object[] args = new Object[] {\"A\", \"B\", \"C\"};", "modifier": "private", "type": "Object[]", "declarator": "args = new Object[] {\"A\", \"B\", \"C\"}", "var_name": "args"}, {"original_string": "private Throwable t = new RuntimeException(\"error!\");", "modifier": "private", "type": "Throwable", "declarator": "t = new RuntimeException(\"error!\")", "var_name": "t"}], "file": "dddlib-utils/src/test/java/org/dayatang/utils/Slf4jLoggerTest.java"}, "test_case": {"identifier": "testInfoEnabledException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testInfoEnabledException() {\n\t\twhen(logger.isInfoEnabled()).thenReturn(true);\n\t\tinstance.info(errorMsg, t);\n\t\tverify(logger).info(errorMsg, t);\n\t}", "signature": "void testInfoEnabledException()", "full_signature": "@Test public void testInfoEnabledException()", "class_method_signature": "Slf4jLoggerTest.testInfoEnabledException()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "isInfoEnabled", "info", "info", "verify"]}, "focal_class": {"identifier": "Slf4JLogger", "superclass": "", "interfaces": "implements org.dayatang.utils.Logger", "fields": [{"original_string": "private Logger logger;", "modifier": "private", "type": "Logger", "declarator": "logger", "var_name": "logger"}], "methods": [{"identifier": "Slf4JLogger", "parameters": "(Logger logger)", "modifiers": "", "return": "", "signature": " Slf4JLogger(Logger logger)", "full_signature": "  Slf4JLogger(Logger logger)", "class_method_signature": "Slf4JLogger.Slf4JLogger(Logger logger)", "testcase": false, "constructor": true}, {"identifier": "getLogger", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "Slf4JLogger", "signature": "Slf4JLogger getLogger(Class<?> clazz)", "full_signature": "public static Slf4JLogger getLogger(Class<?> clazz)", "class_method_signature": "Slf4JLogger.getLogger(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "getLogger", "parameters": "(String name)", "modifiers": "public static", "return": "Slf4JLogger", "signature": "Slf4JLogger getLogger(String name)", "full_signature": "public static Slf4JLogger getLogger(String name)", "class_method_signature": "Slf4JLogger.getLogger(String name)", "testcase": false, "constructor": false}, {"identifier": "debug", "parameters": "(String msg, Object... args)", "modifiers": "public", "return": "void", "signature": "void debug(String msg, Object... args)", "full_signature": "public void debug(String msg, Object... args)", "class_method_signature": "Slf4JLogger.debug(String msg, Object... args)", "testcase": false, "constructor": false}, {"identifier": "debug", "parameters": "(String msg, Throwable t)", "modifiers": "public", "return": "void", "signature": "void debug(String msg, Throwable t)", "full_signature": "public void debug(String msg, Throwable t)", "class_method_signature": "Slf4JLogger.debug(String msg, Throwable t)", "testcase": false, "constructor": false}, {"identifier": "info", "parameters": "(String msg, Object... args)", "modifiers": "public", "return": "void", "signature": "void info(String msg, Object... args)", "full_signature": "public void info(String msg, Object... args)", "class_method_signature": "Slf4JLogger.info(String msg, Object... args)", "testcase": false, "constructor": false}, {"identifier": "info", "parameters": "(String msg, Throwable t)", "modifiers": "public", "return": "void", "signature": "void info(String msg, Throwable t)", "full_signature": "public void info(String msg, Throwable t)", "class_method_signature": "Slf4JLogger.info(String msg, Throwable t)", "testcase": false, "constructor": false}, {"identifier": "trace", "parameters": "(String format, Object... args)", "modifiers": "public", "return": "void", "signature": "void trace(String format, Object... args)", "full_signature": "public void trace(String format, Object... args)", "class_method_signature": "Slf4JLogger.trace(String format, Object... args)", "testcase": false, "constructor": false}, {"identifier": "trace", "parameters": "(String msg, Throwable t)", "modifiers": "public", "return": "void", "signature": "void trace(String msg, Throwable t)", "full_signature": "public void trace(String msg, Throwable t)", "class_method_signature": "Slf4JLogger.trace(String msg, Throwable t)", "testcase": false, "constructor": false}, {"identifier": "warn", "parameters": "(String format, Object... args)", "modifiers": "public", "return": "void", "signature": "void warn(String format, Object... args)", "full_signature": "public void warn(String format, Object... args)", "class_method_signature": "Slf4JLogger.warn(String format, Object... args)", "testcase": false, "constructor": false}, {"identifier": "warn", "parameters": "(String msg, Throwable t)", "modifiers": "public", "return": "void", "signature": "void warn(String msg, Throwable t)", "full_signature": "public void warn(String msg, Throwable t)", "class_method_signature": "Slf4JLogger.warn(String msg, Throwable t)", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(String format, Object... args)", "modifiers": "public", "return": "void", "signature": "void error(String format, Object... args)", "full_signature": "public void error(String format, Object... args)", "class_method_signature": "Slf4JLogger.error(String format, Object... args)", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(String msg, Throwable t)", "modifiers": "public", "return": "void", "signature": "void error(String msg, Throwable t)", "full_signature": "public void error(String msg, Throwable t)", "class_method_signature": "Slf4JLogger.error(String msg, Throwable t)", "testcase": false, "constructor": false}], "file": "dddlib-utils/src/main/java/org/dayatang/utils/Slf4JLogger.java"}, "focal_method": {"identifier": "info", "parameters": "(String msg, Object... args)", "modifiers": "public", "return": "void", "body": "public void info(String msg, Object... args) {\n\t\tif (logger.isInfoEnabled()) {\n\t\t\tlogger.info(msg, args);\n\t\t}\n\t}", "signature": "void info(String msg, Object... args)", "full_signature": "public void info(String msg, Object... args)", "class_method_signature": "Slf4JLogger.info(String msg, Object... args)", "testcase": false, "constructor": false, "invocations": ["isInfoEnabled", "info"]}, "repository": {"repo_id": 9467906, "url": "https://github.com/dayatang/dddlib", "language": "Java", "is_fork": false, "fork_count": 202, "stargazer_count": 402, "size": 52576, "license": "licensed"}}