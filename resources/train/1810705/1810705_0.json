{"test_class": {"identifier": "DeviceResolverHandlerInterceptorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Device device = new StubDevice();", "modifier": "private", "type": "Device", "declarator": "device = new StubDevice()", "var_name": "device"}, {"original_string": "private DeviceResolverHandlerInterceptor interceptor = new DeviceResolverHandlerInterceptor(new DeviceResolver() {\n\t\tpublic Device resolveDevice(HttpServletRequest request) {\n\t\t\treturn device;\n\t\t}\n\t});", "modifier": "private", "type": "DeviceResolverHandlerInterceptor", "declarator": "interceptor = new DeviceResolverHandlerInterceptor(new DeviceResolver() {\n\t\tpublic Device resolveDevice(HttpServletRequest request) {\n\t\t\treturn device;\n\t\t}\n\t})", "var_name": "interceptor"}, {"original_string": "private MockHttpServletRequest request = new MockHttpServletRequest();", "modifier": "private", "type": "MockHttpServletRequest", "declarator": "request = new MockHttpServletRequest()", "var_name": "request"}, {"original_string": "private MockHttpServletResponse response = new MockHttpServletResponse();", "modifier": "private", "type": "MockHttpServletResponse", "declarator": "response = new MockHttpServletResponse()", "var_name": "response"}], "file": "spring-mobile-device/src/test/java/org/springframework/mobile/device/DeviceResolverHandlerInterceptorTest.java"}, "test_case": {"identifier": "resolve", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void resolve() throws Exception {\n\t\tassertTrue(interceptor.preHandle(request, response, null));\n\t\tassertSame(device, DeviceUtils.getCurrentDevice(request));\n\t}", "signature": "void resolve()", "full_signature": "@Test public void resolve()", "class_method_signature": "DeviceResolverHandlerInterceptorTest.resolve()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "preHandle", "assertSame", "getCurrentDevice"]}, "focal_class": {"identifier": "DeviceResolverHandlerInterceptor", "superclass": "extends HandlerInterceptorAdapter", "interfaces": "", "fields": [{"original_string": "private final DeviceResolver deviceResolver;", "modifier": "private final", "type": "DeviceResolver", "declarator": "deviceResolver", "var_name": "deviceResolver"}], "methods": [{"identifier": "DeviceResolverHandlerInterceptor", "parameters": "()", "modifiers": "public", "return": "", "signature": " DeviceResolverHandlerInterceptor()", "full_signature": "public  DeviceResolverHandlerInterceptor()", "class_method_signature": "DeviceResolverHandlerInterceptor.DeviceResolverHandlerInterceptor()", "testcase": false, "constructor": true}, {"identifier": "DeviceResolverHandlerInterceptor", "parameters": "(DeviceResolver deviceResolver)", "modifiers": "public", "return": "", "signature": " DeviceResolverHandlerInterceptor(DeviceResolver deviceResolver)", "full_signature": "public  DeviceResolverHandlerInterceptor(DeviceResolver deviceResolver)", "class_method_signature": "DeviceResolverHandlerInterceptor.DeviceResolverHandlerInterceptor(DeviceResolver deviceResolver)", "testcase": false, "constructor": true}, {"identifier": "preHandle", "parameters": "(HttpServletRequest request, HttpServletResponse response, Object handler)", "modifiers": "public", "return": "boolean", "signature": "boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)", "full_signature": "public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)", "class_method_signature": "DeviceResolverHandlerInterceptor.preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)", "testcase": false, "constructor": false}], "file": "spring-mobile-device/src/main/java/org/springframework/mobile/device/DeviceResolverHandlerInterceptor.java"}, "focal_method": {"identifier": "preHandle", "parameters": "(HttpServletRequest request, HttpServletResponse response, Object handler)", "modifiers": "public", "return": "boolean", "body": "public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n\t\tDevice device = deviceResolver.resolveDevice(request);\n\t\trequest.setAttribute(DeviceUtils.CURRENT_DEVICE_ATTRIBUTE, device);\n\t\treturn true;\n\t}", "signature": "boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)", "full_signature": "public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)", "class_method_signature": "DeviceResolverHandlerInterceptor.preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)", "testcase": false, "constructor": false, "invocations": ["resolveDevice", "setAttribute"]}, "repository": {"repo_id": 1810705, "url": "https://github.com/spring-projects/spring-mobile", "language": "Java", "is_fork": false, "fork_count": 114, "stargazer_count": 174, "size": 5135, "license": "licensed"}}