{"test_class": {"identifier": "NormalSitePathUrlFactoryTest", "superclass": "extends AbstractSitePathUrlFactoryTest", "interfaces": "", "fields": [], "file": "spring-mobile-device/src/test/java/org/springframework/mobile/device/switcher/NormalSitePathUrlFactoryTest.java"}, "test_case": {"identifier": "createPathSiteUrlTabletPort8080", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void createPathSiteUrlTabletPort8080() {\n\t\trequest.setServerPort(8080);\n\t\trequest.setRequestURI(\"/showcase/tab/foo\");\n\t\tassertEquals(\"https://www.app.com:8080/showcase/foo\", basicPathFactory.createSiteUrl(request));\n\t}", "signature": "void createPathSiteUrlTabletPort8080()", "full_signature": "@Test public void createPathSiteUrlTabletPort8080()", "class_method_signature": "NormalSitePathUrlFactoryTest.createPathSiteUrlTabletPort8080()", "testcase": true, "constructor": false, "invocations": ["setServerPort", "setRequestURI", "assertEquals", "createSiteUrl"]}, "focal_class": {"identifier": "NormalSitePathUrlFactory", "superclass": "extends AbstractSitePathUrlFactory", "interfaces": "implements SiteUrlFactory", "fields": [], "methods": [{"identifier": "NormalSitePathUrlFactory", "parameters": "(final String mobilePath)", "modifiers": "public", "return": "", "signature": " NormalSitePathUrlFactory(final String mobilePath)", "full_signature": "public  NormalSitePathUrlFactory(final String mobilePath)", "class_method_signature": "NormalSitePathUrlFactory.NormalSitePathUrlFactory(final String mobilePath)", "testcase": false, "constructor": true}, {"identifier": "NormalSitePathUrlFactory", "parameters": "(final String mobilePath, final String rootPath)", "modifiers": "public", "return": "", "signature": " NormalSitePathUrlFactory(final String mobilePath, final String rootPath)", "full_signature": "public  NormalSitePathUrlFactory(final String mobilePath, final String rootPath)", "class_method_signature": "NormalSitePathUrlFactory.NormalSitePathUrlFactory(final String mobilePath, final String rootPath)", "testcase": false, "constructor": true}, {"identifier": "NormalSitePathUrlFactory", "parameters": "(final String mobilePath, final String tabletPath, final String rootPath)", "modifiers": "public", "return": "", "signature": " NormalSitePathUrlFactory(final String mobilePath, final String tabletPath, final String rootPath)", "full_signature": "public  NormalSitePathUrlFactory(final String mobilePath, final String tabletPath, final String rootPath)", "class_method_signature": "NormalSitePathUrlFactory.NormalSitePathUrlFactory(final String mobilePath, final String tabletPath, final String rootPath)", "testcase": false, "constructor": true}, {"identifier": "isRequestForSite", "parameters": "(HttpServletRequest request)", "modifiers": "public", "return": "boolean", "signature": "boolean isRequestForSite(HttpServletRequest request)", "full_signature": "public boolean isRequestForSite(HttpServletRequest request)", "class_method_signature": "NormalSitePathUrlFactory.isRequestForSite(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "createSiteUrl", "parameters": "(HttpServletRequest request)", "modifiers": "public", "return": "String", "signature": "String createSiteUrl(HttpServletRequest request)", "full_signature": "public String createSiteUrl(HttpServletRequest request)", "class_method_signature": "NormalSitePathUrlFactory.createSiteUrl(HttpServletRequest request)", "testcase": false, "constructor": false}], "file": "spring-mobile-device/src/main/java/org/springframework/mobile/device/switcher/NormalSitePathUrlFactory.java"}, "focal_method": {"identifier": "createSiteUrl", "parameters": "(HttpServletRequest request)", "modifiers": "public", "return": "String", "body": "public String createSiteUrl(HttpServletRequest request) {\n\t\tString requestURI = request.getRequestURI();\n\t\tString adjustedRequestURI = \"\";\n\t\tif (hasMobilePath() && requestURI.equals(getCleanMobilePath()) || \n\t\t\t\thasTabletPath() && requestURI.equals(getCleanTabletPath())) {\n\t\t\tif (hasRootPath()) {\n\t\t\t\tadjustedRequestURI = getCleanRootPath();\n\t\t\t}\n\t\t} else if (hasMobilePath() && requestURI.startsWith(getFullMobilePath())) {\n\t\t\tif (hasRootPath()) {\n\t\t\t\tadjustedRequestURI = getRootPath() + requestURI.substring(getFullMobilePath().length());\n\t\t\t} else {\n\t\t\t\tadjustedRequestURI = requestURI.substring(getCleanMobilePath().length());\n\t\t\t}\n\t\t} else if (hasTabletPath() && requestURI.startsWith(getFullTabletPath())) {\n\t\t\tif (hasRootPath()) {\n\t\t\t\tadjustedRequestURI = getRootPath() + requestURI.substring(getFullTabletPath().length());\n\t\t\t} else {\n\t\t\t\tadjustedRequestURI = requestURI.substring(getCleanTabletPath().length());\n\t\t\t}\n\t\t}\n\t\treturn createSiteUrlInternal(request, request.getServerName(), adjustedRequestURI);\n\t}", "signature": "String createSiteUrl(HttpServletRequest request)", "full_signature": "public String createSiteUrl(HttpServletRequest request)", "class_method_signature": "NormalSitePathUrlFactory.createSiteUrl(HttpServletRequest request)", "testcase": false, "constructor": false, "invocations": ["getRequestURI", "hasMobilePath", "equals", "getCleanMobilePath", "hasTabletPath", "equals", "getCleanTabletPath", "hasRootPath", "getCleanRootPath", "hasMobilePath", "startsWith", "getFullMobilePath", "hasRootPath", "getRootPath", "substring", "length", "getFullMobilePath", "substring", "length", "getCleanMobilePath", "hasTabletPath", "startsWith", "getFullTabletPath", "hasRootPath", "getRootPath", "substring", "length", "getFullTabletPath", "substring", "length", "getCleanTabletPath", "createSiteUrlInternal", "getServerName"]}, "repository": {"repo_id": 1810705, "url": "https://github.com/spring-projects/spring-mobile", "language": "Java", "is_fork": false, "fork_count": 114, "stargazer_count": 174, "size": 5135, "license": "licensed"}}