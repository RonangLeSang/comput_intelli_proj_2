{"test_class": {"identifier": "LiteDeviceResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String MOBILE_TO_STRING = \"[LiteDevice type=MOBILE]\";", "modifier": "private static final", "type": "String", "declarator": "MOBILE_TO_STRING = \"[LiteDevice type=MOBILE]\"", "var_name": "MOBILE_TO_STRING"}, {"original_string": "private static final String TABLET_TO_STRING = \"[LiteDevice type=TABLET]\";", "modifier": "private static final", "type": "String", "declarator": "TABLET_TO_STRING = \"[LiteDevice type=TABLET]\"", "var_name": "TABLET_TO_STRING"}, {"original_string": "private static final String NORMAL_TO_STRING = \"[LiteDevice type=NORMAL]\";", "modifier": "private static final", "type": "String", "declarator": "NORMAL_TO_STRING = \"[LiteDevice type=NORMAL]\"", "var_name": "NORMAL_TO_STRING"}, {"original_string": "private LiteDeviceResolver resolver = new LiteDeviceResolver();", "modifier": "private", "type": "LiteDeviceResolver", "declarator": "resolver = new LiteDeviceResolver()", "var_name": "resolver"}, {"original_string": "private MockMobileRequest request = new MockMobileRequest();", "modifier": "private", "type": "MockMobileRequest", "declarator": "request = new MockMobileRequest()", "var_name": "request"}], "file": "spring-mobile-device/src/test/java/org/springframework/mobile/device/LiteDeviceResolverTest.java"}, "test_case": {"identifier": "osX_10_7_3_Safari5_1_5", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void osX_10_7_3_Safari5_1_5() {\n\t\trequest.setUserAgentHeader(UserAgent.OSX_10_7_3_SAFARI5_1_5_STRING);\n\t\tDevice device = resolver.resolveDevice(request);\n\t\tassertEquals(device.toString(), NORMAL_TO_STRING);\n\t\tassertUnknownPlatform(request);\n\t}", "signature": "void osX_10_7_3_Safari5_1_5()", "full_signature": "@Test public void osX_10_7_3_Safari5_1_5()", "class_method_signature": "LiteDeviceResolverTest.osX_10_7_3_Safari5_1_5()", "testcase": true, "constructor": false, "invocations": ["setUserAgentHeader", "resolveDevice", "assertEquals", "toString", "assertUnknownPlatform"]}, "focal_class": {"identifier": "LiteDeviceResolver", "superclass": "", "interfaces": "implements DeviceResolver", "fields": [{"original_string": "private final List<String> mobileUserAgentPrefixes = new ArrayList<String>();", "modifier": "private final", "type": "List<String>", "declarator": "mobileUserAgentPrefixes = new ArrayList<String>()", "var_name": "mobileUserAgentPrefixes"}, {"original_string": "private final List<String> mobileUserAgentKeywords = new ArrayList<String>();", "modifier": "private final", "type": "List<String>", "declarator": "mobileUserAgentKeywords = new ArrayList<String>()", "var_name": "mobileUserAgentKeywords"}, {"original_string": "private final List<String> tabletUserAgentKeywords = new ArrayList<String>();", "modifier": "private final", "type": "List<String>", "declarator": "tabletUserAgentKeywords = new ArrayList<String>()", "var_name": "tabletUserAgentKeywords"}, {"original_string": "private final List<String> normalUserAgentKeywords = new ArrayList<String>();", "modifier": "private final", "type": "List<String>", "declarator": "normalUserAgentKeywords = new ArrayList<String>()", "var_name": "normalUserAgentKeywords"}, {"original_string": "private static final String[] KNOWN_MOBILE_USER_AGENT_PREFIXES = new String[] {\n\t\t\t\"w3c \", \"w3c-\", \"acs-\", \"alav\", \"alca\", \"amoi\", \"avan\", \"benq\", \"bird\",\n\t\t\t\"blac\", \"blaz\", \"brew\", \"cell\", \"cldc\", \"cmd-\", \"dang\", \"doco\", \"eric\",\n\t\t\t\"hipt\", \"htc_\", \"inno\", \"ipaq\", \"ipod\", \"jigs\", \"kddi\", \"keji\", \"leno\",\n\t\t\t\"lg-c\", \"lg-d\", \"lg-g\", \"lge-\", \"lg/u\", \"maui\", \"maxo\", \"midp\", \"mits\",\n\t\t\t\"mmef\", \"mobi\", \"mot-\", \"moto\", \"mwbp\", \"nec-\", \"newt\", \"noki\", \"palm\",\n\t\t\t\"pana\", \"pant\", \"phil\", \"play\", \"port\", \"prox\", \"qwap\", \"sage\", \"sams\",\n\t\t\t\"sany\", \"sch-\", \"sec-\", \"send\", \"seri\", \"sgh-\", \"shar\", \"sie-\", \"siem\",\n\t\t\t\"smal\", \"smar\", \"sony\", \"sph-\", \"symb\", \"t-mo\", \"teli\", \"tim-\", \"tosh\",\n\t\t\t\"tsm-\", \"upg1\", \"upsi\", \"vk-v\", \"voda\", \"wap-\", \"wapa\", \"wapi\", \"wapp\",\n\t\t\t\"wapr\", \"webc\", \"winw\", \"winw\", \"xda \", \"xda-\" };", "modifier": "private static final", "type": "String[]", "declarator": "KNOWN_MOBILE_USER_AGENT_PREFIXES = new String[] {\n\t\t\t\"w3c \", \"w3c-\", \"acs-\", \"alav\", \"alca\", \"amoi\", \"avan\", \"benq\", \"bird\",\n\t\t\t\"blac\", \"blaz\", \"brew\", \"cell\", \"cldc\", \"cmd-\", \"dang\", \"doco\", \"eric\",\n\t\t\t\"hipt\", \"htc_\", \"inno\", \"ipaq\", \"ipod\", \"jigs\", \"kddi\", \"keji\", \"leno\",\n\t\t\t\"lg-c\", \"lg-d\", \"lg-g\", \"lge-\", \"lg/u\", \"maui\", \"maxo\", \"midp\", \"mits\",\n\t\t\t\"mmef\", \"mobi\", \"mot-\", \"moto\", \"mwbp\", \"nec-\", \"newt\", \"noki\", \"palm\",\n\t\t\t\"pana\", \"pant\", \"phil\", \"play\", \"port\", \"prox\", \"qwap\", \"sage\", \"sams\",\n\t\t\t\"sany\", \"sch-\", \"sec-\", \"send\", \"seri\", \"sgh-\", \"shar\", \"sie-\", \"siem\",\n\t\t\t\"smal\", \"smar\", \"sony\", \"sph-\", \"symb\", \"t-mo\", \"teli\", \"tim-\", \"tosh\",\n\t\t\t\"tsm-\", \"upg1\", \"upsi\", \"vk-v\", \"voda\", \"wap-\", \"wapa\", \"wapi\", \"wapp\",\n\t\t\t\"wapr\", \"webc\", \"winw\", \"winw\", \"xda \", \"xda-\" }", "var_name": "KNOWN_MOBILE_USER_AGENT_PREFIXES"}, {"original_string": "private static final String[] KNOWN_MOBILE_USER_AGENT_KEYWORDS = new String[] {\n\t\t\t\"blackberry\", \"webos\", \"ipod\", \"lge vx\", \"midp\", \"maemo\", \"mmp\", \"mobile\",\n\t\t\t\"netfront\", \"hiptop\", \"nintendo DS\", \"novarra\", \"openweb\", \"opera mobi\",\n\t\t\t\"opera mini\", \"palm\", \"psp\", \"phone\", \"smartphone\", \"symbian\", \"up.browser\",\n\t\t\t\"up.link\", \"wap\", \"windows ce\" };", "modifier": "private static final", "type": "String[]", "declarator": "KNOWN_MOBILE_USER_AGENT_KEYWORDS = new String[] {\n\t\t\t\"blackberry\", \"webos\", \"ipod\", \"lge vx\", \"midp\", \"maemo\", \"mmp\", \"mobile\",\n\t\t\t\"netfront\", \"hiptop\", \"nintendo DS\", \"novarra\", \"openweb\", \"opera mobi\",\n\t\t\t\"opera mini\", \"palm\", \"psp\", \"phone\", \"smartphone\", \"symbian\", \"up.browser\",\n\t\t\t\"up.link\", \"wap\", \"windows ce\" }", "var_name": "KNOWN_MOBILE_USER_AGENT_KEYWORDS"}, {"original_string": "private static final String[] KNOWN_TABLET_USER_AGENT_KEYWORDS = new String[] {\n\t\t\t\"ipad\", \"playbook\", \"hp-tablet\", \"kindle\" };", "modifier": "private static final", "type": "String[]", "declarator": "KNOWN_TABLET_USER_AGENT_KEYWORDS = new String[] {\n\t\t\t\"ipad\", \"playbook\", \"hp-tablet\", \"kindle\" }", "var_name": "KNOWN_TABLET_USER_AGENT_KEYWORDS"}], "methods": [{"identifier": "LiteDeviceResolver", "parameters": "()", "modifiers": "public", "return": "", "signature": " LiteDeviceResolver()", "full_signature": "public  LiteDeviceResolver()", "class_method_signature": "LiteDeviceResolver.LiteDeviceResolver()", "testcase": false, "constructor": true}, {"identifier": "LiteDeviceResolver", "parameters": "(List<String> normalUserAgentKeywords)", "modifiers": "public", "return": "", "signature": " LiteDeviceResolver(List<String> normalUserAgentKeywords)", "full_signature": "public  LiteDeviceResolver(List<String> normalUserAgentKeywords)", "class_method_signature": "LiteDeviceResolver.LiteDeviceResolver(List<String> normalUserAgentKeywords)", "testcase": false, "constructor": true}, {"identifier": "resolveDevice", "parameters": "(HttpServletRequest request)", "modifiers": "public", "return": "Device", "signature": "Device resolveDevice(HttpServletRequest request)", "full_signature": "public Device resolveDevice(HttpServletRequest request)", "class_method_signature": "LiteDeviceResolver.resolveDevice(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "resolveWithPlatform", "parameters": "(DeviceType deviceType, DevicePlatform devicePlatform)", "modifiers": "protected", "return": "Device", "signature": "Device resolveWithPlatform(DeviceType deviceType, DevicePlatform devicePlatform)", "full_signature": "protected Device resolveWithPlatform(DeviceType deviceType, DevicePlatform devicePlatform)", "class_method_signature": "LiteDeviceResolver.resolveWithPlatform(DeviceType deviceType, DevicePlatform devicePlatform)", "testcase": false, "constructor": false}, {"identifier": "getMobileUserAgentPrefixes", "parameters": "()", "modifiers": "protected", "return": "List<String>", "signature": "List<String> getMobileUserAgentPrefixes()", "full_signature": "protected List<String> getMobileUserAgentPrefixes()", "class_method_signature": "LiteDeviceResolver.getMobileUserAgentPrefixes()", "testcase": false, "constructor": false}, {"identifier": "getMobileUserAgentKeywords", "parameters": "()", "modifiers": "protected", "return": "List<String>", "signature": "List<String> getMobileUserAgentKeywords()", "full_signature": "protected List<String> getMobileUserAgentKeywords()", "class_method_signature": "LiteDeviceResolver.getMobileUserAgentKeywords()", "testcase": false, "constructor": false}, {"identifier": "getTabletUserAgentKeywords", "parameters": "()", "modifiers": "protected", "return": "List<String>", "signature": "List<String> getTabletUserAgentKeywords()", "full_signature": "protected List<String> getTabletUserAgentKeywords()", "class_method_signature": "LiteDeviceResolver.getTabletUserAgentKeywords()", "testcase": false, "constructor": false}, {"identifier": "getNormalUserAgentKeywords", "parameters": "()", "modifiers": "protected", "return": "List<String>", "signature": "List<String> getNormalUserAgentKeywords()", "full_signature": "protected List<String> getNormalUserAgentKeywords()", "class_method_signature": "LiteDeviceResolver.getNormalUserAgentKeywords()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void init()", "full_signature": "protected void init()", "class_method_signature": "LiteDeviceResolver.init()", "testcase": false, "constructor": false}, {"identifier": "resolveFallback", "parameters": "(HttpServletRequest request)", "modifiers": "protected", "return": "Device", "signature": "Device resolveFallback(HttpServletRequest request)", "full_signature": "protected Device resolveFallback(HttpServletRequest request)", "class_method_signature": "LiteDeviceResolver.resolveFallback(HttpServletRequest request)", "testcase": false, "constructor": false}], "file": "spring-mobile-device/src/main/java/org/springframework/mobile/device/LiteDeviceResolver.java"}, "focal_method": {"identifier": "resolveDevice", "parameters": "(HttpServletRequest request)", "modifiers": "public", "return": "Device", "body": "public Device resolveDevice(HttpServletRequest request) {\n\t\tString userAgent = request.getHeader(\"User-Agent\");\n\t\t// UserAgent keyword detection of Normal devices\n\t\tif (userAgent != null) {\n\t\t\tuserAgent = userAgent.toLowerCase();\n\t\t\tfor (String keyword : normalUserAgentKeywords) {\n\t\t\t\tif (userAgent.contains(keyword)) {\n\t\t\t\t\treturn resolveFallback(request);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// UserAgent keyword detection of Tablet devices\n\t\tif (userAgent != null) {\n\t\t\tuserAgent = userAgent.toLowerCase();\n\t\t\t// Android special case\n\t\t\tif (userAgent.contains(\"android\") && !userAgent.contains(\"mobile\")) {\n\t\t\t\treturn resolveWithPlatform(DeviceType.TABLET, DevicePlatform.ANDROID);\n\t\t\t}\n\t\t\t// Apple special case\n\t\t\tif (userAgent.contains(\"ipad\")) {\n\t\t\t\treturn resolveWithPlatform(DeviceType.TABLET, DevicePlatform.IOS);\n\t\t\t}\n\t\t\t// Kindle Fire special case\n\t\t\tif (userAgent.contains(\"silk\") && !userAgent.contains(\"mobile\")) {\n\t\t\t\treturn resolveWithPlatform(DeviceType.TABLET, DevicePlatform.UNKNOWN);\n\t\t\t}\n\t\t\tfor (String keyword : tabletUserAgentKeywords) {\n\t\t\t\tif (userAgent.contains(keyword)) {\n\t\t\t\t\treturn resolveWithPlatform(DeviceType.TABLET, DevicePlatform.UNKNOWN);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// UAProf detection\n\t\tif (request.getHeader(\"x-wap-profile\") != null || request.getHeader(\"Profile\") != null) {\n\t\t\tif (userAgent != null) {\n\t\t\t\t// Android special case\n\t\t\t\tif (userAgent.contains(\"android\")) {\n\t\t\t\t\treturn resolveWithPlatform(DeviceType.MOBILE, DevicePlatform.ANDROID);\n\t\t\t\t}\n\t\t\t\t// Apple special case\n\t\t\t\tif (userAgent.contains(\"iphone\") || userAgent.contains(\"ipod\") || userAgent.contains(\"ipad\")) {\n\t\t\t\t\treturn resolveWithPlatform(DeviceType.MOBILE, DevicePlatform.IOS);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn resolveWithPlatform(DeviceType.MOBILE, DevicePlatform.UNKNOWN);\n\t\t}\n\t\t// User-Agent prefix detection\n\t\tif (userAgent != null && userAgent.length() >= 4) {\n\t\t\tString prefix = userAgent.substring(0, 4).toLowerCase();\n\t\t\tif (mobileUserAgentPrefixes.contains(prefix)) {\n\t\t\t\treturn resolveWithPlatform(DeviceType.MOBILE, DevicePlatform.UNKNOWN);\n\t\t\t}\n\t\t}\n\t\t// Accept-header based detection\n\t\tString accept = request.getHeader(\"Accept\");\n\t\tif (accept != null && accept.contains(\"wap\")) {\n\t\t\treturn resolveWithPlatform(DeviceType.MOBILE, DevicePlatform.UNKNOWN);\n\t\t}\n\t\t// UserAgent keyword detection for Mobile devices\n\t\tif (userAgent != null) {\n\t\t\t// Android special case\n\t\t\tif (userAgent.contains(\"android\")) {\n\t\t\t\treturn resolveWithPlatform(DeviceType.MOBILE, DevicePlatform.ANDROID);\n\t\t\t}\n\t\t\t// Apple special case\n\t\t\tif (userAgent.contains(\"iphone\") || userAgent.contains(\"ipod\") || userAgent.contains(\"ipad\")) {\n\t\t\t\treturn resolveWithPlatform(DeviceType.MOBILE, DevicePlatform.IOS);\n\t\t\t}\n\t\t\tfor (String keyword : mobileUserAgentKeywords) {\n\t\t\t\tif (userAgent.contains(keyword)) {\n\t\t\t\t\treturn resolveWithPlatform(DeviceType.MOBILE, DevicePlatform.UNKNOWN);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// OperaMini special case\n\t\t@SuppressWarnings(\"rawtypes\")\n\t\tEnumeration headers = request.getHeaderNames();\n\t\twhile (headers.hasMoreElements()) {\n\t\t\tString header = (String) headers.nextElement();\n\t\t\tif (header.contains(\"OperaMini\")) {\n\t\t\t\t/*return LiteDevice.MOBILE_INSTANCE;*/\n\t\t\t\treturn resolveWithPlatform(DeviceType.MOBILE, DevicePlatform.UNKNOWN);\n\t\t\t}\n\t\t}\n\t\treturn resolveFallback(request);\n\t}", "signature": "Device resolveDevice(HttpServletRequest request)", "full_signature": "public Device resolveDevice(HttpServletRequest request)", "class_method_signature": "LiteDeviceResolver.resolveDevice(HttpServletRequest request)", "testcase": false, "constructor": false, "invocations": ["getHeader", "toLowerCase", "contains", "resolveFallback", "toLowerCase", "contains", "contains", "resolveWithPlatform", "contains", "resolveWithPlatform", "contains", "contains", "resolveWithPlatform", "contains", "resolveWithPlatform", "getHeader", "getHeader", "contains", "resolveWithPlatform", "contains", "contains", "contains", "resolveWithPlatform", "resolveWithPlatform", "length", "toLowerCase", "substring", "contains", "resolveWithPlatform", "getHeader", "contains", "resolveWithPlatform", "contains", "resolveWithPlatform", "contains", "contains", "contains", "resolveWithPlatform", "contains", "resolveWithPlatform", "getHeaderNames", "hasMoreElements", "nextElement", "contains", "resolveWithPlatform", "resolveFallback"]}, "repository": {"repo_id": 1810705, "url": "https://github.com/spring-projects/spring-mobile", "language": "Java", "is_fork": false, "fork_count": 114, "stargazer_count": 174, "size": 5135, "license": "licensed"}}