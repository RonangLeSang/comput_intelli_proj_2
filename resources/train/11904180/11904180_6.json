{"test_class": {"identifier": "InternalTypeMappingTest", "superclass": "", "interfaces": "", "fields": [], "file": "cascading-jdbc-core/src/test/java/cascading/jdbc/InternalTypeMappingTest.java"}, "test_case": {"identifier": "testMappings", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testMappings()\n    {\n    assertEquals( \"int not null\",  InternalTypeMapping.sqltypeForClass( int.class ) );\n    assertEquals( \"int not null\", InternalTypeMapping.sqltypeForClass( long.class ) );\n    assertEquals( \"int\", InternalTypeMapping.sqltypeForClass( Integer.class ) );\n    assertEquals( \"int\", InternalTypeMapping.sqltypeForClass( Long.class ) );\n    assertEquals( \"varchar(256)\", InternalTypeMapping.sqltypeForClass( String.class ) );\n    assertEquals( \"timestamp\", InternalTypeMapping.sqltypeForClass( Timestamp.class ) );\n    assertEquals( \"time\", InternalTypeMapping.sqltypeForClass( Time.class ) );\n    assertEquals( \"date\", InternalTypeMapping.sqltypeForClass( Date.class ) );\n    }", "signature": "void testMappings()", "full_signature": "@Test public void testMappings()", "class_method_signature": "InternalTypeMappingTest.testMappings()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "sqltypeForClass", "assertEquals", "sqltypeForClass", "assertEquals", "sqltypeForClass", "assertEquals", "sqltypeForClass", "assertEquals", "sqltypeForClass", "assertEquals", "sqltypeForClass", "assertEquals", "sqltypeForClass", "assertEquals", "sqltypeForClass"]}, "focal_class": {"identifier": "InternalTypeMapping", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Map<Type, String> TYPES = new HashMap<Type, String>();", "modifier": "private static final", "type": "Map<Type, String>", "declarator": "TYPES = new HashMap<Type, String>()", "var_name": "TYPES"}, {"original_string": "private static final Map<String, Type> NATIVE_TYPES = new HashMap<String, Type>();", "modifier": "private static final", "type": "Map<String, Type>", "declarator": "NATIVE_TYPES = new HashMap<String, Type>()", "var_name": "NATIVE_TYPES"}], "methods": [{"identifier": "findInternalType", "parameters": "( Type type )", "modifiers": "public static", "return": "Type", "signature": "Type findInternalType( Type type )", "full_signature": "public static Type findInternalType( Type type )", "class_method_signature": "InternalTypeMapping.findInternalType( Type type )", "testcase": false, "constructor": false}, {"identifier": "sqltypeForClass", "parameters": "( Type type )", "modifiers": "public static", "return": "String", "signature": "String sqltypeForClass( Type type )", "full_signature": "public static String sqltypeForClass( Type type )", "class_method_signature": "InternalTypeMapping.sqltypeForClass( Type type )", "testcase": false, "constructor": false}], "file": "cascading-jdbc-core/src/main/java/cascading/jdbc/InternalTypeMapping.java"}, "focal_method": {"identifier": "sqltypeForClass", "parameters": "( Type type )", "modifiers": "public static", "return": "String", "body": "public static String sqltypeForClass( Type type )\n    {\n    String sqlType = TYPES.get( type );\n    if( sqlType == null )\n      {\n      Type nativeType = findInternalType( type );\n      sqlType = TYPES.get( nativeType );\n      if( sqlType == null )\n        throw new IllegalArgumentException( String.format( \"cannot map type %s to a sql type\", type ) );\n      }\n    return sqlType;\n    }", "signature": "String sqltypeForClass( Type type )", "full_signature": "public static String sqltypeForClass( Type type )", "class_method_signature": "InternalTypeMapping.sqltypeForClass( Type type )", "testcase": false, "constructor": false, "invocations": ["get", "findInternalType", "get", "format"]}, "repository": {"repo_id": 11904180, "url": "https://github.com/Cascading/cascading-jdbc", "language": "Java", "is_fork": false, "fork_count": 16, "stargazer_count": 28, "size": 691, "license": "licensed"}}