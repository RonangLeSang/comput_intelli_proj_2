{"test_class": {"identifier": "ConfigTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "String savedUserDir;", "modifier": "", "type": "String", "declarator": "savedUserDir", "var_name": "savedUserDir"}, {"original_string": "File tmp;", "modifier": "", "type": "File", "declarator": "tmp", "var_name": "tmp"}, {"original_string": "File wd;", "modifier": "", "type": "File", "declarator": "wd", "var_name": "wd"}, {"original_string": "Home fakeHome;", "modifier": "", "type": "Home", "declarator": "fakeHome", "var_name": "fakeHome"}], "file": "compiler/src/test/java/org/robovm/compiler/config/ConfigTest.java"}, "test_case": {"identifier": "testGetFileName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetFileName() throws Exception {\n        assertEquals(\"201a6b3053cc1422d2c3670b62616221d2290929.class.o\", Config.getFileName(\"Foo\", \"class.o\", 0));\n        assertEquals(\"201a6b3053cc1422d2c3670b62616221d2290929.class.o\", Config.getFileName(\"Foo\", \"class.o\", 1));\n        assertEquals(\"201a6b3053cc1422d2c3670b62616221d2290929.class.o\", Config.getFileName(\"Foo\", \"class.o\", 10));\n        assertEquals(\"Foo.class.o\", Config.getFileName(\"Foo\", \"class.o\", 11));\n\n        assertEquals(\"com/example/201a6b3053cc1422d2c3670b62616221d2290929.class.o\",\n                Config.getFileName(\"com/example/Foo\", \"class.o\", 0));\n        assertEquals(\"com/example/201a6b3053cc1422d2c3670b62616221d2290929.class.o\",\n                Config.getFileName(\"com/example/Foo\", \"class.o\", 1));\n        assertEquals(\"com/example/201a6b3053cc1422d2c3670b62616221d2290929.class.o\",\n                Config.getFileName(\"com/example/Foo\", \"class.o\", 10));\n        assertEquals(\"com/example/Foo.class.o\", Config.getFileName(\"com/example/Foo\", \"class.o\", 11));\n\n        assertEquals(\"com/example/AB9ca44297c0e0d22df654119dce73ee52d3d51c71.class.o\",\n                Config.getFileName(\"com/example/ABCDEFGIHJABCDEFGIHJABCDEFGIHJABCDEFGIHJABCDEFGIHJ\", \"class.o\", 50));\n    }", "signature": "void testGetFileName()", "full_signature": "@Test public void testGetFileName()", "class_method_signature": "ConfigTest.testGetFileName()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getFileName", "assertEquals", "getFileName", "assertEquals", "getFileName", "assertEquals", "getFileName", "assertEquals", "getFileName", "assertEquals", "getFileName", "assertEquals", "getFileName", "assertEquals", "getFileName", "assertEquals", "getFileName"]}, "focal_class": {"identifier": "Config", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int MAX_FILE_NAME_LENGTH = 255;", "modifier": "private static final", "type": "int", "declarator": "MAX_FILE_NAME_LENGTH = 255", "var_name": "MAX_FILE_NAME_LENGTH"}, {"original_string": "@Element(required = false)\n    private File installDir = null;", "modifier": "@Element(required = false)\n    private", "type": "File", "declarator": "installDir = null", "var_name": "installDir"}, {"original_string": "@Element(required = false)\n    private String executableName = null;", "modifier": "@Element(required = false)\n    private", "type": "String", "declarator": "executableName = null", "var_name": "executableName"}, {"original_string": "@Element(required = false)\n    private String imageName = null;", "modifier": "@Element(required = false)\n    private", "type": "String", "declarator": "imageName = null", "var_name": "imageName"}, {"original_string": "@Element(required = false)\n    private Boolean skipRuntimeLib = null;", "modifier": "@Element(required = false)\n    private", "type": "Boolean", "declarator": "skipRuntimeLib = null", "var_name": "skipRuntimeLib"}, {"original_string": "@Element(required = false)\n    private File mainJar;", "modifier": "@Element(required = false)\n    private", "type": "File", "declarator": "mainJar", "var_name": "mainJar"}, {"original_string": "@Element(required = false)\n    private String mainClass;", "modifier": "@Element(required = false)\n    private", "type": "String", "declarator": "mainClass", "var_name": "mainClass"}, {"original_string": "@Element(required = false)\n    private Cacerts cacerts = null;", "modifier": "@Element(required = false)\n    private", "type": "Cacerts", "declarator": "cacerts = null", "var_name": "cacerts"}, {"original_string": "@Element(required = false)\n    private OS os = null;", "modifier": "@Element(required = false)\n    private", "type": "OS", "declarator": "os = null", "var_name": "os"}, {"original_string": "@ElementList(required = false, inline = true)\n    private ArrayList<Arch> archs = null;", "modifier": "@ElementList(required = false, inline = true)\n    private", "type": "ArrayList<Arch>", "declarator": "archs = null", "var_name": "archs"}, {"original_string": "@ElementList(required = false, entry = \"root\")\n    private ArrayList<String> roots;", "modifier": "@ElementList(required = false, entry = \"root\")\n    private", "type": "ArrayList<String>", "declarator": "roots", "var_name": "roots"}, {"original_string": "@ElementList(required = false, entry = \"pattern\")\n    private ArrayList<String> forceLinkClasses;", "modifier": "@ElementList(required = false, entry = \"pattern\")\n    private", "type": "ArrayList<String>", "declarator": "forceLinkClasses", "var_name": "forceLinkClasses"}, {"original_string": "@ElementList(required = false, entry = \"lib\")\n    private ArrayList<Lib> libs;", "modifier": "@ElementList(required = false, entry = \"lib\")\n    private", "type": "ArrayList<Lib>", "declarator": "libs", "var_name": "libs"}, {"original_string": "@ElementList(required = false, entry = \"symbol\")\n    private ArrayList<String> exportedSymbols;", "modifier": "@ElementList(required = false, entry = \"symbol\")\n    private", "type": "ArrayList<String>", "declarator": "exportedSymbols", "var_name": "exportedSymbols"}, {"original_string": "@ElementList(required = false, entry = \"symbol\")\n    private ArrayList<String> unhideSymbols;", "modifier": "@ElementList(required = false, entry = \"symbol\")\n    private", "type": "ArrayList<String>", "declarator": "unhideSymbols", "var_name": "unhideSymbols"}, {"original_string": "@ElementList(required = false, entry = \"framework\")\n    private ArrayList<String> frameworks;", "modifier": "@ElementList(required = false, entry = \"framework\")\n    private", "type": "ArrayList<String>", "declarator": "frameworks", "var_name": "frameworks"}, {"original_string": "@ElementList(required = false, entry = \"framework\")\n    private ArrayList<String> weakFrameworks;", "modifier": "@ElementList(required = false, entry = \"framework\")\n    private", "type": "ArrayList<String>", "declarator": "weakFrameworks", "var_name": "weakFrameworks"}, {"original_string": "@ElementList(required = false, entry = \"path\")\n    private ArrayList<File> frameworkPaths;", "modifier": "@ElementList(required = false, entry = \"path\")\n    private", "type": "ArrayList<File>", "declarator": "frameworkPaths", "var_name": "frameworkPaths"}, {"original_string": "@ElementList(required = false, entry = \"resource\")\n    private ArrayList<Resource> resources;", "modifier": "@ElementList(required = false, entry = \"resource\")\n    private", "type": "ArrayList<Resource>", "declarator": "resources", "var_name": "resources"}, {"original_string": "@ElementList(required = false, entry = \"classpathentry\")\n    private ArrayList<File> bootclasspath;", "modifier": "@ElementList(required = false, entry = \"classpathentry\")\n    private", "type": "ArrayList<File>", "declarator": "bootclasspath", "var_name": "bootclasspath"}, {"original_string": "@ElementList(required = false, entry = \"classpathentry\")\n    private ArrayList<File> classpath;", "modifier": "@ElementList(required = false, entry = \"classpathentry\")\n    private", "type": "ArrayList<File>", "declarator": "classpath", "var_name": "classpath"}, {"original_string": "@ElementList(required = false, entry = \"argument\")\n    private ArrayList<String> pluginArguments;", "modifier": "@ElementList(required = false, entry = \"argument\")\n    private", "type": "ArrayList<String>", "declarator": "pluginArguments", "var_name": "pluginArguments"}, {"original_string": "@Element(required = false, name = \"target\")\n    private String targetType;", "modifier": "@Element(required = false, name = \"target\")\n    private", "type": "String", "declarator": "targetType", "var_name": "targetType"}, {"original_string": "@Element(required = false, name = \"treeShaker\")\n    private TreeShakerMode treeShakerMode;", "modifier": "@Element(required = false, name = \"treeShaker\")\n    private", "type": "TreeShakerMode", "declarator": "treeShakerMode", "var_name": "treeShakerMode"}, {"original_string": "@Element(required = false)\n    private String iosSdkVersion;", "modifier": "@Element(required = false)\n    private", "type": "String", "declarator": "iosSdkVersion", "var_name": "iosSdkVersion"}, {"original_string": "@Element(required = false, name = \"iosInfoPList\")\n    private File iosInfoPListFile = null;", "modifier": "@Element(required = false, name = \"iosInfoPList\")\n    private", "type": "File", "declarator": "iosInfoPListFile = null", "var_name": "iosInfoPListFile"}, {"original_string": "@Element(required = false, name = \"infoPList\")\n    private File infoPListFile = null;", "modifier": "@Element(required = false, name = \"infoPList\")\n    private", "type": "File", "declarator": "infoPListFile = null", "var_name": "infoPListFile"}, {"original_string": "@Element(required = false)\n    private File iosEntitlementsPList;", "modifier": "@Element(required = false)\n    private", "type": "File", "declarator": "iosEntitlementsPList", "var_name": "iosEntitlementsPList"}, {"original_string": "@Element(required = false)\n    private Tools tools;", "modifier": "@Element(required = false)\n    private", "type": "Tools", "declarator": "tools", "var_name": "tools"}, {"original_string": "private SigningIdentity iosSignIdentity;", "modifier": "private", "type": "SigningIdentity", "declarator": "iosSignIdentity", "var_name": "iosSignIdentity"}, {"original_string": "private ProvisioningProfile iosProvisioningProfile;", "modifier": "private", "type": "ProvisioningProfile", "declarator": "iosProvisioningProfile", "var_name": "iosProvisioningProfile"}, {"original_string": "private String iosDeviceType;", "modifier": "private", "type": "String", "declarator": "iosDeviceType", "var_name": "iosDeviceType"}, {"original_string": "private InfoPList infoPList;", "modifier": "private", "type": "InfoPList", "declarator": "infoPList", "var_name": "infoPList"}, {"original_string": "private boolean iosSkipSigning = false;", "modifier": "private", "type": "boolean", "declarator": "iosSkipSigning = false", "var_name": "iosSkipSigning"}, {"original_string": "private Properties properties = new Properties();", "modifier": "private", "type": "Properties", "declarator": "properties = new Properties()", "var_name": "properties"}, {"original_string": "private Home home = null;", "modifier": "private", "type": "Home", "declarator": "home = null", "var_name": "home"}, {"original_string": "private File tmpDir;", "modifier": "private", "type": "File", "declarator": "tmpDir", "var_name": "tmpDir"}, {"original_string": "private File cacheDir = new File(System.getProperty(\"user.home\"), \".robovm/cache\");", "modifier": "private", "type": "File", "declarator": "cacheDir = new File(System.getProperty(\"user.home\"), \".robovm/cache\")", "var_name": "cacheDir"}, {"original_string": "private File ccBinPath = null;", "modifier": "private", "type": "File", "declarator": "ccBinPath = null", "var_name": "ccBinPath"}, {"original_string": "private boolean clean = false;", "modifier": "private", "type": "boolean", "declarator": "clean = false", "var_name": "clean"}, {"original_string": "private boolean debug = false;", "modifier": "private", "type": "boolean", "declarator": "debug = false", "var_name": "debug"}, {"original_string": "private boolean useDebugLibs = false;", "modifier": "private", "type": "boolean", "declarator": "useDebugLibs = false", "var_name": "useDebugLibs"}, {"original_string": "private boolean skipLinking = false;", "modifier": "private", "type": "boolean", "declarator": "skipLinking = false", "var_name": "skipLinking"}, {"original_string": "private boolean skipInstall = false;", "modifier": "private", "type": "boolean", "declarator": "skipInstall = false", "var_name": "skipInstall"}, {"original_string": "private boolean dumpIntermediates = false;", "modifier": "private", "type": "boolean", "declarator": "dumpIntermediates = false", "var_name": "dumpIntermediates"}, {"original_string": "private int threads = Runtime.getRuntime().availableProcessors();", "modifier": "private", "type": "int", "declarator": "threads = Runtime.getRuntime().availableProcessors()", "var_name": "threads"}, {"original_string": "private Logger logger = Logger.NULL_LOGGER;", "modifier": "private", "type": "Logger", "declarator": "logger = Logger.NULL_LOGGER", "var_name": "logger"}, {"original_string": "private transient List<Plugin> plugins = new ArrayList<>();", "modifier": "private transient", "type": "List<Plugin>", "declarator": "plugins = new ArrayList<>()", "var_name": "plugins"}, {"original_string": "private transient Target target = null;", "modifier": "private transient", "type": "Target", "declarator": "target = null", "var_name": "target"}, {"original_string": "private transient File osArchDepLibDir;", "modifier": "private transient", "type": "File", "declarator": "osArchDepLibDir", "var_name": "osArchDepLibDir"}, {"original_string": "private transient File osArchCacheDir;", "modifier": "private transient", "type": "File", "declarator": "osArchCacheDir", "var_name": "osArchCacheDir"}, {"original_string": "private transient Clazzes clazzes;", "modifier": "private transient", "type": "Clazzes", "declarator": "clazzes", "var_name": "clazzes"}, {"original_string": "private transient VTable.Cache vtableCache;", "modifier": "private transient", "type": "VTable.Cache", "declarator": "vtableCache", "var_name": "vtableCache"}, {"original_string": "private transient ITable.Cache itableCache;", "modifier": "private transient", "type": "ITable.Cache", "declarator": "itableCache", "var_name": "itableCache"}, {"original_string": "private transient List<Path> resourcesPaths = new ArrayList<Path>();", "modifier": "private transient", "type": "List<Path>", "declarator": "resourcesPaths = new ArrayList<Path>()", "var_name": "resourcesPaths"}, {"original_string": "private transient DataLayout dataLayout;", "modifier": "private transient", "type": "DataLayout", "declarator": "dataLayout", "var_name": "dataLayout"}, {"original_string": "private transient MarshalerLookup marshalerLookup;", "modifier": "private transient", "type": "MarshalerLookup", "declarator": "marshalerLookup", "var_name": "marshalerLookup"}, {"original_string": "private transient Config configBeforeBuild;", "modifier": "private transient", "type": "Config", "declarator": "configBeforeBuild", "var_name": "configBeforeBuild"}, {"original_string": "private transient DependencyGraph dependencyGraph;", "modifier": "private transient", "type": "DependencyGraph", "declarator": "dependencyGraph", "var_name": "dependencyGraph"}, {"original_string": "private transient Arch sliceArch;", "modifier": "private transient", "type": "Arch", "declarator": "sliceArch", "var_name": "sliceArch"}], "methods": [{"identifier": "Config", "parameters": "()", "modifiers": "protected", "return": "", "signature": " Config()", "full_signature": "protected  Config()", "class_method_signature": "Config.Config()", "testcase": false, "constructor": true}, {"identifier": "builder", "parameters": "()", "modifiers": "public", "return": "Builder", "signature": "Builder builder()", "full_signature": "public Builder builder()", "class_method_signature": "Config.builder()", "testcase": false, "constructor": false}, {"identifier": "getHome", "parameters": "()", "modifiers": "public", "return": "Home", "signature": "Home getHome()", "full_signature": "public Home getHome()", "class_method_signature": "Config.getHome()", "testcase": false, "constructor": false}, {"identifier": "getInstallDir", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getInstallDir()", "full_signature": "public File getInstallDir()", "class_method_signature": "Config.getInstallDir()", "testcase": false, "constructor": false}, {"identifier": "getExecutableName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getExecutableName()", "full_signature": "public String getExecutableName()", "class_method_signature": "Config.getExecutableName()", "testcase": false, "constructor": false}, {"identifier": "getImageName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getImageName()", "full_signature": "public String getImageName()", "class_method_signature": "Config.getImageName()", "testcase": false, "constructor": false}, {"identifier": "getExecutablePath", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getExecutablePath()", "full_signature": "public File getExecutablePath()", "class_method_signature": "Config.getExecutablePath()", "testcase": false, "constructor": false}, {"identifier": "getImagePath", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getImagePath()", "full_signature": "public File getImagePath()", "class_method_signature": "Config.getImagePath()", "testcase": false, "constructor": false}, {"identifier": "getCacheDir", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getCacheDir()", "full_signature": "public File getCacheDir()", "class_method_signature": "Config.getCacheDir()", "testcase": false, "constructor": false}, {"identifier": "getCcBinPath", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getCcBinPath()", "full_signature": "public File getCcBinPath()", "class_method_signature": "Config.getCcBinPath()", "testcase": false, "constructor": false}, {"identifier": "getOs", "parameters": "()", "modifiers": "public", "return": "OS", "signature": "OS getOs()", "full_signature": "public OS getOs()", "class_method_signature": "Config.getOs()", "testcase": false, "constructor": false}, {"identifier": "getArch", "parameters": "()", "modifiers": "public", "return": "Arch", "signature": "Arch getArch()", "full_signature": "public Arch getArch()", "class_method_signature": "Config.getArch()", "testcase": false, "constructor": false}, {"identifier": "getArchs", "parameters": "()", "modifiers": "public", "return": "List<Arch>", "signature": "List<Arch> getArchs()", "full_signature": "public List<Arch> getArchs()", "class_method_signature": "Config.getArchs()", "testcase": false, "constructor": false}, {"identifier": "getTriple", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTriple()", "full_signature": "public String getTriple()", "class_method_signature": "Config.getTriple()", "testcase": false, "constructor": false}, {"identifier": "getClangTriple", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getClangTriple()", "full_signature": "public String getClangTriple()", "class_method_signature": "Config.getClangTriple()", "testcase": false, "constructor": false}, {"identifier": "getDataLayout", "parameters": "()", "modifiers": "public", "return": "DataLayout", "signature": "DataLayout getDataLayout()", "full_signature": "public DataLayout getDataLayout()", "class_method_signature": "Config.getDataLayout()", "testcase": false, "constructor": false}, {"identifier": "isClean", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isClean()", "full_signature": "public boolean isClean()", "class_method_signature": "Config.isClean()", "testcase": false, "constructor": false}, {"identifier": "isDebug", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDebug()", "full_signature": "public boolean isDebug()", "class_method_signature": "Config.isDebug()", "testcase": false, "constructor": false}, {"identifier": "isUseDebugLibs", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isUseDebugLibs()", "full_signature": "public boolean isUseDebugLibs()", "class_method_signature": "Config.isUseDebugLibs()", "testcase": false, "constructor": false}, {"identifier": "isDumpIntermediates", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDumpIntermediates()", "full_signature": "public boolean isDumpIntermediates()", "class_method_signature": "Config.isDumpIntermediates()", "testcase": false, "constructor": false}, {"identifier": "isSkipRuntimeLib", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSkipRuntimeLib()", "full_signature": "public boolean isSkipRuntimeLib()", "class_method_signature": "Config.isSkipRuntimeLib()", "testcase": false, "constructor": false}, {"identifier": "isSkipLinking", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSkipLinking()", "full_signature": "public boolean isSkipLinking()", "class_method_signature": "Config.isSkipLinking()", "testcase": false, "constructor": false}, {"identifier": "isSkipInstall", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSkipInstall()", "full_signature": "public boolean isSkipInstall()", "class_method_signature": "Config.isSkipInstall()", "testcase": false, "constructor": false}, {"identifier": "getThreads", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getThreads()", "full_signature": "public int getThreads()", "class_method_signature": "Config.getThreads()", "testcase": false, "constructor": false}, {"identifier": "getMainJar", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getMainJar()", "full_signature": "public File getMainJar()", "class_method_signature": "Config.getMainJar()", "testcase": false, "constructor": false}, {"identifier": "getMainClass", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMainClass()", "full_signature": "public String getMainClass()", "class_method_signature": "Config.getMainClass()", "testcase": false, "constructor": false}, {"identifier": "getCacerts", "parameters": "()", "modifiers": "public", "return": "Cacerts", "signature": "Cacerts getCacerts()", "full_signature": "public Cacerts getCacerts()", "class_method_signature": "Config.getCacerts()", "testcase": false, "constructor": false}, {"identifier": "getResourcesPaths", "parameters": "()", "modifiers": "public", "return": "List<Path>", "signature": "List<Path> getResourcesPaths()", "full_signature": "public List<Path> getResourcesPaths()", "class_method_signature": "Config.getResourcesPaths()", "testcase": false, "constructor": false}, {"identifier": "addResourcesPath", "parameters": "(Path path)", "modifiers": "public", "return": "void", "signature": "void addResourcesPath(Path path)", "full_signature": "public void addResourcesPath(Path path)", "class_method_signature": "Config.addResourcesPath(Path path)", "testcase": false, "constructor": false}, {"identifier": "getDependencyGraph", "parameters": "()", "modifiers": "public", "return": "DependencyGraph", "signature": "DependencyGraph getDependencyGraph()", "full_signature": "public DependencyGraph getDependencyGraph()", "class_method_signature": "Config.getDependencyGraph()", "testcase": false, "constructor": false}, {"identifier": "getTmpDir", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getTmpDir()", "full_signature": "public File getTmpDir()", "class_method_signature": "Config.getTmpDir()", "testcase": false, "constructor": false}, {"identifier": "getForceLinkClasses", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getForceLinkClasses()", "full_signature": "public List<String> getForceLinkClasses()", "class_method_signature": "Config.getForceLinkClasses()", "testcase": false, "constructor": false}, {"identifier": "getExportedSymbols", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getExportedSymbols()", "full_signature": "public List<String> getExportedSymbols()", "class_method_signature": "Config.getExportedSymbols()", "testcase": false, "constructor": false}, {"identifier": "getUnhideSymbols", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getUnhideSymbols()", "full_signature": "public List<String> getUnhideSymbols()", "class_method_signature": "Config.getUnhideSymbols()", "testcase": false, "constructor": false}, {"identifier": "getLibs", "parameters": "()", "modifiers": "public", "return": "List<Lib>", "signature": "List<Lib> getLibs()", "full_signature": "public List<Lib> getLibs()", "class_method_signature": "Config.getLibs()", "testcase": false, "constructor": false}, {"identifier": "getFrameworks", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getFrameworks()", "full_signature": "public List<String> getFrameworks()", "class_method_signature": "Config.getFrameworks()", "testcase": false, "constructor": false}, {"identifier": "getWeakFrameworks", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getWeakFrameworks()", "full_signature": "public List<String> getWeakFrameworks()", "class_method_signature": "Config.getWeakFrameworks()", "testcase": false, "constructor": false}, {"identifier": "getFrameworkPaths", "parameters": "()", "modifiers": "public", "return": "List<File>", "signature": "List<File> getFrameworkPaths()", "full_signature": "public List<File> getFrameworkPaths()", "class_method_signature": "Config.getFrameworkPaths()", "testcase": false, "constructor": false}, {"identifier": "getResources", "parameters": "()", "modifiers": "public", "return": "List<Resource>", "signature": "List<Resource> getResources()", "full_signature": "public List<Resource> getResources()", "class_method_signature": "Config.getResources()", "testcase": false, "constructor": false}, {"identifier": "getOsArchDepLibDir", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getOsArchDepLibDir()", "full_signature": "public File getOsArchDepLibDir()", "class_method_signature": "Config.getOsArchDepLibDir()", "testcase": false, "constructor": false}, {"identifier": "getClazzes", "parameters": "()", "modifiers": "public", "return": "Clazzes", "signature": "Clazzes getClazzes()", "full_signature": "public Clazzes getClazzes()", "class_method_signature": "Config.getClazzes()", "testcase": false, "constructor": false}, {"identifier": "getVTableCache", "parameters": "()", "modifiers": "public", "return": "VTable.Cache", "signature": "VTable.Cache getVTableCache()", "full_signature": "public VTable.Cache getVTableCache()", "class_method_signature": "Config.getVTableCache()", "testcase": false, "constructor": false}, {"identifier": "getITableCache", "parameters": "()", "modifiers": "public", "return": "ITable.Cache", "signature": "ITable.Cache getITableCache()", "full_signature": "public ITable.Cache getITableCache()", "class_method_signature": "Config.getITableCache()", "testcase": false, "constructor": false}, {"identifier": "getMarshalerLookup", "parameters": "()", "modifiers": "public", "return": "MarshalerLookup", "signature": "MarshalerLookup getMarshalerLookup()", "full_signature": "public MarshalerLookup getMarshalerLookup()", "class_method_signature": "Config.getMarshalerLookup()", "testcase": false, "constructor": false}, {"identifier": "getCompilerPlugins", "parameters": "()", "modifiers": "public", "return": "List<CompilerPlugin>", "signature": "List<CompilerPlugin> getCompilerPlugins()", "full_signature": "public List<CompilerPlugin> getCompilerPlugins()", "class_method_signature": "Config.getCompilerPlugins()", "testcase": false, "constructor": false}, {"identifier": "getLaunchPlugins", "parameters": "()", "modifiers": "public", "return": "List<LaunchPlugin>", "signature": "List<LaunchPlugin> getLaunchPlugins()", "full_signature": "public List<LaunchPlugin> getLaunchPlugins()", "class_method_signature": "Config.getLaunchPlugins()", "testcase": false, "constructor": false}, {"identifier": "getTargetPlugins", "parameters": "()", "modifiers": "public", "return": "List<TargetPlugin>", "signature": "List<TargetPlugin> getTargetPlugins()", "full_signature": "public List<TargetPlugin> getTargetPlugins()", "class_method_signature": "Config.getTargetPlugins()", "testcase": false, "constructor": false}, {"identifier": "getPlugins", "parameters": "()", "modifiers": "public", "return": "List<Plugin>", "signature": "List<Plugin> getPlugins()", "full_signature": "public List<Plugin> getPlugins()", "class_method_signature": "Config.getPlugins()", "testcase": false, "constructor": false}, {"identifier": "getPluginArguments", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getPluginArguments()", "full_signature": "public List<String> getPluginArguments()", "class_method_signature": "Config.getPluginArguments()", "testcase": false, "constructor": false}, {"identifier": "getBootclasspath", "parameters": "()", "modifiers": "public", "return": "List<File>", "signature": "List<File> getBootclasspath()", "full_signature": "public List<File> getBootclasspath()", "class_method_signature": "Config.getBootclasspath()", "testcase": false, "constructor": false}, {"identifier": "getClasspath", "parameters": "()", "modifiers": "public", "return": "List<File>", "signature": "List<File> getClasspath()", "full_signature": "public List<File> getClasspath()", "class_method_signature": "Config.getClasspath()", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "public", "return": "Properties", "signature": "Properties getProperties()", "full_signature": "public Properties getProperties()", "class_method_signature": "Config.getProperties()", "testcase": false, "constructor": false}, {"identifier": "getLogger", "parameters": "()", "modifiers": "public", "return": "Logger", "signature": "Logger getLogger()", "full_signature": "public Logger getLogger()", "class_method_signature": "Config.getLogger()", "testcase": false, "constructor": false}, {"identifier": "getTarget", "parameters": "()", "modifiers": "public", "return": "Target", "signature": "Target getTarget()", "full_signature": "public Target getTarget()", "class_method_signature": "Config.getTarget()", "testcase": false, "constructor": false}, {"identifier": "getTargetType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTargetType()", "full_signature": "public String getTargetType()", "class_method_signature": "Config.getTargetType()", "testcase": false, "constructor": false}, {"identifier": "getTreeShakerMode", "parameters": "()", "modifiers": "public", "return": "TreeShakerMode", "signature": "TreeShakerMode getTreeShakerMode()", "full_signature": "public TreeShakerMode getTreeShakerMode()", "class_method_signature": "Config.getTreeShakerMode()", "testcase": false, "constructor": false}, {"identifier": "getIosSdkVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIosSdkVersion()", "full_signature": "public String getIosSdkVersion()", "class_method_signature": "Config.getIosSdkVersion()", "testcase": false, "constructor": false}, {"identifier": "getIosDeviceType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIosDeviceType()", "full_signature": "public String getIosDeviceType()", "class_method_signature": "Config.getIosDeviceType()", "testcase": false, "constructor": false}, {"identifier": "getIosInfoPList", "parameters": "()", "modifiers": "public", "return": "InfoPList", "signature": "InfoPList getIosInfoPList()", "full_signature": "public InfoPList getIosInfoPList()", "class_method_signature": "Config.getIosInfoPList()", "testcase": false, "constructor": false}, {"identifier": "getInfoPList", "parameters": "()", "modifiers": "public", "return": "InfoPList", "signature": "InfoPList getInfoPList()", "full_signature": "public InfoPList getInfoPList()", "class_method_signature": "Config.getInfoPList()", "testcase": false, "constructor": false}, {"identifier": "getIosEntitlementsPList", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getIosEntitlementsPList()", "full_signature": "public File getIosEntitlementsPList()", "class_method_signature": "Config.getIosEntitlementsPList()", "testcase": false, "constructor": false}, {"identifier": "getIosSignIdentity", "parameters": "()", "modifiers": "public", "return": "SigningIdentity", "signature": "SigningIdentity getIosSignIdentity()", "full_signature": "public SigningIdentity getIosSignIdentity()", "class_method_signature": "Config.getIosSignIdentity()", "testcase": false, "constructor": false}, {"identifier": "getIosProvisioningProfile", "parameters": "()", "modifiers": "public", "return": "ProvisioningProfile", "signature": "ProvisioningProfile getIosProvisioningProfile()", "full_signature": "public ProvisioningProfile getIosProvisioningProfile()", "class_method_signature": "Config.getIosProvisioningProfile()", "testcase": false, "constructor": false}, {"identifier": "isIosSkipSigning", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isIosSkipSigning()", "full_signature": "public boolean isIosSkipSigning()", "class_method_signature": "Config.isIosSkipSigning()", "testcase": false, "constructor": false}, {"identifier": "getTools", "parameters": "()", "modifiers": "public", "return": "Tools", "signature": "Tools getTools()", "full_signature": "public Tools getTools()", "class_method_signature": "Config.getTools()", "testcase": false, "constructor": false}, {"identifier": "makeFileRelativeTo", "parameters": "(File dir, File f)", "modifiers": "private static", "return": "File", "signature": "File makeFileRelativeTo(File dir, File f)", "full_signature": "private static File makeFileRelativeTo(File dir, File f)", "class_method_signature": "Config.makeFileRelativeTo(File dir, File f)", "testcase": false, "constructor": false}, {"identifier": "getArchiveName", "parameters": "(Path path)", "modifiers": "public", "return": "String", "signature": "String getArchiveName(Path path)", "full_signature": "public String getArchiveName(Path path)", "class_method_signature": "Config.getArchiveName(Path path)", "testcase": false, "constructor": false}, {"identifier": "getFileName", "parameters": "(Clazz clazz, String ext)", "modifiers": "static", "return": "String", "signature": "String getFileName(Clazz clazz, String ext)", "full_signature": "static String getFileName(Clazz clazz, String ext)", "class_method_signature": "Config.getFileName(Clazz clazz, String ext)", "testcase": false, "constructor": false}, {"identifier": "getFileName", "parameters": "(String internalName, String ext, int maxFileNameLength)", "modifiers": "static", "return": "String", "signature": "String getFileName(String internalName, String ext, int maxFileNameLength)", "full_signature": "static String getFileName(String internalName, String ext, int maxFileNameLength)", "class_method_signature": "Config.getFileName(String internalName, String ext, int maxFileNameLength)", "testcase": false, "constructor": false}, {"identifier": "getLlFile", "parameters": "(Clazz clazz)", "modifiers": "public", "return": "File", "signature": "File getLlFile(Clazz clazz)", "full_signature": "public File getLlFile(Clazz clazz)", "class_method_signature": "Config.getLlFile(Clazz clazz)", "testcase": false, "constructor": false}, {"identifier": "getCFile", "parameters": "(Clazz clazz)", "modifiers": "public", "return": "File", "signature": "File getCFile(Clazz clazz)", "full_signature": "public File getCFile(Clazz clazz)", "class_method_signature": "Config.getCFile(Clazz clazz)", "testcase": false, "constructor": false}, {"identifier": "getBcFile", "parameters": "(Clazz clazz)", "modifiers": "public", "return": "File", "signature": "File getBcFile(Clazz clazz)", "full_signature": "public File getBcFile(Clazz clazz)", "class_method_signature": "Config.getBcFile(Clazz clazz)", "testcase": false, "constructor": false}, {"identifier": "getSFile", "parameters": "(Clazz clazz)", "modifiers": "public", "return": "File", "signature": "File getSFile(Clazz clazz)", "full_signature": "public File getSFile(Clazz clazz)", "class_method_signature": "Config.getSFile(Clazz clazz)", "testcase": false, "constructor": false}, {"identifier": "getOFile", "parameters": "(Clazz clazz)", "modifiers": "public", "return": "File", "signature": "File getOFile(Clazz clazz)", "full_signature": "public File getOFile(Clazz clazz)", "class_method_signature": "Config.getOFile(Clazz clazz)", "testcase": false, "constructor": false}, {"identifier": "getLinesOFile", "parameters": "(Clazz clazz)", "modifiers": "public", "return": "File", "signature": "File getLinesOFile(Clazz clazz)", "full_signature": "public File getLinesOFile(Clazz clazz)", "class_method_signature": "Config.getLinesOFile(Clazz clazz)", "testcase": false, "constructor": false}, {"identifier": "getLinesLlFile", "parameters": "(Clazz clazz)", "modifiers": "public", "return": "File", "signature": "File getLinesLlFile(Clazz clazz)", "full_signature": "public File getLinesLlFile(Clazz clazz)", "class_method_signature": "Config.getLinesLlFile(Clazz clazz)", "testcase": false, "constructor": false}, {"identifier": "getInfoFile", "parameters": "(Clazz clazz)", "modifiers": "public", "return": "File", "signature": "File getInfoFile(Clazz clazz)", "full_signature": "public File getInfoFile(Clazz clazz)", "class_method_signature": "Config.getInfoFile(Clazz clazz)", "testcase": false, "constructor": false}, {"identifier": "getCacheDir", "parameters": "(Path path)", "modifiers": "public", "return": "File", "signature": "File getCacheDir(Path path)", "full_signature": "public File getCacheDir(Path path)", "class_method_signature": "Config.getCacheDir(Path path)", "testcase": false, "constructor": false}, {"identifier": "getGeneratedClassDir", "parameters": "(Path path)", "modifiers": "public", "return": "File", "signature": "File getGeneratedClassDir(Path path)", "full_signature": "public File getGeneratedClassDir(Path path)", "class_method_signature": "Config.getGeneratedClassDir(Path path)", "testcase": false, "constructor": false}, {"identifier": "getManifestAttributes", "parameters": "(File jarFile)", "modifiers": "private static", "return": "Map<Object, Object>", "signature": "Map<Object, Object> getManifestAttributes(File jarFile)", "full_signature": "private static Map<Object, Object> getManifestAttributes(File jarFile)", "class_method_signature": "Config.getManifestAttributes(File jarFile)", "testcase": false, "constructor": false}, {"identifier": "getImplementationVersion", "parameters": "(File jarFile)", "modifiers": "private static", "return": "String", "signature": "String getImplementationVersion(File jarFile)", "full_signature": "private static String getImplementationVersion(File jarFile)", "class_method_signature": "Config.getImplementationVersion(File jarFile)", "testcase": false, "constructor": false}, {"identifier": "getMainClass", "parameters": "(File jarFile)", "modifiers": "private static", "return": "String", "signature": "String getMainClass(File jarFile)", "full_signature": "private static String getMainClass(File jarFile)", "class_method_signature": "Config.getMainClass(File jarFile)", "testcase": false, "constructor": false}, {"identifier": "extractIfNeeded", "parameters": "(Path path)", "modifiers": "private", "return": "File", "signature": "File extractIfNeeded(Path path)", "full_signature": "private File extractIfNeeded(Path path)", "class_method_signature": "Config.extractIfNeeded(Path path)", "testcase": false, "constructor": false}, {"identifier": "mergeLists", "parameters": "(ArrayList<T> from, ArrayList<T> to)", "modifiers": "private", "return": "ArrayList<T>", "signature": "ArrayList<T> mergeLists(ArrayList<T> from, ArrayList<T> to)", "full_signature": "private ArrayList<T> mergeLists(ArrayList<T> from, ArrayList<T> to)", "class_method_signature": "Config.mergeLists(ArrayList<T> from, ArrayList<T> to)", "testcase": false, "constructor": false}, {"identifier": "mergeConfig", "parameters": "(Config from, Config to)", "modifiers": "private", "return": "void", "signature": "void mergeConfig(Config from, Config to)", "full_signature": "private void mergeConfig(Config from, Config to)", "class_method_signature": "Config.mergeConfig(Config from, Config to)", "testcase": false, "constructor": false}, {"identifier": "mergeConfigsFromClasspath", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void mergeConfigsFromClasspath()", "full_signature": "private void mergeConfigsFromClasspath()", "class_method_signature": "Config.mergeConfigsFromClasspath()", "testcase": false, "constructor": false}, {"identifier": "toList", "parameters": "(Iterator<T> it)", "modifiers": "private static", "return": "List<T>", "signature": "List<T> toList(Iterator<T> it)", "full_signature": "private static List<T> toList(Iterator<T> it)", "class_method_signature": "Config.toList(Iterator<T> it)", "testcase": false, "constructor": false}, {"identifier": "loadPluginsFromClassPath", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void loadPluginsFromClassPath()", "full_signature": "private void loadPluginsFromClassPath()", "class_method_signature": "Config.loadPluginsFromClassPath()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "(Config config)", "modifiers": "private static", "return": "Config", "signature": "Config clone(Config config)", "full_signature": "private static Config clone(Config config)", "class_method_signature": "Config.clone(Config config)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "private", "return": "Config", "signature": "Config build()", "full_signature": "private Config build()", "class_method_signature": "Config.build()", "testcase": false, "constructor": false}], "file": "compiler/src/main/java/org/robovm/compiler/config/Config.java"}, "focal_method": {"identifier": "getFileName", "parameters": "(Clazz clazz, String ext)", "modifiers": "static", "return": "String", "body": "static String getFileName(Clazz clazz, String ext) {\n        return getFileName(clazz.getInternalName(), ext, MAX_FILE_NAME_LENGTH);\n    }", "signature": "String getFileName(Clazz clazz, String ext)", "full_signature": "static String getFileName(Clazz clazz, String ext)", "class_method_signature": "Config.getFileName(Clazz clazz, String ext)", "testcase": false, "constructor": false, "invocations": ["getFileName", "getInternalName"]}, "repository": {"repo_id": 7480345, "url": "https://github.com/robovm/robovm", "language": "Java", "is_fork": false, "fork_count": 414, "stargazer_count": 1613, "size": 377573, "license": "licensed"}}