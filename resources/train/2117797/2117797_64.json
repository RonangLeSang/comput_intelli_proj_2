{"test_class": {"identifier": "MessageDraftTest", "superclass": "extends MockTestBase", "interfaces": "", "fields": [], "file": "net.violet.platform/src/test/java/net/violet/platform/message/MessageDraftTest.java"}, "test_case": {"identifier": "addWaitMsTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void addWaitMsTest() {\n\t\tfinal int time = 10000;\n\n\t\tfinal VObject theObject = getPrivateObject();\n\t\tfinal MessageDraft theMessage = new MessageDraft(theObject);\n\n\t\ttheMessage.addWaitMs(time);\n\n\t\tfinal List<Sequence> list = theMessage.getSequenceList();\n\t\tAssert.assertEquals(1, list.size());\n\t\tfinal int type = list.get(0).getType();\n\t\tfinal String val = list.get(0).getData();\n\n\t\tAssert.assertEquals(Sequence.SEQ_WAIT, type);\n\t\tAssert.assertEquals(net.violet.common.StringShop.EMPTY_STRING + time, val);\n\t}", "signature": "void addWaitMsTest()", "full_signature": "@Test public void addWaitMsTest()", "class_method_signature": "MessageDraftTest.addWaitMsTest()", "testcase": true, "constructor": false, "invocations": ["getPrivateObject", "addWaitMs", "getSequenceList", "assertEquals", "size", "getType", "get", "getData", "get", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "MessageDraft", "superclass": "extends AddressedMessage", "interfaces": "", "fields": [{"original_string": "private static final Pattern TTS_COMMAND_REGEX = Pattern.compile(\"TTS ([^\\\\s]+)\\\\s+(.*)\");", "modifier": "private static final", "type": "Pattern", "declarator": "TTS_COMMAND_REGEX = Pattern.compile(\"TTS ([^\\\\s]+)\\\\s+(.*)\")", "var_name": "TTS_COMMAND_REGEX"}, {"original_string": "private final List<SequencePart> mIntro;", "modifier": "private final", "type": "List<SequencePart>", "declarator": "mIntro", "var_name": "mIntro"}, {"original_string": "private final List<SequencePart> mOutro;", "modifier": "private final", "type": "List<SequencePart>", "declarator": "mOutro", "var_name": "mOutro"}, {"original_string": "private final List<SequencePart> mPartsList;", "modifier": "private final", "type": "List<SequencePart>", "declarator": "mPartsList", "var_name": "mPartsList"}], "methods": [{"identifier": "createFromPojo", "parameters": "(Map<String, Object> inPojo, VObject inRfid, String inAPIKey)", "modifiers": "public static", "return": "List<MessageDraft>", "signature": "List<MessageDraft> createFromPojo(Map<String, Object> inPojo, VObject inRfid, String inAPIKey)", "full_signature": "public static List<MessageDraft> createFromPojo(Map<String, Object> inPojo, VObject inRfid, String inAPIKey)", "class_method_signature": "MessageDraft.createFromPojo(Map<String, Object> inPojo, VObject inRfid, String inAPIKey)", "testcase": false, "constructor": false}, {"identifier": "MessageDraft", "parameters": "(VObject inDest)", "modifiers": "public", "return": "", "signature": " MessageDraft(VObject inDest)", "full_signature": "public  MessageDraft(VObject inDest)", "class_method_signature": "MessageDraft.MessageDraft(VObject inDest)", "testcase": false, "constructor": true}, {"identifier": "addAudio", "parameters": "(String url, boolean streaming, boolean movingEars)", "modifiers": "public", "return": "void", "signature": "void addAudio(String url, boolean streaming, boolean movingEars)", "full_signature": "public void addAudio(String url, boolean streaming, boolean movingEars)", "class_method_signature": "MessageDraft.addAudio(String url, boolean streaming, boolean movingEars)", "testcase": false, "constructor": false}, {"identifier": "addWebRadio", "parameters": "(String url)", "modifiers": "public", "return": "void", "signature": "void addWebRadio(String url)", "full_signature": "public void addWebRadio(String url)", "class_method_signature": "MessageDraft.addWebRadio(String url)", "testcase": false, "constructor": false}, {"identifier": "addTTS", "parameters": "(Map<Lang, String> inTTSMap)", "modifiers": "public", "return": "void", "signature": "void addTTS(Map<Lang, String> inTTSMap)", "full_signature": "public void addTTS(Map<Lang, String> inTTSMap)", "class_method_signature": "MessageDraft.addTTS(Map<Lang, String> inTTSMap)", "testcase": false, "constructor": false}, {"identifier": "addPage2Browse", "parameters": "(String inUrl)", "modifiers": "public", "return": "void", "signature": "void addPage2Browse(String inUrl)", "full_signature": "public void addPage2Browse(String inUrl)", "class_method_signature": "MessageDraft.addPage2Browse(String inUrl)", "testcase": false, "constructor": false}, {"identifier": "addAudioStreamSecure", "parameters": "(String inName, long inPosition)", "modifiers": "public", "return": "void", "signature": "void addAudioStreamSecure(String inName, long inPosition)", "full_signature": "public void addAudioStreamSecure(String inName, long inPosition)", "class_method_signature": "MessageDraft.addAudioStreamSecure(String inName, long inPosition)", "testcase": false, "constructor": false}, {"identifier": "addChoreography", "parameters": "(String url, boolean streaming)", "modifiers": "public", "return": "void", "signature": "void addChoreography(String url, boolean streaming)", "full_signature": "public void addChoreography(String url, boolean streaming)", "class_method_signature": "MessageDraft.addChoreography(String url, boolean streaming)", "testcase": false, "constructor": false}, {"identifier": "addPalette", "parameters": "(Palette inPalette)", "modifiers": "public", "return": "void", "signature": "void addPalette(Palette inPalette)", "full_signature": "public void addPalette(Palette inPalette)", "class_method_signature": "MessageDraft.addPalette(Palette inPalette)", "testcase": false, "constructor": false}, {"identifier": "addStartInteractive", "parameters": "(String inUrl)", "modifiers": "public", "return": "void", "signature": "void addStartInteractive(String inUrl)", "full_signature": "public void addStartInteractive(String inUrl)", "class_method_signature": "MessageDraft.addStartInteractive(String inUrl)", "testcase": false, "constructor": false}, {"identifier": "addStartInteractive", "parameters": "(VObject rfid)", "modifiers": "public", "return": "void", "signature": "void addStartInteractive(VObject rfid)", "full_signature": "public void addStartInteractive(VObject rfid)", "class_method_signature": "MessageDraft.addStartInteractive(VObject rfid)", "testcase": false, "constructor": false}, {"identifier": "addEndInteractive", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void addEndInteractive()", "full_signature": "public void addEndInteractive()", "class_method_signature": "MessageDraft.addEndInteractive()", "testcase": false, "constructor": false}, {"identifier": "addStreamId", "parameters": "(String inStreamId)", "modifiers": "public", "return": "void", "signature": "void addStreamId(String inStreamId)", "full_signature": "public void addStreamId(String inStreamId)", "class_method_signature": "MessageDraft.addStreamId(String inStreamId)", "testcase": false, "constructor": false}, {"identifier": "addStreamStop", "parameters": "(String inStreamId)", "modifiers": "public", "return": "void", "signature": "void addStreamStop(String inStreamId)", "full_signature": "public void addStreamStop(String inStreamId)", "class_method_signature": "MessageDraft.addStreamStop(String inStreamId)", "testcase": false, "constructor": false}, {"identifier": "addSetting", "parameters": "(String inSetting)", "modifiers": "public", "return": "void", "signature": "void addSetting(String inSetting)", "full_signature": "public void addSetting(String inSetting)", "class_method_signature": "MessageDraft.addSetting(String inSetting)", "testcase": false, "constructor": false}, {"identifier": "addWaitMs", "parameters": "(int nbMs)", "modifiers": "public", "return": "void", "signature": "void addWaitMs(int nbMs)", "full_signature": "public void addWaitMs(int nbMs)", "class_method_signature": "MessageDraft.addWaitMs(int nbMs)", "testcase": false, "constructor": false}, {"identifier": "addSignature", "parameters": "(MessageSignature inSignature)", "modifiers": "public", "return": "void", "signature": "void addSignature(MessageSignature inSignature)", "full_signature": "public void addSignature(MessageSignature inSignature)", "class_method_signature": "MessageDraft.addSignature(MessageSignature inSignature)", "testcase": false, "constructor": false}, {"identifier": "addPojo", "parameters": "(String inPojo, MimeType.MIME_TYPES format)", "modifiers": "public", "return": "void", "signature": "void addPojo(String inPojo, MimeType.MIME_TYPES format)", "full_signature": "public void addPojo(String inPojo, MimeType.MIME_TYPES format)", "class_method_signature": "MessageDraft.addPojo(String inPojo, MimeType.MIME_TYPES format)", "testcase": false, "constructor": false}, {"identifier": "getSequenceList", "parameters": "()", "modifiers": "public final", "return": "List<Sequence>", "signature": "List<Sequence> getSequenceList()", "full_signature": "public final List<Sequence> getSequenceList()", "class_method_signature": "MessageDraft.getSequenceList()", "testcase": false, "constructor": false}, {"identifier": "getSequencePart", "parameters": "()", "modifiers": "public final", "return": "List<SequencePart>", "signature": "List<SequencePart> getSequencePart()", "full_signature": "public final List<SequencePart> getSequencePart()", "class_method_signature": "MessageDraft.getSequencePart()", "testcase": false, "constructor": false}, {"identifier": "fillMessageDraft", "parameters": "(String inTitle, MessageSignature inSignature, MessageServices.Body[] inBody)", "modifiers": "public", "return": "void", "signature": "void fillMessageDraft(String inTitle, MessageSignature inSignature, MessageServices.Body[] inBody)", "full_signature": "public void fillMessageDraft(String inTitle, MessageSignature inSignature, MessageServices.Body[] inBody)", "class_method_signature": "MessageDraft.fillMessageDraft(String inTitle, MessageSignature inSignature, MessageServices.Body[] inBody)", "testcase": false, "constructor": false}, {"identifier": "fillMessageDraft", "parameters": "(MessageServices.Body... inBody)", "modifiers": "public", "return": "void", "signature": "void fillMessageDraft(MessageServices.Body... inBody)", "full_signature": "public void fillMessageDraft(MessageServices.Body... inBody)", "class_method_signature": "MessageDraft.fillMessageDraft(MessageServices.Body... inBody)", "testcase": false, "constructor": false}, {"identifier": "addSequences", "parameters": "(String[] inSequences, boolean isSecure)", "modifiers": "public", "return": "void", "signature": "void addSequences(String[] inSequences, boolean isSecure)", "full_signature": "public void addSequences(String[] inSequences, boolean isSecure)", "class_method_signature": "MessageDraft.addSequences(String[] inSequences, boolean isSecure)", "testcase": false, "constructor": false}], "file": "net.violet.platform/src/main/java/net/violet/platform/message/MessageDraft.java"}, "focal_method": {"identifier": "addWaitMs", "parameters": "(int nbMs)", "modifiers": "public", "return": "void", "body": "public void addWaitMs(int nbMs) {\n\n\t\tfinal Map<String, Object> pojo = new HashMap<String, Object>();\n\t\tpojo.put(\"modality\", \"net.violet.wait\");\n\t\tpojo.put(\"time_ms\", nbMs);\n\n\t\tthis.mPartsList.add(new Expression(pojo));\n\t}", "signature": "void addWaitMs(int nbMs)", "full_signature": "public void addWaitMs(int nbMs)", "class_method_signature": "MessageDraft.addWaitMs(int nbMs)", "testcase": false, "constructor": false, "invocations": ["put", "put", "add"]}, "repository": {"repo_id": 2117797, "url": "https://github.com/nguillaumin/nabaztag-server", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 17, "size": 20908, "license": "licensed"}}