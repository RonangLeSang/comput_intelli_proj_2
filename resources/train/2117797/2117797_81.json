{"test_class": {"identifier": "MusicStyleFactoryImplTest", "superclass": "extends DBTest", "interfaces": "", "fields": [], "file": "net.violet.platform/src/test/java/net/violet/platform/datamodel/factories/implementations/MusicStyleFactoryImplTest.java"}, "test_case": {"identifier": "findAllStylesByTypeTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void findAllStylesByTypeTest() {\n\t\tList<MusicStyle> Categories = Factories.MUSIC_STYLE.findAllStylesByType(Music.TYPE_MP3_USER_LIBRARY);\n\t\tAssert.assertEquals(1, Categories.size());\n\t\tAssert.assertEquals(4, Categories.get(0).getMusicstyle_id());\n\t\tAssert.assertEquals(\"mp3 signature\", Categories.get(0).getMusicstyle_name());\n\t\tCategories = Factories.MUSIC_STYLE.findAllStylesByType(Music.TYPE_MP3_LIBRARY);\n\t\tAssert.assertEquals(1, Categories.size());\n\t\tAssert.assertEquals(29, Categories.get(0).getMusicstyle_id());\n\t\tAssert.assertEquals(\"mp3 perso\", Categories.get(0).getMusicstyle_name());\n\t\tCategories = Factories.MUSIC_STYLE.findAllStylesByType(Music.TYPE_MP3_LITTLE_WORDS);\n\t\tAssert.assertEquals(3, Categories.size());\n\t\tfinal List<String> namesCat = new ArrayList<String>();\n\t\tfor (final MusicStyle inMusicStyle : Categories) {\n\t\t\tnamesCat.add(inMusicStyle.getMusicstyle_name());\n\t\t}\n\t\tAssert.assertTrue(namesCat.contains(\"reveil\"));\n\t\tAssert.assertTrue(namesCat.contains(\"tts perso\"));\n\t\tAssert.assertTrue(namesCat.contains(\"clin bonjour\"));\n\n\t}", "signature": "void findAllStylesByTypeTest()", "full_signature": "@Test public void findAllStylesByTypeTest()", "class_method_signature": "MusicStyleFactoryImplTest.findAllStylesByTypeTest()", "testcase": true, "constructor": false, "invocations": ["findAllStylesByType", "assertEquals", "size", "assertEquals", "getMusicstyle_id", "get", "assertEquals", "getMusicstyle_name", "get", "findAllStylesByType", "assertEquals", "size", "assertEquals", "getMusicstyle_id", "get", "assertEquals", "getMusicstyle_name", "get", "findAllStylesByType", "assertEquals", "size", "add", "getMusicstyle_name", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains"]}, "focal_class": {"identifier": "MusicStyleFactoryImpl", "superclass": "extends RecordFactoryImpl<MusicStyle, MusicStyleImpl>", "interfaces": "implements MusicStyleFactory", "fields": [], "methods": [{"identifier": "MusicStyleFactoryImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " MusicStyleFactoryImpl()", "full_signature": "public  MusicStyleFactoryImpl()", "class_method_signature": "MusicStyleFactoryImpl.MusicStyleFactoryImpl()", "testcase": false, "constructor": true}, {"identifier": "findAllStylesByType", "parameters": "(long type)", "modifiers": "public", "return": "List<MusicStyle>", "signature": "List<MusicStyle> findAllStylesByType(long type)", "full_signature": "public List<MusicStyle> findAllStylesByType(long type)", "class_method_signature": "MusicStyleFactoryImpl.findAllStylesByType(long type)", "testcase": false, "constructor": false}, {"identifier": "findAllClinByLang", "parameters": "(long inLangId)", "modifiers": "public", "return": "List<MusicStyle>", "signature": "List<MusicStyle> findAllClinByLang(long inLangId)", "full_signature": "public List<MusicStyle> findAllClinByLang(long inLangId)", "class_method_signature": "MusicStyleFactoryImpl.findAllClinByLang(long inLangId)", "testcase": false, "constructor": false}, {"identifier": "findStyleByName", "parameters": "(String categoryName)", "modifiers": "public", "return": "MusicStyle", "signature": "MusicStyle findStyleByName(String categoryName)", "full_signature": "public MusicStyle findStyleByName(String categoryName)", "class_method_signature": "MusicStyleFactoryImpl.findStyleByName(String categoryName)", "testcase": false, "constructor": false}], "file": "net.violet.platform/src/main/java/net/violet/platform/datamodel/factories/implementations/MusicStyleFactoryImpl.java"}, "focal_method": {"identifier": "findAllStylesByType", "parameters": "(long type)", "modifiers": "public", "return": "List<MusicStyle>", "body": "public List<MusicStyle> findAllStylesByType(long type) {\n\n\t\tfinal String[] inJoinTables = new String[] { \"music\" };\n\t\tfinal String condition = \"musicstyle_id = music_styleid AND music_lang= 1 AND music_type = ? AND style_private=0 group by musicstyle_id\";\n\n\t\tfinal List<MusicStyle> theResult = new ArrayList<MusicStyle>();\n\n\t\ttheResult.addAll(findAll(inJoinTables, condition, Collections.singletonList((Object) type), \"musicstyle_id\"));\n\n\t\treturn theResult;\n\t}", "signature": "List<MusicStyle> findAllStylesByType(long type)", "full_signature": "public List<MusicStyle> findAllStylesByType(long type)", "class_method_signature": "MusicStyleFactoryImpl.findAllStylesByType(long type)", "testcase": false, "constructor": false, "invocations": ["addAll", "findAll", "singletonList"]}, "repository": {"repo_id": 2117797, "url": "https://github.com/nguillaumin/nabaztag-server", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 17, "size": 20908, "license": "licensed"}}