{"test_class": {"identifier": "RackResponsePropagatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RackResponsePropagator subject;", "modifier": "private", "type": "RackResponsePropagator", "declarator": "subject", "var_name": "subject"}, {"original_string": "private RackResponseBuilder rackResponse;", "modifier": "private", "type": "RackResponseBuilder", "declarator": "rackResponse", "var_name": "rackResponse"}, {"original_string": "@Mock private HttpServletResponse response;", "modifier": "@Mock private", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}, {"original_string": "@Mock private ServletOutputStream outputStream;", "modifier": "@Mock private", "type": "ServletOutputStream", "declarator": "outputStream", "var_name": "outputStream"}], "file": "core/src/test/java/com/squareup/rack/servlet/RackResponsePropagatorTest.java"}, "test_case": {"identifier": "propagateHeadersSkipsHeadsRackHeaders", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void propagateHeadersSkipsHeadsRackHeaders() {\n    rackResponse.header(\"rack.internal\", \"42\");\n    subject.propagate(rackResponse.build(), response);\n    verify(response, never()).addHeader(eq(\"rack.internal\"), anyString());\n  }", "signature": "void propagateHeadersSkipsHeadsRackHeaders()", "full_signature": "@Test public void propagateHeadersSkipsHeadsRackHeaders()", "class_method_signature": "RackResponsePropagatorTest.propagateHeadersSkipsHeadsRackHeaders()", "testcase": true, "constructor": false, "invocations": ["header", "propagate", "build", "addHeader", "verify", "never", "eq", "anyString"]}, "focal_class": {"identifier": "RackResponsePropagator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String RACK_INTERNAL_HEADER_PREFIX = \"rack.\";", "modifier": "private static final", "type": "String", "declarator": "RACK_INTERNAL_HEADER_PREFIX = \"rack.\"", "var_name": "RACK_INTERNAL_HEADER_PREFIX"}], "methods": [{"identifier": "propagate", "parameters": "(RackResponse rackResponse, HttpServletResponse response)", "modifiers": "public", "return": "void", "signature": "void propagate(RackResponse rackResponse, HttpServletResponse response)", "full_signature": "public void propagate(RackResponse rackResponse, HttpServletResponse response)", "class_method_signature": "RackResponsePropagator.propagate(RackResponse rackResponse, HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "propagateStatus", "parameters": "(RackResponse rackResponse, HttpServletResponse response)", "modifiers": "private", "return": "void", "signature": "void propagateStatus(RackResponse rackResponse, HttpServletResponse response)", "full_signature": "private void propagateStatus(RackResponse rackResponse, HttpServletResponse response)", "class_method_signature": "RackResponsePropagator.propagateStatus(RackResponse rackResponse, HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "propagateHeaders", "parameters": "(RackResponse rackResponse, HttpServletResponse response)", "modifiers": "private", "return": "void", "signature": "void propagateHeaders(RackResponse rackResponse, HttpServletResponse response)", "full_signature": "private void propagateHeaders(RackResponse rackResponse, HttpServletResponse response)", "class_method_signature": "RackResponsePropagator.propagateHeaders(RackResponse rackResponse, HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "shouldPropagateHeaderToClient", "parameters": "(Map.Entry<String, String> header)", "modifiers": "private", "return": "boolean", "signature": "boolean shouldPropagateHeaderToClient(Map.Entry<String, String> header)", "full_signature": "private boolean shouldPropagateHeaderToClient(Map.Entry<String, String> header)", "class_method_signature": "RackResponsePropagator.shouldPropagateHeaderToClient(Map.Entry<String, String> header)", "testcase": false, "constructor": false}, {"identifier": "propagateBody", "parameters": "(RackResponse rackResponse, HttpServletResponse response)", "modifiers": "private", "return": "void", "signature": "void propagateBody(RackResponse rackResponse, HttpServletResponse response)", "full_signature": "private void propagateBody(RackResponse rackResponse, HttpServletResponse response)", "class_method_signature": "RackResponsePropagator.propagateBody(RackResponse rackResponse, HttpServletResponse response)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/squareup/rack/servlet/RackResponsePropagator.java"}, "focal_method": {"identifier": "propagate", "parameters": "(RackResponse rackResponse, HttpServletResponse response)", "modifiers": "public", "return": "void", "body": "public void propagate(RackResponse rackResponse, HttpServletResponse response) {\n    propagateStatus(rackResponse, response);\n    propagateHeaders(rackResponse, response);\n    propagateBody(rackResponse, response);\n  }", "signature": "void propagate(RackResponse rackResponse, HttpServletResponse response)", "full_signature": "public void propagate(RackResponse rackResponse, HttpServletResponse response)", "class_method_signature": "RackResponsePropagator.propagate(RackResponse rackResponse, HttpServletResponse response)", "testcase": false, "constructor": false, "invocations": ["propagateStatus", "propagateHeaders", "propagateBody"]}, "repository": {"repo_id": 11290309, "url": "https://github.com/square/rack-servlet", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 47, "size": 123, "license": "licensed"}}