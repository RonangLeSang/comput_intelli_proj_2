{"test_class": {"identifier": "SqlDaoTest", "superclass": "extends PermissionsExTest", "interfaces": "", "fields": [{"original_string": "private static final AtomicInteger COUNTER = new AtomicInteger();", "modifier": "private static final", "type": "AtomicInteger", "declarator": "COUNTER = new AtomicInteger()", "var_name": "COUNTER"}, {"original_string": "private static final SqlDataStore sqlStore = new SqlDataStore(\"sql-dao\");", "modifier": "private static final", "type": "SqlDataStore", "declarator": "sqlStore = new SqlDataStore(\"sql-dao\")", "var_name": "sqlStore"}, {"original_string": "private final String jdbcUrl;", "modifier": "private final", "type": "String", "declarator": "jdbcUrl", "var_name": "jdbcUrl"}], "file": "core/src/test/java/ca/stellardrift/permissionsex/backend/sql/SqlDaoTest.java"}, "test_case": {"identifier": "testInitializeTables", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInitializeTables() throws SQLException {\n        try (SqlDao dao = sqlStore.getDao()) {\n            dao.initializeTables(); // Because tables are already initialized, this should do nothing\n        }\n    }", "signature": "void testInitializeTables()", "full_signature": "@Test public void testInitializeTables()", "class_method_signature": "SqlDaoTest.testInitializeTables()", "testcase": true, "constructor": false, "invocations": ["getDao", "initializeTables"]}, "focal_class": {"identifier": "SqlDao", "superclass": "", "interfaces": "implements AutoCloseable", "fields": [{"original_string": "private final Connection conn;", "modifier": "private final", "type": "Connection", "declarator": "conn", "var_name": "conn"}, {"original_string": "private final SqlDataStore ds;", "modifier": "private final", "type": "SqlDataStore", "declarator": "ds", "var_name": "ds"}, {"original_string": "int holdOpen, transactionLevel;", "modifier": "", "type": "int", "declarator": "holdOpen", "var_name": "holdOpen"}], "methods": [{"identifier": "SqlDao", "parameters": "(SqlDataStore ds)", "modifiers": "public", "return": "", "signature": " SqlDao(SqlDataStore ds)", "full_signature": "public  SqlDao(SqlDataStore ds)", "class_method_signature": "SqlDao.SqlDao(SqlDataStore ds)", "testcase": false, "constructor": true}, {"identifier": "getSelectGlobalParameterQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getSelectGlobalParameterQuery()", "full_signature": "protected String getSelectGlobalParameterQuery()", "class_method_signature": "SqlDao.getSelectGlobalParameterQuery()", "testcase": false, "constructor": false}, {"identifier": "getInsertGlobalParameterQueryUpdating", "parameters": "()", "modifiers": "protected abstract", "return": "String", "signature": "String getInsertGlobalParameterQueryUpdating()", "full_signature": "protected abstract String getInsertGlobalParameterQueryUpdating()", "class_method_signature": "SqlDao.getInsertGlobalParameterQueryUpdating()", "testcase": false, "constructor": false}, {"identifier": "getDeleteGlobalParameterQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getDeleteGlobalParameterQuery()", "full_signature": "protected String getDeleteGlobalParameterQuery()", "class_method_signature": "SqlDao.getDeleteGlobalParameterQuery()", "testcase": false, "constructor": false}, {"identifier": "getGetSubjectRefIdQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getGetSubjectRefIdQuery()", "full_signature": "protected String getGetSubjectRefIdQuery()", "class_method_signature": "SqlDao.getGetSubjectRefIdQuery()", "testcase": false, "constructor": false}, {"identifier": "getGetSubjectRefTypeNameQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getGetSubjectRefTypeNameQuery()", "full_signature": "protected String getGetSubjectRefTypeNameQuery()", "class_method_signature": "SqlDao.getGetSubjectRefTypeNameQuery()", "testcase": false, "constructor": false}, {"identifier": "getDeleteSubjectIdQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getDeleteSubjectIdQuery()", "full_signature": "protected String getDeleteSubjectIdQuery()", "class_method_signature": "SqlDao.getDeleteSubjectIdQuery()", "testcase": false, "constructor": false}, {"identifier": "getDeleteSubjectTypeNameQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getDeleteSubjectTypeNameQuery()", "full_signature": "protected String getDeleteSubjectTypeNameQuery()", "class_method_signature": "SqlDao.getDeleteSubjectTypeNameQuery()", "testcase": false, "constructor": false}, {"identifier": "getInsertSubjectTypeNameQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getInsertSubjectTypeNameQuery()", "full_signature": "protected String getInsertSubjectTypeNameQuery()", "class_method_signature": "SqlDao.getInsertSubjectTypeNameQuery()", "testcase": false, "constructor": false}, {"identifier": "getSelectContextsSegmentQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getSelectContextsSegmentQuery()", "full_signature": "protected String getSelectContextsSegmentQuery()", "class_method_signature": "SqlDao.getSelectContextsSegmentQuery()", "testcase": false, "constructor": false}, {"identifier": "getSelectSegmentsSubjectQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getSelectSegmentsSubjectQuery()", "full_signature": "protected String getSelectSegmentsSubjectQuery()", "class_method_signature": "SqlDao.getSelectSegmentsSubjectQuery()", "testcase": false, "constructor": false}, {"identifier": "getSelectPermissionsSegmentQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getSelectPermissionsSegmentQuery()", "full_signature": "protected String getSelectPermissionsSegmentQuery()", "class_method_signature": "SqlDao.getSelectPermissionsSegmentQuery()", "testcase": false, "constructor": false}, {"identifier": "getSelectOptionsSegmentQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getSelectOptionsSegmentQuery()", "full_signature": "protected String getSelectOptionsSegmentQuery()", "class_method_signature": "SqlDao.getSelectOptionsSegmentQuery()", "testcase": false, "constructor": false}, {"identifier": "getSelectInheritanceSegmentQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getSelectInheritanceSegmentQuery()", "full_signature": "protected String getSelectInheritanceSegmentQuery()", "class_method_signature": "SqlDao.getSelectInheritanceSegmentQuery()", "testcase": false, "constructor": false}, {"identifier": "getInsertSegmentQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getInsertSegmentQuery()", "full_signature": "protected String getInsertSegmentQuery()", "class_method_signature": "SqlDao.getInsertSegmentQuery()", "testcase": false, "constructor": false}, {"identifier": "getDeleteSegmentIdQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getDeleteSegmentIdQuery()", "full_signature": "protected String getDeleteSegmentIdQuery()", "class_method_signature": "SqlDao.getDeleteSegmentIdQuery()", "testcase": false, "constructor": false}, {"identifier": "getSelectSubjectIdentifiersQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getSelectSubjectIdentifiersQuery()", "full_signature": "protected String getSelectSubjectIdentifiersQuery()", "class_method_signature": "SqlDao.getSelectSubjectIdentifiersQuery()", "testcase": false, "constructor": false}, {"identifier": "getSelectSubjectTypesQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getSelectSubjectTypesQuery()", "full_signature": "protected String getSelectSubjectTypesQuery()", "class_method_signature": "SqlDao.getSelectSubjectTypesQuery()", "testcase": false, "constructor": false}, {"identifier": "getDeleteOptionKeyQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getDeleteOptionKeyQuery()", "full_signature": "protected String getDeleteOptionKeyQuery()", "class_method_signature": "SqlDao.getDeleteOptionKeyQuery()", "testcase": false, "constructor": false}, {"identifier": "getDeleteOptionsQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getDeleteOptionsQuery()", "full_signature": "protected String getDeleteOptionsQuery()", "class_method_signature": "SqlDao.getDeleteOptionsQuery()", "testcase": false, "constructor": false}, {"identifier": "getInsertOptionUpdatingQuery", "parameters": "()", "modifiers": "protected abstract", "return": "String", "signature": "String getInsertOptionUpdatingQuery()", "full_signature": "protected abstract String getInsertOptionUpdatingQuery()", "class_method_signature": "SqlDao.getInsertOptionUpdatingQuery()", "testcase": false, "constructor": false}, {"identifier": "getInsertPermissionUpdatingQuery", "parameters": "()", "modifiers": "protected abstract", "return": "String", "signature": "String getInsertPermissionUpdatingQuery()", "full_signature": "protected abstract String getInsertPermissionUpdatingQuery()", "class_method_signature": "SqlDao.getInsertPermissionUpdatingQuery()", "testcase": false, "constructor": false}, {"identifier": "getDeletePermissionKeyQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getDeletePermissionKeyQuery()", "full_signature": "protected String getDeletePermissionKeyQuery()", "class_method_signature": "SqlDao.getDeletePermissionKeyQuery()", "testcase": false, "constructor": false}, {"identifier": "getDeletePermissionsQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getDeletePermissionsQuery()", "full_signature": "protected String getDeletePermissionsQuery()", "class_method_signature": "SqlDao.getDeletePermissionsQuery()", "testcase": false, "constructor": false}, {"identifier": "getUpdatePermissionDefaultQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getUpdatePermissionDefaultQuery()", "full_signature": "protected String getUpdatePermissionDefaultQuery()", "class_method_signature": "SqlDao.getUpdatePermissionDefaultQuery()", "testcase": false, "constructor": false}, {"identifier": "getInsertInheritanceQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getInsertInheritanceQuery()", "full_signature": "protected String getInsertInheritanceQuery()", "class_method_signature": "SqlDao.getInsertInheritanceQuery()", "testcase": false, "constructor": false}, {"identifier": "getDeleteInheritanceParentQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getDeleteInheritanceParentQuery()", "full_signature": "protected String getDeleteInheritanceParentQuery()", "class_method_signature": "SqlDao.getDeleteInheritanceParentQuery()", "testcase": false, "constructor": false}, {"identifier": "getDeleteInheritanceQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getDeleteInheritanceQuery()", "full_signature": "protected String getDeleteInheritanceQuery()", "class_method_signature": "SqlDao.getDeleteInheritanceQuery()", "testcase": false, "constructor": false}, {"identifier": "getInsertContextQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getInsertContextQuery()", "full_signature": "protected String getInsertContextQuery()", "class_method_signature": "SqlDao.getInsertContextQuery()", "testcase": false, "constructor": false}, {"identifier": "getDeleteContextQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getDeleteContextQuery()", "full_signature": "protected String getDeleteContextQuery()", "class_method_signature": "SqlDao.getDeleteContextQuery()", "testcase": false, "constructor": false}, {"identifier": "getSelectContextInheritanceQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getSelectContextInheritanceQuery()", "full_signature": "protected String getSelectContextInheritanceQuery()", "class_method_signature": "SqlDao.getSelectContextInheritanceQuery()", "testcase": false, "constructor": false}, {"identifier": "getInsertContextInheritanceQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getInsertContextInheritanceQuery()", "full_signature": "protected String getInsertContextInheritanceQuery()", "class_method_signature": "SqlDao.getInsertContextInheritanceQuery()", "testcase": false, "constructor": false}, {"identifier": "getDeleteContextInheritanceQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getDeleteContextInheritanceQuery()", "full_signature": "protected String getDeleteContextInheritanceQuery()", "class_method_signature": "SqlDao.getDeleteContextInheritanceQuery()", "testcase": false, "constructor": false}, {"identifier": "getSelectRankLadderQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getSelectRankLadderQuery()", "full_signature": "protected String getSelectRankLadderQuery()", "class_method_signature": "SqlDao.getSelectRankLadderQuery()", "testcase": false, "constructor": false}, {"identifier": "getTestRankLadderExistsQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getTestRankLadderExistsQuery()", "full_signature": "protected String getTestRankLadderExistsQuery()", "class_method_signature": "SqlDao.getTestRankLadderExistsQuery()", "testcase": false, "constructor": false}, {"identifier": "getInsertRankLadderQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getInsertRankLadderQuery()", "full_signature": "protected String getInsertRankLadderQuery()", "class_method_signature": "SqlDao.getInsertRankLadderQuery()", "testcase": false, "constructor": false}, {"identifier": "getDeleteRankLadderQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getDeleteRankLadderQuery()", "full_signature": "protected String getDeleteRankLadderQuery()", "class_method_signature": "SqlDao.getDeleteRankLadderQuery()", "testcase": false, "constructor": false}, {"identifier": "getSelectAllRankLadderNamesQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getSelectAllRankLadderNamesQuery()", "full_signature": "protected String getSelectAllRankLadderNamesQuery()", "class_method_signature": "SqlDao.getSelectAllRankLadderNamesQuery()", "testcase": false, "constructor": false}, {"identifier": "getSelectAllSubjectsQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getSelectAllSubjectsQuery()", "full_signature": "protected String getSelectAllSubjectsQuery()", "class_method_signature": "SqlDao.getSelectAllSubjectsQuery()", "testcase": false, "constructor": false}, {"identifier": "getRenameTableQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getRenameTableQuery()", "full_signature": "protected String getRenameTableQuery()", "class_method_signature": "SqlDao.getRenameTableQuery()", "testcase": false, "constructor": false}, {"identifier": "getSelectAllContextKeysUniqueQuery", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getSelectAllContextKeysUniqueQuery()", "full_signature": "protected String getSelectAllContextKeysUniqueQuery()", "class_method_signature": "SqlDao.getSelectAllContextKeysUniqueQuery()", "testcase": false, "constructor": false}, {"identifier": "prepareStatement", "parameters": "(String query)", "modifiers": "public", "return": "PreparedStatement", "signature": "PreparedStatement prepareStatement(String query)", "full_signature": "public PreparedStatement prepareStatement(String query)", "class_method_signature": "SqlDao.prepareStatement(String query)", "testcase": false, "constructor": false}, {"identifier": "prepareStatement", "parameters": "(String query, int params)", "modifiers": "protected", "return": "PreparedStatement", "signature": "PreparedStatement prepareStatement(String query, int params)", "full_signature": "protected PreparedStatement prepareStatement(String query, int params)", "class_method_signature": "SqlDao.prepareStatement(String query, int params)", "testcase": false, "constructor": false}, {"identifier": "executeInTransaction", "parameters": "(CheckedSupplier<T, SQLException> func)", "modifiers": "protected", "return": "T", "signature": "T executeInTransaction(CheckedSupplier<T, SQLException> func)", "full_signature": "protected T executeInTransaction(CheckedSupplier<T, SQLException> func)", "class_method_signature": "SqlDao.executeInTransaction(CheckedSupplier<T, SQLException> func)", "testcase": false, "constructor": false}, {"identifier": "legacy", "parameters": "()", "modifiers": "public", "return": "LegacyDao", "signature": "LegacyDao legacy()", "full_signature": "public LegacyDao legacy()", "class_method_signature": "SqlDao.legacy()", "testcase": false, "constructor": false}, {"identifier": "getGlobalParameter", "parameters": "(String key)", "modifiers": "public", "return": "Optional<String>", "signature": "Optional<String> getGlobalParameter(String key)", "full_signature": "public Optional<String> getGlobalParameter(String key)", "class_method_signature": "SqlDao.getGlobalParameter(String key)", "testcase": false, "constructor": false}, {"identifier": "setGlobalParameter", "parameters": "(String key, String value)", "modifiers": "public", "return": "void", "signature": "void setGlobalParameter(String key, String value)", "full_signature": "public void setGlobalParameter(String key, String value)", "class_method_signature": "SqlDao.setGlobalParameter(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "getSubjectRef", "parameters": "(int id)", "modifiers": "public", "return": "Optional<SubjectRef>", "signature": "Optional<SubjectRef> getSubjectRef(int id)", "full_signature": "public Optional<SubjectRef> getSubjectRef(int id)", "class_method_signature": "SqlDao.getSubjectRef(int id)", "testcase": false, "constructor": false}, {"identifier": "getSubjectRef", "parameters": "(String type, String name)", "modifiers": "public", "return": "Optional<SubjectRef>", "signature": "Optional<SubjectRef> getSubjectRef(String type, String name)", "full_signature": "public Optional<SubjectRef> getSubjectRef(String type, String name)", "class_method_signature": "SqlDao.getSubjectRef(String type, String name)", "testcase": false, "constructor": false}, {"identifier": "removeSubject", "parameters": "(SubjectRef ref)", "modifiers": "public", "return": "boolean", "signature": "boolean removeSubject(SubjectRef ref)", "full_signature": "public boolean removeSubject(SubjectRef ref)", "class_method_signature": "SqlDao.removeSubject(SubjectRef ref)", "testcase": false, "constructor": false}, {"identifier": "removeSubject", "parameters": "(String type, String name)", "modifiers": "public", "return": "boolean", "signature": "boolean removeSubject(String type, String name)", "full_signature": "public boolean removeSubject(String type, String name)", "class_method_signature": "SqlDao.removeSubject(String type, String name)", "testcase": false, "constructor": false}, {"identifier": "getOrCreateSubjectRef", "parameters": "(String type, String name)", "modifiers": "public", "return": "SubjectRef", "signature": "SubjectRef getOrCreateSubjectRef(String type, String name)", "full_signature": "public SubjectRef getOrCreateSubjectRef(String type, String name)", "class_method_signature": "SqlDao.getOrCreateSubjectRef(String type, String name)", "testcase": false, "constructor": false}, {"identifier": "allocateSubjectRef", "parameters": "(SubjectRef ref)", "modifiers": "public", "return": "void", "signature": "void allocateSubjectRef(SubjectRef ref)", "full_signature": "public void allocateSubjectRef(SubjectRef ref)", "class_method_signature": "SqlDao.allocateSubjectRef(SubjectRef ref)", "testcase": false, "constructor": false}, {"identifier": "getIdAllocating", "parameters": "(SubjectRef ref)", "modifiers": "public", "return": "int", "signature": "int getIdAllocating(SubjectRef ref)", "full_signature": "public int getIdAllocating(SubjectRef ref)", "class_method_signature": "SqlDao.getIdAllocating(SubjectRef ref)", "testcase": false, "constructor": false}, {"identifier": "getSegmentContexts", "parameters": "(int segmentId)", "modifiers": "private", "return": "Set<ContextValue<?>>", "signature": "Set<ContextValue<?>> getSegmentContexts(int segmentId)", "full_signature": "private Set<ContextValue<?>> getSegmentContexts(int segmentId)", "class_method_signature": "SqlDao.getSegmentContexts(int segmentId)", "testcase": false, "constructor": false}, {"identifier": "getSegments", "parameters": "(SubjectRef ref)", "modifiers": "public", "return": "List<Segment>", "signature": "List<Segment> getSegments(SubjectRef ref)", "full_signature": "public List<Segment> getSegments(SubjectRef ref)", "class_method_signature": "SqlDao.getSegments(SubjectRef ref)", "testcase": false, "constructor": false}, {"identifier": "addSegment", "parameters": "(SubjectRef ref)", "modifiers": "public", "return": "Segment", "signature": "Segment addSegment(SubjectRef ref)", "full_signature": "public Segment addSegment(SubjectRef ref)", "class_method_signature": "SqlDao.addSegment(SubjectRef ref)", "testcase": false, "constructor": false}, {"identifier": "updateFullSegment", "parameters": "(SubjectRef ref, Segment segment)", "modifiers": "public", "return": "void", "signature": "void updateFullSegment(SubjectRef ref, Segment segment)", "full_signature": "public void updateFullSegment(SubjectRef ref, Segment segment)", "class_method_signature": "SqlDao.updateFullSegment(SubjectRef ref, Segment segment)", "testcase": false, "constructor": false}, {"identifier": "setContexts", "parameters": "(Segment seg, Set<ContextValue<?>> contexts)", "modifiers": "public", "return": "void", "signature": "void setContexts(Segment seg, Set<ContextValue<?>> contexts)", "full_signature": "public void setContexts(Segment seg, Set<ContextValue<?>> contexts)", "class_method_signature": "SqlDao.setContexts(Segment seg, Set<ContextValue<?>> contexts)", "testcase": false, "constructor": false}, {"identifier": "allocateSegment", "parameters": "(SubjectRef subject, Segment val)", "modifiers": "public", "return": "void", "signature": "void allocateSegment(SubjectRef subject, Segment val)", "full_signature": "public void allocateSegment(SubjectRef subject, Segment val)", "class_method_signature": "SqlDao.allocateSegment(SubjectRef subject, Segment val)", "testcase": false, "constructor": false}, {"identifier": "removeSegment", "parameters": "(Segment segment)", "modifiers": "public", "return": "boolean", "signature": "boolean removeSegment(Segment segment)", "full_signature": "public boolean removeSegment(Segment segment)", "class_method_signature": "SqlDao.removeSegment(Segment segment)", "testcase": false, "constructor": false}, {"identifier": "getAllIdentifiers", "parameters": "(String type)", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getAllIdentifiers(String type)", "full_signature": "public Set<String> getAllIdentifiers(String type)", "class_method_signature": "SqlDao.getAllIdentifiers(String type)", "testcase": false, "constructor": false}, {"identifier": "getRegisteredTypes", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getRegisteredTypes()", "full_signature": "public Set<String> getRegisteredTypes()", "class_method_signature": "SqlDao.getRegisteredTypes()", "testcase": false, "constructor": false}, {"identifier": "initializeTables", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void initializeTables()", "full_signature": "public void initializeTables()", "class_method_signature": "SqlDao.initializeTables()", "testcase": false, "constructor": false}, {"identifier": "executeStream", "parameters": "(BufferedReader reader)", "modifiers": "", "return": "void", "signature": "void executeStream(BufferedReader reader)", "full_signature": " void executeStream(BufferedReader reader)", "class_method_signature": "SqlDao.executeStream(BufferedReader reader)", "testcase": false, "constructor": false}, {"identifier": "hasTable", "parameters": "(String table)", "modifiers": "private", "return": "boolean", "signature": "boolean hasTable(String table)", "full_signature": "private boolean hasTable(String table)", "class_method_signature": "SqlDao.hasTable(String table)", "testcase": false, "constructor": false}, {"identifier": "clearOption", "parameters": "(Segment segment, String option)", "modifiers": "public", "return": "void", "signature": "void clearOption(Segment segment, String option)", "full_signature": "public void clearOption(Segment segment, String option)", "class_method_signature": "SqlDao.clearOption(Segment segment, String option)", "testcase": false, "constructor": false}, {"identifier": "setOptions", "parameters": "(Segment seg, Map<String, String> options)", "modifiers": "public", "return": "void", "signature": "void setOptions(Segment seg, Map<String, String> options)", "full_signature": "public void setOptions(Segment seg, Map<String, String> options)", "class_method_signature": "SqlDao.setOptions(Segment seg, Map<String, String> options)", "testcase": false, "constructor": false}, {"identifier": "setOption", "parameters": "(Segment segment, String key, String value)", "modifiers": "public", "return": "void", "signature": "void setOption(Segment segment, String key, String value)", "full_signature": "public void setOption(Segment segment, String key, String value)", "class_method_signature": "SqlDao.setOption(Segment segment, String key, String value)", "testcase": false, "constructor": false}, {"identifier": "setPermission", "parameters": "(Segment segment, String permission, int value)", "modifiers": "public", "return": "void", "signature": "void setPermission(Segment segment, String permission, int value)", "full_signature": "public void setPermission(Segment segment, String permission, int value)", "class_method_signature": "SqlDao.setPermission(Segment segment, String permission, int value)", "testcase": false, "constructor": false}, {"identifier": "clearPermission", "parameters": "(Segment segment, String permission)", "modifiers": "public", "return": "void", "signature": "void clearPermission(Segment segment, String permission)", "full_signature": "public void clearPermission(Segment segment, String permission)", "class_method_signature": "SqlDao.clearPermission(Segment segment, String permission)", "testcase": false, "constructor": false}, {"identifier": "setPermissions", "parameters": "(Segment segment, Map<String, Integer> permissions)", "modifiers": "public", "return": "void", "signature": "void setPermissions(Segment segment, Map<String, Integer> permissions)", "full_signature": "public void setPermissions(Segment segment, Map<String, Integer> permissions)", "class_method_signature": "SqlDao.setPermissions(Segment segment, Map<String, Integer> permissions)", "testcase": false, "constructor": false}, {"identifier": "setDefaultValue", "parameters": "(Segment segment, Integer permissionDefault)", "modifiers": "public", "return": "void", "signature": "void setDefaultValue(Segment segment, Integer permissionDefault)", "full_signature": "public void setDefaultValue(Segment segment, Integer permissionDefault)", "class_method_signature": "SqlDao.setDefaultValue(Segment segment, Integer permissionDefault)", "testcase": false, "constructor": false}, {"identifier": "addParent", "parameters": "(Segment seg, SubjectRef parent)", "modifiers": "public", "return": "void", "signature": "void addParent(Segment seg, SubjectRef parent)", "full_signature": "public void addParent(Segment seg, SubjectRef parent)", "class_method_signature": "SqlDao.addParent(Segment seg, SubjectRef parent)", "testcase": false, "constructor": false}, {"identifier": "removeParent", "parameters": "(Segment segment, SubjectRef parent)", "modifiers": "public", "return": "void", "signature": "void removeParent(Segment segment, SubjectRef parent)", "full_signature": "public void removeParent(Segment segment, SubjectRef parent)", "class_method_signature": "SqlDao.removeParent(Segment segment, SubjectRef parent)", "testcase": false, "constructor": false}, {"identifier": "setParents", "parameters": "(Segment segment, List<SubjectRef> parents)", "modifiers": "public", "return": "void", "signature": "void setParents(Segment segment, List<SubjectRef> parents)", "full_signature": "public void setParents(Segment segment, List<SubjectRef> parents)", "class_method_signature": "SqlDao.setParents(Segment segment, List<SubjectRef> parents)", "testcase": false, "constructor": false}, {"identifier": "getContextInheritance", "parameters": "()", "modifiers": "public", "return": "SqlContextInheritance", "signature": "SqlContextInheritance getContextInheritance()", "full_signature": "public SqlContextInheritance getContextInheritance()", "class_method_signature": "SqlDao.getContextInheritance()", "testcase": false, "constructor": false}, {"identifier": "setContextInheritance", "parameters": "(ContextValue<?> child, List<ContextValue<?>> parents)", "modifiers": "public", "return": "void", "signature": "void setContextInheritance(ContextValue<?> child, List<ContextValue<?>> parents)", "full_signature": "public void setContextInheritance(ContextValue<?> child, List<ContextValue<?>> parents)", "class_method_signature": "SqlDao.setContextInheritance(ContextValue<?> child, List<ContextValue<?>> parents)", "testcase": false, "constructor": false}, {"identifier": "getRankLadder", "parameters": "(String name)", "modifiers": "public", "return": "RankLadder", "signature": "RankLadder getRankLadder(String name)", "full_signature": "public RankLadder getRankLadder(String name)", "class_method_signature": "SqlDao.getRankLadder(String name)", "testcase": false, "constructor": false}, {"identifier": "hasEntriesForRankLadder", "parameters": "(String name)", "modifiers": "public", "return": "boolean", "signature": "boolean hasEntriesForRankLadder(String name)", "full_signature": "public boolean hasEntriesForRankLadder(String name)", "class_method_signature": "SqlDao.hasEntriesForRankLadder(String name)", "testcase": false, "constructor": false}, {"identifier": "setRankLadder", "parameters": "(String name, RankLadder ladder)", "modifiers": "public", "return": "void", "signature": "void setRankLadder(String name, RankLadder ladder)", "full_signature": "public void setRankLadder(String name, RankLadder ladder)", "class_method_signature": "SqlDao.setRankLadder(String name, RankLadder ladder)", "testcase": false, "constructor": false}, {"identifier": "getAllRankLadderNames", "parameters": "()", "modifiers": "public", "return": "Iterable<String>", "signature": "Iterable<String> getAllRankLadderNames()", "full_signature": "public Iterable<String> getAllRankLadderNames()", "class_method_signature": "SqlDao.getAllRankLadderNames()", "testcase": false, "constructor": false}, {"identifier": "getAllSubjectRefs", "parameters": "()", "modifiers": "public", "return": "Iterable<SubjectRef>", "signature": "Iterable<SubjectRef> getAllSubjectRefs()", "full_signature": "public Iterable<SubjectRef> getAllSubjectRefs()", "class_method_signature": "SqlDao.getAllSubjectRefs()", "testcase": false, "constructor": false}, {"identifier": "getUsedContextKeys", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getUsedContextKeys()", "full_signature": "public Set<String> getUsedContextKeys()", "class_method_signature": "SqlDao.getUsedContextKeys()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "SqlDao.close()", "testcase": false, "constructor": false}, {"identifier": "renameTable", "parameters": "(String oldName, String newName)", "modifiers": "public", "return": "void", "signature": "void renameTable(String oldName, String newName)", "full_signature": "public void renameTable(String oldName, String newName)", "class_method_signature": "SqlDao.renameTable(String oldName, String newName)", "testcase": false, "constructor": false}, {"identifier": "deleteTable", "parameters": "(String table)", "modifiers": "public", "return": "void", "signature": "void deleteTable(String table)", "full_signature": "public void deleteTable(String table)", "class_method_signature": "SqlDao.deleteTable(String table)", "testcase": false, "constructor": false}, {"identifier": "getSchemaVersion", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSchemaVersion()", "full_signature": "public int getSchemaVersion()", "class_method_signature": "SqlDao.getSchemaVersion()", "testcase": false, "constructor": false}, {"identifier": "setSchemaVersion", "parameters": "(int version)", "modifiers": "public", "return": "void", "signature": "void setSchemaVersion(int version)", "full_signature": "public void setSchemaVersion(int version)", "class_method_signature": "SqlDao.setSchemaVersion(int version)", "testcase": false, "constructor": false}, {"identifier": "getDataStore", "parameters": "()", "modifiers": "public", "return": "SqlDataStore", "signature": "SqlDataStore getDataStore()", "full_signature": "public SqlDataStore getDataStore()", "class_method_signature": "SqlDao.getDataStore()", "testcase": false, "constructor": false}, {"identifier": "getConnection", "parameters": "()", "modifiers": "public", "return": "Connection", "signature": "Connection getConnection()", "full_signature": "public Connection getConnection()", "class_method_signature": "SqlDao.getConnection()", "testcase": false, "constructor": false}], "file": "core/src/main/java/ca/stellardrift/permissionsex/backend/sql/SqlDao.java"}, "focal_method": {"identifier": "initializeTables", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void initializeTables() throws SQLException {\n        if (hasTable(\"permissions\")) {\n            return;\n        }\n        String database = conn.getMetaData().getDatabaseProductName().toLowerCase();\n        try (InputStream res = SqlDao.class.getResourceAsStream(\"deploy/\" + database + \".sql\")) {\n            if (res == null) {\n                throw new SQLException(\"No initial schema available for \" + database + \" databases!\");\n            }\n            try (BufferedReader read = new BufferedReader(new InputStreamReader(res, StandardCharsets.UTF_8))) {\n                executeStream(read);\n            }\n        } catch (IOException e) {\n            throw new SQLException(e);\n        }\n    }", "signature": "void initializeTables()", "full_signature": "public void initializeTables()", "class_method_signature": "SqlDao.initializeTables()", "testcase": false, "constructor": false, "invocations": ["hasTable", "toLowerCase", "getDatabaseProductName", "getMetaData", "getResourceAsStream", "executeStream"]}, "repository": {"repo_id": 1626780, "url": "https://github.com/PEXPlugins/PermissionsEx", "stars": 411, "created": "4/17/2011 4:04:00 PM +00:00", "updates": "2020-01-27T02:54:45+00:00", "fork": "False", "license": "licensed"}}