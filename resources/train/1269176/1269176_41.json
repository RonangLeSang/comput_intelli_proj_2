{"test_class": {"identifier": "ImmutableArcInstTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final long SHAPE_SCALE = 1L << 20;", "modifier": "private static final", "type": "long", "declarator": "SHAPE_SCALE = 1L << 20", "var_name": "SHAPE_SCALE"}, {"original_string": "private IdManager idManager;", "modifier": "private", "type": "IdManager", "declarator": "idManager", "var_name": "idManager"}, {"original_string": "private Generic generic;", "modifier": "private", "type": "Generic", "declarator": "generic", "var_name": "generic"}, {"original_string": "private Artwork artwork;", "modifier": "private", "type": "Artwork", "declarator": "artwork", "var_name": "artwork"}, {"original_string": "private Technology tech;", "modifier": "private", "type": "Technology", "declarator": "tech", "var_name": "tech"}, {"original_string": "private TechPool techPool;", "modifier": "private", "type": "TechPool", "declarator": "techPool", "var_name": "techPool"}, {"original_string": "private TechId techId;", "modifier": "private", "type": "TechId", "declarator": "techId", "var_name": "techId"}, {"original_string": "private PrimitiveNode pn;", "modifier": "private", "type": "PrimitiveNode", "declarator": "pn", "var_name": "pn"}, {"original_string": "private PrimitiveNodeId pnId;", "modifier": "private", "type": "PrimitiveNodeId", "declarator": "pnId", "var_name": "pnId"}, {"original_string": "private PrimitivePort pp;", "modifier": "private", "type": "PrimitivePort", "declarator": "pp", "var_name": "pp"}, {"original_string": "private PrimitivePortId ppId;", "modifier": "private", "type": "PrimitivePortId", "declarator": "ppId", "var_name": "ppId"}, {"original_string": "private ArcProto ap;", "modifier": "private", "type": "ArcProto", "declarator": "ap", "var_name": "ap"}, {"original_string": "private ArcProtoId apId;", "modifier": "private", "type": "ArcProtoId", "declarator": "apId", "var_name": "apId"}, {"original_string": "private long apExtend;", "modifier": "private", "type": "long", "declarator": "apExtend", "var_name": "apExtend"}, {"original_string": "private LibId libId;", "modifier": "private", "type": "LibId", "declarator": "libId", "var_name": "libId"}, {"original_string": "private CellId cellId;", "modifier": "private", "type": "CellId", "declarator": "cellId", "var_name": "cellId"}, {"original_string": "private ImmutableNodeInst n0, n1;", "modifier": "private", "type": "ImmutableNodeInst", "declarator": "n0", "var_name": "n0"}, {"original_string": "private Name nameA0;", "modifier": "private", "type": "Name", "declarator": "nameA0", "var_name": "nameA0"}, {"original_string": "private ImmutableArcInst a0;", "modifier": "private", "type": "ImmutableArcInst", "declarator": "a0", "var_name": "a0"}], "file": "electric/electric-core/src/test/java/com/sun/electric/database/ImmutableArcInstTest.java"}, "test_case": {"identifier": "testIsRigid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsRigid() {\n        System.out.println(\"isRigid\");\n        assertFalse(a0.isRigid());\n    }", "signature": "void testIsRigid()", "full_signature": "@Test public void testIsRigid()", "class_method_signature": "ImmutableArcInstTest.testIsRigid()", "testcase": true, "constructor": false, "invocations": ["println", "assertFalse", "isRigid"]}, "focal_class": {"identifier": "ImmutableArcInst", "superclass": "extends ImmutableElectricObject", "interfaces": "", "fields": [{"original_string": "public static final int TAILEND = 0;", "modifier": "public static final", "type": "int", "declarator": "TAILEND = 0", "var_name": "TAILEND"}, {"original_string": "public static final int HEADEND = 1;", "modifier": "public static final", "type": "int", "declarator": "HEADEND = 1", "var_name": "HEADEND"}, {"original_string": "public static final Variable.Key ARC_RADIUS = Variable.newKey(\"ARC_radius\");", "modifier": "public static final", "type": "Variable.Key", "declarator": "ARC_RADIUS = Variable.newKey(\"ARC_radius\")", "var_name": "ARC_RADIUS"}, {"original_string": "private static final int MAX_EXTEND = Integer.MAX_VALUE / 8;", "modifier": "private static final", "type": "int", "declarator": "MAX_EXTEND = Integer.MAX_VALUE / 8", "var_name": "MAX_EXTEND"}, {"original_string": "private static final int ELIB_FIXED = 01;", "modifier": "private static final", "type": "int", "declarator": "ELIB_FIXED = 01", "var_name": "ELIB_FIXED"}, {"original_string": "private static final int ELIB_FIXANG = 02;", "modifier": "private static final", "type": "int", "declarator": "ELIB_FIXANG = 02", "var_name": "ELIB_FIXANG"}, {"original_string": "private static final int ELIB_AANGLE = 037740;", "modifier": "private static final", "type": "int", "declarator": "ELIB_AANGLE = 037740", "var_name": "ELIB_AANGLE"}, {"original_string": "private static final int ELIB_AANGLESH = 5;", "modifier": "private static final", "type": "int", "declarator": "ELIB_AANGLESH = 5", "var_name": "ELIB_AANGLESH"}, {"original_string": "private static final int ELIB_ISHEADNEGATED = 0200000;", "modifier": "private static final", "type": "int", "declarator": "ELIB_ISHEADNEGATED = 0200000", "var_name": "ELIB_ISHEADNEGATED"}, {"original_string": "private static final int ELIB_NOEXTEND = 0400000;", "modifier": "private static final", "type": "int", "declarator": "ELIB_NOEXTEND = 0400000", "var_name": "ELIB_NOEXTEND"}, {"original_string": "private static final int ELIB_ISTAILNEGATED = 01000000;", "modifier": "private static final", "type": "int", "declarator": "ELIB_ISTAILNEGATED = 01000000", "var_name": "ELIB_ISTAILNEGATED"}, {"original_string": "private static final int ELIB_ISDIRECTIONAL = 02000000;", "modifier": "private static final", "type": "int", "declarator": "ELIB_ISDIRECTIONAL = 02000000", "var_name": "ELIB_ISDIRECTIONAL"}, {"original_string": "private static final int ELIB_NOTEND0 = 04000000;", "modifier": "private static final", "type": "int", "declarator": "ELIB_NOTEND0 = 04000000", "var_name": "ELIB_NOTEND0"}, {"original_string": "private static final int ELIB_NOTEND1 = 010000000;", "modifier": "private static final", "type": "int", "declarator": "ELIB_NOTEND1 = 010000000", "var_name": "ELIB_NOTEND1"}, {"original_string": "private static final int ELIB_REVERSEEND = 020000000;", "modifier": "private static final", "type": "int", "declarator": "ELIB_REVERSEEND = 020000000", "var_name": "ELIB_REVERSEEND"}, {"original_string": "private static final int ELIB_CANTSLIDE = 040000000;", "modifier": "private static final", "type": "int", "declarator": "ELIB_CANTSLIDE = 040000000", "var_name": "ELIB_CANTSLIDE"}, {"original_string": "private static final int ELIB_HARDSELECTA = 020000000000;", "modifier": "private static final", "type": "int", "declarator": "ELIB_HARDSELECTA = 020000000000", "var_name": "ELIB_HARDSELECTA"}, {"original_string": "private static final int TAIL_ARROWED_MASK = 0x001;", "modifier": "private static final", "type": "int", "declarator": "TAIL_ARROWED_MASK = 0x001", "var_name": "TAIL_ARROWED_MASK"}, {"original_string": "private static final int HEAD_ARROWED_MASK = 0x002;", "modifier": "private static final", "type": "int", "declarator": "HEAD_ARROWED_MASK = 0x002", "var_name": "HEAD_ARROWED_MASK"}, {"original_string": "private static final int TAIL_EXTENDED_MASK = 0x004;", "modifier": "private static final", "type": "int", "declarator": "TAIL_EXTENDED_MASK = 0x004", "var_name": "TAIL_EXTENDED_MASK"}, {"original_string": "private static final int HEAD_EXTENDED_MASK = 0x008;", "modifier": "private static final", "type": "int", "declarator": "HEAD_EXTENDED_MASK = 0x008", "var_name": "HEAD_EXTENDED_MASK"}, {"original_string": "private static final int TAIL_NEGATED_MASK = 0x010;", "modifier": "private static final", "type": "int", "declarator": "TAIL_NEGATED_MASK = 0x010", "var_name": "TAIL_NEGATED_MASK"}, {"original_string": "private static final int HEAD_NEGATED_MASK = 0x020;", "modifier": "private static final", "type": "int", "declarator": "HEAD_NEGATED_MASK = 0x020", "var_name": "HEAD_NEGATED_MASK"}, {"original_string": "private static final int BODY_ARROWED_MASK = 0x040;", "modifier": "private static final", "type": "int", "declarator": "BODY_ARROWED_MASK = 0x040", "var_name": "BODY_ARROWED_MASK"}, {"original_string": "private static final int RIGID_MASK = 0x080;", "modifier": "private static final", "type": "int", "declarator": "RIGID_MASK = 0x080", "var_name": "RIGID_MASK"}, {"original_string": "private static final int FIXED_ANGLE_MASK = 0x100;", "modifier": "private static final", "type": "int", "declarator": "FIXED_ANGLE_MASK = 0x100", "var_name": "FIXED_ANGLE_MASK"}, {"original_string": "private static final int SLIDABLE_MASK = 0x200;", "modifier": "private static final", "type": "int", "declarator": "SLIDABLE_MASK = 0x200", "var_name": "SLIDABLE_MASK"}, {"original_string": "private static final int HARD_SELECT_MASK = 0x400;", "modifier": "private static final", "type": "int", "declarator": "HARD_SELECT_MASK = 0x400", "var_name": "HARD_SELECT_MASK"}, {"original_string": "private static final int DATABASE_FLAGS = 0x7ff;", "modifier": "private static final", "type": "int", "declarator": "DATABASE_FLAGS = 0x7ff", "var_name": "DATABASE_FLAGS"}, {"original_string": "private static final int MANHATTAN_MASK = 0x800;", "modifier": "private static final", "type": "int", "declarator": "MANHATTAN_MASK = 0x800", "var_name": "MANHATTAN_MASK"}, {"original_string": "public static final Flag RIGID = new Flag(RIGID_MASK, 'R', false);", "modifier": "public static final", "type": "Flag", "declarator": "RIGID = new Flag(RIGID_MASK, 'R', false)", "var_name": "RIGID"}, {"original_string": "public static final Flag FIXED_ANGLE = new Flag(FIXED_ANGLE_MASK, 'F', true);", "modifier": "public static final", "type": "Flag", "declarator": "FIXED_ANGLE = new Flag(FIXED_ANGLE_MASK, 'F', true)", "var_name": "FIXED_ANGLE"}, {"original_string": "public static final Flag SLIDABLE = new Flag(SLIDABLE_MASK, 'S', false);", "modifier": "public static final", "type": "Flag", "declarator": "SLIDABLE = new Flag(SLIDABLE_MASK, 'S', false)", "var_name": "SLIDABLE"}, {"original_string": "public static final Flag TAIL_ARROWED = new Flag(TAIL_ARROWED_MASK, 'Y', false);", "modifier": "public static final", "type": "Flag", "declarator": "TAIL_ARROWED = new Flag(TAIL_ARROWED_MASK, 'Y', false)", "var_name": "TAIL_ARROWED"}, {"original_string": "public static final Flag HEAD_ARROWED = new Flag(HEAD_ARROWED_MASK, 'X', false);", "modifier": "public static final", "type": "Flag", "declarator": "HEAD_ARROWED = new Flag(HEAD_ARROWED_MASK, 'X', false)", "var_name": "HEAD_ARROWED"}, {"original_string": "public static final Flag BODY_ARROWED = new Flag(BODY_ARROWED_MASK, 'B', false);", "modifier": "public static final", "type": "Flag", "declarator": "BODY_ARROWED = new Flag(BODY_ARROWED_MASK, 'B', false)", "var_name": "BODY_ARROWED"}, {"original_string": "public static final Flag TAIL_EXTENDED = new Flag(TAIL_EXTENDED_MASK, 'J', true);", "modifier": "public static final", "type": "Flag", "declarator": "TAIL_EXTENDED = new Flag(TAIL_EXTENDED_MASK, 'J', true)", "var_name": "TAIL_EXTENDED"}, {"original_string": "public static final Flag HEAD_EXTENDED = new Flag(HEAD_EXTENDED_MASK, 'I', true);", "modifier": "public static final", "type": "Flag", "declarator": "HEAD_EXTENDED = new Flag(HEAD_EXTENDED_MASK, 'I', true)", "var_name": "HEAD_EXTENDED"}, {"original_string": "public static final Flag TAIL_NEGATED = new Flag(TAIL_NEGATED_MASK, 'N', false);", "modifier": "public static final", "type": "Flag", "declarator": "TAIL_NEGATED = new Flag(TAIL_NEGATED_MASK, 'N', false)", "var_name": "TAIL_NEGATED"}, {"original_string": "public static final Flag HEAD_NEGATED = new Flag(HEAD_NEGATED_MASK, 'G', false);", "modifier": "public static final", "type": "Flag", "declarator": "HEAD_NEGATED = new Flag(HEAD_NEGATED_MASK, 'G', false)", "var_name": "HEAD_NEGATED"}, {"original_string": "public static final Flag HARD_SELECT = new Flag(HARD_SELECT_MASK, 'A', false);", "modifier": "public static final", "type": "Flag", "declarator": "HARD_SELECT = new Flag(HARD_SELECT_MASK, 'A', false)", "var_name": "HARD_SELECT"}, {"original_string": "public static final int DEFAULT_FLAGS = SLIDABLE.mask | HEAD_EXTENDED.mask | TAIL_EXTENDED.mask;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_FLAGS = SLIDABLE.mask | HEAD_EXTENDED.mask | TAIL_EXTENDED.mask", "var_name": "DEFAULT_FLAGS"}, {"original_string": "public static final int FACTORY_DEFAULT_FLAGS = FIXED_ANGLE.mask | SLIDABLE.mask | HEAD_EXTENDED.mask | TAIL_EXTENDED.mask;", "modifier": "public static final", "type": "int", "declarator": "FACTORY_DEFAULT_FLAGS = FIXED_ANGLE.mask | SLIDABLE.mask | HEAD_EXTENDED.mask | TAIL_EXTENDED.mask", "var_name": "FACTORY_DEFAULT_FLAGS"}, {"original_string": "public static final Name BASENAME = Name.findName(\"net@0\");", "modifier": "public static final", "type": "Name", "declarator": "BASENAME = Name.findName(\"net@0\")", "var_name": "BASENAME"}, {"original_string": "public final static ImmutableArcInst[] NULL_ARRAY = {};", "modifier": "public final static", "type": "ImmutableArcInst[]", "declarator": "NULL_ARRAY = {}", "var_name": "NULL_ARRAY"}, {"original_string": "public final static ImmutableArrayList<ImmutableArcInst> EMPTY_LIST = new ImmutableArrayList<ImmutableArcInst>(NULL_ARRAY);", "modifier": "public final static", "type": "ImmutableArrayList<ImmutableArcInst>", "declarator": "EMPTY_LIST = new ImmutableArrayList<ImmutableArcInst>(NULL_ARRAY)", "var_name": "EMPTY_LIST"}, {"original_string": "public final int arcId;", "modifier": "public final", "type": "int", "declarator": "arcId", "var_name": "arcId"}, {"original_string": "public final ArcProtoId protoId;", "modifier": "public final", "type": "ArcProtoId", "declarator": "protoId", "var_name": "protoId"}, {"original_string": "public final Name name;", "modifier": "public final", "type": "Name", "declarator": "name", "var_name": "name"}, {"original_string": "public final TextDescriptor nameDescriptor;", "modifier": "public final", "type": "TextDescriptor", "declarator": "nameDescriptor", "var_name": "nameDescriptor"}, {"original_string": "public final int tailNodeId;", "modifier": "public final", "type": "int", "declarator": "tailNodeId", "var_name": "tailNodeId"}, {"original_string": "public final PortProtoId tailPortId;", "modifier": "public final", "type": "PortProtoId", "declarator": "tailPortId", "var_name": "tailPortId"}, {"original_string": "public final EPoint tailLocation;", "modifier": "public final", "type": "EPoint", "declarator": "tailLocation", "var_name": "tailLocation"}, {"original_string": "public final int headNodeId;", "modifier": "public final", "type": "int", "declarator": "headNodeId", "var_name": "headNodeId"}, {"original_string": "public final PortProtoId headPortId;", "modifier": "public final", "type": "PortProtoId", "declarator": "headPortId", "var_name": "headPortId"}, {"original_string": "public final EPoint headLocation;", "modifier": "public final", "type": "EPoint", "declarator": "headLocation", "var_name": "headLocation"}, {"original_string": "private final int gridExtendOverMin;", "modifier": "private final", "type": "int", "declarator": "gridExtendOverMin", "var_name": "gridExtendOverMin"}, {"original_string": "private final short angle;", "modifier": "private final", "type": "short", "declarator": "angle", "var_name": "angle"}], "methods": [{"identifier": "ImmutableArcInst", "parameters": "(int arcId, ArcProtoId protoId, Name name, TextDescriptor nameDescriptor,\n            int tailNodeId, PortProtoId tailPortId, EPoint tailLocation,\n            int headNodeId, PortProtoId headPortId, EPoint headLocation,\n            int gridExtendOverMin, short angle, int flags, Variable[] vars)", "modifiers": "", "return": "", "signature": " ImmutableArcInst(int arcId, ArcProtoId protoId, Name name, TextDescriptor nameDescriptor,\n            int tailNodeId, PortProtoId tailPortId, EPoint tailLocation,\n            int headNodeId, PortProtoId headPortId, EPoint headLocation,\n            int gridExtendOverMin, short angle, int flags, Variable[] vars)", "full_signature": "  ImmutableArcInst(int arcId, ArcProtoId protoId, Name name, TextDescriptor nameDescriptor,\n            int tailNodeId, PortProtoId tailPortId, EPoint tailLocation,\n            int headNodeId, PortProtoId headPortId, EPoint headLocation,\n            int gridExtendOverMin, short angle, int flags, Variable[] vars)", "class_method_signature": "ImmutableArcInst.ImmutableArcInst(int arcId, ArcProtoId protoId, Name name, TextDescriptor nameDescriptor,\n            int tailNodeId, PortProtoId tailPortId, EPoint tailLocation,\n            int headNodeId, PortProtoId headPortId, EPoint headLocation,\n            int gridExtendOverMin, short angle, int flags, Variable[] vars)", "testcase": false, "constructor": true}, {"identifier": "isUsernamed", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isUsernamed()", "full_signature": "public boolean isUsernamed()", "class_method_signature": "ImmutableArcInst.isUsernamed()", "testcase": false, "constructor": false}, {"identifier": "getLambdaExtendOverMin", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getLambdaExtendOverMin()", "full_signature": "public double getLambdaExtendOverMin()", "class_method_signature": "ImmutableArcInst.getLambdaExtendOverMin()", "testcase": false, "constructor": false}, {"identifier": "getGridExtendOverMin", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getGridExtendOverMin()", "full_signature": "public long getGridExtendOverMin()", "class_method_signature": "ImmutableArcInst.getGridExtendOverMin()", "testcase": false, "constructor": false}, {"identifier": "getLambdaLength", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getLambdaLength()", "full_signature": "public double getLambdaLength()", "class_method_signature": "ImmutableArcInst.getLambdaLength()", "testcase": false, "constructor": false}, {"identifier": "getGridLength", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getGridLength()", "full_signature": "public double getGridLength()", "class_method_signature": "ImmutableArcInst.getGridLength()", "testcase": false, "constructor": false}, {"identifier": "isZeroLength", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isZeroLength()", "full_signature": "public boolean isZeroLength()", "class_method_signature": "ImmutableArcInst.isZeroLength()", "testcase": false, "constructor": false}, {"identifier": "getAngle", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getAngle()", "full_signature": "public int getAngle()", "class_method_signature": "ImmutableArcInst.getAngle()", "testcase": false, "constructor": false}, {"identifier": "getDefinedAngle", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDefinedAngle()", "full_signature": "public int getDefinedAngle()", "class_method_signature": "ImmutableArcInst.getDefinedAngle()", "testcase": false, "constructor": false}, {"identifier": "getOppositeAngle", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getOppositeAngle()", "full_signature": "public int getOppositeAngle()", "class_method_signature": "ImmutableArcInst.getOppositeAngle()", "testcase": false, "constructor": false}, {"identifier": "is", "parameters": "(Flag flag)", "modifiers": "public", "return": "boolean", "signature": "boolean is(Flag flag)", "full_signature": "public boolean is(Flag flag)", "class_method_signature": "ImmutableArcInst.is(Flag flag)", "testcase": false, "constructor": false}, {"identifier": "isRigid", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRigid()", "full_signature": "public boolean isRigid()", "class_method_signature": "ImmutableArcInst.isRigid()", "testcase": false, "constructor": false}, {"identifier": "isFixedAngle", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFixedAngle()", "full_signature": "public boolean isFixedAngle()", "class_method_signature": "ImmutableArcInst.isFixedAngle()", "testcase": false, "constructor": false}, {"identifier": "isSlidable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSlidable()", "full_signature": "public boolean isSlidable()", "class_method_signature": "ImmutableArcInst.isSlidable()", "testcase": false, "constructor": false}, {"identifier": "isHardSelect", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isHardSelect()", "full_signature": "public boolean isHardSelect()", "class_method_signature": "ImmutableArcInst.isHardSelect()", "testcase": false, "constructor": false}, {"identifier": "isArrowed", "parameters": "(int connIndex)", "modifiers": "public", "return": "boolean", "signature": "boolean isArrowed(int connIndex)", "full_signature": "public boolean isArrowed(int connIndex)", "class_method_signature": "ImmutableArcInst.isArrowed(int connIndex)", "testcase": false, "constructor": false}, {"identifier": "isTailArrowed", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTailArrowed()", "full_signature": "public boolean isTailArrowed()", "class_method_signature": "ImmutableArcInst.isTailArrowed()", "testcase": false, "constructor": false}, {"identifier": "isHeadArrowed", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isHeadArrowed()", "full_signature": "public boolean isHeadArrowed()", "class_method_signature": "ImmutableArcInst.isHeadArrowed()", "testcase": false, "constructor": false}, {"identifier": "isBodyArrowed", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isBodyArrowed()", "full_signature": "public boolean isBodyArrowed()", "class_method_signature": "ImmutableArcInst.isBodyArrowed()", "testcase": false, "constructor": false}, {"identifier": "isExtended", "parameters": "(int connIndex)", "modifiers": "public", "return": "boolean", "signature": "boolean isExtended(int connIndex)", "full_signature": "public boolean isExtended(int connIndex)", "class_method_signature": "ImmutableArcInst.isExtended(int connIndex)", "testcase": false, "constructor": false}, {"identifier": "isTailExtended", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTailExtended()", "full_signature": "public boolean isTailExtended()", "class_method_signature": "ImmutableArcInst.isTailExtended()", "testcase": false, "constructor": false}, {"identifier": "isHeadExtended", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isHeadExtended()", "full_signature": "public boolean isHeadExtended()", "class_method_signature": "ImmutableArcInst.isHeadExtended()", "testcase": false, "constructor": false}, {"identifier": "isNegated", "parameters": "(int connIndex)", "modifiers": "public", "return": "boolean", "signature": "boolean isNegated(int connIndex)", "full_signature": "public boolean isNegated(int connIndex)", "class_method_signature": "ImmutableArcInst.isNegated(int connIndex)", "testcase": false, "constructor": false}, {"identifier": "isTailNegated", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTailNegated()", "full_signature": "public boolean isTailNegated()", "class_method_signature": "ImmutableArcInst.isTailNegated()", "testcase": false, "constructor": false}, {"identifier": "isHeadNegated", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isHeadNegated()", "full_signature": "public boolean isHeadNegated()", "class_method_signature": "ImmutableArcInst.isHeadNegated()", "testcase": false, "constructor": false}, {"identifier": "isManhattan", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isManhattan()", "full_signature": "public boolean isManhattan()", "class_method_signature": "ImmutableArcInst.isManhattan()", "testcase": false, "constructor": false}, {"identifier": "updateManhattan", "parameters": "(int flags, EPoint headLocation, EPoint tailLocation, int angle)", "modifiers": "private static", "return": "int", "signature": "int updateManhattan(int flags, EPoint headLocation, EPoint tailLocation, int angle)", "full_signature": "private static int updateManhattan(int flags, EPoint headLocation, EPoint tailLocation, int angle)", "class_method_signature": "ImmutableArcInst.updateManhattan(int flags, EPoint headLocation, EPoint tailLocation, int angle)", "testcase": false, "constructor": false}, {"identifier": "isManhattan", "parameters": "(EPoint headLocation, EPoint tailLocation, int angle)", "modifiers": "private static", "return": "boolean", "signature": "boolean isManhattan(EPoint headLocation, EPoint tailLocation, int angle)", "full_signature": "private static boolean isManhattan(EPoint headLocation, EPoint tailLocation, int angle)", "class_method_signature": "ImmutableArcInst.isManhattan(EPoint headLocation, EPoint tailLocation, int angle)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(int arcId, ArcProtoId protoId, Name name, TextDescriptor nameDescriptor,\n            int tailNodeId, PortProtoId tailPortId, EPoint tailLocation,\n            int headNodeId, PortProtoId headPortId, EPoint headLocation,\n            long gridExtendOverMin, int angle, int flags)", "modifiers": "public static", "return": "ImmutableArcInst", "signature": "ImmutableArcInst newInstance(int arcId, ArcProtoId protoId, Name name, TextDescriptor nameDescriptor,\n            int tailNodeId, PortProtoId tailPortId, EPoint tailLocation,\n            int headNodeId, PortProtoId headPortId, EPoint headLocation,\n            long gridExtendOverMin, int angle, int flags)", "full_signature": "public static ImmutableArcInst newInstance(int arcId, ArcProtoId protoId, Name name, TextDescriptor nameDescriptor,\n            int tailNodeId, PortProtoId tailPortId, EPoint tailLocation,\n            int headNodeId, PortProtoId headPortId, EPoint headLocation,\n            long gridExtendOverMin, int angle, int flags)", "class_method_signature": "ImmutableArcInst.newInstance(int arcId, ArcProtoId protoId, Name name, TextDescriptor nameDescriptor,\n            int tailNodeId, PortProtoId tailPortId, EPoint tailLocation,\n            int headNodeId, PortProtoId headPortId, EPoint headLocation,\n            long gridExtendOverMin, int angle, int flags)", "testcase": false, "constructor": false}, {"identifier": "withName", "parameters": "(Name name)", "modifiers": "public", "return": "ImmutableArcInst", "signature": "ImmutableArcInst withName(Name name)", "full_signature": "public ImmutableArcInst withName(Name name)", "class_method_signature": "ImmutableArcInst.withName(Name name)", "testcase": false, "constructor": false}, {"identifier": "withNameDescriptor", "parameters": "(TextDescriptor nameDescriptor)", "modifiers": "public", "return": "ImmutableArcInst", "signature": "ImmutableArcInst withNameDescriptor(TextDescriptor nameDescriptor)", "full_signature": "public ImmutableArcInst withNameDescriptor(TextDescriptor nameDescriptor)", "class_method_signature": "ImmutableArcInst.withNameDescriptor(TextDescriptor nameDescriptor)", "testcase": false, "constructor": false}, {"identifier": "withLocations", "parameters": "(EPoint tailLocation, EPoint headLocation)", "modifiers": "public", "return": "ImmutableArcInst", "signature": "ImmutableArcInst withLocations(EPoint tailLocation, EPoint headLocation)", "full_signature": "public ImmutableArcInst withLocations(EPoint tailLocation, EPoint headLocation)", "class_method_signature": "ImmutableArcInst.withLocations(EPoint tailLocation, EPoint headLocation)", "testcase": false, "constructor": false}, {"identifier": "withGridExtendOverMin", "parameters": "(long gridExtendOverMin)", "modifiers": "public", "return": "ImmutableArcInst", "signature": "ImmutableArcInst withGridExtendOverMin(long gridExtendOverMin)", "full_signature": "public ImmutableArcInst withGridExtendOverMin(long gridExtendOverMin)", "class_method_signature": "ImmutableArcInst.withGridExtendOverMin(long gridExtendOverMin)", "testcase": false, "constructor": false}, {"identifier": "withAngle", "parameters": "(int angle)", "modifiers": "public", "return": "ImmutableArcInst", "signature": "ImmutableArcInst withAngle(int angle)", "full_signature": "public ImmutableArcInst withAngle(int angle)", "class_method_signature": "ImmutableArcInst.withAngle(int angle)", "testcase": false, "constructor": false}, {"identifier": "withFlags", "parameters": "(int flags)", "modifiers": "public", "return": "ImmutableArcInst", "signature": "ImmutableArcInst withFlags(int flags)", "full_signature": "public ImmutableArcInst withFlags(int flags)", "class_method_signature": "ImmutableArcInst.withFlags(int flags)", "testcase": false, "constructor": false}, {"identifier": "withFlag", "parameters": "(Flag flag, boolean value)", "modifiers": "public", "return": "ImmutableArcInst", "signature": "ImmutableArcInst withFlag(Flag flag, boolean value)", "full_signature": "public ImmutableArcInst withFlag(Flag flag, boolean value)", "class_method_signature": "ImmutableArcInst.withFlag(Flag flag, boolean value)", "testcase": false, "constructor": false}, {"identifier": "withVariable", "parameters": "(Variable var)", "modifiers": "public", "return": "ImmutableArcInst", "signature": "ImmutableArcInst withVariable(Variable var)", "full_signature": "public ImmutableArcInst withVariable(Variable var)", "class_method_signature": "ImmutableArcInst.withVariable(Variable var)", "testcase": false, "constructor": false}, {"identifier": "withoutVariable", "parameters": "(Variable.Key key)", "modifiers": "public", "return": "ImmutableArcInst", "signature": "ImmutableArcInst withoutVariable(Variable.Key key)", "full_signature": "public ImmutableArcInst withoutVariable(Variable.Key key)", "class_method_signature": "ImmutableArcInst.withoutVariable(Variable.Key key)", "testcase": false, "constructor": false}, {"identifier": "withRenamedIds", "parameters": "(IdMapper idMapper)", "modifiers": "", "return": "ImmutableArcInst", "signature": "ImmutableArcInst withRenamedIds(IdMapper idMapper)", "full_signature": " ImmutableArcInst withRenamedIds(IdMapper idMapper)", "class_method_signature": "ImmutableArcInst.withRenamedIds(IdMapper idMapper)", "testcase": false, "constructor": false}, {"identifier": "updateAngle", "parameters": "(short angle, EPoint tailLocation, EPoint headLocation)", "modifiers": "private static", "return": "short", "signature": "short updateAngle(short angle, EPoint tailLocation, EPoint headLocation)", "full_signature": "private static short updateAngle(short angle, EPoint tailLocation, EPoint headLocation)", "class_method_signature": "ImmutableArcInst.updateAngle(short angle, EPoint tailLocation, EPoint headLocation)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(IdWriter writer)", "modifiers": "", "return": "void", "signature": "void write(IdWriter writer)", "full_signature": " void write(IdWriter writer)", "class_method_signature": "ImmutableArcInst.write(IdWriter writer)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(IdReader reader)", "modifiers": "static", "return": "ImmutableArcInst", "signature": "ImmutableArcInst read(IdReader reader)", "full_signature": "static ImmutableArcInst read(IdReader reader)", "class_method_signature": "ImmutableArcInst.read(IdReader reader)", "testcase": false, "constructor": false}, {"identifier": "hashCodeExceptVariables", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCodeExceptVariables()", "full_signature": "public int hashCodeExceptVariables()", "class_method_signature": "ImmutableArcInst.hashCodeExceptVariables()", "testcase": false, "constructor": false}, {"identifier": "equalsExceptVariables", "parameters": "(ImmutableElectricObject o)", "modifiers": "public", "return": "boolean", "signature": "boolean equalsExceptVariables(ImmutableElectricObject o)", "full_signature": "public boolean equalsExceptVariables(ImmutableElectricObject o)", "class_method_signature": "ImmutableArcInst.equalsExceptVariables(ImmutableElectricObject o)", "testcase": false, "constructor": false}, {"identifier": "makeGridBoxInt", "parameters": "(int[] intCoords, boolean tailExtended, boolean headExtended, int gridExtend)", "modifiers": "public", "return": "void", "signature": "void makeGridBoxInt(int[] intCoords, boolean tailExtended, boolean headExtended, int gridExtend)", "full_signature": "public void makeGridBoxInt(int[] intCoords, boolean tailExtended, boolean headExtended, int gridExtend)", "class_method_signature": "ImmutableArcInst.makeGridBoxInt(int[] intCoords, boolean tailExtended, boolean headExtended, int gridExtend)", "testcase": false, "constructor": false}, {"identifier": "getRadius", "parameters": "()", "modifiers": "public", "return": "Double", "signature": "Double getRadius()", "full_signature": "public Double getRadius()", "class_method_signature": "ImmutableArcInst.getRadius()", "testcase": false, "constructor": false}, {"identifier": "check", "parameters": "(TechPool techPool)", "modifiers": "public", "return": "boolean", "signature": "boolean check(TechPool techPool)", "full_signature": "public boolean check(TechPool techPool)", "class_method_signature": "ImmutableArcInst.check(TechPool techPool)", "testcase": false, "constructor": false}, {"identifier": "check", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void check()", "full_signature": "public void check()", "class_method_signature": "ImmutableArcInst.check()", "testcase": false, "constructor": false}, {"identifier": "getElibBits", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getElibBits()", "full_signature": "public int getElibBits()", "class_method_signature": "ImmutableArcInst.getElibBits()", "testcase": false, "constructor": false}, {"identifier": "flagsFromElib", "parameters": "(int elibBits)", "modifiers": "public static", "return": "int", "signature": "int flagsFromElib(int elibBits)", "full_signature": "public static int flagsFromElib(int elibBits)", "class_method_signature": "ImmutableArcInst.flagsFromElib(int elibBits)", "testcase": false, "constructor": false}, {"identifier": "angleFromElib", "parameters": "(int elibBits)", "modifiers": "public static", "return": "int", "signature": "int angleFromElib(int elibBits)", "full_signature": "public static int angleFromElib(int elibBits)", "class_method_signature": "ImmutableArcInst.angleFromElib(int elibBits)", "testcase": false, "constructor": false}], "file": "electric/electric-core/src/main/java/com/sun/electric/database/ImmutableArcInst.java"}, "focal_method": {"identifier": "isRigid", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isRigid() {\n        return (flags & RIGID_MASK) != 0;\n    }", "signature": "boolean isRigid()", "full_signature": "public boolean isRigid()", "class_method_signature": "ImmutableArcInst.isRigid()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1269176, "url": "https://github.com/imr/Electric-VLSI", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 87437, "license": "licensed"}}