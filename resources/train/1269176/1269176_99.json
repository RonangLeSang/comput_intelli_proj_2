{"test_class": {"identifier": "EPointTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EPoint p0;", "modifier": "private", "type": "EPoint", "declarator": "p0", "var_name": "p0"}], "file": "electric/electric-core/src/test/java/com/sun/electric/database/geometry/EPointTest.java"}, "test_case": {"identifier": "testSnap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSnap() {\n        System.out.println(\"snap\");\n        assertSame(p0, EPoint.snap(p0));\n    }", "signature": "void testSnap()", "full_signature": "@Test public void testSnap()", "class_method_signature": "EPointTest.testSnap()", "testcase": true, "constructor": false, "invocations": ["println", "assertSame", "snap"]}, "focal_class": {"identifier": "EPoint", "superclass": "extends Point2D", "interfaces": "implements Serializable", "fields": [{"original_string": "public static final EPoint ORIGIN = new EPoint(0, 0);", "modifier": "public static final", "type": "EPoint", "declarator": "ORIGIN = new EPoint(0, 0)", "var_name": "ORIGIN"}, {"original_string": "private final int gridX;", "modifier": "private final", "type": "int", "declarator": "gridX", "var_name": "gridX"}, {"original_string": "private final int gridY;", "modifier": "private final", "type": "int", "declarator": "gridY", "var_name": "gridY"}, {"original_string": "private final double lambdaX;", "modifier": "private final", "type": "double", "declarator": "lambdaX", "var_name": "lambdaX"}, {"original_string": "private final double lambdaY;", "modifier": "private final", "type": "double", "declarator": "lambdaY", "var_name": "lambdaY"}, {"original_string": "private static int createdEPoints;", "modifier": "private static", "type": "int", "declarator": "createdEPoints", "var_name": "createdEPoints"}], "methods": [{"identifier": "EPoint", "parameters": "(double lambdaX, double lambdaY)", "modifiers": "public", "return": "", "signature": " EPoint(double lambdaX, double lambdaY)", "full_signature": "public  EPoint(double lambdaX, double lambdaY)", "class_method_signature": "EPoint.EPoint(double lambdaX, double lambdaY)", "testcase": false, "constructor": true}, {"identifier": "EPoint", "parameters": "(long gridX, long gridY)", "modifiers": "private", "return": "", "signature": " EPoint(long gridX, long gridY)", "full_signature": "private  EPoint(long gridX, long gridY)", "class_method_signature": "EPoint.EPoint(long gridX, long gridY)", "testcase": false, "constructor": true}, {"identifier": "fromLambda", "parameters": "(double lambdaX, double lambdaY)", "modifiers": "public static", "return": "EPoint", "signature": "EPoint fromLambda(double lambdaX, double lambdaY)", "full_signature": "public static EPoint fromLambda(double lambdaX, double lambdaY)", "class_method_signature": "EPoint.fromLambda(double lambdaX, double lambdaY)", "testcase": false, "constructor": false}, {"identifier": "fromGrid", "parameters": "(long gridX, long gridY)", "modifiers": "public static", "return": "EPoint", "signature": "EPoint fromGrid(long gridX, long gridY)", "full_signature": "public static EPoint fromGrid(long gridX, long gridY)", "class_method_signature": "EPoint.fromGrid(long gridX, long gridY)", "testcase": false, "constructor": false}, {"identifier": "snap", "parameters": "(Point2D p)", "modifiers": "public static", "return": "EPoint", "signature": "EPoint snap(Point2D p)", "full_signature": "public static EPoint snap(Point2D p)", "class_method_signature": "EPoint.snap(Point2D p)", "testcase": false, "constructor": false}, {"identifier": "getX", "parameters": "()", "modifiers": "@Override public", "return": "double", "signature": "double getX()", "full_signature": "@Override public double getX()", "class_method_signature": "EPoint.getX()", "testcase": false, "constructor": false}, {"identifier": "getY", "parameters": "()", "modifiers": "@Override public", "return": "double", "signature": "double getY()", "full_signature": "@Override public double getY()", "class_method_signature": "EPoint.getY()", "testcase": false, "constructor": false}, {"identifier": "getLambdaX", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getLambdaX()", "full_signature": "public double getLambdaX()", "class_method_signature": "EPoint.getLambdaX()", "testcase": false, "constructor": false}, {"identifier": "getLambdaY", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getLambdaY()", "full_signature": "public double getLambdaY()", "class_method_signature": "EPoint.getLambdaY()", "testcase": false, "constructor": false}, {"identifier": "getGridX", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getGridX()", "full_signature": "public long getGridX()", "class_method_signature": "EPoint.getGridX()", "testcase": false, "constructor": false}, {"identifier": "getGridY", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getGridY()", "full_signature": "public long getGridY()", "class_method_signature": "EPoint.getGridY()", "testcase": false, "constructor": false}, {"identifier": "setLocation", "parameters": "(double x, double y)", "modifiers": "@Override public", "return": "void", "signature": "void setLocation(double x, double y)", "full_signature": "@Override public void setLocation(double x, double y)", "class_method_signature": "EPoint.setLocation(double x, double y)", "testcase": false, "constructor": false}, {"identifier": "lambdaMutable", "parameters": "()", "modifiers": "public", "return": "Point2D.Double", "signature": "Point2D.Double lambdaMutable()", "full_signature": "public Point2D.Double lambdaMutable()", "class_method_signature": "EPoint.lambdaMutable()", "testcase": false, "constructor": false}, {"identifier": "gridMutable", "parameters": "()", "modifiers": "public", "return": "Point2D.Double", "signature": "Point2D.Double gridMutable()", "full_signature": "public Point2D.Double gridMutable()", "class_method_signature": "EPoint.gridMutable()", "testcase": false, "constructor": false}, {"identifier": "lambdaDistance", "parameters": "(EPoint pt)", "modifiers": "public", "return": "double", "signature": "double lambdaDistance(EPoint pt)", "full_signature": "public double lambdaDistance(EPoint pt)", "class_method_signature": "EPoint.lambdaDistance(EPoint pt)", "testcase": false, "constructor": false}, {"identifier": "gridDistance", "parameters": "(EPoint pt)", "modifiers": "public", "return": "double", "signature": "double gridDistance(EPoint pt)", "full_signature": "public double gridDistance(EPoint pt)", "class_method_signature": "EPoint.gridDistance(EPoint pt)", "testcase": false, "constructor": false}, {"identifier": "isSmall", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSmall()", "full_signature": "public boolean isSmall()", "class_method_signature": "EPoint.isSmall()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(EPoint that)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(EPoint that)", "full_signature": "public boolean equals(EPoint that)", "class_method_signature": "EPoint.equals(EPoint that)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "EPoint.toString()", "testcase": false, "constructor": false}, {"identifier": "printStatistics", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void printStatistics()", "full_signature": "public static void printStatistics()", "class_method_signature": "EPoint.printStatistics()", "testcase": false, "constructor": false}], "file": "electric/electric-core/src/main/java/com/sun/electric/database/geometry/EPoint.java"}, "focal_method": {"identifier": "snap", "parameters": "(Point2D p)", "modifiers": "public static", "return": "EPoint", "body": "public static EPoint snap(Point2D p) {\n\t\treturn (p instanceof EPoint) ? (EPoint)p : fromLambda(p.getX(), p.getY());\n\t}", "signature": "EPoint snap(Point2D p)", "full_signature": "public static EPoint snap(Point2D p)", "class_method_signature": "EPoint.snap(Point2D p)", "testcase": false, "constructor": false, "invocations": ["fromLambda", "getX", "getY"]}, "repository": {"repo_id": 1269176, "url": "https://github.com/imr/Electric-VLSI", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 87437, "license": "licensed"}}