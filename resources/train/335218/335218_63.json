{"test_class": {"identifier": "FeldReferenzTest", "superclass": "extends AbstractXmlTest", "interfaces": "", "fields": [{"original_string": "private static FeldReferenz feldReferenz;", "modifier": "private static", "type": "FeldReferenz", "declarator": "feldReferenz", "var_name": "feldReferenz"}], "file": "lib/src/test/java/gdv/xport/satz/xml/FeldReferenzTest.java"}, "test_case": {"identifier": "testGetTechnischerName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetTechnischerName() {\n        assertEquals(\"Satzart\", feldReferenz.getTechnischerName());\n    }", "signature": "void testGetTechnischerName()", "full_signature": "@Test public void testGetTechnischerName()", "class_method_signature": "FeldReferenzTest.testGetTechnischerName()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getTechnischerName"]}, "focal_class": {"identifier": "FeldReferenz", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LogManager.getLogger(FeldReferenz.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LogManager.getLogger(FeldReferenz.class)", "var_name": "LOG"}, {"original_string": "private final String id;", "modifier": "private final", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "private final Bezeichner bezeichner;", "modifier": "private final", "type": "Bezeichner", "declarator": "bezeichner", "var_name": "bezeichner"}, {"original_string": "private final String bemerkung;", "modifier": "private final", "type": "String", "declarator": "bemerkung", "var_name": "bemerkung"}, {"original_string": "private final String auspraegung;", "modifier": "private final", "type": "String", "declarator": "auspraegung", "var_name": "auspraegung"}], "methods": [{"identifier": "FeldReferenz", "parameters": "(final XMLEventReader parser)", "modifiers": "public", "return": "", "signature": " FeldReferenz(final XMLEventReader parser)", "full_signature": "public  FeldReferenz(final XMLEventReader parser)", "class_method_signature": "FeldReferenz.FeldReferenz(final XMLEventReader parser)", "testcase": false, "constructor": true}, {"identifier": "FeldReferenz", "parameters": "(final XMLEventReader parser, final StartElement element)", "modifiers": "public", "return": "", "signature": " FeldReferenz(final XMLEventReader parser, final StartElement element)", "full_signature": "public  FeldReferenz(final XMLEventReader parser, final StartElement element)", "class_method_signature": "FeldReferenz.FeldReferenz(final XMLEventReader parser, final StartElement element)", "testcase": false, "constructor": true}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getId()", "full_signature": "public String getId()", "class_method_signature": "FeldReferenz.getId()", "testcase": false, "constructor": false}, {"identifier": "getBezeichner", "parameters": "()", "modifiers": "public", "return": "Bezeichner", "signature": "Bezeichner getBezeichner()", "full_signature": "public Bezeichner getBezeichner()", "class_method_signature": "FeldReferenz.getBezeichner()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "FeldReferenz.getName()", "testcase": false, "constructor": false}, {"identifier": "getTechnischerName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTechnischerName()", "full_signature": "public String getTechnischerName()", "class_method_signature": "FeldReferenz.getTechnischerName()", "testcase": false, "constructor": false}, {"identifier": "getAuspraegung", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAuspraegung()", "full_signature": "public String getAuspraegung()", "class_method_signature": "FeldReferenz.getAuspraegung()", "testcase": false, "constructor": false}, {"identifier": "getBemerkung", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getBemerkung()", "full_signature": "public String getBemerkung()", "class_method_signature": "FeldReferenz.getBemerkung()", "testcase": false, "constructor": false}, {"identifier": "getDefaultWerte", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getDefaultWerte()", "full_signature": "public List<String> getDefaultWerte()", "class_method_signature": "FeldReferenz.getDefaultWerte()", "testcase": false, "constructor": false}, {"identifier": "hasAuspraegung", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasAuspraegung()", "full_signature": "public boolean hasAuspraegung()", "class_method_signature": "FeldReferenz.hasAuspraegung()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "FeldReferenz.toString()", "testcase": false, "constructor": false}], "file": "lib/src/main/java/gdv/xport/satz/xml/FeldReferenz.java"}, "focal_method": {"identifier": "getTechnischerName", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getTechnischerName() {\n        return this.bezeichner.getTechnischerName();\n    }", "signature": "String getTechnischerName()", "full_signature": "public String getTechnischerName()", "class_method_signature": "FeldReferenz.getTechnischerName()", "testcase": false, "constructor": false, "invocations": ["getTechnischerName"]}, "repository": {"repo_id": 335218, "url": "https://github.com/oboehm/gdv.xport", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 12, "size": 5392, "license": "licensed"}}