{"test_class": {"identifier": "BinaryMatcherTest", "superclass": "", "interfaces": "", "fields": [], "file": "mockserver-core/src/test/java/org/mockserver/matchers/BinaryMatcherTest.java"}, "test_case": {"identifier": "shouldNotMatchNullExpectation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldNotMatchNullExpectation() {\n        assertFalse(notMatcher(new BinaryMatcher(new MockServerLogger(),null)).matches(null, \"some_value\".getBytes(UTF_8)));\n    }", "signature": "void shouldNotMatchNullExpectation()", "full_signature": "@Test public void shouldNotMatchNullExpectation()", "class_method_signature": "BinaryMatcherTest.shouldNotMatchNullExpectation()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "matches", "notMatcher", "getBytes"]}, "focal_class": {"identifier": "BinaryMatcher", "superclass": "extends BodyMatcher<byte[]>", "interfaces": "", "fields": [{"original_string": "private static final String[] excludedFields = {\"mockServerLogger\"};", "modifier": "private static final", "type": "String[]", "declarator": "excludedFields = {\"mockServerLogger\"}", "var_name": "excludedFields"}, {"original_string": "private final MockServerLogger mockServerLogger;", "modifier": "private final", "type": "MockServerLogger", "declarator": "mockServerLogger", "var_name": "mockServerLogger"}, {"original_string": "private final byte[] matcher;", "modifier": "private final", "type": "byte[]", "declarator": "matcher", "var_name": "matcher"}], "methods": [{"identifier": "BinaryMatcher", "parameters": "(MockServerLogger mockServerLogger, byte[] matcher)", "modifiers": "", "return": "", "signature": " BinaryMatcher(MockServerLogger mockServerLogger, byte[] matcher)", "full_signature": "  BinaryMatcher(MockServerLogger mockServerLogger, byte[] matcher)", "class_method_signature": "BinaryMatcher.BinaryMatcher(MockServerLogger mockServerLogger, byte[] matcher)", "testcase": false, "constructor": true}, {"identifier": "matches", "parameters": "(final MatchDifference context, byte[] matched)", "modifiers": "public", "return": "boolean", "signature": "boolean matches(final MatchDifference context, byte[] matched)", "full_signature": "public boolean matches(final MatchDifference context, byte[] matched)", "class_method_signature": "BinaryMatcher.matches(final MatchDifference context, byte[] matched)", "testcase": false, "constructor": false}, {"identifier": "isBlank", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isBlank()", "full_signature": "public boolean isBlank()", "class_method_signature": "BinaryMatcher.isBlank()", "testcase": false, "constructor": false}, {"identifier": "fieldsExcludedFromEqualsAndHashCode", "parameters": "()", "modifiers": "@Override @JsonIgnore public", "return": "String[]", "signature": "String[] fieldsExcludedFromEqualsAndHashCode()", "full_signature": "@Override @JsonIgnore public String[] fieldsExcludedFromEqualsAndHashCode()", "class_method_signature": "BinaryMatcher.fieldsExcludedFromEqualsAndHashCode()", "testcase": false, "constructor": false}], "file": "mockserver-core/src/main/java/org/mockserver/matchers/BinaryMatcher.java"}, "focal_method": {"identifier": "matches", "parameters": "(final MatchDifference context, byte[] matched)", "modifiers": "public", "return": "boolean", "body": "public boolean matches(final MatchDifference context, byte[] matched) {\n        boolean result = false;\n\n        if (matcher == null || matcher.length == 0 || Arrays.equals(matcher, matched)) {\n            result = true;\n        }\n\n        if (!result && context != null) {\n            context.addDifference(mockServerLogger, \"binary match failed expected:{}found:{}\", BinaryArrayFormatter.byteArrayToString(this.matcher), BinaryArrayFormatter.byteArrayToString(matched));\n        }\n\n        return not != result;\n    }", "signature": "boolean matches(final MatchDifference context, byte[] matched)", "full_signature": "public boolean matches(final MatchDifference context, byte[] matched)", "class_method_signature": "BinaryMatcher.matches(final MatchDifference context, byte[] matched)", "testcase": false, "constructor": false, "invocations": ["equals", "addDifference", "byteArrayToString", "byteArrayToString"]}, "repository": {"repo_id": 8426406, "url": "https://github.com/mock-server/mockserver", "stars": 2440, "created": "2/26/2013 6:09:52 AM +00:00", "updates": "2020-01-27T21:08:35+00:00", "fork": "False", "license": "licensed"}}