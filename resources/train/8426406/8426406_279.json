{"test_class": {"identifier": "TimeToLiveToJavaSerializerTest", "superclass": "", "interfaces": "", "fields": [], "file": "mockserver-core/src/test/java/org/mockserver/serialization/java/TimeToLiveToJavaSerializerTest.java"}, "test_case": {"identifier": "shouldSerializeExactlyTimeToLiveAsJava", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldSerializeExactlyTimeToLiveAsJava() {\n        assertEquals(NEW_LINE +\n                        \"        TimeToLive.exactly(TimeUnit.SECONDS, 100L)\",\n                new TimeToLiveToJavaSerializer().serialize(1,\n                    TimeToLive.exactly(TimeUnit.SECONDS, 100L)\n                )\n        );\n    }", "signature": "void shouldSerializeExactlyTimeToLiveAsJava()", "full_signature": "@Test public void shouldSerializeExactlyTimeToLiveAsJava()", "class_method_signature": "TimeToLiveToJavaSerializerTest.shouldSerializeExactlyTimeToLiveAsJava()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "serialize", "exactly"]}, "focal_class": {"identifier": "TimeToLiveToJavaSerializer", "superclass": "", "interfaces": "implements ToJavaSerializer<TimeToLive>", "fields": [], "methods": [{"identifier": "serialize", "parameters": "(int numberOfSpacesToIndent, TimeToLive timeToLive)", "modifiers": "@Override public", "return": "String", "signature": "String serialize(int numberOfSpacesToIndent, TimeToLive timeToLive)", "full_signature": "@Override public String serialize(int numberOfSpacesToIndent, TimeToLive timeToLive)", "class_method_signature": "TimeToLiveToJavaSerializer.serialize(int numberOfSpacesToIndent, TimeToLive timeToLive)", "testcase": false, "constructor": false}, {"identifier": "appendNewLineAndIndent", "parameters": "(int numberOfSpacesToIndent, StringBuffer output)", "modifiers": "private", "return": "StringBuffer", "signature": "StringBuffer appendNewLineAndIndent(int numberOfSpacesToIndent, StringBuffer output)", "full_signature": "private StringBuffer appendNewLineAndIndent(int numberOfSpacesToIndent, StringBuffer output)", "class_method_signature": "TimeToLiveToJavaSerializer.appendNewLineAndIndent(int numberOfSpacesToIndent, StringBuffer output)", "testcase": false, "constructor": false}], "file": "mockserver-core/src/main/java/org/mockserver/serialization/java/TimeToLiveToJavaSerializer.java"}, "focal_method": {"identifier": "serialize", "parameters": "(int numberOfSpacesToIndent, TimeToLive timeToLive)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String serialize(int numberOfSpacesToIndent, TimeToLive timeToLive) {\n        StringBuffer output = new StringBuffer();\n        if (timeToLive != null) {\n            appendNewLineAndIndent(numberOfSpacesToIndent * INDENT_SIZE, output);\n            if (timeToLive.isUnlimited()) {\n                output.append(\"TimeToLive.unlimited()\");\n            } else {\n                output.append(\"TimeToLive.exactly(TimeUnit.\").append(timeToLive.getTimeUnit().name()).append(\", \").append(timeToLive.getTimeToLive()).append(\"L)\");\n            }\n        }\n\n        return output.toString();\n    }", "signature": "String serialize(int numberOfSpacesToIndent, TimeToLive timeToLive)", "full_signature": "@Override public String serialize(int numberOfSpacesToIndent, TimeToLive timeToLive)", "class_method_signature": "TimeToLiveToJavaSerializer.serialize(int numberOfSpacesToIndent, TimeToLive timeToLive)", "testcase": false, "constructor": false, "invocations": ["appendNewLineAndIndent", "isUnlimited", "append", "append", "append", "append", "append", "append", "name", "getTimeUnit", "getTimeToLive", "toString"]}, "repository": {"repo_id": 8426406, "url": "https://github.com/mock-server/mockserver", "stars": 2440, "created": "2/26/2013 6:09:52 AM +00:00", "updates": "2020-01-27T21:08:35+00:00", "fork": "False", "license": "licensed"}}