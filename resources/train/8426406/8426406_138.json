{"test_class": {"identifier": "NettyHttpToMockServerHttpRequestDecoderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private NettyHttpToMockServerHttpRequestDecoder mockServerRequestDecoder;", "modifier": "private", "type": "NettyHttpToMockServerHttpRequestDecoder", "declarator": "mockServerRequestDecoder", "var_name": "mockServerRequestDecoder"}, {"original_string": "private List<Object> output;", "modifier": "private", "type": "List<Object>", "declarator": "output", "var_name": "output"}, {"original_string": "private FullHttpRequest fullHttpRequest;", "modifier": "private", "type": "FullHttpRequest", "declarator": "fullHttpRequest", "var_name": "fullHttpRequest"}], "file": "mockserver-core/src/test/java/org/mockserver/codec/NettyHttpToMockServerHttpRequestDecoderTest.java"}, "test_case": {"identifier": "shouldDecodeQueryParameters", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldDecodeQueryParameters() {\n        // given\n        String uri = \"/uri?\" +\n            \"queryStringParameterNameOne=queryStringParameterValueOne_One\" +\n            \"&queryStringParameterNameOne=queryStringParameterValueOne_Two\" +\n            \"&queryStringParameterNameTwo=queryStringParameterValueTwo_One\";\n        fullHttpRequest = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.GET, uri);\n\n        // when\n        mockServerRequestDecoder.decode(null, fullHttpRequest, output);\n\n        // then\n        List<Parameter> queryStringParameters = ((HttpRequest) output.get(0)).getQueryStringParameterList();\n        assertThat(queryStringParameters, containsInAnyOrder(\n            param(\"queryStringParameterNameOne\", \"queryStringParameterValueOne_One\", \"queryStringParameterValueOne_Two\"),\n            param(\"queryStringParameterNameTwo\", \"queryStringParameterValueTwo_One\")\n        ));\n    }", "signature": "void shouldDecodeQueryParameters()", "full_signature": "@Test public void shouldDecodeQueryParameters()", "class_method_signature": "NettyHttpToMockServerHttpRequestDecoderTest.shouldDecodeQueryParameters()", "testcase": true, "constructor": false, "invocations": ["decode", "getQueryStringParameterList", "get", "assertThat", "containsInAnyOrder", "param", "param"]}, "focal_class": {"identifier": "NettyHttpToMockServerHttpRequestDecoder", "superclass": "extends MessageToMessageDecoder<FullHttpRequest>", "interfaces": "", "fields": [{"original_string": "private final FullHttpRequestToMockServerHttpRequest fullHttpRequestToMockServerRequest;", "modifier": "private final", "type": "FullHttpRequestToMockServerHttpRequest", "declarator": "fullHttpRequestToMockServerRequest", "var_name": "fullHttpRequestToMockServerRequest"}], "methods": [{"identifier": "NettyHttpToMockServerHttpRequestDecoder", "parameters": "(MockServerLogger mockServerLogger, boolean isSecure, Integer port)", "modifiers": "public", "return": "", "signature": " NettyHttpToMockServerHttpRequestDecoder(MockServerLogger mockServerLogger, boolean isSecure, Integer port)", "full_signature": "public  NettyHttpToMockServerHttpRequestDecoder(MockServerLogger mockServerLogger, boolean isSecure, Integer port)", "class_method_signature": "NettyHttpToMockServerHttpRequestDecoder.NettyHttpToMockServerHttpRequestDecoder(MockServerLogger mockServerLogger, boolean isSecure, Integer port)", "testcase": false, "constructor": true}, {"identifier": "decode", "parameters": "(ChannelHandlerContext ctx, FullHttpRequest fullHttpRequest, List<Object> out)", "modifiers": "@Override protected", "return": "void", "signature": "void decode(ChannelHandlerContext ctx, FullHttpRequest fullHttpRequest, List<Object> out)", "full_signature": "@Override protected void decode(ChannelHandlerContext ctx, FullHttpRequest fullHttpRequest, List<Object> out)", "class_method_signature": "NettyHttpToMockServerHttpRequestDecoder.decode(ChannelHandlerContext ctx, FullHttpRequest fullHttpRequest, List<Object> out)", "testcase": false, "constructor": false}], "file": "mockserver-core/src/main/java/org/mockserver/codec/NettyHttpToMockServerHttpRequestDecoder.java"}, "focal_method": {"identifier": "decode", "parameters": "(ChannelHandlerContext ctx, FullHttpRequest fullHttpRequest, List<Object> out)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void decode(ChannelHandlerContext ctx, FullHttpRequest fullHttpRequest, List<Object> out) {\n        out.add(fullHttpRequestToMockServerRequest.mapFullHttpRequestToMockServerRequest(fullHttpRequest));\n    }", "signature": "void decode(ChannelHandlerContext ctx, FullHttpRequest fullHttpRequest, List<Object> out)", "full_signature": "@Override protected void decode(ChannelHandlerContext ctx, FullHttpRequest fullHttpRequest, List<Object> out)", "class_method_signature": "NettyHttpToMockServerHttpRequestDecoder.decode(ChannelHandlerContext ctx, FullHttpRequest fullHttpRequest, List<Object> out)", "testcase": false, "constructor": false, "invocations": ["add", "mapFullHttpRequestToMockServerRequest"]}, "repository": {"repo_id": 8426406, "url": "https://github.com/mock-server/mockserver", "stars": 2440, "created": "2/26/2013 6:09:52 AM +00:00", "updates": "2020-01-27T21:08:35+00:00", "fork": "False", "license": "licensed"}}