{"test_class": {"identifier": "JsonSchemaBodyDTOTest", "superclass": "", "interfaces": "", "fields": [], "file": "mockserver-core/src/test/java/org/mockserver/serialization/model/JsonSchemaBodyDTOTest.java"}, "test_case": {"identifier": "shouldHandleNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldHandleNull() {\n        // given\n        String body = null;\n\n        // when\n        JsonSchemaBody jsonSchemaBody = new JsonSchemaBodyDTO(new JsonSchemaBody(body)).buildObject();\n\n        // then\n        assertThat(jsonSchemaBody.getValue(), nullValue());\n        assertThat(jsonSchemaBody.getType(), is(Body.Type.JSON_SCHEMA));\n    }", "signature": "void shouldHandleNull()", "full_signature": "@Test public void shouldHandleNull()", "class_method_signature": "JsonSchemaBodyDTOTest.shouldHandleNull()", "testcase": true, "constructor": false, "invocations": ["buildObject", "assertThat", "getValue", "nullValue", "assertThat", "getType", "is"]}, "focal_class": {"identifier": "JsonSchemaBodyDTO", "superclass": "extends BodyDTO", "interfaces": "", "fields": [{"original_string": "private final String jsonSchema;", "modifier": "private final", "type": "String", "declarator": "jsonSchema", "var_name": "jsonSchema"}, {"original_string": "private final Map<String, ParameterStyle> parameterStyles;", "modifier": "private final", "type": "Map<String, ParameterStyle>", "declarator": "parameterStyles", "var_name": "parameterStyles"}], "methods": [{"identifier": "JsonSchemaBodyDTO", "parameters": "(JsonSchemaBody jsonSchemaBody)", "modifiers": "public", "return": "", "signature": " JsonSchemaBodyDTO(JsonSchemaBody jsonSchemaBody)", "full_signature": "public  JsonSchemaBodyDTO(JsonSchemaBody jsonSchemaBody)", "class_method_signature": "JsonSchemaBodyDTO.JsonSchemaBodyDTO(JsonSchemaBody jsonSchemaBody)", "testcase": false, "constructor": true}, {"identifier": "JsonSchemaBodyDTO", "parameters": "(JsonSchemaBody jsonSchemaBody, Boolean not)", "modifiers": "public", "return": "", "signature": " JsonSchemaBodyDTO(JsonSchemaBody jsonSchemaBody, Boolean not)", "full_signature": "public  JsonSchemaBodyDTO(JsonSchemaBody jsonSchemaBody, Boolean not)", "class_method_signature": "JsonSchemaBodyDTO.JsonSchemaBodyDTO(JsonSchemaBody jsonSchemaBody, Boolean not)", "testcase": false, "constructor": true}, {"identifier": "getJson", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getJson()", "full_signature": "public String getJson()", "class_method_signature": "JsonSchemaBodyDTO.getJson()", "testcase": false, "constructor": false}, {"identifier": "getParameterStyles", "parameters": "()", "modifiers": "public", "return": "Map<String, ParameterStyle>", "signature": "Map<String, ParameterStyle> getParameterStyles()", "full_signature": "public Map<String, ParameterStyle> getParameterStyles()", "class_method_signature": "JsonSchemaBodyDTO.getParameterStyles()", "testcase": false, "constructor": false}, {"identifier": "buildObject", "parameters": "()", "modifiers": "public", "return": "JsonSchemaBody", "signature": "JsonSchemaBody buildObject()", "full_signature": "public JsonSchemaBody buildObject()", "class_method_signature": "JsonSchemaBodyDTO.buildObject()", "testcase": false, "constructor": false}], "file": "mockserver-core/src/main/java/org/mockserver/serialization/model/JsonSchemaBodyDTO.java"}, "focal_method": {"identifier": "buildObject", "parameters": "()", "modifiers": "public", "return": "JsonSchemaBody", "body": "public JsonSchemaBody buildObject() {\n        return (JsonSchemaBody) new JsonSchemaBody(getJson()).withParameterStyles(parameterStyles).withOptional(getOptional());\n    }", "signature": "JsonSchemaBody buildObject()", "full_signature": "public JsonSchemaBody buildObject()", "class_method_signature": "JsonSchemaBodyDTO.buildObject()", "testcase": false, "constructor": false, "invocations": ["withOptional", "withParameterStyles", "getJson", "getOptional"]}, "repository": {"repo_id": 8426406, "url": "https://github.com/mock-server/mockserver", "stars": 2440, "created": "2/26/2013 6:09:52 AM +00:00", "updates": "2020-01-27T21:08:35+00:00", "fork": "False", "license": "licensed"}}