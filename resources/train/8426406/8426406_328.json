{"test_class": {"identifier": "HeaderToJavaSerializerTest", "superclass": "", "interfaces": "", "fields": [], "file": "mockserver-core/src/test/java/org/mockserver/serialization/java/HeaderToJavaSerializerTest.java"}, "test_case": {"identifier": "shouldSerializeListOfNottedAndOptionalHeaders", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldSerializeListOfNottedAndOptionalHeaders() {\n        assertEquals(NEW_LINE +\n                \"        new Header(not(\\\"requestHeaderNameOne\\\"), not(\\\"requestHeaderValueOneOne\\\"), string(\\\"requestHeaderValueOneTwo\\\")),\" +\n                NEW_LINE +\n                \"        new Header(optional(\\\"requestHeaderNameTwo\\\"), not(\\\"requestHeaderValueTwo\\\"))\",\n            new HeaderToJavaSerializer().serializeAsJava(1, Arrays.asList(\n                new Header(not(\"requestHeaderNameOne\"), not(\"requestHeaderValueOneOne\"), string(\"requestHeaderValueOneTwo\")),\n                new Header(optional(\"requestHeaderNameTwo\"), not(\"requestHeaderValueTwo\"))\n            ))\n        );\n    }", "signature": "void shouldSerializeListOfNottedAndOptionalHeaders()", "full_signature": "@Test public void shouldSerializeListOfNottedAndOptionalHeaders()", "class_method_signature": "HeaderToJavaSerializerTest.shouldSerializeListOfNottedAndOptionalHeaders()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "serializeAsJava", "asList", "not", "not", "string", "optional", "not"]}, "focal_class": {"identifier": "HeaderToJavaSerializer", "superclass": "", "interfaces": "implements MultiValueToJavaSerializer<Header>", "fields": [], "methods": [{"identifier": "serialize", "parameters": "(int numberOfSpacesToIndent, Header header)", "modifiers": "@Override public", "return": "String", "signature": "String serialize(int numberOfSpacesToIndent, Header header)", "full_signature": "@Override public String serialize(int numberOfSpacesToIndent, Header header)", "class_method_signature": "HeaderToJavaSerializer.serialize(int numberOfSpacesToIndent, Header header)", "testcase": false, "constructor": false}, {"identifier": "serializeAsJava", "parameters": "(int numberOfSpacesToIndent, List<Header> headers)", "modifiers": "@Override public", "return": "String", "signature": "String serializeAsJava(int numberOfSpacesToIndent, List<Header> headers)", "full_signature": "@Override public String serializeAsJava(int numberOfSpacesToIndent, List<Header> headers)", "class_method_signature": "HeaderToJavaSerializer.serializeAsJava(int numberOfSpacesToIndent, List<Header> headers)", "testcase": false, "constructor": false}, {"identifier": "serializeAsJava", "parameters": "(int numberOfSpacesToIndent, Header... object)", "modifiers": "@Override public", "return": "String", "signature": "String serializeAsJava(int numberOfSpacesToIndent, Header... object)", "full_signature": "@Override public String serializeAsJava(int numberOfSpacesToIndent, Header... object)", "class_method_signature": "HeaderToJavaSerializer.serializeAsJava(int numberOfSpacesToIndent, Header... object)", "testcase": false, "constructor": false}], "file": "mockserver-core/src/main/java/org/mockserver/serialization/java/HeaderToJavaSerializer.java"}, "focal_method": {"identifier": "serializeAsJava", "parameters": "(int numberOfSpacesToIndent, List<Header> headers)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String serializeAsJava(int numberOfSpacesToIndent, List<Header> headers) {\n        StringBuilder output = new StringBuilder();\n        for (int i = 0; i < headers.size(); i++) {\n            output.append(serialize(numberOfSpacesToIndent, headers.get(i)));\n            if (i < (headers.size() - 1)) {\n                output.append(\",\");\n            }\n        }\n        return output.toString();\n    }", "signature": "String serializeAsJava(int numberOfSpacesToIndent, List<Header> headers)", "full_signature": "@Override public String serializeAsJava(int numberOfSpacesToIndent, List<Header> headers)", "class_method_signature": "HeaderToJavaSerializer.serializeAsJava(int numberOfSpacesToIndent, List<Header> headers)", "testcase": false, "constructor": false, "invocations": ["size", "append", "serialize", "get", "size", "append", "toString"]}, "repository": {"repo_id": 8426406, "url": "https://github.com/mock-server/mockserver", "stars": 2440, "created": "2/26/2013 6:09:52 AM +00:00", "updates": "2020-01-27T21:08:35+00:00", "fork": "False", "license": "licensed"}}