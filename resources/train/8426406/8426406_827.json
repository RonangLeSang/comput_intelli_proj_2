{"test_class": {"identifier": "SocksDetectorTest", "superclass": "", "interfaces": "", "fields": [], "file": "mockserver-netty/src/test/java/org/mockserver/netty/proxy/socks/SocksDetectorTest.java"}, "test_case": {"identifier": "failParsingSocks5RequestWithWrongProtocolVersion", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void failParsingSocks5RequestWithWrongProtocolVersion() {\n        ByteBuf msg = Unpooled.wrappedBuffer(new byte[]{\n            0x04, // protocol version\n            0x05, // amount of authentication methods\n            0x00, 0x01, 0x02, 0x00, 0x01 // authentication methods\n        });\n        assertFalse(SocksDetector.isSocks5(msg, msg.readableBytes()));\n    }", "signature": "void failParsingSocks5RequestWithWrongProtocolVersion()", "full_signature": "@Test public void failParsingSocks5RequestWithWrongProtocolVersion()", "class_method_signature": "SocksDetectorTest.failParsingSocks5RequestWithWrongProtocolVersion()", "testcase": true, "constructor": false, "invocations": ["wrappedBuffer", "assertFalse", "isSocks5", "readableBytes"]}, "focal_class": {"identifier": "SocksDetector", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "SocksDetector", "parameters": "()", "modifiers": "private", "return": "", "signature": " SocksDetector()", "full_signature": "private  SocksDetector()", "class_method_signature": "SocksDetector.SocksDetector()", "testcase": false, "constructor": true}, {"identifier": "isSocks4", "parameters": "(ByteBuf msg, int actualReadableBytes)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSocks4(ByteBuf msg, int actualReadableBytes)", "full_signature": "public static boolean isSocks4(ByteBuf msg, int actualReadableBytes)", "class_method_signature": "SocksDetector.isSocks4(ByteBuf msg, int actualReadableBytes)", "testcase": false, "constructor": false}, {"identifier": "consumeFields", "parameters": "(ByteBuf msg, int i)", "modifiers": "private static", "return": "int", "signature": "int consumeFields(ByteBuf msg, int i)", "full_signature": "private static int consumeFields(ByteBuf msg, int i)", "class_method_signature": "SocksDetector.consumeFields(ByteBuf msg, int i)", "testcase": false, "constructor": false}, {"identifier": "consumeUsername", "parameters": "(ByteBuf msg, int i)", "modifiers": "private static", "return": "int", "signature": "int consumeUsername(ByteBuf msg, int i)", "full_signature": "private static int consumeUsername(ByteBuf msg, int i)", "class_method_signature": "SocksDetector.consumeUsername(ByteBuf msg, int i)", "testcase": false, "constructor": false}, {"identifier": "consumeHostname", "parameters": "(ByteBuf msg, int i)", "modifiers": "private static", "return": "int", "signature": "int consumeHostname(ByteBuf msg, int i)", "full_signature": "private static int consumeHostname(ByteBuf msg, int i)", "class_method_signature": "SocksDetector.consumeHostname(ByteBuf msg, int i)", "testcase": false, "constructor": false}, {"identifier": "isSocks5", "parameters": "(ByteBuf msg, int actualReadableBytes)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSocks5(ByteBuf msg, int actualReadableBytes)", "full_signature": "public static boolean isSocks5(ByteBuf msg, int actualReadableBytes)", "class_method_signature": "SocksDetector.isSocks5(ByteBuf msg, int actualReadableBytes)", "testcase": false, "constructor": false}], "file": "mockserver-netty/src/main/java/org/mockserver/netty/proxy/socks/SocksDetector.java"}, "focal_method": {"identifier": "isSocks5", "parameters": "(ByteBuf msg, int actualReadableBytes)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isSocks5(ByteBuf msg, int actualReadableBytes) {\n        // first byte has to be 5\n        if (SocksVersion.valueOf(msg.getByte(msg.readerIndex())) != SocksVersion.SOCKS5) {\n            return false;\n        }\n\n        // then the amount of authentication methods\n        byte numberOfAuthenticationMethods = msg.getByte(msg.readerIndex() + 1);\n\n        // now the authentication methods\n        for (int i = 0; i < numberOfAuthenticationMethods; i++) {\n            Socks5AuthMethod authMethod = Socks5AuthMethod.valueOf(msg.getByte(msg.readerIndex() + 2 + i));\n            if (!(NO_AUTH.equals(authMethod) || PASSWORD.equals(authMethod) || GSSAPI.equals(authMethod))) {\n                return false;\n            }\n        }\n\n        // more methods than advertised, either broken request or not actually SOCKS5\n        // do this check last so that any waiting for data is already done\n        return actualReadableBytes == (2 + numberOfAuthenticationMethods);\n    }", "signature": "boolean isSocks5(ByteBuf msg, int actualReadableBytes)", "full_signature": "public static boolean isSocks5(ByteBuf msg, int actualReadableBytes)", "class_method_signature": "SocksDetector.isSocks5(ByteBuf msg, int actualReadableBytes)", "testcase": false, "constructor": false, "invocations": ["valueOf", "getByte", "readerIndex", "getByte", "readerIndex", "valueOf", "getByte", "readerIndex", "equals", "equals", "equals"]}, "repository": {"repo_id": 8426406, "url": "https://github.com/mock-server/mockserver", "stars": 2440, "created": "2/26/2013 6:09:52 AM +00:00", "updates": "2020-01-27T21:08:35+00:00", "fork": "False", "license": "licensed"}}