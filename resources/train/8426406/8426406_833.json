{"test_class": {"identifier": "DescriptionProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "final ObjectWriter objectWriter = ObjectMapperFactory.createObjectMapper(true,\n        new DashboardLogEntryDTOSerializer(),\n        new DescriptionSerializer(),\n        new ThrowableSerializer()\n    );", "modifier": "final", "type": "ObjectWriter", "declarator": "objectWriter = ObjectMapperFactory.createObjectMapper(true,\n        new DashboardLogEntryDTOSerializer(),\n        new DescriptionSerializer(),\n        new ThrowableSerializer()\n    )", "var_name": "objectWriter"}, {"original_string": "private final long epochTime = 1593582678216L;", "modifier": "private final", "type": "long", "declarator": "epochTime = 1593582678216L", "var_name": "epochTime"}, {"original_string": "private final String timeStamp = StringUtils.substringAfter(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSS\").format(new Date(epochTime)), \"-\");", "modifier": "private final", "type": "String", "declarator": "timeStamp = StringUtils.substringAfter(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSS\").format(new Date(epochTime)), \"-\")", "var_name": "timeStamp"}], "file": "mockserver-netty/src/test/java/org/mockserver/dashboard/serializers/DescriptionProcessorTest.java"}, "test_case": {"identifier": "shouldSerialiseMultipleHttpRequestAndOpenAPIDefinitions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldSerialiseMultipleHttpRequestAndOpenAPIDefinitions() throws JsonProcessingException {\n        // given\n        DescriptionProcessor descriptionProcessor = new DescriptionProcessor();\n        List<Description> logMessageDescriptions = Arrays.asList(\n            descriptionProcessor.description(\n                request()\n                    .withPath(\"somePathOne\")\n                    .withMethod(\"POST\")\n            ),\n            descriptionProcessor.description(\n                request()\n                    .withPath(\"veryLongPathThatHasASillyLength\")\n            ),\n            descriptionProcessor.description(\n                request()\n                    .withMethod(\"POST\")\n            ),\n            descriptionProcessor.description(\n                request()\n                    .withPath(\"somePathOne\")\n            ),\n            descriptionProcessor.description(\n                request()\n            ),\n            descriptionProcessor.description(\n                openAPI()\n                    .withSpecUrlOrPayload(\"---\" + NEW_LINE +\n                        \"openapi: 3.0.0\" + NEW_LINE +\n                        \"paths:\" + NEW_LINE +\n                        \"  \\\"/somePath\\\":\" + NEW_LINE +\n                        \"    get:\" + NEW_LINE +\n                        \"      operationId: someOperation\" + NEW_LINE)\n            ),\n            descriptionProcessor.description(\n                openAPI()\n                    .withSpecUrlOrPayload(\"org/mockserver/mock/openapi_petstore_example.json\")\n            ),\n            descriptionProcessor.description(\n                openAPI()\n                    .withSpecUrlOrPayload(\"org/mockserver/mock/openapi_petstore_example.json\")\n                    .withOperationId(\"someOtherOperationId\")\n            )\n        );\n\n        // when\n        String json = objectWriter.writeValueAsString(logMessageDescriptions);\n\n        // then\n        assertThat(json, is(\"[ \" +\n            \"\\\"POST                  somePathOne\\\", \" +\n            \"\\\"  veryLongPathThatHasASillyLength\\\", \" +\n            \"\\\"POST                             \\\", \" +\n            \"\\\"                      somePathOne\\\", \" +\n            \"\\\"                                 \\\", \" +\n            \"{\" + NEW_LINE +\n            \"  \\\"json\\\" : true,\" + NEW_LINE +\n            \"  \\\"object\\\" : {\" + NEW_LINE +\n            \"    \\\"openapi\\\" : \\\"3.0.0\\\",\" + NEW_LINE +\n            \"    \\\"servers\\\" : [ {\" + NEW_LINE +\n            \"      \\\"url\\\" : \\\"/\\\"\" + NEW_LINE +\n            \"    } ],\" + NEW_LINE +\n            \"    \\\"paths\\\" : {\" + NEW_LINE +\n            \"      \\\"/somePath\\\" : {\" + NEW_LINE +\n            \"        \\\"get\\\" : {\" + NEW_LINE +\n            \"          \\\"operationId\\\" : \\\"someOperation\\\"\" + NEW_LINE +\n            \"        }\" + NEW_LINE +\n            \"      }\" + NEW_LINE +\n            \"    },\" + NEW_LINE +\n            \"    \\\"components\\\" : { }\" + NEW_LINE +\n            \"  },\" + NEW_LINE +\n            \"  \\\"first\\\" : \\\"spec \\\",\" + NEW_LINE +\n            \"  \\\"second\\\" : \\\" \\\"\" + NEW_LINE +\n            \"}, \" +\n            \"\\\"openapi_petstore_example.json                      \\\", \" +\n            \"\\\"openapi_petstore_example.json  someOtherOperationId\\\" \" +\n            \"]\"));\n    }", "signature": "void shouldSerialiseMultipleHttpRequestAndOpenAPIDefinitions()", "full_signature": "@Test public void shouldSerialiseMultipleHttpRequestAndOpenAPIDefinitions()", "class_method_signature": "DescriptionProcessorTest.shouldSerialiseMultipleHttpRequestAndOpenAPIDefinitions()", "testcase": true, "constructor": false, "invocations": ["asList", "description", "withMethod", "withPath", "request", "description", "withPath", "request", "description", "withMethod", "request", "description", "withPath", "request", "description", "request", "description", "withSpecUrlOrPayload", "openAPI", "description", "withSpecUrlOrPayload", "openAPI", "description", "withOperationId", "withSpecUrlOrPayload", "openAPI", "writeValueAsString", "assertThat", "is"]}, "focal_class": {"identifier": "DescriptionProcessor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private int maxHttpRequestLength;", "modifier": "private", "type": "int", "declarator": "maxHttpRequestLength", "var_name": "maxHttpRequestLength"}, {"original_string": "private int maxOpenAPILength;", "modifier": "private", "type": "int", "declarator": "maxOpenAPILength", "var_name": "maxOpenAPILength"}, {"original_string": "private int maxOpenAPIObjectLength;", "modifier": "private", "type": "int", "declarator": "maxOpenAPIObjectLength", "var_name": "maxOpenAPIObjectLength"}, {"original_string": "private int maxLogEventLength;", "modifier": "private", "type": "int", "declarator": "maxLogEventLength", "var_name": "maxLogEventLength"}], "methods": [{"identifier": "getMaxHttpRequestLength", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxHttpRequestLength()", "full_signature": "public int getMaxHttpRequestLength()", "class_method_signature": "DescriptionProcessor.getMaxHttpRequestLength()", "testcase": false, "constructor": false}, {"identifier": "getMaxOpenAPILength", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxOpenAPILength()", "full_signature": "public int getMaxOpenAPILength()", "class_method_signature": "DescriptionProcessor.getMaxOpenAPILength()", "testcase": false, "constructor": false}, {"identifier": "getMaxOpenAPIObjectLength", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxOpenAPIObjectLength()", "full_signature": "public int getMaxOpenAPIObjectLength()", "class_method_signature": "DescriptionProcessor.getMaxOpenAPIObjectLength()", "testcase": false, "constructor": false}, {"identifier": "getMaxLogEventLength", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxLogEventLength()", "full_signature": "public int getMaxLogEventLength()", "class_method_signature": "DescriptionProcessor.getMaxLogEventLength()", "testcase": false, "constructor": false}, {"identifier": "description", "parameters": "(Object object)", "modifiers": "public", "return": "Description", "signature": "Description description(Object object)", "full_signature": "public Description description(Object object)", "class_method_signature": "DescriptionProcessor.description(Object object)", "testcase": false, "constructor": false}, {"identifier": "description", "parameters": "(Object object, String id)", "modifiers": "public", "return": "Description", "signature": "Description description(Object object, String id)", "full_signature": "public Description description(Object object, String id)", "class_method_signature": "DescriptionProcessor.description(Object object, String id)", "testcase": false, "constructor": false}], "file": "mockserver-netty/src/main/java/org/mockserver/dashboard/serializers/DescriptionProcessor.java"}, "focal_method": {"identifier": "description", "parameters": "(Object object)", "modifiers": "public", "return": "Description", "body": "public Description description(Object object) {\n        return description(object, null);\n    }", "signature": "Description description(Object object)", "full_signature": "public Description description(Object object)", "class_method_signature": "DescriptionProcessor.description(Object object)", "testcase": false, "constructor": false, "invocations": ["description"]}, "repository": {"repo_id": 8426406, "url": "https://github.com/mock-server/mockserver", "stars": 2440, "created": "2/26/2013 6:09:52 AM +00:00", "updates": "2020-01-27T21:08:35+00:00", "fork": "False", "license": "licensed"}}