{"test_class": {"identifier": "RegexBodyDTOTest", "superclass": "", "interfaces": "", "fields": [], "file": "mockserver-core/src/test/java/org/mockserver/serialization/model/RegexBodyDTOTest.java"}, "test_case": {"identifier": "shouldBuildCorrectObject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldBuildCorrectObject() {\n        // when\n        RegexBody regexBody = new RegexBodyDTO(new RegexBody(\"some_body\")).buildObject();\n\n        // then\n        assertThat(regexBody.getValue(), is(\"some_body\"));\n        assertThat(regexBody.getType(), is(Body.Type.REGEX));\n    }", "signature": "void shouldBuildCorrectObject()", "full_signature": "@Test public void shouldBuildCorrectObject()", "class_method_signature": "RegexBodyDTOTest.shouldBuildCorrectObject()", "testcase": true, "constructor": false, "invocations": ["buildObject", "assertThat", "getValue", "is", "assertThat", "getType", "is"]}, "focal_class": {"identifier": "RegexBodyDTO", "superclass": "extends BodyDTO", "interfaces": "", "fields": [{"original_string": "private final String regex;", "modifier": "private final", "type": "String", "declarator": "regex", "var_name": "regex"}], "methods": [{"identifier": "RegexBodyDTO", "parameters": "(RegexBody regexBody)", "modifiers": "public", "return": "", "signature": " RegexBodyDTO(RegexBody regexBody)", "full_signature": "public  RegexBodyDTO(RegexBody regexBody)", "class_method_signature": "RegexBodyDTO.RegexBodyDTO(RegexBody regexBody)", "testcase": false, "constructor": true}, {"identifier": "RegexBodyDTO", "parameters": "(RegexBody regexBody, Boolean not)", "modifiers": "public", "return": "", "signature": " RegexBodyDTO(RegexBody regexBody, Boolean not)", "full_signature": "public  RegexBodyDTO(RegexBody regexBody, Boolean not)", "class_method_signature": "RegexBodyDTO.RegexBodyDTO(RegexBody regexBody, Boolean not)", "testcase": false, "constructor": true}, {"identifier": "getRegex", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRegex()", "full_signature": "public String getRegex()", "class_method_signature": "RegexBodyDTO.getRegex()", "testcase": false, "constructor": false}, {"identifier": "buildObject", "parameters": "()", "modifiers": "public", "return": "RegexBody", "signature": "RegexBody buildObject()", "full_signature": "public RegexBody buildObject()", "class_method_signature": "RegexBodyDTO.buildObject()", "testcase": false, "constructor": false}], "file": "mockserver-core/src/main/java/org/mockserver/serialization/model/RegexBodyDTO.java"}, "focal_method": {"identifier": "buildObject", "parameters": "()", "modifiers": "public", "return": "RegexBody", "body": "public RegexBody buildObject() {\n        return (RegexBody) new RegexBody(getRegex()).withOptional(getOptional());\n    }", "signature": "RegexBody buildObject()", "full_signature": "public RegexBody buildObject()", "class_method_signature": "RegexBodyDTO.buildObject()", "testcase": false, "constructor": false, "invocations": ["withOptional", "getRegex", "getOptional"]}, "repository": {"repo_id": 8426406, "url": "https://github.com/mock-server/mockserver", "stars": 2440, "created": "2/26/2013 6:09:52 AM +00:00", "updates": "2020-01-27T21:08:35+00:00", "fork": "False", "license": "licensed"}}