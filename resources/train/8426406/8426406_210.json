{"test_class": {"identifier": "BinaryBodyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Base64Converter base64Converter = new Base64Converter();", "modifier": "private final", "type": "Base64Converter", "declarator": "base64Converter = new Base64Converter()", "var_name": "base64Converter"}], "file": "mockserver-core/src/test/java/org/mockserver/model/BinaryBodyTest.java"}, "test_case": {"identifier": "shouldReturnValuesSetInConstructor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnValuesSetInConstructor() {\n        // given\n        byte[] body = DatatypeConverter.parseBase64Binary(\"some_body\");\n\n        // when\n        BinaryBody binaryBody = new BinaryBody(body);\n\n        // then\n        assertThat(binaryBody.getValue(), is(body));\n        assertThat(binaryBody.getType(), is(Body.Type.BINARY));\n        assertThat(binaryBody.getCharset(null), nullValue());\n        assertThat(binaryBody.getCharset(StandardCharsets.UTF_8), is(StandardCharsets.UTF_8));\n        assertThat(binaryBody.getContentType(), nullValue());\n    }", "signature": "void shouldReturnValuesSetInConstructor()", "full_signature": "@Test public void shouldReturnValuesSetInConstructor()", "class_method_signature": "BinaryBodyTest.shouldReturnValuesSetInConstructor()", "testcase": true, "constructor": false, "invocations": ["parseBase64Binary", "assertThat", "getValue", "is", "assertThat", "getType", "is", "assertThat", "getCharset", "nullValue", "assertThat", "getCharset", "is", "assertThat", "getContentType", "nullValue"]}, "focal_class": {"identifier": "BinaryBody", "superclass": "extends BodyWithContentType<byte[]>", "interfaces": "", "fields": [{"original_string": "private int hashCode;", "modifier": "private", "type": "int", "declarator": "hashCode", "var_name": "hashCode"}, {"original_string": "private final byte[] bytes;", "modifier": "private final", "type": "byte[]", "declarator": "bytes", "var_name": "bytes"}, {"original_string": "private final Base64Converter base64Converter = new Base64Converter();", "modifier": "private final", "type": "Base64Converter", "declarator": "base64Converter = new Base64Converter()", "var_name": "base64Converter"}], "methods": [{"identifier": "BinaryBody", "parameters": "(byte[] bytes)", "modifiers": "public", "return": "", "signature": " BinaryBody(byte[] bytes)", "full_signature": "public  BinaryBody(byte[] bytes)", "class_method_signature": "BinaryBody.BinaryBody(byte[] bytes)", "testcase": false, "constructor": true}, {"identifier": "BinaryBody", "parameters": "(byte[] bytes, MediaType contentType)", "modifiers": "public", "return": "", "signature": " BinaryBody(byte[] bytes, MediaType contentType)", "full_signature": "public  BinaryBody(byte[] bytes, MediaType contentType)", "class_method_signature": "BinaryBody.BinaryBody(byte[] bytes, MediaType contentType)", "testcase": false, "constructor": true}, {"identifier": "binary", "parameters": "(byte[] body)", "modifiers": "public static", "return": "BinaryBody", "signature": "BinaryBody binary(byte[] body)", "full_signature": "public static BinaryBody binary(byte[] body)", "class_method_signature": "BinaryBody.binary(byte[] body)", "testcase": false, "constructor": false}, {"identifier": "binary", "parameters": "(byte[] body, MediaType contentType)", "modifiers": "public static", "return": "BinaryBody", "signature": "BinaryBody binary(byte[] body, MediaType contentType)", "full_signature": "public static BinaryBody binary(byte[] body, MediaType contentType)", "class_method_signature": "BinaryBody.binary(byte[] body, MediaType contentType)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getValue()", "full_signature": "public byte[] getValue()", "class_method_signature": "BinaryBody.getValue()", "testcase": false, "constructor": false}, {"identifier": "getRawBytes", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "byte[]", "signature": "byte[] getRawBytes()", "full_signature": "@JsonIgnore public byte[] getRawBytes()", "class_method_signature": "BinaryBody.getRawBytes()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BinaryBody.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "BinaryBody.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "BinaryBody.hashCode()", "testcase": false, "constructor": false}], "file": "mockserver-core/src/main/java/org/mockserver/model/BinaryBody.java"}, "focal_method": {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "byte[]", "body": "public byte[] getValue() {\n        return bytes;\n    }", "signature": "byte[] getValue()", "full_signature": "public byte[] getValue()", "class_method_signature": "BinaryBody.getValue()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 8426406, "url": "https://github.com/mock-server/mockserver", "stars": 2440, "created": "2/26/2013 6:09:52 AM +00:00", "updates": "2020-01-27T21:08:35+00:00", "fork": "False", "license": "licensed"}}