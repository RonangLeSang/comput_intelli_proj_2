{"test_class": {"identifier": "AuctionSearchTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Mockery context = new JUnit4Mockery();", "modifier": "", "type": "Mockery", "declarator": "context = new JUnit4Mockery()", "var_name": "context"}, {"original_string": "AuctionSearchConsumer consumer = context.mock(AuctionSearchConsumer.class, \"consumer\");", "modifier": "", "type": "AuctionSearchConsumer", "declarator": "consumer = context.mock(AuctionSearchConsumer.class, \"consumer\")", "var_name": "consumer"}, {"original_string": "Set<String> keywords = new HashSet<String>(Arrays.asList(\"some\", \"keywords\"));", "modifier": "", "type": "Set<String>", "declarator": "keywords = new HashSet<String>(Arrays.asList(\"some\", \"keywords\"))", "var_name": "keywords"}], "file": "flexibility/src/book/example/flexibility/ordering/AuctionSearchTest.java"}, "test_case": {"identifier": "performsSearchOnOneAuctionHouse_Sequence", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void performsSearchOnOneAuctionHouse_Sequence() {\n        StubAuctionHouse auctionHouse = new StubAuctionHouse();\n        final List<AuctionDescription> results = someResultsFrom(auctionHouse);\n\n        auctionHouse.willReturnSearchResults(keywords, results);\n\n        AuctionSearch search = new AuctionSearch(asList(auctionHouse), consumer);\n\n        context.checking(new Expectations() {{\n            Sequence events = context.sequence(\"events\");\n\n            oneOf(consumer).auctionSearchFound(results);\n            inSequence(events);\n            oneOf(consumer).auctionSearchFinished();\n            inSequence(events);\n        }});\n\n        search.search(keywords);\n    }", "signature": "void performsSearchOnOneAuctionHouse_Sequence()", "full_signature": "@Test public void performsSearchOnOneAuctionHouse_Sequence()", "class_method_signature": "AuctionSearchTest.performsSearchOnOneAuctionHouse_Sequence()", "testcase": true, "constructor": false, "invocations": ["someResultsFrom", "willReturnSearchResults", "asList", "checking", "sequence", "auctionSearchFound", "oneOf", "inSequence", "auctionSearchFinished", "oneOf", "inSequence", "search"]}, "focal_class": {"identifier": "AuctionSearch", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final List<? extends AuctionHouse> auctionHouses;", "modifier": "private final", "type": "List<? extends AuctionHouse>", "declarator": "auctionHouses", "var_name": "auctionHouses"}, {"original_string": "private final AuctionSearchConsumer consumer;", "modifier": "private final", "type": "AuctionSearchConsumer", "declarator": "consumer", "var_name": "consumer"}], "methods": [{"identifier": "AuctionSearch", "parameters": "(List<? extends AuctionHouse> auctionHouses, AuctionSearchConsumer consumer)", "modifiers": "public", "return": "", "signature": " AuctionSearch(List<? extends AuctionHouse> auctionHouses, AuctionSearchConsumer consumer)", "full_signature": "public  AuctionSearch(List<? extends AuctionHouse> auctionHouses, AuctionSearchConsumer consumer)", "class_method_signature": "AuctionSearch.AuctionSearch(List<? extends AuctionHouse> auctionHouses, AuctionSearchConsumer consumer)", "testcase": false, "constructor": true}, {"identifier": "search", "parameters": "(Set<String> keywords)", "modifiers": "public", "return": "void", "signature": "void search(Set<String> keywords)", "full_signature": "public void search(Set<String> keywords)", "class_method_signature": "AuctionSearch.search(Set<String> keywords)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(AuctionHouse auctionHouse, Set<String> keywords)", "modifiers": "private", "return": "void", "signature": "void search(AuctionHouse auctionHouse, Set<String> keywords)", "full_signature": "private void search(AuctionHouse auctionHouse, Set<String> keywords)", "class_method_signature": "AuctionSearch.search(AuctionHouse auctionHouse, Set<String> keywords)", "testcase": false, "constructor": false}], "file": "flexibility/src/book/example/flexibility/ordering/AuctionSearch.java"}, "focal_method": {"identifier": "search", "parameters": "(Set<String> keywords)", "modifiers": "public", "return": "void", "body": "public void search(Set<String> keywords) {\n        for (AuctionHouse auctionHouse : auctionHouses) {\n            search(auctionHouse, keywords);\n        }\n        consumer.auctionSearchFinished();\n    }", "signature": "void search(Set<String> keywords)", "full_signature": "public void search(Set<String> keywords)", "class_method_signature": "AuctionSearch.search(Set<String> keywords)", "testcase": false, "constructor": false, "invocations": ["search", "auctionSearchFinished"]}, "repository": {"repo_id": 457158, "url": "https://github.com/npryce/goos-code-examples", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 58, "size": 9103, "license": "licensed"}}