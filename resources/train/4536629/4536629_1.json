{"test_class": {"identifier": "ResourceServerTest", "superclass": "extends AbstractEntityTest", "interfaces": "", "fields": [{"original_string": "private ResourceServer resourceServer;", "modifier": "private", "type": "ResourceServer", "declarator": "resourceServer", "var_name": "resourceServer"}], "file": "apis-authorization-server/src/test/java/org/surfnet/oaaas/model/ResourceServerTest.java"}, "test_case": {"identifier": "validateLessThanMinimal", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void validateLessThanMinimal() {\n    resourceServer = new ResourceServer();\n    Set<ConstraintViolation<ResourceServer>> violations = validator.validate(resourceServer);\n    assertEquals(\"Empty resource server fails on 4 NotNull-fields\", 4, violations.size());\n  }", "signature": "void validateLessThanMinimal()", "full_signature": "@Test public void validateLessThanMinimal()", "class_method_signature": "ResourceServerTest.validateLessThanMinimal()", "testcase": true, "constructor": false, "invocations": ["validate", "assertEquals", "size"]}, "focal_class": {"identifier": "ResourceServer", "superclass": "extends AbstractEntity", "interfaces": "", "fields": [{"original_string": "public static final String SCOPE_PATTERN = \"^[^,]+$\";", "modifier": "public static final", "type": "String", "declarator": "SCOPE_PATTERN = \"^[^,]+$\"", "var_name": "SCOPE_PATTERN"}, {"original_string": "@Column(name = \"resourceServerName\")\n  @NotNull\n  private String name;", "modifier": "@Column(name = \"resourceServerName\")\n  @NotNull\n  private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "@Column(unique = true, name = \"resourceServerKey\")\n  @NotNull\n  private String key;", "modifier": "@Column(unique = true, name = \"resourceServerKey\")\n  @NotNull\n  private", "type": "String", "declarator": "key", "var_name": "key"}, {"original_string": "@Column\n  private String description;", "modifier": "@Column\n  private", "type": "String", "declarator": "description", "var_name": "description"}, {"original_string": "@ElementCollection(fetch= FetchType.EAGER)\n  @NotNull\n  private List<String> scopes = new ArrayList<String>();", "modifier": "@ElementCollection(fetch= FetchType.EAGER)\n  @NotNull\n  private", "type": "List<String>", "declarator": "scopes = new ArrayList<String>()", "var_name": "scopes"}, {"original_string": "@Column\n  @NotNull\n  private String secret;", "modifier": "@Column\n  @NotNull\n  private", "type": "String", "declarator": "secret", "var_name": "secret"}, {"original_string": "@Column(nullable = false, updatable = false)\n  @NotNull\n  private String contactName;", "modifier": "@Column(nullable = false, updatable = false)\n  @NotNull\n  private", "type": "String", "declarator": "contactName", "var_name": "contactName"}, {"original_string": "@Column\n  @JsonIgnore\n  private String owner;", "modifier": "@Column\n  @JsonIgnore\n  private", "type": "String", "declarator": "owner", "var_name": "owner"}, {"original_string": "@Column\n  @Email\n  private String contactEmail;", "modifier": "@Column\n  @Email\n  private", "type": "String", "declarator": "contactEmail", "var_name": "contactEmail"}, {"original_string": "@JsonIgnore\n  @OneToMany(fetch = FetchType.EAGER, cascade = {CascadeType.ALL}, orphanRemoval = true)\n  @JoinColumn(name = \"resourceserver_id\", nullable = false)\n  @Valid\n  private Set<Client> clients;", "modifier": "@JsonIgnore\n  @OneToMany(fetch = FetchType.EAGER, cascade = {CascadeType.ALL}, orphanRemoval = true)\n  @JoinColumn(name = \"resourceserver_id\", nullable = false)\n  @Valid\n  private", "type": "Set<Client>", "declarator": "clients", "var_name": "clients"}, {"original_string": "@Column\n  private String thumbNailUrl;", "modifier": "@Column\n  private", "type": "String", "declarator": "thumbNailUrl", "var_name": "thumbNailUrl"}], "methods": [{"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "ResourceServer.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void setName(String name)", "full_signature": "public void setName(String name)", "class_method_signature": "ResourceServer.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "getScopes", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getScopes()", "full_signature": "public List<String> getScopes()", "class_method_signature": "ResourceServer.getScopes()", "testcase": false, "constructor": false}, {"identifier": "setScopes", "parameters": "(List<String> scopes)", "modifiers": "public", "return": "void", "signature": "void setScopes(List<String> scopes)", "full_signature": "public void setScopes(List<String> scopes)", "class_method_signature": "ResourceServer.setScopes(List<String> scopes)", "testcase": false, "constructor": false}, {"identifier": "getSecret", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSecret()", "full_signature": "public String getSecret()", "class_method_signature": "ResourceServer.getSecret()", "testcase": false, "constructor": false}, {"identifier": "setSecret", "parameters": "(String secret)", "modifiers": "public", "return": "void", "signature": "void setSecret(String secret)", "full_signature": "public void setSecret(String secret)", "class_method_signature": "ResourceServer.setSecret(String secret)", "testcase": false, "constructor": false}, {"identifier": "getContactName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getContactName()", "full_signature": "public String getContactName()", "class_method_signature": "ResourceServer.getContactName()", "testcase": false, "constructor": false}, {"identifier": "setContactName", "parameters": "(String contactName)", "modifiers": "public", "return": "void", "signature": "void setContactName(String contactName)", "full_signature": "public void setContactName(String contactName)", "class_method_signature": "ResourceServer.setContactName(String contactName)", "testcase": false, "constructor": false}, {"identifier": "getContactEmail", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getContactEmail()", "full_signature": "public String getContactEmail()", "class_method_signature": "ResourceServer.getContactEmail()", "testcase": false, "constructor": false}, {"identifier": "setContactEmail", "parameters": "(String contactEmail)", "modifiers": "public", "return": "void", "signature": "void setContactEmail(String contactEmail)", "full_signature": "public void setContactEmail(String contactEmail)", "class_method_signature": "ResourceServer.setContactEmail(String contactEmail)", "testcase": false, "constructor": false}, {"identifier": "getThumbNailUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getThumbNailUrl()", "full_signature": "public String getThumbNailUrl()", "class_method_signature": "ResourceServer.getThumbNailUrl()", "testcase": false, "constructor": false}, {"identifier": "setThumbNailUrl", "parameters": "(String thumbNailUrl)", "modifiers": "public", "return": "void", "signature": "void setThumbNailUrl(String thumbNailUrl)", "full_signature": "public void setThumbNailUrl(String thumbNailUrl)", "class_method_signature": "ResourceServer.setThumbNailUrl(String thumbNailUrl)", "testcase": false, "constructor": false}, {"identifier": "setOwner", "parameters": "(String owner)", "modifiers": "public", "return": "void", "signature": "void setOwner(String owner)", "full_signature": "public void setOwner(String owner)", "class_method_signature": "ResourceServer.setOwner(String owner)", "testcase": false, "constructor": false}, {"identifier": "getOwner", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getOwner()", "full_signature": "public String getOwner()", "class_method_signature": "ResourceServer.getOwner()", "testcase": false, "constructor": false}, {"identifier": "getKey", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getKey()", "full_signature": "public String getKey()", "class_method_signature": "ResourceServer.getKey()", "testcase": false, "constructor": false}, {"identifier": "setKey", "parameters": "(String key)", "modifiers": "public", "return": "void", "signature": "void setKey(String key)", "full_signature": "public void setKey(String key)", "class_method_signature": "ResourceServer.setKey(String key)", "testcase": false, "constructor": false}, {"identifier": "getClients", "parameters": "()", "modifiers": "public", "return": "Set<Client>", "signature": "Set<Client> getClients()", "full_signature": "public Set<Client> getClients()", "class_method_signature": "ResourceServer.getClients()", "testcase": false, "constructor": false}, {"identifier": "setClients", "parameters": "(Set<Client> clients)", "modifiers": "public", "return": "void", "signature": "void setClients(Set<Client> clients)", "full_signature": "public void setClients(Set<Client> clients)", "class_method_signature": "ResourceServer.setClients(Set<Client> clients)", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDescription()", "full_signature": "public String getDescription()", "class_method_signature": "ResourceServer.getDescription()", "testcase": false, "constructor": false}, {"identifier": "setDescription", "parameters": "(String description)", "modifiers": "public", "return": "void", "signature": "void setDescription(String description)", "full_signature": "public void setDescription(String description)", "class_method_signature": "ResourceServer.setDescription(String description)", "testcase": false, "constructor": false}, {"identifier": "containsClient", "parameters": "(Client client)", "modifiers": "public", "return": "boolean", "signature": "boolean containsClient(Client client)", "full_signature": "public boolean containsClient(Client client)", "class_method_signature": "ResourceServer.containsClient(Client client)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(ConstraintValidatorContext context)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean validate(ConstraintValidatorContext context)", "full_signature": "@Override public boolean validate(ConstraintValidatorContext context)", "class_method_signature": "ResourceServer.validate(ConstraintValidatorContext context)", "testcase": false, "constructor": false}], "file": "apis-authorization-server/src/main/java/org/surfnet/oaaas/model/ResourceServer.java"}, "focal_method": {"identifier": "validate", "parameters": "(ConstraintValidatorContext context)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean validate(ConstraintValidatorContext context) {\n    boolean isValid = true;\n\n    for (String scope : scopes) {\n      if (!scope.matches(ResourceServer.SCOPE_PATTERN)) {\n        violation(context, \"Scope '\" + scope + \"' contains invalid characters\");\n        isValid = false;\n      }\n    }\n    return isValid;\n  }", "signature": "boolean validate(ConstraintValidatorContext context)", "full_signature": "@Override public boolean validate(ConstraintValidatorContext context)", "class_method_signature": "ResourceServer.validate(ConstraintValidatorContext context)", "testcase": false, "constructor": false, "invocations": ["matches", "violation"]}, "repository": {"repo_id": 4536629, "url": "https://github.com/OAuth-Apis/apis", "language": "Java", "is_fork": false, "fork_count": 310, "stargazer_count": 591, "size": 5505, "license": "licensed"}}