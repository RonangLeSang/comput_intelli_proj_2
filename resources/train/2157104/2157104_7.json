{"test_class": {"identifier": "FormatadorCodigoTest", "superclass": "", "interfaces": "", "fields": [], "file": "ide/src/test/java/br/univali/ps/ui/editor/formatador/FormatadorCodigoTest.java"}, "test_case": {"identifier": "testEnquanto", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEnquanto() throws Exception\n    {\n        String codigo = \"programa {                             \"\n                + \"     funcao inicio() {                        \"\n                + \"           inteiro x = 0                       \"\n                + \"           enquanto (x < 10) {                 \"\n                + \"                enquanto (x < 10)             \"\n                + \"                     escreva(\\\"teste\\\")          \"\n                + \"                x++                             \"\n                + \"           }                                   \"\n                + \"     }                                        \"\n                + \"}                                            \";\n\n        String esperado = \"programa\\n\"\n                + \"{\\n\"\n                + \"\\n\"\n                + \"     funcao inicio()\\n\"\n                + \"     {\\n\"\n                + \"          inteiro x = 0\\n\"\n                + \"          enquanto (x < 10) {\\n\"\n                + \"               enquanto (x < 10) {\\n\"\n                + \"                    escreva(\\\"teste\\\")\\n\"\n                + \"               }\\n\"\n                + \"               x = x + 1\\n\"\n                + \"          }\\n\"\n                + \"     }\\n\"\n                + \"}\";\n\n        String formatado = FormatadorCodigo.formata(codigo);\n        //System.out.println(formatado);\n        formatado = formatado.replaceAll(\"\\r\", \"\"); // necess\u00e1rio para evitar erro na compara\u00e7\u00e3o das strings\n\n        assertEquals(\"Strings diferentes!\", esperado, formatado);\n    }", "signature": "void testEnquanto()", "full_signature": "@Test public void testEnquanto()", "class_method_signature": "FormatadorCodigoTest.testEnquanto()", "testcase": true, "constructor": false, "invocations": ["formata", "replaceAll", "assertEquals"]}, "focal_class": {"identifier": "FormatadorCodigo", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(FormatadorCodigo.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(FormatadorCodigo.class.getName())", "var_name": "LOGGER"}], "methods": [{"identifier": "formata", "parameters": "(String codigo)", "modifiers": "public static", "return": "String", "signature": "String formata(String codigo)", "full_signature": "public static String formata(String codigo)", "class_method_signature": "FormatadorCodigo.formata(String codigo)", "testcase": false, "constructor": false}], "file": "ide/src/main/java/br/univali/ps/ui/editor/formatador/FormatadorCodigo.java"}, "focal_method": {"identifier": "formata", "parameters": "(String codigo)", "modifiers": "public static", "return": "String", "body": "public static String formata(String codigo) throws ErroCompilacao\n    {\n        Programa programa = Portugol.compilarParaAnalise(codigo);\n        ASAPrograma asa = programa.getArvoreSintaticaAbstrata();\n\n        StringWriter stringWriter = new StringWriter();\n\n        try {\n\n            GeradorCodigoPortugol gerador = new GeradorCodigoPortugol(asa, new PrintWriter(stringWriter));\n            gerador.visitar(asa);\n\n        } catch (ExcecaoVisitaASA ex) {\n            LOGGER.log(Level.SEVERE, null, ex);\n        }\n\n        return stringWriter.toString();\n    }", "signature": "String formata(String codigo)", "full_signature": "public static String formata(String codigo)", "class_method_signature": "FormatadorCodigo.formata(String codigo)", "testcase": false, "constructor": false, "invocations": ["compilarParaAnalise", "getArvoreSintaticaAbstrata", "visitar", "log", "toString"]}, "repository": {"repo_id": 2157104, "url": "https://github.com/UNIVALI-LITE/Portugol-Studio", "language": "Java", "is_fork": false, "fork_count": 131, "stargazer_count": 252, "size": 77733, "license": "licensed"}}