{"test_class": {"identifier": "FilesResultMapperTest", "superclass": "", "interfaces": "", "fields": [], "file": "data/src/test/java/org/akvo/flow/data/entity/FilesResultMapperTest.java"}, "test_case": {"identifier": "transformShouldReturnBothMissingIfApiMissingUnKnownValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void transformShouldReturnBothMissingIfApiMissingUnKnownValues() {\n        ApiFilesResult apiFilesResult = spy(new ApiFilesResult());\n        when(apiFilesResult.getMissingFiles()).thenReturn(Collections.singletonList(\"123\"));\n        when(apiFilesResult.getMissingUnknown()).thenReturn(Collections.singletonList(\"1234\"));\n        when(apiFilesResult.getDeletedForms()).thenReturn(Collections.emptyList());\n\n        FilteredFilesResult result = new FilesResultMapper().transform(apiFilesResult);\n\n        assertEquals(2, result.getMissingFiles().size());\n        Iterator<String> iterator = result.getMissingFiles().iterator();\n        assertEquals(\"123\", iterator.next());\n        assertEquals(\"1234\", iterator.next());\n    }", "signature": "void transformShouldReturnBothMissingIfApiMissingUnKnownValues()", "full_signature": "@Test public void transformShouldReturnBothMissingIfApiMissingUnKnownValues()", "class_method_signature": "FilesResultMapperTest.transformShouldReturnBothMissingIfApiMissingUnKnownValues()", "testcase": true, "constructor": false, "invocations": ["spy", "thenReturn", "when", "getMissingFiles", "singletonList", "thenReturn", "when", "getMissingUnknown", "singletonList", "thenReturn", "when", "getDeletedForms", "emptyList", "transform", "assertEquals", "size", "getMissingFiles", "iterator", "getMissingFiles", "assertEquals", "next", "assertEquals", "next"]}, "focal_class": {"identifier": "FilesResultMapper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "FilesResultMapper", "parameters": "()", "modifiers": "@Inject public", "return": "", "signature": " FilesResultMapper()", "full_signature": "@Inject public  FilesResultMapper()", "class_method_signature": "FilesResultMapper.FilesResultMapper()", "testcase": false, "constructor": true}, {"identifier": "transform", "parameters": "(@Nullable ApiFilesResult apiFilesResult)", "modifiers": "@NonNull public", "return": "FilteredFilesResult", "signature": "FilteredFilesResult transform(@Nullable ApiFilesResult apiFilesResult)", "full_signature": "@NonNull public FilteredFilesResult transform(@Nullable ApiFilesResult apiFilesResult)", "class_method_signature": "FilesResultMapper.transform(@Nullable ApiFilesResult apiFilesResult)", "testcase": false, "constructor": false}, {"identifier": "getFilenameFromPath", "parameters": "(@Nullable String filePath)", "modifiers": "@VisibleForTesting @Nullable", "return": "String", "signature": "String getFilenameFromPath(@Nullable String filePath)", "full_signature": "@VisibleForTesting @Nullable String getFilenameFromPath(@Nullable String filePath)", "class_method_signature": "FilesResultMapper.getFilenameFromPath(@Nullable String filePath)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "(@Nullable String string)", "modifiers": "private", "return": "boolean", "signature": "boolean isEmpty(@Nullable String string)", "full_signature": "private boolean isEmpty(@Nullable String string)", "class_method_signature": "FilesResultMapper.isEmpty(@Nullable String string)", "testcase": false, "constructor": false}], "file": "data/src/main/java/org/akvo/flow/data/entity/FilesResultMapper.java"}, "focal_method": {"identifier": "transform", "parameters": "(@Nullable ApiFilesResult apiFilesResult)", "modifiers": "@NonNull public", "return": "FilteredFilesResult", "body": "@NonNull\n    public FilteredFilesResult transform(@Nullable ApiFilesResult apiFilesResult) {\n        if (apiFilesResult == null) {\n            return new FilteredFilesResult(Collections.<String>emptySet(),\n                    Collections.<String>emptySet());\n        }\n        List<String> missingFilesRaw = new ArrayList<>();\n        if (apiFilesResult.getMissingFiles() != null ) {\n            missingFilesRaw.addAll(apiFilesResult.getMissingFiles());\n        }\n        if (apiFilesResult.getMissingUnknown() != null) {\n            missingFilesRaw.addAll(apiFilesResult.getMissingUnknown());\n        }\n        Set<String> missingFilenames = new HashSet<>();\n        for (String f: missingFilesRaw) {\n            String filename = getFilenameFromPath(f);\n            if (!isEmpty(filename)) {\n                 missingFilenames.add(filename);\n            }\n        }\n        Set<String> deletedForms = new HashSet<>();\n        if (apiFilesResult.getDeletedForms() != null) {\n            deletedForms.addAll(apiFilesResult.getDeletedForms());\n        }\n        return new FilteredFilesResult(missingFilenames, deletedForms);\n    }", "signature": "FilteredFilesResult transform(@Nullable ApiFilesResult apiFilesResult)", "full_signature": "@NonNull public FilteredFilesResult transform(@Nullable ApiFilesResult apiFilesResult)", "class_method_signature": "FilesResultMapper.transform(@Nullable ApiFilesResult apiFilesResult)", "testcase": false, "constructor": false, "invocations": ["emptySet", "emptySet", "getMissingFiles", "addAll", "getMissingFiles", "getMissingUnknown", "addAll", "getMissingUnknown", "getFilenameFromPath", "isEmpty", "add", "getDeletedForms", "addAll", "getDeletedForms"]}, "repository": {"repo_id": 5380818, "url": "https://github.com/akvo/akvo-flow-mobile", "stars": 15, "created": "8/11/2012 3:36:16 PM +00:00", "updates": "2020-01-20T15:04:47+00:00", "fork": "False", "license": "licensed"}}