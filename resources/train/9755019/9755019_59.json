{"test_class": {"identifier": "CodeChangeProbabilityCalculatorFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  private CodeChangeProbabilityCalculatorFactory codeChangeProbabilityCalculatorFactory;", "modifier": "@Autowired\n  private", "type": "CodeChangeProbabilityCalculatorFactory", "declarator": "codeChangeProbabilityCalculatorFactory", "var_name": "codeChangeProbabilityCalculatorFactory"}], "file": "quality-assessment/src/test/java/org/codeqinvest/quality/analysis/CodeChangeProbabilityCalculatorFactoryTest.java"}, "test_case": {"identifier": "createCalculatorForWeightedSetting", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void createCalculatorForWeightedSetting() {\n    assertThat(codeChangeProbabilityCalculatorFactory.create(CodeChangeSettings.weightedSetting(0)))\n        .isInstanceOf(WeightedCodeChangeProbabilityCalculator.class);\n  }", "signature": "void createCalculatorForWeightedSetting()", "full_signature": "@Test public void createCalculatorForWeightedSetting()", "class_method_signature": "CodeChangeProbabilityCalculatorFactoryTest.createCalculatorForWeightedSetting()", "testcase": true, "constructor": false, "invocations": ["isInstanceOf", "assertThat", "create", "weightedSetting"]}, "focal_class": {"identifier": "CodeChangeProbabilityCalculatorFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Getter\n  private final CodeChurnCalculatorFactory codeChurnCalculatorFactory;", "modifier": "@Getter\n  private final", "type": "CodeChurnCalculatorFactory", "declarator": "codeChurnCalculatorFactory", "var_name": "codeChurnCalculatorFactory"}], "methods": [{"identifier": "CodeChangeProbabilityCalculatorFactory", "parameters": "(CodeChurnCalculatorFactory codeChurnCalculatorFactory)", "modifiers": "@Autowired", "return": "", "signature": " CodeChangeProbabilityCalculatorFactory(CodeChurnCalculatorFactory codeChurnCalculatorFactory)", "full_signature": "@Autowired  CodeChangeProbabilityCalculatorFactory(CodeChurnCalculatorFactory codeChurnCalculatorFactory)", "class_method_signature": "CodeChangeProbabilityCalculatorFactory.CodeChangeProbabilityCalculatorFactory(CodeChurnCalculatorFactory codeChurnCalculatorFactory)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(CodeChangeSettings codeChangeSettings)", "modifiers": "", "return": "CodeChangeProbabilityCalculator", "signature": "CodeChangeProbabilityCalculator create(CodeChangeSettings codeChangeSettings)", "full_signature": " CodeChangeProbabilityCalculator create(CodeChangeSettings codeChangeSettings)", "class_method_signature": "CodeChangeProbabilityCalculatorFactory.create(CodeChangeSettings codeChangeSettings)", "testcase": false, "constructor": false}], "file": "quality-assessment/src/main/java/org/codeqinvest/quality/analysis/CodeChangeProbabilityCalculatorFactory.java"}, "focal_method": {"identifier": "create", "parameters": "(CodeChangeSettings codeChangeSettings)", "modifiers": "", "return": "CodeChangeProbabilityCalculator", "body": "CodeChangeProbabilityCalculator create(CodeChangeSettings codeChangeSettings) {\n    if (codeChangeSettings.getMethod() == SupportedCodeChangeProbabilityMethod.WEIGHTED.getId()) {\n      return new WeightedCodeChangeProbabilityCalculator(codeChurnCalculatorFactory, LocalDate.now(), codeChangeSettings.getDays());\n    } else if (codeChangeSettings.getMethod() == SupportedCodeChangeProbabilityMethod.COMMIT_BASED.getId()) {\n      return new CommitBasedCodeChangeProbabilityCalculator(codeChurnCalculatorFactory, codeChangeSettings.getNumberOfCommits());\n    } else {\n      return new DefaultCodeChangeProbabilityCalculator(codeChurnCalculatorFactory, LocalDate.now(), codeChangeSettings.getDays());\n    }\n  }", "signature": "CodeChangeProbabilityCalculator create(CodeChangeSettings codeChangeSettings)", "full_signature": " CodeChangeProbabilityCalculator create(CodeChangeSettings codeChangeSettings)", "class_method_signature": "CodeChangeProbabilityCalculatorFactory.create(CodeChangeSettings codeChangeSettings)", "testcase": false, "constructor": false, "invocations": ["getMethod", "getId", "now", "getDays", "getMethod", "getId", "getNumberOfCommits", "now", "getDays"]}, "repository": {"repo_id": 9755019, "url": "https://github.com/CodeQInvest/codeq-invest", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 25, "size": 1829, "license": "licensed"}}