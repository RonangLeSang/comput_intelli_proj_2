{"test_class": {"identifier": "SonarConnectionCheckerServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SonarConnectionCheckerService sonarConnectionCheckerService;", "modifier": "private", "type": "SonarConnectionCheckerService", "declarator": "sonarConnectionCheckerService", "var_name": "sonarConnectionCheckerService"}], "file": "metrics-collector/src/test/java/org/codeqinvest/sonar/SonarConnectionCheckerServiceTest.java"}, "test_case": {"identifier": "notReachableWhenUrlOfConnectionSettingsIsEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void notReachableWhenUrlOfConnectionSettingsIsEmpty() {\n    assertThat(sonarConnectionCheckerService.isReachable(new SonarConnectionSettings(\"\"))).isFalse();\n  }", "signature": "void notReachableWhenUrlOfConnectionSettingsIsEmpty()", "full_signature": "@Test public void notReachableWhenUrlOfConnectionSettingsIsEmpty()", "class_method_signature": "SonarConnectionCheckerServiceTest.notReachableWhenUrlOfConnectionSettingsIsEmpty()", "testcase": true, "constructor": false, "invocations": ["isFalse", "assertThat", "isReachable"]}, "focal_class": {"identifier": "SonarConnectionCheckerService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int OK = 200;", "modifier": "private static final", "type": "int", "declarator": "OK = 200", "var_name": "OK"}], "methods": [{"identifier": "isReachable", "parameters": "(SonarConnectionSettings connectionSettings)", "modifiers": "public", "return": "boolean", "signature": "boolean isReachable(SonarConnectionSettings connectionSettings)", "full_signature": "public boolean isReachable(SonarConnectionSettings connectionSettings)", "class_method_signature": "SonarConnectionCheckerService.isReachable(SonarConnectionSettings connectionSettings)", "testcase": false, "constructor": false}], "file": "metrics-collector/src/main/java/org/codeqinvest/sonar/SonarConnectionCheckerService.java"}, "focal_method": {"identifier": "isReachable", "parameters": "(SonarConnectionSettings connectionSettings)", "modifiers": "public", "return": "boolean", "body": "public boolean isReachable(SonarConnectionSettings connectionSettings) {\n    if (connectionSettings == null || Strings.isNullOrEmpty(connectionSettings.getUrl())) {\n      return false;\n    }\n\n    HttpClient4Connector connector = new HttpClient4Connector(connectionSettings.asHostObject());\n    try {\n      return connector.getHttpClient()\n          .execute(new HttpGet(connectionSettings.getUrl() + \"/api/metrics\")).getStatusLine().getStatusCode() == OK;\n    } catch (IOException e) {\n      log.info(\"Sonar is not reachable during connection check.\", e);\n      return false;\n    }\n  }", "signature": "boolean isReachable(SonarConnectionSettings connectionSettings)", "full_signature": "public boolean isReachable(SonarConnectionSettings connectionSettings)", "class_method_signature": "SonarConnectionCheckerService.isReachable(SonarConnectionSettings connectionSettings)", "testcase": false, "constructor": false, "invocations": ["isNullOrEmpty", "getUrl", "asHostObject", "getStatusCode", "getStatusLine", "execute", "getHttpClient", "getUrl", "info"]}, "repository": {"repo_id": 9755019, "url": "https://github.com/CodeQInvest/codeq-invest", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 25, "size": 1829, "license": "licensed"}}