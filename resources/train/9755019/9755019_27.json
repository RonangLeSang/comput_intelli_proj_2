{"test_class": {"identifier": "SvnServerAvailabilityCheckerServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SvnServerAvailabilityCheckerService availabilityCheckerService;", "modifier": "private", "type": "SvnServerAvailabilityCheckerService", "declarator": "availabilityCheckerService", "var_name": "availabilityCheckerService"}], "file": "code-changes-analyzer/src/test/java/org/codeqinvest/codechanges/scm/svn/SvnServerAvailabilityCheckerServiceTest.java"}, "test_case": {"identifier": "notAvailableWhenUrlOfScmSettingsIsNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void notAvailableWhenUrlOfScmSettingsIsNull() {\n    assertThat(availabilityCheckerService.isAvailable(new ScmConnectionSettings(null))).isFalse();\n  }", "signature": "void notAvailableWhenUrlOfScmSettingsIsNull()", "full_signature": "@Test public void notAvailableWhenUrlOfScmSettingsIsNull()", "class_method_signature": "SvnServerAvailabilityCheckerServiceTest.notAvailableWhenUrlOfScmSettingsIsNull()", "testcase": true, "constructor": false, "invocations": ["isFalse", "assertThat", "isAvailable"]}, "focal_class": {"identifier": "SvnServerAvailabilityCheckerService", "superclass": "", "interfaces": "implements ScmAvailabilityCheckerService", "fields": [], "methods": [{"identifier": "isAvailable", "parameters": "(ScmConnectionSettings connectionSettings)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAvailable(ScmConnectionSettings connectionSettings)", "full_signature": "@Override public boolean isAvailable(ScmConnectionSettings connectionSettings)", "class_method_signature": "SvnServerAvailabilityCheckerService.isAvailable(ScmConnectionSettings connectionSettings)", "testcase": false, "constructor": false}], "file": "code-changes-analyzer/src/main/java/org/codeqinvest/codechanges/scm/svn/SvnServerAvailabilityCheckerService.java"}, "focal_method": {"identifier": "isAvailable", "parameters": "(ScmConnectionSettings connectionSettings)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean isAvailable(ScmConnectionSettings connectionSettings) {\n    if (connectionSettings == null || Strings.isNullOrEmpty(connectionSettings.getUrl())) {\n      return false;\n    }\n\n    try {\n      SvnRepositoryFactory.create(connectionSettings).testConnection();\n      log.info(\"The given svn server is reachable with connection settings: {}\", connectionSettings);\n      return true;\n    } catch (SVNException e) {\n      log.warn(\"The given svn server is not reachable during connection check.\", e);\n      return false;\n    }\n  }", "signature": "boolean isAvailable(ScmConnectionSettings connectionSettings)", "full_signature": "@Override public boolean isAvailable(ScmConnectionSettings connectionSettings)", "class_method_signature": "SvnServerAvailabilityCheckerService.isAvailable(ScmConnectionSettings connectionSettings)", "testcase": false, "constructor": false, "invocations": ["isNullOrEmpty", "getUrl", "testConnection", "create", "info", "warn"]}, "repository": {"repo_id": 9755019, "url": "https://github.com/CodeQInvest/codeq-invest", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 25, "size": 1829, "license": "licensed"}}