{"test_class": {"identifier": "RegexRoleMapperTest", "superclass": "", "interfaces": "", "fields": [], "file": "auth/server/base/src/test/java/org/wildfly/security/authz/RegexRoleMapperTest.java"}, "test_case": {"identifier": "testRegexMapperEmailDoNotKeep", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRegexMapperEmailDoNotKeep() {\n        Roles roles = createRoles(\"user@gmail.com\", \"joe\", \"user@customerApp.com\");\n        RegexRoleMapper roleMapper = new RegexRoleMapper.Builder().setPattern(\".*@([a-zA-Z]*)\\\\..*\").setReplacement(\"$1-role\").setKeepNonMapped(false).build();\n        Roles mappedRoles = roleMapper.mapRoles(roles);\n\n        assertFalse(mappedRoles.contains(\"user@gmail.com\"));\n        assertFalse(mappedRoles.contains(\"user@customerApp.com\"));\n        assertTrue(mappedRoles.contains(\"gmail-role\"));\n        assertTrue(mappedRoles.contains(\"customerApp-role\"));\n        assertFalse(mappedRoles.contains(\"joe\"));\n\n        Iterator<String> iterator = mappedRoles.iterator();\n        int count = 0;\n        while (iterator.hasNext()) {\n            iterator.next();\n            count++;\n        }\n        assertEquals(count, 2);\n    }", "signature": "void testRegexMapperEmailDoNotKeep()", "full_signature": "@Test public void testRegexMapperEmailDoNotKeep()", "class_method_signature": "RegexRoleMapperTest.testRegexMapperEmailDoNotKeep()", "testcase": true, "constructor": false, "invocations": ["createRoles", "build", "setKeepNonMapped", "setReplacement", "setPattern", "mapRoles", "assertFalse", "contains", "assertFalse", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertFalse", "contains", "iterator", "hasNext", "next", "assertEquals"]}, "focal_class": {"identifier": "RegexRoleMapper", "superclass": "", "interfaces": "implements RoleMapper", "fields": [{"original_string": "private Pattern pattern;", "modifier": "private", "type": "Pattern", "declarator": "pattern", "var_name": "pattern"}, {"original_string": "private String replacement;", "modifier": "private", "type": "String", "declarator": "replacement", "var_name": "replacement"}, {"original_string": "private boolean keepNonMapped;", "modifier": "private", "type": "boolean", "declarator": "keepNonMapped", "var_name": "keepNonMapped"}, {"original_string": "private boolean replaceAll;", "modifier": "private", "type": "boolean", "declarator": "replaceAll", "var_name": "replaceAll"}], "methods": [{"identifier": "RegexRoleMapper", "parameters": "(Builder builder)", "modifiers": "private", "return": "", "signature": " RegexRoleMapper(Builder builder)", "full_signature": "private  RegexRoleMapper(Builder builder)", "class_method_signature": "RegexRoleMapper.RegexRoleMapper(Builder builder)", "testcase": false, "constructor": true}, {"identifier": "mapRoles", "parameters": "(Roles rolesToMap)", "modifiers": "@Override public", "return": "Roles", "signature": "Roles mapRoles(Roles rolesToMap)", "full_signature": "@Override public Roles mapRoles(Roles rolesToMap)", "class_method_signature": "RegexRoleMapper.mapRoles(Roles rolesToMap)", "testcase": false, "constructor": false}], "file": "auth/server/base/src/main/java/org/wildfly/security/authz/RegexRoleMapper.java"}, "focal_method": {"identifier": "mapRoles", "parameters": "(Roles rolesToMap)", "modifiers": "@Override public", "return": "Roles", "body": "@Override\n    public Roles mapRoles(Roles rolesToMap) {\n        return new RegexRoles(rolesToMap, this.pattern, this.replacement, this.keepNonMapped, this.replaceAll);\n    }", "signature": "Roles mapRoles(Roles rolesToMap)", "full_signature": "@Override public Roles mapRoles(Roles rolesToMap)", "class_method_signature": "RegexRoleMapper.mapRoles(Roles rolesToMap)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 13660977, "url": "https://github.com/wildfly-security/wildfly-elytron", "stars": 38, "created": "10/17/2013 8:57:07 PM +00:00", "updates": "2020-01-27T16:58:02+00:00", "fork": "False", "license": "licensed"}}