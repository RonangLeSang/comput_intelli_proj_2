{"test_class": {"identifier": "RunlistElementTest", "superclass": "extends DefaultEntityTestBase<RunlistElement>", "interfaces": "", "fields": [], "file": "model/src/test/java/com/abiquo/server/core/cloud/chef/RunlistElementTest.java"}, "test_case": {"identifier": "testIsCookBook", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsCookBook()\n    {\n        RunlistElement recipe = createUniqueEntity();\n\n        recipe.setName(\"recipe[]\");\n        assertFalse(recipe.isCookbook());\n\n        recipe.setName(\"recipe[:]\");\n        assertTrue(recipe.isCookbook());\n\n        recipe.setName(\"recipe[testcookbook]\");\n        assertTrue(recipe.isCookbook());\n\n        recipe.setName(\"recipe[::]\");\n        assertFalse(recipe.isCookbook());\n\n        recipe.setName(\"recipe[test::recipe]\");\n        assertFalse(recipe.isCookbook());\n    }", "signature": "void testIsCookBook()", "full_signature": "@Test public void testIsCookBook()", "class_method_signature": "RunlistElementTest.testIsCookBook()", "testcase": true, "constructor": false, "invocations": ["createUniqueEntity", "setName", "assertFalse", "isCookbook", "setName", "assertTrue", "isCookbook", "setName", "assertTrue", "isCookbook", "setName", "assertFalse", "isCookbook", "setName", "assertFalse", "isCookbook"]}, "focal_class": {"identifier": "RunlistElement", "superclass": "extends DefaultEntityBase", "interfaces": "", "fields": [{"original_string": "public static final String TABLE_NAME = \"chef_runlist\";", "modifier": "public static final", "type": "String", "declarator": "TABLE_NAME = \"chef_runlist\"", "var_name": "TABLE_NAME"}, {"original_string": "private final static String ID_COLUMN = \"id\";", "modifier": "private final static", "type": "String", "declarator": "ID_COLUMN = \"id\"", "var_name": "ID_COLUMN"}, {"original_string": "@Id\n    @GeneratedValue\n    @Column(name = ID_COLUMN, nullable = false)\n    private Integer id;", "modifier": "@Id\n    @GeneratedValue\n    @Column(name = ID_COLUMN, nullable = false)\n    private", "type": "Integer", "declarator": "id", "var_name": "id"}, {"original_string": "public final static String VIRTUALMACHINE_PROPERTY = \"virtualMachine\";", "modifier": "public final static", "type": "String", "declarator": "VIRTUALMACHINE_PROPERTY = \"virtualMachine\"", "var_name": "VIRTUALMACHINE_PROPERTY"}, {"original_string": "private final static boolean VIRTUALMACHINE_REQUIRED = true;", "modifier": "private final static", "type": "boolean", "declarator": "VIRTUALMACHINE_REQUIRED = true", "var_name": "VIRTUALMACHINE_REQUIRED"}, {"original_string": "private final static String VIRTUALMACHINE_ID_COLUMN = \"idVM\";", "modifier": "private final static", "type": "String", "declarator": "VIRTUALMACHINE_ID_COLUMN = \"idVM\"", "var_name": "VIRTUALMACHINE_ID_COLUMN"}, {"original_string": "@JoinColumn(name = VIRTUALMACHINE_ID_COLUMN)\n    @ManyToOne(fetch = FetchType.LAZY)\n    @ForeignKey(name = \"FK_\" + TABLE_NAME + \"_virtualmachine\")\n    private VirtualMachine virtualMachine;", "modifier": "@JoinColumn(name = VIRTUALMACHINE_ID_COLUMN)\n    @ManyToOne(fetch = FetchType.LAZY)\n    @ForeignKey(name = \"FK_\" + TABLE_NAME + \"_virtualmachine\")\n    private", "type": "VirtualMachine", "declarator": "virtualMachine", "var_name": "virtualMachine"}, {"original_string": "public final static String NAME_PROPERTY = \"name\";", "modifier": "public final static", "type": "String", "declarator": "NAME_PROPERTY = \"name\"", "var_name": "NAME_PROPERTY"}, {"original_string": "private final static boolean NAME_REQUIRED = true;", "modifier": "private final static", "type": "boolean", "declarator": "NAME_REQUIRED = true", "var_name": "NAME_REQUIRED"}, {"original_string": "final static int NAME_LENGTH_MIN = 1;", "modifier": "final static", "type": "int", "declarator": "NAME_LENGTH_MIN = 1", "var_name": "NAME_LENGTH_MIN"}, {"original_string": "final static int NAME_LENGTH_MAX = 100;", "modifier": "final static", "type": "int", "declarator": "NAME_LENGTH_MAX = 100", "var_name": "NAME_LENGTH_MAX"}, {"original_string": "private final static boolean NAME_LEADING_OR_TRAILING_WHITESPACES_ALLOWED = false;", "modifier": "private final static", "type": "boolean", "declarator": "NAME_LEADING_OR_TRAILING_WHITESPACES_ALLOWED = false", "var_name": "NAME_LEADING_OR_TRAILING_WHITESPACES_ALLOWED"}, {"original_string": "private final static String NAME_COLUMN = \"name\";", "modifier": "private final static", "type": "String", "declarator": "NAME_COLUMN = \"name\"", "var_name": "NAME_COLUMN"}, {"original_string": "@Column(name = NAME_COLUMN, nullable = !NAME_REQUIRED, length = NAME_LENGTH_MAX)\n    private String name;", "modifier": "@Column(name = NAME_COLUMN, nullable = !NAME_REQUIRED, length = NAME_LENGTH_MAX)\n    private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "public final static String DESCRIPTION_PROPERTY = \"description\";", "modifier": "public final static", "type": "String", "declarator": "DESCRIPTION_PROPERTY = \"description\"", "var_name": "DESCRIPTION_PROPERTY"}, {"original_string": "private final static boolean DESCRIPTION_REQUIRED = false;", "modifier": "private final static", "type": "boolean", "declarator": "DESCRIPTION_REQUIRED = false", "var_name": "DESCRIPTION_REQUIRED"}, {"original_string": "final static int DESCRIPTION_LENGTH_MIN = 0;", "modifier": "final static", "type": "int", "declarator": "DESCRIPTION_LENGTH_MIN = 0", "var_name": "DESCRIPTION_LENGTH_MIN"}, {"original_string": "final static int DESCRIPTION_LENGTH_MAX = 255;", "modifier": "final static", "type": "int", "declarator": "DESCRIPTION_LENGTH_MAX = 255", "var_name": "DESCRIPTION_LENGTH_MAX"}, {"original_string": "private final static boolean DESCRIPTION_LEADING_OR_TRAILING_WHITESPACES_ALLOWED = false;", "modifier": "private final static", "type": "boolean", "declarator": "DESCRIPTION_LEADING_OR_TRAILING_WHITESPACES_ALLOWED = false", "var_name": "DESCRIPTION_LEADING_OR_TRAILING_WHITESPACES_ALLOWED"}, {"original_string": "private final static String DESCRIPTION_COLUMN = \"description\";", "modifier": "private final static", "type": "String", "declarator": "DESCRIPTION_COLUMN = \"description\"", "var_name": "DESCRIPTION_COLUMN"}, {"original_string": "@Column(name = DESCRIPTION_COLUMN, nullable = !DESCRIPTION_REQUIRED, length = DESCRIPTION_LENGTH_MAX)\n    private String description;", "modifier": "@Column(name = DESCRIPTION_COLUMN, nullable = !DESCRIPTION_REQUIRED, length = DESCRIPTION_LENGTH_MAX)\n    private", "type": "String", "declarator": "description", "var_name": "description"}, {"original_string": "public final static String PRIORITY_PROPERTY = \"priority\";", "modifier": "public final static", "type": "String", "declarator": "PRIORITY_PROPERTY = \"priority\"", "var_name": "PRIORITY_PROPERTY"}, {"original_string": "final static String PRIORITY_COLUMN = \"priority\";", "modifier": "final static", "type": "String", "declarator": "PRIORITY_COLUMN = \"priority\"", "var_name": "PRIORITY_COLUMN"}, {"original_string": "final static int PRIORITY_MIN = 0;", "modifier": "final static", "type": "int", "declarator": "PRIORITY_MIN = 0", "var_name": "PRIORITY_MIN"}, {"original_string": "final static int PRIORITY_MAX = Integer.MAX_VALUE;", "modifier": "final static", "type": "int", "declarator": "PRIORITY_MAX = Integer.MAX_VALUE", "var_name": "PRIORITY_MAX"}, {"original_string": "final static boolean PRIORITY_REQUIRED = true;", "modifier": "final static", "type": "boolean", "declarator": "PRIORITY_REQUIRED = true", "var_name": "PRIORITY_REQUIRED"}, {"original_string": "@Column(name = PRIORITY_COLUMN, nullable = false)\n    @Range(min = PRIORITY_MIN, max = PRIORITY_MAX)\n    private int priority;", "modifier": "@Column(name = PRIORITY_COLUMN, nullable = false)\n    @Range(min = PRIORITY_MIN, max = PRIORITY_MAX)\n    private", "type": "int", "declarator": "priority", "var_name": "priority"}], "methods": [{"identifier": "RunlistElement", "parameters": "()", "modifiers": "protected", "return": "", "signature": " RunlistElement()", "full_signature": "protected  RunlistElement()", "class_method_signature": "RunlistElement.RunlistElement()", "testcase": false, "constructor": true}, {"identifier": "RunlistElement", "parameters": "(final String name, final String description, final int priority)", "modifiers": "public", "return": "", "signature": " RunlistElement(final String name, final String description, final int priority)", "full_signature": "public  RunlistElement(final String name, final String description, final int priority)", "class_method_signature": "RunlistElement.RunlistElement(final String name, final String description, final int priority)", "testcase": false, "constructor": true}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getId()", "full_signature": "@Override public Integer getId()", "class_method_signature": "RunlistElement.getId()", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(final Integer id)", "modifiers": "public", "return": "void", "signature": "void setId(final Integer id)", "full_signature": "public void setId(final Integer id)", "class_method_signature": "RunlistElement.setId(final Integer id)", "testcase": false, "constructor": false}, {"identifier": "getVirtualMachine", "parameters": "()", "modifiers": "@Required(value = VIRTUALMACHINE_REQUIRED) public", "return": "VirtualMachine", "signature": "VirtualMachine getVirtualMachine()", "full_signature": "@Required(value = VIRTUALMACHINE_REQUIRED) public VirtualMachine getVirtualMachine()", "class_method_signature": "RunlistElement.getVirtualMachine()", "testcase": false, "constructor": false}, {"identifier": "setVirtualMachine", "parameters": "(final VirtualMachine virtualMachine)", "modifiers": "public", "return": "void", "signature": "void setVirtualMachine(final VirtualMachine virtualMachine)", "full_signature": "public void setVirtualMachine(final VirtualMachine virtualMachine)", "class_method_signature": "RunlistElement.setVirtualMachine(final VirtualMachine virtualMachine)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Required(value = NAME_REQUIRED) @Length(min = NAME_LENGTH_MIN, max = NAME_LENGTH_MAX) @LeadingOrTrailingWhitespace(allowed = NAME_LEADING_OR_TRAILING_WHITESPACES_ALLOWED) @RunlistItem public", "return": "String", "signature": "String getName()", "full_signature": "@Required(value = NAME_REQUIRED) @Length(min = NAME_LENGTH_MIN, max = NAME_LENGTH_MAX) @LeadingOrTrailingWhitespace(allowed = NAME_LEADING_OR_TRAILING_WHITESPACES_ALLOWED) @RunlistItem public String getName()", "class_method_signature": "RunlistElement.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(final String name)", "modifiers": "public", "return": "void", "signature": "void setName(final String name)", "full_signature": "public void setName(final String name)", "class_method_signature": "RunlistElement.setName(final String name)", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "@Required(value = DESCRIPTION_REQUIRED) @Length(min = DESCRIPTION_LENGTH_MIN, max = DESCRIPTION_LENGTH_MAX) @LeadingOrTrailingWhitespace(allowed = DESCRIPTION_LEADING_OR_TRAILING_WHITESPACES_ALLOWED) public", "return": "String", "signature": "String getDescription()", "full_signature": "@Required(value = DESCRIPTION_REQUIRED) @Length(min = DESCRIPTION_LENGTH_MIN, max = DESCRIPTION_LENGTH_MAX) @LeadingOrTrailingWhitespace(allowed = DESCRIPTION_LEADING_OR_TRAILING_WHITESPACES_ALLOWED) public String getDescription()", "class_method_signature": "RunlistElement.getDescription()", "testcase": false, "constructor": false}, {"identifier": "setDescription", "parameters": "(final String description)", "modifiers": "public", "return": "void", "signature": "void setDescription(final String description)", "full_signature": "public void setDescription(final String description)", "class_method_signature": "RunlistElement.setDescription(final String description)", "testcase": false, "constructor": false}, {"identifier": "getPriority", "parameters": "()", "modifiers": "@Required(value = PRIORITY_REQUIRED) public", "return": "int", "signature": "int getPriority()", "full_signature": "@Required(value = PRIORITY_REQUIRED) public int getPriority()", "class_method_signature": "RunlistElement.getPriority()", "testcase": false, "constructor": false}, {"identifier": "setPriority", "parameters": "(final int priority)", "modifiers": "public", "return": "void", "signature": "void setPriority(final int priority)", "full_signature": "public void setPriority(final int priority)", "class_method_signature": "RunlistElement.setPriority(final int priority)", "testcase": false, "constructor": false}, {"identifier": "isCookbook", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCookbook()", "full_signature": "public boolean isCookbook()", "class_method_signature": "RunlistElement.isCookbook()", "testcase": false, "constructor": false}, {"identifier": "isRecipe", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRecipe()", "full_signature": "public boolean isRecipe()", "class_method_signature": "RunlistElement.isRecipe()", "testcase": false, "constructor": false}, {"identifier": "isRole", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRole()", "full_signature": "public boolean isRole()", "class_method_signature": "RunlistElement.isRole()", "testcase": false, "constructor": false}, {"identifier": "getRecipeName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRecipeName()", "full_signature": "public String getRecipeName()", "class_method_signature": "RunlistElement.getRecipeName()", "testcase": false, "constructor": false}, {"identifier": "getRoleName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRoleName()", "full_signature": "public String getRoleName()", "class_method_signature": "RunlistElement.getRoleName()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "Type", "signature": "Type getType()", "full_signature": "public Type getType()", "class_method_signature": "RunlistElement.getType()", "testcase": false, "constructor": false}], "file": "model/src/main/java/com/abiquo/server/core/cloud/chef/RunlistElement.java"}, "focal_method": {"identifier": "isCookbook", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isCookbook()\n    {\n        return isRecipe() && !getRecipeName().contains(\"::\");\n    }", "signature": "boolean isCookbook()", "full_signature": "public boolean isCookbook()", "class_method_signature": "RunlistElement.isCookbook()", "testcase": false, "constructor": false, "invocations": ["isRecipe", "contains", "getRecipeName"]}, "repository": {"repo_id": 1320181, "url": "https://github.com/abiquo/abiquo", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 25, "size": 82580, "license": "licensed"}}