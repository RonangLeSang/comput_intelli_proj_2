{"test_class": {"identifier": "RasdManagementTest", "superclass": "extends DefaultEntityTestBase<RasdManagement>", "interfaces": "", "fields": [], "file": "model/src/test/java/com/abiquo/server/core/infrastructure/management/RasdManagementTest.java"}, "test_case": {"identifier": "testInvalidGenerationValues", "parameters": "()", "modifiers": "@Test(expectedExceptions = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expectedExceptions = IllegalArgumentException.class)\n    public void testInvalidGenerationValues()\n    {\n        RasdManagement rasdm = createUniqueEntity();\n        rasdm.setSequence(FIRST_ATTACHMENT_SEQUENCE - 1);\n    }", "signature": "void testInvalidGenerationValues()", "full_signature": "@Test(expectedExceptions = IllegalArgumentException.class) public void testInvalidGenerationValues()", "class_method_signature": "RasdManagementTest.testInvalidGenerationValues()", "testcase": true, "constructor": false, "invocations": ["createUniqueEntity", "setSequence"]}, "focal_class": {"identifier": "RasdManagement", "superclass": "extends DefaultEntityBase", "interfaces": "", "fields": [{"original_string": "public static final int FIRST_ATTACHMENT_SEQUENCE = 0;", "modifier": "public static final", "type": "int", "declarator": "FIRST_ATTACHMENT_SEQUENCE = 0", "var_name": "FIRST_ATTACHMENT_SEQUENCE"}, {"original_string": "public static final String TABLE_NAME = \"rasd_management\";", "modifier": "public static final", "type": "String", "declarator": "TABLE_NAME = \"rasd_management\"", "var_name": "TABLE_NAME"}, {"original_string": "private final static String ID_COLUMN = \"idManagement\";", "modifier": "private final static", "type": "String", "declarator": "ID_COLUMN = \"idManagement\"", "var_name": "ID_COLUMN"}, {"original_string": "@Id\n    @GeneratedValue\n    @Column(name = ID_COLUMN, nullable = false)\n    private Integer id;", "modifier": "@Id\n    @GeneratedValue\n    @Column(name = ID_COLUMN, nullable = false)\n    private", "type": "Integer", "declarator": "id", "var_name": "id"}, {"original_string": "public final static String VIRTUAL_APPLIANCE_PROPERTY = \"virtualAppliance\";", "modifier": "public final static", "type": "String", "declarator": "VIRTUAL_APPLIANCE_PROPERTY = \"virtualAppliance\"", "var_name": "VIRTUAL_APPLIANCE_PROPERTY"}, {"original_string": "private final static boolean VIRTUAL_APPLIANCE_REQUIRED = false;", "modifier": "private final static", "type": "boolean", "declarator": "VIRTUAL_APPLIANCE_REQUIRED = false", "var_name": "VIRTUAL_APPLIANCE_REQUIRED"}, {"original_string": "private final static String VIRTUAL_APPLIANCE_ID_COLUMN = \"idVirtualApp\";", "modifier": "private final static", "type": "String", "declarator": "VIRTUAL_APPLIANCE_ID_COLUMN = \"idVirtualApp\"", "var_name": "VIRTUAL_APPLIANCE_ID_COLUMN"}, {"original_string": "@JoinColumn(name = VIRTUAL_APPLIANCE_ID_COLUMN)\n    @ManyToOne(fetch = FetchType.LAZY)\n    @ForeignKey(name = \"FK_\" + TABLE_NAME + \"_virtualAppliance\")\n    private VirtualAppliance virtualAppliance;", "modifier": "@JoinColumn(name = VIRTUAL_APPLIANCE_ID_COLUMN)\n    @ManyToOne(fetch = FetchType.LAZY)\n    @ForeignKey(name = \"FK_\" + TABLE_NAME + \"_virtualAppliance\")\n    private", "type": "VirtualAppliance", "declarator": "virtualAppliance", "var_name": "virtualAppliance"}, {"original_string": "public final static String VIRTUAL_DATACENTER_PROPERTY = \"virtualDatacenter\";", "modifier": "public final static", "type": "String", "declarator": "VIRTUAL_DATACENTER_PROPERTY = \"virtualDatacenter\"", "var_name": "VIRTUAL_DATACENTER_PROPERTY"}, {"original_string": "private final static boolean VIRTUAL_DATACENTER_REQUIRED = false;", "modifier": "private final static", "type": "boolean", "declarator": "VIRTUAL_DATACENTER_REQUIRED = false", "var_name": "VIRTUAL_DATACENTER_REQUIRED"}, {"original_string": "private final static String VIRTUAL_DATACENTER_ID_COLUMN = \"idVirtualDataCenter\";", "modifier": "private final static", "type": "String", "declarator": "VIRTUAL_DATACENTER_ID_COLUMN = \"idVirtualDataCenter\"", "var_name": "VIRTUAL_DATACENTER_ID_COLUMN"}, {"original_string": "@JoinColumn(name = VIRTUAL_DATACENTER_ID_COLUMN)\n    @ManyToOne(fetch = FetchType.LAZY)\n    @ForeignKey(name = \"FK_\" + TABLE_NAME + \"_virtualDatacenter\")\n    private VirtualDatacenter virtualDatacenter;", "modifier": "@JoinColumn(name = VIRTUAL_DATACENTER_ID_COLUMN)\n    @ManyToOne(fetch = FetchType.LAZY)\n    @ForeignKey(name = \"FK_\" + TABLE_NAME + \"_virtualDatacenter\")\n    private", "type": "VirtualDatacenter", "declarator": "virtualDatacenter", "var_name": "virtualDatacenter"}, {"original_string": "public final static String VIRTUAL_MACHINE_PROPERTY = \"virtualMachine\";", "modifier": "public final static", "type": "String", "declarator": "VIRTUAL_MACHINE_PROPERTY = \"virtualMachine\"", "var_name": "VIRTUAL_MACHINE_PROPERTY"}, {"original_string": "private final static boolean VIRTUAL_MACHINE_REQUIRED = false;", "modifier": "private final static", "type": "boolean", "declarator": "VIRTUAL_MACHINE_REQUIRED = false", "var_name": "VIRTUAL_MACHINE_REQUIRED"}, {"original_string": "private final static String VIRTUAL_MACHINE_ID_COLUMN = \"idVM\";", "modifier": "private final static", "type": "String", "declarator": "VIRTUAL_MACHINE_ID_COLUMN = \"idVM\"", "var_name": "VIRTUAL_MACHINE_ID_COLUMN"}, {"original_string": "@JoinColumn(name = VIRTUAL_MACHINE_ID_COLUMN)\n    @ManyToOne(fetch = FetchType.LAZY)\n    @ForeignKey(name = \"FK_\" + TABLE_NAME + \"_virtualMAchine\")\n    private VirtualMachine virtualMachine;", "modifier": "@JoinColumn(name = VIRTUAL_MACHINE_ID_COLUMN)\n    @ManyToOne(fetch = FetchType.LAZY)\n    @ForeignKey(name = \"FK_\" + TABLE_NAME + \"_virtualMAchine\")\n    private", "type": "VirtualMachine", "declarator": "virtualMachine", "var_name": "virtualMachine"}, {"original_string": "public final static String ID_RESOURCE_TYPE_PROPERTY = \"idResourceType\";", "modifier": "public final static", "type": "String", "declarator": "ID_RESOURCE_TYPE_PROPERTY = \"idResourceType\"", "var_name": "ID_RESOURCE_TYPE_PROPERTY"}, {"original_string": "private final static boolean ID_RESOURCE_TYPE_REQUIRED = true;", "modifier": "private final static", "type": "boolean", "declarator": "ID_RESOURCE_TYPE_REQUIRED = true", "var_name": "ID_RESOURCE_TYPE_REQUIRED"}, {"original_string": "private final static int ID_RESOURCE_TYPE_LENGTH_MIN = 0;", "modifier": "private final static", "type": "int", "declarator": "ID_RESOURCE_TYPE_LENGTH_MIN = 0", "var_name": "ID_RESOURCE_TYPE_LENGTH_MIN"}, {"original_string": "private final static int ID_RESOURCE_TYPE_LENGTH_MAX = 255;", "modifier": "private final static", "type": "int", "declarator": "ID_RESOURCE_TYPE_LENGTH_MAX = 255", "var_name": "ID_RESOURCE_TYPE_LENGTH_MAX"}, {"original_string": "private final static boolean ID_RESOURCE_TYPE_LEADING_OR_TRAILING_WHITESPACES_ALLOWED = false;", "modifier": "private final static", "type": "boolean", "declarator": "ID_RESOURCE_TYPE_LEADING_OR_TRAILING_WHITESPACES_ALLOWED = false", "var_name": "ID_RESOURCE_TYPE_LEADING_OR_TRAILING_WHITESPACES_ALLOWED"}, {"original_string": "private final static String ID_RESOURCE_TYPE_COLUMN = \"idResourceType\";", "modifier": "private final static", "type": "String", "declarator": "ID_RESOURCE_TYPE_COLUMN = \"idResourceType\"", "var_name": "ID_RESOURCE_TYPE_COLUMN"}, {"original_string": "@Column(name = ID_RESOURCE_TYPE_COLUMN, nullable = !ID_RESOURCE_TYPE_REQUIRED, length = ID_RESOURCE_TYPE_LENGTH_MAX)\n    private String idResourceType;", "modifier": "@Column(name = ID_RESOURCE_TYPE_COLUMN, nullable = !ID_RESOURCE_TYPE_REQUIRED, length = ID_RESOURCE_TYPE_LENGTH_MAX)\n    private", "type": "String", "declarator": "idResourceType", "var_name": "idResourceType"}, {"original_string": "public final static String RASD_PROPERTY = \"rasd\";", "modifier": "public final static", "type": "String", "declarator": "RASD_PROPERTY = \"rasd\"", "var_name": "RASD_PROPERTY"}, {"original_string": "private final static boolean RASD_REQUIRED = false;", "modifier": "private final static", "type": "boolean", "declarator": "RASD_REQUIRED = false", "var_name": "RASD_REQUIRED"}, {"original_string": "private final static String RASD_ID_COLUMN = \"idResource\";", "modifier": "private final static", "type": "String", "declarator": "RASD_ID_COLUMN = \"idResource\"", "var_name": "RASD_ID_COLUMN"}, {"original_string": "@JoinColumn(name = RASD_ID_COLUMN)\n    @ManyToOne(fetch = FetchType.LAZY)\n    @ForeignKey(name = \"FK_\" + TABLE_NAME + \"_rasd\")\n    private Rasd rasd;", "modifier": "@JoinColumn(name = RASD_ID_COLUMN)\n    @ManyToOne(fetch = FetchType.LAZY)\n    @ForeignKey(name = \"FK_\" + TABLE_NAME + \"_rasd\")\n    private", "type": "Rasd", "declarator": "rasd", "var_name": "rasd"}, {"original_string": "public final static String TEMPORAL_PROPERTY = \"temporal\";", "modifier": "public final static", "type": "String", "declarator": "TEMPORAL_PROPERTY = \"temporal\"", "var_name": "TEMPORAL_PROPERTY"}, {"original_string": "private final static String TEMPORAL_COLUMN = \"temporal\";", "modifier": "private final static", "type": "String", "declarator": "TEMPORAL_COLUMN = \"temporal\"", "var_name": "TEMPORAL_COLUMN"}, {"original_string": "private final static int TEMPORAL_MIN = 1;", "modifier": "private final static", "type": "int", "declarator": "TEMPORAL_MIN = 1", "var_name": "TEMPORAL_MIN"}, {"original_string": "private final static int TEMPORAL_MAX = Integer.MAX_VALUE;", "modifier": "private final static", "type": "int", "declarator": "TEMPORAL_MAX = Integer.MAX_VALUE", "var_name": "TEMPORAL_MAX"}, {"original_string": "@Column(name = TEMPORAL_COLUMN, nullable = true)\n    @Range(min = TEMPORAL_MIN, max = TEMPORAL_MAX)\n    private Integer temporal;", "modifier": "@Column(name = TEMPORAL_COLUMN, nullable = true)\n    @Range(min = TEMPORAL_MIN, max = TEMPORAL_MAX)\n    private", "type": "Integer", "declarator": "temporal", "var_name": "temporal"}, {"original_string": "public final static String SEQUENCE_PROPERTY = \"sequence\";", "modifier": "public final static", "type": "String", "declarator": "SEQUENCE_PROPERTY = \"sequence\"", "var_name": "SEQUENCE_PROPERTY"}, {"original_string": "private final static String SEQUENCE_COLUMN = \"sequence\";", "modifier": "private final static", "type": "String", "declarator": "SEQUENCE_COLUMN = \"sequence\"", "var_name": "SEQUENCE_COLUMN"}, {"original_string": "private final static int SEQUENCE_MIN = 0;", "modifier": "private final static", "type": "int", "declarator": "SEQUENCE_MIN = 0", "var_name": "SEQUENCE_MIN"}, {"original_string": "private final static int SEQUENCE_MAX = Integer.MAX_VALUE;", "modifier": "private final static", "type": "int", "declarator": "SEQUENCE_MAX = Integer.MAX_VALUE", "var_name": "SEQUENCE_MAX"}, {"original_string": "@Column(name = SEQUENCE_COLUMN, nullable = true)\n    @Range(min = SEQUENCE_MIN, max = SEQUENCE_MAX)\n    private Integer sequence;", "modifier": "@Column(name = SEQUENCE_COLUMN, nullable = true)\n    @Range(min = SEQUENCE_MIN, max = SEQUENCE_MAX)\n    private", "type": "Integer", "declarator": "sequence", "var_name": "sequence"}], "methods": [{"identifier": "RasdManagement", "parameters": "()", "modifiers": "protected", "return": "", "signature": " RasdManagement()", "full_signature": "protected  RasdManagement()", "class_method_signature": "RasdManagement.RasdManagement()", "testcase": false, "constructor": true}, {"identifier": "RasdManagement", "parameters": "(final String idResourceType)", "modifiers": "protected", "return": "", "signature": " RasdManagement(final String idResourceType)", "full_signature": "protected  RasdManagement(final String idResourceType)", "class_method_signature": "RasdManagement.RasdManagement(final String idResourceType)", "testcase": false, "constructor": true}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getId()", "full_signature": "@Override public Integer getId()", "class_method_signature": "RasdManagement.getId()", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(final Integer id)", "modifiers": "public", "return": "void", "signature": "void setId(final Integer id)", "full_signature": "public void setId(final Integer id)", "class_method_signature": "RasdManagement.setId(final Integer id)", "testcase": false, "constructor": false}, {"identifier": "getVirtualAppliance", "parameters": "()", "modifiers": "@Required(value = VIRTUAL_APPLIANCE_REQUIRED) public", "return": "VirtualAppliance", "signature": "VirtualAppliance getVirtualAppliance()", "full_signature": "@Required(value = VIRTUAL_APPLIANCE_REQUIRED) public VirtualAppliance getVirtualAppliance()", "class_method_signature": "RasdManagement.getVirtualAppliance()", "testcase": false, "constructor": false}, {"identifier": "setVirtualAppliance", "parameters": "(final VirtualAppliance virtualAppliance)", "modifiers": "public", "return": "void", "signature": "void setVirtualAppliance(final VirtualAppliance virtualAppliance)", "full_signature": "public void setVirtualAppliance(final VirtualAppliance virtualAppliance)", "class_method_signature": "RasdManagement.setVirtualAppliance(final VirtualAppliance virtualAppliance)", "testcase": false, "constructor": false}, {"identifier": "getVirtualDatacenter", "parameters": "()", "modifiers": "@Required(value = VIRTUAL_DATACENTER_REQUIRED) public", "return": "VirtualDatacenter", "signature": "VirtualDatacenter getVirtualDatacenter()", "full_signature": "@Required(value = VIRTUAL_DATACENTER_REQUIRED) public VirtualDatacenter getVirtualDatacenter()", "class_method_signature": "RasdManagement.getVirtualDatacenter()", "testcase": false, "constructor": false}, {"identifier": "setVirtualDatacenter", "parameters": "(final VirtualDatacenter virtualDatacenter)", "modifiers": "public", "return": "void", "signature": "void setVirtualDatacenter(final VirtualDatacenter virtualDatacenter)", "full_signature": "public void setVirtualDatacenter(final VirtualDatacenter virtualDatacenter)", "class_method_signature": "RasdManagement.setVirtualDatacenter(final VirtualDatacenter virtualDatacenter)", "testcase": false, "constructor": false}, {"identifier": "setVirtualMachine", "parameters": "(final VirtualMachine virtualMachine)", "modifiers": "public", "return": "void", "signature": "void setVirtualMachine(final VirtualMachine virtualMachine)", "full_signature": "public void setVirtualMachine(final VirtualMachine virtualMachine)", "class_method_signature": "RasdManagement.setVirtualMachine(final VirtualMachine virtualMachine)", "testcase": false, "constructor": false}, {"identifier": "getVirtualMachine", "parameters": "()", "modifiers": "@Required(value = VIRTUAL_MACHINE_REQUIRED) public", "return": "VirtualMachine", "signature": "VirtualMachine getVirtualMachine()", "full_signature": "@Required(value = VIRTUAL_MACHINE_REQUIRED) public VirtualMachine getVirtualMachine()", "class_method_signature": "RasdManagement.getVirtualMachine()", "testcase": false, "constructor": false}, {"identifier": "getIdResourceType", "parameters": "()", "modifiers": "@Required(value = ID_RESOURCE_TYPE_REQUIRED) @Length(min = ID_RESOURCE_TYPE_LENGTH_MIN, max = ID_RESOURCE_TYPE_LENGTH_MAX) @LeadingOrTrailingWhitespace(allowed = ID_RESOURCE_TYPE_LEADING_OR_TRAILING_WHITESPACES_ALLOWED) public", "return": "String", "signature": "String getIdResourceType()", "full_signature": "@Required(value = ID_RESOURCE_TYPE_REQUIRED) @Length(min = ID_RESOURCE_TYPE_LENGTH_MIN, max = ID_RESOURCE_TYPE_LENGTH_MAX) @LeadingOrTrailingWhitespace(allowed = ID_RESOURCE_TYPE_LEADING_OR_TRAILING_WHITESPACES_ALLOWED) public String getIdResourceType()", "class_method_signature": "RasdManagement.getIdResourceType()", "testcase": false, "constructor": false}, {"identifier": "setIdResourceType", "parameters": "(final String idResourceType)", "modifiers": "public", "return": "void", "signature": "void setIdResourceType(final String idResourceType)", "full_signature": "public void setIdResourceType(final String idResourceType)", "class_method_signature": "RasdManagement.setIdResourceType(final String idResourceType)", "testcase": false, "constructor": false}, {"identifier": "getRasd", "parameters": "()", "modifiers": "@Required(value = RASD_REQUIRED) public", "return": "Rasd", "signature": "Rasd getRasd()", "full_signature": "@Required(value = RASD_REQUIRED) public Rasd getRasd()", "class_method_signature": "RasdManagement.getRasd()", "testcase": false, "constructor": false}, {"identifier": "setRasd", "parameters": "(final Rasd rasd)", "modifiers": "public", "return": "void", "signature": "void setRasd(final Rasd rasd)", "full_signature": "public void setRasd(final Rasd rasd)", "class_method_signature": "RasdManagement.setRasd(final Rasd rasd)", "testcase": false, "constructor": false}, {"identifier": "getTemporal", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getTemporal()", "full_signature": "public Integer getTemporal()", "class_method_signature": "RasdManagement.getTemporal()", "testcase": false, "constructor": false}, {"identifier": "setTemporal", "parameters": "(final Integer temporal)", "modifiers": "public", "return": "void", "signature": "void setTemporal(final Integer temporal)", "full_signature": "public void setTemporal(final Integer temporal)", "class_method_signature": "RasdManagement.setTemporal(final Integer temporal)", "testcase": false, "constructor": false}, {"identifier": "getSequence", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getSequence()", "full_signature": "public Integer getSequence()", "class_method_signature": "RasdManagement.getSequence()", "testcase": false, "constructor": false}, {"identifier": "setSequence", "parameters": "(final Integer sequence)", "modifiers": "public", "return": "void", "signature": "void setSequence(final Integer sequence)", "full_signature": "public void setSequence(final Integer sequence)", "class_method_signature": "RasdManagement.setSequence(final Integer sequence)", "testcase": false, "constructor": false}, {"identifier": "getInstanceId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getInstanceId()", "full_signature": "public String getInstanceId()", "class_method_signature": "RasdManagement.getInstanceId()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDescription()", "full_signature": "public String getDescription()", "class_method_signature": "RasdManagement.getDescription()", "testcase": false, "constructor": false}, {"identifier": "setDescription", "parameters": "(final String description)", "modifiers": "public", "return": "void", "signature": "void setDescription(final String description)", "full_signature": "public void setDescription(final String description)", "class_method_signature": "RasdManagement.setDescription(final String description)", "testcase": false, "constructor": false}, {"identifier": "attach", "parameters": "(final int sequence, final VirtualMachine vm)", "modifiers": "public", "return": "void", "signature": "void attach(final int sequence, final VirtualMachine vm)", "full_signature": "public void attach(final int sequence, final VirtualMachine vm)", "class_method_signature": "RasdManagement.attach(final int sequence, final VirtualMachine vm)", "testcase": false, "constructor": false}, {"identifier": "attach", "parameters": "(final int sequence, final VirtualMachine vm, final VirtualAppliance vapp)", "modifiers": "public", "return": "void", "signature": "void attach(final int sequence, final VirtualMachine vm, final VirtualAppliance vapp)", "full_signature": "public void attach(final int sequence, final VirtualMachine vm, final VirtualAppliance vapp)", "class_method_signature": "RasdManagement.attach(final int sequence, final VirtualMachine vm, final VirtualAppliance vapp)", "testcase": false, "constructor": false}, {"identifier": "detach", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void detach()", "full_signature": "public void detach()", "class_method_signature": "RasdManagement.detach()", "testcase": false, "constructor": false}, {"identifier": "isAttached", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAttached()", "full_signature": "public boolean isAttached()", "class_method_signature": "RasdManagement.isAttached()", "testcase": false, "constructor": false}], "file": "model/src/main/java/com/abiquo/server/core/infrastructure/management/RasdManagement.java"}, "focal_method": {"identifier": "setSequence", "parameters": "(final Integer sequence)", "modifiers": "public", "return": "void", "body": "public void setSequence(final Integer sequence)\n    {\n        if (sequence < FIRST_ATTACHMENT_SEQUENCE)\n        {\n            throw new IllegalArgumentException(\"Attachment order should be greater or equal to \"\n                + FIRST_ATTACHMENT_SEQUENCE);\n        }\n        this.sequence = sequence;\n    }", "signature": "void setSequence(final Integer sequence)", "full_signature": "public void setSequence(final Integer sequence)", "class_method_signature": "RasdManagement.setSequence(final Integer sequence)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1320181, "url": "https://github.com/abiquo/abiquo", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 25, "size": 82580, "license": "licensed"}}