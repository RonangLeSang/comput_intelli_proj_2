{"test_class": {"identifier": "RulesRepTest", "superclass": "extends DefaultJpaDataAccessTestBase", "interfaces": "", "fields": [{"original_string": "FitPolicyRuleGenerator fitPolicyRuleGenerator;", "modifier": "", "type": "FitPolicyRuleGenerator", "declarator": "fitPolicyRuleGenerator", "var_name": "fitPolicyRuleGenerator"}, {"original_string": "MachineLoadRuleGenerator machineLoadRuleGenerator;", "modifier": "", "type": "MachineLoadRuleGenerator", "declarator": "machineLoadRuleGenerator", "var_name": "machineLoadRuleGenerator"}, {"original_string": "EnterpriseExclusionRuleGenerator enterpriseExclusionRuleGenerator;", "modifier": "", "type": "EnterpriseExclusionRuleGenerator", "declarator": "enterpriseExclusionRuleGenerator", "var_name": "enterpriseExclusionRuleGenerator"}, {"original_string": "DatacenterGenerator datacenterGenerator;", "modifier": "", "type": "DatacenterGenerator", "declarator": "datacenterGenerator", "var_name": "datacenterGenerator"}, {"original_string": "RackGenerator rackGenerator;", "modifier": "", "type": "RackGenerator", "declarator": "rackGenerator", "var_name": "rackGenerator"}, {"original_string": "MachineGenerator machineGenerator;", "modifier": "", "type": "MachineGenerator", "declarator": "machineGenerator", "var_name": "machineGenerator"}, {"original_string": "EnterpriseGenerator enterpriseGenerator;", "modifier": "", "type": "EnterpriseGenerator", "declarator": "enterpriseGenerator", "var_name": "enterpriseGenerator"}], "file": "model/src/test/java/com/abiquo/server/core/scheduler/RulesRepTest.java"}, "test_case": {"identifier": "test_getGlobalFitPolicy", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_getGlobalFitPolicy()\n    {\n        FitPolicyRule fpr = fitPolicyRuleGenerator.createUniqueInstance();\n        fpr.setDatacenter(null);\n        List<Object> allToPersist = new ArrayList<Object>();\n        //FitPolicyRule fpr = fitPolicyRuleGenerator.createGlobalFitPolicyInstance();\n        //List<Object> allToPersist = new ArrayList<Object>();\n\n        persistAll(ds(), allToPersist, fpr);\n\n        EntityManager em = ds().createEntityManagerAndBeginReadWriteTransaction();\n        RulesRep rep = new RulesRep(em);\n        FitPolicyRule result = rep.getGlobalFitPolicy();\n        assertNotNull(result);\n    }", "signature": "void test_getGlobalFitPolicy()", "full_signature": "@Test public void test_getGlobalFitPolicy()", "class_method_signature": "RulesRepTest.test_getGlobalFitPolicy()", "testcase": true, "constructor": false, "invocations": ["createUniqueInstance", "setDatacenter", "persistAll", "ds", "createEntityManagerAndBeginReadWriteTransaction", "ds", "getGlobalFitPolicy", "assertNotNull"]}, "focal_class": {"identifier": "RulesRep", "superclass": "extends DefaultRepBase", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private EnterpriseExclusionRuleDAO enterpriseExclusionRuleDao;", "modifier": "@Autowired\n    private", "type": "EnterpriseExclusionRuleDAO", "declarator": "enterpriseExclusionRuleDao", "var_name": "enterpriseExclusionRuleDao"}, {"original_string": "@Autowired\n    private FitPolicyRuleDAO fitPolicyRuleDao;", "modifier": "@Autowired\n    private", "type": "FitPolicyRuleDAO", "declarator": "fitPolicyRuleDao", "var_name": "fitPolicyRuleDao"}, {"original_string": "@Autowired\n    private MachineLoadRuleDAO machineLoadRuleDao;", "modifier": "@Autowired\n    private", "type": "MachineLoadRuleDAO", "declarator": "machineLoadRuleDao", "var_name": "machineLoadRuleDao"}], "methods": [{"identifier": "RulesRep", "parameters": "()", "modifiers": "public", "return": "", "signature": " RulesRep()", "full_signature": "public  RulesRep()", "class_method_signature": "RulesRep.RulesRep()", "testcase": false, "constructor": true}, {"identifier": "RulesRep", "parameters": "(final EntityManager entityManager)", "modifiers": "public", "return": "", "signature": " RulesRep(final EntityManager entityManager)", "full_signature": "public  RulesRep(final EntityManager entityManager)", "class_method_signature": "RulesRep.RulesRep(final EntityManager entityManager)", "testcase": false, "constructor": true}, {"identifier": "getGlobalRules", "parameters": "()", "modifiers": "public", "return": "List<PersistentRule>", "signature": "List<PersistentRule> getGlobalRules()", "full_signature": "public List<PersistentRule> getGlobalRules()", "class_method_signature": "RulesRep.getGlobalRules()", "testcase": false, "constructor": false}, {"identifier": "getDatacenterRules", "parameters": "(final Integer idDatacenter)", "modifiers": "public", "return": "List<PersistentRule>", "signature": "List<PersistentRule> getDatacenterRules(final Integer idDatacenter)", "full_signature": "public List<PersistentRule> getDatacenterRules(final Integer idDatacenter)", "class_method_signature": "RulesRep.getDatacenterRules(final Integer idDatacenter)", "testcase": false, "constructor": false}, {"identifier": "findAllEnterpriseExclusionRules", "parameters": "()", "modifiers": "public", "return": "List<EnterpriseExclusionRule>", "signature": "List<EnterpriseExclusionRule> findAllEnterpriseExclusionRules()", "full_signature": "public List<EnterpriseExclusionRule> findAllEnterpriseExclusionRules()", "class_method_signature": "RulesRep.findAllEnterpriseExclusionRules()", "testcase": false, "constructor": false}, {"identifier": "findEnterpriseExclusionRuleById", "parameters": "(final Integer id)", "modifiers": "public", "return": "EnterpriseExclusionRule", "signature": "EnterpriseExclusionRule findEnterpriseExclusionRuleById(final Integer id)", "full_signature": "public EnterpriseExclusionRule findEnterpriseExclusionRuleById(final Integer id)", "class_method_signature": "RulesRep.findEnterpriseExclusionRuleById(final Integer id)", "testcase": false, "constructor": false}, {"identifier": "deleteEnterpriseExclusionRule", "parameters": "(final EnterpriseExclusionRule enterpriseExclusionRule)", "modifiers": "public", "return": "void", "signature": "void deleteEnterpriseExclusionRule(final EnterpriseExclusionRule enterpriseExclusionRule)", "full_signature": "public void deleteEnterpriseExclusionRule(final EnterpriseExclusionRule enterpriseExclusionRule)", "class_method_signature": "RulesRep.deleteEnterpriseExclusionRule(final EnterpriseExclusionRule enterpriseExclusionRule)", "testcase": false, "constructor": false}, {"identifier": "insertEnterpriseExclusionRule", "parameters": "(final EnterpriseExclusionRule rule)", "modifiers": "public", "return": "EnterpriseExclusionRule", "signature": "EnterpriseExclusionRule insertEnterpriseExclusionRule(final EnterpriseExclusionRule rule)", "full_signature": "public EnterpriseExclusionRule insertEnterpriseExclusionRule(final EnterpriseExclusionRule rule)", "class_method_signature": "RulesRep.insertEnterpriseExclusionRule(final EnterpriseExclusionRule rule)", "testcase": false, "constructor": false}, {"identifier": "findAllFitPolicyRules", "parameters": "()", "modifiers": "public", "return": "List<FitPolicyRule>", "signature": "List<FitPolicyRule> findAllFitPolicyRules()", "full_signature": "public List<FitPolicyRule> findAllFitPolicyRules()", "class_method_signature": "RulesRep.findAllFitPolicyRules()", "testcase": false, "constructor": false}, {"identifier": "findFitPolicyRuleById", "parameters": "(final Integer id)", "modifiers": "public", "return": "FitPolicyRule", "signature": "FitPolicyRule findFitPolicyRuleById(final Integer id)", "full_signature": "public FitPolicyRule findFitPolicyRuleById(final Integer id)", "class_method_signature": "RulesRep.findFitPolicyRuleById(final Integer id)", "testcase": false, "constructor": false}, {"identifier": "insertFitPolicyRule", "parameters": "(final FitPolicyRule rule)", "modifiers": "public", "return": "FitPolicyRule", "signature": "FitPolicyRule insertFitPolicyRule(final FitPolicyRule rule)", "full_signature": "public FitPolicyRule insertFitPolicyRule(final FitPolicyRule rule)", "class_method_signature": "RulesRep.insertFitPolicyRule(final FitPolicyRule rule)", "testcase": false, "constructor": false}, {"identifier": "findAllMachineLoadRules", "parameters": "()", "modifiers": "public", "return": "List<MachineLoadRule>", "signature": "List<MachineLoadRule> findAllMachineLoadRules()", "full_signature": "public List<MachineLoadRule> findAllMachineLoadRules()", "class_method_signature": "RulesRep.findAllMachineLoadRules()", "testcase": false, "constructor": false}, {"identifier": "findMachineLoadRuleById", "parameters": "(final Integer id)", "modifiers": "public", "return": "MachineLoadRule", "signature": "MachineLoadRule findMachineLoadRuleById(final Integer id)", "full_signature": "public MachineLoadRule findMachineLoadRuleById(final Integer id)", "class_method_signature": "RulesRep.findMachineLoadRuleById(final Integer id)", "testcase": false, "constructor": false}, {"identifier": "findMachineLoadRuleByMachine", "parameters": "(final Integer id)", "modifiers": "public", "return": "List<MachineLoadRule>", "signature": "List<MachineLoadRule> findMachineLoadRuleByMachine(final Integer id)", "full_signature": "public List<MachineLoadRule> findMachineLoadRuleByMachine(final Integer id)", "class_method_signature": "RulesRep.findMachineLoadRuleByMachine(final Integer id)", "testcase": false, "constructor": false}, {"identifier": "findMachineLoadRuleByRack", "parameters": "(final Rack rack)", "modifiers": "public", "return": "List<MachineLoadRule>", "signature": "List<MachineLoadRule> findMachineLoadRuleByRack(final Rack rack)", "full_signature": "public List<MachineLoadRule> findMachineLoadRuleByRack(final Rack rack)", "class_method_signature": "RulesRep.findMachineLoadRuleByRack(final Rack rack)", "testcase": false, "constructor": false}, {"identifier": "findMachineLoadRuleByRackIncludingMachines", "parameters": "(final Rack rack)", "modifiers": "public", "return": "List<MachineLoadRule>", "signature": "List<MachineLoadRule> findMachineLoadRuleByRackIncludingMachines(final Rack rack)", "full_signature": "public List<MachineLoadRule> findMachineLoadRuleByRackIncludingMachines(final Rack rack)", "class_method_signature": "RulesRep.findMachineLoadRuleByRackIncludingMachines(final Rack rack)", "testcase": false, "constructor": false}, {"identifier": "deleteMachineLoadRule", "parameters": "(final MachineLoadRule machineLoadRule)", "modifiers": "public", "return": "void", "signature": "void deleteMachineLoadRule(final MachineLoadRule machineLoadRule)", "full_signature": "public void deleteMachineLoadRule(final MachineLoadRule machineLoadRule)", "class_method_signature": "RulesRep.deleteMachineLoadRule(final MachineLoadRule machineLoadRule)", "testcase": false, "constructor": false}, {"identifier": "insertMachineLoadRule", "parameters": "(final MachineLoadRule rule)", "modifiers": "public", "return": "MachineLoadRule", "signature": "MachineLoadRule insertMachineLoadRule(final MachineLoadRule rule)", "full_signature": "public MachineLoadRule insertMachineLoadRule(final MachineLoadRule rule)", "class_method_signature": "RulesRep.insertMachineLoadRule(final MachineLoadRule rule)", "testcase": false, "constructor": false}, {"identifier": "findEnterprises", "parameters": "(final EnterpriseExclusionRule eeR)", "modifiers": "public", "return": "Set<EnterpriseDto>", "signature": "Set<EnterpriseDto> findEnterprises(final EnterpriseExclusionRule eeR)", "full_signature": "public Set<EnterpriseDto> findEnterprises(final EnterpriseExclusionRule eeR)", "class_method_signature": "RulesRep.findEnterprises(final EnterpriseExclusionRule eeR)", "testcase": false, "constructor": false}, {"identifier": "deleteFitPolicyRule", "parameters": "(final FitPolicyRule fitPolicyRule)", "modifiers": "public", "return": "void", "signature": "void deleteFitPolicyRule(final FitPolicyRule fitPolicyRule)", "full_signature": "public void deleteFitPolicyRule(final FitPolicyRule fitPolicyRule)", "class_method_signature": "RulesRep.deleteFitPolicyRule(final FitPolicyRule fitPolicyRule)", "testcase": false, "constructor": false}, {"identifier": "getFitPolicyForDatacenter", "parameters": "(final Integer datacenterId)", "modifiers": "public", "return": "FitPolicyRule", "signature": "FitPolicyRule getFitPolicyForDatacenter(final Integer datacenterId)", "full_signature": "public FitPolicyRule getFitPolicyForDatacenter(final Integer datacenterId)", "class_method_signature": "RulesRep.getFitPolicyForDatacenter(final Integer datacenterId)", "testcase": false, "constructor": false}, {"identifier": "getGlobalFitPolicy", "parameters": "()", "modifiers": "public", "return": "FitPolicyRule", "signature": "FitPolicyRule getGlobalFitPolicy()", "full_signature": "public FitPolicyRule getGlobalFitPolicy()", "class_method_signature": "RulesRep.getGlobalFitPolicy()", "testcase": false, "constructor": false}, {"identifier": "getMachineLoadForDatacenter", "parameters": "(final Integer datacenterId)", "modifiers": "public", "return": "List<MachineLoadRule>", "signature": "List<MachineLoadRule> getMachineLoadForDatacenter(final Integer datacenterId)", "full_signature": "public List<MachineLoadRule> getMachineLoadForDatacenter(final Integer datacenterId)", "class_method_signature": "RulesRep.getMachineLoadForDatacenter(final Integer datacenterId)", "testcase": false, "constructor": false}], "file": "model/src/main/java/com/abiquo/server/core/scheduler/RulesRep.java"}, "focal_method": {"identifier": "getGlobalFitPolicy", "parameters": "()", "modifiers": "public", "return": "FitPolicyRule", "body": "public FitPolicyRule getGlobalFitPolicy()\n    {\n        FitPolicyRule fpr = fitPolicyRuleDao.getGlobalFitPolicy();\n        return fpr;\n    }", "signature": "FitPolicyRule getGlobalFitPolicy()", "full_signature": "public FitPolicyRule getGlobalFitPolicy()", "class_method_signature": "RulesRep.getGlobalFitPolicy()", "testcase": false, "constructor": false, "invocations": ["getGlobalFitPolicy"]}, "repository": {"repo_id": 1320181, "url": "https://github.com/abiquo/abiquo", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 25, "size": 82580, "license": "licensed"}}