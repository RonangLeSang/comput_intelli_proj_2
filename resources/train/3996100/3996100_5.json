{"test_class": {"identifier": "CamelLoaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "camel-loader/src/test/java/com/github/rmannibucau/camel/loader/CamelLoaderTest.java"}, "test_case": {"identifier": "loadJavaFromPackage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void loadJavaFromPackage() {\n        Loader loader = LoaderHelper.getLoader(\"camel\");\n        Diagram diagram = loader.load(\"com.github.rmannibucau.camel.route\", FileType.JAVA).iterator().next();\n        assertEquals(6, diagram.getVertices().size());\n        assertEquals(5, diagram.getEdges().size());\n    }", "signature": "void loadJavaFromPackage()", "full_signature": "@Test public void loadJavaFromPackage()", "class_method_signature": "CamelLoaderTest.loadJavaFromPackage()", "testcase": true, "constructor": false, "invocations": ["getLoader", "next", "iterator", "load", "assertEquals", "size", "getVertices", "assertEquals", "size", "getEdges"]}, "focal_class": {"identifier": "CamelLoader", "superclass": "", "interfaces": "implements Loader", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(CamelLoader.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(CamelLoader.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "load", "parameters": "(String input, FileType fileType)", "modifiers": "@Override public", "return": "List<Diagram>", "signature": "List<Diagram> load(String input, FileType fileType)", "full_signature": "@Override public List<Diagram> load(String input, FileType fileType)", "class_method_signature": "CamelLoader.load(String input, FileType fileType)", "testcase": false, "constructor": false}, {"identifier": "key", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String key()", "full_signature": "@Override public String key()", "class_method_signature": "CamelLoader.key()", "testcase": false, "constructor": false}, {"identifier": "camelContextToDiagram", "parameters": "(String input, FileType fileType)", "modifiers": "private", "return": "List<Diagram>", "signature": "List<Diagram> camelContextToDiagram(String input, FileType fileType)", "full_signature": "private List<Diagram> camelContextToDiagram(String input, FileType fileType)", "class_method_signature": "CamelLoader.camelContextToDiagram(String input, FileType fileType)", "testcase": false, "constructor": false}], "file": "camel-loader/src/main/java/com/github/rmannibucau/camel/loader/CamelLoader.java"}, "focal_method": {"identifier": "load", "parameters": "(String input, FileType fileType)", "modifiers": "@Override public", "return": "List<Diagram>", "body": "@Override\n    public List<Diagram> load(String input, FileType fileType) {\n        return camelContextToDiagram(input, fileType);\n    }", "signature": "List<Diagram> load(String input, FileType fileType)", "full_signature": "@Override public List<Diagram> load(String input, FileType fileType)", "class_method_signature": "CamelLoader.load(String input, FileType fileType)", "testcase": false, "constructor": false, "invocations": ["camelContextToDiagram"]}, "repository": {"repo_id": 3996100, "url": "https://github.com/rmannibucau/diagram-generator-parent", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 242, "license": "licensed"}}