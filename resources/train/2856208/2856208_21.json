{"test_class": {"identifier": "TypeNameLocalizationTest", "superclass": "", "interfaces": "", "fields": [], "file": "main/src/test/java/net/sourceforge/argparse4j/helper/TypeNameLocalizationTest.java"}, "test_case": {"identifier": "displayNameOfStandardTypeIsLocalized", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void displayNameOfStandardTypeIsLocalized() {\n        ArgumentParser parser = ArgumentParsers.newFor(\"prog\").locale(Locale.US)\n                .build();\n\n        String displayName = localizeTypeNameIfPossible(parser, Integer.class);\n        \n        assertEquals(\"integer (32 bits)\", displayName);\n    }", "signature": "void displayNameOfStandardTypeIsLocalized()", "full_signature": "@Test public void displayNameOfStandardTypeIsLocalized()", "class_method_signature": "TypeNameLocalizationTest.displayNameOfStandardTypeIsLocalized()", "testcase": true, "constructor": false, "invocations": ["build", "locale", "newFor", "localizeTypeNameIfPossible", "assertEquals"]}, "focal_class": {"identifier": "TypeNameLocalization", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "TypeNameLocalization", "parameters": "()", "modifiers": "private", "return": "", "signature": " TypeNameLocalization()", "full_signature": "private  TypeNameLocalization()", "class_method_signature": "TypeNameLocalization.TypeNameLocalization()", "testcase": false, "constructor": true}, {"identifier": "localizeTypeNameIfPossible", "parameters": "(ArgumentParser parser,\n            Class<?> type)", "modifiers": "public static", "return": "String", "signature": "String localizeTypeNameIfPossible(ArgumentParser parser,\n            Class<?> type)", "full_signature": "public static String localizeTypeNameIfPossible(ArgumentParser parser,\n            Class<?> type)", "class_method_signature": "TypeNameLocalization.localizeTypeNameIfPossible(ArgumentParser parser,\n            Class<?> type)", "testcase": false, "constructor": false}, {"identifier": "localizeTypeName", "parameters": "(ArgumentParser parser,\n            Class<?> type)", "modifiers": "private static", "return": "String", "signature": "String localizeTypeName(ArgumentParser parser,\n            Class<?> type)", "full_signature": "private static String localizeTypeName(ArgumentParser parser,\n            Class<?> type)", "class_method_signature": "TypeNameLocalization.localizeTypeName(ArgumentParser parser,\n            Class<?> type)", "testcase": false, "constructor": false}], "file": "main/src/main/java/net/sourceforge/argparse4j/helper/TypeNameLocalization.java"}, "focal_method": {"identifier": "localizeTypeNameIfPossible", "parameters": "(ArgumentParser parser,\n            Class<?> type)", "modifiers": "public static", "return": "String", "body": "public static String localizeTypeNameIfPossible(ArgumentParser parser,\n            Class<?> type) {\n        return localizeTypeName(parser, type);\n    }", "signature": "String localizeTypeNameIfPossible(ArgumentParser parser,\n            Class<?> type)", "full_signature": "public static String localizeTypeNameIfPossible(ArgumentParser parser,\n            Class<?> type)", "class_method_signature": "TypeNameLocalization.localizeTypeNameIfPossible(ArgumentParser parser,\n            Class<?> type)", "testcase": false, "constructor": false, "invocations": ["localizeTypeName"]}, "repository": {"repo_id": 2856208, "url": "https://github.com/argparse4j/argparse4j", "language": "Java", "is_fork": false, "fork_count": 49, "stargazer_count": 195, "size": 810, "license": "licensed"}}