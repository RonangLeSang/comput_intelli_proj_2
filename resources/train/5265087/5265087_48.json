{"test_class": {"identifier": "ResultCompletePolicyTest", "superclass": "extends AbstractTest", "interfaces": "", "fields": [], "file": "modules/katta-core/src/test/java/net/sf/katta/client/ResultCompletePolicyTest.java"}, "test_case": {"identifier": "testCoverage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCoverage() {\n    Set<String> shards = new HashSet<String>();\n    for (int i = 0; i < 1000; i++) {\n      shards.add(\"s\" + i);\n    }\n    ClientResult<String> r = new ClientResult<String>(null, shards);\n    ResultCompletePolicy<String> rc = new ResultCompletePolicy<String>(0, 60000, (879.0 / 1000.0), false);\n    for (int i = 0; i < 1000; i++) {\n      try {\n        r.addResult(\"foo\", \"s\" + i);\n        if (i < 878) {\n          assertTrue(rc.waitTime(r) > 30000);\n        } else {\n          assertTrue(rc.waitTime(r) == 0);\n        }\n      } catch (Error e) {\n        System.err.println(\"i = \" + i);\n        throw e;\n      }\n    }\n  }", "signature": "void testCoverage()", "full_signature": "@Test public void testCoverage()", "class_method_signature": "ResultCompletePolicyTest.testCoverage()", "testcase": true, "constructor": false, "invocations": ["add", "addResult", "assertTrue", "waitTime", "assertTrue", "waitTime", "println"]}, "focal_class": {"identifier": "ResultCompletePolicy", "superclass": "", "interfaces": "implements IResultPolicy<T>", "fields": [{"original_string": "private final long completeWait;", "modifier": "private final", "type": "long", "declarator": "completeWait", "var_name": "completeWait"}, {"original_string": "private final long completeStopTime;", "modifier": "private final", "type": "long", "declarator": "completeStopTime", "var_name": "completeStopTime"}, {"original_string": "private final long coverageWait;", "modifier": "private final", "type": "long", "declarator": "coverageWait", "var_name": "coverageWait"}, {"original_string": "private final long coverageStopTime;", "modifier": "private final", "type": "long", "declarator": "coverageStopTime", "var_name": "coverageStopTime"}, {"original_string": "private final double coverage;", "modifier": "private final", "type": "double", "declarator": "coverage", "var_name": "coverage"}, {"original_string": "private final boolean shutDown;", "modifier": "private final", "type": "boolean", "declarator": "shutDown", "var_name": "shutDown"}], "methods": [{"identifier": "ResultCompletePolicy", "parameters": "(long timeout)", "modifiers": "public", "return": "", "signature": " ResultCompletePolicy(long timeout)", "full_signature": "public  ResultCompletePolicy(long timeout)", "class_method_signature": "ResultCompletePolicy.ResultCompletePolicy(long timeout)", "testcase": false, "constructor": true}, {"identifier": "ResultCompletePolicy", "parameters": "(long timeout, boolean shutDown)", "modifiers": "public", "return": "", "signature": " ResultCompletePolicy(long timeout, boolean shutDown)", "full_signature": "public  ResultCompletePolicy(long timeout, boolean shutDown)", "class_method_signature": "ResultCompletePolicy.ResultCompletePolicy(long timeout, boolean shutDown)", "testcase": false, "constructor": true}, {"identifier": "ResultCompletePolicy", "parameters": "(long completeWait, long coverageWait, double coverage, boolean shutDown)", "modifiers": "public", "return": "", "signature": " ResultCompletePolicy(long completeWait, long coverageWait, double coverage, boolean shutDown)", "full_signature": "public  ResultCompletePolicy(long completeWait, long coverageWait, double coverage, boolean shutDown)", "class_method_signature": "ResultCompletePolicy.ResultCompletePolicy(long completeWait, long coverageWait, double coverage, boolean shutDown)", "testcase": false, "constructor": true}, {"identifier": "waitTime", "parameters": "(ClientResult<T> result)", "modifiers": "public", "return": "long", "signature": "long waitTime(ClientResult<T> result)", "full_signature": "public long waitTime(ClientResult<T> result)", "class_method_signature": "ResultCompletePolicy.waitTime(ClientResult<T> result)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ResultCompletePolicy.toString()", "testcase": false, "constructor": false}], "file": "modules/katta-core/src/main/java/net/sf/katta/client/ResultCompletePolicy.java"}, "focal_method": {"identifier": "waitTime", "parameters": "(ClientResult<T> result)", "modifiers": "public", "return": "long", "body": "public long waitTime(ClientResult<T> result) {\n    boolean done = result.isClosed();\n    long now = System.currentTimeMillis();\n    if (!done) {\n      if (now < completeStopTime) {\n        done = result.isComplete();\n      } else if (now < coverageStopTime) {\n        done = result.getShardCoverage() >= coverage;\n      } else {\n        done = true;\n      }\n    }\n    if (done) {\n      return shutDown ? -1 : 0;\n    }\n    return coverageStopTime - now;\n  }", "signature": "long waitTime(ClientResult<T> result)", "full_signature": "public long waitTime(ClientResult<T> result)", "class_method_signature": "ResultCompletePolicy.waitTime(ClientResult<T> result)", "testcase": false, "constructor": false, "invocations": ["isClosed", "currentTimeMillis", "isComplete", "getShardCoverage"]}, "repository": {"repo_id": 5265087, "url": "https://github.com/sgroschupf/katta", "language": "Java", "is_fork": false, "fork_count": 17, "stargazer_count": 54, "size": 105648, "license": "licensed"}}