{"test_class": {"identifier": "RpcMessageParserTCPTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static int INVOKE = 0;", "modifier": "private final static", "type": "int", "declarator": "INVOKE = 0", "var_name": "INVOKE"}, {"original_string": "private final static int STOP = 1;", "modifier": "private final static", "type": "int", "declarator": "STOP = 1", "var_name": "STOP"}, {"original_string": "private FilterChainContext mockedContext;", "modifier": "private", "type": "FilterChainContext", "declarator": "mockedContext", "var_name": "mockedContext"}, {"original_string": "private RpcMessageParserTCP tcpParser;", "modifier": "private", "type": "RpcMessageParserTCP", "declarator": "tcpParser", "var_name": "tcpParser"}, {"original_string": "private RpcProtocolFilter rpc;", "modifier": "private", "type": "RpcProtocolFilter", "declarator": "rpc", "var_name": "rpc"}, {"original_string": "private final static int RPC_LAST_FRAG = 0x80000000;", "modifier": "private final static", "type": "int", "declarator": "RPC_LAST_FRAG = 0x80000000", "var_name": "RPC_LAST_FRAG"}], "file": "oncrpc4j-core/src/test/java/org/dcache/oncrpc4j/rpc/RpcMessageParserTCPTest.java"}, "test_case": {"identifier": "testFragmentedMessageMessage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFragmentedMessageMessage() throws IOException, OncRpcException {\n        Xdr xdr = new XdrStreamBuilder().withArgs(new XdrString(new String(new byte[2048]))).build();\n        Buffer b = toFragmentedBuffer(xdr, 1024);\n        mockedContext.setMessage(b);\n\n        assertEquals(INVOKE, tcpParser.handleRead(mockedContext).type());\n        assertEquals(INVOKE, rpc.handleRead(mockedContext).type());\n    }", "signature": "void testFragmentedMessageMessage()", "full_signature": "@Test public void testFragmentedMessageMessage()", "class_method_signature": "RpcMessageParserTCPTest.testFragmentedMessageMessage()", "testcase": true, "constructor": false, "invocations": ["build", "withArgs", "toFragmentedBuffer", "setMessage", "assertEquals", "type", "handleRead", "assertEquals", "type", "handleRead"]}, "focal_class": {"identifier": "RpcMessageParserTCP", "superclass": "extends BaseFilter", "interfaces": "", "fields": [{"original_string": "private final static int RPC_LAST_FRAG = 0x80000000;", "modifier": "private final static", "type": "int", "declarator": "RPC_LAST_FRAG = 0x80000000", "var_name": "RPC_LAST_FRAG"}, {"original_string": "private final static int RPC_SIZE_MASK = 0x7fffffff;", "modifier": "private final static", "type": "int", "declarator": "RPC_SIZE_MASK = 0x7fffffff", "var_name": "RPC_SIZE_MASK"}], "methods": [{"identifier": "handleRead", "parameters": "(FilterChainContext ctx)", "modifiers": "@Override public", "return": "NextAction", "signature": "NextAction handleRead(FilterChainContext ctx)", "full_signature": "@Override public NextAction handleRead(FilterChainContext ctx)", "class_method_signature": "RpcMessageParserTCP.handleRead(FilterChainContext ctx)", "testcase": false, "constructor": false}, {"identifier": "handleWrite", "parameters": "(FilterChainContext ctx)", "modifiers": "@Override public", "return": "NextAction", "signature": "NextAction handleWrite(FilterChainContext ctx)", "full_signature": "@Override public NextAction handleWrite(FilterChainContext ctx)", "class_method_signature": "RpcMessageParserTCP.handleWrite(FilterChainContext ctx)", "testcase": false, "constructor": false}, {"identifier": "isAllFragmentsArrived", "parameters": "(Buffer messageBuffer)", "modifiers": "private", "return": "boolean", "signature": "boolean isAllFragmentsArrived(Buffer messageBuffer)", "full_signature": "private boolean isAllFragmentsArrived(Buffer messageBuffer)", "class_method_signature": "RpcMessageParserTCP.isAllFragmentsArrived(Buffer messageBuffer)", "testcase": false, "constructor": false}, {"identifier": "getMessageSize", "parameters": "(int marker)", "modifiers": "private static", "return": "int", "signature": "int getMessageSize(int marker)", "full_signature": "private static int getMessageSize(int marker)", "class_method_signature": "RpcMessageParserTCP.getMessageSize(int marker)", "testcase": false, "constructor": false}, {"identifier": "isLastFragment", "parameters": "(int marker)", "modifiers": "private static", "return": "boolean", "signature": "boolean isLastFragment(int marker)", "full_signature": "private static boolean isLastFragment(int marker)", "class_method_signature": "RpcMessageParserTCP.isLastFragment(int marker)", "testcase": false, "constructor": false}, {"identifier": "assembleXdr", "parameters": "(Buffer messageBuffer)", "modifiers": "private", "return": "Xdr", "signature": "Xdr assembleXdr(Buffer messageBuffer)", "full_signature": "private Xdr assembleXdr(Buffer messageBuffer)", "class_method_signature": "RpcMessageParserTCP.assembleXdr(Buffer messageBuffer)", "testcase": false, "constructor": false}], "file": "oncrpc4j-core/src/main/java/org/dcache/oncrpc4j/rpc/RpcMessageParserTCP.java"}, "focal_method": {"identifier": "handleRead", "parameters": "(FilterChainContext ctx)", "modifiers": "@Override public", "return": "NextAction", "body": "@Override\n    public NextAction handleRead(FilterChainContext ctx) throws IOException {\n\n        Buffer messageBuffer = ctx.getMessage();\n        if (messageBuffer == null) {\n            return ctx.getStopAction();\n        }\n\n        if (!isAllFragmentsArrived(messageBuffer)) {\n            return ctx.getStopAction(messageBuffer);\n        }\n\n        ctx.setMessage(assembleXdr(messageBuffer));\n\n        final Buffer reminder = messageBuffer.hasRemaining()\n                ? messageBuffer.split(messageBuffer.position()) : null;\n\n        return ctx.getInvokeAction(reminder);\n    }", "signature": "NextAction handleRead(FilterChainContext ctx)", "full_signature": "@Override public NextAction handleRead(FilterChainContext ctx)", "class_method_signature": "RpcMessageParserTCP.handleRead(FilterChainContext ctx)", "testcase": false, "constructor": false, "invocations": ["getMessage", "getStopAction", "isAllFragmentsArrived", "getStopAction", "setMessage", "assembleXdr", "hasRemaining", "split", "position", "getInvokeAction"]}, "repository": {"repo_id": 7695110, "url": "https://github.com/dCache/oncrpc4j", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 25, "size": 909, "license": "licensed"}}