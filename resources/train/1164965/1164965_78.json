{"test_class": {"identifier": "ConstantExpressionTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/ocpsoft/pretty/faces/el/ConstantExpressionTest.java"}, "test_case": {"identifier": "testSimpleConstantExpression", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testSimpleConstantExpression()\n   {\n\n      PrettyExpression expr = new ConstantExpression(\"#{someBean.someProperty}\");\n      assertEquals(\"#{someBean.someProperty}\", expr.getELExpression());\n\n   }", "signature": "void testSimpleConstantExpression()", "full_signature": "@Test public void testSimpleConstantExpression()", "class_method_signature": "ConstantExpressionTest.testSimpleConstantExpression()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getELExpression"]}, "focal_class": {"identifier": "ConstantExpression", "superclass": "", "interfaces": "implements PrettyExpression", "fields": [{"original_string": "private final String expression;", "modifier": "private final", "type": "String", "declarator": "expression", "var_name": "expression"}], "methods": [{"identifier": "ConstantExpression", "parameters": "(String expression)", "modifiers": "public", "return": "", "signature": " ConstantExpression(String expression)", "full_signature": "public  ConstantExpression(String expression)", "class_method_signature": "ConstantExpression.ConstantExpression(String expression)", "testcase": false, "constructor": true}, {"identifier": "getELExpression", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getELExpression()", "full_signature": "public String getELExpression()", "class_method_signature": "ConstantExpression.getELExpression()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ConstantExpression.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ConstantExpression.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "ConstantExpression.equals(Object obj)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/ocpsoft/pretty/faces/el/ConstantExpression.java"}, "focal_method": {"identifier": "getELExpression", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getELExpression()\n   {\n      return expression;\n   }", "signature": "String getELExpression()", "full_signature": "public String getELExpression()", "class_method_signature": "ConstantExpression.getELExpression()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1164965, "url": "https://github.com/ocpsoft/prettyfaces", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 53, "size": 2126, "license": "licensed"}}