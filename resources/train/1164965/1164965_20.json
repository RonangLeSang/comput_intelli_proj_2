{"test_class": {"identifier": "URLTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/ocpsoft/pretty/faces/url/URLTest.java"}, "test_case": {"identifier": "testDecode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testDecode() throws Exception\n   {\n      String value = \"/\\u010d\";\n      URL url = new URL(value);\n      URL encoded = url.encode();\n      assertEquals(\"/%C4%8D\", encoded.toURL());\n   }", "signature": "void testDecode()", "full_signature": "@Test public void testDecode()", "class_method_signature": "URLTest.testDecode()", "testcase": true, "constructor": false, "invocations": ["encode", "assertEquals", "toURL"]}, "focal_class": {"identifier": "URL", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Metadata metadata = new Metadata();", "modifier": "private", "type": "Metadata", "declarator": "metadata = new Metadata()", "var_name": "metadata"}, {"original_string": "private String originalURL = \"\";", "modifier": "private", "type": "String", "declarator": "originalURL = \"\"", "var_name": "originalURL"}, {"original_string": "private List<String> segments;", "modifier": "private", "type": "List<String>", "declarator": "segments", "var_name": "segments"}, {"original_string": "private final Map<String, List<String>> decodedSegments = new HashMap<String, List<String>>();", "modifier": "private final", "type": "Map<String, List<String>>", "declarator": "decodedSegments = new HashMap<String, List<String>>()", "var_name": "decodedSegments"}], "methods": [{"identifier": "URL", "parameters": "(String url)", "modifiers": "public", "return": "", "signature": " URL(String url)", "full_signature": "public  URL(String url)", "class_method_signature": "URL.URL(String url)", "testcase": false, "constructor": true}, {"identifier": "build", "parameters": "(final String url)", "modifiers": "public static", "return": "URL", "signature": "URL build(final String url)", "full_signature": "public static URL build(final String url)", "class_method_signature": "URL.build(final String url)", "testcase": false, "constructor": false}, {"identifier": "URL", "parameters": "(final List<String> segments, final Metadata metadata)", "modifiers": "public", "return": "", "signature": " URL(final List<String> segments, final Metadata metadata)", "full_signature": "public  URL(final List<String> segments, final Metadata metadata)", "class_method_signature": "URL.URL(final List<String> segments, final Metadata metadata)", "testcase": false, "constructor": true}, {"identifier": "build", "parameters": "(final List<String> segments, final Metadata metadata)", "modifiers": "public static", "return": "URL", "signature": "URL build(final List<String> segments, final Metadata metadata)", "full_signature": "public static URL build(final List<String> segments, final Metadata metadata)", "class_method_signature": "URL.build(final List<String> segments, final Metadata metadata)", "testcase": false, "constructor": false}, {"identifier": "getDecodedSegments", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getDecodedSegments()", "full_signature": "public List<String> getDecodedSegments()", "class_method_signature": "URL.getDecodedSegments()", "testcase": false, "constructor": false}, {"identifier": "getEncodedSegments", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getEncodedSegments()", "full_signature": "public List<String> getEncodedSegments()", "class_method_signature": "URL.getEncodedSegments()", "testcase": false, "constructor": false}, {"identifier": "encodeSegment", "parameters": "(final String segment)", "modifiers": "private static", "return": "String", "signature": "String encodeSegment(final String segment)", "full_signature": "private static String encodeSegment(final String segment)", "class_method_signature": "URL.encodeSegment(final String segment)", "testcase": false, "constructor": false}, {"identifier": "decodeSegment", "parameters": "(final String segment)", "modifiers": "private static", "return": "String", "signature": "String decodeSegment(final String segment)", "full_signature": "private static String decodeSegment(final String segment)", "class_method_signature": "URL.decodeSegment(final String segment)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "()", "modifiers": "public", "return": "URL", "signature": "URL decode()", "full_signature": "public URL decode()", "class_method_signature": "URL.decode()", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "()", "modifiers": "public", "return": "URL", "signature": "URL encode()", "full_signature": "public URL encode()", "class_method_signature": "URL.encode()", "testcase": false, "constructor": false}, {"identifier": "numSegments", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int numSegments()", "full_signature": "public int numSegments()", "class_method_signature": "URL.numSegments()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "URL.toString()", "testcase": false, "constructor": false}, {"identifier": "toURL", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toURL()", "full_signature": "public String toURL()", "class_method_signature": "URL.toURL()", "testcase": false, "constructor": false}, {"identifier": "getSegments", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getSegments()", "full_signature": "public List<String> getSegments()", "class_method_signature": "URL.getSegments()", "testcase": false, "constructor": false}, {"identifier": "hasLeadingSlash", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasLeadingSlash()", "full_signature": "public boolean hasLeadingSlash()", "class_method_signature": "URL.hasLeadingSlash()", "testcase": false, "constructor": false}, {"identifier": "hasTrailingSlash", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasTrailingSlash()", "full_signature": "public boolean hasTrailingSlash()", "class_method_signature": "URL.hasTrailingSlash()", "testcase": false, "constructor": false}, {"identifier": "getEncoding", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getEncoding()", "full_signature": "public String getEncoding()", "class_method_signature": "URL.getEncoding()", "testcase": false, "constructor": false}, {"identifier": "setEncoding", "parameters": "(final String encoding)", "modifiers": "public", "return": "void", "signature": "void setEncoding(final String encoding)", "full_signature": "public void setEncoding(final String encoding)", "class_method_signature": "URL.setEncoding(final String encoding)", "testcase": false, "constructor": false}, {"identifier": "getMetadata", "parameters": "()", "modifiers": "public", "return": "Metadata", "signature": "Metadata getMetadata()", "full_signature": "public Metadata getMetadata()", "class_method_signature": "URL.getMetadata()", "testcase": false, "constructor": false}, {"identifier": "setMetadata", "parameters": "(final Metadata metadata)", "modifiers": "public", "return": "void", "signature": "void setMetadata(final Metadata metadata)", "full_signature": "public void setMetadata(final Metadata metadata)", "class_method_signature": "URL.setMetadata(final Metadata metadata)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/ocpsoft/pretty/faces/url/URL.java"}, "focal_method": {"identifier": "decode", "parameters": "()", "modifiers": "public", "return": "URL", "body": "public URL decode()\n   {\n      return new URL(getDecodedSegments(), metadata);\n   }", "signature": "URL decode()", "full_signature": "public URL decode()", "class_method_signature": "URL.decode()", "testcase": false, "constructor": false, "invocations": ["getDecodedSegments"]}, "repository": {"repo_id": 1164965, "url": "https://github.com/ocpsoft/prettyfaces", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 53, "size": 2126, "license": "licensed"}}