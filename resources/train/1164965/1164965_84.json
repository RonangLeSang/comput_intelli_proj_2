{"test_class": {"identifier": "UrlPatternParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "UrlPatternParser parser = new UrlPatternParser(\n            \"/project/#{paramsBean.project}/#{paramsBean.project}/#{paramsBean.story}\");", "modifier": "", "type": "UrlPatternParser", "declarator": "parser = new UrlPatternParser(\n            \"/project/#{paramsBean.project}/#{paramsBean.project}/#{paramsBean.story}\")", "var_name": "parser"}], "file": "impl-jsf11/src/test/java/com/ocpsoft/pretty/util/UrlPatternParserTest.java"}, "test_case": {"identifier": "testGetMappedParameters", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetMappedParameters()\n    {\n        Map<String, String> params = parser.getMappedParameters(\"/project/starfish1/starfish2/story1\");\n        assertEquals(2, params.size());\n    }", "signature": "void testGetMappedParameters()", "full_signature": "@Test public void testGetMappedParameters()", "class_method_signature": "UrlPatternParserTest.testGetMappedParameters()", "testcase": true, "constructor": false, "invocations": ["getMappedParameters", "assertEquals", "size"]}, "focal_class": {"identifier": "UrlPatternParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String originalPattern;", "modifier": "private", "type": "String", "declarator": "originalPattern", "var_name": "originalPattern"}, {"original_string": "private String urlPattern;", "modifier": "private", "type": "String", "declarator": "urlPattern", "var_name": "urlPattern"}, {"original_string": "private final List<String> expressions = new ArrayList<String>();", "modifier": "private final", "type": "List<String>", "declarator": "expressions = new ArrayList<String>()", "var_name": "expressions"}], "methods": [{"identifier": "UrlPatternParser", "parameters": "(final String pattern)", "modifiers": "public", "return": "", "signature": " UrlPatternParser(final String pattern)", "full_signature": "public  UrlPatternParser(final String pattern)", "class_method_signature": "UrlPatternParser.UrlPatternParser(final String pattern)", "testcase": false, "constructor": true}, {"identifier": "matches", "parameters": "(final String url)", "modifiers": "public", "return": "boolean", "signature": "boolean matches(final String url)", "full_signature": "public boolean matches(final String url)", "class_method_signature": "UrlPatternParser.matches(final String url)", "testcase": false, "constructor": false}, {"identifier": "getMappedParameters", "parameters": "(final String url)", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getMappedParameters(final String url)", "full_signature": "public Map<String, String> getMappedParameters(final String url)", "class_method_signature": "UrlPatternParser.getMappedParameters(final String url)", "testcase": false, "constructor": false}, {"identifier": "getMappedUrl", "parameters": "(final Object... params)", "modifiers": "public", "return": "String", "signature": "String getMappedUrl(final Object... params)", "full_signature": "public String getMappedUrl(final Object... params)", "class_method_signature": "UrlPatternParser.getMappedUrl(final Object... params)", "testcase": false, "constructor": false}, {"identifier": "setUrlPattern", "parameters": "(final String urlPattern)", "modifiers": "public", "return": "void", "signature": "void setUrlPattern(final String urlPattern)", "full_signature": "public void setUrlPattern(final String urlPattern)", "class_method_signature": "UrlPatternParser.setUrlPattern(final String urlPattern)", "testcase": false, "constructor": false}, {"identifier": "getParameterCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getParameterCount()", "full_signature": "public int getParameterCount()", "class_method_signature": "UrlPatternParser.getParameterCount()", "testcase": false, "constructor": false}], "file": "impl-jsf11/src/main/java/com/ocpsoft/pretty/util/UrlPatternParser.java"}, "focal_method": {"identifier": "getMappedParameters", "parameters": "(final String url)", "modifiers": "public", "return": "Map<String, String>", "body": "public Map<String, String> getMappedParameters(final String url)\n   {\n      Map<String, String> result = new HashMap<String, String>();\n      Matcher matcher = Pattern.compile(urlPattern).matcher(url);\n      if (matcher.matches())\n      {\n         for (int i = 0; i < expressions.size(); i++)\n         {\n            String el = expressions.get(i);\n            String value = matcher.group(i + 1);\n            result.put(el, value);\n         }\n      }\n      return result;\n   }", "signature": "Map<String, String> getMappedParameters(final String url)", "full_signature": "public Map<String, String> getMappedParameters(final String url)", "class_method_signature": "UrlPatternParser.getMappedParameters(final String url)", "testcase": false, "constructor": false, "invocations": ["matcher", "compile", "matches", "size", "get", "group", "put"]}, "repository": {"repo_id": 1164965, "url": "https://github.com/ocpsoft/prettyfaces", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 53, "size": 2126, "license": "licensed"}}