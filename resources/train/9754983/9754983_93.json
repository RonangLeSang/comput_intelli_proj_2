{"test_class": {"identifier": "CookieCollectionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String COOKIE_NAME = \"chocolate\";", "modifier": "public static final", "type": "String", "declarator": "COOKIE_NAME = \"chocolate\"", "var_name": "COOKIE_NAME"}, {"original_string": "public static final String COOKIE_VALUE = \"yummy\";", "modifier": "public static final", "type": "String", "declarator": "COOKIE_VALUE = \"yummy\"", "var_name": "COOKIE_VALUE"}, {"original_string": "public static final String BROWNIE_NAME = \"brownie\";", "modifier": "public static final", "type": "String", "declarator": "BROWNIE_NAME = \"brownie\"", "var_name": "BROWNIE_NAME"}, {"original_string": "private Cookie cookie;", "modifier": "private", "type": "Cookie", "declarator": "cookie", "var_name": "cookie"}, {"original_string": "private Cookie cupsCookie;", "modifier": "private", "type": "Cookie", "declarator": "cupsCookie", "var_name": "cupsCookie"}, {"original_string": "private Cookie brownieCookie;", "modifier": "private", "type": "Cookie", "declarator": "brownieCookie", "var_name": "brownieCookie"}], "file": "jhipster/jhipster-uaa/gateway/src/test/java/com/baeldung/jhipster/gateway/security/oauth2/CookieCollectionTest.java"}, "test_case": {"identifier": "addAll", "parameters": "()", "modifiers": "@Test @SuppressWarnings(\"unchecked\") public", "return": "void", "body": "@Test\n    @SuppressWarnings(\"unchecked\")\n    public void addAll() throws Exception {\n        CookieCollection cookies = new CookieCollection();\n        List<Cookie> content = Arrays.asList(cookie, brownieCookie, cupsCookie);\n        boolean modified = cookies.addAll(content);\n        Assert.assertTrue(modified);\n        Assert.assertEquals(3, cookies.size());\n        Assert.assertTrue(cookies.containsAll(content));\n        Assert.assertFalse(cookies.addAll(Collections.EMPTY_LIST));\n    }", "signature": "void addAll()", "full_signature": "@Test @SuppressWarnings(\"unchecked\") public void addAll()", "class_method_signature": "CookieCollectionTest.addAll()", "testcase": true, "constructor": false, "invocations": ["asList", "addAll", "assertTrue", "assertEquals", "size", "assertTrue", "containsAll", "assertFalse", "addAll"]}, "focal_class": {"identifier": "CookieCollection", "superclass": "", "interfaces": "implements Collection<Cookie>", "fields": [{"original_string": "private final Map<String, Cookie> cookieMap;", "modifier": "private final", "type": "Map<String, Cookie>", "declarator": "cookieMap", "var_name": "cookieMap"}], "methods": [{"identifier": "CookieCollection", "parameters": "()", "modifiers": "public", "return": "", "signature": " CookieCollection()", "full_signature": "public  CookieCollection()", "class_method_signature": "CookieCollection.CookieCollection()", "testcase": false, "constructor": true}, {"identifier": "CookieCollection", "parameters": "(Cookie... cookies)", "modifiers": "public", "return": "", "signature": " CookieCollection(Cookie... cookies)", "full_signature": "public  CookieCollection(Cookie... cookies)", "class_method_signature": "CookieCollection.CookieCollection(Cookie... cookies)", "testcase": false, "constructor": true}, {"identifier": "CookieCollection", "parameters": "(Collection<? extends Cookie> cookies)", "modifiers": "public", "return": "", "signature": " CookieCollection(Collection<? extends Cookie> cookies)", "full_signature": "public  CookieCollection(Collection<? extends Cookie> cookies)", "class_method_signature": "CookieCollection.CookieCollection(Collection<? extends Cookie> cookies)", "testcase": false, "constructor": true}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "CookieCollection.size()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "CookieCollection.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(Object o)", "full_signature": "@Override public boolean contains(Object o)", "class_method_signature": "CookieCollection.contains(Object o)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Cookie>", "signature": "Iterator<Cookie> iterator()", "full_signature": "@Override public Iterator<Cookie> iterator()", "class_method_signature": "CookieCollection.iterator()", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "()", "modifiers": "public", "return": "Cookie[]", "signature": "Cookie[] toArray()", "full_signature": "public Cookie[] toArray()", "class_method_signature": "CookieCollection.toArray()", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "(T[] ts)", "modifiers": "@Override public", "return": "T[]", "signature": "T[] toArray(T[] ts)", "full_signature": "@Override public T[] toArray(T[] ts)", "class_method_signature": "CookieCollection.toArray(T[] ts)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Cookie cookie)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean add(Cookie cookie)", "full_signature": "@Override public boolean add(Cookie cookie)", "class_method_signature": "CookieCollection.add(Cookie cookie)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean remove(Object o)", "full_signature": "@Override public boolean remove(Object o)", "class_method_signature": "CookieCollection.remove(Object o)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String name)", "modifiers": "public", "return": "Cookie", "signature": "Cookie get(String name)", "full_signature": "public Cookie get(String name)", "class_method_signature": "CookieCollection.get(String name)", "testcase": false, "constructor": false}, {"identifier": "containsAll", "parameters": "(Collection<?> collection)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsAll(Collection<?> collection)", "full_signature": "@Override public boolean containsAll(Collection<?> collection)", "class_method_signature": "CookieCollection.containsAll(Collection<?> collection)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(Collection<? extends Cookie> collection)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addAll(Collection<? extends Cookie> collection)", "full_signature": "@Override public boolean addAll(Collection<? extends Cookie> collection)", "class_method_signature": "CookieCollection.addAll(Collection<? extends Cookie> collection)", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "(Collection<?> collection)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeAll(Collection<?> collection)", "full_signature": "@Override public boolean removeAll(Collection<?> collection)", "class_method_signature": "CookieCollection.removeAll(Collection<?> collection)", "testcase": false, "constructor": false}, {"identifier": "retainAll", "parameters": "(Collection<?> collection)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean retainAll(Collection<?> collection)", "full_signature": "@Override public boolean retainAll(Collection<?> collection)", "class_method_signature": "CookieCollection.retainAll(Collection<?> collection)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "CookieCollection.clear()", "testcase": false, "constructor": false}], "file": "jhipster/jhipster-uaa/gateway/src/main/java/com/baeldung/jhipster/gateway/security/oauth2/CookieCollection.java"}, "focal_method": {"identifier": "addAll", "parameters": "(Collection<? extends Cookie> collection)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean addAll(Collection<? extends Cookie> collection) {\n        boolean result = false;\n        for(Cookie cookie : collection) {\n            result|= add(cookie);\n        }\n        return result;\n    }", "signature": "boolean addAll(Collection<? extends Cookie> collection)", "full_signature": "@Override public boolean addAll(Collection<? extends Cookie> collection)", "class_method_signature": "CookieCollection.addAll(Collection<? extends Cookie> collection)", "testcase": false, "constructor": false, "invocations": ["add"]}, "repository": {"repo_id": 9754983, "url": "https://github.com/eugenp/tutorials", "stars": 19184, "created": "4/29/2013 6:26:36 PM +00:00", "updates": "2020-01-27T21:38:05+00:00", "fork": "False", "license": "licensed"}}