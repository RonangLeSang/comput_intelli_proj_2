{"test_class": {"identifier": "DateTimeIterableFieldAdapterTest", "superclass": "", "interfaces": "", "fields": [], "file": "opentasks-provider/src/test/java/org/dmfs/provider/tasks/model/adapters/DateTimeIterableFieldAdapterTest.java"}, "test_case": {"identifier": "testSetInSingleAbsolute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetInSingleAbsolute()\n    {\n        ContentValues values = new ContentValues();\n        FieldAdapter<Iterable<DateTime>, ?> adapter = new DateTimeIterableFieldAdapter<TaskAdapter>(\"x\", \"y\");\n        adapter.setIn(values, new Seq<>(DateTime.parse(\"Europe/Berlin\", \"20180109T150000\")));\n        assertThat(values.getAsString(\"x\"), is(\"20180109T140000Z\"));\n    }", "signature": "void testSetInSingleAbsolute()", "full_signature": "@Test public void testSetInSingleAbsolute()", "class_method_signature": "DateTimeIterableFieldAdapterTest.testSetInSingleAbsolute()", "testcase": true, "constructor": false, "invocations": ["setIn", "parse", "assertThat", "getAsString", "is"]}, "focal_class": {"identifier": "DateTimeIterableFieldAdapter", "superclass": "extends SimpleFieldAdapter<Iterable<DateTime>, EntityType>", "interfaces": "", "fields": [{"original_string": "private final String mDateTimeListFieldName;", "modifier": "private final", "type": "String", "declarator": "mDateTimeListFieldName", "var_name": "mDateTimeListFieldName"}, {"original_string": "private final String mTimeZoneFieldName;", "modifier": "private final", "type": "String", "declarator": "mTimeZoneFieldName", "var_name": "mTimeZoneFieldName"}], "methods": [{"identifier": "DateTimeIterableFieldAdapter", "parameters": "(String datetimeListFieldName, String timezoneFieldName)", "modifiers": "public", "return": "", "signature": " DateTimeIterableFieldAdapter(String datetimeListFieldName, String timezoneFieldName)", "full_signature": "public  DateTimeIterableFieldAdapter(String datetimeListFieldName, String timezoneFieldName)", "class_method_signature": "DateTimeIterableFieldAdapter.DateTimeIterableFieldAdapter(String datetimeListFieldName, String timezoneFieldName)", "testcase": false, "constructor": true}, {"identifier": "fieldName", "parameters": "()", "modifiers": "@Override", "return": "String", "signature": "String fieldName()", "full_signature": "@Override String fieldName()", "class_method_signature": "DateTimeIterableFieldAdapter.fieldName()", "testcase": false, "constructor": false}, {"identifier": "getFrom", "parameters": "(ContentValues values)", "modifiers": "@Override public", "return": "Iterable<DateTime>", "signature": "Iterable<DateTime> getFrom(ContentValues values)", "full_signature": "@Override public Iterable<DateTime> getFrom(ContentValues values)", "class_method_signature": "DateTimeIterableFieldAdapter.getFrom(ContentValues values)", "testcase": false, "constructor": false}, {"identifier": "getFrom", "parameters": "(Cursor cursor)", "modifiers": "@Override public", "return": "Iterable<DateTime>", "signature": "Iterable<DateTime> getFrom(Cursor cursor)", "full_signature": "@Override public Iterable<DateTime> getFrom(Cursor cursor)", "class_method_signature": "DateTimeIterableFieldAdapter.getFrom(Cursor cursor)", "testcase": false, "constructor": false}, {"identifier": "getFrom", "parameters": "(Cursor cursor, ContentValues values)", "modifiers": "@Override public", "return": "Iterable<DateTime>", "signature": "Iterable<DateTime> getFrom(Cursor cursor, ContentValues values)", "full_signature": "@Override public Iterable<DateTime> getFrom(Cursor cursor, ContentValues values)", "class_method_signature": "DateTimeIterableFieldAdapter.getFrom(Cursor cursor, ContentValues values)", "testcase": false, "constructor": false}, {"identifier": "setIn", "parameters": "(ContentValues values, Iterable<DateTime> value)", "modifiers": "@Override public", "return": "void", "signature": "void setIn(ContentValues values, Iterable<DateTime> value)", "full_signature": "@Override public void setIn(ContentValues values, Iterable<DateTime> value)", "class_method_signature": "DateTimeIterableFieldAdapter.setIn(ContentValues values, Iterable<DateTime> value)", "testcase": false, "constructor": false}], "file": "opentasks-provider/src/main/java/org/dmfs/provider/tasks/model/adapters/DateTimeIterableFieldAdapter.java"}, "focal_method": {"identifier": "setIn", "parameters": "(ContentValues values, Iterable<DateTime> value)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void setIn(ContentValues values, Iterable<DateTime> value)\n    {\n        if (value != null)\n        {\n            String stringValue = TextUtils.join(\",\", new Mapped<>(dt -> dt.isFloating() ? dt : dt.shiftTimeZone(DateTime.UTC), value));\n            values.put(mDateTimeListFieldName, stringValue.isEmpty() ? null : stringValue);\n        }\n        else\n        {\n            values.put(mDateTimeListFieldName, (String) null);\n        }\n    }", "signature": "void setIn(ContentValues values, Iterable<DateTime> value)", "full_signature": "@Override public void setIn(ContentValues values, Iterable<DateTime> value)", "class_method_signature": "DateTimeIterableFieldAdapter.setIn(ContentValues values, Iterable<DateTime> value)", "testcase": false, "constructor": false, "invocations": ["join", "isFloating", "shiftTimeZone", "put", "isEmpty", "put"]}, "repository": {"repo_id": 10550221, "url": "https://github.com/dmfs/opentasks", "language": "Java", "is_fork": false, "fork_count": 220, "stargazer_count": 752, "size": 49044, "license": "licensed"}}