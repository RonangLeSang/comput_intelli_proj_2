{"test_class": {"identifier": "TestConverter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_COUNTRY = \"US\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_COUNTRY = \"US\"", "var_name": "DEFAULT_COUNTRY"}], "file": "proctor-pipet/proctor-pipet-core/src/test/java/com/indeed/proctor/pipet/core/var/TestConverter.java"}, "test_case": {"identifier": "testConvertIdentifiers", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConvertIdentifiers() {\n        final Converter converter = new Converter(Collections.<ContextVariable>emptyList());\n\n        final Map<TestType, String> rawIds = ImmutableMap.of(\n            TestType.ANONYMOUS_USER, \"user-123\",\n            TestType.EMAIL_ADDRESS, \"foo@example.com\"\n        );\n\n        final RawParameters rawParameters = new RawParameters(\n            Collections.<String, String>emptyMap(),\n            rawIds,\n            Collections.<String>emptyList(),\n            \"\"\n        );\n\n        final ConvertedParameters convertedParameters = converter.convert(rawParameters);\n        final Identifiers ids = convertedParameters.getIdentifiers();\n        assertEquals(\"user-123\", ids.getIdentifier(TestType.ANONYMOUS_USER));\n        assertEquals(\"foo@example.com\", ids.getIdentifier(TestType.EMAIL_ADDRESS));\n        assertTrue(ids.isRandomEnabled());\n    }", "signature": "void testConvertIdentifiers()", "full_signature": "@Test public void testConvertIdentifiers()", "class_method_signature": "TestConverter.testConvertIdentifiers()", "testcase": true, "constructor": false, "invocations": ["emptyList", "of", "emptyMap", "emptyList", "convert", "getIdentifiers", "assertEquals", "getIdentifier", "assertEquals", "getIdentifier", "assertTrue", "isRandomEnabled"]}, "focal_class": {"identifier": "Converter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final List<ContextVariable> contextList;", "modifier": "private final", "type": "List<ContextVariable>", "declarator": "contextList", "var_name": "contextList"}], "methods": [{"identifier": "Converter", "parameters": "(final List<ContextVariable> contextList)", "modifiers": "public", "return": "", "signature": " Converter(final List<ContextVariable> contextList)", "full_signature": "public  Converter(final List<ContextVariable> contextList)", "class_method_signature": "Converter.Converter(final List<ContextVariable> contextList)", "testcase": false, "constructor": true}, {"identifier": "convert", "parameters": "(final RawParameters raw)", "modifiers": "public", "return": "ConvertedParameters", "signature": "ConvertedParameters convert(final RawParameters raw)", "full_signature": "public ConvertedParameters convert(final RawParameters raw)", "class_method_signature": "Converter.convert(final RawParameters raw)", "testcase": false, "constructor": false}, {"identifier": "convertContext", "parameters": "(final Map<String, String> contextValues)", "modifiers": "private", "return": "Map<String, Object>", "signature": "Map<String, Object> convertContext(final Map<String, String> contextValues)", "full_signature": "private Map<String, Object> convertContext(final Map<String, String> contextValues)", "class_method_signature": "Converter.convertContext(final Map<String, String> contextValues)", "testcase": false, "constructor": false}, {"identifier": "convertIdentifiers", "parameters": "(final Map<TestType, String> identifiers)", "modifiers": "private", "return": "Identifiers", "signature": "Identifiers convertIdentifiers(final Map<TestType, String> identifiers)", "full_signature": "private Identifiers convertIdentifiers(final Map<TestType, String> identifiers)", "class_method_signature": "Converter.convertIdentifiers(final Map<TestType, String> identifiers)", "testcase": false, "constructor": false}, {"identifier": "convertForceGroups", "parameters": "(final String forceGroups)", "modifiers": "private", "return": "Map<String, Integer>", "signature": "Map<String, Integer> convertForceGroups(final String forceGroups)", "full_signature": "private Map<String, Integer> convertForceGroups(final String forceGroups)", "class_method_signature": "Converter.convertForceGroups(final String forceGroups)", "testcase": false, "constructor": false}], "file": "proctor-pipet/proctor-pipet-core/src/main/java/com/indeed/proctor/pipet/core/var/Converter.java"}, "focal_method": {"identifier": "convertIdentifiers", "parameters": "(final Map<TestType, String> identifiers)", "modifiers": "private", "return": "Identifiers", "body": "private Identifiers convertIdentifiers(final Map<TestType, String> identifiers) {\n        return new Identifiers(ImmutableMap.copyOf(identifiers), true);\n    }", "signature": "Identifiers convertIdentifiers(final Map<TestType, String> identifiers)", "full_signature": "private Identifiers convertIdentifiers(final Map<TestType, String> identifiers)", "class_method_signature": "Converter.convertIdentifiers(final Map<TestType, String> identifiers)", "testcase": false, "constructor": false, "invocations": ["copyOf"]}, "repository": {"repo_id": 13075200, "url": "https://github.com/indeedeng/proctor", "language": "Java", "is_fork": false, "fork_count": 88, "stargazer_count": 347, "size": 4699, "license": "licensed"}}