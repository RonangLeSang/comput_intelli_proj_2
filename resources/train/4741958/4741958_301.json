{"test_class": {"identifier": "EntropyTest", "superclass": "extends MahoutTestCase", "interfaces": "", "fields": [], "file": "core/src/test/java/org/apache/mahout/math/stats/entropy/EntropyTest.java"}, "test_case": {"identifier": "testLetters", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testLetters() throws Exception {\n    String[] content = { \"A\", \"A\", \"A\", \"A\", \"A\", \"B\", \"B\", \"C\", \"D\", \"E\" };\n    calculateEntropy(content, 1.96096405, \"key\");\n  }", "signature": "void testLetters()", "full_signature": "@Test public void testLetters()", "class_method_signature": "EntropyTest.testLetters()", "testcase": true, "constructor": false, "invocations": ["calculateEntropy"]}, "focal_class": {"identifier": "Entropy", "superclass": "extends AbstractJob", "interfaces": "", "fields": [{"original_string": "private Path tempPath;", "modifier": "private", "type": "Path", "declarator": "tempPath", "var_name": "tempPath"}, {"original_string": "private long numberItems;", "modifier": "private", "type": "long", "declarator": "numberItems", "var_name": "numberItems"}, {"original_string": "private String source;", "modifier": "private", "type": "String", "declarator": "source", "var_name": "source"}, {"original_string": "private static final String TEMP_FILE = \"temp\";", "modifier": "private static final", "type": "String", "declarator": "TEMP_FILE = \"temp\"", "var_name": "TEMP_FILE"}, {"original_string": "static final String NUMBER_ITEMS_PARAM = \"number.items\";", "modifier": "static final", "type": "String", "declarator": "NUMBER_ITEMS_PARAM = \"number.items\"", "var_name": "NUMBER_ITEMS_PARAM"}], "methods": [{"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "Entropy.main(String[] args)", "testcase": false, "constructor": false}, {"identifier": "getNumberItems", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getNumberItems()", "full_signature": "public long getNumberItems()", "class_method_signature": "Entropy.getNumberItems()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "(String[] args)", "modifiers": "@Override public", "return": "int", "signature": "int run(String[] args)", "full_signature": "@Override public int run(String[] args)", "class_method_signature": "Entropy.run(String[] args)", "testcase": false, "constructor": false}, {"identifier": "prepareArguments", "parameters": "(String[] args)", "modifiers": "private", "return": "void", "signature": "void prepareArguments(String[] args)", "full_signature": "private void prepareArguments(String[] args)", "class_method_signature": "Entropy.prepareArguments(String[] args)", "testcase": false, "constructor": false}, {"identifier": "groupAndCount", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void groupAndCount()", "full_signature": "private void groupAndCount()", "class_method_signature": "Entropy.groupAndCount()", "testcase": false, "constructor": false}, {"identifier": "calculateEntropy", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void calculateEntropy()", "full_signature": "private void calculateEntropy()", "class_method_signature": "Entropy.calculateEntropy()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/apache/mahout/math/stats/entropy/Entropy.java"}, "focal_method": {"identifier": "calculateEntropy", "parameters": "()", "modifiers": "private", "return": "void", "body": "private void calculateEntropy() throws IOException, ClassNotFoundException, InterruptedException {\n\n    Job job = prepareJob(tempPath, getOutputPath(), SequenceFileInputFormat.class, CalculateEntropyMapper.class,\n        NullWritable.class, DoubleWritable.class, CalculateEntropyReducer.class, NullWritable.class,\n        DoubleWritable.class, SequenceFileOutputFormat.class);\n    job.getConfiguration().set(NUMBER_ITEMS_PARAM, String.valueOf(numberItems));\n    job.setCombinerClass(DoubleSumReducer.class);\n    job.waitForCompletion(true);\n\n  }", "signature": "void calculateEntropy()", "full_signature": "private void calculateEntropy()", "class_method_signature": "Entropy.calculateEntropy()", "testcase": false, "constructor": false, "invocations": ["prepareJob", "getOutputPath", "set", "getConfiguration", "valueOf", "setCombinerClass", "waitForCompletion"]}, "repository": {"repo_id": 4741958, "url": "https://github.com/cloudera/mahout", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 41618, "license": "licensed"}}