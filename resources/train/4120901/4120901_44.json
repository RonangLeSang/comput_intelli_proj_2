{"test_class": {"identifier": "HadoopWorkflowLaunchRequestAdapterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HadoopWorkflowLaunchRequestAdapter launchRequest;", "modifier": "private", "type": "HadoopWorkflowLaunchRequestAdapter", "declarator": "launchRequest", "var_name": "launchRequest"}], "file": "scalable-service/master/src/test/java/org/springframework/data/hadoop/admin/workflow/HadoopWorkflowLaunchRequestAdapterTest.java"}, "test_case": {"identifier": "testHandleUploadedFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testHandleUploadedFile() {\n\t\tApplicationContext context = new ClassPathXmlApplicationContext(new String[] {\n\t\t\t\t\"classpath:org/springframework/data/hadoop/admin/env-context.xml\",\n\t\t\t\t\"classpath:org/springframework/data/hadoop/admin/data-source-context.xml\",\n\t\t\t\t\"classpath:org/springframework/data/hadoop/admin/execution-context.xml\", });\n\t\tlaunchRequest.setApplicationContext(context);\n\n\t\tFile descriptor = new File(\"src/test/resources/org/springframework/data/hadoop/admin/workflow/context.xml\");\n\t\tlaunchRequest.handleUploadedFile(descriptor);\n\n\t\tJobRegistry jobRegistry = context.getBean(\"jobRegistry\", JobRegistry.class);\n\t\tCollection<String> jobNames = jobRegistry.getJobNames();\n\t\tAssert.assertEquals(1, jobNames.size());\n\t\tAssert.assertTrue(jobNames.contains(\"wordcount-withscript-job\"));\n\t}", "signature": "void testHandleUploadedFile()", "full_signature": "@Test public void testHandleUploadedFile()", "class_method_signature": "HadoopWorkflowLaunchRequestAdapterTest.testHandleUploadedFile()", "testcase": true, "constructor": false, "invocations": ["setApplicationContext", "handleUploadedFile", "getBean", "getJobNames", "assertEquals", "size", "assertTrue", "contains"]}, "focal_class": {"identifier": "HadoopWorkflowLaunchRequestAdapter", "superclass": "", "interfaces": "implements ApplicationContextAware", "fields": [{"original_string": "private static final Log logger = LogFactory.getLog(HadoopWorkflowLaunchRequestAdapter.class);", "modifier": "private static final", "type": "Log", "declarator": "logger = LogFactory.getLog(HadoopWorkflowLaunchRequestAdapter.class)", "var_name": "logger"}, {"original_string": "private ApplicationContext context;", "modifier": "private", "type": "ApplicationContext", "declarator": "context", "var_name": "context"}], "methods": [{"identifier": "setApplicationContext", "parameters": "(ApplicationContext applicationContext)", "modifiers": "@Override public", "return": "void", "signature": "void setApplicationContext(ApplicationContext applicationContext)", "full_signature": "@Override public void setApplicationContext(ApplicationContext applicationContext)", "class_method_signature": "HadoopWorkflowLaunchRequestAdapter.setApplicationContext(ApplicationContext applicationContext)", "testcase": false, "constructor": false}, {"identifier": "handleUploadedFile", "parameters": "(final File workflowFile)", "modifiers": "@ServiceActivator public", "return": "void", "signature": "void handleUploadedFile(final File workflowFile)", "full_signature": "@ServiceActivator public void handleUploadedFile(final File workflowFile)", "class_method_signature": "HadoopWorkflowLaunchRequestAdapter.handleUploadedFile(final File workflowFile)", "testcase": false, "constructor": false}], "file": "scalable-service/master/src/main/java/org/springframework/data/hadoop/admin/workflow/HadoopWorkflowLaunchRequestAdapter.java"}, "focal_method": {"identifier": "handleUploadedFile", "parameters": "(final File workflowFile)", "modifiers": "@ServiceActivator public", "return": "void", "body": "@ServiceActivator\n\tpublic void handleUploadedFile(final File workflowFile) {\n\t\tlogger.info(\"upload file:\" + workflowFile.getAbsolutePath());\n\t\tFile parentFolder = workflowFile.getParentFile();\n\t\tHadoopWorkflowUtils.processAndRegisterWorkflow(parentFolder, context);\n\t}", "signature": "void handleUploadedFile(final File workflowFile)", "full_signature": "@ServiceActivator public void handleUploadedFile(final File workflowFile)", "class_method_signature": "HadoopWorkflowLaunchRequestAdapter.handleUploadedFile(final File workflowFile)", "testcase": false, "constructor": false, "invocations": ["info", "getAbsolutePath", "getParentFile", "processAndRegisterWorkflow"]}, "repository": {"repo_id": 4120901, "url": "https://github.com/spring-projects/spring-hadoop-admin", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 17, "size": 3663, "license": "licensed"}}