{"test_class": {"identifier": "BarChartTest", "superclass": "", "interfaces": "", "fields": [], "file": "pkgs/charts4j/src/test/java/com/googlecode/charts4j/BarChartTest.java"}, "test_case": {"identifier": "testSetBarWidth", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetBarWidth() {\n        BarChartPlot data1 = Plots.newBarChartPlot(Data.newData(0, 25, 50, 75, 100), BLUE);\n        BarChartPlot data2 = Plots.newBarChartPlot(Data.newData(0, 25, 50, 75, 100), RED);\n        BarChart chart = GCharts.newBarChart(data1, data2);\n        chart.setSize(400, 200);\n        chart.setBarWidth(30);\n        Logger.getLogger(Logger.GLOBAL_LOGGER_NAME).info(chart.toURLString());\n        String expectedString = \"http://chart.apis.google.com/chart?chs=400x200&chd=e:AAQAgAv...,AAQAgAv...&chco=0000FF,FF0000&chbh=30,4,8&cht=bvg\";\n        assertEquals(\"Junit error\", normalize(expectedString), normalize(chart.toURLString()));\n    }", "signature": "void testSetBarWidth()", "full_signature": "@Test public void testSetBarWidth()", "class_method_signature": "BarChartTest.testSetBarWidth()", "testcase": true, "constructor": false, "invocations": ["newBarChartPlot", "newData", "newBarChartPlot", "newData", "newBarChart", "setSize", "setBarWidth", "info", "getLogger", "toURLString", "assertEquals", "normalize", "normalize", "toURLString"]}, "focal_class": {"identifier": "BarChart", "superclass": "extends AbstractAxisChart", "interfaces": "", "fields": [{"original_string": "public static final int AUTO_RESIZE = 0;", "modifier": "public static final", "type": "int", "declarator": "AUTO_RESIZE = 0", "var_name": "AUTO_RESIZE"}, {"original_string": "private static final int          DEFAULT_SPACE_WINTHIN_GROUPS_OF_BARS = 4;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_SPACE_WINTHIN_GROUPS_OF_BARS = 4", "var_name": "DEFAULT_SPACE_WINTHIN_GROUPS_OF_BARS"}, {"original_string": "private static final int          DEFAULT_SPACE_BETWEEN_GROUPS_OF_BARS = 8;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_SPACE_BETWEEN_GROUPS_OF_BARS = 8", "var_name": "DEFAULT_SPACE_BETWEEN_GROUPS_OF_BARS"}, {"original_string": "private static final int          DEFAULT_BAR_WIDTH                    = 23;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_BAR_WIDTH                    = 23", "var_name": "DEFAULT_BAR_WIDTH"}, {"original_string": "private boolean                   dataStacked                          = false;", "modifier": "private", "type": "boolean", "declarator": "dataStacked                          = false", "var_name": "dataStacked"}, {"original_string": "private boolean                   horizontal                           = false;", "modifier": "private", "type": "boolean", "declarator": "horizontal                           = false", "var_name": "horizontal"}, {"original_string": "private int                       barWidth                             = DEFAULT_BAR_WIDTH;", "modifier": "private", "type": "int", "declarator": "barWidth                             = DEFAULT_BAR_WIDTH", "var_name": "barWidth"}, {"original_string": "private int                       spaceBetweenGroupsOfBars             = DEFAULT_SPACE_BETWEEN_GROUPS_OF_BARS;", "modifier": "private", "type": "int", "declarator": "spaceBetweenGroupsOfBars             = DEFAULT_SPACE_BETWEEN_GROUPS_OF_BARS", "var_name": "spaceBetweenGroupsOfBars"}, {"original_string": "private int                       spaceWithinGroupsOfBars              = DEFAULT_SPACE_WINTHIN_GROUPS_OF_BARS;", "modifier": "private", "type": "int", "declarator": "spaceWithinGroupsOfBars              = DEFAULT_SPACE_WINTHIN_GROUPS_OF_BARS", "var_name": "spaceWithinGroupsOfBars"}, {"original_string": "private final ImmutableList<Plot> barChartPlots;", "modifier": "private final", "type": "ImmutableList<Plot>", "declarator": "barChartPlots", "var_name": "barChartPlots"}], "methods": [{"identifier": "BarChart", "parameters": "(final ImmutableList<? extends Plot> barChartPlots)", "modifiers": "", "return": "", "signature": " BarChart(final ImmutableList<? extends Plot> barChartPlots)", "full_signature": "  BarChart(final ImmutableList<? extends Plot> barChartPlots)", "class_method_signature": "BarChart.BarChart(final ImmutableList<? extends Plot> barChartPlots)", "testcase": false, "constructor": true}, {"identifier": "setDataStacked", "parameters": "(final boolean dataStacked)", "modifiers": "public final", "return": "void", "signature": "void setDataStacked(final boolean dataStacked)", "full_signature": "public final void setDataStacked(final boolean dataStacked)", "class_method_signature": "BarChart.setDataStacked(final boolean dataStacked)", "testcase": false, "constructor": false}, {"identifier": "setHorizontal", "parameters": "(final boolean horizontal)", "modifiers": "public final", "return": "void", "signature": "void setHorizontal(final boolean horizontal)", "full_signature": "public final void setHorizontal(final boolean horizontal)", "class_method_signature": "BarChart.setHorizontal(final boolean horizontal)", "testcase": false, "constructor": false}, {"identifier": "prepareData", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void prepareData()", "full_signature": "@Override protected void prepareData()", "class_method_signature": "BarChart.prepareData()", "testcase": false, "constructor": false}, {"identifier": "setBarWidth", "parameters": "(final int barWidth)", "modifiers": "public final", "return": "void", "signature": "void setBarWidth(final int barWidth)", "full_signature": "public final void setBarWidth(final int barWidth)", "class_method_signature": "BarChart.setBarWidth(final int barWidth)", "testcase": false, "constructor": false}, {"identifier": "setSpaceBetweenGroupsOfBars", "parameters": "(final int spaceBetweenGroupsOfBars)", "modifiers": "public final", "return": "void", "signature": "void setSpaceBetweenGroupsOfBars(final int spaceBetweenGroupsOfBars)", "full_signature": "public final void setSpaceBetweenGroupsOfBars(final int spaceBetweenGroupsOfBars)", "class_method_signature": "BarChart.setSpaceBetweenGroupsOfBars(final int spaceBetweenGroupsOfBars)", "testcase": false, "constructor": false}, {"identifier": "setSpaceWithinGroupsOfBars", "parameters": "(final int spaceWithinGroupsOfBars)", "modifiers": "public final", "return": "void", "signature": "void setSpaceWithinGroupsOfBars(final int spaceWithinGroupsOfBars)", "full_signature": "public final void setSpaceWithinGroupsOfBars(final int spaceWithinGroupsOfBars)", "class_method_signature": "BarChart.setSpaceWithinGroupsOfBars(final int spaceWithinGroupsOfBars)", "testcase": false, "constructor": false}], "file": "pkgs/charts4j/src/main/java/com/googlecode/charts4j/BarChart.java"}, "focal_method": {"identifier": "setBarWidth", "parameters": "(final int barWidth)", "modifiers": "public final", "return": "void", "body": "public final void setBarWidth(final int barWidth) {\n        checkArgument(barWidth > -1, \"barWidth must be > 0\");\n        this.barWidth = barWidth;\n    }", "signature": "void setBarWidth(final int barWidth)", "full_signature": "public final void setBarWidth(final int barWidth)", "class_method_signature": "BarChart.setBarWidth(final int barWidth)", "testcase": false, "constructor": false, "invocations": ["checkArgument"]}, "repository": {"repo_id": 909809, "url": "https://github.com/opentrader/opentrader.github.com", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 10, "size": 51728, "license": "licensed"}}