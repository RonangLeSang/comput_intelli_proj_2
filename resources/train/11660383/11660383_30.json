{"test_class": {"identifier": "GroovyScriptHttpMessageConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GroovyScriptHttpMessageConverter converter;", "modifier": "private", "type": "GroovyScriptHttpMessageConverter", "declarator": "converter", "var_name": "converter"}], "file": "core/src/test/java/com/github/danielpacak/jenkins/ci/core/http/converter/GroovyScriptHttpMessageConverterTest.java"}, "test_case": {"identifier": "write", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void write() throws Exception {\n      GroovyScript script = new StringGroovyScript(\"print 'Hello, Jenkins!'\");\n      MockHttpOutputMessage outputMessage = new MockHttpOutputMessage();\n      converter.write(script, null, outputMessage);\n      assertEquals(\"script=print 'Hello, Jenkins!'\", outputMessage.getBodyAsString());\n   }", "signature": "void write()", "full_signature": "@Test public void write()", "class_method_signature": "GroovyScriptHttpMessageConverterTest.write()", "testcase": true, "constructor": false, "invocations": ["write", "assertEquals", "getBodyAsString"]}, "focal_class": {"identifier": "GroovyScriptHttpMessageConverter", "superclass": "", "interfaces": "implements HttpMessageConverter<GroovyScript>", "fields": [], "methods": [{"identifier": "canRead", "parameters": "(Class<?> clazz)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canRead(Class<?> clazz)", "full_signature": "@Override public boolean canRead(Class<?> clazz)", "class_method_signature": "GroovyScriptHttpMessageConverter.canRead(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "canWrite", "parameters": "(Class<?> clazz)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canWrite(Class<?> clazz)", "full_signature": "@Override public boolean canWrite(Class<?> clazz)", "class_method_signature": "GroovyScriptHttpMessageConverter.canWrite(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(GroovyScript t, String contentType, HttpOutputMessage outputMessage)", "modifiers": "@Override public", "return": "void", "signature": "void write(GroovyScript t, String contentType, HttpOutputMessage outputMessage)", "full_signature": "@Override public void write(GroovyScript t, String contentType, HttpOutputMessage outputMessage)", "class_method_signature": "GroovyScriptHttpMessageConverter.write(GroovyScript t, String contentType, HttpOutputMessage outputMessage)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(Class<? extends GroovyScript> clazz, HttpInputMessage inputMessage)", "modifiers": "@Override public", "return": "GroovyScript", "signature": "GroovyScript read(Class<? extends GroovyScript> clazz, HttpInputMessage inputMessage)", "full_signature": "@Override public GroovyScript read(Class<? extends GroovyScript> clazz, HttpInputMessage inputMessage)", "class_method_signature": "GroovyScriptHttpMessageConverter.read(Class<? extends GroovyScript> clazz, HttpInputMessage inputMessage)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/github/danielpacak/jenkins/ci/core/http/converter/GroovyScriptHttpMessageConverter.java"}, "focal_method": {"identifier": "write", "parameters": "(GroovyScript t, String contentType, HttpOutputMessage outputMessage)", "modifiers": "@Override public", "return": "void", "body": "@Override\n   public void write(GroovyScript t, String contentType, HttpOutputMessage outputMessage) throws IOException {\n      String payload = \"script=\" + Streams.toString(t.getInputStream());\n      Streams.copy(payload, outputMessage.getBody());\n   }", "signature": "void write(GroovyScript t, String contentType, HttpOutputMessage outputMessage)", "full_signature": "@Override public void write(GroovyScript t, String contentType, HttpOutputMessage outputMessage)", "class_method_signature": "GroovyScriptHttpMessageConverter.write(GroovyScript t, String contentType, HttpOutputMessage outputMessage)", "testcase": false, "constructor": false, "invocations": ["toString", "getInputStream", "copy", "getBody"]}, "repository": {"repo_id": 11660383, "url": "https://github.com/danielpacak/com.github.danielpacak.jenkins.ci", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 8, "size": 608, "license": "licensed"}}