{"test_class": {"identifier": "StringPairTest", "superclass": "", "interfaces": "", "fields": [], "file": "util/src/test/java/gov/llnl/ontology/util/StringPairTest.java"}, "test_case": {"identifier": "testEqualsFirstMatchSecondNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void testEqualsFirstMatchSecondNull() {\n        StringPair pair1 = new StringPair(\"cat\", null);\n        StringPair pair2 = new StringPair(\"cat\", null);\n        assertTrue(pair1.equals(pair2));\n    }", "signature": "void testEqualsFirstMatchSecondNull()", "full_signature": "@Test public void testEqualsFirstMatchSecondNull()", "class_method_signature": "StringPairTest.testEqualsFirstMatchSecondNull()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals"]}, "focal_class": {"identifier": "StringPair", "superclass": "", "interfaces": "implements Comparable, WritableComparable", "fields": [{"original_string": "public String x;", "modifier": "public", "type": "String", "declarator": "x", "var_name": "x"}, {"original_string": "public String y;", "modifier": "public", "type": "String", "declarator": "y", "var_name": "y"}], "methods": [{"identifier": "StringPair", "parameters": "()", "modifiers": "public", "return": "", "signature": " StringPair()", "full_signature": "public  StringPair()", "class_method_signature": "StringPair.StringPair()", "testcase": false, "constructor": true}, {"identifier": "StringPair", "parameters": "(String x, String y)", "modifiers": "public", "return": "", "signature": " StringPair(String x, String y)", "full_signature": "public  StringPair(String x, String y)", "class_method_signature": "StringPair.StringPair(String x, String y)", "testcase": false, "constructor": true}, {"identifier": "compareTo", "parameters": "(Object o)", "modifiers": "public", "return": "int", "signature": "int compareTo(Object o)", "full_signature": "public int compareTo(Object o)", "class_method_signature": "StringPair.compareTo(Object o)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(DataOutput out)", "modifiers": "public", "return": "void", "signature": "void write(DataOutput out)", "full_signature": "public void write(DataOutput out)", "class_method_signature": "StringPair.write(DataOutput out)", "testcase": false, "constructor": false}, {"identifier": "readFields", "parameters": "(DataInput in)", "modifiers": "public", "return": "void", "signature": "void readFields(DataInput in)", "full_signature": "public void readFields(DataInput in)", "class_method_signature": "StringPair.readFields(DataInput in)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(StringPair w)", "modifiers": "public", "return": "int", "signature": "int compareTo(StringPair w)", "full_signature": "public int compareTo(StringPair w)", "class_method_signature": "StringPair.compareTo(StringPair w)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "public boolean equals(Object o)", "class_method_signature": "StringPair.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "StringPair.hashCode()", "testcase": false, "constructor": false}, {"identifier": "fromString", "parameters": "(String text)", "modifiers": "public static", "return": "StringPair", "signature": "StringPair fromString(String text)", "full_signature": "public static StringPair fromString(String text)", "class_method_signature": "StringPair.fromString(String text)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "StringPair.toString()", "testcase": false, "constructor": false}], "file": "util/src/main/java/gov/llnl/ontology/util/StringPair.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object o)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object o) {\n        if (o == null || !(o instanceof StringPair))\n            return false;\n        StringPair p = (StringPair)o;\n        return (x == p.x || (x != null && x.equals(p.x))) &&\n               (y == p.y || (y != null && y.equals(p.y)));\n    }", "signature": "boolean equals(Object o)", "full_signature": "public boolean equals(Object o)", "class_method_signature": "StringPair.equals(Object o)", "testcase": false, "constructor": false, "invocations": ["equals", "equals"]}, "repository": {"repo_id": 908709, "url": "https://github.com/fozziethebeat/C-Cat", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 16, "size": 869027, "license": "licensed"}}