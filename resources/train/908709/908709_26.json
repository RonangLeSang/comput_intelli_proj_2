{"test_class": {"identifier": "SemEval2010TrainDocumentReaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String TEST_SENT = \n        \"<class.n.4>It is reported that , the joint-investment agreement between the US Westinghouse Company and the Shanghai Electric Group included the joint manufacture of key components of 300,000 kW thermal power generating units , and simultaneously expanding co-operation in various areas of 600,000 kW units .  Co-operation between the US General Electric Capital Company and the Shanghai Electric Company included investment in building 4 sets of 100,000 kW class turbine generating units .  This afternoon , Brown also visited Shanghai 's AMP Linking Company , Ltd. , which was jointly invested and built by the Shanghai Electric Component Company and the US AMP China Limited Company , situated in Shanghai 's Caohejing high-tech development district .  </class.n.4>\";", "modifier": "public static final", "type": "String", "declarator": "TEST_SENT = \n        \"<class.n.4>It is reported that , the joint-investment agreement between the US Westinghouse Company and the Shanghai Electric Group included the joint manufacture of key components of 300,000 kW thermal power generating units , and simultaneously expanding co-operation in various areas of 600,000 kW units .  Co-operation between the US General Electric Capital Company and the Shanghai Electric Company included investment in building 4 sets of 100,000 kW class turbine generating units .  This afternoon , Brown also visited Shanghai 's AMP Linking Company , Ltd. , which was jointly invested and built by the Shanghai Electric Component Company and the US AMP China Limited Company , situated in Shanghai 's Caohejing high-tech development district .  </class.n.4>\"", "var_name": "TEST_SENT"}], "file": "util/src/test/java/gov/llnl/ontology/text/corpora/SemEval2010TrainDocumentReaderTest.java"}, "test_case": {"identifier": "testRead", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void testRead() {\n        DocumentReader reader = new SemEval2010TrainDocumentReader();\n        Document doc = reader.readDocument(TEST_SENT);\n        assertEquals(\"class.n.4\", doc.key());\n        assertFalse(doc.rawText().contains(\"class.n.4\"));\n        assertTrue(doc.rawText().contains(\"Ltd.\"));\n        assertEquals(\"semeval2010_train\", doc.sourceCorpus());\n    }", "signature": "void testRead()", "full_signature": "@Test public void testRead()", "class_method_signature": "SemEval2010TrainDocumentReaderTest.testRead()", "testcase": true, "constructor": false, "invocations": ["readDocument", "assertEquals", "key", "assertFalse", "contains", "rawText", "assertTrue", "contains", "rawText", "assertEquals", "sourceCorpus"]}, "focal_class": {"identifier": "SemEval2010TrainDocumentReader", "superclass": "", "interfaces": "implements DocumentReader", "fields": [{"original_string": "public static final String CORPUS_NAME = \"semeval2010_train\";", "modifier": "public static final", "type": "String", "declarator": "CORPUS_NAME = \"semeval2010_train\"", "var_name": "CORPUS_NAME"}, {"original_string": "private final Stemmer stemmer;", "modifier": "private final", "type": "Stemmer", "declarator": "stemmer", "var_name": "stemmer"}, {"original_string": "private final Tokenizer tokenizer;", "modifier": "private final", "type": "Tokenizer", "declarator": "tokenizer", "var_name": "tokenizer"}], "methods": [{"identifier": "SemEval2010TrainDocumentReader", "parameters": "()", "modifiers": "public", "return": "", "signature": " SemEval2010TrainDocumentReader()", "full_signature": "public  SemEval2010TrainDocumentReader()", "class_method_signature": "SemEval2010TrainDocumentReader.SemEval2010TrainDocumentReader()", "testcase": false, "constructor": true}, {"identifier": "corpusName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String corpusName()", "full_signature": "public String corpusName()", "class_method_signature": "SemEval2010TrainDocumentReader.corpusName()", "testcase": false, "constructor": false}, {"identifier": "readDocument", "parameters": "(String doc)", "modifiers": "public", "return": "Document", "signature": "Document readDocument(String doc)", "full_signature": "public Document readDocument(String doc)", "class_method_signature": "SemEval2010TrainDocumentReader.readDocument(String doc)", "testcase": false, "constructor": false}, {"identifier": "readDocument", "parameters": "(String doc, String corpusName)", "modifiers": "public", "return": "Document", "signature": "Document readDocument(String doc, String corpusName)", "full_signature": "public Document readDocument(String doc, String corpusName)", "class_method_signature": "SemEval2010TrainDocumentReader.readDocument(String doc, String corpusName)", "testcase": false, "constructor": false}], "file": "util/src/main/java/gov/llnl/ontology/text/corpora/SemEval2010TrainDocumentReader.java"}, "focal_method": {"identifier": "readDocument", "parameters": "(String doc)", "modifiers": "public", "return": "Document", "body": "public Document readDocument(String doc) {\n        return readDocument(doc, corpusName());\n    }", "signature": "Document readDocument(String doc)", "full_signature": "public Document readDocument(String doc)", "class_method_signature": "SemEval2010TrainDocumentReader.readDocument(String doc)", "testcase": false, "constructor": false, "invocations": ["readDocument", "corpusName"]}, "repository": {"repo_id": 908709, "url": "https://github.com/fozziethebeat/C-Cat", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 16, "size": 869027, "license": "licensed"}}