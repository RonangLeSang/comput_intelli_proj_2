{"test_class": {"identifier": "AbstractJAXBProviderTest", "superclass": "", "interfaces": "", "fields": [], "file": "jersey/jersey-core/src/test/java/com/sun/jersey/core/provider/jaxb/AbstractJAXBProviderTest.java"}, "test_case": {"identifier": "abstractJaxbProviderDoesNotReadExternalDtds", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void abstractJaxbProviderDoesNotReadExternalDtds() throws Exception {\n        SAXParserFactory spf = SAXParserContextProviderTest.createSAXParserFactory();\n\n        String url = \"file:///no-such-file\";\n        String s = \"<!DOCTYPE x SYSTEM '\" + url + \"'><x/>\";\n        SAXSource saxSource = AbstractJAXBProvider.getSAXSource(spf, new ByteArrayInputStream(s.getBytes(\"us-ascii\")));\n\n        TransformerFactory.newInstance().newTransformer().transform(saxSource, new StreamResult(new ByteArrayOutputStream()));\n    }", "signature": "void abstractJaxbProviderDoesNotReadExternalDtds()", "full_signature": "@Test public void abstractJaxbProviderDoesNotReadExternalDtds()", "class_method_signature": "AbstractJAXBProviderTest.abstractJaxbProviderDoesNotReadExternalDtds()", "testcase": true, "constructor": false, "invocations": ["createSAXParserFactory", "getSAXSource", "getBytes", "transform", "newTransformer", "newInstance"]}, "focal_class": {"identifier": "AbstractJAXBProvider", "superclass": "extends AbstractMessageReaderWriterProvider<T>", "interfaces": "", "fields": [{"original_string": "private static final Map<Class<?>, WeakReference<JAXBContext>> jaxbContexts =\n            new WeakHashMap<Class<?>, WeakReference<JAXBContext>>();", "modifier": "private static final", "type": "Map<Class<?>, WeakReference<JAXBContext>>", "declarator": "jaxbContexts =\n            new WeakHashMap<Class<?>, WeakReference<JAXBContext>>()", "var_name": "jaxbContexts"}, {"original_string": "private final Providers ps;", "modifier": "private final", "type": "Providers", "declarator": "ps", "var_name": "ps"}, {"original_string": "private final boolean fixedMediaType;", "modifier": "private final", "type": "boolean", "declarator": "fixedMediaType", "var_name": "fixedMediaType"}, {"original_string": "private final ContextResolver<JAXBContext> mtContext;", "modifier": "private final", "type": "ContextResolver<JAXBContext>", "declarator": "mtContext", "var_name": "mtContext"}, {"original_string": "private final ContextResolver<Unmarshaller> mtUnmarshaller;", "modifier": "private final", "type": "ContextResolver<Unmarshaller>", "declarator": "mtUnmarshaller", "var_name": "mtUnmarshaller"}, {"original_string": "private final ContextResolver<Marshaller> mtMarshaller;", "modifier": "private final", "type": "ContextResolver<Marshaller>", "declarator": "mtMarshaller", "var_name": "mtMarshaller"}, {"original_string": "private boolean formattedOutput = false;", "modifier": "private", "type": "boolean", "declarator": "formattedOutput = false", "var_name": "formattedOutput"}, {"original_string": "private boolean xmlRootElementProcessing = false;", "modifier": "private", "type": "boolean", "declarator": "xmlRootElementProcessing = false", "var_name": "xmlRootElementProcessing"}], "methods": [{"identifier": "AbstractJAXBProvider", "parameters": "(Providers ps)", "modifiers": "public", "return": "", "signature": " AbstractJAXBProvider(Providers ps)", "full_signature": "public  AbstractJAXBProvider(Providers ps)", "class_method_signature": "AbstractJAXBProvider.AbstractJAXBProvider(Providers ps)", "testcase": false, "constructor": true}, {"identifier": "AbstractJAXBProvider", "parameters": "(Providers ps, MediaType mt)", "modifiers": "public", "return": "", "signature": " AbstractJAXBProvider(Providers ps, MediaType mt)", "full_signature": "public  AbstractJAXBProvider(Providers ps, MediaType mt)", "class_method_signature": "AbstractJAXBProvider.AbstractJAXBProvider(Providers ps, MediaType mt)", "testcase": false, "constructor": true}, {"identifier": "setConfiguration", "parameters": "(FeaturesAndProperties fp)", "modifiers": "@Context public", "return": "void", "signature": "void setConfiguration(FeaturesAndProperties fp)", "full_signature": "@Context public void setConfiguration(FeaturesAndProperties fp)", "class_method_signature": "AbstractJAXBProvider.setConfiguration(FeaturesAndProperties fp)", "testcase": false, "constructor": false}, {"identifier": "isSupported", "parameters": "(MediaType m)", "modifiers": "protected", "return": "boolean", "signature": "boolean isSupported(MediaType m)", "full_signature": "protected boolean isSupported(MediaType m)", "class_method_signature": "AbstractJAXBProvider.isSupported(MediaType m)", "testcase": false, "constructor": false}, {"identifier": "getUnmarshaller", "parameters": "(Class type, MediaType mt)", "modifiers": "protected final", "return": "Unmarshaller", "signature": "Unmarshaller getUnmarshaller(Class type, MediaType mt)", "full_signature": "protected final Unmarshaller getUnmarshaller(Class type, MediaType mt)", "class_method_signature": "AbstractJAXBProvider.getUnmarshaller(Class type, MediaType mt)", "testcase": false, "constructor": false}, {"identifier": "getUnmarshaller", "parameters": "(Class type)", "modifiers": "private", "return": "Unmarshaller", "signature": "Unmarshaller getUnmarshaller(Class type)", "full_signature": "private Unmarshaller getUnmarshaller(Class type)", "class_method_signature": "AbstractJAXBProvider.getUnmarshaller(Class type)", "testcase": false, "constructor": false}, {"identifier": "getMarshaller", "parameters": "(Class type, MediaType mt)", "modifiers": "protected final", "return": "Marshaller", "signature": "Marshaller getMarshaller(Class type, MediaType mt)", "full_signature": "protected final Marshaller getMarshaller(Class type, MediaType mt)", "class_method_signature": "AbstractJAXBProvider.getMarshaller(Class type, MediaType mt)", "testcase": false, "constructor": false}, {"identifier": "getMarshaller", "parameters": "(Class type)", "modifiers": "private", "return": "Marshaller", "signature": "Marshaller getMarshaller(Class type)", "full_signature": "private Marshaller getMarshaller(Class type)", "class_method_signature": "AbstractJAXBProvider.getMarshaller(Class type)", "testcase": false, "constructor": false}, {"identifier": "getJAXBContext", "parameters": "(Class type, MediaType mt)", "modifiers": "private", "return": "JAXBContext", "signature": "JAXBContext getJAXBContext(Class type, MediaType mt)", "full_signature": "private JAXBContext getJAXBContext(Class type, MediaType mt)", "class_method_signature": "AbstractJAXBProvider.getJAXBContext(Class type, MediaType mt)", "testcase": false, "constructor": false}, {"identifier": "getJAXBContext", "parameters": "(Class type)", "modifiers": "protected", "return": "JAXBContext", "signature": "JAXBContext getJAXBContext(Class type)", "full_signature": "protected JAXBContext getJAXBContext(Class type)", "class_method_signature": "AbstractJAXBProvider.getJAXBContext(Class type)", "testcase": false, "constructor": false}, {"identifier": "getStoredJAXBContext", "parameters": "(Class type)", "modifiers": "protected", "return": "JAXBContext", "signature": "JAXBContext getStoredJAXBContext(Class type)", "full_signature": "protected JAXBContext getStoredJAXBContext(Class type)", "class_method_signature": "AbstractJAXBProvider.getStoredJAXBContext(Class type)", "testcase": false, "constructor": false}, {"identifier": "getSAXSource", "parameters": "(SAXParserFactory spf,\n            InputStream entityStream)", "modifiers": "protected static", "return": "SAXSource", "signature": "SAXSource getSAXSource(SAXParserFactory spf,\n            InputStream entityStream)", "full_signature": "protected static SAXSource getSAXSource(SAXParserFactory spf,\n            InputStream entityStream)", "class_method_signature": "AbstractJAXBProvider.getSAXSource(SAXParserFactory spf,\n            InputStream entityStream)", "testcase": false, "constructor": false}, {"identifier": "isFormattedOutput", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean isFormattedOutput()", "full_signature": "protected boolean isFormattedOutput()", "class_method_signature": "AbstractJAXBProvider.isFormattedOutput()", "testcase": false, "constructor": false}, {"identifier": "isXmlRootElementProcessing", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean isXmlRootElementProcessing()", "full_signature": "protected boolean isXmlRootElementProcessing()", "class_method_signature": "AbstractJAXBProvider.isXmlRootElementProcessing()", "testcase": false, "constructor": false}, {"identifier": "setHeader", "parameters": "(Marshaller m, Annotation[] annotations)", "modifiers": "protected", "return": "void", "signature": "void setHeader(Marshaller m, Annotation[] annotations)", "full_signature": "protected void setHeader(Marshaller m, Annotation[] annotations)", "class_method_signature": "AbstractJAXBProvider.setHeader(Marshaller m, Annotation[] annotations)", "testcase": false, "constructor": false}], "file": "jersey/jersey-core/src/main/java/com/sun/jersey/core/provider/jaxb/AbstractJAXBProvider.java"}, "focal_method": {"identifier": "getSAXSource", "parameters": "(SAXParserFactory spf,\n            InputStream entityStream)", "modifiers": "protected static", "return": "SAXSource", "body": "protected static SAXSource getSAXSource(SAXParserFactory spf,\n            InputStream entityStream) throws JAXBException {\n        try {\n            return new SAXSource(\n                    spf.newSAXParser().getXMLReader(),\n                    new InputSource(entityStream));\n        } catch (Exception ex) {\n            throw new JAXBException(\"Error creating SAXSource\", ex);\n        }\n    }", "signature": "SAXSource getSAXSource(SAXParserFactory spf,\n            InputStream entityStream)", "full_signature": "protected static SAXSource getSAXSource(SAXParserFactory spf,\n            InputStream entityStream)", "class_method_signature": "AbstractJAXBProvider.getSAXSource(SAXParserFactory spf,\n            InputStream entityStream)", "testcase": false, "constructor": false, "invocations": ["getXMLReader", "newSAXParser"]}, "repository": {"repo_id": 4522462, "url": "https://github.com/jersey/jersey-1.x-old", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 10, "size": 33058, "license": "licensed"}}