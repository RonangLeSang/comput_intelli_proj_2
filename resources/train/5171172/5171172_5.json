{"test_class": {"identifier": "VerifyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String COLUMN_A = \"columnA\";", "modifier": "private static final", "type": "String", "declarator": "COLUMN_A = \"columnA\"", "var_name": "COLUMN_A"}, {"original_string": "private static final String COLUMN_B = \"columnB\";", "modifier": "private static final", "type": "String", "declarator": "COLUMN_B = \"columnB\"", "var_name": "COLUMN_B"}, {"original_string": "private static final List<IndexSchema> INDICES = ImmutableList.of(\n            new IndexSchema(\"INDEX_A\", ImmutableList.<String>of(COLUMN_A), false),\n            new IndexSchema(\"INDEX_B\", ImmutableList.<String>of(COLUMN_B), false));", "modifier": "private static final", "type": "List<IndexSchema>", "declarator": "INDICES = ImmutableList.of(\n            new IndexSchema(\"INDEX_A\", ImmutableList.<String>of(COLUMN_A), false),\n            new IndexSchema(\"INDEX_B\", ImmutableList.<String>of(COLUMN_B), false))", "var_name": "INDICES"}, {"original_string": "private static final List<ColumnSchema> COLUMNS = ImmutableList.of(\n            ColumnSchema.builder(COLUMN_A, ColumnType.LONG).build(),\n            ColumnSchema.builder(COLUMN_B, ColumnType.LONG).build());", "modifier": "private static final", "type": "List<ColumnSchema>", "declarator": "COLUMNS = ImmutableList.of(\n            ColumnSchema.builder(COLUMN_A, ColumnType.LONG).build(),\n            ColumnSchema.builder(COLUMN_B, ColumnType.LONG).build())", "var_name": "COLUMNS"}], "file": "storage-engine-proxy/src/test/java/com/nearinfinity/honeycomb/util/VerifyTest.java"}, "test_case": {"identifier": "testIsValidTableSchemaNullSchema", "parameters": "()", "modifiers": "@Test(expected = NullPointerException.class) public", "return": "void", "body": "@Test(expected = NullPointerException.class)\n    public void testIsValidTableSchemaNullSchema() {\n        Verify.isValidTableSchema(null);\n    }", "signature": "void testIsValidTableSchemaNullSchema()", "full_signature": "@Test(expected = NullPointerException.class) public void testIsValidTableSchemaNullSchema()", "class_method_signature": "VerifyTest.testIsValidTableSchemaNullSchema()", "testcase": true, "constructor": false, "invocations": ["isValidTableSchema"]}, "focal_class": {"identifier": "Verify", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = Logger.getLogger(Verify.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(Verify.class)", "var_name": "logger"}], "methods": [{"identifier": "hasAutoIncrementColumn", "parameters": "(final TableSchema schema)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasAutoIncrementColumn(final TableSchema schema)", "full_signature": "public static boolean hasAutoIncrementColumn(final TableSchema schema)", "class_method_signature": "Verify.hasAutoIncrementColumn(final TableSchema schema)", "testcase": false, "constructor": false}, {"identifier": "isValidId", "parameters": "(final long id, final String... message)", "modifiers": "public static", "return": "void", "signature": "void isValidId(final long id, final String... message)", "full_signature": "public static void isValidId(final long id, final String... message)", "class_method_signature": "Verify.isValidId(final long id, final String... message)", "testcase": false, "constructor": false}, {"identifier": "isNotNullOrEmpty", "parameters": "(final String value, final String... message)", "modifiers": "public static", "return": "void", "signature": "void isNotNullOrEmpty(final String value, final String... message)", "full_signature": "public static void isNotNullOrEmpty(final String value, final String... message)", "class_method_signature": "Verify.isNotNullOrEmpty(final String value, final String... message)", "testcase": false, "constructor": false}, {"identifier": "isValidTableSchema", "parameters": "(final TableSchema schema)", "modifiers": "public static", "return": "void", "signature": "void isValidTableSchema(final TableSchema schema)", "full_signature": "public static void isValidTableSchema(final TableSchema schema)", "class_method_signature": "Verify.isValidTableSchema(final TableSchema schema)", "testcase": false, "constructor": false}, {"identifier": "isValidIndexSchema", "parameters": "(final Collection<IndexSchema> indices,\n                                          final Collection<ColumnSchema> columns)", "modifiers": "public static", "return": "void", "signature": "void isValidIndexSchema(final Collection<IndexSchema> indices,\n                                          final Collection<ColumnSchema> columns)", "full_signature": "public static void isValidIndexSchema(final Collection<IndexSchema> indices,\n                                          final Collection<ColumnSchema> columns)", "class_method_signature": "Verify.isValidIndexSchema(final Collection<IndexSchema> indices,\n                                          final Collection<ColumnSchema> columns)", "testcase": false, "constructor": false}], "file": "storage-engine-proxy/src/main/java/com/nearinfinity/honeycomb/util/Verify.java"}, "focal_method": {"identifier": "isValidTableSchema", "parameters": "(final TableSchema schema)", "modifiers": "public static", "return": "void", "body": "public static void isValidTableSchema(final TableSchema schema) {\n        checkNotNull(schema);\n    }", "signature": "void isValidTableSchema(final TableSchema schema)", "full_signature": "public static void isValidTableSchema(final TableSchema schema)", "class_method_signature": "Verify.isValidTableSchema(final TableSchema schema)", "testcase": false, "constructor": false, "invocations": ["checkNotNull"]}, "repository": {"repo_id": 5171172, "url": "https://github.com/altamiracorp/honeycomb", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 74, "size": 164956, "license": "licensed"}}