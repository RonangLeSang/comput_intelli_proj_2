{"test_class": {"identifier": "IndexRowKeyBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int ASC_INDEX_PREFIX = 0x07;", "modifier": "private static final", "type": "int", "declarator": "ASC_INDEX_PREFIX = 0x07", "var_name": "ASC_INDEX_PREFIX"}, {"original_string": "private static final long TABLE_ID = 1;", "modifier": "private static final", "type": "long", "declarator": "TABLE_ID = 1", "var_name": "TABLE_ID"}, {"original_string": "private static final long INDEX_ID = 5;", "modifier": "private static final", "type": "long", "declarator": "INDEX_ID = 5", "var_name": "INDEX_ID"}, {"original_string": "private IndexRowKeyBuilder builder;", "modifier": "private", "type": "IndexRowKeyBuilder", "declarator": "builder", "var_name": "builder"}], "file": "storage-engine-backends/hbase/src/test/java/com/nearinfinity/honeycomb/hbase/rowkey/IndexRowKeyBuilderTest.java"}, "test_case": {"identifier": "testNewBuilderInvalidIndexId", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testNewBuilderInvalidIndexId() {\n        final long invalidIndexId = -1;\n        IndexRowKeyBuilder.newBuilder(TABLE_ID, invalidIndexId);\n    }", "signature": "void testNewBuilderInvalidIndexId()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testNewBuilderInvalidIndexId()", "class_method_signature": "IndexRowKeyBuilderTest.testNewBuilderInvalidIndexId()", "testcase": true, "constructor": false, "invocations": ["newBuilder"]}, "focal_class": {"identifier": "IndexRowKeyBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final long INVERT_SIGN_MASK = 0x8000000000000000L;", "modifier": "private static final", "type": "long", "declarator": "INVERT_SIGN_MASK = 0x8000000000000000L", "var_name": "INVERT_SIGN_MASK"}, {"original_string": "private long tableId;", "modifier": "private", "type": "long", "declarator": "tableId", "var_name": "tableId"}, {"original_string": "private long indexId;", "modifier": "private", "type": "long", "declarator": "indexId", "var_name": "indexId"}, {"original_string": "private SortOrder order;", "modifier": "private", "type": "SortOrder", "declarator": "order", "var_name": "order"}, {"original_string": "private String indexName;", "modifier": "private", "type": "String", "declarator": "indexName", "var_name": "indexName"}, {"original_string": "private TableSchema tableSchema;", "modifier": "private", "type": "TableSchema", "declarator": "tableSchema", "var_name": "tableSchema"}, {"original_string": "private Map<String, ByteBuffer> fields;", "modifier": "private", "type": "Map<String, ByteBuffer>", "declarator": "fields", "var_name": "fields"}, {"original_string": "private UUID uuid;", "modifier": "private", "type": "UUID", "declarator": "uuid", "var_name": "uuid"}], "methods": [{"identifier": "IndexRowKeyBuilder", "parameters": "()", "modifiers": "private", "return": "", "signature": " IndexRowKeyBuilder()", "full_signature": "private  IndexRowKeyBuilder()", "class_method_signature": "IndexRowKeyBuilder.IndexRowKeyBuilder()", "testcase": false, "constructor": true}, {"identifier": "newBuilder", "parameters": "(long tableId,\n                                                long indexId)", "modifiers": "public static", "return": "IndexRowKeyBuilder", "signature": "IndexRowKeyBuilder newBuilder(long tableId,\n                                                long indexId)", "full_signature": "public static IndexRowKeyBuilder newBuilder(long tableId,\n                                                long indexId)", "class_method_signature": "IndexRowKeyBuilder.newBuilder(long tableId,\n                                                long indexId)", "testcase": false, "constructor": false}, {"identifier": "reverseValue", "parameters": "(byte[] value)", "modifiers": "private static", "return": "byte[]", "signature": "byte[] reverseValue(byte[] value)", "full_signature": "private static byte[] reverseValue(byte[] value)", "class_method_signature": "IndexRowKeyBuilder.reverseValue(byte[] value)", "testcase": false, "constructor": false}, {"identifier": "encodeValue", "parameters": "(final ByteBuffer value, final ColumnSchema columnSchema)", "modifiers": "private static", "return": "byte[]", "signature": "byte[] encodeValue(final ByteBuffer value, final ColumnSchema columnSchema)", "full_signature": "private static byte[] encodeValue(final ByteBuffer value, final ColumnSchema columnSchema)", "class_method_signature": "IndexRowKeyBuilder.encodeValue(final ByteBuffer value, final ColumnSchema columnSchema)", "testcase": false, "constructor": false}, {"identifier": "withSortOrder", "parameters": "(SortOrder order)", "modifiers": "public", "return": "IndexRowKeyBuilder", "signature": "IndexRowKeyBuilder withSortOrder(SortOrder order)", "full_signature": "public IndexRowKeyBuilder withSortOrder(SortOrder order)", "class_method_signature": "IndexRowKeyBuilder.withSortOrder(SortOrder order)", "testcase": false, "constructor": false}, {"identifier": "withRow", "parameters": "(Row row,\n                                      String indexName,\n                                      TableSchema tableSchema)", "modifiers": "public", "return": "IndexRowKeyBuilder", "signature": "IndexRowKeyBuilder withRow(Row row,\n                                      String indexName,\n                                      TableSchema tableSchema)", "full_signature": "public IndexRowKeyBuilder withRow(Row row,\n                                      String indexName,\n                                      TableSchema tableSchema)", "class_method_signature": "IndexRowKeyBuilder.withRow(Row row,\n                                      String indexName,\n                                      TableSchema tableSchema)", "testcase": false, "constructor": false}, {"identifier": "withQueryKey", "parameters": "(QueryKey queryKey,\n                                           TableSchema tableSchema)", "modifiers": "public", "return": "IndexRowKeyBuilder", "signature": "IndexRowKeyBuilder withQueryKey(QueryKey queryKey,\n                                           TableSchema tableSchema)", "full_signature": "public IndexRowKeyBuilder withQueryKey(QueryKey queryKey,\n                                           TableSchema tableSchema)", "class_method_signature": "IndexRowKeyBuilder.withQueryKey(QueryKey queryKey,\n                                           TableSchema tableSchema)", "testcase": false, "constructor": false}, {"identifier": "withUUID", "parameters": "(UUID uuid)", "modifiers": "public", "return": "IndexRowKeyBuilder", "signature": "IndexRowKeyBuilder withUUID(UUID uuid)", "full_signature": "public IndexRowKeyBuilder withUUID(UUID uuid)", "class_method_signature": "IndexRowKeyBuilder.withUUID(UUID uuid)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "IndexRowKey", "signature": "IndexRowKey build()", "full_signature": "public IndexRowKey build()", "class_method_signature": "IndexRowKeyBuilder.build()", "testcase": false, "constructor": false}], "file": "storage-engine-backends/hbase/src/main/java/com/nearinfinity/honeycomb/hbase/rowkey/IndexRowKeyBuilder.java"}, "focal_method": {"identifier": "newBuilder", "parameters": "(long tableId,\n                                                long indexId)", "modifiers": "public static", "return": "IndexRowKeyBuilder", "body": "public static IndexRowKeyBuilder newBuilder(long tableId,\n                                                long indexId) {\n        Verify.isValidId(tableId);\n        Verify.isValidId(indexId);\n        IndexRowKeyBuilder builder = new IndexRowKeyBuilder();\n        builder.tableId = tableId;\n        builder.indexId = indexId;\n\n        return builder;\n    }", "signature": "IndexRowKeyBuilder newBuilder(long tableId,\n                                                long indexId)", "full_signature": "public static IndexRowKeyBuilder newBuilder(long tableId,\n                                                long indexId)", "class_method_signature": "IndexRowKeyBuilder.newBuilder(long tableId,\n                                                long indexId)", "testcase": false, "constructor": false, "invocations": ["isValidId", "isValidId"]}, "repository": {"repo_id": 5171172, "url": "https://github.com/altamiracorp/honeycomb", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 74, "size": 164956, "license": "licensed"}}