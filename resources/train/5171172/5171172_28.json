{"test_class": {"identifier": "HandlerProxyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_INDEX = \"testIdx\";", "modifier": "private static final", "type": "String", "declarator": "TEST_INDEX = \"testIdx\"", "var_name": "TEST_INDEX"}, {"original_string": "private static final String TEST_COLUMN = \"testCol\";", "modifier": "private static final", "type": "String", "declarator": "TEST_COLUMN = \"testCol\"", "var_name": "TEST_COLUMN"}, {"original_string": "private static final String TEST_TABLE_NAME = \"foo/bar\";", "modifier": "private static final", "type": "String", "declarator": "TEST_TABLE_NAME = \"foo/bar\"", "var_name": "TEST_TABLE_NAME"}, {"original_string": "private static final List<ColumnSchema> COLUMNS = ImmutableList.of(\n            ColumnSchema.builder(TEST_COLUMN, ColumnType.LONG).setIsAutoIncrement(true).build());", "modifier": "private static final", "type": "List<ColumnSchema>", "declarator": "COLUMNS = ImmutableList.of(\n            ColumnSchema.builder(TEST_COLUMN, ColumnType.LONG).setIsAutoIncrement(true).build())", "var_name": "COLUMNS"}, {"original_string": "private static final IndexSchema INDEX_SCHEMA = new IndexSchema(TEST_INDEX, ImmutableList.<String>of(TEST_COLUMN), false);", "modifier": "private static final", "type": "IndexSchema", "declarator": "INDEX_SCHEMA = new IndexSchema(TEST_INDEX, ImmutableList.<String>of(TEST_COLUMN), false)", "var_name": "INDEX_SCHEMA"}, {"original_string": "private static final TableSchema TABLE_SCHEMA = new TableSchema(COLUMNS, ImmutableList.<IndexSchema>of(INDEX_SCHEMA));", "modifier": "private static final", "type": "TableSchema", "declarator": "TABLE_SCHEMA = new TableSchema(COLUMNS, ImmutableList.<IndexSchema>of(INDEX_SCHEMA))", "var_name": "TABLE_SCHEMA"}, {"original_string": "@Mock\n    private Store storageMock;", "modifier": "@Mock\n    private", "type": "Store", "declarator": "storageMock", "var_name": "storageMock"}, {"original_string": "@Mock\n    private StoreFactory storeFactory;", "modifier": "@Mock\n    private", "type": "StoreFactory", "declarator": "storeFactory", "var_name": "storeFactory"}, {"original_string": "@Mock\n    private Table tableMock;", "modifier": "@Mock\n    private", "type": "Table", "declarator": "tableMock", "var_name": "tableMock"}, {"original_string": "private HandlerProxy proxy;", "modifier": "private", "type": "HandlerProxy", "declarator": "proxy", "var_name": "proxy"}], "file": "storage-engine-proxy/src/test/java/com/nearinfinity/honeycomb/mysql/HandlerProxyTest.java"}, "test_case": {"identifier": "testCreateTable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateTable() {\n        when(storeFactory.createStore(anyString())).thenReturn(storageMock);\n        final long incrementValue = 42;\n        proxy.createTable(TEST_TABLE_NAME, TABLE_SCHEMA.serialize(), incrementValue);\n\n        verify(storeFactory, times(1)).createStore(eq(TEST_TABLE_NAME));\n        verify(storageMock, times(1)).createTable(eq(TEST_TABLE_NAME), eq(TABLE_SCHEMA));\n        verify(storageMock, times(1)).incrementAutoInc(eq(TEST_TABLE_NAME), eq(incrementValue));\n    }", "signature": "void testCreateTable()", "full_signature": "@Test public void testCreateTable()", "class_method_signature": "HandlerProxyTest.testCreateTable()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "createStore", "anyString", "createTable", "serialize", "createStore", "verify", "times", "eq", "createTable", "verify", "times", "eq", "eq", "incrementAutoInc", "verify", "times", "eq", "eq"]}, "focal_class": {"identifier": "HandlerProxy", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = Logger.getLogger(HandlerProxy.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(HandlerProxy.class)", "var_name": "logger"}, {"original_string": "private final StoreFactory storeFactory;", "modifier": "private final", "type": "StoreFactory", "declarator": "storeFactory", "var_name": "storeFactory"}, {"original_string": "private Store store;", "modifier": "private", "type": "Store", "declarator": "store", "var_name": "store"}, {"original_string": "private Table table;", "modifier": "private", "type": "Table", "declarator": "table", "var_name": "table"}, {"original_string": "private String tableName;", "modifier": "private", "type": "String", "declarator": "tableName", "var_name": "tableName"}, {"original_string": "private Scanner currentScanner;", "modifier": "private", "type": "Scanner", "declarator": "currentScanner", "var_name": "currentScanner"}], "methods": [{"identifier": "HandlerProxy", "parameters": "(StoreFactory storeFactory)", "modifiers": "public", "return": "", "signature": " HandlerProxy(StoreFactory storeFactory)", "full_signature": "public  HandlerProxy(StoreFactory storeFactory)", "class_method_signature": "HandlerProxy.HandlerProxy(StoreFactory storeFactory)", "testcase": false, "constructor": true}, {"identifier": "createTable", "parameters": "(String tableName,\n                            byte[] serializedTableSchema, long autoInc)", "modifiers": "public", "return": "void", "signature": "void createTable(String tableName,\n                            byte[] serializedTableSchema, long autoInc)", "full_signature": "public void createTable(String tableName,\n                            byte[] serializedTableSchema, long autoInc)", "class_method_signature": "HandlerProxy.createTable(String tableName,\n                            byte[] serializedTableSchema, long autoInc)", "testcase": false, "constructor": false}, {"identifier": "dropTable", "parameters": "(String tableName)", "modifiers": "public", "return": "void", "signature": "void dropTable(String tableName)", "full_signature": "public void dropTable(String tableName)", "class_method_signature": "HandlerProxy.dropTable(String tableName)", "testcase": false, "constructor": false}, {"identifier": "openTable", "parameters": "(String tableName)", "modifiers": "public", "return": "void", "signature": "void openTable(String tableName)", "full_signature": "public void openTable(String tableName)", "class_method_signature": "HandlerProxy.openTable(String tableName)", "testcase": false, "constructor": false}, {"identifier": "closeTable", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void closeTable()", "full_signature": "public void closeTable()", "class_method_signature": "HandlerProxy.closeTable()", "testcase": false, "constructor": false}, {"identifier": "getTableName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTableName()", "full_signature": "public String getTableName()", "class_method_signature": "HandlerProxy.getTableName()", "testcase": false, "constructor": false}, {"identifier": "renameTable", "parameters": "(final String originalName,\n                            final String newName)", "modifiers": "public", "return": "void", "signature": "void renameTable(final String originalName,\n                            final String newName)", "full_signature": "public void renameTable(final String originalName,\n                            final String newName)", "class_method_signature": "HandlerProxy.renameTable(final String originalName,\n                            final String newName)", "testcase": false, "constructor": false}, {"identifier": "getRowCount", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getRowCount()", "full_signature": "public long getRowCount()", "class_method_signature": "HandlerProxy.getRowCount()", "testcase": false, "constructor": false}, {"identifier": "incrementRowCount", "parameters": "(long amount)", "modifiers": "public", "return": "void", "signature": "void incrementRowCount(long amount)", "full_signature": "public void incrementRowCount(long amount)", "class_method_signature": "HandlerProxy.incrementRowCount(long amount)", "testcase": false, "constructor": false}, {"identifier": "truncateRowCount", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void truncateRowCount()", "full_signature": "public void truncateRowCount()", "class_method_signature": "HandlerProxy.truncateRowCount()", "testcase": false, "constructor": false}, {"identifier": "getAutoIncrement", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getAutoIncrement()", "full_signature": "public long getAutoIncrement()", "class_method_signature": "HandlerProxy.getAutoIncrement()", "testcase": false, "constructor": false}, {"identifier": "setAutoIncrement", "parameters": "(long value)", "modifiers": "public", "return": "void", "signature": "void setAutoIncrement(long value)", "full_signature": "public void setAutoIncrement(long value)", "class_method_signature": "HandlerProxy.setAutoIncrement(long value)", "testcase": false, "constructor": false}, {"identifier": "incrementAutoIncrement", "parameters": "(long amount)", "modifiers": "public", "return": "long", "signature": "long incrementAutoIncrement(long amount)", "full_signature": "public long incrementAutoIncrement(long amount)", "class_method_signature": "HandlerProxy.incrementAutoIncrement(long amount)", "testcase": false, "constructor": false}, {"identifier": "truncateAutoIncrement", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void truncateAutoIncrement()", "full_signature": "public void truncateAutoIncrement()", "class_method_signature": "HandlerProxy.truncateAutoIncrement()", "testcase": false, "constructor": false}, {"identifier": "addIndex", "parameters": "(String indexName, byte[] serializedSchema)", "modifiers": "public", "return": "void", "signature": "void addIndex(String indexName, byte[] serializedSchema)", "full_signature": "public void addIndex(String indexName, byte[] serializedSchema)", "class_method_signature": "HandlerProxy.addIndex(String indexName, byte[] serializedSchema)", "testcase": false, "constructor": false}, {"identifier": "dropIndex", "parameters": "(String indexName)", "modifiers": "public", "return": "void", "signature": "void dropIndex(String indexName)", "full_signature": "public void dropIndex(String indexName)", "class_method_signature": "HandlerProxy.dropIndex(String indexName)", "testcase": false, "constructor": false}, {"identifier": "indexContainsDuplicate", "parameters": "(String indexName, byte[] serializedRow)", "modifiers": "public", "return": "boolean", "signature": "boolean indexContainsDuplicate(String indexName, byte[] serializedRow)", "full_signature": "public boolean indexContainsDuplicate(String indexName, byte[] serializedRow)", "class_method_signature": "HandlerProxy.indexContainsDuplicate(String indexName, byte[] serializedRow)", "testcase": false, "constructor": false}, {"identifier": "insertRow", "parameters": "(byte[] rowBytes)", "modifiers": "public", "return": "void", "signature": "void insertRow(byte[] rowBytes)", "full_signature": "public void insertRow(byte[] rowBytes)", "class_method_signature": "HandlerProxy.insertRow(byte[] rowBytes)", "testcase": false, "constructor": false}, {"identifier": "deleteRow", "parameters": "(byte[] rowBytes)", "modifiers": "public", "return": "void", "signature": "void deleteRow(byte[] rowBytes)", "full_signature": "public void deleteRow(byte[] rowBytes)", "class_method_signature": "HandlerProxy.deleteRow(byte[] rowBytes)", "testcase": false, "constructor": false}, {"identifier": "updateRow", "parameters": "(byte[] oldRowBytes, byte[] rowBytes)", "modifiers": "public", "return": "void", "signature": "void updateRow(byte[] oldRowBytes, byte[] rowBytes)", "full_signature": "public void updateRow(byte[] oldRowBytes, byte[] rowBytes)", "class_method_signature": "HandlerProxy.updateRow(byte[] oldRowBytes, byte[] rowBytes)", "testcase": false, "constructor": false}, {"identifier": "deleteAllRows", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void deleteAllRows()", "full_signature": "public void deleteAllRows()", "class_method_signature": "HandlerProxy.deleteAllRows()", "testcase": false, "constructor": false}, {"identifier": "truncateTable", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void truncateTable()", "full_signature": "public void truncateTable()", "class_method_signature": "HandlerProxy.truncateTable()", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void flush()", "full_signature": "public void flush()", "class_method_signature": "HandlerProxy.flush()", "testcase": false, "constructor": false}, {"identifier": "startTableScan", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void startTableScan()", "full_signature": "public void startTableScan()", "class_method_signature": "HandlerProxy.startTableScan()", "testcase": false, "constructor": false}, {"identifier": "startIndexScan", "parameters": "(byte[] indexKeys)", "modifiers": "public", "return": "void", "signature": "void startIndexScan(byte[] indexKeys)", "full_signature": "public void startIndexScan(byte[] indexKeys)", "class_method_signature": "HandlerProxy.startIndexScan(byte[] indexKeys)", "testcase": false, "constructor": false}, {"identifier": "getNextRow", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getNextRow()", "full_signature": "public byte[] getNextRow()", "class_method_signature": "HandlerProxy.getNextRow()", "testcase": false, "constructor": false}, {"identifier": "getRow", "parameters": "(byte[] uuid)", "modifiers": "public", "return": "byte[]", "signature": "byte[] getRow(byte[] uuid)", "full_signature": "public byte[] getRow(byte[] uuid)", "class_method_signature": "HandlerProxy.getRow(byte[] uuid)", "testcase": false, "constructor": false}, {"identifier": "endScan", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void endScan()", "full_signature": "public void endScan()", "class_method_signature": "HandlerProxy.endScan()", "testcase": false, "constructor": false}, {"identifier": "checkTableOpen", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkTableOpen()", "full_signature": "private void checkTableOpen()", "class_method_signature": "HandlerProxy.checkTableOpen()", "testcase": false, "constructor": false}], "file": "storage-engine-proxy/src/main/java/com/nearinfinity/honeycomb/mysql/HandlerProxy.java"}, "focal_method": {"identifier": "createTable", "parameters": "(String tableName,\n                            byte[] serializedTableSchema, long autoInc)", "modifiers": "public", "return": "void", "body": "public void createTable(String tableName,\n                            byte[] serializedTableSchema, long autoInc) {\n        Verify.isNotNullOrEmpty(tableName);\n        checkNotNull(serializedTableSchema, \"Schema cannot be null\");\n\n        store = storeFactory.createStore(tableName);\n        TableSchema tableSchema = TableSchema.deserialize(serializedTableSchema);\n        Verify.isValidTableSchema(tableSchema);\n        store.createTable(tableName, tableSchema);\n        store.incrementAutoInc(tableName, autoInc);\n    }", "signature": "void createTable(String tableName,\n                            byte[] serializedTableSchema, long autoInc)", "full_signature": "public void createTable(String tableName,\n                            byte[] serializedTableSchema, long autoInc)", "class_method_signature": "HandlerProxy.createTable(String tableName,\n                            byte[] serializedTableSchema, long autoInc)", "testcase": false, "constructor": false, "invocations": ["isNotNullOrEmpty", "checkNotNull", "createStore", "deserialize", "isValidTableSchema", "createTable", "incrementAutoInc"]}, "repository": {"repo_id": 5171172, "url": "https://github.com/altamiracorp/honeycomb", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 74, "size": 164956, "license": "licensed"}}