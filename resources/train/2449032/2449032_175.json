{"test_class": {"identifier": "GraphVizTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String DOT_FILE_FOR_SIMPLE_GRAPH_WITH_ONLY_DEFAULT_VALUES =\n\t\t\t\"digraph G {\\r\\n\" +\n\t\t\t\"\tsubgraph cluster_1 {\\r\\n\" +\n\t\t\t\"\t\tlabel = \\\"cluster\\\";\\r\\n\" +\n\t\t\t\"\t\t\\\"node1\\\";\\r\\n\" +\n\t\t\t\"\t}\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" -> \\\"node2\\\";\\r\\n\" +\n\t\t\t\"\t{ rank = same ; \\\"node2\\\" ; }\\r\\n\" +\n\t\t\t\"}\\r\\n\";", "modifier": "private final", "type": "String", "declarator": "DOT_FILE_FOR_SIMPLE_GRAPH_WITH_ONLY_DEFAULT_VALUES =\n\t\t\t\"digraph G {\\r\\n\" +\n\t\t\t\"\tsubgraph cluster_1 {\\r\\n\" +\n\t\t\t\"\t\tlabel = \\\"cluster\\\";\\r\\n\" +\n\t\t\t\"\t\t\\\"node1\\\";\\r\\n\" +\n\t\t\t\"\t}\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" -> \\\"node2\\\";\\r\\n\" +\n\t\t\t\"\t{ rank = same ; \\\"node2\\\" ; }\\r\\n\" +\n\t\t\t\"}\\r\\n\"", "var_name": "DOT_FILE_FOR_SIMPLE_GRAPH_WITH_ONLY_DEFAULT_VALUES"}, {"original_string": "private final String DOT_FILE_FOR_SIMPLE_GRAPH_WITH_NO_DEFAULT_VALUES =\n\t\t\t\"digraph G {\\r\\n\" +\n\t\t\t\"\tconcentrate = \\\"true\\\";\\r\\n\" +\n\t\t\t\"\trankdir = \\\"LR\\\";\\r\\n\" +\n\t\t\t\"\tranksep = \\\"1.5\\\";\\r\\n\" +\n\t\t\t\"\tnodesep = \\\"0.5\\\";\\r\\n\" +\n\t\t\t\"\tlabel = \\\"graph label\\\";\\r\\n\" +\n\t\t\t\"\tstyle = \\\"dashed\\\";\\r\\n\" +\n\t\t\t\"\tcolor = \\\"lime\\\";\\r\\n\" +\n\t\t\t\"\tpenwidth = \\\"1\\\";\\r\\n\" +\n\t\t\t\"\tbgcolor = \\\"aqua\\\";\\r\\n\" +\n\t\t\t\"\tfontcolor = \\\"red\\\";\\r\\n\" +\n\t\t\t\"\tfontname = \\\"Arial\\\";\\r\\n\" +\n\t\t\t\"\tfontsize = \\\"8\\\";\\r\\n\" +\n\t\t\t\"\t\tnode [ shape = \\\"diamond\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ style = \\\"dashed\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ color = \\\"red\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ penwidth = \\\"2\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ fillcolor = \\\"beige\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ fontcolor = \\\"black\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ fontname = \\\"Times-Roman\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ fontsize = \\\"9\\\" ];\\r\\n\" +\n\t\t\t\"\tsubgraph cluster_1 {\\r\\n\" +\n\t\t\t\"\t\tlabel = \\\"cluster label\\\";\\r\\n\" +\n\t\t\t\"\t\tstyle = \\\"bold\\\";\\r\\n\" +\n\t\t\t\"\t\tcolor = \\\"azure\\\";\\r\\n\" +\n\t\t\t\"\t\tpenwidth = \\\"3\\\";\\r\\n\" +\n\t\t\t\"\t\tfillcolor = \\\"blue\\\";\\r\\n\" +\n\t\t\t\"\t\tfontcolor = \\\"brown\\\";\\r\\n\" +\n\t\t\t\"\t\tfontname = \\\"Cambria\\\";\\r\\n\" +\n\t\t\t\"\t\tfontsize = \\\"10\\\";\\r\\n\" +\n\t\t\t\"\t\tnode [ shape = \\\"hexagon\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ style = \\\"dotted\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ color = \\\"coral\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ penwidth = \\\"4\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ fillcolor = \\\"crimson\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ fontcolor = \\\"cyan\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ fontname = \\\"Courier new\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ fontsize = \\\"11\\\" ];\\r\\n\" +\n\t\t\t\"\t\t\\\"node1\\\";\\r\\n\" +\n\t\t\t\"\t}\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" [ label = \\\"edge label\\\" ];\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" [ shape = \\\"octagon\\\" ];\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" [ style = \\\"filled\\\" ];\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" [ color = \\\"fuchsia\\\" ];\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" [ penwidth = \\\"5\\\" ];\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" [ fillcolor = \\\"gold\\\" ];\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" [ fontcolor = \\\"gray\\\" ];\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" [ fontname = \\\"Something\\\" ];\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" [ fontsize = \\\"12\\\" ];\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" -> \\\"node2\\\" [ label = \\\"edge label\\\" ] [ style = \\\"invis\\\" ] [ color = \\\"green\\\" ] [ penwidth = \\\"6\\\" ] [ fillcolor = \\\"indigo\\\" ] [ fontcolor = \\\"ivory\\\" ] [ fontname = \\\"Something else\\\" ] [ fontsize = \\\"13\\\" ];\\r\\n\" +\n\t\t\t\"}\\r\\n\";", "modifier": "private final", "type": "String", "declarator": "DOT_FILE_FOR_SIMPLE_GRAPH_WITH_NO_DEFAULT_VALUES =\n\t\t\t\"digraph G {\\r\\n\" +\n\t\t\t\"\tconcentrate = \\\"true\\\";\\r\\n\" +\n\t\t\t\"\trankdir = \\\"LR\\\";\\r\\n\" +\n\t\t\t\"\tranksep = \\\"1.5\\\";\\r\\n\" +\n\t\t\t\"\tnodesep = \\\"0.5\\\";\\r\\n\" +\n\t\t\t\"\tlabel = \\\"graph label\\\";\\r\\n\" +\n\t\t\t\"\tstyle = \\\"dashed\\\";\\r\\n\" +\n\t\t\t\"\tcolor = \\\"lime\\\";\\r\\n\" +\n\t\t\t\"\tpenwidth = \\\"1\\\";\\r\\n\" +\n\t\t\t\"\tbgcolor = \\\"aqua\\\";\\r\\n\" +\n\t\t\t\"\tfontcolor = \\\"red\\\";\\r\\n\" +\n\t\t\t\"\tfontname = \\\"Arial\\\";\\r\\n\" +\n\t\t\t\"\tfontsize = \\\"8\\\";\\r\\n\" +\n\t\t\t\"\t\tnode [ shape = \\\"diamond\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ style = \\\"dashed\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ color = \\\"red\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ penwidth = \\\"2\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ fillcolor = \\\"beige\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ fontcolor = \\\"black\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ fontname = \\\"Times-Roman\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ fontsize = \\\"9\\\" ];\\r\\n\" +\n\t\t\t\"\tsubgraph cluster_1 {\\r\\n\" +\n\t\t\t\"\t\tlabel = \\\"cluster label\\\";\\r\\n\" +\n\t\t\t\"\t\tstyle = \\\"bold\\\";\\r\\n\" +\n\t\t\t\"\t\tcolor = \\\"azure\\\";\\r\\n\" +\n\t\t\t\"\t\tpenwidth = \\\"3\\\";\\r\\n\" +\n\t\t\t\"\t\tfillcolor = \\\"blue\\\";\\r\\n\" +\n\t\t\t\"\t\tfontcolor = \\\"brown\\\";\\r\\n\" +\n\t\t\t\"\t\tfontname = \\\"Cambria\\\";\\r\\n\" +\n\t\t\t\"\t\tfontsize = \\\"10\\\";\\r\\n\" +\n\t\t\t\"\t\tnode [ shape = \\\"hexagon\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ style = \\\"dotted\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ color = \\\"coral\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ penwidth = \\\"4\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ fillcolor = \\\"crimson\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ fontcolor = \\\"cyan\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ fontname = \\\"Courier new\\\" ];\\r\\n\" +\n\t\t\t\"\t\tnode [ fontsize = \\\"11\\\" ];\\r\\n\" +\n\t\t\t\"\t\t\\\"node1\\\";\\r\\n\" +\n\t\t\t\"\t}\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" [ label = \\\"edge label\\\" ];\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" [ shape = \\\"octagon\\\" ];\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" [ style = \\\"filled\\\" ];\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" [ color = \\\"fuchsia\\\" ];\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" [ penwidth = \\\"5\\\" ];\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" [ fillcolor = \\\"gold\\\" ];\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" [ fontcolor = \\\"gray\\\" ];\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" [ fontname = \\\"Something\\\" ];\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" [ fontsize = \\\"12\\\" ];\\r\\n\" +\n\t\t\t\"\t\\\"node1\\\" -> \\\"node2\\\" [ label = \\\"edge label\\\" ] [ style = \\\"invis\\\" ] [ color = \\\"green\\\" ] [ penwidth = \\\"6\\\" ] [ fillcolor = \\\"indigo\\\" ] [ fontcolor = \\\"ivory\\\" ] [ fontname = \\\"Something else\\\" ] [ fontsize = \\\"13\\\" ];\\r\\n\" +\n\t\t\t\"}\\r\\n\"", "var_name": "DOT_FILE_FOR_SIMPLE_GRAPH_WITH_NO_DEFAULT_VALUES"}], "file": "power-tools-parent/power-tools-graph/src/test/java/org/powertools/graph/GraphVizTest.java"}, "test_case": {"identifier": "testWriteSimpleGraphWithOnlyDefaultValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testWriteSimpleGraphWithOnlyDefaultValues () {\n\t\tDirectedGraph graph = generateSimpleGraphWithOnlyDefaultValues ();\n\t\tStringWriter writer = new StringWriter ();\n\t\tnew GraphViz (\"\").writeDirected (graph, new PrintWriter (writer));\n\t\tassertEquals (DOT_FILE_FOR_SIMPLE_GRAPH_WITH_ONLY_DEFAULT_VALUES, writer.toString ());\n\t}", "signature": "void testWriteSimpleGraphWithOnlyDefaultValues()", "full_signature": "@Test public void testWriteSimpleGraphWithOnlyDefaultValues()", "class_method_signature": "GraphVizTest.testWriteSimpleGraphWithOnlyDefaultValues()", "testcase": true, "constructor": false, "invocations": ["generateSimpleGraphWithOnlyDefaultValues", "writeDirected", "assertEquals", "toString"]}, "focal_class": {"identifier": "GraphViz", "superclass": "", "interfaces": "implements Renderer", "fields": [{"original_string": "private static final String DEFAULT_DEFAULT_TYPE = \"png\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_DEFAULT_TYPE = \"png\"", "var_name": "DEFAULT_DEFAULT_TYPE"}, {"original_string": "private static final String LABEL                = \"label\";", "modifier": "private static final", "type": "String", "declarator": "LABEL                = \"label\"", "var_name": "LABEL"}, {"original_string": "private static final String SHAPE                = \"shape\";", "modifier": "private static final", "type": "String", "declarator": "SHAPE                = \"shape\"", "var_name": "SHAPE"}, {"original_string": "private static final String COLOR                = \"color\";", "modifier": "private static final", "type": "String", "declarator": "COLOR                = \"color\"", "var_name": "COLOR"}, {"original_string": "private static final String STYLE                = \"style\";", "modifier": "private static final", "type": "String", "declarator": "STYLE                = \"style\"", "var_name": "STYLE"}, {"original_string": "private static final String PEN_WIDTH            = \"penwidth\";", "modifier": "private static final", "type": "String", "declarator": "PEN_WIDTH            = \"penwidth\"", "var_name": "PEN_WIDTH"}, {"original_string": "private static final String FILL_COLOR           = \"fillcolor\";", "modifier": "private static final", "type": "String", "declarator": "FILL_COLOR           = \"fillcolor\"", "var_name": "FILL_COLOR"}, {"original_string": "private static final String FONT_COLOR           = \"fontcolor\";", "modifier": "private static final", "type": "String", "declarator": "FONT_COLOR           = \"fontcolor\"", "var_name": "FONT_COLOR"}, {"original_string": "private static final String FONT_NAME            = \"fontname\";", "modifier": "private static final", "type": "String", "declarator": "FONT_NAME            = \"fontname\"", "var_name": "FONT_NAME"}, {"original_string": "private static final String FONT_SIZE            = \"fontsize\";", "modifier": "private static final", "type": "String", "declarator": "FONT_SIZE            = \"fontsize\"", "var_name": "FONT_SIZE"}, {"original_string": "private final String mPath;", "modifier": "private final", "type": "String", "declarator": "mPath", "var_name": "mPath"}, {"original_string": "private File mFile;", "modifier": "private", "type": "File", "declarator": "mFile", "var_name": "mFile"}, {"original_string": "private PrintWriter mWriter;", "modifier": "private", "type": "PrintWriter", "declarator": "mWriter", "var_name": "mWriter"}, {"original_string": "private String mDefaultFileType;", "modifier": "private", "type": "String", "declarator": "mDefaultFileType", "var_name": "mDefaultFileType"}, {"original_string": "private boolean mInDebugMode;", "modifier": "private", "type": "boolean", "declarator": "mInDebugMode", "var_name": "mInDebugMode"}, {"original_string": "private int mLastClusterNr;", "modifier": "private", "type": "int", "declarator": "mLastClusterNr", "var_name": "mLastClusterNr"}], "methods": [{"identifier": "GraphViz", "parameters": "()", "modifiers": "public", "return": "", "signature": " GraphViz()", "full_signature": "public  GraphViz()", "class_method_signature": "GraphViz.GraphViz()", "testcase": false, "constructor": true}, {"identifier": "GraphViz", "parameters": "(String path)", "modifiers": "public", "return": "", "signature": " GraphViz(String path)", "full_signature": "public  GraphViz(String path)", "class_method_signature": "GraphViz.GraphViz(String path)", "testcase": false, "constructor": true}, {"identifier": "GraphViz", "parameters": "(String path, String defaultType)", "modifiers": "public", "return": "", "signature": " GraphViz(String path, String defaultType)", "full_signature": "public  GraphViz(String path, String defaultType)", "class_method_signature": "GraphViz.GraphViz(String path, String defaultType)", "testcase": false, "constructor": true}, {"identifier": "setDebugMode", "parameters": "(boolean value)", "modifiers": "public", "return": "void", "signature": "void setDebugMode(boolean value)", "full_signature": "public void setDebugMode(boolean value)", "class_method_signature": "GraphViz.setDebugMode(boolean value)", "testcase": false, "constructor": false}, {"identifier": "inDebugMode", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean inDebugMode()", "full_signature": "public boolean inDebugMode()", "class_method_signature": "GraphViz.inDebugMode()", "testcase": false, "constructor": false}, {"identifier": "setDefaultFileType", "parameters": "(String fileType)", "modifiers": "@Override public", "return": "void", "signature": "void setDefaultFileType(String fileType)", "full_signature": "@Override public void setDefaultFileType(String fileType)", "class_method_signature": "GraphViz.setDefaultFileType(String fileType)", "testcase": false, "constructor": false}, {"identifier": "getDefaultFileType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDefaultFileType()", "full_signature": "@Override public String getDefaultFileType()", "class_method_signature": "GraphViz.getDefaultFileType()", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String filename, DirectedGraph graph)", "modifiers": "@Override public", "return": "void", "signature": "void write(String filename, DirectedGraph graph)", "full_signature": "@Override public void write(String filename, DirectedGraph graph)", "class_method_signature": "GraphViz.write(String filename, DirectedGraph graph)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String filename, String fileType, DirectedGraph graph)", "modifiers": "@Override public", "return": "void", "signature": "void write(String filename, String fileType, DirectedGraph graph)", "full_signature": "@Override public void write(String filename, String fileType, DirectedGraph graph)", "class_method_signature": "GraphViz.write(String filename, String fileType, DirectedGraph graph)", "testcase": false, "constructor": false}, {"identifier": "writeDirected", "parameters": "(DirectedGraph graph, PrintWriter writer)", "modifiers": "@Override public", "return": "void", "signature": "void writeDirected(DirectedGraph graph, PrintWriter writer)", "full_signature": "@Override public void writeDirected(DirectedGraph graph, PrintWriter writer)", "class_method_signature": "GraphViz.writeDirected(DirectedGraph graph, PrintWriter writer)", "testcase": false, "constructor": false}, {"identifier": "writeDirected", "parameters": "(DirectedGraph graph, String filename)", "modifiers": "@Override public", "return": "void", "signature": "void writeDirected(DirectedGraph graph, String filename)", "full_signature": "@Override public void writeDirected(DirectedGraph graph, String filename)", "class_method_signature": "GraphViz.writeDirected(DirectedGraph graph, String filename)", "testcase": false, "constructor": false}, {"identifier": "writeDirected", "parameters": "(DirectedGraph graph, String filename, String fileType)", "modifiers": "@Override public", "return": "void", "signature": "void writeDirected(DirectedGraph graph, String filename, String fileType)", "full_signature": "@Override public void writeDirected(DirectedGraph graph, String filename, String fileType)", "class_method_signature": "GraphViz.writeDirected(DirectedGraph graph, String filename, String fileType)", "testcase": false, "constructor": false}, {"identifier": "writeDotFile", "parameters": "(DirectedGraph graph)", "modifiers": "private", "return": "void", "signature": "void writeDotFile(DirectedGraph graph)", "full_signature": "private void writeDotFile(DirectedGraph graph)", "class_method_signature": "GraphViz.writeDotFile(DirectedGraph graph)", "testcase": false, "constructor": false}, {"identifier": "openDotFile", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void openDotFile()", "full_signature": "private void openDotFile()", "class_method_signature": "GraphViz.openDotFile()", "testcase": false, "constructor": false}, {"identifier": "startDotFile", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void startDotFile()", "full_signature": "private void startDotFile()", "class_method_signature": "GraphViz.startDotFile()", "testcase": false, "constructor": false}, {"identifier": "writeGraph", "parameters": "(DirectedGraph graph)", "modifiers": "private", "return": "void", "signature": "void writeGraph(DirectedGraph graph)", "full_signature": "private void writeGraph(DirectedGraph graph)", "class_method_signature": "GraphViz.writeGraph(DirectedGraph graph)", "testcase": false, "constructor": false}, {"identifier": "writeGraphAttribute", "parameters": "(boolean condition, String attributeName, String value)", "modifiers": "private", "return": "void", "signature": "void writeGraphAttribute(boolean condition, String attributeName, String value)", "full_signature": "private void writeGraphAttribute(boolean condition, String attributeName, String value)", "class_method_signature": "GraphViz.writeGraphAttribute(boolean condition, String attributeName, String value)", "testcase": false, "constructor": false}, {"identifier": "writeClusters", "parameters": "(DirectedGraph graph)", "modifiers": "private", "return": "void", "signature": "void writeClusters(DirectedGraph graph)", "full_signature": "private void writeClusters(DirectedGraph graph)", "class_method_signature": "GraphViz.writeClusters(DirectedGraph graph)", "testcase": false, "constructor": false}, {"identifier": "writeClusters", "parameters": "(Cluster cluster)", "modifiers": "private", "return": "void", "signature": "void writeClusters(Cluster cluster)", "full_signature": "private void writeClusters(Cluster cluster)", "class_method_signature": "GraphViz.writeClusters(Cluster cluster)", "testcase": false, "constructor": false}, {"identifier": "writeCluster", "parameters": "(Cluster cluster)", "modifiers": "private", "return": "void", "signature": "void writeCluster(Cluster cluster)", "full_signature": "private void writeCluster(Cluster cluster)", "class_method_signature": "GraphViz.writeCluster(Cluster cluster)", "testcase": false, "constructor": false}, {"identifier": "writeClusterAttribute", "parameters": "(boolean condition, String attributeName, String value)", "modifiers": "private", "return": "void", "signature": "void writeClusterAttribute(boolean condition, String attributeName, String value)", "full_signature": "private void writeClusterAttribute(boolean condition, String attributeName, String value)", "class_method_signature": "GraphViz.writeClusterAttribute(boolean condition, String attributeName, String value)", "testcase": false, "constructor": false}, {"identifier": "writeNodes", "parameters": "(DirectedGraph graph)", "modifiers": "private", "return": "void", "signature": "void writeNodes(DirectedGraph graph)", "full_signature": "private void writeNodes(DirectedGraph graph)", "class_method_signature": "GraphViz.writeNodes(DirectedGraph graph)", "testcase": false, "constructor": false}, {"identifier": "writeNodeAttribute", "parameters": "(boolean condition, Node node, String attributeName, String value)", "modifiers": "private", "return": "void", "signature": "void writeNodeAttribute(boolean condition, Node node, String attributeName, String value)", "full_signature": "private void writeNodeAttribute(boolean condition, Node node, String attributeName, String value)", "class_method_signature": "GraphViz.writeNodeAttribute(boolean condition, Node node, String attributeName, String value)", "testcase": false, "constructor": false}, {"identifier": "writeEdges", "parameters": "(DirectedGraph graph)", "modifiers": "private", "return": "void", "signature": "void writeEdges(DirectedGraph graph)", "full_signature": "private void writeEdges(DirectedGraph graph)", "class_method_signature": "GraphViz.writeEdges(DirectedGraph graph)", "testcase": false, "constructor": false}, {"identifier": "writeEdgeAttribute", "parameters": "(boolean condition, String attributeName, String value)", "modifiers": "private", "return": "void", "signature": "void writeEdgeAttribute(boolean condition, String attributeName, String value)", "full_signature": "private void writeEdgeAttribute(boolean condition, String attributeName, String value)", "class_method_signature": "GraphViz.writeEdgeAttribute(boolean condition, String attributeName, String value)", "testcase": false, "constructor": false}, {"identifier": "writeDefaultNodeAttributes", "parameters": "(AttributeSetWithDefaultNodeAttributes attributes)", "modifiers": "private", "return": "void", "signature": "void writeDefaultNodeAttributes(AttributeSetWithDefaultNodeAttributes attributes)", "full_signature": "private void writeDefaultNodeAttributes(AttributeSetWithDefaultNodeAttributes attributes)", "class_method_signature": "GraphViz.writeDefaultNodeAttributes(AttributeSetWithDefaultNodeAttributes attributes)", "testcase": false, "constructor": false}, {"identifier": "writeDefaultNodeAttribute", "parameters": "(boolean condition, String attributeName, String value)", "modifiers": "private", "return": "void", "signature": "void writeDefaultNodeAttribute(boolean condition, String attributeName, String value)", "full_signature": "private void writeDefaultNodeAttribute(boolean condition, String attributeName, String value)", "class_method_signature": "GraphViz.writeDefaultNodeAttribute(boolean condition, String attributeName, String value)", "testcase": false, "constructor": false}, {"identifier": "writeRanks", "parameters": "(DirectedGraph graph)", "modifiers": "private", "return": "void", "signature": "void writeRanks(DirectedGraph graph)", "full_signature": "private void writeRanks(DirectedGraph graph)", "class_method_signature": "GraphViz.writeRanks(DirectedGraph graph)", "testcase": false, "constructor": false}, {"identifier": "closeDotFile", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void closeDotFile()", "full_signature": "private void closeDotFile()", "class_method_signature": "GraphViz.closeDotFile()", "testcase": false, "constructor": false}, {"identifier": "generateImages", "parameters": "(String filename, String fileType)", "modifiers": "private", "return": "void", "signature": "void generateImages(String filename, String fileType)", "full_signature": "private void generateImages(String filename, String fileType)", "class_method_signature": "GraphViz.generateImages(String filename, String fileType)", "testcase": false, "constructor": false}, {"identifier": "generateImageDirected", "parameters": "(String filename, String fileType)", "modifiers": "private", "return": "void", "signature": "void generateImageDirected(String filename, String fileType)", "full_signature": "private void generateImageDirected(String filename, String fileType)", "class_method_signature": "GraphViz.generateImageDirected(String filename, String fileType)", "testcase": false, "constructor": false}, {"identifier": "runTool", "parameters": "(String tool, String filename, String fileType)", "modifiers": "private", "return": "void", "signature": "void runTool(String tool, String filename, String fileType)", "full_signature": "private void runTool(String tool, String filename, String fileType)", "class_method_signature": "GraphViz.runTool(String tool, String filename, String fileType)", "testcase": false, "constructor": false}, {"identifier": "getPath", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getPath()", "full_signature": "private String getPath()", "class_method_signature": "GraphViz.getPath()", "testcase": false, "constructor": false}], "file": "power-tools-parent/power-tools-graph/src/main/java/org/powertools/graph/GraphViz.java"}, "focal_method": {"identifier": "writeDirected", "parameters": "(DirectedGraph graph, PrintWriter writer)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void writeDirected (DirectedGraph graph, PrintWriter writer) {\n        mWriter = writer;\n        writeDotFile (graph);\n    }", "signature": "void writeDirected(DirectedGraph graph, PrintWriter writer)", "full_signature": "@Override public void writeDirected(DirectedGraph graph, PrintWriter writer)", "class_method_signature": "GraphViz.writeDirected(DirectedGraph graph, PrintWriter writer)", "testcase": false, "constructor": false, "invocations": ["writeDotFile"]}, "repository": {"repo_id": 2449032, "url": "https://github.com/MartinGijsen/PowerTools", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 6, "size": 1630, "license": "licensed"}}