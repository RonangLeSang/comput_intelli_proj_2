{"test_class": {"identifier": "SymbolImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String NAME = \"someName\";", "modifier": "private final", "type": "String", "declarator": "NAME = \"someName\"", "var_name": "NAME"}, {"original_string": "private final String VALUE1 = \"some value\";", "modifier": "private final", "type": "String", "declarator": "VALUE1 = \"some value\"", "var_name": "VALUE1"}, {"original_string": "private final String VALUE2 = \"another value\";", "modifier": "private final", "type": "String", "declarator": "VALUE2 = \"another value\"", "var_name": "VALUE2"}], "file": "power-tools-parent/power-tools-engine/src/test/java/org/powertools/engine/symbol/SymbolImplTest.java"}, "test_case": {"identifier": "testClear", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testClear () {\n\t\tSymbolImpl symbol = new SymbolImplImpl (NAME, VALUE1);\n\t\tsymbol.clear (\"a.b\".split (\"\\\\.\"));\n\t\tassertEquals (\"\", symbol.getValue ());\n\t}", "signature": "void testClear()", "full_signature": "@Test public void testClear()", "class_method_signature": "SymbolImplTest.testClear()", "testcase": true, "constructor": false, "invocations": ["clear", "split", "assertEquals", "getValue"]}, "focal_class": {"identifier": "SymbolImpl", "superclass": "", "interfaces": "implements Symbol", "fields": [{"original_string": "protected String mName;", "modifier": "protected", "type": "String", "declarator": "mName", "var_name": "mName"}, {"original_string": "protected Scope  mScope;", "modifier": "protected", "type": "Scope", "declarator": "mScope", "var_name": "mScope"}, {"original_string": "private static final Pattern mNamePattern = Pattern.compile(\"[a-zA-Z][a-zA-Z0-9]*\");", "modifier": "private static final", "type": "Pattern", "declarator": "mNamePattern = Pattern.compile(\"[a-zA-Z][a-zA-Z0-9]*\")", "var_name": "mNamePattern"}], "methods": [{"identifier": "SymbolImpl", "parameters": "(String name, Scope scope)", "modifiers": "protected", "return": "", "signature": " SymbolImpl(String name, Scope scope)", "full_signature": "protected  SymbolImpl(String name, Scope scope)", "class_method_signature": "SymbolImpl.SymbolImpl(String name, Scope scope)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public final", "return": "String", "signature": "String getName()", "full_signature": "@Override public final String getName()", "class_method_signature": "SymbolImpl.getName()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public final", "return": "String", "signature": "String getValue()", "full_signature": "@Override public final String getValue()", "class_method_signature": "SymbolImpl.getValue()", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(String value)", "modifiers": "@Override public final", "return": "void", "signature": "void setValue(String value)", "full_signature": "@Override public final void setValue(String value)", "class_method_signature": "SymbolImpl.setValue(String value)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "(String name)", "modifiers": "@Override public final", "return": "void", "signature": "void clear(String name)", "full_signature": "@Override public final void clear(String name)", "class_method_signature": "SymbolImpl.clear(String name)", "testcase": false, "constructor": false}], "file": "power-tools-parent/power-tools-engine/src/main/java/org/powertools/engine/symbol/SymbolImpl.java"}, "focal_method": {"identifier": "clear", "parameters": "(String name)", "modifiers": "@Override public final", "return": "void", "body": "@Override\n    public final void clear (String name) {\n        clear (name.split (PERIOD));\n    }", "signature": "void clear(String name)", "full_signature": "@Override public final void clear(String name)", "class_method_signature": "SymbolImpl.clear(String name)", "testcase": false, "constructor": false, "invocations": ["clear", "split"]}, "repository": {"repo_id": 2449032, "url": "https://github.com/MartinGijsen/PowerTools", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 6, "size": 1630, "license": "licensed"}}