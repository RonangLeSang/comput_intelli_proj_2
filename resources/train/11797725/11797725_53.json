{"test_class": {"identifier": "FieldFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/fixio/fixprotocol/fields/FieldFactoryTest.java"}, "test_case": {"identifier": "testValueOfInt", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValueOfInt() {\n        int value = new Random().nextInt(1000);\n        IntField field = FieldFactory.valueOf(FieldType.EncryptMethod.tag(), String.valueOf(value).getBytes(US_ASCII));\n\n        assertEquals(\"tagnum\", FieldType.EncryptMethod.tag(), field.getTagNum());\n        assertEquals(\"value\", value, field.getValue().intValue());\n        assertEquals(\"value\", value, field.intValue());\n    }", "signature": "void testValueOfInt()", "full_signature": "@Test public void testValueOfInt()", "class_method_signature": "FieldFactoryTest.testValueOfInt()", "testcase": true, "constructor": false, "invocations": ["nextInt", "valueOf", "tag", "getBytes", "valueOf", "assertEquals", "tag", "getTagNum", "assertEquals", "intValue", "getValue", "assertEquals", "intValue"]}, "focal_class": {"identifier": "FieldFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "valueOf", "parameters": "(int tagNum, byte[] value)", "modifiers": "public static", "return": "F", "signature": "F valueOf(int tagNum, byte[] value)", "full_signature": "public static F valueOf(int tagNum, byte[] value)", "class_method_signature": "FieldFactory.valueOf(int tagNum, byte[] value)", "testcase": false, "constructor": false}, {"identifier": "valueOf", "parameters": "(int tagNum, byte[] value, int offset, int length)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "F", "signature": "F valueOf(int tagNum, byte[] value, int offset, int length)", "full_signature": "@SuppressWarnings(\"unchecked\") public static F valueOf(int tagNum, byte[] value, int offset, int length)", "class_method_signature": "FieldFactory.valueOf(int tagNum, byte[] value, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "fromIntValue", "parameters": "(DataType type, int tagNum, int value)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "F", "signature": "F fromIntValue(DataType type, int tagNum, int value)", "full_signature": "@SuppressWarnings(\"unchecked\") public static F fromIntValue(DataType type, int tagNum, int value)", "class_method_signature": "FieldFactory.fromIntValue(DataType type, int tagNum, int value)", "testcase": false, "constructor": false}, {"identifier": "fromIntValue", "parameters": "(int tagNum, int value)", "modifiers": "public static", "return": "F", "signature": "F fromIntValue(int tagNum, int value)", "full_signature": "public static F fromIntValue(int tagNum, int value)", "class_method_signature": "FieldFactory.fromIntValue(int tagNum, int value)", "testcase": false, "constructor": false}, {"identifier": "fromLongValue", "parameters": "(int tagNum, long value)", "modifiers": "public static", "return": "F", "signature": "F fromLongValue(int tagNum, long value)", "full_signature": "public static F fromLongValue(int tagNum, long value)", "class_method_signature": "FieldFactory.fromLongValue(int tagNum, long value)", "testcase": false, "constructor": false}, {"identifier": "fromLongValue", "parameters": "(FieldType fieldType, long value)", "modifiers": "public static", "return": "F", "signature": "F fromLongValue(FieldType fieldType, long value)", "full_signature": "public static F fromLongValue(FieldType fieldType, long value)", "class_method_signature": "FieldFactory.fromLongValue(FieldType fieldType, long value)", "testcase": false, "constructor": false}, {"identifier": "fromLongValue", "parameters": "(DataType type, int tagNum, long value)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "F", "signature": "F fromLongValue(DataType type, int tagNum, long value)", "full_signature": "@SuppressWarnings(\"unchecked\") public static F fromLongValue(DataType type, int tagNum, long value)", "class_method_signature": "FieldFactory.fromLongValue(DataType type, int tagNum, long value)", "testcase": false, "constructor": false}, {"identifier": "fromStringValue", "parameters": "(int tagNum, String value)", "modifiers": "public static", "return": "F", "signature": "F fromStringValue(int tagNum, String value)", "full_signature": "public static F fromStringValue(int tagNum, String value)", "class_method_signature": "FieldFactory.fromStringValue(int tagNum, String value)", "testcase": false, "constructor": false}, {"identifier": "fromStringValue", "parameters": "(FieldType fieldType, String value)", "modifiers": "public static", "return": "F", "signature": "F fromStringValue(FieldType fieldType, String value)", "full_signature": "public static F fromStringValue(FieldType fieldType, String value)", "class_method_signature": "FieldFactory.fromStringValue(FieldType fieldType, String value)", "testcase": false, "constructor": false}, {"identifier": "fromStringValue", "parameters": "(DataType type, int tagNum, String value)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "F", "signature": "F fromStringValue(DataType type, int tagNum, String value)", "full_signature": "@SuppressWarnings(\"unchecked\") public static F fromStringValue(DataType type, int tagNum, String value)", "class_method_signature": "FieldFactory.fromStringValue(DataType type, int tagNum, String value)", "testcase": false, "constructor": false}, {"identifier": "fromFixedPointValue", "parameters": "(int tagNum, FixedPointNumber value)", "modifiers": "public static", "return": "F", "signature": "F fromFixedPointValue(int tagNum, FixedPointNumber value)", "full_signature": "public static F fromFixedPointValue(int tagNum, FixedPointNumber value)", "class_method_signature": "FieldFactory.fromFixedPointValue(int tagNum, FixedPointNumber value)", "testcase": false, "constructor": false}, {"identifier": "fromFixedPointValue", "parameters": "(FieldType fieldType, FixedPointNumber value)", "modifiers": "public static", "return": "F", "signature": "F fromFixedPointValue(FieldType fieldType, FixedPointNumber value)", "full_signature": "public static F fromFixedPointValue(FieldType fieldType, FixedPointNumber value)", "class_method_signature": "FieldFactory.fromFixedPointValue(FieldType fieldType, FixedPointNumber value)", "testcase": false, "constructor": false}, {"identifier": "fromFixedPointValue", "parameters": "(DataType type, int tagNum, FixedPointNumber value)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "F", "signature": "F fromFixedPointValue(DataType type, int tagNum, FixedPointNumber value)", "full_signature": "@SuppressWarnings(\"unchecked\") public static F fromFixedPointValue(DataType type, int tagNum, FixedPointNumber value)", "class_method_signature": "FieldFactory.fromFixedPointValue(DataType type, int tagNum, FixedPointNumber value)", "testcase": false, "constructor": false}], "file": "core/src/main/java/fixio/fixprotocol/fields/FieldFactory.java"}, "focal_method": {"identifier": "valueOf", "parameters": "(int tagNum, byte[] value)", "modifiers": "public static", "return": "F", "body": "public static <F extends AbstractField> F valueOf(int tagNum, byte[] value) {\n        return valueOf(tagNum, value, 0, value.length);\n    }", "signature": "F valueOf(int tagNum, byte[] value)", "full_signature": "public static F valueOf(int tagNum, byte[] value)", "class_method_signature": "FieldFactory.valueOf(int tagNum, byte[] value)", "testcase": false, "constructor": false, "invocations": ["valueOf"]}, "repository": {"repo_id": 11797725, "url": "https://github.com/kpavlov/fixio", "language": "Java", "is_fork": false, "fork_count": 43, "stargazer_count": 77, "size": 1138, "license": "licensed"}}