{"test_class": {"identifier": "ConnectionTemplateTest", "superclass": "extends AbstractXingApiTest", "interfaces": "", "fields": [], "file": "spring-social-xing/src/test/java/org/springframework/social/xing/api/impl/ConnectionTemplateTest.java"}, "test_case": {"identifier": "getConectionsWithProfil", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getConectionsWithProfil() {\n        mockServer.expect(requestTo(XingTemplate.DEFAULT_BASE_URL + ConnectionTemplate.CONNECTIONS_URL.replaceFirst(\"\\\\{id\\\\}\", \"me\"))).andExpect(method(GET))\n                .andRespond(withSuccess(new ClassPathResource(\"testdata/connections_with_fields.json\", getClass()), MediaType.APPLICATION_JSON));\n        List<XingProfile> profiles = xing.connectionOperations().getConnections();\n        assertThat(profiles, hasSize(5));\n        for (XingProfile profile : profiles) {\n            assertThat(profile.getId().length(), is(greaterThan(1)));\n            assertThat(profile.getDisplayName().length(), is(greaterThan(1)));\n        }\n    }", "signature": "void getConectionsWithProfil()", "full_signature": "@Test public void getConectionsWithProfil()", "class_method_signature": "ConnectionTemplateTest.getConectionsWithProfil()", "testcase": true, "constructor": false, "invocations": ["andRespond", "andExpect", "expect", "requestTo", "replaceFirst", "method", "withSuccess", "getClass", "getConnections", "connectionOperations", "assertThat", "hasSize", "assertThat", "length", "getId", "is", "greaterThan", "assertThat", "length", "getDisplayName", "is", "greaterThan"]}, "focal_class": {"identifier": "ConnectionTemplate", "superclass": "extends AbstractTemplate", "interfaces": "implements ConnectionOperations", "fields": [{"original_string": "static final String CONNECTIONS_URL = \"/users/{id}/contacts\";", "modifier": "static final", "type": "String", "declarator": "CONNECTIONS_URL = \"/users/{id}/contacts\"", "var_name": "CONNECTIONS_URL"}, {"original_string": "static final String CONNECTIONS_URL2 = \"/users/me/contacts\";", "modifier": "static final", "type": "String", "declarator": "CONNECTIONS_URL2 = \"/users/me/contacts\"", "var_name": "CONNECTIONS_URL2"}, {"original_string": "private final RestOperations restOperations;", "modifier": "private final", "type": "RestOperations", "declarator": "restOperations", "var_name": "restOperations"}], "methods": [{"identifier": "ConnectionTemplate", "parameters": "(String xingBaseUrl, RestOperations restOperations)", "modifiers": "public", "return": "", "signature": " ConnectionTemplate(String xingBaseUrl, RestOperations restOperations)", "full_signature": "public  ConnectionTemplate(String xingBaseUrl, RestOperations restOperations)", "class_method_signature": "ConnectionTemplate.ConnectionTemplate(String xingBaseUrl, RestOperations restOperations)", "testcase": false, "constructor": true}, {"identifier": "ConnectionTemplate", "parameters": "(RestOperations restOperations)", "modifiers": "public", "return": "", "signature": " ConnectionTemplate(RestOperations restOperations)", "full_signature": "public  ConnectionTemplate(RestOperations restOperations)", "class_method_signature": "ConnectionTemplate.ConnectionTemplate(RestOperations restOperations)", "testcase": false, "constructor": true}, {"identifier": "getConnections", "parameters": "()", "modifiers": "public", "return": "List<XingProfile>", "signature": "List<XingProfile> getConnections()", "full_signature": "public List<XingProfile> getConnections()", "class_method_signature": "ConnectionTemplate.getConnections()", "testcase": false, "constructor": false}, {"identifier": "getConnections", "parameters": "(String id)", "modifiers": "public", "return": "List<XingProfile>", "signature": "List<XingProfile> getConnections(String id)", "full_signature": "public List<XingProfile> getConnections(String id)", "class_method_signature": "ConnectionTemplate.getConnections(String id)", "testcase": false, "constructor": false}, {"identifier": "getConnectionWithProfil", "parameters": "()", "modifiers": "@Override public", "return": "List<XingProfile>", "signature": "List<XingProfile> getConnectionWithProfil()", "full_signature": "@Override public List<XingProfile> getConnectionWithProfil()", "class_method_signature": "ConnectionTemplate.getConnectionWithProfil()", "testcase": false, "constructor": false}, {"identifier": "getConnections", "parameters": "(int start, int count)", "modifiers": "public", "return": "List<XingProfile>", "signature": "List<XingProfile> getConnections(int start, int count)", "full_signature": "public List<XingProfile> getConnections(int start, int count)", "class_method_signature": "ConnectionTemplate.getConnections(int start, int count)", "testcase": false, "constructor": false}], "file": "spring-social-xing/src/main/java/org/springframework/social/xing/api/impl/ConnectionTemplate.java"}, "focal_method": {"identifier": "getConnections", "parameters": "()", "modifiers": "public", "return": "List<XingProfile>", "body": "public List<XingProfile> getConnections() {\n        XingConnections connections = restOperations.getForObject(buildUrl(CONNECTIONS_URL), XingConnections.class,\"me\");\n        return connections.getContacts().getUsers();\n    }", "signature": "List<XingProfile> getConnections()", "full_signature": "public List<XingProfile> getConnections()", "class_method_signature": "ConnectionTemplate.getConnections()", "testcase": false, "constructor": false, "invocations": ["getForObject", "buildUrl", "getUsers", "getContacts"]}, "repository": {"repo_id": 3750999, "url": "https://github.com/jonnybbb/spring-social-xing", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 14, "size": 1155, "license": "licensed"}}