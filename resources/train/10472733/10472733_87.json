{"test_class": {"identifier": "FormControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FormController formController;", "modifier": "private", "type": "FormController", "declarator": "formController", "var_name": "formController"}, {"original_string": "private FormService formService;", "modifier": "private", "type": "FormService", "declarator": "formService", "var_name": "formService"}, {"original_string": "private PatientService patientService;", "modifier": "private", "type": "PatientService", "declarator": "patientService", "var_name": "patientService"}, {"original_string": "private LastSyncTimeService lastSyncTimeService;", "modifier": "private", "type": "LastSyncTimeService", "declarator": "lastSyncTimeService", "var_name": "lastSyncTimeService"}, {"original_string": "private SntpService sntpService;", "modifier": "private", "type": "SntpService", "declarator": "sntpService", "var_name": "sntpService"}, {"original_string": "private Date mockDate;", "modifier": "private", "type": "Date", "declarator": "mockDate", "var_name": "mockDate"}, {"original_string": "private MuzimaApplication muzimaApplication;", "modifier": "private", "type": "MuzimaApplication", "declarator": "muzimaApplication", "var_name": "muzimaApplication"}], "file": "app/src/test/java/com/muzima/controller/FormControllerTest.java"}, "test_case": {"identifier": "saveAllForms_shouldSaveAllForm", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void saveAllForms_shouldSaveAllForm() throws FormController.FormSaveException, IOException {\n        List<Form> forms = buildForms();\n\n        formController.saveAllForms(forms);\n\n        verify(formService).saveForms(forms);\n        verifyNoMoreInteractions(formService);\n    }", "signature": "void saveAllForms_shouldSaveAllForm()", "full_signature": "@Test public void saveAllForms_shouldSaveAllForm()", "class_method_signature": "FormControllerTest.saveAllForms_shouldSaveAllForm()", "testcase": true, "constructor": false, "invocations": ["buildForms", "saveAllForms", "saveForms", "verify", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "FormController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final FormService formService;", "modifier": "private final", "type": "FormService", "declarator": "formService", "var_name": "formService"}, {"original_string": "private final PatientService patientService;", "modifier": "private final", "type": "PatientService", "declarator": "patientService", "var_name": "patientService"}, {"original_string": "private final LastSyncTimeService lastSyncTimeService;", "modifier": "private final", "type": "LastSyncTimeService", "declarator": "lastSyncTimeService", "var_name": "lastSyncTimeService"}, {"original_string": "private final SntpService sntpService;", "modifier": "private final", "type": "SntpService", "declarator": "sntpService", "var_name": "sntpService"}, {"original_string": "private final ObservationService observationService;", "modifier": "private final", "type": "ObservationService", "declarator": "observationService", "var_name": "observationService"}, {"original_string": "private final EncounterService encounterService;", "modifier": "private final", "type": "EncounterService", "declarator": "encounterService", "var_name": "encounterService"}, {"original_string": "private final SetupConfigurationService setupConfigurationService;", "modifier": "private final", "type": "SetupConfigurationService", "declarator": "setupConfigurationService", "var_name": "setupConfigurationService"}, {"original_string": "private final Map<String, Integer> tagColors;", "modifier": "private final", "type": "Map<String, Integer>", "declarator": "tagColors", "var_name": "tagColors"}, {"original_string": "private List<Tag> selectedTags;", "modifier": "private", "type": "List<Tag>", "declarator": "selectedTags", "var_name": "selectedTags"}, {"original_string": "private String jsonPayload;", "modifier": "private", "type": "String", "declarator": "jsonPayload", "var_name": "jsonPayload"}, {"original_string": "private MuzimaApplication muzimaApplication;", "modifier": "private", "type": "MuzimaApplication", "declarator": "muzimaApplication", "var_name": "muzimaApplication"}], "methods": [{"identifier": "FormController", "parameters": "(MuzimaApplication muzimaApplication)", "modifiers": "public", "return": "", "signature": " FormController(MuzimaApplication muzimaApplication)", "full_signature": "public  FormController(MuzimaApplication muzimaApplication)", "class_method_signature": "FormController.FormController(MuzimaApplication muzimaApplication)", "testcase": false, "constructor": true}, {"identifier": "getTotalFormCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTotalFormCount()", "full_signature": "public int getTotalFormCount()", "class_method_signature": "FormController.getTotalFormCount()", "testcase": false, "constructor": false}, {"identifier": "getFormByUuid", "parameters": "(String formId)", "modifiers": "public", "return": "Form", "signature": "Form getFormByUuid(String formId)", "full_signature": "public Form getFormByUuid(String formId)", "class_method_signature": "FormController.getFormByUuid(String formId)", "testcase": false, "constructor": false}, {"identifier": "getFormTemplateByUuid", "parameters": "(String formId)", "modifiers": "public", "return": "FormTemplate", "signature": "FormTemplate getFormTemplateByUuid(String formId)", "full_signature": "public FormTemplate getFormTemplateByUuid(String formId)", "class_method_signature": "FormController.getFormTemplateByUuid(String formId)", "testcase": false, "constructor": false}, {"identifier": "getAvailableFormByTags", "parameters": "(List<String> tagsUuid)", "modifiers": "public", "return": "AvailableForms", "signature": "AvailableForms getAvailableFormByTags(List<String> tagsUuid)", "full_signature": "public AvailableForms getAvailableFormByTags(List<String> tagsUuid)", "class_method_signature": "FormController.getAvailableFormByTags(List<String> tagsUuid)", "testcase": false, "constructor": false}, {"identifier": "getAllAvailableForms", "parameters": "()", "modifiers": "public", "return": "List<Form>", "signature": "List<Form> getAllAvailableForms()", "full_signature": "public List<Form> getAllAvailableForms()", "class_method_signature": "FormController.getAllAvailableForms()", "testcase": false, "constructor": false}, {"identifier": "getAvailableFormByTags", "parameters": "(List<String> tagsUuid, boolean alwaysIncludeRegistrationForms)", "modifiers": "public", "return": "AvailableForms", "signature": "AvailableForms getAvailableFormByTags(List<String> tagsUuid, boolean alwaysIncludeRegistrationForms)", "full_signature": "public AvailableForms getAvailableFormByTags(List<String> tagsUuid, boolean alwaysIncludeRegistrationForms)", "class_method_signature": "FormController.getAvailableFormByTags(List<String> tagsUuid, boolean alwaysIncludeRegistrationForms)", "testcase": false, "constructor": false}, {"identifier": "filterFormsByTags", "parameters": "(List<Form> forms, List<String> tagsUuid, boolean alwaysIncludeRegistrationForms)", "modifiers": "private", "return": "List<Form>", "signature": "List<Form> filterFormsByTags(List<Form> forms, List<String> tagsUuid, boolean alwaysIncludeRegistrationForms)", "full_signature": "private List<Form> filterFormsByTags(List<Form> forms, List<String> tagsUuid, boolean alwaysIncludeRegistrationForms)", "class_method_signature": "FormController.filterFormsByTags(List<Form> forms, List<String> tagsUuid, boolean alwaysIncludeRegistrationForms)", "testcase": false, "constructor": false}, {"identifier": "getAllTags", "parameters": "()", "modifiers": "public", "return": "List<Tag>", "signature": "List<Tag> getAllTags()", "full_signature": "public List<Tag> getAllTags()", "class_method_signature": "FormController.getAllTags()", "testcase": false, "constructor": false}, {"identifier": "getAllTagsExcludingRegistrationTag", "parameters": "()", "modifiers": "public", "return": "List<Tag>", "signature": "List<Tag> getAllTagsExcludingRegistrationTag()", "full_signature": "public List<Tag> getAllTagsExcludingRegistrationTag()", "class_method_signature": "FormController.getAllTagsExcludingRegistrationTag()", "testcase": false, "constructor": false}, {"identifier": "getAllDownloadedForms", "parameters": "()", "modifiers": "public", "return": "DownloadedForms", "signature": "DownloadedForms getAllDownloadedForms()", "full_signature": "public DownloadedForms getAllDownloadedForms()", "class_method_signature": "FormController.getAllDownloadedForms()", "testcase": false, "constructor": false}, {"identifier": "downloadAllForms", "parameters": "()", "modifiers": "public", "return": "List<Form>", "signature": "List<Form> downloadAllForms()", "full_signature": "public List<Form> downloadAllForms()", "class_method_signature": "FormController.downloadAllForms()", "testcase": false, "constructor": false}, {"identifier": "downloadFormTemplates", "parameters": "(String[] formUuids)", "modifiers": "public", "return": "List<FormTemplate>", "signature": "List<FormTemplate> downloadFormTemplates(String[] formUuids)", "full_signature": "public List<FormTemplate> downloadFormTemplates(String[] formUuids)", "class_method_signature": "FormController.downloadFormTemplates(String[] formUuids)", "testcase": false, "constructor": false}, {"identifier": "downloadFormTemplateByUuid", "parameters": "(String uuid)", "modifiers": "public", "return": "FormTemplate", "signature": "FormTemplate downloadFormTemplateByUuid(String uuid)", "full_signature": "public FormTemplate downloadFormTemplateByUuid(String uuid)", "class_method_signature": "FormController.downloadFormTemplateByUuid(String uuid)", "testcase": false, "constructor": false}, {"identifier": "saveAllForms", "parameters": "(List<Form> forms)", "modifiers": "public", "return": "void", "signature": "void saveAllForms(List<Form> forms)", "full_signature": "public void saveAllForms(List<Form> forms)", "class_method_signature": "FormController.saveAllForms(List<Form> forms)", "testcase": false, "constructor": false}, {"identifier": "updateAllForms", "parameters": "(List<Form> forms)", "modifiers": "public", "return": "void", "signature": "void updateAllForms(List<Form> forms)", "full_signature": "public void updateAllForms(List<Form> forms)", "class_method_signature": "FormController.updateAllForms(List<Form> forms)", "testcase": false, "constructor": false}, {"identifier": "deleteAllForms", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void deleteAllForms()", "full_signature": "public void deleteAllForms()", "class_method_signature": "FormController.deleteAllForms()", "testcase": false, "constructor": false}, {"identifier": "deleteAllFormTemplates", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void deleteAllFormTemplates()", "full_signature": "public void deleteAllFormTemplates()", "class_method_signature": "FormController.deleteAllFormTemplates()", "testcase": false, "constructor": false}, {"identifier": "deleteForms", "parameters": "(List<Form> forms)", "modifiers": "public", "return": "void", "signature": "void deleteForms(List<Form> forms)", "full_signature": "public void deleteForms(List<Form> forms)", "class_method_signature": "FormController.deleteForms(List<Form> forms)", "testcase": false, "constructor": false}, {"identifier": "deleteFormTemplatesByUUID", "parameters": "(List<String> formTemplateUUIDs)", "modifiers": "public", "return": "void", "signature": "void deleteFormTemplatesByUUID(List<String> formTemplateUUIDs)", "full_signature": "public void deleteFormTemplatesByUUID(List<String> formTemplateUUIDs)", "class_method_signature": "FormController.deleteFormTemplatesByUUID(List<String> formTemplateUUIDs)", "testcase": false, "constructor": false}, {"identifier": "replaceFormTemplates", "parameters": "(List<FormTemplate> formTemplates)", "modifiers": "public", "return": "void", "signature": "void replaceFormTemplates(List<FormTemplate> formTemplates)", "full_signature": "public void replaceFormTemplates(List<FormTemplate> formTemplates)", "class_method_signature": "FormController.replaceFormTemplates(List<FormTemplate> formTemplates)", "testcase": false, "constructor": false}, {"identifier": "saveFormTemplates", "parameters": "(List<FormTemplate> formTemplates)", "modifiers": "public", "return": "void", "signature": "void saveFormTemplates(List<FormTemplate> formTemplates)", "full_signature": "public void saveFormTemplates(List<FormTemplate> formTemplates)", "class_method_signature": "FormController.saveFormTemplates(List<FormTemplate> formTemplates)", "testcase": false, "constructor": false}, {"identifier": "isFormDownloaded", "parameters": "(Form form)", "modifiers": "public", "return": "boolean", "signature": "boolean isFormDownloaded(Form form)", "full_signature": "public boolean isFormDownloaded(Form form)", "class_method_signature": "FormController.isFormDownloaded(Form form)", "testcase": false, "constructor": false}, {"identifier": "getTagColor", "parameters": "(String uuid)", "modifiers": "public", "return": "int", "signature": "int getTagColor(String uuid)", "full_signature": "public int getTagColor(String uuid)", "class_method_signature": "FormController.getTagColor(String uuid)", "testcase": false, "constructor": false}, {"identifier": "resetTagColors", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void resetTagColors()", "full_signature": "public void resetTagColors()", "class_method_signature": "FormController.resetTagColors()", "testcase": false, "constructor": false}, {"identifier": "getSelectedTags", "parameters": "()", "modifiers": "public", "return": "List<Tag>", "signature": "List<Tag> getSelectedTags()", "full_signature": "public List<Tag> getSelectedTags()", "class_method_signature": "FormController.getSelectedTags()", "testcase": false, "constructor": false}, {"identifier": "setSelectedTags", "parameters": "(List<Tag> selectedTags)", "modifiers": "public", "return": "void", "signature": "void setSelectedTags(List<Tag> selectedTags)", "full_signature": "public void setSelectedTags(List<Tag> selectedTags)", "class_method_signature": "FormController.setSelectedTags(List<Tag> selectedTags)", "testcase": false, "constructor": false}, {"identifier": "getFormDataByUuid", "parameters": "(String formDataUuid)", "modifiers": "public", "return": "FormData", "signature": "FormData getFormDataByUuid(String formDataUuid)", "full_signature": "public FormData getFormDataByUuid(String formDataUuid)", "class_method_signature": "FormController.getFormDataByUuid(String formDataUuid)", "testcase": false, "constructor": false}, {"identifier": "getFormDataByUuids", "parameters": "(List<String> formDataUuids)", "modifiers": "public", "return": "List<FormData>", "signature": "List<FormData> getFormDataByUuids(List<String> formDataUuids)", "full_signature": "public List<FormData> getFormDataByUuids(List<String> formDataUuids)", "class_method_signature": "FormController.getFormDataByUuids(List<String> formDataUuids)", "testcase": false, "constructor": false}, {"identifier": "getCompleteFormDataByUuid", "parameters": "(String formDataUuid)", "modifiers": "public", "return": "CompleteFormWithPatientData", "signature": "CompleteFormWithPatientData getCompleteFormDataByUuid(String formDataUuid)", "full_signature": "public CompleteFormWithPatientData getCompleteFormDataByUuid(String formDataUuid)", "class_method_signature": "FormController.getCompleteFormDataByUuid(String formDataUuid)", "testcase": false, "constructor": false}, {"identifier": "saveFormData", "parameters": "(FormData formData)", "modifiers": "public", "return": "void", "signature": "void saveFormData(FormData formData)", "full_signature": "public void saveFormData(FormData formData)", "class_method_signature": "FormController.saveFormData(FormData formData)", "testcase": false, "constructor": false}, {"identifier": "getAllFormData", "parameters": "(String status)", "modifiers": "public", "return": "List<FormData>", "signature": "List<FormData> getAllFormData(String status)", "full_signature": "public List<FormData> getAllFormData(String status)", "class_method_signature": "FormController.getAllFormData(String status)", "testcase": false, "constructor": false}, {"identifier": "getAllFormDataByPatientUuid", "parameters": "(String patientUuid, String status)", "modifiers": "public", "return": "List<FormData>", "signature": "List<FormData> getAllFormDataByPatientUuid(String patientUuid, String status)", "full_signature": "public List<FormData> getAllFormDataByPatientUuid(String patientUuid, String status)", "class_method_signature": "FormController.getAllFormDataByPatientUuid(String patientUuid, String status)", "testcase": false, "constructor": false}, {"identifier": "countAllFormDataByPatientUuid", "parameters": "(String patientUuid, String status)", "modifiers": "private", "return": "int", "signature": "int countAllFormDataByPatientUuid(String patientUuid, String status)", "full_signature": "private int countAllFormDataByPatientUuid(String patientUuid, String status)", "class_method_signature": "FormController.countAllFormDataByPatientUuid(String patientUuid, String status)", "testcase": false, "constructor": false}, {"identifier": "getAllIncompleteFormsWithPatientData", "parameters": "()", "modifiers": "public", "return": "IncompleteFormsWithPatientData", "signature": "IncompleteFormsWithPatientData getAllIncompleteFormsWithPatientData()", "full_signature": "public IncompleteFormsWithPatientData getAllIncompleteFormsWithPatientData()", "class_method_signature": "FormController.getAllIncompleteFormsWithPatientData()", "testcase": false, "constructor": false}, {"identifier": "getAllCompleteFormsWithPatientData", "parameters": "(Context context)", "modifiers": "public", "return": "CompleteFormsWithPatientData", "signature": "CompleteFormsWithPatientData getAllCompleteFormsWithPatientData(Context context)", "full_signature": "public CompleteFormsWithPatientData getAllCompleteFormsWithPatientData(Context context)", "class_method_signature": "FormController.getAllCompleteFormsWithPatientData(Context context)", "testcase": false, "constructor": false}, {"identifier": "getAllIncompleteFormsForPatientUuid", "parameters": "(String patientUuid)", "modifiers": "public", "return": "IncompleteForms", "signature": "IncompleteForms getAllIncompleteFormsForPatientUuid(String patientUuid)", "full_signature": "public IncompleteForms getAllIncompleteFormsForPatientUuid(String patientUuid)", "class_method_signature": "FormController.getAllIncompleteFormsForPatientUuid(String patientUuid)", "testcase": false, "constructor": false}, {"identifier": "getAllCompleteFormsForPatientUuid", "parameters": "(String patientUuid)", "modifiers": "public", "return": "CompleteForms", "signature": "CompleteForms getAllCompleteFormsForPatientUuid(String patientUuid)", "full_signature": "public CompleteForms getAllCompleteFormsForPatientUuid(String patientUuid)", "class_method_signature": "FormController.getAllCompleteFormsForPatientUuid(String patientUuid)", "testcase": false, "constructor": false}, {"identifier": "countAllIncompleteForms", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int countAllIncompleteForms()", "full_signature": "public int countAllIncompleteForms()", "class_method_signature": "FormController.countAllIncompleteForms()", "testcase": false, "constructor": false}, {"identifier": "countAllCompleteForms", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int countAllCompleteForms()", "full_signature": "public int countAllCompleteForms()", "class_method_signature": "FormController.countAllCompleteForms()", "testcase": false, "constructor": false}, {"identifier": "getCompleteFormsCountForPatient", "parameters": "(String patientId)", "modifiers": "public", "return": "int", "signature": "int getCompleteFormsCountForPatient(String patientId)", "full_signature": "public int getCompleteFormsCountForPatient(String patientId)", "class_method_signature": "FormController.getCompleteFormsCountForPatient(String patientId)", "testcase": false, "constructor": false}, {"identifier": "getIncompleteFormsCountForPatient", "parameters": "(String patientId)", "modifiers": "public", "return": "int", "signature": "int getIncompleteFormsCountForPatient(String patientId)", "full_signature": "public int getIncompleteFormsCountForPatient(String patientId)", "class_method_signature": "FormController.getIncompleteFormsCountForPatient(String patientId)", "testcase": false, "constructor": false}, {"identifier": "getDownloadedRegistrationForms", "parameters": "()", "modifiers": "public", "return": "AvailableForms", "signature": "AvailableForms getDownloadedRegistrationForms()", "full_signature": "public AvailableForms getDownloadedRegistrationForms()", "class_method_signature": "FormController.getDownloadedRegistrationForms()", "testcase": false, "constructor": false}, {"identifier": "createNewPatient", "parameters": "(MuzimaApplication muzimaApplication, FormData formData)", "modifiers": "public", "return": "Patient", "signature": "Patient createNewPatient(MuzimaApplication muzimaApplication, FormData formData)", "full_signature": "public Patient createNewPatient(MuzimaApplication muzimaApplication, FormData formData)", "class_method_signature": "FormController.createNewPatient(MuzimaApplication muzimaApplication, FormData formData)", "testcase": false, "constructor": false}, {"identifier": "uploadAllCompletedForms", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean uploadAllCompletedForms()", "full_signature": "public boolean uploadAllCompletedForms()", "class_method_signature": "FormController.uploadAllCompletedForms()", "testcase": false, "constructor": false}, {"identifier": "getRecommendedForms", "parameters": "()", "modifiers": "public", "return": "AvailableForms", "signature": "AvailableForms getRecommendedForms()", "full_signature": "public AvailableForms getRecommendedForms()", "class_method_signature": "FormController.getRecommendedForms()", "testcase": false, "constructor": false}, {"identifier": "getProviderReports", "parameters": "()", "modifiers": "public", "return": "AvailableForms", "signature": "AvailableForms getProviderReports()", "full_signature": "public AvailableForms getProviderReports()", "class_method_signature": "FormController.getProviderReports()", "testcase": false, "constructor": false}, {"identifier": "getRecommendedFormsCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRecommendedFormsCount()", "full_signature": "public int getRecommendedFormsCount()", "class_method_signature": "FormController.getRecommendedFormsCount()", "testcase": false, "constructor": false}, {"identifier": "isRegistrationTag", "parameters": "(Tag formTag)", "modifiers": "private", "return": "boolean", "signature": "boolean isRegistrationTag(Tag formTag)", "full_signature": "private boolean isRegistrationTag(Tag formTag)", "class_method_signature": "FormController.isRegistrationTag(Tag formTag)", "testcase": false, "constructor": false}, {"identifier": "deleteCompleteAndIncompleteEncounterFormData", "parameters": "(List<String> formDataUuids)", "modifiers": "public", "return": "void", "signature": "void deleteCompleteAndIncompleteEncounterFormData(List<String> formDataUuids)", "full_signature": "public void deleteCompleteAndIncompleteEncounterFormData(List<String> formDataUuids)", "class_method_signature": "FormController.deleteCompleteAndIncompleteEncounterFormData(List<String> formDataUuids)", "testcase": false, "constructor": false}, {"identifier": "getNonUploadedFormData", "parameters": "(String templateUUID)", "modifiers": "public", "return": "List<FormData>", "signature": "List<FormData> getNonUploadedFormData(String templateUUID)", "full_signature": "public List<FormData> getNonUploadedFormData(String templateUUID)", "class_method_signature": "FormController.getNonUploadedFormData(String templateUUID)", "testcase": false, "constructor": false}, {"identifier": "getFormsWithDiscriminator", "parameters": "(List<FormData> allFormData, String discriminator)", "modifiers": "private", "return": "List<FormData>", "signature": "List<FormData> getFormsWithDiscriminator(List<FormData> allFormData, String discriminator)", "full_signature": "private List<FormData> getFormsWithDiscriminator(List<FormData> allFormData, String discriminator)", "class_method_signature": "FormController.getFormsWithDiscriminator(List<FormData> allFormData, String discriminator)", "testcase": false, "constructor": false}, {"identifier": "uploadFormDataToServer", "parameters": "(List<FormData> allFormData, boolean result)", "modifiers": "", "return": "boolean", "signature": "boolean uploadFormDataToServer(List<FormData> allFormData, boolean result)", "full_signature": " boolean uploadFormDataToServer(List<FormData> allFormData, boolean result)", "class_method_signature": "FormController.uploadFormDataToServer(List<FormData> allFormData, boolean result)", "testcase": false, "constructor": false}, {"identifier": "markFormDataAsIncompleteAndDeleteRelatedEncountersAndObs", "parameters": "(final FormData formData)", "modifiers": "public", "return": "void", "signature": "void markFormDataAsIncompleteAndDeleteRelatedEncountersAndObs(final FormData formData)", "full_signature": "public void markFormDataAsIncompleteAndDeleteRelatedEncountersAndObs(final FormData formData)", "class_method_signature": "FormController.markFormDataAsIncompleteAndDeleteRelatedEncountersAndObs(final FormData formData)", "testcase": false, "constructor": false}, {"identifier": "deleteFormDataAndRelatedEncountersAndObs", "parameters": "(List<FormData> formData)", "modifiers": "public", "return": "void", "signature": "void deleteFormDataAndRelatedEncountersAndObs(List<FormData> formData)", "full_signature": "public void deleteFormDataAndRelatedEncountersAndObs(List<FormData> formData)", "class_method_signature": "FormController.deleteFormDataAndRelatedEncountersAndObs(List<FormData> formData)", "testcase": false, "constructor": false}, {"identifier": "getArchivedFormData", "parameters": "()", "modifiers": "public", "return": "List<FormData>", "signature": "List<FormData> getArchivedFormData()", "full_signature": "public List<FormData> getArchivedFormData()", "class_method_signature": "FormController.getArchivedFormData()", "testcase": false, "constructor": false}, {"identifier": "downloadFormDataStatus", "parameters": "(FormData formData)", "modifiers": "public", "return": "FormDataStatus", "signature": "FormDataStatus downloadFormDataStatus(FormData formData)", "full_signature": "public FormDataStatus downloadFormDataStatus(FormData formData)", "class_method_signature": "FormController.downloadFormDataStatus(FormData formData)", "testcase": false, "constructor": false}, {"identifier": "injectUuidToPayload", "parameters": "(FormData formData)", "modifiers": "private static", "return": "FormData", "signature": "FormData injectUuidToPayload(FormData formData)", "full_signature": "private static FormData injectUuidToPayload(FormData formData)", "class_method_signature": "FormController.injectUuidToPayload(FormData formData)", "testcase": false, "constructor": false}, {"identifier": "traverseJson", "parameters": "(JSONObject json)", "modifiers": "private", "return": "void", "signature": "void traverseJson(JSONObject json)", "full_signature": "private void traverseJson(JSONObject json)", "class_method_signature": "FormController.traverseJson(JSONObject json)", "testcase": false, "constructor": false}, {"identifier": "replaceMediaPathWithMedia", "parameters": "(String key, String value)", "modifiers": "private", "return": "void", "signature": "void replaceMediaPathWithMedia(String key, String value)", "full_signature": "private void replaceMediaPathWithMedia(String key, String value)", "class_method_signature": "FormController.replaceMediaPathWithMedia(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "replaceMediaPathWithBase64String", "parameters": "(FormData formData)", "modifiers": "private", "return": "FormData", "signature": "FormData replaceMediaPathWithBase64String(FormData formData)", "full_signature": "private FormData replaceMediaPathWithBase64String(FormData formData)", "class_method_signature": "FormController.replaceMediaPathWithBase64String(FormData formData)", "testcase": false, "constructor": false}, {"identifier": "getStringMedia", "parameters": "(String mediaUri)", "modifiers": "private static", "return": "String", "signature": "String getStringMedia(String mediaUri)", "full_signature": "private static String getStringMedia(String mediaUri)", "class_method_signature": "FormController.getStringMedia(String mediaUri)", "testcase": false, "constructor": false}, {"identifier": "isFormAlreadyExist", "parameters": "(String jsonPayload, FormData formData)", "modifiers": "public", "return": "boolean", "signature": "boolean isFormAlreadyExist(String jsonPayload, FormData formData)", "full_signature": "public boolean isFormAlreadyExist(String jsonPayload, FormData formData)", "class_method_signature": "FormController.isFormAlreadyExist(String jsonPayload, FormData formData)", "testcase": false, "constructor": false}, {"identifier": "isRegistrationFormDataWithEncounterForm", "parameters": "(String formUuid)", "modifiers": "public", "return": "boolean", "signature": "boolean isRegistrationFormDataWithEncounterForm(String formUuid)", "full_signature": "public boolean isRegistrationFormDataWithEncounterForm(String formUuid)", "class_method_signature": "FormController.isRegistrationFormDataWithEncounterForm(String formUuid)", "testcase": false, "constructor": false}, {"identifier": "hasEncounterForm", "parameters": "(FormData registrationFormData)", "modifiers": "private", "return": "boolean", "signature": "boolean hasEncounterForm(FormData registrationFormData)", "full_signature": "private boolean hasEncounterForm(FormData registrationFormData)", "class_method_signature": "FormController.hasEncounterForm(FormData registrationFormData)", "testcase": false, "constructor": false}, {"identifier": "isRegistrationFormData", "parameters": "(FormData formData)", "modifiers": "public", "return": "boolean", "signature": "boolean isRegistrationFormData(FormData formData)", "full_signature": "public boolean isRegistrationFormData(FormData formData)", "class_method_signature": "FormController.isRegistrationFormData(FormData formData)", "testcase": false, "constructor": false}, {"identifier": "isGenericRegistrationHTMLFormData", "parameters": "(FormData formData)", "modifiers": "public", "return": "boolean", "signature": "boolean isGenericRegistrationHTMLFormData(FormData formData)", "full_signature": "public boolean isGenericRegistrationHTMLFormData(FormData formData)", "class_method_signature": "FormController.isGenericRegistrationHTMLFormData(FormData formData)", "testcase": false, "constructor": false}, {"identifier": "isRegistrationHTMLFormData", "parameters": "(FormData formData)", "modifiers": "private", "return": "boolean", "signature": "boolean isRegistrationHTMLFormData(FormData formData)", "full_signature": "private boolean isRegistrationHTMLFormData(FormData formData)", "class_method_signature": "FormController.isRegistrationHTMLFormData(FormData formData)", "testcase": false, "constructor": false}, {"identifier": "isRegistrationXMLFormData", "parameters": "(FormData formData)", "modifiers": "private", "return": "boolean", "signature": "boolean isRegistrationXMLFormData(FormData formData)", "full_signature": "private boolean isRegistrationXMLFormData(FormData formData)", "class_method_signature": "FormController.isRegistrationXMLFormData(FormData formData)", "testcase": false, "constructor": false}, {"identifier": "isEncounterFormData", "parameters": "(FormData formData)", "modifiers": "public", "return": "boolean", "signature": "boolean isEncounterFormData(FormData formData)", "full_signature": "public boolean isEncounterFormData(FormData formData)", "class_method_signature": "FormController.isEncounterFormData(FormData formData)", "testcase": false, "constructor": false}, {"identifier": "isCompleteFormData", "parameters": "(FormData formData)", "modifiers": "private", "return": "boolean", "signature": "boolean isCompleteFormData(FormData formData)", "full_signature": "private boolean isCompleteFormData(FormData formData)", "class_method_signature": "FormController.isCompleteFormData(FormData formData)", "testcase": false, "constructor": false}, {"identifier": "isArchivedFormData", "parameters": "(FormData formData)", "modifiers": "private", "return": "boolean", "signature": "boolean isArchivedFormData(FormData formData)", "full_signature": "private boolean isArchivedFormData(FormData formData)", "class_method_signature": "FormController.isArchivedFormData(FormData formData)", "testcase": false, "constructor": false}, {"identifier": "getFormDataGroupedByPatient", "parameters": "(List<String> uuids)", "modifiers": "public", "return": "Map<String, List<FormData>>", "signature": "Map<String, List<FormData>> getFormDataGroupedByPatient(List<String> uuids)", "full_signature": "public Map<String, List<FormData>> getFormDataGroupedByPatient(List<String> uuids)", "class_method_signature": "FormController.getFormDataGroupedByPatient(List<String> uuids)", "testcase": false, "constructor": false}, {"identifier": "deleteFormDataWithNoRelatedCompleteRegistrationFormDataInGroup", "parameters": "(\n            Map<String, List<FormData>> groupedFormData)", "modifiers": "public", "return": "Map<String, List<FormData>>", "signature": "Map<String, List<FormData>> deleteFormDataWithNoRelatedCompleteRegistrationFormDataInGroup(\n            Map<String, List<FormData>> groupedFormData)", "full_signature": "public Map<String, List<FormData>> deleteFormDataWithNoRelatedCompleteRegistrationFormDataInGroup(\n            Map<String, List<FormData>> groupedFormData)", "class_method_signature": "FormController.deleteFormDataWithNoRelatedCompleteRegistrationFormDataInGroup(\n            Map<String, List<FormData>> groupedFormData)", "testcase": false, "constructor": false}, {"identifier": "deleteEncounterFormDataAndRelatedPatientData", "parameters": "(List<FormData> formDataList)", "modifiers": "private", "return": "void", "signature": "void deleteEncounterFormDataAndRelatedPatientData(List<FormData> formDataList)", "full_signature": "private void deleteEncounterFormDataAndRelatedPatientData(List<FormData> formDataList)", "class_method_signature": "FormController.deleteEncounterFormDataAndRelatedPatientData(List<FormData> formDataList)", "testcase": false, "constructor": false}, {"identifier": "deletePatientDataRelatedToFormData", "parameters": "(List<FormData> formDataList)", "modifiers": "private", "return": "void", "signature": "void deletePatientDataRelatedToFormData(List<FormData> formDataList)", "full_signature": "private void deletePatientDataRelatedToFormData(List<FormData> formDataList)", "class_method_signature": "FormController.deletePatientDataRelatedToFormData(List<FormData> formDataList)", "testcase": false, "constructor": false}, {"identifier": "deleteRegistrationFormDataWithAllRelatedEncountersInGroup", "parameters": "(Map<String, List<FormData>> groupedFormData)", "modifiers": "public", "return": "Map<String, List<FormData>>", "signature": "Map<String, List<FormData>> deleteRegistrationFormDataWithAllRelatedEncountersInGroup(Map<String, List<FormData>> groupedFormData)", "full_signature": "public Map<String, List<FormData>> deleteRegistrationFormDataWithAllRelatedEncountersInGroup(Map<String, List<FormData>> groupedFormData)", "class_method_signature": "FormController.deleteRegistrationFormDataWithAllRelatedEncountersInGroup(Map<String, List<FormData>> groupedFormData)", "testcase": false, "constructor": false}, {"identifier": "getAvailableFormByTagsSortedByConfigOrder", "parameters": "(List<String> tagsUuid, boolean alwaysIncludeRegistrationForms)", "modifiers": "public", "return": "AvailableForms", "signature": "AvailableForms getAvailableFormByTagsSortedByConfigOrder(List<String> tagsUuid, boolean alwaysIncludeRegistrationForms)", "full_signature": "public AvailableForms getAvailableFormByTagsSortedByConfigOrder(List<String> tagsUuid, boolean alwaysIncludeRegistrationForms)", "class_method_signature": "FormController.getAvailableFormByTagsSortedByConfigOrder(List<String> tagsUuid, boolean alwaysIncludeRegistrationForms)", "testcase": false, "constructor": false}, {"identifier": "getDownloadedRelationshipForms", "parameters": "()", "modifiers": "public", "return": "AvailableForms", "signature": "AvailableForms getDownloadedRelationshipForms()", "full_signature": "public AvailableForms getDownloadedRelationshipForms()", "class_method_signature": "FormController.getDownloadedRelationshipForms()", "testcase": false, "constructor": false}, {"identifier": "getAvailableFormByFormUuid", "parameters": "(String uuid)", "modifiers": "public", "return": "AvailableForm", "signature": "AvailableForm getAvailableFormByFormUuid(String uuid)", "full_signature": "public AvailableForm getAvailableFormByFormUuid(String uuid)", "class_method_signature": "FormController.getAvailableFormByFormUuid(String uuid)", "testcase": false, "constructor": false}, {"identifier": "getFormListAsPerConfigOrder", "parameters": "()", "modifiers": "public", "return": "ArrayList<String>", "signature": "ArrayList<String> getFormListAsPerConfigOrder()", "full_signature": "public ArrayList<String> getFormListAsPerConfigOrder()", "class_method_signature": "FormController.getFormListAsPerConfigOrder()", "testcase": false, "constructor": false}, {"identifier": "getAvailableFormsPerConfigOrder", "parameters": "(ArrayList<String> formUuids, List<Form> filteredForms)", "modifiers": "public", "return": "AvailableForms", "signature": "AvailableForms getAvailableFormsPerConfigOrder(ArrayList<String> formUuids, List<Form> filteredForms)", "full_signature": "public AvailableForms getAvailableFormsPerConfigOrder(ArrayList<String> formUuids, List<Form> filteredForms)", "class_method_signature": "FormController.getAvailableFormsPerConfigOrder(ArrayList<String> formUuids, List<Form> filteredForms)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/muzima/controller/FormController.java"}, "focal_method": {"identifier": "saveAllForms", "parameters": "(List<Form> forms)", "modifiers": "public", "return": "void", "body": "public void saveAllForms(List<Form> forms) throws FormSaveException {\n        try {\n            formService.saveForms(forms);\n        } catch (IOException e) {\n            throw new FormSaveException(e);\n        }\n    }", "signature": "void saveAllForms(List<Form> forms)", "full_signature": "public void saveAllForms(List<Form> forms)", "class_method_signature": "FormController.saveAllForms(List<Form> forms)", "testcase": false, "constructor": false, "invocations": ["saveForms"]}, "repository": {"repo_id": 10472733, "url": "https://github.com/muzima/muzima-android", "language": "Java", "is_fork": false, "fork_count": 39, "stargazer_count": 8, "size": 20746, "license": "licensed"}}