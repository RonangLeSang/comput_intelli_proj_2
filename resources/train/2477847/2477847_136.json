{"test_class": {"identifier": "HtmlSubsetDocumentBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n\tpublic", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "private StringWriter writer;", "modifier": "private", "type": "StringWriter", "declarator": "writer", "var_name": "writer"}, {"original_string": "private HtmlSubsetDocumentBuilder builder;", "modifier": "private", "type": "HtmlSubsetDocumentBuilder", "declarator": "builder", "var_name": "builder"}, {"original_string": "private HtmlDocumentBuilder delegate;", "modifier": "private", "type": "HtmlDocumentBuilder", "declarator": "delegate", "var_name": "delegate"}], "file": "wikitext/core/org.eclipse.mylyn.wikitext.html/src/test/java/org/eclipse/mylyn/wikitext/html/internal/HtmlSubsetDocumentBuilderTest.java"}, "test_case": {"identifier": "image", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void image() {\n\t\tbuilder.beginDocument();\n\t\tbuilder.image(new Attributes(), \"image.png\");\n\t\tbuilder.endDocument();\n\t\tassertContent(\"<img border=\\\"0\\\" src=\\\"image.png\\\"/>\");\n\t}", "signature": "void image()", "full_signature": "@Test public void image()", "class_method_signature": "HtmlSubsetDocumentBuilderTest.image()", "testcase": true, "constructor": false, "invocations": ["beginDocument", "image", "endDocument", "assertContent"]}, "focal_class": {"identifier": "HtmlSubsetDocumentBuilder", "superclass": "extends DocumentBuilder", "interfaces": "", "fields": [{"original_string": "private final HtmlDocumentBuilder delegate;", "modifier": "private final", "type": "HtmlDocumentBuilder", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private BlockStrategies blockStrategies;", "modifier": "private", "type": "BlockStrategies", "declarator": "blockStrategies", "var_name": "blockStrategies"}, {"original_string": "private SpanStrategies spanStrategies;", "modifier": "private", "type": "SpanStrategies", "declarator": "spanStrategies", "var_name": "spanStrategies"}, {"original_string": "private final Stack<BlockStrategy> blockStrategyState = new Stack<BlockStrategy>();", "modifier": "private final", "type": "Stack<BlockStrategy>", "declarator": "blockStrategyState = new Stack<BlockStrategy>()", "var_name": "blockStrategyState"}, {"original_string": "private final Stack<SpanStrategy> spanStrategyState = new Stack<SpanStrategy>();", "modifier": "private final", "type": "Stack<SpanStrategy>", "declarator": "spanStrategyState = new Stack<SpanStrategy>()", "var_name": "spanStrategyState"}, {"original_string": "private final Stack<Integer> headingState = new Stack<Integer>();", "modifier": "private final", "type": "Stack<Integer>", "declarator": "headingState = new Stack<Integer>()", "var_name": "headingState"}, {"original_string": "private int supportedHeadingLevel;", "modifier": "private", "type": "int", "declarator": "supportedHeadingLevel", "var_name": "supportedHeadingLevel"}, {"original_string": "private boolean implicitBlock;", "modifier": "private", "type": "boolean", "declarator": "implicitBlock", "var_name": "implicitBlock"}, {"original_string": "private BlockSeparator blockSeparator;", "modifier": "private", "type": "BlockSeparator", "declarator": "blockSeparator", "var_name": "blockSeparator"}], "methods": [{"identifier": "HtmlSubsetDocumentBuilder", "parameters": "(Writer out, boolean formatting)", "modifiers": "public", "return": "", "signature": " HtmlSubsetDocumentBuilder(Writer out, boolean formatting)", "full_signature": "public  HtmlSubsetDocumentBuilder(Writer out, boolean formatting)", "class_method_signature": "HtmlSubsetDocumentBuilder.HtmlSubsetDocumentBuilder(Writer out, boolean formatting)", "testcase": false, "constructor": true}, {"identifier": "HtmlSubsetDocumentBuilder", "parameters": "(HtmlDocumentBuilder delegate)", "modifiers": "", "return": "", "signature": " HtmlSubsetDocumentBuilder(HtmlDocumentBuilder delegate)", "full_signature": "  HtmlSubsetDocumentBuilder(HtmlDocumentBuilder delegate)", "class_method_signature": "HtmlSubsetDocumentBuilder.HtmlSubsetDocumentBuilder(HtmlDocumentBuilder delegate)", "testcase": false, "constructor": true}, {"identifier": "setSupportedBlockTypes", "parameters": "(Set<BlockType> blockTypes)", "modifiers": "", "return": "void", "signature": "void setSupportedBlockTypes(Set<BlockType> blockTypes)", "full_signature": " void setSupportedBlockTypes(Set<BlockType> blockTypes)", "class_method_signature": "HtmlSubsetDocumentBuilder.setSupportedBlockTypes(Set<BlockType> blockTypes)", "testcase": false, "constructor": false}, {"identifier": "setSupportedSpanTypes", "parameters": "(Set<SpanType> spanTypes, List<SpanHtmlElementStrategy> spanElementStrategies)", "modifiers": "", "return": "void", "signature": "void setSupportedSpanTypes(Set<SpanType> spanTypes, List<SpanHtmlElementStrategy> spanElementStrategies)", "full_signature": " void setSupportedSpanTypes(Set<SpanType> spanTypes, List<SpanHtmlElementStrategy> spanElementStrategies)", "class_method_signature": "HtmlSubsetDocumentBuilder.setSupportedSpanTypes(Set<SpanType> spanTypes, List<SpanHtmlElementStrategy> spanElementStrategies)", "testcase": false, "constructor": false}, {"identifier": "setElementNameOfSpanType", "parameters": "(SpanType spanType, String elementName)", "modifiers": "public", "return": "void", "signature": "void setElementNameOfSpanType(SpanType spanType, String elementName)", "full_signature": "public void setElementNameOfSpanType(SpanType spanType, String elementName)", "class_method_signature": "HtmlSubsetDocumentBuilder.setElementNameOfSpanType(SpanType spanType, String elementName)", "testcase": false, "constructor": false}, {"identifier": "setSupportedHeadingLevel", "parameters": "(int headingLevel)", "modifiers": "", "return": "void", "signature": "void setSupportedHeadingLevel(int headingLevel)", "full_signature": " void setSupportedHeadingLevel(int headingLevel)", "class_method_signature": "HtmlSubsetDocumentBuilder.setSupportedHeadingLevel(int headingLevel)", "testcase": false, "constructor": false}, {"identifier": "setDocumentHandler", "parameters": "(HtmlDocumentHandler documentHandler)", "modifiers": "", "return": "void", "signature": "void setDocumentHandler(HtmlDocumentHandler documentHandler)", "full_signature": " void setDocumentHandler(HtmlDocumentHandler documentHandler)", "class_method_signature": "HtmlSubsetDocumentBuilder.setDocumentHandler(HtmlDocumentHandler documentHandler)", "testcase": false, "constructor": false}, {"identifier": "beginDocument", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void beginDocument()", "full_signature": "@Override public void beginDocument()", "class_method_signature": "HtmlSubsetDocumentBuilder.beginDocument()", "testcase": false, "constructor": false}, {"identifier": "endDocument", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void endDocument()", "full_signature": "@Override public void endDocument()", "class_method_signature": "HtmlSubsetDocumentBuilder.endDocument()", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void flush()", "full_signature": "@Override public void flush()", "class_method_signature": "HtmlSubsetDocumentBuilder.flush()", "testcase": false, "constructor": false}, {"identifier": "beginBlock", "parameters": "(BlockType type, Attributes attributes)", "modifiers": "@Override public", "return": "void", "signature": "void beginBlock(BlockType type, Attributes attributes)", "full_signature": "@Override public void beginBlock(BlockType type, Attributes attributes)", "class_method_signature": "HtmlSubsetDocumentBuilder.beginBlock(BlockType type, Attributes attributes)", "testcase": false, "constructor": false}, {"identifier": "pushBlockStrategy", "parameters": "(BlockType type, Attributes attributes)", "modifiers": "", "return": "BlockStrategy", "signature": "BlockStrategy pushBlockStrategy(BlockType type, Attributes attributes)", "full_signature": " BlockStrategy pushBlockStrategy(BlockType type, Attributes attributes)", "class_method_signature": "HtmlSubsetDocumentBuilder.pushBlockStrategy(BlockType type, Attributes attributes)", "testcase": false, "constructor": false}, {"identifier": "endBlock", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void endBlock()", "full_signature": "@Override public void endBlock()", "class_method_signature": "HtmlSubsetDocumentBuilder.endBlock()", "testcase": false, "constructor": false}, {"identifier": "beginSpan", "parameters": "(SpanType type, Attributes attributes)", "modifiers": "@Override public", "return": "void", "signature": "void beginSpan(SpanType type, Attributes attributes)", "full_signature": "@Override public void beginSpan(SpanType type, Attributes attributes)", "class_method_signature": "HtmlSubsetDocumentBuilder.beginSpan(SpanType type, Attributes attributes)", "testcase": false, "constructor": false}, {"identifier": "pushSpanStrategy", "parameters": "(SpanType type, Attributes attributes)", "modifiers": "", "return": "SpanStrategy", "signature": "SpanStrategy pushSpanStrategy(SpanType type, Attributes attributes)", "full_signature": " SpanStrategy pushSpanStrategy(SpanType type, Attributes attributes)", "class_method_signature": "HtmlSubsetDocumentBuilder.pushSpanStrategy(SpanType type, Attributes attributes)", "testcase": false, "constructor": false}, {"identifier": "endSpan", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void endSpan()", "full_signature": "@Override public void endSpan()", "class_method_signature": "HtmlSubsetDocumentBuilder.endSpan()", "testcase": false, "constructor": false}, {"identifier": "beginHeading", "parameters": "(int level, Attributes attributes)", "modifiers": "@Override public", "return": "void", "signature": "void beginHeading(int level, Attributes attributes)", "full_signature": "@Override public void beginHeading(int level, Attributes attributes)", "class_method_signature": "HtmlSubsetDocumentBuilder.beginHeading(int level, Attributes attributes)", "testcase": false, "constructor": false}, {"identifier": "emitBlockSeparator", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void emitBlockSeparator()", "full_signature": "private void emitBlockSeparator()", "class_method_signature": "HtmlSubsetDocumentBuilder.emitBlockSeparator()", "testcase": false, "constructor": false}, {"identifier": "headingLevelSupported", "parameters": "(int level)", "modifiers": "", "return": "boolean", "signature": "boolean headingLevelSupported(int level)", "full_signature": " boolean headingLevelSupported(int level)", "class_method_signature": "HtmlSubsetDocumentBuilder.headingLevelSupported(int level)", "testcase": false, "constructor": false}, {"identifier": "endHeading", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void endHeading()", "full_signature": "@Override public void endHeading()", "class_method_signature": "HtmlSubsetDocumentBuilder.endHeading()", "testcase": false, "constructor": false}, {"identifier": "characters", "parameters": "(String text)", "modifiers": "@Override public", "return": "void", "signature": "void characters(String text)", "full_signature": "@Override public void characters(String text)", "class_method_signature": "HtmlSubsetDocumentBuilder.characters(String text)", "testcase": false, "constructor": false}, {"identifier": "entityReference", "parameters": "(String entity)", "modifiers": "@Override public", "return": "void", "signature": "void entityReference(String entity)", "full_signature": "@Override public void entityReference(String entity)", "class_method_signature": "HtmlSubsetDocumentBuilder.entityReference(String entity)", "testcase": false, "constructor": false}, {"identifier": "image", "parameters": "(Attributes attributes, String url)", "modifiers": "@Override public", "return": "void", "signature": "void image(Attributes attributes, String url)", "full_signature": "@Override public void image(Attributes attributes, String url)", "class_method_signature": "HtmlSubsetDocumentBuilder.image(Attributes attributes, String url)", "testcase": false, "constructor": false}, {"identifier": "link", "parameters": "(Attributes attributes, String hrefOrHashName, String text)", "modifiers": "@Override public", "return": "void", "signature": "void link(Attributes attributes, String hrefOrHashName, String text)", "full_signature": "@Override public void link(Attributes attributes, String hrefOrHashName, String text)", "class_method_signature": "HtmlSubsetDocumentBuilder.link(Attributes attributes, String hrefOrHashName, String text)", "testcase": false, "constructor": false}, {"identifier": "imageLink", "parameters": "(Attributes linkAttributes, Attributes imageAttributes, String href, String imageUrl)", "modifiers": "@Override public", "return": "void", "signature": "void imageLink(Attributes linkAttributes, Attributes imageAttributes, String href, String imageUrl)", "full_signature": "@Override public void imageLink(Attributes linkAttributes, Attributes imageAttributes, String href, String imageUrl)", "class_method_signature": "HtmlSubsetDocumentBuilder.imageLink(Attributes linkAttributes, Attributes imageAttributes, String href, String imageUrl)", "testcase": false, "constructor": false}, {"identifier": "acronym", "parameters": "(String text, String definition)", "modifiers": "@Override public", "return": "void", "signature": "void acronym(String text, String definition)", "full_signature": "@Override public void acronym(String text, String definition)", "class_method_signature": "HtmlSubsetDocumentBuilder.acronym(String text, String definition)", "testcase": false, "constructor": false}, {"identifier": "lineBreak", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void lineBreak()", "full_signature": "@Override public void lineBreak()", "class_method_signature": "HtmlSubsetDocumentBuilder.lineBreak()", "testcase": false, "constructor": false}, {"identifier": "charactersUnescaped", "parameters": "(String literal)", "modifiers": "@Override public", "return": "void", "signature": "void charactersUnescaped(String literal)", "full_signature": "@Override public void charactersUnescaped(String literal)", "class_method_signature": "HtmlSubsetDocumentBuilder.charactersUnescaped(String literal)", "testcase": false, "constructor": false}, {"identifier": "horizontalRule", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void horizontalRule()", "full_signature": "@Override public void horizontalRule()", "class_method_signature": "HtmlSubsetDocumentBuilder.horizontalRule()", "testcase": false, "constructor": false}, {"identifier": "setXhtmlStrict", "parameters": "(boolean xhtmlStrict)", "modifiers": "", "return": "void", "signature": "void setXhtmlStrict(boolean xhtmlStrict)", "full_signature": " void setXhtmlStrict(boolean xhtmlStrict)", "class_method_signature": "HtmlSubsetDocumentBuilder.setXhtmlStrict(boolean xhtmlStrict)", "testcase": false, "constructor": false}, {"identifier": "assertOpenBlock", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void assertOpenBlock()", "full_signature": "private void assertOpenBlock()", "class_method_signature": "HtmlSubsetDocumentBuilder.assertOpenBlock()", "testcase": false, "constructor": false}, {"identifier": "assertCloseImplicitBlock", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void assertCloseImplicitBlock()", "full_signature": "private void assertCloseImplicitBlock()", "class_method_signature": "HtmlSubsetDocumentBuilder.assertCloseImplicitBlock()", "testcase": false, "constructor": false}, {"identifier": "getDelegate", "parameters": "()", "modifiers": "", "return": "HtmlDocumentBuilder", "signature": "HtmlDocumentBuilder getDelegate()", "full_signature": " HtmlDocumentBuilder getDelegate()", "class_method_signature": "HtmlSubsetDocumentBuilder.getDelegate()", "testcase": false, "constructor": false}], "file": "wikitext/core/org.eclipse.mylyn.wikitext.html/src/main/java/org/eclipse/mylyn/wikitext/html/internal/HtmlSubsetDocumentBuilder.java"}, "focal_method": {"identifier": "image", "parameters": "(Attributes attributes, String url)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void image(Attributes attributes, String url) {\n\t\tassertOpenBlock();\n\t\tdelegate.image(attributes, url);\n\t}", "signature": "void image(Attributes attributes, String url)", "full_signature": "@Override public void image(Attributes attributes, String url)", "class_method_signature": "HtmlSubsetDocumentBuilder.image(Attributes attributes, String url)", "testcase": false, "constructor": false, "invocations": ["assertOpenBlock", "image"]}, "repository": {"repo_id": 2477847, "url": "https://github.com/turesheim/org.eclipse.mylyn.docs", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 30493, "license": "licensed"}}