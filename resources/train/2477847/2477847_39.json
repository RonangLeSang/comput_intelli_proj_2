{"test_class": {"identifier": "AutoLinkWithoutDemarcationSpanTest", "superclass": "extends AbstractSourceSpanTest", "interfaces": "", "fields": [], "file": "wikitext/core/org.eclipse.mylyn.wikitext.commonmark/src/test/java/org/eclipse/mylyn/wikitext/commonmark/internal/inlines/AutoLinkWithoutDemarcationSpanTest.java"}, "test_case": {"identifier": "createInline", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void createInline() {\n\t\tassertNoInline(createCursor(\"httpx://example.com sdf\"));\n\t\tassertNoInline(createCursor(\"http:/\"));\n\t\tassertLink(0, 28, \"http://example.com:8080/#see\", \"http://example.com:8080/#see\",\n\t\t\t\tcreateCursor(\"http://example.com:8080/#see one\"));\n\t\tassertLink(0, 23, \"https://example.com/foo\", \"https://example.com/foo\",\n\t\t\t\tcreateCursor(\"https://example.com/foo\\\\\"));\n\t\tassertLink(1, 23, \"https://example.com/foo\", \"https://example.com/foo\",\n\t\t\t\tcreateCursor(\"(https://example.com/foo)\", 1));\n\t}", "signature": "void createInline()", "full_signature": "@Test public void createInline()", "class_method_signature": "AutoLinkWithoutDemarcationSpanTest.createInline()", "testcase": true, "constructor": false, "invocations": ["assertNoInline", "createCursor", "assertNoInline", "createCursor", "assertLink", "createCursor", "assertLink", "createCursor", "assertLink", "createCursor"]}, "focal_class": {"identifier": "AutoLinkWithoutDemarcationSpan", "superclass": "extends SourceSpan", "interfaces": "", "fields": [{"original_string": "private final Pattern linkPattern = Pattern\n\t\t\t.compile(\"(https?://[a-zA-Z0-9%._~!$&?#'()*+,;:@/=-]*[a-zA-Z0-9_~!$&?#'(*+@/=-]).*\", Pattern.DOTALL);", "modifier": "private final", "type": "Pattern", "declarator": "linkPattern = Pattern\n\t\t\t.compile(\"(https?://[a-zA-Z0-9%._~!$&?#'()*+,;:@/=-]*[a-zA-Z0-9_~!$&?#'(*+@/=-]).*\", Pattern.DOTALL)", "var_name": "linkPattern"}], "methods": [{"identifier": "createInline", "parameters": "(Cursor cursor)", "modifiers": "@Override public", "return": "Optional<? extends Inline>", "signature": "Optional<? extends Inline> createInline(Cursor cursor)", "full_signature": "@Override public Optional<? extends Inline> createInline(Cursor cursor)", "class_method_signature": "AutoLinkWithoutDemarcationSpan.createInline(Cursor cursor)", "testcase": false, "constructor": false}, {"identifier": "escapeUri", "parameters": "(String link)", "modifiers": "private", "return": "String", "signature": "String escapeUri(String link)", "full_signature": "private String escapeUri(String link)", "class_method_signature": "AutoLinkWithoutDemarcationSpan.escapeUri(String link)", "testcase": false, "constructor": false}], "file": "wikitext/core/org.eclipse.mylyn.wikitext.commonmark/src/main/java/org/eclipse/mylyn/wikitext/commonmark/internal/inlines/AutoLinkWithoutDemarcationSpan.java"}, "focal_method": {"identifier": "createInline", "parameters": "(Cursor cursor)", "modifiers": "@Override public", "return": "Optional<? extends Inline>", "body": "@Override\n\tpublic Optional<? extends Inline> createInline(Cursor cursor) {\n\t\tif (cursor.getChar() == 'h') {\n\t\t\tMatcher matcher = cursor.matcher(linkPattern);\n\t\t\tif (matcher.matches()) {\n\t\t\t\tString href = matcher.group(1);\n\t\t\t\tString link = href;\n\n\t\t\t\tint endOffset = cursor.getOffset(matcher.end(1));\n\t\t\t\tint linkLength = endOffset - cursor.getOffset();\n\n\t\t\t\treturn Optional.of(new Link(cursor.getLineAtOffset(), cursor.getOffset(), linkLength, escapeUri(link),\n\t\t\t\t\t\tnull, ImmutableList.<Inline> of(\n\t\t\t\t\t\t\t\tnew Characters(cursor.getLineAtOffset(), cursor.getOffset(), linkLength, href))));\n\t\t\t}\n\t\t}\n\t\treturn Optional.absent();\n\t}", "signature": "Optional<? extends Inline> createInline(Cursor cursor)", "full_signature": "@Override public Optional<? extends Inline> createInline(Cursor cursor)", "class_method_signature": "AutoLinkWithoutDemarcationSpan.createInline(Cursor cursor)", "testcase": false, "constructor": false, "invocations": ["getChar", "matcher", "matches", "group", "getOffset", "end", "getOffset", "of", "getLineAtOffset", "getOffset", "escapeUri", "of", "getLineAtOffset", "getOffset", "absent"]}, "repository": {"repo_id": 2477847, "url": "https://github.com/turesheim/org.eclipse.mylyn.docs", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 30493, "license": "licensed"}}