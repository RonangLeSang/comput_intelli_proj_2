{"test_class": {"identifier": "ValidationByExceptionHandlerTest", "superclass": "", "interfaces": "", "fields": [], "file": "20150113-javaee-beanvalidator/src/test/java/com/damienfremont/blog/ValidationByExceptionHandlerTest.java"}, "test_case": {"identifier": "test_WHEN_valid_GIVEN_valid_model_THEN_ok_no_errors", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test_WHEN_valid_GIVEN_valid_model_THEN_ok_no_errors() {\n\n\t\t// GIVEN\n\n\t\tPersonModel person = new PersonModel( //\n\t\t\t\t\"Kim\", //\n\t\t\t\t\"Kardashian\", //\n\t\t\t\tnew GregorianCalendar(1980, Calendar.OCTOBER, 21));\n\t\tValidationByExceptionHandler validator = new ValidationByExceptionHandler();\n\n\t\t// WHEN\n\n\t\tvalidator.validate(person);\n\n\t\t// THEN\n\t\t// nothing to do\n\t}", "signature": "void test_WHEN_valid_GIVEN_valid_model_THEN_ok_no_errors()", "full_signature": "@Test public void test_WHEN_valid_GIVEN_valid_model_THEN_ok_no_errors()", "class_method_signature": "ValidationByExceptionHandlerTest.test_WHEN_valid_GIVEN_valid_model_THEN_ok_no_errors()", "testcase": true, "constructor": false, "invocations": ["validate"]}, "focal_class": {"identifier": "ValidationByExceptionHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "Validator jeeValidator = Validation.buildDefaultValidatorFactory()\n\t\t\t.getValidator();", "modifier": "", "type": "Validator", "declarator": "jeeValidator = Validation.buildDefaultValidatorFactory()\n\t\t\t.getValidator()", "var_name": "jeeValidator"}], "methods": [{"identifier": "validate", "parameters": "(T object)", "modifiers": "", "return": "void", "signature": "void validate(T object)", "full_signature": " void validate(T object)", "class_method_signature": "ValidationByExceptionHandler.validate(T object)", "testcase": false, "constructor": false}], "file": "20150113-javaee-beanvalidator/src/main/java/com/damienfremont/blog/ValidationByExceptionHandler.java"}, "focal_method": {"identifier": "validate", "parameters": "(T object)", "modifiers": "", "return": "void", "body": "<T> void validate(T object) {\n\t\tSet<ConstraintViolation<T>> errs = jeeValidator.validate(object);\n\t\tif (errs.size() > 0) { // error\n\t\t\tString msg = \"Invalid Bean, constraint error(s) : \";\n\t\t\tfor (ConstraintViolation<T> err : errs) {\n\t\t\t\tmsg += err.getPropertyPath() + \" \" + err.getMessage() + \". \";\n\t\t\t}\n\t\t\tthrow new IllegalArgumentException(msg);\n\t\t}\n\t}", "signature": "void validate(T object)", "full_signature": " void validate(T object)", "class_method_signature": "ValidationByExceptionHandler.validate(T object)", "testcase": false, "constructor": false, "invocations": ["validate", "size", "getPropertyPath", "getMessage"]}, "repository": {"repo_id": 9289335, "url": "https://github.com/DamienFremont/blog", "stars": 30, "created": "4/8/2013 5:37:48 AM +00:00", "updates": "2020-01-02T18:17:38+00:00", "fork": "False", "license": "licensed"}}