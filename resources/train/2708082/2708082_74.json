{"test_class": {"identifier": "ModelTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "final static int[] capacites = {0, 34};", "modifier": "final static", "type": "int[]", "declarator": "capacites = {0, 34}", "var_name": "capacites"}, {"original_string": "final static int[] energies = {6, 4, 3};", "modifier": "final static", "type": "int[]", "declarator": "energies = {6, 4, 3}", "var_name": "energies"}, {"original_string": "final static int[] volumes = {7, 5, 2};", "modifier": "final static", "type": "int[]", "declarator": "volumes = {7, 5, 2}", "var_name": "volumes"}, {"original_string": "final static int[] nbOmax = {4, 6, 17};", "modifier": "final static", "type": "int[]", "declarator": "nbOmax = {4, 6, 17}", "var_name": "nbOmax"}, {"original_string": "final static int n = 3;", "modifier": "final static", "type": "int", "declarator": "n = 3", "var_name": "n"}, {"original_string": "private static int modelInitNumber;", "modifier": "private static", "type": "int", "declarator": "modelInitNumber", "var_name": "modelInitNumber"}, {"original_string": "private static final int ONE = 0, NEXT = 1, ALL = 2, OPT = 3;", "modifier": "private static final", "type": "int", "declarator": "ONE = 0", "var_name": "ONE"}], "file": "solver/src/test/java/org/chocosolver/solver/ModelTest.java"}, "test_case": {"identifier": "testNextSolution", "parameters": "()", "modifiers": "@Test(groups = \"1s\", timeOut = 60000) public", "return": "void", "body": "@Test(groups = \"1s\", timeOut = 60000)\n    public void testNextSolution() {\n        Model s = ProblemMaker.makeNQueenWithBinaryConstraints(8);\n        s.getSolver().solve(); //  should not throw exception\n    }", "signature": "void testNextSolution()", "full_signature": "@Test(groups = \"1s\", timeOut = 60000) public void testNextSolution()", "class_method_signature": "ModelTest.testNextSolution()", "testcase": true, "constructor": false, "invocations": ["makeNQueenWithBinaryConstraints", "solve", "getSolver"]}, "focal_class": {"identifier": "Model", "superclass": "", "interfaces": "implements IModel", "fields": [{"original_string": "public static boolean MAXIMIZE = true;", "modifier": "public static", "type": "boolean", "declarator": "MAXIMIZE = true", "var_name": "MAXIMIZE"}, {"original_string": "public static boolean MINIMIZE = false;", "modifier": "public static", "type": "boolean", "declarator": "MINIMIZE = false", "var_name": "MINIMIZE"}, {"original_string": "public static final String TASK_SET_HOOK_NAME = \"H_TASKSET\";", "modifier": "public static final", "type": "String", "declarator": "TASK_SET_HOOK_NAME = \"H_TASKSET\"", "var_name": "TASK_SET_HOOK_NAME"}, {"original_string": "public static final String MINISAT_HOOK_NAME = \"H_MINISAT\";", "modifier": "public static final", "type": "String", "declarator": "MINISAT_HOOK_NAME = \"H_MINISAT\"", "var_name": "MINISAT_HOOK_NAME"}, {"original_string": "public static final String NOGOODS_HOOK_NAME = \"H_NOGOODS\";", "modifier": "public static final", "type": "String", "declarator": "NOGOODS_HOOK_NAME = \"H_NOGOODS\"", "var_name": "NOGOODS_HOOK_NAME"}, {"original_string": "public static final String CLAUSES_HOOK_NAME = \"H_CLAUSES\";", "modifier": "public static final", "type": "String", "declarator": "CLAUSES_HOOK_NAME = \"H_CLAUSES\"", "var_name": "CLAUSES_HOOK_NAME"}, {"original_string": "public static final String CLAUSESBUILDER_HOOK_NAME = \"H_CLAUSESBUILDER\";", "modifier": "public static final", "type": "String", "declarator": "CLAUSESBUILDER_HOOK_NAME = \"H_CLAUSESBUILDER\"", "var_name": "CLAUSESBUILDER_HOOK_NAME"}, {"original_string": "public static final String IBEX_HOOK_NAME = \"H_IBEX\";", "modifier": "public static final", "type": "String", "declarator": "IBEX_HOOK_NAME = \"H_IBEX\"", "var_name": "IBEX_HOOK_NAME"}, {"original_string": "private final Settings settings;", "modifier": "private final", "type": "Settings", "declarator": "settings", "var_name": "settings"}, {"original_string": "private TIntObjectHashMap<IntVar> cachedConstants;", "modifier": "private", "type": "TIntObjectHashMap<IntVar>", "declarator": "cachedConstants", "var_name": "cachedConstants"}, {"original_string": "private Variable[] vars;", "modifier": "private", "type": "Variable[]", "declarator": "vars", "var_name": "vars"}, {"original_string": "private int vIdx;", "modifier": "private", "type": "int", "declarator": "vIdx", "var_name": "vIdx"}, {"original_string": "private int nbIntVar;", "modifier": "private", "type": "int", "declarator": "nbIntVar", "var_name": "nbIntVar"}, {"original_string": "private int nbBoolVar;", "modifier": "private", "type": "int", "declarator": "nbBoolVar", "var_name": "nbBoolVar"}, {"original_string": "private int nbSetVar;", "modifier": "private", "type": "int", "declarator": "nbSetVar", "var_name": "nbSetVar"}, {"original_string": "private int nbRealVar;", "modifier": "private", "type": "int", "declarator": "nbRealVar", "var_name": "nbRealVar"}, {"original_string": "private Constraint[] cstrs;", "modifier": "private", "type": "Constraint[]", "declarator": "cstrs", "var_name": "cstrs"}, {"original_string": "private int cIdx;", "modifier": "private", "type": "int", "declarator": "cIdx", "var_name": "cIdx"}, {"original_string": "private final IEnvironment environment;", "modifier": "private final", "type": "IEnvironment", "declarator": "environment", "var_name": "environment"}, {"original_string": "private final Solver solver;", "modifier": "private final", "type": "Solver", "declarator": "solver", "var_name": "solver"}, {"original_string": "private Variable objective;", "modifier": "private", "type": "Variable", "declarator": "objective", "var_name": "objective"}, {"original_string": "private double precision = 0.0001D;", "modifier": "private", "type": "double", "declarator": "precision = 0.0001D", "var_name": "precision"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private long creationTime;", "modifier": "private", "type": "long", "declarator": "creationTime", "var_name": "creationTime"}, {"original_string": "private int id = 1;", "modifier": "private", "type": "int", "declarator": "id = 1", "var_name": "id"}, {"original_string": "private int nameId = 1;", "modifier": "private", "type": "int", "declarator": "nameId = 1", "var_name": "nameId"}, {"original_string": "private Map<String, Object> hooks;", "modifier": "private", "type": "Map<String, Object>", "declarator": "hooks", "var_name": "hooks"}, {"original_string": "private ResolutionPolicy policy = ResolutionPolicy.SATISFACTION;", "modifier": "private", "type": "ResolutionPolicy", "declarator": "policy = ResolutionPolicy.SATISFACTION", "var_name": "policy"}, {"original_string": "private long seed = 0L;", "modifier": "private", "type": "long", "declarator": "seed = 0L", "var_name": "seed"}, {"original_string": "private static int modelInitNumber;", "modifier": "private static", "type": "int", "declarator": "modelInitNumber", "var_name": "modelInitNumber"}], "methods": [{"identifier": "Model", "parameters": "(IEnvironment environment, String name, Settings settings)", "modifiers": "public", "return": "", "signature": " Model(IEnvironment environment, String name, Settings settings)", "full_signature": "public  Model(IEnvironment environment, String name, Settings settings)", "class_method_signature": "Model.Model(IEnvironment environment, String name, Settings settings)", "testcase": false, "constructor": true}, {"identifier": "Model", "parameters": "(IEnvironment environment, String name)", "modifiers": "public", "return": "", "signature": " Model(IEnvironment environment, String name)", "full_signature": "public  Model(IEnvironment environment, String name)", "class_method_signature": "Model.Model(IEnvironment environment, String name)", "testcase": false, "constructor": true}, {"identifier": "Model", "parameters": "(String name, Settings settings)", "modifiers": "public", "return": "", "signature": " Model(String name, Settings settings)", "full_signature": "public  Model(String name, Settings settings)", "class_method_signature": "Model.Model(String name, Settings settings)", "testcase": false, "constructor": true}, {"identifier": "Model", "parameters": "(String name)", "modifiers": "public", "return": "", "signature": " Model(String name)", "full_signature": "public  Model(String name)", "class_method_signature": "Model.Model(String name)", "testcase": false, "constructor": true}, {"identifier": "Model", "parameters": "(Settings settings)", "modifiers": "public", "return": "", "signature": " Model(Settings settings)", "full_signature": "public  Model(Settings settings)", "class_method_signature": "Model.Model(Settings settings)", "testcase": false, "constructor": true}, {"identifier": "Model", "parameters": "()", "modifiers": "public", "return": "", "signature": " Model()", "full_signature": "public  Model()", "class_method_signature": "Model.Model()", "testcase": false, "constructor": true}, {"identifier": "nextModelNum", "parameters": "()", "modifiers": "private static synchronized", "return": "int", "signature": "int nextModelNum()", "full_signature": "private static synchronized int nextModelNum()", "class_method_signature": "Model.nextModelNum()", "testcase": false, "constructor": false}, {"identifier": "getCreationTime", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getCreationTime()", "full_signature": "public long getCreationTime()", "class_method_signature": "Model.getCreationTime()", "testcase": false, "constructor": false}, {"identifier": "getResolutionPolicy", "parameters": "()", "modifiers": "public", "return": "ResolutionPolicy", "signature": "ResolutionPolicy getResolutionPolicy()", "full_signature": "public ResolutionPolicy getResolutionPolicy()", "class_method_signature": "Model.getResolutionPolicy()", "testcase": false, "constructor": false}, {"identifier": "getCachedConstants", "parameters": "()", "modifiers": "public", "return": "TIntObjectHashMap<IntVar>", "signature": "TIntObjectHashMap<IntVar> getCachedConstants()", "full_signature": "public TIntObjectHashMap<IntVar> getCachedConstants()", "class_method_signature": "Model.getCachedConstants()", "testcase": false, "constructor": false}, {"identifier": "trueConstraint", "parameters": "()", "modifiers": "public", "return": "Constraint", "signature": "Constraint trueConstraint()", "full_signature": "public Constraint trueConstraint()", "class_method_signature": "Model.trueConstraint()", "testcase": false, "constructor": false}, {"identifier": "falseConstraint", "parameters": "()", "modifiers": "public", "return": "Constraint", "signature": "Constraint falseConstraint()", "full_signature": "public Constraint falseConstraint()", "class_method_signature": "Model.falseConstraint()", "testcase": false, "constructor": false}, {"identifier": "getSolver", "parameters": "()", "modifiers": "public", "return": "Solver", "signature": "Solver getSolver()", "full_signature": "public Solver getSolver()", "class_method_signature": "Model.getSolver()", "testcase": false, "constructor": false}, {"identifier": "getVars", "parameters": "()", "modifiers": "public", "return": "Variable[]", "signature": "Variable[] getVars()", "full_signature": "public Variable[] getVars()", "class_method_signature": "Model.getVars()", "testcase": false, "constructor": false}, {"identifier": "getNbVars", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNbVars()", "full_signature": "public int getNbVars()", "class_method_signature": "Model.getNbVars()", "testcase": false, "constructor": false}, {"identifier": "getVar", "parameters": "(int i)", "modifiers": "public", "return": "Variable", "signature": "Variable getVar(int i)", "full_signature": "public Variable getVar(int i)", "class_method_signature": "Model.getVar(int i)", "testcase": false, "constructor": false}, {"identifier": "getNbIntVar", "parameters": "(boolean includeBoolVar)", "modifiers": "public", "return": "int", "signature": "int getNbIntVar(boolean includeBoolVar)", "full_signature": "public int getNbIntVar(boolean includeBoolVar)", "class_method_signature": "Model.getNbIntVar(boolean includeBoolVar)", "testcase": false, "constructor": false}, {"identifier": "retrieveIntVars", "parameters": "(boolean includeBoolVar)", "modifiers": "public", "return": "IntVar[]", "signature": "IntVar[] retrieveIntVars(boolean includeBoolVar)", "full_signature": "public IntVar[] retrieveIntVars(boolean includeBoolVar)", "class_method_signature": "Model.retrieveIntVars(boolean includeBoolVar)", "testcase": false, "constructor": false}, {"identifier": "getNbBoolVar", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNbBoolVar()", "full_signature": "public int getNbBoolVar()", "class_method_signature": "Model.getNbBoolVar()", "testcase": false, "constructor": false}, {"identifier": "retrieveBoolVars", "parameters": "()", "modifiers": "public", "return": "BoolVar[]", "signature": "BoolVar[] retrieveBoolVars()", "full_signature": "public BoolVar[] retrieveBoolVars()", "class_method_signature": "Model.retrieveBoolVars()", "testcase": false, "constructor": false}, {"identifier": "getNbSetVar", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNbSetVar()", "full_signature": "public int getNbSetVar()", "class_method_signature": "Model.getNbSetVar()", "testcase": false, "constructor": false}, {"identifier": "retrieveSetVars", "parameters": "()", "modifiers": "public", "return": "SetVar[]", "signature": "SetVar[] retrieveSetVars()", "full_signature": "public SetVar[] retrieveSetVars()", "class_method_signature": "Model.retrieveSetVars()", "testcase": false, "constructor": false}, {"identifier": "getNbRealVar", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNbRealVar()", "full_signature": "public int getNbRealVar()", "class_method_signature": "Model.getNbRealVar()", "testcase": false, "constructor": false}, {"identifier": "retrieveRealVars", "parameters": "()", "modifiers": "public", "return": "RealVar[]", "signature": "RealVar[] retrieveRealVars()", "full_signature": "public RealVar[] retrieveRealVars()", "class_method_signature": "Model.retrieveRealVars()", "testcase": false, "constructor": false}, {"identifier": "getCstrs", "parameters": "()", "modifiers": "public", "return": "Constraint[]", "signature": "Constraint[] getCstrs()", "full_signature": "public Constraint[] getCstrs()", "class_method_signature": "Model.getCstrs()", "testcase": false, "constructor": false}, {"identifier": "getNbCstrs", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNbCstrs()", "full_signature": "public int getNbCstrs()", "class_method_signature": "Model.getNbCstrs()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "Model.getName()", "testcase": false, "constructor": false}, {"identifier": "getEnvironment", "parameters": "()", "modifiers": "public", "return": "IEnvironment", "signature": "IEnvironment getEnvironment()", "full_signature": "public IEnvironment getEnvironment()", "class_method_signature": "Model.getEnvironment()", "testcase": false, "constructor": false}, {"identifier": "getObjective", "parameters": "()", "modifiers": "public", "return": "Variable", "signature": "Variable getObjective()", "full_signature": "public Variable getObjective()", "class_method_signature": "Model.getObjective()", "testcase": false, "constructor": false}, {"identifier": "getPrecision", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getPrecision()", "full_signature": "public double getPrecision()", "class_method_signature": "Model.getPrecision()", "testcase": false, "constructor": false}, {"identifier": "getHook", "parameters": "(String hookName)", "modifiers": "public", "return": "Object", "signature": "Object getHook(String hookName)", "full_signature": "public Object getHook(String hookName)", "class_method_signature": "Model.getHook(String hookName)", "testcase": false, "constructor": false}, {"identifier": "getHooks", "parameters": "()", "modifiers": "protected", "return": "Map<String, Object>", "signature": "Map<String, Object> getHooks()", "full_signature": "protected Map<String, Object> getHooks()", "class_method_signature": "Model.getHooks()", "testcase": false, "constructor": false}, {"identifier": "getMinisat", "parameters": "()", "modifiers": "public", "return": "SatConstraint", "signature": "SatConstraint getMinisat()", "full_signature": "public SatConstraint getMinisat()", "class_method_signature": "Model.getMinisat()", "testcase": false, "constructor": false}, {"identifier": "removeMinisat", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void removeMinisat()", "full_signature": "public void removeMinisat()", "class_method_signature": "Model.removeMinisat()", "testcase": false, "constructor": false}, {"identifier": "getNogoodStore", "parameters": "()", "modifiers": "public", "return": "NogoodConstraint", "signature": "NogoodConstraint getNogoodStore()", "full_signature": "public NogoodConstraint getNogoodStore()", "class_method_signature": "Model.getNogoodStore()", "testcase": false, "constructor": false}, {"identifier": "removeNogoodStore", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void removeNogoodStore()", "full_signature": "public void removeNogoodStore()", "class_method_signature": "Model.removeNogoodStore()", "testcase": false, "constructor": false}, {"identifier": "getClauseConstraint", "parameters": "()", "modifiers": "public", "return": "ClauseConstraint", "signature": "ClauseConstraint getClauseConstraint()", "full_signature": "public ClauseConstraint getClauseConstraint()", "class_method_signature": "Model.getClauseConstraint()", "testcase": false, "constructor": false}, {"identifier": "getClauseBuilder", "parameters": "()", "modifiers": "public", "return": "ClauseBuilder", "signature": "ClauseBuilder getClauseBuilder()", "full_signature": "public ClauseBuilder getClauseBuilder()", "class_method_signature": "Model.getClauseBuilder()", "testcase": false, "constructor": false}, {"identifier": "getIbexHandler", "parameters": "()", "modifiers": "public", "return": "IbexHandler", "signature": "IbexHandler getIbexHandler()", "full_signature": "public IbexHandler getIbexHandler()", "class_method_signature": "Model.getIbexHandler()", "testcase": false, "constructor": false}, {"identifier": "getSettings", "parameters": "()", "modifiers": "public", "return": "Settings", "signature": "Settings getSettings()", "full_signature": "public Settings getSettings()", "class_method_signature": "Model.getSettings()", "testcase": false, "constructor": false}, {"identifier": "setObjective", "parameters": "(boolean maximize, Variable objective)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "void", "signature": "void setObjective(boolean maximize, Variable objective)", "full_signature": "@SuppressWarnings(\"unchecked\") public void setObjective(boolean maximize, Variable objective)", "class_method_signature": "Model.setObjective(boolean maximize, Variable objective)", "testcase": false, "constructor": false}, {"identifier": "clearObjective", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearObjective()", "full_signature": "public void clearObjective()", "class_method_signature": "Model.clearObjective()", "testcase": false, "constructor": false}, {"identifier": "setPrecision", "parameters": "(double p)", "modifiers": "public", "return": "void", "signature": "void setPrecision(double p)", "full_signature": "public void setPrecision(double p)", "class_method_signature": "Model.setPrecision(double p)", "testcase": false, "constructor": false}, {"identifier": "setSeed", "parameters": "(long seed)", "modifiers": "public", "return": "void", "signature": "void setSeed(long seed)", "full_signature": "public void setSeed(long seed)", "class_method_signature": "Model.setSeed(long seed)", "testcase": false, "constructor": false}, {"identifier": "getSeed", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getSeed()", "full_signature": "public long getSeed()", "class_method_signature": "Model.getSeed()", "testcase": false, "constructor": false}, {"identifier": "addHook", "parameters": "(String hookName, Object hookObject)", "modifiers": "public", "return": "void", "signature": "void addHook(String hookName, Object hookObject)", "full_signature": "public void addHook(String hookName, Object hookObject)", "class_method_signature": "Model.addHook(String hookName, Object hookObject)", "testcase": false, "constructor": false}, {"identifier": "removeHook", "parameters": "(String hookName)", "modifiers": "public", "return": "void", "signature": "void removeHook(String hookName)", "full_signature": "public void removeHook(String hookName)", "class_method_signature": "Model.removeHook(String hookName)", "testcase": false, "constructor": false}, {"identifier": "removeAllHooks", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void removeAllHooks()", "full_signature": "public void removeAllHooks()", "class_method_signature": "Model.removeAllHooks()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void setName(String name)", "full_signature": "public void setName(String name)", "class_method_signature": "Model.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "associates", "parameters": "(Variable variable)", "modifiers": "public", "return": "void", "signature": "void associates(Variable variable)", "full_signature": "public void associates(Variable variable)", "class_method_signature": "Model.associates(Variable variable)", "testcase": false, "constructor": false}, {"identifier": "unassociates", "parameters": "(Variable variable)", "modifiers": "public", "return": "void", "signature": "void unassociates(Variable variable)", "full_signature": "public void unassociates(Variable variable)", "class_method_signature": "Model.unassociates(Variable variable)", "testcase": false, "constructor": false}, {"identifier": "nextId", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int nextId()", "full_signature": "public int nextId()", "class_method_signature": "Model.nextId()", "testcase": false, "constructor": false}, {"identifier": "nextNameId", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int nextNameId()", "full_signature": "public int nextNameId()", "class_method_signature": "Model.nextNameId()", "testcase": false, "constructor": false}, {"identifier": "post", "parameters": "(Constraint... cs)", "modifiers": "public", "return": "void", "signature": "void post(Constraint... cs)", "full_signature": "public void post(Constraint... cs)", "class_method_signature": "Model.post(Constraint... cs)", "testcase": false, "constructor": false}, {"identifier": "_post", "parameters": "(boolean permanent, Constraint... cs)", "modifiers": "private", "return": "void", "signature": "void _post(boolean permanent, Constraint... cs)", "full_signature": "private void _post(boolean permanent, Constraint... cs)", "class_method_signature": "Model._post(boolean permanent, Constraint... cs)", "testcase": false, "constructor": false}, {"identifier": "postTemp", "parameters": "(Constraint... cs)", "modifiers": "public", "return": "void", "signature": "void postTemp(Constraint... cs)", "full_signature": "public void postTemp(Constraint... cs)", "class_method_signature": "Model.postTemp(Constraint... cs)", "testcase": false, "constructor": false}, {"identifier": "unpost", "parameters": "(Constraint... constraints)", "modifiers": "public", "return": "void", "signature": "void unpost(Constraint... constraints)", "full_signature": "public void unpost(Constraint... constraints)", "class_method_signature": "Model.unpost(Constraint... constraints)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Model.toString()", "testcase": false, "constructor": false}, {"identifier": "ref", "parameters": "()", "modifiers": "@Override public", "return": "Model", "signature": "Model ref()", "full_signature": "@Override public Model ref()", "class_method_signature": "Model.ref()", "testcase": false, "constructor": false}], "file": "solver/src/main/java/org/chocosolver/solver/Model.java"}, "focal_method": {"identifier": "getSolver", "parameters": "()", "modifiers": "public", "return": "Solver", "body": "public Solver getSolver() {\n        return solver;\n    }", "signature": "Solver getSolver()", "full_signature": "public Solver getSolver()", "class_method_signature": "Model.getSolver()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2708082, "url": "https://github.com/chocoteam/choco-solver", "stars": 448, "created": "11/4/2011 9:09:18 AM +00:00", "updates": "2020-01-22T12:32:22+00:00", "fork": "False", "license": "licensed"}}