{"test_class": {"identifier": "UserDaoJDBCTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Logger logger = Logger.getLogger(UserDaoJDBCTest.class);", "modifier": "private", "type": "Logger", "declarator": "logger = Logger.getLogger(UserDaoJDBCTest.class)", "var_name": "logger"}, {"original_string": "@Autowired\n\tDataSource dataSource;", "modifier": "@Autowired", "type": "DataSource", "declarator": "dataSource", "var_name": "dataSource"}, {"original_string": "@Autowired\n\tUserDao userDao;", "modifier": "@Autowired", "type": "UserDao", "declarator": "userDao", "var_name": "userDao"}], "file": "Spring-Data-JDBC/src/test/java/li3huo/spring/data/dao/UserDaoJDBCTest.java"}, "test_case": {"identifier": "testGetUsers", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetUsers() {\n\t\tList<User> users = userDao.getUsers();\n\t\tassertSame(users.size(), userDao.getUserCount());\n\t}", "signature": "void testGetUsers()", "full_signature": "@Test public void testGetUsers()", "class_method_signature": "UserDaoJDBCTest.testGetUsers()", "testcase": true, "constructor": false, "invocations": ["getUsers", "assertSame", "size", "getUserCount"]}, "focal_class": {"identifier": "UserDaoJDBC", "superclass": "", "interfaces": "implements UserDao", "fields": [{"original_string": "private static int count = 0;", "modifier": "private static", "type": "int", "declarator": "count = 0", "var_name": "count"}, {"original_string": "private JdbcTemplate jdbcTemplate;", "modifier": "private", "type": "JdbcTemplate", "declarator": "jdbcTemplate", "var_name": "jdbcTemplate"}], "methods": [{"identifier": "UserDaoJDBC", "parameters": "(DataSource datasource)", "modifiers": "@Autowired public", "return": "", "signature": " UserDaoJDBC(DataSource datasource)", "full_signature": "@Autowired public  UserDaoJDBC(DataSource datasource)", "class_method_signature": "UserDaoJDBC.UserDaoJDBC(DataSource datasource)", "testcase": false, "constructor": true}, {"identifier": "userMapper", "parameters": "()", "modifiers": "", "return": "RowMapper<User>", "signature": "RowMapper<User> userMapper()", "full_signature": " RowMapper<User> userMapper()", "class_method_signature": "UserDaoJDBC.userMapper()", "testcase": false, "constructor": false}, {"identifier": "getUserCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getUserCount()", "full_signature": "@Override public int getUserCount()", "class_method_signature": "UserDaoJDBC.getUserCount()", "testcase": false, "constructor": false}, {"identifier": "getUserbyID", "parameters": "(int id)", "modifiers": "@Override public", "return": "User", "signature": "User getUserbyID(int id)", "full_signature": "@Override public User getUserbyID(int id)", "class_method_signature": "UserDaoJDBC.getUserbyID(int id)", "testcase": false, "constructor": false}, {"identifier": "getUsers", "parameters": "()", "modifiers": "@Override public", "return": "List<User>", "signature": "List<User> getUsers()", "full_signature": "@Override public List<User> getUsers()", "class_method_signature": "UserDaoJDBC.getUsers()", "testcase": false, "constructor": false}, {"identifier": "addUser", "parameters": "(final User user)", "modifiers": "@Override public", "return": "User", "signature": "User addUser(final User user)", "full_signature": "@Override public User addUser(final User user)", "class_method_signature": "UserDaoJDBC.addUser(final User user)", "testcase": false, "constructor": false}, {"identifier": "updateUser", "parameters": "(User user)", "modifiers": "@Override public", "return": "int", "signature": "int updateUser(User user)", "full_signature": "@Override public int updateUser(User user)", "class_method_signature": "UserDaoJDBC.updateUser(User user)", "testcase": false, "constructor": false}], "file": "Spring-Data-JDBC/src/main/java/li3huo/spring/data/dao/UserDaoJDBC.java"}, "focal_method": {"identifier": "getUsers", "parameters": "()", "modifiers": "@Override public", "return": "List<User>", "body": "@Override\n\tpublic List<User> getUsers() {\n\t\treturn this.jdbcTemplate.query(\n\t\t\t\t\"select user_id, imei, imsi, phone_name from t_user\",\n\t\t\t\tuserMapper());\n\t}", "signature": "List<User> getUsers()", "full_signature": "@Override public List<User> getUsers()", "class_method_signature": "UserDaoJDBC.getUsers()", "testcase": false, "constructor": false, "invocations": ["query", "userMapper"]}, "repository": {"repo_id": 7436396, "url": "https://github.com/twotwo/framework-java", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 12, "size": 285, "license": "licensed"}}