{"test_class": {"identifier": "MongoArgumentUtilsTest", "superclass": "extends AbstractCollectionTestSupport", "interfaces": "", "fields": [], "file": "collection-plugins/mongodb/src/test/java/com/springsource/insight/plugin/mongodb/MongoArgumentUtilsTest.java"}, "test_case": {"identifier": "testShortValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testShortValue() {\n        Short value = Short.valueOf((short) 42);\n        assertEquals(value.toString(), MongoArgumentUtils.toString(value));\n    }", "signature": "void testShortValue()", "full_signature": "@Test public void testShortValue()", "class_method_signature": "MongoArgumentUtilsTest.testShortValue()", "testcase": true, "constructor": false, "invocations": ["valueOf", "assertEquals", "toString", "toString"]}, "focal_class": {"identifier": "MongoArgumentUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int MAX_STRING_LENGTH = 256;", "modifier": "public static final", "type": "int", "declarator": "MAX_STRING_LENGTH = 256", "var_name": "MAX_STRING_LENGTH"}, {"original_string": "private static final Class<?>[] SIMPLE_CLASSES = new Class<?>[]{\n            String.class, Boolean.class, Byte.class, Character.class,\n            Short.class, Integer.class, Long.class, Float.class, Double.class,\n            BigInteger.class, BigDecimal.class};", "modifier": "private static final", "type": "Class<?>[]", "declarator": "SIMPLE_CLASSES = new Class<?>[]{\n            String.class, Boolean.class, Byte.class, Character.class,\n            Short.class, Integer.class, Long.class, Float.class, Double.class,\n            BigInteger.class, BigDecimal.class}", "var_name": "SIMPLE_CLASSES"}, {"original_string": "private static final Class<?>[] SIMPLE_MONGO_CLASSES = new Class<?>[]{\n            ObjectId.class, CommandResult.class, BasicDBList.class,\n            BasicDBObject.class, DBCollection.class, WriteConcern.class,\n            WriteResult.class};", "modifier": "private static final", "type": "Class<?>[]", "declarator": "SIMPLE_MONGO_CLASSES = new Class<?>[]{\n            ObjectId.class, CommandResult.class, BasicDBList.class,\n            BasicDBObject.class, DBCollection.class, WriteConcern.class,\n            WriteResult.class}", "var_name": "SIMPLE_MONGO_CLASSES"}, {"original_string": "public static final StringForm<Object> DefaultStringForm = new StringForm<Object>() {\n        public String stringify(final Object object) {\n            return object.toString();\n        }\n    };", "modifier": "public static final", "type": "StringForm<Object>", "declarator": "DefaultStringForm = new StringForm<Object>() {\n        public String stringify(final Object object) {\n            return object.toString();\n        }\n    }", "var_name": "DefaultStringForm"}, {"original_string": "public static final StringForm<DBCursor> DBCursorStringForm = new StringForm<DBCursor>() {\n        public String stringify(final DBCursor cursor) {\n            return \"DBCursor(\" + MongoArgumentUtils.toString(cursor.getQuery()) + \", \"\n                    + MongoArgumentUtils.toString(cursor.getKeysWanted()) + \")\";\n        }\n    };", "modifier": "public static final", "type": "StringForm<DBCursor>", "declarator": "DBCursorStringForm = new StringForm<DBCursor>() {\n        public String stringify(final DBCursor cursor) {\n            return \"DBCursor(\" + MongoArgumentUtils.toString(cursor.getQuery()) + \", \"\n                    + MongoArgumentUtils.toString(cursor.getKeysWanted()) + \")\";\n        }\n    }", "var_name": "DBCursorStringForm"}, {"original_string": "public static final StringForm<DBObject[]> DBObjectArrayStringForm = new StringForm<DBObject[]>() {\n        public String stringify(final DBObject[] array) {\n            return \"DBObject\" + MongoArgumentUtils.toString(array);\n        }\n    };", "modifier": "public static final", "type": "StringForm<DBObject[]>", "declarator": "DBObjectArrayStringForm = new StringForm<DBObject[]>() {\n        public String stringify(final DBObject[] array) {\n            return \"DBObject\" + MongoArgumentUtils.toString(array);\n        }\n    }", "var_name": "DBObjectArrayStringForm"}, {"original_string": "@SuppressWarnings(\"synthetic-access\")\n    public static final Map<Class<?>, StringForm<? extends Object>> STRING_FORM_MAP = new HashMap<Class<?>, StringForm<? extends Object>>() {\n        private static final long serialVersionUID = 1L;\n\n        {\n            // Wrapper classes\n            //\n            for (Class<?> cls : SIMPLE_CLASSES) {\n                put(cls, DefaultStringForm);\n            }\n\n            // MongoDB classes\n            //\n            for (Class<?> cls : SIMPLE_MONGO_CLASSES) {\n                put(cls, DefaultStringForm);\n            }\n\n            put(DBCursor.class, DBCursorStringForm);\n            put(DBObject[].class, DBObjectArrayStringForm);\n        }\n    };", "modifier": "@SuppressWarnings(\"synthetic-access\")\n    public static final", "type": "Map<Class<?>, StringForm<? extends Object>>", "declarator": "STRING_FORM_MAP = new HashMap<Class<?>, StringForm<? extends Object>>() {\n        private static final long serialVersionUID = 1L;\n\n        {\n            // Wrapper classes\n            //\n            for (Class<?> cls : SIMPLE_CLASSES) {\n                put(cls, DefaultStringForm);\n            }\n\n            // MongoDB classes\n            //\n            for (Class<?> cls : SIMPLE_MONGO_CLASSES) {\n                put(cls, DefaultStringForm);\n            }\n\n            put(DBCursor.class, DBCursorStringForm);\n            put(DBObject[].class, DBObjectArrayStringForm);\n        }\n    }", "var_name": "STRING_FORM_MAP"}], "methods": [{"identifier": "MongoArgumentUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " MongoArgumentUtils()", "full_signature": "private  MongoArgumentUtils()", "class_method_signature": "MongoArgumentUtils.MongoArgumentUtils()", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "(final Object[] array)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> toString(final Object[] array)", "full_signature": "public static List<String> toString(final Object[] array)", "class_method_signature": "MongoArgumentUtils.toString(final Object[] array)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(final Object[] array, final int maxLength)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> toString(final Object[] array, final int maxLength)", "full_signature": "public static List<String> toString(final Object[] array, final int maxLength)", "class_method_signature": "MongoArgumentUtils.toString(final Object[] array, final int maxLength)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(final Object object)", "modifiers": "public static", "return": "String", "signature": "String toString(final Object object)", "full_signature": "public static String toString(final Object object)", "class_method_signature": "MongoArgumentUtils.toString(final Object object)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(final Object object, final int maxLength)", "modifiers": "public static", "return": "String", "signature": "String toString(final Object object, final int maxLength)", "full_signature": "public static String toString(final Object object, final int maxLength)", "class_method_signature": "MongoArgumentUtils.toString(final Object object, final int maxLength)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(final DBObject dbObject)", "modifiers": "public static", "return": "String", "signature": "String toString(final DBObject dbObject)", "full_signature": "public static String toString(final DBObject dbObject)", "class_method_signature": "MongoArgumentUtils.toString(final DBObject dbObject)", "testcase": false, "constructor": false}, {"identifier": "chopTailAndEllipsify", "parameters": "(final String string)", "modifiers": "public static", "return": "String", "signature": "String chopTailAndEllipsify(final String string)", "full_signature": "public static String chopTailAndEllipsify(final String string)", "class_method_signature": "MongoArgumentUtils.chopTailAndEllipsify(final String string)", "testcase": false, "constructor": false}, {"identifier": "putDatabaseDetails", "parameters": "(Operation op, DB db)", "modifiers": "public static", "return": "Operation", "signature": "Operation putDatabaseDetails(Operation op, DB db)", "full_signature": "public static Operation putDatabaseDetails(Operation op, DB db)", "class_method_signature": "MongoArgumentUtils.putDatabaseDetails(Operation op, DB db)", "testcase": false, "constructor": false}], "file": "collection-plugins/mongodb/src/main/java/com/springsource/insight/plugin/mongodb/MongoArgumentUtils.java"}, "focal_method": {"identifier": "toString", "parameters": "(final Object[] array)", "modifiers": "public static", "return": "List<String>", "body": "public static List<String> toString(final Object[] array) {\n        return toString(array, MAX_STRING_LENGTH);\n    }", "signature": "List<String> toString(final Object[] array)", "full_signature": "public static List<String> toString(final Object[] array)", "class_method_signature": "MongoArgumentUtils.toString(final Object[] array)", "testcase": false, "constructor": false, "invocations": ["toString"]}, "repository": {"repo_id": 2550825, "url": "https://github.com/spring-projects/spring-insight-plugins", "language": "Java", "is_fork": false, "fork_count": 24, "stargazer_count": 55, "size": 6372, "license": "licensed"}}