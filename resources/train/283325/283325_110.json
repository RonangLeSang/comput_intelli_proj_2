{"test_class": {"identifier": "URLEvaluatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "final String expectedURL1 = \"testUrl1\";", "modifier": "final", "type": "String", "declarator": "expectedURL1 = \"testUrl1\"", "var_name": "expectedURL1"}, {"original_string": "final String expectedURL2 = \"testUrl2\";", "modifier": "final", "type": "String", "declarator": "expectedURL2 = \"testUrl2\"", "var_name": "expectedURL2"}, {"original_string": "AccessContext accessContext = new AccessContext();", "modifier": "", "type": "AccessContext", "declarator": "accessContext = new AccessContext()", "var_name": "accessContext"}, {"original_string": "URLEvaluator evaluator;", "modifier": "", "type": "URLEvaluator", "declarator": "evaluator", "var_name": "evaluator"}, {"original_string": "DummyRequest request;", "modifier": "", "type": "DummyRequest", "declarator": "request", "var_name": "request"}, {"original_string": "DummyResponse response;", "modifier": "", "type": "DummyResponse", "declarator": "response", "var_name": "response"}, {"original_string": "DummyServerAdapter serverAdapter;", "modifier": "", "type": "DummyServerAdapter", "declarator": "serverAdapter", "var_name": "serverAdapter"}], "file": "logback-access/src/test/java/ch/qos/logback/access/net/URLEvaluatorTest.java"}, "test_case": {"identifier": "testExpectFalse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExpectFalse() throws EvaluationException {\n        request.setRequestUri(\"test\");\n        IAccessEvent ae = new AccessEvent(accessContext, request, response, serverAdapter);\n        assertFalse(evaluator.evaluate(ae));\n    }", "signature": "void testExpectFalse()", "full_signature": "@Test public void testExpectFalse()", "class_method_signature": "URLEvaluatorTest.testExpectFalse()", "testcase": true, "constructor": false, "invocations": ["setRequestUri", "assertFalse", "evaluate"]}, "focal_class": {"identifier": "URLEvaluator", "superclass": "extends ContextAwareBase", "interfaces": "implements EventEvaluator<IAccessEvent>, LifeCycle", "fields": [{"original_string": "boolean started;", "modifier": "", "type": "boolean", "declarator": "started", "var_name": "started"}, {"original_string": "String name;", "modifier": "", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private List<String> URLList = new ArrayList<String>();", "modifier": "private", "type": "List<String>", "declarator": "URLList = new ArrayList<String>()", "var_name": "URLList"}], "methods": [{"identifier": "addURL", "parameters": "(String url)", "modifiers": "public", "return": "void", "signature": "void addURL(String url)", "full_signature": "public void addURL(String url)", "class_method_signature": "URLEvaluator.addURL(String url)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void start()", "full_signature": "@Override public void start()", "class_method_signature": "URLEvaluator.start()", "testcase": false, "constructor": false}, {"identifier": "evaluate", "parameters": "(IAccessEvent event)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean evaluate(IAccessEvent event)", "full_signature": "@Override public boolean evaluate(IAccessEvent event)", "class_method_signature": "URLEvaluator.evaluate(IAccessEvent event)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "URLEvaluator.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "@Override public", "return": "void", "signature": "void setName(String name)", "full_signature": "@Override public void setName(String name)", "class_method_signature": "URLEvaluator.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "isStarted", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isStarted()", "full_signature": "@Override public boolean isStarted()", "class_method_signature": "URLEvaluator.isStarted()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stop()", "full_signature": "@Override public void stop()", "class_method_signature": "URLEvaluator.stop()", "testcase": false, "constructor": false}], "file": "logback-access/src/main/java/ch/qos/logback/access/net/URLEvaluator.java"}, "focal_method": {"identifier": "evaluate", "parameters": "(IAccessEvent event)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean evaluate(IAccessEvent event) throws NullPointerException, EvaluationException {\n        String url = event.getRequestURL();\n        for (String expected : URLList) {\n            if (url.contains(expected)) {\n                return true;\n            }\n        }\n        return false;\n    }", "signature": "boolean evaluate(IAccessEvent event)", "full_signature": "@Override public boolean evaluate(IAccessEvent event)", "class_method_signature": "URLEvaluator.evaluate(IAccessEvent event)", "testcase": false, "constructor": false, "invocations": ["getRequestURL", "contains"]}, "repository": {"repo_id": 283325, "url": "https://github.com/qos-ch/logback", "stars": 1795, "created": "8/20/2009 6:48:24 PM +00:00", "updates": "2020-01-24T21:40:54+00:00", "fork": "False", "license": "licensed"}}