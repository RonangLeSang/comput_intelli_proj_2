{"test_class": {"identifier": "PatternLayoutTest", "superclass": "extends AbstractPatternLayoutBaseTest<ILoggingEvent>", "interfaces": "", "fields": [{"original_string": "private PatternLayout pl = new PatternLayout();", "modifier": "private", "type": "PatternLayout", "declarator": "pl = new PatternLayout()", "var_name": "pl"}, {"original_string": "private LoggerContext lc = new LoggerContext();", "modifier": "private", "type": "LoggerContext", "declarator": "lc = new LoggerContext()", "var_name": "lc"}, {"original_string": "Logger logger = lc.getLogger(ConverterTest.class);", "modifier": "", "type": "Logger", "declarator": "logger = lc.getLogger(ConverterTest.class)", "var_name": "logger"}, {"original_string": "Logger root = lc.getLogger(Logger.ROOT_LOGGER_NAME);", "modifier": "", "type": "Logger", "declarator": "root = lc.getLogger(Logger.ROOT_LOGGER_NAME)", "var_name": "root"}, {"original_string": "String aMessage = \"Some message\";", "modifier": "", "type": "String", "declarator": "aMessage = \"Some message\"", "var_name": "aMessage"}, {"original_string": "ILoggingEvent le;", "modifier": "", "type": "ILoggingEvent", "declarator": "le", "var_name": "le"}], "file": "logback-classic/src/test/java/ch/qos/logback/classic/PatternLayoutTest.java"}, "test_case": {"identifier": "cnTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void cnTest() {\n        pl.setPattern(\"%cn\");\n        lc.setName(\"aValue\");\n        pl.start();\n        String val = pl.doLayout(getEventObject());\n        assertEquals(\"aValue\", val);\n    }", "signature": "void cnTest()", "full_signature": "@Test public void cnTest()", "class_method_signature": "PatternLayoutTest.cnTest()", "testcase": true, "constructor": false, "invocations": ["setPattern", "setName", "start", "doLayout", "getEventObject", "assertEquals"]}, "focal_class": {"identifier": "PatternLayout", "superclass": "extends PatternLayoutBase<ILoggingEvent>", "interfaces": "", "fields": [{"original_string": "public static final Map<String, String> defaultConverterMap = new HashMap<String, String>();", "modifier": "public static final", "type": "Map<String, String>", "declarator": "defaultConverterMap = new HashMap<String, String>()", "var_name": "defaultConverterMap"}, {"original_string": "public static final String HEADER_PREFIX = \"#logback.classic pattern: \";", "modifier": "public static final", "type": "String", "declarator": "HEADER_PREFIX = \"#logback.classic pattern: \"", "var_name": "HEADER_PREFIX"}], "methods": [{"identifier": "PatternLayout", "parameters": "()", "modifiers": "public", "return": "", "signature": " PatternLayout()", "full_signature": "public  PatternLayout()", "class_method_signature": "PatternLayout.PatternLayout()", "testcase": false, "constructor": true}, {"identifier": "getDefaultConverterMap", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getDefaultConverterMap()", "full_signature": "public Map<String, String> getDefaultConverterMap()", "class_method_signature": "PatternLayout.getDefaultConverterMap()", "testcase": false, "constructor": false}, {"identifier": "doLayout", "parameters": "(ILoggingEvent event)", "modifiers": "public", "return": "String", "signature": "String doLayout(ILoggingEvent event)", "full_signature": "public String doLayout(ILoggingEvent event)", "class_method_signature": "PatternLayout.doLayout(ILoggingEvent event)", "testcase": false, "constructor": false}, {"identifier": "getPresentationHeaderPrefix", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getPresentationHeaderPrefix()", "full_signature": "@Override protected String getPresentationHeaderPrefix()", "class_method_signature": "PatternLayout.getPresentationHeaderPrefix()", "testcase": false, "constructor": false}], "file": "logback-classic/src/main/java/ch/qos/logback/classic/PatternLayout.java"}, "focal_method": {"identifier": "doLayout", "parameters": "(ILoggingEvent event)", "modifiers": "public", "return": "String", "body": "public String doLayout(ILoggingEvent event) {\n        if (!isStarted()) {\n            return CoreConstants.EMPTY_STRING;\n        }\n        return writeLoopOnConverters(event);\n    }", "signature": "String doLayout(ILoggingEvent event)", "full_signature": "public String doLayout(ILoggingEvent event)", "class_method_signature": "PatternLayout.doLayout(ILoggingEvent event)", "testcase": false, "constructor": false, "invocations": ["isStarted", "writeLoopOnConverters"]}, "repository": {"repo_id": 283325, "url": "https://github.com/qos-ch/logback", "stars": 1795, "created": "8/20/2009 6:48:24 PM +00:00", "updates": "2020-01-24T21:40:54+00:00", "fork": "False", "license": "licensed"}}