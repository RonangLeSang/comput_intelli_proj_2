{"test_class": {"identifier": "KeyManagerFactoryFactoryBeanTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private KeyManagerFactoryFactoryBean factoryBean = new KeyManagerFactoryFactoryBean();", "modifier": "private", "type": "KeyManagerFactoryFactoryBean", "declarator": "factoryBean = new KeyManagerFactoryFactoryBean()", "var_name": "factoryBean"}], "file": "logback-core/src/test/java/ch/qos/logback/core/net/ssl/KeyManagerFactoryFactoryBeanTest.java"}, "test_case": {"identifier": "testDefaults", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDefaults() throws Exception {\n        assertNotNull(factoryBean.createKeyManagerFactory());\n    }", "signature": "void testDefaults()", "full_signature": "@Test public void testDefaults()", "class_method_signature": "KeyManagerFactoryFactoryBeanTest.testDefaults()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "createKeyManagerFactory"]}, "focal_class": {"identifier": "KeyManagerFactoryFactoryBean", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String algorithm;", "modifier": "private", "type": "String", "declarator": "algorithm", "var_name": "algorithm"}, {"original_string": "private String provider;", "modifier": "private", "type": "String", "declarator": "provider", "var_name": "provider"}], "methods": [{"identifier": "createKeyManagerFactory", "parameters": "()", "modifiers": "public", "return": "KeyManagerFactory", "signature": "KeyManagerFactory createKeyManagerFactory()", "full_signature": "public KeyManagerFactory createKeyManagerFactory()", "class_method_signature": "KeyManagerFactoryFactoryBean.createKeyManagerFactory()", "testcase": false, "constructor": false}, {"identifier": "getAlgorithm", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAlgorithm()", "full_signature": "public String getAlgorithm()", "class_method_signature": "KeyManagerFactoryFactoryBean.getAlgorithm()", "testcase": false, "constructor": false}, {"identifier": "setAlgorithm", "parameters": "(String algorithm)", "modifiers": "public", "return": "void", "signature": "void setAlgorithm(String algorithm)", "full_signature": "public void setAlgorithm(String algorithm)", "class_method_signature": "KeyManagerFactoryFactoryBean.setAlgorithm(String algorithm)", "testcase": false, "constructor": false}, {"identifier": "getProvider", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getProvider()", "full_signature": "public String getProvider()", "class_method_signature": "KeyManagerFactoryFactoryBean.getProvider()", "testcase": false, "constructor": false}, {"identifier": "setProvider", "parameters": "(String provider)", "modifiers": "public", "return": "void", "signature": "void setProvider(String provider)", "full_signature": "public void setProvider(String provider)", "class_method_signature": "KeyManagerFactoryFactoryBean.setProvider(String provider)", "testcase": false, "constructor": false}], "file": "logback-core/src/main/java/ch/qos/logback/core/net/ssl/KeyManagerFactoryFactoryBean.java"}, "focal_method": {"identifier": "createKeyManagerFactory", "parameters": "()", "modifiers": "public", "return": "KeyManagerFactory", "body": "public KeyManagerFactory createKeyManagerFactory() throws NoSuchProviderException, NoSuchAlgorithmException {\n\n        return getProvider() != null ? KeyManagerFactory.getInstance(getAlgorithm(), getProvider()) : KeyManagerFactory.getInstance(getAlgorithm());\n    }", "signature": "KeyManagerFactory createKeyManagerFactory()", "full_signature": "public KeyManagerFactory createKeyManagerFactory()", "class_method_signature": "KeyManagerFactoryFactoryBean.createKeyManagerFactory()", "testcase": false, "constructor": false, "invocations": ["getProvider", "getInstance", "getAlgorithm", "getProvider", "getInstance", "getAlgorithm"]}, "repository": {"repo_id": 283325, "url": "https://github.com/qos-ch/logback", "stars": 1795, "created": "8/20/2009 6:48:24 PM +00:00", "updates": "2020-01-24T21:40:54+00:00", "fork": "False", "license": "licensed"}}