{"test_class": {"identifier": "MDCConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "LoggerContext lc;", "modifier": "", "type": "LoggerContext", "declarator": "lc", "var_name": "lc"}, {"original_string": "MDCConverter converter;", "modifier": "", "type": "MDCConverter", "declarator": "converter", "var_name": "converter"}, {"original_string": "int diff = RandomUtil.getPositiveInt();", "modifier": "", "type": "int", "declarator": "diff = RandomUtil.getPositiveInt()", "var_name": "diff"}], "file": "logback-classic/src/test/java/ch/qos/logback/classic/pattern/MDCConverterTest.java"}, "test_case": {"identifier": "testConvertWithOneEntry", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConvertWithOneEntry() {\n        String k = \"MDCConverterTest_k\" + diff;\n        String v = \"MDCConverterTest_v\" + diff;\n\n        MDC.put(k, v);\n        ILoggingEvent le = createLoggingEvent();\n        String result = converter.convert(le);\n        assertEquals(k + \"=\" + v, result);\n    }", "signature": "void testConvertWithOneEntry()", "full_signature": "@Test public void testConvertWithOneEntry()", "class_method_signature": "MDCConverterTest.testConvertWithOneEntry()", "testcase": true, "constructor": false, "invocations": ["put", "createLoggingEvent", "convert", "assertEquals"]}, "focal_class": {"identifier": "MDCConverter", "superclass": "extends ClassicConverter", "interfaces": "", "fields": [{"original_string": "private String key;", "modifier": "private", "type": "String", "declarator": "key", "var_name": "key"}, {"original_string": "private String defaultValue = \"\";", "modifier": "private", "type": "String", "declarator": "defaultValue = \"\"", "var_name": "defaultValue"}], "methods": [{"identifier": "start", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void start()", "full_signature": "@Override public void start()", "class_method_signature": "MDCConverter.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stop()", "full_signature": "@Override public void stop()", "class_method_signature": "MDCConverter.stop()", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(ILoggingEvent event)", "modifiers": "@Override public", "return": "String", "signature": "String convert(ILoggingEvent event)", "full_signature": "@Override public String convert(ILoggingEvent event)", "class_method_signature": "MDCConverter.convert(ILoggingEvent event)", "testcase": false, "constructor": false}, {"identifier": "outputMDCForAllKeys", "parameters": "(Map<String, String> mdcPropertyMap)", "modifiers": "private", "return": "String", "signature": "String outputMDCForAllKeys(Map<String, String> mdcPropertyMap)", "full_signature": "private String outputMDCForAllKeys(Map<String, String> mdcPropertyMap)", "class_method_signature": "MDCConverter.outputMDCForAllKeys(Map<String, String> mdcPropertyMap)", "testcase": false, "constructor": false}], "file": "logback-classic/src/main/java/ch/qos/logback/classic/pattern/MDCConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(ILoggingEvent event)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String convert(ILoggingEvent event) {\n        Map<String, String> mdcPropertyMap = event.getMDCPropertyMap();\n\n        if (mdcPropertyMap == null) {\n            return defaultValue;\n        }\n\n        if (key == null) {\n            return outputMDCForAllKeys(mdcPropertyMap);\n        } else {\n\n            String value = mdcPropertyMap.get(key);\n            if (value != null) {\n                return value;\n            } else {\n                return defaultValue;\n            }\n        }\n    }", "signature": "String convert(ILoggingEvent event)", "full_signature": "@Override public String convert(ILoggingEvent event)", "class_method_signature": "MDCConverter.convert(ILoggingEvent event)", "testcase": false, "constructor": false, "invocations": ["getMDCPropertyMap", "outputMDCForAllKeys", "get"]}, "repository": {"repo_id": 283325, "url": "https://github.com/qos-ch/logback", "stars": 1795, "created": "8/20/2009 6:48:24 PM +00:00", "updates": "2020-01-24T21:40:54+00:00", "fork": "False", "license": "licensed"}}