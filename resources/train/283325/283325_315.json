{"test_class": {"identifier": "AppenderAttachableImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AppenderAttachableImpl<TestEvent> aai;", "modifier": "private", "type": "AppenderAttachableImpl<TestEvent>", "declarator": "aai", "var_name": "aai"}], "file": "logback-core/src/test/java/ch/qos/logback/core/spi/AppenderAttachableImplTest.java"}, "test_case": {"identifier": "testDetachAppender", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDetachAppender() throws Exception {\n        NOPAppender<TestEvent> ta = new NOPAppender<TestEvent>();\n        ta.start();\n        aai.addAppender(ta);\n        NOPAppender<TestEvent> tab = new NOPAppender<TestEvent>();\n        tab.setName(\"test\");\n        tab.start();\n        aai.addAppender(tab);\n        assertTrue(\"Appender not detached\", aai.detachAppender(tab));\n        assertNull(\"Appender was not removed\", aai.getAppender(\"test\"));\n        assertFalse(\"Appender detach error\", aai.detachAppender(tab));\n    }", "signature": "void testDetachAppender()", "full_signature": "@Test public void testDetachAppender()", "class_method_signature": "AppenderAttachableImplTest.testDetachAppender()", "testcase": true, "constructor": false, "invocations": ["start", "addAppender", "setName", "start", "addAppender", "assertTrue", "detachAppender", "assertNull", "getAppender", "assertFalse", "detachAppender"]}, "focal_class": {"identifier": "AppenderAttachableImpl", "superclass": "", "interfaces": "implements AppenderAttachable<E>", "fields": [{"original_string": "@SuppressWarnings(\"unchecked\")\n    final private COWArrayList<Appender<E>> appenderList = new COWArrayList<Appender<E>>(new Appender[0]);", "modifier": "@SuppressWarnings(\"unchecked\")\n    final private", "type": "COWArrayList<Appender<E>>", "declarator": "appenderList = new COWArrayList<Appender<E>>(new Appender[0])", "var_name": "appenderList"}, {"original_string": "static final long START = System.currentTimeMillis();", "modifier": "static final", "type": "long", "declarator": "START = System.currentTimeMillis()", "var_name": "START"}], "methods": [{"identifier": "addAppender", "parameters": "(Appender<E> newAppender)", "modifiers": "public", "return": "void", "signature": "void addAppender(Appender<E> newAppender)", "full_signature": "public void addAppender(Appender<E> newAppender)", "class_method_signature": "AppenderAttachableImpl.addAppender(Appender<E> newAppender)", "testcase": false, "constructor": false}, {"identifier": "appendLoopOnAppenders", "parameters": "(E e)", "modifiers": "public", "return": "int", "signature": "int appendLoopOnAppenders(E e)", "full_signature": "public int appendLoopOnAppenders(E e)", "class_method_signature": "AppenderAttachableImpl.appendLoopOnAppenders(E e)", "testcase": false, "constructor": false}, {"identifier": "iteratorForAppenders", "parameters": "()", "modifiers": "public", "return": "Iterator<Appender<E>>", "signature": "Iterator<Appender<E>> iteratorForAppenders()", "full_signature": "public Iterator<Appender<E>> iteratorForAppenders()", "class_method_signature": "AppenderAttachableImpl.iteratorForAppenders()", "testcase": false, "constructor": false}, {"identifier": "getAppender", "parameters": "(String name)", "modifiers": "public", "return": "Appender<E>", "signature": "Appender<E> getAppender(String name)", "full_signature": "public Appender<E> getAppender(String name)", "class_method_signature": "AppenderAttachableImpl.getAppender(String name)", "testcase": false, "constructor": false}, {"identifier": "isAttached", "parameters": "(Appender<E> appender)", "modifiers": "public", "return": "boolean", "signature": "boolean isAttached(Appender<E> appender)", "full_signature": "public boolean isAttached(Appender<E> appender)", "class_method_signature": "AppenderAttachableImpl.isAttached(Appender<E> appender)", "testcase": false, "constructor": false}, {"identifier": "detachAndStopAllAppenders", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void detachAndStopAllAppenders()", "full_signature": "public void detachAndStopAllAppenders()", "class_method_signature": "AppenderAttachableImpl.detachAndStopAllAppenders()", "testcase": false, "constructor": false}, {"identifier": "detachAppender", "parameters": "(Appender<E> appender)", "modifiers": "public", "return": "boolean", "signature": "boolean detachAppender(Appender<E> appender)", "full_signature": "public boolean detachAppender(Appender<E> appender)", "class_method_signature": "AppenderAttachableImpl.detachAppender(Appender<E> appender)", "testcase": false, "constructor": false}, {"identifier": "detachAppender", "parameters": "(String name)", "modifiers": "public", "return": "boolean", "signature": "boolean detachAppender(String name)", "full_signature": "public boolean detachAppender(String name)", "class_method_signature": "AppenderAttachableImpl.detachAppender(String name)", "testcase": false, "constructor": false}], "file": "logback-core/src/main/java/ch/qos/logback/core/spi/AppenderAttachableImpl.java"}, "focal_method": {"identifier": "detachAppender", "parameters": "(Appender<E> appender)", "modifiers": "public", "return": "boolean", "body": "public boolean detachAppender(Appender<E> appender) {\n        if (appender == null) {\n            return false;\n        }\n        boolean result;\n        result = appenderList.remove(appender);\n        return result;\n    }", "signature": "boolean detachAppender(Appender<E> appender)", "full_signature": "public boolean detachAppender(Appender<E> appender)", "class_method_signature": "AppenderAttachableImpl.detachAppender(Appender<E> appender)", "testcase": false, "constructor": false, "invocations": ["remove"]}, "repository": {"repo_id": 283325, "url": "https://github.com/qos-ch/logback", "stars": 1795, "created": "8/20/2009 6:48:24 PM +00:00", "updates": "2020-01-24T21:40:54+00:00", "fork": "False", "license": "licensed"}}