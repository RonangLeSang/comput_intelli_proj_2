{"test_class": {"identifier": "TestBatchResults", "superclass": "", "interfaces": "", "fields": [], "file": "client/src/test/java/org/teiid/jdbc/TestBatchResults.java"}, "test_case": {"identifier": "testHasPrevious1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void testHasPrevious1() throws Exception{\n        //empty batch\n        BatchResults batchResults = getBatchResults(createEmptyBatch(), false);\n        assertFalse(batchResults.hasPrevious());\n    }", "signature": "void testHasPrevious1()", "full_signature": "@Test public void testHasPrevious1()", "class_method_signature": "TestBatchResults.testHasPrevious1()", "testcase": true, "constructor": false, "invocations": ["getBatchResults", "createEmptyBatch", "assertFalse", "hasPrevious"]}, "focal_class": {"identifier": "BatchResults", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final int DEFAULT_SAVED_BATCHES = 3;", "modifier": "static final", "type": "int", "declarator": "DEFAULT_SAVED_BATCHES = 3", "var_name": "DEFAULT_SAVED_BATCHES"}, {"original_string": "private ArrayList<Batch> batches = new ArrayList<Batch>();", "modifier": "private", "type": "ArrayList<Batch>", "declarator": "batches = new ArrayList<Batch>()", "var_name": "batches"}, {"original_string": "private int currentRowNumber;", "modifier": "private", "type": "int", "declarator": "currentRowNumber", "var_name": "currentRowNumber"}, {"original_string": "private List<?> currentRow;", "modifier": "private", "type": "List<?>", "declarator": "currentRow", "var_name": "currentRow"}, {"original_string": "private int lastRowNumber = -1;", "modifier": "private", "type": "int", "declarator": "lastRowNumber = -1", "var_name": "lastRowNumber"}, {"original_string": "private int highestRowNumber;", "modifier": "private", "type": "int", "declarator": "highestRowNumber", "var_name": "highestRowNumber"}, {"original_string": "private BatchFetcher batchFetcher;", "modifier": "private", "type": "BatchFetcher", "declarator": "batchFetcher", "var_name": "batchFetcher"}, {"original_string": "private int savedBatches = DEFAULT_SAVED_BATCHES;", "modifier": "private", "type": "int", "declarator": "savedBatches = DEFAULT_SAVED_BATCHES", "var_name": "savedBatches"}, {"original_string": "private boolean tailLast;", "modifier": "private", "type": "boolean", "declarator": "tailLast", "var_name": "tailLast"}], "methods": [{"identifier": "BatchResults", "parameters": "(BatchFetcher batchFetcher, Batch batch, int savedBatches)", "modifiers": "public", "return": "", "signature": " BatchResults(BatchFetcher batchFetcher, Batch batch, int savedBatches)", "full_signature": "public  BatchResults(BatchFetcher batchFetcher, Batch batch, int savedBatches)", "class_method_signature": "BatchResults.BatchResults(BatchFetcher batchFetcher, Batch batch, int savedBatches)", "testcase": false, "constructor": true}, {"identifier": "getCurrentRow", "parameters": "()", "modifiers": "public", "return": "List<?>", "signature": "List<?> getCurrentRow()", "full_signature": "public List<?> getCurrentRow()", "class_method_signature": "BatchResults.getCurrentRow()", "testcase": false, "constructor": false}, {"identifier": "setCurrentRow", "parameters": "(Batch batch)", "modifiers": "private", "return": "void", "signature": "void setCurrentRow(Batch batch)", "full_signature": "private void setCurrentRow(Batch batch)", "class_method_signature": "BatchResults.setCurrentRow(Batch batch)", "testcase": false, "constructor": false}, {"identifier": "requestNextBatch", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void requestNextBatch()", "full_signature": "private void requestNextBatch()", "class_method_signature": "BatchResults.requestNextBatch()", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean next()", "full_signature": "public boolean next()", "class_method_signature": "BatchResults.next()", "testcase": false, "constructor": false}, {"identifier": "hasPrevious", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasPrevious()", "full_signature": "public boolean hasPrevious()", "class_method_signature": "BatchResults.hasPrevious()", "testcase": false, "constructor": false}, {"identifier": "previous", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean previous()", "full_signature": "public boolean previous()", "class_method_signature": "BatchResults.previous()", "testcase": false, "constructor": false}, {"identifier": "setBatchFetcher", "parameters": "(BatchFetcher batchFetcher)", "modifiers": "public", "return": "void", "signature": "void setBatchFetcher(BatchFetcher batchFetcher)", "full_signature": "public void setBatchFetcher(BatchFetcher batchFetcher)", "class_method_signature": "BatchResults.setBatchFetcher(BatchFetcher batchFetcher)", "testcase": false, "constructor": false}, {"identifier": "absolute", "parameters": "(int row)", "modifiers": "public", "return": "boolean", "signature": "boolean absolute(int row)", "full_signature": "public boolean absolute(int row)", "class_method_signature": "BatchResults.absolute(int row)", "testcase": false, "constructor": false}, {"identifier": "absolute", "parameters": "(int row, int offset)", "modifiers": "public", "return": "boolean", "signature": "boolean absolute(int row, int offset)", "full_signature": "public boolean absolute(int row, int offset)", "class_method_signature": "BatchResults.absolute(int row, int offset)", "testcase": false, "constructor": false}, {"identifier": "getCurrentRowNumber", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getCurrentRowNumber()", "full_signature": "public int getCurrentRowNumber()", "class_method_signature": "BatchResults.getCurrentRowNumber()", "testcase": false, "constructor": false}, {"identifier": "requestBatchAndWait", "parameters": "(int beginRow)", "modifiers": "private", "return": "void", "signature": "void requestBatchAndWait(int beginRow)", "full_signature": "private void requestBatchAndWait(int beginRow)", "class_method_signature": "BatchResults.requestBatchAndWait(int beginRow)", "testcase": false, "constructor": false}, {"identifier": "setBatch", "parameters": "(Batch batch)", "modifiers": "", "return": "void", "signature": "void setBatch(Batch batch)", "full_signature": " void setBatch(Batch batch)", "class_method_signature": "BatchResults.setBatch(Batch batch)", "testcase": false, "constructor": false}, {"identifier": "hasNext", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasNext()", "full_signature": "public boolean hasNext()", "class_method_signature": "BatchResults.hasNext()", "testcase": false, "constructor": false}, {"identifier": "hasNext", "parameters": "(int next, boolean wait)", "modifiers": "public", "return": "Boolean", "signature": "Boolean hasNext(int next, boolean wait)", "full_signature": "public Boolean hasNext(int next, boolean wait)", "class_method_signature": "BatchResults.hasNext(int next, boolean wait)", "testcase": false, "constructor": false}, {"identifier": "getFinalRowNumber", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getFinalRowNumber()", "full_signature": "public int getFinalRowNumber()", "class_method_signature": "BatchResults.getFinalRowNumber()", "testcase": false, "constructor": false}, {"identifier": "getHighestRowNumber", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getHighestRowNumber()", "full_signature": "public int getHighestRowNumber()", "class_method_signature": "BatchResults.getHighestRowNumber()", "testcase": false, "constructor": false}, {"identifier": "setCurrentRowNumber", "parameters": "(int currentRowNumber)", "modifiers": "private", "return": "void", "signature": "void setCurrentRowNumber(int currentRowNumber)", "full_signature": "private void setCurrentRowNumber(int currentRowNumber)", "class_method_signature": "BatchResults.setCurrentRowNumber(int currentRowNumber)", "testcase": false, "constructor": false}, {"identifier": "isTailLast", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTailLast()", "full_signature": "public boolean isTailLast()", "class_method_signature": "BatchResults.isTailLast()", "testcase": false, "constructor": false}], "file": "client/src/main/java/org/teiid/jdbc/BatchResults.java"}, "focal_method": {"identifier": "hasPrevious", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean hasPrevious() {\n        return (this.currentRowNumber != 0 && this.currentRowNumber != 1);\n    }", "signature": "boolean hasPrevious()", "full_signature": "public boolean hasPrevious()", "class_method_signature": "BatchResults.hasPrevious()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 6092163, "url": "https://github.com/teiid/teiid", "stars": 191, "created": "10/5/2012 3:21:04 PM +00:00", "updates": "2020-01-27T20:57:36+00:00", "fork": "False", "license": "licensed"}}