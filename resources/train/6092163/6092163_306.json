{"test_class": {"identifier": "TestConstant", "superclass": "", "interfaces": "", "fields": [], "file": "engine/src/test/java/org/teiid/query/sql/symbol/TestConstant.java"}, "test_case": {"identifier": "testArrayCompare", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void testArrayCompare() {\n        Constant c = new Constant(new ArrayImpl(new Integer[0]));\n        assertEquals(DataTypeManager.getArrayType(DefaultDataClasses.OBJECT), c.getType());\n    }", "signature": "void testArrayCompare()", "full_signature": "@Test public void testArrayCompare()", "class_method_signature": "TestConstant.testArrayCompare()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getArrayType", "getType"]}, "focal_class": {"identifier": "Constant", "superclass": "", "interfaces": "implements Expression, Comparable<Constant>", "fields": [{"original_string": "public static final Constant NULL_CONSTANT = new Constant(null);", "modifier": "public static final", "type": "Constant", "declarator": "NULL_CONSTANT = new Constant(null)", "var_name": "NULL_CONSTANT"}, {"original_string": "private Object value;", "modifier": "private", "type": "Object", "declarator": "value", "var_name": "value"}, {"original_string": "private Class<?> type;", "modifier": "private", "type": "Class<?>", "declarator": "type", "var_name": "type"}, {"original_string": "private boolean multiValued;", "modifier": "private", "type": "boolean", "declarator": "multiValued", "var_name": "multiValued"}, {"original_string": "private boolean bindEligible;", "modifier": "private", "type": "boolean", "declarator": "bindEligible", "var_name": "bindEligible"}, {"original_string": "public static final Comparator<Object> COMPARATOR = getComparator(DataTypeManager.COLLATION_LOCALE, DataTypeManager.PAD_SPACE);", "modifier": "public static final", "type": "Comparator<Object>", "declarator": "COMPARATOR = getComparator(DataTypeManager.COLLATION_LOCALE, DataTypeManager.PAD_SPACE)", "var_name": "COMPARATOR"}], "methods": [{"identifier": "getComparator", "parameters": "(String localeString, final boolean padSpace)", "modifiers": "static", "return": "Comparator<Object>", "signature": "Comparator<Object> getComparator(String localeString, final boolean padSpace)", "full_signature": "static Comparator<Object> getComparator(String localeString, final boolean padSpace)", "class_method_signature": "Constant.getComparator(String localeString, final boolean padSpace)", "testcase": false, "constructor": false}, {"identifier": "getComparator", "parameters": "(boolean padSpace)", "modifiers": "static", "return": "Comparator<Object>", "signature": "Comparator<Object> getComparator(boolean padSpace)", "full_signature": "static Comparator<Object> getComparator(boolean padSpace)", "class_method_signature": "Constant.getComparator(boolean padSpace)", "testcase": false, "constructor": false}, {"identifier": "Constant", "parameters": "(Object value, Class<?> type)", "modifiers": "public", "return": "", "signature": " Constant(Object value, Class<?> type)", "full_signature": "public  Constant(Object value, Class<?> type)", "class_method_signature": "Constant.Constant(Object value, Class<?> type)", "testcase": false, "constructor": true}, {"identifier": "Constant", "parameters": "(Object value)", "modifiers": "public", "return": "", "signature": " Constant(Object value)", "full_signature": "public  Constant(Object value)", "class_method_signature": "Constant.Constant(Object value)", "testcase": false, "constructor": true}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "Class<?>", "signature": "Class<?> getType()", "full_signature": "public Class<?> getType()", "class_method_signature": "Constant.getType()", "testcase": false, "constructor": false}, {"identifier": "setType", "parameters": "(Class<?> type)", "modifiers": "public", "return": "void", "signature": "void setType(Class<?> type)", "full_signature": "public void setType(Class<?> type)", "class_method_signature": "Constant.setType(Class<?> type)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object getValue()", "full_signature": "public Object getValue()", "class_method_signature": "Constant.getValue()", "testcase": false, "constructor": false}, {"identifier": "isNull", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isNull()", "full_signature": "public boolean isNull()", "class_method_signature": "Constant.isNull()", "testcase": false, "constructor": false}, {"identifier": "setMultiValued", "parameters": "(List<?> value)", "modifiers": "public", "return": "void", "signature": "void setMultiValued(List<?> value)", "full_signature": "public void setMultiValued(List<?> value)", "class_method_signature": "Constant.setMultiValued(List<?> value)", "testcase": false, "constructor": false}, {"identifier": "isMultiValued", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isMultiValued()", "full_signature": "public boolean isMultiValued()", "class_method_signature": "Constant.isMultiValued()", "testcase": false, "constructor": false}, {"identifier": "acceptVisitor", "parameters": "(LanguageVisitor visitor)", "modifiers": "public", "return": "void", "signature": "void acceptVisitor(LanguageVisitor visitor)", "full_signature": "public void acceptVisitor(LanguageVisitor visitor)", "class_method_signature": "Constant.acceptVisitor(LanguageVisitor visitor)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "Constant.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "Constant.hashCode()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "Constant.clone()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "Constant.toString()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Constant o)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(Constant o)", "full_signature": "@Override public int compareTo(Constant o)", "class_method_signature": "Constant.compareTo(Constant o)", "testcase": false, "constructor": false}, {"identifier": "comparePadded", "parameters": "(CharSequence s1, CharSequence s2)", "modifiers": "final static", "return": "int", "signature": "int comparePadded(CharSequence s1, CharSequence s2)", "full_signature": "final static int comparePadded(CharSequence s1, CharSequence s2)", "class_method_signature": "Constant.comparePadded(CharSequence s1, CharSequence s2)", "testcase": false, "constructor": false}, {"identifier": "isBindEligible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isBindEligible()", "full_signature": "public boolean isBindEligible()", "class_method_signature": "Constant.isBindEligible()", "testcase": false, "constructor": false}, {"identifier": "setBindEligible", "parameters": "(boolean bindEligible)", "modifiers": "public", "return": "void", "signature": "void setBindEligible(boolean bindEligible)", "full_signature": "public void setBindEligible(boolean bindEligible)", "class_method_signature": "Constant.setBindEligible(boolean bindEligible)", "testcase": false, "constructor": false}], "file": "engine/src/main/java/org/teiid/query/sql/symbol/Constant.java"}, "focal_method": {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "Class<?>", "body": "public Class<?> getType() {\n        return this.type;\n    }", "signature": "Class<?> getType()", "full_signature": "public Class<?> getType()", "class_method_signature": "Constant.getType()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 6092163, "url": "https://github.com/teiid/teiid", "stars": 191, "created": "10/5/2012 3:21:04 PM +00:00", "updates": "2020-01-27T20:57:36+00:00", "fork": "False", "license": "licensed"}}