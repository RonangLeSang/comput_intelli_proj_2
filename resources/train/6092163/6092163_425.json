{"test_class": {"identifier": "TestExtensibleBufferedInputStream", "superclass": "", "interfaces": "", "fields": [], "file": "engine/src/test/java/org/teiid/common/buffer/TestExtensibleBufferedInputStream.java"}, "test_case": {"identifier": "testReset", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void testReset() throws IOException {\n        InputStream is = new ExtensibleBufferedInputStream() {\n            boolean returned = false;\n            @Override\n            protected ByteBuffer nextBuffer() throws IOException {\n                if (returned) {\n                    return null;\n                }\n                ByteBuffer result = ByteBuffer.allocate(3);\n                returned = true;\n                return result;\n            }\n        };\n        is.read();\n        is.read();\n        is.reset();\n        for (int i = 0; i < 3; i++) {\n            assertEquals(0, is.read());\n        }\n        assertEquals(-1, is.read());\n    }", "signature": "void testReset()", "full_signature": "@Test public void testReset()", "class_method_signature": "TestExtensibleBufferedInputStream.testReset()", "testcase": true, "constructor": false, "invocations": ["allocate", "read", "read", "reset", "assertEquals", "read", "assertEquals", "read"]}, "focal_class": {"identifier": "ExtensibleBufferedInputStream", "superclass": "extends InputStream", "interfaces": "", "fields": [{"original_string": "ByteBuffer buf;", "modifier": "", "type": "ByteBuffer", "declarator": "buf", "var_name": "buf"}], "methods": [{"identifier": "read", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int read()", "full_signature": "@Override public int read()", "class_method_signature": "ExtensibleBufferedInputStream.read()", "testcase": false, "constructor": false}, {"identifier": "ensureBytes", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean ensureBytes()", "full_signature": "private boolean ensureBytes()", "class_method_signature": "ExtensibleBufferedInputStream.ensureBytes()", "testcase": false, "constructor": false}, {"identifier": "nextBuffer", "parameters": "()", "modifiers": "protected abstract", "return": "ByteBuffer", "signature": "ByteBuffer nextBuffer()", "full_signature": "protected abstract ByteBuffer nextBuffer()", "class_method_signature": "ExtensibleBufferedInputStream.nextBuffer()", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(byte[] b, int off, int len)", "modifiers": "@Override public", "return": "int", "signature": "int read(byte[] b, int off, int len)", "full_signature": "@Override public int read(byte[] b, int off, int len)", "class_method_signature": "ExtensibleBufferedInputStream.read(byte[] b, int off, int len)", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "ExtensibleBufferedInputStream.reset()", "testcase": false, "constructor": false}, {"identifier": "getBuffer", "parameters": "()", "modifiers": "public", "return": "ByteBuffer", "signature": "ByteBuffer getBuffer()", "full_signature": "public ByteBuffer getBuffer()", "class_method_signature": "ExtensibleBufferedInputStream.getBuffer()", "testcase": false, "constructor": false}], "file": "engine/src/main/java/org/teiid/common/buffer/ExtensibleBufferedInputStream.java"}, "focal_method": {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void reset() throws IOException {\n        if (buf != null) {\n            buf.rewind();\n        }\n    }", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "ExtensibleBufferedInputStream.reset()", "testcase": false, "constructor": false, "invocations": ["rewind"]}, "repository": {"repo_id": 6092163, "url": "https://github.com/teiid/teiid", "stars": 191, "created": "10/5/2012 3:21:04 PM +00:00", "updates": "2020-01-27T20:57:36+00:00", "fork": "False", "license": "licensed"}}