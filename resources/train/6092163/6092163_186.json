{"test_class": {"identifier": "TestODataMetadataProcessor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ODataExecutionFactory translator;", "modifier": "private", "type": "ODataExecutionFactory", "declarator": "translator", "var_name": "translator"}], "file": "connectors/odata/translator-odata4/src/test/java/org/teiid/translator/odata4/TestODataMetadataProcessor.java"}, "test_case": {"identifier": "testFunctionReturnPrimitiveCollection", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFunctionReturnPrimitiveCollection() throws Exception {\n        CsdlReturnType returnType = new CsdlReturnType();\n        returnType.setType(\"Edm.String\");\n        returnType.setCollection(true);\n\n        MetadataFactory mf = functionMetadata(\"invoke\", returnType, null);\n        Procedure p = mf.getSchema().getProcedure(\"invoke\");\n        assertNotNull(p);\n        assertEquals(3, p.getParameters().size());\n        assertNull(p.getResultSet());\n        assertNotNull(getReturnParameter(p));\n        ProcedureParameter pp = getReturnParameter(p);\n        assertEquals(\"string[]\", pp.getRuntimeType());\n        ODataType type = ODataType.valueOf(p.getProperty(ODataMetadataProcessor.ODATA_TYPE, false));\n        assertEquals(ODataType.FUNCTION, type);\n    }", "signature": "void testFunctionReturnPrimitiveCollection()", "full_signature": "@Test public void testFunctionReturnPrimitiveCollection()", "class_method_signature": "TestODataMetadataProcessor.testFunctionReturnPrimitiveCollection()", "testcase": true, "constructor": false, "invocations": ["setType", "setCollection", "functionMetadata", "getProcedure", "getSchema", "assertNotNull", "assertEquals", "size", "getParameters", "assertNull", "getResultSet", "assertNotNull", "getReturnParameter", "getReturnParameter", "assertEquals", "getRuntimeType", "valueOf", "getProperty", "assertEquals"]}, "focal_class": {"identifier": "ODataMetadataProcessor", "superclass": "", "interfaces": "implements MetadataProcessor<WSConnection>", "fields": [{"original_string": "private static final String EDM_GEOMETRY = \"Edm.Geometry\";", "modifier": "private static final", "type": "String", "declarator": "EDM_GEOMETRY = \"Edm.Geometry\"", "var_name": "EDM_GEOMETRY"}, {"original_string": "private static final String EDM_GEOGRAPHY = \"Edm.Geography\";", "modifier": "private static final", "type": "String", "declarator": "EDM_GEOGRAPHY = \"Edm.Geography\"", "var_name": "EDM_GEOGRAPHY"}, {"original_string": "private static final String NAME_SEPARATOR = \"_\";", "modifier": "private static final", "type": "String", "declarator": "NAME_SEPARATOR = \"_\"", "var_name": "NAME_SEPARATOR"}, {"original_string": "@ExtensionMetadataProperty(applicable = { Table.class, Procedure.class },\n            datatype = String.class,\n            display = \"Name in OData Schema\",\n            description = \"Name in OData Schema\",\n            required = true)\n    public static final String NAME_IN_SCHEMA = MetadataFactory.ODATA_PREFIX+\"NameInSchema\";", "modifier": "@ExtensionMetadataProperty(applicable = { Table.class, Procedure.class },\n            datatype = String.class,\n            display = \"Name in OData Schema\",\n            description = \"Name in OData Schema\",\n            required = true)\n    public static final", "type": "String", "declarator": "NAME_IN_SCHEMA = MetadataFactory.ODATA_PREFIX+\"NameInSchema\"", "var_name": "NAME_IN_SCHEMA"}, {"original_string": "@ExtensionMetadataProperty(applicable = { Table.class, Procedure.class },\n            datatype = String.class,\n            display = \"OData Type\",\n            description = \"Type of OData Schema Item\",\n            allowed = \"COMPLEX, NAVIGATION, ENTITY, ENTITY_COLLECTION, ACTION, FUNCTION, COMPLEX_COLLECTION, NAVIGATION_COLLECTION\",\n            required=true)\n    public static final String ODATA_TYPE = MetadataFactory.ODATA_PREFIX+\"Type\";", "modifier": "@ExtensionMetadataProperty(applicable = { Table.class, Procedure.class },\n            datatype = String.class,\n            display = \"OData Type\",\n            description = \"Type of OData Schema Item\",\n            allowed = \"COMPLEX, NAVIGATION, ENTITY, ENTITY_COLLECTION, ACTION, FUNCTION, COMPLEX_COLLECTION, NAVIGATION_COLLECTION\",\n            required=true)\n    public static final", "type": "String", "declarator": "ODATA_TYPE = MetadataFactory.ODATA_PREFIX+\"Type\"", "var_name": "ODATA_TYPE"}, {"original_string": "@ExtensionMetadataProperty(applicable=Column.class,\n            datatype=String.class,\n            display=\"Pseudo Column\",\n            description=\"Pseudo column for join purposes\")\n    public static final String PSEUDO = MetadataFactory.ODATA_PREFIX+\"PSEUDO\";", "modifier": "@ExtensionMetadataProperty(applicable=Column.class,\n            datatype=String.class,\n            display=\"Pseudo Column\",\n            description=\"Pseudo column for join purposes\")\n    public static final", "type": "String", "declarator": "PSEUDO = MetadataFactory.ODATA_PREFIX+\"PSEUDO\"", "var_name": "PSEUDO"}, {"original_string": "private String schemaNamespace;", "modifier": "private", "type": "String", "declarator": "schemaNamespace", "var_name": "schemaNamespace"}, {"original_string": "private ODataExecutionFactory ef;", "modifier": "private", "type": "ODataExecutionFactory", "declarator": "ef", "var_name": "ef"}], "methods": [{"identifier": "setExecutionfactory", "parameters": "(ODataExecutionFactory ef)", "modifiers": "", "return": "void", "signature": "void setExecutionfactory(ODataExecutionFactory ef)", "full_signature": " void setExecutionfactory(ODataExecutionFactory ef)", "class_method_signature": "ODataMetadataProcessor.setExecutionfactory(ODataExecutionFactory ef)", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(MetadataFactory mf, WSConnection conn)", "modifiers": "@Override public", "return": "void", "signature": "void process(MetadataFactory mf, WSConnection conn)", "full_signature": "@Override public void process(MetadataFactory mf, WSConnection conn)", "class_method_signature": "ODataMetadataProcessor.process(MetadataFactory mf, WSConnection conn)", "testcase": false, "constructor": false}, {"identifier": "getSchema", "parameters": "(WSConnection conn)", "modifiers": "protected", "return": "XMLMetadata", "signature": "XMLMetadata getSchema(WSConnection conn)", "full_signature": "protected XMLMetadata getSchema(WSConnection conn)", "class_method_signature": "ODataMetadataProcessor.getSchema(WSConnection conn)", "testcase": false, "constructor": false}, {"identifier": "getMetadata", "parameters": "(MetadataFactory mf, XMLMetadata metadata)", "modifiers": "", "return": "void", "signature": "void getMetadata(MetadataFactory mf, XMLMetadata metadata)", "full_signature": " void getMetadata(MetadataFactory mf, XMLMetadata metadata)", "class_method_signature": "ODataMetadataProcessor.getMetadata(MetadataFactory mf, XMLMetadata metadata)", "testcase": false, "constructor": false}, {"identifier": "getDefaultSchema", "parameters": "(XMLMetadata metadata)", "modifiers": "private", "return": "CsdlSchema", "signature": "CsdlSchema getDefaultSchema(XMLMetadata metadata)", "full_signature": "private CsdlSchema getDefaultSchema(XMLMetadata metadata)", "class_method_signature": "ODataMetadataProcessor.getDefaultSchema(XMLMetadata metadata)", "testcase": false, "constructor": false}, {"identifier": "buildTable", "parameters": "(MetadataFactory mf, String name)", "modifiers": "private", "return": "Table", "signature": "Table buildTable(MetadataFactory mf, String name)", "full_signature": "private Table buildTable(MetadataFactory mf, String name)", "class_method_signature": "ODataMetadataProcessor.buildTable(MetadataFactory mf, String name)", "testcase": false, "constructor": false}, {"identifier": "isSimple", "parameters": "(String type)", "modifiers": "private", "return": "boolean", "signature": "boolean isSimple(String type)", "full_signature": "private boolean isSimple(String type)", "class_method_signature": "ODataMetadataProcessor.isSimple(String type)", "testcase": false, "constructor": false}, {"identifier": "isEnum", "parameters": "(XMLMetadata metadata, String type)", "modifiers": "private", "return": "boolean", "signature": "boolean isEnum(XMLMetadata metadata, String type)", "full_signature": "private boolean isEnum(XMLMetadata metadata, String type)", "class_method_signature": "ODataMetadataProcessor.isEnum(XMLMetadata metadata, String type)", "testcase": false, "constructor": false}, {"identifier": "isComplexType", "parameters": "(XMLMetadata metadata, String type)", "modifiers": "private", "return": "boolean", "signature": "boolean isComplexType(XMLMetadata metadata, String type)", "full_signature": "private boolean isComplexType(XMLMetadata metadata, String type)", "class_method_signature": "ODataMetadataProcessor.isComplexType(XMLMetadata metadata, String type)", "testcase": false, "constructor": false}, {"identifier": "isEntityType", "parameters": "(XMLMetadata metadata, String type)", "modifiers": "private", "return": "boolean", "signature": "boolean isEntityType(XMLMetadata metadata, String type)", "full_signature": "private boolean isEntityType(XMLMetadata metadata, String type)", "class_method_signature": "ODataMetadataProcessor.isEntityType(XMLMetadata metadata, String type)", "testcase": false, "constructor": false}, {"identifier": "addTable", "parameters": "(MetadataFactory mf, String tableName,\n            String entityType, ODataType odataType, XMLMetadata metadata)", "modifiers": "private", "return": "Table", "signature": "Table addTable(MetadataFactory mf, String tableName,\n            String entityType, ODataType odataType, XMLMetadata metadata)", "full_signature": "private Table addTable(MetadataFactory mf, String tableName,\n            String entityType, ODataType odataType, XMLMetadata metadata)", "class_method_signature": "ODataMetadataProcessor.addTable(MetadataFactory mf, String tableName,\n            String entityType, ODataType odataType, XMLMetadata metadata)", "testcase": false, "constructor": false}, {"identifier": "addEntityTypeProperties", "parameters": "(MetadataFactory mf,\n            XMLMetadata metadata, Table table, CsdlEntityType entityType)", "modifiers": "private", "return": "void", "signature": "void addEntityTypeProperties(MetadataFactory mf,\n            XMLMetadata metadata, Table table, CsdlEntityType entityType)", "full_signature": "private void addEntityTypeProperties(MetadataFactory mf,\n            XMLMetadata metadata, Table table, CsdlEntityType entityType)", "class_method_signature": "ODataMetadataProcessor.addEntityTypeProperties(MetadataFactory mf,\n            XMLMetadata metadata, Table table, CsdlEntityType entityType)", "testcase": false, "constructor": false}, {"identifier": "addProperty", "parameters": "(MetadataFactory mf, XMLMetadata metadata,\n            Table table, CsdlProperty property)", "modifiers": "private", "return": "boolean", "signature": "boolean addProperty(MetadataFactory mf, XMLMetadata metadata,\n            Table table, CsdlProperty property)", "full_signature": "private boolean addProperty(MetadataFactory mf, XMLMetadata metadata,\n            Table table, CsdlProperty property)", "class_method_signature": "ODataMetadataProcessor.addProperty(MetadataFactory mf, XMLMetadata metadata,\n            Table table, CsdlProperty property)", "testcase": false, "constructor": false}, {"identifier": "isPseudo", "parameters": "(Column column)", "modifiers": "static", "return": "boolean", "signature": "boolean isPseudo(Column column)", "full_signature": "static boolean isPseudo(Column column)", "class_method_signature": "ODataMetadataProcessor.isPseudo(Column column)", "testcase": false, "constructor": false}, {"identifier": "isComplexType", "parameters": "(Table table)", "modifiers": "static", "return": "boolean", "signature": "boolean isComplexType(Table table)", "full_signature": "static boolean isComplexType(Table table)", "class_method_signature": "ODataMetadataProcessor.isComplexType(Table table)", "testcase": false, "constructor": false}, {"identifier": "isNavigationType", "parameters": "(Table table)", "modifiers": "static", "return": "boolean", "signature": "boolean isNavigationType(Table table)", "full_signature": "static boolean isNavigationType(Table table)", "class_method_signature": "ODataMetadataProcessor.isNavigationType(Table table)", "testcase": false, "constructor": false}, {"identifier": "isCollection", "parameters": "(Table table)", "modifiers": "static", "return": "boolean", "signature": "boolean isCollection(Table table)", "full_signature": "static boolean isCollection(Table table)", "class_method_signature": "ODataMetadataProcessor.isCollection(Table table)", "testcase": false, "constructor": false}, {"identifier": "isEntitySet", "parameters": "(Table table)", "modifiers": "static", "return": "boolean", "signature": "boolean isEntitySet(Table table)", "full_signature": "static boolean isEntitySet(Table table)", "class_method_signature": "ODataMetadataProcessor.isEntitySet(Table table)", "testcase": false, "constructor": false}, {"identifier": "getNativeType", "parameters": "(Column column)", "modifiers": "static", "return": "String", "signature": "String getNativeType(Column column)", "full_signature": "static String getNativeType(Column column)", "class_method_signature": "ODataMetadataProcessor.getNativeType(Column column)", "testcase": false, "constructor": false}, {"identifier": "addComplexPropertyAsTable", "parameters": "(MetadataFactory mf, CsdlProperty parentProperty,\n            CsdlComplexType complexType, XMLMetadata metadata, Table parentTable)", "modifiers": "private", "return": "void", "signature": "void addComplexPropertyAsTable(MetadataFactory mf, CsdlProperty parentProperty,\n            CsdlComplexType complexType, XMLMetadata metadata, Table parentTable)", "full_signature": "private void addComplexPropertyAsTable(MetadataFactory mf, CsdlProperty parentProperty,\n            CsdlComplexType complexType, XMLMetadata metadata, Table parentTable)", "class_method_signature": "ODataMetadataProcessor.addComplexPropertyAsTable(MetadataFactory mf, CsdlProperty parentProperty,\n            CsdlComplexType complexType, XMLMetadata metadata, Table parentTable)", "testcase": false, "constructor": false}, {"identifier": "addPrimaryKey", "parameters": "(MetadataFactory mf, XMLMetadata metadata, Table table, CsdlEntityType entityType)", "modifiers": "", "return": "void", "signature": "void addPrimaryKey(MetadataFactory mf, XMLMetadata metadata, Table table, CsdlEntityType entityType)", "full_signature": " void addPrimaryKey(MetadataFactory mf, XMLMetadata metadata, Table table, CsdlEntityType entityType)", "class_method_signature": "ODataMetadataProcessor.addPrimaryKey(MetadataFactory mf, XMLMetadata metadata, Table table, CsdlEntityType entityType)", "testcase": false, "constructor": false}, {"identifier": "getNavigationPropertyBinding", "parameters": "(CsdlBindingTarget entitySet, String name)", "modifiers": "private", "return": "CsdlNavigationPropertyBinding", "signature": "CsdlNavigationPropertyBinding getNavigationPropertyBinding(CsdlBindingTarget entitySet, String name)", "full_signature": "private CsdlNavigationPropertyBinding getNavigationPropertyBinding(CsdlBindingTarget entitySet, String name)", "class_method_signature": "ODataMetadataProcessor.getNavigationPropertyBinding(CsdlBindingTarget entitySet, String name)", "testcase": false, "constructor": false}, {"identifier": "getEntityType", "parameters": "(XMLMetadata metadata, String name)", "modifiers": "private", "return": "CsdlEntityType", "signature": "CsdlEntityType getEntityType(XMLMetadata metadata, String name)", "full_signature": "private CsdlEntityType getEntityType(XMLMetadata metadata, String name)", "class_method_signature": "ODataMetadataProcessor.getEntityType(XMLMetadata metadata, String name)", "testcase": false, "constructor": false}, {"identifier": "getFunctions", "parameters": "(XMLMetadata metadata, String name)", "modifiers": "private", "return": "List<CsdlFunction>", "signature": "List<CsdlFunction> getFunctions(XMLMetadata metadata, String name)", "full_signature": "private List<CsdlFunction> getFunctions(XMLMetadata metadata, String name)", "class_method_signature": "ODataMetadataProcessor.getFunctions(XMLMetadata metadata, String name)", "testcase": false, "constructor": false}, {"identifier": "getActions", "parameters": "(XMLMetadata metadata, String name)", "modifiers": "private", "return": "List<CsdlAction>", "signature": "List<CsdlAction> getActions(XMLMetadata metadata, String name)", "full_signature": "private List<CsdlAction> getActions(XMLMetadata metadata, String name)", "class_method_signature": "ODataMetadataProcessor.getActions(XMLMetadata metadata, String name)", "testcase": false, "constructor": false}, {"identifier": "getComplexType", "parameters": "(XMLMetadata metadata, String name)", "modifiers": "private", "return": "CsdlComplexType", "signature": "CsdlComplexType getComplexType(XMLMetadata metadata, String name)", "full_signature": "private CsdlComplexType getComplexType(XMLMetadata metadata, String name)", "class_method_signature": "ODataMetadataProcessor.getComplexType(XMLMetadata metadata, String name)", "testcase": false, "constructor": false}, {"identifier": "getEnumType", "parameters": "(XMLMetadata metadata, String name)", "modifiers": "private", "return": "CsdlEnumType", "signature": "CsdlEnumType getEnumType(XMLMetadata metadata, String name)", "full_signature": "private CsdlEnumType getEnumType(XMLMetadata metadata, String name)", "class_method_signature": "ODataMetadataProcessor.getEnumType(XMLMetadata metadata, String name)", "testcase": false, "constructor": false}, {"identifier": "addNavigationProperties", "parameters": "(MetadataFactory mf, String tableName,\n            CsdlBindingTarget entitySet, XMLMetadata metadata, CsdlEntityContainer container)", "modifiers": "", "return": "void", "signature": "void addNavigationProperties(MetadataFactory mf, String tableName,\n            CsdlBindingTarget entitySet, XMLMetadata metadata, CsdlEntityContainer container)", "full_signature": " void addNavigationProperties(MetadataFactory mf, String tableName,\n            CsdlBindingTarget entitySet, XMLMetadata metadata, CsdlEntityContainer container)", "class_method_signature": "ODataMetadataProcessor.addNavigationProperties(MetadataFactory mf, String tableName,\n            CsdlBindingTarget entitySet, XMLMetadata metadata, CsdlEntityContainer container)", "testcase": false, "constructor": false}, {"identifier": "addImplicitFk", "parameters": "(MetadataFactory mf, Table fromTable,\n            CsdlNavigationProperty property, Table toTable,\n            List<String> columnNames, List<String> referenceColumnNames)", "modifiers": "private", "return": "void", "signature": "void addImplicitFk(MetadataFactory mf, Table fromTable,\n            CsdlNavigationProperty property, Table toTable,\n            List<String> columnNames, List<String> referenceColumnNames)", "full_signature": "private void addImplicitFk(MetadataFactory mf, Table fromTable,\n            CsdlNavigationProperty property, Table toTable,\n            List<String> columnNames, List<String> referenceColumnNames)", "class_method_signature": "ODataMetadataProcessor.addImplicitFk(MetadataFactory mf, Table fromTable,\n            CsdlNavigationProperty property, Table toTable,\n            List<String> columnNames, List<String> referenceColumnNames)", "testcase": false, "constructor": false}, {"identifier": "hasReverseNavigation", "parameters": "(MetadataFactory mf, XMLMetadata metadata,\n            CsdlEntityContainer container, Table fromTable,\n            CsdlNavigationProperty property,\n            CsdlNavigationPropertyBinding binding, Table toTable)", "modifiers": "private", "return": "boolean", "signature": "boolean hasReverseNavigation(MetadataFactory mf, XMLMetadata metadata,\n            CsdlEntityContainer container, Table fromTable,\n            CsdlNavigationProperty property,\n            CsdlNavigationPropertyBinding binding, Table toTable)", "full_signature": "private boolean hasReverseNavigation(MetadataFactory mf, XMLMetadata metadata,\n            CsdlEntityContainer container, Table fromTable,\n            CsdlNavigationProperty property,\n            CsdlNavigationPropertyBinding binding, Table toTable)", "class_method_signature": "ODataMetadataProcessor.hasReverseNavigation(MetadataFactory mf, XMLMetadata metadata,\n            CsdlEntityContainer container, Table fromTable,\n            CsdlNavigationProperty property,\n            CsdlNavigationPropertyBinding binding, Table toTable)", "testcase": false, "constructor": false}, {"identifier": "addNavigationAsTable", "parameters": "(MetadataFactory mf, XMLMetadata metadata, Table fromTable,\n            CsdlNavigationProperty property)", "modifiers": "private", "return": "Table", "signature": "Table addNavigationAsTable(MetadataFactory mf, XMLMetadata metadata, Table fromTable,\n            CsdlNavigationProperty property)", "full_signature": "private Table addNavigationAsTable(MetadataFactory mf, XMLMetadata metadata, Table fromTable,\n            CsdlNavigationProperty property)", "class_method_signature": "ODataMetadataProcessor.addNavigationAsTable(MetadataFactory mf, XMLMetadata metadata, Table fromTable,\n            CsdlNavigationProperty property)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(String... records)", "modifiers": "static", "return": "String", "signature": "String join(String... records)", "full_signature": "static String join(String... records)", "class_method_signature": "ODataMetadataProcessor.join(String... records)", "testcase": false, "constructor": false}, {"identifier": "same", "parameters": "(Table x, Table y)", "modifiers": "", "return": "boolean", "signature": "boolean same(Table x, Table y)", "full_signature": " boolean same(Table x, Table y)", "class_method_signature": "ODataMetadataProcessor.same(Table x, Table y)", "testcase": false, "constructor": false}, {"identifier": "addPropertyAsColumn", "parameters": "(MetadataFactory mf, Table table,\n            CsdlProperty property)", "modifiers": "private", "return": "Column", "signature": "Column addPropertyAsColumn(MetadataFactory mf, Table table,\n            CsdlProperty property)", "full_signature": "private Column addPropertyAsColumn(MetadataFactory mf, Table table,\n            CsdlProperty property)", "class_method_signature": "ODataMetadataProcessor.addPropertyAsColumn(MetadataFactory mf, Table table,\n            CsdlProperty property)", "testcase": false, "constructor": false}, {"identifier": "addColumn", "parameters": "(MetadataFactory mf, Table table, Column property, String newName)", "modifiers": "private", "return": "Column", "signature": "Column addColumn(MetadataFactory mf, Table table, Column property, String newName)", "full_signature": "private Column addColumn(MetadataFactory mf, Table table, Column property, String newName)", "class_method_signature": "ODataMetadataProcessor.addColumn(MetadataFactory mf, Table table, Column property, String newName)", "testcase": false, "constructor": false}, {"identifier": "addParameterAsColumn", "parameters": "(MetadataFactory mf,\n            Procedure procedure, CsdlParameter parameter)", "modifiers": "private", "return": "ProcedureParameter", "signature": "ProcedureParameter addParameterAsColumn(MetadataFactory mf,\n            Procedure procedure, CsdlParameter parameter)", "full_signature": "private ProcedureParameter addParameterAsColumn(MetadataFactory mf,\n            Procedure procedure, CsdlParameter parameter)", "class_method_signature": "ODataMetadataProcessor.addParameterAsColumn(MetadataFactory mf,\n            Procedure procedure, CsdlParameter parameter)", "testcase": false, "constructor": false}, {"identifier": "buildColumn", "parameters": "(MetadataFactory mf, Table table, CsdlProperty property)", "modifiers": "private", "return": "Column", "signature": "Column buildColumn(MetadataFactory mf, Table table, CsdlProperty property)", "full_signature": "private Column buildColumn(MetadataFactory mf, Table table, CsdlProperty property)", "class_method_signature": "ODataMetadataProcessor.buildColumn(MetadataFactory mf, Table table, CsdlProperty property)", "testcase": false, "constructor": false}, {"identifier": "handleGeometryTypes", "parameters": "(SRID srid, String type, BaseColumn c)", "modifiers": "private", "return": "void", "signature": "void handleGeometryTypes(SRID srid, String type, BaseColumn c)", "full_signature": "private void handleGeometryTypes(SRID srid, String type, BaseColumn c)", "class_method_signature": "ODataMetadataProcessor.handleGeometryTypes(SRID srid, String type, BaseColumn c)", "testcase": false, "constructor": false}, {"identifier": "addParameter", "parameters": "(MetadataFactory mf, XMLMetadata metadata,\n            Procedure procedure, CsdlParameter parameter)", "modifiers": "private", "return": "void", "signature": "void addParameter(MetadataFactory mf, XMLMetadata metadata,\n            Procedure procedure, CsdlParameter parameter)", "full_signature": "private void addParameter(MetadataFactory mf, XMLMetadata metadata,\n            Procedure procedure, CsdlParameter parameter)", "class_method_signature": "ODataMetadataProcessor.addParameter(MetadataFactory mf, XMLMetadata metadata,\n            Procedure procedure, CsdlParameter parameter)", "testcase": false, "constructor": false}, {"identifier": "addFunctionImportAsProcedure", "parameters": "(MetadataFactory mf,\n            CsdlFunctionImport functionImport, ODataType odataType, XMLMetadata metadata)", "modifiers": "", "return": "void", "signature": "void addFunctionImportAsProcedure(MetadataFactory mf,\n            CsdlFunctionImport functionImport, ODataType odataType, XMLMetadata metadata)", "full_signature": " void addFunctionImportAsProcedure(MetadataFactory mf,\n            CsdlFunctionImport functionImport, ODataType odataType, XMLMetadata metadata)", "class_method_signature": "ODataMetadataProcessor.addFunctionImportAsProcedure(MetadataFactory mf,\n            CsdlFunctionImport functionImport, ODataType odataType, XMLMetadata metadata)", "testcase": false, "constructor": false}, {"identifier": "addProcedureTableReturn", "parameters": "(MetadataFactory mf, XMLMetadata metadata, Procedure procedure,\n            CsdlComplexType type, String namePrefix)", "modifiers": "private", "return": "void", "signature": "void addProcedureTableReturn(MetadataFactory mf, XMLMetadata metadata, Procedure procedure,\n            CsdlComplexType type, String namePrefix)", "full_signature": "private void addProcedureTableReturn(MetadataFactory mf, XMLMetadata metadata, Procedure procedure,\n            CsdlComplexType type, String namePrefix)", "class_method_signature": "ODataMetadataProcessor.addProcedureTableReturn(MetadataFactory mf, XMLMetadata metadata, Procedure procedure,\n            CsdlComplexType type, String namePrefix)", "testcase": false, "constructor": false}, {"identifier": "addProcedureTableReturn", "parameters": "(MetadataFactory mf, XMLMetadata metadata, Procedure procedure,\n            CsdlEntityType type, String namePrefix)", "modifiers": "private", "return": "void", "signature": "void addProcedureTableReturn(MetadataFactory mf, XMLMetadata metadata, Procedure procedure,\n            CsdlEntityType type, String namePrefix)", "full_signature": "private void addProcedureTableReturn(MetadataFactory mf, XMLMetadata metadata, Procedure procedure,\n            CsdlEntityType type, String namePrefix)", "class_method_signature": "ODataMetadataProcessor.addProcedureTableReturn(MetadataFactory mf, XMLMetadata metadata, Procedure procedure,\n            CsdlEntityType type, String namePrefix)", "testcase": false, "constructor": false}, {"identifier": "addActionImportAsProcedure", "parameters": "(MetadataFactory mf, CsdlActionImport actionImport,\n            ODataType odataType, XMLMetadata metadata)", "modifiers": "private", "return": "void", "signature": "void addActionImportAsProcedure(MetadataFactory mf, CsdlActionImport actionImport,\n            ODataType odataType, XMLMetadata metadata)", "full_signature": "private void addActionImportAsProcedure(MetadataFactory mf, CsdlActionImport actionImport,\n            ODataType odataType, XMLMetadata metadata)", "class_method_signature": "ODataMetadataProcessor.addActionImportAsProcedure(MetadataFactory mf, CsdlActionImport actionImport,\n            ODataType odataType, XMLMetadata metadata)", "testcase": false, "constructor": false}, {"identifier": "hasComplexParameters", "parameters": "(List<CsdlParameter> parameters)", "modifiers": "private", "return": "boolean", "signature": "boolean hasComplexParameters(List<CsdlParameter> parameters)", "full_signature": "private boolean hasComplexParameters(List<CsdlParameter> parameters)", "class_method_signature": "ODataMetadataProcessor.hasComplexParameters(List<CsdlParameter> parameters)", "testcase": false, "constructor": false}, {"identifier": "addOperation", "parameters": "(MetadataFactory mf, XMLMetadata metadata, ODataType odataType,\n            CsdlOperation function, Procedure procedure)", "modifiers": "private", "return": "void", "signature": "void addOperation(MetadataFactory mf, XMLMetadata metadata, ODataType odataType,\n            CsdlOperation function, Procedure procedure)", "full_signature": "private void addOperation(MetadataFactory mf, XMLMetadata metadata, ODataType odataType,\n            CsdlOperation function, Procedure procedure)", "class_method_signature": "ODataMetadataProcessor.addOperation(MetadataFactory mf, XMLMetadata metadata, ODataType odataType,\n            CsdlOperation function, Procedure procedure)", "testcase": false, "constructor": false}, {"identifier": "setSchemaNamespace", "parameters": "(String namespace)", "modifiers": "public", "return": "void", "signature": "void setSchemaNamespace(String namespace)", "full_signature": "public void setSchemaNamespace(String namespace)", "class_method_signature": "ODataMetadataProcessor.setSchemaNamespace(String namespace)", "testcase": false, "constructor": false}, {"identifier": "getColumnNames", "parameters": "(List<Column> columns)", "modifiers": "", "return": "List<String>", "signature": "List<String> getColumnNames(List<Column> columns)", "full_signature": " List<String> getColumnNames(List<Column> columns)", "class_method_signature": "ODataMetadataProcessor.getColumnNames(List<Column> columns)", "testcase": false, "constructor": false}, {"identifier": "getPKorUnique", "parameters": "(Table table)", "modifiers": "", "return": "KeyRecord", "signature": "KeyRecord getPKorUnique(Table table)", "full_signature": " KeyRecord getPKorUnique(Table table)", "class_method_signature": "ODataMetadataProcessor.getPKorUnique(Table table)", "testcase": false, "constructor": false}, {"identifier": "getComplexTableParentTable", "parameters": "(RuntimeMetadata metadata, Table table)", "modifiers": "static", "return": "Table", "signature": "Table getComplexTableParentTable(RuntimeMetadata metadata, Table table)", "full_signature": "static Table getComplexTableParentTable(RuntimeMetadata metadata, Table table)", "class_method_signature": "ODataMetadataProcessor.getComplexTableParentTable(RuntimeMetadata metadata, Table table)", "testcase": false, "constructor": false}, {"identifier": "normalizePseudoColumn", "parameters": "(RuntimeMetadata metadata, Column column)", "modifiers": "static", "return": "Column", "signature": "Column normalizePseudoColumn(RuntimeMetadata metadata, Column column)", "full_signature": "static Column normalizePseudoColumn(RuntimeMetadata metadata, Column column)", "class_method_signature": "ODataMetadataProcessor.normalizePseudoColumn(RuntimeMetadata metadata, Column column)", "testcase": false, "constructor": false}, {"identifier": "getSchemaNamespace", "parameters": "()", "modifiers": "@TranslatorProperty(display=\"Schema Namespace\", category=PropertyType.IMPORT, description=\"Namespace of the schema to import\") public", "return": "String", "signature": "String getSchemaNamespace()", "full_signature": "@TranslatorProperty(display=\"Schema Namespace\", category=PropertyType.IMPORT, description=\"Namespace of the schema to import\") public String getSchemaNamespace()", "class_method_signature": "ODataMetadataProcessor.getSchemaNamespace()", "testcase": false, "constructor": false}], "file": "connectors/odata/translator-odata4/src/main/java/org/teiid/translator/odata4/ODataMetadataProcessor.java"}, "focal_method": {"identifier": "getSchema", "parameters": "(WSConnection conn)", "modifiers": "protected", "return": "XMLMetadata", "body": "protected XMLMetadata getSchema(WSConnection conn) throws TranslatorException {\n        if (this.ef != null) {\n            return this.ef.getSchema(conn);\n        }\n        return null;\n    }", "signature": "XMLMetadata getSchema(WSConnection conn)", "full_signature": "protected XMLMetadata getSchema(WSConnection conn)", "class_method_signature": "ODataMetadataProcessor.getSchema(WSConnection conn)", "testcase": false, "constructor": false, "invocations": ["getSchema"]}, "repository": {"repo_id": 6092163, "url": "https://github.com/teiid/teiid", "stars": 191, "created": "10/5/2012 3:21:04 PM +00:00", "updates": "2020-01-27T20:57:36+00:00", "fork": "False", "license": "licensed"}}