{"test_class": {"identifier": "CalendarUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "taskun-scheduler/src/test/java/com/github/seratch/taskun/util/CalendarUtilTest.java"}, "test_case": {"identifier": "getCalendar_A", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getCalendar_A$long() throws Exception {\n        long arg0 = 12345L;\n        Calendar actual = CalendarUtil.getCalendar(arg0);\n        assertEquals(arg0, actual.getTimeInMillis());\n    }", "signature": "void getCalendar_A()", "full_signature": "@Test public void getCalendar_A()", "class_method_signature": "CalendarUtilTest.getCalendar_A()", "testcase": true, "constructor": false, "invocations": ["getCalendar", "assertEquals", "getTimeInMillis"]}, "focal_class": {"identifier": "CalendarUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static Logger log = Logger.getLogger(CalendarUtil.class.getCanonicalName());", "modifier": "protected static", "type": "Logger", "declarator": "log = Logger.getLogger(CalendarUtil.class.getCanonicalName())", "var_name": "log"}, {"original_string": "public static Calendar testData;", "modifier": "public static", "type": "Calendar", "declarator": "testData", "var_name": "testData"}], "methods": [{"identifier": "getCurrentTime", "parameters": "()", "modifiers": "public static", "return": "Calendar", "signature": "Calendar getCurrentTime()", "full_signature": "public static Calendar getCurrentTime()", "class_method_signature": "CalendarUtil.getCurrentTime()", "testcase": false, "constructor": false}, {"identifier": "getCurrentTruncDate", "parameters": "()", "modifiers": "public static", "return": "Calendar", "signature": "Calendar getCurrentTruncDate()", "full_signature": "public static Calendar getCurrentTruncDate()", "class_method_signature": "CalendarUtil.getCurrentTruncDate()", "testcase": false, "constructor": false}, {"identifier": "getYear", "parameters": "(Calendar calendar)", "modifiers": "public static", "return": "Integer", "signature": "Integer getYear(Calendar calendar)", "full_signature": "public static Integer getYear(Calendar calendar)", "class_method_signature": "CalendarUtil.getYear(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "getMonth", "parameters": "(Calendar calendar)", "modifiers": "public static", "return": "Integer", "signature": "Integer getMonth(Calendar calendar)", "full_signature": "public static Integer getMonth(Calendar calendar)", "class_method_signature": "CalendarUtil.getMonth(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "getDay", "parameters": "(Calendar calendar)", "modifiers": "public static", "return": "Integer", "signature": "Integer getDay(Calendar calendar)", "full_signature": "public static Integer getDay(Calendar calendar)", "class_method_signature": "CalendarUtil.getDay(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "getDayOfWeekNumber", "parameters": "(Calendar cal)", "modifiers": "public static", "return": "Integer", "signature": "Integer getDayOfWeekNumber(Calendar cal)", "full_signature": "public static Integer getDayOfWeekNumber(Calendar cal)", "class_method_signature": "CalendarUtil.getDayOfWeekNumber(Calendar cal)", "testcase": false, "constructor": false}, {"identifier": "get24Hour", "parameters": "(Calendar calendar)", "modifiers": "public static", "return": "Integer", "signature": "Integer get24Hour(Calendar calendar)", "full_signature": "public static Integer get24Hour(Calendar calendar)", "class_method_signature": "CalendarUtil.get24Hour(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "getMinute", "parameters": "(Calendar calendar)", "modifiers": "public static", "return": "Integer", "signature": "Integer getMinute(Calendar calendar)", "full_signature": "public static Integer getMinute(Calendar calendar)", "class_method_signature": "CalendarUtil.getMinute(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "getSecond", "parameters": "(Calendar calendar)", "modifiers": "public static", "return": "Integer", "signature": "Integer getSecond(Calendar calendar)", "full_signature": "public static Integer getSecond(Calendar calendar)", "class_method_signature": "CalendarUtil.getSecond(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "getMillisecond", "parameters": "(Calendar calendar)", "modifiers": "public static", "return": "Integer", "signature": "Integer getMillisecond(Calendar calendar)", "full_signature": "public static Integer getMillisecond(Calendar calendar)", "class_method_signature": "CalendarUtil.getMillisecond(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "getCalendar", "parameters": "(String yyyy, String mm, String dd)", "modifiers": "public static", "return": "Calendar", "signature": "Calendar getCalendar(String yyyy, String mm, String dd)", "full_signature": "public static Calendar getCalendar(String yyyy, String mm, String dd)", "class_method_signature": "CalendarUtil.getCalendar(String yyyy, String mm, String dd)", "testcase": false, "constructor": false}, {"identifier": "getCalendar", "parameters": "(int yyyy, int mm, int dd)", "modifiers": "public static", "return": "Calendar", "signature": "Calendar getCalendar(int yyyy, int mm, int dd)", "full_signature": "public static Calendar getCalendar(int yyyy, int mm, int dd)", "class_method_signature": "CalendarUtil.getCalendar(int yyyy, int mm, int dd)", "testcase": false, "constructor": false}, {"identifier": "getCalendar", "parameters": "(String yyyy, String mm, String dd, String hh, String mi, String ss)", "modifiers": "public static", "return": "Calendar", "signature": "Calendar getCalendar(String yyyy, String mm, String dd, String hh, String mi, String ss)", "full_signature": "public static Calendar getCalendar(String yyyy, String mm, String dd, String hh, String mi, String ss)", "class_method_signature": "CalendarUtil.getCalendar(String yyyy, String mm, String dd, String hh, String mi, String ss)", "testcase": false, "constructor": false}, {"identifier": "getCalendar", "parameters": "(int yyyy, int mm, int dd, int hh, int mi, int ss)", "modifiers": "public static", "return": "Calendar", "signature": "Calendar getCalendar(int yyyy, int mm, int dd, int hh, int mi, int ss)", "full_signature": "public static Calendar getCalendar(int yyyy, int mm, int dd, int hh, int mi, int ss)", "class_method_signature": "CalendarUtil.getCalendar(int yyyy, int mm, int dd, int hh, int mi, int ss)", "testcase": false, "constructor": false}, {"identifier": "dateTrunc", "parameters": "(Calendar calendar)", "modifiers": "public static", "return": "Calendar", "signature": "Calendar dateTrunc(Calendar calendar)", "full_signature": "public static Calendar dateTrunc(Calendar calendar)", "class_method_signature": "CalendarUtil.dateTrunc(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "isFirstAfterSecond", "parameters": "(Calendar first, Calendar second)", "modifiers": "public static", "return": "boolean", "signature": "boolean isFirstAfterSecond(Calendar first, Calendar second)", "full_signature": "public static boolean isFirstAfterSecond(Calendar first, Calendar second)", "class_method_signature": "CalendarUtil.isFirstAfterSecond(Calendar first, Calendar second)", "testcase": false, "constructor": false}, {"identifier": "deepCopy", "parameters": "(Calendar src)", "modifiers": "public static", "return": "Calendar", "signature": "Calendar deepCopy(Calendar src)", "full_signature": "public static Calendar deepCopy(Calendar src)", "class_method_signature": "CalendarUtil.deepCopy(Calendar src)", "testcase": false, "constructor": false}, {"identifier": "addYears", "parameters": "(Calendar src, int years)", "modifiers": "public static", "return": "Calendar", "signature": "Calendar addYears(Calendar src, int years)", "full_signature": "public static Calendar addYears(Calendar src, int years)", "class_method_signature": "CalendarUtil.addYears(Calendar src, int years)", "testcase": false, "constructor": false}, {"identifier": "addMonths", "parameters": "(Calendar src, int months)", "modifiers": "public static", "return": "Calendar", "signature": "Calendar addMonths(Calendar src, int months)", "full_signature": "public static Calendar addMonths(Calendar src, int months)", "class_method_signature": "CalendarUtil.addMonths(Calendar src, int months)", "testcase": false, "constructor": false}, {"identifier": "addDays", "parameters": "(Calendar src, int days)", "modifiers": "public static", "return": "Calendar", "signature": "Calendar addDays(Calendar src, int days)", "full_signature": "public static Calendar addDays(Calendar src, int days)", "class_method_signature": "CalendarUtil.addDays(Calendar src, int days)", "testcase": false, "constructor": false}, {"identifier": "addHours", "parameters": "(Calendar src, int hours)", "modifiers": "public static", "return": "Calendar", "signature": "Calendar addHours(Calendar src, int hours)", "full_signature": "public static Calendar addHours(Calendar src, int hours)", "class_method_signature": "CalendarUtil.addHours(Calendar src, int hours)", "testcase": false, "constructor": false}, {"identifier": "addMinutes", "parameters": "(Calendar src, int minutes)", "modifiers": "public static", "return": "Calendar", "signature": "Calendar addMinutes(Calendar src, int minutes)", "full_signature": "public static Calendar addMinutes(Calendar src, int minutes)", "class_method_signature": "CalendarUtil.addMinutes(Calendar src, int minutes)", "testcase": false, "constructor": false}, {"identifier": "addSeconds", "parameters": "(Calendar src, int seconds)", "modifiers": "public static", "return": "Calendar", "signature": "Calendar addSeconds(Calendar src, int seconds)", "full_signature": "public static Calendar addSeconds(Calendar src, int seconds)", "class_method_signature": "CalendarUtil.addSeconds(Calendar src, int seconds)", "testcase": false, "constructor": false}, {"identifier": "getCalendar", "parameters": "(long timeInMillis)", "modifiers": "public static", "return": "Calendar", "signature": "Calendar getCalendar(long timeInMillis)", "full_signature": "public static Calendar getCalendar(long timeInMillis)", "class_method_signature": "CalendarUtil.getCalendar(long timeInMillis)", "testcase": false, "constructor": false}, {"identifier": "toYYYYMMDDHHMISS", "parameters": "(Calendar calendar)", "modifiers": "public static", "return": "String", "signature": "String toYYYYMMDDHHMISS(Calendar calendar)", "full_signature": "public static String toYYYYMMDDHHMISS(Calendar calendar)", "class_method_signature": "CalendarUtil.toYYYYMMDDHHMISS(Calendar calendar)", "testcase": false, "constructor": false}], "file": "taskun-scheduler/src/main/java/com/github/seratch/taskun/util/CalendarUtil.java"}, "focal_method": {"identifier": "getCalendar", "parameters": "(String yyyy, String mm, String dd)", "modifiers": "public static", "return": "Calendar", "body": "public static Calendar getCalendar(String yyyy, String mm, String dd) {\n        Calendar cal = Calendar.getInstance();\n        cal.set(Calendar.YEAR, Integer.valueOf(yyyy));\n        cal.set(Calendar.MONTH, Integer.valueOf(mm) - 1);\n        cal.set(Calendar.DATE, Integer.valueOf(dd));\n        cal.set(Calendar.HOUR_OF_DAY, 0);\n        cal.set(Calendar.MINUTE, 0);\n        cal.set(Calendar.SECOND, 0);\n        cal.set(Calendar.MILLISECOND, 0);\n        return cal;\n    }", "signature": "Calendar getCalendar(String yyyy, String mm, String dd)", "full_signature": "public static Calendar getCalendar(String yyyy, String mm, String dd)", "class_method_signature": "CalendarUtil.getCalendar(String yyyy, String mm, String dd)", "testcase": false, "constructor": false, "invocations": ["getInstance", "set", "valueOf", "set", "valueOf", "set", "valueOf", "set", "set", "set", "set"]}, "repository": {"repo_id": 1557148, "url": "https://github.com/seratch/taskun", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 3917, "license": "licensed"}}