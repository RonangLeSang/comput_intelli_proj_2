{"test_class": {"identifier": "CrontabParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "CrontabParser parser = new CrontabParser(TaskunLogUtilLoggerImpl.class);", "modifier": "", "type": "CrontabParser", "declarator": "parser = new CrontabParser(TaskunLogUtilLoggerImpl.class)", "var_name": "parser"}], "file": "taskun-scheduler/src/test/java/com/github/seratch/taskun/scheduler/crond/CrontabParserTest.java"}, "test_case": {"identifier": "getFixedNextInvocationValue_A", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getFixedNextInvocationValue_A$int$List() throws Exception {\n        int arg0 = 0;\n        final List<Integer> arg1 = new ArrayList<Integer>();\n        arg1.add(1);\n        int actual = parser.getFixedNextInvocationValue(arg0, arg1);\n        int expected = 1;\n        assertEquals(expected, actual);\n    }", "signature": "void getFixedNextInvocationValue_A()", "full_signature": "@Test public void getFixedNextInvocationValue_A()", "class_method_signature": "CrontabParserTest.getFixedNextInvocationValue_A()", "testcase": true, "constructor": false, "invocations": ["add", "getFixedNextInvocationValue", "assertEquals"]}, "focal_class": {"identifier": "CrontabParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Class<? extends TaskunLog> logImplClass = TaskunLogUtilLoggerImpl.class;", "modifier": "private", "type": "Class<? extends TaskunLog>", "declarator": "logImplClass = TaskunLogUtilLoggerImpl.class", "var_name": "logImplClass"}, {"original_string": "private TaskunLog taskunLog = getLog(CronInvocation.class.getCanonicalName());", "modifier": "private", "type": "TaskunLog", "declarator": "taskunLog = getLog(CronInvocation.class.getCanonicalName())", "var_name": "taskunLog"}], "methods": [{"identifier": "CrontabParser", "parameters": "(Class<? extends TaskunLog> logImplClass)", "modifiers": "public", "return": "", "signature": " CrontabParser(Class<? extends TaskunLog> logImplClass)", "full_signature": "public  CrontabParser(Class<? extends TaskunLog> logImplClass)", "class_method_signature": "CrontabParser.CrontabParser(Class<? extends TaskunLog> logImplClass)", "testcase": false, "constructor": true}, {"identifier": "getLog", "parameters": "()", "modifiers": "", "return": "TaskunLog", "signature": "TaskunLog getLog()", "full_signature": " TaskunLog getLog()", "class_method_signature": "CrontabParser.getLog()", "testcase": false, "constructor": false}, {"identifier": "getLog", "parameters": "(String name)", "modifiers": "", "return": "TaskunLog", "signature": "TaskunLog getLog(String name)", "full_signature": " TaskunLog getLog(String name)", "class_method_signature": "CrontabParser.getLog(String name)", "testcase": false, "constructor": false}, {"identifier": "parseLine", "parameters": "(RawCrontabLine line)", "modifiers": "public", "return": "Crontab", "signature": "Crontab parseLine(RawCrontabLine line)", "full_signature": "public Crontab parseLine(RawCrontabLine line)", "class_method_signature": "CrontabParser.parseLine(RawCrontabLine line)", "testcase": false, "constructor": false}, {"identifier": "getFixedInvocations", "parameters": "(int maxValue, CrontabElement crontabElement)", "modifiers": "public", "return": "List<Integer>", "signature": "List<Integer> getFixedInvocations(int maxValue, CrontabElement crontabElement)", "full_signature": "public List<Integer> getFixedInvocations(int maxValue, CrontabElement crontabElement)", "class_method_signature": "CrontabParser.getFixedInvocations(int maxValue, CrontabElement crontabElement)", "testcase": false, "constructor": false}, {"identifier": "getNextInvocationTime", "parameters": "(Calendar currentTime, Crontab crontab)", "modifiers": "public", "return": "long", "signature": "long getNextInvocationTime(Calendar currentTime, Crontab crontab)", "full_signature": "public long getNextInvocationTime(Calendar currentTime, Crontab crontab)", "class_method_signature": "CrontabParser.getNextInvocationTime(Calendar currentTime, Crontab crontab)", "testcase": false, "constructor": false}, {"identifier": "replaceWildcardsOfMinuteOrHourValue", "parameters": "(Crontab crontab)", "modifiers": "public", "return": "Crontab", "signature": "Crontab replaceWildcardsOfMinuteOrHourValue(Crontab crontab)", "full_signature": "public Crontab replaceWildcardsOfMinuteOrHourValue(Crontab crontab)", "class_method_signature": "CrontabParser.replaceWildcardsOfMinuteOrHourValue(Crontab crontab)", "testcase": false, "constructor": false}, {"identifier": "getCrontabDayOfWeekNumber", "parameters": "(Calendar cal)", "modifiers": "public", "return": "int", "signature": "int getCrontabDayOfWeekNumber(Calendar cal)", "full_signature": "public int getCrontabDayOfWeekNumber(Calendar cal)", "class_method_signature": "CrontabParser.getCrontabDayOfWeekNumber(Calendar cal)", "testcase": false, "constructor": false}, {"identifier": "getFixedMinimumInvocationValue", "parameters": "(List<Integer> fixedInvocations)", "modifiers": "public", "return": "int", "signature": "int getFixedMinimumInvocationValue(List<Integer> fixedInvocations)", "full_signature": "public int getFixedMinimumInvocationValue(List<Integer> fixedInvocations)", "class_method_signature": "CrontabParser.getFixedMinimumInvocationValue(List<Integer> fixedInvocations)", "testcase": false, "constructor": false}, {"identifier": "getFixedSameOrNextInvocationValue", "parameters": "(int currentValue, List<Integer> fixedInvocations)", "modifiers": "public", "return": "int", "signature": "int getFixedSameOrNextInvocationValue(int currentValue, List<Integer> fixedInvocations)", "full_signature": "public int getFixedSameOrNextInvocationValue(int currentValue, List<Integer> fixedInvocations)", "class_method_signature": "CrontabParser.getFixedSameOrNextInvocationValue(int currentValue, List<Integer> fixedInvocations)", "testcase": false, "constructor": false}, {"identifier": "getFixedNextInvocationValue", "parameters": "(int currentValue, List<Integer> fixedInvocations)", "modifiers": "public", "return": "int", "signature": "int getFixedNextInvocationValue(int currentValue, List<Integer> fixedInvocations)", "full_signature": "public int getFixedNextInvocationValue(int currentValue, List<Integer> fixedInvocations)", "class_method_signature": "CrontabParser.getFixedNextInvocationValue(int currentValue, List<Integer> fixedInvocations)", "testcase": false, "constructor": false}, {"identifier": "getFixedNextInvocationValue", "parameters": "(int currentValue, int maxValue, CrontabElement element)", "modifiers": "public", "return": "int", "signature": "int getFixedNextInvocationValue(int currentValue, int maxValue, CrontabElement element)", "full_signature": "public int getFixedNextInvocationValue(int currentValue, int maxValue, CrontabElement element)", "class_method_signature": "CrontabParser.getFixedNextInvocationValue(int currentValue, int maxValue, CrontabElement element)", "testcase": false, "constructor": false}, {"identifier": "isInvocationValueContainedInCrontabValue", "parameters": "(\n            int invocationValue, int maxValue, CrontabElement element)", "modifiers": "public", "return": "boolean", "signature": "boolean isInvocationValueContainedInCrontabValue(\n            int invocationValue, int maxValue, CrontabElement element)", "full_signature": "public boolean isInvocationValueContainedInCrontabValue(\n            int invocationValue, int maxValue, CrontabElement element)", "class_method_signature": "CrontabParser.isInvocationValueContainedInCrontabValue(\n            int invocationValue, int maxValue, CrontabElement element)", "testcase": false, "constructor": false}, {"identifier": "getIntervalInvocationCrontab", "parameters": "(Crontab crontab, String[] elements)", "modifiers": "public", "return": "Crontab", "signature": "Crontab getIntervalInvocationCrontab(Crontab crontab, String[] elements)", "full_signature": "public Crontab getIntervalInvocationCrontab(Crontab crontab, String[] elements)", "class_method_signature": "CrontabParser.getIntervalInvocationCrontab(Crontab crontab, String[] elements)", "testcase": false, "constructor": false}, {"identifier": "getLongValue", "parameters": "(String number)", "modifiers": "", "return": "long", "signature": "long getLongValue(String number)", "full_signature": " long getLongValue(String number)", "class_method_signature": "CrontabParser.getLongValue(String number)", "testcase": false, "constructor": false}, {"identifier": "getMultiplicityOfCommandWorkers", "parameters": "(String element)", "modifiers": "", "return": "long", "signature": "long getMultiplicityOfCommandWorkers(String element)", "full_signature": " long getMultiplicityOfCommandWorkers(String element)", "class_method_signature": "CrontabParser.getMultiplicityOfCommandWorkers(String element)", "testcase": false, "constructor": false}, {"identifier": "getCommandClassNameElement", "parameters": "(String element)", "modifiers": "", "return": "CrontabCommandClassNameElement", "signature": "CrontabCommandClassNameElement getCommandClassNameElement(String element)", "full_signature": " CrontabCommandClassNameElement getCommandClassNameElement(String element)", "class_method_signature": "CrontabParser.getCommandClassNameElement(String element)", "testcase": false, "constructor": false}, {"identifier": "getBasicCrontab", "parameters": "(Crontab crontab, String[] elements)", "modifiers": "", "return": "Crontab", "signature": "Crontab getBasicCrontab(Crontab crontab, String[] elements)", "full_signature": " Crontab getBasicCrontab(Crontab crontab, String[] elements)", "class_method_signature": "CrontabParser.getBasicCrontab(Crontab crontab, String[] elements)", "testcase": false, "constructor": false}, {"identifier": "isDayOfWeekNotCameAt", "parameters": "(Crontab crontab, Calendar nextInvocationTime, int dayOfWeek)", "modifiers": "", "return": "boolean", "signature": "boolean isDayOfWeekNotCameAt(Crontab crontab, Calendar nextInvocationTime, int dayOfWeek)", "full_signature": " boolean isDayOfWeekNotCameAt(Crontab crontab, Calendar nextInvocationTime, int dayOfWeek)", "class_method_signature": "CrontabParser.isDayOfWeekNotCameAt(Crontab crontab, Calendar nextInvocationTime, int dayOfWeek)", "testcase": false, "constructor": false}], "file": "taskun-scheduler/src/main/java/com/github/seratch/taskun/scheduler/crond/CrontabParser.java"}, "focal_method": {"identifier": "getFixedNextInvocationValue", "parameters": "(int currentValue, List<Integer> fixedInvocations)", "modifiers": "public", "return": "int", "body": "public int getFixedNextInvocationValue(int currentValue, List<Integer> fixedInvocations) {\n        if (fixedInvocations != null) {\n            if (fixedInvocations.size() == 0) {\n                throw new IllegalStateException(\"Invalid configuration...\");\n            }\n            for (int fixed : fixedInvocations) {\n                if (fixed > currentValue) {\n                    return fixed;\n                }\n            }\n            return fixedInvocations.get(0);\n        } else {\n            return currentValue;\n        }\n    }", "signature": "int getFixedNextInvocationValue(int currentValue, List<Integer> fixedInvocations)", "full_signature": "public int getFixedNextInvocationValue(int currentValue, List<Integer> fixedInvocations)", "class_method_signature": "CrontabParser.getFixedNextInvocationValue(int currentValue, List<Integer> fixedInvocations)", "testcase": false, "constructor": false, "invocations": ["size", "get"]}, "repository": {"repo_id": 1557148, "url": "https://github.com/seratch/taskun", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 3917, "license": "licensed"}}