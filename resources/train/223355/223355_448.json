{"test_class": {"identifier": "TestServletContextPropertyWroConfigurationFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  private ServletContext mockServletContext;", "modifier": "@Mock\n  private", "type": "ServletContext", "declarator": "mockServletContext", "var_name": "mockServletContext"}, {"original_string": "private ServletContextPropertyWroConfigurationFactory victim;", "modifier": "private", "type": "ServletContextPropertyWroConfigurationFactory", "declarator": "victim", "var_name": "victim"}], "file": "wro4j-core/src/test/java/ro/isdc/wro/config/factory/TestServletContextPropertyWroConfigurationFactory.java"}, "test_case": {"identifier": "shouldBuildDefaultConfigurationWhenConfigStreamIsUnavailable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldBuildDefaultConfigurationWhenConfigStreamIsUnavailable() {\n    Mockito.when(mockServletContext.getResourceAsStream(Mockito.anyString())).thenThrow(new RuntimeException(\"BOOM!\"));\n    victim = new ServletContextPropertyWroConfigurationFactory(mockServletContext);\n    Assert.assertNotNull(victim.create());\n  }", "signature": "void shouldBuildDefaultConfigurationWhenConfigStreamIsUnavailable()", "full_signature": "@Test public void shouldBuildDefaultConfigurationWhenConfigStreamIsUnavailable()", "class_method_signature": "TestServletContextPropertyWroConfigurationFactory.shouldBuildDefaultConfigurationWhenConfigStreamIsUnavailable()", "testcase": true, "constructor": false, "invocations": ["thenThrow", "when", "getResourceAsStream", "anyString", "assertNotNull", "create"]}, "focal_class": {"identifier": "ServletContextPropertyWroConfigurationFactory", "superclass": "", "interfaces": "implements ObjectFactory<WroConfiguration>", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ServletContextPropertyWroConfigurationFactory.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ServletContextPropertyWroConfigurationFactory.class)", "var_name": "LOG"}, {"original_string": "private static final String DEFAULT_PROPERTIES_FILE_NAME = \"/WEB-INF/wro.properties\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_PROPERTIES_FILE_NAME = \"/WEB-INF/wro.properties\"", "var_name": "DEFAULT_PROPERTIES_FILE_NAME"}, {"original_string": "private ServletContext servletContext;", "modifier": "private", "type": "ServletContext", "declarator": "servletContext", "var_name": "servletContext"}], "methods": [{"identifier": "ServletContextPropertyWroConfigurationFactory", "parameters": "(final ServletContext servletContext)", "modifiers": "public", "return": "", "signature": " ServletContextPropertyWroConfigurationFactory(final ServletContext servletContext)", "full_signature": "public  ServletContextPropertyWroConfigurationFactory(final ServletContext servletContext)", "class_method_signature": "ServletContextPropertyWroConfigurationFactory.ServletContextPropertyWroConfigurationFactory(final ServletContext servletContext)", "testcase": false, "constructor": true}, {"identifier": "getConfigPath", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getConfigPath()", "full_signature": "protected String getConfigPath()", "class_method_signature": "ServletContextPropertyWroConfigurationFactory.getConfigPath()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "()", "modifiers": "public final", "return": "WroConfiguration", "signature": "WroConfiguration create()", "full_signature": "public final WroConfiguration create()", "class_method_signature": "ServletContextPropertyWroConfigurationFactory.create()", "testcase": false, "constructor": false}, {"identifier": "createProperties", "parameters": "()", "modifiers": "public", "return": "Properties", "signature": "Properties createProperties()", "full_signature": "public Properties createProperties()", "class_method_signature": "ServletContextPropertyWroConfigurationFactory.createProperties()", "testcase": false, "constructor": false}], "file": "wro4j-core/src/main/java/ro/isdc/wro/config/factory/ServletContextPropertyWroConfigurationFactory.java"}, "focal_method": {"identifier": "create", "parameters": "()", "modifiers": "public final", "return": "WroConfiguration", "body": "public final WroConfiguration create() {\n    return new PropertyWroConfigurationFactory(createProperties()).create();\n  }", "signature": "WroConfiguration create()", "full_signature": "public final WroConfiguration create()", "class_method_signature": "ServletContextPropertyWroConfigurationFactory.create()", "testcase": false, "constructor": false, "invocations": ["create", "createProperties"]}, "repository": {"repo_id": 223355, "url": "https://github.com/alexo/wro4j", "language": "Java", "is_fork": false, "fork_count": 117, "stargazer_count": 447, "size": 112331, "license": "licensed"}}