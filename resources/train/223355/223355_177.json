{"test_class": {"identifier": "TestResourceProxyRequestHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n  private ResourceProxyRequestHandler victim;", "modifier": "@InjectMocks\n  private", "type": "ResourceProxyRequestHandler", "declarator": "victim", "var_name": "victim"}, {"original_string": "@Mock\n  private HttpServletRequest request;", "modifier": "@Mock\n  private", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n  private HttpServletResponse response;", "modifier": "@Mock\n  private", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}, {"original_string": "@Mock\n  private ServletContext servletContext;", "modifier": "@Mock\n  private", "type": "ServletContext", "declarator": "servletContext", "var_name": "servletContext"}, {"original_string": "@Mock\n  private FilterConfig filterConfig;", "modifier": "@Mock\n  private", "type": "FilterConfig", "declarator": "filterConfig", "var_name": "filterConfig"}, {"original_string": "@Mock\n  private ResourceAuthorizationManager mockAuthorizationManager;", "modifier": "@Mock\n  private", "type": "ResourceAuthorizationManager", "declarator": "mockAuthorizationManager", "var_name": "mockAuthorizationManager"}, {"original_string": "@Mock\n  private UriLocatorFactory mockUriLocatorFactory;", "modifier": "@Mock\n  private", "type": "UriLocatorFactory", "declarator": "mockUriLocatorFactory", "var_name": "mockUriLocatorFactory"}, {"original_string": "@Mock\n  private UriLocator mockUriLocator;", "modifier": "@Mock\n  private", "type": "UriLocator", "declarator": "mockUriLocator", "var_name": "mockUriLocator"}, {"original_string": "private OutputStream outputStream;", "modifier": "private", "type": "OutputStream", "declarator": "outputStream", "var_name": "outputStream"}, {"original_string": "private ServletOutputStream servletOutputStream;", "modifier": "private", "type": "ServletOutputStream", "declarator": "servletOutputStream", "var_name": "servletOutputStream"}, {"original_string": "private String packagePath;", "modifier": "private", "type": "String", "declarator": "packagePath", "var_name": "packagePath"}], "file": "wro4j-core/src/test/java/ro/isdc/wro/http/handler/TestResourceProxyRequestHandler.java"}, "test_case": {"identifier": "shouldCreateProxyPath", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldCreateProxyPath() {\n    assertEquals(\"/wro/all.js?wroAPI=wroResources&id=id\", ResourceProxyRequestHandler.createProxyPath(\"/wro/all.js\", \"id\"));\n    assertEquals(\"?wroAPI=wroResources&id=id\", ResourceProxyRequestHandler.createProxyPath(\"\", \"id\"));\n  }", "signature": "void shouldCreateProxyPath()", "full_signature": "@Test public void shouldCreateProxyPath()", "class_method_signature": "TestResourceProxyRequestHandler.shouldCreateProxyPath()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "createProxyPath", "assertEquals", "createProxyPath"]}, "focal_class": {"identifier": "ResourceProxyRequestHandler", "superclass": "extends RequestHandlerSupport", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ResourceProxyRequestHandler.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ResourceProxyRequestHandler.class)", "var_name": "LOG"}, {"original_string": "public static final String PARAM_RESOURCE_ID = \"id\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_RESOURCE_ID = \"id\"", "var_name": "PARAM_RESOURCE_ID"}, {"original_string": "public static final String PATH_RESOURCES = \"wroResources\";", "modifier": "public static final", "type": "String", "declarator": "PATH_RESOURCES = \"wroResources\"", "var_name": "PATH_RESOURCES"}, {"original_string": "public static final String ALIAS = \"resourceProxy\";", "modifier": "public static final", "type": "String", "declarator": "ALIAS = \"resourceProxy\"", "var_name": "ALIAS"}, {"original_string": "@Inject\n  private UriLocatorFactory locatorFactory;", "modifier": "@Inject\n  private", "type": "UriLocatorFactory", "declarator": "locatorFactory", "var_name": "locatorFactory"}, {"original_string": "@Inject\n  private ReadOnlyContext context;", "modifier": "@Inject\n  private", "type": "ReadOnlyContext", "declarator": "context", "var_name": "context"}, {"original_string": "@Inject\n  private ResourceAuthorizationManager authManager;", "modifier": "@Inject\n  private", "type": "ResourceAuthorizationManager", "declarator": "authManager", "var_name": "authManager"}, {"original_string": "private ResponseHeadersConfigurer headersConfigurer;", "modifier": "private", "type": "ResponseHeadersConfigurer", "declarator": "headersConfigurer", "var_name": "headersConfigurer"}], "methods": [{"identifier": "handle", "parameters": "(final HttpServletRequest request, final HttpServletResponse response)", "modifiers": "@Override public", "return": "void", "signature": "void handle(final HttpServletRequest request, final HttpServletResponse response)", "full_signature": "@Override public void handle(final HttpServletRequest request, final HttpServletResponse response)", "class_method_signature": "ResourceProxyRequestHandler.handle(final HttpServletRequest request, final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "accept", "parameters": "(final HttpServletRequest request)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean accept(final HttpServletRequest request)", "full_signature": "@Override public boolean accept(final HttpServletRequest request)", "class_method_signature": "ResourceProxyRequestHandler.accept(final HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "serveProxyResourceUri", "parameters": "(final HttpServletRequest request, final HttpServletResponse response)", "modifiers": "private", "return": "void", "signature": "void serveProxyResourceUri(final HttpServletRequest request, final HttpServletResponse response)", "full_signature": "private void serveProxyResourceUri(final HttpServletRequest request, final HttpServletResponse response)", "class_method_signature": "ResourceProxyRequestHandler.serveProxyResourceUri(final HttpServletRequest request, final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "isResourceChanged", "parameters": "(final HttpServletRequest request)", "modifiers": "protected", "return": "boolean", "signature": "boolean isResourceChanged(final HttpServletRequest request)", "full_signature": "protected boolean isResourceChanged(final HttpServletRequest request)", "class_method_signature": "ResourceProxyRequestHandler.isResourceChanged(final HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "verifyAccess", "parameters": "(final HttpServletRequest request, final HttpServletResponse response)", "modifiers": "private", "return": "void", "signature": "void verifyAccess(final HttpServletRequest request, final HttpServletResponse response)", "full_signature": "private void verifyAccess(final HttpServletRequest request, final HttpServletResponse response)", "class_method_signature": "ResourceProxyRequestHandler.verifyAccess(final HttpServletRequest request, final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "getResourceUri", "parameters": "(final HttpServletRequest request)", "modifiers": "private", "return": "String", "signature": "String getResourceUri(final HttpServletRequest request)", "full_signature": "private String getResourceUri(final HttpServletRequest request)", "class_method_signature": "ResourceProxyRequestHandler.getResourceUri(final HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "getHeadersConfigurer", "parameters": "()", "modifiers": "private final", "return": "ResponseHeadersConfigurer", "signature": "ResponseHeadersConfigurer getHeadersConfigurer()", "full_signature": "private final ResponseHeadersConfigurer getHeadersConfigurer()", "class_method_signature": "ResourceProxyRequestHandler.getHeadersConfigurer()", "testcase": false, "constructor": false}, {"identifier": "newResponseHeadersConfigurer", "parameters": "()", "modifiers": "protected", "return": "ResponseHeadersConfigurer", "signature": "ResponseHeadersConfigurer newResponseHeadersConfigurer()", "full_signature": "protected ResponseHeadersConfigurer newResponseHeadersConfigurer()", "class_method_signature": "ResourceProxyRequestHandler.newResponseHeadersConfigurer()", "testcase": false, "constructor": false}, {"identifier": "createProxyPath", "parameters": "(final String requestUri, final String resourceId)", "modifiers": "public static", "return": "String", "signature": "String createProxyPath(final String requestUri, final String resourceId)", "full_signature": "public static String createProxyPath(final String requestUri, final String resourceId)", "class_method_signature": "ResourceProxyRequestHandler.createProxyPath(final String requestUri, final String resourceId)", "testcase": false, "constructor": false}, {"identifier": "isProxyUri", "parameters": "(final String url)", "modifiers": "public static", "return": "boolean", "signature": "boolean isProxyUri(final String url)", "full_signature": "public static boolean isProxyUri(final String url)", "class_method_signature": "ResourceProxyRequestHandler.isProxyUri(final String url)", "testcase": false, "constructor": false}, {"identifier": "isProxyRequest", "parameters": "(final HttpServletRequest request)", "modifiers": "private", "return": "boolean", "signature": "boolean isProxyRequest(final HttpServletRequest request)", "full_signature": "private boolean isProxyRequest(final HttpServletRequest request)", "class_method_signature": "ResourceProxyRequestHandler.isProxyRequest(final HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "getRequestHandlerPath", "parameters": "()", "modifiers": "private static", "return": "String", "signature": "String getRequestHandlerPath()", "full_signature": "private static String getRequestHandlerPath()", "class_method_signature": "ResourceProxyRequestHandler.getRequestHandlerPath()", "testcase": false, "constructor": false}, {"identifier": "getRequestHandlerPath", "parameters": "(final String resourceId)", "modifiers": "private static", "return": "String", "signature": "String getRequestHandlerPath(final String resourceId)", "full_signature": "private static String getRequestHandlerPath(final String resourceId)", "class_method_signature": "ResourceProxyRequestHandler.getRequestHandlerPath(final String resourceId)", "testcase": false, "constructor": false}], "file": "wro4j-core/src/main/java/ro/isdc/wro/http/handler/ResourceProxyRequestHandler.java"}, "focal_method": {"identifier": "createProxyPath", "parameters": "(final String requestUri, final String resourceId)", "modifiers": "public static", "return": "String", "body": "public static String createProxyPath(final String requestUri, final String resourceId) {\n    notNull(requestUri);\n    notNull(resourceId);\n    return requestUri + getRequestHandlerPath(resourceId);\n  }", "signature": "String createProxyPath(final String requestUri, final String resourceId)", "full_signature": "public static String createProxyPath(final String requestUri, final String resourceId)", "class_method_signature": "ResourceProxyRequestHandler.createProxyPath(final String requestUri, final String resourceId)", "testcase": false, "constructor": false, "invocations": ["notNull", "notNull", "getRequestHandlerPath"]}, "repository": {"repo_id": 223355, "url": "https://github.com/alexo/wro4j", "language": "Java", "is_fork": false, "fork_count": 117, "stargazer_count": 447, "size": 112331, "license": "licensed"}}