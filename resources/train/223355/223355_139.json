{"test_class": {"identifier": "TestConfigurableWroManagerFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ConfigurableWroManagerFactory victim;", "modifier": "private", "type": "ConfigurableWroManagerFactory", "declarator": "victim", "var_name": "victim"}, {"original_string": "@Mock\n  private FilterConfig mockFilterConfig;", "modifier": "@Mock\n  private", "type": "FilterConfig", "declarator": "mockFilterConfig", "var_name": "mockFilterConfig"}, {"original_string": "private ConfigurableLocatorFactory uriLocatorFactory;", "modifier": "private", "type": "ConfigurableLocatorFactory", "declarator": "uriLocatorFactory", "var_name": "uriLocatorFactory"}, {"original_string": "@Mock\n  private ServletContext mockServletContext;", "modifier": "@Mock\n  private", "type": "ServletContext", "declarator": "mockServletContext", "var_name": "mockServletContext"}, {"original_string": "private ProcessorsFactory processorsFactory;", "modifier": "private", "type": "ProcessorsFactory", "declarator": "processorsFactory", "var_name": "processorsFactory"}, {"original_string": "@Mock\n  private HttpServletRequest mockRequest;", "modifier": "@Mock\n  private", "type": "HttpServletRequest", "declarator": "mockRequest", "var_name": "mockRequest"}, {"original_string": "@Mock\n  private HttpServletResponse mockResponse;", "modifier": "@Mock\n  private", "type": "HttpServletResponse", "declarator": "mockResponse", "var_name": "mockResponse"}, {"original_string": "private Properties configProperties;", "modifier": "private", "type": "Properties", "declarator": "configProperties", "var_name": "configProperties"}], "file": "wro4j-core/src/test/java/ro/isdc/wro/manager/factory/TestConfigurableWroManagerFactory.java"}, "test_case": {"identifier": "cannotUseInvalidConfiguredModelFactory", "parameters": "()", "modifiers": "@Test(expected = WroRuntimeException.class) public", "return": "void", "body": "@Test(expected = WroRuntimeException.class)\n  public void cannotUseInvalidConfiguredModelFactory()\n      throws Exception {\n    final Properties configProperties = new Properties();\n    configProperties.setProperty(ConfigurableModelFactory.KEY, \"invalid\");\n    victim.setConfigProperties(configProperties);\n    ((ConfigurableModelFactory) AbstractDecorator.getOriginalDecoratedObject(victim.create().getModelFactory())).getConfiguredStrategy();\n  }", "signature": "void cannotUseInvalidConfiguredModelFactory()", "full_signature": "@Test(expected = WroRuntimeException.class) public void cannotUseInvalidConfiguredModelFactory()", "class_method_signature": "TestConfigurableWroManagerFactory.cannotUseInvalidConfiguredModelFactory()", "testcase": true, "constructor": false, "invocations": ["setProperty", "setConfigProperties", "getConfiguredStrategy", "getOriginalDecoratedObject", "getModelFactory", "create"]}, "focal_class": {"identifier": "ConfigurableWroManagerFactory", "superclass": "extends BaseWroManagerFactory", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ConfigurableWroManagerFactory.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ConfigurableWroManagerFactory.class)", "var_name": "LOG"}, {"original_string": "private Properties configProperties;", "modifier": "private", "type": "Properties", "declarator": "configProperties", "var_name": "configProperties"}, {"original_string": "private Properties additionalConfigProperties;", "modifier": "private", "type": "Properties", "declarator": "additionalConfigProperties", "var_name": "additionalConfigProperties"}], "methods": [{"identifier": "contributeLocators", "parameters": "(final Map<String, UriLocator> map)", "modifiers": "protected", "return": "void", "signature": "void contributeLocators(final Map<String, UriLocator> map)", "full_signature": "protected void contributeLocators(final Map<String, UriLocator> map)", "class_method_signature": "ConfigurableWroManagerFactory.contributeLocators(final Map<String, UriLocator> map)", "testcase": false, "constructor": false}, {"identifier": "contributePreProcessors", "parameters": "(final Map<String, ResourcePreProcessor> map)", "modifiers": "protected", "return": "void", "signature": "void contributePreProcessors(final Map<String, ResourcePreProcessor> map)", "full_signature": "protected void contributePreProcessors(final Map<String, ResourcePreProcessor> map)", "class_method_signature": "ConfigurableWroManagerFactory.contributePreProcessors(final Map<String, ResourcePreProcessor> map)", "testcase": false, "constructor": false}, {"identifier": "contributePostProcessors", "parameters": "(final Map<String, ResourcePostProcessor> map)", "modifiers": "protected", "return": "void", "signature": "void contributePostProcessors(final Map<String, ResourcePostProcessor> map)", "full_signature": "protected void contributePostProcessors(final Map<String, ResourcePostProcessor> map)", "class_method_signature": "ConfigurableWroManagerFactory.contributePostProcessors(final Map<String, ResourcePostProcessor> map)", "testcase": false, "constructor": false}, {"identifier": "newUriLocatorFactory", "parameters": "()", "modifiers": "@Override protected", "return": "UriLocatorFactory", "signature": "UriLocatorFactory newUriLocatorFactory()", "full_signature": "@Override protected UriLocatorFactory newUriLocatorFactory()", "class_method_signature": "ConfigurableWroManagerFactory.newUriLocatorFactory()", "testcase": false, "constructor": false}, {"identifier": "newProcessorsFactory", "parameters": "()", "modifiers": "@Override protected", "return": "ProcessorsFactory", "signature": "ProcessorsFactory newProcessorsFactory()", "full_signature": "@Override protected ProcessorsFactory newProcessorsFactory()", "class_method_signature": "ConfigurableWroManagerFactory.newProcessorsFactory()", "testcase": false, "constructor": false}, {"identifier": "newNamingStrategy", "parameters": "()", "modifiers": "@Override protected", "return": "NamingStrategy", "signature": "NamingStrategy newNamingStrategy()", "full_signature": "@Override protected NamingStrategy newNamingStrategy()", "class_method_signature": "ConfigurableWroManagerFactory.newNamingStrategy()", "testcase": false, "constructor": false}, {"identifier": "newHashStrategy", "parameters": "()", "modifiers": "@Override protected", "return": "HashStrategy", "signature": "HashStrategy newHashStrategy()", "full_signature": "@Override protected HashStrategy newHashStrategy()", "class_method_signature": "ConfigurableWroManagerFactory.newHashStrategy()", "testcase": false, "constructor": false}, {"identifier": "newCacheStrategy", "parameters": "()", "modifiers": "@Override protected", "return": "CacheStrategy<CacheKey, CacheValue>", "signature": "CacheStrategy<CacheKey, CacheValue> newCacheStrategy()", "full_signature": "@Override protected CacheStrategy<CacheKey, CacheValue> newCacheStrategy()", "class_method_signature": "ConfigurableWroManagerFactory.newCacheStrategy()", "testcase": false, "constructor": false}, {"identifier": "newModelFactory", "parameters": "()", "modifiers": "@Override protected", "return": "WroModelFactory", "signature": "WroModelFactory newModelFactory()", "full_signature": "@Override protected WroModelFactory newModelFactory()", "class_method_signature": "ConfigurableWroManagerFactory.newModelFactory()", "testcase": false, "constructor": false}, {"identifier": "updatePropertiesWithConfiguration", "parameters": "(final Properties props, final String key)", "modifiers": "private", "return": "void", "signature": "void updatePropertiesWithConfiguration(final Properties props, final String key)", "full_signature": "private void updatePropertiesWithConfiguration(final Properties props, final String key)", "class_method_signature": "ConfigurableWroManagerFactory.updatePropertiesWithConfiguration(final Properties props, final String key)", "testcase": false, "constructor": false}, {"identifier": "getConfigProperties", "parameters": "()", "modifiers": "private", "return": "Properties", "signature": "Properties getConfigProperties()", "full_signature": "private Properties getConfigProperties()", "class_method_signature": "ConfigurableWroManagerFactory.getConfigProperties()", "testcase": false, "constructor": false}, {"identifier": "newConfigProperties", "parameters": "()", "modifiers": "protected", "return": "Properties", "signature": "Properties newConfigProperties()", "full_signature": "protected Properties newConfigProperties()", "class_method_signature": "ConfigurableWroManagerFactory.newConfigProperties()", "testcase": false, "constructor": false}, {"identifier": "addConfigProperties", "parameters": "(final Properties configProperties)", "modifiers": "", "return": "ConfigurableWroManagerFactory", "signature": "ConfigurableWroManagerFactory addConfigProperties(final Properties configProperties)", "full_signature": " ConfigurableWroManagerFactory addConfigProperties(final Properties configProperties)", "class_method_signature": "ConfigurableWroManagerFactory.addConfigProperties(final Properties configProperties)", "testcase": false, "constructor": false}, {"identifier": "setConfigProperties", "parameters": "(final Properties configProperties)", "modifiers": "", "return": "ConfigurableWroManagerFactory", "signature": "ConfigurableWroManagerFactory setConfigProperties(final Properties configProperties)", "full_signature": " ConfigurableWroManagerFactory setConfigProperties(final Properties configProperties)", "class_method_signature": "ConfigurableWroManagerFactory.setConfigProperties(final Properties configProperties)", "testcase": false, "constructor": false}], "file": "wro4j-core/src/main/java/ro/isdc/wro/manager/factory/ConfigurableWroManagerFactory.java"}, "focal_method": {"identifier": "setConfigProperties", "parameters": "(final Properties configProperties)", "modifiers": "", "return": "ConfigurableWroManagerFactory", "body": "ConfigurableWroManagerFactory setConfigProperties(final Properties configProperties) {\n    Validate.notNull(configProperties);\n    this.configProperties = configProperties;\n    return this;\n  }", "signature": "ConfigurableWroManagerFactory setConfigProperties(final Properties configProperties)", "full_signature": " ConfigurableWroManagerFactory setConfigProperties(final Properties configProperties)", "class_method_signature": "ConfigurableWroManagerFactory.setConfigProperties(final Properties configProperties)", "testcase": false, "constructor": false, "invocations": ["notNull"]}, "repository": {"repo_id": 223355, "url": "https://github.com/alexo/wro4j", "language": "Java", "is_fork": false, "fork_count": 117, "stargazer_count": 447, "size": 112331, "license": "licensed"}}