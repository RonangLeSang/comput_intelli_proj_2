{"test_class": {"identifier": "TestDefaultGroupExtractor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GroupExtractor groupExtractor;", "modifier": "private", "type": "GroupExtractor", "declarator": "groupExtractor", "var_name": "groupExtractor"}], "file": "wro4j-core/src/test/java/ro/isdc/wro/model/group/TestDefaultGroupExtractor.java"}, "test_case": {"identifier": "testMinimizedWithoutParams", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testMinimizedWithoutParams() {\n    final HttpServletRequest request = Mockito.mock(HttpServletRequest.class);\n    assertTrue(groupExtractor.isMinimized(request));\n  }", "signature": "void testMinimizedWithoutParams()", "full_signature": "@Test public void testMinimizedWithoutParams()", "class_method_signature": "TestDefaultGroupExtractor.testMinimizedWithoutParams()", "testcase": true, "constructor": false, "invocations": ["mock", "assertTrue", "isMinimized"]}, "focal_class": {"identifier": "DefaultGroupExtractor", "superclass": "", "interfaces": "implements GroupExtractor", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(DefaultGroupExtractor.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(DefaultGroupExtractor.class)", "var_name": "LOG"}, {"original_string": "public static final String ATTR_INCLUDE_PATH = \"javax.servlet.include.servlet_path\";", "modifier": "public static final", "type": "String", "declarator": "ATTR_INCLUDE_PATH = \"javax.servlet.include.servlet_path\"", "var_name": "ATTR_INCLUDE_PATH"}, {"original_string": "public static final String PARAM_MINIMIZE = \"minimize\";", "modifier": "public static final", "type": "String", "declarator": "PARAM_MINIMIZE = \"minimize\"", "var_name": "PARAM_MINIMIZE"}], "methods": [{"identifier": "getGroupName", "parameters": "(final HttpServletRequest request)", "modifiers": "public", "return": "String", "signature": "String getGroupName(final HttpServletRequest request)", "full_signature": "public String getGroupName(final HttpServletRequest request)", "class_method_signature": "DefaultGroupExtractor.getGroupName(final HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "getResourceType", "parameters": "(final HttpServletRequest request)", "modifiers": "public", "return": "ResourceType", "signature": "ResourceType getResourceType(final HttpServletRequest request)", "full_signature": "public ResourceType getResourceType(final HttpServletRequest request)", "class_method_signature": "DefaultGroupExtractor.getResourceType(final HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "stripSessionID", "parameters": "(final String uri)", "modifiers": "private", "return": "String", "signature": "String stripSessionID(final String uri)", "full_signature": "private String stripSessionID(final String uri)", "class_method_signature": "DefaultGroupExtractor.stripSessionID(final String uri)", "testcase": false, "constructor": false}, {"identifier": "encodeGroupUrl", "parameters": "(final String groupName, final ResourceType resourceType, final boolean minimize)", "modifiers": "public", "return": "String", "signature": "String encodeGroupUrl(final String groupName, final ResourceType resourceType, final boolean minimize)", "full_signature": "public String encodeGroupUrl(final String groupName, final ResourceType resourceType, final boolean minimize)", "class_method_signature": "DefaultGroupExtractor.encodeGroupUrl(final String groupName, final ResourceType resourceType, final boolean minimize)", "testcase": false, "constructor": false}, {"identifier": "isMinimized", "parameters": "(final HttpServletRequest request)", "modifiers": "public", "return": "boolean", "signature": "boolean isMinimized(final HttpServletRequest request)", "full_signature": "public boolean isMinimized(final HttpServletRequest request)", "class_method_signature": "DefaultGroupExtractor.isMinimized(final HttpServletRequest request)", "testcase": false, "constructor": false}], "file": "wro4j-core/src/main/java/ro/isdc/wro/model/group/DefaultGroupExtractor.java"}, "focal_method": {"identifier": "isMinimized", "parameters": "(final HttpServletRequest request)", "modifiers": "public", "return": "boolean", "body": "public boolean isMinimized(final HttpServletRequest request) {\n    Validate.notNull(request);\n    final String minimizeAsString = request.getParameter(PARAM_MINIMIZE);\n    return !(Context.get().getConfig().isDebug() && \"false\".equalsIgnoreCase(minimizeAsString));\n  }", "signature": "boolean isMinimized(final HttpServletRequest request)", "full_signature": "public boolean isMinimized(final HttpServletRequest request)", "class_method_signature": "DefaultGroupExtractor.isMinimized(final HttpServletRequest request)", "testcase": false, "constructor": false, "invocations": ["notNull", "getParameter", "isDebug", "getConfig", "get", "equalsIgnoreCase"]}, "repository": {"repo_id": 223355, "url": "https://github.com/alexo/wro4j", "language": "Java", "is_fork": false, "fork_count": 117, "stargazer_count": 447, "size": 112331, "license": "licensed"}}