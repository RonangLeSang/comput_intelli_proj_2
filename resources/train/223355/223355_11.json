{"test_class": {"identifier": "TestJsonModelFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(TestJsonModelFactory.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(TestJsonModelFactory.class)", "var_name": "LOG"}, {"original_string": "private JsonModelFactory factory;", "modifier": "private", "type": "JsonModelFactory", "declarator": "factory", "var_name": "factory"}], "file": "wro4j-extensions/src/test/java/ro/isdc/wro/extensions/model/factory/TestJsonModelFactory.java"}, "test_case": {"identifier": "createValidModel", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void createValidModel() {\n    factory = new JsonModelFactory() {\n      @Override\n      protected InputStream getModelResourceAsStream()\n          throws IOException {\n        return TestGroovyModelFactory.class.getResourceAsStream(\"wro.json\");\n      };\n    };\n    final WroModel model = factory.create();\n    Assert.assertNotNull(model);\n    Assert.assertEquals(Arrays.asList(\"g1\", \"g2\"), new WroModelInspector(model).getGroupNames());\n    LOG.debug(\"model: {}\", model);\n  }", "signature": "void createValidModel()", "full_signature": "@Test public void createValidModel()", "class_method_signature": "TestJsonModelFactory.createValidModel()", "testcase": true, "constructor": false, "invocations": ["getResourceAsStream", "create", "assertNotNull", "assertEquals", "asList", "getGroupNames", "debug"]}, "focal_class": {"identifier": "JsonModelFactory", "superclass": "extends AbstractWroModelFactory", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(JsonModelFactory.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(JsonModelFactory.class)", "var_name": "LOG"}, {"original_string": "private static final String DEFAULT_FILE_NAME = \"wro.json\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_FILE_NAME = \"wro.json\"", "var_name": "DEFAULT_FILE_NAME"}, {"original_string": "public static final String ALIAS = \"json\";", "modifier": "public static final", "type": "String", "declarator": "ALIAS = \"json\"", "var_name": "ALIAS"}], "methods": [{"identifier": "create", "parameters": "()", "modifiers": "@Override public synchronized", "return": "WroModel", "signature": "WroModel create()", "full_signature": "@Override public synchronized WroModel create()", "class_method_signature": "JsonModelFactory.create()", "testcase": false, "constructor": false}, {"identifier": "getDefaultModelFilename", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getDefaultModelFilename()", "full_signature": "@Override protected String getDefaultModelFilename()", "class_method_signature": "JsonModelFactory.getDefaultModelFilename()", "testcase": false, "constructor": false}], "file": "wro4j-extensions/src/main/java/ro/isdc/wro/extensions/model/factory/JsonModelFactory.java"}, "focal_method": {"identifier": "create", "parameters": "()", "modifiers": "@Override public synchronized", "return": "WroModel", "body": "@Override\n  public synchronized WroModel create() {\n    final StopWatch stopWatch = new StopWatch(\"Create Wro Model from Groovy\");\n    try {\n      stopWatch.start(\"createModel\");\n      final Type type = new TypeToken<WroModel>() {}.getType();\n      final InputStream is = getModelResourceAsStream();\n      if (is == null) {\n        throw new WroRuntimeException(\"Invalid model stream provided!\");\n      }\n      final WroModel model = new Gson().fromJson(new InputStreamReader(getModelResourceAsStream()), type);\n      LOG.debug(\"json model: {}\", model);\n      if (model == null) {\n        throw new WroRuntimeException(\"Invalid content provided, cannot build model!\");\n      }\n      return model;\n    } catch (final Exception e) {\n      throw new WroRuntimeException(\"Invalid model found!\", e);\n    } finally {\n      stopWatch.stop();\n      LOG.debug(stopWatch.prettyPrint());\n    }\n  }", "signature": "WroModel create()", "full_signature": "@Override public synchronized WroModel create()", "class_method_signature": "JsonModelFactory.create()", "testcase": false, "constructor": false, "invocations": ["start", "getType", "getModelResourceAsStream", "fromJson", "getModelResourceAsStream", "debug", "stop", "debug", "prettyPrint"]}, "repository": {"repo_id": 223355, "url": "https://github.com/alexo/wro4j", "language": "Java", "is_fork": false, "fork_count": 117, "stargazer_count": 447, "size": 112331, "license": "licensed"}}