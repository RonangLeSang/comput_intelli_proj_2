{"test_class": {"identifier": "TestDefaultConfigurableProvider", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DefaultConfigurableProvider victim;", "modifier": "private", "type": "DefaultConfigurableProvider", "declarator": "victim", "var_name": "victim"}], "file": "wro4j-core/src/test/java/ro/isdc/wro/util/provider/TestDefaultConfigurableProvider.java"}, "test_case": {"identifier": "shouldHavePostProcessors", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldHavePostProcessors() {\n    assertTrue(!victim.providePostProcessors().isEmpty());\n  }", "signature": "void shouldHavePostProcessors()", "full_signature": "@Test public void shouldHavePostProcessors()", "class_method_signature": "TestDefaultConfigurableProvider.shouldHavePostProcessors()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isEmpty", "providePostProcessors"]}, "focal_class": {"identifier": "DefaultConfigurableProvider", "superclass": "extends ConfigurableProviderSupport", "interfaces": "implements Ordered", "fields": [{"original_string": "private final ProcessorProvider processorProvider = new DefaultProcessorProvider();", "modifier": "private final", "type": "ProcessorProvider", "declarator": "processorProvider = new DefaultProcessorProvider()", "var_name": "processorProvider"}, {"original_string": "private final NamingStrategyProvider namingStrategyProvider = new DefaultNamingStrategyProvider();", "modifier": "private final", "type": "NamingStrategyProvider", "declarator": "namingStrategyProvider = new DefaultNamingStrategyProvider()", "var_name": "namingStrategyProvider"}, {"original_string": "private final HashStrategyProvider hashStrategyProvider = new DefaultHashStrategyProvider();", "modifier": "private final", "type": "HashStrategyProvider", "declarator": "hashStrategyProvider = new DefaultHashStrategyProvider()", "var_name": "hashStrategyProvider"}, {"original_string": "private final LocatorProvider locatorProvider = new DefaultLocatorProvider();", "modifier": "private final", "type": "LocatorProvider", "declarator": "locatorProvider = new DefaultLocatorProvider()", "var_name": "locatorProvider"}, {"original_string": "private final CacheStrategyProvider cacheStrategyProvider = new DefaultCacheStrategyProvider();", "modifier": "private final", "type": "CacheStrategyProvider", "declarator": "cacheStrategyProvider = new DefaultCacheStrategyProvider()", "var_name": "cacheStrategyProvider"}, {"original_string": "private final RequestHandlerProvider requestHandlerProvider = new DefaultRequestHandlerProvider();", "modifier": "private final", "type": "RequestHandlerProvider", "declarator": "requestHandlerProvider = new DefaultRequestHandlerProvider()", "var_name": "requestHandlerProvider"}, {"original_string": "private final ModelFactoryProvider modelFactoryProvider = new DefaultModelFactoryProvider();", "modifier": "private final", "type": "ModelFactoryProvider", "declarator": "modelFactoryProvider = new DefaultModelFactoryProvider()", "var_name": "modelFactoryProvider"}], "methods": [{"identifier": "providePreProcessors", "parameters": "()", "modifiers": "@Override public", "return": "Map<String,ResourcePreProcessor>", "signature": "Map<String,ResourcePreProcessor> providePreProcessors()", "full_signature": "@Override public Map<String,ResourcePreProcessor> providePreProcessors()", "class_method_signature": "DefaultConfigurableProvider.providePreProcessors()", "testcase": false, "constructor": false}, {"identifier": "providePostProcessors", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, ResourcePostProcessor>", "signature": "Map<String, ResourcePostProcessor> providePostProcessors()", "full_signature": "@Override public Map<String, ResourcePostProcessor> providePostProcessors()", "class_method_signature": "DefaultConfigurableProvider.providePostProcessors()", "testcase": false, "constructor": false}, {"identifier": "provideHashStrategies", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, HashStrategy>", "signature": "Map<String, HashStrategy> provideHashStrategies()", "full_signature": "@Override public Map<String, HashStrategy> provideHashStrategies()", "class_method_signature": "DefaultConfigurableProvider.provideHashStrategies()", "testcase": false, "constructor": false}, {"identifier": "provideNamingStrategies", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, NamingStrategy>", "signature": "Map<String, NamingStrategy> provideNamingStrategies()", "full_signature": "@Override public Map<String, NamingStrategy> provideNamingStrategies()", "class_method_signature": "DefaultConfigurableProvider.provideNamingStrategies()", "testcase": false, "constructor": false}, {"identifier": "provideCacheStrategies", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, CacheStrategy<CacheKey, CacheValue>>", "signature": "Map<String, CacheStrategy<CacheKey, CacheValue>> provideCacheStrategies()", "full_signature": "@Override public Map<String, CacheStrategy<CacheKey, CacheValue>> provideCacheStrategies()", "class_method_signature": "DefaultConfigurableProvider.provideCacheStrategies()", "testcase": false, "constructor": false}, {"identifier": "provideLocators", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, UriLocator>", "signature": "Map<String, UriLocator> provideLocators()", "full_signature": "@Override public Map<String, UriLocator> provideLocators()", "class_method_signature": "DefaultConfigurableProvider.provideLocators()", "testcase": false, "constructor": false}, {"identifier": "provideRequestHandlers", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, RequestHandler>", "signature": "Map<String, RequestHandler> provideRequestHandlers()", "full_signature": "@Override public Map<String, RequestHandler> provideRequestHandlers()", "class_method_signature": "DefaultConfigurableProvider.provideRequestHandlers()", "testcase": false, "constructor": false}, {"identifier": "provideModelFactories", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, WroModelFactory>", "signature": "Map<String, WroModelFactory> provideModelFactories()", "full_signature": "@Override public Map<String, WroModelFactory> provideModelFactories()", "class_method_signature": "DefaultConfigurableProvider.provideModelFactories()", "testcase": false, "constructor": false}, {"identifier": "getOrder", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getOrder()", "full_signature": "public int getOrder()", "class_method_signature": "DefaultConfigurableProvider.getOrder()", "testcase": false, "constructor": false}], "file": "wro4j-core/src/main/java/ro/isdc/wro/util/provider/DefaultConfigurableProvider.java"}, "focal_method": {"identifier": "providePostProcessors", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, ResourcePostProcessor>", "body": "@Override\n  public Map<String, ResourcePostProcessor> providePostProcessors() {\n    return processorProvider.providePostProcessors();\n  }", "signature": "Map<String, ResourcePostProcessor> providePostProcessors()", "full_signature": "@Override public Map<String, ResourcePostProcessor> providePostProcessors()", "class_method_signature": "DefaultConfigurableProvider.providePostProcessors()", "testcase": false, "constructor": false, "invocations": ["providePostProcessors"]}, "repository": {"repo_id": 223355, "url": "https://github.com/alexo/wro4j", "language": "Java", "is_fork": false, "fork_count": 117, "stargazer_count": 447, "size": 112331, "license": "licensed"}}