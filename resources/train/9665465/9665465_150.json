{"test_class": {"identifier": "BasicToolsTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/nullschool/collect/basic/BasicToolsTest.java"}, "test_case": {"identifier": "test_insert_out_of_bounds_low", "parameters": "()", "modifiers": "@Test(expected = ArrayIndexOutOfBoundsException.class) public", "return": "void", "body": "@Test(expected = ArrayIndexOutOfBoundsException.class)\n    public void test_insert_out_of_bounds_low() {\n        insert(EMPTY_OBJECT_ARRAY, -1, \"a\");\n    }", "signature": "void test_insert_out_of_bounds_low()", "full_signature": "@Test(expected = ArrayIndexOutOfBoundsException.class) public void test_insert_out_of_bounds_low()", "class_method_signature": "BasicToolsTest.test_insert_out_of_bounds_low()", "testcase": true, "constructor": false, "invocations": ["insert"]}, "focal_class": {"identifier": "BasicTools", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final MapColumns EMPTY_MAP_COLUMNS = new MapColumns(EMPTY_OBJECT_ARRAY, EMPTY_OBJECT_ARRAY);", "modifier": "private static final", "type": "MapColumns", "declarator": "EMPTY_MAP_COLUMNS = new MapColumns(EMPTY_OBJECT_ARRAY, EMPTY_OBJECT_ARRAY)", "var_name": "EMPTY_MAP_COLUMNS"}], "methods": [{"identifier": "BasicTools", "parameters": "()", "modifiers": "private", "return": "", "signature": " BasicTools()", "full_signature": "private  BasicTools()", "class_method_signature": "BasicTools.BasicTools()", "testcase": false, "constructor": true}, {"identifier": "copy", "parameters": "(Object[] original)", "modifiers": "static", "return": "Object[]", "signature": "Object[] copy(Object[] original)", "full_signature": "static Object[] copy(Object[] original)", "class_method_signature": "BasicTools.copy(Object[] original)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(Object[] original, int newLength)", "modifiers": "static", "return": "Object[]", "signature": "Object[] copy(Object[] original, int newLength)", "full_signature": "static Object[] copy(Object[] original, int newLength)", "class_method_signature": "BasicTools.copy(Object[] original, int newLength)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(Collection<?> original)", "modifiers": "static", "return": "Object[]", "signature": "Object[] copy(Collection<?> original)", "full_signature": "static Object[] copy(Collection<?> original)", "class_method_signature": "BasicTools.copy(Collection<?> original)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(Iterator<?> original)", "modifiers": "static", "return": "Object[]", "signature": "Object[] copy(Iterator<?> original)", "full_signature": "static Object[] copy(Iterator<?> original)", "class_method_signature": "BasicTools.copy(Iterator<?> original)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(Map<?, ?> original)", "modifiers": "static", "return": "MapColumns", "signature": "MapColumns copy(Map<?, ?> original)", "full_signature": "static MapColumns copy(Map<?, ?> original)", "class_method_signature": "BasicTools.copy(Map<?, ?> original)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(Object[] original, int index, Object e)", "modifiers": "static", "return": "Object[]", "signature": "Object[] insert(Object[] original, int index, Object e)", "full_signature": "static Object[] insert(Object[] original, int index, Object e)", "class_method_signature": "BasicTools.insert(Object[] original, int index, Object e)", "testcase": false, "constructor": false}, {"identifier": "insertAll", "parameters": "(Object[] original, int index, Collection<?> c)", "modifiers": "static", "return": "Object[]", "signature": "Object[] insertAll(Object[] original, int index, Collection<?> c)", "full_signature": "static Object[] insertAll(Object[] original, int index, Collection<?> c)", "class_method_signature": "BasicTools.insertAll(Object[] original, int index, Collection<?> c)", "testcase": false, "constructor": false}, {"identifier": "replace", "parameters": "(Object[] original, int index, Object e)", "modifiers": "static", "return": "Object[]", "signature": "Object[] replace(Object[] original, int index, Object e)", "full_signature": "static Object[] replace(Object[] original, int index, Object e)", "class_method_signature": "BasicTools.replace(Object[] original, int index, Object e)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Object[] original, int index)", "modifiers": "static", "return": "Object[]", "signature": "Object[] delete(Object[] original, int index)", "full_signature": "static Object[] delete(Object[] original, int index)", "class_method_signature": "BasicTools.delete(Object[] original, int index)", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "(Object[] original, Collection<?> c)", "modifiers": "static", "return": "Object[]", "signature": "Object[] deleteAll(Object[] original, Collection<?> c)", "full_signature": "static Object[] deleteAll(Object[] original, Collection<?> c)", "class_method_signature": "BasicTools.deleteAll(Object[] original, Collection<?> c)", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "(Object[] keys, Object[] values, Collection<?> c)", "modifiers": "static", "return": "MapColumns", "signature": "MapColumns deleteAll(Object[] keys, Object[] values, Collection<?> c)", "full_signature": "static MapColumns deleteAll(Object[] keys, Object[] values, Collection<?> c)", "class_method_signature": "BasicTools.deleteAll(Object[] keys, Object[] values, Collection<?> c)", "testcase": false, "constructor": false}, {"identifier": "unionInto", "parameters": "(Object[] original, Object[] additional)", "modifiers": "static", "return": "Object[]", "signature": "Object[] unionInto(Object[] original, Object[] additional)", "full_signature": "static Object[] unionInto(Object[] original, Object[] additional)", "class_method_signature": "BasicTools.unionInto(Object[] original, Object[] additional)", "testcase": false, "constructor": false}, {"identifier": "unionInto", "parameters": "(Object[] original, Object[] additional, Comparator<?> comparator)", "modifiers": "static", "return": "Object[]", "signature": "Object[] unionInto(Object[] original, Object[] additional, Comparator<?> comparator)", "full_signature": "static Object[] unionInto(Object[] original, Object[] additional, Comparator<?> comparator)", "class_method_signature": "BasicTools.unionInto(Object[] original, Object[] additional, Comparator<?> comparator)", "testcase": false, "constructor": false}, {"identifier": "unionInto", "parameters": "(\n        Object[] originalKeys,\n        Object[] originalValues,\n        Object[] additionalKeys,\n        Object[] additionalValues)", "modifiers": "static", "return": "MapColumns", "signature": "MapColumns unionInto(\n        Object[] originalKeys,\n        Object[] originalValues,\n        Object[] additionalKeys,\n        Object[] additionalValues)", "full_signature": "static MapColumns unionInto(\n        Object[] originalKeys,\n        Object[] originalValues,\n        Object[] additionalKeys,\n        Object[] additionalValues)", "class_method_signature": "BasicTools.unionInto(\n        Object[] originalKeys,\n        Object[] originalValues,\n        Object[] additionalKeys,\n        Object[] additionalValues)", "testcase": false, "constructor": false}, {"identifier": "unionInto", "parameters": "(\n        Object[] originalKeys,\n        Object[] originalValues,\n        Object[] additionalKeys,\n        Object[] additionalValues,\n        Comparator<?> comparator)", "modifiers": "static", "return": "MapColumns", "signature": "MapColumns unionInto(\n        Object[] originalKeys,\n        Object[] originalValues,\n        Object[] additionalKeys,\n        Object[] additionalValues,\n        Comparator<?> comparator)", "full_signature": "static MapColumns unionInto(\n        Object[] originalKeys,\n        Object[] originalValues,\n        Object[] additionalKeys,\n        Object[] additionalValues,\n        Comparator<?> comparator)", "class_method_signature": "BasicTools.unionInto(\n        Object[] originalKeys,\n        Object[] originalValues,\n        Object[] additionalKeys,\n        Object[] additionalValues,\n        Comparator<?> comparator)", "testcase": false, "constructor": false}, {"identifier": "flip", "parameters": "(int i)", "modifiers": "static", "return": "int", "signature": "int flip(int i)", "full_signature": "static int flip(int i)", "class_method_signature": "BasicTools.flip(int i)", "testcase": false, "constructor": false}, {"identifier": "checkType", "parameters": "(Comparator<? super T> comparator, T item)", "modifiers": "static", "return": "T", "signature": "T checkType(Comparator<? super T> comparator, T item)", "full_signature": "static T checkType(Comparator<? super T> comparator, T item)", "class_method_signature": "BasicTools.checkType(Comparator<? super T> comparator, T item)", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/nullschool/collect/basic/BasicTools.java"}, "focal_method": {"identifier": "insert", "parameters": "(Object[] original, int index, Object e)", "modifiers": "static", "return": "Object[]", "body": "static Object[] insert(Object[] original, int index, Object e) {\n        Object[] result = new Object[original.length + 1];\n        System.arraycopy(original, 0, result, 0, index);\n        result[index] = e;\n        System.arraycopy(original, index, result, index + 1, original.length - index);\n        return result;\n    }", "signature": "Object[] insert(Object[] original, int index, Object e)", "full_signature": "static Object[] insert(Object[] original, int index, Object e)", "class_method_signature": "BasicTools.insert(Object[] original, int index, Object e)", "testcase": false, "constructor": false, "invocations": ["arraycopy", "arraycopy"]}, "repository": {"repo_id": 9665465, "url": "https://github.com/cambecc/grains", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 13, "size": 1245, "license": "licensed"}}