{"test_class": {"identifier": "BasicSortedMap1Test", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/nullschool/collect/basic/BasicSortedMap1Test.java"}, "test_case": {"identifier": "test_get_value", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_get_value() {\n        assertEquals(1, new BasicSortedMap1<>(null, \"a\", 1).getValue(0));\n    }", "signature": "void test_get_value()", "full_signature": "@Test public void test_get_value()", "class_method_signature": "BasicSortedMap1Test.test_get_value()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getValue"]}, "focal_class": {"identifier": "BasicSortedMap1", "superclass": "extends BasicConstSortedMap<K, V>", "interfaces": "", "fields": [{"original_string": "private final K k0;", "modifier": "private final", "type": "K", "declarator": "k0", "var_name": "k0"}, {"original_string": "private final V v0;", "modifier": "private final", "type": "V", "declarator": "v0", "var_name": "v0"}], "methods": [{"identifier": "BasicSortedMap1", "parameters": "(Comparator<? super K> comparator, Object k0, Object v0)", "modifiers": "@SuppressWarnings(\"unchecked\")", "return": "", "signature": " BasicSortedMap1(Comparator<? super K> comparator, Object k0, Object v0)", "full_signature": "@SuppressWarnings(\"unchecked\")  BasicSortedMap1(Comparator<? super K> comparator, Object k0, Object v0)", "class_method_signature": "BasicSortedMap1.BasicSortedMap1(Comparator<? super K> comparator, Object k0, Object v0)", "testcase": false, "constructor": true}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "BasicSortedMap1.size()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "BasicSortedMap1.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "containsKey", "parameters": "(Object key)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsKey(Object key)", "full_signature": "@Override public boolean containsKey(Object key)", "class_method_signature": "BasicSortedMap1.containsKey(Object key)", "testcase": false, "constructor": false}, {"identifier": "containsValue", "parameters": "(Object value)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsValue(Object value)", "full_signature": "@Override public boolean containsValue(Object value)", "class_method_signature": "BasicSortedMap1.containsValue(Object value)", "testcase": false, "constructor": false}, {"identifier": "getKey", "parameters": "(int index)", "modifiers": "@Override", "return": "K", "signature": "K getKey(int index)", "full_signature": "@Override K getKey(int index)", "class_method_signature": "BasicSortedMap1.getKey(int index)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(int index)", "modifiers": "@Override", "return": "V", "signature": "V getValue(int index)", "full_signature": "@Override V getValue(int index)", "class_method_signature": "BasicSortedMap1.getValue(int index)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Object key)", "modifiers": "@Override public", "return": "V", "signature": "V get(Object key)", "full_signature": "@Override public V get(Object key)", "class_method_signature": "BasicSortedMap1.get(Object key)", "testcase": false, "constructor": false}, {"identifier": "firstKey", "parameters": "()", "modifiers": "@Override public", "return": "K", "signature": "K firstKey()", "full_signature": "@Override public K firstKey()", "class_method_signature": "BasicSortedMap1.firstKey()", "testcase": false, "constructor": false}, {"identifier": "lastKey", "parameters": "()", "modifiers": "@Override public", "return": "K", "signature": "K lastKey()", "full_signature": "@Override public K lastKey()", "class_method_signature": "BasicSortedMap1.lastKey()", "testcase": false, "constructor": false}, {"identifier": "keySet", "parameters": "()", "modifiers": "@Override public", "return": "ConstSortedSet<K>", "signature": "ConstSortedSet<K> keySet()", "full_signature": "@Override public ConstSortedSet<K> keySet()", "class_method_signature": "BasicSortedMap1.keySet()", "testcase": false, "constructor": false}, {"identifier": "values", "parameters": "()", "modifiers": "@Override public", "return": "ConstCollection<V>", "signature": "ConstCollection<V> values()", "full_signature": "@Override public ConstCollection<V> values()", "class_method_signature": "BasicSortedMap1.values()", "testcase": false, "constructor": false}, {"identifier": "entrySet", "parameters": "()", "modifiers": "@Override public", "return": "ConstSet<Entry<K, V>>", "signature": "ConstSet<Entry<K, V>> entrySet()", "full_signature": "@Override public ConstSet<Entry<K, V>> entrySet()", "class_method_signature": "BasicSortedMap1.entrySet()", "testcase": false, "constructor": false}, {"identifier": "with", "parameters": "(K key, V value)", "modifiers": "@Override public", "return": "ConstSortedMap<K, V>", "signature": "ConstSortedMap<K, V> with(K key, V value)", "full_signature": "@Override public ConstSortedMap<K, V> with(K key, V value)", "class_method_signature": "BasicSortedMap1.with(K key, V value)", "testcase": false, "constructor": false}, {"identifier": "withAll", "parameters": "(Map<? extends K, ? extends V> map)", "modifiers": "@Override public", "return": "ConstSortedMap<K, V>", "signature": "ConstSortedMap<K, V> withAll(Map<? extends K, ? extends V> map)", "full_signature": "@Override public ConstSortedMap<K, V> withAll(Map<? extends K, ? extends V> map)", "class_method_signature": "BasicSortedMap1.withAll(Map<? extends K, ? extends V> map)", "testcase": false, "constructor": false}, {"identifier": "without", "parameters": "(Object key)", "modifiers": "@Override public", "return": "ConstSortedMap<K, V>", "signature": "ConstSortedMap<K, V> without(Object key)", "full_signature": "@Override public ConstSortedMap<K, V> without(Object key)", "class_method_signature": "BasicSortedMap1.without(Object key)", "testcase": false, "constructor": false}, {"identifier": "withoutAll", "parameters": "(Collection<?> keys)", "modifiers": "@Override public", "return": "ConstSortedMap<K, V>", "signature": "ConstSortedMap<K, V> withoutAll(Collection<?> keys)", "full_signature": "@Override public ConstSortedMap<K, V> withoutAll(Collection<?> keys)", "class_method_signature": "BasicSortedMap1.withoutAll(Collection<?> keys)", "testcase": false, "constructor": false}, {"identifier": "headMap", "parameters": "(K toKey)", "modifiers": "@Override public", "return": "ConstSortedMap<K, V>", "signature": "ConstSortedMap<K, V> headMap(K toKey)", "full_signature": "@Override public ConstSortedMap<K, V> headMap(K toKey)", "class_method_signature": "BasicSortedMap1.headMap(K toKey)", "testcase": false, "constructor": false}, {"identifier": "tailMap", "parameters": "(K fromKey)", "modifiers": "@Override public", "return": "ConstSortedMap<K, V>", "signature": "ConstSortedMap<K, V> tailMap(K fromKey)", "full_signature": "@Override public ConstSortedMap<K, V> tailMap(K fromKey)", "class_method_signature": "BasicSortedMap1.tailMap(K fromKey)", "testcase": false, "constructor": false}, {"identifier": "subMap", "parameters": "(K fromKey, K toKey)", "modifiers": "@Override public", "return": "ConstSortedMap<K, V>", "signature": "ConstSortedMap<K, V> subMap(K fromKey, K toKey)", "full_signature": "@Override public ConstSortedMap<K, V> subMap(K fromKey, K toKey)", "class_method_signature": "BasicSortedMap1.subMap(K fromKey, K toKey)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "BasicSortedMap1.hashCode()", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/nullschool/collect/basic/BasicSortedMap1.java"}, "focal_method": {"identifier": "getValue", "parameters": "(int index)", "modifiers": "@Override", "return": "V", "body": "@Override V getValue(int index) {\n        if (index == 0) {\n            return v0;\n        }\n        throw new IndexOutOfBoundsException();\n    }", "signature": "V getValue(int index)", "full_signature": "@Override V getValue(int index)", "class_method_signature": "BasicSortedMap1.getValue(int index)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9665465, "url": "https://github.com/cambecc/grains", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 13, "size": 1245, "license": "licensed"}}