{"test_class": {"identifier": "ArrayToolsTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/nullschool/util/ArrayToolsTest.java"}, "test_case": {"identifier": "test_comparator_indexOf_null_arguments", "parameters": "()", "modifiers": "@Test(expected = NullPointerException.class) public", "return": "void", "body": "@Test(expected = NullPointerException.class)\n    public void test_comparator_indexOf_null_arguments() {\n        // CASE_INSENSITIVE_ORDER does not allow null strings.\n        indexOf(null, new String[] {null}, String.CASE_INSENSITIVE_ORDER);\n    }", "signature": "void test_comparator_indexOf_null_arguments()", "full_signature": "@Test(expected = NullPointerException.class) public void test_comparator_indexOf_null_arguments()", "class_method_signature": "ArrayToolsTest.test_comparator_indexOf_null_arguments()", "testcase": true, "constructor": false, "invocations": ["indexOf"]}, "focal_class": {"identifier": "ArrayTools", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];", "modifier": "public static final", "type": "Object[]", "declarator": "EMPTY_OBJECT_ARRAY = new Object[0]", "var_name": "EMPTY_OBJECT_ARRAY"}, {"original_string": "public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class<?>[0];", "modifier": "public static final", "type": "Class<?>[]", "declarator": "EMPTY_CLASS_ARRAY = new Class<?>[0]", "var_name": "EMPTY_CLASS_ARRAY"}, {"original_string": "public static final Type[] EMPTY_TYPE_ARRAY = new Type[0];", "modifier": "public static final", "type": "Type[]", "declarator": "EMPTY_TYPE_ARRAY = new Type[0]", "var_name": "EMPTY_TYPE_ARRAY"}], "methods": [{"identifier": "ArrayTools", "parameters": "()", "modifiers": "private", "return": "", "signature": " ArrayTools()", "full_signature": "private  ArrayTools()", "class_method_signature": "ArrayTools.ArrayTools()", "testcase": false, "constructor": true}, {"identifier": "indexOf", "parameters": "(T element, T[] array)", "modifiers": "public static", "return": "int", "signature": "int indexOf(T element, T[] array)", "full_signature": "public static int indexOf(T element, T[] array)", "class_method_signature": "ArrayTools.indexOf(T element, T[] array)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(T element, T[] array, int fromIndex, int toIndex)", "modifiers": "public static", "return": "int", "signature": "int indexOf(T element, T[] array, int fromIndex, int toIndex)", "full_signature": "public static int indexOf(T element, T[] array, int fromIndex, int toIndex)", "class_method_signature": "ArrayTools.indexOf(T element, T[] array, int fromIndex, int toIndex)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(T element, T[] array, Comparator<? super T> comparator)", "modifiers": "public static", "return": "int", "signature": "int indexOf(T element, T[] array, Comparator<? super T> comparator)", "full_signature": "public static int indexOf(T element, T[] array, Comparator<? super T> comparator)", "class_method_signature": "ArrayTools.indexOf(T element, T[] array, Comparator<? super T> comparator)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(T element, T[] array, int fromIndex, int toIndex, Comparator<? super T> comparator)", "modifiers": "public static", "return": "int", "signature": "int indexOf(T element, T[] array, int fromIndex, int toIndex, Comparator<? super T> comparator)", "full_signature": "public static int indexOf(T element, T[] array, int fromIndex, int toIndex, Comparator<? super T> comparator)", "class_method_signature": "ArrayTools.indexOf(T element, T[] array, int fromIndex, int toIndex, Comparator<? super T> comparator)", "testcase": false, "constructor": false}, {"identifier": "lastIndexOf", "parameters": "(T element, T[] array)", "modifiers": "public static", "return": "int", "signature": "int lastIndexOf(T element, T[] array)", "full_signature": "public static int lastIndexOf(T element, T[] array)", "class_method_signature": "ArrayTools.lastIndexOf(T element, T[] array)", "testcase": false, "constructor": false}, {"identifier": "checkRange", "parameters": "(int fromIndex, int toIndex, int length)", "modifiers": "public static", "return": "void", "signature": "void checkRange(int fromIndex, int toIndex, int length)", "full_signature": "public static void checkRange(int fromIndex, int toIndex, int length)", "class_method_signature": "ArrayTools.checkRange(int fromIndex, int toIndex, int length)", "testcase": false, "constructor": false}, {"identifier": "sort", "parameters": "(T[] a)", "modifiers": "public static", "return": "T[]", "signature": "T[] sort(T[] a)", "full_signature": "public static T[] sort(T[] a)", "class_method_signature": "ArrayTools.sort(T[] a)", "testcase": false, "constructor": false}, {"identifier": "sort", "parameters": "(T[] a, Comparator<? super T> c)", "modifiers": "public static", "return": "T[]", "signature": "T[] sort(T[] a, Comparator<? super T> c)", "full_signature": "public static T[] sort(T[] a, Comparator<? super T> c)", "class_method_signature": "ArrayTools.sort(T[] a, Comparator<? super T> c)", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/nullschool/util/ArrayTools.java"}, "focal_method": {"identifier": "indexOf", "parameters": "(T element, T[] array)", "modifiers": "public static", "return": "int", "body": "public static <T> int indexOf(T element, T[] array) {\n        if (element == null) {\n            for (int i = 0; i < array.length; i++) {\n                if (array[i] == null) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (int i = 0; i < array.length; i++) {\n                if (element.equals(array[i])) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }", "signature": "int indexOf(T element, T[] array)", "full_signature": "public static int indexOf(T element, T[] array)", "class_method_signature": "ArrayTools.indexOf(T element, T[] array)", "testcase": false, "constructor": false, "invocations": ["equals"]}, "repository": {"repo_id": 9665465, "url": "https://github.com/cambecc/grains", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 13, "size": 1245, "license": "licensed"}}