{"test_class": {"identifier": "ArrayTailIndexTest", "superclass": "", "interfaces": "", "fields": [], "file": "trie4j/src/test/java/org/trie4j/tail/index/ArrayTailIndexTest.java"}, "test_case": {"identifier": "test3", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test3() throws Exception{\n\t\tTailIndexBuilder tib = new ArrayTailIndexBuilder();\n\t\ttib.add(0, 0, 10);\n\t\ttib.add(1, -1, -1);\n\t\ttib.add(2, 10, 15);\n\t\tTailIndex ti = tib.build();\n\t\tAssert.assertEquals(0, ti.get(0));\n\t\tAssert.assertEquals(-1, ti.get(1));\n\t\tAssert.assertEquals(10, ti.get(2));\n\t}", "signature": "void test3()", "full_signature": "@Test public void test3()", "class_method_signature": "ArrayTailIndexTest.test3()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "build", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "ArrayTailIndex", "superclass": "", "interfaces": "implements Externalizable, TailIndex", "fields": [{"original_string": "private int[] indexes = new int[]{};", "modifier": "private", "type": "int[]", "declarator": "indexes = new int[]{}", "var_name": "indexes"}], "methods": [{"identifier": "ArrayTailIndex", "parameters": "()", "modifiers": "public", "return": "", "signature": " ArrayTailIndex()", "full_signature": "public  ArrayTailIndex()", "class_method_signature": "ArrayTailIndex.ArrayTailIndex()", "testcase": false, "constructor": true}, {"identifier": "ArrayTailIndex", "parameters": "(int[] indexes)", "modifiers": "public", "return": "", "signature": " ArrayTailIndex(int[] indexes)", "full_signature": "public  ArrayTailIndex(int[] indexes)", "class_method_signature": "ArrayTailIndex.ArrayTailIndex(int[] indexes)", "testcase": false, "constructor": true}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "ArrayTailIndex.size()", "testcase": false, "constructor": false}, {"identifier": "getIndexes", "parameters": "()", "modifiers": "public", "return": "int[]", "signature": "int[] getIndexes()", "full_signature": "public int[] getIndexes()", "class_method_signature": "ArrayTailIndex.getIndexes()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int nodeId)", "modifiers": "@Override public", "return": "int", "signature": "int get(int nodeId)", "full_signature": "@Override public int get(int nodeId)", "class_method_signature": "ArrayTailIndex.get(int nodeId)", "testcase": false, "constructor": false}, {"identifier": "readExternal", "parameters": "(ObjectInput in)", "modifiers": "@Override public", "return": "void", "signature": "void readExternal(ObjectInput in)", "full_signature": "@Override public void readExternal(ObjectInput in)", "class_method_signature": "ArrayTailIndex.readExternal(ObjectInput in)", "testcase": false, "constructor": false}, {"identifier": "writeExternal", "parameters": "(ObjectOutput out)", "modifiers": "@Override public", "return": "void", "signature": "void writeExternal(ObjectOutput out)", "full_signature": "@Override public void writeExternal(ObjectOutput out)", "class_method_signature": "ArrayTailIndex.writeExternal(ObjectOutput out)", "testcase": false, "constructor": false}], "file": "trie4j/src/main/java/org/trie4j/tail/index/ArrayTailIndex.java"}, "focal_method": {"identifier": "get", "parameters": "(int nodeId)", "modifiers": "@Override public", "return": "int", "body": "@Override\n\tpublic int get(int nodeId) {\n\t\treturn indexes[nodeId];\n\t}", "signature": "int get(int nodeId)", "full_signature": "@Override public int get(int nodeId)", "class_method_signature": "ArrayTailIndex.get(int nodeId)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 3999381, "url": "https://github.com/takawitter/trie4j", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 136, "size": 2037, "license": "licensed"}}