{"test_class": {"identifier": "OrmliteFilterRepositoryTest", "superclass": "extends OrmliteRepositoryBaseTest", "interfaces": "", "fields": [{"original_string": "private static final long HASH_ONE = 1L;", "modifier": "private static final", "type": "long", "declarator": "HASH_ONE = 1L", "var_name": "HASH_ONE"}, {"original_string": "private static final long HASH_TWO = 2L;", "modifier": "private static final", "type": "long", "declarator": "HASH_TWO = 2L", "var_name": "HASH_TWO"}, {"original_string": "private static final long HASH_THREE = 3L;", "modifier": "private static final", "type": "long", "declarator": "HASH_THREE = 3L", "var_name": "HASH_THREE"}, {"original_string": "private static final long HASH_NEW_THUMBNAIL = 4L;", "modifier": "private static final", "type": "long", "declarator": "HASH_NEW_THUMBNAIL = 4L", "var_name": "HASH_NEW_THUMBNAIL"}, {"original_string": "private static final long HASH_EXISTING_THUMBNAIL = 5L;", "modifier": "private static final", "type": "long", "declarator": "HASH_EXISTING_THUMBNAIL = 5L", "var_name": "HASH_EXISTING_THUMBNAIL"}, {"original_string": "private static final Tag TAG_ONE = new Tag(\"foo\");", "modifier": "private static final", "type": "Tag", "declarator": "TAG_ONE = new Tag(\"foo\")", "var_name": "TAG_ONE"}, {"original_string": "private static final Tag TAG_TWO = new Tag(\"bar\");", "modifier": "private static final", "type": "Tag", "declarator": "TAG_TWO = new Tag(\"bar\")", "var_name": "TAG_TWO"}, {"original_string": "private static final byte[] THUMB_HASH_EXISTING = { 1, 2, 3 };", "modifier": "private static final", "type": "byte[]", "declarator": "THUMB_HASH_EXISTING = { 1, 2, 3 }", "var_name": "THUMB_HASH_EXISTING"}, {"original_string": "private static final byte[] THUMB_HASH_NEW = { 9, 8, 7 };", "modifier": "private static final", "type": "byte[]", "declarator": "THUMB_HASH_NEW = { 9, 8, 7 }", "var_name": "THUMB_HASH_NEW"}, {"original_string": "private static final byte[] THUMB_IMAGE_EXISTING = { 5, 2, 16, 32 };", "modifier": "private static final", "type": "byte[]", "declarator": "THUMB_IMAGE_EXISTING = { 5, 2, 16, 32 }", "var_name": "THUMB_IMAGE_EXISTING"}, {"original_string": "private static final byte[] THUMB_IMAGE_NEW = { 5, 6, 72, 1 };", "modifier": "private static final", "type": "byte[]", "declarator": "THUMB_IMAGE_NEW = { 5, 6, 72, 1 }", "var_name": "THUMB_IMAGE_NEW"}, {"original_string": "private FilterRepository cut;", "modifier": "private", "type": "FilterRepository", "declarator": "cut", "var_name": "cut"}, {"original_string": "private Dao<FilterRecord, Integer> filterDao;", "modifier": "private", "type": "Dao<FilterRecord, Integer>", "declarator": "filterDao", "var_name": "filterDao"}, {"original_string": "private Dao<Thumbnail, Integer> thumbnailDao;", "modifier": "private", "type": "Dao<Thumbnail, Integer>", "declarator": "thumbnailDao", "var_name": "thumbnailDao"}, {"original_string": "private Dao<Tag, Long> tagdDao;", "modifier": "private", "type": "Dao<Tag, Long>", "declarator": "tagdDao", "var_name": "tagdDao"}, {"original_string": "private Thumbnail exsitingThumbnail;", "modifier": "private", "type": "Thumbnail", "declarator": "exsitingThumbnail", "var_name": "exsitingThumbnail"}, {"original_string": "private Thumbnail newThumbnail;", "modifier": "private", "type": "Thumbnail", "declarator": "newThumbnail", "var_name": "newThumbnail"}, {"original_string": "private List<FilterRecord> allFilters;", "modifier": "private", "type": "List<FilterRecord>", "declarator": "allFilters", "var_name": "allFilters"}, {"original_string": "private ConnectionSource cs;", "modifier": "private", "type": "ConnectionSource", "declarator": "cs", "var_name": "cs"}], "file": "core/src/test/java/com/github/dozedoff/similarImage/db/repository/ormlite/OrmliteFilterRepositoryTest.java"}, "test_case": {"identifier": "testGetByHash", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\t\tpublic void testGetByHash() throws Exception {\n\t\t\tList<FilterRecord> filters = cut.getByHash(HASH_TWO);\n\t\t\t\n\t\t\tassertThat(filters, containsInAnyOrder(new FilterRecord(HASH_TWO, TAG_TWO, null)));\n\t\t}", "signature": "void testGetByHash()", "full_signature": "@Test public void testGetByHash()", "class_method_signature": "OrmliteFilterRepositoryTest.testGetByHash()", "testcase": true, "constructor": false, "invocations": ["getByHash", "assertThat", "containsInAnyOrder"]}, "focal_class": {"identifier": "OrmliteFilterRepository", "superclass": "", "interfaces": "implements FilterRepository", "fields": [{"original_string": "private static final String THUMB_HASH_COLUMN_NAME = \"uniqueHash\";", "modifier": "private static final", "type": "String", "declarator": "THUMB_HASH_COLUMN_NAME = \"uniqueHash\"", "var_name": "THUMB_HASH_COLUMN_NAME"}, {"original_string": "private static final String STORE_FILTER_ERROR_MSG = \"Failed to store Filter\";", "modifier": "private static final", "type": "String", "declarator": "STORE_FILTER_ERROR_MSG = \"Failed to store Filter\"", "var_name": "STORE_FILTER_ERROR_MSG"}, {"original_string": "private Dao<FilterRecord, Integer> filterDao;", "modifier": "private", "type": "Dao<FilterRecord, Integer>", "declarator": "filterDao", "var_name": "filterDao"}, {"original_string": "private Dao<Thumbnail, Integer> thumbnailDao;", "modifier": "private", "type": "Dao<Thumbnail, Integer>", "declarator": "thumbnailDao", "var_name": "thumbnailDao"}, {"original_string": "private PreparedQuery<Thumbnail> thumbnailHashQuery;", "modifier": "private", "type": "PreparedQuery<Thumbnail>", "declarator": "thumbnailHashQuery", "var_name": "thumbnailHashQuery"}, {"original_string": "private SelectArg thumbnailHashQueryArg;", "modifier": "private", "type": "SelectArg", "declarator": "thumbnailHashQueryArg", "var_name": "thumbnailHashQueryArg"}], "methods": [{"identifier": "OrmliteFilterRepository", "parameters": "(Dao<FilterRecord, Integer> filterDao, Dao<Thumbnail, Integer> thumbnailDao)", "modifiers": "public", "return": "", "signature": " OrmliteFilterRepository(Dao<FilterRecord, Integer> filterDao, Dao<Thumbnail, Integer> thumbnailDao)", "full_signature": "public  OrmliteFilterRepository(Dao<FilterRecord, Integer> filterDao, Dao<Thumbnail, Integer> thumbnailDao)", "class_method_signature": "OrmliteFilterRepository.OrmliteFilterRepository(Dao<FilterRecord, Integer> filterDao, Dao<Thumbnail, Integer> thumbnailDao)", "testcase": false, "constructor": true}, {"identifier": "getByHash", "parameters": "(long hash)", "modifiers": "@Override public", "return": "List<FilterRecord>", "signature": "List<FilterRecord> getByHash(long hash)", "full_signature": "@Override public List<FilterRecord> getByHash(long hash)", "class_method_signature": "OrmliteFilterRepository.getByHash(long hash)", "testcase": false, "constructor": false}, {"identifier": "getByTag", "parameters": "(Tag tag)", "modifiers": "@Override public", "return": "List<FilterRecord>", "signature": "List<FilterRecord> getByTag(Tag tag)", "full_signature": "@Override public List<FilterRecord> getByTag(Tag tag)", "class_method_signature": "OrmliteFilterRepository.getByTag(Tag tag)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "()", "modifiers": "@Override public", "return": "List<FilterRecord>", "signature": "List<FilterRecord> getAll()", "full_signature": "@Override public List<FilterRecord> getAll()", "class_method_signature": "OrmliteFilterRepository.getAll()", "testcase": false, "constructor": false}, {"identifier": "store", "parameters": "(FilterRecord toStore)", "modifiers": "@Override public", "return": "void", "signature": "void store(FilterRecord toStore)", "full_signature": "@Override public void store(FilterRecord toStore)", "class_method_signature": "OrmliteFilterRepository.store(FilterRecord toStore)", "testcase": false, "constructor": false}, {"identifier": "checkAndCreateThumbnail", "parameters": "(FilterRecord toStore)", "modifiers": "private", "return": "void", "signature": "void checkAndCreateThumbnail(FilterRecord toStore)", "full_signature": "private void checkAndCreateThumbnail(FilterRecord toStore)", "class_method_signature": "OrmliteFilterRepository.checkAndCreateThumbnail(FilterRecord toStore)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(FilterRecord filter)", "modifiers": "@Override public", "return": "void", "signature": "void remove(FilterRecord filter)", "full_signature": "@Override public void remove(FilterRecord filter)", "class_method_signature": "OrmliteFilterRepository.remove(FilterRecord filter)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/github/dozedoff/similarImage/db/repository/ormlite/OrmliteFilterRepository.java"}, "focal_method": {"identifier": "getByHash", "parameters": "(long hash)", "modifiers": "@Override public", "return": "List<FilterRecord>", "body": "@Override\n\tpublic List<FilterRecord> getByHash(long hash) throws RepositoryException {\n\t\ttry {\n\t\t\treturn filterDao.queryForMatching(new FilterRecord(hash, null, null));\n\t\t} catch (SQLException e) {\n\t\t\tthrow new RepositoryException(\"Failed to query by hash\", e);\n\t\t}\n\t}", "signature": "List<FilterRecord> getByHash(long hash)", "full_signature": "@Override public List<FilterRecord> getByHash(long hash)", "class_method_signature": "OrmliteFilterRepository.getByHash(long hash)", "testcase": false, "constructor": false, "invocations": ["queryForMatching"]}, "repository": {"repo_id": 9713275, "url": "https://github.com/seeker/similarImage", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 15, "size": 3845, "license": "licensed"}}