{"test_class": {"identifier": "MessageCollectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int MESSAGE_THRESHOLD = 5;", "modifier": "private static final", "type": "int", "declarator": "MESSAGE_THRESHOLD = 5", "var_name": "MESSAGE_THRESHOLD"}, {"original_string": "@Mock\n\tprivate CollectedMessageConsumer collector;", "modifier": "@Mock\n\tprivate", "type": "CollectedMessageConsumer", "declarator": "collector", "var_name": "collector"}, {"original_string": "@Mock\n\tprivate CollectedMessageConsumer collector2;", "modifier": "@Mock\n\tprivate", "type": "CollectedMessageConsumer", "declarator": "collector2", "var_name": "collector2"}, {"original_string": "@Mock\n\tprivate ClientMessage message;", "modifier": "@Mock\n\tprivate", "type": "ClientMessage", "declarator": "message", "var_name": "message"}, {"original_string": "@Captor\n\tprivate ArgumentCaptor<List<ClientMessage>> drainedValues;", "modifier": "@Captor\n\tprivate", "type": "ArgumentCaptor<List<ClientMessage>>", "declarator": "drainedValues", "var_name": "drainedValues"}, {"original_string": "private MessageCollector cut;", "modifier": "private", "type": "MessageCollector", "declarator": "cut", "var_name": "cut"}], "file": "distributed/src/test/java/com/github/dozedoff/similarImage/messaging/MessageCollectorTest.java"}, "test_case": {"identifier": "testAddMessageAboveThreshold", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testAddMessageAboveThreshold() throws Exception {\n\t\taddNumberOfMessages(MESSAGE_THRESHOLD);\n\n\t\tverify(collector).onDrain(anyListOf(ClientMessage.class));\n\t}", "signature": "void testAddMessageAboveThreshold()", "full_signature": "@Test public void testAddMessageAboveThreshold()", "class_method_signature": "MessageCollectorTest.testAddMessageAboveThreshold()", "testcase": true, "constructor": false, "invocations": ["addNumberOfMessages", "onDrain", "verify", "anyListOf"]}, "focal_class": {"identifier": "MessageCollector", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(MessageCollector.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(MessageCollector.class)", "var_name": "LOGGER"}, {"original_string": "private final int collectedMessageThreshold;", "modifier": "private final", "type": "int", "declarator": "collectedMessageThreshold", "var_name": "collectedMessageThreshold"}, {"original_string": "private final CollectedMessageConsumer[] consumers;", "modifier": "private final", "type": "CollectedMessageConsumer[]", "declarator": "consumers", "var_name": "consumers"}, {"original_string": "private final List<ClientMessage> collectedMessages;", "modifier": "private final", "type": "List<ClientMessage>", "declarator": "collectedMessages", "var_name": "collectedMessages"}], "methods": [{"identifier": "MessageCollector", "parameters": "(int collectedMessageThreshold, CollectedMessageConsumer... consumers)", "modifiers": "public", "return": "", "signature": " MessageCollector(int collectedMessageThreshold, CollectedMessageConsumer... consumers)", "full_signature": "public  MessageCollector(int collectedMessageThreshold, CollectedMessageConsumer... consumers)", "class_method_signature": "MessageCollector.MessageCollector(int collectedMessageThreshold, CollectedMessageConsumer... consumers)", "testcase": false, "constructor": true}, {"identifier": "addMessage", "parameters": "(ClientMessage message)", "modifiers": "public", "return": "void", "signature": "void addMessage(ClientMessage message)", "full_signature": "public void addMessage(ClientMessage message)", "class_method_signature": "MessageCollector.addMessage(ClientMessage message)", "testcase": false, "constructor": false}, {"identifier": "drain", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void drain()", "full_signature": "public void drain()", "class_method_signature": "MessageCollector.drain()", "testcase": false, "constructor": false}, {"identifier": "onDrain", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void onDrain()", "full_signature": "private void onDrain()", "class_method_signature": "MessageCollector.onDrain()", "testcase": false, "constructor": false}], "file": "distributed/src/main/java/com/github/dozedoff/similarImage/messaging/MessageCollector.java"}, "focal_method": {"identifier": "onDrain", "parameters": "()", "modifiers": "private", "return": "void", "body": "private void onDrain() {\n\t\tImmutableList<ClientMessage> immutable;\n\t\tLOGGER.trace(\"Draining {} collected messsages...\", collectedMessages.size());\n\n\t\tsynchronized (collectedMessages) {\n\t\t\timmutable = ImmutableList.copyOf(collectedMessages);\n\t\t\tcollectedMessages.clear();\n\t\t}\n\n\t\tfor (CollectedMessageConsumer drain : consumers) {\n\t\t\tdrain.onDrain(immutable);\n\t\t}\n\t}", "signature": "void onDrain()", "full_signature": "private void onDrain()", "class_method_signature": "MessageCollector.onDrain()", "testcase": false, "constructor": false, "invocations": ["trace", "size", "copyOf", "clear", "onDrain"]}, "repository": {"repo_id": 9713275, "url": "https://github.com/seeker/similarImage", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 15, "size": 3845, "license": "licensed"}}