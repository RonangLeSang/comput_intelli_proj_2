{"test_class": {"identifier": "MessageFactoryTest", "superclass": "extends MessagingBaseTest", "interfaces": "", "fields": [{"original_string": "private static final int EXPECTED_MESSAGE_SIZE = 54;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_MESSAGE_SIZE = 54", "var_name": "EXPECTED_MESSAGE_SIZE"}, {"original_string": "private static final long HASH = 12L;", "modifier": "private static final", "type": "long", "declarator": "HASH = 12L", "var_name": "HASH"}, {"original_string": "private static final byte[] IMAGE_DATA = { 0, 1, 2, 3, 4 };", "modifier": "private static final", "type": "byte[]", "declarator": "IMAGE_DATA = { 0, 1, 2, 3, 4 }", "var_name": "IMAGE_DATA"}, {"original_string": "private static final Path PATH = Paths.get(\"foo\");", "modifier": "private static final", "type": "Path", "declarator": "PATH = Paths.get(\"foo\")", "var_name": "PATH"}, {"original_string": "private static final UUID UUID = new UUID(99, 100);", "modifier": "private static final", "type": "UUID", "declarator": "UUID = new UUID(99, 100)", "var_name": "UUID"}, {"original_string": "@Mock\n\tprivate InputStream is;", "modifier": "@Mock\n\tprivate", "type": "InputStream", "declarator": "is", "var_name": "is"}, {"original_string": "private MessageFactory cut;", "modifier": "private", "type": "MessageFactory", "declarator": "cut", "var_name": "cut"}], "file": "distributed/src/test/java/com/github/dozedoff/similarImage/messaging/MessageFactoryTest.java"}, "test_case": {"identifier": "testCorruptMessagePath", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCorruptMessagePath() throws Exception {\n\t\tClientMessage result = cut.corruptMessage(PATH);\n\n\t\tassertThat(result.getStringProperty(MessageProperty.path.toString()), is(PATH.toString()));\n\t}", "signature": "void testCorruptMessagePath()", "full_signature": "@Test public void testCorruptMessagePath()", "class_method_signature": "MessageFactoryTest.testCorruptMessagePath()", "testcase": true, "constructor": false, "invocations": ["corruptMessage", "assertThat", "getStringProperty", "toString", "is", "toString"]}, "focal_class": {"identifier": "MessageFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ClientSession session;", "modifier": "private final", "type": "ClientSession", "declarator": "session", "var_name": "session"}], "methods": [{"identifier": "MessageFactory", "parameters": "(ClientSession session)", "modifiers": "public", "return": "", "signature": " MessageFactory(ClientSession session)", "full_signature": "public  MessageFactory(ClientSession session)", "class_method_signature": "MessageFactory.MessageFactory(ClientSession session)", "testcase": false, "constructor": true}, {"identifier": "setTaskType", "parameters": "(ClientMessage message, TaskType task)", "modifiers": "private", "return": "void", "signature": "void setTaskType(ClientMessage message, TaskType task)", "full_signature": "private void setTaskType(ClientMessage message, TaskType task)", "class_method_signature": "MessageFactory.setTaskType(ClientMessage message, TaskType task)", "testcase": false, "constructor": false}, {"identifier": "setPath", "parameters": "(ClientMessage message, Path value)", "modifiers": "private", "return": "void", "signature": "void setPath(ClientMessage message, Path value)", "full_signature": "private void setPath(ClientMessage message, Path value)", "class_method_signature": "MessageFactory.setPath(ClientMessage message, Path value)", "testcase": false, "constructor": false}, {"identifier": "hashRequestMessage", "parameters": "(byte[] resizedImage, UUID uuid)", "modifiers": "public", "return": "ClientMessage", "signature": "ClientMessage hashRequestMessage(byte[] resizedImage, UUID uuid)", "full_signature": "public ClientMessage hashRequestMessage(byte[] resizedImage, UUID uuid)", "class_method_signature": "MessageFactory.hashRequestMessage(byte[] resizedImage, UUID uuid)", "testcase": false, "constructor": false}, {"identifier": "resultMessage", "parameters": "(long hash, long most, long least)", "modifiers": "public", "return": "ClientMessage", "signature": "ClientMessage resultMessage(long hash, long most, long least)", "full_signature": "public ClientMessage resultMessage(long hash, long most, long least)", "class_method_signature": "MessageFactory.resultMessage(long hash, long most, long least)", "testcase": false, "constructor": false}, {"identifier": "corruptMessage", "parameters": "(Path path)", "modifiers": "public", "return": "ClientMessage", "signature": "ClientMessage corruptMessage(Path path)", "full_signature": "public ClientMessage corruptMessage(Path path)", "class_method_signature": "MessageFactory.corruptMessage(Path path)", "testcase": false, "constructor": false}, {"identifier": "pendingImageQuery", "parameters": "()", "modifiers": "public", "return": "ClientMessage", "signature": "ClientMessage pendingImageQuery()", "full_signature": "public ClientMessage pendingImageQuery()", "class_method_signature": "MessageFactory.pendingImageQuery()", "testcase": false, "constructor": false}, {"identifier": "pendingImageResponse", "parameters": "(List<PendingHashImage> pendingImages)", "modifiers": "public", "return": "ClientMessage", "signature": "ClientMessage pendingImageResponse(List<PendingHashImage> pendingImages)", "full_signature": "public ClientMessage pendingImageResponse(List<PendingHashImage> pendingImages)", "class_method_signature": "MessageFactory.pendingImageResponse(List<PendingHashImage> pendingImages)", "testcase": false, "constructor": false}, {"identifier": "trackPath", "parameters": "(Path path, UUID uuid)", "modifiers": "public", "return": "ClientMessage", "signature": "ClientMessage trackPath(Path path, UUID uuid)", "full_signature": "public ClientMessage trackPath(Path path, UUID uuid)", "class_method_signature": "MessageFactory.trackPath(Path path, UUID uuid)", "testcase": false, "constructor": false}, {"identifier": "eaUpdate", "parameters": "(Path path, long hash)", "modifiers": "public", "return": "ClientMessage", "signature": "ClientMessage eaUpdate(Path path, long hash)", "full_signature": "public ClientMessage eaUpdate(Path path, long hash)", "class_method_signature": "MessageFactory.eaUpdate(Path path, long hash)", "testcase": false, "constructor": false}, {"identifier": "resizeRequest", "parameters": "(Path path, InputStream is)", "modifiers": "public", "return": "ClientMessage", "signature": "ClientMessage resizeRequest(Path path, InputStream is)", "full_signature": "public ClientMessage resizeRequest(Path path, InputStream is)", "class_method_signature": "MessageFactory.resizeRequest(Path path, InputStream is)", "testcase": false, "constructor": false}, {"identifier": "copyInputStreamToMessage", "parameters": "(InputStream is, ClientMessage message)", "modifiers": "private", "return": "void", "signature": "void copyInputStreamToMessage(InputStream is, ClientMessage message)", "full_signature": "private void copyInputStreamToMessage(InputStream is, ClientMessage message)", "class_method_signature": "MessageFactory.copyInputStreamToMessage(InputStream is, ClientMessage message)", "testcase": false, "constructor": false}], "file": "distributed/src/main/java/com/github/dozedoff/similarImage/messaging/MessageFactory.java"}, "focal_method": {"identifier": "corruptMessage", "parameters": "(Path path)", "modifiers": "public", "return": "ClientMessage", "body": "public ClientMessage corruptMessage(Path path) {\n\t\tClientMessage message = session.createMessage(true);\n\n\t\tmessage.putStringProperty(MessageProperty.path.toString(), path.toString());\n\t\tmessage.putStringProperty(MessageProperty.task.toString(), TaskType.corr.toString());\n\n\t\treturn message;\n\t}", "signature": "ClientMessage corruptMessage(Path path)", "full_signature": "public ClientMessage corruptMessage(Path path)", "class_method_signature": "MessageFactory.corruptMessage(Path path)", "testcase": false, "constructor": false, "invocations": ["createMessage", "putStringProperty", "toString", "toString", "putStringProperty", "toString", "toString"]}, "repository": {"repo_id": 9713275, "url": "https://github.com/seeker/similarImage", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 15, "size": 3845, "license": "licensed"}}