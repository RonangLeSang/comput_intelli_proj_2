{"test_class": {"identifier": "ByteBufferInputstreamTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final byte[] TEST_DATA = { 2, 4, 6, 8, 7, 4, 89, 43, 12, 90 };", "modifier": "private static final", "type": "byte[]", "declarator": "TEST_DATA = { 2, 4, 6, 8, 7, 4, 89, 43, 12, 90 }", "var_name": "TEST_DATA"}, {"original_string": "private static final int BUFFER_CAPACITY = 50;", "modifier": "private static final", "type": "int", "declarator": "BUFFER_CAPACITY = 50", "var_name": "BUFFER_CAPACITY"}, {"original_string": "private ByteBuffer buffer;", "modifier": "private", "type": "ByteBuffer", "declarator": "buffer", "var_name": "buffer"}, {"original_string": "private InputStream input;", "modifier": "private", "type": "InputStream", "declarator": "input", "var_name": "input"}], "file": "core/src/test/java/com/github/dozedoff/similarImage/io/ByteBufferInputstreamTest.java"}, "test_case": {"identifier": "testReadFirstByte", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testReadFirstByte() throws Exception {\n\t\tassertThat(input.read(), is(2));\n\t}", "signature": "void testReadFirstByte()", "full_signature": "@Test public void testReadFirstByte()", "class_method_signature": "ByteBufferInputstreamTest.testReadFirstByte()", "testcase": true, "constructor": false, "invocations": ["assertThat", "read", "is"]}, "focal_class": {"identifier": "ByteBufferInputstream", "superclass": "extends InputStream", "interfaces": "", "fields": [{"original_string": "private final ByteBuffer buffer;", "modifier": "private final", "type": "ByteBuffer", "declarator": "buffer", "var_name": "buffer"}], "methods": [{"identifier": "ByteBufferInputstream", "parameters": "(ByteBuffer buffer)", "modifiers": "public", "return": "", "signature": " ByteBufferInputstream(ByteBuffer buffer)", "full_signature": "public  ByteBufferInputstream(ByteBuffer buffer)", "class_method_signature": "ByteBufferInputstream.ByteBufferInputstream(ByteBuffer buffer)", "testcase": false, "constructor": true}, {"identifier": "read", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int read()", "full_signature": "@Override public int read()", "class_method_signature": "ByteBufferInputstream.read()", "testcase": false, "constructor": false}, {"identifier": "available", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int available()", "full_signature": "@Override public int available()", "class_method_signature": "ByteBufferInputstream.available()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/github/dozedoff/similarImage/io/ByteBufferInputstream.java"}, "focal_method": {"identifier": "read", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n\tpublic int read() throws IOException {\n\t\tif (buffer.hasRemaining()) {\n\t\t\treturn buffer.get() & 0xFF;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}", "signature": "int read()", "full_signature": "@Override public int read()", "class_method_signature": "ByteBufferInputstream.read()", "testcase": false, "constructor": false, "invocations": ["hasRemaining", "get"]}, "repository": {"repo_id": 9713275, "url": "https://github.com/seeker/similarImage", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 15, "size": 3845, "license": "licensed"}}