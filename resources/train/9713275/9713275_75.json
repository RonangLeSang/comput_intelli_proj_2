{"test_class": {"identifier": "ImageRecordTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String EXPECTED_TO_STRING = \"ImageRecord{path:foo,hash:42}\";", "modifier": "private static final", "type": "String", "declarator": "EXPECTED_TO_STRING = \"ImageRecord{path:foo,hash:42}\"", "var_name": "EXPECTED_TO_STRING"}, {"original_string": "private ImageRecord imageRecord;", "modifier": "private", "type": "ImageRecord", "declarator": "imageRecord", "var_name": "imageRecord"}], "file": "core/src/test/java/com/github/dozedoff/similarImage/db/ImageRecordTest.java"}, "test_case": {"identifier": "testCompareToEqual", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCompareToEqual() throws Exception {\n\t\tassertThat(imageRecord.compareTo(new ImageRecord(\"bar\", 42)), is(0));\n\t}", "signature": "void testCompareToEqual()", "full_signature": "@Test public void testCompareToEqual()", "class_method_signature": "ImageRecordTest.testCompareToEqual()", "testcase": true, "constructor": false, "invocations": ["assertThat", "compareTo", "is"]}, "focal_class": {"identifier": "ImageRecord", "superclass": "", "interfaces": "implements Comparable<ImageRecord>", "fields": [{"original_string": "public static final String PATH_COLUMN_NAME = \"path\";", "modifier": "public static final", "type": "String", "declarator": "PATH_COLUMN_NAME = \"path\"", "var_name": "PATH_COLUMN_NAME"}, {"original_string": "@DatabaseField(id = true, canBeNull = false, columnName = PATH_COLUMN_NAME)\n\tString path;", "modifier": "@DatabaseField(id = true, canBeNull = false, columnName = PATH_COLUMN_NAME)", "type": "String", "declarator": "path", "var_name": "path"}, {"original_string": "@DatabaseField(canBeNull = false)\n\tlong pHash;", "modifier": "@DatabaseField(canBeNull = false)", "type": "long", "declarator": "pHash", "var_name": "pHash"}], "methods": [{"identifier": "ImageRecord", "parameters": "()", "modifiers": "@Deprecated public", "return": "", "signature": " ImageRecord()", "full_signature": "@Deprecated public  ImageRecord()", "class_method_signature": "ImageRecord.ImageRecord()", "testcase": false, "constructor": true}, {"identifier": "ImageRecord", "parameters": "(String path, long pHash)", "modifiers": "public", "return": "", "signature": " ImageRecord(String path, long pHash)", "full_signature": "public  ImageRecord(String path, long pHash)", "class_method_signature": "ImageRecord.ImageRecord(String path, long pHash)", "testcase": false, "constructor": true}, {"identifier": "getPath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPath()", "full_signature": "public String getPath()", "class_method_signature": "ImageRecord.getPath()", "testcase": false, "constructor": false}, {"identifier": "getpHash", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getpHash()", "full_signature": "public long getpHash()", "class_method_signature": "ImageRecord.getpHash()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImageRecord.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "ImageRecord.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(ImageRecord o)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(ImageRecord o)", "full_signature": "@Override public int compareTo(ImageRecord o)", "class_method_signature": "ImageRecord.compareTo(ImageRecord o)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImageRecord.toString()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/github/dozedoff/similarImage/db/ImageRecord.java"}, "focal_method": {"identifier": "compareTo", "parameters": "(ImageRecord o)", "modifiers": "@Override public", "return": "int", "body": "@Override\n\tpublic int compareTo(ImageRecord o) {\n\t\tif (o == null) {\n\t\t\tthrow new NullPointerException();\n\t\t}\n\n\t\tif (this.pHash == o.getpHash()) {\n\t\t\treturn 0;\n\t\t} else if (this.getpHash() > o.pHash) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}", "signature": "int compareTo(ImageRecord o)", "full_signature": "@Override public int compareTo(ImageRecord o)", "class_method_signature": "ImageRecord.compareTo(ImageRecord o)", "testcase": false, "constructor": false, "invocations": ["getpHash", "getpHash"]}, "repository": {"repo_id": 9713275, "url": "https://github.com/seeker/similarImage", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 15, "size": 3845, "license": "licensed"}}