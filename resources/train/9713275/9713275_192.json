{"test_class": {"identifier": "ImageQueryPipelineBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int DISTANCE = 42;", "modifier": "private static final", "type": "int", "declarator": "DISTANCE = 42", "var_name": "DISTANCE"}, {"original_string": "@Mock\n\tprivate ImageRepository imageRepository;", "modifier": "@Mock\n\tprivate", "type": "ImageRepository", "declarator": "imageRepository", "var_name": "imageRepository"}, {"original_string": "@Mock\n\tprivate FilterRepository filterRepository;", "modifier": "@Mock\n\tprivate", "type": "FilterRepository", "declarator": "filterRepository", "var_name": "filterRepository"}, {"original_string": "@InjectMocks\n\tprivate ImageQueryPipelineBuilder imageQueryPipelineBuilder;", "modifier": "@InjectMocks\n\tprivate", "type": "ImageQueryPipelineBuilder", "declarator": "imageQueryPipelineBuilder", "var_name": "imageQueryPipelineBuilder"}, {"original_string": "private ImageQueryPipelineBuilder cut;", "modifier": "private", "type": "ImageQueryPipelineBuilder", "declarator": "cut", "var_name": "cut"}], "file": "core/src/test/java/com/github/dozedoff/similarImage/thread/pipeline/ImageQueryPipelineBuilderTest.java"}, "test_case": {"identifier": "testNewBuilder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testNewBuilder() throws Exception {\n\t\tassertThat(ImageQueryPipelineBuilder.newBuilder(imageRepository, filterRepository),\n\t\t\t\tis(instanceOf(ImageQueryPipelineBuilder.class)));\n\t}", "signature": "void testNewBuilder()", "full_signature": "@Test public void testNewBuilder()", "class_method_signature": "ImageQueryPipelineBuilderTest.testNewBuilder()", "testcase": true, "constructor": false, "invocations": ["assertThat", "newBuilder", "is", "instanceOf"]}, "focal_class": {"identifier": "ImageQueryPipelineBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ImageQueryPipelineBuilder.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ImageQueryPipelineBuilder.class)", "var_name": "LOGGER"}, {"original_string": "private final ImageRepository imageRepository;", "modifier": "private final", "type": "ImageRepository", "declarator": "imageRepository", "var_name": "imageRepository"}, {"original_string": "private final FilterRepository filterRepository;", "modifier": "private final", "type": "FilterRepository", "declarator": "filterRepository", "var_name": "filterRepository"}, {"original_string": "private Function<Path, List<ImageRecord>> imageQuery;", "modifier": "private", "type": "Function<Path, List<ImageRecord>>", "declarator": "imageQuery", "var_name": "imageQuery"}, {"original_string": "private List<Function<Multimap<Long, ImageRecord>, Multimap<Long, ImageRecord>>> postProcessing;", "modifier": "private", "type": "List<Function<Multimap<Long, ImageRecord>, Multimap<Long, ImageRecord>>>", "declarator": "postProcessing", "var_name": "postProcessing"}, {"original_string": "private int hammingDistance;", "modifier": "private", "type": "int", "declarator": "hammingDistance", "var_name": "hammingDistance"}, {"original_string": "private Function<Collection<ImageRecord>, Multimap<Long, ImageRecord>> imageGrouper;", "modifier": "private", "type": "Function<Collection<ImageRecord>, Multimap<Long, ImageRecord>>", "declarator": "imageGrouper", "var_name": "imageGrouper"}], "methods": [{"identifier": "ImageQueryPipelineBuilder", "parameters": "(ImageRepository imageRepository, FilterRepository filterRepository)", "modifiers": "public", "return": "", "signature": " ImageQueryPipelineBuilder(ImageRepository imageRepository, FilterRepository filterRepository)", "full_signature": "public  ImageQueryPipelineBuilder(ImageRepository imageRepository, FilterRepository filterRepository)", "class_method_signature": "ImageQueryPipelineBuilder.ImageQueryPipelineBuilder(ImageRepository imageRepository, FilterRepository filterRepository)", "testcase": false, "constructor": true}, {"identifier": "excludeIgnored", "parameters": "()", "modifiers": "public", "return": "ImageQueryPipelineBuilder", "signature": "ImageQueryPipelineBuilder excludeIgnored()", "full_signature": "public ImageQueryPipelineBuilder excludeIgnored()", "class_method_signature": "ImageQueryPipelineBuilder.excludeIgnored()", "testcase": false, "constructor": false}, {"identifier": "excludeIgnored", "parameters": "(boolean exclude)", "modifiers": "public", "return": "ImageQueryPipelineBuilder", "signature": "ImageQueryPipelineBuilder excludeIgnored(boolean exclude)", "full_signature": "public ImageQueryPipelineBuilder excludeIgnored(boolean exclude)", "class_method_signature": "ImageQueryPipelineBuilder.excludeIgnored(boolean exclude)", "testcase": false, "constructor": false}, {"identifier": "removeSingleImageGroups", "parameters": "()", "modifiers": "public", "return": "ImageQueryPipelineBuilder", "signature": "ImageQueryPipelineBuilder removeSingleImageGroups()", "full_signature": "public ImageQueryPipelineBuilder removeSingleImageGroups()", "class_method_signature": "ImageQueryPipelineBuilder.removeSingleImageGroups()", "testcase": false, "constructor": false}, {"identifier": "removeDuplicateGroups", "parameters": "()", "modifiers": "public", "return": "ImageQueryPipelineBuilder", "signature": "ImageQueryPipelineBuilder removeDuplicateGroups()", "full_signature": "public ImageQueryPipelineBuilder removeDuplicateGroups()", "class_method_signature": "ImageQueryPipelineBuilder.removeDuplicateGroups()", "testcase": false, "constructor": false}, {"identifier": "distance", "parameters": "(int distance)", "modifiers": "public", "return": "ImageQueryPipelineBuilder", "signature": "ImageQueryPipelineBuilder distance(int distance)", "full_signature": "public ImageQueryPipelineBuilder distance(int distance)", "class_method_signature": "ImageQueryPipelineBuilder.distance(int distance)", "testcase": false, "constructor": false}, {"identifier": "groupByTag", "parameters": "(Tag tag)", "modifiers": "public", "return": "ImageQueryPipelineBuilder", "signature": "ImageQueryPipelineBuilder groupByTag(Tag tag)", "full_signature": "public ImageQueryPipelineBuilder groupByTag(Tag tag)", "class_method_signature": "ImageQueryPipelineBuilder.groupByTag(Tag tag)", "testcase": false, "constructor": false}, {"identifier": "groupAll", "parameters": "()", "modifiers": "public", "return": "ImageQueryPipelineBuilder", "signature": "ImageQueryPipelineBuilder groupAll()", "full_signature": "public ImageQueryPipelineBuilder groupAll()", "class_method_signature": "ImageQueryPipelineBuilder.groupAll()", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "ImageQueryPipeline", "signature": "ImageQueryPipeline build()", "full_signature": "public ImageQueryPipeline build()", "class_method_signature": "ImageQueryPipelineBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "newBuilder", "parameters": "(ImageRepository imageRepository,\n\t\t\tFilterRepository filterRepository)", "modifiers": "public static", "return": "ImageQueryPipelineBuilder", "signature": "ImageQueryPipelineBuilder newBuilder(ImageRepository imageRepository,\n\t\t\tFilterRepository filterRepository)", "full_signature": "public static ImageQueryPipelineBuilder newBuilder(ImageRepository imageRepository,\n\t\t\tFilterRepository filterRepository)", "class_method_signature": "ImageQueryPipelineBuilder.newBuilder(ImageRepository imageRepository,\n\t\t\tFilterRepository filterRepository)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/github/dozedoff/similarImage/thread/pipeline/ImageQueryPipelineBuilder.java"}, "focal_method": {"identifier": "newBuilder", "parameters": "(ImageRepository imageRepository,\n\t\t\tFilterRepository filterRepository)", "modifiers": "public static", "return": "ImageQueryPipelineBuilder", "body": "public static ImageQueryPipelineBuilder newBuilder(ImageRepository imageRepository,\n\t\t\tFilterRepository filterRepository) {\n\t\treturn new ImageQueryPipelineBuilder(imageRepository, filterRepository);\n\t}", "signature": "ImageQueryPipelineBuilder newBuilder(ImageRepository imageRepository,\n\t\t\tFilterRepository filterRepository)", "full_signature": "public static ImageQueryPipelineBuilder newBuilder(ImageRepository imageRepository,\n\t\t\tFilterRepository filterRepository)", "class_method_signature": "ImageQueryPipelineBuilder.newBuilder(ImageRepository imageRepository,\n\t\t\tFilterRepository filterRepository)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9713275, "url": "https://github.com/seeker/similarImage", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 15, "size": 3845, "license": "licensed"}}