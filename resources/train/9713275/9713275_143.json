{"test_class": {"identifier": "SQLiteDatabaseTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String EMPTY_STRING = \"\";", "modifier": "private static final", "type": "String", "declarator": "EMPTY_STRING = \"\"", "var_name": "EMPTY_STRING"}, {"original_string": "private Path databaseFile;", "modifier": "private", "type": "Path", "declarator": "databaseFile", "var_name": "databaseFile"}, {"original_string": "private SQLiteDatabase cut;", "modifier": "private", "type": "SQLiteDatabase", "declarator": "cut", "var_name": "cut"}], "file": "core/src/test/java/com/github/dozedoff/similarImage/db/SQLiteDatabaseTest.java"}, "test_case": {"identifier": "testGetCs", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetCs() throws Exception {\n\t\tassertThat(cut.getCs().isOpen(EMPTY_STRING), is(true));\n\n\t}", "signature": "void testGetCs()", "full_signature": "@Test public void testGetCs()", "class_method_signature": "SQLiteDatabaseTest.testGetCs()", "testcase": true, "constructor": false, "invocations": ["assertThat", "isOpen", "getCs", "is"]}, "focal_class": {"identifier": "SQLiteDatabase", "superclass": "", "interfaces": "implements Database", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(SQLiteDatabase.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(SQLiteDatabase.class)", "var_name": "LOGGER"}, {"original_string": "private final static String DEFAULT_DB_PATH = \"similarImage.db\";", "modifier": "private final static", "type": "String", "declarator": "DEFAULT_DB_PATH = \"similarImage.db\"", "var_name": "DEFAULT_DB_PATH"}, {"original_string": "private final static String DB_PREFIX = \"jdbc:sqlite:\";", "modifier": "private final static", "type": "String", "declarator": "DB_PREFIX = \"jdbc:sqlite:\"", "var_name": "DB_PREFIX"}, {"original_string": "private final ConnectionSource connectionSource;", "modifier": "private final", "type": "ConnectionSource", "declarator": "connectionSource", "var_name": "connectionSource"}], "methods": [{"identifier": "SQLiteDatabase", "parameters": "()", "modifiers": "public", "return": "", "signature": " SQLiteDatabase()", "full_signature": "public  SQLiteDatabase()", "class_method_signature": "SQLiteDatabase.SQLiteDatabase()", "testcase": false, "constructor": true}, {"identifier": "SQLiteDatabase", "parameters": "(Path dbPath)", "modifiers": "public", "return": "", "signature": " SQLiteDatabase(Path dbPath)", "full_signature": "public  SQLiteDatabase(Path dbPath)", "class_method_signature": "SQLiteDatabase.SQLiteDatabase(Path dbPath)", "testcase": false, "constructor": true}, {"identifier": "SQLiteDatabase", "parameters": "(String dbPath)", "modifiers": "public", "return": "", "signature": " SQLiteDatabase(String dbPath)", "full_signature": "public  SQLiteDatabase(String dbPath)", "class_method_signature": "SQLiteDatabase.SQLiteDatabase(String dbPath)", "testcase": false, "constructor": true}, {"identifier": "setupDatabase", "parameters": "(ConnectionSource cs)", "modifiers": "private", "return": "void", "signature": "void setupDatabase(ConnectionSource cs)", "full_signature": "private void setupDatabase(ConnectionSource cs)", "class_method_signature": "SQLiteDatabase.setupDatabase(ConnectionSource cs)", "testcase": false, "constructor": false}, {"identifier": "migrateDatabase", "parameters": "(String fullDbPath)", "modifiers": "private", "return": "void", "signature": "void migrateDatabase(String fullDbPath)", "full_signature": "private void migrateDatabase(String fullDbPath)", "class_method_signature": "SQLiteDatabase.migrateDatabase(String fullDbPath)", "testcase": false, "constructor": false}, {"identifier": "getCs", "parameters": "()", "modifiers": "@Override public", "return": "ConnectionSource", "signature": "ConnectionSource getCs()", "full_signature": "@Override public ConnectionSource getCs()", "class_method_signature": "SQLiteDatabase.getCs()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "SQLiteDatabase.close()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/github/dozedoff/similarImage/db/SQLiteDatabase.java"}, "focal_method": {"identifier": "getCs", "parameters": "()", "modifiers": "@Override public", "return": "ConnectionSource", "body": "@Override\n\tpublic ConnectionSource getCs() {\n\t\treturn connectionSource;\n\t}", "signature": "ConnectionSource getCs()", "full_signature": "@Override public ConnectionSource getCs()", "class_method_signature": "SQLiteDatabase.getCs()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9713275, "url": "https://github.com/seeker/similarImage", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 15, "size": 3845, "license": "licensed"}}