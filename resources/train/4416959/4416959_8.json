{"test_class": {"identifier": "JpaTransactionAdvisorImplTest", "superclass": "extends IOCTestCase", "interfaces": "", "fields": [{"original_string": "private static final String UNIT_NAME = \"FooUnit\";", "modifier": "private static final", "type": "String", "declarator": "UNIT_NAME = \"FooUnit\"", "var_name": "UNIT_NAME"}, {"original_string": "private Registry registry;", "modifier": "private", "type": "Registry", "declarator": "registry", "var_name": "registry"}, {"original_string": "private AspectDecorator aspectDecorator;", "modifier": "private", "type": "AspectDecorator", "declarator": "aspectDecorator", "var_name": "aspectDecorator"}], "file": "tapestry-jpa/src/test/java/org/apache/tapestry5/internal/jpa/JpaTransactionAdvisorImplTest.java"}, "test_case": {"identifier": "void_method_with_param", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void void_method_with_param()\n    {\n        final VoidService delegate = newMock(VoidService.class);\n        final EntityManagerManager manager = newMock(EntityManagerManager.class);\n        final EntityTransactionManager transactionManager = newMock(EntityTransactionManager.class);\n        final JpaTransactionAdvisor advisor = newJpaTransactionAdvisor(manager, transactionManager);\n        final EntityManager entityManager = newMock(EntityManager.class);\n        final EntityTransaction transaction = newMock(EntityTransaction.class);\n\n        final AspectInterceptorBuilder<VoidService> builder = aspectDecorator.createBuilder(\n                VoidService.class, delegate, \"foo.Bar\");\n\n        advisor.addTransactionCommitAdvice(builder);\n\n        final VoidService interceptor = builder.build();\n\n        train_getActiveTransaction(manager, entityManager, transaction);\n        delegate.voidMethodWithParam(777);\n        train_commitActiveTransaction(transaction);\n\n        replay();\n        interceptor.voidMethodWithParam(777);\n        verify();\n    }", "signature": "void void_method_with_param()", "full_signature": "@Test public void void_method_with_param()", "class_method_signature": "JpaTransactionAdvisorImplTest.void_method_with_param()", "testcase": true, "constructor": false, "invocations": ["newMock", "newMock", "newMock", "newJpaTransactionAdvisor", "newMock", "newMock", "createBuilder", "addTransactionCommitAdvice", "build", "train_getActiveTransaction", "voidMethodWithParam", "train_commitActiveTransaction", "replay", "voidMethodWithParam", "verify"]}, "focal_class": {"identifier": "JpaTransactionAdvisorImpl", "superclass": "", "interfaces": "implements JpaTransactionAdvisor", "fields": [{"original_string": "private final Map<String, MethodAdvice> methodAdvices;", "modifier": "private final", "type": "Map<String, MethodAdvice>", "declarator": "methodAdvices", "var_name": "methodAdvices"}], "methods": [{"identifier": "JpaTransactionAdvisorImpl", "parameters": "(EntityManagerManager manager,\n            EntityTransactionManager transactionManager)", "modifiers": "public", "return": "", "signature": " JpaTransactionAdvisorImpl(EntityManagerManager manager,\n            EntityTransactionManager transactionManager)", "full_signature": "public  JpaTransactionAdvisorImpl(EntityManagerManager manager,\n            EntityTransactionManager transactionManager)", "class_method_signature": "JpaTransactionAdvisorImpl.JpaTransactionAdvisorImpl(EntityManagerManager manager,\n            EntityTransactionManager transactionManager)", "testcase": false, "constructor": true}, {"identifier": "addTransactionCommitAdvice", "parameters": "(MethodAdviceReceiver receiver)", "modifiers": "@Override public", "return": "void", "signature": "void addTransactionCommitAdvice(MethodAdviceReceiver receiver)", "full_signature": "@Override public void addTransactionCommitAdvice(MethodAdviceReceiver receiver)", "class_method_signature": "JpaTransactionAdvisorImpl.addTransactionCommitAdvice(MethodAdviceReceiver receiver)", "testcase": false, "constructor": false}], "file": "tapestry-jpa/src/main/java/org/apache/tapestry5/internal/jpa/JpaTransactionAdvisorImpl.java"}, "focal_method": {"identifier": "addTransactionCommitAdvice", "parameters": "(MethodAdviceReceiver receiver)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void addTransactionCommitAdvice(MethodAdviceReceiver receiver)\n    {\n        for (final Method m : receiver.getInterface().getMethods())\n        {\n            if (m.getAnnotation(CommitAfter.class) != null)\n            {\n                PersistenceContext annotation = receiver.getMethodAnnotation(m,\n                        PersistenceContext.class);\n\n                receiver.adviseMethod(m,\n                        methodAdvices.get(annotation == null ? null : annotation.unitName()));\n            }\n        }\n    }", "signature": "void addTransactionCommitAdvice(MethodAdviceReceiver receiver)", "full_signature": "@Override public void addTransactionCommitAdvice(MethodAdviceReceiver receiver)", "class_method_signature": "JpaTransactionAdvisorImpl.addTransactionCommitAdvice(MethodAdviceReceiver receiver)", "testcase": false, "constructor": false, "invocations": ["getMethods", "getInterface", "getAnnotation", "getMethodAnnotation", "adviseMethod", "get", "unitName"]}, "repository": {"repo_id": 4416959, "url": "https://github.com/apache/tapestry-5", "stars": 82, "created": "5/23/2012 7:00:11 AM +00:00", "updates": "2020-01-11T21:07:48+00:00", "fork": "False", "license": "licensed"}}