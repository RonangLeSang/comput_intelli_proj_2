{"test_class": {"identifier": "MixinAfterWorkerTest", "superclass": "extends InternalBaseTestCase", "interfaces": "", "fields": [], "file": "tapestry-core/src/test/java/org/apache/tapestry5/internal/transform/MixinAfterWorkerTest.java"}, "test_case": {"identifier": "annotation_present", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void annotation_present()\n    {\n        PlasticClass pc = newMock(PlasticClass.class);\n        MutableComponentModel model = mockMutableComponentModel();\n\n\n        expect(pc.hasAnnotation(MixinAfter.class)).andReturn(true);\n\n        model.setMixinAfter(true);\n\n        replay();\n\n        new MixinAfterWorker().transform(pc, null, model);\n\n        verify();\n    }", "signature": "void annotation_present()", "full_signature": "@Test public void annotation_present()", "class_method_signature": "MixinAfterWorkerTest.annotation_present()", "testcase": true, "constructor": false, "invocations": ["newMock", "mockMutableComponentModel", "andReturn", "expect", "hasAnnotation", "setMixinAfter", "replay", "transform", "verify"]}, "focal_class": {"identifier": "MixinAfterWorker", "superclass": "", "interfaces": "implements ComponentClassTransformWorker2", "fields": [], "methods": [{"identifier": "transform", "parameters": "(PlasticClass plasticClass, TransformationSupport support, MutableComponentModel model)", "modifiers": "public", "return": "void", "signature": "void transform(PlasticClass plasticClass, TransformationSupport support, MutableComponentModel model)", "full_signature": "public void transform(PlasticClass plasticClass, TransformationSupport support, MutableComponentModel model)", "class_method_signature": "MixinAfterWorker.transform(PlasticClass plasticClass, TransformationSupport support, MutableComponentModel model)", "testcase": false, "constructor": false}], "file": "tapestry-core/src/main/java/org/apache/tapestry5/internal/transform/MixinAfterWorker.java"}, "focal_method": {"identifier": "transform", "parameters": "(PlasticClass plasticClass, TransformationSupport support, MutableComponentModel model)", "modifiers": "public", "return": "void", "body": "public void transform(PlasticClass plasticClass, TransformationSupport support, MutableComponentModel model)\n    {\n        if (plasticClass.hasAnnotation(MixinAfter.class))\n        {\n            model.setMixinAfter(true);\n        }\n    }", "signature": "void transform(PlasticClass plasticClass, TransformationSupport support, MutableComponentModel model)", "full_signature": "public void transform(PlasticClass plasticClass, TransformationSupport support, MutableComponentModel model)", "class_method_signature": "MixinAfterWorker.transform(PlasticClass plasticClass, TransformationSupport support, MutableComponentModel model)", "testcase": false, "constructor": false, "invocations": ["hasAnnotation", "setMixinAfter"]}, "repository": {"repo_id": 4416959, "url": "https://github.com/apache/tapestry-5", "stars": 82, "created": "5/23/2012 7:00:11 AM +00:00", "updates": "2020-01-11T21:07:48+00:00", "fork": "False", "license": "licensed"}}