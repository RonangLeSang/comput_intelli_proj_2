{"test_class": {"identifier": "TransformUtilsTest", "superclass": "extends Assert", "interfaces": "", "fields": [], "file": "tapestry-core/src/test/java/org/apache/tapestry5/services/TransformUtilsTest.java"}, "test_case": {"identifier": "wrapper_type_by_name", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void wrapper_type_by_name()\n    {\n        assertEquals(getWrapperTypeName(\"char\"), \"java.lang.Character\");\n        assertEquals(getWrapperTypeName(\"java.util.Map\"), \"java.util.Map\");\n    }", "signature": "void wrapper_type_by_name()", "full_signature": "@Test public void wrapper_type_by_name()", "class_method_signature": "TransformUtilsTest.wrapper_type_by_name()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getWrapperTypeName", "assertEquals", "getWrapperTypeName"]}, "focal_class": {"identifier": "TransformUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Map<String, PrimitiveTypeInfo> nameToInfo = newMap();", "modifier": "private static final", "type": "Map<String, PrimitiveTypeInfo>", "declarator": "nameToInfo = newMap()", "var_name": "nameToInfo"}, {"original_string": "private static final Map<Class, PrimitiveTypeInfo> classToInfo = newMap();", "modifier": "private static final", "type": "Map<Class, PrimitiveTypeInfo>", "declarator": "classToInfo = newMap()", "var_name": "classToInfo"}], "methods": [{"identifier": "TransformUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " TransformUtils()", "full_signature": "private  TransformUtils()", "class_method_signature": "TransformUtils.TransformUtils()", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(Class primitiveType, Class wrapperType, String unwrapperMethodName, String defaultValue)", "modifiers": "private static", "return": "void", "signature": "void add(Class primitiveType, Class wrapperType, String unwrapperMethodName, String defaultValue)", "full_signature": "private static void add(Class primitiveType, Class wrapperType, String unwrapperMethodName, String defaultValue)", "class_method_signature": "TransformUtils.add(Class primitiveType, Class wrapperType, String unwrapperMethodName, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "isPrimitive", "parameters": "(String type)", "modifiers": "public static", "return": "boolean", "signature": "boolean isPrimitive(String type)", "full_signature": "public static boolean isPrimitive(String type)", "class_method_signature": "TransformUtils.isPrimitive(String type)", "testcase": false, "constructor": false}, {"identifier": "getWrapperTypeName", "parameters": "(String type)", "modifiers": "public static", "return": "String", "signature": "String getWrapperTypeName(String type)", "full_signature": "public static String getWrapperTypeName(String type)", "class_method_signature": "TransformUtils.getWrapperTypeName(String type)", "testcase": false, "constructor": false}, {"identifier": "getUnwrapperMethodName", "parameters": "(String type)", "modifiers": "public static", "return": "String", "signature": "String getUnwrapperMethodName(String type)", "full_signature": "public static String getUnwrapperMethodName(String type)", "class_method_signature": "TransformUtils.getUnwrapperMethodName(String type)", "testcase": false, "constructor": false}, {"identifier": "getWrapperType", "parameters": "(Class type)", "modifiers": "public static", "return": "Class", "signature": "Class getWrapperType(Class type)", "full_signature": "public static Class getWrapperType(Class type)", "class_method_signature": "TransformUtils.getWrapperType(Class type)", "testcase": false, "constructor": false}, {"identifier": "getDefaultValue", "parameters": "(String type)", "modifiers": "public static", "return": "String", "signature": "String getDefaultValue(String type)", "full_signature": "public static String getDefaultValue(String type)", "class_method_signature": "TransformUtils.getDefaultValue(String type)", "testcase": false, "constructor": false}], "file": "tapestry-core/src/main/java/org/apache/tapestry5/services/TransformUtils.java"}, "focal_method": {"identifier": "getWrapperTypeName", "parameters": "(String type)", "modifiers": "public static", "return": "String", "body": "public static String getWrapperTypeName(String type)\n    {\n        PrimitiveTypeInfo info = nameToInfo.get(type);\n\n        return info == null ? type : info.wrapperType.getName();\n    }", "signature": "String getWrapperTypeName(String type)", "full_signature": "public static String getWrapperTypeName(String type)", "class_method_signature": "TransformUtils.getWrapperTypeName(String type)", "testcase": false, "constructor": false, "invocations": ["get", "getName"]}, "repository": {"repo_id": 4416959, "url": "https://github.com/apache/tapestry-5", "stars": 82, "created": "5/23/2012 7:00:11 AM +00:00", "updates": "2020-01-11T21:07:48+00:00", "fork": "False", "license": "licensed"}}