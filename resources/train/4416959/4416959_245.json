{"test_class": {"identifier": "LinkImplTest", "superclass": "extends InternalBaseTestCase", "interfaces": "", "fields": [{"original_string": "private static final String BASE_PATH = \"/bar/baz\";", "modifier": "private static final", "type": "String", "declarator": "BASE_PATH = \"/bar/baz\"", "var_name": "BASE_PATH"}, {"original_string": "private static final String RAW_PATH = \"foo/baz/path\";", "modifier": "private static final", "type": "String", "declarator": "RAW_PATH = \"foo/baz/path\"", "var_name": "RAW_PATH"}, {"original_string": "private static final String ENCODED = \"*encoded*\";", "modifier": "private static final", "type": "String", "declarator": "ENCODED = \"*encoded*\"", "var_name": "ENCODED"}, {"original_string": "private static final String INSECURE_BASE_URL = \"http://insecure.com\";", "modifier": "private static final", "type": "String", "declarator": "INSECURE_BASE_URL = \"http://insecure.com\"", "var_name": "INSECURE_BASE_URL"}, {"original_string": "private static final String SECURE_BASE_URL = \"https://secure.com\";", "modifier": "private static final", "type": "String", "declarator": "SECURE_BASE_URL = \"https://secure.com\"", "var_name": "SECURE_BASE_URL"}], "file": "tapestry-core/src/test/java/org/apache/tapestry5/internal/services/LinkImplTest.java"}, "test_case": {"identifier": "absolute_URI_for_default_insecure_link", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void absolute_URI_for_default_insecure_link()\n    {\n        Response response = mockResponse();\n        BaseURLSource baseURLSource = mockBaseURLSource();\n\n        train_getBaseURL(baseURLSource, false, INSECURE_BASE_URL);\n\n        train_encodeURL(response, INSECURE_BASE_URL + BASE_PATH, ENCODED);\n\n        replay();\n\n        Link link = new LinkImpl(BASE_PATH, false, LinkSecurity.INSECURE, response, null, baseURLSource);\n\n        assertEquals(link.toAbsoluteURI(), ENCODED);\n\n        verify();\n    }", "signature": "void absolute_URI_for_default_insecure_link()", "full_signature": "@Test public void absolute_URI_for_default_insecure_link()", "class_method_signature": "LinkImplTest.absolute_URI_for_default_insecure_link()", "testcase": true, "constructor": false, "invocations": ["mockResponse", "mockBaseURLSource", "train_getBaseURL", "train_encodeURL", "replay", "assertEquals", "toAbsoluteURI", "verify"]}, "focal_class": {"identifier": "LinkImpl", "superclass": "", "interfaces": "implements Link", "fields": [{"original_string": "private Map<String, List<String>> parameters;", "modifier": "private", "type": "Map<String, List<String>>", "declarator": "parameters", "var_name": "parameters"}, {"original_string": "private final String basePath;", "modifier": "private final", "type": "String", "declarator": "basePath", "var_name": "basePath"}, {"original_string": "private final boolean forForm;", "modifier": "private final", "type": "boolean", "declarator": "forForm", "var_name": "forForm"}, {"original_string": "private LinkSecurity defaultSecurity;", "modifier": "private", "type": "LinkSecurity", "declarator": "defaultSecurity", "var_name": "defaultSecurity"}, {"original_string": "private final Response response;", "modifier": "private final", "type": "Response", "declarator": "response", "var_name": "response"}, {"original_string": "private final ContextPathEncoder contextPathEncoder;", "modifier": "private final", "type": "ContextPathEncoder", "declarator": "contextPathEncoder", "var_name": "contextPathEncoder"}, {"original_string": "private final BaseURLSource baseURLSource;", "modifier": "private final", "type": "BaseURLSource", "declarator": "baseURLSource", "var_name": "baseURLSource"}, {"original_string": "private String anchor;", "modifier": "private", "type": "String", "declarator": "anchor", "var_name": "anchor"}], "methods": [{"identifier": "LinkImpl", "parameters": "(String basePath, boolean forForm, LinkSecurity defaultSecurity, Response response,\n                    ContextPathEncoder contextPathEncoder, BaseURLSource baseURLSource)", "modifiers": "public", "return": "", "signature": " LinkImpl(String basePath, boolean forForm, LinkSecurity defaultSecurity, Response response,\n                    ContextPathEncoder contextPathEncoder, BaseURLSource baseURLSource)", "full_signature": "public  LinkImpl(String basePath, boolean forForm, LinkSecurity defaultSecurity, Response response,\n                    ContextPathEncoder contextPathEncoder, BaseURLSource baseURLSource)", "class_method_signature": "LinkImpl.LinkImpl(String basePath, boolean forForm, LinkSecurity defaultSecurity, Response response,\n                    ContextPathEncoder contextPathEncoder, BaseURLSource baseURLSource)", "testcase": false, "constructor": true}, {"identifier": "copyWithBasePath", "parameters": "(String basePath)", "modifiers": "public", "return": "Link", "signature": "Link copyWithBasePath(String basePath)", "full_signature": "public Link copyWithBasePath(String basePath)", "class_method_signature": "LinkImpl.copyWithBasePath(String basePath)", "testcase": false, "constructor": false}, {"identifier": "addParameter", "parameters": "(String parameterName, String[] value)", "modifiers": "private", "return": "void", "signature": "void addParameter(String parameterName, String[] value)", "full_signature": "private void addParameter(String parameterName, String[] value)", "class_method_signature": "LinkImpl.addParameter(String parameterName, String[] value)", "testcase": false, "constructor": false}, {"identifier": "addParameter", "parameters": "(String parameterName, String value)", "modifiers": "public", "return": "Link", "signature": "Link addParameter(String parameterName, String value)", "full_signature": "public Link addParameter(String parameterName, String value)", "class_method_signature": "LinkImpl.addParameter(String parameterName, String value)", "testcase": false, "constructor": false}, {"identifier": "getBasePath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getBasePath()", "full_signature": "public String getBasePath()", "class_method_signature": "LinkImpl.getBasePath()", "testcase": false, "constructor": false}, {"identifier": "removeParameter", "parameters": "(String parameterName)", "modifiers": "public", "return": "Link", "signature": "Link removeParameter(String parameterName)", "full_signature": "public Link removeParameter(String parameterName)", "class_method_signature": "LinkImpl.removeParameter(String parameterName)", "testcase": false, "constructor": false}, {"identifier": "getAnchor", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAnchor()", "full_signature": "public String getAnchor()", "class_method_signature": "LinkImpl.getAnchor()", "testcase": false, "constructor": false}, {"identifier": "getParameterNames", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getParameterNames()", "full_signature": "public List<String> getParameterNames()", "class_method_signature": "LinkImpl.getParameterNames()", "testcase": false, "constructor": false}, {"identifier": "getParameterValue", "parameters": "(String name)", "modifiers": "public", "return": "String", "signature": "String getParameterValue(String name)", "full_signature": "public String getParameterValue(String name)", "class_method_signature": "LinkImpl.getParameterValue(String name)", "testcase": false, "constructor": false}, {"identifier": "setAnchor", "parameters": "(String anchor)", "modifiers": "public", "return": "Link", "signature": "Link setAnchor(String anchor)", "full_signature": "public Link setAnchor(String anchor)", "class_method_signature": "LinkImpl.setAnchor(String anchor)", "testcase": false, "constructor": false}, {"identifier": "toAbsoluteURI", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toAbsoluteURI()", "full_signature": "public String toAbsoluteURI()", "class_method_signature": "LinkImpl.toAbsoluteURI()", "testcase": false, "constructor": false}, {"identifier": "toAbsoluteURI", "parameters": "(boolean secure)", "modifiers": "public", "return": "String", "signature": "String toAbsoluteURI(boolean secure)", "full_signature": "public String toAbsoluteURI(boolean secure)", "class_method_signature": "LinkImpl.toAbsoluteURI(boolean secure)", "testcase": false, "constructor": false}, {"identifier": "setSecurity", "parameters": "(LinkSecurity newSecurity)", "modifiers": "public", "return": "void", "signature": "void setSecurity(LinkSecurity newSecurity)", "full_signature": "public void setSecurity(LinkSecurity newSecurity)", "class_method_signature": "LinkImpl.setSecurity(LinkSecurity newSecurity)", "testcase": false, "constructor": false}, {"identifier": "getSecurity", "parameters": "()", "modifiers": "public", "return": "LinkSecurity", "signature": "LinkSecurity getSecurity()", "full_signature": "public LinkSecurity getSecurity()", "class_method_signature": "LinkImpl.getSecurity()", "testcase": false, "constructor": false}, {"identifier": "toRedirectURI", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toRedirectURI()", "full_signature": "public String toRedirectURI()", "class_method_signature": "LinkImpl.toRedirectURI()", "testcase": false, "constructor": false}, {"identifier": "toURI", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toURI()", "full_signature": "public String toURI()", "class_method_signature": "LinkImpl.toURI()", "testcase": false, "constructor": false}, {"identifier": "appendAnchor", "parameters": "(String path)", "modifiers": "private", "return": "String", "signature": "String appendAnchor(String path)", "full_signature": "private String appendAnchor(String path)", "class_method_signature": "LinkImpl.appendAnchor(String path)", "testcase": false, "constructor": false}, {"identifier": "buildAnchoredURI", "parameters": "(LinkSecurity security)", "modifiers": "private", "return": "String", "signature": "String buildAnchoredURI(LinkSecurity security)", "full_signature": "private String buildAnchoredURI(LinkSecurity security)", "class_method_signature": "LinkImpl.buildAnchoredURI(LinkSecurity security)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "LinkImpl.toString()", "testcase": false, "constructor": false}, {"identifier": "buildURI", "parameters": "(LinkSecurity security)", "modifiers": "private", "return": "String", "signature": "String buildURI(LinkSecurity security)", "full_signature": "private String buildURI(LinkSecurity security)", "class_method_signature": "LinkImpl.buildURI(LinkSecurity security)", "testcase": false, "constructor": false}, {"identifier": "addParameterValue", "parameters": "(String parameterName, Object value)", "modifiers": "public", "return": "Link", "signature": "Link addParameterValue(String parameterName, Object value)", "full_signature": "public Link addParameterValue(String parameterName, Object value)", "class_method_signature": "LinkImpl.addParameterValue(String parameterName, Object value)", "testcase": false, "constructor": false}, {"identifier": "getParameterValues", "parameters": "(String parameterName)", "modifiers": "public", "return": "String[]", "signature": "String[] getParameterValues(String parameterName)", "full_signature": "public String[] getParameterValues(String parameterName)", "class_method_signature": "LinkImpl.getParameterValues(String parameterName)", "testcase": false, "constructor": false}], "file": "tapestry-core/src/main/java/org/apache/tapestry5/internal/services/LinkImpl.java"}, "focal_method": {"identifier": "toAbsoluteURI", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String toAbsoluteURI()\n    {\n        return buildAnchoredURI(defaultSecurity.promote());\n    }", "signature": "String toAbsoluteURI()", "full_signature": "public String toAbsoluteURI()", "class_method_signature": "LinkImpl.toAbsoluteURI()", "testcase": false, "constructor": false, "invocations": ["buildAnchoredURI", "promote"]}, "repository": {"repo_id": 4416959, "url": "https://github.com/apache/tapestry-5", "stars": 82, "created": "5/23/2012 7:00:11 AM +00:00", "updates": "2020-01-11T21:07:48+00:00", "fork": "False", "license": "licensed"}}