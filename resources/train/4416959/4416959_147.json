{"test_class": {"identifier": "LocalizationSetterImplTest", "superclass": "extends InternalBaseTestCase", "interfaces": "", "fields": [], "file": "tapestry-core/src/test/java/org/apache/tapestry5/internal/services/LocalizationSetterImplTest.java"}, "test_case": {"identifier": "unsupported_locale_in_request_uses_default_locale", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void unsupported_locale_in_request_uses_default_locale()\n    {\n        PersistentLocale pl = mockPersistentLocale();\n        ThreadLocale tl = mockThreadLocale();\n        Request request = mockRequest();\n\n        tl.setLocale(Locale.ITALIAN);\n\n        train_getLocale(request, Locale.CHINESE);\n\n        replay();\n\n        LocalizationSetterImpl setter = new LocalizationSetterImpl(request, pl, tl, \"it,en,fr\");\n\n        assertFalse(setter.setLocaleFromLocaleName(\"unknown\"));\n\n        verify();\n    }", "signature": "void unsupported_locale_in_request_uses_default_locale()", "full_signature": "@Test public void unsupported_locale_in_request_uses_default_locale()", "class_method_signature": "LocalizationSetterImplTest.unsupported_locale_in_request_uses_default_locale()", "testcase": true, "constructor": false, "invocations": ["mockPersistentLocale", "mockThreadLocale", "mockRequest", "setLocale", "train_getLocale", "replay", "assertFalse", "setLocaleFromLocaleName", "verify"]}, "focal_class": {"identifier": "LocalizationSetterImpl", "superclass": "", "interfaces": "implements LocalizationSetter", "fields": [{"original_string": "private final Request request;", "modifier": "private final", "type": "Request", "declarator": "request", "var_name": "request"}, {"original_string": "private final ThreadLocale threadLocale;", "modifier": "private final", "type": "ThreadLocale", "declarator": "threadLocale", "var_name": "threadLocale"}, {"original_string": "private final Locale defaultLocale;", "modifier": "private final", "type": "Locale", "declarator": "defaultLocale", "var_name": "defaultLocale"}, {"original_string": "private final Set<String> supportedLocaleNames;", "modifier": "private final", "type": "Set<String>", "declarator": "supportedLocaleNames", "var_name": "supportedLocaleNames"}, {"original_string": "private final List<Locale> supportedLocales;", "modifier": "private final", "type": "List<Locale>", "declarator": "supportedLocales", "var_name": "supportedLocales"}, {"original_string": "private final Map<String, Locale> localeCache = CollectionFactory.newConcurrentMap();", "modifier": "private final", "type": "Map<String, Locale>", "declarator": "localeCache = CollectionFactory.newConcurrentMap()", "var_name": "localeCache"}, {"original_string": "private final PersistentLocale persistentLocale;", "modifier": "private final", "type": "PersistentLocale", "declarator": "persistentLocale", "var_name": "persistentLocale"}], "methods": [{"identifier": "LocalizationSetterImpl", "parameters": "(Request request,\n\n    PersistentLocale persistentLocale,\n\n    ThreadLocale threadLocale,\n\n    @Symbol(SymbolConstants.SUPPORTED_LOCALES)\n    String localeNames)", "modifiers": "public", "return": "", "signature": " LocalizationSetterImpl(Request request,\n\n    PersistentLocale persistentLocale,\n\n    ThreadLocale threadLocale,\n\n    @Symbol(SymbolConstants.SUPPORTED_LOCALES)\n    String localeNames)", "full_signature": "public  LocalizationSetterImpl(Request request,\n\n    PersistentLocale persistentLocale,\n\n    ThreadLocale threadLocale,\n\n    @Symbol(SymbolConstants.SUPPORTED_LOCALES)\n    String localeNames)", "class_method_signature": "LocalizationSetterImpl.LocalizationSetterImpl(Request request,\n\n    PersistentLocale persistentLocale,\n\n    ThreadLocale threadLocale,\n\n    @Symbol(SymbolConstants.SUPPORTED_LOCALES)\n    String localeNames)", "testcase": false, "constructor": true}, {"identifier": "parseNames", "parameters": "(String[] localeNames)", "modifiers": "private", "return": "List<Locale>", "signature": "List<Locale> parseNames(String[] localeNames)", "full_signature": "private List<Locale> parseNames(String[] localeNames)", "class_method_signature": "LocalizationSetterImpl.parseNames(String[] localeNames)", "testcase": false, "constructor": false}, {"identifier": "toLocale", "parameters": "(String localeName)", "modifiers": "public", "return": "Locale", "signature": "Locale toLocale(String localeName)", "full_signature": "public Locale toLocale(String localeName)", "class_method_signature": "LocalizationSetterImpl.toLocale(String localeName)", "testcase": false, "constructor": false}, {"identifier": "constructLocale", "parameters": "(String name)", "modifiers": "private", "return": "Locale", "signature": "Locale constructLocale(String name)", "full_signature": "private Locale constructLocale(String name)", "class_method_signature": "LocalizationSetterImpl.constructLocale(String name)", "testcase": false, "constructor": false}, {"identifier": "setLocaleFromLocaleName", "parameters": "(String localeName)", "modifiers": "public", "return": "boolean", "signature": "boolean setLocaleFromLocaleName(String localeName)", "full_signature": "public boolean setLocaleFromLocaleName(String localeName)", "class_method_signature": "LocalizationSetterImpl.setLocaleFromLocaleName(String localeName)", "testcase": false, "constructor": false}, {"identifier": "setNonPersistentLocaleFromLocaleName", "parameters": "(String localeName)", "modifiers": "public", "return": "void", "signature": "void setNonPersistentLocaleFromLocaleName(String localeName)", "full_signature": "public void setNonPersistentLocaleFromLocaleName(String localeName)", "class_method_signature": "LocalizationSetterImpl.setNonPersistentLocaleFromLocaleName(String localeName)", "testcase": false, "constructor": false}, {"identifier": "findClosestSupportedLocale", "parameters": "(Locale desiredLocale)", "modifiers": "private", "return": "Locale", "signature": "Locale findClosestSupportedLocale(Locale desiredLocale)", "full_signature": "private Locale findClosestSupportedLocale(Locale desiredLocale)", "class_method_signature": "LocalizationSetterImpl.findClosestSupportedLocale(Locale desiredLocale)", "testcase": false, "constructor": false}, {"identifier": "stripTerm", "parameters": "(String localeName)", "modifiers": "static", "return": "String", "signature": "String stripTerm(String localeName)", "full_signature": "static String stripTerm(String localeName)", "class_method_signature": "LocalizationSetterImpl.stripTerm(String localeName)", "testcase": false, "constructor": false}, {"identifier": "getSupportedLocales", "parameters": "()", "modifiers": "public", "return": "List<Locale>", "signature": "List<Locale> getSupportedLocales()", "full_signature": "public List<Locale> getSupportedLocales()", "class_method_signature": "LocalizationSetterImpl.getSupportedLocales()", "testcase": false, "constructor": false}, {"identifier": "isSupportedLocaleName", "parameters": "(String localeName)", "modifiers": "public", "return": "boolean", "signature": "boolean isSupportedLocaleName(String localeName)", "full_signature": "public boolean isSupportedLocaleName(String localeName)", "class_method_signature": "LocalizationSetterImpl.isSupportedLocaleName(String localeName)", "testcase": false, "constructor": false}, {"identifier": "getSupportedLocalesModel", "parameters": "()", "modifiers": "public", "return": "SelectModel", "signature": "SelectModel getSupportedLocalesModel()", "full_signature": "public SelectModel getSupportedLocalesModel()", "class_method_signature": "LocalizationSetterImpl.getSupportedLocalesModel()", "testcase": false, "constructor": false}], "file": "tapestry-core/src/main/java/org/apache/tapestry5/internal/services/LocalizationSetterImpl.java"}, "focal_method": {"identifier": "setLocaleFromLocaleName", "parameters": "(String localeName)", "modifiers": "public", "return": "boolean", "body": "public boolean setLocaleFromLocaleName(String localeName)\n    {\n        boolean supported = isSupportedLocaleName(localeName);\n\n        if (supported)\n        {\n            Locale locale = findClosestSupportedLocale(toLocale(localeName));\n\n            persistentLocale.set(locale);\n\n            threadLocale.setLocale(locale);\n        }\n        else\n        {\n            Locale requestLocale = request.getLocale();\n\n            Locale supportedLocale = findClosestSupportedLocale(requestLocale);\n\n            threadLocale.setLocale(supportedLocale);\n        }\n\n        return supported;\n    }", "signature": "boolean setLocaleFromLocaleName(String localeName)", "full_signature": "public boolean setLocaleFromLocaleName(String localeName)", "class_method_signature": "LocalizationSetterImpl.setLocaleFromLocaleName(String localeName)", "testcase": false, "constructor": false, "invocations": ["isSupportedLocaleName", "findClosestSupportedLocale", "toLocale", "set", "setLocale", "getLocale", "findClosestSupportedLocale", "setLocale"]}, "repository": {"repo_id": 4416959, "url": "https://github.com/apache/tapestry-5", "stars": 82, "created": "5/23/2012 7:00:11 AM +00:00", "updates": "2020-01-11T21:07:48+00:00", "fork": "False", "license": "licensed"}}