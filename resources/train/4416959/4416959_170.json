{"test_class": {"identifier": "PageElementFactoryImplTest", "superclass": "extends InternalBaseTestCase", "interfaces": "", "fields": [{"original_string": "private static MarkupModel xmlModel = new XMLMarkupModel();", "modifier": "private static", "type": "MarkupModel", "declarator": "xmlModel = new XMLMarkupModel()", "var_name": "xmlModel"}], "file": "tapestry-core/src/test/java/org/apache/tapestry5/internal/services/PageElementFactoryImplTest.java"}, "test_case": {"identifier": "unclosed_attribute_expression", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void unclosed_attribute_expression()\n    {\n        TypeCoercer typeCoercer = mockTypeCoercer();\n        BindingSource bindingSource = mockBindingSource();\n        ComponentResources resources = mockComponentResources();\n        Location location = mockLocation();\n\n        AttributeToken token = new AttributeToken(null, \"fred\", \"${flintstone\", location);\n\n        replay();\n\n        PageElementFactory factory = new PageElementFactoryImpl(typeCoercer, bindingSource);\n\n        try\n        {\n            factory.newAttributeElement(resources, token);\n            unreachable();\n        }\n        catch (TapestryException ex)\n        {\n            assertEquals(ex.getMessage(), \"Attribute expression \\'${flintstone\\' is missing a closing brace.\");\n            assertSame(ex.getLocation(), location);\n        }\n\n        verify();\n    }", "signature": "void unclosed_attribute_expression()", "full_signature": "@Test public void unclosed_attribute_expression()", "class_method_signature": "PageElementFactoryImplTest.unclosed_attribute_expression()", "testcase": true, "constructor": false, "invocations": ["mockTypeCoercer", "mockBindingSource", "mockComponentResources", "mockLocation", "replay", "newAttributeElement", "unreachable", "assertEquals", "getMessage", "assertSame", "getLocation", "verify"]}, "focal_class": {"identifier": "PageElementFactoryImpl", "superclass": "", "interfaces": "implements PageElementFactory", "fields": [{"original_string": "private final TypeCoercer typeCoercer;", "modifier": "private final", "type": "TypeCoercer", "declarator": "typeCoercer", "var_name": "typeCoercer"}, {"original_string": "private final BindingSource bindingSource;", "modifier": "private final", "type": "BindingSource", "declarator": "bindingSource", "var_name": "bindingSource"}], "methods": [{"identifier": "PageElementFactoryImpl", "parameters": "(TypeCoercer typeCoercer, BindingSource bindingSource)", "modifiers": "public", "return": "", "signature": " PageElementFactoryImpl(TypeCoercer typeCoercer, BindingSource bindingSource)", "full_signature": "public  PageElementFactoryImpl(TypeCoercer typeCoercer, BindingSource bindingSource)", "class_method_signature": "PageElementFactoryImpl.PageElementFactoryImpl(TypeCoercer typeCoercer, BindingSource bindingSource)", "testcase": false, "constructor": true}, {"identifier": "newAttributeElement", "parameters": "(ComponentResources componentResources, final AttributeToken token)", "modifiers": "public", "return": "RenderCommand", "signature": "RenderCommand newAttributeElement(ComponentResources componentResources, final AttributeToken token)", "full_signature": "public RenderCommand newAttributeElement(ComponentResources componentResources, final AttributeToken token)", "class_method_signature": "PageElementFactoryImpl.newAttributeElement(ComponentResources componentResources, final AttributeToken token)", "testcase": false, "constructor": false}, {"identifier": "parseAttributeExpansionExpression", "parameters": "(String expression, ComponentResources resources,\n                                                             final Location location)", "modifiers": "private", "return": "StringProvider", "signature": "StringProvider parseAttributeExpansionExpression(String expression, ComponentResources resources,\n                                                             final Location location)", "full_signature": "private StringProvider parseAttributeExpansionExpression(String expression, ComponentResources resources,\n                                                             final Location location)", "class_method_signature": "PageElementFactoryImpl.parseAttributeExpansionExpression(String expression, ComponentResources resources,\n                                                             final Location location)", "testcase": false, "constructor": false}, {"identifier": "newExpansionElement", "parameters": "(ComponentResources componentResources, ExpansionToken token)", "modifiers": "public", "return": "RenderCommand", "signature": "RenderCommand newExpansionElement(ComponentResources componentResources, ExpansionToken token)", "full_signature": "public RenderCommand newExpansionElement(ComponentResources componentResources, ExpansionToken token)", "class_method_signature": "PageElementFactoryImpl.newExpansionElement(ComponentResources componentResources, ExpansionToken token)", "testcase": false, "constructor": false}, {"identifier": "newBinding", "parameters": "(String parameterName, ComponentResources loadingComponentResources,\n                              ComponentResources embeddedComponentResources, String defaultBindingPrefix,\n                              String expression, Location location)", "modifiers": "public", "return": "Binding", "signature": "Binding newBinding(String parameterName, ComponentResources loadingComponentResources,\n                              ComponentResources embeddedComponentResources, String defaultBindingPrefix,\n                              String expression, Location location)", "full_signature": "public Binding newBinding(String parameterName, ComponentResources loadingComponentResources,\n                              ComponentResources embeddedComponentResources, String defaultBindingPrefix,\n                              String expression, Location location)", "class_method_signature": "PageElementFactoryImpl.newBinding(String parameterName, ComponentResources loadingComponentResources,\n                              ComponentResources embeddedComponentResources, String defaultBindingPrefix,\n                              String expression, Location location)", "testcase": false, "constructor": false}], "file": "tapestry-core/src/main/java/org/apache/tapestry5/internal/services/PageElementFactoryImpl.java"}, "focal_method": {"identifier": "newAttributeElement", "parameters": "(ComponentResources componentResources, final AttributeToken token)", "modifiers": "public", "return": "RenderCommand", "body": "public RenderCommand newAttributeElement(ComponentResources componentResources, final AttributeToken token)\n    {\n        final StringProvider provider = parseAttributeExpansionExpression(token.value, componentResources,\n                token.getLocation());\n\n        return new RenderCommand()\n        {\n            public void render(MarkupWriter writer, RenderQueue queue)\n            {\n                writer.attributeNS(token.namespaceURI, token.name, provider.provideString());\n            }\n\n            public String toString()\n            {\n                return String.format(\"AttributeNS[%s %s \\\"%s\\\"]\", token.namespaceURI, token.name, token.value);\n            }\n        };\n    }", "signature": "RenderCommand newAttributeElement(ComponentResources componentResources, final AttributeToken token)", "full_signature": "public RenderCommand newAttributeElement(ComponentResources componentResources, final AttributeToken token)", "class_method_signature": "PageElementFactoryImpl.newAttributeElement(ComponentResources componentResources, final AttributeToken token)", "testcase": false, "constructor": false, "invocations": ["parseAttributeExpansionExpression", "getLocation", "attributeNS", "provideString", "format"]}, "repository": {"repo_id": 4416959, "url": "https://github.com/apache/tapestry-5", "stars": 82, "created": "5/23/2012 7:00:11 AM +00:00", "updates": "2020-01-11T21:07:48+00:00", "fork": "False", "license": "licensed"}}