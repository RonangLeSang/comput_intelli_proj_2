{"test_class": {"identifier": "ComponentDefaultProviderImplTest", "superclass": "extends InternalBaseTestCase", "interfaces": "", "fields": [], "file": "tapestry-core/src/test/java/org/apache/tapestry5/internal/services/ComponentDefaultProviderImplTest.java"}, "test_case": {"identifier": "default_property_exists", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void default_property_exists()\n    {\n        String parameterName = \"myparam\";\n\n        String id = \"mycomponentid\";\n\n        ComponentResources resources = mockComponentResources();\n        Component container = mockComponent();\n        PropertyAccess access = mockPropertyAccess();\n        ClassPropertyAdapter classPropertyAdapter = mockClassPropertyAdapter();\n        PropertyAdapter propertyAdapter = mockPropertyAdapter();\n        BindingSource bindingSource = mockBindingSource();\n        Binding binding = mockBinding();\n        ComponentResources containerResources = mockComponentResources();\n\n        train_getId(resources, id);\n        train_getContainer(resources, container);\n\n        train_getAdapter(access, container, classPropertyAdapter);\n        train_getPropertyAdapter(classPropertyAdapter, id, propertyAdapter);\n\n        train_getContainerResources(resources, containerResources);\n\n        train_newBinding(\n                bindingSource,\n                \"default myparam\",\n                containerResources,\n                BindingConstants.PROP,\n                id,\n                binding);\n\n        replay();\n\n        ComponentDefaultProvider source = new ComponentDefaultProviderImpl(access, bindingSource, null,\n                                                                           null, null);\n\n        assertSame(source.defaultBinding(parameterName, resources), binding);\n\n        verify();\n    }", "signature": "void default_property_exists()", "full_signature": "@Test public void default_property_exists()", "class_method_signature": "ComponentDefaultProviderImplTest.default_property_exists()", "testcase": true, "constructor": false, "invocations": ["mockComponentResources", "mockComponent", "mockPropertyAccess", "mockClassPropertyAdapter", "mockPropertyAdapter", "mockBindingSource", "mockBinding", "mockComponentResources", "train_getId", "train_getContainer", "train_getAdapter", "train_getPropertyAdapter", "train_getContainerResources", "train_newBinding", "replay", "assertSame", "defaultBinding", "verify"]}, "focal_class": {"identifier": "ComponentDefaultProviderImpl", "superclass": "", "interfaces": "implements ComponentDefaultProvider", "fields": [{"original_string": "private final PropertyAccess propertyAccess;", "modifier": "private final", "type": "PropertyAccess", "declarator": "propertyAccess", "var_name": "propertyAccess"}, {"original_string": "private final BindingSource bindingSource;", "modifier": "private final", "type": "BindingSource", "declarator": "bindingSource", "var_name": "bindingSource"}, {"original_string": "private final ValueEncoderSource valueEncoderSource;", "modifier": "private final", "type": "ValueEncoderSource", "declarator": "valueEncoderSource", "var_name": "valueEncoderSource"}, {"original_string": "private final FieldTranslatorSource fieldTranslatorSource;", "modifier": "private final", "type": "FieldTranslatorSource", "declarator": "fieldTranslatorSource", "var_name": "fieldTranslatorSource"}, {"original_string": "private final FieldValidatorDefaultSource fieldValidatorDefaultSource;", "modifier": "private final", "type": "FieldValidatorDefaultSource", "declarator": "fieldValidatorDefaultSource", "var_name": "fieldValidatorDefaultSource"}, {"original_string": "static final FieldValidator NOOP_VALIDATOR = new FieldValidator()\n    {\n        public void validate(Object value) throws ValidationException\n        {\n            // Do nothing\n        }\n\n        public void render(MarkupWriter writer)\n        {\n        }\n\n        public boolean isRequired()\n        {\n            return false;\n        }\n    };", "modifier": "static final", "type": "FieldValidator", "declarator": "NOOP_VALIDATOR = new FieldValidator()\n    {\n        public void validate(Object value) throws ValidationException\n        {\n            // Do nothing\n        }\n\n        public void render(MarkupWriter writer)\n        {\n        }\n\n        public boolean isRequired()\n        {\n            return false;\n        }\n    }", "var_name": "NOOP_VALIDATOR"}], "methods": [{"identifier": "ComponentDefaultProviderImpl", "parameters": "(PropertyAccess propertyAccess, BindingSource bindingSource,\n                                        ValueEncoderSource valueEncoderSource,\n                                        FieldTranslatorSource fieldTranslatorSource,\n                                        FieldValidatorDefaultSource fieldValidatorDefaultSource)", "modifiers": "public", "return": "", "signature": " ComponentDefaultProviderImpl(PropertyAccess propertyAccess, BindingSource bindingSource,\n                                        ValueEncoderSource valueEncoderSource,\n                                        FieldTranslatorSource fieldTranslatorSource,\n                                        FieldValidatorDefaultSource fieldValidatorDefaultSource)", "full_signature": "public  ComponentDefaultProviderImpl(PropertyAccess propertyAccess, BindingSource bindingSource,\n                                        ValueEncoderSource valueEncoderSource,\n                                        FieldTranslatorSource fieldTranslatorSource,\n                                        FieldValidatorDefaultSource fieldValidatorDefaultSource)", "class_method_signature": "ComponentDefaultProviderImpl.ComponentDefaultProviderImpl(PropertyAccess propertyAccess, BindingSource bindingSource,\n                                        ValueEncoderSource valueEncoderSource,\n                                        FieldTranslatorSource fieldTranslatorSource,\n                                        FieldValidatorDefaultSource fieldValidatorDefaultSource)", "testcase": false, "constructor": true}, {"identifier": "defaultLabel", "parameters": "(ComponentResources resources)", "modifiers": "public", "return": "String", "signature": "String defaultLabel(ComponentResources resources)", "full_signature": "public String defaultLabel(ComponentResources resources)", "class_method_signature": "ComponentDefaultProviderImpl.defaultLabel(ComponentResources resources)", "testcase": false, "constructor": false}, {"identifier": "defaultBinding", "parameters": "(String parameterName, ComponentResources resources)", "modifiers": "public", "return": "Binding", "signature": "Binding defaultBinding(String parameterName, ComponentResources resources)", "full_signature": "public Binding defaultBinding(String parameterName, ComponentResources resources)", "class_method_signature": "ComponentDefaultProviderImpl.defaultBinding(String parameterName, ComponentResources resources)", "testcase": false, "constructor": false}, {"identifier": "defaultValueEncoder", "parameters": "(String parameterName, ComponentResources resources)", "modifiers": "@SuppressWarnings({ \"unchecked\" }) public", "return": "ValueEncoder", "signature": "ValueEncoder defaultValueEncoder(String parameterName, ComponentResources resources)", "full_signature": "@SuppressWarnings({ \"unchecked\" }) public ValueEncoder defaultValueEncoder(String parameterName, ComponentResources resources)", "class_method_signature": "ComponentDefaultProviderImpl.defaultValueEncoder(String parameterName, ComponentResources resources)", "testcase": false, "constructor": false}, {"identifier": "defaultTranslator", "parameters": "(String parameterName, ComponentResources resources)", "modifiers": "public", "return": "FieldTranslator", "signature": "FieldTranslator defaultTranslator(String parameterName, ComponentResources resources)", "full_signature": "public FieldTranslator defaultTranslator(String parameterName, ComponentResources resources)", "class_method_signature": "ComponentDefaultProviderImpl.defaultTranslator(String parameterName, ComponentResources resources)", "testcase": false, "constructor": false}, {"identifier": "defaultTranslatorBinding", "parameters": "(final String parameterName, final ComponentResources resources)", "modifiers": "public", "return": "Binding", "signature": "Binding defaultTranslatorBinding(final String parameterName, final ComponentResources resources)", "full_signature": "public Binding defaultTranslatorBinding(final String parameterName, final ComponentResources resources)", "class_method_signature": "ComponentDefaultProviderImpl.defaultTranslatorBinding(final String parameterName, final ComponentResources resources)", "testcase": false, "constructor": false}, {"identifier": "defaultValidator", "parameters": "(String parameterName, ComponentResources resources)", "modifiers": "public", "return": "FieldValidator", "signature": "FieldValidator defaultValidator(String parameterName, ComponentResources resources)", "full_signature": "public FieldValidator defaultValidator(String parameterName, ComponentResources resources)", "class_method_signature": "ComponentDefaultProviderImpl.defaultValidator(String parameterName, ComponentResources resources)", "testcase": false, "constructor": false}, {"identifier": "defaultValidatorBinding", "parameters": "(final String parameterName, final ComponentResources resources)", "modifiers": "public", "return": "Binding", "signature": "Binding defaultValidatorBinding(final String parameterName, final ComponentResources resources)", "full_signature": "public Binding defaultValidatorBinding(final String parameterName, final ComponentResources resources)", "class_method_signature": "ComponentDefaultProviderImpl.defaultValidatorBinding(final String parameterName, final ComponentResources resources)", "testcase": false, "constructor": false}], "file": "tapestry-core/src/main/java/org/apache/tapestry5/internal/services/ComponentDefaultProviderImpl.java"}, "focal_method": {"identifier": "defaultBinding", "parameters": "(String parameterName, ComponentResources resources)", "modifiers": "public", "return": "Binding", "body": "public Binding defaultBinding(String parameterName, ComponentResources resources)\n    {\n        assert InternalUtils.isNonBlank(parameterName);\n        assert resources != null;\n        String componentId = resources.getId();\n\n        Component container = resources.getContainer();\n\n        // Only provide a default binding if the container actually contains the property.\n        // This sets up an error condition for when the parameter is not bound, and\n        // the binding can't be deduced.\n\n        if (propertyAccess.getAdapter(container).getPropertyAdapter(componentId) == null)\n            return null;\n\n        ComponentResources containerResources = resources.getContainerResources();\n\n        return bindingSource.newBinding(\n                \"default \" + parameterName,\n                containerResources,\n                BindingConstants.PROP,\n                componentId);\n    }", "signature": "Binding defaultBinding(String parameterName, ComponentResources resources)", "full_signature": "public Binding defaultBinding(String parameterName, ComponentResources resources)", "class_method_signature": "ComponentDefaultProviderImpl.defaultBinding(String parameterName, ComponentResources resources)", "testcase": false, "constructor": false, "invocations": ["isNonBlank", "getId", "getContainer", "getPropertyAdapter", "getAdapter", "getContainerResources", "newBinding"]}, "repository": {"repo_id": 4416959, "url": "https://github.com/apache/tapestry-5", "stars": 82, "created": "5/23/2012 7:00:11 AM +00:00", "updates": "2020-01-11T21:07:48+00:00", "fork": "False", "license": "licensed"}}