{"test_class": {"identifier": "ComponentEventImplTest", "superclass": "extends InternalBaseTestCase", "interfaces": "", "fields": [], "file": "tapestry-core/src/test/java/org/apache/tapestry5/internal/services/ComponentEventImplTest.java"}, "test_case": {"identifier": "no_match_one_event_is_aborted", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void no_match_one_event_is_aborted()\n    {\n        ComponentEventCallback handler = mockComponentEventHandler();\n        EventContext context = mockEventContext();\n        Logger logger = mockLogger();\n        Object result = new Object();\n        ComponentPageElementResources resources = mockResources();\n        ComponentModel model = mockComponentModel();\n\n        train_isDebugEnabled(logger, false);\n\n        train_handleResult(handler, result, true);\n\n        replay();\n\n        ComponentEvent event = new ComponentEventImpl(\"eventType\", \"someId\", context, handler, resources, false, model, logger);\n\n        event.storeResult(result);\n\n        assertFalse(event.matches(\"eventType\", \"someId\", 0));\n\n        verify();\n\n    }", "signature": "void no_match_one_event_is_aborted()", "full_signature": "@Test public void no_match_one_event_is_aborted()", "class_method_signature": "ComponentEventImplTest.no_match_one_event_is_aborted()", "testcase": true, "constructor": false, "invocations": ["mockComponentEventHandler", "mockEventContext", "mockLogger", "mockResources", "mockComponentModel", "train_isDebugEnabled", "train_handleResult", "replay", "storeResult", "assertFalse", "matches", "verify"]}, "focal_class": {"identifier": "ComponentEventImpl", "superclass": "extends EventImpl", "interfaces": "implements ComponentEvent", "fields": [{"original_string": "private final String eventType;", "modifier": "private final", "type": "String", "declarator": "eventType", "var_name": "eventType"}, {"original_string": "private final String originatingComponentId;", "modifier": "private final", "type": "String", "declarator": "originatingComponentId", "var_name": "originatingComponentId"}, {"original_string": "private final EventContext context;", "modifier": "private final", "type": "EventContext", "declarator": "context", "var_name": "context"}, {"original_string": "private final ComponentPageElementResources elementResources;", "modifier": "private final", "type": "ComponentPageElementResources", "declarator": "elementResources", "var_name": "elementResources"}, {"original_string": "private final boolean exactParameterCountMatch;", "modifier": "private final", "type": "boolean", "declarator": "exactParameterCountMatch", "var_name": "exactParameterCountMatch"}], "methods": [{"identifier": "ComponentEventImpl", "parameters": "(String eventType, String originatingComponentId, EventContext context,\n            ComponentEventCallback handler, ComponentPageElementResources elementResources,\n            boolean exactParameterCountMatch, ComponentModel model, Logger logger)", "modifiers": "public", "return": "", "signature": " ComponentEventImpl(String eventType, String originatingComponentId, EventContext context,\n            ComponentEventCallback handler, ComponentPageElementResources elementResources,\n            boolean exactParameterCountMatch, ComponentModel model, Logger logger)", "full_signature": "public  ComponentEventImpl(String eventType, String originatingComponentId, EventContext context,\n            ComponentEventCallback handler, ComponentPageElementResources elementResources,\n            boolean exactParameterCountMatch, ComponentModel model, Logger logger)", "class_method_signature": "ComponentEventImpl.ComponentEventImpl(String eventType, String originatingComponentId, EventContext context,\n            ComponentEventCallback handler, ComponentPageElementResources elementResources,\n            boolean exactParameterCountMatch, ComponentModel model, Logger logger)", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ComponentEventImpl.toString()", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(String eventType, String componentId, int parameterCount)", "modifiers": "public", "return": "boolean", "signature": "boolean matches(String eventType, String componentId, int parameterCount)", "full_signature": "public boolean matches(String eventType, String componentId, int parameterCount)", "class_method_signature": "ComponentEventImpl.matches(String eventType, String componentId, int parameterCount)", "testcase": false, "constructor": false}, {"identifier": "coerceContext", "parameters": "(int index, String desiredTypeName)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "Object", "signature": "Object coerceContext(int index, String desiredTypeName)", "full_signature": "@SuppressWarnings(\"unchecked\") public Object coerceContext(int index, String desiredTypeName)", "class_method_signature": "ComponentEventImpl.coerceContext(int index, String desiredTypeName)", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "()", "modifiers": "public", "return": "Object[]", "signature": "Object[] getContext()", "full_signature": "public Object[] getContext()", "class_method_signature": "ComponentEventImpl.getContext()", "testcase": false, "constructor": false}, {"identifier": "getEventContext", "parameters": "()", "modifiers": "public", "return": "EventContext", "signature": "EventContext getEventContext()", "full_signature": "public EventContext getEventContext()", "class_method_signature": "ComponentEventImpl.getEventContext()", "testcase": false, "constructor": false}], "file": "tapestry-core/src/main/java/org/apache/tapestry5/internal/services/ComponentEventImpl.java"}, "focal_method": {"identifier": "matches", "parameters": "(String eventType, String componentId, int parameterCount)", "modifiers": "public", "return": "boolean", "body": "public boolean matches(String eventType, String componentId, int parameterCount)\n    {\n        if (isAborted())\n            return false;\n\n        boolean parameterCountMatch = exactParameterCountMatch ?\n                context.getCount() == parameterCount : context.getCount() >= parameterCount;\n\n        return this.eventType.equalsIgnoreCase(eventType) && parameterCountMatch\n                 && (originatingComponentId.equalsIgnoreCase(componentId) || componentId.equals(\"\"));\n    }", "signature": "boolean matches(String eventType, String componentId, int parameterCount)", "full_signature": "public boolean matches(String eventType, String componentId, int parameterCount)", "class_method_signature": "ComponentEventImpl.matches(String eventType, String componentId, int parameterCount)", "testcase": false, "constructor": false, "invocations": ["isAborted", "getCount", "getCount", "equalsIgnoreCase", "equalsIgnoreCase", "equals"]}, "repository": {"repo_id": 4416959, "url": "https://github.com/apache/tapestry-5", "stars": 82, "created": "5/23/2012 7:00:11 AM +00:00", "updates": "2020-01-11T21:07:48+00:00", "fork": "False", "license": "licensed"}}