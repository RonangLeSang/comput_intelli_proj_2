{"test_class": {"identifier": "DefaultScopesConfigurationUnitBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "lightadmin-core/src/test/java/org/lightadmin/core/config/domain/scope/DefaultScopesConfigurationUnitBuilderTest.java"}, "test_case": {"identifier": "defaultConfigurationUnitCreatedForDomainType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void defaultConfigurationUnitCreatedForDomainType() {\n        ScopesConfigurationUnit configurationUnit = defaultScopesBuilder().build();\n\n        assertEquals(DomainConfigurationUnitType.SCOPES, configurationUnit.getDomainConfigurationUnitType());\n        assertEquals(DomainType.class, configurationUnit.getDomainType());\n\n        assertScopesDefined(configurationUnit, \"All\");\n    }", "signature": "void defaultConfigurationUnitCreatedForDomainType()", "full_signature": "@Test public void defaultConfigurationUnitCreatedForDomainType()", "class_method_signature": "DefaultScopesConfigurationUnitBuilderTest.defaultConfigurationUnitCreatedForDomainType()", "testcase": true, "constructor": false, "invocations": ["build", "defaultScopesBuilder", "assertEquals", "getDomainConfigurationUnitType", "assertEquals", "getDomainType", "assertScopesDefined"]}, "focal_class": {"identifier": "DefaultScopesConfigurationUnitBuilder", "superclass": "extends DomainTypeConfigurationUnitBuilder<ScopesConfigurationUnit>", "interfaces": "implements ScopesConfigurationUnitBuilder", "fields": [{"original_string": "private final List<ScopeMetadata> scopesMetadata = newLinkedList();", "modifier": "private final", "type": "List<ScopeMetadata>", "declarator": "scopesMetadata = newLinkedList()", "var_name": "scopesMetadata"}, {"original_string": "private ScopeMetadata currentScope = null;", "modifier": "private", "type": "ScopeMetadata", "declarator": "currentScope = null", "var_name": "currentScope"}], "methods": [{"identifier": "DefaultScopesConfigurationUnitBuilder", "parameters": "(final Class<?> domainType)", "modifiers": "public", "return": "", "signature": " DefaultScopesConfigurationUnitBuilder(final Class<?> domainType)", "full_signature": "public  DefaultScopesConfigurationUnitBuilder(final Class<?> domainType)", "class_method_signature": "DefaultScopesConfigurationUnitBuilder.DefaultScopesConfigurationUnitBuilder(final Class<?> domainType)", "testcase": false, "constructor": true}, {"identifier": "scope", "parameters": "(final String name, final ScopeMetadata scope)", "modifiers": "@Override public", "return": "ScopesConfigurationUnitBuilder", "signature": "ScopesConfigurationUnitBuilder scope(final String name, final ScopeMetadata scope)", "full_signature": "@Override public ScopesConfigurationUnitBuilder scope(final String name, final ScopeMetadata scope)", "class_method_signature": "DefaultScopesConfigurationUnitBuilder.scope(final String name, final ScopeMetadata scope)", "testcase": false, "constructor": false}, {"identifier": "scope", "parameters": "(final ScopeMetadata scope)", "modifiers": "@Override public", "return": "ScopesConfigurationUnitBuilder", "signature": "ScopesConfigurationUnitBuilder scope(final ScopeMetadata scope)", "full_signature": "@Override public ScopesConfigurationUnitBuilder scope(final ScopeMetadata scope)", "class_method_signature": "DefaultScopesConfigurationUnitBuilder.scope(final ScopeMetadata scope)", "testcase": false, "constructor": false}, {"identifier": "defaultScope", "parameters": "()", "modifiers": "@Override public", "return": "ScopesConfigurationUnitBuilder", "signature": "ScopesConfigurationUnitBuilder defaultScope()", "full_signature": "@Override public ScopesConfigurationUnitBuilder defaultScope()", "class_method_signature": "DefaultScopesConfigurationUnitBuilder.defaultScope()", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "@Override public", "return": "ScopesConfigurationUnit", "signature": "ScopesConfigurationUnit build()", "full_signature": "@Override public ScopesConfigurationUnit build()", "class_method_signature": "DefaultScopesConfigurationUnitBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "setDefaultScopeIfNotDefined", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setDefaultScopeIfNotDefined()", "full_signature": "private void setDefaultScopeIfNotDefined()", "class_method_signature": "DefaultScopesConfigurationUnitBuilder.setDefaultScopeIfNotDefined()", "testcase": false, "constructor": false}, {"identifier": "defaultScopeNotDefined", "parameters": "(final List<ScopeMetadata> scopesMetadata)", "modifiers": "private", "return": "boolean", "signature": "boolean defaultScopeNotDefined(final List<ScopeMetadata> scopesMetadata)", "full_signature": "private boolean defaultScopeNotDefined(final List<ScopeMetadata> scopesMetadata)", "class_method_signature": "DefaultScopesConfigurationUnitBuilder.defaultScopeNotDefined(final List<ScopeMetadata> scopesMetadata)", "testcase": false, "constructor": false}], "file": "lightadmin-core/src/main/java/org/lightadmin/core/config/domain/scope/DefaultScopesConfigurationUnitBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "()", "modifiers": "@Override public", "return": "ScopesConfigurationUnit", "body": "@Override\n    public ScopesConfigurationUnit build() {\n        if (scopesMetadata.isEmpty()) {\n            return new DefaultScopesConfigurationUnit(getDomainType(), newArrayList(ScopeMetadataUtils.all().defaultScope(true)));\n        }\n\n        setDefaultScopeIfNotDefined();\n\n        return new DefaultScopesConfigurationUnit(getDomainType(), scopesMetadata);\n    }", "signature": "ScopesConfigurationUnit build()", "full_signature": "@Override public ScopesConfigurationUnit build()", "class_method_signature": "DefaultScopesConfigurationUnitBuilder.build()", "testcase": false, "constructor": false, "invocations": ["isEmpty", "getDomainType", "newArrayList", "defaultScope", "all", "setDefaultScopeIfNotDefined", "getDomainType"]}, "repository": {"repo_id": 5225735, "url": "https://github.com/la-team/light-admin", "language": "Java", "is_fork": false, "fork_count": 266, "stargazer_count": 641, "size": 23829, "license": "licensed"}}