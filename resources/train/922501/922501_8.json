{"test_class": {"identifier": "TestJsDocParser", "superclass": "", "interfaces": "", "fields": [], "file": "plugin/src/test/java/com/atlassian/labs/speakeasy/commonjs/util/TestJsDocParser.java"}, "test_case": {"identifier": "testStripStarsJsDocOneLineComment", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testStripStarsJsDocOneLineComment()\n    {\n        assertEquals(\"foo\", JsDocParser.stripStars(\"/** foo */\"));\n    }", "signature": "void testStripStarsJsDocOneLineComment()", "full_signature": "@Test public void testStripStarsJsDocOneLineComment()", "class_method_signature": "TestJsDocParser.testStripStarsJsDocOneLineComment()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "stripStars"]}, "focal_class": {"identifier": "JsDocParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DESCRIPTION = \"desc\";", "modifier": "private static final", "type": "String", "declarator": "DESCRIPTION = \"desc\"", "var_name": "DESCRIPTION"}, {"original_string": "private static final Logger log = LoggerFactory.getLogger(JsDocParser.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(JsDocParser.class)", "var_name": "log"}, {"original_string": "public static final JsDoc EMPTY_JSDOC = new JsDoc(\"\");", "modifier": "public static final", "type": "JsDoc", "declarator": "EMPTY_JSDOC = new JsDoc(\"\")", "var_name": "EMPTY_JSDOC"}], "methods": [{"identifier": "parse", "parameters": "(String moduleId, String content)", "modifiers": "public static", "return": "JsDoc", "signature": "JsDoc parse(String moduleId, String content)", "full_signature": "public static JsDoc parse(String moduleId, String content)", "class_method_signature": "JsDocParser.parse(String moduleId, String content)", "testcase": false, "constructor": false}, {"identifier": "stripStars", "parameters": "(String jsDoc)", "modifiers": "static", "return": "String", "signature": "String stripStars(String jsDoc)", "full_signature": "static String stripStars(String jsDoc)", "class_method_signature": "JsDocParser.stripStars(String jsDoc)", "testcase": false, "constructor": false}, {"identifier": "extractAttributes", "parameters": "(String jsDocWithNoStars)", "modifiers": "static", "return": "Map<String,String>", "signature": "Map<String,String> extractAttributes(String jsDocWithNoStars)", "full_signature": "static Map<String,String> extractAttributes(String jsDocWithNoStars)", "class_method_signature": "JsDocParser.extractAttributes(String jsDocWithNoStars)", "testcase": false, "constructor": false}], "file": "plugin/src/main/java/com/atlassian/labs/speakeasy/commonjs/util/JsDocParser.java"}, "focal_method": {"identifier": "stripStars", "parameters": "(String jsDoc)", "modifiers": "static", "return": "String", "body": "static String stripStars(String jsDoc)\n    {\n        String noStartOrEndStars = jsDoc != null ? jsDoc.replaceAll(\"^\\\\/\\\\*\\\\*|\\\\*\\\\/$\", \"\") : \"\";\n        String result = Pattern.compile(\"^\\\\s*\\\\* ?\", Pattern.MULTILINE).matcher(noStartOrEndStars).replaceAll(\"\");\n        return result.trim();\n    }", "signature": "String stripStars(String jsDoc)", "full_signature": "static String stripStars(String jsDoc)", "class_method_signature": "JsDocParser.stripStars(String jsDoc)", "testcase": false, "constructor": false, "invocations": ["replaceAll", "replaceAll", "matcher", "compile", "trim"]}, "repository": {"repo_id": 922501, "url": "https://github.com/mrdon/speakeasy-plugin", "language": "Java", "is_fork": false, "fork_count": 17, "stargazer_count": 31, "size": 95867, "license": "licensed"}}