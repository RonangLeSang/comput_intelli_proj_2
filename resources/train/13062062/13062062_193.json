{"test_class": {"identifier": "MultipleSelectionAndFocusTest", "superclass": "", "interfaces": "", "fields": [], "file": "pdfsam-fx/src/test/java/org/pdfsam/ui/selection/multiple/move/MultipleSelectionAndFocusTest.java"}, "test_case": {"identifier": "moveUp", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void moveUp() {\n        MultipleSelectionAndFocus victim = new MultipleSelectionAndFocus(-1);\n        victim.moveUp(4);\n        victim.moveUp(5);\n        assertEquals(-1, victim.getFocus());\n        assertEquals(3, victim.getRow());\n        assertArrayEquals(new int[] { 4 }, victim.getRows());\n    }", "signature": "void moveUp()", "full_signature": "@Test public void moveUp()", "class_method_signature": "MultipleSelectionAndFocusTest.moveUp()", "testcase": true, "constructor": false, "invocations": ["moveUp", "moveUp", "assertEquals", "getFocus", "assertEquals", "getRow", "assertArrayEquals", "getRows"]}, "focal_class": {"identifier": "MultipleSelectionAndFocus", "superclass": "", "interfaces": "implements SelectionAndFocus", "fields": [{"original_string": "private int focus = -1;", "modifier": "private", "type": "int", "declarator": "focus = -1", "var_name": "focus"}, {"original_string": "private int originalFocus = -1;", "modifier": "private", "type": "int", "declarator": "originalFocus = -1", "var_name": "originalFocus"}, {"original_string": "private int row = -1;", "modifier": "private", "type": "int", "declarator": "row = -1", "var_name": "row"}, {"original_string": "private Set<Integer> rows = new HashSet<>();", "modifier": "private", "type": "Set<Integer>", "declarator": "rows = new HashSet<>()", "var_name": "rows"}], "methods": [{"identifier": "MultipleSelectionAndFocus", "parameters": "(int originalFocus)", "modifiers": "", "return": "", "signature": " MultipleSelectionAndFocus(int originalFocus)", "full_signature": "  MultipleSelectionAndFocus(int originalFocus)", "class_method_signature": "MultipleSelectionAndFocus.MultipleSelectionAndFocus(int originalFocus)", "testcase": false, "constructor": true}, {"identifier": "move", "parameters": "(int row, int newRow)", "modifiers": "private", "return": "void", "signature": "void move(int row, int newRow)", "full_signature": "private void move(int row, int newRow)", "class_method_signature": "MultipleSelectionAndFocus.move(int row, int newRow)", "testcase": false, "constructor": false}, {"identifier": "moveUp", "parameters": "(int row)", "modifiers": "", "return": "void", "signature": "void moveUp(int row)", "full_signature": " void moveUp(int row)", "class_method_signature": "MultipleSelectionAndFocus.moveUp(int row)", "testcase": false, "constructor": false}, {"identifier": "moveDown", "parameters": "(int row)", "modifiers": "", "return": "void", "signature": "void moveDown(int row)", "full_signature": " void moveDown(int row)", "class_method_signature": "MultipleSelectionAndFocus.moveDown(int row)", "testcase": false, "constructor": false}, {"identifier": "getFocus", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getFocus()", "full_signature": "@Override public int getFocus()", "class_method_signature": "MultipleSelectionAndFocus.getFocus()", "testcase": false, "constructor": false}, {"identifier": "getRow", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getRow()", "full_signature": "@Override public int getRow()", "class_method_signature": "MultipleSelectionAndFocus.getRow()", "testcase": false, "constructor": false}, {"identifier": "getRows", "parameters": "()", "modifiers": "@Override public", "return": "int[]", "signature": "int[] getRows()", "full_signature": "@Override public int[] getRows()", "class_method_signature": "MultipleSelectionAndFocus.getRows()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "MultipleSelectionAndFocus.toString()", "testcase": false, "constructor": false}], "file": "pdfsam-fx/src/main/java/org/pdfsam/ui/selection/multiple/move/MultipleSelectionAndFocus.java"}, "focal_method": {"identifier": "moveUp", "parameters": "(int row)", "modifiers": "", "return": "void", "body": "void moveUp(int row) {\n        int newRow = row - 1;\n        move(row, newRow);\n    }", "signature": "void moveUp(int row)", "full_signature": " void moveUp(int row)", "class_method_signature": "MultipleSelectionAndFocus.moveUp(int row)", "testcase": false, "constructor": false, "invocations": ["move"]}, "repository": {"repo_id": 13062062, "url": "https://github.com/torakiki/pdfsam", "language": "Java", "is_fork": false, "fork_count": 177, "stargazer_count": 1113, "size": 10221, "license": "licensed"}}