{"test_class": {"identifier": "PdfVersionComboTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String MODULE = \"MODULE\";", "modifier": "private static final", "type": "String", "declarator": "MODULE = \"MODULE\"", "var_name": "MODULE"}, {"original_string": "@Rule\n    public ClearEventStudioRule clearStudio = new ClearEventStudioRule(MODULE);", "modifier": "@Rule\n    public", "type": "ClearEventStudioRule", "declarator": "clearStudio = new ClearEventStudioRule(MODULE)", "var_name": "clearStudio"}, {"original_string": "@Rule\n    public InitializeAndApplyJavaFxThreadRule fxThread = new InitializeAndApplyJavaFxThreadRule();", "modifier": "@Rule\n    public", "type": "InitializeAndApplyJavaFxThreadRule", "declarator": "fxThread = new InitializeAndApplyJavaFxThreadRule()", "var_name": "fxThread"}, {"original_string": "private PdfVersionCombo victim;", "modifier": "private", "type": "PdfVersionCombo", "declarator": "victim", "var_name": "victim"}], "file": "pdfsam-fx/src/test/java/org/pdfsam/ui/io/PdfVersionComboTest.java"}, "test_case": {"identifier": "enableSameAsSource", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void enableSameAsSource() {\n        int comboSize = victim.getItems().size();\n        victim.enableSameAsSourceItem();\n        assertEquals(comboSize + 1, victim.getItems().size());\n    }", "signature": "void enableSameAsSource()", "full_signature": "@Test public void enableSameAsSource()", "class_method_signature": "PdfVersionComboTest.enableSameAsSource()", "testcase": true, "constructor": false, "invocations": ["size", "getItems", "enableSameAsSourceItem", "assertEquals", "size", "getItems"]}, "focal_class": {"identifier": "PdfVersionCombo", "superclass": "extends ComboBox<PdfVersionComboItem>", "interfaces": "implements ModuleOwned, ResettableView", "fields": [{"original_string": "private String ownerModule = StringUtils.EMPTY;", "modifier": "private", "type": "String", "declarator": "ownerModule = StringUtils.EMPTY", "var_name": "ownerModule"}, {"original_string": "private ObservableList<PdfVersionComboItem> unfilteredItems = FXCollections.observableArrayList();", "modifier": "private", "type": "ObservableList<PdfVersionComboItem>", "declarator": "unfilteredItems = FXCollections.observableArrayList()", "var_name": "unfilteredItems"}, {"original_string": "private PdfVersionFilter versionsFilter = new PdfVersionFilter();", "modifier": "private", "type": "PdfVersionFilter", "declarator": "versionsFilter = new PdfVersionFilter()", "var_name": "versionsFilter"}, {"original_string": "private SameAsSourceComboItem sameAsSource = new SameAsSourceComboItem();", "modifier": "private", "type": "SameAsSourceComboItem", "declarator": "sameAsSource = new SameAsSourceComboItem()", "var_name": "sameAsSource"}], "methods": [{"identifier": "PdfVersionCombo", "parameters": "(String ownerModule)", "modifiers": "public", "return": "", "signature": " PdfVersionCombo(String ownerModule)", "full_signature": "public  PdfVersionCombo(String ownerModule)", "class_method_signature": "PdfVersionCombo.PdfVersionCombo(String ownerModule)", "testcase": false, "constructor": true}, {"identifier": "setFilteredItems", "parameters": "(PdfVersion required)", "modifiers": "private", "return": "void", "signature": "void setFilteredItems(PdfVersion required)", "full_signature": "private void setFilteredItems(PdfVersion required)", "class_method_signature": "PdfVersionCombo.setFilteredItems(PdfVersion required)", "testcase": false, "constructor": false}, {"identifier": "onAddPdfVersionConstraint", "parameters": "(final AddPdfVersionConstraintEvent event)", "modifiers": "@EventListener public", "return": "void", "signature": "void onAddPdfVersionConstraint(final AddPdfVersionConstraintEvent event)", "full_signature": "@EventListener public void onAddPdfVersionConstraint(final AddPdfVersionConstraintEvent event)", "class_method_signature": "PdfVersionCombo.onAddPdfVersionConstraint(final AddPdfVersionConstraintEvent event)", "testcase": false, "constructor": false}, {"identifier": "onRemovePdfVersionConstraint", "parameters": "(final RemovePdfVersionConstraintEvent event)", "modifiers": "@EventListener public", "return": "void", "signature": "void onRemovePdfVersionConstraint(final RemovePdfVersionConstraintEvent event)", "full_signature": "@EventListener public void onRemovePdfVersionConstraint(final RemovePdfVersionConstraintEvent event)", "class_method_signature": "PdfVersionCombo.onRemovePdfVersionConstraint(final RemovePdfVersionConstraintEvent event)", "testcase": false, "constructor": false}, {"identifier": "onChangedSelectedPdfVersion", "parameters": "(final ChangedSelectedPdfVersionEvent event)", "modifiers": "@EventListener public", "return": "void", "signature": "void onChangedSelectedPdfVersion(final ChangedSelectedPdfVersionEvent event)", "full_signature": "@EventListener public void onChangedSelectedPdfVersion(final ChangedSelectedPdfVersionEvent event)", "class_method_signature": "PdfVersionCombo.onChangedSelectedPdfVersion(final ChangedSelectedPdfVersionEvent event)", "testcase": false, "constructor": false}, {"identifier": "getOwnerModule", "parameters": "()", "modifiers": "@Override @EventStation public", "return": "String", "signature": "String getOwnerModule()", "full_signature": "@Override @EventStation public String getOwnerModule()", "class_method_signature": "PdfVersionCombo.getOwnerModule()", "testcase": false, "constructor": false}, {"identifier": "resetView", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void resetView()", "full_signature": "@Override public void resetView()", "class_method_signature": "PdfVersionCombo.resetView()", "testcase": false, "constructor": false}, {"identifier": "enableSameAsSourceItem", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void enableSameAsSourceItem()", "full_signature": "public void enableSameAsSourceItem()", "class_method_signature": "PdfVersionCombo.enableSameAsSourceItem()", "testcase": false, "constructor": false}], "file": "pdfsam-fx/src/main/java/org/pdfsam/ui/io/PdfVersionCombo.java"}, "focal_method": {"identifier": "enableSameAsSourceItem", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void enableSameAsSourceItem() {\n        unfilteredItems.add(0, sameAsSource);\n        getSelectionModel().selectFirst();\n    }", "signature": "void enableSameAsSourceItem()", "full_signature": "public void enableSameAsSourceItem()", "class_method_signature": "PdfVersionCombo.enableSameAsSourceItem()", "testcase": false, "constructor": false, "invocations": ["add", "selectFirst", "getSelectionModel"]}, "repository": {"repo_id": 13062062, "url": "https://github.com/torakiki/pdfsam", "language": "Java", "is_fork": false, "fork_count": 177, "stargazer_count": 1113, "size": 10221, "license": "licensed"}}