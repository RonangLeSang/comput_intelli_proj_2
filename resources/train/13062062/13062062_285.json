{"test_class": {"identifier": "LogListViewTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public InitializeJavaFxThreadRule javaFxThread = new InitializeJavaFxThreadRule();", "modifier": "@Rule\n    public", "type": "InitializeJavaFxThreadRule", "declarator": "javaFxThread = new InitializeJavaFxThreadRule()", "var_name": "javaFxThread"}, {"original_string": "@Rule\n    public ClearEventStudioRule clearStudio = new ClearEventStudioRule();", "modifier": "@Rule\n    public", "type": "ClearEventStudioRule", "declarator": "clearStudio = new ClearEventStudioRule()", "var_name": "clearStudio"}, {"original_string": "private UserContext userContext;", "modifier": "private", "type": "UserContext", "declarator": "userContext", "var_name": "userContext"}], "file": "pdfsam-gui/src/test/java/org/pdfsam/ui/log/LogListViewTest.java"}, "test_case": {"identifier": "appendSizeConstraint", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void appendSizeConstraint() throws InterruptedException, TimeoutException {\n        when(userContext.getNumberOfLogRows()).thenReturn(2);\n        LogListView victim = new LogListView(userContext);\n        victim.onEvent(new LogMessage(\"testMessage\", LogLevel.WARN));\n        victim.onEvent(new LogMessage(\"anotherTestMessage\", LogLevel.INFO));\n        victim.onEvent(new LogMessage(\"anotherTestMessage2\", LogLevel.INFO));\n        victim.onEvent(new LogMessage(\"anotherTestMessage3\", LogLevel.INFO));\n        waitOrTimeout(() -> victim.getItems().size() == 2, timeout(seconds(2)));\n        waitOrTimeout(() -> \"anotherTestMessage2\".equals(victim.getItems().get(0).getMessage()), timeout(seconds(2)));\n        waitOrTimeout(() -> \"anotherTestMessage3\".equals(victim.getItems().get(1).getMessage()), timeout(seconds(2)));\n    }", "signature": "void appendSizeConstraint()", "full_signature": "@Test public void appendSizeConstraint()", "class_method_signature": "LogListViewTest.appendSizeConstraint()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getNumberOfLogRows", "onEvent", "onEvent", "onEvent", "onEvent", "waitOrTimeout", "size", "getItems", "timeout", "seconds", "waitOrTimeout", "equals", "getMessage", "get", "getItems", "timeout", "seconds", "waitOrTimeout", "equals", "getMessage", "get", "getItems", "timeout", "seconds"]}, "focal_class": {"identifier": "LogListView", "superclass": "extends ListView<LogMessage>", "interfaces": "implements Listener<LogMessage>", "fields": [], "methods": [{"identifier": "LogListView", "parameters": "(UserContext userContext)", "modifiers": "@Inject public", "return": "", "signature": " LogListView(UserContext userContext)", "full_signature": "@Inject public  LogListView(UserContext userContext)", "class_method_signature": "LogListView.LogListView(UserContext userContext)", "testcase": false, "constructor": true}, {"identifier": "onEvent", "parameters": "(LogMessage event)", "modifiers": "@Override public", "return": "void", "signature": "void onEvent(LogMessage event)", "full_signature": "@Override public void onEvent(LogMessage event)", "class_method_signature": "LogListView.onEvent(LogMessage event)", "testcase": false, "constructor": false}, {"identifier": "scrollToBottomIfShowing", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void scrollToBottomIfShowing()", "full_signature": "public void scrollToBottomIfShowing()", "class_method_signature": "LogListView.scrollToBottomIfShowing()", "testcase": false, "constructor": false}], "file": "pdfsam-gui/src/main/java/org/pdfsam/ui/log/LogListView.java"}, "focal_method": {"identifier": "onEvent", "parameters": "(LogMessage event)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onEvent(LogMessage event) {\n        Platform.runLater(() -> {\n            getItems().add(event);\n            scrollToBottomIfShowing();\n        });\n    }", "signature": "void onEvent(LogMessage event)", "full_signature": "@Override public void onEvent(LogMessage event)", "class_method_signature": "LogListView.onEvent(LogMessage event)", "testcase": false, "constructor": false, "invocations": ["runLater", "add", "getItems", "scrollToBottomIfShowing"]}, "repository": {"repo_id": 13062062, "url": "https://github.com/torakiki/pdfsam", "language": "Java", "is_fork": false, "fork_count": 177, "stargazer_count": 1113, "size": 10221, "license": "licensed"}}