{"test_class": {"identifier": "RestAssuredEdgeGridFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String SERVICE_MOCK_HOST = \"localhost\";", "modifier": "static final", "type": "String", "declarator": "SERVICE_MOCK_HOST = \"localhost\"", "var_name": "SERVICE_MOCK_HOST"}, {"original_string": "static final int SERVICE_MOCK_PORT = 9089;", "modifier": "static final", "type": "int", "declarator": "SERVICE_MOCK_PORT = 9089", "var_name": "SERVICE_MOCK_PORT"}, {"original_string": "static final String SERVICE_MOCK = SERVICE_MOCK_HOST + \":\" + SERVICE_MOCK_PORT;", "modifier": "static final", "type": "String", "declarator": "SERVICE_MOCK = SERVICE_MOCK_HOST + \":\" + SERVICE_MOCK_PORT", "var_name": "SERVICE_MOCK"}, {"original_string": "ClientCredential credential = ClientCredential.builder()\n            .accessToken(\"akaa-dm5g2bfwoodqnc6k-ju7vlao2wz6oz2rp\")\n            .clientToken(\"akaa-k7glklzuxkkh2ycw-oadjphopvpn6yjoj\")\n            .clientSecret(\"SOMESECRET\")\n            .host(SERVICE_MOCK)\n            .build();", "modifier": "", "type": "ClientCredential", "declarator": "credential = ClientCredential.builder()\n            .accessToken(\"akaa-dm5g2bfwoodqnc6k-ju7vlao2wz6oz2rp\")\n            .clientToken(\"akaa-k7glklzuxkkh2ycw-oadjphopvpn6yjoj\")\n            .clientSecret(\"SOMESECRET\")\n            .host(SERVICE_MOCK)\n            .build()", "var_name": "credential"}, {"original_string": "WireMockServer wireMockServer = new WireMockServer(wireMockConfig().httpsPort(SERVICE_MOCK_PORT));", "modifier": "", "type": "WireMockServer", "declarator": "wireMockServer = new WireMockServer(wireMockConfig().httpsPort(SERVICE_MOCK_PORT))", "var_name": "wireMockServer"}], "file": "edgegrid-signer-rest-assured/src/test/java/com/akamai/edgegrid/signer/restassured/RestAssuredEdgeGridFilterTest.java"}, "test_case": {"identifier": "signEachRequest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void signEachRequest() throws URISyntaxException, IOException {\n\n        wireMockServer.stubFor(get(urlPathEqualTo(\"/billing-usage/v1/reportSources\"))\n                .withHeader(\"Authorization\", matching(\".*\"))\n                .withHeader(\"Host\", equalTo(SERVICE_MOCK))\n                .willReturn(aResponse()\n                        .withStatus(200)\n                        .withHeader(\"Content-Type\", \"text/xml\")\n                        .withBody(\"<response>Some content</response>\")));\n\n        RestAssured.given()\n                .relaxedHTTPSValidation()\n                .filter(new RestAssuredEdgeGridFilter(credential))\n                .get(\"/billing-usage/v1/reportSources\")\n                .then().statusCode(200);\n    }", "signature": "void signEachRequest()", "full_signature": "@Test public void signEachRequest()", "class_method_signature": "RestAssuredEdgeGridFilterTest.signEachRequest()", "testcase": true, "constructor": false, "invocations": ["stubFor", "willReturn", "withHeader", "withHeader", "get", "urlPathEqualTo", "matching", "equalTo", "withBody", "withHeader", "withStatus", "aResponse", "statusCode", "then", "get", "filter", "relaxedHTTPSValidation", "given"]}, "focal_class": {"identifier": "RestAssuredEdgeGridFilter", "superclass": "", "interfaces": "implements Filter", "fields": [{"original_string": "private final RestAssuredEdgeGridRequestSigner binding;", "modifier": "private final", "type": "RestAssuredEdgeGridRequestSigner", "declarator": "binding", "var_name": "binding"}], "methods": [{"identifier": "RestAssuredEdgeGridFilter", "parameters": "(ClientCredential credential)", "modifiers": "public", "return": "", "signature": " RestAssuredEdgeGridFilter(ClientCredential credential)", "full_signature": "public  RestAssuredEdgeGridFilter(ClientCredential credential)", "class_method_signature": "RestAssuredEdgeGridFilter.RestAssuredEdgeGridFilter(ClientCredential credential)", "testcase": false, "constructor": true}, {"identifier": "RestAssuredEdgeGridFilter", "parameters": "(ClientCredentialProvider clientCredentialProvider)", "modifiers": "public", "return": "", "signature": " RestAssuredEdgeGridFilter(ClientCredentialProvider clientCredentialProvider)", "full_signature": "public  RestAssuredEdgeGridFilter(ClientCredentialProvider clientCredentialProvider)", "class_method_signature": "RestAssuredEdgeGridFilter.RestAssuredEdgeGridFilter(ClientCredentialProvider clientCredentialProvider)", "testcase": false, "constructor": true}, {"identifier": "sign", "parameters": "(ClientCredential credential)", "modifiers": "public static", "return": "RestAssuredEdgeGridFilter", "signature": "RestAssuredEdgeGridFilter sign(ClientCredential credential)", "full_signature": "public static RestAssuredEdgeGridFilter sign(ClientCredential credential)", "class_method_signature": "RestAssuredEdgeGridFilter.sign(ClientCredential credential)", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(FilterableRequestSpecification requestSpec, FilterableResponseSpecification responseSpec, FilterContext ctx)", "modifiers": "@Override public", "return": "Response", "signature": "Response filter(FilterableRequestSpecification requestSpec, FilterableResponseSpecification responseSpec, FilterContext ctx)", "full_signature": "@Override public Response filter(FilterableRequestSpecification requestSpec, FilterableResponseSpecification responseSpec, FilterContext ctx)", "class_method_signature": "RestAssuredEdgeGridFilter.filter(FilterableRequestSpecification requestSpec, FilterableResponseSpecification responseSpec, FilterContext ctx)", "testcase": false, "constructor": false}], "file": "edgegrid-signer-rest-assured/src/main/java/com/akamai/edgegrid/signer/restassured/RestAssuredEdgeGridFilter.java"}, "focal_method": {"identifier": "filter", "parameters": "(FilterableRequestSpecification requestSpec, FilterableResponseSpecification responseSpec, FilterContext ctx)", "modifiers": "@Override public", "return": "Response", "body": "@Override\n    public Response filter(FilterableRequestSpecification requestSpec, FilterableResponseSpecification responseSpec, FilterContext ctx) {\n        try {\n            binding.sign(requestSpec, requestSpec);\n        } catch (RequestSigningException e) {\n            throw new RuntimeException(e);\n        }\n        return ctx.next(requestSpec, responseSpec);\n    }", "signature": "Response filter(FilterableRequestSpecification requestSpec, FilterableResponseSpecification responseSpec, FilterContext ctx)", "full_signature": "@Override public Response filter(FilterableRequestSpecification requestSpec, FilterableResponseSpecification responseSpec, FilterContext ctx)", "class_method_signature": "RestAssuredEdgeGridFilter.filter(FilterableRequestSpecification requestSpec, FilterableResponseSpecification responseSpec, FilterContext ctx)", "testcase": false, "constructor": false, "invocations": ["sign", "next"]}, "repository": {"repo_id": 13217403, "url": "https://github.com/akamai/AkamaiOPEN-edgegrid-java", "language": "Java", "is_fork": false, "fork_count": 42, "stargazer_count": 31, "size": 342, "license": "licensed"}}