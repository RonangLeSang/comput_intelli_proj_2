{"test_class": {"identifier": "XmlFormatterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final XF xf = new XF();", "modifier": "private final", "type": "XF", "declarator": "xf = new XF()", "var_name": "xf"}, {"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}], "file": "jslint4java/src/test/java/com/googlecode/jslint4java/formatter/XmlFormatterTest.java"}, "test_case": {"identifier": "testEscapeNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEscapeNull() throws Exception {\n        assertThat(xf.escape(null), is(\"\"));\n    }", "signature": "void testEscapeNull()", "full_signature": "@Test public void testEscapeNull()", "class_method_signature": "XmlFormatterTest.testEscapeNull()", "testcase": true, "constructor": false, "invocations": ["assertThat", "escape", "is"]}, "focal_class": {"identifier": "XmlFormatter", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "attr", "parameters": "(String key, String value)", "modifiers": "protected", "return": "String", "signature": "String attr(String key, String value)", "full_signature": "protected String attr(String key, String value)", "class_method_signature": "XmlFormatter.attr(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "escape", "parameters": "(String str)", "modifiers": "protected", "return": "String", "signature": "String escape(String str)", "full_signature": "protected String escape(String str)", "class_method_signature": "XmlFormatter.escape(String str)", "testcase": false, "constructor": false}, {"identifier": "escapeAttr", "parameters": "(String str)", "modifiers": "private", "return": "String", "signature": "String escapeAttr(String str)", "full_signature": "private String escapeAttr(String str)", "class_method_signature": "XmlFormatter.escapeAttr(String str)", "testcase": false, "constructor": false}, {"identifier": "footer", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String footer()", "full_signature": "public String footer()", "class_method_signature": "XmlFormatter.footer()", "testcase": false, "constructor": false}, {"identifier": "header", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String header()", "full_signature": "public String header()", "class_method_signature": "XmlFormatter.header()", "testcase": false, "constructor": false}, {"identifier": "root", "parameters": "()", "modifiers": "protected abstract", "return": "String", "signature": "String root()", "full_signature": "protected abstract String root()", "class_method_signature": "XmlFormatter.root()", "testcase": false, "constructor": false}], "file": "jslint4java/src/main/java/com/googlecode/jslint4java/formatter/XmlFormatter.java"}, "focal_method": {"identifier": "escape", "parameters": "(String str)", "modifiers": "protected", "return": "String", "body": "protected String escape(String str) {\n        if (str == null)\n            return \"\";\n        return str.replaceAll(\"&\", \"&amp;\").replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\n    }", "signature": "String escape(String str)", "full_signature": "protected String escape(String str)", "class_method_signature": "XmlFormatter.escape(String str)", "testcase": false, "constructor": false, "invocations": ["replaceAll", "replaceAll", "replaceAll"]}, "repository": {"repo_id": 88960, "url": "https://github.com/happygiraffe/jslint4java", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 81, "size": 2811, "license": "Other"}}