{"test_class": {"identifier": "FileListerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public TemporaryFolder tmpf = new TemporaryFolder();", "modifier": "@Rule\n    public", "type": "TemporaryFolder", "declarator": "tmpf = new TemporaryFolder()", "var_name": "tmpf"}, {"original_string": "private File sourceDirectory;", "modifier": "private", "type": "File", "declarator": "sourceDirectory", "var_name": "sourceDirectory"}], "file": "jslint4java-maven-plugin/src/test/java/com/googlecode/jslint4java/maven/FileListerTest.java"}, "test_case": {"identifier": "testAllFiles", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAllFiles() throws Exception {\n        List<File> files = files(list(\"*.txt\"), list());\n        assertFilesAre(files, \"a.txt\", \"b.txt\");\n    }", "signature": "void testAllFiles()", "full_signature": "@Test public void testAllFiles()", "class_method_signature": "FileListerTest.testAllFiles()", "testcase": true, "constructor": false, "invocations": ["files", "list", "list", "assertFilesAre"]}, "focal_class": {"identifier": "FileLister", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final List<String> includes = Lists.newArrayList();", "modifier": "private final", "type": "List<String>", "declarator": "includes = Lists.newArrayList()", "var_name": "includes"}, {"original_string": "private final List<String> excludes = Lists.newArrayList();", "modifier": "private final", "type": "List<String>", "declarator": "excludes = Lists.newArrayList()", "var_name": "excludes"}, {"original_string": "private final File sourceDirectory;", "modifier": "private final", "type": "File", "declarator": "sourceDirectory", "var_name": "sourceDirectory"}], "methods": [{"identifier": "FileLister", "parameters": "(File sourceDirectory, List<String> includes, List<String> excludes)", "modifiers": "public", "return": "", "signature": " FileLister(File sourceDirectory, List<String> includes, List<String> excludes)", "full_signature": "public  FileLister(File sourceDirectory, List<String> includes, List<String> excludes)", "class_method_signature": "FileLister.FileLister(File sourceDirectory, List<String> includes, List<String> excludes)", "testcase": false, "constructor": true}, {"identifier": "files", "parameters": "()", "modifiers": "public", "return": "List<File>", "signature": "List<File> files()", "full_signature": "public List<File> files()", "class_method_signature": "FileLister.files()", "testcase": false, "constructor": false}], "file": "jslint4java-maven-plugin/src/main/java/com/googlecode/jslint4java/maven/FileLister.java"}, "focal_method": {"identifier": "files", "parameters": "()", "modifiers": "public", "return": "List<File>", "body": "public List<File> files() throws IOException {\n        if (!sourceDirectory.exists()) {\n            return ImmutableList.of();\n        }\n        String includesStr = StringUtils.join(includes.iterator(), \",\");\n        String excludesStr = StringUtils.join(excludes.iterator(), \",\");\n        return FileUtils.getFiles(sourceDirectory, includesStr, excludesStr);\n    }", "signature": "List<File> files()", "full_signature": "public List<File> files()", "class_method_signature": "FileLister.files()", "testcase": false, "constructor": false, "invocations": ["exists", "of", "join", "iterator", "join", "iterator", "getFiles"]}, "repository": {"repo_id": 88960, "url": "https://github.com/happygiraffe/jslint4java", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 81, "size": 2811, "license": "Other"}}