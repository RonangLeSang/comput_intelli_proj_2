{"test_class": {"identifier": "AssociationOperationsServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AssociationOperationsService associationOperationsService;", "modifier": "private", "type": "AssociationOperationsService", "declarator": "associationOperationsService", "var_name": "associationOperationsService"}, {"original_string": "@Mock\n    private SingleSnpMultiSnpAssociationService singleSnpMultiSnpAssociationService;", "modifier": "@Mock\n    private", "type": "SingleSnpMultiSnpAssociationService", "declarator": "singleSnpMultiSnpAssociationService", "var_name": "singleSnpMultiSnpAssociationService"}, {"original_string": "@Mock\n    private SnpInteractionAssociationService snpInteractionAssociationService;", "modifier": "@Mock\n    private", "type": "SnpInteractionAssociationService", "declarator": "snpInteractionAssociationService", "var_name": "snpInteractionAssociationService"}, {"original_string": "@Mock\n    private AssociationReportRepository associationReportRepository;", "modifier": "@Mock\n    private", "type": "AssociationReportRepository", "declarator": "associationReportRepository", "var_name": "associationReportRepository"}, {"original_string": "@Mock\n    private AssociationRepository associationRepository;", "modifier": "@Mock\n    private", "type": "AssociationRepository", "declarator": "associationRepository", "var_name": "associationRepository"}, {"original_string": "@Mock\n    private MappingService mappingService;", "modifier": "@Mock\n    private", "type": "MappingService", "declarator": "mappingService", "var_name": "mappingService"}, {"original_string": "@Mock\n    private LocusRepository locusRepository;", "modifier": "@Mock\n    private", "type": "LocusRepository", "declarator": "locusRepository", "var_name": "locusRepository"}, {"original_string": "@Mock\n    private LociAttributesService lociAttributesService;", "modifier": "@Mock\n    private", "type": "LociAttributesService", "declarator": "lociAttributesService", "var_name": "lociAttributesService"}, {"original_string": "@Mock\n    private AssociationValidationReportService associationValidationReportService;", "modifier": "@Mock\n    private", "type": "AssociationValidationReportService", "declarator": "associationValidationReportService", "var_name": "associationValidationReportService"}, {"original_string": "@Mock\n    private ValidationService validationService;", "modifier": "@Mock\n    private", "type": "ValidationService", "declarator": "validationService", "var_name": "validationService"}, {"original_string": "@Mock\n    private ErrorCreationService errorCreationService;", "modifier": "@Mock\n    private", "type": "ErrorCreationService", "declarator": "errorCreationService", "var_name": "errorCreationService"}, {"original_string": "@Mock\n    private AssociationTrackingOperationServiceImpl associationTrackingOperationService;", "modifier": "@Mock\n    private", "type": "AssociationTrackingOperationServiceImpl", "declarator": "associationTrackingOperationService", "var_name": "associationTrackingOperationService"}, {"original_string": "@Mock\n    private AssociationMappingErrorService associationMappingErrorService;", "modifier": "@Mock\n    private", "type": "AssociationMappingErrorService", "declarator": "associationMappingErrorService", "var_name": "associationMappingErrorService"}, {"original_string": "private static final Association ASS_BETA =\n            new AssociationBuilder().setId(600L).setBetaNum((float) 0.012).build();", "modifier": "private static final", "type": "Association", "declarator": "ASS_BETA =\n            new AssociationBuilder().setId(600L).setBetaNum((float) 0.012).build()", "var_name": "ASS_BETA"}, {"original_string": "private static final Association ASS_OR =\n            new AssociationBuilder().setId(601L).setOrPerCopyNum((float) 5.97).build();", "modifier": "private static final", "type": "Association", "declarator": "ASS_OR =\n            new AssociationBuilder().setId(601L).setOrPerCopyNum((float) 5.97).build()", "var_name": "ASS_OR"}, {"original_string": "private static final Association ASS_NO_EFFECT_SIZE =\n            new AssociationBuilder().setId(602L).build();", "modifier": "private static final", "type": "Association", "declarator": "ASS_NO_EFFECT_SIZE =\n            new AssociationBuilder().setId(602L).build()", "var_name": "ASS_NO_EFFECT_SIZE"}, {"original_string": "private static final SnpFormRow SNP_FORM_ROW_ERROR_1 =\n            new SnpFormRowBuilder().setSnp(\"\").setStrongestRiskAllele(\"\").build();", "modifier": "private static final", "type": "SnpFormRow", "declarator": "SNP_FORM_ROW_ERROR_1 =\n            new SnpFormRowBuilder().setSnp(\"\").setStrongestRiskAllele(\"\").build()", "var_name": "SNP_FORM_ROW_ERROR_1"}, {"original_string": "private static final SnpFormRow SNP_FORM_ROW_ERROR_2 =\n            new SnpFormRowBuilder().setSnp(null).setStrongestRiskAllele(null).build();", "modifier": "private static final", "type": "SnpFormRow", "declarator": "SNP_FORM_ROW_ERROR_2 =\n            new SnpFormRowBuilder().setSnp(null).setStrongestRiskAllele(null).build()", "var_name": "SNP_FORM_ROW_ERROR_2"}, {"original_string": "private static final SnpFormRow SNP_FORM_ROW_ERROR_3 =\n            new SnpFormRowBuilder().setSnp(\"rs123\").setStrongestRiskAllele(\"rs123-?\").build();", "modifier": "private static final", "type": "SnpFormRow", "declarator": "SNP_FORM_ROW_ERROR_3 =\n            new SnpFormRowBuilder().setSnp(\"rs123\").setStrongestRiskAllele(\"rs123-?\").build()", "var_name": "SNP_FORM_ROW_ERROR_3"}, {"original_string": "private static final SnpFormRow SNP_FORM_ROW_ERROR_4 =\n            new SnpFormRowBuilder().setSnp(\"rs456\").setStrongestRiskAllele(\"rs456-?\").build();", "modifier": "private static final", "type": "SnpFormRow", "declarator": "SNP_FORM_ROW_ERROR_4 =\n            new SnpFormRowBuilder().setSnp(\"rs456\").setStrongestRiskAllele(\"rs456-?\").build()", "var_name": "SNP_FORM_ROW_ERROR_4"}, {"original_string": "private static final SnpFormColumn SNP_FORM_COLUMN_01 =\n            new SnpFormColumnBuilder().setSnp(\"\").setStrongestRiskAllele(\"\").build();", "modifier": "private static final", "type": "SnpFormColumn", "declarator": "SNP_FORM_COLUMN_01 =\n            new SnpFormColumnBuilder().setSnp(\"\").setStrongestRiskAllele(\"\").build()", "var_name": "SNP_FORM_COLUMN_01"}, {"original_string": "private static final SnpFormColumn SNP_FORM_COLUMN_02 =\n            new SnpFormColumnBuilder().setSnp(null).setStrongestRiskAllele(null).build();", "modifier": "private static final", "type": "SnpFormColumn", "declarator": "SNP_FORM_COLUMN_02 =\n            new SnpFormColumnBuilder().setSnp(null).setStrongestRiskAllele(null).build()", "var_name": "SNP_FORM_COLUMN_02"}, {"original_string": "private static final SnpFormColumn SNP_FORM_COLUMN_03 =\n            new SnpFormColumnBuilder().setSnp(\"rs123\").setStrongestRiskAllele(\"rs123-?\").build();", "modifier": "private static final", "type": "SnpFormColumn", "declarator": "SNP_FORM_COLUMN_03 =\n            new SnpFormColumnBuilder().setSnp(\"rs123\").setStrongestRiskAllele(\"rs123-?\").build()", "var_name": "SNP_FORM_COLUMN_03"}, {"original_string": "private static final SnpFormColumn SNP_FORM_COLUMN_04 =\n            new SnpFormColumnBuilder().setSnp(\"rs456\").setStrongestRiskAllele(\"rs456-?\").build();", "modifier": "private static final", "type": "SnpFormColumn", "declarator": "SNP_FORM_COLUMN_04 =\n            new SnpFormColumnBuilder().setSnp(\"rs456\").setStrongestRiskAllele(\"rs456-?\").build()", "var_name": "SNP_FORM_COLUMN_04"}, {"original_string": "private static final SnpAssociationStandardMultiForm SNP_ASSOCIATION_STANDARD_MULTI_FORM_WITH_ERRORS =\n            new SnpAssociationStandardMultiFormBuilder().setSnpFormRows(Arrays.asList(SNP_FORM_ROW_ERROR_1,\n                                                                                      SNP_FORM_ROW_ERROR_2))\n                    .build();", "modifier": "private static final", "type": "SnpAssociationStandardMultiForm", "declarator": "SNP_ASSOCIATION_STANDARD_MULTI_FORM_WITH_ERRORS =\n            new SnpAssociationStandardMultiFormBuilder().setSnpFormRows(Arrays.asList(SNP_FORM_ROW_ERROR_1,\n                                                                                      SNP_FORM_ROW_ERROR_2))\n                    .build()", "var_name": "SNP_ASSOCIATION_STANDARD_MULTI_FORM_WITH_ERRORS"}, {"original_string": "private static final SnpAssociationStandardMultiForm SNP_ASSOCIATION_STANDARD_MULTI_FORM =\n            new SnpAssociationStandardMultiFormBuilder().setSnpFormRows(Arrays.asList(SNP_FORM_ROW_ERROR_3,\n                                                                                      SNP_FORM_ROW_ERROR_4))\n                    .build();", "modifier": "private static final", "type": "SnpAssociationStandardMultiForm", "declarator": "SNP_ASSOCIATION_STANDARD_MULTI_FORM =\n            new SnpAssociationStandardMultiFormBuilder().setSnpFormRows(Arrays.asList(SNP_FORM_ROW_ERROR_3,\n                                                                                      SNP_FORM_ROW_ERROR_4))\n                    .build()", "var_name": "SNP_ASSOCIATION_STANDARD_MULTI_FORM"}, {"original_string": "private static final SnpAssociationInteractionForm SNP_ASSOCIATION_INTERACTION_FORM_WITH_ERRORS =\n            new SnpAssociationInteractionFormBuilder().setSnpFormColumns(Arrays.asList(SNP_FORM_COLUMN_01,\n                                                                                       SNP_FORM_COLUMN_02))\n                    .build();", "modifier": "private static final", "type": "SnpAssociationInteractionForm", "declarator": "SNP_ASSOCIATION_INTERACTION_FORM_WITH_ERRORS =\n            new SnpAssociationInteractionFormBuilder().setSnpFormColumns(Arrays.asList(SNP_FORM_COLUMN_01,\n                                                                                       SNP_FORM_COLUMN_02))\n                    .build()", "var_name": "SNP_ASSOCIATION_INTERACTION_FORM_WITH_ERRORS"}, {"original_string": "private static final SnpAssociationInteractionForm SNP_ASSOCIATION_INTERACTION_FORM =\n            new SnpAssociationInteractionFormBuilder().setSnpFormColumns(Arrays.asList(SNP_FORM_COLUMN_03,\n                                                                                       SNP_FORM_COLUMN_04))\n                    .build();", "modifier": "private static final", "type": "SnpAssociationInteractionForm", "declarator": "SNP_ASSOCIATION_INTERACTION_FORM =\n            new SnpAssociationInteractionFormBuilder().setSnpFormColumns(Arrays.asList(SNP_FORM_COLUMN_03,\n                                                                                       SNP_FORM_COLUMN_04))\n                    .build()", "var_name": "SNP_ASSOCIATION_INTERACTION_FORM"}, {"original_string": "private static final ValidationError SNP_ERROR =\n            new ValidationErrorBuilder().setError(\"ERROR\").setField(\"SNP\").build();", "modifier": "private static final", "type": "ValidationError", "declarator": "SNP_ERROR =\n            new ValidationErrorBuilder().setError(\"ERROR\").setField(\"SNP\").build()", "var_name": "SNP_ERROR"}, {"original_string": "private static final ValidationError RISK_ALLELE_ERROR =\n            new ValidationErrorBuilder().setError(\"ERROR\").setField(\"SNP\").build();", "modifier": "private static final", "type": "ValidationError", "declarator": "RISK_ALLELE_ERROR =\n            new ValidationErrorBuilder().setError(\"ERROR\").setField(\"SNP\").build()", "var_name": "RISK_ALLELE_ERROR"}, {"original_string": "private static final ValidationError OR_ERROR =\n            new ValidationErrorBuilder().setError(\"ERROR\").setField(\"OR\").build();", "modifier": "private static final", "type": "ValidationError", "declarator": "OR_ERROR =\n            new ValidationErrorBuilder().setError(\"ERROR\").setField(\"OR\").build()", "var_name": "OR_ERROR"}, {"original_string": "private static final ValidationError SNP_NO_ERROR =\n            new ValidationErrorBuilder().setField(\"SNP\").build();", "modifier": "private static final", "type": "ValidationError", "declarator": "SNP_NO_ERROR =\n            new ValidationErrorBuilder().setField(\"SNP\").build()", "var_name": "SNP_NO_ERROR"}, {"original_string": "private static final ValidationError RISK_ALLELE_NO_ERROR =\n            new ValidationErrorBuilder().setField(\"SNP\").build();", "modifier": "private static final", "type": "ValidationError", "declarator": "RISK_ALLELE_NO_ERROR =\n            new ValidationErrorBuilder().setField(\"SNP\").build()", "var_name": "RISK_ALLELE_NO_ERROR"}, {"original_string": "private static final ValidationError OR_NO_ERROR =\n            new ValidationErrorBuilder().setField(\"OR\").build();", "modifier": "private static final", "type": "ValidationError", "declarator": "OR_NO_ERROR =\n            new ValidationErrorBuilder().setField(\"OR\").build()", "var_name": "OR_NO_ERROR"}, {"original_string": "private static final ValidationError WARNING =\n            new ValidationErrorBuilder().setField(\"SNP\").setWarning(true).setError(\"WARNING\").build();", "modifier": "private static final", "type": "ValidationError", "declarator": "WARNING =\n            new ValidationErrorBuilder().setField(\"SNP\").setWarning(true).setError(\"WARNING\").build()", "var_name": "WARNING"}, {"original_string": "private static final AssociationReport ASSOCIATION_REPORT = new AssociationReportBuilder()\n            .build();", "modifier": "private static final", "type": "AssociationReport", "declarator": "ASSOCIATION_REPORT = new AssociationReportBuilder()\n            .build()", "var_name": "ASSOCIATION_REPORT"}, {"original_string": "private static final Association ASS_MULTI = new AssociationBuilder().setMultiSnpHaplotype(true).build();", "modifier": "private static final", "type": "Association", "declarator": "ASS_MULTI = new AssociationBuilder().setMultiSnpHaplotype(true).build()", "var_name": "ASS_MULTI"}, {"original_string": "private static final Association ASS_INTER =\n            new AssociationBuilder().setId((long) 100)\n                    .setSnpInteraction(true)\n                    .setLastMappingPerformedBy(\"test\")\n                    .setLastMappingDate(new Date())\n                    .setAssociationReport(ASSOCIATION_REPORT)\n                    .build();", "modifier": "private static final", "type": "Association", "declarator": "ASS_INTER =\n            new AssociationBuilder().setId((long) 100)\n                    .setSnpInteraction(true)\n                    .setLastMappingPerformedBy(\"test\")\n                    .setLastMappingDate(new Date())\n                    .setAssociationReport(ASSOCIATION_REPORT)\n                    .build()", "var_name": "ASS_INTER"}, {"original_string": "private static final Association ASS_INTER_EDITED =\n            new AssociationBuilder()\n                    .setSnpInteraction(true)\n                    .setLastMappingPerformedBy(\"test\")\n                    .setLastMappingDate(new Date())\n                    .build();", "modifier": "private static final", "type": "Association", "declarator": "ASS_INTER_EDITED =\n            new AssociationBuilder()\n                    .setSnpInteraction(true)\n                    .setLastMappingPerformedBy(\"test\")\n                    .setLastMappingDate(new Date())\n                    .build()", "var_name": "ASS_INTER_EDITED"}, {"original_string": "private static final Association ASS_APPROVE_UNAPPROVE =\n            new AssociationBuilder().setAssociationReport(ASSOCIATION_REPORT).build();", "modifier": "private static final", "type": "Association", "declarator": "ASS_APPROVE_UNAPPROVE =\n            new AssociationBuilder().setAssociationReport(ASSOCIATION_REPORT).build()", "var_name": "ASS_APPROVE_UNAPPROVE"}, {"original_string": "private static final SecureUser USER = new SecureUserBuilder().build();", "modifier": "private static final", "type": "SecureUser", "declarator": "USER = new SecureUserBuilder().build()", "var_name": "USER"}, {"original_string": "private static final Curator CURATOR = new CuratorBuilder().setLastName(\"test\").build();", "modifier": "private static final", "type": "Curator", "declarator": "CURATOR = new CuratorBuilder().setLastName(\"test\").build()", "var_name": "CURATOR"}, {"original_string": "private static final Housekeeping HOUSEKEEPING = new HousekeepingBuilder().setCurator(CURATOR).build();", "modifier": "private static final", "type": "Housekeeping", "declarator": "HOUSEKEEPING = new HousekeepingBuilder().setCurator(CURATOR).build()", "var_name": "HOUSEKEEPING"}, {"original_string": "private static final Study STUDY = new StudyBuilder().setHousekeeping(HOUSEKEEPING).build();", "modifier": "private static final", "type": "Study", "declarator": "STUDY = new StudyBuilder().setHousekeeping(HOUSEKEEPING).build()", "var_name": "STUDY"}], "file": "goci-interfaces/goci-curation/src/test/java/uk/ac/ebi/spot/goci/curation/service/AssociationOperationsServiceTest.java"}, "test_case": {"identifier": "approveAssociation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void approveAssociation() throws Exception {\n        associationOperationsService.approveAssociation(ASS_APPROVE_UNAPPROVE, USER);\n        verify(associationTrackingOperationService, times(1)).update(ASS_APPROVE_UNAPPROVE,\n                                                                     USER,\n                                                                     \"ASSOCIATION_APPROVED\");\n        verify(associationRepository, times(1)).save(ASS_APPROVE_UNAPPROVE);\n    }", "signature": "void approveAssociation()", "full_signature": "@Test public void approveAssociation()", "class_method_signature": "AssociationOperationsServiceTest.approveAssociation()", "testcase": true, "constructor": false, "invocations": ["approveAssociation", "update", "verify", "times", "save", "verify", "times"]}, "focal_class": {"identifier": "AssociationOperationsService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SingleSnpMultiSnpAssociationService singleSnpMultiSnpAssociationService;", "modifier": "private", "type": "SingleSnpMultiSnpAssociationService", "declarator": "singleSnpMultiSnpAssociationService", "var_name": "singleSnpMultiSnpAssociationService"}, {"original_string": "private SnpInteractionAssociationService snpInteractionAssociationService;", "modifier": "private", "type": "SnpInteractionAssociationService", "declarator": "snpInteractionAssociationService", "var_name": "snpInteractionAssociationService"}, {"original_string": "private AssociationReportRepository associationReportRepository;", "modifier": "private", "type": "AssociationReportRepository", "declarator": "associationReportRepository", "var_name": "associationReportRepository"}, {"original_string": "private AssociationRepository associationRepository;", "modifier": "private", "type": "AssociationRepository", "declarator": "associationRepository", "var_name": "associationRepository"}, {"original_string": "private LocusRepository locusRepository;", "modifier": "private", "type": "LocusRepository", "declarator": "locusRepository", "var_name": "locusRepository"}, {"original_string": "private MappingService mappingService;", "modifier": "private", "type": "MappingService", "declarator": "mappingService", "var_name": "mappingService"}, {"original_string": "private LociAttributesService lociAttributesService;", "modifier": "private", "type": "LociAttributesService", "declarator": "lociAttributesService", "var_name": "lociAttributesService"}, {"original_string": "private ValidationService validationService;", "modifier": "private", "type": "ValidationService", "declarator": "validationService", "var_name": "validationService"}, {"original_string": "private AssociationValidationReportService associationValidationReportService;", "modifier": "private", "type": "AssociationValidationReportService", "declarator": "associationValidationReportService", "var_name": "associationValidationReportService"}, {"original_string": "private ErrorCreationService errorCreationService;", "modifier": "private", "type": "ErrorCreationService", "declarator": "errorCreationService", "var_name": "errorCreationService"}, {"original_string": "private TrackingOperationService trackingOperationService;", "modifier": "private", "type": "TrackingOperationService", "declarator": "trackingOperationService", "var_name": "trackingOperationService"}, {"original_string": "private AssociationMappingErrorService associationMappingErrorService;", "modifier": "private", "type": "AssociationMappingErrorService", "declarator": "associationMappingErrorService", "var_name": "associationMappingErrorService"}], "methods": [{"identifier": "AssociationOperationsService", "parameters": "(SingleSnpMultiSnpAssociationService singleSnpMultiSnpAssociationService,\n                                        SnpInteractionAssociationService snpInteractionAssociationService,\n                                        AssociationReportRepository associationReportRepository,\n                                        AssociationRepository associationRepository,\n                                        LocusRepository locusRepository,\n                                        MappingService mappingService,\n                                        LociAttributesService lociAttributesService,\n                                        ValidationService validationService,\n                                        AssociationValidationReportService associationValidationReportService,\n                                        ErrorCreationService errorCreationService,\n                                        @Qualifier(\"associationTrackingOperationServiceImpl\") TrackingOperationService trackingOperationService,\n                                        AssociationMappingErrorService associationMappingErrorService)", "modifiers": "@Autowired public", "return": "", "signature": " AssociationOperationsService(SingleSnpMultiSnpAssociationService singleSnpMultiSnpAssociationService,\n                                        SnpInteractionAssociationService snpInteractionAssociationService,\n                                        AssociationReportRepository associationReportRepository,\n                                        AssociationRepository associationRepository,\n                                        LocusRepository locusRepository,\n                                        MappingService mappingService,\n                                        LociAttributesService lociAttributesService,\n                                        ValidationService validationService,\n                                        AssociationValidationReportService associationValidationReportService,\n                                        ErrorCreationService errorCreationService,\n                                        @Qualifier(\"associationTrackingOperationServiceImpl\") TrackingOperationService trackingOperationService,\n                                        AssociationMappingErrorService associationMappingErrorService)", "full_signature": "@Autowired public  AssociationOperationsService(SingleSnpMultiSnpAssociationService singleSnpMultiSnpAssociationService,\n                                        SnpInteractionAssociationService snpInteractionAssociationService,\n                                        AssociationReportRepository associationReportRepository,\n                                        AssociationRepository associationRepository,\n                                        LocusRepository locusRepository,\n                                        MappingService mappingService,\n                                        LociAttributesService lociAttributesService,\n                                        ValidationService validationService,\n                                        AssociationValidationReportService associationValidationReportService,\n                                        ErrorCreationService errorCreationService,\n                                        @Qualifier(\"associationTrackingOperationServiceImpl\") TrackingOperationService trackingOperationService,\n                                        AssociationMappingErrorService associationMappingErrorService)", "class_method_signature": "AssociationOperationsService.AssociationOperationsService(SingleSnpMultiSnpAssociationService singleSnpMultiSnpAssociationService,\n                                        SnpInteractionAssociationService snpInteractionAssociationService,\n                                        AssociationReportRepository associationReportRepository,\n                                        AssociationRepository associationRepository,\n                                        LocusRepository locusRepository,\n                                        MappingService mappingService,\n                                        LociAttributesService lociAttributesService,\n                                        ValidationService validationService,\n                                        AssociationValidationReportService associationValidationReportService,\n                                        ErrorCreationService errorCreationService,\n                                        @Qualifier(\"associationTrackingOperationServiceImpl\") TrackingOperationService trackingOperationService,\n                                        AssociationMappingErrorService associationMappingErrorService)", "testcase": false, "constructor": true}, {"identifier": "checkSnpAssociationFormErrors", "parameters": "(SnpAssociationStandardMultiForm form,\n                                                                         String measurementType)", "modifiers": "public", "return": "List<AssociationValidationView>", "signature": "List<AssociationValidationView> checkSnpAssociationFormErrors(SnpAssociationStandardMultiForm form,\n                                                                         String measurementType)", "full_signature": "public List<AssociationValidationView> checkSnpAssociationFormErrors(SnpAssociationStandardMultiForm form,\n                                                                         String measurementType)", "class_method_signature": "AssociationOperationsService.checkSnpAssociationFormErrors(SnpAssociationStandardMultiForm form,\n                                                                         String measurementType)", "testcase": false, "constructor": false}, {"identifier": "checkSnpAssociationErrors", "parameters": "(Association association,\n                                                                         String measurementType)", "modifiers": "public", "return": "List<AssociationValidationView>", "signature": "List<AssociationValidationView> checkSnpAssociationErrors(Association association,\n                                                                         String measurementType)", "full_signature": "public List<AssociationValidationView> checkSnpAssociationErrors(Association association,\n                                                                         String measurementType)", "class_method_signature": "AssociationOperationsService.checkSnpAssociationErrors(Association association,\n                                                                         String measurementType)", "testcase": false, "constructor": false}, {"identifier": "checkSnpAssociationInteractionFormErrors", "parameters": "(SnpAssociationInteractionForm form,\n                                                                                    String measurementType)", "modifiers": "public", "return": "List<AssociationValidationView>", "signature": "List<AssociationValidationView> checkSnpAssociationInteractionFormErrors(SnpAssociationInteractionForm form,\n                                                                                    String measurementType)", "full_signature": "public List<AssociationValidationView> checkSnpAssociationInteractionFormErrors(SnpAssociationInteractionForm form,\n                                                                                    String measurementType)", "class_method_signature": "AssociationOperationsService.checkSnpAssociationInteractionFormErrors(SnpAssociationInteractionForm form,\n                                                                                    String measurementType)", "testcase": false, "constructor": false}, {"identifier": "saveAssociationCreatedFromForm", "parameters": "(Study study,\n                                                                                Association association,\n                                                                                SecureUser user,\n                                                                                String eRelease)", "modifiers": "public", "return": "Collection<AssociationValidationView>", "signature": "Collection<AssociationValidationView> saveAssociationCreatedFromForm(Study study,\n                                                                                Association association,\n                                                                                SecureUser user,\n                                                                                String eRelease)", "full_signature": "public Collection<AssociationValidationView> saveAssociationCreatedFromForm(Study study,\n                                                                                Association association,\n                                                                                SecureUser user,\n                                                                                String eRelease)", "class_method_signature": "AssociationOperationsService.saveAssociationCreatedFromForm(Study study,\n                                                                                Association association,\n                                                                                SecureUser user,\n                                                                                String eRelease)", "testcase": false, "constructor": false}, {"identifier": "saveEditedAssociationFromForm", "parameters": "(Study study,\n                                                                               Association association,\n                                                                               Long associationId,\n                                                                               SecureUser user,\n                                                                               String eRelease)", "modifiers": "public", "return": "Collection<AssociationValidationView>", "signature": "Collection<AssociationValidationView> saveEditedAssociationFromForm(Study study,\n                                                                               Association association,\n                                                                               Long associationId,\n                                                                               SecureUser user,\n                                                                               String eRelease)", "full_signature": "public Collection<AssociationValidationView> saveEditedAssociationFromForm(Study study,\n                                                                               Association association,\n                                                                               Long associationId,\n                                                                               SecureUser user,\n                                                                               String eRelease)", "class_method_signature": "AssociationOperationsService.saveEditedAssociationFromForm(Study study,\n                                                                               Association association,\n                                                                               Long associationId,\n                                                                               SecureUser user,\n                                                                               String eRelease)", "testcase": false, "constructor": false}, {"identifier": "validateAndSaveAssociation", "parameters": "(Study study,\n                                                                               Association association,\n                                                                               SecureUser user,\n                                                                               String eRelease)", "modifiers": "public", "return": "Collection<AssociationValidationView>", "signature": "Collection<AssociationValidationView> validateAndSaveAssociation(Study study,\n                                                                               Association association,\n                                                                               SecureUser user,\n                                                                               String eRelease)", "full_signature": "public Collection<AssociationValidationView> validateAndSaveAssociation(Study study,\n                                                                               Association association,\n                                                                               SecureUser user,\n                                                                               String eRelease)", "class_method_signature": "AssociationOperationsService.validateAndSaveAssociation(Study study,\n                                                                               Association association,\n                                                                               SecureUser user,\n                                                                               String eRelease)", "testcase": false, "constructor": false}, {"identifier": "saveAssociation", "parameters": "(Association association, Study study, Collection<ValidationError> errors)", "modifiers": "public", "return": "void", "signature": "void saveAssociation(Association association, Study study, Collection<ValidationError> errors)", "full_signature": "public void saveAssociation(Association association, Study study, Collection<ValidationError> errors)", "class_method_signature": "AssociationOperationsService.saveAssociation(Association association, Study study, Collection<ValidationError> errors)", "testcase": false, "constructor": false}, {"identifier": "runMapping", "parameters": "(Curator curator, Association association, SecureUser user)", "modifiers": "public", "return": "void", "signature": "void runMapping(Curator curator, Association association, SecureUser user)", "full_signature": "public void runMapping(Curator curator, Association association, SecureUser user)", "class_method_signature": "AssociationOperationsService.runMapping(Curator curator, Association association, SecureUser user)", "testcase": false, "constructor": false}, {"identifier": "determineIfAssociationIsOrType", "parameters": "(Association association)", "modifiers": "public", "return": "String", "signature": "String determineIfAssociationIsOrType(Association association)", "full_signature": "public String determineIfAssociationIsOrType(Association association)", "class_method_signature": "AssociationOperationsService.determineIfAssociationIsOrType(Association association)", "testcase": false, "constructor": false}, {"identifier": "generateForm", "parameters": "(Association association)", "modifiers": "public", "return": "SnpAssociationForm", "signature": "SnpAssociationForm generateForm(Association association)", "full_signature": "public SnpAssociationForm generateForm(Association association)", "class_method_signature": "AssociationOperationsService.generateForm(Association association)", "testcase": false, "constructor": false}, {"identifier": "createMappingDetails", "parameters": "(Association association)", "modifiers": "public", "return": "MappingDetails", "signature": "MappingDetails createMappingDetails(Association association)", "full_signature": "public MappingDetails createMappingDetails(Association association)", "class_method_signature": "AssociationOperationsService.createMappingDetails(Association association)", "testcase": false, "constructor": false}, {"identifier": "getLastViewedAssociation", "parameters": "(Long associationId)", "modifiers": "public", "return": "LastViewedAssociation", "signature": "LastViewedAssociation getLastViewedAssociation(Long associationId)", "full_signature": "public LastViewedAssociation getLastViewedAssociation(Long associationId)", "class_method_signature": "AssociationOperationsService.getLastViewedAssociation(Long associationId)", "testcase": false, "constructor": false}, {"identifier": "approveAssociation", "parameters": "(Association association, SecureUser user)", "modifiers": "public", "return": "void", "signature": "void approveAssociation(Association association, SecureUser user)", "full_signature": "public void approveAssociation(Association association, SecureUser user)", "class_method_signature": "AssociationOperationsService.approveAssociation(Association association, SecureUser user)", "testcase": false, "constructor": false}, {"identifier": "unapproveAssociation", "parameters": "(Association association, SecureUser user)", "modifiers": "public", "return": "void", "signature": "void unapproveAssociation(Association association, SecureUser user)", "full_signature": "public void unapproveAssociation(Association association, SecureUser user)", "class_method_signature": "AssociationOperationsService.unapproveAssociation(Association association, SecureUser user)", "testcase": false, "constructor": false}, {"identifier": "createAssociationCreationEvent", "parameters": "(Association association, SecureUser user)", "modifiers": "public", "return": "void", "signature": "void createAssociationCreationEvent(Association association, SecureUser user)", "full_signature": "public void createAssociationCreationEvent(Association association, SecureUser user)", "class_method_signature": "AssociationOperationsService.createAssociationCreationEvent(Association association, SecureUser user)", "testcase": false, "constructor": false}, {"identifier": "createAssociationApproveEvent", "parameters": "(Association association, SecureUser user)", "modifiers": "private", "return": "void", "signature": "void createAssociationApproveEvent(Association association, SecureUser user)", "full_signature": "private void createAssociationApproveEvent(Association association, SecureUser user)", "class_method_signature": "AssociationOperationsService.createAssociationApproveEvent(Association association, SecureUser user)", "testcase": false, "constructor": false}, {"identifier": "createAssociationUnapproveEvent", "parameters": "(Association association, SecureUser user)", "modifiers": "private", "return": "void", "signature": "void createAssociationUnapproveEvent(Association association, SecureUser user)", "full_signature": "private void createAssociationUnapproveEvent(Association association, SecureUser user)", "class_method_signature": "AssociationOperationsService.createAssociationUnapproveEvent(Association association, SecureUser user)", "testcase": false, "constructor": false}, {"identifier": "createAssociationUpdateEvent", "parameters": "(Association association, SecureUser user)", "modifiers": "private", "return": "void", "signature": "void createAssociationUpdateEvent(Association association, SecureUser user)", "full_signature": "private void createAssociationUpdateEvent(Association association, SecureUser user)", "class_method_signature": "AssociationOperationsService.createAssociationUpdateEvent(Association association, SecureUser user)", "testcase": false, "constructor": false}, {"identifier": "associationErrorsChecked", "parameters": "(Association association)", "modifiers": "private", "return": "void", "signature": "void associationErrorsChecked(Association association)", "full_signature": "private void associationErrorsChecked(Association association)", "class_method_signature": "AssociationOperationsService.associationErrorsChecked(Association association)", "testcase": false, "constructor": false}, {"identifier": "associationErrorsUnchecked", "parameters": "(Association association)", "modifiers": "private", "return": "void", "signature": "void associationErrorsUnchecked(Association association)", "full_signature": "private void associationErrorsUnchecked(Association association)", "class_method_signature": "AssociationOperationsService.associationErrorsUnchecked(Association association)", "testcase": false, "constructor": false}, {"identifier": "deleteAssocationReport", "parameters": "(Long associationReportId)", "modifiers": "public", "return": "void", "signature": "void deleteAssocationReport(Long associationReportId)", "full_signature": "public void deleteAssocationReport(Long associationReportId)", "class_method_signature": "AssociationOperationsService.deleteAssocationReport(Long associationReportId)", "testcase": false, "constructor": false}, {"identifier": "saveLocusAttributes", "parameters": "(Locus locus)", "modifiers": "private", "return": "void", "signature": "void saveLocusAttributes(Locus locus)", "full_signature": "private void saveLocusAttributes(Locus locus)", "class_method_signature": "AssociationOperationsService.saveLocusAttributes(Locus locus)", "testcase": false, "constructor": false}, {"identifier": "createForm", "parameters": "(Association association, SnpAssociationFormService service)", "modifiers": "private", "return": "SnpAssociationForm", "signature": "SnpAssociationForm createForm(Association association, SnpAssociationFormService service)", "full_signature": "private SnpAssociationForm createForm(Association association, SnpAssociationFormService service)", "class_method_signature": "AssociationOperationsService.createForm(Association association, SnpAssociationFormService service)", "testcase": false, "constructor": false}, {"identifier": "processAssociationValidationErrors", "parameters": "(Collection<ValidationError> errors)", "modifiers": "private", "return": "List<AssociationValidationView>", "signature": "List<AssociationValidationView> processAssociationValidationErrors(Collection<ValidationError> errors)", "full_signature": "private List<AssociationValidationView> processAssociationValidationErrors(Collection<ValidationError> errors)", "class_method_signature": "AssociationOperationsService.processAssociationValidationErrors(Collection<ValidationError> errors)", "testcase": false, "constructor": false}, {"identifier": "getGenesIds", "parameters": "(Collection<Locus> loci)", "modifiers": "public", "return": "Collection<String>", "signature": "Collection<String> getGenesIds(Collection<Locus> loci)", "full_signature": "public Collection<String> getGenesIds(Collection<Locus> loci)", "class_method_signature": "AssociationOperationsService.getGenesIds(Collection<Locus> loci)", "testcase": false, "constructor": false}, {"identifier": "getSpnsName", "parameters": "(Collection<SingleNucleotidePolymorphism> snpsList)", "modifiers": "public", "return": "Collection<String>", "signature": "Collection<String> getSpnsName(Collection<SingleNucleotidePolymorphism> snpsList)", "full_signature": "public Collection<String> getSpnsName(Collection<SingleNucleotidePolymorphism> snpsList)", "class_method_signature": "AssociationOperationsService.getSpnsName(Collection<SingleNucleotidePolymorphism> snpsList)", "testcase": false, "constructor": false}], "file": "goci-interfaces/goci-curation/src/main/java/uk/ac/ebi/spot/goci/curation/service/AssociationOperationsService.java"}, "focal_method": {"identifier": "approveAssociation", "parameters": "(Association association, SecureUser user)", "modifiers": "public", "return": "void", "body": "public void approveAssociation(Association association, SecureUser user) {\n        // Mark errors as checked\n        associationErrorsChecked(association);\n\n        // Set snpChecked attribute to true\n        association.setSnpApproved(true);\n        association.setLastUpdateDate(new Date());\n\n        // Add approve event\n        createAssociationApproveEvent(association, user);\n        associationRepository.save(association);\n    }", "signature": "void approveAssociation(Association association, SecureUser user)", "full_signature": "public void approveAssociation(Association association, SecureUser user)", "class_method_signature": "AssociationOperationsService.approveAssociation(Association association, SecureUser user)", "testcase": false, "constructor": false, "invocations": ["associationErrorsChecked", "setSnpApproved", "setLastUpdateDate", "createAssociationApproveEvent", "save"]}, "repository": {"repo_id": 2995118, "url": "https://github.com/EBISPOT/goci", "language": "Java", "is_fork": false, "fork_count": 17, "stargazer_count": 16, "size": 147335, "license": "licensed"}}