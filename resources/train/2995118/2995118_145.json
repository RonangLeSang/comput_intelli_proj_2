{"test_class": {"identifier": "DiseaseTraitControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private DiseaseTraitRepository diseaseTraitRepository;", "modifier": "@Mock\n    private", "type": "DiseaseTraitRepository", "declarator": "diseaseTraitRepository", "var_name": "diseaseTraitRepository"}, {"original_string": "@Mock\n    private StudyRepository studyRepository;", "modifier": "@Mock\n    private", "type": "StudyRepository", "declarator": "studyRepository", "var_name": "studyRepository"}, {"original_string": "private MockMvc mockMvc;", "modifier": "private", "type": "MockMvc", "declarator": "mockMvc", "var_name": "mockMvc"}, {"original_string": "private static final DiseaseTrait DISEASE_TRAIT_1 =\n            new DiseaseTraitBuilder().setId(799L).setTrait(\"Asthma\").build();", "modifier": "private static final", "type": "DiseaseTrait", "declarator": "DISEASE_TRAIT_1 =\n            new DiseaseTraitBuilder().setId(799L).setTrait(\"Asthma\").build()", "var_name": "DISEASE_TRAIT_1"}, {"original_string": "private static final DiseaseTrait DISEASE_TRAIT_2 =\n            new DiseaseTraitBuilder().setId(800L).setTrait(\"Body mass index\").build();", "modifier": "private static final", "type": "DiseaseTrait", "declarator": "DISEASE_TRAIT_2 =\n            new DiseaseTraitBuilder().setId(800L).setTrait(\"Body mass index\").build()", "var_name": "DISEASE_TRAIT_2"}, {"original_string": "private static final DiseaseTrait NEW_DISEASE_TRAIT =\n            new DiseaseTraitBuilder().setTrait(\"Urate levels\").build();", "modifier": "private static final", "type": "DiseaseTrait", "declarator": "NEW_DISEASE_TRAIT =\n            new DiseaseTraitBuilder().setTrait(\"Urate levels\").build()", "var_name": "NEW_DISEASE_TRAIT"}, {"original_string": "private static final DiseaseTrait NEW_DISEASE_TRAIT_WITH_ERROR =\n            new DiseaseTraitBuilder().build();", "modifier": "private static final", "type": "DiseaseTrait", "declarator": "NEW_DISEASE_TRAIT_WITH_ERROR =\n            new DiseaseTraitBuilder().build()", "var_name": "NEW_DISEASE_TRAIT_WITH_ERROR"}, {"original_string": "private static final Study STUDY = new StudyBuilder().setId(123L).setDiseaseTrait(DISEASE_TRAIT_2).build();", "modifier": "private static final", "type": "Study", "declarator": "STUDY = new StudyBuilder().setId(123L).setDiseaseTrait(DISEASE_TRAIT_2).build()", "var_name": "STUDY"}], "file": "goci-interfaces/goci-curation/src/test/java/uk/ac/ebi/spot/goci/curation/controller/DiseaseTraitControllerTest.java"}, "test_case": {"identifier": "editDiseaseTrait", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void editDiseaseTrait() throws Exception {\n\n        mockMvc.perform(post(\"/diseasetraits/799\")\n                                .param(\"trait\", \"Severe asthma\"))\n                .andExpect(status().is3xxRedirection())\n                .andExpect(view().name(\"redirect:/diseasetraits\"));\n\n        //verify properties of bound object\n        ArgumentCaptor<DiseaseTrait> diseaseTraitArgumentCaptor = ArgumentCaptor.forClass(DiseaseTrait.class);\n        verify(diseaseTraitRepository).save(diseaseTraitArgumentCaptor.capture());\n        assertEquals(\"Severe asthma\", diseaseTraitArgumentCaptor.getValue().getTrait());\n\n        verifyZeroInteractions(studyRepository);\n    }", "signature": "void editDiseaseTrait()", "full_signature": "@Test public void editDiseaseTrait()", "class_method_signature": "DiseaseTraitControllerTest.editDiseaseTrait()", "testcase": true, "constructor": false, "invocations": ["andExpect", "andExpect", "perform", "param", "post", "is3xxRedirection", "status", "name", "view", "forClass", "save", "verify", "capture", "assertEquals", "getTrait", "getValue", "verifyZeroInteractions"]}, "focal_class": {"identifier": "DiseaseTraitController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DiseaseTraitRepository diseaseTraitRepository;", "modifier": "private", "type": "DiseaseTraitRepository", "declarator": "diseaseTraitRepository", "var_name": "diseaseTraitRepository"}, {"original_string": "private StudyRepository studyRepository;", "modifier": "private", "type": "StudyRepository", "declarator": "studyRepository", "var_name": "studyRepository"}], "methods": [{"identifier": "DiseaseTraitController", "parameters": "(DiseaseTraitRepository diseaseTraitRepository, StudyRepository studyRepository)", "modifiers": "@Autowired public", "return": "", "signature": " DiseaseTraitController(DiseaseTraitRepository diseaseTraitRepository, StudyRepository studyRepository)", "full_signature": "@Autowired public  DiseaseTraitController(DiseaseTraitRepository diseaseTraitRepository, StudyRepository studyRepository)", "class_method_signature": "DiseaseTraitController.DiseaseTraitController(DiseaseTraitRepository diseaseTraitRepository, StudyRepository studyRepository)", "testcase": false, "constructor": true}, {"identifier": "allDiseaseTraits", "parameters": "(Model model)", "modifiers": "@RequestMapping(produces = MediaType.TEXT_HTML_VALUE, method = RequestMethod.GET) public", "return": "String", "signature": "String allDiseaseTraits(Model model)", "full_signature": "@RequestMapping(produces = MediaType.TEXT_HTML_VALUE, method = RequestMethod.GET) public String allDiseaseTraits(Model model)", "class_method_signature": "DiseaseTraitController.allDiseaseTraits(Model model)", "testcase": false, "constructor": false}, {"identifier": "addDiseaseTrait", "parameters": "(@Valid @ModelAttribute DiseaseTrait diseaseTrait,\n                                  BindingResult bindingResult,\n                                  Model model, RedirectAttributes redirectAttributes)", "modifiers": "@RequestMapping(produces = MediaType.TEXT_HTML_VALUE, method = RequestMethod.POST) public", "return": "String", "signature": "String addDiseaseTrait(@Valid @ModelAttribute DiseaseTrait diseaseTrait,\n                                  BindingResult bindingResult,\n                                  Model model, RedirectAttributes redirectAttributes)", "full_signature": "@RequestMapping(produces = MediaType.TEXT_HTML_VALUE, method = RequestMethod.POST) public String addDiseaseTrait(@Valid @ModelAttribute DiseaseTrait diseaseTrait,\n                                  BindingResult bindingResult,\n                                  Model model, RedirectAttributes redirectAttributes)", "class_method_signature": "DiseaseTraitController.addDiseaseTrait(@Valid @ModelAttribute DiseaseTrait diseaseTrait,\n                                  BindingResult bindingResult,\n                                  Model model, RedirectAttributes redirectAttributes)", "testcase": false, "constructor": false}, {"identifier": "viewDiseaseTrait", "parameters": "(Model model, @PathVariable Long diseaseTraitId)", "modifiers": "@RequestMapping(value = \"/{diseaseTraitId}\", produces = MediaType.TEXT_HTML_VALUE, method = RequestMethod.GET) public", "return": "String", "signature": "String viewDiseaseTrait(Model model, @PathVariable Long diseaseTraitId)", "full_signature": "@RequestMapping(value = \"/{diseaseTraitId}\", produces = MediaType.TEXT_HTML_VALUE, method = RequestMethod.GET) public String viewDiseaseTrait(Model model, @PathVariable Long diseaseTraitId)", "class_method_signature": "DiseaseTraitController.viewDiseaseTrait(Model model, @PathVariable Long diseaseTraitId)", "testcase": false, "constructor": false}, {"identifier": "editDiseaseTrait", "parameters": "(@Valid @ModelAttribute DiseaseTrait diseaseTrait,\n                                   BindingResult bindingResult, @PathVariable Long diseaseTraitId)", "modifiers": "@RequestMapping(value = \"/{diseaseTraitId}\", produces = MediaType.TEXT_HTML_VALUE, method = RequestMethod.POST) public", "return": "String", "signature": "String editDiseaseTrait(@Valid @ModelAttribute DiseaseTrait diseaseTrait,\n                                   BindingResult bindingResult, @PathVariable Long diseaseTraitId)", "full_signature": "@RequestMapping(value = \"/{diseaseTraitId}\", produces = MediaType.TEXT_HTML_VALUE, method = RequestMethod.POST) public String editDiseaseTrait(@Valid @ModelAttribute DiseaseTrait diseaseTrait,\n                                   BindingResult bindingResult, @PathVariable Long diseaseTraitId)", "class_method_signature": "DiseaseTraitController.editDiseaseTrait(@Valid @ModelAttribute DiseaseTrait diseaseTrait,\n                                   BindingResult bindingResult, @PathVariable Long diseaseTraitId)", "testcase": false, "constructor": false}, {"identifier": "viewDiseaseTraitToDelete", "parameters": "(Model model, @PathVariable Long diseaseTraitId)", "modifiers": "@RequestMapping(value = \"/{diseaseTraitId}/delete\", produces = MediaType.TEXT_HTML_VALUE, method = RequestMethod.GET) public", "return": "String", "signature": "String viewDiseaseTraitToDelete(Model model, @PathVariable Long diseaseTraitId)", "full_signature": "@RequestMapping(value = \"/{diseaseTraitId}/delete\", produces = MediaType.TEXT_HTML_VALUE, method = RequestMethod.GET) public String viewDiseaseTraitToDelete(Model model, @PathVariable Long diseaseTraitId)", "class_method_signature": "DiseaseTraitController.viewDiseaseTraitToDelete(Model model, @PathVariable Long diseaseTraitId)", "testcase": false, "constructor": false}, {"identifier": "deleteDiseaseTrait", "parameters": "(@PathVariable Long diseaseTraitId, RedirectAttributes redirectAttributes)", "modifiers": "@RequestMapping(value = \"/{diseaseTraitId}/delete\", produces = MediaType.TEXT_HTML_VALUE, method = RequestMethod.POST) public", "return": "String", "signature": "String deleteDiseaseTrait(@PathVariable Long diseaseTraitId, RedirectAttributes redirectAttributes)", "full_signature": "@RequestMapping(value = \"/{diseaseTraitId}/delete\", produces = MediaType.TEXT_HTML_VALUE, method = RequestMethod.POST) public String deleteDiseaseTrait(@PathVariable Long diseaseTraitId, RedirectAttributes redirectAttributes)", "class_method_signature": "DiseaseTraitController.deleteDiseaseTrait(@PathVariable Long diseaseTraitId, RedirectAttributes redirectAttributes)", "testcase": false, "constructor": false}, {"identifier": "populateDiseaseTraits", "parameters": "()", "modifiers": "@ModelAttribute(\"diseaseTraits\") public", "return": "List<DiseaseTrait>", "signature": "List<DiseaseTrait> populateDiseaseTraits()", "full_signature": "@ModelAttribute(\"diseaseTraits\") public List<DiseaseTrait> populateDiseaseTraits()", "class_method_signature": "DiseaseTraitController.populateDiseaseTraits()", "testcase": false, "constructor": false}, {"identifier": "sortByTraitAsc", "parameters": "()", "modifiers": "private", "return": "Sort", "signature": "Sort sortByTraitAsc()", "full_signature": "private Sort sortByTraitAsc()", "class_method_signature": "DiseaseTraitController.sortByTraitAsc()", "testcase": false, "constructor": false}], "file": "goci-interfaces/goci-curation/src/main/java/uk/ac/ebi/spot/goci/curation/controller/DiseaseTraitController.java"}, "focal_method": {"identifier": "editDiseaseTrait", "parameters": "(@Valid @ModelAttribute DiseaseTrait diseaseTrait,\n                                   BindingResult bindingResult, @PathVariable Long diseaseTraitId)", "modifiers": "@RequestMapping(value = \"/{diseaseTraitId}\", produces = MediaType.TEXT_HTML_VALUE, method = RequestMethod.POST) public", "return": "String", "body": "@RequestMapping(value = \"/{diseaseTraitId}\", produces = MediaType.TEXT_HTML_VALUE, method = RequestMethod.POST)\n    public String editDiseaseTrait(@Valid @ModelAttribute DiseaseTrait diseaseTrait,\n                                   BindingResult bindingResult, @PathVariable Long diseaseTraitId) {\n\n        // Catch a null or empty value being entered\n        if (bindingResult.hasErrors()) {\n            return \"edit_disease_trait\";\n        }\n\n        // Save edited disease trait\n        else {\n            diseaseTraitRepository.save(diseaseTrait);\n            return \"redirect:/diseasetraits\";\n        }\n    }", "signature": "String editDiseaseTrait(@Valid @ModelAttribute DiseaseTrait diseaseTrait,\n                                   BindingResult bindingResult, @PathVariable Long diseaseTraitId)", "full_signature": "@RequestMapping(value = \"/{diseaseTraitId}\", produces = MediaType.TEXT_HTML_VALUE, method = RequestMethod.POST) public String editDiseaseTrait(@Valid @ModelAttribute DiseaseTrait diseaseTrait,\n                                   BindingResult bindingResult, @PathVariable Long diseaseTraitId)", "class_method_signature": "DiseaseTraitController.editDiseaseTrait(@Valid @ModelAttribute DiseaseTrait diseaseTrait,\n                                   BindingResult bindingResult, @PathVariable Long diseaseTraitId)", "testcase": false, "constructor": false, "invocations": ["hasErrors", "save"]}, "repository": {"repo_id": 2995118, "url": "https://github.com/EBISPOT/goci", "language": "Java", "is_fork": false, "fork_count": 17, "stargazer_count": 16, "size": 147335, "license": "licensed"}}