{"test_class": {"identifier": "RaygunOnFailedSendOfflineStorageHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RaygunOnFailedSendOfflineStorageHandler handler;", "modifier": "private", "type": "RaygunOnFailedSendOfflineStorageHandler", "declarator": "handler", "var_name": "handler"}, {"original_string": "private final String storageDir = \"storage\";", "modifier": "private final", "type": "String", "declarator": "storageDir = \"storage\"", "var_name": "storageDir"}, {"original_string": "@Mock\n    private File storage, file;", "modifier": "@Mock\n    private", "type": "File", "declarator": "storage", "var_name": "storage"}, {"original_string": "@Mock\n    private OutputStream outputStream;", "modifier": "@Mock\n    private", "type": "OutputStream", "declarator": "outputStream", "var_name": "outputStream"}, {"original_string": "@Mock\n    private RaygunClient client;", "modifier": "@Mock\n    private", "type": "RaygunClient", "declarator": "client", "var_name": "client"}], "file": "core/src/test/java/com/mindscapehq/raygun4java/core/handlers/offlinesupport/RaygunOnFailedSendOfflineStorageHandlerTest.java"}, "test_case": {"identifier": "shouldWritePayloadToFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldWritePayloadToFile() throws IOException {\n        handler.onFailedSend(null, \"payload\");\n\n        verify(outputStream).write(\"payload\".getBytes());\n        verify(outputStream).close();\n\n        assertTrue(handler.hasStoredExceptions);\n    }", "signature": "void shouldWritePayloadToFile()", "full_signature": "@Test public void shouldWritePayloadToFile()", "class_method_signature": "RaygunOnFailedSendOfflineStorageHandlerTest.shouldWritePayloadToFile()", "testcase": true, "constructor": false, "invocations": ["onFailedSend", "write", "verify", "getBytes", "close", "verify", "assertTrue"]}, "focal_class": {"identifier": "RaygunOnFailedSendOfflineStorageHandler", "superclass": "", "interfaces": "implements IRaygunOnFailedSend, IRaygunOnBeforeSend, IRaygunSendEventFactory", "fields": [{"original_string": "static final String fileExtension = \".raygunpayload\";", "modifier": "static final", "type": "String", "declarator": "fileExtension = \".raygunpayload\"", "var_name": "fileExtension"}, {"original_string": "private final String apiKeyHash;", "modifier": "private final", "type": "String", "declarator": "apiKeyHash", "var_name": "apiKeyHash"}, {"original_string": "private Random random = new Random();", "modifier": "private", "type": "Random", "declarator": "random = new Random()", "var_name": "random"}, {"original_string": "private String storageDir;", "modifier": "private", "type": "String", "declarator": "storageDir", "var_name": "storageDir"}, {"original_string": "File storage;", "modifier": "", "type": "File", "declarator": "storage", "var_name": "storage"}, {"original_string": "boolean enabled = true;", "modifier": "", "type": "boolean", "declarator": "enabled = true", "var_name": "enabled"}, {"original_string": "private boolean exceptionLogged = false;", "modifier": "private", "type": "boolean", "declarator": "exceptionLogged = false", "var_name": "exceptionLogged"}, {"original_string": "boolean hasStoredExceptions = true;", "modifier": "", "type": "boolean", "declarator": "hasStoredExceptions = true", "var_name": "hasStoredExceptions"}, {"original_string": "private volatile Runnable sendingStoredExceptions;", "modifier": "private volatile", "type": "Runnable", "declarator": "sendingStoredExceptions", "var_name": "sendingStoredExceptions"}], "methods": [{"identifier": "RaygunOnFailedSendOfflineStorageHandler", "parameters": "(String storageDir, String apiKey)", "modifiers": "public", "return": "", "signature": " RaygunOnFailedSendOfflineStorageHandler(String storageDir, String apiKey)", "full_signature": "public  RaygunOnFailedSendOfflineStorageHandler(String storageDir, String apiKey)", "class_method_signature": "RaygunOnFailedSendOfflineStorageHandler.RaygunOnFailedSendOfflineStorageHandler(String storageDir, String apiKey)", "testcase": false, "constructor": true}, {"identifier": "setEnabled", "parameters": "(boolean enabled)", "modifiers": "public", "return": "void", "signature": "void setEnabled(boolean enabled)", "full_signature": "public void setEnabled(boolean enabled)", "class_method_signature": "RaygunOnFailedSendOfflineStorageHandler.setEnabled(boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "onBeforeSend", "parameters": "(RaygunClient client, RaygunMessage message)", "modifiers": "public", "return": "RaygunMessage", "signature": "RaygunMessage onBeforeSend(RaygunClient client, RaygunMessage message)", "full_signature": "public RaygunMessage onBeforeSend(RaygunClient client, RaygunMessage message)", "class_method_signature": "RaygunOnFailedSendOfflineStorageHandler.onBeforeSend(RaygunClient client, RaygunMessage message)", "testcase": false, "constructor": false}, {"identifier": "onFailedSend", "parameters": "(RaygunClient client, String jsonPayload)", "modifiers": "public", "return": "String", "signature": "String onFailedSend(RaygunClient client, String jsonPayload)", "full_signature": "public String onFailedSend(RaygunClient client, String jsonPayload)", "class_method_signature": "RaygunOnFailedSendOfflineStorageHandler.onFailedSend(RaygunClient client, String jsonPayload)", "testcase": false, "constructor": false}, {"identifier": "getFile", "parameters": "()", "modifiers": "", "return": "File", "signature": "File getFile()", "full_signature": " File getFile()", "class_method_signature": "RaygunOnFailedSendOfflineStorageHandler.getFile()", "testcase": false, "constructor": false}, {"identifier": "getOutputStream", "parameters": "(File file)", "modifiers": "", "return": "OutputStream", "signature": "OutputStream getOutputStream(File file)", "full_signature": " OutputStream getOutputStream(File file)", "class_method_signature": "RaygunOnFailedSendOfflineStorageHandler.getOutputStream(File file)", "testcase": false, "constructor": false}, {"identifier": "getStorage", "parameters": "(String storageDir)", "modifiers": "", "return": "File", "signature": "File getStorage(String storageDir)", "full_signature": " File getStorage(String storageDir)", "class_method_signature": "RaygunOnFailedSendOfflineStorageHandler.getStorage(String storageDir)", "testcase": false, "constructor": false}, {"identifier": "getFile", "parameters": "(File storage, String name)", "modifiers": "", "return": "File", "signature": "File getFile(File storage, String name)", "full_signature": " File getFile(File storage, String name)", "class_method_signature": "RaygunOnFailedSendOfflineStorageHandler.getFile(File storage, String name)", "testcase": false, "constructor": false}, {"identifier": "disable", "parameters": "()", "modifiers": "private", "return": "File", "signature": "File disable()", "full_signature": "private File disable()", "class_method_signature": "RaygunOnFailedSendOfflineStorageHandler.disable()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "()", "modifiers": "public", "return": "IRaygunOnBeforeSend", "signature": "IRaygunOnBeforeSend create()", "full_signature": "public IRaygunOnBeforeSend create()", "class_method_signature": "RaygunOnFailedSendOfflineStorageHandler.create()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/mindscapehq/raygun4java/core/handlers/offlinesupport/RaygunOnFailedSendOfflineStorageHandler.java"}, "focal_method": {"identifier": "onFailedSend", "parameters": "(RaygunClient client, String jsonPayload)", "modifiers": "public", "return": "String", "body": "public String onFailedSend(RaygunClient client, String jsonPayload) {\n        if (!enabled) {\n            return jsonPayload;\n        }\n\n        OutputStream fileOutputStream = null;\n        try {\n            File file = getFile();\n\n            if (file == null) {\n                return jsonPayload;\n            }\n\n            fileOutputStream = getOutputStream(file);\n            fileOutputStream.write(jsonPayload.getBytes());\n\n            exceptionLogged = false;\n            hasStoredExceptions = true;\n        } catch (Exception e1) {\n            if(!exceptionLogged) {\n                Logger.getLogger(\"Raygun4Java\").warning(\"exception adding to offline storage: \" + e1.getMessage());\n                exceptionLogged = true;\n            }\n        } finally {\n            if (fileOutputStream != null) {\n                try {\n                    fileOutputStream.close();\n                } catch (IOException e1) {\n                    Logger.getLogger(\"Raygun4Java\").warning(\"exception closing file stream: \" + e1.getMessage());\n                }\n            }\n\n        }\n\n        return jsonPayload;\n    }", "signature": "String onFailedSend(RaygunClient client, String jsonPayload)", "full_signature": "public String onFailedSend(RaygunClient client, String jsonPayload)", "class_method_signature": "RaygunOnFailedSendOfflineStorageHandler.onFailedSend(RaygunClient client, String jsonPayload)", "testcase": false, "constructor": false, "invocations": ["getFile", "getOutputStream", "write", "getBytes", "warning", "getLogger", "getMessage", "close", "warning", "getLogger", "getMessage"]}, "repository": {"repo_id": 8000878, "url": "https://github.com/MindscapeHQ/raygun4java", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 23, "size": 998, "license": "licensed"}}