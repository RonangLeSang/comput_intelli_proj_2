{"test_class": {"identifier": "URLUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "Common/src/test/java/au/gov/ga/worldwind/common/util/URLUtilTest.java"}, "test_case": {"identifier": "testFromObjectWithURL", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testFromObjectWithURL() throws Exception\n\t{\n\t\tassertEquals(new URL(\"http://somewhere.com/something.html\"), URLUtil.fromObject(new URL(\"http://somewhere.com/something.html\")));\n\t}", "signature": "void testFromObjectWithURL()", "full_signature": "@Test public void testFromObjectWithURL()", "class_method_signature": "URLUtilTest.testFromObjectWithURL()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "fromObject"]}, "focal_class": {"identifier": "URLUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "isHttpsUrl", "parameters": "(URL url)", "modifiers": "public static", "return": "boolean", "signature": "boolean isHttpsUrl(URL url)", "full_signature": "public static boolean isHttpsUrl(URL url)", "class_method_signature": "URLUtil.isHttpsUrl(URL url)", "testcase": false, "constructor": false}, {"identifier": "isHttpUrl", "parameters": "(URL url)", "modifiers": "public static", "return": "boolean", "signature": "boolean isHttpUrl(URL url)", "full_signature": "public static boolean isHttpUrl(URL url)", "class_method_signature": "URLUtil.isHttpUrl(URL url)", "testcase": false, "constructor": false}, {"identifier": "isFileUrl", "parameters": "(URL url)", "modifiers": "public static", "return": "boolean", "signature": "boolean isFileUrl(URL url)", "full_signature": "public static boolean isFileUrl(URL url)", "class_method_signature": "URLUtil.isFileUrl(URL url)", "testcase": false, "constructor": false}, {"identifier": "isForResourceWithExtension", "parameters": "(URL url, String extension)", "modifiers": "public static", "return": "boolean", "signature": "boolean isForResourceWithExtension(URL url, String extension)", "full_signature": "public static boolean isForResourceWithExtension(URL url, String extension)", "class_method_signature": "URLUtil.isForResourceWithExtension(URL url, String extension)", "testcase": false, "constructor": false}, {"identifier": "stripQuery", "parameters": "(URL url)", "modifiers": "public static", "return": "URL", "signature": "URL stripQuery(URL url)", "full_signature": "public static URL stripQuery(URL url)", "class_method_signature": "URLUtil.stripQuery(URL url)", "testcase": false, "constructor": false}, {"identifier": "urlToFile", "parameters": "(URL url)", "modifiers": "public static", "return": "File", "signature": "File urlToFile(URL url)", "full_signature": "public static File urlToFile(URL url)", "class_method_signature": "URLUtil.urlToFile(URL url)", "testcase": false, "constructor": false}, {"identifier": "fromString", "parameters": "(String urlString)", "modifiers": "public static", "return": "URL", "signature": "URL fromString(String urlString)", "full_signature": "public static URL fromString(String urlString)", "class_method_signature": "URLUtil.fromString(String urlString)", "testcase": false, "constructor": false}, {"identifier": "fromString", "parameters": "(String urlString, String protocol)", "modifiers": "public static", "return": "URL", "signature": "URL fromString(String urlString, String protocol)", "full_signature": "public static URL fromString(String urlString, String protocol)", "class_method_signature": "URLUtil.fromString(String urlString, String protocol)", "testcase": false, "constructor": false}, {"identifier": "fromObject", "parameters": "(Object source)", "modifiers": "public static", "return": "URL", "signature": "URL fromObject(Object source)", "full_signature": "public static URL fromObject(Object source)", "class_method_signature": "URLUtil.fromObject(Object source)", "testcase": false, "constructor": false}, {"identifier": "toURI", "parameters": "(URL url)", "modifiers": "public static", "return": "URI", "signature": "URI toURI(URL url)", "full_signature": "public static URI toURI(URL url)", "class_method_signature": "URLUtil.toURI(URL url)", "testcase": false, "constructor": false}, {"identifier": "addQueryParameter", "parameters": "(String urlString, String queryParameter)", "modifiers": "public static", "return": "String", "signature": "String addQueryParameter(String urlString, String queryParameter)", "full_signature": "public static String addQueryParameter(String urlString, String queryParameter)", "class_method_signature": "URLUtil.addQueryParameter(String urlString, String queryParameter)", "testcase": false, "constructor": false}, {"identifier": "addQueryParameterIfMissing", "parameters": "(String urlString, String queryParameter, boolean ignoreCase)", "modifiers": "public static", "return": "String", "signature": "String addQueryParameterIfMissing(String urlString, String queryParameter, boolean ignoreCase)", "full_signature": "public static String addQueryParameterIfMissing(String urlString, String queryParameter, boolean ignoreCase)", "class_method_signature": "URLUtil.addQueryParameterIfMissing(String urlString, String queryParameter, boolean ignoreCase)", "testcase": false, "constructor": false}, {"identifier": "hasQueryParameter", "parameters": "(String urlString, String queryParameter, boolean ignoreCase)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasQueryParameter(String urlString, String queryParameter, boolean ignoreCase)", "full_signature": "public static boolean hasQueryParameter(String urlString, String queryParameter, boolean ignoreCase)", "class_method_signature": "URLUtil.hasQueryParameter(String urlString, String queryParameter, boolean ignoreCase)", "testcase": false, "constructor": false}], "file": "Common/src/main/java/au/gov/ga/worldwind/common/util/URLUtil.java"}, "focal_method": {"identifier": "fromObject", "parameters": "(Object source)", "modifiers": "public static", "return": "URL", "body": "public static URL fromObject(Object source)\n\t{\n\t\tif (source == null)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\tif (source instanceof URL)\n\t\t{\n\t\t\treturn (URL) source;\n\t\t}\n\t\tif (source instanceof File)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\treturn ((File) source).toURI().toURL();\n\t\t\t}\n\t\t\tcatch (MalformedURLException e)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\tif (source instanceof String)\n\t\t{\n\t\t\treturn fromString((String) source);\n\t\t}\n\t\treturn null;\n\t}", "signature": "URL fromObject(Object source)", "full_signature": "public static URL fromObject(Object source)", "class_method_signature": "URLUtil.fromObject(Object source)", "testcase": false, "constructor": false, "invocations": ["toURL", "toURI", "fromString"]}, "repository": {"repo_id": 3724388, "url": "https://github.com/GeoscienceAustralia/ga-worldwind-suite", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 36, "size": 278479, "license": "licensed"}}