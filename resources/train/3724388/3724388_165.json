{"test_class": {"identifier": "PathTest", "superclass": "", "interfaces": "", "fields": [], "file": "Common/src/test/java/au/gov/ga/worldwind/common/layers/curtain/PathTest.java"}, "test_case": {"identifier": "testGetPercentLatLonLargerThan100Percent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetPercentLatLonLargerThan100Percent()\n\t{\n\t\tPath path = createPath(0d, -90d, 0d, 90d, 180d, 90d);\n\t\t\n\t\tdouble percent = 1.25;\n\t\tLatLon expected = new LatLon(Angle.POS180, Angle.POS90);\n\t\tLatLon result = path.getPercentLatLon(percent);\n\t\t\n\t\tassertLatLonsEqual(expected, result);\n\t}", "signature": "void testGetPercentLatLonLargerThan100Percent()", "full_signature": "@Test public void testGetPercentLatLonLargerThan100Percent()", "class_method_signature": "PathTest.testGetPercentLatLonLargerThan100Percent()", "testcase": true, "constructor": false, "invocations": ["createPath", "getPercentLatLon", "assertLatLonsEqual"]}, "focal_class": {"identifier": "Path", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected final NavigableMap<Double, LatLon> positions = new TreeMap<Double, LatLon>();", "modifier": "protected final", "type": "NavigableMap<Double, LatLon>", "declarator": "positions = new TreeMap<Double, LatLon>()", "var_name": "positions"}, {"original_string": "protected Angle length;", "modifier": "protected", "type": "Angle", "declarator": "length", "var_name": "length"}, {"original_string": "protected static final String CACHE_NAME = \"CurtainPath\";", "modifier": "protected static final", "type": "String", "declarator": "CACHE_NAME = \"CurtainPath\"", "var_name": "CACHE_NAME"}, {"original_string": "protected static final String CACHE_ID = Path.class.getName();", "modifier": "protected static final", "type": "String", "declarator": "CACHE_ID = Path.class.getName()", "var_name": "CACHE_ID"}, {"original_string": "protected long updateFrequency = 2000;", "modifier": "protected", "type": "long", "declarator": "updateFrequency = 2000", "var_name": "updateFrequency"}, {"original_string": "protected long exaggerationChangeTime = -1;", "modifier": "protected", "type": "long", "declarator": "exaggerationChangeTime = -1", "var_name": "exaggerationChangeTime"}, {"original_string": "protected double lastVerticalExaggeration = -Double.MAX_VALUE;", "modifier": "protected", "type": "double", "declarator": "lastVerticalExaggeration = -Double.MAX_VALUE", "var_name": "lastVerticalExaggeration"}], "methods": [{"identifier": "Path", "parameters": "(List<LatLon> positions)", "modifiers": "public", "return": "", "signature": " Path(List<LatLon> positions)", "full_signature": "public  Path(List<LatLon> positions)", "class_method_signature": "Path.Path(List<LatLon> positions)", "testcase": false, "constructor": true}, {"identifier": "setPositions", "parameters": "(List<LatLon> positions)", "modifiers": "private synchronized", "return": "void", "signature": "void setPositions(List<LatLon> positions)", "full_signature": "private synchronized void setPositions(List<LatLon> positions)", "class_method_signature": "Path.setPositions(List<LatLon> positions)", "testcase": false, "constructor": false}, {"identifier": "getLength", "parameters": "()", "modifiers": "public synchronized", "return": "Angle", "signature": "Angle getLength()", "full_signature": "public synchronized Angle getLength()", "class_method_signature": "Path.getLength()", "testcase": false, "constructor": false}, {"identifier": "getUpdateFrequency", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getUpdateFrequency()", "full_signature": "public long getUpdateFrequency()", "class_method_signature": "Path.getUpdateFrequency()", "testcase": false, "constructor": false}, {"identifier": "setUpdateFrequency", "parameters": "(long updateFrequency)", "modifiers": "public", "return": "void", "signature": "void setUpdateFrequency(long updateFrequency)", "full_signature": "public void setUpdateFrequency(long updateFrequency)", "class_method_signature": "Path.setUpdateFrequency(long updateFrequency)", "testcase": false, "constructor": false}, {"identifier": "getPercentLatLon", "parameters": "(double percent)", "modifiers": "public synchronized", "return": "LatLon", "signature": "LatLon getPercentLatLon(double percent)", "full_signature": "public synchronized LatLon getPercentLatLon(double percent)", "class_method_signature": "Path.getPercentLatLon(double percent)", "testcase": false, "constructor": false}, {"identifier": "getSegmentCenterPoint", "parameters": "(DrawContext dc, Segment segment, double top, double bottom,\n\t\t\tboolean followTerrain)", "modifiers": "public synchronized", "return": "Vec4", "signature": "Vec4 getSegmentCenterPoint(DrawContext dc, Segment segment, double top, double bottom,\n\t\t\tboolean followTerrain)", "full_signature": "public synchronized Vec4 getSegmentCenterPoint(DrawContext dc, Segment segment, double top, double bottom,\n\t\t\tboolean followTerrain)", "class_method_signature": "Path.getSegmentCenterPoint(DrawContext dc, Segment segment, double top, double bottom,\n\t\t\tboolean followTerrain)", "testcase": false, "constructor": false}, {"identifier": "getGeometry", "parameters": "(DrawContext dc, CurtainTile tile, double top, double bottom,\n\t\t\tint subsegments, boolean followTerrain)", "modifiers": "public synchronized", "return": "SegmentGeometry", "signature": "SegmentGeometry getGeometry(DrawContext dc, CurtainTile tile, double top, double bottom,\n\t\t\tint subsegments, boolean followTerrain)", "full_signature": "public synchronized SegmentGeometry getGeometry(DrawContext dc, CurtainTile tile, double top, double bottom,\n\t\t\tint subsegments, boolean followTerrain)", "class_method_signature": "Path.getGeometry(DrawContext dc, CurtainTile tile, double top, double bottom,\n\t\t\tint subsegments, boolean followTerrain)", "testcase": false, "constructor": false}, {"identifier": "getPointsInSegment", "parameters": "(DrawContext dc, Segment segment, double top, double bottom,\n\t\t\tint subsegments, boolean followTerrain)", "modifiers": "public synchronized", "return": "Vec4[]", "signature": "Vec4[] getPointsInSegment(DrawContext dc, Segment segment, double top, double bottom,\n\t\t\tint subsegments, boolean followTerrain)", "full_signature": "public synchronized Vec4[] getPointsInSegment(DrawContext dc, Segment segment, double top, double bottom,\n\t\t\tint subsegments, boolean followTerrain)", "class_method_signature": "Path.getPointsInSegment(DrawContext dc, Segment segment, double top, double bottom,\n\t\t\tint subsegments, boolean followTerrain)", "testcase": false, "constructor": false}, {"identifier": "segmentMap", "parameters": "(Segment segment, int subsegments)", "modifiers": "protected", "return": "NavigableMap<Double, LatLon>", "signature": "NavigableMap<Double, LatLon> segmentMap(Segment segment, int subsegments)", "full_signature": "protected NavigableMap<Double, LatLon> segmentMap(Segment segment, int subsegments)", "class_method_signature": "Path.segmentMap(Segment segment, int subsegments)", "testcase": false, "constructor": false}, {"identifier": "getSegmentExtent", "parameters": "(DrawContext dc, Segment segment, double top, double bottom,\n\t\t\tint subsegments, boolean followTerrain)", "modifiers": "public synchronized", "return": "Extent", "signature": "Extent getSegmentExtent(DrawContext dc, Segment segment, double top, double bottom,\n\t\t\tint subsegments, boolean followTerrain)", "full_signature": "public synchronized Extent getSegmentExtent(DrawContext dc, Segment segment, double top, double bottom,\n\t\t\tint subsegments, boolean followTerrain)", "class_method_signature": "Path.getSegmentExtent(DrawContext dc, Segment segment, double top, double bottom,\n\t\t\tint subsegments, boolean followTerrain)", "testcase": false, "constructor": false}, {"identifier": "getSegmentLength", "parameters": "(Segment segment)", "modifiers": "public synchronized", "return": "Angle", "signature": "Angle getSegmentLength(Segment segment)", "full_signature": "public synchronized Angle getSegmentLength(Segment segment)", "class_method_signature": "Path.getSegmentLength(Segment segment)", "testcase": false, "constructor": false}, {"identifier": "getSegmentLengthInRadians", "parameters": "(Segment segment)", "modifiers": "public synchronized", "return": "double", "signature": "double getSegmentLengthInRadians(Segment segment)", "full_signature": "public synchronized double getSegmentLengthInRadians(Segment segment)", "class_method_signature": "Path.getSegmentLengthInRadians(Segment segment)", "testcase": false, "constructor": false}, {"identifier": "getPercentLength", "parameters": "(double percent)", "modifiers": "public synchronized", "return": "Angle", "signature": "Angle getPercentLength(double percent)", "full_signature": "public synchronized Angle getPercentLength(double percent)", "class_method_signature": "Path.getPercentLength(double percent)", "testcase": false, "constructor": false}, {"identifier": "getPercentLengthInRadians", "parameters": "(double percent)", "modifiers": "public synchronized", "return": "double", "signature": "double getPercentLengthInRadians(double percent)", "full_signature": "public synchronized double getPercentLengthInRadians(double percent)", "class_method_signature": "Path.getPercentLengthInRadians(double percent)", "testcase": false, "constructor": false}, {"identifier": "getBoundingSector", "parameters": "()", "modifiers": "public synchronized", "return": "Sector", "signature": "Sector getBoundingSector()", "full_signature": "public synchronized Sector getBoundingSector()", "class_method_signature": "Path.getBoundingSector()", "testcase": false, "constructor": false}], "file": "Common/src/main/java/au/gov/ga/worldwind/common/layers/curtain/Path.java"}, "focal_method": {"identifier": "getPercentLatLon", "parameters": "(double percent)", "modifiers": "public synchronized", "return": "LatLon", "body": "public synchronized LatLon getPercentLatLon(double percent)\n\t{\n\t\tif (percent <= 0)\n\t\t{\n\t\t\treturn positions.firstEntry().getValue();\n\t\t}\n\t\tif (percent >= 1)\n\t\t{\n\t\t\treturn positions.lastEntry().getValue();\n\t\t}\n\t\tif (positions.containsKey(percent))\n\t\t{\n\t\t\treturn positions.get(percent);\n\t\t}\n\n\t\tEntry<Double, LatLon> lower = positions.lowerEntry(percent);\n\t\tEntry<Double, LatLon> higher = positions.higherEntry(percent);\n\t\tdouble p = (percent - lower.getKey()) / (higher.getKey() - lower.getKey());\n\t\t//TODO add different interpolation methods\n\t\treturn LatLon.interpolateGreatCircle(p, lower.getValue(), higher.getValue());\n\t}", "signature": "LatLon getPercentLatLon(double percent)", "full_signature": "public synchronized LatLon getPercentLatLon(double percent)", "class_method_signature": "Path.getPercentLatLon(double percent)", "testcase": false, "constructor": false, "invocations": ["getValue", "firstEntry", "getValue", "lastEntry", "containsKey", "get", "lowerEntry", "higherEntry", "getKey", "getKey", "getKey", "interpolateGreatCircle", "getValue", "getValue"]}, "repository": {"repo_id": 3724388, "url": "https://github.com/GeoscienceAustralia/ga-worldwind-suite", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 36, "size": 278479, "license": "licensed"}}