{"test_class": {"identifier": "ColorLinesMatchingPatternFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ColorLinesMatchingPatternFilter filter;", "modifier": "private", "type": "ColorLinesMatchingPatternFilter", "declarator": "filter", "var_name": "filter"}], "file": "custom-logging/src/test/java/com/github/born2snipe/maven/log/ColorLinesMatchingPatternFilterTest.java"}, "test_case": {"identifier": "multipleColorConfigs", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void multipleColorConfigs() {\n        Config config = config(colorConfig(\"hello\", \"bg_red,fg_white\"), colorConfig(\"world\", \"@|bg_green,fg_blue $0|@\"));\n\n        String result = filter.filter(context(config, \"world\"));\n        assertEquals(ansi().bg(GREEN).fg(BLUE).a(\"world\").reset().toString(), result);\n\n    }", "signature": "void multipleColorConfigs()", "full_signature": "@Test public void multipleColorConfigs()", "class_method_signature": "ColorLinesMatchingPatternFilterTest.multipleColorConfigs()", "testcase": true, "constructor": false, "invocations": ["config", "colorConfig", "colorConfig", "filter", "context", "assertEquals", "toString", "reset", "a", "fg", "bg", "ansi"]}, "focal_class": {"identifier": "ColorLinesMatchingPatternFilter", "superclass": "", "interfaces": "implements LogEntryFilter", "fields": [], "methods": [{"identifier": "ColorLinesMatchingPatternFilter", "parameters": "()", "modifiers": "public", "return": "", "signature": " ColorLinesMatchingPatternFilter()", "full_signature": "public  ColorLinesMatchingPatternFilter()", "class_method_signature": "ColorLinesMatchingPatternFilter.ColorLinesMatchingPatternFilter()", "testcase": false, "constructor": true}, {"identifier": "filter", "parameters": "(Context context)", "modifiers": "@Override public", "return": "String", "signature": "String filter(Context context)", "full_signature": "@Override public String filter(Context context)", "class_method_signature": "ColorLinesMatchingPatternFilter.filter(Context context)", "testcase": false, "constructor": false}, {"identifier": "logDebugInfo", "parameters": "(Context context, LinePatternColoringConfig coloring, String result)", "modifiers": "private", "return": "void", "signature": "void logDebugInfo(Context context, LinePatternColoringConfig coloring, String result)", "full_signature": "private void logDebugInfo(Context context, LinePatternColoringConfig coloring, String result)", "class_method_signature": "ColorLinesMatchingPatternFilter.logDebugInfo(Context context, LinePatternColoringConfig coloring, String result)", "testcase": false, "constructor": false}, {"identifier": "isMatch", "parameters": "(Context context, LinePatternColoringConfig coloring)", "modifiers": "private", "return": "boolean", "signature": "boolean isMatch(Context context, LinePatternColoringConfig coloring)", "full_signature": "private boolean isMatch(Context context, LinePatternColoringConfig coloring)", "class_method_signature": "ColorLinesMatchingPatternFilter.isMatch(Context context, LinePatternColoringConfig coloring)", "testcase": false, "constructor": false}], "file": "custom-logging/src/main/java/com/github/born2snipe/maven/log/ColorLinesMatchingPatternFilter.java"}, "focal_method": {"identifier": "filter", "parameters": "(Context context)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String filter(Context context) {\n        for (LinePatternColoringConfig coloring : context.config.getColoring()) {\n            if (isMatch(context, coloring)) {\n                String result = ansi().render(\n                        context.entryText.replaceAll(coloring.getPattern(), coloring.getRender())\n                ).toString();\n\n                if (context.debug) {\n                    logDebugInfo(context, coloring, result);\n                }\n\n                return result;\n            }\n        }\n        return context.entryText;\n    }", "signature": "String filter(Context context)", "full_signature": "@Override public String filter(Context context)", "class_method_signature": "ColorLinesMatchingPatternFilter.filter(Context context)", "testcase": false, "constructor": false, "invocations": ["getColoring", "isMatch", "toString", "render", "ansi", "replaceAll", "getPattern", "getRender", "logDebugInfo"]}, "repository": {"repo_id": 9386489, "url": "https://github.com/born2snipe/maven-custom-logging", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 9, "size": 468, "license": "licensed"}}