{"test_class": {"identifier": "MailjetTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.\n\t\t\tgetLogger(MailjetTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.\n\t\t\tgetLogger(MailjetTest.class)", "var_name": "log"}, {"original_string": "private String apiKey;", "modifier": "private", "type": "String", "declarator": "apiKey", "var_name": "apiKey"}, {"original_string": "private String secretKey;", "modifier": "private", "type": "String", "declarator": "secretKey", "var_name": "secretKey"}, {"original_string": "private long listId;", "modifier": "private", "type": "long", "declarator": "listId", "var_name": "listId"}, {"original_string": "private Properties props;", "modifier": "private", "type": "Properties", "declarator": "props", "var_name": "props"}, {"original_string": "private Session session;", "modifier": "private", "type": "Session", "declarator": "session", "var_name": "session"}, {"original_string": "private Mailjet mailjet;", "modifier": "private", "type": "Mailjet", "declarator": "mailjet", "var_name": "mailjet"}, {"original_string": "private MailjetManager mailjetManager;", "modifier": "private", "type": "MailjetManager", "declarator": "mailjetManager", "var_name": "mailjetManager"}], "file": "newsletter/src/test/java/org/soluvas/newsletter/MailjetTest.java"}, "test_case": {"identifier": "addContact", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void addContact() {\n//\t\tAddContactResponse contact = mailjet.addContact(mailjetManager.getContactId(), \"anaconda@rockmail.com\");\n\t\tAddContactResponse contact = mailjet.addContact(listId, \"jenggot@naga.com\");\n\t\tlog.debug(\"Contact Id {}\", contact.getContact_id());\n\t\tassertNotNull(contact.getContact_id());\n\t}", "signature": "void addContact()", "full_signature": "@Test public void addContact()", "class_method_signature": "MailjetTest.addContact()", "testcase": true, "constructor": false, "invocations": ["addContact", "debug", "getContact_id", "assertNotNull", "getContact_id"]}, "focal_class": {"identifier": "Mailjet", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(Mailjet.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(Mailjet.class)", "var_name": "log"}, {"original_string": "private String apiUri;", "modifier": "private", "type": "String", "declarator": "apiUri", "var_name": "apiUri"}, {"original_string": "private UsernamePasswordCredentials userCredentials;", "modifier": "private", "type": "UsernamePasswordCredentials", "declarator": "userCredentials", "var_name": "userCredentials"}, {"original_string": "private DefaultHttpClient httpClient;", "modifier": "private", "type": "DefaultHttpClient", "declarator": "httpClient", "var_name": "httpClient"}, {"original_string": "private final ObjectMapper mapper = JsonUtils.mapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "mapper = JsonUtils.mapper", "var_name": "mapper"}, {"original_string": "private String errorMessage;", "modifier": "private", "type": "String", "declarator": "errorMessage", "var_name": "errorMessage"}, {"original_string": "private AddContactResponse addContactRespone;", "modifier": "private", "type": "AddContactResponse", "declarator": "addContactRespone", "var_name": "addContactRespone"}], "methods": [{"identifier": "Mailjet", "parameters": "(MailjetManager mailjetManager)", "modifiers": "public", "return": "", "signature": " Mailjet(MailjetManager mailjetManager)", "full_signature": "public  Mailjet(MailjetManager mailjetManager)", "class_method_signature": "Mailjet.Mailjet(MailjetManager mailjetManager)", "testcase": false, "constructor": true}, {"identifier": "Mailjet", "parameters": "()", "modifiers": "public", "return": "", "signature": " Mailjet()", "full_signature": "public  Mailjet()", "class_method_signature": "Mailjet.Mailjet()", "testcase": false, "constructor": true}, {"identifier": "addContact", "parameters": "(long listId, String email)", "modifiers": "@Deprecated public", "return": "AddContactResponse", "signature": "AddContactResponse addContact(long listId, String email)", "full_signature": "@Deprecated public AddContactResponse addContact(long listId, String email)", "class_method_signature": "Mailjet.addContact(long listId, String email)", "testcase": false, "constructor": false}, {"identifier": "insertContact", "parameters": "(long listId, String email)", "modifiers": "public", "return": "boolean", "signature": "boolean insertContact(long listId, String email)", "full_signature": "public boolean insertContact(long listId, String email)", "class_method_signature": "Mailjet.insertContact(long listId, String email)", "testcase": false, "constructor": false}, {"identifier": "addContacts", "parameters": "(String id, List<String> emails)", "modifiers": "public", "return": "AddContactResponse", "signature": "AddContactResponse addContacts(String id, List<String> emails)", "full_signature": "public AddContactResponse addContacts(String id, List<String> emails)", "class_method_signature": "Mailjet.addContacts(String id, List<String> emails)", "testcase": false, "constructor": false}, {"identifier": "showContacts", "parameters": "()", "modifiers": "public", "return": "ListContactsResponse", "signature": "ListContactsResponse showContacts()", "full_signature": "public ListContactsResponse showContacts()", "class_method_signature": "Mailjet.showContacts()", "testcase": false, "constructor": false}, {"identifier": "getMessageDescription", "parameters": "(int statusCode)", "modifiers": "private", "return": "String", "signature": "String getMessageDescription(int statusCode)", "full_signature": "private String getMessageDescription(int statusCode)", "class_method_signature": "Mailjet.getMessageDescription(int statusCode)", "testcase": false, "constructor": false}, {"identifier": "getErrorMessage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getErrorMessage()", "full_signature": "public String getErrorMessage()", "class_method_signature": "Mailjet.getErrorMessage()", "testcase": false, "constructor": false}, {"identifier": "setErrorMessage", "parameters": "(String errorMessage)", "modifiers": "public", "return": "void", "signature": "void setErrorMessage(String errorMessage)", "full_signature": "public void setErrorMessage(String errorMessage)", "class_method_signature": "Mailjet.setErrorMessage(String errorMessage)", "testcase": false, "constructor": false}, {"identifier": "getAddContactRespone", "parameters": "()", "modifiers": "public", "return": "AddContactResponse", "signature": "AddContactResponse getAddContactRespone()", "full_signature": "public AddContactResponse getAddContactRespone()", "class_method_signature": "Mailjet.getAddContactRespone()", "testcase": false, "constructor": false}, {"identifier": "setAddContactRespone", "parameters": "(AddContactResponse addContactRespone)", "modifiers": "public", "return": "void", "signature": "void setAddContactRespone(AddContactResponse addContactRespone)", "full_signature": "public void setAddContactRespone(AddContactResponse addContactRespone)", "class_method_signature": "Mailjet.setAddContactRespone(AddContactResponse addContactRespone)", "testcase": false, "constructor": false}], "file": "newsletter/src/main/java/org/soluvas/newsletter/Mailjet.java"}, "focal_method": {"identifier": "addContact", "parameters": "(long listId, String email)", "modifiers": "@Deprecated public", "return": "AddContactResponse", "body": "@Deprecated\n\tpublic AddContactResponse addContact(long listId, String email) {\n\t\tArrayList<NameValuePair> formParams = new ArrayList<NameValuePair>();\n\t\tformParams.add(new BasicNameValuePair(\"contact\", email));\n\t\tformParams.add(new BasicNameValuePair(\"id\", String.valueOf(listId)));\n\t\t\n\t\ttry {\n\t\t\tUrlEncodedFormEntity entity = new UrlEncodedFormEntity(formParams, \"UTF-8\");\n\t\t\tHttpPost httpPost = new HttpPost(apiUri + \"listsAddcontact/?output=json\");\n\t\t\thttpPost.setEntity(entity);\n\t\t\t\n\t\t\tlog.info(\"sending request to add contact\");\n\t\t\tHttpResponse httpResponse = httpClient.execute(httpPost);\n\t\t\tlog.debug(\"HttpResponse status code {}\", httpResponse.getStatusLine().getStatusCode());\n\t\t\tif (httpResponse.getStatusLine().getStatusCode() != 200 ){\n\t\t\t\tthrow new IOException(String.format(\"throw Http Error %s\", \n\t\t\t\t\t\thttpResponse.getStatusLine().getReasonPhrase()));\n\t\t\t}\n\t\t\tfinal String responseContent = IOUtils.toString(httpResponse.getEntity().getContent());\n\t\t\treturn mapper.readValue(responseContent, AddContactResponse.class);\n\t\t\t\n\t\t} catch (Exception ex) {\n\t\t\tthrow new RuntimeException(\"Cannot add contact \"+ email, ex);\n\t\t}\n\t}", "signature": "AddContactResponse addContact(long listId, String email)", "full_signature": "@Deprecated public AddContactResponse addContact(long listId, String email)", "class_method_signature": "Mailjet.addContact(long listId, String email)", "testcase": false, "constructor": false, "invocations": ["add", "add", "valueOf", "setEntity", "info", "execute", "debug", "getStatusCode", "getStatusLine", "getStatusCode", "getStatusLine", "format", "getReasonPhrase", "getStatusLine", "toString", "getContent", "getEntity", "readValue"]}, "repository": {"repo_id": 3869967, "url": "https://github.com/soluvas/soluvas-framework", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 11, "size": 19799, "license": "licensed"}}