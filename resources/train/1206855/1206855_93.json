{"test_class": {"identifier": "JamonRepositoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private JamonRepository jamonRepository;", "modifier": "private", "type": "JamonRepository", "declarator": "jamonRepository", "var_name": "jamonRepository"}], "file": "jamon-parent/jamon/src/test/java/org/wicketstuff/jamon/monitor/JamonRepositoryTest.java"}, "test_case": {"identifier": "shouldReturnMonitorWithGivenLabel", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldReturnMonitorWithGivenLabel()\n\t{\n\t\tstartThisManyMonitors(2);\n\t\tMonitor actual = jamonRepository.findMonitorByLabel(MONITOR_PREFIX + \"1\");\n\n\t\tassertNotNull(actual);\n\t\tassertEquals(MONITOR_PREFIX + \"1\", actual.getLabel());\n\t}", "signature": "void shouldReturnMonitorWithGivenLabel()", "full_signature": "@Test public void shouldReturnMonitorWithGivenLabel()", "class_method_signature": "JamonRepositoryTest.shouldReturnMonitorWithGivenLabel()", "testcase": true, "constructor": false, "invocations": ["startThisManyMonitors", "findMonitorByLabel", "assertNotNull", "assertEquals", "getLabel"]}, "focal_class": {"identifier": "JamonRepository", "superclass": "", "interfaces": "implements Serializable, MonitoringRepository", "fields": [], "methods": [{"identifier": "JamonRepository", "parameters": "()", "modifiers": "public", "return": "", "signature": " JamonRepository()", "full_signature": "public  JamonRepository()", "class_method_signature": "JamonRepository.JamonRepository()", "testcase": false, "constructor": true}, {"identifier": "getAll", "parameters": "()", "modifiers": "", "return": "List<Monitor>", "signature": "List<Monitor> getAll()", "full_signature": " List<Monitor> getAll()", "class_method_signature": "JamonRepository.getAll()", "testcase": false, "constructor": false}, {"identifier": "count", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int count()", "full_signature": "public int count()", "class_method_signature": "JamonRepository.count()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void clear()", "full_signature": "public static void clear()", "class_method_signature": "JamonRepository.clear()", "testcase": false, "constructor": false}, {"identifier": "findMonitorByLabel", "parameters": "(String monitorLabel)", "modifiers": "public", "return": "Monitor", "signature": "Monitor findMonitorByLabel(String monitorLabel)", "full_signature": "public Monitor findMonitorByLabel(String monitorLabel)", "class_method_signature": "JamonRepository.findMonitorByLabel(String monitorLabel)", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "(MonitorSpecification specification)", "modifiers": "public", "return": "List<Monitor>", "signature": "List<Monitor> find(MonitorSpecification specification)", "full_signature": "public List<Monitor> find(MonitorSpecification specification)", "class_method_signature": "JamonRepository.find(MonitorSpecification specification)", "testcase": false, "constructor": false}], "file": "jamon-parent/jamon/src/main/java/org/wicketstuff/jamon/monitor/JamonRepository.java"}, "focal_method": {"identifier": "findMonitorByLabel", "parameters": "(String monitorLabel)", "modifiers": "public", "return": "Monitor", "body": "public Monitor findMonitorByLabel(String monitorLabel)\n\t{\n\t\tif (monitorLabel == null)\n\t\t{\n\t\t\tthrow new IllegalArgumentException(\"monitorLabel is null\");\n\t\t}\n\t\tList<Monitor> monitors = find(new MonitorLabelSpecification(monitorLabel));\n\n\t\tif (monitors.size() > 1)\n\t\t{\n\t\t\tthrow new IllegalStateException(\n\t\t\t\tformat(\"More than one monitor with label '%s' found\", monitorLabel));\n\t\t}\n\t\treturn monitors.isEmpty() ? null : monitors.get(0);\n\t}", "signature": "Monitor findMonitorByLabel(String monitorLabel)", "full_signature": "public Monitor findMonitorByLabel(String monitorLabel)", "class_method_signature": "JamonRepository.findMonitorByLabel(String monitorLabel)", "testcase": false, "constructor": false, "invocations": ["find", "size", "format", "isEmpty", "get"]}, "repository": {"repo_id": 1206855, "url": "https://github.com/wicketstuff/core", "language": "Java", "is_fork": false, "fork_count": 309, "stargazer_count": 324, "size": 64476, "license": "licensed"}}