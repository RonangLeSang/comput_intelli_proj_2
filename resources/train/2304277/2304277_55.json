{"test_class": {"identifier": "JavaPackageTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final JavaPackage CHILD = new JavaPackage(\"com.foo.bar\");", "modifier": "private static final", "type": "JavaPackage", "declarator": "CHILD = new JavaPackage(\"com.foo.bar\")", "var_name": "CHILD"}, {"original_string": "private static final JavaPackage PARENT = new JavaPackage(\"com.foo\");", "modifier": "private static final", "type": "JavaPackage", "declarator": "PARENT = new JavaPackage(\"com.foo\")", "var_name": "PARENT"}], "file": "runtime/model/src/test/java/org/springframework/roo/model/JavaPackageTest.java"}, "test_case": {"identifier": "testParentPackageIsNotWithinChild", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testParentPackageIsNotWithinChild() {\n    assertFalse(PARENT.isWithin(CHILD));\n  }", "signature": "void testParentPackageIsNotWithinChild()", "full_signature": "@Test public void testParentPackageIsNotWithinChild()", "class_method_signature": "JavaPackageTest.testParentPackageIsNotWithinChild()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isWithin"]}, "focal_class": {"identifier": "JavaPackage", "superclass": "", "interfaces": "implements Comparable<JavaPackage>", "fields": [{"original_string": "private final String fullyQualifiedPackageName;", "modifier": "private final", "type": "String", "declarator": "fullyQualifiedPackageName", "var_name": "fullyQualifiedPackageName"}, {"original_string": "private String module;", "modifier": "private", "type": "String", "declarator": "module", "var_name": "module"}], "methods": [{"identifier": "JavaPackage", "parameters": "(final String fullyQualifiedPackageName)", "modifiers": "public", "return": "", "signature": " JavaPackage(final String fullyQualifiedPackageName)", "full_signature": "public  JavaPackage(final String fullyQualifiedPackageName)", "class_method_signature": "JavaPackage.JavaPackage(final String fullyQualifiedPackageName)", "testcase": false, "constructor": true}, {"identifier": "JavaPackage", "parameters": "(final String fullyQualifiedPackageName, final String module)", "modifiers": "public", "return": "", "signature": " JavaPackage(final String fullyQualifiedPackageName, final String module)", "full_signature": "public  JavaPackage(final String fullyQualifiedPackageName, final String module)", "class_method_signature": "JavaPackage.JavaPackage(final String fullyQualifiedPackageName, final String module)", "testcase": false, "constructor": true}, {"identifier": "compareTo", "parameters": "(final JavaPackage o)", "modifiers": "public", "return": "int", "signature": "int compareTo(final JavaPackage o)", "full_signature": "public int compareTo(final JavaPackage o)", "class_method_signature": "JavaPackage.compareTo(final JavaPackage o)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "JavaPackage.equals(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "getElements", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getElements()", "full_signature": "public List<String> getElements()", "class_method_signature": "JavaPackage.getElements()", "testcase": false, "constructor": false}, {"identifier": "getFullyQualifiedPackageName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFullyQualifiedPackageName()", "full_signature": "public String getFullyQualifiedPackageName()", "class_method_signature": "JavaPackage.getFullyQualifiedPackageName()", "testcase": false, "constructor": false}, {"identifier": "getModule", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getModule()", "full_signature": "public String getModule()", "class_method_signature": "JavaPackage.getModule()", "testcase": false, "constructor": false}, {"identifier": "getLastElement", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLastElement()", "full_signature": "public String getLastElement()", "class_method_signature": "JavaPackage.getLastElement()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "JavaPackage.hashCode()", "testcase": false, "constructor": false}, {"identifier": "isWithin", "parameters": "(final JavaPackage otherPackage)", "modifiers": "public", "return": "boolean", "signature": "boolean isWithin(final JavaPackage otherPackage)", "full_signature": "public boolean isWithin(final JavaPackage otherPackage)", "class_method_signature": "JavaPackage.isWithin(final JavaPackage otherPackage)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "JavaPackage.toString()", "testcase": false, "constructor": false}], "file": "runtime/model/src/main/java/org/springframework/roo/model/JavaPackage.java"}, "focal_method": {"identifier": "isWithin", "parameters": "(final JavaPackage otherPackage)", "modifiers": "public", "return": "boolean", "body": "public boolean isWithin(final JavaPackage otherPackage) {\n    return otherPackage != null\n        && fullyQualifiedPackageName.startsWith(otherPackage.getFullyQualifiedPackageName());\n  }", "signature": "boolean isWithin(final JavaPackage otherPackage)", "full_signature": "public boolean isWithin(final JavaPackage otherPackage)", "class_method_signature": "JavaPackage.isWithin(final JavaPackage otherPackage)", "testcase": false, "constructor": false, "invocations": ["startsWith", "getFullyQualifiedPackageName"]}, "repository": {"repo_id": 2304277, "url": "https://github.com/spring-projects/spring-roo", "language": "Java", "is_fork": false, "fork_count": 303, "stargazer_count": 661, "size": 40033, "license": "licensed"}}