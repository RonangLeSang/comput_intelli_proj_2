{"test_class": {"identifier": "ReservedWordsTest", "superclass": "", "interfaces": "", "fields": [], "file": "runtime/model/src/test/java/org/springframework/roo/model/ReservedWordsTest.java"}, "test_case": {"identifier": "testVerifyReservedSqlKeywordsPresent2", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n  public void testVerifyReservedSqlKeywordsPresent2() {\n    ReservedWords.verifyReservedSqlKeywordsNotPresent(new JavaType(\"com.bar.Outer\"));\n  }", "signature": "void testVerifyReservedSqlKeywordsPresent2()", "full_signature": "@Test(expected = IllegalStateException.class) public void testVerifyReservedSqlKeywordsPresent2()", "class_method_signature": "ReservedWordsTest.testVerifyReservedSqlKeywordsPresent2()", "testcase": true, "constructor": false, "invocations": ["verifyReservedSqlKeywordsNotPresent"]}, "focal_class": {"identifier": "ReservedWords", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String[] JAVA_KEYWORDS = {\"abstract\", \"assert\", \"boolean\", \"break\", \"byte\",\n      \"case\", \"catch\", \"char\", \"class\", \"const\", \"continue\", \"default\", \"do\", \"double\", \"else\",\n      \"enum\", \"extends\", \"false\", \"final\", \"finally\", \"float\", \"for\", \"goto\", \"if\", \"implements\",\n      \"import\", \"instanceof\", \"int\", \"interface\", \"long\", \"native\", \"new\", \"null\", \"package\",\n      \"private\", \"protected\", \"public\", \"return\", \"short\", \"static\", \"strictfp\", \"super\", \"switch\",\n      \"synchronized\", \"this\", \"throw\", \"throws\", \"transient\", \"true\", \"try\", \"void\", \"volatile\",\n      \"while\"};", "modifier": "private static final", "type": "String[]", "declarator": "JAVA_KEYWORDS = {\"abstract\", \"assert\", \"boolean\", \"break\", \"byte\",\n      \"case\", \"catch\", \"char\", \"class\", \"const\", \"continue\", \"default\", \"do\", \"double\", \"else\",\n      \"enum\", \"extends\", \"false\", \"final\", \"finally\", \"float\", \"for\", \"goto\", \"if\", \"implements\",\n      \"import\", \"instanceof\", \"int\", \"interface\", \"long\", \"native\", \"new\", \"null\", \"package\",\n      \"private\", \"protected\", \"public\", \"return\", \"short\", \"static\", \"strictfp\", \"super\", \"switch\",\n      \"synchronized\", \"this\", \"throw\", \"throws\", \"transient\", \"true\", \"try\", \"void\", \"volatile\",\n      \"while\"}", "var_name": "JAVA_KEYWORDS"}, {"original_string": "private final static String[] SQL_KEYWORDS = {\"ABSOLUTE\", \"ACTION\", \"ADD\", \"AFTER\", \"ALL\",\n      \"ALLOCATE\", \"ALTER\", \"AND\", \"ANY\", \"ARE\", \"ARRAY\", \"AS\", \"ASC\", \"ASENSITIVE\", \"ASSERTION\",\n      \"ASYMMETRIC\", \"AT\", \"ATOMIC\", \"AUTHORIZATION\", \"AVG\", \"BEFORE\", \"BEGIN\", \"BETWEEN\", \"BIGINT\",\n      \"BINARY\", \"BIT\", \"BIT_LENGTH\", \"BLOB\", \"BOOLEAN\", \"BOTH\", \"BREADTH\", \"BY\", \"CALL\", \"CALLED\",\n      \"CASCADE\", \"CASCADED\", \"CASE\", \"CAST\", \"CATALOG\", \"CHAR\", \"CHARACTER\", \"CHARACTER_LENGTH\",\n      \"CHAR_LENGTH\", \"CHECK\", \"CLOB\", \"CLOSE\", \"COALESCE\", \"COLLATE\", \"COLLATION\", \"COLUMN\",\n      \"COMMIT\", \"CONDITION\", \"CONNECT\", \"CONNECTION\", \"CONSTRAINT\", \"CONSTRAINTS\", \"CONSTRUCTOR\",\n      \"CONTAINS\", \"CONTINUE\", \"CONVERT\", \"CORRESPONDING\", \"COUNT\", \"CREATE\", \"CROSS\", \"CUBE\",\n      \"CURRENT\", \"CURRENT_DATE\", \"CURRENT_DEFAULT_TRANSFORM_GROUP\", \"CURRENT_PATH\", \"CURRENT_ROLE\",\n      \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"CURRENT_TRANSFORM_GROUP_FOR_TYPE\", \"CURRENT_USER\",\n      \"CURSOR\", \"CYCLE\", \"DATA\", \"DATE\", \"DAY\", \"DEALLOCATE\", \"DEC\", \"DECIMAL\", \"DECLARE\",\n      \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\", \"DELETE\", \"DEPTH\", \"DEREF\", \"DESC\", \"DESCRIBE\",\n      \"DESCRIPTOR\", \"DETERMINISTIC\", \"DIAGNOSTICS\", \"DISCONNECT\", \"DISTINCT\", \"DO\", \"DOMAIN\",\n      \"DOUBLE\", \"DROP\", \"DYNAMIC\", \"EACH\", \"ELEMENT\", \"ELSE\", \"ELSEIF\", \"END\", \"EQUALS\", \"ESCAPE\",\n      \"EXCEPT\", \"EXCEPTION\", \"EXEC\", \"EXECUTE\", \"EXISTS\", \"EXIT\", \"EXTERNAL\", \"EXTRACT\", \"FALSE\",\n      \"FETCH\", \"FILTER\", \"FIRST\", \"FLOAT\", \"FOR\", \"FOREIGN\", \"FOUND\", \"FREE\", \"FROM\", \"FULL\",\n      \"FUNCTION\", \"GENERAL\", \"GET\", \"GLOBAL\", \"GO\", \"GOTO\", \"GRANT\", \"GROUP\", \"GROUPING\",\n      \"HANDLER\", \"HAVING\", \"HOLD\", \"HOUR\", \"IDENTITY\", \"IF\", \"IMMEDIATE\", \"IN\", \"INDEX\",\n      \"INDICATOR\", \"INITIALLY\", \"INNER\", \"INOUT\", \"INPUT\", \"INSENSITIVE\", \"INSERT\", \"INT\",\n      \"INTEGER\", \"INTERSECT\", \"INTERVAL\", \"INTO\", \"IS\", \"ISOLATION\", \"ITERATE\", \"JOIN\", \"KEY\",\n      \"LANGUAGE\", \"LARGE\", \"LAST\", \"LATERAL\", \"LEADING\", \"LEAVE\", \"LEFT\", \"LEVEL\", \"LIKE\", \"LOCAL\",\n      \"LOCALTIME\", \"LOCALTIMESTAMP\", \"LOCATOR\", \"LOOP\", \"LOWER\", \"MAP\", \"MATCH\", \"MAX\", \"MEMBER\",\n      \"MERGE\", \"METHOD\", \"MIN\", \"MINUTE\", \"MODIFIES\", \"MODULE\", \"MONTH\", \"MULTISET\", \"NAMES\",\n      \"NATIONAL\", \"NATURAL\", \"NCHAR\", \"NCLOB\", \"NEW\", \"NEXT\", \"NO\", \"NONE\", \"NOT\", \"NULL\",\n      \"NULLIF\", \"NUMBER\", \"NUMERIC\", \"OBJECT\", \"OCTET_LENGTH\", \"OF\", \"OLD\", \"ON\", \"ONLY\", \"OPEN\",\n      \"OPTION\", \"OR\", \"ORDER\", \"ORDINALITY\", \"OUT\", \"OUTER\", \"OUTPUT\", \"OVER\", \"OVERLAPS\", \"PAD\",\n      \"PARAMETER\", \"PARTIAL\", \"PARTITION\", \"PATH\", \"POSITION\", \"PRECISION\", \"PREPARE\", \"PRESERVE\",\n      \"PRIMARY\", \"PRIOR\", \"PRIVILEGES\", \"PROCEDURE\", \"PUBLIC\", \"RANGE\", \"READ\", \"READS\", \"REAL\",\n      \"RECURSIVE\", \"REF\", \"REFERENCES\", \"REFERENCING\", \"RELATIVE\", \"RELEASE\", \"REPEAT\", \"RESIGNAL\",\n      \"RESTRICT\", \"RESULT\", \"RETURN\", \"RETURNS\", \"REVOKE\", \"RIGHT\", \"ROLE\", \"ROLLBACK\", \"ROLLUP\",\n      \"ROUTINE\", \"ROW\", \"ROWS\", \"SAVEPOINT\", \"SCHEMA\", \"SCOPE\", \"SCROLL\", \"SEARCH\", \"SECOND\",\n      \"SECTION\", \"SELECT\", \"SENSITIVE\", \"SESSION\", \"SESSION_USER\", \"SET\", \"SETS\", \"SIGNAL\",\n      \"SIMILAR\", \"SIZE\", \"SMALLINT\", \"SOME\", \"SPACE\", \"SPECIFIC\", \"SPECIFICTYPE\", \"SQL\", \"SQLCODE\",\n      \"SQLERROR\", \"SQLEXCEPTION\", \"SQLSTATE\", \"SQLWARNING\", \"START\", \"STATE\", \"STATIC\",\n      \"SUBMULTISET\", \"SUBSTRING\", \"SUM\", \"SYMMETRIC\", \"SYSTEM\", \"SYSTEM_USER\", \"TABLE\",\n      \"TABLESAMPLE\", \"TEMPORARY\", \"THEN\", \"TIME\", \"TIMESTAMP\", \"TIMEZONE_HOUR\", \"TIMEZONE_MINUTE\",\n      \"TO\", \"TRAILING\", \"TRANSACTION\", \"TRANSLATE\", \"TRANSLATION\", \"TREAT\", \"TRIGGER\", \"TRIM\",\n      \"TRUE\", \"UNDER\", \"UNDO\", \"UNION\", \"UNIQUE\", \"UNKNOWN\", \"UNNEST\", \"UNTIL\", \"UPDATE\", \"UPPER\",\n      \"USAGE\", \"USER\", \"USING\", \"VALUE\", \"VALUES\", \"VARCHAR\", \"VARYING\", \"VIEW\", \"WHEN\",\n      \"WHENEVER\", \"WHERE\", \"WHILE\", \"WINDOW\", \"WITH\", \"WITHIN\", \"WITHOUT\", \"WORK\", \"WRITE\", \"YEAR\",\n      \"ZONE\"};", "modifier": "private final static", "type": "String[]", "declarator": "SQL_KEYWORDS = {\"ABSOLUTE\", \"ACTION\", \"ADD\", \"AFTER\", \"ALL\",\n      \"ALLOCATE\", \"ALTER\", \"AND\", \"ANY\", \"ARE\", \"ARRAY\", \"AS\", \"ASC\", \"ASENSITIVE\", \"ASSERTION\",\n      \"ASYMMETRIC\", \"AT\", \"ATOMIC\", \"AUTHORIZATION\", \"AVG\", \"BEFORE\", \"BEGIN\", \"BETWEEN\", \"BIGINT\",\n      \"BINARY\", \"BIT\", \"BIT_LENGTH\", \"BLOB\", \"BOOLEAN\", \"BOTH\", \"BREADTH\", \"BY\", \"CALL\", \"CALLED\",\n      \"CASCADE\", \"CASCADED\", \"CASE\", \"CAST\", \"CATALOG\", \"CHAR\", \"CHARACTER\", \"CHARACTER_LENGTH\",\n      \"CHAR_LENGTH\", \"CHECK\", \"CLOB\", \"CLOSE\", \"COALESCE\", \"COLLATE\", \"COLLATION\", \"COLUMN\",\n      \"COMMIT\", \"CONDITION\", \"CONNECT\", \"CONNECTION\", \"CONSTRAINT\", \"CONSTRAINTS\", \"CONSTRUCTOR\",\n      \"CONTAINS\", \"CONTINUE\", \"CONVERT\", \"CORRESPONDING\", \"COUNT\", \"CREATE\", \"CROSS\", \"CUBE\",\n      \"CURRENT\", \"CURRENT_DATE\", \"CURRENT_DEFAULT_TRANSFORM_GROUP\", \"CURRENT_PATH\", \"CURRENT_ROLE\",\n      \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"CURRENT_TRANSFORM_GROUP_FOR_TYPE\", \"CURRENT_USER\",\n      \"CURSOR\", \"CYCLE\", \"DATA\", \"DATE\", \"DAY\", \"DEALLOCATE\", \"DEC\", \"DECIMAL\", \"DECLARE\",\n      \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\", \"DELETE\", \"DEPTH\", \"DEREF\", \"DESC\", \"DESCRIBE\",\n      \"DESCRIPTOR\", \"DETERMINISTIC\", \"DIAGNOSTICS\", \"DISCONNECT\", \"DISTINCT\", \"DO\", \"DOMAIN\",\n      \"DOUBLE\", \"DROP\", \"DYNAMIC\", \"EACH\", \"ELEMENT\", \"ELSE\", \"ELSEIF\", \"END\", \"EQUALS\", \"ESCAPE\",\n      \"EXCEPT\", \"EXCEPTION\", \"EXEC\", \"EXECUTE\", \"EXISTS\", \"EXIT\", \"EXTERNAL\", \"EXTRACT\", \"FALSE\",\n      \"FETCH\", \"FILTER\", \"FIRST\", \"FLOAT\", \"FOR\", \"FOREIGN\", \"FOUND\", \"FREE\", \"FROM\", \"FULL\",\n      \"FUNCTION\", \"GENERAL\", \"GET\", \"GLOBAL\", \"GO\", \"GOTO\", \"GRANT\", \"GROUP\", \"GROUPING\",\n      \"HANDLER\", \"HAVING\", \"HOLD\", \"HOUR\", \"IDENTITY\", \"IF\", \"IMMEDIATE\", \"IN\", \"INDEX\",\n      \"INDICATOR\", \"INITIALLY\", \"INNER\", \"INOUT\", \"INPUT\", \"INSENSITIVE\", \"INSERT\", \"INT\",\n      \"INTEGER\", \"INTERSECT\", \"INTERVAL\", \"INTO\", \"IS\", \"ISOLATION\", \"ITERATE\", \"JOIN\", \"KEY\",\n      \"LANGUAGE\", \"LARGE\", \"LAST\", \"LATERAL\", \"LEADING\", \"LEAVE\", \"LEFT\", \"LEVEL\", \"LIKE\", \"LOCAL\",\n      \"LOCALTIME\", \"LOCALTIMESTAMP\", \"LOCATOR\", \"LOOP\", \"LOWER\", \"MAP\", \"MATCH\", \"MAX\", \"MEMBER\",\n      \"MERGE\", \"METHOD\", \"MIN\", \"MINUTE\", \"MODIFIES\", \"MODULE\", \"MONTH\", \"MULTISET\", \"NAMES\",\n      \"NATIONAL\", \"NATURAL\", \"NCHAR\", \"NCLOB\", \"NEW\", \"NEXT\", \"NO\", \"NONE\", \"NOT\", \"NULL\",\n      \"NULLIF\", \"NUMBER\", \"NUMERIC\", \"OBJECT\", \"OCTET_LENGTH\", \"OF\", \"OLD\", \"ON\", \"ONLY\", \"OPEN\",\n      \"OPTION\", \"OR\", \"ORDER\", \"ORDINALITY\", \"OUT\", \"OUTER\", \"OUTPUT\", \"OVER\", \"OVERLAPS\", \"PAD\",\n      \"PARAMETER\", \"PARTIAL\", \"PARTITION\", \"PATH\", \"POSITION\", \"PRECISION\", \"PREPARE\", \"PRESERVE\",\n      \"PRIMARY\", \"PRIOR\", \"PRIVILEGES\", \"PROCEDURE\", \"PUBLIC\", \"RANGE\", \"READ\", \"READS\", \"REAL\",\n      \"RECURSIVE\", \"REF\", \"REFERENCES\", \"REFERENCING\", \"RELATIVE\", \"RELEASE\", \"REPEAT\", \"RESIGNAL\",\n      \"RESTRICT\", \"RESULT\", \"RETURN\", \"RETURNS\", \"REVOKE\", \"RIGHT\", \"ROLE\", \"ROLLBACK\", \"ROLLUP\",\n      \"ROUTINE\", \"ROW\", \"ROWS\", \"SAVEPOINT\", \"SCHEMA\", \"SCOPE\", \"SCROLL\", \"SEARCH\", \"SECOND\",\n      \"SECTION\", \"SELECT\", \"SENSITIVE\", \"SESSION\", \"SESSION_USER\", \"SET\", \"SETS\", \"SIGNAL\",\n      \"SIMILAR\", \"SIZE\", \"SMALLINT\", \"SOME\", \"SPACE\", \"SPECIFIC\", \"SPECIFICTYPE\", \"SQL\", \"SQLCODE\",\n      \"SQLERROR\", \"SQLEXCEPTION\", \"SQLSTATE\", \"SQLWARNING\", \"START\", \"STATE\", \"STATIC\",\n      \"SUBMULTISET\", \"SUBSTRING\", \"SUM\", \"SYMMETRIC\", \"SYSTEM\", \"SYSTEM_USER\", \"TABLE\",\n      \"TABLESAMPLE\", \"TEMPORARY\", \"THEN\", \"TIME\", \"TIMESTAMP\", \"TIMEZONE_HOUR\", \"TIMEZONE_MINUTE\",\n      \"TO\", \"TRAILING\", \"TRANSACTION\", \"TRANSLATE\", \"TRANSLATION\", \"TREAT\", \"TRIGGER\", \"TRIM\",\n      \"TRUE\", \"UNDER\", \"UNDO\", \"UNION\", \"UNIQUE\", \"UNKNOWN\", \"UNNEST\", \"UNTIL\", \"UPDATE\", \"UPPER\",\n      \"USAGE\", \"USER\", \"USING\", \"VALUE\", \"VALUES\", \"VARCHAR\", \"VARYING\", \"VIEW\", \"WHEN\",\n      \"WHENEVER\", \"WHERE\", \"WHILE\", \"WINDOW\", \"WITH\", \"WITHIN\", \"WITHOUT\", \"WORK\", \"WRITE\", \"YEAR\",\n      \"ZONE\"}", "var_name": "SQL_KEYWORDS"}, {"original_string": "public static final Set<String> RESERVED_JAVA_KEYWORDS = arrayToSet(JAVA_KEYWORDS);", "modifier": "public static final", "type": "Set<String>", "declarator": "RESERVED_JAVA_KEYWORDS = arrayToSet(JAVA_KEYWORDS)", "var_name": "RESERVED_JAVA_KEYWORDS"}, {"original_string": "public static final Set<String> RESERVED_SQL_KEYWORDS = arrayToSet(SQL_KEYWORDS);", "modifier": "public static final", "type": "Set<String>", "declarator": "RESERVED_SQL_KEYWORDS = arrayToSet(SQL_KEYWORDS)", "var_name": "RESERVED_SQL_KEYWORDS"}], "methods": [{"identifier": "verifyReservedJavaKeywordsNotPresent", "parameters": "(final JavaSymbolName javaSymbolName)", "modifiers": "public static", "return": "void", "signature": "void verifyReservedJavaKeywordsNotPresent(final JavaSymbolName javaSymbolName)", "full_signature": "public static void verifyReservedJavaKeywordsNotPresent(final JavaSymbolName javaSymbolName)", "class_method_signature": "ReservedWords.verifyReservedJavaKeywordsNotPresent(final JavaSymbolName javaSymbolName)", "testcase": false, "constructor": false}, {"identifier": "verifyReservedJavaKeywordsNotPresent", "parameters": "(final JavaType javaType)", "modifiers": "public static", "return": "void", "signature": "void verifyReservedJavaKeywordsNotPresent(final JavaType javaType)", "full_signature": "public static void verifyReservedJavaKeywordsNotPresent(final JavaType javaType)", "class_method_signature": "ReservedWords.verifyReservedJavaKeywordsNotPresent(final JavaType javaType)", "testcase": false, "constructor": false}, {"identifier": "verifyReservedJavaKeywordsNotPresent", "parameters": "(final String string)", "modifiers": "public static", "return": "void", "signature": "void verifyReservedJavaKeywordsNotPresent(final String string)", "full_signature": "public static void verifyReservedJavaKeywordsNotPresent(final String string)", "class_method_signature": "ReservedWords.verifyReservedJavaKeywordsNotPresent(final String string)", "testcase": false, "constructor": false}, {"identifier": "verifyReservedSqlKeywordsNotPresent", "parameters": "(final JavaSymbolName javaSymbolName)", "modifiers": "public static", "return": "void", "signature": "void verifyReservedSqlKeywordsNotPresent(final JavaSymbolName javaSymbolName)", "full_signature": "public static void verifyReservedSqlKeywordsNotPresent(final JavaSymbolName javaSymbolName)", "class_method_signature": "ReservedWords.verifyReservedSqlKeywordsNotPresent(final JavaSymbolName javaSymbolName)", "testcase": false, "constructor": false}, {"identifier": "verifyReservedSqlKeywordsNotPresent", "parameters": "(final JavaType javaType)", "modifiers": "public static", "return": "void", "signature": "void verifyReservedSqlKeywordsNotPresent(final JavaType javaType)", "full_signature": "public static void verifyReservedSqlKeywordsNotPresent(final JavaType javaType)", "class_method_signature": "ReservedWords.verifyReservedSqlKeywordsNotPresent(final JavaType javaType)", "testcase": false, "constructor": false}, {"identifier": "verifyReservedSqlKeywordsNotPresent", "parameters": "(final String string)", "modifiers": "public static", "return": "void", "signature": "void verifyReservedSqlKeywordsNotPresent(final String string)", "full_signature": "public static void verifyReservedSqlKeywordsNotPresent(final String string)", "class_method_signature": "ReservedWords.verifyReservedSqlKeywordsNotPresent(final String string)", "testcase": false, "constructor": false}, {"identifier": "verifyReservedWordsNotPresent", "parameters": "(final JavaSymbolName javaSymbolName)", "modifiers": "public static", "return": "void", "signature": "void verifyReservedWordsNotPresent(final JavaSymbolName javaSymbolName)", "full_signature": "public static void verifyReservedWordsNotPresent(final JavaSymbolName javaSymbolName)", "class_method_signature": "ReservedWords.verifyReservedWordsNotPresent(final JavaSymbolName javaSymbolName)", "testcase": false, "constructor": false}, {"identifier": "verifyReservedWordsNotPresent", "parameters": "(final JavaType javaType)", "modifiers": "public static", "return": "void", "signature": "void verifyReservedWordsNotPresent(final JavaType javaType)", "full_signature": "public static void verifyReservedWordsNotPresent(final JavaType javaType)", "class_method_signature": "ReservedWords.verifyReservedWordsNotPresent(final JavaType javaType)", "testcase": false, "constructor": false}, {"identifier": "verifyReservedWordsNotPresent", "parameters": "(final String string)", "modifiers": "public static", "return": "void", "signature": "void verifyReservedWordsNotPresent(final String string)", "full_signature": "public static void verifyReservedWordsNotPresent(final String string)", "class_method_signature": "ReservedWords.verifyReservedWordsNotPresent(final String string)", "testcase": false, "constructor": false}, {"identifier": "arrayToSet", "parameters": "(String... tokens)", "modifiers": "private static", "return": "Set<String>", "signature": "Set<String> arrayToSet(String... tokens)", "full_signature": "private static Set<String> arrayToSet(String... tokens)", "class_method_signature": "ReservedWords.arrayToSet(String... tokens)", "testcase": false, "constructor": false}, {"identifier": "ReservedWords", "parameters": "()", "modifiers": "private", "return": "", "signature": " ReservedWords()", "full_signature": "private  ReservedWords()", "class_method_signature": "ReservedWords.ReservedWords()", "testcase": false, "constructor": true}], "file": "runtime/model/src/main/java/org/springframework/roo/model/ReservedWords.java"}, "focal_method": {"identifier": "verifyReservedSqlKeywordsNotPresent", "parameters": "(final JavaSymbolName javaSymbolName)", "modifiers": "public static", "return": "void", "body": "public static void verifyReservedSqlKeywordsNotPresent(final JavaSymbolName javaSymbolName) {\n    Validate.notNull(javaSymbolName, \"Java symbol required\");\n    if (RESERVED_SQL_KEYWORDS.contains(javaSymbolName.getSymbolName().toLowerCase())) {\n      throw new IllegalStateException(\"Reserved SQL keyword '\" + javaSymbolName.getSymbolName()\n          + \"' is not permitted as symbol name\");\n    }\n  }", "signature": "void verifyReservedSqlKeywordsNotPresent(final JavaSymbolName javaSymbolName)", "full_signature": "public static void verifyReservedSqlKeywordsNotPresent(final JavaSymbolName javaSymbolName)", "class_method_signature": "ReservedWords.verifyReservedSqlKeywordsNotPresent(final JavaSymbolName javaSymbolName)", "testcase": false, "constructor": false, "invocations": ["notNull", "contains", "toLowerCase", "getSymbolName", "getSymbolName"]}, "repository": {"repo_id": 2304277, "url": "https://github.com/spring-projects/spring-roo", "language": "Java", "is_fork": false, "fork_count": 303, "stargazer_count": 661, "size": 40033, "license": "licensed"}}