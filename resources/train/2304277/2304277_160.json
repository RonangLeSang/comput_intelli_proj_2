{"test_class": {"identifier": "PomManagementServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ROOT_MODULE_NAME = \"\";", "modifier": "private static final", "type": "String", "declarator": "ROOT_MODULE_NAME = \"\"", "var_name": "ROOT_MODULE_NAME"}, {"original_string": "@Mock\n  private FileManager mockFileManager;", "modifier": "@Mock\n  private", "type": "FileManager", "declarator": "mockFileManager", "var_name": "mockFileManager"}, {"original_string": "@Mock\n  private FileMonitorService mockFileMonitorService;", "modifier": "@Mock\n  private", "type": "FileMonitorService", "declarator": "mockFileMonitorService", "var_name": "mockFileMonitorService"}, {"original_string": "@Mock\n  private MetadataDependencyRegistry mockMetadataDependencyRegistry;", "modifier": "@Mock\n  private", "type": "MetadataDependencyRegistry", "declarator": "mockMetadataDependencyRegistry", "var_name": "mockMetadataDependencyRegistry"}, {"original_string": "@Mock\n  private MetadataService mockMetadataService;", "modifier": "@Mock\n  private", "type": "MetadataService", "declarator": "mockMetadataService", "var_name": "mockMetadataService"}, {"original_string": "@Mock\n  private PomFactory mockPomFactory;", "modifier": "@Mock\n  private", "type": "PomFactory", "declarator": "mockPomFactory", "var_name": "mockPomFactory"}, {"original_string": "@Mock\n  private Shell mockShell;", "modifier": "@Mock\n  private", "type": "Shell", "declarator": "mockShell", "var_name": "mockShell"}, {"original_string": "private PomManagementServiceImpl service;", "modifier": "private", "type": "PomManagementServiceImpl", "declarator": "service", "var_name": "service"}], "file": "runtime/project/src/test/java/org/springframework/roo/project/PomManagementServiceImplTest.java"}, "test_case": {"identifier": "testGetPomsWhenOneNonExistantPomIsDirty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetPomsWhenOneNonExistantPomIsDirty() {\n    // Set up\n    final Collection<String> dirtyFiles = Arrays.asList(\"/users/jbloggs/clinic/pom.xml\");\n    when(mockFileMonitorService.getDirtyFiles(PomManagementServiceImpl.class.getName()))\n        .thenReturn(dirtyFiles);\n\n    // Invoke\n    final Collection<Pom> poms = service.getPoms();\n\n    // Check\n    assertEquals(0, poms.size());\n  }", "signature": "void testGetPomsWhenOneNonExistantPomIsDirty()", "full_signature": "@Test public void testGetPomsWhenOneNonExistantPomIsDirty()", "class_method_signature": "PomManagementServiceImplTest.testGetPomsWhenOneNonExistantPomIsDirty()", "testcase": true, "constructor": false, "invocations": ["asList", "thenReturn", "when", "getDirtyFiles", "getName", "getPoms", "assertEquals", "size"]}, "focal_class": {"identifier": "PomManagementServiceImpl", "superclass": "", "interfaces": "implements PomManagementService", "fields": [{"original_string": "private BundleContext context;", "modifier": "private", "type": "BundleContext", "declarator": "context", "var_name": "context"}, {"original_string": "private static final Logger LOGGER = HandlerUtils.getLogger(PomManagementServiceImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = HandlerUtils.getLogger(PomManagementServiceImpl.class)", "var_name": "LOGGER"}, {"original_string": "private static final String SEPARATOR = File.separator;", "modifier": "private static final", "type": "String", "declarator": "SEPARATOR = File.separator", "var_name": "SEPARATOR"}, {"original_string": "private static final String DEFAULT_POM_NAME = \"pom.xml\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_POM_NAME = \"pom.xml\"", "var_name": "DEFAULT_POM_NAME"}, {"original_string": "private static final String DEFAULT_RELATIVE_PATH = \"..\" + SEPARATOR + DEFAULT_POM_NAME;", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_RELATIVE_PATH = \"..\" + SEPARATOR + DEFAULT_POM_NAME", "var_name": "DEFAULT_RELATIVE_PATH"}, {"original_string": "FileManager fileManager;", "modifier": "", "type": "FileManager", "declarator": "fileManager", "var_name": "fileManager"}, {"original_string": "FileMonitorService fileMonitorService;", "modifier": "", "type": "FileMonitorService", "declarator": "fileMonitorService", "var_name": "fileMonitorService"}, {"original_string": "MetadataDependencyRegistry metadataDependencyRegistry;", "modifier": "", "type": "MetadataDependencyRegistry", "declarator": "metadataDependencyRegistry", "var_name": "metadataDependencyRegistry"}, {"original_string": "MetadataService metadataService;", "modifier": "", "type": "MetadataService", "declarator": "metadataService", "var_name": "metadataService"}, {"original_string": "PomFactory pomFactory;", "modifier": "", "type": "PomFactory", "declarator": "pomFactory", "var_name": "pomFactory"}, {"original_string": "Shell shell;", "modifier": "", "type": "Shell", "declarator": "shell", "var_name": "shell"}, {"original_string": "private String focusedModulePath;", "modifier": "private", "type": "String", "declarator": "focusedModulePath", "var_name": "focusedModulePath"}, {"original_string": "private final Map<String, Pom> pomMap = new LinkedHashMap<String, Pom>();", "modifier": "private final", "type": "Map<String, Pom>", "declarator": "pomMap = new LinkedHashMap<String, Pom>()", "var_name": "pomMap"}, {"original_string": "private String projectRootDirectory;", "modifier": "private", "type": "String", "declarator": "projectRootDirectory", "var_name": "projectRootDirectory"}, {"original_string": "private final Set<String> toBeParsed = new HashSet<String>();", "modifier": "private final", "type": "Set<String>", "declarator": "toBeParsed = new HashSet<String>()", "var_name": "toBeParsed"}], "methods": [{"identifier": "activate", "parameters": "(final ComponentContext cContext)", "modifiers": "protected", "return": "void", "signature": "void activate(final ComponentContext cContext)", "full_signature": "protected void activate(final ComponentContext cContext)", "class_method_signature": "PomManagementServiceImpl.activate(final ComponentContext cContext)", "testcase": false, "constructor": false}, {"identifier": "addPom", "parameters": "(final Pom pom)", "modifiers": "", "return": "void", "signature": "void addPom(final Pom pom)", "full_signature": " void addPom(final Pom pom)", "class_method_signature": "PomManagementServiceImpl.addPom(final Pom pom)", "testcase": false, "constructor": false}, {"identifier": "findUnparsedPoms", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void findUnparsedPoms()", "full_signature": "private void findUnparsedPoms()", "class_method_signature": "PomManagementServiceImpl.findUnparsedPoms()", "testcase": false, "constructor": false}, {"identifier": "getFocusedModule", "parameters": "()", "modifiers": "public", "return": "Pom", "signature": "Pom getFocusedModule()", "full_signature": "public Pom getFocusedModule()", "class_method_signature": "PomManagementServiceImpl.getFocusedModule()", "testcase": false, "constructor": false}, {"identifier": "getFocusedModuleName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFocusedModuleName()", "full_signature": "public String getFocusedModuleName()", "class_method_signature": "PomManagementServiceImpl.getFocusedModuleName()", "testcase": false, "constructor": false}, {"identifier": "getModuleForFileIdentifier", "parameters": "(final String fileIdentifier)", "modifiers": "public", "return": "Pom", "signature": "Pom getModuleForFileIdentifier(final String fileIdentifier)", "full_signature": "public Pom getModuleForFileIdentifier(final String fileIdentifier)", "class_method_signature": "PomManagementServiceImpl.getModuleForFileIdentifier(final String fileIdentifier)", "testcase": false, "constructor": false}, {"identifier": "getModuleName", "parameters": "(final String pomDirectory)", "modifiers": "private", "return": "String", "signature": "String getModuleName(final String pomDirectory)", "full_signature": "private String getModuleName(final String pomDirectory)", "class_method_signature": "PomManagementServiceImpl.getModuleName(final String pomDirectory)", "testcase": false, "constructor": false}, {"identifier": "getModuleNames", "parameters": "()", "modifiers": "public", "return": "Collection<String>", "signature": "Collection<String> getModuleNames()", "full_signature": "public Collection<String> getModuleNames()", "class_method_signature": "PomManagementServiceImpl.getModuleNames()", "testcase": false, "constructor": false}, {"identifier": "getPomFromModuleName", "parameters": "(final String moduleName)", "modifiers": "public", "return": "Pom", "signature": "Pom getPomFromModuleName(final String moduleName)", "full_signature": "public Pom getPomFromModuleName(final String moduleName)", "class_method_signature": "PomManagementServiceImpl.getPomFromModuleName(final String moduleName)", "testcase": false, "constructor": false}, {"identifier": "getPomFromPath", "parameters": "(final String pomPath)", "modifiers": "public", "return": "Pom", "signature": "Pom getPomFromPath(final String pomPath)", "full_signature": "public Pom getPomFromPath(final String pomPath)", "class_method_signature": "PomManagementServiceImpl.getPomFromPath(final String pomPath)", "testcase": false, "constructor": false}, {"identifier": "getPoms", "parameters": "()", "modifiers": "public", "return": "Collection<Pom>", "signature": "Collection<Pom> getPoms()", "full_signature": "public Collection<Pom> getPoms()", "class_method_signature": "PomManagementServiceImpl.getPoms()", "testcase": false, "constructor": false}, {"identifier": "getRootPom", "parameters": "()", "modifiers": "public", "return": "Pom", "signature": "Pom getRootPom()", "full_signature": "public Pom getRootPom()", "class_method_signature": "PomManagementServiceImpl.getRootPom()", "testcase": false, "constructor": false}, {"identifier": "parseUnparsedPoms", "parameters": "()", "modifiers": "private", "return": "Set<Pom>", "signature": "Set<Pom> parseUnparsedPoms()", "full_signature": "private Set<Pom> parseUnparsedPoms()", "class_method_signature": "PomManagementServiceImpl.parseUnparsedPoms()", "testcase": false, "constructor": false}, {"identifier": "resolveChildModulePoms", "parameters": "(final Element pomRoot, final String pomPath,\n      final Map<String, String> pomSet)", "modifiers": "private", "return": "void", "signature": "void resolveChildModulePoms(final Element pomRoot, final String pomPath,\n      final Map<String, String> pomSet)", "full_signature": "private void resolveChildModulePoms(final Element pomRoot, final String pomPath,\n      final Map<String, String> pomSet)", "class_method_signature": "PomManagementServiceImpl.resolveChildModulePoms(final Element pomRoot, final String pomPath,\n      final Map<String, String> pomSet)", "testcase": false, "constructor": false}, {"identifier": "resolveParentPom", "parameters": "(final String pomPath, final Map<String, String> pomSet,\n      final Element parentElement)", "modifiers": "private", "return": "void", "signature": "void resolveParentPom(final String pomPath, final Map<String, String> pomSet,\n      final Element parentElement)", "full_signature": "private void resolveParentPom(final String pomPath, final Map<String, String> pomSet,\n      final Element parentElement)", "class_method_signature": "PomManagementServiceImpl.resolveParentPom(final String pomPath, final Map<String, String> pomSet,\n      final Element parentElement)", "testcase": false, "constructor": false}, {"identifier": "resolvePoms", "parameters": "(final Element pomRoot, final String pomPath,\n      final Map<String, String> pomSet)", "modifiers": "private", "return": "void", "signature": "void resolvePoms(final Element pomRoot, final String pomPath,\n      final Map<String, String> pomSet)", "full_signature": "private void resolvePoms(final Element pomRoot, final String pomPath,\n      final Map<String, String> pomSet)", "class_method_signature": "PomManagementServiceImpl.resolvePoms(final Element pomRoot, final String pomPath,\n      final Map<String, String> pomSet)", "testcase": false, "constructor": false}, {"identifier": "resolveRelativePath", "parameters": "(String relativeTo, final String relativePath)", "modifiers": "private", "return": "String", "signature": "String resolveRelativePath(String relativeTo, final String relativePath)", "full_signature": "private String resolveRelativePath(String relativeTo, final String relativePath)", "class_method_signature": "PomManagementServiceImpl.resolveRelativePath(String relativeTo, final String relativePath)", "testcase": false, "constructor": false}, {"identifier": "setFocusedModule", "parameters": "(final Pom focusedModule)", "modifiers": "public", "return": "void", "signature": "void setFocusedModule(final Pom focusedModule)", "full_signature": "public void setFocusedModule(final Pom focusedModule)", "class_method_signature": "PomManagementServiceImpl.setFocusedModule(final Pom focusedModule)", "testcase": false, "constructor": false}, {"identifier": "sortPomMap", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void sortPomMap()", "full_signature": "private void sortPomMap()", "class_method_signature": "PomManagementServiceImpl.sortPomMap()", "testcase": false, "constructor": false}, {"identifier": "updatePomCache", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void updatePomCache()", "full_signature": "private void updatePomCache()", "class_method_signature": "PomManagementServiceImpl.updatePomCache()", "testcase": false, "constructor": false}, {"identifier": "updateProjectMetadataForModules", "parameters": "(final Iterable<Pom> newPoms)", "modifiers": "private", "return": "void", "signature": "void updateProjectMetadataForModules(final Iterable<Pom> newPoms)", "full_signature": "private void updateProjectMetadataForModules(final Iterable<Pom> newPoms)", "class_method_signature": "PomManagementServiceImpl.updateProjectMetadataForModules(final Iterable<Pom> newPoms)", "testcase": false, "constructor": false}, {"identifier": "getFileMonitorService", "parameters": "()", "modifiers": "public", "return": "FileMonitorService", "signature": "FileMonitorService getFileMonitorService()", "full_signature": "public FileMonitorService getFileMonitorService()", "class_method_signature": "PomManagementServiceImpl.getFileMonitorService()", "testcase": false, "constructor": false}, {"identifier": "getPomFactory", "parameters": "()", "modifiers": "public", "return": "PomFactory", "signature": "PomFactory getPomFactory()", "full_signature": "public PomFactory getPomFactory()", "class_method_signature": "PomManagementServiceImpl.getPomFactory()", "testcase": false, "constructor": false}, {"identifier": "getFileManager", "parameters": "()", "modifiers": "public", "return": "FileManager", "signature": "FileManager getFileManager()", "full_signature": "public FileManager getFileManager()", "class_method_signature": "PomManagementServiceImpl.getFileManager()", "testcase": false, "constructor": false}, {"identifier": "getMetadataService", "parameters": "()", "modifiers": "public", "return": "MetadataService", "signature": "MetadataService getMetadataService()", "full_signature": "public MetadataService getMetadataService()", "class_method_signature": "PomManagementServiceImpl.getMetadataService()", "testcase": false, "constructor": false}, {"identifier": "getMetadataDependencyRegistry", "parameters": "()", "modifiers": "public", "return": "MetadataDependencyRegistry", "signature": "MetadataDependencyRegistry getMetadataDependencyRegistry()", "full_signature": "public MetadataDependencyRegistry getMetadataDependencyRegistry()", "class_method_signature": "PomManagementServiceImpl.getMetadataDependencyRegistry()", "testcase": false, "constructor": false}, {"identifier": "getShell", "parameters": "()", "modifiers": "public", "return": "Shell", "signature": "Shell getShell()", "full_signature": "public Shell getShell()", "class_method_signature": "PomManagementServiceImpl.getShell()", "testcase": false, "constructor": false}], "file": "runtime/project/src/main/java/org/springframework/roo/project/PomManagementServiceImpl.java"}, "focal_method": {"identifier": "getPoms", "parameters": "()", "modifiers": "public", "return": "Collection<Pom>", "body": "public Collection<Pom> getPoms() {\n    updatePomCache();\n    return new ArrayList<Pom>(pomMap.values());\n  }", "signature": "Collection<Pom> getPoms()", "full_signature": "public Collection<Pom> getPoms()", "class_method_signature": "PomManagementServiceImpl.getPoms()", "testcase": false, "constructor": false, "invocations": ["updatePomCache", "values"]}, "repository": {"repo_id": 2304277, "url": "https://github.com/spring-projects/spring-roo", "language": "Java", "is_fork": false, "fork_count": 303, "stargazer_count": 661, "size": 40033, "license": "licensed"}}