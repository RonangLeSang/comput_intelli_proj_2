{"test_class": {"identifier": "WebXmlUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Document webXml;", "modifier": "private static", "type": "Document", "declarator": "webXml", "var_name": "webXml"}], "file": "runtime/support/src/test/java/org/springframework/roo/support/util/WebXmlUtilsTest.java"}, "test_case": {"identifier": "testAddListener", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testAddListener() {\n    WebXmlUtils.addListener(String.class.getName(), webXml, null);\n\n    final Element listenerElement =\n        XmlUtils.findFirstElement(\"listener\", webXml.getDocumentElement());\n    assertNotNull(listenerElement);\n    assertEquals(String.class.getName(),\n        XmlUtils.findFirstElement(\"listener-class\", listenerElement).getTextContent());\n  }", "signature": "void testAddListener()", "full_signature": "@Test public void testAddListener()", "class_method_signature": "WebXmlUtilsTest.testAddListener()", "testcase": true, "constructor": false, "invocations": ["addListener", "getName", "findFirstElement", "getDocumentElement", "assertNotNull", "assertEquals", "getName", "getTextContent", "findFirstElement"]}, "focal_class": {"identifier": "WebXmlUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String WEB_APP_XPATH = \"/web-app/\";", "modifier": "private static final", "type": "String", "declarator": "WEB_APP_XPATH = \"/web-app/\"", "var_name": "WEB_APP_XPATH"}, {"original_string": "private static final String WHITESPACE = \"[ \\t\\r\\n]\";", "modifier": "private static final", "type": "String", "declarator": "WHITESPACE = \"[ \\t\\r\\n]\"", "var_name": "WHITESPACE"}], "methods": [{"identifier": "addCommentBefore", "parameters": "(final Element element, final String comment,\n      final Document document)", "modifiers": "private static", "return": "void", "signature": "void addCommentBefore(final Element element, final String comment,\n      final Document document)", "full_signature": "private static void addCommentBefore(final Element element, final String comment,\n      final Document document)", "class_method_signature": "WebXmlUtils.addCommentBefore(final Element element, final String comment,\n      final Document document)", "testcase": false, "constructor": false}, {"identifier": "addContextParam", "parameters": "(final WebXmlParam contextParam, final Document document,\n      final String comment)", "modifiers": "public static", "return": "void", "signature": "void addContextParam(final WebXmlParam contextParam, final Document document,\n      final String comment)", "full_signature": "public static void addContextParam(final WebXmlParam contextParam, final Document document,\n      final String comment)", "class_method_signature": "WebXmlUtils.addContextParam(final WebXmlParam contextParam, final Document document,\n      final String comment)", "testcase": false, "constructor": false}, {"identifier": "addErrorCode", "parameters": "(final Integer errorCode, final String location,\n      final Document document, final String comment)", "modifiers": "public static", "return": "void", "signature": "void addErrorCode(final Integer errorCode, final String location,\n      final Document document, final String comment)", "full_signature": "public static void addErrorCode(final Integer errorCode, final String location,\n      final Document document, final String comment)", "class_method_signature": "WebXmlUtils.addErrorCode(final Integer errorCode, final String location,\n      final Document document, final String comment)", "testcase": false, "constructor": false}, {"identifier": "addExceptionType", "parameters": "(final String exceptionType, final String location,\n      final Document document, final String comment)", "modifiers": "public static", "return": "void", "signature": "void addExceptionType(final String exceptionType, final String location,\n      final Document document, final String comment)", "full_signature": "public static void addExceptionType(final String exceptionType, final String location,\n      final Document document, final String comment)", "class_method_signature": "WebXmlUtils.addExceptionType(final String exceptionType, final String location,\n      final Document document, final String comment)", "testcase": false, "constructor": false}, {"identifier": "addFilter", "parameters": "(final String filterName, final String filterClass,\n      final String urlPattern, final Document document, final String comment,\n      final WebXmlParam... initParams)", "modifiers": "public static", "return": "void", "signature": "void addFilter(final String filterName, final String filterClass,\n      final String urlPattern, final Document document, final String comment,\n      final WebXmlParam... initParams)", "full_signature": "public static void addFilter(final String filterName, final String filterClass,\n      final String urlPattern, final Document document, final String comment,\n      final WebXmlParam... initParams)", "class_method_signature": "WebXmlUtils.addFilter(final String filterName, final String filterClass,\n      final String urlPattern, final Document document, final String comment,\n      final WebXmlParam... initParams)", "testcase": false, "constructor": false}, {"identifier": "addFilterAtPosition", "parameters": "(final FilterPosition filterPosition,\n      final String afterFilterName, final String beforeFilterName, final String filterName,\n      final String filterClass, final String urlPattern, final Document document,\n      final String comment, List<WebXmlParam> initParams, final List<Dispatcher> dispatchers)", "modifiers": "public static", "return": "void", "signature": "void addFilterAtPosition(final FilterPosition filterPosition,\n      final String afterFilterName, final String beforeFilterName, final String filterName,\n      final String filterClass, final String urlPattern, final Document document,\n      final String comment, List<WebXmlParam> initParams, final List<Dispatcher> dispatchers)", "full_signature": "public static void addFilterAtPosition(final FilterPosition filterPosition,\n      final String afterFilterName, final String beforeFilterName, final String filterName,\n      final String filterClass, final String urlPattern, final Document document,\n      final String comment, List<WebXmlParam> initParams, final List<Dispatcher> dispatchers)", "class_method_signature": "WebXmlUtils.addFilterAtPosition(final FilterPosition filterPosition,\n      final String afterFilterName, final String beforeFilterName, final String filterName,\n      final String filterClass, final String urlPattern, final Document document,\n      final String comment, List<WebXmlParam> initParams, final List<Dispatcher> dispatchers)", "testcase": false, "constructor": false}, {"identifier": "addFilterAtPosition", "parameters": "(final FilterPosition filterPosition,\n      final String afterFilterName, final String beforeFilterName, final String filterName,\n      final String filterClass, final String urlPattern, final Document document,\n      final String comment, final WebXmlParam... initParams)", "modifiers": "public static", "return": "void", "signature": "void addFilterAtPosition(final FilterPosition filterPosition,\n      final String afterFilterName, final String beforeFilterName, final String filterName,\n      final String filterClass, final String urlPattern, final Document document,\n      final String comment, final WebXmlParam... initParams)", "full_signature": "public static void addFilterAtPosition(final FilterPosition filterPosition,\n      final String afterFilterName, final String beforeFilterName, final String filterName,\n      final String filterClass, final String urlPattern, final Document document,\n      final String comment, final WebXmlParam... initParams)", "class_method_signature": "WebXmlUtils.addFilterAtPosition(final FilterPosition filterPosition,\n      final String afterFilterName, final String beforeFilterName, final String filterName,\n      final String filterClass, final String urlPattern, final Document document,\n      final String comment, final WebXmlParam... initParams)", "testcase": false, "constructor": false}, {"identifier": "addLineBreakBefore", "parameters": "(final Element element, final Document document)", "modifiers": "private static", "return": "void", "signature": "void addLineBreakBefore(final Element element, final Document document)", "full_signature": "private static void addLineBreakBefore(final Element element, final Document document)", "class_method_signature": "WebXmlUtils.addLineBreakBefore(final Element element, final Document document)", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(final String className, final Document document,\n      final String comment)", "modifiers": "public static", "return": "void", "signature": "void addListener(final String className, final Document document,\n      final String comment)", "full_signature": "public static void addListener(final String className, final Document document,\n      final String comment)", "class_method_signature": "WebXmlUtils.addListener(final String className, final Document document,\n      final String comment)", "testcase": false, "constructor": false}, {"identifier": "addSecurityConstraint", "parameters": "(final String displayName,\n      final List<WebResourceCollection> webResourceCollections, final List<String> roleNames,\n      final String transportGuarantee, final Document document, final String comment)", "modifiers": "public static", "return": "void", "signature": "void addSecurityConstraint(final String displayName,\n      final List<WebResourceCollection> webResourceCollections, final List<String> roleNames,\n      final String transportGuarantee, final Document document, final String comment)", "full_signature": "public static void addSecurityConstraint(final String displayName,\n      final List<WebResourceCollection> webResourceCollections, final List<String> roleNames,\n      final String transportGuarantee, final Document document, final String comment)", "class_method_signature": "WebXmlUtils.addSecurityConstraint(final String displayName,\n      final List<WebResourceCollection> webResourceCollections, final List<String> roleNames,\n      final String transportGuarantee, final Document document, final String comment)", "testcase": false, "constructor": false}, {"identifier": "addServlet", "parameters": "(final String servletName, final String className,\n      final String urlPattern, final Integer loadOnStartup, final Document document,\n      final String comment, final WebXmlParam... initParams)", "modifiers": "public static", "return": "void", "signature": "void addServlet(final String servletName, final String className,\n      final String urlPattern, final Integer loadOnStartup, final Document document,\n      final String comment, final WebXmlParam... initParams)", "full_signature": "public static void addServlet(final String servletName, final String className,\n      final String urlPattern, final Integer loadOnStartup, final Document document,\n      final String comment, final WebXmlParam... initParams)", "class_method_signature": "WebXmlUtils.addServlet(final String servletName, final String className,\n      final String urlPattern, final Integer loadOnStartup, final Document document,\n      final String comment, final WebXmlParam... initParams)", "testcase": false, "constructor": false}, {"identifier": "addWelcomeFile", "parameters": "(final String path, final Document document, final String comment)", "modifiers": "public static", "return": "void", "signature": "void addWelcomeFile(final String path, final Document document, final String comment)", "full_signature": "public static void addWelcomeFile(final String path, final Document document, final String comment)", "class_method_signature": "WebXmlUtils.addWelcomeFile(final String path, final Document document, final String comment)", "testcase": false, "constructor": false}, {"identifier": "appendChildIfNotPresent", "parameters": "(final Node parent, final Element child)", "modifiers": "private static", "return": "void", "signature": "void appendChildIfNotPresent(final Node parent, final Element child)", "full_signature": "private static void appendChildIfNotPresent(final Node parent, final Element child)", "class_method_signature": "WebXmlUtils.appendChildIfNotPresent(final Node parent, final Element child)", "testcase": false, "constructor": false}, {"identifier": "insertAfter", "parameters": "(final Element element, final String afterElementName,\n      final Document document)", "modifiers": "private static", "return": "void", "signature": "void insertAfter(final Element element, final String afterElementName,\n      final Document document)", "full_signature": "private static void insertAfter(final Element element, final String afterElementName,\n      final Document document)", "class_method_signature": "WebXmlUtils.insertAfter(final Element element, final String afterElementName,\n      final Document document)", "testcase": false, "constructor": false}, {"identifier": "insertBefore", "parameters": "(final Element element, final String beforeElementName,\n      final Document document)", "modifiers": "private static", "return": "void", "signature": "void insertBefore(final Element element, final String beforeElementName,\n      final Document document)", "full_signature": "private static void insertBefore(final Element element, final String beforeElementName,\n      final Document document)", "class_method_signature": "WebXmlUtils.insertBefore(final Element element, final String beforeElementName,\n      final Document document)", "testcase": false, "constructor": false}, {"identifier": "insertBetween", "parameters": "(final Element element, final String afterElementName,\n      final String beforeElementName, final Document document)", "modifiers": "private static", "return": "void", "signature": "void insertBetween(final Element element, final String afterElementName,\n      final String beforeElementName, final Document document)", "full_signature": "private static void insertBetween(final Element element, final String afterElementName,\n      final String beforeElementName, final Document document)", "class_method_signature": "WebXmlUtils.insertBetween(final Element element, final String afterElementName,\n      final String beforeElementName, final Document document)", "testcase": false, "constructor": false}, {"identifier": "setDescription", "parameters": "(final String description, final Document document,\n      final String comment)", "modifiers": "public static", "return": "void", "signature": "void setDescription(final String description, final Document document,\n      final String comment)", "full_signature": "public static void setDescription(final String description, final Document document,\n      final String comment)", "class_method_signature": "WebXmlUtils.setDescription(final String description, final Document document,\n      final String comment)", "testcase": false, "constructor": false}, {"identifier": "setDisplayName", "parameters": "(final String displayName, final Document document,\n      final String comment)", "modifiers": "public static", "return": "void", "signature": "void setDisplayName(final String displayName, final Document document,\n      final String comment)", "full_signature": "public static void setDisplayName(final String displayName, final Document document,\n      final String comment)", "class_method_signature": "WebXmlUtils.setDisplayName(final String displayName, final Document document,\n      final String comment)", "testcase": false, "constructor": false}, {"identifier": "setSessionTimeout", "parameters": "(final int timeout, final Document document,\n      final String comment)", "modifiers": "public static", "return": "void", "signature": "void setSessionTimeout(final int timeout, final Document document,\n      final String comment)", "full_signature": "public static void setSessionTimeout(final int timeout, final Document document,\n      final String comment)", "class_method_signature": "WebXmlUtils.setSessionTimeout(final int timeout, final Document document,\n      final String comment)", "testcase": false, "constructor": false}, {"identifier": "WebXmlUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " WebXmlUtils()", "full_signature": "private  WebXmlUtils()", "class_method_signature": "WebXmlUtils.WebXmlUtils()", "testcase": false, "constructor": true}], "file": "runtime/support/src/main/java/org/springframework/roo/support/util/WebXmlUtils.java"}, "focal_method": {"identifier": "addListener", "parameters": "(final String className, final Document document,\n      final String comment)", "modifiers": "public static", "return": "void", "body": "public static void addListener(final String className, final Document document,\n      final String comment) {\n    Validate.notNull(document, \"Web XML document required\");\n    Validate.notBlank(className, \"Class name required\");\n\n    Element listenerElement =\n        XmlUtils.findFirstElement(WEB_APP_XPATH + \"listener[listener-class = '\" + className + \"']\",\n            document.getDocumentElement());\n    if (listenerElement == null) {\n      listenerElement =\n          new XmlElementBuilder(\"listener\", document).addChild(\n              new XmlElementBuilder(\"listener-class\", document).setText(className).build()).build();\n      insertBetween(listenerElement, \"filter-mapping[last()]\", \"servlet\", document);\n      if (StringUtils.isNotBlank(comment)) {\n        addCommentBefore(listenerElement, comment, document);\n      }\n    }\n  }", "signature": "void addListener(final String className, final Document document,\n      final String comment)", "full_signature": "public static void addListener(final String className, final Document document,\n      final String comment)", "class_method_signature": "WebXmlUtils.addListener(final String className, final Document document,\n      final String comment)", "testcase": false, "constructor": false, "invocations": ["notNull", "notBlank", "findFirstElement", "getDocumentElement", "build", "addChild", "build", "setText", "insertBetween", "isNotBlank", "addCommentBefore"]}, "repository": {"repo_id": 2304277, "url": "https://github.com/spring-projects/spring-roo", "language": "Java", "is_fork": false, "fork_count": 303, "stargazer_count": 661, "size": 40033, "license": "licensed"}}