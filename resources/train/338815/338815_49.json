{"test_class": {"identifier": "StorageTest", "superclass": "extends TempDirTestCase", "interfaces": "", "fields": [{"original_string": "Storage s;", "modifier": "", "type": "Storage", "declarator": "s", "var_name": "s"}, {"original_string": "LocalVcs.Memento m = new LocalVcs.Memento();", "modifier": "", "type": "LocalVcs.Memento", "declarator": "m = new LocalVcs.Memento()", "var_name": "m"}], "file": "platform/lvcs-impl/testSrc/com/intellij/history/core/storage/StorageTest.java"}, "test_case": {"identifier": "testCreatingContent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCreatingContent() {\n    Content c = s.storeContent(b(\"abc\"));\n    assertArrayEquals(b(\"abc\"), c.getBytes());\n  }", "signature": "void testCreatingContent()", "full_signature": "@Test public void testCreatingContent()", "class_method_signature": "StorageTest.testCreatingContent()", "testcase": true, "constructor": false, "invocations": ["storeContent", "b", "assertArrayEquals", "b", "getBytes"]}, "focal_class": {"identifier": "Storage", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = Logger.getInstance(\"#\" + Storage.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getInstance(\"#\" + Storage.class.getName())", "var_name": "LOG"}, {"original_string": "private static final int VERSION = 19;", "modifier": "private static final", "type": "int", "declarator": "VERSION = 19", "var_name": "VERSION"}, {"original_string": "private static final String BROKEN_MARK_FILE = \".broken\";", "modifier": "private static final", "type": "String", "declarator": "BROKEN_MARK_FILE = \".broken\"", "var_name": "BROKEN_MARK_FILE"}, {"original_string": "private static final String VERSION_FILE = \"version\";", "modifier": "private static final", "type": "String", "declarator": "VERSION_FILE = \"version\"", "var_name": "VERSION_FILE"}, {"original_string": "private static final String STORAGE_FILE = \"storage\";", "modifier": "private static final", "type": "String", "declarator": "STORAGE_FILE = \"storage\"", "var_name": "STORAGE_FILE"}, {"original_string": "private static final String CONTENTS_FILE = \"contents\";", "modifier": "private static final", "type": "String", "declarator": "CONTENTS_FILE = \"contents\"", "var_name": "CONTENTS_FILE"}, {"original_string": "private final File myDir;", "modifier": "private final", "type": "File", "declarator": "myDir", "var_name": "myDir"}, {"original_string": "private IContentStorage myContentStorage;", "modifier": "private", "type": "IContentStorage", "declarator": "myContentStorage", "var_name": "myContentStorage"}, {"original_string": "private boolean isBroken = false;", "modifier": "private", "type": "boolean", "declarator": "isBroken = false", "var_name": "isBroken"}], "methods": [{"identifier": "Storage", "parameters": "(File dir)", "modifiers": "public", "return": "", "signature": " Storage(File dir)", "full_signature": "public  Storage(File dir)", "class_method_signature": "Storage.Storage(File dir)", "testcase": false, "constructor": true}, {"identifier": "initStorage", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void initStorage()", "full_signature": "protected void initStorage()", "class_method_signature": "Storage.initStorage()", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void validate()", "full_signature": "private void validate()", "class_method_signature": "Storage.validate()", "testcase": false, "constructor": false}, {"identifier": "deleteStorage", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void deleteStorage()", "full_signature": "private void deleteStorage()", "class_method_signature": "Storage.deleteStorage()", "testcase": false, "constructor": false}, {"identifier": "recreateStorage", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void recreateStorage()", "full_signature": "private void recreateStorage()", "class_method_signature": "Storage.recreateStorage()", "testcase": false, "constructor": false}, {"identifier": "wasMarkedAsBroken", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean wasMarkedAsBroken()", "full_signature": "private boolean wasMarkedAsBroken()", "class_method_signature": "Storage.wasMarkedAsBroken()", "testcase": false, "constructor": false}, {"identifier": "isValidVersion", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isValidVersion()", "full_signature": "private boolean isValidVersion()", "class_method_signature": "Storage.isValidVersion()", "testcase": false, "constructor": false}, {"identifier": "storeVersion", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void storeVersion()", "full_signature": "private void storeVersion()", "class_method_signature": "Storage.storeVersion()", "testcase": false, "constructor": false}, {"identifier": "initContentStorage", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initContentStorage()", "full_signature": "private void initContentStorage()", "class_method_signature": "Storage.initContentStorage()", "testcase": false, "constructor": false}, {"identifier": "createContentStorage", "parameters": "()", "modifiers": "protected", "return": "IContentStorage", "signature": "IContentStorage createContentStorage()", "full_signature": "protected IContentStorage createContentStorage()", "class_method_signature": "Storage.createContentStorage()", "testcase": false, "constructor": false}, {"identifier": "getContentStorage", "parameters": "()", "modifiers": "protected", "return": "IContentStorage", "signature": "IContentStorage getContentStorage()", "full_signature": "protected IContentStorage getContentStorage()", "class_method_signature": "Storage.getContentStorage()", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "()", "modifiers": "public", "return": "LocalVcs.Memento", "signature": "LocalVcs.Memento load()", "full_signature": "public LocalVcs.Memento load()", "class_method_signature": "Storage.load()", "testcase": false, "constructor": false}, {"identifier": "saveState", "parameters": "(final LocalVcs.Memento m)", "modifiers": "public", "return": "void", "signature": "void saveState(final LocalVcs.Memento m)", "full_signature": "public void saveState(final LocalVcs.Memento m)", "class_method_signature": "Storage.saveState(final LocalVcs.Memento m)", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "protected", "return": "int", "signature": "int getVersion()", "full_signature": "protected int getVersion()", "class_method_signature": "Storage.getVersion()", "testcase": false, "constructor": false}, {"identifier": "saveContents", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void saveContents()", "full_signature": "public void saveContents()", "class_method_signature": "Storage.saveContents()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "Storage.close()", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(String fileName, T def, Loader<T> loader)", "modifiers": "private", "return": "T", "signature": "T load(String fileName, T def, Loader<T> loader)", "full_signature": "private T load(String fileName, T def, Loader<T> loader)", "class_method_signature": "Storage.load(String fileName, T def, Loader<T> loader)", "testcase": false, "constructor": false}, {"identifier": "store", "parameters": "(String fileName, Storer storer)", "modifiers": "private", "return": "void", "signature": "void store(String fileName, Storer storer)", "full_signature": "private void store(String fileName, Storer storer)", "class_method_signature": "Storage.store(String fileName, Storer storer)", "testcase": false, "constructor": false}, {"identifier": "storeContent", "parameters": "(byte[] bytes)", "modifiers": "public", "return": "Content", "signature": "Content storeContent(byte[] bytes)", "full_signature": "public Content storeContent(byte[] bytes)", "class_method_signature": "Storage.storeContent(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "loadContentData", "parameters": "(int id)", "modifiers": "protected", "return": "byte[]", "signature": "byte[] loadContentData(int id)", "full_signature": "protected byte[] loadContentData(int id)", "class_method_signature": "Storage.loadContentData(int id)", "testcase": false, "constructor": false}, {"identifier": "markAsBroken", "parameters": "(BrokenStorageException cause)", "modifiers": "private", "return": "void", "signature": "void markAsBroken(BrokenStorageException cause)", "full_signature": "private void markAsBroken(BrokenStorageException cause)", "class_method_signature": "Storage.markAsBroken(BrokenStorageException cause)", "testcase": false, "constructor": false}, {"identifier": "purgeContents", "parameters": "(List<Content> contents)", "modifiers": "public", "return": "void", "signature": "void purgeContents(List<Content> contents)", "full_signature": "public void purgeContents(List<Content> contents)", "class_method_signature": "Storage.purgeContents(List<Content> contents)", "testcase": false, "constructor": false}, {"identifier": "purgeContent", "parameters": "(StoredContent c)", "modifiers": "protected", "return": "void", "signature": "void purgeContent(StoredContent c)", "full_signature": "protected void purgeContent(StoredContent c)", "class_method_signature": "Storage.purgeContent(StoredContent c)", "testcase": false, "constructor": false}], "file": "platform/lvcs-impl/src/com/intellij/history/core/storage/Storage.java"}, "focal_method": {"identifier": "storeContent", "parameters": "(byte[] bytes)", "modifiers": "public", "return": "Content", "body": "public Content storeContent(byte[] bytes) {\n    if (isBroken) return new UnavailableContent();\n\n    try {\n      int id = myContentStorage.store(bytes);\n      return new StoredContent(this, id);\n    }\n    catch (BrokenStorageException e) {\n      markAsBroken(e);\n      return new UnavailableContent();\n    }\n  }", "signature": "Content storeContent(byte[] bytes)", "full_signature": "public Content storeContent(byte[] bytes)", "class_method_signature": "Storage.storeContent(byte[] bytes)", "testcase": false, "constructor": false, "invocations": ["store", "markAsBroken"]}, "repository": {"repo_id": 338815, "url": "https://github.com/jexp/idea2", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 627071, "license": "licensed"}}