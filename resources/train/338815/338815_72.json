{"test_class": {"identifier": "EntryTest", "superclass": "extends LocalVcsTestCase", "interfaces": "", "fields": [], "file": "platform/lvcs-impl/testSrc/com/intellij/history/core/tree/EntryTest.java"}, "test_case": {"identifier": "testPathEquality", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testPathEquality() {\n    Entry e = new MyEntry() {\n      @Override\n      public String getPath() {\n        return \"path\";\n      }\n    };\n    assertTrue(e.pathEquals(\"path\"));\n    assertFalse(e.pathEquals(\"bla-bla-bla\"));\n\n    Paths.setCaseSensitive(true);\n    assertFalse(e.pathEquals(\"PATH\"));\n\n    Paths.setCaseSensitive(false);\n    assertTrue(e.pathEquals(\"PATH\"));\n  }", "signature": "void testPathEquality()", "full_signature": "@Test public void testPathEquality()", "class_method_signature": "EntryTest.testPathEquality()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "pathEquals", "assertFalse", "pathEquals", "setCaseSensitive", "assertFalse", "pathEquals", "setCaseSensitive", "assertTrue", "pathEquals"]}, "focal_class": {"identifier": "Entry", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected int myId;", "modifier": "protected", "type": "int", "declarator": "myId", "var_name": "myId"}, {"original_string": "protected String myName;", "modifier": "protected", "type": "String", "declarator": "myName", "var_name": "myName"}, {"original_string": "protected DirectoryEntry myParent;", "modifier": "protected", "type": "DirectoryEntry", "declarator": "myParent", "var_name": "myParent"}], "methods": [{"identifier": "Entry", "parameters": "(int id, String name)", "modifiers": "public", "return": "", "signature": " Entry(int id, String name)", "full_signature": "public  Entry(int id, String name)", "class_method_signature": "Entry.Entry(int id, String name)", "testcase": false, "constructor": true}, {"identifier": "Entry", "parameters": "(Stream s)", "modifiers": "public", "return": "", "signature": " Entry(Stream s)", "full_signature": "public  Entry(Stream s)", "class_method_signature": "Entry.Entry(Stream s)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(Stream s)", "modifiers": "public", "return": "void", "signature": "void write(Stream s)", "full_signature": "public void write(Stream s)", "class_method_signature": "Entry.write(Stream s)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getId()", "full_signature": "public int getId()", "class_method_signature": "Entry.getId()", "testcase": false, "constructor": false}, {"identifier": "getIdPath", "parameters": "()", "modifiers": "public", "return": "IdPath", "signature": "IdPath getIdPath()", "full_signature": "public IdPath getIdPath()", "class_method_signature": "Entry.getIdPath()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "Entry.getName()", "testcase": false, "constructor": false}, {"identifier": "getPath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPath()", "full_signature": "public String getPath()", "class_method_signature": "Entry.getPath()", "testcase": false, "constructor": false}, {"identifier": "nameEquals", "parameters": "(String name)", "modifiers": "public", "return": "boolean", "signature": "boolean nameEquals(String name)", "full_signature": "public boolean nameEquals(String name)", "class_method_signature": "Entry.nameEquals(String name)", "testcase": false, "constructor": false}, {"identifier": "pathEquals", "parameters": "(String path)", "modifiers": "public", "return": "boolean", "signature": "boolean pathEquals(String path)", "full_signature": "public boolean pathEquals(String path)", "class_method_signature": "Entry.pathEquals(String path)", "testcase": false, "constructor": false}, {"identifier": "getTimestamp", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getTimestamp()", "full_signature": "public long getTimestamp()", "class_method_signature": "Entry.getTimestamp()", "testcase": false, "constructor": false}, {"identifier": "isReadOnly", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isReadOnly()", "full_signature": "public boolean isReadOnly()", "class_method_signature": "Entry.isReadOnly()", "testcase": false, "constructor": false}, {"identifier": "setReadOnly", "parameters": "(boolean isReadOnly)", "modifiers": "public", "return": "void", "signature": "void setReadOnly(boolean isReadOnly)", "full_signature": "public void setReadOnly(boolean isReadOnly)", "class_method_signature": "Entry.setReadOnly(boolean isReadOnly)", "testcase": false, "constructor": false}, {"identifier": "isOutdated", "parameters": "(long timestamp)", "modifiers": "public", "return": "boolean", "signature": "boolean isOutdated(long timestamp)", "full_signature": "public boolean isOutdated(long timestamp)", "class_method_signature": "Entry.isOutdated(long timestamp)", "testcase": false, "constructor": false}, {"identifier": "getContent", "parameters": "()", "modifiers": "public", "return": "Content", "signature": "Content getContent()", "full_signature": "public Content getContent()", "class_method_signature": "Entry.getContent()", "testcase": false, "constructor": false}, {"identifier": "hasUnavailableContent", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasUnavailableContent()", "full_signature": "public boolean hasUnavailableContent()", "class_method_signature": "Entry.hasUnavailableContent()", "testcase": false, "constructor": false}, {"identifier": "hasUnavailableContent", "parameters": "(List<Entry> entriesWithUnavailableContent)", "modifiers": "public", "return": "boolean", "signature": "boolean hasUnavailableContent(List<Entry> entriesWithUnavailableContent)", "full_signature": "public boolean hasUnavailableContent(List<Entry> entriesWithUnavailableContent)", "class_method_signature": "Entry.hasUnavailableContent(List<Entry> entriesWithUnavailableContent)", "testcase": false, "constructor": false}, {"identifier": "getParent", "parameters": "()", "modifiers": "public", "return": "Entry", "signature": "Entry getParent()", "full_signature": "public Entry getParent()", "class_method_signature": "Entry.getParent()", "testcase": false, "constructor": false}, {"identifier": "setParent", "parameters": "(DirectoryEntry parent)", "modifiers": "protected", "return": "void", "signature": "void setParent(DirectoryEntry parent)", "full_signature": "protected void setParent(DirectoryEntry parent)", "class_method_signature": "Entry.setParent(DirectoryEntry parent)", "testcase": false, "constructor": false}, {"identifier": "isDirectory", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDirectory()", "full_signature": "public boolean isDirectory()", "class_method_signature": "Entry.isDirectory()", "testcase": false, "constructor": false}, {"identifier": "addChild", "parameters": "(Entry child)", "modifiers": "public", "return": "void", "signature": "void addChild(Entry child)", "full_signature": "public void addChild(Entry child)", "class_method_signature": "Entry.addChild(Entry child)", "testcase": false, "constructor": false}, {"identifier": "removeChild", "parameters": "(Entry child)", "modifiers": "public", "return": "void", "signature": "void removeChild(Entry child)", "full_signature": "public void removeChild(Entry child)", "class_method_signature": "Entry.removeChild(Entry child)", "testcase": false, "constructor": false}, {"identifier": "formatAddRemove", "parameters": "(Entry child)", "modifiers": "private", "return": "String", "signature": "String formatAddRemove(Entry child)", "full_signature": "private String formatAddRemove(Entry child)", "class_method_signature": "Entry.formatAddRemove(Entry child)", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "public", "return": "List<Entry>", "signature": "List<Entry> getChildren()", "full_signature": "public List<Entry> getChildren()", "class_method_signature": "Entry.getChildren()", "testcase": false, "constructor": false}, {"identifier": "findChild", "parameters": "(String name)", "modifiers": "public", "return": "Entry", "signature": "Entry findChild(String name)", "full_signature": "public Entry findChild(String name)", "class_method_signature": "Entry.findChild(String name)", "testcase": false, "constructor": false}, {"identifier": "hasEntry", "parameters": "(String path)", "modifiers": "public", "return": "boolean", "signature": "boolean hasEntry(String path)", "full_signature": "public boolean hasEntry(String path)", "class_method_signature": "Entry.hasEntry(String path)", "testcase": false, "constructor": false}, {"identifier": "getEntry", "parameters": "(String path)", "modifiers": "public", "return": "Entry", "signature": "Entry getEntry(String path)", "full_signature": "public Entry getEntry(String path)", "class_method_signature": "Entry.getEntry(String path)", "testcase": false, "constructor": false}, {"identifier": "findEntry", "parameters": "(String path)", "modifiers": "public", "return": "Entry", "signature": "Entry findEntry(String path)", "full_signature": "public Entry findEntry(String path)", "class_method_signature": "Entry.findEntry(String path)", "testcase": false, "constructor": false}, {"identifier": "searchInChildren", "parameters": "(String path)", "modifiers": "protected", "return": "Entry", "signature": "Entry searchInChildren(String path)", "full_signature": "protected Entry searchInChildren(String path)", "class_method_signature": "Entry.searchInChildren(String path)", "testcase": false, "constructor": false}, {"identifier": "findEntry", "parameters": "(IdPath p)", "modifiers": "public", "return": "Entry", "signature": "Entry findEntry(IdPath p)", "full_signature": "public Entry findEntry(IdPath p)", "class_method_signature": "Entry.findEntry(IdPath p)", "testcase": false, "constructor": false}, {"identifier": "searchInChildren", "parameters": "(IdPath p)", "modifiers": "protected", "return": "Entry", "signature": "Entry searchInChildren(IdPath p)", "full_signature": "protected Entry searchInChildren(IdPath p)", "class_method_signature": "Entry.searchInChildren(IdPath p)", "testcase": false, "constructor": false}, {"identifier": "getEntry", "parameters": "(IdPath p)", "modifiers": "public", "return": "Entry", "signature": "Entry getEntry(IdPath p)", "full_signature": "public Entry getEntry(IdPath p)", "class_method_signature": "Entry.getEntry(IdPath p)", "testcase": false, "constructor": false}, {"identifier": "getEntry", "parameters": "(int id)", "modifiers": "public", "return": "Entry", "signature": "Entry getEntry(int id)", "full_signature": "public Entry getEntry(int id)", "class_method_signature": "Entry.getEntry(int id)", "testcase": false, "constructor": false}, {"identifier": "findEntry", "parameters": "(int id)", "modifiers": "private", "return": "Entry", "signature": "Entry findEntry(int id)", "full_signature": "private Entry findEntry(int id)", "class_method_signature": "Entry.findEntry(int id)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "public abstract", "return": "Entry", "signature": "Entry copy()", "full_signature": "public abstract Entry copy()", "class_method_signature": "Entry.copy()", "testcase": false, "constructor": false}, {"identifier": "changeName", "parameters": "(String newName)", "modifiers": "public", "return": "void", "signature": "void changeName(String newName)", "full_signature": "public void changeName(String newName)", "class_method_signature": "Entry.changeName(String newName)", "testcase": false, "constructor": false}, {"identifier": "changeContent", "parameters": "(Content newContent, long timestamp)", "modifiers": "public", "return": "void", "signature": "void changeContent(Content newContent, long timestamp)", "full_signature": "public void changeContent(Content newContent, long timestamp)", "class_method_signature": "Entry.changeContent(Content newContent, long timestamp)", "testcase": false, "constructor": false}, {"identifier": "getDifferencesWith", "parameters": "(Entry e)", "modifiers": "public", "return": "List<Difference>", "signature": "List<Difference> getDifferencesWith(Entry e)", "full_signature": "public List<Difference> getDifferencesWith(Entry e)", "class_method_signature": "Entry.getDifferencesWith(Entry e)", "testcase": false, "constructor": false}, {"identifier": "collectDifferencesWith", "parameters": "(Entry e, List<Difference> result)", "modifiers": "public abstract", "return": "void", "signature": "void collectDifferencesWith(Entry e, List<Difference> result)", "full_signature": "public abstract void collectDifferencesWith(Entry e, List<Difference> result)", "class_method_signature": "Entry.collectDifferencesWith(Entry e, List<Difference> result)", "testcase": false, "constructor": false}, {"identifier": "collectCreatedDifferences", "parameters": "(List<Difference> result)", "modifiers": "protected abstract", "return": "void", "signature": "void collectCreatedDifferences(List<Difference> result)", "full_signature": "protected abstract void collectCreatedDifferences(List<Difference> result)", "class_method_signature": "Entry.collectCreatedDifferences(List<Difference> result)", "testcase": false, "constructor": false}, {"identifier": "collectDeletedDifferences", "parameters": "(List<Difference> result)", "modifiers": "protected abstract", "return": "void", "signature": "void collectDeletedDifferences(List<Difference> result)", "full_signature": "protected abstract void collectDeletedDifferences(List<Difference> result)", "class_method_signature": "Entry.collectDeletedDifferences(List<Difference> result)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Entry.toString()", "testcase": false, "constructor": false}, {"identifier": "formatPath", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String formatPath()", "full_signature": "private String formatPath()", "class_method_signature": "Entry.formatPath()", "testcase": false, "constructor": false}], "file": "platform/lvcs-impl/src/com/intellij/history/core/tree/Entry.java"}, "focal_method": {"identifier": "pathEquals", "parameters": "(String path)", "modifiers": "public", "return": "boolean", "body": "public boolean pathEquals(String path) {\n    return Paths.equals(getPath(), path);\n  }", "signature": "boolean pathEquals(String path)", "full_signature": "public boolean pathEquals(String path)", "class_method_signature": "Entry.pathEquals(String path)", "testcase": false, "constructor": false, "invocations": ["equals", "getPath"]}, "repository": {"repo_id": 338815, "url": "https://github.com/jexp/idea2", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 627071, "license": "licensed"}}