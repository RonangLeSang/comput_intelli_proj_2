{"test_class": {"identifier": "DbConfigPersisterTest", "superclass": "extends AbstractConfigPersisterTest", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(DbConfigPersisterTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(DbConfigPersisterTest.class)", "var_name": "LOG"}, {"original_string": "private DbConfigPersister persister;", "modifier": "private", "type": "DbConfigPersister", "declarator": "persister", "var_name": "persister"}, {"original_string": "private JdbcDataSource dataSource;", "modifier": "private", "type": "JdbcDataSource", "declarator": "dataSource", "var_name": "dataSource"}, {"original_string": "private Connection con = null;", "modifier": "private", "type": "Connection", "declarator": "con = null", "var_name": "con"}, {"original_string": "private Statement stmt = null;", "modifier": "private", "type": "Statement", "declarator": "stmt = null", "var_name": "stmt"}, {"original_string": "private final String configTableName = \"ConfigData\";", "modifier": "private final", "type": "String", "declarator": "configTableName = \"ConfigData\"", "var_name": "configTableName"}, {"original_string": "private final String scopePathColumnName = \"ScopePath\";", "modifier": "private final", "type": "String", "declarator": "scopePathColumnName = \"ScopePath\"", "var_name": "scopePathColumnName"}, {"original_string": "private final String configColumnName = \"ConfigName\";", "modifier": "private final", "type": "String", "declarator": "configColumnName = \"ConfigName\"", "var_name": "configColumnName"}, {"original_string": "private final String configVersionColumnName = \"configVersion\";", "modifier": "private final", "type": "String", "declarator": "configVersionColumnName = \"configVersion\"", "var_name": "configVersionColumnName"}], "file": "org.jeconfig.dbpersister/src/test/java/org/jeconfig/dbpersister/DbConfigPersisterTest.java"}, "test_case": {"identifier": "testDeleteAllOccurences", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testDeleteAllOccurences() {\n\t\tfinal ScopePathBuilderFactory factory = getConfigService().getScopePathBuilderFactory(TestConfiguration.class);\n\t\tfinal ComplexConfigDTO config1 = createTestConfigDTO(factory.annotatedPathUntil(DefaultScopeDescriptor.NAME).create());\n\t\tpersister.saveConfiguration(config1);\n\t\tfinal ComplexConfigDTO config2 = createTestConfigDTO(factory.annotatedPathUntil(GlobalScopeDescriptor.NAME).create());\n\t\tpersister.saveConfiguration(config2);\n\t\tfinal ComplexConfigDTO config3 = createTestConfigDTO(factory.annotatedPath().create());\n\t\tpersister.saveConfiguration(config3);\n\n\t\tpersister.deleteAllOccurences(\"global\", new HashMap<String, String>());\n\n\t\tAssert.assertNull(persister.loadConfiguration(factory.annotatedPathUntil(GlobalScopeDescriptor.NAME).create()));\n\t\tAssert.assertNull(persister.loadConfiguration(factory.annotatedPath().create()));\n\t\tAssert.assertEquals(\n\t\t\t\tconfig1,\n\t\t\t\tpersister.loadConfiguration(factory.annotatedPathUntil(DefaultScopeDescriptor.NAME).create()));\n\t}", "signature": "void testDeleteAllOccurences()", "full_signature": "@Test public void testDeleteAllOccurences()", "class_method_signature": "DbConfigPersisterTest.testDeleteAllOccurences()", "testcase": true, "constructor": false, "invocations": ["getScopePathBuilderFactory", "getConfigService", "createTestConfigDTO", "create", "annotatedPathUntil", "saveConfiguration", "createTestConfigDTO", "create", "annotatedPathUntil", "saveConfiguration", "createTestConfigDTO", "create", "annotatedPath", "saveConfiguration", "deleteAllOccurences", "assertNull", "loadConfiguration", "create", "annotatedPathUntil", "assertNull", "loadConfiguration", "create", "annotatedPath", "assertEquals", "loadConfiguration", "create", "annotatedPathUntil"]}, "focal_class": {"identifier": "DbConfigPersister", "superclass": "", "interfaces": "implements ConfigPersister", "fields": [{"original_string": "public static final String ID = DbConfigPersister.class.getName();", "modifier": "public static final", "type": "String", "declarator": "ID = DbConfigPersister.class.getName()", "var_name": "ID"}, {"original_string": "private static final String SCOPE_PATH_SEPARATOR = \"/\";", "modifier": "private static final", "type": "String", "declarator": "SCOPE_PATH_SEPARATOR = \"/\"", "var_name": "SCOPE_PATH_SEPARATOR"}, {"original_string": "private final DataSource dataSource;", "modifier": "private final", "type": "DataSource", "declarator": "dataSource", "var_name": "dataSource"}, {"original_string": "private final DbUtils dbUtils;", "modifier": "private final", "type": "DbUtils", "declarator": "dbUtils", "var_name": "dbUtils"}, {"original_string": "private final DbConfigPersisterQueryCreator queryGen;", "modifier": "private final", "type": "DbConfigPersisterQueryCreator", "declarator": "queryGen", "var_name": "queryGen"}, {"original_string": "private final ScopePathGenerator gen;", "modifier": "private final", "type": "ScopePathGenerator", "declarator": "gen", "var_name": "gen"}, {"original_string": "private final ConfigMarshaller marshaller;", "modifier": "private final", "type": "ConfigMarshaller", "declarator": "marshaller", "var_name": "marshaller"}, {"original_string": "private final String configTableName;", "modifier": "private final", "type": "String", "declarator": "configTableName", "var_name": "configTableName"}, {"original_string": "private final String scopePathColumnName;", "modifier": "private final", "type": "String", "declarator": "scopePathColumnName", "var_name": "scopePathColumnName"}, {"original_string": "private final String configColumnName;", "modifier": "private final", "type": "String", "declarator": "configColumnName", "var_name": "configColumnName"}, {"original_string": "private final String configVersionColumnName;", "modifier": "private final", "type": "String", "declarator": "configVersionColumnName", "var_name": "configVersionColumnName"}], "methods": [{"identifier": "DbConfigPersister", "parameters": "(\n\t\tfinal String configTableName,\n\t\tfinal String scopePathColumnName,\n\t\tfinal String configVersionColumnName,\n\t\tfinal String configColumnName,\n\t\tfinal ConfigMarshaller marshaller,\n\t\tfinal DataSource dataSource)", "modifiers": "public", "return": "", "signature": " DbConfigPersister(\n\t\tfinal String configTableName,\n\t\tfinal String scopePathColumnName,\n\t\tfinal String configVersionColumnName,\n\t\tfinal String configColumnName,\n\t\tfinal ConfigMarshaller marshaller,\n\t\tfinal DataSource dataSource)", "full_signature": "public  DbConfigPersister(\n\t\tfinal String configTableName,\n\t\tfinal String scopePathColumnName,\n\t\tfinal String configVersionColumnName,\n\t\tfinal String configColumnName,\n\t\tfinal ConfigMarshaller marshaller,\n\t\tfinal DataSource dataSource)", "class_method_signature": "DbConfigPersister.DbConfigPersister(\n\t\tfinal String configTableName,\n\t\tfinal String scopePathColumnName,\n\t\tfinal String configVersionColumnName,\n\t\tfinal String configColumnName,\n\t\tfinal ConfigMarshaller marshaller,\n\t\tfinal DataSource dataSource)", "testcase": false, "constructor": true}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "DbConfigPersister.getId()", "testcase": false, "constructor": false}, {"identifier": "loadConfiguration", "parameters": "(final ScopePath scopePath)", "modifiers": "@Override public", "return": "ComplexConfigDTO", "signature": "ComplexConfigDTO loadConfiguration(final ScopePath scopePath)", "full_signature": "@Override public ComplexConfigDTO loadConfiguration(final ScopePath scopePath)", "class_method_signature": "DbConfigPersister.loadConfiguration(final ScopePath scopePath)", "testcase": false, "constructor": false}, {"identifier": "saveConfiguration", "parameters": "(final ComplexConfigDTO configDTO)", "modifiers": "@Override public", "return": "void", "signature": "void saveConfiguration(final ComplexConfigDTO configDTO)", "full_signature": "@Override public void saveConfiguration(final ComplexConfigDTO configDTO)", "class_method_signature": "DbConfigPersister.saveConfiguration(final ComplexConfigDTO configDTO)", "testcase": false, "constructor": false}, {"identifier": "updateConfiguration", "parameters": "(final ComplexConfigDTO configDTO)", "modifiers": "@Override public", "return": "void", "signature": "void updateConfiguration(final ComplexConfigDTO configDTO)", "full_signature": "@Override public void updateConfiguration(final ComplexConfigDTO configDTO)", "class_method_signature": "DbConfigPersister.updateConfiguration(final ComplexConfigDTO configDTO)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(final ScopePath scope, final boolean deleteChildren)", "modifiers": "@Override public", "return": "void", "signature": "void delete(final ScopePath scope, final boolean deleteChildren)", "full_signature": "@Override public void delete(final ScopePath scope, final boolean deleteChildren)", "class_method_signature": "DbConfigPersister.delete(final ScopePath scope, final boolean deleteChildren)", "testcase": false, "constructor": false}, {"identifier": "deleteAllOccurences", "parameters": "(final String scopeName, final Map<String, String> properties)", "modifiers": "@Override public", "return": "void", "signature": "void deleteAllOccurences(final String scopeName, final Map<String, String> properties)", "full_signature": "@Override public void deleteAllOccurences(final String scopeName, final Map<String, String> properties)", "class_method_signature": "DbConfigPersister.deleteAllOccurences(final String scopeName, final Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "listScopes", "parameters": "(final String scopeName, final Map<String, String> properties)", "modifiers": "@Override public", "return": "Collection<ScopePath>", "signature": "Collection<ScopePath> listScopes(final String scopeName, final Map<String, String> properties)", "full_signature": "@Override public Collection<ScopePath> listScopes(final String scopeName, final Map<String, String> properties)", "class_method_signature": "DbConfigPersister.listScopes(final String scopeName, final Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "createColumnPath", "parameters": "(final ScopePath scopePath)", "modifiers": "private", "return": "String", "signature": "String createColumnPath(final ScopePath scopePath)", "full_signature": "private String createColumnPath(final ScopePath scopePath)", "class_method_signature": "DbConfigPersister.createColumnPath(final ScopePath scopePath)", "testcase": false, "constructor": false}], "file": "org.jeconfig.dbpersister/src/main/java/org/jeconfig/dbpersister/DbConfigPersister.java"}, "focal_method": {"identifier": "deleteAllOccurences", "parameters": "(final String scopeName, final Map<String, String> properties)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void deleteAllOccurences(final String scopeName, final Map<String, String> properties) {\n\t\tAssert.paramNotNull(scopeName, \"scopeName\"); //$NON-NLS-1$\n\t\tAssert.paramNotNull(properties, \"properties\"); //$NON-NLS-1$\n\n\t\tnew JdbcTemplate<ResultSet>(dataSource).perform(new DbCallable() {\n\n\t\t\t@Override\n\t\t\tpublic Object execute(final Connection con) throws Exception {\n\t\t\t\tPreparedStatement stmt = null;\n\t\t\t\tfinal String searchedPathPart = gen.buildScopeWithProperty(scopeName, properties);\n\t\t\t\ttry {\n\t\t\t\t\tstmt = con.prepareStatement(queryGen.createDeleteLikeItemQuery(\n\t\t\t\t\t\t\tconfigTableName,\n\t\t\t\t\t\t\tscopePathColumnName,\n\t\t\t\t\t\t\tsearchedPathPart));\n\t\t\t\t\tstmt.executeUpdate();\n\t\t\t\t} catch (final SQLException e) {\n\t\t\t\t\tthrow new StoreConfigException(\"Error while deleting configurations with path'\" + searchedPathPart + \"'!\", e); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t} finally {\n\t\t\t\t\tdbUtils.closeQuietly(stmt);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\t}", "signature": "void deleteAllOccurences(final String scopeName, final Map<String, String> properties)", "full_signature": "@Override public void deleteAllOccurences(final String scopeName, final Map<String, String> properties)", "class_method_signature": "DbConfigPersister.deleteAllOccurences(final String scopeName, final Map<String, String> properties)", "testcase": false, "constructor": false, "invocations": ["paramNotNull", "paramNotNull", "perform", "buildScopeWithProperty", "prepareStatement", "createDeleteLikeItemQuery", "executeUpdate", "closeQuietly"]}, "repository": {"repo_id": 1368680, "url": "https://github.com/jeconfig/jeconfig", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 5, "size": 1825, "license": "licensed"}}