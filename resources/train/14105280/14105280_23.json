{"test_class": {"identifier": "WorkflowFilesDeployerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public TemporaryFolder tempDir = new TemporaryFolder();", "modifier": "@Rule\n    public", "type": "TemporaryFolder", "declarator": "tempDir = new TemporaryFolder()", "var_name": "tempDir"}, {"original_string": "private URI emptyURI;", "modifier": "private", "type": "URI", "declarator": "emptyURI", "var_name": "emptyURI"}], "file": "celos-ci/src/test/java/com/collective/celos/ci/deploy/WorkflowFilesDeployerTest.java"}, "test_case": {"identifier": "testDeployFails", "parameters": "()", "modifiers": "@Test (expected = EvaluatorException.class) public", "return": "void", "body": "@Test (expected = EvaluatorException.class)\n    public void testDeployFails() throws Exception{\n        CelosCiContext context = mock(CelosCiContext.class);\n\n        File localFolder = tempDir.newFolder();\n        localFolder.mkdirs();\n        File defFile = new File(localFolder, \"defaults.js\");\n        defFile.createNewFile();\n\n        OutputStream os = new FileOutputStream(defFile);\n        os.write(\"var a = newfile var b = c\".getBytes());\n        os.flush();\n\n        WorkflowFilesDeployer deployer = new WorkflowFilesDeployer(context);\n\n        File remoteFolderWf = tempDir.newFolder();\n        remoteFolderWf.mkdirs();\n\n        File remoteFolderDef = tempDir.newFolder();\n        remoteFolderDef.mkdirs();\n\n        CelosCiTarget target = new CelosCiTarget(URI.create(\"\"), URI.create(\"\"), remoteFolderWf.toURI(), remoteFolderDef.toURI(), URI.create(\"hiveJdbc\"));\n\n        doReturn(localFolder).when(context).getDeployDir();\n        doReturn(target).when(context).getTarget();\n        doReturn(\"workflow\").when(context).getWorkflowName();\n\n        deployer.deploy();\n    }", "signature": "void testDeployFails()", "full_signature": "@Test (expected = EvaluatorException.class) public void testDeployFails()", "class_method_signature": "WorkflowFilesDeployerTest.testDeployFails()", "testcase": true, "constructor": false, "invocations": ["mock", "newFolder", "mkdirs", "createNewFile", "write", "getBytes", "flush", "newFolder", "mkdirs", "newFolder", "mkdirs", "create", "create", "toURI", "toURI", "create", "getDeployDir", "when", "doReturn", "getTarget", "when", "doReturn", "getWorkflowName", "when", "doReturn", "deploy"]}, "focal_class": {"identifier": "WorkflowFilesDeployer", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String WORKFLOW_FILENAME = \"workflow.js\";", "modifier": "public static final", "type": "String", "declarator": "WORKFLOW_FILENAME = \"workflow.js\"", "var_name": "WORKFLOW_FILENAME"}, {"original_string": "public static final String DEFAULTS_FILENAME = \"defaults.js\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULTS_FILENAME = \"defaults.js\"", "var_name": "DEFAULTS_FILENAME"}, {"original_string": "private final JScpWorker jScpWorker;", "modifier": "private final", "type": "JScpWorker", "declarator": "jScpWorker", "var_name": "jScpWorker"}, {"original_string": "private final CelosCiContext config;", "modifier": "private final", "type": "CelosCiContext", "declarator": "config", "var_name": "config"}, {"original_string": "private final JSConfigParser parser;", "modifier": "private final", "type": "JSConfigParser", "declarator": "parser", "var_name": "parser"}], "methods": [{"identifier": "WorkflowFilesDeployer", "parameters": "(CelosCiContext context)", "modifiers": "public", "return": "", "signature": " WorkflowFilesDeployer(CelosCiContext context)", "full_signature": "public  WorkflowFilesDeployer(CelosCiContext context)", "class_method_signature": "WorkflowFilesDeployer.WorkflowFilesDeployer(CelosCiContext context)", "testcase": false, "constructor": true}, {"identifier": "undeploy", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void undeploy()", "full_signature": "public void undeploy()", "class_method_signature": "WorkflowFilesDeployer.undeploy()", "testcase": false, "constructor": false}, {"identifier": "undeployJSFile", "parameters": "(URI dirUri)", "modifiers": "private", "return": "void", "signature": "void undeployJSFile(URI dirUri)", "full_signature": "private void undeployJSFile(URI dirUri)", "class_method_signature": "WorkflowFilesDeployer.undeployJSFile(URI dirUri)", "testcase": false, "constructor": false}, {"identifier": "deploy", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void deploy()", "full_signature": "public void deploy()", "class_method_signature": "WorkflowFilesDeployer.deploy()", "testcase": false, "constructor": false}, {"identifier": "deployJSFile", "parameters": "(URI dirUri, String fileName)", "modifiers": "private", "return": "void", "signature": "void deployJSFile(URI dirUri, String fileName)", "full_signature": "private void deployJSFile(URI dirUri, String fileName)", "class_method_signature": "WorkflowFilesDeployer.deployJSFile(URI dirUri, String fileName)", "testcase": false, "constructor": false}, {"identifier": "getTargetJsFileUri", "parameters": "(URI uri)", "modifiers": "", "return": "URI", "signature": "URI getTargetJsFileUri(URI uri)", "full_signature": " URI getTargetJsFileUri(URI uri)", "class_method_signature": "WorkflowFilesDeployer.getTargetJsFileUri(URI uri)", "testcase": false, "constructor": false}], "file": "celos-ci/src/main/java/com/collective/celos/ci/deploy/WorkflowFilesDeployer.java"}, "focal_method": {"identifier": "deploy", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void deploy() throws IOException, URISyntaxException {\n        undeploy();\n        deployJSFile(config.getTarget().getWorkflowsDirUri(), WORKFLOW_FILENAME);\n        deployJSFile(config.getTarget().getDefaultsDirUri(), DEFAULTS_FILENAME);\n    }", "signature": "void deploy()", "full_signature": "public void deploy()", "class_method_signature": "WorkflowFilesDeployer.deploy()", "testcase": false, "constructor": false, "invocations": ["undeploy", "deployJSFile", "getWorkflowsDirUri", "getTarget", "deployJSFile", "getDefaultsDirUri", "getTarget"]}, "repository": {"repo_id": 14105280, "url": "https://github.com/collectivemedia/celos", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 23, "size": 8863, "license": "licensed"}}