{"test_class": {"identifier": "TestByteUtil", "superclass": "", "interfaces": "", "fields": [], "file": "craft-atom-util/src/test/java/io/craft/atom/util/TestByteUtil.java"}, "test_case": {"identifier": "testMakeIntFromByte2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testMakeIntFromByte2() {\n\t\tbyte[] bytes = new byte[] {111, 127};\n\t\t@SuppressWarnings(\"deprecation\")\n\t\tint num = ByteUtil.makeIntFromByte2(bytes);\n\t\tAssert.assertEquals(28543, num);\n\t\tSystem.out.println(String.format(\"[CRAFT-ATOM-UTIL] (^_^)  <%s>  Case -> make int from byte2. \", CaseCounter.incr(1)));\n\t}", "signature": "void testMakeIntFromByte2()", "full_signature": "@Test public void testMakeIntFromByte2()", "class_method_signature": "TestByteUtil.testMakeIntFromByte2()", "testcase": true, "constructor": false, "invocations": ["makeIntFromByte2", "assertEquals", "println", "format", "incr"]}, "focal_class": {"identifier": "ByteUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "indexOf", "parameters": "(final byte[] source, final byte[] target)", "modifiers": "public static", "return": "int", "signature": "int indexOf(final byte[] source, final byte[] target)", "full_signature": "public static int indexOf(final byte[] source, final byte[] target)", "class_method_signature": "ByteUtil.indexOf(final byte[] source, final byte[] target)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(final byte[] source, final byte[] target, int fromIndex)", "modifiers": "public static", "return": "int", "signature": "int indexOf(final byte[] source, final byte[] target, int fromIndex)", "full_signature": "public static int indexOf(final byte[] source, final byte[] target, int fromIndex)", "class_method_signature": "ByteUtil.indexOf(final byte[] source, final byte[] target, int fromIndex)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(final byte[] source, final byte[] target, int fromIndex, int endIndex)", "modifiers": "public static", "return": "int", "signature": "int indexOf(final byte[] source, final byte[] target, int fromIndex, int endIndex)", "full_signature": "public static int indexOf(final byte[] source, final byte[] target, int fromIndex, int endIndex)", "class_method_signature": "ByteUtil.indexOf(final byte[] source, final byte[] target, int fromIndex, int endIndex)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(byte[] source, byte target)", "modifiers": "public static", "return": "int", "signature": "int indexOf(byte[] source, byte target)", "full_signature": "public static int indexOf(byte[] source, byte target)", "class_method_signature": "ByteUtil.indexOf(byte[] source, byte target)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(byte[] source, byte target, int fromIndex)", "modifiers": "public static", "return": "int", "signature": "int indexOf(byte[] source, byte target, int fromIndex)", "full_signature": "public static int indexOf(byte[] source, byte target, int fromIndex)", "class_method_signature": "ByteUtil.indexOf(byte[] source, byte target, int fromIndex)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(byte[] source, byte target, int fromIndex, int endIndex)", "modifiers": "public static", "return": "int", "signature": "int indexOf(byte[] source, byte target, int fromIndex, int endIndex)", "full_signature": "public static int indexOf(byte[] source, byte target, int fromIndex, int endIndex)", "class_method_signature": "ByteUtil.indexOf(byte[] source, byte target, int fromIndex, int endIndex)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(byte[] source, int sourceOffset, int sourceCount, byte[] target, int targetOffset, int targetCount, int fromIndex)", "modifiers": "private static", "return": "int", "signature": "int indexOf(byte[] source, int sourceOffset, int sourceCount, byte[] target, int targetOffset, int targetCount, int fromIndex)", "full_signature": "private static int indexOf(byte[] source, int sourceOffset, int sourceCount, byte[] target, int targetOffset, int targetCount, int fromIndex)", "class_method_signature": "ByteUtil.indexOf(byte[] source, int sourceOffset, int sourceCount, byte[] target, int targetOffset, int targetCount, int fromIndex)", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "(byte[] bytes, int start, int end)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] split(byte[] bytes, int start, int end)", "full_signature": "public static byte[] split(byte[] bytes, int start, int end)", "class_method_signature": "ByteUtil.split(byte[] bytes, int start, int end)", "testcase": false, "constructor": false}, {"identifier": "reverse", "parameters": "(byte[] src)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] reverse(byte[] src)", "full_signature": "public static byte[] reverse(byte[] src)", "class_method_signature": "ByteUtil.reverse(byte[] src)", "testcase": false, "constructor": false}, {"identifier": "asHex", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String asHex(byte[] bytes)", "full_signature": "public static String asHex(byte[] bytes)", "class_method_signature": "ByteUtil.asHex(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "asHex", "parameters": "(byte[] bytes, String separator)", "modifiers": "public static", "return": "String", "signature": "String asHex(byte[] bytes, String separator)", "full_signature": "public static String asHex(byte[] bytes, String separator)", "class_method_signature": "ByteUtil.asHex(byte[] bytes, String separator)", "testcase": false, "constructor": false}, {"identifier": "intToNetworkByteOrder", "parameters": "(int num, int count)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] intToNetworkByteOrder(int num, int count)", "full_signature": "public static byte[] intToNetworkByteOrder(int num, int count)", "class_method_signature": "ByteUtil.intToNetworkByteOrder(int num, int count)", "testcase": false, "constructor": false}, {"identifier": "intToNetworkByteOrder", "parameters": "(int num, byte[] buf, int start, int count)", "modifiers": "private static", "return": "void", "signature": "void intToNetworkByteOrder(int num, byte[] buf, int start, int count)", "full_signature": "private static void intToNetworkByteOrder(int num, byte[] buf, int start, int count)", "class_method_signature": "ByteUtil.intToNetworkByteOrder(int num, byte[] buf, int start, int count)", "testcase": false, "constructor": false}, {"identifier": "networkByteOrderToInt", "parameters": "(byte[] buf)", "modifiers": "public static", "return": "int", "signature": "int networkByteOrderToInt(byte[] buf)", "full_signature": "public static int networkByteOrderToInt(byte[] buf)", "class_method_signature": "ByteUtil.networkByteOrderToInt(byte[] buf)", "testcase": false, "constructor": false}, {"identifier": "networkByteOrderToInt", "parameters": "(byte[] buf, int start, int count)", "modifiers": "public static", "return": "int", "signature": "int networkByteOrderToInt(byte[] buf, int start, int count)", "full_signature": "public static int networkByteOrderToInt(byte[] buf, int start, int count)", "class_method_signature": "ByteUtil.networkByteOrderToInt(byte[] buf, int start, int count)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "boolean", "signature": "boolean isEmpty(byte[] bytes)", "full_signature": "public static boolean isEmpty(byte[] bytes)", "class_method_signature": "ByteUtil.isEmpty(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "bytes2short", "parameters": "(byte[] b)", "modifiers": "public static final", "return": "short", "signature": "short bytes2short(byte[] b)", "full_signature": "public static final short bytes2short(byte[] b)", "class_method_signature": "ByteUtil.bytes2short(byte[] b)", "testcase": false, "constructor": false}, {"identifier": "bytes2short", "parameters": "(byte[] b, int off)", "modifiers": "public static final", "return": "short", "signature": "short bytes2short(byte[] b, int off)", "full_signature": "public static final short bytes2short(byte[] b, int off)", "class_method_signature": "ByteUtil.bytes2short(byte[] b, int off)", "testcase": false, "constructor": false}, {"identifier": "short2bytes", "parameters": "(short s)", "modifiers": "public static final", "return": "byte[]", "signature": "byte[] short2bytes(short s)", "full_signature": "public static final byte[] short2bytes(short s)", "class_method_signature": "ByteUtil.short2bytes(short s)", "testcase": false, "constructor": false}, {"identifier": "short2bytes", "parameters": "(short s, byte[] b, int off)", "modifiers": "public static", "return": "void", "signature": "void short2bytes(short s, byte[] b, int off)", "full_signature": "public static void short2bytes(short s, byte[] b, int off)", "class_method_signature": "ByteUtil.short2bytes(short s, byte[] b, int off)", "testcase": false, "constructor": false}, {"identifier": "bytes2int", "parameters": "(byte[] b)", "modifiers": "public static final", "return": "int", "signature": "int bytes2int(byte[] b)", "full_signature": "public static final int bytes2int(byte[] b)", "class_method_signature": "ByteUtil.bytes2int(byte[] b)", "testcase": false, "constructor": false}, {"identifier": "bytes2int", "parameters": "(byte[] b, int off)", "modifiers": "public static final", "return": "int", "signature": "int bytes2int(byte[] b, int off)", "full_signature": "public static final int bytes2int(byte[] b, int off)", "class_method_signature": "ByteUtil.bytes2int(byte[] b, int off)", "testcase": false, "constructor": false}, {"identifier": "int2bytes", "parameters": "(int i)", "modifiers": "public static final", "return": "byte[]", "signature": "byte[] int2bytes(int i)", "full_signature": "public static final byte[] int2bytes(int i)", "class_method_signature": "ByteUtil.int2bytes(int i)", "testcase": false, "constructor": false}, {"identifier": "int2bytes", "parameters": "(int i, byte[] b, int off)", "modifiers": "public static", "return": "void", "signature": "void int2bytes(int i, byte[] b, int off)", "full_signature": "public static void int2bytes(int i, byte[] b, int off)", "class_method_signature": "ByteUtil.int2bytes(int i, byte[] b, int off)", "testcase": false, "constructor": false}, {"identifier": "bytes2long", "parameters": "(byte[] b)", "modifiers": "public static final", "return": "long", "signature": "long bytes2long(byte[] b)", "full_signature": "public static final long bytes2long(byte[] b)", "class_method_signature": "ByteUtil.bytes2long(byte[] b)", "testcase": false, "constructor": false}, {"identifier": "bytes2long", "parameters": "(byte[] b, int off)", "modifiers": "public static final", "return": "long", "signature": "long bytes2long(byte[] b, int off)", "full_signature": "public static final long bytes2long(byte[] b, int off)", "class_method_signature": "ByteUtil.bytes2long(byte[] b, int off)", "testcase": false, "constructor": false}, {"identifier": "long2bytes", "parameters": "(long l)", "modifiers": "public static final", "return": "byte[]", "signature": "byte[] long2bytes(long l)", "full_signature": "public static final byte[] long2bytes(long l)", "class_method_signature": "ByteUtil.long2bytes(long l)", "testcase": false, "constructor": false}, {"identifier": "long2bytes", "parameters": "(long l, byte[] b, int off)", "modifiers": "public static", "return": "void", "signature": "void long2bytes(long l, byte[] b, int off)", "full_signature": "public static void long2bytes(long l, byte[] b, int off)", "class_method_signature": "ByteUtil.long2bytes(long l, byte[] b, int off)", "testcase": false, "constructor": false}, {"identifier": "bytes2float", "parameters": "(byte[] b)", "modifiers": "public static", "return": "float", "signature": "float bytes2float(byte[] b)", "full_signature": "public static float bytes2float(byte[] b)", "class_method_signature": "ByteUtil.bytes2float(byte[] b)", "testcase": false, "constructor": false}, {"identifier": "bytes2float", "parameters": "(byte[] b, int off)", "modifiers": "public static", "return": "float", "signature": "float bytes2float(byte[] b, int off)", "full_signature": "public static float bytes2float(byte[] b, int off)", "class_method_signature": "ByteUtil.bytes2float(byte[] b, int off)", "testcase": false, "constructor": false}, {"identifier": "float2bytes", "parameters": "(float f)", "modifiers": "public static final", "return": "byte[]", "signature": "byte[] float2bytes(float f)", "full_signature": "public static final byte[] float2bytes(float f)", "class_method_signature": "ByteUtil.float2bytes(float f)", "testcase": false, "constructor": false}, {"identifier": "float2bytes", "parameters": "(float f, byte[] b, int off)", "modifiers": "public static", "return": "void", "signature": "void float2bytes(float f, byte[] b, int off)", "full_signature": "public static void float2bytes(float f, byte[] b, int off)", "class_method_signature": "ByteUtil.float2bytes(float f, byte[] b, int off)", "testcase": false, "constructor": false}, {"identifier": "bytes2double", "parameters": "(byte[] b)", "modifiers": "public static", "return": "double", "signature": "double bytes2double(byte[] b)", "full_signature": "public static double bytes2double(byte[] b)", "class_method_signature": "ByteUtil.bytes2double(byte[] b)", "testcase": false, "constructor": false}, {"identifier": "bytes2double", "parameters": "(byte[] b, int off)", "modifiers": "public static", "return": "double", "signature": "double bytes2double(byte[] b, int off)", "full_signature": "public static double bytes2double(byte[] b, int off)", "class_method_signature": "ByteUtil.bytes2double(byte[] b, int off)", "testcase": false, "constructor": false}, {"identifier": "double2bytes", "parameters": "(double d)", "modifiers": "public static final", "return": "byte[]", "signature": "byte[] double2bytes(double d)", "full_signature": "public static final byte[] double2bytes(double d)", "class_method_signature": "ByteUtil.double2bytes(double d)", "testcase": false, "constructor": false}, {"identifier": "double2bytes", "parameters": "(double d, byte[] b, int off)", "modifiers": "public static", "return": "void", "signature": "void double2bytes(double d, byte[] b, int off)", "full_signature": "public static void double2bytes(double d, byte[] b, int off)", "class_method_signature": "ByteUtil.double2bytes(double d, byte[] b, int off)", "testcase": false, "constructor": false}, {"identifier": "makeIntFromByte2", "parameters": "(byte[] b)", "modifiers": "public static final", "return": "int", "signature": "int makeIntFromByte2(byte[] b)", "full_signature": "public static final int makeIntFromByte2(byte[] b)", "class_method_signature": "ByteUtil.makeIntFromByte2(byte[] b)", "testcase": false, "constructor": false}, {"identifier": "makeIntFromByte2", "parameters": "(byte[] b, int off)", "modifiers": "public static final", "return": "int", "signature": "int makeIntFromByte2(byte[] b, int off)", "full_signature": "public static final int makeIntFromByte2(byte[] b, int off)", "class_method_signature": "ByteUtil.makeIntFromByte2(byte[] b, int off)", "testcase": false, "constructor": false}, {"identifier": "makeIntFromByte4", "parameters": "(byte[] b)", "modifiers": "public static final", "return": "int", "signature": "int makeIntFromByte4(byte[] b)", "full_signature": "public static final int makeIntFromByte4(byte[] b)", "class_method_signature": "ByteUtil.makeIntFromByte4(byte[] b)", "testcase": false, "constructor": false}, {"identifier": "makeIntFromByte4", "parameters": "(byte[] b, int off)", "modifiers": "public static final", "return": "int", "signature": "int makeIntFromByte4(byte[] b, int off)", "full_signature": "public static final int makeIntFromByte4(byte[] b, int off)", "class_method_signature": "ByteUtil.makeIntFromByte4(byte[] b, int off)", "testcase": false, "constructor": false}, {"identifier": "ByteUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " ByteUtil()", "full_signature": "private  ByteUtil()", "class_method_signature": "ByteUtil.ByteUtil()", "testcase": false, "constructor": true}], "file": "craft-atom-util/src/main/java/io/craft/atom/util/ByteUtil.java"}, "focal_method": {"identifier": "makeIntFromByte2", "parameters": "(byte[] b)", "modifiers": "public static final", "return": "int", "body": "public static final int makeIntFromByte2(byte[] b) {\n\t\treturn makeIntFromByte2(b, 0);\n\t}", "signature": "int makeIntFromByte2(byte[] b)", "full_signature": "public static final int makeIntFromByte2(byte[] b)", "class_method_signature": "ByteUtil.makeIntFromByte2(byte[] b)", "testcase": false, "constructor": false, "invocations": ["makeIntFromByte2"]}, "repository": {"repo_id": 7393690, "url": "https://github.com/mindwind/craft-atom", "language": "Java", "is_fork": false, "fork_count": 132, "stargazer_count": 329, "size": 2621, "license": "licensed"}}