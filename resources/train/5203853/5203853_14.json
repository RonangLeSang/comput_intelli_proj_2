{"test_class": {"identifier": "PatientServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PID_1234 = \"PATIENT_SERVICE_TEST-1234\";", "modifier": "private static final", "type": "String", "declarator": "PID_1234 = \"PATIENT_SERVICE_TEST-1234\"", "var_name": "PID_1234"}, {"original_string": "private static final String PID_5678 = \"PATIENT_SERVICE_TEST-5678\";", "modifier": "private static final", "type": "String", "declarator": "PID_5678 = \"PATIENT_SERVICE_TEST-5678\"", "var_name": "PID_5678"}, {"original_string": "private static final String ISSUER_X = \"DCM4CHEE_TESTDATA_X\";", "modifier": "private static final", "type": "String", "declarator": "ISSUER_X = \"DCM4CHEE_TESTDATA_X\"", "var_name": "ISSUER_X"}, {"original_string": "private static final String ISSUER_Y = \"DCM4CHEE_TESTDATA_Y\";", "modifier": "private static final", "type": "String", "declarator": "ISSUER_Y = \"DCM4CHEE_TESTDATA_Y\"", "var_name": "ISSUER_Y"}, {"original_string": "private static final String TEST_1234 = \"Test PatientService 1234\";", "modifier": "private static final", "type": "String", "declarator": "TEST_1234 = \"Test PatientService 1234\"", "var_name": "TEST_1234"}, {"original_string": "private static final String TEST_1234_X = \"Test PatientService 1234-X\";", "modifier": "private static final", "type": "String", "declarator": "TEST_1234_X = \"Test PatientService 1234-X\"", "var_name": "TEST_1234_X"}, {"original_string": "private static final String TEST_1234_Y = \"Test PatientService 1234-Y\";", "modifier": "private static final", "type": "String", "declarator": "TEST_1234_Y = \"Test PatientService 1234-Y\"", "var_name": "TEST_1234_Y"}, {"original_string": "private static final String TEST_5678_X = \"Test PatientService 5678-X\";", "modifier": "private static final", "type": "String", "declarator": "TEST_5678_X = \"Test PatientService 5678-X\"", "var_name": "TEST_5678_X"}, {"original_string": "private static final String NULL_MERGE_FK =\n            \"update Patient p set p.mergedWith=NULL \" +\n            \"where p.patientID like 'PATIENT_SERVICE_TEST-%'\";", "modifier": "private static final", "type": "String", "declarator": "NULL_MERGE_FK =\n            \"update Patient p set p.mergedWith=NULL \" +\n            \"where p.patientID like 'PATIENT_SERVICE_TEST-%'\"", "var_name": "NULL_MERGE_FK"}, {"original_string": "private static final String CLEAR_PATIENTS =\n            \"delete from Patient p \" +\n            \"where p.patientID like 'PATIENT_SERVICE_TEST-%'\";", "modifier": "private static final", "type": "String", "declarator": "CLEAR_PATIENTS =\n            \"delete from Patient p \" +\n            \"where p.patientID like 'PATIENT_SERVICE_TEST-%'\"", "var_name": "CLEAR_PATIENTS"}, {"original_string": "private static final String CLEAR_ISSUERS = \n            \"delete from Issuer i \" +\n            \"where i.localNamespaceEntityID like 'PATIENT_SERVICE_TEST-%'\";", "modifier": "private static final", "type": "String", "declarator": "CLEAR_ISSUERS = \n            \"delete from Issuer i \" +\n            \"where i.localNamespaceEntityID like 'PATIENT_SERVICE_TEST-%'\"", "var_name": "CLEAR_ISSUERS"}, {"original_string": "private final StoreParam storeParam = ParamFactory.createStoreParam();", "modifier": "private final", "type": "StoreParam", "declarator": "storeParam = ParamFactory.createStoreParam()", "var_name": "storeParam"}, {"original_string": "@PersistenceContext\n    EntityManager em;", "modifier": "@PersistenceContext", "type": "EntityManager", "declarator": "em", "var_name": "em"}, {"original_string": "@Resource\n    UserTransaction utx;", "modifier": "@Resource", "type": "UserTransaction", "declarator": "utx", "var_name": "utx"}, {"original_string": "@EJB\n    private PatientService patientService;", "modifier": "@EJB\n    private", "type": "PatientService", "declarator": "patientService", "var_name": "patientService"}], "file": "dcm4chee-arc-service/src/test/java/org/dcm4chee/archive/dao/PatientServiceTest.java"}, "test_case": {"identifier": "testUpdateOrCreatePatient", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUpdateOrCreatePatient() throws Exception {\n        patientService.updateOrCreatePatient(\n                attrs(TEST_1234, PID_1234, null), storeParam);\n        Patient pat1234X = patientService.updateOrCreatePatient(\n                attrs(TEST_1234_X, PID_1234, ISSUER_X), storeParam);\n        Patient pat1234 = patientService.findUniqueOrCreatePatient(\n                attrs(TEST_1234, PID_1234, null), storeParam, true, true);\n        assertEquals(pat1234.getPk(), pat1234X.getPk());\n        assertEquals(TEST_1234_X, \n                pat1234.getAttributes().getString(Tag.PatientName));\n    }", "signature": "void testUpdateOrCreatePatient()", "full_signature": "@Test public void testUpdateOrCreatePatient()", "class_method_signature": "PatientServiceTest.testUpdateOrCreatePatient()", "testcase": true, "constructor": false, "invocations": ["updateOrCreatePatient", "attrs", "updateOrCreatePatient", "attrs", "findUniqueOrCreatePatient", "attrs", "assertEquals", "getPk", "getPk", "assertEquals", "getString", "getAttributes"]}, "focal_class": {"identifier": "PatientService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@PersistenceContext\n    private EntityManager em;", "modifier": "@PersistenceContext\n    private", "type": "EntityManager", "declarator": "em", "var_name": "em"}, {"original_string": "@EJB\n    private IssuerService issuerService;", "modifier": "@EJB\n    private", "type": "IssuerService", "declarator": "issuerService", "var_name": "issuerService"}], "methods": [{"identifier": "findUniqueOrCreatePatient", "parameters": "(Attributes data,\n            StoreParam storeParam, boolean followMergedWith,\n            boolean mergeAttributes)", "modifiers": "public", "return": "Patient", "signature": "Patient findUniqueOrCreatePatient(Attributes data,\n            StoreParam storeParam, boolean followMergedWith,\n            boolean mergeAttributes)", "full_signature": "public Patient findUniqueOrCreatePatient(Attributes data,\n            StoreParam storeParam, boolean followMergedWith,\n            boolean mergeAttributes)", "class_method_signature": "PatientService.findUniqueOrCreatePatient(Attributes data,\n            StoreParam storeParam, boolean followMergedWith,\n            boolean mergeAttributes)", "testcase": false, "constructor": false}, {"identifier": "followMergedWith", "parameters": "(Patient patient)", "modifiers": "private", "return": "Patient", "signature": "Patient followMergedWith(Patient patient)", "full_signature": "private Patient followMergedWith(Patient patient)", "class_method_signature": "PatientService.followMergedWith(Patient patient)", "testcase": false, "constructor": false}, {"identifier": "mergeAttributes", "parameters": "(Patient patient, Attributes data,\n            StoreParam storeParam)", "modifiers": "public", "return": "void", "signature": "void mergeAttributes(Patient patient, Attributes data,\n            StoreParam storeParam)", "full_signature": "public void mergeAttributes(Patient patient, Attributes data,\n            StoreParam storeParam)", "class_method_signature": "PatientService.mergeAttributes(Patient patient, Attributes data,\n            StoreParam storeParam)", "testcase": false, "constructor": false}, {"identifier": "mergeAttributes", "parameters": "(Patient patient, Attributes data,\n            IDWithIssuer pid, StoreParam storeParam)", "modifiers": "private", "return": "void", "signature": "void mergeAttributes(Patient patient, Attributes data,\n            IDWithIssuer pid, StoreParam storeParam)", "full_signature": "private void mergeAttributes(Patient patient, Attributes data,\n            IDWithIssuer pid, StoreParam storeParam)", "class_method_signature": "PatientService.mergeAttributes(Patient patient, Attributes data,\n            IDWithIssuer pid, StoreParam storeParam)", "testcase": false, "constructor": false}, {"identifier": "findOrCreateIssuer", "parameters": "(IDWithIssuer pid)", "modifiers": "private", "return": "Issuer", "signature": "Issuer findOrCreateIssuer(IDWithIssuer pid)", "full_signature": "private Issuer findOrCreateIssuer(IDWithIssuer pid)", "class_method_signature": "PatientService.findOrCreateIssuer(IDWithIssuer pid)", "testcase": false, "constructor": false}, {"identifier": "createNewPatient", "parameters": "(Attributes attrs, IDWithIssuer pid,\n            StoreParam storeParam)", "modifiers": "private", "return": "Patient", "signature": "Patient createNewPatient(Attributes attrs, IDWithIssuer pid,\n            StoreParam storeParam)", "full_signature": "private Patient createNewPatient(Attributes attrs, IDWithIssuer pid,\n            StoreParam storeParam)", "class_method_signature": "PatientService.createNewPatient(Attributes attrs, IDWithIssuer pid,\n            StoreParam storeParam)", "testcase": false, "constructor": false}, {"identifier": "updateOrCreatePatient", "parameters": "(Attributes data,\n            StoreParam storeParam)", "modifiers": "public", "return": "Patient", "signature": "Patient updateOrCreatePatient(Attributes data,\n            StoreParam storeParam)", "full_signature": "public Patient updateOrCreatePatient(Attributes data,\n            StoreParam storeParam)", "class_method_signature": "PatientService.updateOrCreatePatient(Attributes data,\n            StoreParam storeParam)", "testcase": false, "constructor": false}, {"identifier": "mergePatient", "parameters": "(Attributes attrs, Attributes priorAttrs,\n            StoreParam storeParam)", "modifiers": "public", "return": "void", "signature": "void mergePatient(Attributes attrs, Attributes priorAttrs,\n            StoreParam storeParam)", "full_signature": "public void mergePatient(Attributes attrs, Attributes priorAttrs,\n            StoreParam storeParam)", "class_method_signature": "PatientService.mergePatient(Attributes attrs, Attributes priorAttrs,\n            StoreParam storeParam)", "testcase": false, "constructor": false}, {"identifier": "mergePatient", "parameters": "(Patient pat, Patient prior)", "modifiers": "private", "return": "void", "signature": "void mergePatient(Patient pat, Patient prior)", "full_signature": "private void mergePatient(Patient pat, Patient prior)", "class_method_signature": "PatientService.mergePatient(Patient pat, Patient prior)", "testcase": false, "constructor": false}, {"identifier": "findPatients", "parameters": "(IDWithIssuer pid)", "modifiers": "public", "return": "List<Patient>", "signature": "List<Patient> findPatients(IDWithIssuer pid)", "full_signature": "public List<Patient> findPatients(IDWithIssuer pid)", "class_method_signature": "PatientService.findPatients(IDWithIssuer pid)", "testcase": false, "constructor": false}, {"identifier": "findPatient", "parameters": "(IDWithIssuer pid)", "modifiers": "private", "return": "Patient", "signature": "Patient findPatient(IDWithIssuer pid)", "full_signature": "private Patient findPatient(IDWithIssuer pid)", "class_method_signature": "PatientService.findPatient(IDWithIssuer pid)", "testcase": false, "constructor": false}, {"identifier": "deletePatient", "parameters": "(IDWithIssuer pid)", "modifiers": "public", "return": "Patient", "signature": "Patient deletePatient(IDWithIssuer pid)", "full_signature": "public Patient deletePatient(IDWithIssuer pid)", "class_method_signature": "PatientService.deletePatient(IDWithIssuer pid)", "testcase": false, "constructor": false}], "file": "dcm4chee-arc-service/src/main/java/org/dcm4chee/archive/dao/PatientService.java"}, "focal_method": {"identifier": "updateOrCreatePatient", "parameters": "(Attributes data,\n            StoreParam storeParam)", "modifiers": "public", "return": "Patient", "body": "public Patient updateOrCreatePatient(Attributes data,\n            StoreParam storeParam) {\n        AttributeFilter filter = storeParam.getAttributeFilter(Entity.Patient);\n        IDWithIssuer pid = IDWithIssuer.pidWithIssuer(data, null);\n        Patient patient;\n        try {\n            patient = findPatient(pid);\n            Patient mergedWith = patient.getMergedWith();\n            if (mergedWith != null)\n                throw new PatientMergedException(\"\" + patient + \" merged with \" + mergedWith);\n            Attributes patientAttrs = patient.getAttributes();\n            Attributes modified = new Attributes();\n            if (patientAttrs.updateSelected(data, modified, filter.getSelection())) {\n                if (pid != null && pid.issuer != null)\n                    patient.setIssuerOfPatientID(\n                            findOrCreateIssuer(pid));\n                patient.setAttributes(patientAttrs, filter, storeParam.getFuzzyStr());\n            }\n        } catch (NonUniqueResultException e) {\n            throw new NonUniquePatientException(pid);\n        } catch (NoResultException e) {\n            patient = createNewPatient(data, pid, storeParam);\n            try {\n                findPatient(pid);\n            } catch (NonUniqueResultException e2) {\n                em.remove(patient);\n                return updateOrCreatePatient(data, storeParam);\n            }\n        }\n        return patient;\n    }", "signature": "Patient updateOrCreatePatient(Attributes data,\n            StoreParam storeParam)", "full_signature": "public Patient updateOrCreatePatient(Attributes data,\n            StoreParam storeParam)", "class_method_signature": "PatientService.updateOrCreatePatient(Attributes data,\n            StoreParam storeParam)", "testcase": false, "constructor": false, "invocations": ["getAttributeFilter", "pidWithIssuer", "findPatient", "getMergedWith", "getAttributes", "updateSelected", "getSelection", "setIssuerOfPatientID", "findOrCreateIssuer", "setAttributes", "getFuzzyStr", "createNewPatient", "findPatient", "remove", "updateOrCreatePatient"]}, "repository": {"repo_id": 5203853, "url": "https://github.com/gunterze/dcm4chee-arc", "language": "Java", "is_fork": false, "fork_count": 17, "stargazer_count": 30, "size": 2145, "license": "licensed"}}