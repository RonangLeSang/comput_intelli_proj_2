{"test_class": {"identifier": "FunctionsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String USER = \"admin\";", "modifier": "private static final", "type": "String", "declarator": "USER = \"admin\"", "var_name": "USER"}, {"original_string": "private static final String TEMPLATE_NAME = \"project_template\";", "modifier": "private static final", "type": "String", "declarator": "TEMPLATE_NAME = \"project_template\"", "var_name": "TEMPLATE_NAME"}], "file": "hudson-core/src/test/java/hudson/FunctionsTest.java"}, "test_case": {"identifier": "testIsAuthorJobCreatedByNull", "parameters": "()", "modifiers": "@Test @PrepareForTest(User.class) public", "return": "void", "body": "@Test\n    @PrepareForTest(User.class)\n    public void testIsAuthorJobCreatedByNull() throws Exception {\n        mockStatic(User.class);\n        User user = createMock(User.class);\n        expect(User.current()).andReturn(user);\n        Job job = createMock(FreeStyleProject.class);\n        expect(job.getCreatedBy()).andReturn(null);\n        replay(User.class, user, job);\n        boolean result = Functions.isAuthor(job);\n        verify(User.class, user, job);\n        assertFalse(result);\n    }", "signature": "void testIsAuthorJobCreatedByNull()", "full_signature": "@Test @PrepareForTest(User.class) public void testIsAuthorJobCreatedByNull()", "class_method_signature": "FunctionsTest.testIsAuthorJobCreatedByNull()", "testcase": true, "constructor": false, "invocations": ["mockStatic", "createMock", "andReturn", "expect", "current", "createMock", "andReturn", "expect", "getCreatedBy", "replay", "isAuthor", "verify", "assertFalse"]}, "focal_class": {"identifier": "Functions", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static volatile int globalIota = 0;", "modifier": "private static volatile", "type": "int", "declarator": "globalIota = 0", "var_name": "globalIota"}, {"original_string": "private int iota;", "modifier": "private", "type": "int", "declarator": "iota", "var_name": "iota"}, {"original_string": "public static boolean DEBUG_YUI = Boolean.getBoolean(\"debug.YUI\");", "modifier": "public static", "type": "boolean", "declarator": "DEBUG_YUI = Boolean.getBoolean(\"debug.YUI\")", "var_name": "DEBUG_YUI"}, {"original_string": "private static final SimpleFormatter formatter = new SimpleFormatter();", "modifier": "private static final", "type": "SimpleFormatter", "declarator": "formatter = new SimpleFormatter()", "var_name": "formatter"}, {"original_string": "private static final Set<String> globalConfigIgnoredDescriptors = new HashSet<String>();", "modifier": "private static final", "type": "Set<String>", "declarator": "globalConfigIgnoredDescriptors = new HashSet<String>()", "var_name": "globalConfigIgnoredDescriptors"}, {"original_string": "private static final Pattern LINE_END = Pattern.compile(\"\\r?\\n\");", "modifier": "private static final", "type": "Pattern", "declarator": "LINE_END = Pattern.compile(\"\\r?\\n\")", "var_name": "LINE_END"}, {"original_string": "private static final Pattern SCHEME = Pattern.compile(\"[a-z]+://.+\");", "modifier": "private static final", "type": "Pattern", "declarator": "SCHEME = Pattern.compile(\"[a-z]+://.+\")", "var_name": "SCHEME"}], "methods": [{"identifier": "Functions", "parameters": "()", "modifiers": "public", "return": "", "signature": " Functions()", "full_signature": "public  Functions()", "class_method_signature": "Functions.Functions()", "testcase": false, "constructor": true}, {"identifier": "generateId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String generateId()", "full_signature": "public String generateId()", "class_method_signature": "Functions.generateId()", "testcase": false, "constructor": false}, {"identifier": "isModel", "parameters": "(Object o)", "modifiers": "public static", "return": "boolean", "signature": "boolean isModel(Object o)", "full_signature": "public static boolean isModel(Object o)", "class_method_signature": "Functions.isModel(Object o)", "testcase": false, "constructor": false}, {"identifier": "xsDate", "parameters": "(Calendar cal)", "modifiers": "public static", "return": "String", "signature": "String xsDate(Calendar cal)", "full_signature": "public static String xsDate(Calendar cal)", "class_method_signature": "Functions.xsDate(Calendar cal)", "testcase": false, "constructor": false}, {"identifier": "rfc822Date", "parameters": "(Calendar cal)", "modifiers": "public static", "return": "String", "signature": "String rfc822Date(Calendar cal)", "full_signature": "public static String rfc822Date(Calendar cal)", "class_method_signature": "Functions.rfc822Date(Calendar cal)", "testcase": false, "constructor": false}, {"identifier": "getTypeParameter", "parameters": "(Class<? extends B> c, Class<B> base, int n)", "modifiers": "public static", "return": "Class", "signature": "Class getTypeParameter(Class<? extends B> c, Class<B> base, int n)", "full_signature": "public static Class getTypeParameter(Class<? extends B> c, Class<B> base, int n)", "class_method_signature": "Functions.getTypeParameter(Class<? extends B> c, Class<B> base, int n)", "testcase": false, "constructor": false}, {"identifier": "getJDKDescriptor", "parameters": "()", "modifiers": "public", "return": "JDK.DescriptorImpl", "signature": "JDK.DescriptorImpl getJDKDescriptor()", "full_signature": "public JDK.DescriptorImpl getJDKDescriptor()", "class_method_signature": "Functions.getJDKDescriptor()", "testcase": false, "constructor": false}, {"identifier": "getDiffString", "parameters": "(int i)", "modifiers": "public static", "return": "String", "signature": "String getDiffString(int i)", "full_signature": "public static String getDiffString(int i)", "class_method_signature": "Functions.getDiffString(int i)", "testcase": false, "constructor": false}, {"identifier": "getDiffString2", "parameters": "(int i)", "modifiers": "public static", "return": "String", "signature": "String getDiffString2(int i)", "full_signature": "public static String getDiffString2(int i)", "class_method_signature": "Functions.getDiffString2(int i)", "testcase": false, "constructor": false}, {"identifier": "getDiffString2", "parameters": "(String prefix, int i, String suffix)", "modifiers": "public static", "return": "String", "signature": "String getDiffString2(String prefix, int i, String suffix)", "full_signature": "public static String getDiffString2(String prefix, int i, String suffix)", "class_method_signature": "Functions.getDiffString2(String prefix, int i, String suffix)", "testcase": false, "constructor": false}, {"identifier": "addSuffix", "parameters": "(int n, String singular, String plural)", "modifiers": "public static", "return": "String", "signature": "String addSuffix(int n, String singular, String plural)", "full_signature": "public static String addSuffix(int n, String singular, String plural)", "class_method_signature": "Functions.addSuffix(int n, String singular, String plural)", "testcase": false, "constructor": false}, {"identifier": "decompose", "parameters": "(StaplerRequest req)", "modifiers": "public static", "return": "RunUrl", "signature": "RunUrl decompose(StaplerRequest req)", "full_signature": "public static RunUrl decompose(StaplerRequest req)", "class_method_signature": "Functions.decompose(StaplerRequest req)", "testcase": false, "constructor": false}, {"identifier": "getScreenResolution", "parameters": "()", "modifiers": "public static", "return": "Area", "signature": "Area getScreenResolution()", "full_signature": "public static Area getScreenResolution()", "class_method_signature": "Functions.getScreenResolution()", "testcase": false, "constructor": false}, {"identifier": "getNodeModes", "parameters": "()", "modifiers": "public static", "return": "Node.Mode[]", "signature": "Node.Mode[] getNodeModes()", "full_signature": "public static Node.Mode[] getNodeModes()", "class_method_signature": "Functions.getNodeModes()", "testcase": false, "constructor": false}, {"identifier": "getProjectListString", "parameters": "(List<Project> projects)", "modifiers": "public static", "return": "String", "signature": "String getProjectListString(List<Project> projects)", "full_signature": "public static String getProjectListString(List<Project> projects)", "class_method_signature": "Functions.getProjectListString(List<Project> projects)", "testcase": false, "constructor": false}, {"identifier": "ifThenElse", "parameters": "(boolean cond, Object thenValue, Object elseValue)", "modifiers": "public static", "return": "Object", "signature": "Object ifThenElse(boolean cond, Object thenValue, Object elseValue)", "full_signature": "public static Object ifThenElse(boolean cond, Object thenValue, Object elseValue)", "class_method_signature": "Functions.ifThenElse(boolean cond, Object thenValue, Object elseValue)", "testcase": false, "constructor": false}, {"identifier": "appendIfNotNull", "parameters": "(String text, String suffix, String nullText)", "modifiers": "public static", "return": "String", "signature": "String appendIfNotNull(String text, String suffix, String nullText)", "full_signature": "public static String appendIfNotNull(String text, String suffix, String nullText)", "class_method_signature": "Functions.appendIfNotNull(String text, String suffix, String nullText)", "testcase": false, "constructor": false}, {"identifier": "getSystemProperties", "parameters": "()", "modifiers": "public static", "return": "Map", "signature": "Map getSystemProperties()", "full_signature": "public static Map getSystemProperties()", "class_method_signature": "Functions.getSystemProperties()", "testcase": false, "constructor": false}, {"identifier": "getEnvVars", "parameters": "()", "modifiers": "public static", "return": "Map", "signature": "Map getEnvVars()", "full_signature": "public static Map getEnvVars()", "class_method_signature": "Functions.getEnvVars()", "testcase": false, "constructor": false}, {"identifier": "isWindows", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isWindows()", "full_signature": "public static boolean isWindows()", "class_method_signature": "Functions.isWindows()", "testcase": false, "constructor": false}, {"identifier": "getLogRecords", "parameters": "()", "modifiers": "public static", "return": "List<LogRecord>", "signature": "List<LogRecord> getLogRecords()", "full_signature": "public static List<LogRecord> getLogRecords()", "class_method_signature": "Functions.getLogRecords()", "testcase": false, "constructor": false}, {"identifier": "printLogRecord", "parameters": "(LogRecord r)", "modifiers": "public static", "return": "String", "signature": "String printLogRecord(LogRecord r)", "full_signature": "public static String printLogRecord(LogRecord r)", "class_method_signature": "Functions.printLogRecord(LogRecord r)", "testcase": false, "constructor": false}, {"identifier": "getCookie", "parameters": "(HttpServletRequest req,String name)", "modifiers": "public static", "return": "Cookie", "signature": "Cookie getCookie(HttpServletRequest req,String name)", "full_signature": "public static Cookie getCookie(HttpServletRequest req,String name)", "class_method_signature": "Functions.getCookie(HttpServletRequest req,String name)", "testcase": false, "constructor": false}, {"identifier": "getCookie", "parameters": "(HttpServletRequest req,String name, String defaultValue)", "modifiers": "public static", "return": "String", "signature": "String getCookie(HttpServletRequest req,String name, String defaultValue)", "full_signature": "public static String getCookie(HttpServletRequest req,String name, String defaultValue)", "class_method_signature": "Functions.getCookie(HttpServletRequest req,String name, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getYuiSuffix", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getYuiSuffix()", "full_signature": "public static String getYuiSuffix()", "class_method_signature": "Functions.getYuiSuffix()", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(SortedMap<Integer,V> map, String from, String to)", "modifiers": "public static", "return": "SortedMap<Integer,V>", "signature": "SortedMap<Integer,V> filter(SortedMap<Integer,V> map, String from, String to)", "full_signature": "public static SortedMap<Integer,V> filter(SortedMap<Integer,V> map, String from, String to)", "class_method_signature": "Functions.filter(SortedMap<Integer,V> map, String from, String to)", "testcase": false, "constructor": false}, {"identifier": "configureAutoRefresh", "parameters": "(HttpServletRequest request, HttpServletResponse response, boolean noAutoRefresh)", "modifiers": "public static", "return": "void", "signature": "void configureAutoRefresh(HttpServletRequest request, HttpServletResponse response, boolean noAutoRefresh)", "full_signature": "public static void configureAutoRefresh(HttpServletRequest request, HttpServletResponse response, boolean noAutoRefresh)", "class_method_signature": "Functions.configureAutoRefresh(HttpServletRequest request, HttpServletResponse response, boolean noAutoRefresh)", "testcase": false, "constructor": false}, {"identifier": "isAutoRefresh", "parameters": "(HttpServletRequest request)", "modifiers": "public static", "return": "boolean", "signature": "boolean isAutoRefresh(HttpServletRequest request)", "full_signature": "public static boolean isAutoRefresh(HttpServletRequest request)", "class_method_signature": "Functions.isAutoRefresh(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "getNearestAncestorUrl", "parameters": "(StaplerRequest req,Object it)", "modifiers": "public static", "return": "String", "signature": "String getNearestAncestorUrl(StaplerRequest req,Object it)", "full_signature": "public static String getNearestAncestorUrl(StaplerRequest req,Object it)", "class_method_signature": "Functions.getNearestAncestorUrl(StaplerRequest req,Object it)", "testcase": false, "constructor": false}, {"identifier": "getSearchURL", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getSearchURL()", "full_signature": "public static String getSearchURL()", "class_method_signature": "Functions.getSearchURL()", "testcase": false, "constructor": false}, {"identifier": "appendSpaceIfNotNull", "parameters": "(String n)", "modifiers": "public static", "return": "String", "signature": "String appendSpaceIfNotNull(String n)", "full_signature": "public static String appendSpaceIfNotNull(String n)", "class_method_signature": "Functions.appendSpaceIfNotNull(String n)", "testcase": false, "constructor": false}, {"identifier": "nbspIndent", "parameters": "(String size)", "modifiers": "public static", "return": "String", "signature": "String nbspIndent(String size)", "full_signature": "public static String nbspIndent(String size)", "class_method_signature": "Functions.nbspIndent(String size)", "testcase": false, "constructor": false}, {"identifier": "getWin32ErrorMessage", "parameters": "(IOException e)", "modifiers": "public static", "return": "String", "signature": "String getWin32ErrorMessage(IOException e)", "full_signature": "public static String getWin32ErrorMessage(IOException e)", "class_method_signature": "Functions.getWin32ErrorMessage(IOException e)", "testcase": false, "constructor": false}, {"identifier": "isMultiline", "parameters": "(String s)", "modifiers": "public static", "return": "boolean", "signature": "boolean isMultiline(String s)", "full_signature": "public static boolean isMultiline(String s)", "class_method_signature": "Functions.isMultiline(String s)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(String s)", "modifiers": "public static", "return": "String", "signature": "String encode(String s)", "full_signature": "public static String encode(String s)", "class_method_signature": "Functions.encode(String s)", "testcase": false, "constructor": false}, {"identifier": "escape", "parameters": "(String s)", "modifiers": "public static", "return": "String", "signature": "String escape(String s)", "full_signature": "public static String escape(String s)", "class_method_signature": "Functions.escape(String s)", "testcase": false, "constructor": false}, {"identifier": "xmlEscape", "parameters": "(String s)", "modifiers": "public static", "return": "String", "signature": "String xmlEscape(String s)", "full_signature": "public static String xmlEscape(String s)", "class_method_signature": "Functions.xmlEscape(String s)", "testcase": false, "constructor": false}, {"identifier": "xmlUnescape", "parameters": "(String s)", "modifiers": "public static", "return": "String", "signature": "String xmlUnescape(String s)", "full_signature": "public static String xmlUnescape(String s)", "class_method_signature": "Functions.xmlUnescape(String s)", "testcase": false, "constructor": false}, {"identifier": "checkPermission", "parameters": "(Permission permission)", "modifiers": "public static", "return": "void", "signature": "void checkPermission(Permission permission)", "full_signature": "public static void checkPermission(Permission permission)", "class_method_signature": "Functions.checkPermission(Permission permission)", "testcase": false, "constructor": false}, {"identifier": "checkPermission", "parameters": "(AccessControlled object, Permission permission)", "modifiers": "public static", "return": "void", "signature": "void checkPermission(AccessControlled object, Permission permission)", "full_signature": "public static void checkPermission(AccessControlled object, Permission permission)", "class_method_signature": "Functions.checkPermission(AccessControlled object, Permission permission)", "testcase": false, "constructor": false}, {"identifier": "checkPermission", "parameters": "(Object object, Permission permission)", "modifiers": "public static", "return": "void", "signature": "void checkPermission(Object object, Permission permission)", "full_signature": "public static void checkPermission(Object object, Permission permission)", "class_method_signature": "Functions.checkPermission(Object object, Permission permission)", "testcase": false, "constructor": false}, {"identifier": "hasPermission", "parameters": "(Permission permission)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasPermission(Permission permission)", "full_signature": "public static boolean hasPermission(Permission permission)", "class_method_signature": "Functions.hasPermission(Permission permission)", "testcase": false, "constructor": false}, {"identifier": "hasPermission", "parameters": "(Object object, Permission permission)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasPermission(Object object, Permission permission)", "full_signature": "public static boolean hasPermission(Object object, Permission permission)", "class_method_signature": "Functions.hasPermission(Object object, Permission permission)", "testcase": false, "constructor": false}, {"identifier": "adminCheck", "parameters": "(StaplerRequest req, StaplerResponse rsp, Object required, Permission permission)", "modifiers": "public static", "return": "void", "signature": "void adminCheck(StaplerRequest req, StaplerResponse rsp, Object required, Permission permission)", "full_signature": "public static void adminCheck(StaplerRequest req, StaplerResponse rsp, Object required, Permission permission)", "class_method_signature": "Functions.adminCheck(StaplerRequest req, StaplerResponse rsp, Object required, Permission permission)", "testcase": false, "constructor": false}, {"identifier": "inferHudsonURL", "parameters": "(StaplerRequest req)", "modifiers": "public static", "return": "String", "signature": "String inferHudsonURL(StaplerRequest req)", "full_signature": "public static String inferHudsonURL(StaplerRequest req)", "class_method_signature": "Functions.inferHudsonURL(StaplerRequest req)", "testcase": false, "constructor": false}, {"identifier": "getJobPropertyDescriptors", "parameters": "(Class<? extends Job> clazz)", "modifiers": "public static", "return": "List<JobPropertyDescriptor>", "signature": "List<JobPropertyDescriptor> getJobPropertyDescriptors(Class<? extends Job> clazz)", "full_signature": "public static List<JobPropertyDescriptor> getJobPropertyDescriptors(Class<? extends Job> clazz)", "class_method_signature": "Functions.getJobPropertyDescriptors(Class<? extends Job> clazz)", "testcase": false, "constructor": false}, {"identifier": "getBuildWrapperDescriptors", "parameters": "(AbstractProject<?,?> project)", "modifiers": "public static", "return": "List<Descriptor<BuildWrapper>>", "signature": "List<Descriptor<BuildWrapper>> getBuildWrapperDescriptors(AbstractProject<?,?> project)", "full_signature": "public static List<Descriptor<BuildWrapper>> getBuildWrapperDescriptors(AbstractProject<?,?> project)", "class_method_signature": "Functions.getBuildWrapperDescriptors(AbstractProject<?,?> project)", "testcase": false, "constructor": false}, {"identifier": "getSecurityRealmDescriptors", "parameters": "()", "modifiers": "public static", "return": "List<Descriptor<SecurityRealm>>", "signature": "List<Descriptor<SecurityRealm>> getSecurityRealmDescriptors()", "full_signature": "public static List<Descriptor<SecurityRealm>> getSecurityRealmDescriptors()", "class_method_signature": "Functions.getSecurityRealmDescriptors()", "testcase": false, "constructor": false}, {"identifier": "getAuthorizationStrategyDescriptors", "parameters": "()", "modifiers": "public static", "return": "List<Descriptor<AuthorizationStrategy>>", "signature": "List<Descriptor<AuthorizationStrategy>> getAuthorizationStrategyDescriptors()", "full_signature": "public static List<Descriptor<AuthorizationStrategy>> getAuthorizationStrategyDescriptors()", "class_method_signature": "Functions.getAuthorizationStrategyDescriptors()", "testcase": false, "constructor": false}, {"identifier": "getBuilderDescriptors", "parameters": "(AbstractProject<?,?> project)", "modifiers": "public static", "return": "List<Descriptor<Builder>>", "signature": "List<Descriptor<Builder>> getBuilderDescriptors(AbstractProject<?,?> project)", "full_signature": "public static List<Descriptor<Builder>> getBuilderDescriptors(AbstractProject<?,?> project)", "class_method_signature": "Functions.getBuilderDescriptors(AbstractProject<?,?> project)", "testcase": false, "constructor": false}, {"identifier": "getPublisherDescriptors", "parameters": "(AbstractProject<?,?> project)", "modifiers": "public static", "return": "List<Descriptor<Publisher>>", "signature": "List<Descriptor<Publisher>> getPublisherDescriptors(AbstractProject<?,?> project)", "full_signature": "public static List<Descriptor<Publisher>> getPublisherDescriptors(AbstractProject<?,?> project)", "class_method_signature": "Functions.getPublisherDescriptors(AbstractProject<?,?> project)", "testcase": false, "constructor": false}, {"identifier": "getSCMDescriptors", "parameters": "(AbstractProject<?,?> project)", "modifiers": "public static", "return": "List<SCMDescriptor<?>>", "signature": "List<SCMDescriptor<?>> getSCMDescriptors(AbstractProject<?,?> project)", "full_signature": "public static List<SCMDescriptor<?>> getSCMDescriptors(AbstractProject<?,?> project)", "class_method_signature": "Functions.getSCMDescriptors(AbstractProject<?,?> project)", "testcase": false, "constructor": false}, {"identifier": "getComputerLauncherDescriptors", "parameters": "()", "modifiers": "public static", "return": "List<Descriptor<ComputerLauncher>>", "signature": "List<Descriptor<ComputerLauncher>> getComputerLauncherDescriptors()", "full_signature": "public static List<Descriptor<ComputerLauncher>> getComputerLauncherDescriptors()", "class_method_signature": "Functions.getComputerLauncherDescriptors()", "testcase": false, "constructor": false}, {"identifier": "getRetentionStrategyDescriptors", "parameters": "()", "modifiers": "public static", "return": "List<Descriptor<RetentionStrategy<?>>>", "signature": "List<Descriptor<RetentionStrategy<?>>> getRetentionStrategyDescriptors()", "full_signature": "public static List<Descriptor<RetentionStrategy<?>>> getRetentionStrategyDescriptors()", "class_method_signature": "Functions.getRetentionStrategyDescriptors()", "testcase": false, "constructor": false}, {"identifier": "getParameterDescriptors", "parameters": "()", "modifiers": "public static", "return": "List<ParameterDescriptor>", "signature": "List<ParameterDescriptor> getParameterDescriptors()", "full_signature": "public static List<ParameterDescriptor> getParameterDescriptors()", "class_method_signature": "Functions.getParameterDescriptors()", "testcase": false, "constructor": false}, {"identifier": "getViewsTabBarDescriptors", "parameters": "()", "modifiers": "public static", "return": "List<Descriptor<ViewsTabBar>>", "signature": "List<Descriptor<ViewsTabBar>> getViewsTabBarDescriptors()", "full_signature": "public static List<Descriptor<ViewsTabBar>> getViewsTabBarDescriptors()", "class_method_signature": "Functions.getViewsTabBarDescriptors()", "testcase": false, "constructor": false}, {"identifier": "getMyViewsTabBarDescriptors", "parameters": "()", "modifiers": "public static", "return": "List<Descriptor<MyViewsTabBar>>", "signature": "List<Descriptor<MyViewsTabBar>> getMyViewsTabBarDescriptors()", "full_signature": "public static List<Descriptor<MyViewsTabBar>> getMyViewsTabBarDescriptors()", "class_method_signature": "Functions.getMyViewsTabBarDescriptors()", "testcase": false, "constructor": false}, {"identifier": "getNodePropertyDescriptors", "parameters": "(Class<? extends Node> clazz)", "modifiers": "public static", "return": "List<NodePropertyDescriptor>", "signature": "List<NodePropertyDescriptor> getNodePropertyDescriptors(Class<? extends Node> clazz)", "full_signature": "public static List<NodePropertyDescriptor> getNodePropertyDescriptors(Class<? extends Node> clazz)", "class_method_signature": "Functions.getNodePropertyDescriptors(Class<? extends Node> clazz)", "testcase": false, "constructor": false}, {"identifier": "getGlobalConfigIgnoredDescriptors", "parameters": "()", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> getGlobalConfigIgnoredDescriptors()", "full_signature": "public static Set<String> getGlobalConfigIgnoredDescriptors()", "class_method_signature": "Functions.getGlobalConfigIgnoredDescriptors()", "testcase": false, "constructor": false}, {"identifier": "getSortedDescriptorsForGlobalConfig", "parameters": "()", "modifiers": "public static", "return": "Collection<Descriptor>", "signature": "Collection<Descriptor> getSortedDescriptorsForGlobalConfig()", "full_signature": "public static Collection<Descriptor> getSortedDescriptorsForGlobalConfig()", "class_method_signature": "Functions.getSortedDescriptorsForGlobalConfig()", "testcase": false, "constructor": false}, {"identifier": "buildSuperclassHierarchy", "parameters": "(Class c, StringBuilder buf)", "modifiers": "private static", "return": "StringBuilder", "signature": "StringBuilder buildSuperclassHierarchy(Class c, StringBuilder buf)", "full_signature": "private static StringBuilder buildSuperclassHierarchy(Class c, StringBuilder buf)", "class_method_signature": "Functions.buildSuperclassHierarchy(Class c, StringBuilder buf)", "testcase": false, "constructor": false}, {"identifier": "getIconFilePath", "parameters": "(Action a)", "modifiers": "public static", "return": "String", "signature": "String getIconFilePath(Action a)", "full_signature": "public static String getIconFilePath(Action a)", "class_method_signature": "Functions.getIconFilePath(Action a)", "testcase": false, "constructor": false}, {"identifier": "size2", "parameters": "(Object o)", "modifiers": "public static", "return": "int", "signature": "int size2(Object o)", "full_signature": "public static int size2(Object o)", "class_method_signature": "Functions.size2(Object o)", "testcase": false, "constructor": false}, {"identifier": "getRelativeLinkTo", "parameters": "(Item p)", "modifiers": "public static", "return": "String", "signature": "String getRelativeLinkTo(Item p)", "full_signature": "public static String getRelativeLinkTo(Item p)", "class_method_signature": "Functions.getRelativeLinkTo(Item p)", "testcase": false, "constructor": false}, {"identifier": "dumpAllThreads", "parameters": "()", "modifiers": "public static", "return": "Map<Thread,StackTraceElement[]>", "signature": "Map<Thread,StackTraceElement[]> dumpAllThreads()", "full_signature": "public static Map<Thread,StackTraceElement[]> dumpAllThreads()", "class_method_signature": "Functions.dumpAllThreads()", "testcase": false, "constructor": false}, {"identifier": "getThreadInfos", "parameters": "()", "modifiers": "@IgnoreJRERequirement public static", "return": "ThreadInfo[]", "signature": "ThreadInfo[] getThreadInfos()", "full_signature": "@IgnoreJRERequirement public static ThreadInfo[] getThreadInfos()", "class_method_signature": "Functions.getThreadInfos()", "testcase": false, "constructor": false}, {"identifier": "sortThreadsAndGetGroupMap", "parameters": "(ThreadInfo[] list)", "modifiers": "public static", "return": "ThreadGroupMap", "signature": "ThreadGroupMap sortThreadsAndGetGroupMap(ThreadInfo[] list)", "full_signature": "public static ThreadGroupMap sortThreadsAndGetGroupMap(ThreadInfo[] list)", "class_method_signature": "Functions.sortThreadsAndGetGroupMap(ThreadInfo[] list)", "testcase": false, "constructor": false}, {"identifier": "isMustangOrAbove", "parameters": "()", "modifiers": "@IgnoreJRERequirement public static", "return": "boolean", "signature": "boolean isMustangOrAbove()", "full_signature": "@IgnoreJRERequirement public static boolean isMustangOrAbove()", "class_method_signature": "Functions.isMustangOrAbove()", "testcase": false, "constructor": false}, {"identifier": "dumpThreadInfo", "parameters": "(ThreadInfo ti, ThreadGroupMap map)", "modifiers": "@IgnoreJRERequirement public static", "return": "String", "signature": "String dumpThreadInfo(ThreadInfo ti, ThreadGroupMap map)", "full_signature": "@IgnoreJRERequirement public static String dumpThreadInfo(ThreadInfo ti, ThreadGroupMap map)", "class_method_signature": "Functions.dumpThreadInfo(ThreadInfo ti, ThreadGroupMap map)", "testcase": false, "constructor": false}, {"identifier": "emptyList", "parameters": "()", "modifiers": "public static", "return": "Collection<T>", "signature": "Collection<T> emptyList()", "full_signature": "public static Collection<T> emptyList()", "class_method_signature": "Functions.emptyList()", "testcase": false, "constructor": false}, {"identifier": "jsStringEscape", "parameters": "(String s)", "modifiers": "public static", "return": "String", "signature": "String jsStringEscape(String s)", "full_signature": "public static String jsStringEscape(String s)", "class_method_signature": "Functions.jsStringEscape(String s)", "testcase": false, "constructor": false}, {"identifier": "capitalize", "parameters": "(String s)", "modifiers": "public static", "return": "String", "signature": "String capitalize(String s)", "full_signature": "public static String capitalize(String s)", "class_method_signature": "Functions.capitalize(String s)", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getVersion()", "full_signature": "public static String getVersion()", "class_method_signature": "Functions.getVersion()", "testcase": false, "constructor": false}, {"identifier": "getResourcePath", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getResourcePath()", "full_signature": "public static String getResourcePath()", "class_method_signature": "Functions.getResourcePath()", "testcase": false, "constructor": false}, {"identifier": "getViewResource", "parameters": "(Object it, String path)", "modifiers": "public static", "return": "String", "signature": "String getViewResource(Object it, String path)", "full_signature": "public static String getViewResource(Object it, String path)", "class_method_signature": "Functions.getViewResource(Object it, String path)", "testcase": false, "constructor": false}, {"identifier": "hasView", "parameters": "(Object it, String path)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasView(Object it, String path)", "full_signature": "public static boolean hasView(Object it, String path)", "class_method_signature": "Functions.hasView(Object it, String path)", "testcase": false, "constructor": false}, {"identifier": "defaultToTrue", "parameters": "(Boolean b)", "modifiers": "public static", "return": "boolean", "signature": "boolean defaultToTrue(Boolean b)", "full_signature": "public static boolean defaultToTrue(Boolean b)", "class_method_signature": "Functions.defaultToTrue(Boolean b)", "testcase": false, "constructor": false}, {"identifier": "defaulted", "parameters": "(T value, T defaultValue)", "modifiers": "public static", "return": "T", "signature": "T defaulted(T value, T defaultValue)", "full_signature": "public static T defaulted(T value, T defaultValue)", "class_method_signature": "Functions.defaulted(T value, T defaultValue)", "testcase": false, "constructor": false}, {"identifier": "printThrowable", "parameters": "(Throwable t)", "modifiers": "public static", "return": "String", "signature": "String printThrowable(Throwable t)", "full_signature": "public static String printThrowable(Throwable t)", "class_method_signature": "Functions.printThrowable(Throwable t)", "testcase": false, "constructor": false}, {"identifier": "determineRows", "parameters": "(String s)", "modifiers": "public static", "return": "int", "signature": "int determineRows(String s)", "full_signature": "public static int determineRows(String s)", "class_method_signature": "Functions.determineRows(String s)", "testcase": false, "constructor": false}, {"identifier": "toCCStatus", "parameters": "(Item i)", "modifiers": "public static", "return": "String", "signature": "String toCCStatus(Item i)", "full_signature": "public static String toCCStatus(Item i)", "class_method_signature": "Functions.toCCStatus(Item i)", "testcase": false, "constructor": false}, {"identifier": "isAnonymous", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isAnonymous()", "full_signature": "public static boolean isAnonymous()", "class_method_signature": "Functions.isAnonymous()", "testcase": false, "constructor": false}, {"identifier": "getCurrentJellyContext", "parameters": "()", "modifiers": "public static", "return": "JellyContext", "signature": "JellyContext getCurrentJellyContext()", "full_signature": "public static JellyContext getCurrentJellyContext()", "class_method_signature": "Functions.getCurrentJellyContext()", "testcase": false, "constructor": false}, {"identifier": "runScript", "parameters": "(Script script)", "modifiers": "public static", "return": "String", "signature": "String runScript(Script script)", "full_signature": "public static String runScript(Script script)", "class_method_signature": "Functions.runScript(Script script)", "testcase": false, "constructor": false}, {"identifier": "subList", "parameters": "(List<T> base, int maxSize)", "modifiers": "public static", "return": "List<T>", "signature": "List<T> subList(List<T> base, int maxSize)", "full_signature": "public static List<T> subList(List<T> base, int maxSize)", "class_method_signature": "Functions.subList(List<T> base, int maxSize)", "testcase": false, "constructor": false}, {"identifier": "getActionUrl", "parameters": "(String itUrl,Action action)", "modifiers": "public static", "return": "String", "signature": "String getActionUrl(String itUrl,Action action)", "full_signature": "public static String getActionUrl(String itUrl,Action action)", "class_method_signature": "Functions.getActionUrl(String itUrl,Action action)", "testcase": false, "constructor": false}, {"identifier": "toEmailSafeString", "parameters": "(String projectName)", "modifiers": "public static", "return": "String", "signature": "String toEmailSafeString(String projectName)", "full_signature": "public static String toEmailSafeString(String projectName)", "class_method_signature": "Functions.toEmailSafeString(String projectName)", "testcase": false, "constructor": false}, {"identifier": "getSystemProperty", "parameters": "(String key)", "modifiers": "public", "return": "String", "signature": "String getSystemProperty(String key)", "full_signature": "public String getSystemProperty(String key)", "class_method_signature": "Functions.getSystemProperty(String key)", "testcase": false, "constructor": false}, {"identifier": "getServerName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getServerName()", "full_signature": "public String getServerName()", "class_method_signature": "Functions.getServerName()", "testcase": false, "constructor": false}, {"identifier": "getCheckUrl", "parameters": "(String userDefined, Object descriptor, String field)", "modifiers": "public", "return": "String", "signature": "String getCheckUrl(String userDefined, Object descriptor, String field)", "full_signature": "public String getCheckUrl(String userDefined, Object descriptor, String field)", "class_method_signature": "Functions.getCheckUrl(String userDefined, Object descriptor, String field)", "testcase": false, "constructor": false}, {"identifier": "hyperlinkMatchesCurrentPage", "parameters": "(String href)", "modifiers": "public", "return": "boolean", "signature": "boolean hyperlinkMatchesCurrentPage(String href)", "full_signature": "public boolean hyperlinkMatchesCurrentPage(String href)", "class_method_signature": "Functions.hyperlinkMatchesCurrentPage(String href)", "testcase": false, "constructor": false}, {"identifier": "singletonList", "parameters": "(T t)", "modifiers": "public", "return": "List<T>", "signature": "List<T> singletonList(T t)", "full_signature": "public List<T> singletonList(T t)", "class_method_signature": "Functions.singletonList(T t)", "testcase": false, "constructor": false}, {"identifier": "getPageDecorators", "parameters": "()", "modifiers": "public static", "return": "List<PageDecorator>", "signature": "List<PageDecorator> getPageDecorators()", "full_signature": "public static List<PageDecorator> getPageDecorators()", "class_method_signature": "Functions.getPageDecorators()", "testcase": false, "constructor": false}, {"identifier": "getCloudDescriptors", "parameters": "()", "modifiers": "public static", "return": "List<Descriptor<Cloud>>", "signature": "List<Descriptor<Cloud>> getCloudDescriptors()", "full_signature": "public static List<Descriptor<Cloud>> getCloudDescriptors()", "class_method_signature": "Functions.getCloudDescriptors()", "testcase": false, "constructor": false}, {"identifier": "prepend", "parameters": "(String prefix, String body)", "modifiers": "public", "return": "String", "signature": "String prepend(String prefix, String body)", "full_signature": "public String prepend(String prefix, String body)", "class_method_signature": "Functions.prepend(String prefix, String body)", "testcase": false, "constructor": false}, {"identifier": "getCrumbIssuerDescriptors", "parameters": "()", "modifiers": "public static", "return": "List<Descriptor<CrumbIssuer>>", "signature": "List<Descriptor<CrumbIssuer>> getCrumbIssuerDescriptors()", "full_signature": "public static List<Descriptor<CrumbIssuer>> getCrumbIssuerDescriptors()", "class_method_signature": "Functions.getCrumbIssuerDescriptors()", "testcase": false, "constructor": false}, {"identifier": "getCrumb", "parameters": "(StaplerRequest req)", "modifiers": "public static", "return": "String", "signature": "String getCrumb(StaplerRequest req)", "full_signature": "public static String getCrumb(StaplerRequest req)", "class_method_signature": "Functions.getCrumb(StaplerRequest req)", "testcase": false, "constructor": false}, {"identifier": "getCrumbRequestField", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getCrumbRequestField()", "full_signature": "public static String getCrumbRequestField()", "class_method_signature": "Functions.getCrumbRequestField()", "testcase": false, "constructor": false}, {"identifier": "getCurrentTime", "parameters": "()", "modifiers": "public static", "return": "Date", "signature": "Date getCurrentTime()", "full_signature": "public static Date getCurrentTime()", "class_method_signature": "Functions.getCurrentTime()", "testcase": false, "constructor": false}, {"identifier": "getClientLocale", "parameters": "()", "modifiers": "public static", "return": "Locale", "signature": "Locale getClientLocale()", "full_signature": "public static Locale getClientLocale()", "class_method_signature": "Functions.getClientLocale()", "testcase": false, "constructor": false}, {"identifier": "getServerLocale", "parameters": "()", "modifiers": "public static", "return": "Locale", "signature": "Locale getServerLocale()", "full_signature": "public static Locale getServerLocale()", "class_method_signature": "Functions.getServerLocale()", "testcase": false, "constructor": false}, {"identifier": "generateConsoleAnnotationScriptAndStylesheet", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String generateConsoleAnnotationScriptAndStylesheet()", "full_signature": "public static String generateConsoleAnnotationScriptAndStylesheet()", "class_method_signature": "Functions.generateConsoleAnnotationScriptAndStylesheet()", "testcase": false, "constructor": false}, {"identifier": "getLoggerNames", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getLoggerNames()", "full_signature": "public List<String> getLoggerNames()", "class_method_signature": "Functions.getLoggerNames()", "testcase": false, "constructor": false}, {"identifier": "getPasswordValue", "parameters": "(Object o)", "modifiers": "public", "return": "String", "signature": "String getPasswordValue(Object o)", "full_signature": "public String getPasswordValue(Object o)", "class_method_signature": "Functions.getPasswordValue(Object o)", "testcase": false, "constructor": false}, {"identifier": "filterDescriptors", "parameters": "(Object context, Iterable descriptors)", "modifiers": "public", "return": "List", "signature": "List filterDescriptors(Object context, Iterable descriptors)", "full_signature": "public List filterDescriptors(Object context, Iterable descriptors)", "class_method_signature": "Functions.filterDescriptors(Object context, Iterable descriptors)", "testcase": false, "constructor": false}, {"identifier": "getIsUnitTest", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean getIsUnitTest()", "full_signature": "public static boolean getIsUnitTest()", "class_method_signature": "Functions.getIsUnitTest()", "testcase": false, "constructor": false}, {"identifier": "isArtifactsPermissionEnabled", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isArtifactsPermissionEnabled()", "full_signature": "public static boolean isArtifactsPermissionEnabled()", "class_method_signature": "Functions.isArtifactsPermissionEnabled()", "testcase": false, "constructor": false}, {"identifier": "isAuthor", "parameters": "(Job job)", "modifiers": "public static", "return": "boolean", "signature": "boolean isAuthor(Job job)", "full_signature": "public static boolean isAuthor(Job job)", "class_method_signature": "Functions.isAuthor(Job job)", "testcase": false, "constructor": false}, {"identifier": "resolveStaplerObject", "parameters": "(final Object obj)", "modifiers": "public static", "return": "Object", "signature": "Object resolveStaplerObject(final Object obj)", "full_signature": "public static Object resolveStaplerObject(final Object obj)", "class_method_signature": "Functions.resolveStaplerObject(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "isWipeOutPermissionEnabled", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isWipeOutPermissionEnabled()", "full_signature": "public static boolean isWipeOutPermissionEnabled()", "class_method_signature": "Functions.isWipeOutPermissionEnabled()", "testcase": false, "constructor": false}, {"identifier": "getItemByName", "parameters": "(List<T> items, final String name)", "modifiers": "public static", "return": "T", "signature": "T getItemByName(List<T> items, final String name)", "full_signature": "public static T getItemByName(List<T> items, final String name)", "class_method_signature": "Functions.getItemByName(List<T> items, final String name)", "testcase": false, "constructor": false}, {"identifier": "rawHtml", "parameters": "(Object o)", "modifiers": "public static", "return": "Object", "signature": "Object rawHtml(Object o)", "full_signature": "public static Object rawHtml(Object o)", "class_method_signature": "Functions.rawHtml(Object o)", "testcase": false, "constructor": false}], "file": "hudson-core/src/main/java/hudson/Functions.java"}, "focal_method": {"identifier": "isAuthor", "parameters": "(Job job)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isAuthor(Job job) {\n        User user = User.current();\n        return !(user == null || job == null || job.getCreatedBy() == null) && job.getCreatedBy().equals(user.getId());\n    }", "signature": "boolean isAuthor(Job job)", "full_signature": "public static boolean isAuthor(Job job)", "class_method_signature": "Functions.isAuthor(Job job)", "testcase": false, "constructor": false, "invocations": ["current", "getCreatedBy", "equals", "getCreatedBy", "getId"]}, "repository": {"repo_id": 1367811, "url": "https://github.com/hudson/hudson-2.x", "language": "Java", "is_fork": false, "fork_count": 50, "stargazer_count": 142, "size": 56250, "license": "licensed"}}