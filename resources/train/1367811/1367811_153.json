{"test_class": {"identifier": "NodeServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Hudson hudson;", "modifier": "private", "type": "Hudson", "declarator": "hudson", "var_name": "hudson"}, {"original_string": "@Mock\n    private SecurityService security;", "modifier": "@Mock\n    private", "type": "SecurityService", "declarator": "security", "var_name": "security"}, {"original_string": "@Mock\n    private NodeServiceImpl nodeService;", "modifier": "@Mock\n    private", "type": "NodeServiceImpl", "declarator": "nodeService", "var_name": "nodeService"}, {"original_string": "@Mock\n    private Node node;", "modifier": "@Mock\n    private", "type": "Node", "declarator": "node", "var_name": "node"}], "file": "hudson-service/src/test/java/org/hudsonci/service/internal/NodeServiceImplTest.java"}, "test_case": {"identifier": "findNodeNotFound", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void findNodeNotFound() {\n        assertThat(getInst().findNode(\"nodeName\"), nullValue());\n    }", "signature": "void findNodeNotFound()", "full_signature": "@Test public void findNodeNotFound()", "class_method_signature": "NodeServiceImplTest.findNodeNotFound()", "testcase": true, "constructor": false, "invocations": ["assertThat", "findNode", "getInst", "nullValue"]}, "focal_class": {"identifier": "NodeServiceImpl", "superclass": "extends ServiceSupport", "interfaces": "implements NodeService", "fields": [{"original_string": "private final SecurityService security;", "modifier": "private final", "type": "SecurityService", "declarator": "security", "var_name": "security"}], "methods": [{"identifier": "NodeServiceImpl", "parameters": "(final SecurityService security)", "modifiers": "@Inject public", "return": "", "signature": " NodeServiceImpl(final SecurityService security)", "full_signature": "@Inject public  NodeServiceImpl(final SecurityService security)", "class_method_signature": "NodeServiceImpl.NodeServiceImpl(final SecurityService security)", "testcase": false, "constructor": true}, {"identifier": "getNode", "parameters": "(String nodeName)", "modifiers": "public", "return": "Node", "signature": "Node getNode(String nodeName)", "full_signature": "public Node getNode(String nodeName)", "class_method_signature": "NodeServiceImpl.getNode(String nodeName)", "testcase": false, "constructor": false}, {"identifier": "findNode", "parameters": "(final String nodeName)", "modifiers": "public", "return": "Node", "signature": "Node findNode(final String nodeName)", "full_signature": "public Node findNode(final String nodeName)", "class_method_signature": "NodeServiceImpl.findNode(final String nodeName)", "testcase": false, "constructor": false}, {"identifier": "getMasterNode", "parameters": "()", "modifiers": "public", "return": "Node", "signature": "Node getMasterNode()", "full_signature": "public Node getMasterNode()", "class_method_signature": "NodeServiceImpl.getMasterNode()", "testcase": false, "constructor": false}, {"identifier": "getAllNodes", "parameters": "()", "modifiers": "public", "return": "List<Node>", "signature": "List<Node> getAllNodes()", "full_signature": "public List<Node> getAllNodes()", "class_method_signature": "NodeServiceImpl.getAllNodes()", "testcase": false, "constructor": false}, {"identifier": "getNodes", "parameters": "()", "modifiers": "public", "return": "List<Node>", "signature": "List<Node> getNodes()", "full_signature": "public List<Node> getNodes()", "class_method_signature": "NodeServiceImpl.getNodes()", "testcase": false, "constructor": false}, {"identifier": "getCurrentNode", "parameters": "()", "modifiers": "public", "return": "Node", "signature": "Node getCurrentNode()", "full_signature": "public Node getCurrentNode()", "class_method_signature": "NodeServiceImpl.getCurrentNode()", "testcase": false, "constructor": false}], "file": "hudson-service/src/main/java/org/hudsonci/service/internal/NodeServiceImpl.java"}, "focal_method": {"identifier": "findNode", "parameters": "(final String nodeName)", "modifiers": "public", "return": "Node", "body": "public Node findNode(final String nodeName) {\n        log.debug(\"findNode(\\\"{}\\\")\", nodeName);\n        checkNodeName(nodeName);\n        Node node;\n        // Provide the master node, if the name is \"\"\n        if (\"\".equals(nodeName)) {\n            node = getHudson();\n        } else {\n            node = getHudson().getNode(nodeName);\n        }\n        if (node != null) {\n            this.security.checkPermission(node, Permission.READ);\n        }\n        return node;\n    }", "signature": "Node findNode(final String nodeName)", "full_signature": "public Node findNode(final String nodeName)", "class_method_signature": "NodeServiceImpl.findNode(final String nodeName)", "testcase": false, "constructor": false, "invocations": ["debug", "checkNodeName", "equals", "getHudson", "getNode", "getHudson", "checkPermission"]}, "repository": {"repo_id": 1367811, "url": "https://github.com/hudson/hudson-2.x", "language": "Java", "is_fork": false, "fork_count": 50, "stargazer_count": 142, "size": 56250, "license": "licensed"}}