{"test_class": {"identifier": "ObjectsTest", "superclass": "", "interfaces": "", "fields": [], "file": "funk-core/src/test/java/org/javafunk/funk/ObjectsTest.java"}, "test_case": {"identifier": "returnsPredicateWhichEvaluatesTrueWhenPassedNonNullObject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void returnsPredicateWhichEvaluatesTrueWhenPassedNonNullObject() {\n        assertThat(whereNotNull().evaluate(new Object()), is(true));\n    }", "signature": "void returnsPredicateWhichEvaluatesTrueWhenPassedNonNullObject()", "full_signature": "@Test public void returnsPredicateWhichEvaluatesTrueWhenPassedNonNullObject()", "class_method_signature": "ObjectsTest.returnsPredicateWhichEvaluatesTrueWhenPassedNonNullObject()", "testcase": true, "constructor": false, "invocations": ["assertThat", "evaluate", "whereNotNull", "is"]}, "focal_class": {"identifier": "Objects", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "isNull", "parameters": "(Object value)", "modifiers": "public static", "return": "boolean", "signature": "boolean isNull(Object value)", "full_signature": "public static boolean isNull(Object value)", "class_method_signature": "Objects.isNull(Object value)", "testcase": false, "constructor": false}, {"identifier": "isNotNull", "parameters": "(Object value)", "modifiers": "public static", "return": "boolean", "signature": "boolean isNotNull(Object value)", "full_signature": "public static boolean isNotNull(Object value)", "class_method_signature": "Objects.isNotNull(Object value)", "testcase": false, "constructor": false}, {"identifier": "whereNull", "parameters": "()", "modifiers": "public static", "return": "UnaryPredicate<Object>", "signature": "UnaryPredicate<Object> whereNull()", "full_signature": "public static UnaryPredicate<Object> whereNull()", "class_method_signature": "Objects.whereNull()", "testcase": false, "constructor": false}, {"identifier": "whereNotNull", "parameters": "()", "modifiers": "public static", "return": "UnaryPredicate<Object>", "signature": "UnaryPredicate<Object> whereNotNull()", "full_signature": "public static UnaryPredicate<Object> whereNotNull()", "class_method_signature": "Objects.whereNotNull()", "testcase": false, "constructor": false}, {"identifier": "toStringValue", "parameters": "()", "modifiers": "public static", "return": "Mapper<Object, String>", "signature": "Mapper<Object, String> toStringValue()", "full_signature": "public static Mapper<Object, String> toStringValue()", "class_method_signature": "Objects.toStringValue()", "testcase": false, "constructor": false}, {"identifier": "toStringValueFor", "parameters": "(@SuppressWarnings(\"unused\") Class<T> targetClass)", "modifiers": "public static", "return": "Mapper<T, String>", "signature": "Mapper<T, String> toStringValueFor(@SuppressWarnings(\"unused\") Class<T> targetClass)", "full_signature": "public static Mapper<T, String> toStringValueFor(@SuppressWarnings(\"unused\") Class<T> targetClass)", "class_method_signature": "Objects.toStringValueFor(@SuppressWarnings(\"unused\") Class<T> targetClass)", "testcase": false, "constructor": false}], "file": "funk-core/src/main/java/org/javafunk/funk/Objects.java"}, "focal_method": {"identifier": "whereNotNull", "parameters": "()", "modifiers": "public static", "return": "UnaryPredicate<Object>", "body": "public static UnaryPredicate<Object> whereNotNull() {\n        return new UnaryPredicate<Object>() {\n            @Override public boolean evaluate(Object input) {\n                return isNotNull(input);\n            }\n        };\n    }", "signature": "UnaryPredicate<Object> whereNotNull()", "full_signature": "public static UnaryPredicate<Object> whereNotNull()", "class_method_signature": "Objects.whereNotNull()", "testcase": false, "constructor": false, "invocations": ["isNotNull"]}, "repository": {"repo_id": 2505794, "url": "https://github.com/javafunk/funk", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 33, "size": 13785, "license": "licensed"}}