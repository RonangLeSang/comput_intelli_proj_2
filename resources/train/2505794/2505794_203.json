{"test_class": {"identifier": "SeptupleTest", "superclass": "", "interfaces": "", "fields": [], "file": "funk-core/src/test/java/org/javafunk/funk/datastructures/tuples/SeptupleTest.java"}, "test_case": {"identifier": "shouldBeMappableUsingUnaryFunctionOnFourthPosition", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldBeMappableUsingUnaryFunctionOnFourthPosition() throws Exception {\n        // Given\n        Septuple<Integer, String, Boolean, Double, Long, Name, Colour> septuple = tuple(5, \"Five\", true, 3.6, 2L, name(\"Ellen\"), colour(\"Green\"));\n        UnaryFunction<Double, String> function = new UnaryFunction<Double, String>() {\n            @Override public String call(Double input) {\n                return input.toString();\n            }\n        };\n        Septuple<Integer, String, Boolean, String, Long, Name, Colour> expected = tuple(5, \"Five\", true, \"3.6\", 2L, name(\"Ellen\"), colour(\"Green\"));\n\n        // When\n        Septuple<Integer, String, Boolean, String, Long, Name, Colour> actual = septuple.mapFourth(function);\n\n        // Then\n        assertThat(actual, is(expected));\n    }", "signature": "void shouldBeMappableUsingUnaryFunctionOnFourthPosition()", "full_signature": "@Test public void shouldBeMappableUsingUnaryFunctionOnFourthPosition()", "class_method_signature": "SeptupleTest.shouldBeMappableUsingUnaryFunctionOnFourthPosition()", "testcase": true, "constructor": false, "invocations": ["tuple", "name", "colour", "toString", "tuple", "name", "colour", "mapFourth", "assertThat", "is"]}, "focal_class": {"identifier": "Septuple", "superclass": "extends Sextuple<R, S, T, U, V, W>", "interfaces": "implements Seventh<X>,\n                   MappableSeventh<X, Septuple<R, S, T, U, V, W, ?>>", "fields": [{"original_string": "private final X seventh;", "modifier": "private final", "type": "X", "declarator": "seventh", "var_name": "seventh"}], "methods": [{"identifier": "septuple", "parameters": "(R first, S second, T third, U fourth, V fifth, W sixth, X seventh)", "modifiers": "public static", "return": "Septuple<R, S, T, U, V, W, X>", "signature": "Septuple<R, S, T, U, V, W, X> septuple(R first, S second, T third, U fourth, V fifth, W sixth, X seventh)", "full_signature": "public static Septuple<R, S, T, U, V, W, X> septuple(R first, S second, T third, U fourth, V fifth, W sixth, X seventh)", "class_method_signature": "Septuple.septuple(R first, S second, T third, U fourth, V fifth, W sixth, X seventh)", "testcase": false, "constructor": false}, {"identifier": "Septuple", "parameters": "(R first, S second, T third, U fourth, V fifth, W sixth, X seventh)", "modifiers": "public", "return": "", "signature": " Septuple(R first, S second, T third, U fourth, V fifth, W sixth, X seventh)", "full_signature": "public  Septuple(R first, S second, T third, U fourth, V fifth, W sixth, X seventh)", "class_method_signature": "Septuple.Septuple(R first, S second, T third, U fourth, V fifth, W sixth, X seventh)", "testcase": false, "constructor": true}, {"identifier": "getSeventh", "parameters": "()", "modifiers": "@Override public", "return": "X", "signature": "X getSeventh()", "full_signature": "@Override public X getSeventh()", "class_method_signature": "Septuple.getSeventh()", "testcase": false, "constructor": false}, {"identifier": "mapFirst", "parameters": "(UnaryFunction<R, A> function)", "modifiers": "@Override public", "return": "Septuple<A, S, T, U, V, W, X>", "signature": "Septuple<A, S, T, U, V, W, X> mapFirst(UnaryFunction<R, A> function)", "full_signature": "@Override public Septuple<A, S, T, U, V, W, X> mapFirst(UnaryFunction<R, A> function)", "class_method_signature": "Septuple.mapFirst(UnaryFunction<R, A> function)", "testcase": false, "constructor": false}, {"identifier": "mapSecond", "parameters": "(UnaryFunction<S, A> function)", "modifiers": "@Override public", "return": "Septuple<R, A, T, U, V, W, X>", "signature": "Septuple<R, A, T, U, V, W, X> mapSecond(UnaryFunction<S, A> function)", "full_signature": "@Override public Septuple<R, A, T, U, V, W, X> mapSecond(UnaryFunction<S, A> function)", "class_method_signature": "Septuple.mapSecond(UnaryFunction<S, A> function)", "testcase": false, "constructor": false}, {"identifier": "mapThird", "parameters": "(UnaryFunction<T, A> function)", "modifiers": "@Override public", "return": "Septuple<R, S, A, U, V, W, X>", "signature": "Septuple<R, S, A, U, V, W, X> mapThird(UnaryFunction<T, A> function)", "full_signature": "@Override public Septuple<R, S, A, U, V, W, X> mapThird(UnaryFunction<T, A> function)", "class_method_signature": "Septuple.mapThird(UnaryFunction<T, A> function)", "testcase": false, "constructor": false}, {"identifier": "mapFourth", "parameters": "(UnaryFunction<U, A> function)", "modifiers": "@Override public", "return": "Septuple<R, S, T, A, V, W, X>", "signature": "Septuple<R, S, T, A, V, W, X> mapFourth(UnaryFunction<U, A> function)", "full_signature": "@Override public Septuple<R, S, T, A, V, W, X> mapFourth(UnaryFunction<U, A> function)", "class_method_signature": "Septuple.mapFourth(UnaryFunction<U, A> function)", "testcase": false, "constructor": false}, {"identifier": "mapFifth", "parameters": "(UnaryFunction<V, A> function)", "modifiers": "@Override public", "return": "Septuple<R, S, T, U, A, W, X>", "signature": "Septuple<R, S, T, U, A, W, X> mapFifth(UnaryFunction<V, A> function)", "full_signature": "@Override public Septuple<R, S, T, U, A, W, X> mapFifth(UnaryFunction<V, A> function)", "class_method_signature": "Septuple.mapFifth(UnaryFunction<V, A> function)", "testcase": false, "constructor": false}, {"identifier": "mapSixth", "parameters": "(UnaryFunction<W, A> function)", "modifiers": "@Override public", "return": "Septuple<R, S, T, U, V, A, X>", "signature": "Septuple<R, S, T, U, V, A, X> mapSixth(UnaryFunction<W, A> function)", "full_signature": "@Override public Septuple<R, S, T, U, V, A, X> mapSixth(UnaryFunction<W, A> function)", "class_method_signature": "Septuple.mapSixth(UnaryFunction<W, A> function)", "testcase": false, "constructor": false}, {"identifier": "mapSeventh", "parameters": "(UnaryFunction<X, A> function)", "modifiers": "@Override public", "return": "Septuple<R, S, T, U, V, W, A>", "signature": "Septuple<R, S, T, U, V, W, A> mapSeventh(UnaryFunction<X, A> function)", "full_signature": "@Override public Septuple<R, S, T, U, V, W, A> mapSeventh(UnaryFunction<X, A> function)", "class_method_signature": "Septuple.mapSeventh(UnaryFunction<X, A> function)", "testcase": false, "constructor": false}, {"identifier": "getValues", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<Object>", "signature": "Iterable<Object> getValues()", "full_signature": "@Override public Iterable<Object> getValues()", "class_method_signature": "Septuple.getValues()", "testcase": false, "constructor": false}], "file": "funk-core/src/main/java/org/javafunk/funk/datastructures/tuples/Septuple.java"}, "focal_method": {"identifier": "mapFourth", "parameters": "(UnaryFunction<U, A> function)", "modifiers": "@Override public", "return": "Septuple<R, S, T, A, V, W, X>", "body": "@Override public <A> Septuple<R, S, T, A, V, W, X> mapFourth(UnaryFunction<U, A> function) {\n        return septuple(getFirst(), getSecond(), getThird(), function.call(getFourth()), getFifth(), getSixth(), getSeventh());\n    }", "signature": "Septuple<R, S, T, A, V, W, X> mapFourth(UnaryFunction<U, A> function)", "full_signature": "@Override public Septuple<R, S, T, A, V, W, X> mapFourth(UnaryFunction<U, A> function)", "class_method_signature": "Septuple.mapFourth(UnaryFunction<U, A> function)", "testcase": false, "constructor": false, "invocations": ["septuple", "getFirst", "getSecond", "getThird", "call", "getFourth", "getFifth", "getSixth", "getSeventh"]}, "repository": {"repo_id": 2505794, "url": "https://github.com/javafunk/funk", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 33, "size": 13785, "license": "licensed"}}