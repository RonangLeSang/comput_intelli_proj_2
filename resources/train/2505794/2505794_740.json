{"test_class": {"identifier": "CollectionBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "funk-core/src/test/java/org/javafunk/funk/builders/CollectionBuilderTest.java"}, "test_case": {"identifier": "shouldThrowNullPointerExceptionIfUnaryFunctionSuppliedToBuildIsNull", "parameters": "()", "modifiers": "@Test(expected = NullPointerException.class) public", "return": "void", "body": "@Test(expected = NullPointerException.class)\n    public void shouldThrowNullPointerExceptionIfUnaryFunctionSuppliedToBuildIsNull() throws Exception {\n        // Given\n        CollectionBuilder<Integer> collectionBuilder = collectionBuilderWith(1, 2, 3);\n        UnaryFunction<Iterable<Integer>, Collection<Integer>> unaryFunction = null;\n\n        // When\n        collectionBuilder.build(unaryFunction);\n\n        // Then a NullPointerException is thrown.\n    }", "signature": "void shouldThrowNullPointerExceptionIfUnaryFunctionSuppliedToBuildIsNull()", "full_signature": "@Test(expected = NullPointerException.class) public void shouldThrowNullPointerExceptionIfUnaryFunctionSuppliedToBuildIsNull()", "class_method_signature": "CollectionBuilderTest.shouldThrowNullPointerExceptionIfUnaryFunctionSuppliedToBuildIsNull()", "testcase": true, "constructor": false, "invocations": ["collectionBuilderWith", "build"]}, "focal_class": {"identifier": "CollectionBuilder", "superclass": "extends AbstractBuilder<E, CollectionBuilder<E>, Collection<E>>", "interfaces": "implements AbstractBuilder.WithCustomImplementationSupport<E, Collection, Collection<E>>", "fields": [{"original_string": "private Collection<E> elements = new ArrayList<E>();", "modifier": "private", "type": "Collection<E>", "declarator": "elements = new ArrayList<E>()", "var_name": "elements"}], "methods": [{"identifier": "collectionBuilder", "parameters": "()", "modifiers": "public static", "return": "CollectionBuilder<E>", "signature": "CollectionBuilder<E> collectionBuilder()", "full_signature": "public static CollectionBuilder<E> collectionBuilder()", "class_method_signature": "CollectionBuilder.collectionBuilder()", "testcase": false, "constructor": false}, {"identifier": "collectionBuilder", "parameters": "(Class<E> elementClass)", "modifiers": "public static", "return": "CollectionBuilder<E>", "signature": "CollectionBuilder<E> collectionBuilder(Class<E> elementClass)", "full_signature": "public static CollectionBuilder<E> collectionBuilder(Class<E> elementClass)", "class_method_signature": "CollectionBuilder.collectionBuilder(Class<E> elementClass)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "@Override public", "return": "Collection<E>", "signature": "Collection<E> build()", "full_signature": "@Override public Collection<E> build()", "class_method_signature": "CollectionBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(Class<? extends Collection> implementationClass)", "modifiers": "@Override public", "return": "Collection<E>", "signature": "Collection<E> build(Class<? extends Collection> implementationClass)", "full_signature": "@Override public Collection<E> build(Class<? extends Collection> implementationClass)", "class_method_signature": "CollectionBuilder.build(Class<? extends Collection> implementationClass)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(UnaryFunction<? super Iterable<E>, ? extends T> builderFunction)", "modifiers": "@Override public", "return": "T", "signature": "T build(UnaryFunction<? super Iterable<E>, ? extends T> builderFunction)", "full_signature": "@Override public T build(UnaryFunction<? super Iterable<E>, ? extends T> builderFunction)", "class_method_signature": "CollectionBuilder.build(UnaryFunction<? super Iterable<E>, ? extends T> builderFunction)", "testcase": false, "constructor": false}, {"identifier": "handle", "parameters": "(E element)", "modifiers": "@Override protected", "return": "void", "signature": "void handle(E element)", "full_signature": "@Override protected void handle(E element)", "class_method_signature": "CollectionBuilder.handle(E element)", "testcase": false, "constructor": false}, {"identifier": "updatedBuilder", "parameters": "()", "modifiers": "@Override protected", "return": "CollectionBuilder<E>", "signature": "CollectionBuilder<E> updatedBuilder()", "full_signature": "@Override protected CollectionBuilder<E> updatedBuilder()", "class_method_signature": "CollectionBuilder.updatedBuilder()", "testcase": false, "constructor": false}], "file": "funk-core/src/main/java/org/javafunk/funk/builders/CollectionBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "()", "modifiers": "@Override public", "return": "Collection<E>", "body": "@Override public Collection<E> build() {\n        return Collections.unmodifiableList(new ArrayList<E>(elements));\n    }", "signature": "Collection<E> build()", "full_signature": "@Override public Collection<E> build()", "class_method_signature": "CollectionBuilder.build()", "testcase": false, "constructor": false, "invocations": ["unmodifiableList"]}, "repository": {"repo_id": 2505794, "url": "https://github.com/javafunk/funk", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 33, "size": 13785, "license": "licensed"}}