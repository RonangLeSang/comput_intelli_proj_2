{"test_class": {"identifier": "FloatsTest", "superclass": "", "interfaces": "", "fields": [], "file": "funk-core/src/test/java/org/javafunk/funk/FloatsTest.java"}, "test_case": {"identifier": "returnsMapperFromBigDecimalToFloat", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void returnsMapperFromBigDecimalToFloat() {\n        assertThat(fromBigDecimalToFloat().map(new BigDecimal(\"1234.56\")), is(1234.56F));\n    }", "signature": "void returnsMapperFromBigDecimalToFloat()", "full_signature": "@Test public void returnsMapperFromBigDecimalToFloat()", "class_method_signature": "FloatsTest.returnsMapperFromBigDecimalToFloat()", "testcase": true, "constructor": false, "invocations": ["assertThat", "map", "fromBigDecimalToFloat", "is"]}, "focal_class": {"identifier": "Floats", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "fromStringToFloat", "parameters": "()", "modifiers": "public static", "return": "Mapper<String, Float>", "signature": "Mapper<String, Float> fromStringToFloat()", "full_signature": "public static Mapper<String, Float> fromStringToFloat()", "class_method_signature": "Floats.fromStringToFloat()", "testcase": false, "constructor": false}, {"identifier": "fromIntegerToFloat", "parameters": "()", "modifiers": "public static", "return": "Mapper<Integer, Float>", "signature": "Mapper<Integer, Float> fromIntegerToFloat()", "full_signature": "public static Mapper<Integer, Float> fromIntegerToFloat()", "class_method_signature": "Floats.fromIntegerToFloat()", "testcase": false, "constructor": false}, {"identifier": "fromLongToFloat", "parameters": "()", "modifiers": "public static", "return": "Mapper<Long, Float>", "signature": "Mapper<Long, Float> fromLongToFloat()", "full_signature": "public static Mapper<Long, Float> fromLongToFloat()", "class_method_signature": "Floats.fromLongToFloat()", "testcase": false, "constructor": false}, {"identifier": "fromBigIntegerToFloat", "parameters": "()", "modifiers": "public static", "return": "Mapper<BigInteger, Float>", "signature": "Mapper<BigInteger, Float> fromBigIntegerToFloat()", "full_signature": "public static Mapper<BigInteger, Float> fromBigIntegerToFloat()", "class_method_signature": "Floats.fromBigIntegerToFloat()", "testcase": false, "constructor": false}, {"identifier": "fromDoubleToFloat", "parameters": "()", "modifiers": "public static", "return": "Mapper<Double, Float>", "signature": "Mapper<Double, Float> fromDoubleToFloat()", "full_signature": "public static Mapper<Double, Float> fromDoubleToFloat()", "class_method_signature": "Floats.fromDoubleToFloat()", "testcase": false, "constructor": false}, {"identifier": "fromBigDecimalToFloat", "parameters": "()", "modifiers": "public static", "return": "Mapper<BigDecimal, Float>", "signature": "Mapper<BigDecimal, Float> fromBigDecimalToFloat()", "full_signature": "public static Mapper<BigDecimal, Float> fromBigDecimalToFloat()", "class_method_signature": "Floats.fromBigDecimalToFloat()", "testcase": false, "constructor": false}], "file": "funk-core/src/main/java/org/javafunk/funk/Floats.java"}, "focal_method": {"identifier": "fromBigDecimalToFloat", "parameters": "()", "modifiers": "public static", "return": "Mapper<BigDecimal, Float>", "body": "public static Mapper<BigDecimal, Float> fromBigDecimalToFloat() {\n        return new Mapper<BigDecimal, Float>() {\n            @Override public Float map(BigDecimal input) {\n                return input.floatValue();\n            }\n        };\n    }", "signature": "Mapper<BigDecimal, Float> fromBigDecimalToFloat()", "full_signature": "public static Mapper<BigDecimal, Float> fromBigDecimalToFloat()", "class_method_signature": "Floats.fromBigDecimalToFloat()", "testcase": false, "constructor": false, "invocations": ["floatValue"]}, "repository": {"repo_id": 2505794, "url": "https://github.com/javafunk/funk", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 33, "size": 13785, "license": "licensed"}}