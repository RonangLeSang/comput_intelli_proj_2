{"test_class": {"identifier": "OptionMatchersTest", "superclass": "", "interfaces": "", "fields": [], "file": "funk-matchers/src/test/java/org/javafunk/funk/matchers/OptionMatchersTest.java"}, "test_case": {"identifier": "shouldMatchWhenHasValueMatcherEvaluatesOptionWithSpecificValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldMatchWhenHasValueMatcherEvaluatesOptionWithSpecificValue() throws Exception {\n        // Given\n        Option<String> option = Option.option(\"matching value\");\n\n        // When\n        Matcher<? super Option<String>> matcher = hasValue(\"matching value\");\n\n        // Then\n        assertThat(matcher, successfullyMatches(option));\n    }", "signature": "void shouldMatchWhenHasValueMatcherEvaluatesOptionWithSpecificValue()", "full_signature": "@Test public void shouldMatchWhenHasValueMatcherEvaluatesOptionWithSpecificValue()", "class_method_signature": "OptionMatchersTest.shouldMatchWhenHasValueMatcherEvaluatesOptionWithSpecificValue()", "testcase": true, "constructor": false, "invocations": ["option", "hasValue", "assertThat", "successfullyMatches"]}, "focal_class": {"identifier": "OptionMatchers", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "hasValue", "parameters": "()", "modifiers": "public static", "return": "Matcher<? super Option<T>>", "signature": "Matcher<? super Option<T>> hasValue()", "full_signature": "public static Matcher<? super Option<T>> hasValue()", "class_method_signature": "OptionMatchers.hasValue()", "testcase": false, "constructor": false}, {"identifier": "hasValue", "parameters": "(final T value)", "modifiers": "public static", "return": "Matcher<? super Option<T>>", "signature": "Matcher<? super Option<T>> hasValue(final T value)", "full_signature": "public static Matcher<? super Option<T>> hasValue(final T value)", "class_method_signature": "OptionMatchers.hasValue(final T value)", "testcase": false, "constructor": false}, {"identifier": "hasValueOf", "parameters": "(Class<T> valueClass)", "modifiers": "public static", "return": "Matcher<? super Option<T>>", "signature": "Matcher<? super Option<T>> hasValueOf(Class<T> valueClass)", "full_signature": "public static Matcher<? super Option<T>> hasValueOf(Class<T> valueClass)", "class_method_signature": "OptionMatchers.hasValueOf(Class<T> valueClass)", "testcase": false, "constructor": false}, {"identifier": "hasNoValue", "parameters": "()", "modifiers": "public static", "return": "Matcher<? super Option<T>>", "signature": "Matcher<? super Option<T>> hasNoValue()", "full_signature": "public static Matcher<? super Option<T>> hasNoValue()", "class_method_signature": "OptionMatchers.hasNoValue()", "testcase": false, "constructor": false}, {"identifier": "hasNoValueOf", "parameters": "(Class<T> valueClass)", "modifiers": "public static", "return": "Matcher<? super Option<T>>", "signature": "Matcher<? super Option<T>> hasNoValueOf(Class<T> valueClass)", "full_signature": "public static Matcher<? super Option<T>> hasNoValueOf(Class<T> valueClass)", "class_method_signature": "OptionMatchers.hasNoValueOf(Class<T> valueClass)", "testcase": false, "constructor": false}], "file": "funk-matchers/src/main/java/org/javafunk/funk/matchers/OptionMatchers.java"}, "focal_method": {"identifier": "hasValue", "parameters": "()", "modifiers": "public static", "return": "Matcher<? super Option<T>>", "body": "public static <T> Matcher<? super Option<T>> hasValue() {\n        return new OptionHasAnyValueMatcher();\n    }", "signature": "Matcher<? super Option<T>> hasValue()", "full_signature": "public static Matcher<? super Option<T>> hasValue()", "class_method_signature": "OptionMatchers.hasValue()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2505794, "url": "https://github.com/javafunk/funk", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 33, "size": 13785, "license": "licensed"}}