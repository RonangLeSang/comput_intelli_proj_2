{"test_class": {"identifier": "MultisetsTest", "superclass": "", "interfaces": "", "fields": [], "file": "funk-core/src/test/java/org/javafunk/funk/MultisetsTest.java"}, "test_case": {"identifier": "shouldReturnTheMultisetUnionOfTheSuppliedIterables", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnTheMultisetUnionOfTheSuppliedIterables() throws Exception {\n        // Given\n        Iterable<String> firstIterable = listWith(\"a\", \"b\", \"a\", \"a\", \"c\");\n        Iterable<String> secondIterable = setWith(\"c\", \"d\", \"e\");\n        Iterable<String> thirdIterable = multisetWith(\"a\", \"a\", \"c\", \"c\", \"b\");\n        Multiset<String> expectedUnionMultiset = multisetWith(\"a\", \"a\", \"a\", \"b\", \"c\", \"c\", \"d\", \"e\");\n\n        // When\n        Multiset<String> actualUnionMultiset = Multisets.union(firstIterable, secondIterable, thirdIterable);\n\n        // Then\n        assertThat(actualUnionMultiset, is(expectedUnionMultiset));\n    }", "signature": "void shouldReturnTheMultisetUnionOfTheSuppliedIterables()", "full_signature": "@Test public void shouldReturnTheMultisetUnionOfTheSuppliedIterables()", "class_method_signature": "MultisetsTest.shouldReturnTheMultisetUnionOfTheSuppliedIterables()", "testcase": true, "constructor": false, "invocations": ["listWith", "setWith", "multisetWith", "multisetWith", "union", "assertThat", "is"]}, "focal_class": {"identifier": "Multisets", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Multisets", "parameters": "()", "modifiers": "private", "return": "", "signature": " Multisets()", "full_signature": "private  Multisets()", "class_method_signature": "Multisets.Multisets()", "testcase": false, "constructor": true}, {"identifier": "concatenate", "parameters": "(Iterable<? extends Iterable<? extends T>> iterables)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> concatenate(Iterable<? extends Iterable<? extends T>> iterables)", "full_signature": "public static Multiset<T> concatenate(Iterable<? extends Iterable<? extends T>> iterables)", "class_method_signature": "Multisets.concatenate(Iterable<? extends Iterable<? extends T>> iterables)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(Iterable<? extends Iterable<? extends T>> iterables)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> union(Iterable<? extends Iterable<? extends T>> iterables)", "full_signature": "public static Multiset<T> union(Iterable<? extends Iterable<? extends T>> iterables)", "class_method_signature": "Multisets.union(Iterable<? extends Iterable<? extends T>> iterables)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(Iterable<? extends Iterable<? extends T>> iterables)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> intersection(Iterable<? extends Iterable<? extends T>> iterables)", "full_signature": "public static Multiset<T> intersection(Iterable<? extends Iterable<? extends T>> iterables)", "class_method_signature": "Multisets.intersection(Iterable<? extends Iterable<? extends T>> iterables)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(Iterable<? extends Iterable<? extends T>> iterables)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> difference(Iterable<? extends Iterable<? extends T>> iterables)", "full_signature": "public static Multiset<T> difference(Iterable<? extends Iterable<? extends T>> iterables)", "class_method_signature": "Multisets.difference(Iterable<? extends Iterable<? extends T>> iterables)", "testcase": false, "constructor": false}, {"identifier": "concatenate", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "full_signature": "public static Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "class_method_signature": "Multisets.concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "testcase": false, "constructor": false}, {"identifier": "concatenate", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "full_signature": "public static Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "class_method_signature": "Multisets.concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "testcase": false, "constructor": false}, {"identifier": "concatenate", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "full_signature": "public static Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "class_method_signature": "Multisets.concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "testcase": false, "constructor": false}, {"identifier": "concatenate", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "full_signature": "public static Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "class_method_signature": "Multisets.concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "testcase": false, "constructor": false}, {"identifier": "concatenate", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "full_signature": "public static Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "class_method_signature": "Multisets.concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "testcase": false, "constructor": false}, {"identifier": "concatenate", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "full_signature": "public static Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "class_method_signature": "Multisets.concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "testcase": false, "constructor": false}, {"identifier": "concatenate", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "full_signature": "public static Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "class_method_signature": "Multisets.concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "testcase": false, "constructor": false}, {"identifier": "concatenate", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "full_signature": "public static Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "class_method_signature": "Multisets.concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "testcase": false, "constructor": false}, {"identifier": "concatenate", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "full_signature": "public static Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "class_method_signature": "Multisets.concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "testcase": false, "constructor": false}, {"identifier": "concatenate", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "full_signature": "public static Multiset<T> concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "class_method_signature": "Multisets.concatenate(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "full_signature": "public static Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "class_method_signature": "Multisets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "full_signature": "public static Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "class_method_signature": "Multisets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "full_signature": "public static Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "class_method_signature": "Multisets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "full_signature": "public static Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "class_method_signature": "Multisets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "full_signature": "public static Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "class_method_signature": "Multisets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "full_signature": "public static Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "class_method_signature": "Multisets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "full_signature": "public static Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "class_method_signature": "Multisets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "full_signature": "public static Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "class_method_signature": "Multisets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "full_signature": "public static Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "class_method_signature": "Multisets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "full_signature": "public static Multiset<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "class_method_signature": "Multisets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "full_signature": "public static Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "class_method_signature": "Multisets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "full_signature": "public static Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "class_method_signature": "Multisets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "full_signature": "public static Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "class_method_signature": "Multisets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "full_signature": "public static Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "class_method_signature": "Multisets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "full_signature": "public static Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "class_method_signature": "Multisets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "full_signature": "public static Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "class_method_signature": "Multisets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "full_signature": "public static Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "class_method_signature": "Multisets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "full_signature": "public static Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "class_method_signature": "Multisets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "full_signature": "public static Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "class_method_signature": "Multisets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "full_signature": "public static Multiset<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "class_method_signature": "Multisets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "full_signature": "public static Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "class_method_signature": "Multisets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "full_signature": "public static Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "class_method_signature": "Multisets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "full_signature": "public static Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "class_method_signature": "Multisets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "full_signature": "public static Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "class_method_signature": "Multisets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "full_signature": "public static Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "class_method_signature": "Multisets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "full_signature": "public static Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "class_method_signature": "Multisets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "full_signature": "public static Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "class_method_signature": "Multisets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "full_signature": "public static Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "class_method_signature": "Multisets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "full_signature": "public static Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "class_method_signature": "Multisets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "modifiers": "public static", "return": "Multiset<T>", "signature": "Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "full_signature": "public static Multiset<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "class_method_signature": "Multisets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "testcase": false, "constructor": false}], "file": "funk-core/src/main/java/org/javafunk/funk/Multisets.java"}, "focal_method": {"identifier": "union", "parameters": "(Iterable<? extends Iterable<? extends T>> iterables)", "modifiers": "public static", "return": "Multiset<T>", "body": "public static <T> Multiset<T> union(Iterable<? extends Iterable<? extends T>> iterables) {\n        Multiset<T> unionMultiset = HashMultiset.create(first(iterables).get());\n        for (Iterable<? extends T> iterable : rest(iterables)) {\n            Multiset<T> currentMultiset = HashMultiset.create(iterable);\n            for (T element : currentMultiset.elementSet()) {\n                int numberInUnionMultiset = unionMultiset.count(element);\n                int numberInCurrentMultiset = currentMultiset.count(element);\n                if (numberInUnionMultiset < numberInCurrentMultiset) {\n                    unionMultiset.setCount(element, numberInCurrentMultiset);\n                }\n            }\n        }\n        return unionMultiset;\n    }", "signature": "Multiset<T> union(Iterable<? extends Iterable<? extends T>> iterables)", "full_signature": "public static Multiset<T> union(Iterable<? extends Iterable<? extends T>> iterables)", "class_method_signature": "Multisets.union(Iterable<? extends Iterable<? extends T>> iterables)", "testcase": false, "constructor": false, "invocations": ["create", "get", "first", "rest", "create", "elementSet", "count", "count", "setCount"]}, "repository": {"repo_id": 2505794, "url": "https://github.com/javafunk/funk", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 33, "size": 13785, "license": "licensed"}}