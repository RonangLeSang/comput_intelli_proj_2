{"test_class": {"identifier": "SetsTest", "superclass": "", "interfaces": "", "fields": [], "file": "funk-core/src/test/java/org/javafunk/funk/SetsTest.java"}, "test_case": {"identifier": "shouldReturnTheInputSetForTheSetDifferenceOfASingleSet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnTheInputSetForTheSetDifferenceOfASingleSet() throws Exception {\n        //Given\n        Iterable<String> firstIterable = setWith(\"a\", \"b\");\n        Iterable<Iterable<String>> singleIterable = iterableWith(firstIterable);\n\n        //When\n        Set<String> difference = Sets.difference(singleIterable);\n\n        // Then\n        assertThat(difference, is(firstIterable));\n    }", "signature": "void shouldReturnTheInputSetForTheSetDifferenceOfASingleSet()", "full_signature": "@Test public void shouldReturnTheInputSetForTheSetDifferenceOfASingleSet()", "class_method_signature": "SetsTest.shouldReturnTheInputSetForTheSetDifferenceOfASingleSet()", "testcase": true, "constructor": false, "invocations": ["setWith", "iterableWith", "difference", "assertThat", "is"]}, "focal_class": {"identifier": "Sets", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Sets", "parameters": "()", "modifiers": "private", "return": "", "signature": " Sets()", "full_signature": "private  Sets()", "class_method_signature": "Sets.Sets()", "testcase": false, "constructor": true}, {"identifier": "union", "parameters": "(Iterable<? extends Iterable<? extends T>> iterables)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> union(Iterable<? extends Iterable<? extends T>> iterables)", "full_signature": "public static Set<T> union(Iterable<? extends Iterable<? extends T>> iterables)", "class_method_signature": "Sets.union(Iterable<? extends Iterable<? extends T>> iterables)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(Iterable<? extends Iterable<? extends T>> iterables)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> intersection(Iterable<? extends Iterable<? extends T>> iterables)", "full_signature": "public static Set<T> intersection(Iterable<? extends Iterable<? extends T>> iterables)", "class_method_signature": "Sets.intersection(Iterable<? extends Iterable<? extends T>> iterables)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(Iterable<? extends Iterable<? extends T>> iterables)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> difference(Iterable<? extends Iterable<? extends T>> iterables)", "full_signature": "public static Set<T> difference(Iterable<? extends Iterable<? extends T>> iterables)", "class_method_signature": "Sets.difference(Iterable<? extends Iterable<? extends T>> iterables)", "testcase": false, "constructor": false}, {"identifier": "symmetricDifference", "parameters": "(Iterable<? extends Iterable<? extends T>> iterables)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> symmetricDifference(Iterable<? extends Iterable<? extends T>> iterables)", "full_signature": "public static Set<T> symmetricDifference(Iterable<? extends Iterable<? extends T>> iterables)", "class_method_signature": "Sets.symmetricDifference(Iterable<? extends Iterable<? extends T>> iterables)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "full_signature": "public static Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "class_method_signature": "Sets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "full_signature": "public static Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "class_method_signature": "Sets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "full_signature": "public static Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "class_method_signature": "Sets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "full_signature": "public static Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "class_method_signature": "Sets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "full_signature": "public static Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "class_method_signature": "Sets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "full_signature": "public static Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "class_method_signature": "Sets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "full_signature": "public static Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "class_method_signature": "Sets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "full_signature": "public static Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "class_method_signature": "Sets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "full_signature": "public static Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "class_method_signature": "Sets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "full_signature": "public static Set<T> union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "class_method_signature": "Sets.union(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "full_signature": "public static Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "class_method_signature": "Sets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "full_signature": "public static Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "class_method_signature": "Sets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "full_signature": "public static Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "class_method_signature": "Sets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "full_signature": "public static Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "class_method_signature": "Sets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "full_signature": "public static Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "class_method_signature": "Sets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "full_signature": "public static Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "class_method_signature": "Sets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "full_signature": "public static Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "class_method_signature": "Sets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "full_signature": "public static Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "class_method_signature": "Sets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "full_signature": "public static Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "class_method_signature": "Sets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "full_signature": "public static Set<T> intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "class_method_signature": "Sets.intersection(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "full_signature": "public static Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "class_method_signature": "Sets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "full_signature": "public static Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "class_method_signature": "Sets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "full_signature": "public static Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "class_method_signature": "Sets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "full_signature": "public static Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "class_method_signature": "Sets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "full_signature": "public static Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "class_method_signature": "Sets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "full_signature": "public static Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "class_method_signature": "Sets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "full_signature": "public static Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "class_method_signature": "Sets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "full_signature": "public static Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "class_method_signature": "Sets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "full_signature": "public static Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "class_method_signature": "Sets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "testcase": false, "constructor": false}, {"identifier": "difference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "full_signature": "public static Set<T> difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "class_method_signature": "Sets.difference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "testcase": false, "constructor": false}, {"identifier": "symmetricDifference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "full_signature": "public static Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "class_method_signature": "Sets.symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2)", "testcase": false, "constructor": false}, {"identifier": "symmetricDifference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "full_signature": "public static Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "class_method_signature": "Sets.symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3)", "testcase": false, "constructor": false}, {"identifier": "symmetricDifference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "full_signature": "public static Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "class_method_signature": "Sets.symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4)", "testcase": false, "constructor": false}, {"identifier": "symmetricDifference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "full_signature": "public static Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "class_method_signature": "Sets.symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5)", "testcase": false, "constructor": false}, {"identifier": "symmetricDifference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "full_signature": "public static Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "class_method_signature": "Sets.symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6)", "testcase": false, "constructor": false}, {"identifier": "symmetricDifference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "full_signature": "public static Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "class_method_signature": "Sets.symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7)", "testcase": false, "constructor": false}, {"identifier": "symmetricDifference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "full_signature": "public static Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "class_method_signature": "Sets.symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8)", "testcase": false, "constructor": false}, {"identifier": "symmetricDifference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "full_signature": "public static Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "class_method_signature": "Sets.symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9)", "testcase": false, "constructor": false}, {"identifier": "symmetricDifference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "full_signature": "public static Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "class_method_signature": "Sets.symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10)", "testcase": false, "constructor": false}, {"identifier": "symmetricDifference", "parameters": "(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "full_signature": "public static Set<T> symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "class_method_signature": "Sets.symmetricDifference(\n            Iterable<? extends T> i1, Iterable<? extends T> i2, Iterable<? extends T> i3, Iterable<? extends T> i4,\n            Iterable<? extends T> i5, Iterable<? extends T> i6, Iterable<? extends T> i7, Iterable<? extends T> i8,\n            Iterable<? extends T> i9, Iterable<? extends T> i10, Iterable<? extends T>... i11on)", "testcase": false, "constructor": false}], "file": "funk-core/src/main/java/org/javafunk/funk/Sets.java"}, "focal_method": {"identifier": "difference", "parameters": "(Iterable<? extends Iterable<? extends T>> iterables)", "modifiers": "public static", "return": "Set<T>", "body": "public static <T> Set<T> difference(Iterable<? extends Iterable<? extends T>> iterables) {\n        List<Iterable<? extends T>> arguments = listFrom(iterables);\n        if (arguments.isEmpty()) {\n            return new HashSet<T>();\n        } else {\n            Set<T> differenceSet = setBuilderFrom(first(arguments).get()).build(HashSet.class);\n            differenceSet.removeAll(union(rest(arguments)));\n            return differenceSet;\n        }\n    }", "signature": "Set<T> difference(Iterable<? extends Iterable<? extends T>> iterables)", "full_signature": "public static Set<T> difference(Iterable<? extends Iterable<? extends T>> iterables)", "class_method_signature": "Sets.difference(Iterable<? extends Iterable<? extends T>> iterables)", "testcase": false, "constructor": false, "invocations": ["listFrom", "isEmpty", "build", "setBuilderFrom", "get", "first", "removeAll", "union", "rest"]}, "repository": {"repo_id": 2505794, "url": "https://github.com/javafunk/funk", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 33, "size": 13785, "license": "licensed"}}