{"test_class": {"identifier": "StringsTest", "superclass": "", "interfaces": "", "fields": [], "file": "funk-core/src/test/java/org/javafunk/funk/StringsTest.java"}, "test_case": {"identifier": "convertsBigDecimalToAlternativeIfNullForToStringOrEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void convertsBigDecimalToAlternativeIfNullForToStringOrEmpty() {\n        // Given\n        BigDecimal value = null;\n\n        // When\n        String result = Strings.toStringOrEmpty(value);\n\n        // Then\n        assertThat(result, is(\"\"));\n    }", "signature": "void convertsBigDecimalToAlternativeIfNullForToStringOrEmpty()", "full_signature": "@Test public void convertsBigDecimalToAlternativeIfNullForToStringOrEmpty()", "class_method_signature": "StringsTest.convertsBigDecimalToAlternativeIfNullForToStringOrEmpty()", "testcase": true, "constructor": false, "invocations": ["toStringOrEmpty", "assertThat", "is"]}, "focal_class": {"identifier": "Strings", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Strings", "parameters": "()", "modifiers": "private", "return": "", "signature": " Strings()", "full_signature": "private  Strings()", "class_method_signature": "Strings.Strings()", "testcase": false, "constructor": true}, {"identifier": "join", "parameters": "(Iterable<? extends T> objects, String separator)", "modifiers": "public static", "return": "String", "signature": "String join(Iterable<? extends T> objects, String separator)", "full_signature": "public static String join(Iterable<? extends T> objects, String separator)", "class_method_signature": "Strings.join(Iterable<? extends T> objects, String separator)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(Iterable<? extends T> objects)", "modifiers": "public static", "return": "String", "signature": "String join(Iterable<? extends T> objects)", "full_signature": "public static String join(Iterable<? extends T> objects)", "class_method_signature": "Strings.join(Iterable<? extends T> objects)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(T o1, T o2)", "modifiers": "public static", "return": "String", "signature": "String join(T o1, T o2)", "full_signature": "public static String join(T o1, T o2)", "class_method_signature": "Strings.join(T o1, T o2)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(T o1, T o2, T o3)", "modifiers": "public static", "return": "String", "signature": "String join(T o1, T o2, T o3)", "full_signature": "public static String join(T o1, T o2, T o3)", "class_method_signature": "Strings.join(T o1, T o2, T o3)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(T o1, T o2, T o3, T o4)", "modifiers": "public static", "return": "String", "signature": "String join(T o1, T o2, T o3, T o4)", "full_signature": "public static String join(T o1, T o2, T o3, T o4)", "class_method_signature": "Strings.join(T o1, T o2, T o3, T o4)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(T o1, T o2, T o3, T o4, T o5)", "modifiers": "public static", "return": "String", "signature": "String join(T o1, T o2, T o3, T o4, T o5)", "full_signature": "public static String join(T o1, T o2, T o3, T o4, T o5)", "class_method_signature": "Strings.join(T o1, T o2, T o3, T o4, T o5)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(T o1, T o2, T o3, T o4, T o5, T o6)", "modifiers": "public static", "return": "String", "signature": "String join(T o1, T o2, T o3, T o4, T o5, T o6)", "full_signature": "public static String join(T o1, T o2, T o3, T o4, T o5, T o6)", "class_method_signature": "Strings.join(T o1, T o2, T o3, T o4, T o5, T o6)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(T o1, T o2, T o3, T o4, T o5, T o6, T o7)", "modifiers": "public static", "return": "String", "signature": "String join(T o1, T o2, T o3, T o4, T o5, T o6, T o7)", "full_signature": "public static String join(T o1, T o2, T o3, T o4, T o5, T o6, T o7)", "class_method_signature": "Strings.join(T o1, T o2, T o3, T o4, T o5, T o6, T o7)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(T o1, T o2, T o3, T o4, T o5, T o6, T o7, T o8)", "modifiers": "public static", "return": "String", "signature": "String join(T o1, T o2, T o3, T o4, T o5, T o6, T o7, T o8)", "full_signature": "public static String join(T o1, T o2, T o3, T o4, T o5, T o6, T o7, T o8)", "class_method_signature": "Strings.join(T o1, T o2, T o3, T o4, T o5, T o6, T o7, T o8)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(T o1, T o2, T o3, T o4, T o5, T o6, T o7, T o8, T o9)", "modifiers": "public static", "return": "String", "signature": "String join(T o1, T o2, T o3, T o4, T o5, T o6, T o7, T o8, T o9)", "full_signature": "public static String join(T o1, T o2, T o3, T o4, T o5, T o6, T o7, T o8, T o9)", "class_method_signature": "Strings.join(T o1, T o2, T o3, T o4, T o5, T o6, T o7, T o8, T o9)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(T o1, T o2, T o3, T o4, T o5, T o6, T o7, T o8, T o9, T o10)", "modifiers": "public static", "return": "String", "signature": "String join(T o1, T o2, T o3, T o4, T o5, T o6, T o7, T o8, T o9, T o10)", "full_signature": "public static String join(T o1, T o2, T o3, T o4, T o5, T o6, T o7, T o8, T o9, T o10)", "class_method_signature": "Strings.join(T o1, T o2, T o3, T o4, T o5, T o6, T o7, T o8, T o9, T o10)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(T o1, T o2, T o3, T o4, T o5, T o6, T o7, T o8, T o9, T o10, T... o11on)", "modifiers": "public static", "return": "String", "signature": "String join(T o1, T o2, T o3, T o4, T o5, T o6, T o7, T o8, T o9, T o10, T... o11on)", "full_signature": "public static String join(T o1, T o2, T o3, T o4, T o5, T o6, T o7, T o8, T o9, T o10, T... o11on)", "class_method_signature": "Strings.join(T o1, T o2, T o3, T o4, T o5, T o6, T o7, T o8, T o9, T o10, T... o11on)", "testcase": false, "constructor": false}, {"identifier": "toStringOrNull", "parameters": "(Object value)", "modifiers": "public static", "return": "String", "signature": "String toStringOrNull(Object value)", "full_signature": "public static String toStringOrNull(Object value)", "class_method_signature": "Strings.toStringOrNull(Object value)", "testcase": false, "constructor": false}, {"identifier": "toStringOrNull", "parameters": "(BigDecimal value)", "modifiers": "public static", "return": "String", "signature": "String toStringOrNull(BigDecimal value)", "full_signature": "public static String toStringOrNull(BigDecimal value)", "class_method_signature": "Strings.toStringOrNull(BigDecimal value)", "testcase": false, "constructor": false}, {"identifier": "toStringOrEmpty", "parameters": "(Object value)", "modifiers": "public static", "return": "String", "signature": "String toStringOrEmpty(Object value)", "full_signature": "public static String toStringOrEmpty(Object value)", "class_method_signature": "Strings.toStringOrEmpty(Object value)", "testcase": false, "constructor": false}, {"identifier": "toStringOrEmpty", "parameters": "(BigDecimal value)", "modifiers": "public static", "return": "String", "signature": "String toStringOrEmpty(BigDecimal value)", "full_signature": "public static String toStringOrEmpty(BigDecimal value)", "class_method_signature": "Strings.toStringOrEmpty(BigDecimal value)", "testcase": false, "constructor": false}, {"identifier": "toStringOr", "parameters": "(String alternative, Object value)", "modifiers": "public static", "return": "String", "signature": "String toStringOr(String alternative, Object value)", "full_signature": "public static String toStringOr(String alternative, Object value)", "class_method_signature": "Strings.toStringOr(String alternative, Object value)", "testcase": false, "constructor": false}, {"identifier": "toStringOr", "parameters": "(String alternative, BigDecimal value)", "modifiers": "public static", "return": "String", "signature": "String toStringOr(String alternative, BigDecimal value)", "full_signature": "public static String toStringOr(String alternative, BigDecimal value)", "class_method_signature": "Strings.toStringOr(String alternative, BigDecimal value)", "testcase": false, "constructor": false}, {"identifier": "isNullOrBlank", "parameters": "(String value)", "modifiers": "public static", "return": "boolean", "signature": "boolean isNullOrBlank(String value)", "full_signature": "public static boolean isNullOrBlank(String value)", "class_method_signature": "Strings.isNullOrBlank(String value)", "testcase": false, "constructor": false}, {"identifier": "whereNullOrBlank", "parameters": "()", "modifiers": "public static", "return": "Predicate<String>", "signature": "Predicate<String> whereNullOrBlank()", "full_signature": "public static Predicate<String> whereNullOrBlank()", "class_method_signature": "Strings.whereNullOrBlank()", "testcase": false, "constructor": false}, {"identifier": "whereBlank", "parameters": "()", "modifiers": "public static", "return": "Predicate<String>", "signature": "Predicate<String> whereBlank()", "full_signature": "public static Predicate<String> whereBlank()", "class_method_signature": "Strings.whereBlank()", "testcase": false, "constructor": false}, {"identifier": "toStringOr", "parameters": "(String alternative, T value, Mapper<T, String> toStringMapper)", "modifiers": "private static", "return": "String", "signature": "String toStringOr(String alternative, T value, Mapper<T, String> toStringMapper)", "full_signature": "private static String toStringOr(String alternative, T value, Mapper<T, String> toStringMapper)", "class_method_signature": "Strings.toStringOr(String alternative, T value, Mapper<T, String> toStringMapper)", "testcase": false, "constructor": false}], "file": "funk-core/src/main/java/org/javafunk/funk/Strings.java"}, "focal_method": {"identifier": "toStringOrEmpty", "parameters": "(Object value)", "modifiers": "public static", "return": "String", "body": "public static String toStringOrEmpty(Object value) {\n        return toStringOr(\"\", value);\n    }", "signature": "String toStringOrEmpty(Object value)", "full_signature": "public static String toStringOrEmpty(Object value)", "class_method_signature": "Strings.toStringOrEmpty(Object value)", "testcase": false, "constructor": false, "invocations": ["toStringOr"]}, "repository": {"repo_id": 2505794, "url": "https://github.com/javafunk/funk", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 33, "size": 13785, "license": "licensed"}}