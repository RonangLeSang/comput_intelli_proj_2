{"test_class": {"identifier": "CommandTreeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "CommandTree commandTree;", "modifier": "", "type": "CommandTree", "declarator": "commandTree", "var_name": "commandTree"}], "file": "pluginbase-core/commands/src/test/java/pluginbase/command/CommandTreeTest.java"}, "test_case": {"identifier": "test2ArgChildUnusedParentCommandWith2ArgSecond", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test2ArgChildUnusedParentCommandWith2ArgSecond() throws Exception {\n        String[] args = commandTree.joinArgsForKnownCommands(new String[] {\"unused\", \"second\"});\n        assertArrayEquals(new String[] {\"unused second\"}, args);\n    }", "signature": "void test2ArgChildUnusedParentCommandWith2ArgSecond()", "full_signature": "@Test public void test2ArgChildUnusedParentCommandWith2ArgSecond()", "class_method_signature": "CommandTreeTest.test2ArgChildUnusedParentCommandWith2ArgSecond()", "testcase": true, "constructor": false, "invocations": ["joinArgsForKnownCommands", "assertArrayEquals"]}, "focal_class": {"identifier": "CommandTree", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Nullable\n    private String name;", "modifier": "@Nullable\n    private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final Map<String, CommandTree> treeMap = new HashMap<String, CommandTree>();", "modifier": "private final", "type": "Map<String, CommandTree>", "declarator": "treeMap = new HashMap<String, CommandTree>()", "var_name": "treeMap"}, {"original_string": "private final Map<String, CommandKey> keyMap = new HashMap<String, CommandKey>();", "modifier": "private final", "type": "Map<String, CommandKey>", "declarator": "keyMap = new HashMap<String, CommandKey>()", "var_name": "keyMap"}], "methods": [{"identifier": "CommandTree", "parameters": "()", "modifiers": "public", "return": "", "signature": " CommandTree()", "full_signature": "public  CommandTree()", "class_method_signature": "CommandTree.CommandTree()", "testcase": false, "constructor": true}, {"identifier": "CommandTree", "parameters": "(@NotNull CommandTree parent, @NotNull String name)", "modifiers": "private", "return": "", "signature": " CommandTree(@NotNull CommandTree parent, @NotNull String name)", "full_signature": "private  CommandTree(@NotNull CommandTree parent, @NotNull String name)", "class_method_signature": "CommandTree.CommandTree(@NotNull CommandTree parent, @NotNull String name)", "testcase": false, "constructor": true}, {"identifier": "registerKeysForAlias", "parameters": "(@NotNull String alias)", "modifiers": "public", "return": "void", "signature": "void registerKeysForAlias(@NotNull String alias)", "full_signature": "public void registerKeysForAlias(@NotNull String alias)", "class_method_signature": "CommandTree.registerKeysForAlias(@NotNull String alias)", "testcase": false, "constructor": false}, {"identifier": "registerKeysForArgs", "parameters": "(String[] args)", "modifiers": "private", "return": "void", "signature": "void registerKeysForArgs(String[] args)", "full_signature": "private void registerKeysForArgs(String[] args)", "class_method_signature": "CommandTree.registerKeysForArgs(String[] args)", "testcase": false, "constructor": false}, {"identifier": "getCommandKeyName", "parameters": "(String arg)", "modifiers": "private", "return": "String", "signature": "String getCommandKeyName(String arg)", "full_signature": "private String getCommandKeyName(String arg)", "class_method_signature": "CommandTree.getCommandKeyName(String arg)", "testcase": false, "constructor": false}, {"identifier": "removeInitialArg", "parameters": "(String[] args)", "modifiers": "", "return": "String[]", "signature": "String[] removeInitialArg(String[] args)", "full_signature": " String[] removeInitialArg(String[] args)", "class_method_signature": "CommandTree.removeInitialArg(String[] args)", "testcase": false, "constructor": false}, {"identifier": "joinArgsForKnownCommands", "parameters": "(String[] args)", "modifiers": "public", "return": "String[]", "signature": "String[] joinArgsForKnownCommands(String[] args)", "full_signature": "public String[] joinArgsForKnownCommands(String[] args)", "class_method_signature": "CommandTree.joinArgsForKnownCommands(String[] args)", "testcase": false, "constructor": false}, {"identifier": "getTreeAt", "parameters": "(String path)", "modifiers": "public", "return": "CommandTree", "signature": "CommandTree getTreeAt(String path)", "full_signature": "public CommandTree getTreeAt(String path)", "class_method_signature": "CommandTree.getTreeAt(String path)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "CommandTree.toString()", "testcase": false, "constructor": false}, {"identifier": "getSubCommandSet", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getSubCommandSet()", "full_signature": "public Set<String> getSubCommandSet()", "class_method_signature": "CommandTree.getSubCommandSet()", "testcase": false, "constructor": false}, {"identifier": "getSubDirectories", "parameters": "()", "modifiers": "", "return": "Set<String>", "signature": "Set<String> getSubDirectories()", "full_signature": " Set<String> getSubDirectories()", "class_method_signature": "CommandTree.getSubDirectories()", "testcase": false, "constructor": false}, {"identifier": "getSubCommands", "parameters": "()", "modifiers": "", "return": "Set<String>", "signature": "Set<String> getSubCommands()", "full_signature": " Set<String> getSubCommands()", "class_method_signature": "CommandTree.getSubCommands()", "testcase": false, "constructor": false}], "file": "pluginbase-core/commands/src/main/java/pluginbase/command/CommandTree.java"}, "focal_method": {"identifier": "joinArgsForKnownCommands", "parameters": "(String[] args)", "modifiers": "public", "return": "String[]", "body": "public String[] joinArgsForKnownCommands(String[] args) {\n        CommandTree tree = this;\n        CommandTree lastTree = null;\n        CommandKey key = null;\n        int commandArgLength = 0;\n        for (int i = 0; i < args.length; i++) {\n            String lowerName = args[i].toLowerCase();\n            key = tree.keyMap.get(lowerName);\n            tree = tree.treeMap.get(lowerName);\n            if (tree == null) {\n                break;\n            }\n            commandArgLength++;\n            lastTree = tree;\n        }\n        String name = null;\n        if (key != null) {\n            if (tree == null || tree.name == null || !tree.name.equals(key.getName())) {\n                commandArgLength++;\n            }\n            name = key.getName();\n        } else if (lastTree != null) {\n            //commandArgLength--;\n            name = lastTree.name;\n        }\n        if (name != null) {\n            String[] newArgs = new String[args.length - (commandArgLength - 1)];\n            newArgs[0] = name;\n            if (args.length > 1) {\n                System.arraycopy(args, commandArgLength, newArgs, 1, args.length - commandArgLength);\n            }\n            return newArgs;\n        } else {\n            return args;\n        }\n    }", "signature": "String[] joinArgsForKnownCommands(String[] args)", "full_signature": "public String[] joinArgsForKnownCommands(String[] args)", "class_method_signature": "CommandTree.joinArgsForKnownCommands(String[] args)", "testcase": false, "constructor": false, "invocations": ["toLowerCase", "get", "get", "equals", "getName", "getName", "arraycopy"]}, "repository": {"repo_id": 3536819, "url": "https://github.com/dumptruckman/PluginBase", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 9, "size": 2772, "license": "licensed"}}