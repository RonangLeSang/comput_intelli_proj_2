{"test_class": {"identifier": "PropertiesWrapperTest", "superclass": "extends TestBase", "interfaces": "", "fields": [{"original_string": "Comprehensive comprehensive;", "modifier": "", "type": "Comprehensive", "declarator": "comprehensive", "var_name": "comprehensive"}], "file": "pluginbase-core/serializable-config/src/test/java/pluginbase/config/properties/PropertiesWrapperTest.java"}, "test_case": {"identifier": "testGetPropertyFakeAlias", "parameters": "()", "modifiers": "@Test(expected = NoSuchFieldException.class) public", "return": "void", "body": "@Test(expected = NoSuchFieldException.class)\n    public void testGetPropertyFakeAlias() throws Exception {\n        comprehensive.getProperty(\"bname\");\n    }", "signature": "void testGetPropertyFakeAlias()", "full_signature": "@Test(expected = NoSuchFieldException.class) public void testGetPropertyFakeAlias()", "class_method_signature": "PropertiesWrapperTest.testGetPropertyFakeAlias()", "testcase": true, "constructor": false, "invocations": ["getProperty"]}, "focal_class": {"identifier": "PropertiesWrapper", "superclass": "", "interfaces": "implements Properties", "fields": [{"original_string": "private static final transient String SEPARATOR = \".\";", "modifier": "private static final transient", "type": "String", "declarator": "SEPARATOR = \".\"", "var_name": "SEPARATOR"}, {"original_string": "private static final transient String SEPARATOR_REGEX = \"\\\\.\";", "modifier": "private static final transient", "type": "String", "declarator": "SEPARATOR_REGEX = \"\\\\.\"", "var_name": "SEPARATOR_REGEX"}, {"original_string": "@Immutable\n    @NotNull\n    private final transient Object object;", "modifier": "@Immutable\n    @NotNull\n    private final transient", "type": "Object", "declarator": "object", "var_name": "object"}], "methods": [{"identifier": "wrapObject", "parameters": "(@NotNull Object object)", "modifiers": "public static", "return": "Properties", "signature": "Properties wrapObject(@NotNull Object object)", "full_signature": "public static Properties wrapObject(@NotNull Object object)", "class_method_signature": "PropertiesWrapper.wrapObject(@NotNull Object object)", "testcase": false, "constructor": false}, {"identifier": "getAllPropertyNames", "parameters": "(Class clazz)", "modifiers": "public static", "return": "String[]", "signature": "String[] getAllPropertyNames(Class clazz)", "full_signature": "public static String[] getAllPropertyNames(Class clazz)", "class_method_signature": "PropertiesWrapper.getAllPropertyNames(Class clazz)", "testcase": false, "constructor": false}, {"identifier": "PropertiesWrapper", "parameters": "(@NotNull Object object)", "modifiers": "private", "return": "", "signature": " PropertiesWrapper(@NotNull Object object)", "full_signature": "private  PropertiesWrapper(@NotNull Object object)", "class_method_signature": "PropertiesWrapper.PropertiesWrapper(@NotNull Object object)", "testcase": false, "constructor": true}, {"identifier": "PropertiesWrapper", "parameters": "()", "modifiers": "protected", "return": "", "signature": " PropertiesWrapper()", "full_signature": "protected  PropertiesWrapper()", "class_method_signature": "PropertiesWrapper.PropertiesWrapper()", "testcase": false, "constructor": true}, {"identifier": "getAllPropertyNames", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "String[]", "signature": "String[] getAllPropertyNames()", "full_signature": "@NotNull @Override public String[] getAllPropertyNames()", "class_method_signature": "PropertiesWrapper.getAllPropertyNames()", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(@NotNull String name)", "modifiers": "@Nullable @Override public", "return": "Object", "signature": "Object getProperty(@NotNull String name)", "full_signature": "@Nullable @Override public Object getProperty(@NotNull String name)", "class_method_signature": "PropertiesWrapper.getProperty(@NotNull String name)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(@NotNull String name, @NotNull String value)", "modifiers": "@Override public", "return": "void", "signature": "void setProperty(@NotNull String name, @NotNull String value)", "full_signature": "@Override public void setProperty(@NotNull String name, @NotNull String value)", "class_method_signature": "PropertiesWrapper.setProperty(@NotNull String name, @NotNull String value)", "testcase": false, "constructor": false}, {"identifier": "addProperty", "parameters": "(@NotNull String name, @NotNull String value)", "modifiers": "@Override public", "return": "void", "signature": "void addProperty(@NotNull String name, @NotNull String value)", "full_signature": "@Override public void addProperty(@NotNull String name, @NotNull String value)", "class_method_signature": "PropertiesWrapper.addProperty(@NotNull String name, @NotNull String value)", "testcase": false, "constructor": false}, {"identifier": "removeProperty", "parameters": "(@NotNull String name, @NotNull String value)", "modifiers": "@Override public", "return": "void", "signature": "void removeProperty(@NotNull String name, @NotNull String value)", "full_signature": "@Override public void removeProperty(@NotNull String name, @NotNull String value)", "class_method_signature": "PropertiesWrapper.removeProperty(@NotNull String name, @NotNull String value)", "testcase": false, "constructor": false}, {"identifier": "clearProperty", "parameters": "(@NotNull String name, @Nullable String value)", "modifiers": "@Override public", "return": "void", "signature": "void clearProperty(@NotNull String name, @Nullable String value)", "full_signature": "@Override public void clearProperty(@NotNull String name, @Nullable String value)", "class_method_signature": "PropertiesWrapper.clearProperty(@NotNull String name, @Nullable String value)", "testcase": false, "constructor": false}, {"identifier": "getPropertyUnchecked", "parameters": "(@NotNull String name)", "modifiers": "@Nullable @Override public", "return": "Object", "signature": "Object getPropertyUnchecked(@NotNull String name)", "full_signature": "@Nullable @Override public Object getPropertyUnchecked(@NotNull String name)", "class_method_signature": "PropertiesWrapper.getPropertyUnchecked(@NotNull String name)", "testcase": false, "constructor": false}, {"identifier": "setPropertyUnchecked", "parameters": "(@NotNull String name, @NotNull String value)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setPropertyUnchecked(@NotNull String name, @NotNull String value)", "full_signature": "@Override public boolean setPropertyUnchecked(@NotNull String name, @NotNull String value)", "class_method_signature": "PropertiesWrapper.setPropertyUnchecked(@NotNull String name, @NotNull String value)", "testcase": false, "constructor": false}, {"identifier": "addPropertyUnchecked", "parameters": "(@NotNull String name, @NotNull String value)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addPropertyUnchecked(@NotNull String name, @NotNull String value)", "full_signature": "@Override public boolean addPropertyUnchecked(@NotNull String name, @NotNull String value)", "class_method_signature": "PropertiesWrapper.addPropertyUnchecked(@NotNull String name, @NotNull String value)", "testcase": false, "constructor": false}, {"identifier": "removePropertyUnchecked", "parameters": "(@NotNull String name, @NotNull String value)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removePropertyUnchecked(@NotNull String name, @NotNull String value)", "full_signature": "@Override public boolean removePropertyUnchecked(@NotNull String name, @NotNull String value)", "class_method_signature": "PropertiesWrapper.removePropertyUnchecked(@NotNull String name, @NotNull String value)", "testcase": false, "constructor": false}, {"identifier": "clearPropertyUnchecked", "parameters": "(@NotNull String name, @Nullable String value)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean clearPropertyUnchecked(@NotNull String name, @Nullable String value)", "full_signature": "@Override public boolean clearPropertyUnchecked(@NotNull String name, @Nullable String value)", "class_method_signature": "PropertiesWrapper.clearPropertyUnchecked(@NotNull String name, @Nullable String value)", "testcase": false, "constructor": false}, {"identifier": "getFieldInstance", "parameters": "(@NotNull String name)", "modifiers": "private", "return": "FieldInstance", "signature": "FieldInstance getFieldInstance(@NotNull String name)", "full_signature": "private FieldInstance getFieldInstance(@NotNull String name)", "class_method_signature": "PropertiesWrapper.getFieldInstance(@NotNull String name)", "testcase": false, "constructor": false}, {"identifier": "getFieldInstanceForModify", "parameters": "(@NotNull String name)", "modifiers": "private", "return": "FieldInstance", "signature": "FieldInstance getFieldInstanceForModify(@NotNull String name)", "full_signature": "private FieldInstance getFieldInstanceForModify(@NotNull String name)", "class_method_signature": "PropertiesWrapper.getFieldInstanceForModify(@NotNull String name)", "testcase": false, "constructor": false}], "file": "pluginbase-core/serializable-config/src/main/java/pluginbase/config/properties/PropertiesWrapper.java"}, "focal_method": {"identifier": "getProperty", "parameters": "(@NotNull String name)", "modifiers": "@Nullable @Override public", "return": "Object", "body": "@Nullable\n    @Override\n    public Object getProperty(@NotNull String name) throws NoSuchFieldException {\n        FieldInstance field = getFieldInstance(name);\n        return field.getValue();\n    }", "signature": "Object getProperty(@NotNull String name)", "full_signature": "@Nullable @Override public Object getProperty(@NotNull String name)", "class_method_signature": "PropertiesWrapper.getProperty(@NotNull String name)", "testcase": false, "constructor": false, "invocations": ["getFieldInstance", "getValue"]}, "repository": {"repo_id": 3536819, "url": "https://github.com/dumptruckman/PluginBase", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 9, "size": 2772, "license": "licensed"}}