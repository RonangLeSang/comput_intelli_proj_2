{"test_class": {"identifier": "NativeLibraryManagerTest", "superclass": "", "interfaces": "", "fields": [], "file": "tfs/src/test/java/hudson/plugins/tfs/model/NativeLibraryManagerTest.java"}, "test_case": {"identifier": "extractFiles", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void extractFiles() throws Exception {\n        final NativeLibraryExtractor extractor = mock(NativeLibraryExtractor.class);\n\n        NativeLibraryManager.extractFiles(extractor);\n\n        verify(extractor, times(82)).extractFile(isA(String.class), Matchers.<String>anyObject(), isA(String.class));\n    }", "signature": "void extractFiles()", "full_signature": "@Test public void extractFiles()", "class_method_signature": "NativeLibraryManagerTest.extractFiles()", "testcase": true, "constructor": false, "invocations": ["mock", "extractFiles", "extractFile", "verify", "times", "isA", "anyObject", "isA"]}, "focal_class": {"identifier": "NativeLibraryManager", "superclass": "", "interfaces": "implements NativeLibraryExtractor", "fields": [{"original_string": "private static final String VENDOR_NAME = \"Microsoft\";", "modifier": "private static final", "type": "String", "declarator": "VENDOR_NAME = \"Microsoft\"", "var_name": "VENDOR_NAME"}, {"original_string": "private static final String TFS_SDK = \"TFS_SDK\";", "modifier": "private static final", "type": "String", "declarator": "TFS_SDK = \"TFS_SDK\"", "var_name": "TFS_SDK"}, {"original_string": "private static final String VERSION = \"14.0.1\";", "modifier": "private static final", "type": "String", "declarator": "VERSION = \"14.0.1\"", "var_name": "VERSION"}, {"original_string": "private static final String nativeFolderPropertyName = \"com.microsoft.tfs.jni.native.base-directory\";", "modifier": "private static final", "type": "String", "declarator": "nativeFolderPropertyName = \"com.microsoft.tfs.jni.native.base-directory\"", "var_name": "nativeFolderPropertyName"}, {"original_string": "private static final String NATIVE = \"native\";", "modifier": "private static final", "type": "String", "declarator": "NATIVE = \"native\"", "var_name": "NATIVE"}, {"original_string": "private static final Class<NativeLibraryManager> metaClass = NativeLibraryManager.class;", "modifier": "private static final", "type": "Class<NativeLibraryManager>", "declarator": "metaClass = NativeLibraryManager.class", "var_name": "metaClass"}, {"original_string": "private static final TreeMap<String, TreeMap<String, List<String>>> NATIVE_LIBRARIES =\n            new TreeMap<String, TreeMap<String, List<String>>>();", "modifier": "private static final", "type": "TreeMap<String, TreeMap<String, List<String>>>", "declarator": "NATIVE_LIBRARIES =\n            new TreeMap<String, TreeMap<String, List<String>>>()", "var_name": "NATIVE_LIBRARIES"}, {"original_string": "private final PersistenceStore store;", "modifier": "private final", "type": "PersistenceStore", "declarator": "store", "var_name": "store"}], "methods": [{"identifier": "NativeLibraryManager", "parameters": "(final PersistenceStore store)", "modifiers": "public", "return": "", "signature": " NativeLibraryManager(final PersistenceStore store)", "full_signature": "public  NativeLibraryManager(final PersistenceStore store)", "class_method_signature": "NativeLibraryManager.NativeLibraryManager(final PersistenceStore store)", "testcase": false, "constructor": true}, {"identifier": "extractFiles", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void extractFiles()", "full_signature": "public void extractFiles()", "class_method_signature": "NativeLibraryManager.extractFiles()", "testcase": false, "constructor": false}, {"identifier": "extractFiles", "parameters": "(final NativeLibraryExtractor extractor)", "modifiers": "static", "return": "void", "signature": "void extractFiles(final NativeLibraryExtractor extractor)", "full_signature": "static void extractFiles(final NativeLibraryExtractor extractor)", "class_method_signature": "NativeLibraryManager.extractFiles(final NativeLibraryExtractor extractor)", "testcase": false, "constructor": false}, {"identifier": "extractFile", "parameters": "(final String operatingSystem, final String architecture, final String fileName)", "modifiers": "public", "return": "void", "signature": "void extractFile(final String operatingSystem, final String architecture, final String fileName)", "full_signature": "public void extractFile(final String operatingSystem, final String architecture, final String fileName)", "class_method_signature": "NativeLibraryManager.extractFile(final String operatingSystem, final String architecture, final String fileName)", "testcase": false, "constructor": false}, {"identifier": "buildPathToNativeFile", "parameters": "(final String operatingSystem, final String architecture, final String fileName)", "modifiers": "static", "return": "String", "signature": "String buildPathToNativeFile(final String operatingSystem, final String architecture, final String fileName)", "full_signature": "static String buildPathToNativeFile(final String operatingSystem, final String architecture, final String fileName)", "class_method_signature": "NativeLibraryManager.buildPathToNativeFile(final String operatingSystem, final String architecture, final String fileName)", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "()", "modifiers": "public static synchronized", "return": "void", "signature": "void initialize()", "full_signature": "public static synchronized void initialize()", "class_method_signature": "NativeLibraryManager.initialize()", "testcase": false, "constructor": false}], "file": "tfs/src/main/java/hudson/plugins/tfs/model/NativeLibraryManager.java"}, "focal_method": {"identifier": "extractFiles", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void extractFiles() throws IOException {\n        // TODO: it would be great if we detected the current OS and architecture to extract only the needed files\n        extractFiles(this);\n    }", "signature": "void extractFiles()", "full_signature": "public void extractFiles()", "class_method_signature": "NativeLibraryManager.extractFiles()", "testcase": false, "constructor": false, "invocations": ["extractFiles"]}, "repository": {"repo_id": 1163806, "url": "https://github.com/jenkinsci/tfs-plugin", "language": "Java", "is_fork": false, "fork_count": 165, "stargazer_count": 129, "size": 60608, "license": "licensed"}}