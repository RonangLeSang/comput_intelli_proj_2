{"test_class": {"identifier": "TeamFoundationServerScmTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FilePath workspace;", "modifier": "private", "type": "FilePath", "declarator": "workspace", "var_name": "workspace"}], "file": "tfs/src/test/java/hudson/plugins/tfs/TeamFoundationServerScmTest.java"}, "test_case": {"identifier": "recordWorkspaceChangesetVersion", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void recordWorkspaceChangesetVersion() throws Exception {\n        final TeamFoundationServerScm scm = new TeamFoundationServerScm(\"serverUrl\", \"projectPath\", \"workspace\");\n        scm.setLocalPath(\"localPath\");\n        final AbstractBuild build = mock(AbstractBuild.class);\n        when(build.getTimestamp()).thenReturn(new GregorianCalendar(2015, 03, 28, 22, 04));\n        final BuildListener listener = null;\n        final Project project = mock(Project.class);\n        when(project.getRemoteChangesetVersion(isA(VersionSpec.class))).thenReturn(42);\n        final String projectPath = \"projectPath\";\n        final String singleVersionSpec = null;\n\n        final int actual = scm.recordWorkspaceChangesetVersion(build, listener, project, projectPath, singleVersionSpec);\n\n        Assert.assertEquals(42, actual);\n        final Map<String, String> env = new HashMap<String, String>();\n        scm.buildEnvVars(build, env);\n        assertEquals(\"42\", env.get(TeamFoundationServerScm.WORKSPACE_CHANGESET_ENV_STR));\n    }", "signature": "void recordWorkspaceChangesetVersion()", "full_signature": "@Test public void recordWorkspaceChangesetVersion()", "class_method_signature": "TeamFoundationServerScmTest.recordWorkspaceChangesetVersion()", "testcase": true, "constructor": false, "invocations": ["setLocalPath", "mock", "thenReturn", "when", "getTimestamp", "mock", "thenReturn", "when", "getRemoteChangesetVersion", "isA", "recordWorkspaceChangesetVersion", "assertEquals", "buildEnvVars", "assertEquals", "get"]}, "focal_class": {"identifier": "TeamFoundationServerScm", "superclass": "extends SCM", "interfaces": "", "fields": [{"original_string": "public static final String WORKSPACE_ENV_STR = \"TFS_WORKSPACE\";", "modifier": "public static final", "type": "String", "declarator": "WORKSPACE_ENV_STR = \"TFS_WORKSPACE\"", "var_name": "WORKSPACE_ENV_STR"}, {"original_string": "public static final String WORKFOLDER_ENV_STR = \"TFS_WORKFOLDER\";", "modifier": "public static final", "type": "String", "declarator": "WORKFOLDER_ENV_STR = \"TFS_WORKFOLDER\"", "var_name": "WORKFOLDER_ENV_STR"}, {"original_string": "public static final String PROJECTPATH_ENV_STR = \"TFS_PROJECTPATH\";", "modifier": "public static final", "type": "String", "declarator": "PROJECTPATH_ENV_STR = \"TFS_PROJECTPATH\"", "var_name": "PROJECTPATH_ENV_STR"}, {"original_string": "public static final String SERVERURL_ENV_STR = \"TFS_SERVERURL\";", "modifier": "public static final", "type": "String", "declarator": "SERVERURL_ENV_STR = \"TFS_SERVERURL\"", "var_name": "SERVERURL_ENV_STR"}, {"original_string": "public static final String USERNAME_ENV_STR = \"TFS_USERNAME\";", "modifier": "public static final", "type": "String", "declarator": "USERNAME_ENV_STR = \"TFS_USERNAME\"", "var_name": "USERNAME_ENV_STR"}, {"original_string": "public static final String WORKSPACE_CHANGESET_ENV_STR = \"TFS_CHANGESET\";", "modifier": "public static final", "type": "String", "declarator": "WORKSPACE_CHANGESET_ENV_STR = \"TFS_CHANGESET\"", "var_name": "WORKSPACE_CHANGESET_ENV_STR"}, {"original_string": "private static final String VERSION_SPEC = \"VERSION_SPEC\";", "modifier": "private static final", "type": "String", "declarator": "VERSION_SPEC = \"VERSION_SPEC\"", "var_name": "VERSION_SPEC"}, {"original_string": "private static final int RADIX_10 = 10;", "modifier": "private static final", "type": "int", "declarator": "RADIX_10 = 10", "var_name": "RADIX_10"}, {"original_string": "private final String serverUrl;", "modifier": "private final", "type": "String", "declarator": "serverUrl", "var_name": "serverUrl"}, {"original_string": "private final String projectPath;", "modifier": "private final", "type": "String", "declarator": "projectPath", "var_name": "projectPath"}, {"original_string": "private Collection<String> cloakedPaths;", "modifier": "private", "type": "Collection<String>", "declarator": "cloakedPaths", "var_name": "cloakedPaths"}, {"original_string": "private String localPath;", "modifier": "private", "type": "String", "declarator": "localPath", "var_name": "localPath"}, {"original_string": "private final String workspaceName;", "modifier": "private final", "type": "String", "declarator": "workspaceName", "var_name": "workspaceName"}, {"original_string": "@Deprecated private String userPassword;", "modifier": "@Deprecated private", "type": "String", "declarator": "userPassword", "var_name": "userPassword"}, {"original_string": "private Secret password;", "modifier": "private", "type": "Secret", "declarator": "password", "var_name": "password"}, {"original_string": "private String userName;", "modifier": "private", "type": "String", "declarator": "userName", "var_name": "userName"}, {"original_string": "private CredentialsConfigurer credentialsConfigurer;", "modifier": "private", "type": "CredentialsConfigurer", "declarator": "credentialsConfigurer", "var_name": "credentialsConfigurer"}, {"original_string": "private boolean useUpdate;", "modifier": "private", "type": "boolean", "declarator": "useUpdate", "var_name": "useUpdate"}, {"original_string": "private boolean useOverwrite;", "modifier": "private", "type": "boolean", "declarator": "useOverwrite", "var_name": "useOverwrite"}, {"original_string": "private String versionSpec;", "modifier": "private", "type": "String", "declarator": "versionSpec", "var_name": "versionSpec"}, {"original_string": "private TeamFoundationServerRepositoryBrowser repositoryBrowser;", "modifier": "private", "type": "TeamFoundationServerRepositoryBrowser", "declarator": "repositoryBrowser", "var_name": "repositoryBrowser"}, {"original_string": "private transient String normalizedWorkspaceName;", "modifier": "private transient", "type": "String", "declarator": "normalizedWorkspaceName", "var_name": "normalizedWorkspaceName"}, {"original_string": "private transient String workspaceChangesetVersion;", "modifier": "private transient", "type": "String", "declarator": "workspaceChangesetVersion", "var_name": "workspaceChangesetVersion"}, {"original_string": "private static final Logger logger = Logger.getLogger(TeamFoundationServerScm.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(TeamFoundationServerScm.class.getName())", "var_name": "logger"}], "methods": [{"identifier": "TeamFoundationServerScm", "parameters": "(final String serverUrl, final String projectPath, final String workspaceName)", "modifiers": "", "return": "", "signature": " TeamFoundationServerScm(final String serverUrl, final String projectPath, final String workspaceName)", "full_signature": "  TeamFoundationServerScm(final String serverUrl, final String projectPath, final String workspaceName)", "class_method_signature": "TeamFoundationServerScm.TeamFoundationServerScm(final String serverUrl, final String projectPath, final String workspaceName)", "testcase": false, "constructor": true}, {"identifier": "TeamFoundationServerScm", "parameters": "(final String serverUrl, final String projectPath, final String workspaceName, final String userName, final Secret password)", "modifiers": "@DataBoundConstructor public", "return": "", "signature": " TeamFoundationServerScm(final String serverUrl, final String projectPath, final String workspaceName, final String userName, final Secret password)", "full_signature": "@DataBoundConstructor public  TeamFoundationServerScm(final String serverUrl, final String projectPath, final String workspaceName, final String userName, final Secret password)", "class_method_signature": "TeamFoundationServerScm.TeamFoundationServerScm(final String serverUrl, final String projectPath, final String workspaceName, final String userName, final Secret password)", "testcase": false, "constructor": true}, {"identifier": "readResolve", "parameters": "()", "modifiers": "@SuppressWarnings(\"unused\" /* Migrate legacy data */) private", "return": "Object", "signature": "Object readResolve()", "full_signature": "@SuppressWarnings(\"unused\" /* Migrate legacy data */) private Object readResolve()", "class_method_signature": "TeamFoundationServerScm.readResolve()", "testcase": false, "constructor": false}, {"identifier": "getServerUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getServerUrl()", "full_signature": "public String getServerUrl()", "class_method_signature": "TeamFoundationServerScm.getServerUrl()", "testcase": false, "constructor": false}, {"identifier": "getWorkspaceName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getWorkspaceName()", "full_signature": "public String getWorkspaceName()", "class_method_signature": "TeamFoundationServerScm.getWorkspaceName()", "testcase": false, "constructor": false}, {"identifier": "getProjectPath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getProjectPath()", "full_signature": "public String getProjectPath()", "class_method_signature": "TeamFoundationServerScm.getProjectPath()", "testcase": false, "constructor": false}, {"identifier": "getLocalPath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLocalPath()", "full_signature": "public String getLocalPath()", "class_method_signature": "TeamFoundationServerScm.getLocalPath()", "testcase": false, "constructor": false}, {"identifier": "setLocalPath", "parameters": "(final String localPath)", "modifiers": "@DataBoundSetter public", "return": "void", "signature": "void setLocalPath(final String localPath)", "full_signature": "@DataBoundSetter public void setLocalPath(final String localPath)", "class_method_signature": "TeamFoundationServerScm.setLocalPath(final String localPath)", "testcase": false, "constructor": false}, {"identifier": "getVersionSpec", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getVersionSpec()", "full_signature": "public String getVersionSpec()", "class_method_signature": "TeamFoundationServerScm.getVersionSpec()", "testcase": false, "constructor": false}, {"identifier": "setVersionSpec", "parameters": "(final String versionSpec)", "modifiers": "@DataBoundSetter public", "return": "void", "signature": "void setVersionSpec(final String versionSpec)", "full_signature": "@DataBoundSetter public void setVersionSpec(final String versionSpec)", "class_method_signature": "TeamFoundationServerScm.setVersionSpec(final String versionSpec)", "testcase": false, "constructor": false}, {"identifier": "isUseUpdate", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isUseUpdate()", "full_signature": "public boolean isUseUpdate()", "class_method_signature": "TeamFoundationServerScm.isUseUpdate()", "testcase": false, "constructor": false}, {"identifier": "setUseUpdate", "parameters": "(final boolean useUpdate)", "modifiers": "@DataBoundSetter public", "return": "void", "signature": "void setUseUpdate(final boolean useUpdate)", "full_signature": "@DataBoundSetter public void setUseUpdate(final boolean useUpdate)", "class_method_signature": "TeamFoundationServerScm.setUseUpdate(final boolean useUpdate)", "testcase": false, "constructor": false}, {"identifier": "isUseOverwrite", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isUseOverwrite()", "full_signature": "public boolean isUseOverwrite()", "class_method_signature": "TeamFoundationServerScm.isUseOverwrite()", "testcase": false, "constructor": false}, {"identifier": "setUseOverwrite", "parameters": "(final boolean useOverwrite)", "modifiers": "@DataBoundSetter public", "return": "void", "signature": "void setUseOverwrite(final boolean useOverwrite)", "full_signature": "@DataBoundSetter public void setUseOverwrite(final boolean useOverwrite)", "class_method_signature": "TeamFoundationServerScm.setUseOverwrite(final boolean useOverwrite)", "testcase": false, "constructor": false}, {"identifier": "getUserPassword", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUserPassword()", "full_signature": "public String getUserPassword()", "class_method_signature": "TeamFoundationServerScm.getUserPassword()", "testcase": false, "constructor": false}, {"identifier": "getPassword", "parameters": "()", "modifiers": "public", "return": "Secret", "signature": "Secret getPassword()", "full_signature": "public Secret getPassword()", "class_method_signature": "TeamFoundationServerScm.getPassword()", "testcase": false, "constructor": false}, {"identifier": "getUserName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUserName()", "full_signature": "public String getUserName()", "class_method_signature": "TeamFoundationServerScm.getUserName()", "testcase": false, "constructor": false}, {"identifier": "getCredentialsConfigurer", "parameters": "()", "modifiers": "public", "return": "CredentialsConfigurer", "signature": "CredentialsConfigurer getCredentialsConfigurer()", "full_signature": "public CredentialsConfigurer getCredentialsConfigurer()", "class_method_signature": "TeamFoundationServerScm.getCredentialsConfigurer()", "testcase": false, "constructor": false}, {"identifier": "setCredentialsConfigurer", "parameters": "(final CredentialsConfigurer credentialsConfigurer)", "modifiers": "@DataBoundSetter public", "return": "void", "signature": "void setCredentialsConfigurer(final CredentialsConfigurer credentialsConfigurer)", "full_signature": "@DataBoundSetter public void setCredentialsConfigurer(final CredentialsConfigurer credentialsConfigurer)", "class_method_signature": "TeamFoundationServerScm.setCredentialsConfigurer(final CredentialsConfigurer credentialsConfigurer)", "testcase": false, "constructor": false}, {"identifier": "getCloakedPaths", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCloakedPaths()", "full_signature": "public String getCloakedPaths()", "class_method_signature": "TeamFoundationServerScm.getCloakedPaths()", "testcase": false, "constructor": false}, {"identifier": "setCloakedPaths", "parameters": "(final String cloakedPaths)", "modifiers": "@DataBoundSetter public", "return": "void", "signature": "void setCloakedPaths(final String cloakedPaths)", "full_signature": "@DataBoundSetter public void setCloakedPaths(final String cloakedPaths)", "class_method_signature": "TeamFoundationServerScm.setCloakedPaths(final String cloakedPaths)", "testcase": false, "constructor": false}, {"identifier": "serializeCloakedPathCollectionToString", "parameters": "(final Collection<String> cloakedPaths)", "modifiers": "static", "return": "String", "signature": "String serializeCloakedPathCollectionToString(final Collection<String> cloakedPaths)", "full_signature": "static String serializeCloakedPathCollectionToString(final Collection<String> cloakedPaths)", "class_method_signature": "TeamFoundationServerScm.serializeCloakedPathCollectionToString(final Collection<String> cloakedPaths)", "testcase": false, "constructor": false}, {"identifier": "getWorkspaceName", "parameters": "(final Run<?, ?> build, final Computer computer)", "modifiers": "", "return": "String", "signature": "String getWorkspaceName(final Run<?, ?> build, final Computer computer)", "full_signature": " String getWorkspaceName(final Run<?, ?> build, final Computer computer)", "class_method_signature": "TeamFoundationServerScm.getWorkspaceName(final Run<?, ?> build, final Computer computer)", "testcase": false, "constructor": false}, {"identifier": "getServerUrl", "parameters": "(final Run<?, ?> run)", "modifiers": "public", "return": "String", "signature": "String getServerUrl(final Run<?, ?> run)", "full_signature": "public String getServerUrl(final Run<?, ?> run)", "class_method_signature": "TeamFoundationServerScm.getServerUrl(final Run<?, ?> run)", "testcase": false, "constructor": false}, {"identifier": "getProjectPath", "parameters": "(final Run<?, ?> run)", "modifiers": "", "return": "String", "signature": "String getProjectPath(final Run<?, ?> run)", "full_signature": " String getProjectPath(final Run<?, ?> run)", "class_method_signature": "TeamFoundationServerScm.getProjectPath(final Run<?, ?> run)", "testcase": false, "constructor": false}, {"identifier": "getCloakedPaths", "parameters": "(final Run<?, ?> run)", "modifiers": "", "return": "Collection<String>", "signature": "Collection<String> getCloakedPaths(final Run<?, ?> run)", "full_signature": " Collection<String> getCloakedPaths(final Run<?, ?> run)", "class_method_signature": "TeamFoundationServerScm.getCloakedPaths(final Run<?, ?> run)", "testcase": false, "constructor": false}, {"identifier": "substituteBuildParameter", "parameters": "(final Run<?, ?> run, final String text)", "modifiers": "private", "return": "String", "signature": "String substituteBuildParameter(final Run<?, ?> run, final String text)", "full_signature": "private String substituteBuildParameter(final Run<?, ?> run, final String text)", "class_method_signature": "TeamFoundationServerScm.substituteBuildParameter(final Run<?, ?> run, final String text)", "testcase": false, "constructor": false}, {"identifier": "splitCloakedPaths", "parameters": "(final String cloakedPaths)", "modifiers": "static", "return": "Collection<String>", "signature": "Collection<String> splitCloakedPaths(final String cloakedPaths)", "full_signature": "static Collection<String> splitCloakedPaths(final String cloakedPaths)", "class_method_signature": "TeamFoundationServerScm.splitCloakedPaths(final String cloakedPaths)", "testcase": false, "constructor": false}, {"identifier": "checkout", "parameters": "(final Run<?, ?> build, final Launcher launcher, final FilePath workspaceFilePath, final TaskListener listener, final File changelogFile, final SCMRevisionState baseline)", "modifiers": "@Override public", "return": "void", "signature": "void checkout(final Run<?, ?> build, final Launcher launcher, final FilePath workspaceFilePath, final TaskListener listener, final File changelogFile, final SCMRevisionState baseline)", "full_signature": "@Override public void checkout(final Run<?, ?> build, final Launcher launcher, final FilePath workspaceFilePath, final TaskListener listener, final File changelogFile, final SCMRevisionState baseline)", "class_method_signature": "TeamFoundationServerScm.checkout(final Run<?, ?> build, final Launcher launcher, final FilePath workspaceFilePath, final TaskListener listener, final File changelogFile, final SCMRevisionState baseline)", "testcase": false, "constructor": false}, {"identifier": "determineVersionSpecFromBuild", "parameters": "(final Run<?, ?> build, final int offset, final int maximumChangeSetNumber)", "modifiers": "static", "return": "VersionSpec", "signature": "VersionSpec determineVersionSpecFromBuild(final Run<?, ?> build, final int offset, final int maximumChangeSetNumber)", "full_signature": "static VersionSpec determineVersionSpecFromBuild(final Run<?, ?> build, final int offset, final int maximumChangeSetNumber)", "class_method_signature": "TeamFoundationServerScm.determineVersionSpecFromBuild(final Run<?, ?> build, final int offset, final int maximumChangeSetNumber)", "testcase": false, "constructor": false}, {"identifier": "recordWorkspaceChangesetVersion", "parameters": "(final Run<?, ?> build, final TaskListener listener, final Project project, final String projectPath, final String singleVersionSpec)", "modifiers": "", "return": "int", "signature": "int recordWorkspaceChangesetVersion(final Run<?, ?> build, final TaskListener listener, final Project project, final String projectPath, final String singleVersionSpec)", "full_signature": " int recordWorkspaceChangesetVersion(final Run<?, ?> build, final TaskListener listener, final Project project, final String projectPath, final String singleVersionSpec)", "class_method_signature": "TeamFoundationServerScm.recordWorkspaceChangesetVersion(final Run<?, ?> build, final TaskListener listener, final Project project, final String projectPath, final String singleVersionSpec)", "testcase": false, "constructor": false}, {"identifier": "setWorkspaceChangesetVersion", "parameters": "(final String workspaceChangesetVersion)", "modifiers": "", "return": "void", "signature": "void setWorkspaceChangesetVersion(final String workspaceChangesetVersion)", "full_signature": " void setWorkspaceChangesetVersion(final String workspaceChangesetVersion)", "class_method_signature": "TeamFoundationServerScm.setWorkspaceChangesetVersion(final String workspaceChangesetVersion)", "testcase": false, "constructor": false}, {"identifier": "pollChanges", "parameters": "(final AbstractProject hudsonProject, final Launcher launcher, final FilePath workspace, final TaskListener listener)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean pollChanges(final AbstractProject hudsonProject, final Launcher launcher, final FilePath workspace, final TaskListener listener)", "full_signature": "@Override public boolean pollChanges(final AbstractProject hudsonProject, final Launcher launcher, final FilePath workspace, final TaskListener listener)", "class_method_signature": "TeamFoundationServerScm.pollChanges(final AbstractProject hudsonProject, final Launcher launcher, final FilePath workspace, final TaskListener listener)", "testcase": false, "constructor": false}, {"identifier": "processWorkspaceBeforeDeletion", "parameters": "(final Job<?, ?> project, final FilePath workspace, final Node node)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean processWorkspaceBeforeDeletion(final Job<?, ?> project, final FilePath workspace, final Node node)", "full_signature": "@Override public boolean processWorkspaceBeforeDeletion(final Job<?, ?> project, final FilePath workspace, final Node node)", "class_method_signature": "TeamFoundationServerScm.processWorkspaceBeforeDeletion(final Job<?, ?> project, final FilePath workspace, final Node node)", "testcase": false, "constructor": false}, {"identifier": "createServer", "parameters": "(final Launcher launcher, final TaskListener taskListener, final Run<?, ?> run)", "modifiers": "protected", "return": "Server", "signature": "Server createServer(final Launcher launcher, final TaskListener taskListener, final Run<?, ?> run)", "full_signature": "protected Server createServer(final Launcher launcher, final TaskListener taskListener, final Run<?, ?> run)", "class_method_signature": "TeamFoundationServerScm.createServer(final Launcher launcher, final TaskListener taskListener, final Run<?, ?> run)", "testcase": false, "constructor": false}, {"identifier": "requiresWorkspaceForPolling", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean requiresWorkspaceForPolling()", "full_signature": "@Override public boolean requiresWorkspaceForPolling()", "class_method_signature": "TeamFoundationServerScm.requiresWorkspaceForPolling()", "testcase": false, "constructor": false}, {"identifier": "supportsPolling", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supportsPolling()", "full_signature": "@Override public boolean supportsPolling()", "class_method_signature": "TeamFoundationServerScm.supportsPolling()", "testcase": false, "constructor": false}, {"identifier": "createChangeLogParser", "parameters": "()", "modifiers": "@Override public", "return": "ChangeLogParser", "signature": "ChangeLogParser createChangeLogParser()", "full_signature": "@Override public ChangeLogParser createChangeLogParser()", "class_method_signature": "TeamFoundationServerScm.createChangeLogParser()", "testcase": false, "constructor": false}, {"identifier": "getModuleRoot", "parameters": "(final FilePath workspace)", "modifiers": "@Override public", "return": "FilePath", "signature": "FilePath getModuleRoot(final FilePath workspace)", "full_signature": "@Override public FilePath getModuleRoot(final FilePath workspace)", "class_method_signature": "TeamFoundationServerScm.getModuleRoot(final FilePath workspace)", "testcase": false, "constructor": false}, {"identifier": "getBrowser", "parameters": "()", "modifiers": "@Override public", "return": "TeamFoundationServerRepositoryBrowser", "signature": "TeamFoundationServerRepositoryBrowser getBrowser()", "full_signature": "@Override public TeamFoundationServerRepositoryBrowser getBrowser()", "class_method_signature": "TeamFoundationServerScm.getBrowser()", "testcase": false, "constructor": false}, {"identifier": "guessBrowser", "parameters": "()", "modifiers": "@Override @CheckForNull public", "return": "RepositoryBrowser<?>", "signature": "RepositoryBrowser<?> guessBrowser()", "full_signature": "@Override @CheckForNull public RepositoryBrowser<?> guessBrowser()", "class_method_signature": "TeamFoundationServerScm.guessBrowser()", "testcase": false, "constructor": false}, {"identifier": "setRepositoryBrowser", "parameters": "(final TeamFoundationServerRepositoryBrowser repositoryBrowser)", "modifiers": "public", "return": "void", "signature": "void setRepositoryBrowser(final TeamFoundationServerRepositoryBrowser repositoryBrowser)", "full_signature": "public void setRepositoryBrowser(final TeamFoundationServerRepositoryBrowser repositoryBrowser)", "class_method_signature": "TeamFoundationServerScm.setRepositoryBrowser(final TeamFoundationServerRepositoryBrowser repositoryBrowser)", "testcase": false, "constructor": false}, {"identifier": "buildEnvVars", "parameters": "(final AbstractBuild<?, ?> build, final Map<String, String> env)", "modifiers": "@Override public", "return": "void", "signature": "void buildEnvVars(final AbstractBuild<?, ?> build, final Map<String, String> env)", "full_signature": "@Override public void buildEnvVars(final AbstractBuild<?, ?> build, final Map<String, String> env)", "class_method_signature": "TeamFoundationServerScm.buildEnvVars(final AbstractBuild<?, ?> build, final Map<String, String> env)", "testcase": false, "constructor": false}, {"identifier": "buildEnvironment", "parameters": "(final Run<?, ?> build, final Map<String, String> env)", "modifiers": "public", "return": "void", "signature": "void buildEnvironment(final Run<?, ?> build, final Map<String, String> env)", "full_signature": "public void buildEnvironment(final Run<?, ?> build, final Map<String, String> env)", "class_method_signature": "TeamFoundationServerScm.buildEnvironment(final Run<?, ?> build, final Map<String, String> env)", "testcase": false, "constructor": false}, {"identifier": "getDescriptor", "parameters": "()", "modifiers": "@Override public", "return": "DescriptorImpl", "signature": "DescriptorImpl getDescriptor()", "full_signature": "@Override public DescriptorImpl getDescriptor()", "class_method_signature": "TeamFoundationServerScm.getDescriptor()", "testcase": false, "constructor": false}, {"identifier": "calcRevisionsFromBuild", "parameters": "(final Run<?, ?> build,\n            final FilePath workspace,\n            final Launcher launcher, final TaskListener listener)", "modifiers": "@Override public", "return": "SCMRevisionState", "signature": "SCMRevisionState calcRevisionsFromBuild(final Run<?, ?> build,\n            final FilePath workspace,\n            final Launcher launcher, final TaskListener listener)", "full_signature": "@Override public SCMRevisionState calcRevisionsFromBuild(final Run<?, ?> build,\n            final FilePath workspace,\n            final Launcher launcher, final TaskListener listener)", "class_method_signature": "TeamFoundationServerScm.calcRevisionsFromBuild(final Run<?, ?> build,\n            final FilePath workspace,\n            final Launcher launcher, final TaskListener listener)", "testcase": false, "constructor": false}, {"identifier": "compareRemoteRevisionWith", "parameters": "(\n            final Job<?, ?> project, final Launcher launcher,\n            final FilePath workspace, final TaskListener listener, final SCMRevisionState baseline)", "modifiers": "@Override public", "return": "PollingResult", "signature": "PollingResult compareRemoteRevisionWith(\n            final Job<?, ?> project, final Launcher launcher,\n            final FilePath workspace, final TaskListener listener, final SCMRevisionState baseline)", "full_signature": "@Override public PollingResult compareRemoteRevisionWith(\n            final Job<?, ?> project, final Launcher launcher,\n            final FilePath workspace, final TaskListener listener, final SCMRevisionState baseline)", "class_method_signature": "TeamFoundationServerScm.compareRemoteRevisionWith(\n            final Job<?, ?> project, final Launcher launcher,\n            final FilePath workspace, final TaskListener listener, final SCMRevisionState baseline)", "testcase": false, "constructor": false}], "file": "tfs/src/main/java/hudson/plugins/tfs/TeamFoundationServerScm.java"}, "focal_method": {"identifier": "recordWorkspaceChangesetVersion", "parameters": "(final Run<?, ?> build, final TaskListener listener, final Project project, final String projectPath, final String singleVersionSpec)", "modifiers": "", "return": "int", "body": "int recordWorkspaceChangesetVersion(final Run<?, ?> build, final TaskListener listener, final Project project, final String projectPath, final String singleVersionSpec) throws IOException, InterruptedException {\n        final VersionSpec workspaceVersion;\n\n        if (!StringUtils.isEmpty(singleVersionSpec)) {\n            workspaceVersion = VersionSpec.parseSingleVersionFromSpec(singleVersionSpec, null);\n        } else {\n            workspaceVersion = new DateVersionSpec(build.getTimestamp());\n        }\n        int buildChangeset;\n        setWorkspaceChangesetVersion(null);\n        buildChangeset = project.getRemoteChangesetVersion(workspaceVersion);\n        setWorkspaceChangesetVersion(Integer.toString(buildChangeset, RADIX_10));\n\n        // by adding this action, we prevent calcRevisionsFromBuild() from being called\n        build.addAction(new TFSRevisionState(buildChangeset, projectPath));\n\n        return buildChangeset;\n    }", "signature": "int recordWorkspaceChangesetVersion(final Run<?, ?> build, final TaskListener listener, final Project project, final String projectPath, final String singleVersionSpec)", "full_signature": " int recordWorkspaceChangesetVersion(final Run<?, ?> build, final TaskListener listener, final Project project, final String projectPath, final String singleVersionSpec)", "class_method_signature": "TeamFoundationServerScm.recordWorkspaceChangesetVersion(final Run<?, ?> build, final TaskListener listener, final Project project, final String projectPath, final String singleVersionSpec)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "parseSingleVersionFromSpec", "getTimestamp", "setWorkspaceChangesetVersion", "getRemoteChangesetVersion", "setWorkspaceChangesetVersion", "toString", "addAction"]}, "repository": {"repo_id": 1163806, "url": "https://github.com/jenkinsci/tfs-plugin", "language": "Java", "is_fork": false, "fork_count": 165, "stargazer_count": 129, "size": 60608, "license": "licensed"}}