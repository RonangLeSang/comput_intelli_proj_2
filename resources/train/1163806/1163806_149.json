{"test_class": {"identifier": "ChangeSetWriterTest", "superclass": "", "interfaces": "", "fields": [], "file": "tfs/src/test/java/hudson/plugins/tfs/ChangeSetWriterTest.java"}, "test_case": {"identifier": "assertWriterOutputsCorrectChangeLogXml", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void assertWriterOutputsCorrectChangeLogXml() throws Exception {\n        ChangeSet changeset = new ChangeSet(\"1122\", Util.getCalendar(2008, 12, 12).getTime(), \"rnd\\\\user\", \"comment\");\n        changeset.getItems().add(new ChangeSet.Item(\"path\", \"add\"));\n        changeset.getItems().add(new ChangeSet.Item(\"path2\", \"delete\"));\n        ArrayList<ChangeSet> sets = new ArrayList<ChangeSet>();\n        sets.add(changeset);\n\n        ChangeSetWriter changesetWriter = new ChangeSetWriter();\n        StringWriter output = new StringWriter();\n        changesetWriter.write(sets, output);\n        assertXMLEqual(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><changelog>\" +\n                            \"<changeset version=\\\"1122\\\">\" +\n                                \"<date>2008-12-12T00:00:00Z</date>\" +\n                                \"<user>rnd\\\\user</user>\" +\n                                \"<comment>comment</comment>\" +\n                                \"<items>\" +\n                                    \"<item action=\\\"add\\\">path</item>\" +\n                                    \"<item action=\\\"delete\\\">path2</item>\" +\n                                \"</items>\" +\n                            \"</changeset>\" +\n        \t\t\"</changelog>\", output.getBuffer().toString());\n    }", "signature": "void assertWriterOutputsCorrectChangeLogXml()", "full_signature": "@Test public void assertWriterOutputsCorrectChangeLogXml()", "class_method_signature": "ChangeSetWriterTest.assertWriterOutputsCorrectChangeLogXml()", "testcase": true, "constructor": false, "invocations": ["getTime", "getCalendar", "add", "getItems", "add", "getItems", "add", "write", "assertXMLEqual", "toString", "getBuffer"]}, "focal_class": {"identifier": "ChangeSetWriter", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "write", "parameters": "(List<ChangeSet> changeSets, File changelogFile)", "modifiers": "@SuppressFBWarnings(value = \"DM_DEFAULT_ENCODING\", justification = \"Better mot modify charset in case it might raise errors\") public", "return": "void", "signature": "void write(List<ChangeSet> changeSets, File changelogFile)", "full_signature": "@SuppressFBWarnings(value = \"DM_DEFAULT_ENCODING\", justification = \"Better mot modify charset in case it might raise errors\") public void write(List<ChangeSet> changeSets, File changelogFile)", "class_method_signature": "ChangeSetWriter.write(List<ChangeSet> changeSets, File changelogFile)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(List<ChangeSet> changeSets, Writer output)", "modifiers": "public", "return": "void", "signature": "void write(List<ChangeSet> changeSets, Writer output)", "full_signature": "public void write(List<ChangeSet> changeSets, Writer output)", "class_method_signature": "ChangeSetWriter.write(List<ChangeSet> changeSets, Writer output)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(ChangeSet changeSet, PrintWriter writer)", "modifiers": "private", "return": "void", "signature": "void write(ChangeSet changeSet, PrintWriter writer)", "full_signature": "private void write(ChangeSet changeSet, PrintWriter writer)", "class_method_signature": "ChangeSetWriter.write(ChangeSet changeSet, PrintWriter writer)", "testcase": false, "constructor": false}, {"identifier": "escapeForXml", "parameters": "(Object object)", "modifiers": "private", "return": "String", "signature": "String escapeForXml(Object object)", "full_signature": "private String escapeForXml(Object object)", "class_method_signature": "ChangeSetWriter.escapeForXml(Object object)", "testcase": false, "constructor": false}], "file": "tfs/src/main/java/hudson/plugins/tfs/ChangeSetWriter.java"}, "focal_method": {"identifier": "write", "parameters": "(List<ChangeSet> changeSets, File changelogFile)", "modifiers": "@SuppressFBWarnings(value = \"DM_DEFAULT_ENCODING\", justification = \"Better mot modify charset in case it might raise errors\") public", "return": "void", "body": "@SuppressFBWarnings(value = \"DM_DEFAULT_ENCODING\", justification = \"Better mot modify charset in case it might raise errors\")\n    public void write(List<ChangeSet> changeSets, File changelogFile) throws IOException {\n        FileWriter writer = new FileWriter(changelogFile);\n        try {\n            write(changeSets, writer);\n        } finally {\n            IOUtils.closeQuietly(writer);\n        }\n    }", "signature": "void write(List<ChangeSet> changeSets, File changelogFile)", "full_signature": "@SuppressFBWarnings(value = \"DM_DEFAULT_ENCODING\", justification = \"Better mot modify charset in case it might raise errors\") public void write(List<ChangeSet> changeSets, File changelogFile)", "class_method_signature": "ChangeSetWriter.write(List<ChangeSet> changeSets, File changelogFile)", "testcase": false, "constructor": false, "invocations": ["write", "closeQuietly"]}, "repository": {"repo_id": 1163806, "url": "https://github.com/jenkinsci/tfs-plugin", "language": "Java", "is_fork": false, "fork_count": 165, "stargazer_count": 129, "size": 60608, "license": "licensed"}}