{"test_class": {"identifier": "WorkspacesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final List<String> EMPTY_CLOAKED_PATHS_LIST = Collections.emptyList();", "modifier": "private static final", "type": "List<String>", "declarator": "EMPTY_CLOAKED_PATHS_LIST = Collections.emptyList()", "var_name": "EMPTY_CLOAKED_PATHS_LIST"}, {"original_string": "@Mock private Server server;", "modifier": "@Mock private", "type": "Server", "declarator": "server", "var_name": "server"}, {"original_string": "private ListWorkspacesCommand parser;", "modifier": "private", "type": "ListWorkspacesCommand", "declarator": "parser", "var_name": "parser"}], "file": "tfs/src/test/java/hudson/plugins/tfs/model/WorkspacesTest.java"}, "test_case": {"identifier": "assertExistsWorkspace", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void assertExistsWorkspace() throws Exception {\n        when(server.execute(isA(Callable.class))).thenReturn(parse(\n                \"--------- -------------- -------- ----------------------------------------------------------------------------------------------------------\\n\" +\n                \"\\n\" +\n                \"name1     SND\\\\redsolo_cp COMPUTER\\n\"));\n        \n        Workspaces workspaces = new Workspaces(server);\n        assertTrue(\"The workspace was reported as non existant\", workspaces.exists(new Workspace(\"name1\")));\n    }", "signature": "void assertExistsWorkspace()", "full_signature": "@Test public void assertExistsWorkspace()", "class_method_signature": "WorkspacesTest.assertExistsWorkspace()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "execute", "isA", "parse", "assertTrue", "exists"]}, "focal_class": {"identifier": "Workspaces", "superclass": "", "interfaces": "implements ListWorkspacesCommand.WorkspaceFactory", "fields": [{"original_string": "private Map<String,Workspace> workspaces = new HashMap<String,Workspace>();", "modifier": "private", "type": "Map<String,Workspace>", "declarator": "workspaces = new HashMap<String,Workspace>()", "var_name": "workspaces"}, {"original_string": "private Server server;", "modifier": "private", "type": "Server", "declarator": "server", "var_name": "server"}, {"original_string": "private boolean mapIsPopulatedFromServer;", "modifier": "private", "type": "boolean", "declarator": "mapIsPopulatedFromServer", "var_name": "mapIsPopulatedFromServer"}], "methods": [{"identifier": "Workspaces", "parameters": "(Server server)", "modifiers": "public", "return": "", "signature": " Workspaces(Server server)", "full_signature": "public  Workspaces(Server server)", "class_method_signature": "Workspaces.Workspaces(Server server)", "testcase": false, "constructor": true}, {"identifier": "getListFromServer", "parameters": "()", "modifiers": "private", "return": "List<Workspace>", "signature": "List<Workspace> getListFromServer()", "full_signature": "private List<Workspace> getListFromServer()", "class_method_signature": "Workspaces.getListFromServer()", "testcase": false, "constructor": false}, {"identifier": "populateMapFromServer", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void populateMapFromServer()", "full_signature": "private void populateMapFromServer()", "class_method_signature": "Workspaces.populateMapFromServer()", "testcase": false, "constructor": false}, {"identifier": "getWorkspace", "parameters": "(String workspaceName)", "modifiers": "public", "return": "Workspace", "signature": "Workspace getWorkspace(String workspaceName)", "full_signature": "public Workspace getWorkspace(String workspaceName)", "class_method_signature": "Workspaces.getWorkspace(String workspaceName)", "testcase": false, "constructor": false}, {"identifier": "exists", "parameters": "(String workspaceName)", "modifiers": "public", "return": "boolean", "signature": "boolean exists(String workspaceName)", "full_signature": "public boolean exists(String workspaceName)", "class_method_signature": "Workspaces.exists(String workspaceName)", "testcase": false, "constructor": false}, {"identifier": "exists", "parameters": "(Workspace workspace)", "modifiers": "public", "return": "boolean", "signature": "boolean exists(Workspace workspace)", "full_signature": "public boolean exists(Workspace workspace)", "class_method_signature": "Workspaces.exists(Workspace workspace)", "testcase": false, "constructor": false}, {"identifier": "getWorkspaceMapping", "parameters": "(final String localPath)", "modifiers": "public", "return": "String", "signature": "String getWorkspaceMapping(final String localPath)", "full_signature": "public String getWorkspaceMapping(final String localPath)", "class_method_signature": "Workspaces.getWorkspaceMapping(final String localPath)", "testcase": false, "constructor": false}, {"identifier": "newWorkspace", "parameters": "(final String workspaceName, final String serverPath, Collection<String> cloakedPaths, final String localPath)", "modifiers": "public", "return": "Workspace", "signature": "Workspace newWorkspace(final String workspaceName, final String serverPath, Collection<String> cloakedPaths, final String localPath)", "full_signature": "public Workspace newWorkspace(final String workspaceName, final String serverPath, Collection<String> cloakedPaths, final String localPath)", "class_method_signature": "Workspaces.newWorkspace(final String workspaceName, final String serverPath, Collection<String> cloakedPaths, final String localPath)", "testcase": false, "constructor": false}, {"identifier": "deleteWorkspace", "parameters": "(Workspace workspace)", "modifiers": "public", "return": "void", "signature": "void deleteWorkspace(Workspace workspace)", "full_signature": "public void deleteWorkspace(Workspace workspace)", "class_method_signature": "Workspaces.deleteWorkspace(Workspace workspace)", "testcase": false, "constructor": false}, {"identifier": "createWorkspace", "parameters": "(String name, String computer, String owner, String comment)", "modifiers": "public", "return": "Workspace", "signature": "Workspace createWorkspace(String name, String computer, String owner, String comment)", "full_signature": "public Workspace createWorkspace(String name, String computer, String owner, String comment)", "class_method_signature": "Workspaces.createWorkspace(String name, String computer, String owner, String comment)", "testcase": false, "constructor": false}], "file": "tfs/src/main/java/hudson/plugins/tfs/model/Workspaces.java"}, "focal_method": {"identifier": "exists", "parameters": "(String workspaceName)", "modifiers": "public", "return": "boolean", "body": "public boolean exists(String workspaceName) {\n        if (!workspaces.containsKey(workspaceName)) {\n            populateMapFromServer();\n        }\n        return workspaces.containsKey(workspaceName);\n    }", "signature": "boolean exists(String workspaceName)", "full_signature": "public boolean exists(String workspaceName)", "class_method_signature": "Workspaces.exists(String workspaceName)", "testcase": false, "constructor": false, "invocations": ["containsKey", "populateMapFromServer", "containsKey"]}, "repository": {"repo_id": 1163806, "url": "https://github.com/jenkinsci/tfs-plugin", "language": "Java", "is_fork": false, "fork_count": 165, "stargazer_count": 129, "size": 60608, "license": "licensed"}}