{"test_class": {"identifier": "StatusReportGeneratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String procedure;", "modifier": "private", "type": "String", "declarator": "procedure", "var_name": "procedure"}, {"original_string": "private String taskId;", "modifier": "private", "type": "String", "declarator": "taskId", "var_name": "taskId"}, {"original_string": "private SensorTask validTask;", "modifier": "private", "type": "SensorTask", "declarator": "validTask", "var_name": "validTask"}], "file": "52n-sps-api/src/test/java/org/n52/sps/sensor/StatusReportGeneratorTest.java"}, "test_case": {"identifier": "testGenerate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGenerate() throws Exception {\n        assertNotNull(getStatusReporter().generateWithoutTaskingParameters());\n    }", "signature": "void testGenerate()", "full_signature": "@Test public void testGenerate()", "class_method_signature": "StatusReportGeneratorTest.testGenerate()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "generateWithoutTaskingParameters", "getStatusReporter"]}, "focal_class": {"identifier": "StatusReportGenerator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SensorTask sensorTask;", "modifier": "private", "type": "SensorTask", "declarator": "sensorTask", "var_name": "sensorTask"}], "methods": [{"identifier": "createFor", "parameters": "(SensorTask sensorTask)", "modifiers": "public static", "return": "StatusReportGenerator", "signature": "StatusReportGenerator createFor(SensorTask sensorTask)", "full_signature": "public static StatusReportGenerator createFor(SensorTask sensorTask)", "class_method_signature": "StatusReportGenerator.createFor(SensorTask sensorTask)", "testcase": false, "constructor": false}, {"identifier": "StatusReportGenerator", "parameters": "(SensorTask sensorTask)", "modifiers": "private", "return": "", "signature": " StatusReportGenerator(SensorTask sensorTask)", "full_signature": "private  StatusReportGenerator(SensorTask sensorTask)", "class_method_signature": "StatusReportGenerator.StatusReportGenerator(SensorTask sensorTask)", "testcase": false, "constructor": true}, {"identifier": "generateWithTaskingParameters", "parameters": "()", "modifiers": "public", "return": "StatusReportType", "signature": "StatusReportType generateWithTaskingParameters()", "full_signature": "public StatusReportType generateWithTaskingParameters()", "class_method_signature": "StatusReportGenerator.generateWithTaskingParameters()", "testcase": false, "constructor": false}, {"identifier": "generateWithoutTaskingParameters", "parameters": "()", "modifiers": "public", "return": "StatusReportType", "signature": "StatusReportType generateWithoutTaskingParameters()", "full_signature": "public StatusReportType generateWithoutTaskingParameters()", "class_method_signature": "StatusReportGenerator.generateWithoutTaskingParameters()", "testcase": false, "constructor": false}, {"identifier": "isStatusInformationExpired", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isStatusInformationExpired()", "full_signature": "private boolean isStatusInformationExpired()", "class_method_signature": "StatusReportGenerator.isStatusInformationExpired()", "testcase": false, "constructor": false}, {"identifier": "setCommonStatusReportParameters", "parameters": "(StatusReportType statusReport)", "modifiers": "private", "return": "void", "signature": "void setCommonStatusReportParameters(StatusReportType statusReport)", "full_signature": "private void setCommonStatusReportParameters(StatusReportType statusReport)", "class_method_signature": "StatusReportGenerator.setCommonStatusReportParameters(StatusReportType statusReport)", "testcase": false, "constructor": false}, {"identifier": "canSetStatusMessages", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean canSetStatusMessages()", "full_signature": "private boolean canSetStatusMessages()", "class_method_signature": "StatusReportGenerator.canSetStatusMessages()", "testcase": false, "constructor": false}, {"identifier": "setStatusReportParametersForAcceptedTask", "parameters": "(StatusReportType statusReport)", "modifiers": "private", "return": "void", "signature": "void setStatusReportParametersForAcceptedTask(StatusReportType statusReport)", "full_signature": "private void setStatusReportParametersForAcceptedTask(StatusReportType statusReport)", "class_method_signature": "StatusReportGenerator.setStatusReportParametersForAcceptedTask(StatusReportType statusReport)", "testcase": false, "constructor": false}, {"identifier": "hasSetEstimatedTimeToComplete", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean hasSetEstimatedTimeToComplete()", "full_signature": "private boolean hasSetEstimatedTimeToComplete()", "class_method_signature": "StatusReportGenerator.hasSetEstimatedTimeToComplete()", "testcase": false, "constructor": false}, {"identifier": "isInPendingState", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isInPendingState()", "full_signature": "private boolean isInPendingState()", "class_method_signature": "StatusReportGenerator.isInPendingState()", "testcase": false, "constructor": false}, {"identifier": "isRejected", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isRejected()", "full_signature": "private boolean isRejected()", "class_method_signature": "StatusReportGenerator.isRejected()", "testcase": false, "constructor": false}], "file": "52n-sps-api/src/main/java/org/n52/sps/sensor/StatusReportGenerator.java"}, "focal_method": {"identifier": "generateWithoutTaskingParameters", "parameters": "()", "modifiers": "public", "return": "StatusReportType", "body": "public StatusReportType generateWithoutTaskingParameters() throws StatusInformationExpiredException {\n        if (isStatusInformationExpired()) {\n            throw new StatusInformationExpiredException();\n        }\n\n        StatusReportType statusReport = StatusReportType.Factory.newInstance();\n        statusReport.setRequestStatus(sensorTask.getRequestStatusAsString());\n        setCommonStatusReportParameters(statusReport);\n        \n        if (!isRejected() && !isInPendingState()) {\n            setStatusReportParametersForAcceptedTask(statusReport);\n        } \n\n        return statusReport; \n    }", "signature": "StatusReportType generateWithoutTaskingParameters()", "full_signature": "public StatusReportType generateWithoutTaskingParameters()", "class_method_signature": "StatusReportGenerator.generateWithoutTaskingParameters()", "testcase": false, "constructor": false, "invocations": ["isStatusInformationExpired", "newInstance", "setRequestStatus", "getRequestStatusAsString", "setCommonStatusReportParameters", "isRejected", "isInPendingState", "setStatusReportParametersForAcceptedTask"]}, "repository": {"repo_id": 10737956, "url": "https://github.com/52North/SensorPlanningService", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 7, "size": 292, "license": "licensed"}}