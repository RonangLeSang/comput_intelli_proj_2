{"test_class": {"identifier": "CNPJValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String INVALID_FORMAT = \"INVALID FORMAT\";", "modifier": "private static final", "type": "String", "declarator": "INVALID_FORMAT = \"INVALID FORMAT\"", "var_name": "INVALID_FORMAT"}, {"original_string": "private static final String INVALID_CHECK_DIGITS = \"INVALID CHECK DIGITS\";", "modifier": "private static final", "type": "String", "declarator": "INVALID_CHECK_DIGITS = \"INVALID CHECK DIGITS\"", "var_name": "INVALID_CHECK_DIGITS"}, {"original_string": "private static final String INVALID_DIGITS = \"INVALID DIGITS\";", "modifier": "private static final", "type": "String", "declarator": "INVALID_DIGITS = \"INVALID DIGITS\"", "var_name": "INVALID_DIGITS"}, {"original_string": "private final String validString = \"26.637.142/0001-58\";", "modifier": "private final", "type": "String", "declarator": "validString = \"26.637.142/0001-58\"", "var_name": "validString"}, {"original_string": "private final String validStringNotFormatted = \"26637142000158\";", "modifier": "private final", "type": "String", "declarator": "validStringNotFormatted = \"26637142000158\"", "var_name": "validStringNotFormatted"}, {"original_string": "private final String firstCheckDigitWrongNotFormatted = \"26637142000168\";", "modifier": "private final", "type": "String", "declarator": "firstCheckDigitWrongNotFormatted = \"26637142000168\"", "var_name": "firstCheckDigitWrongNotFormatted"}], "file": "stella-core/src/test/java/br/com/caelum/stella/validation/CNPJValidatorTest.java"}, "test_case": {"identifier": "shouldValidateValidFormattedCNPJ", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldValidateValidFormattedCNPJ() {\n        CNPJValidator validator = new CNPJValidator(true);\n        String value = validString;\n        validator.assertValid(value);\n    }", "signature": "void shouldValidateValidFormattedCNPJ()", "full_signature": "@Test public void shouldValidateValidFormattedCNPJ()", "class_method_signature": "CNPJValidatorTest.shouldValidateValidFormattedCNPJ()", "testcase": true, "constructor": false, "invocations": ["assertValid"]}, "focal_class": {"identifier": "CNPJValidator", "superclass": "", "interfaces": "implements Validator<String>", "fields": [{"original_string": "public static final Pattern FORMATED = Pattern.compile(\"(\\\\d{2})[.](\\\\d{3})[.](\\\\d{3})/(\\\\d{4})-(\\\\d{2})\");", "modifier": "public static final", "type": "Pattern", "declarator": "FORMATED = Pattern.compile(\"(\\\\d{2})[.](\\\\d{3})[.](\\\\d{3})/(\\\\d{4})-(\\\\d{2})\")", "var_name": "FORMATED"}, {"original_string": "public static final Pattern UNFORMATED = Pattern.compile(\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})(\\\\d{2})\");", "modifier": "public static final", "type": "Pattern", "declarator": "UNFORMATED = Pattern.compile(\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})(\\\\d{2})\")", "var_name": "UNFORMATED"}, {"original_string": "private boolean isFormatted = false;", "modifier": "private", "type": "boolean", "declarator": "isFormatted = false", "var_name": "isFormatted"}, {"original_string": "private boolean isIgnoringRepeatedDigits;", "modifier": "private", "type": "boolean", "declarator": "isIgnoringRepeatedDigits", "var_name": "isIgnoringRepeatedDigits"}, {"original_string": "private MessageProducer messageProducer;", "modifier": "private", "type": "MessageProducer", "declarator": "messageProducer", "var_name": "messageProducer"}], "methods": [{"identifier": "CNPJValidator", "parameters": "()", "modifiers": "public", "return": "", "signature": " CNPJValidator()", "full_signature": "public  CNPJValidator()", "class_method_signature": "CNPJValidator.CNPJValidator()", "testcase": false, "constructor": true}, {"identifier": "CNPJValidator", "parameters": "(boolean isFormatted)", "modifiers": "public", "return": "", "signature": " CNPJValidator(boolean isFormatted)", "full_signature": "public  CNPJValidator(boolean isFormatted)", "class_method_signature": "CNPJValidator.CNPJValidator(boolean isFormatted)", "testcase": false, "constructor": true}, {"identifier": "CNPJValidator", "parameters": "(boolean isFormatted, boolean isIgnoringRepeatedDigits)", "modifiers": "public", "return": "", "signature": " CNPJValidator(boolean isFormatted, boolean isIgnoringRepeatedDigits)", "full_signature": "public  CNPJValidator(boolean isFormatted, boolean isIgnoringRepeatedDigits)", "class_method_signature": "CNPJValidator.CNPJValidator(boolean isFormatted, boolean isIgnoringRepeatedDigits)", "testcase": false, "constructor": true}, {"identifier": "CNPJValidator", "parameters": "(MessageProducer messageProducer, boolean isFormatted, boolean isIgnoringRepeatedDigits)", "modifiers": "public", "return": "", "signature": " CNPJValidator(MessageProducer messageProducer, boolean isFormatted, boolean isIgnoringRepeatedDigits)", "full_signature": "public  CNPJValidator(MessageProducer messageProducer, boolean isFormatted, boolean isIgnoringRepeatedDigits)", "class_method_signature": "CNPJValidator.CNPJValidator(MessageProducer messageProducer, boolean isFormatted, boolean isIgnoringRepeatedDigits)", "testcase": false, "constructor": true}, {"identifier": "CNPJValidator", "parameters": "(MessageProducer messageProducer, boolean isFormatted)", "modifiers": "public", "return": "", "signature": " CNPJValidator(MessageProducer messageProducer, boolean isFormatted)", "full_signature": "public  CNPJValidator(MessageProducer messageProducer, boolean isFormatted)", "class_method_signature": "CNPJValidator.CNPJValidator(MessageProducer messageProducer, boolean isFormatted)", "testcase": false, "constructor": true}, {"identifier": "CNPJValidator", "parameters": "(MessageProducer messageProducer)", "modifiers": "public", "return": "", "signature": " CNPJValidator(MessageProducer messageProducer)", "full_signature": "public  CNPJValidator(MessageProducer messageProducer)", "class_method_signature": "CNPJValidator.CNPJValidator(MessageProducer messageProducer)", "testcase": false, "constructor": true}, {"identifier": "getInvalidValues", "parameters": "(String cnpj)", "modifiers": "private", "return": "List<ValidationMessage>", "signature": "List<ValidationMessage> getInvalidValues(String cnpj)", "full_signature": "private List<ValidationMessage> getInvalidValues(String cnpj)", "class_method_signature": "CNPJValidator.getInvalidValues(String cnpj)", "testcase": false, "constructor": false}, {"identifier": "calculaDigitos", "parameters": "(String cnpjSemDigito)", "modifiers": "private", "return": "String", "signature": "String calculaDigitos(String cnpjSemDigito)", "full_signature": "private String calculaDigitos(String cnpjSemDigito)", "class_method_signature": "CNPJValidator.calculaDigitos(String cnpjSemDigito)", "testcase": false, "constructor": false}, {"identifier": "isEligible", "parameters": "(String value)", "modifiers": "public", "return": "boolean", "signature": "boolean isEligible(String value)", "full_signature": "public boolean isEligible(String value)", "class_method_signature": "CNPJValidator.isEligible(String value)", "testcase": false, "constructor": false}, {"identifier": "assertValid", "parameters": "(String cnpj)", "modifiers": "@Override public", "return": "void", "signature": "void assertValid(String cnpj)", "full_signature": "@Override public void assertValid(String cnpj)", "class_method_signature": "CNPJValidator.assertValid(String cnpj)", "testcase": false, "constructor": false}, {"identifier": "invalidMessagesFor", "parameters": "(String cnpj)", "modifiers": "@Override public", "return": "List<ValidationMessage>", "signature": "List<ValidationMessage> invalidMessagesFor(String cnpj)", "full_signature": "@Override public List<ValidationMessage> invalidMessagesFor(String cnpj)", "class_method_signature": "CNPJValidator.invalidMessagesFor(String cnpj)", "testcase": false, "constructor": false}, {"identifier": "generateRandomValid", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String generateRandomValid()", "full_signature": "@Override public String generateRandomValid()", "class_method_signature": "CNPJValidator.generateRandomValid()", "testcase": false, "constructor": false}, {"identifier": "hasAllRepeatedDigits", "parameters": "(String cnpj)", "modifiers": "private", "return": "boolean", "signature": "boolean hasAllRepeatedDigits(String cnpj)", "full_signature": "private boolean hasAllRepeatedDigits(String cnpj)", "class_method_signature": "CNPJValidator.hasAllRepeatedDigits(String cnpj)", "testcase": false, "constructor": false}], "file": "stella-core/src/main/java/br/com/caelum/stella/validation/CNPJValidator.java"}, "focal_method": {"identifier": "assertValid", "parameters": "(String cnpj)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void assertValid(String cnpj) {\n    \t\n        List<ValidationMessage> errors = getInvalidValues(cnpj);\n\t\tif (!errors.isEmpty()) {\n            throw new InvalidStateException(errors);\n        }\n    }", "signature": "void assertValid(String cnpj)", "full_signature": "@Override public void assertValid(String cnpj)", "class_method_signature": "CNPJValidator.assertValid(String cnpj)", "testcase": false, "constructor": false, "invocations": ["getInvalidValues", "isEmpty"]}, "repository": {"repo_id": 209853, "url": "https://github.com/caelum/caelum-stella", "language": "Java", "is_fork": false, "fork_count": 323, "stargazer_count": 554, "size": 15227, "license": "licensed"}}