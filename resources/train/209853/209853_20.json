{"test_class": {"identifier": "StellaCNPJValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Mockery mockery;", "modifier": "private", "type": "Mockery", "declarator": "mockery", "var_name": "mockery"}, {"original_string": "private FacesContextMocker facesContextMocker;", "modifier": "private", "type": "FacesContextMocker", "declarator": "facesContextMocker", "var_name": "facesContextMocker"}, {"original_string": "private StellaCNPJValidator validator;", "modifier": "private", "type": "StellaCNPJValidator", "declarator": "validator", "var_name": "validator"}], "file": "stella-faces/src/test/java/br/com/caelum/stella/faces/validation/StellaCNPJValidatorTest.java"}, "test_case": {"identifier": "shouldNotThrowNullPointerExceptionWhenCNPJIsNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldNotThrowNullPointerExceptionWhenCNPJIsNull() {\n        final FacesContext context = mockery.mock(FacesContext.class);\n        final UIComponent component = mockery.mock(UIComponent.class);\n        facesContextMocker.mockMessageBundle(context, \"messages\", Locale.getDefault());\n\n        try {\n            validator.validate(context, component, null);\n            mockery.assertIsSatisfied();\n        } catch (ValidatorException e) {\n            fail(\"shouldn't throw exception for null cnpj\");\n        } catch (NullPointerException e) {\n        \tfail(\"shouldn't throw exception for null cnpj\");\n        }\n    }", "signature": "void shouldNotThrowNullPointerExceptionWhenCNPJIsNull()", "full_signature": "@Test public void shouldNotThrowNullPointerExceptionWhenCNPJIsNull()", "class_method_signature": "StellaCNPJValidatorTest.shouldNotThrowNullPointerExceptionWhenCNPJIsNull()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "mockMessageBundle", "getDefault", "validate", "assertIsSatisfied", "fail", "fail"]}, "focal_class": {"identifier": "StellaCNPJValidator", "superclass": "", "interfaces": "implements Validator, StateHolder", "fields": [{"original_string": "public static final String VALIDATOR_ID = \"StellaCNPJValidator\";", "modifier": "public static final", "type": "String", "declarator": "VALIDATOR_ID = \"StellaCNPJValidator\"", "var_name": "VALIDATOR_ID"}, {"original_string": "private final ResourceBundleFinder resourceBundleFinder = new ResourceBundleFinder();", "modifier": "private final", "type": "ResourceBundleFinder", "declarator": "resourceBundleFinder = new ResourceBundleFinder()", "var_name": "resourceBundleFinder"}, {"original_string": "private boolean formatted;", "modifier": "private", "type": "boolean", "declarator": "formatted", "var_name": "formatted"}, {"original_string": "private boolean transientValue = false;", "modifier": "private", "type": "boolean", "declarator": "transientValue = false", "var_name": "transientValue"}], "methods": [{"identifier": "setFormatted", "parameters": "(boolean formatted)", "modifiers": "public", "return": "void", "signature": "void setFormatted(boolean formatted)", "full_signature": "public void setFormatted(boolean formatted)", "class_method_signature": "StellaCNPJValidator.setFormatted(boolean formatted)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(FacesContext facesContext, UIComponent uiComponent, Object value)", "modifiers": "public", "return": "void", "signature": "void validate(FacesContext facesContext, UIComponent uiComponent, Object value)", "full_signature": "public void validate(FacesContext facesContext, UIComponent uiComponent, Object value)", "class_method_signature": "StellaCNPJValidator.validate(FacesContext facesContext, UIComponent uiComponent, Object value)", "testcase": false, "constructor": false}, {"identifier": "registerAllMessages", "parameters": "(FacesContext facesContext, UIComponent uiComponent,\n            List<ValidationMessage> messages)", "modifiers": "private", "return": "void", "signature": "void registerAllMessages(FacesContext facesContext, UIComponent uiComponent,\n            List<ValidationMessage> messages)", "full_signature": "private void registerAllMessages(FacesContext facesContext, UIComponent uiComponent,\n            List<ValidationMessage> messages)", "class_method_signature": "StellaCNPJValidator.registerAllMessages(FacesContext facesContext, UIComponent uiComponent,\n            List<ValidationMessage> messages)", "testcase": false, "constructor": false}, {"identifier": "restoreState", "parameters": "(FacesContext ctx, Object state)", "modifiers": "public", "return": "void", "signature": "void restoreState(FacesContext ctx, Object state)", "full_signature": "public void restoreState(FacesContext ctx, Object state)", "class_method_signature": "StellaCNPJValidator.restoreState(FacesContext ctx, Object state)", "testcase": false, "constructor": false}, {"identifier": "saveState", "parameters": "(FacesContext ctx)", "modifiers": "public", "return": "Object", "signature": "Object saveState(FacesContext ctx)", "full_signature": "public Object saveState(FacesContext ctx)", "class_method_signature": "StellaCNPJValidator.saveState(FacesContext ctx)", "testcase": false, "constructor": false}, {"identifier": "isTransient", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTransient()", "full_signature": "public boolean isTransient()", "class_method_signature": "StellaCNPJValidator.isTransient()", "testcase": false, "constructor": false}, {"identifier": "setTransient", "parameters": "(boolean transientValue)", "modifiers": "public", "return": "void", "signature": "void setTransient(boolean transientValue)", "full_signature": "public void setTransient(boolean transientValue)", "class_method_signature": "StellaCNPJValidator.setTransient(boolean transientValue)", "testcase": false, "constructor": false}], "file": "stella-faces/src/main/java/br/com/caelum/stella/faces/validation/StellaCNPJValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(FacesContext facesContext, UIComponent uiComponent, Object value)", "modifiers": "public", "return": "void", "body": "public void validate(FacesContext facesContext, UIComponent uiComponent, Object value) throws ValidatorException {\n    \tif (value == null || \"\".equals(value)) return;\n    \t\n        ResourceBundle bundle = resourceBundleFinder.getForCurrentLocale(facesContext);\n        ResourceBundleMessageProducer producer = new ResourceBundleMessageProducer(bundle);\n        CNPJValidator validator = new CNPJValidator(producer, formatted);\n\n        try {\n            validator.assertValid(value.toString());\n        } catch (InvalidStateException e) {\n            List<ValidationMessage> messages = e.getInvalidMessages();\n            String firstErrorMessage = messages.remove(0).getMessage();\n            registerAllMessages(facesContext, uiComponent, messages);\n            throw new ValidatorException(new FacesMessage(firstErrorMessage));\n        }\n    }", "signature": "void validate(FacesContext facesContext, UIComponent uiComponent, Object value)", "full_signature": "public void validate(FacesContext facesContext, UIComponent uiComponent, Object value)", "class_method_signature": "StellaCNPJValidator.validate(FacesContext facesContext, UIComponent uiComponent, Object value)", "testcase": false, "constructor": false, "invocations": ["equals", "getForCurrentLocale", "assertValid", "toString", "getInvalidMessages", "getMessage", "remove", "registerAllMessages"]}, "repository": {"repo_id": 209853, "url": "https://github.com/caelum/caelum-stella", "language": "Java", "is_fork": false, "fork_count": 323, "stargazer_count": 554, "size": 15227, "license": "licensed"}}