{"test_class": {"identifier": "NGrinderAuthenticationProviderTest", "superclass": "extends AbstractNGrinderTransactionalTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private NGrinderAuthenticationProvider provider;", "modifier": "@Autowired\n    private", "type": "NGrinderAuthenticationProvider", "declarator": "provider", "var_name": "provider"}, {"original_string": "@Autowired\n    private NGrinderUserDetailsService userDetailService;", "modifier": "@Autowired\n    private", "type": "NGrinderUserDetailsService", "declarator": "userDetailService", "var_name": "userDetailService"}], "file": "ngrinder-controller/src/test/java/org/ngrinder/security/NGrinderAuthenticationProviderTest.java"}, "test_case": {"identifier": "testAddNewUserIntoLocal", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testAddNewUserIntoLocal() {\n\t\tUser user = User.createNew();\n\t\tuser.setEmail(\"aaa@hello.com\");\n\t\tuser.setUserId(\"new_user\");\n\t\tuser.setPassword(\"new_user\");\n\t\tuser.setUserName(\"new_user\");\n\t\tprovider.addNewUserIntoLocal(new SecuredUser(user, null));\n\t\tUserDetails userDetails = userDetailService.loadUserByUsername(user.getUserId());\n\t\tassertThat(userDetails.getUsername(), equalTo(user.getUserId()));\n\t}", "signature": "void testAddNewUserIntoLocal()", "full_signature": "@Test public void testAddNewUserIntoLocal()", "class_method_signature": "NGrinderAuthenticationProviderTest.testAddNewUserIntoLocal()", "testcase": true, "constructor": false, "invocations": ["createNew", "setEmail", "setUserId", "setPassword", "setUserName", "addNewUserIntoLocal", "loadUserByUsername", "getUserId", "assertThat", "getUsername", "equalTo", "getUserId"]}, "focal_class": {"identifier": "NGrinderAuthenticationProvider", "superclass": "extends AbstractUserDetailsAuthenticationProvider", "interfaces": "", "fields": [{"original_string": "protected static final Logger LOG = LoggerFactory.getLogger(NGrinderAuthenticationProvider.class);", "modifier": "protected static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(NGrinderAuthenticationProvider.class)", "var_name": "LOG"}, {"original_string": "@Getter\n\t@Setter\n\tprivate PluginManager pluginManager;", "modifier": "@Getter\n\t@Setter\n\tprivate", "type": "PluginManager", "declarator": "pluginManager", "var_name": "pluginManager"}, {"original_string": "private DefaultLoginPlugin defaultLoginPlugin;", "modifier": "private", "type": "DefaultLoginPlugin", "declarator": "defaultLoginPlugin", "var_name": "defaultLoginPlugin"}, {"original_string": "private DefaultLdapLoginPlugin defaultLdapLoginPlugin;", "modifier": "private", "type": "DefaultLdapLoginPlugin", "declarator": "defaultLdapLoginPlugin", "var_name": "defaultLdapLoginPlugin"}, {"original_string": "@Getter(AccessLevel.PROTECTED)\n\tprivate ShaPasswordEncoder passwordEncoder;", "modifier": "@Getter(AccessLevel.PROTECTED)\n\tprivate", "type": "ShaPasswordEncoder", "declarator": "passwordEncoder", "var_name": "passwordEncoder"}, {"original_string": "@Getter(AccessLevel.PROTECTED)\n\t@Setter\n\tprivate UserDetailsService userDetailsService;", "modifier": "@Getter(AccessLevel.PROTECTED)\n\t@Setter\n\tprivate", "type": "UserDetailsService", "declarator": "userDetailsService", "var_name": "userDetailsService"}, {"original_string": "private UserService userService;", "modifier": "private", "type": "UserService", "declarator": "userService", "var_name": "userService"}], "methods": [{"identifier": "NGrinderAuthenticationProvider", "parameters": "(PluginManager pluginManager, DefaultLoginPlugin defaultLoginPlugin, DefaultLdapLoginPlugin defaultLdapLoginPlugin,\n\t\t\t\t\t\t\t\t\t\t  @Lazy ShaPasswordEncoder passwordEncoder, UserDetailsService userDetailsService, UserService userService)", "modifiers": "public", "return": "", "signature": " NGrinderAuthenticationProvider(PluginManager pluginManager, DefaultLoginPlugin defaultLoginPlugin, DefaultLdapLoginPlugin defaultLdapLoginPlugin,\n\t\t\t\t\t\t\t\t\t\t  @Lazy ShaPasswordEncoder passwordEncoder, UserDetailsService userDetailsService, UserService userService)", "full_signature": "public  NGrinderAuthenticationProvider(PluginManager pluginManager, DefaultLoginPlugin defaultLoginPlugin, DefaultLdapLoginPlugin defaultLdapLoginPlugin,\n\t\t\t\t\t\t\t\t\t\t  @Lazy ShaPasswordEncoder passwordEncoder, UserDetailsService userDetailsService, UserService userService)", "class_method_signature": "NGrinderAuthenticationProvider.NGrinderAuthenticationProvider(PluginManager pluginManager, DefaultLoginPlugin defaultLoginPlugin, DefaultLdapLoginPlugin defaultLdapLoginPlugin,\n\t\t\t\t\t\t\t\t\t\t  @Lazy ShaPasswordEncoder passwordEncoder, UserDetailsService userDetailsService, UserService userService)", "testcase": false, "constructor": true}, {"identifier": "additionalAuthenticationChecks", "parameters": "(UserDetails userDetails,\n\t\t\tUsernamePasswordAuthenticationToken authentication)", "modifiers": "@SuppressWarnings(\"deprecation\") @Override protected", "return": "void", "signature": "void additionalAuthenticationChecks(UserDetails userDetails,\n\t\t\tUsernamePasswordAuthenticationToken authentication)", "full_signature": "@SuppressWarnings(\"deprecation\") @Override protected void additionalAuthenticationChecks(UserDetails userDetails,\n\t\t\tUsernamePasswordAuthenticationToken authentication)", "class_method_signature": "NGrinderAuthenticationProvider.additionalAuthenticationChecks(UserDetails userDetails,\n\t\t\tUsernamePasswordAuthenticationToken authentication)", "testcase": false, "constructor": false}, {"identifier": "addNewUserIntoLocal", "parameters": "(SecuredUser securedUser)", "modifiers": "@Transactional public", "return": "void", "signature": "void addNewUserIntoLocal(SecuredUser securedUser)", "full_signature": "@Transactional public void addNewUserIntoLocal(SecuredUser securedUser)", "class_method_signature": "NGrinderAuthenticationProvider.addNewUserIntoLocal(SecuredUser securedUser)", "testcase": false, "constructor": false}, {"identifier": "doAfterPropertiesSet", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void doAfterPropertiesSet()", "full_signature": "@Override protected void doAfterPropertiesSet()", "class_method_signature": "NGrinderAuthenticationProvider.doAfterPropertiesSet()", "testcase": false, "constructor": false}, {"identifier": "retrieveUser", "parameters": "(String username, UsernamePasswordAuthenticationToken authentication)", "modifiers": "@Override protected final", "return": "UserDetails", "signature": "UserDetails retrieveUser(String username, UsernamePasswordAuthenticationToken authentication)", "full_signature": "@Override protected final UserDetails retrieveUser(String username, UsernamePasswordAuthenticationToken authentication)", "class_method_signature": "NGrinderAuthenticationProvider.retrieveUser(String username, UsernamePasswordAuthenticationToken authentication)", "testcase": false, "constructor": false}], "file": "ngrinder-controller/src/main/java/org/ngrinder/security/NGrinderAuthenticationProvider.java"}, "focal_method": {"identifier": "addNewUserIntoLocal", "parameters": "(SecuredUser securedUser)", "modifiers": "@Transactional public", "return": "void", "body": "@Transactional\n\tpublic void addNewUserIntoLocal(SecuredUser securedUser) {\n\t\tUser user = securedUser.getUser();\n\t\tuser.setAuthProviderClass(securedUser.getUserInfoProviderClass());\n\t\tuser.setCreatedDate(new Date());\n\t\tUser newUser = userService.getOne(user.getUserId());\n\t\tif (newUser != null) {\n\t\t\tuser = newUser.merge(user);\n\t\t}\n\t\tif (user.getRole() == null) {\n\t\t\tuser.setRole(Role.USER);\n\t\t}\n\t\tUser savedUser = userService.save(user);\n\t\tsecuredUser.setUser(savedUser);\n\t}", "signature": "void addNewUserIntoLocal(SecuredUser securedUser)", "full_signature": "@Transactional public void addNewUserIntoLocal(SecuredUser securedUser)", "class_method_signature": "NGrinderAuthenticationProvider.addNewUserIntoLocal(SecuredUser securedUser)", "testcase": false, "constructor": false, "invocations": ["getUser", "setAuthProviderClass", "getUserInfoProviderClass", "setCreatedDate", "getOne", "getUserId", "merge", "getRole", "setRole", "save", "setUser"]}, "repository": {"repo_id": 4709330, "url": "https://github.com/naver/ngrinder", "stars": 1044, "created": "6/19/2012 4:14:15 AM +00:00", "updates": "2020-01-22T18:51:58+00:00", "fork": "False", "license": "licensed"}}