{"test_class": {"identifier": "SdpFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String localAddress = \"127.0.0.1\";", "modifier": "private final", "type": "String", "declarator": "localAddress = \"127.0.0.1\"", "var_name": "localAddress"}, {"original_string": "private final String externalAddress = \"external.address.com\";", "modifier": "private final", "type": "String", "declarator": "externalAddress = \"external.address.com\"", "var_name": "externalAddress"}, {"original_string": "private final String rtpAddress = \"rtp.address.com\";", "modifier": "private final", "type": "String", "declarator": "rtpAddress = \"rtp.address.com\"", "var_name": "rtpAddress"}, {"original_string": "private final String rtcpAddress = \"rtcp.address.com\";", "modifier": "private final", "type": "String", "declarator": "rtcpAddress = \"rtcp.address.com\"", "var_name": "rtcpAddress"}, {"original_string": "private Format audioFormat = FormatFactory.createAudioFormat(new EncodingName(\"audio\"));", "modifier": "private", "type": "Format", "declarator": "audioFormat = FormatFactory.createAudioFormat(new EncodingName(\"audio\"))", "var_name": "audioFormat"}, {"original_string": "private RTPFormat rtpFormat = new RTPFormat(0, audioFormat);", "modifier": "private", "type": "RTPFormat", "declarator": "rtpFormat = new RTPFormat(0, audioFormat)", "var_name": "rtpFormat"}, {"original_string": "private RTPFormats rtpFormats = new RTPFormats();", "modifier": "private", "type": "RTPFormats", "declarator": "rtpFormats = new RTPFormats()", "var_name": "rtpFormats"}], "file": "rtp/src/test/java/org/restcomm/media/core/rtp/sdp/SdpFactoryTest.java"}, "test_case": {"identifier": "testRejectImageMediaType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRejectImageMediaType() throws SdpException {\n        // given\n        String imageSDP = \"m=image 52550 udptl t38\\n\\r\";\n        MediaDescriptionFieldParser mediaFieldParser = new MediaDescriptionFieldParser();\n        MediaDescriptionField applicationField = mediaFieldParser.parse(imageSDP);\n\n        SessionDescription answer = new SessionDescription();\n\n        // when\n        SdpFactory.rejectMediaField(answer, applicationField);\n\n        // then\n        MediaDescriptionField mediaDescription = answer.getMediaDescription(\"image\");\n        Assert.assertNotNull(mediaDescription);\n        Assert.assertEquals(0, mediaDescription.getPort());\n        Assert.assertEquals(\"udptl\", mediaDescription.getProtocol());\n        String[] payloadTypes = mediaDescription.getPayloadTypes();\n        Assert.assertEquals(1, payloadTypes.length);\n        Assert.assertEquals(\"t38\", payloadTypes[0]);\n    }", "signature": "void testRejectImageMediaType()", "full_signature": "@Test public void testRejectImageMediaType()", "class_method_signature": "SdpFactoryTest.testRejectImageMediaType()", "testcase": true, "constructor": false, "invocations": ["parse", "rejectMediaField", "getMediaDescription", "assertNotNull", "assertEquals", "getPort", "assertEquals", "getProtocol", "getPayloadTypes", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "SdpFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "buildSdp", "parameters": "(boolean offer, String localAddress, String externalAddress, MediaChannel... channels)", "modifiers": "public static", "return": "SessionDescription", "signature": "SessionDescription buildSdp(boolean offer, String localAddress, String externalAddress, MediaChannel... channels)", "full_signature": "public static SessionDescription buildSdp(boolean offer, String localAddress, String externalAddress, MediaChannel... channels)", "class_method_signature": "SdpFactory.buildSdp(boolean offer, String localAddress, String externalAddress, MediaChannel... channels)", "testcase": false, "constructor": false}, {"identifier": "rejectMediaField", "parameters": "(SessionDescription answer, MediaDescriptionField media)", "modifiers": "public static", "return": "void", "signature": "void rejectMediaField(SessionDescription answer, MediaDescriptionField media)", "full_signature": "public static void rejectMediaField(SessionDescription answer, MediaDescriptionField media)", "class_method_signature": "SdpFactory.rejectMediaField(SessionDescription answer, MediaDescriptionField media)", "testcase": false, "constructor": false}, {"identifier": "buildMediaDescription", "parameters": "(MediaChannel channel, boolean offer)", "modifiers": "public static", "return": "MediaDescriptionField", "signature": "MediaDescriptionField buildMediaDescription(MediaChannel channel, boolean offer)", "full_signature": "public static MediaDescriptionField buildMediaDescription(MediaChannel channel, boolean offer)", "class_method_signature": "SdpFactory.buildMediaDescription(MediaChannel channel, boolean offer)", "testcase": false, "constructor": false}, {"identifier": "processCandidate", "parameters": "(IceCandidate candidate)", "modifiers": "private static", "return": "CandidateAttribute", "signature": "CandidateAttribute processCandidate(IceCandidate candidate)", "full_signature": "private static CandidateAttribute processCandidate(IceCandidate candidate)", "class_method_signature": "SdpFactory.processCandidate(IceCandidate candidate)", "testcase": false, "constructor": false}, {"identifier": "processHostCandidate", "parameters": "(MediaChannel candidate, short componentId)", "modifiers": "private static", "return": "CandidateAttribute", "signature": "CandidateAttribute processHostCandidate(MediaChannel candidate, short componentId)", "full_signature": "private static CandidateAttribute processHostCandidate(MediaChannel candidate, short componentId)", "class_method_signature": "SdpFactory.processHostCandidate(MediaChannel candidate, short componentId)", "testcase": false, "constructor": false}, {"identifier": "processSrflxCandidate", "parameters": "(MediaChannel candidate, short componentId)", "modifiers": "private static", "return": "CandidateAttribute", "signature": "CandidateAttribute processSrflxCandidate(MediaChannel candidate, short componentId)", "full_signature": "private static CandidateAttribute processSrflxCandidate(MediaChannel candidate, short componentId)", "class_method_signature": "SdpFactory.processSrflxCandidate(MediaChannel candidate, short componentId)", "testcase": false, "constructor": false}], "file": "rtp/src/main/java/org/restcomm/media/core/rtp/sdp/SdpFactory.java"}, "focal_method": {"identifier": "rejectMediaField", "parameters": "(SessionDescription answer, MediaDescriptionField media)", "modifiers": "public static", "return": "void", "body": "public static void rejectMediaField(SessionDescription answer, MediaDescriptionField media) {\n\t\tMediaDescriptionField rejected = new MediaDescriptionField();\n\t\trejected.setMedia(media.getMedia());\n\t\trejected.setPort(0);\n\t\trejected.setProtocol(media.getProtocol());\n\t\trejected.setPayloadTypes(media.getPayloadTypes());\n\t\t\n\t\trejected.setSession(answer);\n\t\tanswer.addMediaDescription(rejected);\n\t}", "signature": "void rejectMediaField(SessionDescription answer, MediaDescriptionField media)", "full_signature": "public static void rejectMediaField(SessionDescription answer, MediaDescriptionField media)", "class_method_signature": "SdpFactory.rejectMediaField(SessionDescription answer, MediaDescriptionField media)", "testcase": false, "constructor": false, "invocations": ["setMedia", "getMedia", "setPort", "setProtocol", "getProtocol", "setPayloadTypes", "getPayloadTypes", "setSession", "addMediaDescription"]}, "repository": {"repo_id": 5455433, "url": "https://github.com/RestComm/media-core", "language": "Java", "is_fork": false, "fork_count": 110, "stargazer_count": 132, "size": 98455, "license": "licensed"}}