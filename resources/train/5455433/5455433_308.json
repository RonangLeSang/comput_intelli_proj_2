{"test_class": {"identifier": "SignalsRequestParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "control/mgcp/src/test/java/org/restcomm/media/core/control/mgcp/pkg/SignalsRequestParserTest.java"}, "test_case": {"identifier": "testParseWhenMissingParameterStartSeparator", "parameters": "()", "modifiers": "@Test(expected = MgcpParseException.class) public", "return": "void", "body": "@Test(expected = MgcpParseException.class)\n    public void testParseWhenMissingParameterStartSeparator() throws MgcpParseException {\n        // given\n        final String request = \"AU/pa an=https://127.0.0.1:8080/restcomm/cache/ACae6e420f4/5a26d12996.wav it=1)\";\n\n        // when\n        SignalsRequestParser.parse(request);\n    }", "signature": "void testParseWhenMissingParameterStartSeparator()", "full_signature": "@Test(expected = MgcpParseException.class) public void testParseWhenMissingParameterStartSeparator()", "class_method_signature": "SignalsRequestParserTest.testParseWhenMissingParameterStartSeparator()", "testcase": true, "constructor": false, "invocations": ["parse"]}, "focal_class": {"identifier": "SignalsRequestParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String NAMESPACE_SEPARATOR = \"/\";", "modifier": "private static final", "type": "String", "declarator": "NAMESPACE_SEPARATOR = \"/\"", "var_name": "NAMESPACE_SEPARATOR"}, {"original_string": "private static final String START_PARAM_SEPARATOR = \"(\";", "modifier": "private static final", "type": "String", "declarator": "START_PARAM_SEPARATOR = \"(\"", "var_name": "START_PARAM_SEPARATOR"}, {"original_string": "private static final String END_PARAM_SEPARATOR = \")\";", "modifier": "private static final", "type": "String", "declarator": "END_PARAM_SEPARATOR = \")\"", "var_name": "END_PARAM_SEPARATOR"}, {"original_string": "private static final String PARAM_SEPARATOR = \" \";", "modifier": "private static final", "type": "String", "declarator": "PARAM_SEPARATOR = \" \"", "var_name": "PARAM_SEPARATOR"}, {"original_string": "private static final String VALUE_SEPARATOR = \"=\";", "modifier": "private static final", "type": "String", "declarator": "VALUE_SEPARATOR = \"=\"", "var_name": "VALUE_SEPARATOR"}], "methods": [{"identifier": "parse", "parameters": "(String request)", "modifiers": "public static", "return": "SignalRequest[]", "signature": "SignalRequest[] parse(String request)", "full_signature": "public static SignalRequest[] parse(String request)", "class_method_signature": "SignalsRequestParser.parse(String request)", "testcase": false, "constructor": false}, {"identifier": "parseSingle", "parameters": "(String request)", "modifiers": "private static", "return": "SignalRequest", "signature": "SignalRequest parseSingle(String request)", "full_signature": "private static SignalRequest parseSingle(String request)", "class_method_signature": "SignalsRequestParser.parseSingle(String request)", "testcase": false, "constructor": false}], "file": "control/mgcp/src/main/java/org/restcomm/media/core/control/mgcp/pkg/SignalsRequestParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(String request)", "modifiers": "public static", "return": "SignalRequest[]", "body": "public static SignalRequest[] parse(String request) throws MgcpParseException {\n        String[] signals = request.split(\"\\\\),\");\n        SignalRequest[] signalRequests = new SignalRequest[signals.length];\n        \n        for (int i = 0; i < signals.length; i++) {\n            signalRequests[i] = parseSingle(signals[i].trim() + \")\");\n        }\n        return signalRequests;\n    }", "signature": "SignalRequest[] parse(String request)", "full_signature": "public static SignalRequest[] parse(String request)", "class_method_signature": "SignalsRequestParser.parse(String request)", "testcase": false, "constructor": false, "invocations": ["split", "parseSingle", "trim"]}, "repository": {"repo_id": 5455433, "url": "https://github.com/RestComm/media-core", "language": "Java", "is_fork": false, "fork_count": 110, "stargazer_count": 132, "size": 98455, "license": "licensed"}}