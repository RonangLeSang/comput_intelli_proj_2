{"test_class": {"identifier": "SessionNameFieldParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final SessionNameFieldParser parser = new SessionNameFieldParser();", "modifier": "private final", "type": "SessionNameFieldParser", "declarator": "parser = new SessionNameFieldParser()", "var_name": "parser"}], "file": "sdp/src/test/java/org/restcomm/media/core/sdp/fields/parser/SessionNameFieldParserTest.java"}, "test_case": {"identifier": "testParseOverwrite", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testParseOverwrite() throws SdpException {\n\t\t// given\n\t\tString line1 = \"s=xyz\\n\\r\";\n\t\tString line2 = \"s=abc\\n\\r\";\n\t\t\n\t\t// when\n\t\tSessionNameField field = parser.parse(line1);\n\t\tparser.parse(field, line2);\n\t\t\n\t\t// then\n\t\tAssert.assertEquals(\"abc\", field.getName());\n\t}", "signature": "void testParseOverwrite()", "full_signature": "@Test public void testParseOverwrite()", "class_method_signature": "SessionNameFieldParserTest.testParseOverwrite()", "testcase": true, "constructor": false, "invocations": ["parse", "parse", "assertEquals", "getName"]}, "focal_class": {"identifier": "SessionNameFieldParser", "superclass": "", "interfaces": "implements SdpParser<SessionNameField>", "fields": [{"original_string": "private static final String REGEX = \"^s=\\\\s|(\\\\S+\\\\s?)+$\";", "modifier": "private static final", "type": "String", "declarator": "REGEX = \"^s=\\\\s|(\\\\S+\\\\s?)+$\"", "var_name": "REGEX"}, {"original_string": "private static final Pattern PATTERN = Pattern.compile(REGEX);", "modifier": "private static final", "type": "Pattern", "declarator": "PATTERN = Pattern.compile(REGEX)", "var_name": "PATTERN"}], "methods": [{"identifier": "canParse", "parameters": "(String sdp)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canParse(String sdp)", "full_signature": "@Override public boolean canParse(String sdp)", "class_method_signature": "SessionNameFieldParser.canParse(String sdp)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String sdp)", "modifiers": "@Override public", "return": "SessionNameField", "signature": "SessionNameField parse(String sdp)", "full_signature": "@Override public SessionNameField parse(String sdp)", "class_method_signature": "SessionNameFieldParser.parse(String sdp)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(SessionNameField field, String sdp)", "modifiers": "@Override public", "return": "void", "signature": "void parse(SessionNameField field, String sdp)", "full_signature": "@Override public void parse(SessionNameField field, String sdp)", "class_method_signature": "SessionNameFieldParser.parse(SessionNameField field, String sdp)", "testcase": false, "constructor": false}], "file": "sdp/src/main/java/org/restcomm/media/core/sdp/fields/parser/SessionNameFieldParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(String sdp)", "modifiers": "@Override public", "return": "SessionNameField", "body": "@Override\n\tpublic SessionNameField parse(String sdp) throws SdpException {\n\t\ttry {\n\t\t\treturn new SessionNameField(sdp.trim().substring(2));\n\t\t} catch (Exception e) {\n\t\t\tthrow new SdpException(PARSE_ERROR + sdp, e);\n\t\t}\n\t}", "signature": "SessionNameField parse(String sdp)", "full_signature": "@Override public SessionNameField parse(String sdp)", "class_method_signature": "SessionNameFieldParser.parse(String sdp)", "testcase": false, "constructor": false, "invocations": ["substring", "trim"]}, "repository": {"repo_id": 5455433, "url": "https://github.com/RestComm/media-core", "language": "Java", "is_fork": false, "fork_count": 110, "stargazer_count": 132, "size": 98455, "license": "licensed"}}