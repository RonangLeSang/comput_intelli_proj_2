{"test_class": {"identifier": "LookupCoordinatorResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ObjectMapper MAPPER = new DefaultObjectMapper();", "modifier": "private static final", "type": "ObjectMapper", "declarator": "MAPPER = new DefaultObjectMapper()", "var_name": "MAPPER"}, {"original_string": "private static final String LOOKUP_TIER = \"lookupTier\";", "modifier": "private static final", "type": "String", "declarator": "LOOKUP_TIER = \"lookupTier\"", "var_name": "LOOKUP_TIER"}, {"original_string": "private static final String LOOKUP_NAME = \"lookupName\";", "modifier": "private static final", "type": "String", "declarator": "LOOKUP_NAME = \"lookupName\"", "var_name": "LOOKUP_NAME"}, {"original_string": "private static final LookupExtractorFactoryMapContainer SINGLE_LOOKUP = new LookupExtractorFactoryMapContainer(\n      \"v0\",\n      ImmutableMap.of()\n  );", "modifier": "private static final", "type": "LookupExtractorFactoryMapContainer", "declarator": "SINGLE_LOOKUP = new LookupExtractorFactoryMapContainer(\n      \"v0\",\n      ImmutableMap.of()\n  )", "var_name": "SINGLE_LOOKUP"}, {"original_string": "private static final Map<String, LookupExtractorFactoryMapContainer> SINGLE_LOOKUP_MAP = ImmutableMap.of(\n      LOOKUP_NAME,\n      SINGLE_LOOKUP\n  );", "modifier": "private static final", "type": "Map<String, LookupExtractorFactoryMapContainer>", "declarator": "SINGLE_LOOKUP_MAP = ImmutableMap.of(\n      LOOKUP_NAME,\n      SINGLE_LOOKUP\n  )", "var_name": "SINGLE_LOOKUP_MAP"}, {"original_string": "private static final Map<String, Map<String, LookupExtractorFactoryMapContainer>> SINGLE_TIER_MAP = ImmutableMap.of(\n      LOOKUP_TIER,\n      SINGLE_LOOKUP_MAP\n  );", "modifier": "private static final", "type": "Map<String, Map<String, LookupExtractorFactoryMapContainer>>", "declarator": "SINGLE_TIER_MAP = ImmutableMap.of(\n      LOOKUP_TIER,\n      SINGLE_LOOKUP_MAP\n  )", "var_name": "SINGLE_TIER_MAP"}, {"original_string": "private static final ByteSource SINGLE_TIER_MAP_SOURCE = new ByteSource()\n  {\n    @Override\n    public InputStream openStream() throws IOException\n    {\n      return new ByteArrayInputStream(StringUtils.toUtf8(MAPPER.writeValueAsString(SINGLE_TIER_MAP)));\n    }\n  };", "modifier": "private static final", "type": "ByteSource", "declarator": "SINGLE_TIER_MAP_SOURCE = new ByteSource()\n  {\n    @Override\n    public InputStream openStream() throws IOException\n    {\n      return new ByteArrayInputStream(StringUtils.toUtf8(MAPPER.writeValueAsString(SINGLE_TIER_MAP)));\n    }\n  }", "var_name": "SINGLE_TIER_MAP_SOURCE"}, {"original_string": "private static final ByteSource EMPTY_MAP_SOURCE = new ByteSource()\n  {\n    @Override\n    public InputStream openStream() throws IOException\n    {\n      return new ByteArrayInputStream(StringUtils.toUtf8(MAPPER.writeValueAsString(SINGLE_LOOKUP)));\n    }\n  };", "modifier": "private static final", "type": "ByteSource", "declarator": "EMPTY_MAP_SOURCE = new ByteSource()\n  {\n    @Override\n    public InputStream openStream() throws IOException\n    {\n      return new ByteArrayInputStream(StringUtils.toUtf8(MAPPER.writeValueAsString(SINGLE_LOOKUP)));\n    }\n  }", "var_name": "EMPTY_MAP_SOURCE"}, {"original_string": "private static final HostAndPort LOOKUP_NODE = HostAndPort.fromParts(\"localhost\", 1111);", "modifier": "private static final", "type": "HostAndPort", "declarator": "LOOKUP_NODE = HostAndPort.fromParts(\"localhost\", 1111)", "var_name": "LOOKUP_NODE"}, {"original_string": "private static final LookupsState<LookupExtractorFactoryMapContainer> LOOKUP_STATE = new LookupsState(\n      ImmutableMap.of(LOOKUP_NAME, SINGLE_LOOKUP), null, null\n  );", "modifier": "private static final", "type": "LookupsState<LookupExtractorFactoryMapContainer>", "declarator": "LOOKUP_STATE = new LookupsState(\n      ImmutableMap.of(LOOKUP_NAME, SINGLE_LOOKUP), null, null\n  )", "var_name": "LOOKUP_STATE"}, {"original_string": "private static final Map<HostAndPort, LookupsState<LookupExtractorFactoryMapContainer>> NODES_LOOKUP_STATE =\n      ImmutableMap.of(LOOKUP_NODE, LOOKUP_STATE);", "modifier": "private static final", "type": "Map<HostAndPort, LookupsState<LookupExtractorFactoryMapContainer>>", "declarator": "NODES_LOOKUP_STATE =\n      ImmutableMap.of(LOOKUP_NODE, LOOKUP_STATE)", "var_name": "NODES_LOOKUP_STATE"}], "file": "server/src/test/java/org/apache/druid/server/http/LookupCoordinatorResourceTest.java"}, "test_case": {"identifier": "testMissingGetTier", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testMissingGetTier()\n  {\n    final String tier = \"some tier\";\n    final LookupCoordinatorManager lookupCoordinatorManager = EasyMock.createStrictMock(LookupCoordinatorManager.class);\n    final Map<String, Map<String, Map<String, Object>>> retVal =\n        ImmutableMap.of();\n    EasyMock.expect(lookupCoordinatorManager.getKnownLookups()).andReturn(SINGLE_TIER_MAP).once();\n    EasyMock.replay(lookupCoordinatorManager);\n    final LookupCoordinatorResource lookupCoordinatorResource = new LookupCoordinatorResource(\n        lookupCoordinatorManager,\n        MAPPER,\n        MAPPER\n    );\n    final Response response = lookupCoordinatorResource.getSpecificTier(tier, false);\n    Assert.assertEquals(404, response.getStatus());\n    EasyMock.verify(lookupCoordinatorManager);\n  }", "signature": "void testMissingGetTier()", "full_signature": "@Test public void testMissingGetTier()", "class_method_signature": "LookupCoordinatorResourceTest.testMissingGetTier()", "testcase": true, "constructor": false, "invocations": ["createStrictMock", "of", "once", "andReturn", "expect", "getKnownLookups", "replay", "getSpecificTier", "assertEquals", "getStatus", "verify"]}, "focal_class": {"identifier": "LookupCoordinatorResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = new Logger(LookupCoordinatorResource.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = new Logger(LookupCoordinatorResource.class)", "var_name": "LOG"}, {"original_string": "private final LookupCoordinatorManager lookupCoordinatorManager;", "modifier": "private final", "type": "LookupCoordinatorManager", "declarator": "lookupCoordinatorManager", "var_name": "lookupCoordinatorManager"}, {"original_string": "private final ObjectMapper smileMapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "smileMapper", "var_name": "smileMapper"}, {"original_string": "private final ObjectMapper jsonMapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "jsonMapper", "var_name": "jsonMapper"}], "methods": [{"identifier": "LookupCoordinatorResource", "parameters": "(\n      final LookupCoordinatorManager lookupCoordinatorManager,\n      final @Smile ObjectMapper smileMapper,\n      final @Json ObjectMapper jsonMapper\n  )", "modifiers": "@Inject public", "return": "", "signature": " LookupCoordinatorResource(\n      final LookupCoordinatorManager lookupCoordinatorManager,\n      final @Smile ObjectMapper smileMapper,\n      final @Json ObjectMapper jsonMapper\n  )", "full_signature": "@Inject public  LookupCoordinatorResource(\n      final LookupCoordinatorManager lookupCoordinatorManager,\n      final @Smile ObjectMapper smileMapper,\n      final @Json ObjectMapper jsonMapper\n  )", "class_method_signature": "LookupCoordinatorResource.LookupCoordinatorResource(\n      final LookupCoordinatorManager lookupCoordinatorManager,\n      final @Smile ObjectMapper smileMapper,\n      final @Json ObjectMapper jsonMapper\n  )", "testcase": false, "constructor": true}, {"identifier": "getTiers", "parameters": "(\n      @DefaultValue(\"false\") @QueryParam(\"discover\") boolean discover\n  )", "modifiers": "@GET @Path(\"/config\") @Produces({MediaType.APPLICATION_JSON, SmileMediaTypes.APPLICATION_JACKSON_SMILE}) public", "return": "Response", "signature": "Response getTiers(\n      @DefaultValue(\"false\") @QueryParam(\"discover\") boolean discover\n  )", "full_signature": "@GET @Path(\"/config\") @Produces({MediaType.APPLICATION_JSON, SmileMediaTypes.APPLICATION_JACKSON_SMILE}) public Response getTiers(\n      @DefaultValue(\"false\") @QueryParam(\"discover\") boolean discover\n  )", "class_method_signature": "LookupCoordinatorResource.getTiers(\n      @DefaultValue(\"false\") @QueryParam(\"discover\") boolean discover\n  )", "testcase": false, "constructor": false}, {"identifier": "getAllLookupSpecs", "parameters": "()", "modifiers": "@GET @Produces({MediaType.APPLICATION_JSON}) @Path(\"/config/all\") public", "return": "Response", "signature": "Response getAllLookupSpecs()", "full_signature": "@GET @Produces({MediaType.APPLICATION_JSON}) @Path(\"/config/all\") public Response getAllLookupSpecs()", "class_method_signature": "LookupCoordinatorResource.getAllLookupSpecs()", "testcase": false, "constructor": false}, {"identifier": "updateAllLookups", "parameters": "(\n      InputStream in,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      @Context HttpServletRequest req\n  )", "modifiers": "@POST @Path(\"/config\") @Produces({MediaType.APPLICATION_JSON, SmileMediaTypes.APPLICATION_JACKSON_SMILE}) @Consumes({MediaType.APPLICATION_JSON, SmileMediaTypes.APPLICATION_JACKSON_SMILE}) public", "return": "Response", "signature": "Response updateAllLookups(\n      InputStream in,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      @Context HttpServletRequest req\n  )", "full_signature": "@POST @Path(\"/config\") @Produces({MediaType.APPLICATION_JSON, SmileMediaTypes.APPLICATION_JACKSON_SMILE}) @Consumes({MediaType.APPLICATION_JSON, SmileMediaTypes.APPLICATION_JACKSON_SMILE}) public Response updateAllLookups(\n      InputStream in,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      @Context HttpServletRequest req\n  )", "class_method_signature": "LookupCoordinatorResource.updateAllLookups(\n      InputStream in,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      @Context HttpServletRequest req\n  )", "testcase": false, "constructor": false}, {"identifier": "deleteTier", "parameters": "(\n      @PathParam(\"tier\") String tier,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      @Context HttpServletRequest req\n  )", "modifiers": "@DELETE @Produces({MediaType.APPLICATION_JSON, SmileMediaTypes.APPLICATION_JACKSON_SMILE}) @Path(\"/config/{tier}\") public", "return": "Response", "signature": "Response deleteTier(\n      @PathParam(\"tier\") String tier,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      @Context HttpServletRequest req\n  )", "full_signature": "@DELETE @Produces({MediaType.APPLICATION_JSON, SmileMediaTypes.APPLICATION_JACKSON_SMILE}) @Path(\"/config/{tier}\") public Response deleteTier(\n      @PathParam(\"tier\") String tier,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      @Context HttpServletRequest req\n  )", "class_method_signature": "LookupCoordinatorResource.deleteTier(\n      @PathParam(\"tier\") String tier,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      @Context HttpServletRequest req\n  )", "testcase": false, "constructor": false}, {"identifier": "deleteLookup", "parameters": "(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"lookup\") String lookup,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      @Context HttpServletRequest req\n  )", "modifiers": "@DELETE @Produces({MediaType.APPLICATION_JSON, SmileMediaTypes.APPLICATION_JACKSON_SMILE}) @Path(\"/config/{tier}/{lookup}\") public", "return": "Response", "signature": "Response deleteLookup(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"lookup\") String lookup,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      @Context HttpServletRequest req\n  )", "full_signature": "@DELETE @Produces({MediaType.APPLICATION_JSON, SmileMediaTypes.APPLICATION_JACKSON_SMILE}) @Path(\"/config/{tier}/{lookup}\") public Response deleteLookup(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"lookup\") String lookup,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      @Context HttpServletRequest req\n  )", "class_method_signature": "LookupCoordinatorResource.deleteLookup(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"lookup\") String lookup,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      @Context HttpServletRequest req\n  )", "testcase": false, "constructor": false}, {"identifier": "createOrUpdateLookup", "parameters": "(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"lookup\") String lookup,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      InputStream in,\n      @Context HttpServletRequest req\n  )", "modifiers": "@POST @Produces({MediaType.APPLICATION_JSON, SmileMediaTypes.APPLICATION_JACKSON_SMILE}) @Path(\"/config/{tier}/{lookup}\") public", "return": "Response", "signature": "Response createOrUpdateLookup(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"lookup\") String lookup,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      InputStream in,\n      @Context HttpServletRequest req\n  )", "full_signature": "@POST @Produces({MediaType.APPLICATION_JSON, SmileMediaTypes.APPLICATION_JACKSON_SMILE}) @Path(\"/config/{tier}/{lookup}\") public Response createOrUpdateLookup(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"lookup\") String lookup,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      InputStream in,\n      @Context HttpServletRequest req\n  )", "class_method_signature": "LookupCoordinatorResource.createOrUpdateLookup(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"lookup\") String lookup,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      InputStream in,\n      @Context HttpServletRequest req\n  )", "testcase": false, "constructor": false}, {"identifier": "getSpecificLookup", "parameters": "(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"lookup\") String lookup\n  )", "modifiers": "@GET @Produces({MediaType.APPLICATION_JSON, SmileMediaTypes.APPLICATION_JACKSON_SMILE}) @Path(\"/config/{tier}/{lookup}\") public", "return": "Response", "signature": "Response getSpecificLookup(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"lookup\") String lookup\n  )", "full_signature": "@GET @Produces({MediaType.APPLICATION_JSON, SmileMediaTypes.APPLICATION_JACKSON_SMILE}) @Path(\"/config/{tier}/{lookup}\") public Response getSpecificLookup(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"lookup\") String lookup\n  )", "class_method_signature": "LookupCoordinatorResource.getSpecificLookup(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"lookup\") String lookup\n  )", "testcase": false, "constructor": false}, {"identifier": "getSpecificTier", "parameters": "(\n      @PathParam(\"tier\") String tier,\n      @DefaultValue(\"false\") @QueryParam(\"detailed\") boolean detailed\n\n  )", "modifiers": "@GET @Produces({MediaType.APPLICATION_JSON, SmileMediaTypes.APPLICATION_JACKSON_SMILE}) @Path(\"/config/{tier}\") public", "return": "Response", "signature": "Response getSpecificTier(\n      @PathParam(\"tier\") String tier,\n      @DefaultValue(\"false\") @QueryParam(\"detailed\") boolean detailed\n\n  )", "full_signature": "@GET @Produces({MediaType.APPLICATION_JSON, SmileMediaTypes.APPLICATION_JACKSON_SMILE}) @Path(\"/config/{tier}\") public Response getSpecificTier(\n      @PathParam(\"tier\") String tier,\n      @DefaultValue(\"false\") @QueryParam(\"detailed\") boolean detailed\n\n  )", "class_method_signature": "LookupCoordinatorResource.getSpecificTier(\n      @PathParam(\"tier\") String tier,\n      @DefaultValue(\"false\") @QueryParam(\"detailed\") boolean detailed\n\n  )", "testcase": false, "constructor": false}, {"identifier": "getAllLookupsStatus", "parameters": "(\n      @QueryParam(\"detailed\") boolean detailed\n  )", "modifiers": "@GET @Produces({MediaType.APPLICATION_JSON}) @Path(\"/status\") public", "return": "Response", "signature": "Response getAllLookupsStatus(\n      @QueryParam(\"detailed\") boolean detailed\n  )", "full_signature": "@GET @Produces({MediaType.APPLICATION_JSON}) @Path(\"/status\") public Response getAllLookupsStatus(\n      @QueryParam(\"detailed\") boolean detailed\n  )", "class_method_signature": "LookupCoordinatorResource.getAllLookupsStatus(\n      @QueryParam(\"detailed\") boolean detailed\n  )", "testcase": false, "constructor": false}, {"identifier": "getLookupStatusForTier", "parameters": "(\n      @PathParam(\"tier\") String tier,\n      @QueryParam(\"detailed\") boolean detailed\n  )", "modifiers": "@GET @Produces({MediaType.APPLICATION_JSON}) @Path(\"/status/{tier}\") public", "return": "Response", "signature": "Response getLookupStatusForTier(\n      @PathParam(\"tier\") String tier,\n      @QueryParam(\"detailed\") boolean detailed\n  )", "full_signature": "@GET @Produces({MediaType.APPLICATION_JSON}) @Path(\"/status/{tier}\") public Response getLookupStatusForTier(\n      @PathParam(\"tier\") String tier,\n      @QueryParam(\"detailed\") boolean detailed\n  )", "class_method_signature": "LookupCoordinatorResource.getLookupStatusForTier(\n      @PathParam(\"tier\") String tier,\n      @QueryParam(\"detailed\") boolean detailed\n  )", "testcase": false, "constructor": false}, {"identifier": "getSpecificLookupStatus", "parameters": "(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"lookup\") String lookup,\n      @QueryParam(\"detailed\") boolean detailed\n  )", "modifiers": "@GET @Produces({MediaType.APPLICATION_JSON}) @Path(\"/status/{tier}/{lookup}\") public", "return": "Response", "signature": "Response getSpecificLookupStatus(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"lookup\") String lookup,\n      @QueryParam(\"detailed\") boolean detailed\n  )", "full_signature": "@GET @Produces({MediaType.APPLICATION_JSON}) @Path(\"/status/{tier}/{lookup}\") public Response getSpecificLookupStatus(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"lookup\") String lookup,\n      @QueryParam(\"detailed\") boolean detailed\n  )", "class_method_signature": "LookupCoordinatorResource.getSpecificLookupStatus(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"lookup\") String lookup,\n      @QueryParam(\"detailed\") boolean detailed\n  )", "testcase": false, "constructor": false}, {"identifier": "getLookupStatus", "parameters": "(\n      String lookupName,\n      LookupExtractorFactoryMapContainer lookupDef,\n      Collection<HostAndPort> nodes,\n      Map<HostAndPort, LookupsState<LookupExtractorFactoryMapContainer>> lastKnownLookupsState,\n      boolean detailed\n  )", "modifiers": "@VisibleForTesting", "return": "LookupStatus", "signature": "LookupStatus getLookupStatus(\n      String lookupName,\n      LookupExtractorFactoryMapContainer lookupDef,\n      Collection<HostAndPort> nodes,\n      Map<HostAndPort, LookupsState<LookupExtractorFactoryMapContainer>> lastKnownLookupsState,\n      boolean detailed\n  )", "full_signature": "@VisibleForTesting LookupStatus getLookupStatus(\n      String lookupName,\n      LookupExtractorFactoryMapContainer lookupDef,\n      Collection<HostAndPort> nodes,\n      Map<HostAndPort, LookupsState<LookupExtractorFactoryMapContainer>> lastKnownLookupsState,\n      boolean detailed\n  )", "class_method_signature": "LookupCoordinatorResource.getLookupStatus(\n      String lookupName,\n      LookupExtractorFactoryMapContainer lookupDef,\n      Collection<HostAndPort> nodes,\n      Map<HostAndPort, LookupsState<LookupExtractorFactoryMapContainer>> lastKnownLookupsState,\n      boolean detailed\n  )", "testcase": false, "constructor": false}, {"identifier": "getAllNodesStatus", "parameters": "(\n      @QueryParam(\"discover\") boolean discover,\n      @QueryParam(\"detailed\") @Nullable Boolean detailed\n  )", "modifiers": "@GET @Produces({MediaType.APPLICATION_JSON}) @Path(\"/nodeStatus\") public", "return": "Response", "signature": "Response getAllNodesStatus(\n      @QueryParam(\"discover\") boolean discover,\n      @QueryParam(\"detailed\") @Nullable Boolean detailed\n  )", "full_signature": "@GET @Produces({MediaType.APPLICATION_JSON}) @Path(\"/nodeStatus\") public Response getAllNodesStatus(\n      @QueryParam(\"discover\") boolean discover,\n      @QueryParam(\"detailed\") @Nullable Boolean detailed\n  )", "class_method_signature": "LookupCoordinatorResource.getAllNodesStatus(\n      @QueryParam(\"discover\") boolean discover,\n      @QueryParam(\"detailed\") @Nullable Boolean detailed\n  )", "testcase": false, "constructor": false}, {"identifier": "getNodesStatusInTier", "parameters": "(\n      @PathParam(\"tier\") String tier\n  )", "modifiers": "@GET @Produces({MediaType.APPLICATION_JSON}) @Path(\"/nodeStatus/{tier}\") public", "return": "Response", "signature": "Response getNodesStatusInTier(\n      @PathParam(\"tier\") String tier\n  )", "full_signature": "@GET @Produces({MediaType.APPLICATION_JSON}) @Path(\"/nodeStatus/{tier}\") public Response getNodesStatusInTier(\n      @PathParam(\"tier\") String tier\n  )", "class_method_signature": "LookupCoordinatorResource.getNodesStatusInTier(\n      @PathParam(\"tier\") String tier\n  )", "testcase": false, "constructor": false}, {"identifier": "getSpecificNodeStatus", "parameters": "(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"hostAndPort\") HostAndPort hostAndPort\n  )", "modifiers": "@GET @Produces({MediaType.APPLICATION_JSON}) @Path(\"/nodeStatus/{tier}/{hostAndPort}\") public", "return": "Response", "signature": "Response getSpecificNodeStatus(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"hostAndPort\") HostAndPort hostAndPort\n  )", "full_signature": "@GET @Produces({MediaType.APPLICATION_JSON}) @Path(\"/nodeStatus/{tier}/{hostAndPort}\") public Response getSpecificNodeStatus(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"hostAndPort\") HostAndPort hostAndPort\n  )", "class_method_signature": "LookupCoordinatorResource.getSpecificNodeStatus(\n      @PathParam(\"tier\") String tier,\n      @PathParam(\"hostAndPort\") HostAndPort hostAndPort\n  )", "testcase": false, "constructor": false}, {"identifier": "getSimpleAllNodeStatus", "parameters": "(\n      Map<HostAndPort, LookupsState<LookupExtractorFactoryMapContainer>> lookupsStateOnHosts,\n      Collection<String> tiers\n  )", "modifiers": "private", "return": "Map<String, Map<HostAndPort, LookupsState<String>>>", "signature": "Map<String, Map<HostAndPort, LookupsState<String>>> getSimpleAllNodeStatus(\n      Map<HostAndPort, LookupsState<LookupExtractorFactoryMapContainer>> lookupsStateOnHosts,\n      Collection<String> tiers\n  )", "full_signature": "private Map<String, Map<HostAndPort, LookupsState<String>>> getSimpleAllNodeStatus(\n      Map<HostAndPort, LookupsState<LookupExtractorFactoryMapContainer>> lookupsStateOnHosts,\n      Collection<String> tiers\n  )", "class_method_signature": "LookupCoordinatorResource.getSimpleAllNodeStatus(\n      Map<HostAndPort, LookupsState<LookupExtractorFactoryMapContainer>> lookupsStateOnHosts,\n      Collection<String> tiers\n  )", "testcase": false, "constructor": false}, {"identifier": "getDetailedAllNodeStatus", "parameters": "(\n      Map<HostAndPort, LookupsState<LookupExtractorFactoryMapContainer>> lookupsStateOnHosts,\n      Collection<String> tiers\n  )", "modifiers": "private", "return": "Map<String, Map<HostAndPort, LookupsState<LookupExtractorFactoryMapContainer>>>", "signature": "Map<String, Map<HostAndPort, LookupsState<LookupExtractorFactoryMapContainer>>> getDetailedAllNodeStatus(\n      Map<HostAndPort, LookupsState<LookupExtractorFactoryMapContainer>> lookupsStateOnHosts,\n      Collection<String> tiers\n  )", "full_signature": "private Map<String, Map<HostAndPort, LookupsState<LookupExtractorFactoryMapContainer>>> getDetailedAllNodeStatus(\n      Map<HostAndPort, LookupsState<LookupExtractorFactoryMapContainer>> lookupsStateOnHosts,\n      Collection<String> tiers\n  )", "class_method_signature": "LookupCoordinatorResource.getDetailedAllNodeStatus(\n      Map<HostAndPort, LookupsState<LookupExtractorFactoryMapContainer>> lookupsStateOnHosts,\n      Collection<String> tiers\n  )", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/apache/druid/server/http/LookupCoordinatorResource.java"}, "focal_method": {"identifier": "getSpecificTier", "parameters": "(\n      @PathParam(\"tier\") String tier,\n      @DefaultValue(\"false\") @QueryParam(\"detailed\") boolean detailed\n\n  )", "modifiers": "@GET @Produces({MediaType.APPLICATION_JSON, SmileMediaTypes.APPLICATION_JACKSON_SMILE}) @Path(\"/config/{tier}\") public", "return": "Response", "body": "@GET\n  @Produces({MediaType.APPLICATION_JSON, SmileMediaTypes.APPLICATION_JACKSON_SMILE})\n  @Path(\"/config/{tier}\")\n  public Response getSpecificTier(\n      @PathParam(\"tier\") String tier,\n      @DefaultValue(\"false\") @QueryParam(\"detailed\") boolean detailed\n\n  )\n  {\n    try {\n      if (Strings.isNullOrEmpty(tier)) {\n        return Response.status(Response.Status.BAD_REQUEST)\n                       .entity(ServletResourceUtils.sanitizeException(new NullPointerException(\"`tier` required\")))\n                       .build();\n      }\n      final Map<String, Map<String, LookupExtractorFactoryMapContainer>> map = lookupCoordinatorManager.getKnownLookups();\n      if (map == null) {\n        return Response.status(Response.Status.NOT_FOUND)\n                       .entity(ServletResourceUtils.sanitizeException(new RE(\"No lookups found\")))\n                       .build();\n      }\n      final Map<String, LookupExtractorFactoryMapContainer> tierLookups = map.get(tier);\n      if (tierLookups == null) {\n        return Response.status(Response.Status.NOT_FOUND)\n                       .entity(ServletResourceUtils.sanitizeException(new RE(\"Tier [%s] not found\", tier)))\n                       .build();\n      }\n      if (detailed) {\n        return Response.ok().entity(tierLookups).build();\n      } else {\n        return Response.ok().entity(tierLookups.keySet()).build();\n      }\n    }\n    catch (Exception e) {\n      LOG.error(e, \"Error getting tier [%s]\", tier);\n      return Response.serverError().entity(ServletResourceUtils.sanitizeException(e)).build();\n    }\n  }", "signature": "Response getSpecificTier(\n      @PathParam(\"tier\") String tier,\n      @DefaultValue(\"false\") @QueryParam(\"detailed\") boolean detailed\n\n  )", "full_signature": "@GET @Produces({MediaType.APPLICATION_JSON, SmileMediaTypes.APPLICATION_JACKSON_SMILE}) @Path(\"/config/{tier}\") public Response getSpecificTier(\n      @PathParam(\"tier\") String tier,\n      @DefaultValue(\"false\") @QueryParam(\"detailed\") boolean detailed\n\n  )", "class_method_signature": "LookupCoordinatorResource.getSpecificTier(\n      @PathParam(\"tier\") String tier,\n      @DefaultValue(\"false\") @QueryParam(\"detailed\") boolean detailed\n\n  )", "testcase": false, "constructor": false, "invocations": ["isNullOrEmpty", "build", "entity", "status", "sanitizeException", "getKnownLookups", "build", "entity", "status", "sanitizeException", "get", "build", "entity", "status", "sanitizeException", "build", "entity", "ok", "build", "entity", "ok", "keySet", "error", "build", "entity", "serverError", "sanitizeException"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}