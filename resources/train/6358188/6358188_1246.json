{"test_class": {"identifier": "BasicAuthorizerResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String AUTHORIZER_NAME = \"AUTHORIZER_NAME\";", "modifier": "private static final", "type": "String", "declarator": "AUTHORIZER_NAME = \"AUTHORIZER_NAME\"", "var_name": "AUTHORIZER_NAME"}, {"original_string": "private static final String INVALID_AUTHORIZER_NAME = \"INVALID_AUTHORIZER_NAME\";", "modifier": "private static final", "type": "String", "declarator": "INVALID_AUTHORIZER_NAME = \"INVALID_AUTHORIZER_NAME\"", "var_name": "INVALID_AUTHORIZER_NAME"}, {"original_string": "private static final String USER_NAME = \"USER_NAME\";", "modifier": "private static final", "type": "String", "declarator": "USER_NAME = \"USER_NAME\"", "var_name": "USER_NAME"}, {"original_string": "private static final String GROUP_MAPPING_NAME = \"GROUP_MAPPING_NAME\";", "modifier": "private static final", "type": "String", "declarator": "GROUP_MAPPING_NAME = \"GROUP_MAPPING_NAME\"", "var_name": "GROUP_MAPPING_NAME"}, {"original_string": "private static final String ROLE_NAME = \"ROLE_NAME\";", "modifier": "private static final", "type": "String", "declarator": "ROLE_NAME = \"ROLE_NAME\"", "var_name": "ROLE_NAME"}, {"original_string": "private static final byte[] SERIALIZED_ROLE_MAP = \"SERIALIZED_ROLE_MAP\".getBytes(StandardCharsets.UTF_8);", "modifier": "private static final", "type": "byte[]", "declarator": "SERIALIZED_ROLE_MAP = \"SERIALIZED_ROLE_MAP\".getBytes(StandardCharsets.UTF_8)", "var_name": "SERIALIZED_ROLE_MAP"}, {"original_string": "@Mock(answer = Answers.RETURNS_MOCKS)\n  private BasicAuthorizerResourceHandler resourceHandler;", "modifier": "@Mock(answer = Answers.RETURNS_MOCKS)\n  private", "type": "BasicAuthorizerResourceHandler", "declarator": "resourceHandler", "var_name": "resourceHandler"}, {"original_string": "@Mock\n  private AuthValidator authValidator;", "modifier": "@Mock\n  private", "type": "AuthValidator", "declarator": "authValidator", "var_name": "authValidator"}, {"original_string": "@Mock(answer = Answers.RETURNS_MOCKS)\n  private BasicAuthorizerGroupMapping groupMapping;", "modifier": "@Mock(answer = Answers.RETURNS_MOCKS)\n  private", "type": "BasicAuthorizerGroupMapping", "declarator": "groupMapping", "var_name": "groupMapping"}, {"original_string": "@Mock\n  private ResourceAction resourceAction;", "modifier": "@Mock\n  private", "type": "ResourceAction", "declarator": "resourceAction", "var_name": "resourceAction"}, {"original_string": "private List<ResourceAction> resourceActions;", "modifier": "private", "type": "List<ResourceAction>", "declarator": "resourceActions", "var_name": "resourceActions"}, {"original_string": "@Mock\n  private HttpServletRequest req;", "modifier": "@Mock\n  private", "type": "HttpServletRequest", "declarator": "req", "var_name": "req"}, {"original_string": "private BasicAuthorizerResource target;", "modifier": "private", "type": "BasicAuthorizerResource", "declarator": "target", "var_name": "target"}], "file": "extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/basic/authorization/endpoint/BasicAuthorizerResourceTest.java"}, "test_case": {"identifier": "assignRoleToUserShouldReturnExpectedResult", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void assignRoleToUserShouldReturnExpectedResult()\n  {\n    Assert.assertNotNull(target.assignRoleToUser(req, AUTHORIZER_NAME, USER_NAME, ROLE_NAME));\n  }", "signature": "void assignRoleToUserShouldReturnExpectedResult()", "full_signature": "@Test public void assignRoleToUserShouldReturnExpectedResult()", "class_method_signature": "BasicAuthorizerResourceTest.assignRoleToUserShouldReturnExpectedResult()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "assignRoleToUser"]}, "focal_class": {"identifier": "BasicAuthorizerResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final BasicAuthorizerResourceHandler resourceHandler;", "modifier": "private final", "type": "BasicAuthorizerResourceHandler", "declarator": "resourceHandler", "var_name": "resourceHandler"}, {"original_string": "private final AuthValidator authValidator;", "modifier": "private final", "type": "AuthValidator", "declarator": "authValidator", "var_name": "authValidator"}], "methods": [{"identifier": "BasicAuthorizerResource", "parameters": "(\n      BasicAuthorizerResourceHandler resourceHandler,\n      AuthValidator authValidator\n  )", "modifiers": "@Inject public", "return": "", "signature": " BasicAuthorizerResource(\n      BasicAuthorizerResourceHandler resourceHandler,\n      AuthValidator authValidator\n  )", "full_signature": "@Inject public  BasicAuthorizerResource(\n      BasicAuthorizerResourceHandler resourceHandler,\n      AuthValidator authValidator\n  )", "class_method_signature": "BasicAuthorizerResource.BasicAuthorizerResource(\n      BasicAuthorizerResourceHandler resourceHandler,\n      AuthValidator authValidator\n  )", "testcase": false, "constructor": true}, {"identifier": "getLoadStatus", "parameters": "(\n      @Context HttpServletRequest req\n  )", "modifiers": "@GET @Path(\"/loadStatus\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response getLoadStatus(\n      @Context HttpServletRequest req\n  )", "full_signature": "@GET @Path(\"/loadStatus\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response getLoadStatus(\n      @Context HttpServletRequest req\n  )", "class_method_signature": "BasicAuthorizerResource.getLoadStatus(\n      @Context HttpServletRequest req\n  )", "testcase": false, "constructor": false}, {"identifier": "refreshAll", "parameters": "(\n      @Context HttpServletRequest req\n  )", "modifiers": "@GET @Path(\"/refreshAll\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response refreshAll(\n      @Context HttpServletRequest req\n  )", "full_signature": "@GET @Path(\"/refreshAll\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response refreshAll(\n      @Context HttpServletRequest req\n  )", "class_method_signature": "BasicAuthorizerResource.refreshAll(\n      @Context HttpServletRequest req\n  )", "testcase": false, "constructor": false}, {"identifier": "getAllUsers", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "modifiers": "@GET @Path(\"/db/{authorizerName}/users\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response getAllUsers(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "full_signature": "@GET @Path(\"/db/{authorizerName}/users\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response getAllUsers(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "class_method_signature": "BasicAuthorizerResource.getAllUsers(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "testcase": false, "constructor": false}, {"identifier": "getAllGroupMappings", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "modifiers": "@GET @Path(\"/db/{authorizerName}/groupMappings\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response getAllGroupMappings(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "full_signature": "@GET @Path(\"/db/{authorizerName}/groupMappings\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response getAllGroupMappings(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "class_method_signature": "BasicAuthorizerResource.getAllGroupMappings(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "testcase": false, "constructor": false}, {"identifier": "getUser", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") final String userName,\n      @QueryParam(\"full\") String full,\n      @QueryParam(\"simplifyPermissions\") String simplifyPermissions\n  )", "modifiers": "@GET @Path(\"/db/{authorizerName}/users/{userName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response getUser(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") final String userName,\n      @QueryParam(\"full\") String full,\n      @QueryParam(\"simplifyPermissions\") String simplifyPermissions\n  )", "full_signature": "@GET @Path(\"/db/{authorizerName}/users/{userName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response getUser(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") final String userName,\n      @QueryParam(\"full\") String full,\n      @QueryParam(\"simplifyPermissions\") String simplifyPermissions\n  )", "class_method_signature": "BasicAuthorizerResource.getUser(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") final String userName,\n      @QueryParam(\"full\") String full,\n      @QueryParam(\"simplifyPermissions\") String simplifyPermissions\n  )", "testcase": false, "constructor": false}, {"identifier": "getGroupMapping", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") final String groupMappingName,\n      @QueryParam(\"full\") String full\n  )", "modifiers": "@GET @Path(\"/db/{authorizerName}/groupMappings/{groupMappingName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response getGroupMapping(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") final String groupMappingName,\n      @QueryParam(\"full\") String full\n  )", "full_signature": "@GET @Path(\"/db/{authorizerName}/groupMappings/{groupMappingName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response getGroupMapping(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") final String groupMappingName,\n      @QueryParam(\"full\") String full\n  )", "class_method_signature": "BasicAuthorizerResource.getGroupMapping(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") final String groupMappingName,\n      @QueryParam(\"full\") String full\n  )", "testcase": false, "constructor": false}, {"identifier": "createUser", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName\n  )", "modifiers": "@POST @Path(\"/db/{authorizerName}/users/{userName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response createUser(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName\n  )", "full_signature": "@POST @Path(\"/db/{authorizerName}/users/{userName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response createUser(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName\n  )", "class_method_signature": "BasicAuthorizerResource.createUser(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName\n  )", "testcase": false, "constructor": false}, {"identifier": "deleteUser", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName\n  )", "modifiers": "@DELETE @Path(\"/db/{authorizerName}/users/{userName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response deleteUser(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName\n  )", "full_signature": "@DELETE @Path(\"/db/{authorizerName}/users/{userName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response deleteUser(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName\n  )", "class_method_signature": "BasicAuthorizerResource.deleteUser(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName\n  )", "testcase": false, "constructor": false}, {"identifier": "createGroupMapping", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") String groupMappingName,\n      BasicAuthorizerGroupMapping groupMapping\n  )", "modifiers": "@POST @Path(\"/db/{authorizerName}/groupMappings/{groupMappingName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response createGroupMapping(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") String groupMappingName,\n      BasicAuthorizerGroupMapping groupMapping\n  )", "full_signature": "@POST @Path(\"/db/{authorizerName}/groupMappings/{groupMappingName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response createGroupMapping(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") String groupMappingName,\n      BasicAuthorizerGroupMapping groupMapping\n  )", "class_method_signature": "BasicAuthorizerResource.createGroupMapping(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") String groupMappingName,\n      BasicAuthorizerGroupMapping groupMapping\n  )", "testcase": false, "constructor": false}, {"identifier": "deleteGroupMapping", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") String groupMappingName\n  )", "modifiers": "@DELETE @Path(\"/db/{authorizerName}/groupMappings/{groupMappingName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response deleteGroupMapping(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") String groupMappingName\n  )", "full_signature": "@DELETE @Path(\"/db/{authorizerName}/groupMappings/{groupMappingName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response deleteGroupMapping(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") String groupMappingName\n  )", "class_method_signature": "BasicAuthorizerResource.deleteGroupMapping(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") String groupMappingName\n  )", "testcase": false, "constructor": false}, {"identifier": "getAllRoles", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "modifiers": "@GET @Path(\"/db/{authorizerName}/roles\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response getAllRoles(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "full_signature": "@GET @Path(\"/db/{authorizerName}/roles\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response getAllRoles(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "class_method_signature": "BasicAuthorizerResource.getAllRoles(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "testcase": false, "constructor": false}, {"identifier": "getRole", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") final String roleName,\n      @QueryParam(\"full\") String full,\n      @QueryParam(\"simplifyPermissions\") String simplifyPermissions\n  )", "modifiers": "@GET @Path(\"/db/{authorizerName}/roles/{roleName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response getRole(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") final String roleName,\n      @QueryParam(\"full\") String full,\n      @QueryParam(\"simplifyPermissions\") String simplifyPermissions\n  )", "full_signature": "@GET @Path(\"/db/{authorizerName}/roles/{roleName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response getRole(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") final String roleName,\n      @QueryParam(\"full\") String full,\n      @QueryParam(\"simplifyPermissions\") String simplifyPermissions\n  )", "class_method_signature": "BasicAuthorizerResource.getRole(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") final String roleName,\n      @QueryParam(\"full\") String full,\n      @QueryParam(\"simplifyPermissions\") String simplifyPermissions\n  )", "testcase": false, "constructor": false}, {"identifier": "createRole", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") final String roleName\n  )", "modifiers": "@POST @Path(\"/db/{authorizerName}/roles/{roleName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response createRole(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") final String roleName\n  )", "full_signature": "@POST @Path(\"/db/{authorizerName}/roles/{roleName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response createRole(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") final String roleName\n  )", "class_method_signature": "BasicAuthorizerResource.createRole(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") final String roleName\n  )", "testcase": false, "constructor": false}, {"identifier": "deleteRole", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") String roleName\n  )", "modifiers": "@DELETE @Path(\"/db/{authorizerName}/roles/{roleName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response deleteRole(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") String roleName\n  )", "full_signature": "@DELETE @Path(\"/db/{authorizerName}/roles/{roleName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response deleteRole(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") String roleName\n  )", "class_method_signature": "BasicAuthorizerResource.deleteRole(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") String roleName\n  )", "testcase": false, "constructor": false}, {"identifier": "assignRoleToUser", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName,\n      @PathParam(\"roleName\") String roleName\n  )", "modifiers": "@POST @Path(\"/db/{authorizerName}/users/{userName}/roles/{roleName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response assignRoleToUser(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName,\n      @PathParam(\"roleName\") String roleName\n  )", "full_signature": "@POST @Path(\"/db/{authorizerName}/users/{userName}/roles/{roleName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response assignRoleToUser(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName,\n      @PathParam(\"roleName\") String roleName\n  )", "class_method_signature": "BasicAuthorizerResource.assignRoleToUser(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName,\n      @PathParam(\"roleName\") String roleName\n  )", "testcase": false, "constructor": false}, {"identifier": "unassignRoleFromUser", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName,\n      @PathParam(\"roleName\") String roleName\n  )", "modifiers": "@DELETE @Path(\"/db/{authorizerName}/users/{userName}/roles/{roleName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response unassignRoleFromUser(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName,\n      @PathParam(\"roleName\") String roleName\n  )", "full_signature": "@DELETE @Path(\"/db/{authorizerName}/users/{userName}/roles/{roleName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response unassignRoleFromUser(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName,\n      @PathParam(\"roleName\") String roleName\n  )", "class_method_signature": "BasicAuthorizerResource.unassignRoleFromUser(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName,\n      @PathParam(\"roleName\") String roleName\n  )", "testcase": false, "constructor": false}, {"identifier": "assignRoleToGroupMapping", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") String groupMappingName,\n      @PathParam(\"roleName\") String roleName\n  )", "modifiers": "@POST @Path(\"/db/{authorizerName}/groupMappings/{groupMappingName}/roles/{roleName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response assignRoleToGroupMapping(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") String groupMappingName,\n      @PathParam(\"roleName\") String roleName\n  )", "full_signature": "@POST @Path(\"/db/{authorizerName}/groupMappings/{groupMappingName}/roles/{roleName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response assignRoleToGroupMapping(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") String groupMappingName,\n      @PathParam(\"roleName\") String roleName\n  )", "class_method_signature": "BasicAuthorizerResource.assignRoleToGroupMapping(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") String groupMappingName,\n      @PathParam(\"roleName\") String roleName\n  )", "testcase": false, "constructor": false}, {"identifier": "unassignRoleFromGroupMapping", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") String groupMappingName,\n      @PathParam(\"roleName\") String roleName\n  )", "modifiers": "@DELETE @Path(\"/db/{authorizerName}/groupMappings/{groupMappingName}/roles/{roleName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response unassignRoleFromGroupMapping(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") String groupMappingName,\n      @PathParam(\"roleName\") String roleName\n  )", "full_signature": "@DELETE @Path(\"/db/{authorizerName}/groupMappings/{groupMappingName}/roles/{roleName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response unassignRoleFromGroupMapping(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") String groupMappingName,\n      @PathParam(\"roleName\") String roleName\n  )", "class_method_signature": "BasicAuthorizerResource.unassignRoleFromGroupMapping(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"groupMappingName\") String groupMappingName,\n      @PathParam(\"roleName\") String roleName\n  )", "testcase": false, "constructor": false}, {"identifier": "setRolePermissions", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") String roleName,\n      List<ResourceAction> permissions\n  )", "modifiers": "@POST @Path(\"/db/{authorizerName}/roles/{roleName}/permissions\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response setRolePermissions(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") String roleName,\n      List<ResourceAction> permissions\n  )", "full_signature": "@POST @Path(\"/db/{authorizerName}/roles/{roleName}/permissions\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response setRolePermissions(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") String roleName,\n      List<ResourceAction> permissions\n  )", "class_method_signature": "BasicAuthorizerResource.setRolePermissions(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") String roleName,\n      List<ResourceAction> permissions\n  )", "testcase": false, "constructor": false}, {"identifier": "getRolePermissions", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") String roleName\n  )", "modifiers": "@GET @Path(\"/db/{authorizerName}/roles/{roleName}/permissions\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response getRolePermissions(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") String roleName\n  )", "full_signature": "@GET @Path(\"/db/{authorizerName}/roles/{roleName}/permissions\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response getRolePermissions(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") String roleName\n  )", "class_method_signature": "BasicAuthorizerResource.getRolePermissions(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"roleName\") String roleName\n  )", "testcase": false, "constructor": false}, {"identifier": "getCachedSerializedUserMap", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "modifiers": "@GET @Path(\"/db/{authorizerName}/cachedSerializedUserMap\") @Produces(SmileMediaTypes.APPLICATION_JACKSON_SMILE) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response getCachedSerializedUserMap(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "full_signature": "@GET @Path(\"/db/{authorizerName}/cachedSerializedUserMap\") @Produces(SmileMediaTypes.APPLICATION_JACKSON_SMILE) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response getCachedSerializedUserMap(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "class_method_signature": "BasicAuthorizerResource.getCachedSerializedUserMap(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "testcase": false, "constructor": false}, {"identifier": "getCachedSerializedGroupMap", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "modifiers": "@GET @Path(\"/db/{authorizerName}/cachedSerializedGroupMappingMap\") @Produces(SmileMediaTypes.APPLICATION_JACKSON_SMILE) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response getCachedSerializedGroupMap(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "full_signature": "@GET @Path(\"/db/{authorizerName}/cachedSerializedGroupMappingMap\") @Produces(SmileMediaTypes.APPLICATION_JACKSON_SMILE) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response getCachedSerializedGroupMap(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "class_method_signature": "BasicAuthorizerResource.getCachedSerializedGroupMap(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName\n  )", "testcase": false, "constructor": false}, {"identifier": "authorizerUpdateListener", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      byte[] serializedUserAndRoleMap\n  )", "modifiers": "@POST @Path(\"/listen/{authorizerName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) @Deprecated public", "return": "Response", "signature": "Response authorizerUpdateListener(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      byte[] serializedUserAndRoleMap\n  )", "full_signature": "@POST @Path(\"/listen/{authorizerName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) @Deprecated public Response authorizerUpdateListener(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      byte[] serializedUserAndRoleMap\n  )", "class_method_signature": "BasicAuthorizerResource.authorizerUpdateListener(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      byte[] serializedUserAndRoleMap\n  )", "testcase": false, "constructor": false}, {"identifier": "authorizerUserUpdateListener", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      byte[] serializedUserAndRoleMap\n  )", "modifiers": "@POST @Path(\"/listen/users/{authorizerName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response authorizerUserUpdateListener(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      byte[] serializedUserAndRoleMap\n  )", "full_signature": "@POST @Path(\"/listen/users/{authorizerName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response authorizerUserUpdateListener(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      byte[] serializedUserAndRoleMap\n  )", "class_method_signature": "BasicAuthorizerResource.authorizerUserUpdateListener(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      byte[] serializedUserAndRoleMap\n  )", "testcase": false, "constructor": false}, {"identifier": "authorizerGroupMappingUpdateListener", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      byte[] serializedGroupMappingAndRoleMap\n  )", "modifiers": "@POST @Path(\"/listen/groupMappings/{authorizerName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "signature": "Response authorizerGroupMappingUpdateListener(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      byte[] serializedGroupMappingAndRoleMap\n  )", "full_signature": "@POST @Path(\"/listen/groupMappings/{authorizerName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response authorizerGroupMappingUpdateListener(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      byte[] serializedGroupMappingAndRoleMap\n  )", "class_method_signature": "BasicAuthorizerResource.authorizerGroupMappingUpdateListener(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      byte[] serializedGroupMappingAndRoleMap\n  )", "testcase": false, "constructor": false}], "file": "extensions-core/druid-basic-security/src/main/java/org/apache/druid/security/basic/authorization/endpoint/BasicAuthorizerResource.java"}, "focal_method": {"identifier": "assignRoleToUser", "parameters": "(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName,\n      @PathParam(\"roleName\") String roleName\n  )", "modifiers": "@POST @Path(\"/db/{authorizerName}/users/{userName}/roles/{roleName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public", "return": "Response", "body": "@POST\n  @Path(\"/db/{authorizerName}/users/{userName}/roles/{roleName}\")\n  @Produces(MediaType.APPLICATION_JSON)\n  @Consumes(MediaType.APPLICATION_JSON)\n  @ResourceFilters(BasicSecurityResourceFilter.class)\n  public Response assignRoleToUser(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName,\n      @PathParam(\"roleName\") String roleName\n  )\n  {\n    authValidator.validateAuthorizerName(authorizerName);\n    return resourceHandler.assignRoleToUser(authorizerName, userName, roleName);\n  }", "signature": "Response assignRoleToUser(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName,\n      @PathParam(\"roleName\") String roleName\n  )", "full_signature": "@POST @Path(\"/db/{authorizerName}/users/{userName}/roles/{roleName}\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(BasicSecurityResourceFilter.class) public Response assignRoleToUser(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName,\n      @PathParam(\"roleName\") String roleName\n  )", "class_method_signature": "BasicAuthorizerResource.assignRoleToUser(\n      @Context HttpServletRequest req,\n      @PathParam(\"authorizerName\") final String authorizerName,\n      @PathParam(\"userName\") String userName,\n      @PathParam(\"roleName\") String roleName\n  )", "testcase": false, "constructor": false, "invocations": ["validateAuthorizerName", "assignRoleToUser"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}