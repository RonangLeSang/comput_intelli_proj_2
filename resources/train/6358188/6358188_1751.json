{"test_class": {"identifier": "DoubleMaxAveragerFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/averagers/DoubleMaxAveragerFactoryTest.java"}, "test_case": {"identifier": "testCreateAverager", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCreateAverager()\n  {\n    AveragerFactory<?, ?> fac = new DoubleMaxAveragerFactory(\"test\", 5, 1, \"field\");\n    Assert.assertThat(fac.createAverager(), CoreMatchers.instanceOf(DoubleMaxAverager.class));\n  }", "signature": "void testCreateAverager()", "full_signature": "@Test public void testCreateAverager()", "class_method_signature": "DoubleMaxAveragerFactoryTest.testCreateAverager()", "testcase": true, "constructor": false, "invocations": ["assertThat", "createAverager", "instanceOf"]}, "focal_class": {"identifier": "DoubleMaxAveragerFactory", "superclass": "extends ComparableAveragerFactory<Double, Double>", "interfaces": "", "fields": [], "methods": [{"identifier": "DoubleMaxAveragerFactory", "parameters": "(\n      @JsonProperty(\"name\") String name,\n      @JsonProperty(\"buckets\") int numBuckets,\n      @JsonProperty(\"cycleSize\") Integer cycleSize,\n      @JsonProperty(\"fieldName\") String fieldName\n  )", "modifiers": "@JsonCreator public", "return": "", "signature": " DoubleMaxAveragerFactory(\n      @JsonProperty(\"name\") String name,\n      @JsonProperty(\"buckets\") int numBuckets,\n      @JsonProperty(\"cycleSize\") Integer cycleSize,\n      @JsonProperty(\"fieldName\") String fieldName\n  )", "full_signature": "@JsonCreator public  DoubleMaxAveragerFactory(\n      @JsonProperty(\"name\") String name,\n      @JsonProperty(\"buckets\") int numBuckets,\n      @JsonProperty(\"cycleSize\") Integer cycleSize,\n      @JsonProperty(\"fieldName\") String fieldName\n  )", "class_method_signature": "DoubleMaxAveragerFactory.DoubleMaxAveragerFactory(\n      @JsonProperty(\"name\") String name,\n      @JsonProperty(\"buckets\") int numBuckets,\n      @JsonProperty(\"cycleSize\") Integer cycleSize,\n      @JsonProperty(\"fieldName\") String fieldName\n  )", "testcase": false, "constructor": true}, {"identifier": "createAverager", "parameters": "()", "modifiers": "@Override public", "return": "Averager<Double>", "signature": "Averager<Double> createAverager()", "full_signature": "@Override public Averager<Double> createAverager()", "class_method_signature": "DoubleMaxAveragerFactory.createAverager()", "testcase": false, "constructor": false}], "file": "extensions-contrib/moving-average-query/src/main/java/org/apache/druid/query/movingaverage/averagers/DoubleMaxAveragerFactory.java"}, "focal_method": {"identifier": "createAverager", "parameters": "()", "modifiers": "@Override public", "return": "Averager<Double>", "body": "@Override\n  public Averager<Double> createAverager()\n  {\n    return new DoubleMaxAverager(numBuckets, name, fieldName, cycleSize);\n  }", "signature": "Averager<Double> createAverager()", "full_signature": "@Override public Averager<Double> createAverager()", "class_method_signature": "DoubleMaxAveragerFactory.createAverager()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}