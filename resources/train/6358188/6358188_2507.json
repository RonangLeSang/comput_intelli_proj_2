{"test_class": {"identifier": "AuthValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "public AuthValidator target;", "modifier": "public", "type": "AuthValidator", "declarator": "target", "var_name": "target"}], "file": "server/src/test/java/org/apache/druid/server/security/AuthValidatorTest.java"}, "test_case": {"identifier": "testAuthenticatorNameWithWhitespaceIsInvalid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testAuthenticatorNameWithWhitespaceIsInvalid()\n  {\n    expectedException.expect(IllegalArgumentException.class);\n    expectedException.expectMessage(\"authenticatorName cannot contain whitespace character except space.\");\n    target.validateAuthenticatorName(\"tes\\tt\");\n  }", "signature": "void testAuthenticatorNameWithWhitespaceIsInvalid()", "full_signature": "@Test public void testAuthenticatorNameWithWhitespaceIsInvalid()", "class_method_signature": "AuthValidatorTest.testAuthenticatorNameWithWhitespaceIsInvalid()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "validateAuthenticatorName"]}, "focal_class": {"identifier": "AuthValidator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String AUTHORIZER_NAME = \"authorizerName\";", "modifier": "private static final", "type": "String", "declarator": "AUTHORIZER_NAME = \"authorizerName\"", "var_name": "AUTHORIZER_NAME"}, {"original_string": "private static final String AUTHENTICATOR_NAME = \"authenticatorName\";", "modifier": "private static final", "type": "String", "declarator": "AUTHENTICATOR_NAME = \"authenticatorName\"", "var_name": "AUTHENTICATOR_NAME"}], "methods": [{"identifier": "validateAuthorizerName", "parameters": "(String authorizerName)", "modifiers": "public", "return": "void", "signature": "void validateAuthorizerName(String authorizerName)", "full_signature": "public void validateAuthorizerName(String authorizerName)", "class_method_signature": "AuthValidator.validateAuthorizerName(String authorizerName)", "testcase": false, "constructor": false}, {"identifier": "validateAuthenticatorName", "parameters": "(String authenticatorName)", "modifiers": "public", "return": "void", "signature": "void validateAuthenticatorName(String authenticatorName)", "full_signature": "public void validateAuthenticatorName(String authenticatorName)", "class_method_signature": "AuthValidator.validateAuthenticatorName(String authenticatorName)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/apache/druid/server/security/AuthValidator.java"}, "focal_method": {"identifier": "validateAuthenticatorName", "parameters": "(String authenticatorName)", "modifiers": "public", "return": "void", "body": "public void validateAuthenticatorName(String authenticatorName)\n  {\n    IdUtils.validateId(AUTHENTICATOR_NAME, authenticatorName);\n  }", "signature": "void validateAuthenticatorName(String authenticatorName)", "full_signature": "public void validateAuthenticatorName(String authenticatorName)", "class_method_signature": "AuthValidator.validateAuthenticatorName(String authenticatorName)", "testcase": false, "constructor": false, "invocations": ["validateId"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}