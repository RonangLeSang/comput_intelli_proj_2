{"test_class": {"identifier": "MaterializedViewUtilsTest", "superclass": "extends InitializedNullHandlingTest", "interfaces": "", "fields": [{"original_string": "private static ObjectMapper jsonMapper = TestHelper.makeJsonMapper();", "modifier": "private static", "type": "ObjectMapper", "declarator": "jsonMapper = TestHelper.makeJsonMapper()", "var_name": "jsonMapper"}], "file": "extensions-contrib/materialized-view-selection/src/test/java/org/apache/druid/query/materializedview/MaterializedViewUtilsTest.java"}, "test_case": {"identifier": "testGetRequiredFieldsFromTimeseriesQuery", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetRequiredFieldsFromTimeseriesQuery() throws Exception\n  {\n    String queryStr = \"{\\n\" +\n        \"  \\\"queryType\\\": \\\"timeseries\\\",\\n\" +\n        \"  \\\"dataSource\\\": \\\"sample_datasource\\\",\\n\" +\n        \"  \\\"granularity\\\": \\\"day\\\",\\n\" +\n        \"  \\\"descending\\\": \\\"true\\\",\\n\" +\n        \"  \\\"filter\\\": {\\n\" +\n        \"    \\\"type\\\": \\\"and\\\",\\n\" +\n        \"    \\\"fields\\\": [\\n\" +\n        \"      { \\\"type\\\": \\\"selector\\\", \\\"dimension\\\": \\\"sample_dimension1\\\", \\\"value\\\": \\\"sample_value1\\\" },\\n\" +\n        \"      { \\\"type\\\": \\\"or\\\",\\n\" +\n        \"        \\\"fields\\\": [\\n\" +\n        \"          { \\\"type\\\": \\\"selector\\\", \\\"dimension\\\": \\\"sample_dimension2\\\", \\\"value\\\": \\\"sample_value2\\\" },\\n\" +\n        \"          { \\\"type\\\": \\\"selector\\\", \\\"dimension\\\": \\\"sample_dimension3\\\", \\\"value\\\": \\\"sample_value3\\\" }\\n\" +\n        \"        ]\\n\" +\n        \"      }\\n\" +\n        \"    ]\\n\" +\n        \"  },\\n\" +\n        \"  \\\"aggregations\\\": [\\n\" +\n        \"    { \\\"type\\\": \\\"longSum\\\", \\\"name\\\": \\\"sample_name1\\\", \\\"fieldName\\\": \\\"sample_fieldName1\\\" },\\n\" +\n        \"    { \\\"type\\\": \\\"doubleSum\\\", \\\"name\\\": \\\"sample_name2\\\", \\\"fieldName\\\": \\\"sample_fieldName2\\\" }\\n\" +\n        \"  ],\\n\" +\n        \"  \\\"postAggregations\\\": [\\n\" +\n        \"    { \\\"type\\\": \\\"arithmetic\\\",\\n\" +\n        \"      \\\"name\\\": \\\"sample_divide\\\",\\n\" +\n        \"      \\\"fn\\\": \\\"/\\\",\\n\" +\n        \"      \\\"fields\\\": [\\n\" +\n        \"        { \\\"type\\\": \\\"fieldAccess\\\", \\\"name\\\": \\\"postAgg__sample_name1\\\", \\\"fieldName\\\": \\\"sample_name1\\\" },\\n\" +\n        \"        { \\\"type\\\": \\\"fieldAccess\\\", \\\"name\\\": \\\"postAgg__sample_name2\\\", \\\"fieldName\\\": \\\"sample_name2\\\" }\\n\" +\n        \"      ]\\n\" +\n        \"    }\\n\" +\n        \"  ],\\n\" +\n        \"  \\\"intervals\\\": [ \\\"2012-01-01T00:00:00.000/2012-01-03T00:00:00.000\\\" ]\\n\" +\n        \"}\";\n    TimeseriesQuery query = jsonMapper.readValue(queryStr, TimeseriesQuery.class);\n    Set<String> fields = MaterializedViewUtils.getRequiredFields(query);\n    Assert.assertEquals(\n        Sets.newHashSet(\"sample_dimension1\", \"sample_dimension2\", \"sample_dimension3\", \"sample_fieldName1\",\n            \"sample_fieldName2\"),\n        fields\n    );\n  }", "signature": "void testGetRequiredFieldsFromTimeseriesQuery()", "full_signature": "@Test public void testGetRequiredFieldsFromTimeseriesQuery()", "class_method_signature": "MaterializedViewUtilsTest.testGetRequiredFieldsFromTimeseriesQuery()", "testcase": true, "constructor": false, "invocations": ["readValue", "getRequiredFields", "assertEquals", "newHashSet"]}, "focal_class": {"identifier": "MaterializedViewUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getRequiredFields", "parameters": "(Query query)", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> getRequiredFields(Query query)", "full_signature": "public static Set<String> getRequiredFields(Query query)", "class_method_signature": "MaterializedViewUtils.getRequiredFields(Query query)", "testcase": false, "constructor": false}, {"identifier": "extractFieldsFromAggregations", "parameters": "(List<AggregatorFactory> aggs)", "modifiers": "private static", "return": "Set<String>", "signature": "Set<String> extractFieldsFromAggregations(List<AggregatorFactory> aggs)", "full_signature": "private static Set<String> extractFieldsFromAggregations(List<AggregatorFactory> aggs)", "class_method_signature": "MaterializedViewUtils.extractFieldsFromAggregations(List<AggregatorFactory> aggs)", "testcase": false, "constructor": false}, {"identifier": "minus", "parameters": "(List<Interval> interval2, List<Interval> interval1)", "modifiers": "public static", "return": "List<Interval>", "signature": "List<Interval> minus(List<Interval> interval2, List<Interval> interval1)", "full_signature": "public static List<Interval> minus(List<Interval> interval2, List<Interval> interval1)", "class_method_signature": "MaterializedViewUtils.minus(List<Interval> interval2, List<Interval> interval1)", "testcase": false, "constructor": false}], "file": "extensions-contrib/materialized-view-selection/src/main/java/org/apache/druid/query/materializedview/MaterializedViewUtils.java"}, "focal_method": {"identifier": "getRequiredFields", "parameters": "(Query query)", "modifiers": "public static", "return": "Set<String>", "body": "public static Set<String> getRequiredFields(Query query)\n  {\n    Set<String> dimsInFilter = null == query.getFilter() ? new HashSet<String>() : query.getFilter().getRequiredColumns();\n    Set<String> dimensions = new HashSet<>(dimsInFilter);\n\n    if (query instanceof TopNQuery) {\n      TopNQuery q = (TopNQuery) query;\n      dimensions.addAll(extractFieldsFromAggregations(q.getAggregatorSpecs()));\n      dimensions.add(q.getDimensionSpec().getDimension());\n    } else if (query instanceof TimeseriesQuery) {\n      TimeseriesQuery q = (TimeseriesQuery) query;\n      dimensions.addAll(extractFieldsFromAggregations(q.getAggregatorSpecs()));\n    } else if (query instanceof GroupByQuery) {\n      GroupByQuery q = (GroupByQuery) query;\n      dimensions.addAll(extractFieldsFromAggregations(q.getAggregatorSpecs()));\n      for (DimensionSpec spec : q.getDimensions()) {\n        String dim = spec.getDimension();\n        dimensions.add(dim);\n      }\n    } else {\n      throw new UnsupportedOperationException(\"Method getRequeiredFields only support TopNQuery/TimeseriesQuery/GroupByQuery\");\n    }\n    return dimensions;\n  }", "signature": "Set<String> getRequiredFields(Query query)", "full_signature": "public static Set<String> getRequiredFields(Query query)", "class_method_signature": "MaterializedViewUtils.getRequiredFields(Query query)", "testcase": false, "constructor": false, "invocations": ["getFilter", "getRequiredColumns", "getFilter", "addAll", "extractFieldsFromAggregations", "getAggregatorSpecs", "add", "getDimension", "getDimensionSpec", "addAll", "extractFieldsFromAggregations", "getAggregatorSpecs", "addAll", "extractFieldsFromAggregations", "getAggregatorSpecs", "getDimensions", "getDimension", "add"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}