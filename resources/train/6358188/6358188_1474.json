{"test_class": {"identifier": "GoogleByteSourceTest", "superclass": "extends EasyMockSupport", "interfaces": "", "fields": [], "file": "extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/GoogleByteSourceTest.java"}, "test_case": {"identifier": "openStreamTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void openStreamTest() throws IOException\n  {\n    final String bucket = \"bucket\";\n    final String path = \"/path/to/file\";\n    GoogleStorage storage = createMock(GoogleStorage.class);\n    InputStream stream = createMock(InputStream.class);\n\n    EasyMock.expect(storage.get(bucket, path)).andReturn(stream);\n\n    replayAll();\n\n    GoogleByteSource byteSource = new GoogleByteSource(storage, bucket, path);\n\n    byteSource.openStream();\n\n    verifyAll();\n  }", "signature": "void openStreamTest()", "full_signature": "@Test public void openStreamTest()", "class_method_signature": "GoogleByteSourceTest.openStreamTest()", "testcase": true, "constructor": false, "invocations": ["createMock", "createMock", "andReturn", "expect", "get", "replayAll", "openStream", "verifyAll"]}, "focal_class": {"identifier": "GoogleByteSource", "superclass": "extends ByteSource", "interfaces": "", "fields": [{"original_string": "private final GoogleStorage storage;", "modifier": "private final", "type": "GoogleStorage", "declarator": "storage", "var_name": "storage"}, {"original_string": "private final String bucket;", "modifier": "private final", "type": "String", "declarator": "bucket", "var_name": "bucket"}, {"original_string": "private final String path;", "modifier": "private final", "type": "String", "declarator": "path", "var_name": "path"}], "methods": [{"identifier": "GoogleByteSource", "parameters": "(final GoogleStorage storage, final String bucket, final String path)", "modifiers": "public", "return": "", "signature": " GoogleByteSource(final GoogleStorage storage, final String bucket, final String path)", "full_signature": "public  GoogleByteSource(final GoogleStorage storage, final String bucket, final String path)", "class_method_signature": "GoogleByteSource.GoogleByteSource(final GoogleStorage storage, final String bucket, final String path)", "testcase": false, "constructor": true}, {"identifier": "getBucket", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getBucket()", "full_signature": "public String getBucket()", "class_method_signature": "GoogleByteSource.getBucket()", "testcase": false, "constructor": false}, {"identifier": "getPath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPath()", "full_signature": "public String getPath()", "class_method_signature": "GoogleByteSource.getPath()", "testcase": false, "constructor": false}, {"identifier": "openStream", "parameters": "()", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream openStream()", "full_signature": "@Override public InputStream openStream()", "class_method_signature": "GoogleByteSource.openStream()", "testcase": false, "constructor": false}, {"identifier": "openStream", "parameters": "(long start)", "modifiers": "public", "return": "InputStream", "signature": "InputStream openStream(long start)", "full_signature": "public InputStream openStream(long start)", "class_method_signature": "GoogleByteSource.openStream(long start)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "GoogleByteSource.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "GoogleByteSource.hashCode()", "testcase": false, "constructor": false}], "file": "extensions-core/google-extensions/src/main/java/org/apache/druid/storage/google/GoogleByteSource.java"}, "focal_method": {"identifier": "openStream", "parameters": "()", "modifiers": "@Override public", "return": "InputStream", "body": "@Override\n  public InputStream openStream() throws IOException\n  {\n    return storage.get(bucket, path);\n  }", "signature": "InputStream openStream()", "full_signature": "@Override public InputStream openStream()", "class_method_signature": "GoogleByteSource.openStream()", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}