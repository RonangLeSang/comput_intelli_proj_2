{"test_class": {"identifier": "S3TimestampVersionedDataFinderTest", "superclass": "", "interfaces": "", "fields": [], "file": "extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3TimestampVersionedDataFinderTest.java"}, "test_case": {"identifier": "testFindExact", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testFindExact()\n  {\n    String bucket = \"bucket\";\n    String keyPrefix = \"prefix/dir/0\";\n    ServerSideEncryptingAmazonS3 s3Client = EasyMock.createStrictMock(ServerSideEncryptingAmazonS3.class);\n\n    S3ObjectSummary object0 = new S3ObjectSummary();\n\n    object0.setBucketName(bucket);\n    object0.setKey(keyPrefix + \"/renames-0.gz\");\n    object0.setLastModified(new Date(0));\n    object0.setSize(10);\n\n    final ListObjectsV2Result result = new ListObjectsV2Result();\n    result.getObjectSummaries().add(object0);\n    result.setKeyCount(1);\n    result.setTruncated(false);\n\n    EasyMock.expect(s3Client.listObjectsV2(EasyMock.anyObject(ListObjectsV2Request.class)))\n            .andReturn(result)\n            .once();\n    S3TimestampVersionedDataFinder finder = new S3TimestampVersionedDataFinder(s3Client);\n\n    EasyMock.replay(s3Client);\n\n    URI latest = finder.getLatestVersion(URI.create(StringUtils.format(\"s3://%s/%s\", bucket, object0.getKey())), null);\n\n    EasyMock.verify(s3Client);\n\n    URI expected = URI.create(StringUtils.format(\"s3://%s/%s\", bucket, object0.getKey()));\n\n    Assert.assertEquals(expected, latest);\n  }", "signature": "void testFindExact()", "full_signature": "@Test public void testFindExact()", "class_method_signature": "S3TimestampVersionedDataFinderTest.testFindExact()", "testcase": true, "constructor": false, "invocations": ["createStrictMock", "setBucketName", "setKey", "setLastModified", "setSize", "add", "getObjectSummaries", "setKeyCount", "setTruncated", "once", "andReturn", "expect", "listObjectsV2", "anyObject", "replay", "getLatestVersion", "create", "format", "getKey", "verify", "create", "format", "getKey", "assertEquals"]}, "focal_class": {"identifier": "S3TimestampVersionedDataFinder", "superclass": "extends S3DataSegmentPuller", "interfaces": "implements SearchableVersionedDataFinder<URI>", "fields": [{"original_string": "private static final int MAX_LISTING_KEYS = 1000;", "modifier": "private static final", "type": "int", "declarator": "MAX_LISTING_KEYS = 1000", "var_name": "MAX_LISTING_KEYS"}], "methods": [{"identifier": "S3TimestampVersionedDataFinder", "parameters": "(ServerSideEncryptingAmazonS3 s3Client)", "modifiers": "@Inject public", "return": "", "signature": " S3TimestampVersionedDataFinder(ServerSideEncryptingAmazonS3 s3Client)", "full_signature": "@Inject public  S3TimestampVersionedDataFinder(ServerSideEncryptingAmazonS3 s3Client)", "class_method_signature": "S3TimestampVersionedDataFinder.S3TimestampVersionedDataFinder(ServerSideEncryptingAmazonS3 s3Client)", "testcase": false, "constructor": true}, {"identifier": "getLatestVersion", "parameters": "(final URI uri, final @Nullable Pattern pattern)", "modifiers": "@Override public", "return": "URI", "signature": "URI getLatestVersion(final URI uri, final @Nullable Pattern pattern)", "full_signature": "@Override public URI getLatestVersion(final URI uri, final @Nullable Pattern pattern)", "class_method_signature": "S3TimestampVersionedDataFinder.getLatestVersion(final URI uri, final @Nullable Pattern pattern)", "testcase": false, "constructor": false}], "file": "extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3TimestampVersionedDataFinder.java"}, "focal_method": {"identifier": "getLatestVersion", "parameters": "(final URI uri, final @Nullable Pattern pattern)", "modifiers": "@Override public", "return": "URI", "body": "@Override\n  public URI getLatestVersion(final URI uri, final @Nullable Pattern pattern)\n  {\n    try {\n      final CloudObjectLocation coords = new CloudObjectLocation(S3Utils.checkURI(uri));\n      long mostRecent = Long.MIN_VALUE;\n      URI latest = null;\n      final Iterator<S3ObjectSummary> objectSummaryIterator = S3Utils.objectSummaryIterator(\n          s3Client,\n          Collections.singletonList(uri),\n          MAX_LISTING_KEYS\n      );\n      while (objectSummaryIterator.hasNext()) {\n        final S3ObjectSummary objectSummary = objectSummaryIterator.next();\n        final CloudObjectLocation objectLocation = S3Utils.summaryToCloudObjectLocation(objectSummary);\n        // remove coords path prefix from object path\n        String keyString = StringUtils.maybeRemoveLeadingSlash(\n            objectLocation.getPath().substring(coords.getPath().length())\n        );\n        if (pattern != null && !pattern.matcher(keyString).matches()) {\n          continue;\n        }\n        final long latestModified = objectSummary.getLastModified().getTime();\n        if (latestModified >= mostRecent) {\n          mostRecent = latestModified;\n          latest = objectLocation.toUri(S3StorageDruidModule.SCHEME);\n        }\n      }\n      return latest;\n    }\n    catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }", "signature": "URI getLatestVersion(final URI uri, final @Nullable Pattern pattern)", "full_signature": "@Override public URI getLatestVersion(final URI uri, final @Nullable Pattern pattern)", "class_method_signature": "S3TimestampVersionedDataFinder.getLatestVersion(final URI uri, final @Nullable Pattern pattern)", "testcase": false, "constructor": false, "invocations": ["checkURI", "objectSummaryIterator", "singletonList", "hasNext", "next", "summaryToCloudObjectLocation", "maybeRemoveLeadingSlash", "substring", "getPath", "length", "getPath", "matches", "matcher", "getTime", "getLastModified", "toUri"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}