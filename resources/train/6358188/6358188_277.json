{"test_class": {"identifier": "LookupDataSourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "private final LookupDataSource lookylooDataSource = new LookupDataSource(\"lookyloo\");", "modifier": "private final", "type": "LookupDataSource", "declarator": "lookylooDataSource = new LookupDataSource(\"lookyloo\")", "var_name": "lookylooDataSource"}], "file": "processing/src/test/java/org/apache/druid/query/LookupDataSourceTest.java"}, "test_case": {"identifier": "test_getChildren", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void test_getChildren()\n  {\n    Assert.assertEquals(Collections.emptyList(), lookylooDataSource.getChildren());\n  }", "signature": "void test_getChildren()", "full_signature": "@Test public void test_getChildren()", "class_method_signature": "LookupDataSourceTest.test_getChildren()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "emptyList", "getChildren"]}, "focal_class": {"identifier": "LookupDataSource", "superclass": "", "interfaces": "implements DataSource", "fields": [{"original_string": "private final String lookupName;", "modifier": "private final", "type": "String", "declarator": "lookupName", "var_name": "lookupName"}], "methods": [{"identifier": "LookupDataSource", "parameters": "(\n      @JsonProperty(\"lookup\") String lookupName\n  )", "modifiers": "@JsonCreator public", "return": "", "signature": " LookupDataSource(\n      @JsonProperty(\"lookup\") String lookupName\n  )", "full_signature": "@JsonCreator public  LookupDataSource(\n      @JsonProperty(\"lookup\") String lookupName\n  )", "class_method_signature": "LookupDataSource.LookupDataSource(\n      @JsonProperty(\"lookup\") String lookupName\n  )", "testcase": false, "constructor": true}, {"identifier": "getTableNames", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getTableNames()", "full_signature": "@Override public Set<String> getTableNames()", "class_method_signature": "LookupDataSource.getTableNames()", "testcase": false, "constructor": false}, {"identifier": "getLookupName", "parameters": "()", "modifiers": "@JsonProperty(\"lookup\") public", "return": "String", "signature": "String getLookupName()", "full_signature": "@JsonProperty(\"lookup\") public String getLookupName()", "class_method_signature": "LookupDataSource.getLookupName()", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "@Override public", "return": "List<DataSource>", "signature": "List<DataSource> getChildren()", "full_signature": "@Override public List<DataSource> getChildren()", "class_method_signature": "LookupDataSource.getChildren()", "testcase": false, "constructor": false}, {"identifier": "withChildren", "parameters": "(List<DataSource> children)", "modifiers": "@Override public", "return": "DataSource", "signature": "DataSource withChildren(List<DataSource> children)", "full_signature": "@Override public DataSource withChildren(List<DataSource> children)", "class_method_signature": "LookupDataSource.withChildren(List<DataSource> children)", "testcase": false, "constructor": false}, {"identifier": "isCacheable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isCacheable()", "full_signature": "@Override public boolean isCacheable()", "class_method_signature": "LookupDataSource.isCacheable()", "testcase": false, "constructor": false}, {"identifier": "isGlobal", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isGlobal()", "full_signature": "@Override public boolean isGlobal()", "class_method_signature": "LookupDataSource.isGlobal()", "testcase": false, "constructor": false}, {"identifier": "isConcrete", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isConcrete()", "full_signature": "@Override public boolean isConcrete()", "class_method_signature": "LookupDataSource.isConcrete()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "LookupDataSource.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "LookupDataSource.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "LookupDataSource.toString()", "testcase": false, "constructor": false}], "file": "processing/src/main/java/org/apache/druid/query/LookupDataSource.java"}, "focal_method": {"identifier": "getChildren", "parameters": "()", "modifiers": "@Override public", "return": "List<DataSource>", "body": "@Override\n  public List<DataSource> getChildren()\n  {\n    return Collections.emptyList();\n  }", "signature": "List<DataSource> getChildren()", "full_signature": "@Override public List<DataSource> getChildren()", "class_method_signature": "LookupDataSource.getChildren()", "testcase": false, "constructor": false, "invocations": ["emptyList"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}