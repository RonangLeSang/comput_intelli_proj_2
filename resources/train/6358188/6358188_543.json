{"test_class": {"identifier": "PrioritizedExecutorServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PrioritizedExecutorService exec;", "modifier": "private", "type": "PrioritizedExecutorService", "declarator": "exec", "var_name": "exec"}, {"original_string": "private CountDownLatch latch;", "modifier": "private", "type": "CountDownLatch", "declarator": "latch", "var_name": "latch"}, {"original_string": "private CountDownLatch finishLatch;", "modifier": "private", "type": "CountDownLatch", "declarator": "finishLatch", "var_name": "finishLatch"}, {"original_string": "private final boolean useFifo;", "modifier": "private final", "type": "boolean", "declarator": "useFifo", "var_name": "useFifo"}, {"original_string": "private final DruidProcessingConfig config;", "modifier": "private final", "type": "DruidProcessingConfig", "declarator": "config", "var_name": "config"}], "file": "processing/src/test/java/org/apache/druid/query/PrioritizedExecutorServiceTest.java"}, "test_case": {"identifier": "testOrderedExecutionEqualPriorityMix", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testOrderedExecutionEqualPriorityMix() throws ExecutionException, InterruptedException\n  {\n    exec = new PrioritizedExecutorService(exec.threadPoolExecutor, true, 0, config);\n    final int numTasks = 1_000;\n    final List<ListenableFuture<?>> futures = Lists.newArrayListWithExpectedSize(numTasks);\n    final AtomicInteger hasRun = new AtomicInteger(0);\n    final Random random = new Random(789401);\n    for (int i = 0; i < numTasks; ++i) {\n      switch (random.nextInt(4)) {\n        case 0:\n          futures.add(exec.submit(getCheckingPrioritizedCallable(i, hasRun)));\n          break;\n        case 1:\n          futures.add(exec.submit(getCheckingPrioritizedRunnable(i, hasRun)));\n          break;\n        case 2:\n          futures.add(exec.submit(getCheckingCallable(i, hasRun)));\n          break;\n        case 3:\n          futures.add(exec.submit(getCheckingRunnable(i, hasRun)));\n          break;\n        default:\n          Assert.fail(\"Bad random result\");\n      }\n    }\n    latch.countDown();\n    checkFutures(futures);\n  }", "signature": "void testOrderedExecutionEqualPriorityMix()", "full_signature": "@Test public void testOrderedExecutionEqualPriorityMix()", "class_method_signature": "PrioritizedExecutorServiceTest.testOrderedExecutionEqualPriorityMix()", "testcase": true, "constructor": false, "invocations": ["newArrayListWithExpectedSize", "nextInt", "add", "submit", "getCheckingPrioritizedCallable", "add", "submit", "getCheckingPrioritizedRunnable", "add", "submit", "getCheckingCallable", "add", "submit", "getCheckingRunnable", "fail", "countDown", "checkFutures"]}, "focal_class": {"identifier": "PrioritizedExecutorService", "superclass": "extends AbstractExecutorService", "interfaces": "implements ListeningExecutorService", "fields": [{"original_string": "private final AtomicLong queuePosition = new AtomicLong(Long.MAX_VALUE);", "modifier": "private final", "type": "AtomicLong", "declarator": "queuePosition = new AtomicLong(Long.MAX_VALUE)", "var_name": "queuePosition"}, {"original_string": "private final ListeningExecutorService delegate;", "modifier": "private final", "type": "ListeningExecutorService", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private final BlockingQueue<Runnable> delegateQueue;", "modifier": "private final", "type": "BlockingQueue<Runnable>", "declarator": "delegateQueue", "var_name": "delegateQueue"}, {"original_string": "private final boolean allowRegularTasks;", "modifier": "private final", "type": "boolean", "declarator": "allowRegularTasks", "var_name": "allowRegularTasks"}, {"original_string": "private final int defaultPriority;", "modifier": "private final", "type": "int", "declarator": "defaultPriority", "var_name": "defaultPriority"}, {"original_string": "private final DruidProcessingConfig config;", "modifier": "private final", "type": "DruidProcessingConfig", "declarator": "config", "var_name": "config"}, {"original_string": "final ThreadPoolExecutor threadPoolExecutor;", "modifier": "final", "type": "ThreadPoolExecutor", "declarator": "threadPoolExecutor", "var_name": "threadPoolExecutor"}], "methods": [{"identifier": "create", "parameters": "(Lifecycle lifecycle, DruidProcessingConfig config)", "modifiers": "public static", "return": "PrioritizedExecutorService", "signature": "PrioritizedExecutorService create(Lifecycle lifecycle, DruidProcessingConfig config)", "full_signature": "public static PrioritizedExecutorService create(Lifecycle lifecycle, DruidProcessingConfig config)", "class_method_signature": "PrioritizedExecutorService.create(Lifecycle lifecycle, DruidProcessingConfig config)", "testcase": false, "constructor": false}, {"identifier": "PrioritizedExecutorService", "parameters": "(\n      ThreadPoolExecutor threadPoolExecutor,\n      DruidProcessingConfig config\n  )", "modifiers": "public", "return": "", "signature": " PrioritizedExecutorService(\n      ThreadPoolExecutor threadPoolExecutor,\n      DruidProcessingConfig config\n  )", "full_signature": "public  PrioritizedExecutorService(\n      ThreadPoolExecutor threadPoolExecutor,\n      DruidProcessingConfig config\n  )", "class_method_signature": "PrioritizedExecutorService.PrioritizedExecutorService(\n      ThreadPoolExecutor threadPoolExecutor,\n      DruidProcessingConfig config\n  )", "testcase": false, "constructor": true}, {"identifier": "PrioritizedExecutorService", "parameters": "(\n      ThreadPoolExecutor threadPoolExecutor,\n      boolean allowRegularTasks,\n      int defaultPriority,\n      DruidProcessingConfig config\n  )", "modifiers": "public", "return": "", "signature": " PrioritizedExecutorService(\n      ThreadPoolExecutor threadPoolExecutor,\n      boolean allowRegularTasks,\n      int defaultPriority,\n      DruidProcessingConfig config\n  )", "full_signature": "public  PrioritizedExecutorService(\n      ThreadPoolExecutor threadPoolExecutor,\n      boolean allowRegularTasks,\n      int defaultPriority,\n      DruidProcessingConfig config\n  )", "class_method_signature": "PrioritizedExecutorService.PrioritizedExecutorService(\n      ThreadPoolExecutor threadPoolExecutor,\n      boolean allowRegularTasks,\n      int defaultPriority,\n      DruidProcessingConfig config\n  )", "testcase": false, "constructor": true}, {"identifier": "newTaskFor", "parameters": "(Runnable runnable, T value)", "modifiers": "@Override protected", "return": "PrioritizedListenableFutureTask<T>", "signature": "PrioritizedListenableFutureTask<T> newTaskFor(Runnable runnable, T value)", "full_signature": "@Override protected PrioritizedListenableFutureTask<T> newTaskFor(Runnable runnable, T value)", "class_method_signature": "PrioritizedExecutorService.newTaskFor(Runnable runnable, T value)", "testcase": false, "constructor": false}, {"identifier": "newTaskFor", "parameters": "(Callable<T> callable)", "modifiers": "@Override protected", "return": "PrioritizedListenableFutureTask<T>", "signature": "PrioritizedListenableFutureTask<T> newTaskFor(Callable<T> callable)", "full_signature": "@Override protected PrioritizedListenableFutureTask<T> newTaskFor(Callable<T> callable)", "class_method_signature": "PrioritizedExecutorService.newTaskFor(Callable<T> callable)", "testcase": false, "constructor": false}, {"identifier": "submit", "parameters": "(Runnable task)", "modifiers": "@Override public", "return": "ListenableFuture<?>", "signature": "ListenableFuture<?> submit(Runnable task)", "full_signature": "@Override public ListenableFuture<?> submit(Runnable task)", "class_method_signature": "PrioritizedExecutorService.submit(Runnable task)", "testcase": false, "constructor": false}, {"identifier": "submit", "parameters": "(Runnable task, @Nullable T result)", "modifiers": "@Override public", "return": "ListenableFuture<T>", "signature": "ListenableFuture<T> submit(Runnable task, @Nullable T result)", "full_signature": "@Override public ListenableFuture<T> submit(Runnable task, @Nullable T result)", "class_method_signature": "PrioritizedExecutorService.submit(Runnable task, @Nullable T result)", "testcase": false, "constructor": false}, {"identifier": "submit", "parameters": "(Callable<T> task)", "modifiers": "@Override public", "return": "ListenableFuture<T>", "signature": "ListenableFuture<T> submit(Callable<T> task)", "full_signature": "@Override public ListenableFuture<T> submit(Callable<T> task)", "class_method_signature": "PrioritizedExecutorService.submit(Callable<T> task)", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void shutdown()", "full_signature": "@Override public void shutdown()", "class_method_signature": "PrioritizedExecutorService.shutdown()", "testcase": false, "constructor": false}, {"identifier": "shutdownNow", "parameters": "()", "modifiers": "@Override public", "return": "List<Runnable>", "signature": "List<Runnable> shutdownNow()", "full_signature": "@Override public List<Runnable> shutdownNow()", "class_method_signature": "PrioritizedExecutorService.shutdownNow()", "testcase": false, "constructor": false}, {"identifier": "isShutdown", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isShutdown()", "full_signature": "@Override public boolean isShutdown()", "class_method_signature": "PrioritizedExecutorService.isShutdown()", "testcase": false, "constructor": false}, {"identifier": "isTerminated", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isTerminated()", "full_signature": "@Override public boolean isTerminated()", "class_method_signature": "PrioritizedExecutorService.isTerminated()", "testcase": false, "constructor": false}, {"identifier": "awaitTermination", "parameters": "(long l, TimeUnit timeUnit)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean awaitTermination(long l, TimeUnit timeUnit)", "full_signature": "@Override public boolean awaitTermination(long l, TimeUnit timeUnit)", "class_method_signature": "PrioritizedExecutorService.awaitTermination(long l, TimeUnit timeUnit)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(final Runnable runnable)", "modifiers": "@Override public", "return": "void", "signature": "void execute(final Runnable runnable)", "full_signature": "@Override public void execute(final Runnable runnable)", "class_method_signature": "PrioritizedExecutorService.execute(final Runnable runnable)", "testcase": false, "constructor": false}, {"identifier": "getQueueSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getQueueSize()", "full_signature": "public int getQueueSize()", "class_method_signature": "PrioritizedExecutorService.getQueueSize()", "testcase": false, "constructor": false}], "file": "processing/src/main/java/org/apache/druid/query/PrioritizedExecutorService.java"}, "focal_method": {"identifier": "submit", "parameters": "(Runnable task)", "modifiers": "@Override public", "return": "ListenableFuture<?>", "body": "@Override\n  public ListenableFuture<?> submit(Runnable task)\n  {\n    return (ListenableFuture<?>) super.submit(task);\n  }", "signature": "ListenableFuture<?> submit(Runnable task)", "full_signature": "@Override public ListenableFuture<?> submit(Runnable task)", "class_method_signature": "PrioritizedExecutorService.submit(Runnable task)", "testcase": false, "constructor": false, "invocations": ["submit"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}