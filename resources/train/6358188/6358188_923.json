{"test_class": {"identifier": "PossiblyNullDimensionSelectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private boolean isNull = false;", "modifier": "private", "type": "boolean", "declarator": "isNull = false", "var_name": "isNull"}, {"original_string": "private final DimensionSelector onNullSelector = makeSelector(DimensionSelector.constant(null));", "modifier": "private final", "type": "DimensionSelector", "declarator": "onNullSelector = makeSelector(DimensionSelector.constant(null))", "var_name": "onNullSelector"}, {"original_string": "private final DimensionSelector onNonnullSelector = makeSelector(DimensionSelector.constant(\"foo\"));", "modifier": "private final", "type": "DimensionSelector", "declarator": "onNonnullSelector = makeSelector(DimensionSelector.constant(\"foo\"))", "var_name": "onNonnullSelector"}], "file": "processing/src/test/java/org/apache/druid/segment/join/PossiblyNullDimensionSelectorTest.java"}, "test_case": {"identifier": "test_getRow_normalOnNullSelector", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void test_getRow_normalOnNullSelector()\n  {\n    isNull = false;\n    assertRowsEqual(new int[]{0}, onNullSelector.getRow());\n  }", "signature": "void test_getRow_normalOnNullSelector()", "full_signature": "@Test public void test_getRow_normalOnNullSelector()", "class_method_signature": "PossiblyNullDimensionSelectorTest.test_getRow_normalOnNullSelector()", "testcase": true, "constructor": false, "invocations": ["assertRowsEqual", "getRow"]}, "focal_class": {"identifier": "PossiblyNullDimensionSelector", "superclass": "extends AbstractDimensionSelector", "interfaces": "implements IdLookup", "fields": [{"original_string": "private final DimensionSelector baseSelector;", "modifier": "private final", "type": "DimensionSelector", "declarator": "baseSelector", "var_name": "baseSelector"}, {"original_string": "private final BooleanSupplier beNull;", "modifier": "private final", "type": "BooleanSupplier", "declarator": "beNull", "var_name": "beNull"}, {"original_string": "private final NullAdjustedIndexedInts nullAdjustedRow;", "modifier": "private final", "type": "NullAdjustedIndexedInts", "declarator": "nullAdjustedRow", "var_name": "nullAdjustedRow"}, {"original_string": "private final int nullAdjustment;", "modifier": "private final", "type": "int", "declarator": "nullAdjustment", "var_name": "nullAdjustment"}], "methods": [{"identifier": "PossiblyNullDimensionSelector", "parameters": "(DimensionSelector baseSelector, BooleanSupplier beNull)", "modifiers": "public", "return": "", "signature": " PossiblyNullDimensionSelector(DimensionSelector baseSelector, BooleanSupplier beNull)", "full_signature": "public  PossiblyNullDimensionSelector(DimensionSelector baseSelector, BooleanSupplier beNull)", "class_method_signature": "PossiblyNullDimensionSelector.PossiblyNullDimensionSelector(DimensionSelector baseSelector, BooleanSupplier beNull)", "testcase": false, "constructor": true}, {"identifier": "getRow", "parameters": "()", "modifiers": "@Override @Nonnull public", "return": "IndexedInts", "signature": "IndexedInts getRow()", "full_signature": "@Override @Nonnull public IndexedInts getRow()", "class_method_signature": "PossiblyNullDimensionSelector.getRow()", "testcase": false, "constructor": false}, {"identifier": "makeValueMatcher", "parameters": "(@Nullable final String value)", "modifiers": "@Override @Nonnull public", "return": "ValueMatcher", "signature": "ValueMatcher makeValueMatcher(@Nullable final String value)", "full_signature": "@Override @Nonnull public ValueMatcher makeValueMatcher(@Nullable final String value)", "class_method_signature": "PossiblyNullDimensionSelector.makeValueMatcher(@Nullable final String value)", "testcase": false, "constructor": false}, {"identifier": "makeValueMatcher", "parameters": "(final Predicate<String> predicate)", "modifiers": "@Override @Nonnull public", "return": "ValueMatcher", "signature": "ValueMatcher makeValueMatcher(final Predicate<String> predicate)", "full_signature": "@Override @Nonnull public ValueMatcher makeValueMatcher(final Predicate<String> predicate)", "class_method_signature": "PossiblyNullDimensionSelector.makeValueMatcher(final Predicate<String> predicate)", "testcase": false, "constructor": false}, {"identifier": "getValueCardinality", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getValueCardinality()", "full_signature": "@Override public int getValueCardinality()", "class_method_signature": "PossiblyNullDimensionSelector.getValueCardinality()", "testcase": false, "constructor": false}, {"identifier": "lookupName", "parameters": "(int id)", "modifiers": "@Nullable @Override public", "return": "String", "signature": "String lookupName(int id)", "full_signature": "@Nullable @Override public String lookupName(int id)", "class_method_signature": "PossiblyNullDimensionSelector.lookupName(int id)", "testcase": false, "constructor": false}, {"identifier": "nameLookupPossibleInAdvance", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean nameLookupPossibleInAdvance()", "full_signature": "@Override public boolean nameLookupPossibleInAdvance()", "class_method_signature": "PossiblyNullDimensionSelector.nameLookupPossibleInAdvance()", "testcase": false, "constructor": false}, {"identifier": "idLookup", "parameters": "()", "modifiers": "@Nullable @Override public", "return": "IdLookup", "signature": "IdLookup idLookup()", "full_signature": "@Nullable @Override public IdLookup idLookup()", "class_method_signature": "PossiblyNullDimensionSelector.idLookup()", "testcase": false, "constructor": false}, {"identifier": "lookupId", "parameters": "(@Nullable String name)", "modifiers": "@Override public", "return": "int", "signature": "int lookupId(@Nullable String name)", "full_signature": "@Override public int lookupId(@Nullable String name)", "class_method_signature": "PossiblyNullDimensionSelector.lookupId(@Nullable String name)", "testcase": false, "constructor": false}, {"identifier": "inspectRuntimeShape", "parameters": "(RuntimeShapeInspector inspector)", "modifiers": "@Override public", "return": "void", "signature": "void inspectRuntimeShape(RuntimeShapeInspector inspector)", "full_signature": "@Override public void inspectRuntimeShape(RuntimeShapeInspector inspector)", "class_method_signature": "PossiblyNullDimensionSelector.inspectRuntimeShape(RuntimeShapeInspector inspector)", "testcase": false, "constructor": false}, {"identifier": "classOfObject", "parameters": "()", "modifiers": "@Override public", "return": "Class<?>", "signature": "Class<?> classOfObject()", "full_signature": "@Override public Class<?> classOfObject()", "class_method_signature": "PossiblyNullDimensionSelector.classOfObject()", "testcase": false, "constructor": false}], "file": "processing/src/main/java/org/apache/druid/segment/join/PossiblyNullDimensionSelector.java"}, "focal_method": {"identifier": "getRow", "parameters": "()", "modifiers": "@Override @Nonnull public", "return": "IndexedInts", "body": "@Override\n  @Nonnull\n  public IndexedInts getRow()\n  {\n    if (beNull.getAsBoolean()) {\n      // This is the reason we have all the nullAdjustment business. We need to return a null when asked to.\n      return ZeroIndexedInts.instance();\n    } else {\n      nullAdjustedRow.set(baseSelector.getRow());\n      return nullAdjustedRow;\n    }\n  }", "signature": "IndexedInts getRow()", "full_signature": "@Override @Nonnull public IndexedInts getRow()", "class_method_signature": "PossiblyNullDimensionSelector.getRow()", "testcase": false, "constructor": false, "invocations": ["getAsBoolean", "instance", "set", "getRow"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}