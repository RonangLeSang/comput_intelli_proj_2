{"test_class": {"identifier": "UpperExtractionFnTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "ExtractionFn extractionFn = new UpperExtractionFn(null);", "modifier": "", "type": "ExtractionFn", "declarator": "extractionFn = new UpperExtractionFn(null)", "var_name": "extractionFn"}], "file": "processing/src/test/java/org/apache/druid/query/extraction/UpperExtractionFnTest.java"}, "test_case": {"identifier": "testApply", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testApply()\n  {\n    Assert.assertEquals(\"UPPER\", extractionFn.apply(\"uPpeR\"));\n    Assert.assertEquals(NullHandling.replaceWithDefault() ? null : \"\", extractionFn.apply(\"\"));\n    Assert.assertEquals(null, extractionFn.apply(null));\n    Assert.assertEquals(null, extractionFn.apply((Object) null));\n    Assert.assertEquals(\"1\", extractionFn.apply(1));\n  }", "signature": "void testApply()", "full_signature": "@Test public void testApply()", "class_method_signature": "UpperExtractionFnTest.testApply()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "apply", "assertEquals", "replaceWithDefault", "apply", "assertEquals", "apply", "assertEquals", "apply", "assertEquals", "apply"]}, "focal_class": {"identifier": "UpperExtractionFn", "superclass": "extends DimExtractionFn", "interfaces": "", "fields": [{"original_string": "private final Locale locale;", "modifier": "private final", "type": "Locale", "declarator": "locale", "var_name": "locale"}, {"original_string": "@JsonProperty\n  private final String localeString;", "modifier": "@JsonProperty\n  private final", "type": "String", "declarator": "localeString", "var_name": "localeString"}], "methods": [{"identifier": "UpperExtractionFn", "parameters": "(@JsonProperty(\"locale\") String localeString)", "modifiers": "public", "return": "", "signature": " UpperExtractionFn(@JsonProperty(\"locale\") String localeString)", "full_signature": "public  UpperExtractionFn(@JsonProperty(\"locale\") String localeString)", "class_method_signature": "UpperExtractionFn.UpperExtractionFn(@JsonProperty(\"locale\") String localeString)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(@Nullable String key)", "modifiers": "@Nullable @Override public", "return": "String", "signature": "String apply(@Nullable String key)", "full_signature": "@Nullable @Override public String apply(@Nullable String key)", "class_method_signature": "UpperExtractionFn.apply(@Nullable String key)", "testcase": false, "constructor": false}, {"identifier": "preservesOrdering", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean preservesOrdering()", "full_signature": "@Override public boolean preservesOrdering()", "class_method_signature": "UpperExtractionFn.preservesOrdering()", "testcase": false, "constructor": false}, {"identifier": "getExtractionType", "parameters": "()", "modifiers": "@Override public", "return": "ExtractionType", "signature": "ExtractionType getExtractionType()", "full_signature": "@Override public ExtractionType getExtractionType()", "class_method_signature": "UpperExtractionFn.getExtractionType()", "testcase": false, "constructor": false}, {"identifier": "getCacheKey", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] getCacheKey()", "full_signature": "@Override public byte[] getCacheKey()", "class_method_signature": "UpperExtractionFn.getCacheKey()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "UpperExtractionFn.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "UpperExtractionFn.hashCode()", "testcase": false, "constructor": false}], "file": "processing/src/main/java/org/apache/druid/query/extraction/UpperExtractionFn.java"}, "focal_method": {"identifier": "apply", "parameters": "(@Nullable String key)", "modifiers": "@Nullable @Override public", "return": "String", "body": "@Nullable\n  @Override\n  public String apply(@Nullable String key)\n  {\n    if (NullHandling.isNullOrEquivalent(key)) {\n      return null;\n    }\n    return key.toUpperCase(locale);\n  }", "signature": "String apply(@Nullable String key)", "full_signature": "@Nullable @Override public String apply(@Nullable String key)", "class_method_signature": "UpperExtractionFn.apply(@Nullable String key)", "testcase": false, "constructor": false, "invocations": ["isNullOrEquivalent", "toUpperCase"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}