{"test_class": {"identifier": "HttpEmitterConfigTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/apache/druid/java/util/emitter/core/HttpEmitterConfigTest.java"}, "test_case": {"identifier": "testDefaults", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testDefaults()\n  {\n    final Properties props = new Properties();\n    props.put(\"org.apache.druid.java.util.emitter.recipientBaseUrl\", \"http://example.com/\");\n\n    final ObjectMapper objectMapper = new ObjectMapper();\n    final HttpEmitterConfig config = objectMapper.convertValue(\n        Emitters.makeCustomFactoryMap(props),\n        HttpEmitterConfig.class\n    );\n\n    Assert.assertEquals(60000, config.getFlushMillis());\n    Assert.assertEquals(500, config.getFlushCount());\n    Assert.assertEquals(\"http://example.com/\", config.getRecipientBaseUrl());\n    Assert.assertNull(config.getBasicAuthentication());\n    Assert.assertEquals(BatchingStrategy.ARRAY, config.getBatchingStrategy());\n    Pair<Integer, Integer> batchConfigPair = BaseHttpEmittingConfig.getDefaultBatchSizeAndLimit(\n        Runtime.getRuntime().maxMemory()\n    );\n    Assert.assertEquals(batchConfigPair.lhs.intValue(), config.getMaxBatchSize());\n    Assert.assertEquals(batchConfigPair.rhs.intValue(), config.getBatchQueueSizeLimit());\n    Assert.assertEquals(Long.MAX_VALUE, config.getFlushTimeOut());\n    Assert.assertEquals(2.0f, config.getHttpTimeoutAllowanceFactor(), 0.0f);\n    Assert.assertEquals(0, config.getMinHttpTimeoutMillis());\n  }", "signature": "void testDefaults()", "full_signature": "@Test public void testDefaults()", "class_method_signature": "HttpEmitterConfigTest.testDefaults()", "testcase": true, "constructor": false, "invocations": ["put", "convertValue", "makeCustomFactoryMap", "assertEquals", "getFlushMillis", "assertEquals", "getFlushCount", "assertEquals", "getRecipientBaseUrl", "assertNull", "getBasicAuthentication", "assertEquals", "getBatchingStrategy", "getDefaultBatchSizeAndLimit", "maxMemory", "getRuntime", "assertEquals", "intValue", "getMaxBatchSize", "assertEquals", "intValue", "getBatchQueueSizeLimit", "assertEquals", "getFlushTimeOut", "assertEquals", "getHttpTimeoutAllowanceFactor", "assertEquals", "getMinHttpTimeoutMillis"]}, "focal_class": {"identifier": "HttpEmitterConfig", "superclass": "extends BaseHttpEmittingConfig", "interfaces": "", "fields": [{"original_string": "@NotNull\n  @JsonProperty\n  String recipientBaseUrl = null;", "modifier": "@NotNull\n  @JsonProperty", "type": "String", "declarator": "recipientBaseUrl = null", "var_name": "recipientBaseUrl"}], "methods": [{"identifier": "HttpEmitterConfig", "parameters": "()", "modifiers": "public", "return": "", "signature": " HttpEmitterConfig()", "full_signature": "public  HttpEmitterConfig()", "class_method_signature": "HttpEmitterConfig.HttpEmitterConfig()", "testcase": false, "constructor": true}, {"identifier": "HttpEmitterConfig", "parameters": "(BaseHttpEmittingConfig base, String recipientBaseUrl)", "modifiers": "public", "return": "", "signature": " HttpEmitterConfig(BaseHttpEmittingConfig base, String recipientBaseUrl)", "full_signature": "public  HttpEmitterConfig(BaseHttpEmittingConfig base, String recipientBaseUrl)", "class_method_signature": "HttpEmitterConfig.HttpEmitterConfig(BaseHttpEmittingConfig base, String recipientBaseUrl)", "testcase": false, "constructor": true}, {"identifier": "getRecipientBaseUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRecipientBaseUrl()", "full_signature": "public String getRecipientBaseUrl()", "class_method_signature": "HttpEmitterConfig.getRecipientBaseUrl()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "HttpEmitterConfig.toString()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/apache/druid/java/util/emitter/core/HttpEmitterConfig.java"}, "focal_method": {"identifier": "getRecipientBaseUrl", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getRecipientBaseUrl()\n  {\n    return recipientBaseUrl;\n  }", "signature": "String getRecipientBaseUrl()", "full_signature": "public String getRecipientBaseUrl()", "class_method_signature": "HttpEmitterConfig.getRecipientBaseUrl()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}