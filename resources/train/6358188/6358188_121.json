{"test_class": {"identifier": "SupervisorResourceTest", "superclass": "extends EasyMockSupport", "interfaces": "", "fields": [{"original_string": "private static final ObjectMapper OBJECT_MAPPER = TestHelper.makeJsonMapper();", "modifier": "private static final", "type": "ObjectMapper", "declarator": "OBJECT_MAPPER = TestHelper.makeJsonMapper()", "var_name": "OBJECT_MAPPER"}, {"original_string": "private static final TestSupervisorSpec SPEC1 = new TestSupervisorSpec(\n      \"id1\",\n      null,\n      Collections.singletonList(\"datasource1\")\n  );", "modifier": "private static final", "type": "TestSupervisorSpec", "declarator": "SPEC1 = new TestSupervisorSpec(\n      \"id1\",\n      null,\n      Collections.singletonList(\"datasource1\")\n  )", "var_name": "SPEC1"}, {"original_string": "private static final TestSupervisorSpec SPEC2 = new TestSupervisorSpec(\n      \"id2\",\n      null,\n      Collections.singletonList(\"datasource2\")\n  );", "modifier": "private static final", "type": "TestSupervisorSpec", "declarator": "SPEC2 = new TestSupervisorSpec(\n      \"id2\",\n      null,\n      Collections.singletonList(\"datasource2\")\n  )", "var_name": "SPEC2"}, {"original_string": "private static final Set<String> SUPERVISOR_IDS = ImmutableSet.of(SPEC1.getId(), SPEC2.getId());", "modifier": "private static final", "type": "Set<String>", "declarator": "SUPERVISOR_IDS = ImmutableSet.of(SPEC1.getId(), SPEC2.getId())", "var_name": "SUPERVISOR_IDS"}, {"original_string": "@Mock\n  private TaskMaster taskMaster;", "modifier": "@Mock\n  private", "type": "TaskMaster", "declarator": "taskMaster", "var_name": "taskMaster"}, {"original_string": "@Mock\n  private SupervisorManager supervisorManager;", "modifier": "@Mock\n  private", "type": "SupervisorManager", "declarator": "supervisorManager", "var_name": "supervisorManager"}, {"original_string": "@Mock\n  private HttpServletRequest request;", "modifier": "@Mock\n  private", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "private SupervisorResource supervisorResource;", "modifier": "private", "type": "SupervisorResource", "declarator": "supervisorResource", "var_name": "supervisorResource"}], "file": "indexing-service/src/test/java/org/apache/druid/indexing/overlord/supervisor/SupervisorResourceTest.java"}, "test_case": {"identifier": "testSpecGetHealth", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSpecGetHealth()\n  {\n    EasyMock.expect(taskMaster.getSupervisorManager()).andReturn(Optional.of(supervisorManager)).times(3);\n    EasyMock.expect(supervisorManager.isSupervisorHealthy(\"my-id\")).andReturn(Optional.of(true));\n    EasyMock.expect(supervisorManager.isSupervisorHealthy(\"my-id-2\")).andReturn(Optional.of(false));\n    EasyMock.expect(supervisorManager.isSupervisorHealthy(\"my-id-3\")).andReturn(Optional.absent());\n    replayAll();\n\n    Response response = supervisorResource.specGetHealth(\"my-id\");\n\n    Assert.assertEquals(200, response.getStatus());\n    Assert.assertEquals(ImmutableMap.of(\"healthy\", true), response.getEntity());\n\n    response = supervisorResource.specGetHealth(\"my-id-2\");\n\n    Assert.assertEquals(503, response.getStatus());\n    Assert.assertEquals(ImmutableMap.of(\"healthy\", false), response.getEntity());\n\n    response = supervisorResource.specGetHealth(\"my-id-3\");\n\n    Assert.assertEquals(404, response.getStatus());\n    Assert.assertEquals(\n        ImmutableMap.of(\"error\", \"[my-id-3] does not exist or health check not implemented\"),\n        response.getEntity()\n    );\n\n    verifyAll();\n  }", "signature": "void testSpecGetHealth()", "full_signature": "@Test public void testSpecGetHealth()", "class_method_signature": "SupervisorResourceTest.testSpecGetHealth()", "testcase": true, "constructor": false, "invocations": ["times", "andReturn", "expect", "getSupervisorManager", "of", "andReturn", "expect", "isSupervisorHealthy", "of", "andReturn", "expect", "isSupervisorHealthy", "of", "andReturn", "expect", "isSupervisorHealthy", "absent", "replayAll", "specGetHealth", "assertEquals", "getStatus", "assertEquals", "of", "getEntity", "specGetHealth", "assertEquals", "getStatus", "assertEquals", "of", "getEntity", "specGetHealth", "assertEquals", "getStatus", "assertEquals", "of", "getEntity", "verifyAll"]}, "focal_class": {"identifier": "SupervisorResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Function<VersionedSupervisorSpec, Iterable<ResourceAction>> SPEC_DATASOURCE_READ_RA_GENERATOR =\n      supervisorSpec -> {\n        if (supervisorSpec.getSpec() == null) {\n          return null;\n        }\n        if (supervisorSpec.getSpec().getDataSources() == null) {\n          return new ArrayList<>();\n        }\n        return Iterables.transform(\n            supervisorSpec.getSpec().getDataSources(),\n            AuthorizationUtils.DATASOURCE_READ_RA_GENERATOR\n        );\n      };", "modifier": "private static final", "type": "Function<VersionedSupervisorSpec, Iterable<ResourceAction>>", "declarator": "SPEC_DATASOURCE_READ_RA_GENERATOR =\n      supervisorSpec -> {\n        if (supervisorSpec.getSpec() == null) {\n          return null;\n        }\n        if (supervisorSpec.getSpec().getDataSources() == null) {\n          return new ArrayList<>();\n        }\n        return Iterables.transform(\n            supervisorSpec.getSpec().getDataSources(),\n            AuthorizationUtils.DATASOURCE_READ_RA_GENERATOR\n        );\n      }", "var_name": "SPEC_DATASOURCE_READ_RA_GENERATOR"}, {"original_string": "private final TaskMaster taskMaster;", "modifier": "private final", "type": "TaskMaster", "declarator": "taskMaster", "var_name": "taskMaster"}, {"original_string": "private final AuthorizerMapper authorizerMapper;", "modifier": "private final", "type": "AuthorizerMapper", "declarator": "authorizerMapper", "var_name": "authorizerMapper"}, {"original_string": "private final ObjectMapper objectMapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "objectMapper", "var_name": "objectMapper"}], "methods": [{"identifier": "SupervisorResource", "parameters": "(TaskMaster taskMaster, AuthorizerMapper authorizerMapper, ObjectMapper objectMapper)", "modifiers": "@Inject public", "return": "", "signature": " SupervisorResource(TaskMaster taskMaster, AuthorizerMapper authorizerMapper, ObjectMapper objectMapper)", "full_signature": "@Inject public  SupervisorResource(TaskMaster taskMaster, AuthorizerMapper authorizerMapper, ObjectMapper objectMapper)", "class_method_signature": "SupervisorResource.SupervisorResource(TaskMaster taskMaster, AuthorizerMapper authorizerMapper, ObjectMapper objectMapper)", "testcase": false, "constructor": true}, {"identifier": "specPost", "parameters": "(final SupervisorSpec spec, @Context final HttpServletRequest req)", "modifiers": "@POST @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response specPost(final SupervisorSpec spec, @Context final HttpServletRequest req)", "full_signature": "@POST @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON) public Response specPost(final SupervisorSpec spec, @Context final HttpServletRequest req)", "class_method_signature": "SupervisorResource.specPost(final SupervisorSpec spec, @Context final HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "specGetAll", "parameters": "(\n      @QueryParam(\"full\") String full,\n      @QueryParam(\"state\") Boolean state,\n      @QueryParam(\"system\") String system,\n      @Context final HttpServletRequest req\n  )", "modifiers": "@GET @Produces(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response specGetAll(\n      @QueryParam(\"full\") String full,\n      @QueryParam(\"state\") Boolean state,\n      @QueryParam(\"system\") String system,\n      @Context final HttpServletRequest req\n  )", "full_signature": "@GET @Produces(MediaType.APPLICATION_JSON) public Response specGetAll(\n      @QueryParam(\"full\") String full,\n      @QueryParam(\"state\") Boolean state,\n      @QueryParam(\"system\") String system,\n      @Context final HttpServletRequest req\n  )", "class_method_signature": "SupervisorResource.specGetAll(\n      @QueryParam(\"full\") String full,\n      @QueryParam(\"state\") Boolean state,\n      @QueryParam(\"system\") String system,\n      @Context final HttpServletRequest req\n  )", "testcase": false, "constructor": false}, {"identifier": "specGet", "parameters": "(@PathParam(\"id\") final String id)", "modifiers": "@GET @Path(\"/{id}\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public", "return": "Response", "signature": "Response specGet(@PathParam(\"id\") final String id)", "full_signature": "@GET @Path(\"/{id}\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public Response specGet(@PathParam(\"id\") final String id)", "class_method_signature": "SupervisorResource.specGet(@PathParam(\"id\") final String id)", "testcase": false, "constructor": false}, {"identifier": "specGetStatus", "parameters": "(@PathParam(\"id\") final String id)", "modifiers": "@GET @Path(\"/{id}/status\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public", "return": "Response", "signature": "Response specGetStatus(@PathParam(\"id\") final String id)", "full_signature": "@GET @Path(\"/{id}/status\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public Response specGetStatus(@PathParam(\"id\") final String id)", "class_method_signature": "SupervisorResource.specGetStatus(@PathParam(\"id\") final String id)", "testcase": false, "constructor": false}, {"identifier": "specGetHealth", "parameters": "(@PathParam(\"id\") final String id)", "modifiers": "@GET @Path(\"/{id}/health\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public", "return": "Response", "signature": "Response specGetHealth(@PathParam(\"id\") final String id)", "full_signature": "@GET @Path(\"/{id}/health\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public Response specGetHealth(@PathParam(\"id\") final String id)", "class_method_signature": "SupervisorResource.specGetHealth(@PathParam(\"id\") final String id)", "testcase": false, "constructor": false}, {"identifier": "getAllTaskStats", "parameters": "(\n      @PathParam(\"id\") final String id\n  )", "modifiers": "@GET @Path(\"/{id}/stats\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public", "return": "Response", "signature": "Response getAllTaskStats(\n      @PathParam(\"id\") final String id\n  )", "full_signature": "@GET @Path(\"/{id}/stats\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public Response getAllTaskStats(\n      @PathParam(\"id\") final String id\n  )", "class_method_signature": "SupervisorResource.getAllTaskStats(\n      @PathParam(\"id\") final String id\n  )", "testcase": false, "constructor": false}, {"identifier": "specResume", "parameters": "(@PathParam(\"id\") final String id)", "modifiers": "@POST @Path(\"/{id}/resume\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public", "return": "Response", "signature": "Response specResume(@PathParam(\"id\") final String id)", "full_signature": "@POST @Path(\"/{id}/resume\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public Response specResume(@PathParam(\"id\") final String id)", "class_method_signature": "SupervisorResource.specResume(@PathParam(\"id\") final String id)", "testcase": false, "constructor": false}, {"identifier": "specSuspend", "parameters": "(@PathParam(\"id\") final String id)", "modifiers": "@POST @Path(\"/{id}/suspend\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public", "return": "Response", "signature": "Response specSuspend(@PathParam(\"id\") final String id)", "full_signature": "@POST @Path(\"/{id}/suspend\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public Response specSuspend(@PathParam(\"id\") final String id)", "class_method_signature": "SupervisorResource.specSuspend(@PathParam(\"id\") final String id)", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "(@PathParam(\"id\") final String id)", "modifiers": "@Deprecated @POST @Path(\"/{id}/shutdown\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public", "return": "Response", "signature": "Response shutdown(@PathParam(\"id\") final String id)", "full_signature": "@Deprecated @POST @Path(\"/{id}/shutdown\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public Response shutdown(@PathParam(\"id\") final String id)", "class_method_signature": "SupervisorResource.shutdown(@PathParam(\"id\") final String id)", "testcase": false, "constructor": false}, {"identifier": "terminate", "parameters": "(@PathParam(\"id\") final String id)", "modifiers": "@POST @Path(\"/{id}/terminate\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public", "return": "Response", "signature": "Response terminate(@PathParam(\"id\") final String id)", "full_signature": "@POST @Path(\"/{id}/terminate\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public Response terminate(@PathParam(\"id\") final String id)", "class_method_signature": "SupervisorResource.terminate(@PathParam(\"id\") final String id)", "testcase": false, "constructor": false}, {"identifier": "suspendAll", "parameters": "(@Context final HttpServletRequest req)", "modifiers": "@POST @Path(\"/suspendAll\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response suspendAll(@Context final HttpServletRequest req)", "full_signature": "@POST @Path(\"/suspendAll\") @Produces(MediaType.APPLICATION_JSON) public Response suspendAll(@Context final HttpServletRequest req)", "class_method_signature": "SupervisorResource.suspendAll(@Context final HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "resumeAll", "parameters": "(@Context final HttpServletRequest req)", "modifiers": "@POST @Path(\"/resumeAll\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response resumeAll(@Context final HttpServletRequest req)", "full_signature": "@POST @Path(\"/resumeAll\") @Produces(MediaType.APPLICATION_JSON) public Response resumeAll(@Context final HttpServletRequest req)", "class_method_signature": "SupervisorResource.resumeAll(@Context final HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "terminateAll", "parameters": "(@Context final HttpServletRequest req)", "modifiers": "@POST @Path(\"/terminateAll\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response terminateAll(@Context final HttpServletRequest req)", "full_signature": "@POST @Path(\"/terminateAll\") @Produces(MediaType.APPLICATION_JSON) public Response terminateAll(@Context final HttpServletRequest req)", "class_method_signature": "SupervisorResource.terminateAll(@Context final HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "specGetAllHistory", "parameters": "(@Context final HttpServletRequest req)", "modifiers": "@GET @Path(\"/history\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response specGetAllHistory(@Context final HttpServletRequest req)", "full_signature": "@GET @Path(\"/history\") @Produces(MediaType.APPLICATION_JSON) public Response specGetAllHistory(@Context final HttpServletRequest req)", "class_method_signature": "SupervisorResource.specGetAllHistory(@Context final HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "specGetHistory", "parameters": "(\n      @Context final HttpServletRequest req,\n      @PathParam(\"id\") final String id\n  )", "modifiers": "@GET @Path(\"/{id}/history\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response specGetHistory(\n      @Context final HttpServletRequest req,\n      @PathParam(\"id\") final String id\n  )", "full_signature": "@GET @Path(\"/{id}/history\") @Produces(MediaType.APPLICATION_JSON) public Response specGetHistory(\n      @Context final HttpServletRequest req,\n      @PathParam(\"id\") final String id\n  )", "class_method_signature": "SupervisorResource.specGetHistory(\n      @Context final HttpServletRequest req,\n      @PathParam(\"id\") final String id\n  )", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "(@PathParam(\"id\") final String id)", "modifiers": "@POST @Path(\"/{id}/reset\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public", "return": "Response", "signature": "Response reset(@PathParam(\"id\") final String id)", "full_signature": "@POST @Path(\"/{id}/reset\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public Response reset(@PathParam(\"id\") final String id)", "class_method_signature": "SupervisorResource.reset(@PathParam(\"id\") final String id)", "testcase": false, "constructor": false}, {"identifier": "asLeaderWithSupervisorManager", "parameters": "(Function<SupervisorManager, Response> f)", "modifiers": "private", "return": "Response", "signature": "Response asLeaderWithSupervisorManager(Function<SupervisorManager, Response> f)", "full_signature": "private Response asLeaderWithSupervisorManager(Function<SupervisorManager, Response> f)", "class_method_signature": "SupervisorResource.asLeaderWithSupervisorManager(Function<SupervisorManager, Response> f)", "testcase": false, "constructor": false}, {"identifier": "filterAuthorizedSupervisorIds", "parameters": "(\n      final HttpServletRequest req,\n      SupervisorManager manager,\n      Collection<String> supervisorIds\n  )", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> filterAuthorizedSupervisorIds(\n      final HttpServletRequest req,\n      SupervisorManager manager,\n      Collection<String> supervisorIds\n  )", "full_signature": "private Set<String> filterAuthorizedSupervisorIds(\n      final HttpServletRequest req,\n      SupervisorManager manager,\n      Collection<String> supervisorIds\n  )", "class_method_signature": "SupervisorResource.filterAuthorizedSupervisorIds(\n      final HttpServletRequest req,\n      SupervisorManager manager,\n      Collection<String> supervisorIds\n  )", "testcase": false, "constructor": false}, {"identifier": "specSuspendOrResume", "parameters": "(final String id, boolean suspend)", "modifiers": "private", "return": "Response", "signature": "Response specSuspendOrResume(final String id, boolean suspend)", "full_signature": "private Response specSuspendOrResume(final String id, boolean suspend)", "class_method_signature": "SupervisorResource.specSuspendOrResume(final String id, boolean suspend)", "testcase": false, "constructor": false}, {"identifier": "suspendOrResumeAll", "parameters": "(final HttpServletRequest req, final boolean suspend)", "modifiers": "private", "return": "Response", "signature": "Response suspendOrResumeAll(final HttpServletRequest req, final boolean suspend)", "full_signature": "private Response suspendOrResumeAll(final HttpServletRequest req, final boolean suspend)", "class_method_signature": "SupervisorResource.suspendOrResumeAll(final HttpServletRequest req, final boolean suspend)", "testcase": false, "constructor": false}], "file": "indexing-service/src/main/java/org/apache/druid/indexing/overlord/supervisor/SupervisorResource.java"}, "focal_method": {"identifier": "specGetHealth", "parameters": "(@PathParam(\"id\") final String id)", "modifiers": "@GET @Path(\"/{id}/health\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public", "return": "Response", "body": "@GET\n  @Path(\"/{id}/health\")\n  @Produces(MediaType.APPLICATION_JSON)\n  @ResourceFilters(SupervisorResourceFilter.class)\n  public Response specGetHealth(@PathParam(\"id\") final String id)\n  {\n    return asLeaderWithSupervisorManager(\n        manager -> {\n          Optional<Boolean> healthy = manager.isSupervisorHealthy(id);\n          if (!healthy.isPresent()) {\n            return Response.status(Response.Status.NOT_FOUND)\n                           .entity(ImmutableMap.of(\n                               \"error\",\n                               StringUtils.format(\"[%s] does not exist or health check not implemented\", id)\n                           ))\n                           .build();\n          }\n\n          return Response.status(healthy.get() ? Response.Status.OK : Response.Status.SERVICE_UNAVAILABLE)\n                         .entity(ImmutableMap.of(\"healthy\", healthy.get()))\n                         .build();\n        }\n    );\n  }", "signature": "Response specGetHealth(@PathParam(\"id\") final String id)", "full_signature": "@GET @Path(\"/{id}/health\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(SupervisorResourceFilter.class) public Response specGetHealth(@PathParam(\"id\") final String id)", "class_method_signature": "SupervisorResource.specGetHealth(@PathParam(\"id\") final String id)", "testcase": false, "constructor": false, "invocations": ["asLeaderWithSupervisorManager", "isSupervisorHealthy", "isPresent", "build", "entity", "status", "of", "format", "build", "entity", "status", "get", "of", "get"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}