{"test_class": {"identifier": "SerializerUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SerializerUtils serializerUtils;", "modifier": "private", "type": "SerializerUtils", "declarator": "serializerUtils", "var_name": "serializerUtils"}, {"original_string": "private final float delta = 0;", "modifier": "private final", "type": "float", "declarator": "delta = 0", "var_name": "delta"}, {"original_string": "private final String[] strings = {\"1#\", \"2\", \"3\"};", "modifier": "private final", "type": "String[]", "declarator": "strings = {\"1#\", \"2\", \"3\"}", "var_name": "strings"}, {"original_string": "private final int[] ints = {1, 2, 3};", "modifier": "private final", "type": "int[]", "declarator": "ints = {1, 2, 3}", "var_name": "ints"}, {"original_string": "private final float[] floats = {1.1f, 2, 3};", "modifier": "private final", "type": "float[]", "declarator": "floats = {1.1f, 2, 3}", "var_name": "floats"}, {"original_string": "private final long[] longs = {3, 2, 1};", "modifier": "private final", "type": "long[]", "declarator": "longs = {3, 2, 1}", "var_name": "longs"}, {"original_string": "private byte[] stringsByte;", "modifier": "private", "type": "byte[]", "declarator": "stringsByte", "var_name": "stringsByte"}, {"original_string": "private byte[] intsByte;", "modifier": "private", "type": "byte[]", "declarator": "intsByte", "var_name": "intsByte"}, {"original_string": "private byte[] floatsByte;", "modifier": "private", "type": "byte[]", "declarator": "floatsByte", "var_name": "floatsByte"}, {"original_string": "private byte[] longsByte;", "modifier": "private", "type": "byte[]", "declarator": "longsByte", "var_name": "longsByte"}, {"original_string": "private ByteArrayOutputStream outStream;", "modifier": "private", "type": "ByteArrayOutputStream", "declarator": "outStream", "var_name": "outStream"}], "file": "core/src/test/java/org/apache/druid/common/utils/SerializerUtilsTest.java"}, "test_case": {"identifier": "testWriteFloats", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testWriteFloats() throws IOException\n  {\n    serializerUtils.writeFloats(outStream, floats);\n    byte[] actuals = outStream.toByteArray();\n    Assert.assertArrayEquals(floatsByte, actuals);\n  }", "signature": "void testWriteFloats()", "full_signature": "@Test public void testWriteFloats()", "class_method_signature": "SerializerUtilsTest.testWriteFloats()", "testcase": true, "constructor": false, "invocations": ["writeFloats", "toByteArray", "assertArrayEquals"]}, "focal_class": {"identifier": "SerializerUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "writeString", "parameters": "(T out, String name)", "modifiers": "public", "return": "void", "signature": "void writeString(T out, String name)", "full_signature": "public void writeString(T out, String name)", "class_method_signature": "SerializerUtils.writeString(T out, String name)", "testcase": false, "constructor": false}, {"identifier": "writeString", "parameters": "(WritableByteChannel out, String name)", "modifiers": "public", "return": "void", "signature": "void writeString(WritableByteChannel out, String name)", "full_signature": "public void writeString(WritableByteChannel out, String name)", "class_method_signature": "SerializerUtils.writeString(WritableByteChannel out, String name)", "testcase": false, "constructor": false}, {"identifier": "readString", "parameters": "(InputStream in)", "modifiers": "", "return": "String", "signature": "String readString(InputStream in)", "full_signature": " String readString(InputStream in)", "class_method_signature": "SerializerUtils.readString(InputStream in)", "testcase": false, "constructor": false}, {"identifier": "readString", "parameters": "(ByteBuffer in)", "modifiers": "public", "return": "String", "signature": "String readString(ByteBuffer in)", "full_signature": "public String readString(ByteBuffer in)", "class_method_signature": "SerializerUtils.readString(ByteBuffer in)", "testcase": false, "constructor": false}, {"identifier": "readBytes", "parameters": "(ByteBuffer in, int length)", "modifiers": "public", "return": "byte[]", "signature": "byte[] readBytes(ByteBuffer in, int length)", "full_signature": "public byte[] readBytes(ByteBuffer in, int length)", "class_method_signature": "SerializerUtils.readBytes(ByteBuffer in, int length)", "testcase": false, "constructor": false}, {"identifier": "readStrings", "parameters": "(InputStream in)", "modifiers": "", "return": "String[]", "signature": "String[] readStrings(InputStream in)", "full_signature": " String[] readStrings(InputStream in)", "class_method_signature": "SerializerUtils.readStrings(InputStream in)", "testcase": false, "constructor": false}, {"identifier": "readStrings", "parameters": "(ByteBuffer in)", "modifiers": "", "return": "String[]", "signature": "String[] readStrings(ByteBuffer in)", "full_signature": " String[] readStrings(ByteBuffer in)", "class_method_signature": "SerializerUtils.readStrings(ByteBuffer in)", "testcase": false, "constructor": false}, {"identifier": "writeInt", "parameters": "(OutputStream out, int intValue)", "modifiers": "private", "return": "void", "signature": "void writeInt(OutputStream out, int intValue)", "full_signature": "private void writeInt(OutputStream out, int intValue)", "class_method_signature": "SerializerUtils.writeInt(OutputStream out, int intValue)", "testcase": false, "constructor": false}, {"identifier": "writeInt", "parameters": "(WritableByteChannel out, int intValue)", "modifiers": "public static", "return": "void", "signature": "void writeInt(WritableByteChannel out, int intValue)", "full_signature": "public static void writeInt(WritableByteChannel out, int intValue)", "class_method_signature": "SerializerUtils.writeInt(WritableByteChannel out, int intValue)", "testcase": false, "constructor": false}, {"identifier": "readInt", "parameters": "(InputStream in)", "modifiers": "private", "return": "int", "signature": "int readInt(InputStream in)", "full_signature": "private int readInt(InputStream in)", "class_method_signature": "SerializerUtils.readInt(InputStream in)", "testcase": false, "constructor": false}, {"identifier": "writeInts", "parameters": "(OutputStream out, int[] ints)", "modifiers": "", "return": "void", "signature": "void writeInts(OutputStream out, int[] ints)", "full_signature": " void writeInts(OutputStream out, int[] ints)", "class_method_signature": "SerializerUtils.writeInts(OutputStream out, int[] ints)", "testcase": false, "constructor": false}, {"identifier": "readInts", "parameters": "(InputStream in)", "modifiers": "", "return": "int[]", "signature": "int[] readInts(InputStream in)", "full_signature": " int[] readInts(InputStream in)", "class_method_signature": "SerializerUtils.readInts(InputStream in)", "testcase": false, "constructor": false}, {"identifier": "writeLong", "parameters": "(OutputStream out, long longValue)", "modifiers": "private", "return": "void", "signature": "void writeLong(OutputStream out, long longValue)", "full_signature": "private void writeLong(OutputStream out, long longValue)", "class_method_signature": "SerializerUtils.writeLong(OutputStream out, long longValue)", "testcase": false, "constructor": false}, {"identifier": "writeLong", "parameters": "(WritableByteChannel out, long longValue)", "modifiers": "public", "return": "void", "signature": "void writeLong(WritableByteChannel out, long longValue)", "full_signature": "public void writeLong(WritableByteChannel out, long longValue)", "class_method_signature": "SerializerUtils.writeLong(WritableByteChannel out, long longValue)", "testcase": false, "constructor": false}, {"identifier": "readLong", "parameters": "(InputStream in)", "modifiers": "", "return": "long", "signature": "long readLong(InputStream in)", "full_signature": " long readLong(InputStream in)", "class_method_signature": "SerializerUtils.readLong(InputStream in)", "testcase": false, "constructor": false}, {"identifier": "writeLongs", "parameters": "(OutputStream out, long[] longs)", "modifiers": "", "return": "void", "signature": "void writeLongs(OutputStream out, long[] longs)", "full_signature": " void writeLongs(OutputStream out, long[] longs)", "class_method_signature": "SerializerUtils.writeLongs(OutputStream out, long[] longs)", "testcase": false, "constructor": false}, {"identifier": "readLongs", "parameters": "(InputStream in)", "modifiers": "", "return": "long[]", "signature": "long[] readLongs(InputStream in)", "full_signature": " long[] readLongs(InputStream in)", "class_method_signature": "SerializerUtils.readLongs(InputStream in)", "testcase": false, "constructor": false}, {"identifier": "writeFloat", "parameters": "(OutputStream out, float floatValue)", "modifiers": "public", "return": "void", "signature": "void writeFloat(OutputStream out, float floatValue)", "full_signature": "public void writeFloat(OutputStream out, float floatValue)", "class_method_signature": "SerializerUtils.writeFloat(OutputStream out, float floatValue)", "testcase": false, "constructor": false}, {"identifier": "writeFloat", "parameters": "(WritableByteChannel out, float floatValue)", "modifiers": "", "return": "void", "signature": "void writeFloat(WritableByteChannel out, float floatValue)", "full_signature": " void writeFloat(WritableByteChannel out, float floatValue)", "class_method_signature": "SerializerUtils.writeFloat(WritableByteChannel out, float floatValue)", "testcase": false, "constructor": false}, {"identifier": "readFloat", "parameters": "(InputStream in)", "modifiers": "", "return": "float", "signature": "float readFloat(InputStream in)", "full_signature": " float readFloat(InputStream in)", "class_method_signature": "SerializerUtils.readFloat(InputStream in)", "testcase": false, "constructor": false}, {"identifier": "writeFloats", "parameters": "(OutputStream out, float[] floats)", "modifiers": "", "return": "void", "signature": "void writeFloats(OutputStream out, float[] floats)", "full_signature": " void writeFloats(OutputStream out, float[] floats)", "class_method_signature": "SerializerUtils.writeFloats(OutputStream out, float[] floats)", "testcase": false, "constructor": false}, {"identifier": "readFloats", "parameters": "(InputStream in)", "modifiers": "", "return": "float[]", "signature": "float[] readFloats(InputStream in)", "full_signature": " float[] readFloats(InputStream in)", "class_method_signature": "SerializerUtils.readFloats(InputStream in)", "testcase": false, "constructor": false}, {"identifier": "getSerializedStringByteSize", "parameters": "(String str)", "modifiers": "public", "return": "int", "signature": "int getSerializedStringByteSize(String str)", "full_signature": "public int getSerializedStringByteSize(String str)", "class_method_signature": "SerializerUtils.getSerializedStringByteSize(String str)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/apache/druid/common/utils/SerializerUtils.java"}, "focal_method": {"identifier": "writeFloats", "parameters": "(OutputStream out, float[] floats)", "modifiers": "", "return": "void", "body": "void writeFloats(OutputStream out, float[] floats) throws IOException\n  {\n    writeInt(out, floats.length);\n\n    for (float value : floats) {\n      writeFloat(out, value);\n    }\n  }", "signature": "void writeFloats(OutputStream out, float[] floats)", "full_signature": " void writeFloats(OutputStream out, float[] floats)", "class_method_signature": "SerializerUtils.writeFloats(OutputStream out, float[] floats)", "testcase": false, "constructor": false, "invocations": ["writeInt", "writeFloat"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}