{"test_class": {"identifier": "CompressedVSizeColumnarMultiIntsSupplierTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Closer closer;", "modifier": "private", "type": "Closer", "declarator": "closer", "var_name": "closer"}, {"original_string": "protected List<int[]> vals;", "modifier": "protected", "type": "List<int[]>", "declarator": "vals", "var_name": "vals"}, {"original_string": "protected WritableSupplier<ColumnarMultiInts> columnarMultiIntsSupplier;", "modifier": "protected", "type": "WritableSupplier<ColumnarMultiInts>", "declarator": "columnarMultiIntsSupplier", "var_name": "columnarMultiIntsSupplier"}], "file": "processing/src/test/java/org/apache/druid/segment/data/CompressedVSizeColumnarMultiIntsSupplierTest.java"}, "test_case": {"identifier": "testSanity", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSanity()\n  {\n    assertSame(vals, columnarMultiIntsSupplier.get());\n  }", "signature": "void testSanity()", "full_signature": "@Test public void testSanity()", "class_method_signature": "CompressedVSizeColumnarMultiIntsSupplierTest.testSanity()", "testcase": true, "constructor": false, "invocations": ["assertSame", "get"]}, "focal_class": {"identifier": "CompressedVSizeColumnarMultiIntsSupplier", "superclass": "", "interfaces": "implements WritableSupplier<ColumnarMultiInts>", "fields": [{"original_string": "private static final byte VERSION = 0x2;", "modifier": "private static final", "type": "byte", "declarator": "VERSION = 0x2", "var_name": "VERSION"}, {"original_string": "private final CompressedVSizeColumnarIntsSupplier offsetSupplier;", "modifier": "private final", "type": "CompressedVSizeColumnarIntsSupplier", "declarator": "offsetSupplier", "var_name": "offsetSupplier"}, {"original_string": "private final CompressedVSizeColumnarIntsSupplier valueSupplier;", "modifier": "private final", "type": "CompressedVSizeColumnarIntsSupplier", "declarator": "valueSupplier", "var_name": "valueSupplier"}], "methods": [{"identifier": "CompressedVSizeColumnarMultiIntsSupplier", "parameters": "(\n      CompressedVSizeColumnarIntsSupplier offsetSupplier,\n      CompressedVSizeColumnarIntsSupplier valueSupplier\n  )", "modifiers": "private", "return": "", "signature": " CompressedVSizeColumnarMultiIntsSupplier(\n      CompressedVSizeColumnarIntsSupplier offsetSupplier,\n      CompressedVSizeColumnarIntsSupplier valueSupplier\n  )", "full_signature": "private  CompressedVSizeColumnarMultiIntsSupplier(\n      CompressedVSizeColumnarIntsSupplier offsetSupplier,\n      CompressedVSizeColumnarIntsSupplier valueSupplier\n  )", "class_method_signature": "CompressedVSizeColumnarMultiIntsSupplier.CompressedVSizeColumnarMultiIntsSupplier(\n      CompressedVSizeColumnarIntsSupplier offsetSupplier,\n      CompressedVSizeColumnarIntsSupplier valueSupplier\n  )", "testcase": false, "constructor": true}, {"identifier": "getSerializedSize", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getSerializedSize()", "full_signature": "@Override public long getSerializedSize()", "class_method_signature": "CompressedVSizeColumnarMultiIntsSupplier.getSerializedSize()", "testcase": false, "constructor": false}, {"identifier": "writeTo", "parameters": "(WritableByteChannel channel, FileSmoosher smoosher)", "modifiers": "@Override public", "return": "void", "signature": "void writeTo(WritableByteChannel channel, FileSmoosher smoosher)", "full_signature": "@Override public void writeTo(WritableByteChannel channel, FileSmoosher smoosher)", "class_method_signature": "CompressedVSizeColumnarMultiIntsSupplier.writeTo(WritableByteChannel channel, FileSmoosher smoosher)", "testcase": false, "constructor": false}, {"identifier": "fromByteBuffer", "parameters": "(ByteBuffer buffer, ByteOrder order)", "modifiers": "public static", "return": "CompressedVSizeColumnarMultiIntsSupplier", "signature": "CompressedVSizeColumnarMultiIntsSupplier fromByteBuffer(ByteBuffer buffer, ByteOrder order)", "full_signature": "public static CompressedVSizeColumnarMultiIntsSupplier fromByteBuffer(ByteBuffer buffer, ByteOrder order)", "class_method_signature": "CompressedVSizeColumnarMultiIntsSupplier.fromByteBuffer(ByteBuffer buffer, ByteOrder order)", "testcase": false, "constructor": false}, {"identifier": "fromIterable", "parameters": "(\n      final Iterable<IndexedInts> objectsIterable,\n      final int maxValue,\n      final ByteOrder byteOrder,\n      final CompressionStrategy compression,\n      final Closer closer\n  )", "modifiers": "@VisibleForTesting public static", "return": "CompressedVSizeColumnarMultiIntsSupplier", "signature": "CompressedVSizeColumnarMultiIntsSupplier fromIterable(\n      final Iterable<IndexedInts> objectsIterable,\n      final int maxValue,\n      final ByteOrder byteOrder,\n      final CompressionStrategy compression,\n      final Closer closer\n  )", "full_signature": "@VisibleForTesting public static CompressedVSizeColumnarMultiIntsSupplier fromIterable(\n      final Iterable<IndexedInts> objectsIterable,\n      final int maxValue,\n      final ByteOrder byteOrder,\n      final CompressionStrategy compression,\n      final Closer closer\n  )", "class_method_signature": "CompressedVSizeColumnarMultiIntsSupplier.fromIterable(\n      final Iterable<IndexedInts> objectsIterable,\n      final int maxValue,\n      final ByteOrder byteOrder,\n      final CompressionStrategy compression,\n      final Closer closer\n  )", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "@Override public", "return": "ColumnarMultiInts", "signature": "ColumnarMultiInts get()", "full_signature": "@Override public ColumnarMultiInts get()", "class_method_signature": "CompressedVSizeColumnarMultiIntsSupplier.get()", "testcase": false, "constructor": false}], "file": "processing/src/main/java/org/apache/druid/segment/data/CompressedVSizeColumnarMultiIntsSupplier.java"}, "focal_method": {"identifier": "get", "parameters": "()", "modifiers": "@Override public", "return": "ColumnarMultiInts", "body": "@Override\n  public ColumnarMultiInts get()\n  {\n    return new CompressedVSizeColumnarMultiInts(offsetSupplier.get(), valueSupplier.get());\n  }", "signature": "ColumnarMultiInts get()", "full_signature": "@Override public ColumnarMultiInts get()", "class_method_signature": "CompressedVSizeColumnarMultiIntsSupplier.get()", "testcase": false, "constructor": false, "invocations": ["get", "get"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}