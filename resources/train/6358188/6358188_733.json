{"test_class": {"identifier": "StringRuntimeShapeTest", "superclass": "", "interfaces": "", "fields": [], "file": "processing/src/test/java/org/apache/druid/query/monomorphicprocessing/StringRuntimeShapeTest.java"}, "test_case": {"identifier": "testStringRuntimeShape", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testStringRuntimeShape()\n  {\n    String barRuntimeShape = StringRuntimeShape.of(new Bar());\n    Assert.assertEquals(\n        \"org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Bar {\\n\"\n        + \"  foo: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"\n        + \"    flag1: true,\\n\"\n        + \"    flag2: false,\\n\"\n        + \"    key: value,\\n\"\n        + \"    empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"\n        + \"    object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"\n        + \"    array: [\\n\"\n        + \"      java.util.HashSet,\\n\"\n        + \"      java.util.TreeSet\\n\"\n        + \"    ],\\n\"\n        + \"    emptyArray: []\\n\"\n        + \"  },\\n\"\n        + \"  array: [\\n\"\n        + \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"\n        + \"      flag1: true,\\n\"\n        + \"      flag2: false,\\n\"\n        + \"      key: value,\\n\"\n        + \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"\n        + \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"\n        + \"      array: [\\n\"\n        + \"        java.util.HashSet,\\n\"\n        + \"        java.util.TreeSet\\n\"\n        + \"      ],\\n\"\n        + \"      emptyArray: []\\n\"\n        + \"    },\\n\"\n        + \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"\n        + \"      flag1: true,\\n\"\n        + \"      flag2: false,\\n\"\n        + \"      key: value,\\n\"\n        + \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"\n        + \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"\n        + \"      array: [\\n\"\n        + \"        java.util.HashSet,\\n\"\n        + \"        java.util.TreeSet\\n\"\n        + \"      ],\\n\"\n        + \"      emptyArray: []\\n\"\n        + \"    }\\n\"\n        + \"  ]\\n\"\n        + \"}\",\n        barRuntimeShape\n    );\n  }", "signature": "void testStringRuntimeShape()", "full_signature": "@Test public void testStringRuntimeShape()", "class_method_signature": "StringRuntimeShapeTest.testStringRuntimeShape()", "testcase": true, "constructor": false, "invocations": ["of", "assertEquals"]}, "focal_class": {"identifier": "StringRuntimeShape", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "of", "parameters": "(HotLoopCallee hotLoopCallee)", "modifiers": "public static", "return": "String", "signature": "String of(HotLoopCallee hotLoopCallee)", "full_signature": "public static String of(HotLoopCallee hotLoopCallee)", "class_method_signature": "StringRuntimeShape.of(HotLoopCallee hotLoopCallee)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(HotLoopCallee... hotLoopCallees)", "modifiers": "public static", "return": "String", "signature": "String of(HotLoopCallee... hotLoopCallees)", "full_signature": "public static String of(HotLoopCallee... hotLoopCallees)", "class_method_signature": "StringRuntimeShape.of(HotLoopCallee... hotLoopCallees)", "testcase": false, "constructor": false}, {"identifier": "StringRuntimeShape", "parameters": "()", "modifiers": "private", "return": "", "signature": " StringRuntimeShape()", "full_signature": "private  StringRuntimeShape()", "class_method_signature": "StringRuntimeShape.StringRuntimeShape()", "testcase": false, "constructor": true}], "file": "processing/src/main/java/org/apache/druid/query/monomorphicprocessing/StringRuntimeShape.java"}, "focal_method": {"identifier": "StringRuntimeShape", "parameters": "()", "modifiers": "private", "return": "", "body": "private StringRuntimeShape()\n  {\n  }", "signature": " StringRuntimeShape()", "full_signature": "private  StringRuntimeShape()", "class_method_signature": "StringRuntimeShape.StringRuntimeShape()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}