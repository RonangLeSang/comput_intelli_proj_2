{"test_class": {"identifier": "InfluxdbEmitterConfigTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ObjectMapper mapper = new DefaultObjectMapper();", "modifier": "private", "type": "ObjectMapper", "declarator": "mapper = new DefaultObjectMapper()", "var_name": "mapper"}, {"original_string": "private InfluxdbEmitterConfig influxdbEmitterConfig;", "modifier": "private", "type": "InfluxdbEmitterConfig", "declarator": "influxdbEmitterConfig", "var_name": "influxdbEmitterConfig"}], "file": "extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterConfigTest.java"}, "test_case": {"identifier": "testConfigWithNullDimensionWhitelist", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testConfigWithNullDimensionWhitelist()\n  {\n    InfluxdbEmitterConfig influxdbEmitterConfig = new InfluxdbEmitterConfig(\n        \"localhost\",\n        8086,\n        \"dbname\",\n        10000,\n        15000,\n        30000,\n        \"adam\",\n        \"password\",\n        null\n    );\n    ImmutableSet<String> expected = ImmutableSet.copyOf(Arrays.asList(\"dataSource\", \"type\", \"numMetrics\", \"numDimensions\", \"threshold\", \"dimension\", \"taskType\", \"taskStatus\", \"tier\"));\n    Assert.assertEquals(expected, influxdbEmitterConfig.getDimensionWhitelist());\n  }", "signature": "void testConfigWithNullDimensionWhitelist()", "full_signature": "@Test public void testConfigWithNullDimensionWhitelist()", "class_method_signature": "InfluxdbEmitterConfigTest.testConfigWithNullDimensionWhitelist()", "testcase": true, "constructor": false, "invocations": ["copyOf", "asList", "assertEquals", "getDimensionWhitelist"]}, "focal_class": {"identifier": "InfluxdbEmitterConfig", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int DEFAULT_PORT = 8086;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_PORT = 8086", "var_name": "DEFAULT_PORT"}, {"original_string": "private static final int DEFAULT_QUEUE_SIZE = Integer.MAX_VALUE;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_QUEUE_SIZE = Integer.MAX_VALUE", "var_name": "DEFAULT_QUEUE_SIZE"}, {"original_string": "private static final int DEFAULT_FLUSH_PERIOD = 60000;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_FLUSH_PERIOD = 60000", "var_name": "DEFAULT_FLUSH_PERIOD"}, {"original_string": "private static final List<String> DEFAULT_DIMENSION_WHITELIST = Arrays.asList(\"dataSource\", \"type\", \"numMetrics\", \"numDimensions\", \"threshold\", \"dimension\", \"taskType\", \"taskStatus\", \"tier\");", "modifier": "private static final", "type": "List<String>", "declarator": "DEFAULT_DIMENSION_WHITELIST = Arrays.asList(\"dataSource\", \"type\", \"numMetrics\", \"numDimensions\", \"threshold\", \"dimension\", \"taskType\", \"taskStatus\", \"tier\")", "var_name": "DEFAULT_DIMENSION_WHITELIST"}, {"original_string": "@JsonProperty\n  private final String hostname;", "modifier": "@JsonProperty\n  private final", "type": "String", "declarator": "hostname", "var_name": "hostname"}, {"original_string": "@JsonProperty\n  private final Integer port;", "modifier": "@JsonProperty\n  private final", "type": "Integer", "declarator": "port", "var_name": "port"}, {"original_string": "@JsonProperty\n  private final String databaseName;", "modifier": "@JsonProperty\n  private final", "type": "String", "declarator": "databaseName", "var_name": "databaseName"}, {"original_string": "@JsonProperty\n  private final Integer maxQueueSize;", "modifier": "@JsonProperty\n  private final", "type": "Integer", "declarator": "maxQueueSize", "var_name": "maxQueueSize"}, {"original_string": "@JsonProperty\n  private final Integer flushPeriod;", "modifier": "@JsonProperty\n  private final", "type": "Integer", "declarator": "flushPeriod", "var_name": "flushPeriod"}, {"original_string": "@JsonProperty\n  private final Integer flushDelay;", "modifier": "@JsonProperty\n  private final", "type": "Integer", "declarator": "flushDelay", "var_name": "flushDelay"}, {"original_string": "@JsonProperty\n  private final String influxdbUserName;", "modifier": "@JsonProperty\n  private final", "type": "String", "declarator": "influxdbUserName", "var_name": "influxdbUserName"}, {"original_string": "@JsonProperty\n  private final String influxdbPassword;", "modifier": "@JsonProperty\n  private final", "type": "String", "declarator": "influxdbPassword", "var_name": "influxdbPassword"}, {"original_string": "@JsonProperty\n  private final ImmutableSet<String> dimensionWhitelist;", "modifier": "@JsonProperty\n  private final", "type": "ImmutableSet<String>", "declarator": "dimensionWhitelist", "var_name": "dimensionWhitelist"}, {"original_string": "private static Logger log = new Logger(InfluxdbEmitterConfig.class);", "modifier": "private static", "type": "Logger", "declarator": "log = new Logger(InfluxdbEmitterConfig.class)", "var_name": "log"}], "methods": [{"identifier": "InfluxdbEmitterConfig", "parameters": "(\n      @JsonProperty(\"hostname\") String hostname,\n      @JsonProperty(\"port\") Integer port,\n      @JsonProperty(\"databaseName\") String databaseName,\n      @JsonProperty(\"maxQueueSize\") Integer maxQueueSize,\n      @JsonProperty(\"flushPeriod\") Integer flushPeriod,\n      @JsonProperty(\"flushDelay\") Integer flushDelay,\n      @JsonProperty(\"influxdbUserName\") String influxdbUserName,\n      @JsonProperty(\"influxdbPassword\") String influxdbPassword,\n      @JsonProperty(\"dimensionWhitelist\") Set<String> dimensionWhitelist\n  )", "modifiers": "@JsonCreator public", "return": "", "signature": " InfluxdbEmitterConfig(\n      @JsonProperty(\"hostname\") String hostname,\n      @JsonProperty(\"port\") Integer port,\n      @JsonProperty(\"databaseName\") String databaseName,\n      @JsonProperty(\"maxQueueSize\") Integer maxQueueSize,\n      @JsonProperty(\"flushPeriod\") Integer flushPeriod,\n      @JsonProperty(\"flushDelay\") Integer flushDelay,\n      @JsonProperty(\"influxdbUserName\") String influxdbUserName,\n      @JsonProperty(\"influxdbPassword\") String influxdbPassword,\n      @JsonProperty(\"dimensionWhitelist\") Set<String> dimensionWhitelist\n  )", "full_signature": "@JsonCreator public  InfluxdbEmitterConfig(\n      @JsonProperty(\"hostname\") String hostname,\n      @JsonProperty(\"port\") Integer port,\n      @JsonProperty(\"databaseName\") String databaseName,\n      @JsonProperty(\"maxQueueSize\") Integer maxQueueSize,\n      @JsonProperty(\"flushPeriod\") Integer flushPeriod,\n      @JsonProperty(\"flushDelay\") Integer flushDelay,\n      @JsonProperty(\"influxdbUserName\") String influxdbUserName,\n      @JsonProperty(\"influxdbPassword\") String influxdbPassword,\n      @JsonProperty(\"dimensionWhitelist\") Set<String> dimensionWhitelist\n  )", "class_method_signature": "InfluxdbEmitterConfig.InfluxdbEmitterConfig(\n      @JsonProperty(\"hostname\") String hostname,\n      @JsonProperty(\"port\") Integer port,\n      @JsonProperty(\"databaseName\") String databaseName,\n      @JsonProperty(\"maxQueueSize\") Integer maxQueueSize,\n      @JsonProperty(\"flushPeriod\") Integer flushPeriod,\n      @JsonProperty(\"flushDelay\") Integer flushDelay,\n      @JsonProperty(\"influxdbUserName\") String influxdbUserName,\n      @JsonProperty(\"influxdbPassword\") String influxdbPassword,\n      @JsonProperty(\"dimensionWhitelist\") Set<String> dimensionWhitelist\n  )", "testcase": false, "constructor": true}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "InfluxdbEmitterConfig.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "InfluxdbEmitterConfig.hashCode()", "testcase": false, "constructor": false}, {"identifier": "getHostname", "parameters": "()", "modifiers": "@JsonProperty public", "return": "String", "signature": "String getHostname()", "full_signature": "@JsonProperty public String getHostname()", "class_method_signature": "InfluxdbEmitterConfig.getHostname()", "testcase": false, "constructor": false}, {"identifier": "getPort", "parameters": "()", "modifiers": "@JsonProperty public", "return": "int", "signature": "int getPort()", "full_signature": "@JsonProperty public int getPort()", "class_method_signature": "InfluxdbEmitterConfig.getPort()", "testcase": false, "constructor": false}, {"identifier": "getDatabaseName", "parameters": "()", "modifiers": "@JsonProperty public", "return": "String", "signature": "String getDatabaseName()", "full_signature": "@JsonProperty public String getDatabaseName()", "class_method_signature": "InfluxdbEmitterConfig.getDatabaseName()", "testcase": false, "constructor": false}, {"identifier": "getFlushPeriod", "parameters": "()", "modifiers": "@JsonProperty public", "return": "int", "signature": "int getFlushPeriod()", "full_signature": "@JsonProperty public int getFlushPeriod()", "class_method_signature": "InfluxdbEmitterConfig.getFlushPeriod()", "testcase": false, "constructor": false}, {"identifier": "getMaxQueueSize", "parameters": "()", "modifiers": "@JsonProperty public", "return": "int", "signature": "int getMaxQueueSize()", "full_signature": "@JsonProperty public int getMaxQueueSize()", "class_method_signature": "InfluxdbEmitterConfig.getMaxQueueSize()", "testcase": false, "constructor": false}, {"identifier": "getFlushDelay", "parameters": "()", "modifiers": "@JsonProperty public", "return": "int", "signature": "int getFlushDelay()", "full_signature": "@JsonProperty public int getFlushDelay()", "class_method_signature": "InfluxdbEmitterConfig.getFlushDelay()", "testcase": false, "constructor": false}, {"identifier": "getInfluxdbUserName", "parameters": "()", "modifiers": "@JsonProperty public", "return": "String", "signature": "String getInfluxdbUserName()", "full_signature": "@JsonProperty public String getInfluxdbUserName()", "class_method_signature": "InfluxdbEmitterConfig.getInfluxdbUserName()", "testcase": false, "constructor": false}, {"identifier": "getInfluxdbPassword", "parameters": "()", "modifiers": "@JsonProperty public", "return": "String", "signature": "String getInfluxdbPassword()", "full_signature": "@JsonProperty public String getInfluxdbPassword()", "class_method_signature": "InfluxdbEmitterConfig.getInfluxdbPassword()", "testcase": false, "constructor": false}, {"identifier": "getDimensionWhitelist", "parameters": "()", "modifiers": "@JsonProperty public", "return": "ImmutableSet<String>", "signature": "ImmutableSet<String> getDimensionWhitelist()", "full_signature": "@JsonProperty public ImmutableSet<String> getDimensionWhitelist()", "class_method_signature": "InfluxdbEmitterConfig.getDimensionWhitelist()", "testcase": false, "constructor": false}], "file": "extensions-contrib/influxdb-emitter/src/main/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterConfig.java"}, "focal_method": {"identifier": "getDimensionWhitelist", "parameters": "()", "modifiers": "@JsonProperty public", "return": "ImmutableSet<String>", "body": "@JsonProperty\n  public ImmutableSet<String> getDimensionWhitelist()\n  {\n    return dimensionWhitelist;\n  }", "signature": "ImmutableSet<String> getDimensionWhitelist()", "full_signature": "@JsonProperty public ImmutableSet<String> getDimensionWhitelist()", "class_method_signature": "InfluxdbEmitterConfig.getDimensionWhitelist()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}