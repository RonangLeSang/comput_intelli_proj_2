{"test_class": {"identifier": "LoggerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Logger log = new Logger(LoggerTest.class);", "modifier": "private final", "type": "Logger", "declarator": "log = new Logger(LoggerTest.class)", "var_name": "log"}], "file": "core/src/test/java/org/apache/druid/java/util/common/logger/LoggerTest.java"}, "test_case": {"identifier": "testLogWithCrazyMessages", "parameters": "()", "modifiers": "@SuppressWarnings(\"MalformedFormatString\") @Test public", "return": "void", "body": "@SuppressWarnings(\"MalformedFormatString\")\n  @Test\n  public void testLogWithCrazyMessages()\n  {\n    final String message = \"this % might %d kill %*.s the %s parser\";\n    log.warn(message);\n  }", "signature": "void testLogWithCrazyMessages()", "full_signature": "@SuppressWarnings(\"MalformedFormatString\") @Test public void testLogWithCrazyMessages()", "class_method_signature": "LoggerTest.testLogWithCrazyMessages()", "testcase": true, "constructor": false, "invocations": ["warn"]}, "focal_class": {"identifier": "Logger", "superclass": "", "interfaces": "", "fields": [{"original_string": "@VisibleForTesting\n  static final int SEGMENTS_PER_LOG_MESSAGE = 64;", "modifier": "@VisibleForTesting\n  static final", "type": "int", "declarator": "SEGMENTS_PER_LOG_MESSAGE = 64", "var_name": "SEGMENTS_PER_LOG_MESSAGE"}, {"original_string": "private final org.slf4j.Logger log;", "modifier": "private final", "type": "org.slf4j.Logger", "declarator": "log", "var_name": "log"}, {"original_string": "private final boolean stackTraces;", "modifier": "private final", "type": "boolean", "declarator": "stackTraces", "var_name": "stackTraces"}, {"original_string": "private final Logger noStackTraceLogger;", "modifier": "private final", "type": "Logger", "declarator": "noStackTraceLogger", "var_name": "noStackTraceLogger"}], "methods": [{"identifier": "Logger", "parameters": "(String name)", "modifiers": "public", "return": "", "signature": " Logger(String name)", "full_signature": "public  Logger(String name)", "class_method_signature": "Logger.Logger(String name)", "testcase": false, "constructor": true}, {"identifier": "Logger", "parameters": "(Class clazz)", "modifiers": "public", "return": "", "signature": " Logger(Class clazz)", "full_signature": "public  Logger(Class clazz)", "class_method_signature": "Logger.Logger(Class clazz)", "testcase": false, "constructor": true}, {"identifier": "Logger", "parameters": "(org.slf4j.Logger log, boolean stackTraces)", "modifiers": "protected", "return": "", "signature": " Logger(org.slf4j.Logger log, boolean stackTraces)", "full_signature": "protected  Logger(org.slf4j.Logger log, boolean stackTraces)", "class_method_signature": "Logger.Logger(org.slf4j.Logger log, boolean stackTraces)", "testcase": false, "constructor": true}, {"identifier": "getSlf4jLogger", "parameters": "()", "modifiers": "protected", "return": "org.slf4j.Logger", "signature": "org.slf4j.Logger getSlf4jLogger()", "full_signature": "protected org.slf4j.Logger getSlf4jLogger()", "class_method_signature": "Logger.getSlf4jLogger()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Logger.toString()", "testcase": false, "constructor": false}, {"identifier": "noStackTrace", "parameters": "()", "modifiers": "public", "return": "Logger", "signature": "Logger noStackTrace()", "full_signature": "public Logger noStackTrace()", "class_method_signature": "Logger.noStackTrace()", "testcase": false, "constructor": false}, {"identifier": "trace", "parameters": "(String message, Object... formatArgs)", "modifiers": "public", "return": "void", "signature": "void trace(String message, Object... formatArgs)", "full_signature": "public void trace(String message, Object... formatArgs)", "class_method_signature": "Logger.trace(String message, Object... formatArgs)", "testcase": false, "constructor": false}, {"identifier": "debug", "parameters": "(String message, Object... formatArgs)", "modifiers": "public", "return": "void", "signature": "void debug(String message, Object... formatArgs)", "full_signature": "public void debug(String message, Object... formatArgs)", "class_method_signature": "Logger.debug(String message, Object... formatArgs)", "testcase": false, "constructor": false}, {"identifier": "debug", "parameters": "(Throwable t, String message, Object... formatArgs)", "modifiers": "public", "return": "void", "signature": "void debug(Throwable t, String message, Object... formatArgs)", "full_signature": "public void debug(Throwable t, String message, Object... formatArgs)", "class_method_signature": "Logger.debug(Throwable t, String message, Object... formatArgs)", "testcase": false, "constructor": false}, {"identifier": "info", "parameters": "(String message, Object... formatArgs)", "modifiers": "public", "return": "void", "signature": "void info(String message, Object... formatArgs)", "full_signature": "public void info(String message, Object... formatArgs)", "class_method_signature": "Logger.info(String message, Object... formatArgs)", "testcase": false, "constructor": false}, {"identifier": "info", "parameters": "(Throwable t, String message, Object... formatArgs)", "modifiers": "public", "return": "void", "signature": "void info(Throwable t, String message, Object... formatArgs)", "full_signature": "public void info(Throwable t, String message, Object... formatArgs)", "class_method_signature": "Logger.info(Throwable t, String message, Object... formatArgs)", "testcase": false, "constructor": false}, {"identifier": "warn", "parameters": "(String message, Throwable t)", "modifiers": "@Deprecated public", "return": "void", "signature": "void warn(String message, Throwable t)", "full_signature": "@Deprecated public void warn(String message, Throwable t)", "class_method_signature": "Logger.warn(String message, Throwable t)", "testcase": false, "constructor": false}, {"identifier": "warn", "parameters": "(String message, Object... formatArgs)", "modifiers": "public", "return": "void", "signature": "void warn(String message, Object... formatArgs)", "full_signature": "public void warn(String message, Object... formatArgs)", "class_method_signature": "Logger.warn(String message, Object... formatArgs)", "testcase": false, "constructor": false}, {"identifier": "warn", "parameters": "(Throwable t, String message, Object... formatArgs)", "modifiers": "public", "return": "void", "signature": "void warn(Throwable t, String message, Object... formatArgs)", "full_signature": "public void warn(Throwable t, String message, Object... formatArgs)", "class_method_signature": "Logger.warn(Throwable t, String message, Object... formatArgs)", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(String message, Object... formatArgs)", "modifiers": "public", "return": "void", "signature": "void error(String message, Object... formatArgs)", "full_signature": "public void error(String message, Object... formatArgs)", "class_method_signature": "Logger.error(String message, Object... formatArgs)", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(String message, Throwable t)", "modifiers": "@Deprecated public", "return": "void", "signature": "void error(String message, Throwable t)", "full_signature": "@Deprecated public void error(String message, Throwable t)", "class_method_signature": "Logger.error(String message, Throwable t)", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(Throwable t, String message, Object... formatArgs)", "modifiers": "public", "return": "void", "signature": "void error(Throwable t, String message, Object... formatArgs)", "full_signature": "public void error(Throwable t, String message, Object... formatArgs)", "class_method_signature": "Logger.error(Throwable t, String message, Object... formatArgs)", "testcase": false, "constructor": false}, {"identifier": "assertionError", "parameters": "(String message, Object... formatArgs)", "modifiers": "public", "return": "void", "signature": "void assertionError(String message, Object... formatArgs)", "full_signature": "public void assertionError(String message, Object... formatArgs)", "class_method_signature": "Logger.assertionError(String message, Object... formatArgs)", "testcase": false, "constructor": false}, {"identifier": "debugSegments", "parameters": "(@Nullable final Collection<DataSegment> segments, @Nullable String preamble)", "modifiers": "public", "return": "void", "signature": "void debugSegments(@Nullable final Collection<DataSegment> segments, @Nullable String preamble)", "full_signature": "public void debugSegments(@Nullable final Collection<DataSegment> segments, @Nullable String preamble)", "class_method_signature": "Logger.debugSegments(@Nullable final Collection<DataSegment> segments, @Nullable String preamble)", "testcase": false, "constructor": false}, {"identifier": "infoSegments", "parameters": "(@Nullable final Collection<DataSegment> segments, @Nullable String preamble)", "modifiers": "public", "return": "void", "signature": "void infoSegments(@Nullable final Collection<DataSegment> segments, @Nullable String preamble)", "full_signature": "public void infoSegments(@Nullable final Collection<DataSegment> segments, @Nullable String preamble)", "class_method_signature": "Logger.infoSegments(@Nullable final Collection<DataSegment> segments, @Nullable String preamble)", "testcase": false, "constructor": false}, {"identifier": "infoSegmentIds", "parameters": "(@Nullable final Stream<SegmentId> segments, @Nullable String preamble)", "modifiers": "public", "return": "void", "signature": "void infoSegmentIds(@Nullable final Stream<SegmentId> segments, @Nullable String preamble)", "full_signature": "public void infoSegmentIds(@Nullable final Stream<SegmentId> segments, @Nullable String preamble)", "class_method_signature": "Logger.infoSegmentIds(@Nullable final Stream<SegmentId> segments, @Nullable String preamble)", "testcase": false, "constructor": false}, {"identifier": "warnSegments", "parameters": "(@Nullable final Collection<DataSegment> segments, @Nullable String preamble)", "modifiers": "public", "return": "void", "signature": "void warnSegments(@Nullable final Collection<DataSegment> segments, @Nullable String preamble)", "full_signature": "public void warnSegments(@Nullable final Collection<DataSegment> segments, @Nullable String preamble)", "class_method_signature": "Logger.warnSegments(@Nullable final Collection<DataSegment> segments, @Nullable String preamble)", "testcase": false, "constructor": false}, {"identifier": "errorSegments", "parameters": "(@Nullable final Collection<DataSegment> segments, @Nullable String preamble)", "modifiers": "public", "return": "void", "signature": "void errorSegments(@Nullable final Collection<DataSegment> segments, @Nullable String preamble)", "full_signature": "public void errorSegments(@Nullable final Collection<DataSegment> segments, @Nullable String preamble)", "class_method_signature": "Logger.errorSegments(@Nullable final Collection<DataSegment> segments, @Nullable String preamble)", "testcase": false, "constructor": false}, {"identifier": "isTraceEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTraceEnabled()", "full_signature": "public boolean isTraceEnabled()", "class_method_signature": "Logger.isTraceEnabled()", "testcase": false, "constructor": false}, {"identifier": "isDebugEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDebugEnabled()", "full_signature": "public boolean isDebugEnabled()", "class_method_signature": "Logger.isDebugEnabled()", "testcase": false, "constructor": false}, {"identifier": "isInfoEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isInfoEnabled()", "full_signature": "public boolean isInfoEnabled()", "class_method_signature": "Logger.isInfoEnabled()", "testcase": false, "constructor": false}, {"identifier": "logException", "parameters": "(BiConsumer<String, Throwable> fn, Throwable t, String message)", "modifiers": "private", "return": "void", "signature": "void logException(BiConsumer<String, Throwable> fn, Throwable t, String message)", "full_signature": "private void logException(BiConsumer<String, Throwable> fn, Throwable t, String message)", "class_method_signature": "Logger.logException(BiConsumer<String, Throwable> fn, Throwable t, String message)", "testcase": false, "constructor": false}, {"identifier": "logSegments", "parameters": "(\n      Logger.LogFunction logger,\n      @Nullable final Collection<DataSegment> segments,\n      @Nullable String preamble\n  )", "modifiers": "@VisibleForTesting static", "return": "void", "signature": "void logSegments(\n      Logger.LogFunction logger,\n      @Nullable final Collection<DataSegment> segments,\n      @Nullable String preamble\n  )", "full_signature": "@VisibleForTesting static void logSegments(\n      Logger.LogFunction logger,\n      @Nullable final Collection<DataSegment> segments,\n      @Nullable String preamble\n  )", "class_method_signature": "Logger.logSegments(\n      Logger.LogFunction logger,\n      @Nullable final Collection<DataSegment> segments,\n      @Nullable String preamble\n  )", "testcase": false, "constructor": false}, {"identifier": "logSegmentIds", "parameters": "(\n      Logger.LogFunction logger,\n      @Nullable final Stream<SegmentId> stream,\n      @Nullable String preamble\n  )", "modifiers": "@VisibleForTesting static", "return": "void", "signature": "void logSegmentIds(\n      Logger.LogFunction logger,\n      @Nullable final Stream<SegmentId> stream,\n      @Nullable String preamble\n  )", "full_signature": "@VisibleForTesting static void logSegmentIds(\n      Logger.LogFunction logger,\n      @Nullable final Stream<SegmentId> stream,\n      @Nullable String preamble\n  )", "class_method_signature": "Logger.logSegmentIds(\n      Logger.LogFunction logger,\n      @Nullable final Stream<SegmentId> stream,\n      @Nullable String preamble\n  )", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/apache/druid/java/util/common/logger/Logger.java"}, "focal_method": {"identifier": "warn", "parameters": "(String message, Throwable t)", "modifiers": "@Deprecated public", "return": "void", "body": "@Deprecated\n  public void warn(String message, Throwable t)\n  {\n    warn(t, message);\n  }", "signature": "void warn(String message, Throwable t)", "full_signature": "@Deprecated public void warn(String message, Throwable t)", "class_method_signature": "Logger.warn(String message, Throwable t)", "testcase": false, "constructor": false, "invocations": ["warn"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}