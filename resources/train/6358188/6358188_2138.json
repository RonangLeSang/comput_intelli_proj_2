{"test_class": {"identifier": "HashBasedNumberedShardSpecTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ObjectMapper objectMapper = ShardSpecTestUtils.initObjectMapper();", "modifier": "private final", "type": "ObjectMapper", "declarator": "objectMapper = ShardSpecTestUtils.initObjectMapper()", "var_name": "objectMapper"}], "file": "core/src/test/java/org/apache/druid/timeline/partition/HashBasedNumberedShardSpecTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testEquals()\n  {\n    EqualsVerifier.forClass(HashBasedNumberedShardSpec.class)\n                  .withIgnoredFields(\"jsonMapper\")\n                  .withPrefabValues(ObjectMapper.class, new ObjectMapper(), new ObjectMapper())\n                  .usingGetClass()\n                  .verify();\n  }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "HashBasedNumberedShardSpecTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["verify", "usingGetClass", "withPrefabValues", "withIgnoredFields", "forClass"]}, "focal_class": {"identifier": "HashBasedNumberedShardSpec", "superclass": "extends NumberedShardSpec", "interfaces": "", "fields": [{"original_string": "public static final List<String> DEFAULT_PARTITION_DIMENSIONS = ImmutableList.of();", "modifier": "public static final", "type": "List<String>", "declarator": "DEFAULT_PARTITION_DIMENSIONS = ImmutableList.of()", "var_name": "DEFAULT_PARTITION_DIMENSIONS"}, {"original_string": "private final int bucketId;", "modifier": "private final", "type": "int", "declarator": "bucketId", "var_name": "bucketId"}, {"original_string": "private final int numBuckets;", "modifier": "private final", "type": "int", "declarator": "numBuckets", "var_name": "numBuckets"}, {"original_string": "private final ObjectMapper jsonMapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "jsonMapper", "var_name": "jsonMapper"}, {"original_string": "private final List<String> partitionDimensions;", "modifier": "private final", "type": "List<String>", "declarator": "partitionDimensions", "var_name": "partitionDimensions"}, {"original_string": "@Nullable\n  private final HashPartitionFunction partitionFunction;", "modifier": "@Nullable\n  private final", "type": "HashPartitionFunction", "declarator": "partitionFunction", "var_name": "partitionFunction"}], "methods": [{"identifier": "HashBasedNumberedShardSpec", "parameters": "(\n      @JsonProperty(\"partitionNum\") int partitionNum,    // partitionId\n      @JsonProperty(\"partitions\") int partitions,        // core partition set size\n      @JsonProperty(\"bucketId\") @Nullable Integer bucketId, // nullable for backward compatibility\n      @JsonProperty(\"numBuckets\") @Nullable Integer numBuckets, // nullable for backward compatibility\n      @JsonProperty(\"partitionDimensions\") @Nullable List<String> partitionDimensions,\n      @JsonProperty(\"partitionFunction\") @Nullable HashPartitionFunction partitionFunction, // nullable for backward compatibility\n      @JacksonInject ObjectMapper jsonMapper\n  )", "modifiers": "@JsonCreator public", "return": "", "signature": " HashBasedNumberedShardSpec(\n      @JsonProperty(\"partitionNum\") int partitionNum,    // partitionId\n      @JsonProperty(\"partitions\") int partitions,        // core partition set size\n      @JsonProperty(\"bucketId\") @Nullable Integer bucketId, // nullable for backward compatibility\n      @JsonProperty(\"numBuckets\") @Nullable Integer numBuckets, // nullable for backward compatibility\n      @JsonProperty(\"partitionDimensions\") @Nullable List<String> partitionDimensions,\n      @JsonProperty(\"partitionFunction\") @Nullable HashPartitionFunction partitionFunction, // nullable for backward compatibility\n      @JacksonInject ObjectMapper jsonMapper\n  )", "full_signature": "@JsonCreator public  HashBasedNumberedShardSpec(\n      @JsonProperty(\"partitionNum\") int partitionNum,    // partitionId\n      @JsonProperty(\"partitions\") int partitions,        // core partition set size\n      @JsonProperty(\"bucketId\") @Nullable Integer bucketId, // nullable for backward compatibility\n      @JsonProperty(\"numBuckets\") @Nullable Integer numBuckets, // nullable for backward compatibility\n      @JsonProperty(\"partitionDimensions\") @Nullable List<String> partitionDimensions,\n      @JsonProperty(\"partitionFunction\") @Nullable HashPartitionFunction partitionFunction, // nullable for backward compatibility\n      @JacksonInject ObjectMapper jsonMapper\n  )", "class_method_signature": "HashBasedNumberedShardSpec.HashBasedNumberedShardSpec(\n      @JsonProperty(\"partitionNum\") int partitionNum,    // partitionId\n      @JsonProperty(\"partitions\") int partitions,        // core partition set size\n      @JsonProperty(\"bucketId\") @Nullable Integer bucketId, // nullable for backward compatibility\n      @JsonProperty(\"numBuckets\") @Nullable Integer numBuckets, // nullable for backward compatibility\n      @JsonProperty(\"partitionDimensions\") @Nullable List<String> partitionDimensions,\n      @JsonProperty(\"partitionFunction\") @Nullable HashPartitionFunction partitionFunction, // nullable for backward compatibility\n      @JacksonInject ObjectMapper jsonMapper\n  )", "testcase": false, "constructor": true}, {"identifier": "getBucketId", "parameters": "()", "modifiers": "@JsonProperty public", "return": "int", "signature": "int getBucketId()", "full_signature": "@JsonProperty public int getBucketId()", "class_method_signature": "HashBasedNumberedShardSpec.getBucketId()", "testcase": false, "constructor": false}, {"identifier": "getNumBuckets", "parameters": "()", "modifiers": "@JsonProperty public", "return": "int", "signature": "int getNumBuckets()", "full_signature": "@JsonProperty public int getNumBuckets()", "class_method_signature": "HashBasedNumberedShardSpec.getNumBuckets()", "testcase": false, "constructor": false}, {"identifier": "getPartitionDimensions", "parameters": "()", "modifiers": "@JsonProperty(\"partitionDimensions\") public", "return": "List<String>", "signature": "List<String> getPartitionDimensions()", "full_signature": "@JsonProperty(\"partitionDimensions\") public List<String> getPartitionDimensions()", "class_method_signature": "HashBasedNumberedShardSpec.getPartitionDimensions()", "testcase": false, "constructor": false}, {"identifier": "getPartitionFunction", "parameters": "()", "modifiers": "@JsonProperty public @Nullable", "return": "HashPartitionFunction", "signature": "HashPartitionFunction getPartitionFunction()", "full_signature": "@JsonProperty public @Nullable HashPartitionFunction getPartitionFunction()", "class_method_signature": "HashBasedNumberedShardSpec.getPartitionFunction()", "testcase": false, "constructor": false}, {"identifier": "getDomainDimensions", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getDomainDimensions()", "full_signature": "@Override public List<String> getDomainDimensions()", "class_method_signature": "HashBasedNumberedShardSpec.getDomainDimensions()", "testcase": false, "constructor": false}, {"identifier": "getLookup", "parameters": "(final List<? extends ShardSpec> shardSpecs)", "modifiers": "@Override public", "return": "ShardSpecLookup", "signature": "ShardSpecLookup getLookup(final List<? extends ShardSpec> shardSpecs)", "full_signature": "@Override public ShardSpecLookup getLookup(final List<? extends ShardSpec> shardSpecs)", "class_method_signature": "HashBasedNumberedShardSpec.getLookup(final List<? extends ShardSpec> shardSpecs)", "testcase": false, "constructor": false}, {"identifier": "possibleInDomain", "parameters": "(Map<String, RangeSet<String>> domain)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean possibleInDomain(Map<String, RangeSet<String>> domain)", "full_signature": "@Override public boolean possibleInDomain(Map<String, RangeSet<String>> domain)", "class_method_signature": "HashBasedNumberedShardSpec.possibleInDomain(Map<String, RangeSet<String>> domain)", "testcase": false, "constructor": false}, {"identifier": "chunkPossibleInDomain", "parameters": "(\n      HashPartitionFunction hashPartitionFunction,\n      Map<String, Set<String>> domainSet,\n      Map<String, String> partitionDimensionsValues\n  )", "modifiers": "private", "return": "boolean", "signature": "boolean chunkPossibleInDomain(\n      HashPartitionFunction hashPartitionFunction,\n      Map<String, Set<String>> domainSet,\n      Map<String, String> partitionDimensionsValues\n  )", "full_signature": "private boolean chunkPossibleInDomain(\n      HashPartitionFunction hashPartitionFunction,\n      Map<String, Set<String>> domainSet,\n      Map<String, String> partitionDimensionsValues\n  )", "class_method_signature": "HashBasedNumberedShardSpec.chunkPossibleInDomain(\n      HashPartitionFunction hashPartitionFunction,\n      Map<String, Set<String>> domainSet,\n      Map<String, String> partitionDimensionsValues\n  )", "testcase": false, "constructor": false}, {"identifier": "isInChunk", "parameters": "(HashPartitionFunction hashPartitionFunction, Map<String, String> partitionDimensionsValues)", "modifiers": "private", "return": "boolean", "signature": "boolean isInChunk(HashPartitionFunction hashPartitionFunction, Map<String, String> partitionDimensionsValues)", "full_signature": "private boolean isInChunk(HashPartitionFunction hashPartitionFunction, Map<String, String> partitionDimensionsValues)", "class_method_signature": "HashBasedNumberedShardSpec.isInChunk(HashPartitionFunction hashPartitionFunction, Map<String, String> partitionDimensionsValues)", "testcase": false, "constructor": false}, {"identifier": "serializeGroupKey", "parameters": "(ObjectMapper jsonMapper, List<Object> partitionKeys)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] serializeGroupKey(ObjectMapper jsonMapper, List<Object> partitionKeys)", "full_signature": "public static byte[] serializeGroupKey(ObjectMapper jsonMapper, List<Object> partitionKeys)", "class_method_signature": "HashBasedNumberedShardSpec.serializeGroupKey(ObjectMapper jsonMapper, List<Object> partitionKeys)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "HashBasedNumberedShardSpec.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "HashBasedNumberedShardSpec.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "HashBasedNumberedShardSpec.toString()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/apache/druid/timeline/partition/HashBasedNumberedShardSpec.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    if (!super.equals(o)) {\n      return false;\n    }\n    HashBasedNumberedShardSpec that = (HashBasedNumberedShardSpec) o;\n    return bucketId == that.bucketId &&\n           numBuckets == that.numBuckets &&\n           Objects.equals(partitionDimensions, that.partitionDimensions) &&\n           partitionFunction == that.partitionFunction;\n  }", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "HashBasedNumberedShardSpec.equals(Object o)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "equals", "equals"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}