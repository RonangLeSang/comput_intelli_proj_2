{"test_class": {"identifier": "ClientKillUnusedSegmentsTaskQueryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DATA_SOURCE = \"data_source\";", "modifier": "private static final", "type": "String", "declarator": "DATA_SOURCE = \"data_source\"", "var_name": "DATA_SOURCE"}, {"original_string": "public static final DateTime START = DateTimes.nowUtc();", "modifier": "public static final", "type": "DateTime", "declarator": "START = DateTimes.nowUtc()", "var_name": "START"}, {"original_string": "private static final Interval INTERVAL = new Interval(START, START.plus(1));", "modifier": "private static final", "type": "Interval", "declarator": "INTERVAL = new Interval(START, START.plus(1))", "var_name": "INTERVAL"}, {"original_string": "ClientKillUnusedSegmentsTaskQuery clientKillUnusedSegmentsQuery;", "modifier": "", "type": "ClientKillUnusedSegmentsTaskQuery", "declarator": "clientKillUnusedSegmentsQuery", "var_name": "clientKillUnusedSegmentsQuery"}], "file": "server/src/test/java/org/apache/druid/client/indexing/ClientKillUnusedSegmentsTaskQueryTest.java"}, "test_case": {"identifier": "testGetType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetType()\n  {\n    Assert.assertEquals(\"kill\", clientKillUnusedSegmentsQuery.getType());\n  }", "signature": "void testGetType()", "full_signature": "@Test public void testGetType()", "class_method_signature": "ClientKillUnusedSegmentsTaskQueryTest.testGetType()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getType"]}, "focal_class": {"identifier": "ClientKillUnusedSegmentsTaskQuery", "superclass": "", "interfaces": "implements ClientTaskQuery", "fields": [{"original_string": "public static final String TYPE = \"kill\";", "modifier": "public static final", "type": "String", "declarator": "TYPE = \"kill\"", "var_name": "TYPE"}, {"original_string": "private final String id;", "modifier": "private final", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "private final String dataSource;", "modifier": "private final", "type": "String", "declarator": "dataSource", "var_name": "dataSource"}, {"original_string": "private final Interval interval;", "modifier": "private final", "type": "Interval", "declarator": "interval", "var_name": "interval"}], "methods": [{"identifier": "ClientKillUnusedSegmentsTaskQuery", "parameters": "(\n      @JsonProperty(\"id\") String id,\n      @JsonProperty(\"dataSource\") String dataSource,\n      @JsonProperty(\"interval\") Interval interval\n  )", "modifiers": "@JsonCreator public", "return": "", "signature": " ClientKillUnusedSegmentsTaskQuery(\n      @JsonProperty(\"id\") String id,\n      @JsonProperty(\"dataSource\") String dataSource,\n      @JsonProperty(\"interval\") Interval interval\n  )", "full_signature": "@JsonCreator public  ClientKillUnusedSegmentsTaskQuery(\n      @JsonProperty(\"id\") String id,\n      @JsonProperty(\"dataSource\") String dataSource,\n      @JsonProperty(\"interval\") Interval interval\n  )", "class_method_signature": "ClientKillUnusedSegmentsTaskQuery.ClientKillUnusedSegmentsTaskQuery(\n      @JsonProperty(\"id\") String id,\n      @JsonProperty(\"dataSource\") String dataSource,\n      @JsonProperty(\"interval\") Interval interval\n  )", "testcase": false, "constructor": true}, {"identifier": "getId", "parameters": "()", "modifiers": "@JsonProperty @Override public", "return": "String", "signature": "String getId()", "full_signature": "@JsonProperty @Override public String getId()", "class_method_signature": "ClientKillUnusedSegmentsTaskQuery.getId()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "@JsonProperty @Override public", "return": "String", "signature": "String getType()", "full_signature": "@JsonProperty @Override public String getType()", "class_method_signature": "ClientKillUnusedSegmentsTaskQuery.getType()", "testcase": false, "constructor": false}, {"identifier": "getDataSource", "parameters": "()", "modifiers": "@JsonProperty @Override public", "return": "String", "signature": "String getDataSource()", "full_signature": "@JsonProperty @Override public String getDataSource()", "class_method_signature": "ClientKillUnusedSegmentsTaskQuery.getDataSource()", "testcase": false, "constructor": false}, {"identifier": "getInterval", "parameters": "()", "modifiers": "@JsonProperty public", "return": "Interval", "signature": "Interval getInterval()", "full_signature": "@JsonProperty public Interval getInterval()", "class_method_signature": "ClientKillUnusedSegmentsTaskQuery.getInterval()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "ClientKillUnusedSegmentsTaskQuery.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ClientKillUnusedSegmentsTaskQuery.hashCode()", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/apache/druid/client/indexing/ClientKillUnusedSegmentsTaskQuery.java"}, "focal_method": {"identifier": "getType", "parameters": "()", "modifiers": "@JsonProperty @Override public", "return": "String", "body": "@JsonProperty\n  @Override\n  public String getType()\n  {\n    return TYPE;\n  }", "signature": "String getType()", "full_signature": "@JsonProperty @Override public String getType()", "class_method_signature": "ClientKillUnusedSegmentsTaskQuery.getType()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}