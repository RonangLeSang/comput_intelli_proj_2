{"test_class": {"identifier": "OverlordResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private OverlordResource overlordResource;", "modifier": "private", "type": "OverlordResource", "declarator": "overlordResource", "var_name": "overlordResource"}, {"original_string": "private TaskMaster taskMaster;", "modifier": "private", "type": "TaskMaster", "declarator": "taskMaster", "var_name": "taskMaster"}, {"original_string": "private TaskStorageQueryAdapter taskStorageQueryAdapter;", "modifier": "private", "type": "TaskStorageQueryAdapter", "declarator": "taskStorageQueryAdapter", "var_name": "taskStorageQueryAdapter"}, {"original_string": "private IndexerMetadataStorageAdapter indexerMetadataStorageAdapter;", "modifier": "private", "type": "IndexerMetadataStorageAdapter", "declarator": "indexerMetadataStorageAdapter", "var_name": "indexerMetadataStorageAdapter"}, {"original_string": "private HttpServletRequest req;", "modifier": "private", "type": "HttpServletRequest", "declarator": "req", "var_name": "req"}, {"original_string": "private TaskRunner taskRunner;", "modifier": "private", "type": "TaskRunner", "declarator": "taskRunner", "var_name": "taskRunner"}, {"original_string": "private WorkerTaskRunnerQueryAdapter workerTaskRunnerQueryAdapter;", "modifier": "private", "type": "WorkerTaskRunnerQueryAdapter", "declarator": "workerTaskRunnerQueryAdapter", "var_name": "workerTaskRunnerQueryAdapter"}, {"original_string": "@Rule\n  public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}], "file": "indexing-service/src/test/java/org/apache/druid/indexing/overlord/http/OverlordResourceTest.java"}, "test_case": {"identifier": "testLeader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testLeader()\n  {\n    EasyMock.expect(taskMaster.getCurrentLeader()).andReturn(\"boz\").once();\n    EasyMock.replay(\n        taskRunner,\n        taskMaster,\n        taskStorageQueryAdapter,\n        indexerMetadataStorageAdapter,\n        req,\n        workerTaskRunnerQueryAdapter\n    );\n\n    final Response response = overlordResource.getLeader();\n    Assert.assertEquals(\"boz\", response.getEntity());\n    Assert.assertEquals(200, response.getStatus());\n  }", "signature": "void testLeader()", "full_signature": "@Test public void testLeader()", "class_method_signature": "OverlordResourceTest.testLeader()", "testcase": true, "constructor": false, "invocations": ["once", "andReturn", "expect", "getCurrentLeader", "replay", "getLeader", "assertEquals", "getEntity", "assertEquals", "getStatus"]}, "focal_class": {"identifier": "OverlordResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = new Logger(OverlordResource.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = new Logger(OverlordResource.class)", "var_name": "log"}, {"original_string": "private final TaskMaster taskMaster;", "modifier": "private final", "type": "TaskMaster", "declarator": "taskMaster", "var_name": "taskMaster"}, {"original_string": "private final TaskStorageQueryAdapter taskStorageQueryAdapter;", "modifier": "private final", "type": "TaskStorageQueryAdapter", "declarator": "taskStorageQueryAdapter", "var_name": "taskStorageQueryAdapter"}, {"original_string": "private final IndexerMetadataStorageAdapter indexerMetadataStorageAdapter;", "modifier": "private final", "type": "IndexerMetadataStorageAdapter", "declarator": "indexerMetadataStorageAdapter", "var_name": "indexerMetadataStorageAdapter"}, {"original_string": "private final TaskLogStreamer taskLogStreamer;", "modifier": "private final", "type": "TaskLogStreamer", "declarator": "taskLogStreamer", "var_name": "taskLogStreamer"}, {"original_string": "private final JacksonConfigManager configManager;", "modifier": "private final", "type": "JacksonConfigManager", "declarator": "configManager", "var_name": "configManager"}, {"original_string": "private final AuditManager auditManager;", "modifier": "private final", "type": "AuditManager", "declarator": "auditManager", "var_name": "auditManager"}, {"original_string": "private final AuthorizerMapper authorizerMapper;", "modifier": "private final", "type": "AuthorizerMapper", "declarator": "authorizerMapper", "var_name": "authorizerMapper"}, {"original_string": "private final WorkerTaskRunnerQueryAdapter workerTaskRunnerQueryAdapter;", "modifier": "private final", "type": "WorkerTaskRunnerQueryAdapter", "declarator": "workerTaskRunnerQueryAdapter", "var_name": "workerTaskRunnerQueryAdapter"}, {"original_string": "private AtomicReference<WorkerBehaviorConfig> workerConfigRef = null;", "modifier": "private", "type": "AtomicReference<WorkerBehaviorConfig>", "declarator": "workerConfigRef = null", "var_name": "workerConfigRef"}, {"original_string": "private static final List API_TASK_STATES = ImmutableList.of(\"pending\", \"waiting\", \"running\", \"complete\");", "modifier": "private static final", "type": "List", "declarator": "API_TASK_STATES = ImmutableList.of(\"pending\", \"waiting\", \"running\", \"complete\")", "var_name": "API_TASK_STATES"}], "methods": [{"identifier": "OverlordResource", "parameters": "(\n      TaskMaster taskMaster,\n      TaskStorageQueryAdapter taskStorageQueryAdapter,\n      IndexerMetadataStorageAdapter indexerMetadataStorageAdapter,\n      TaskLogStreamer taskLogStreamer,\n      JacksonConfigManager configManager,\n      AuditManager auditManager,\n      AuthorizerMapper authorizerMapper,\n      WorkerTaskRunnerQueryAdapter workerTaskRunnerQueryAdapter\n  )", "modifiers": "@Inject public", "return": "", "signature": " OverlordResource(\n      TaskMaster taskMaster,\n      TaskStorageQueryAdapter taskStorageQueryAdapter,\n      IndexerMetadataStorageAdapter indexerMetadataStorageAdapter,\n      TaskLogStreamer taskLogStreamer,\n      JacksonConfigManager configManager,\n      AuditManager auditManager,\n      AuthorizerMapper authorizerMapper,\n      WorkerTaskRunnerQueryAdapter workerTaskRunnerQueryAdapter\n  )", "full_signature": "@Inject public  OverlordResource(\n      TaskMaster taskMaster,\n      TaskStorageQueryAdapter taskStorageQueryAdapter,\n      IndexerMetadataStorageAdapter indexerMetadataStorageAdapter,\n      TaskLogStreamer taskLogStreamer,\n      JacksonConfigManager configManager,\n      AuditManager auditManager,\n      AuthorizerMapper authorizerMapper,\n      WorkerTaskRunnerQueryAdapter workerTaskRunnerQueryAdapter\n  )", "class_method_signature": "OverlordResource.OverlordResource(\n      TaskMaster taskMaster,\n      TaskStorageQueryAdapter taskStorageQueryAdapter,\n      IndexerMetadataStorageAdapter indexerMetadataStorageAdapter,\n      TaskLogStreamer taskLogStreamer,\n      JacksonConfigManager configManager,\n      AuditManager auditManager,\n      AuthorizerMapper authorizerMapper,\n      WorkerTaskRunnerQueryAdapter workerTaskRunnerQueryAdapter\n  )", "testcase": false, "constructor": true}, {"identifier": "taskPost", "parameters": "(final Task task, @Context final HttpServletRequest req)", "modifiers": "@POST @Path(\"/task\") @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response taskPost(final Task task, @Context final HttpServletRequest req)", "full_signature": "@POST @Path(\"/task\") @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON) public Response taskPost(final Task task, @Context final HttpServletRequest req)", "class_method_signature": "OverlordResource.taskPost(final Task task, @Context final HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "getLeader", "parameters": "()", "modifiers": "@GET @Path(\"/leader\") @ResourceFilters(StateResourceFilter.class) @Produces(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response getLeader()", "full_signature": "@GET @Path(\"/leader\") @ResourceFilters(StateResourceFilter.class) @Produces(MediaType.APPLICATION_JSON) public Response getLeader()", "class_method_signature": "OverlordResource.getLeader()", "testcase": false, "constructor": false}, {"identifier": "isLeader", "parameters": "()", "modifiers": "@GET @Path(\"/isLeader\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response isLeader()", "full_signature": "@GET @Path(\"/isLeader\") @Produces(MediaType.APPLICATION_JSON) public Response isLeader()", "class_method_signature": "OverlordResource.isLeader()", "testcase": false, "constructor": false}, {"identifier": "getTaskPayload", "parameters": "(@PathParam(\"taskid\") String taskid)", "modifiers": "@GET @Path(\"/task/{taskid}\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(TaskResourceFilter.class) public", "return": "Response", "signature": "Response getTaskPayload(@PathParam(\"taskid\") String taskid)", "full_signature": "@GET @Path(\"/task/{taskid}\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(TaskResourceFilter.class) public Response getTaskPayload(@PathParam(\"taskid\") String taskid)", "class_method_signature": "OverlordResource.getTaskPayload(@PathParam(\"taskid\") String taskid)", "testcase": false, "constructor": false}, {"identifier": "getTaskStatus", "parameters": "(@PathParam(\"taskid\") String taskid)", "modifiers": "@GET @Path(\"/task/{taskid}/status\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(TaskResourceFilter.class) public", "return": "Response", "signature": "Response getTaskStatus(@PathParam(\"taskid\") String taskid)", "full_signature": "@GET @Path(\"/task/{taskid}/status\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(TaskResourceFilter.class) public Response getTaskStatus(@PathParam(\"taskid\") String taskid)", "class_method_signature": "OverlordResource.getTaskStatus(@PathParam(\"taskid\") String taskid)", "testcase": false, "constructor": false}, {"identifier": "getTaskSegments", "parameters": "(@PathParam(\"taskid\") String taskid)", "modifiers": "@Deprecated @GET @Path(\"/task/{taskid}/segments\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(TaskResourceFilter.class) public", "return": "Response", "signature": "Response getTaskSegments(@PathParam(\"taskid\") String taskid)", "full_signature": "@Deprecated @GET @Path(\"/task/{taskid}/segments\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(TaskResourceFilter.class) public Response getTaskSegments(@PathParam(\"taskid\") String taskid)", "class_method_signature": "OverlordResource.getTaskSegments(@PathParam(\"taskid\") String taskid)", "testcase": false, "constructor": false}, {"identifier": "doShutdown", "parameters": "(@PathParam(\"taskid\") final String taskid)", "modifiers": "@POST @Path(\"/task/{taskid}/shutdown\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(TaskResourceFilter.class) public", "return": "Response", "signature": "Response doShutdown(@PathParam(\"taskid\") final String taskid)", "full_signature": "@POST @Path(\"/task/{taskid}/shutdown\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(TaskResourceFilter.class) public Response doShutdown(@PathParam(\"taskid\") final String taskid)", "class_method_signature": "OverlordResource.doShutdown(@PathParam(\"taskid\") final String taskid)", "testcase": false, "constructor": false}, {"identifier": "shutdownTasksForDataSource", "parameters": "(@PathParam(\"dataSource\") final String dataSource)", "modifiers": "@POST @Path(\"/datasources/{dataSource}/shutdownAllTasks\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(DatasourceResourceFilter.class) public", "return": "Response", "signature": "Response shutdownTasksForDataSource(@PathParam(\"dataSource\") final String dataSource)", "full_signature": "@POST @Path(\"/datasources/{dataSource}/shutdownAllTasks\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(DatasourceResourceFilter.class) public Response shutdownTasksForDataSource(@PathParam(\"dataSource\") final String dataSource)", "class_method_signature": "OverlordResource.shutdownTasksForDataSource(@PathParam(\"dataSource\") final String dataSource)", "testcase": false, "constructor": false}, {"identifier": "getMultipleTaskStatuses", "parameters": "(Set<String> taskIds)", "modifiers": "@POST @Path(\"/taskStatus\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(StateResourceFilter.class) public", "return": "Response", "signature": "Response getMultipleTaskStatuses(Set<String> taskIds)", "full_signature": "@POST @Path(\"/taskStatus\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(StateResourceFilter.class) public Response getMultipleTaskStatuses(Set<String> taskIds)", "class_method_signature": "OverlordResource.getMultipleTaskStatuses(Set<String> taskIds)", "testcase": false, "constructor": false}, {"identifier": "getWorkerConfig", "parameters": "()", "modifiers": "@GET @Path(\"/worker\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(ConfigResourceFilter.class) public", "return": "Response", "signature": "Response getWorkerConfig()", "full_signature": "@GET @Path(\"/worker\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(ConfigResourceFilter.class) public Response getWorkerConfig()", "class_method_signature": "OverlordResource.getWorkerConfig()", "testcase": false, "constructor": false}, {"identifier": "setWorkerConfig", "parameters": "(\n      final WorkerBehaviorConfig workerBehaviorConfig,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      @Context final HttpServletRequest req\n  )", "modifiers": "@POST @Path(\"/worker\") @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(ConfigResourceFilter.class) public", "return": "Response", "signature": "Response setWorkerConfig(\n      final WorkerBehaviorConfig workerBehaviorConfig,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      @Context final HttpServletRequest req\n  )", "full_signature": "@POST @Path(\"/worker\") @Consumes(MediaType.APPLICATION_JSON) @ResourceFilters(ConfigResourceFilter.class) public Response setWorkerConfig(\n      final WorkerBehaviorConfig workerBehaviorConfig,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      @Context final HttpServletRequest req\n  )", "class_method_signature": "OverlordResource.setWorkerConfig(\n      final WorkerBehaviorConfig workerBehaviorConfig,\n      @HeaderParam(AuditManager.X_DRUID_AUTHOR) @DefaultValue(\"\") final String author,\n      @HeaderParam(AuditManager.X_DRUID_COMMENT) @DefaultValue(\"\") final String comment,\n      @Context final HttpServletRequest req\n  )", "testcase": false, "constructor": false}, {"identifier": "getWorkerConfigHistory", "parameters": "(\n      @QueryParam(\"interval\") final String interval,\n      @QueryParam(\"count\") final Integer count\n  )", "modifiers": "@GET @Path(\"/worker/history\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(ConfigResourceFilter.class) public", "return": "Response", "signature": "Response getWorkerConfigHistory(\n      @QueryParam(\"interval\") final String interval,\n      @QueryParam(\"count\") final Integer count\n  )", "full_signature": "@GET @Path(\"/worker/history\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(ConfigResourceFilter.class) public Response getWorkerConfigHistory(\n      @QueryParam(\"interval\") final String interval,\n      @QueryParam(\"count\") final Integer count\n  )", "class_method_signature": "OverlordResource.getWorkerConfigHistory(\n      @QueryParam(\"interval\") final String interval,\n      @QueryParam(\"count\") final Integer count\n  )", "testcase": false, "constructor": false}, {"identifier": "doAction", "parameters": "(final TaskActionHolder holder)", "modifiers": "@POST @Path(\"/action\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(StateResourceFilter.class) public", "return": "Response", "signature": "Response doAction(final TaskActionHolder holder)", "full_signature": "@POST @Path(\"/action\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(StateResourceFilter.class) public Response doAction(final TaskActionHolder holder)", "class_method_signature": "OverlordResource.doAction(final TaskActionHolder holder)", "testcase": false, "constructor": false}, {"identifier": "getWaitingTasks", "parameters": "(@Context final HttpServletRequest req)", "modifiers": "@GET @Path(\"/waitingTasks\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response getWaitingTasks(@Context final HttpServletRequest req)", "full_signature": "@GET @Path(\"/waitingTasks\") @Produces(MediaType.APPLICATION_JSON) public Response getWaitingTasks(@Context final HttpServletRequest req)", "class_method_signature": "OverlordResource.getWaitingTasks(@Context final HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "getPendingTasks", "parameters": "(@Context final HttpServletRequest req)", "modifiers": "@GET @Path(\"/pendingTasks\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response getPendingTasks(@Context final HttpServletRequest req)", "full_signature": "@GET @Path(\"/pendingTasks\") @Produces(MediaType.APPLICATION_JSON) public Response getPendingTasks(@Context final HttpServletRequest req)", "class_method_signature": "OverlordResource.getPendingTasks(@Context final HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "getRunningTasks", "parameters": "(\n      @QueryParam(\"type\") String taskType,\n      @Context final HttpServletRequest req\n  )", "modifiers": "@GET @Path(\"/runningTasks\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response getRunningTasks(\n      @QueryParam(\"type\") String taskType,\n      @Context final HttpServletRequest req\n  )", "full_signature": "@GET @Path(\"/runningTasks\") @Produces(MediaType.APPLICATION_JSON) public Response getRunningTasks(\n      @QueryParam(\"type\") String taskType,\n      @Context final HttpServletRequest req\n  )", "class_method_signature": "OverlordResource.getRunningTasks(\n      @QueryParam(\"type\") String taskType,\n      @Context final HttpServletRequest req\n  )", "testcase": false, "constructor": false}, {"identifier": "getCompleteTasks", "parameters": "(\n      @QueryParam(\"n\") final Integer maxTaskStatuses,\n      @Context final HttpServletRequest req\n  )", "modifiers": "@GET @Path(\"/completeTasks\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response getCompleteTasks(\n      @QueryParam(\"n\") final Integer maxTaskStatuses,\n      @Context final HttpServletRequest req\n  )", "full_signature": "@GET @Path(\"/completeTasks\") @Produces(MediaType.APPLICATION_JSON) public Response getCompleteTasks(\n      @QueryParam(\"n\") final Integer maxTaskStatuses,\n      @Context final HttpServletRequest req\n  )", "class_method_signature": "OverlordResource.getCompleteTasks(\n      @QueryParam(\"n\") final Integer maxTaskStatuses,\n      @Context final HttpServletRequest req\n  )", "testcase": false, "constructor": false}, {"identifier": "getTasks", "parameters": "(\n      @QueryParam(\"state\") final String state,\n      @QueryParam(\"datasource\") final String dataSource,\n      @QueryParam(\"createdTimeInterval\") final String createdTimeInterval,\n      @QueryParam(\"max\") final Integer maxCompletedTasks,\n      @QueryParam(\"type\") final String type,\n      @Context final HttpServletRequest req\n  )", "modifiers": "@GET @Path(\"/tasks\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response getTasks(\n      @QueryParam(\"state\") final String state,\n      @QueryParam(\"datasource\") final String dataSource,\n      @QueryParam(\"createdTimeInterval\") final String createdTimeInterval,\n      @QueryParam(\"max\") final Integer maxCompletedTasks,\n      @QueryParam(\"type\") final String type,\n      @Context final HttpServletRequest req\n  )", "full_signature": "@GET @Path(\"/tasks\") @Produces(MediaType.APPLICATION_JSON) public Response getTasks(\n      @QueryParam(\"state\") final String state,\n      @QueryParam(\"datasource\") final String dataSource,\n      @QueryParam(\"createdTimeInterval\") final String createdTimeInterval,\n      @QueryParam(\"max\") final Integer maxCompletedTasks,\n      @QueryParam(\"type\") final String type,\n      @Context final HttpServletRequest req\n  )", "class_method_signature": "OverlordResource.getTasks(\n      @QueryParam(\"state\") final String state,\n      @QueryParam(\"datasource\") final String dataSource,\n      @QueryParam(\"createdTimeInterval\") final String createdTimeInterval,\n      @QueryParam(\"max\") final Integer maxCompletedTasks,\n      @QueryParam(\"type\") final String type,\n      @Context final HttpServletRequest req\n  )", "testcase": false, "constructor": false}, {"identifier": "killPendingSegments", "parameters": "(\n      @PathParam(\"dataSource\") String dataSource,\n      @QueryParam(\"interval\") String deleteIntervalString,\n      @Context HttpServletRequest request\n  )", "modifiers": "@DELETE @Path(\"/pendingSegments/{dataSource}\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response killPendingSegments(\n      @PathParam(\"dataSource\") String dataSource,\n      @QueryParam(\"interval\") String deleteIntervalString,\n      @Context HttpServletRequest request\n  )", "full_signature": "@DELETE @Path(\"/pendingSegments/{dataSource}\") @Produces(MediaType.APPLICATION_JSON) public Response killPendingSegments(\n      @PathParam(\"dataSource\") String dataSource,\n      @QueryParam(\"interval\") String deleteIntervalString,\n      @Context HttpServletRequest request\n  )", "class_method_signature": "OverlordResource.killPendingSegments(\n      @PathParam(\"dataSource\") String dataSource,\n      @QueryParam(\"interval\") String deleteIntervalString,\n      @Context HttpServletRequest request\n  )", "testcase": false, "constructor": false}, {"identifier": "getWorkers", "parameters": "()", "modifiers": "@GET @Path(\"/workers\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(StateResourceFilter.class) public", "return": "Response", "signature": "Response getWorkers()", "full_signature": "@GET @Path(\"/workers\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(StateResourceFilter.class) public Response getWorkers()", "class_method_signature": "OverlordResource.getWorkers()", "testcase": false, "constructor": false}, {"identifier": "enableWorker", "parameters": "(@PathParam(\"host\") final String host)", "modifiers": "@POST @Path(\"/worker/{host}/enable\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(StateResourceFilter.class) public", "return": "Response", "signature": "Response enableWorker(@PathParam(\"host\") final String host)", "full_signature": "@POST @Path(\"/worker/{host}/enable\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(StateResourceFilter.class) public Response enableWorker(@PathParam(\"host\") final String host)", "class_method_signature": "OverlordResource.enableWorker(@PathParam(\"host\") final String host)", "testcase": false, "constructor": false}, {"identifier": "disableWorker", "parameters": "(@PathParam(\"host\") final String host)", "modifiers": "@POST @Path(\"/worker/{host}/disable\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(StateResourceFilter.class) public", "return": "Response", "signature": "Response disableWorker(@PathParam(\"host\") final String host)", "full_signature": "@POST @Path(\"/worker/{host}/disable\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(StateResourceFilter.class) public Response disableWorker(@PathParam(\"host\") final String host)", "class_method_signature": "OverlordResource.disableWorker(@PathParam(\"host\") final String host)", "testcase": false, "constructor": false}, {"identifier": "changeWorkerStatus", "parameters": "(String host, WorkerTaskRunner.ActionType action)", "modifiers": "private", "return": "Response", "signature": "Response changeWorkerStatus(String host, WorkerTaskRunner.ActionType action)", "full_signature": "private Response changeWorkerStatus(String host, WorkerTaskRunner.ActionType action)", "class_method_signature": "OverlordResource.changeWorkerStatus(String host, WorkerTaskRunner.ActionType action)", "testcase": false, "constructor": false}, {"identifier": "getScalingState", "parameters": "()", "modifiers": "@GET @Path(\"/scaling\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(StateResourceFilter.class) public", "return": "Response", "signature": "Response getScalingState()", "full_signature": "@GET @Path(\"/scaling\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(StateResourceFilter.class) public Response getScalingState()", "class_method_signature": "OverlordResource.getScalingState()", "testcase": false, "constructor": false}, {"identifier": "doGetLog", "parameters": "(\n      @PathParam(\"taskid\") final String taskid,\n      @QueryParam(\"offset\") @DefaultValue(\"0\") final long offset\n  )", "modifiers": "@GET @Path(\"/task/{taskid}/log\") @Produces(HttpMediaType.TEXT_PLAIN_UTF8) @ResourceFilters(TaskResourceFilter.class) public", "return": "Response", "signature": "Response doGetLog(\n      @PathParam(\"taskid\") final String taskid,\n      @QueryParam(\"offset\") @DefaultValue(\"0\") final long offset\n  )", "full_signature": "@GET @Path(\"/task/{taskid}/log\") @Produces(HttpMediaType.TEXT_PLAIN_UTF8) @ResourceFilters(TaskResourceFilter.class) public Response doGetLog(\n      @PathParam(\"taskid\") final String taskid,\n      @QueryParam(\"offset\") @DefaultValue(\"0\") final long offset\n  )", "class_method_signature": "OverlordResource.doGetLog(\n      @PathParam(\"taskid\") final String taskid,\n      @QueryParam(\"offset\") @DefaultValue(\"0\") final long offset\n  )", "testcase": false, "constructor": false}, {"identifier": "doGetReports", "parameters": "(\n      @PathParam(\"taskid\") final String taskid\n  )", "modifiers": "@GET @Path(\"/task/{taskid}/reports\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(TaskResourceFilter.class) public", "return": "Response", "signature": "Response doGetReports(\n      @PathParam(\"taskid\") final String taskid\n  )", "full_signature": "@GET @Path(\"/task/{taskid}/reports\") @Produces(MediaType.APPLICATION_JSON) @ResourceFilters(TaskResourceFilter.class) public Response doGetReports(\n      @PathParam(\"taskid\") final String taskid\n  )", "class_method_signature": "OverlordResource.doGetReports(\n      @PathParam(\"taskid\") final String taskid\n  )", "testcase": false, "constructor": false}, {"identifier": "asLeaderWith", "parameters": "(Optional<T> x, Function<T, Response> f)", "modifiers": "private", "return": "Response", "signature": "Response asLeaderWith(Optional<T> x, Function<T, Response> f)", "full_signature": "private Response asLeaderWith(Optional<T> x, Function<T, Response> f)", "class_method_signature": "OverlordResource.asLeaderWith(Optional<T> x, Function<T, Response> f)", "testcase": false, "constructor": false}, {"identifier": "filterActiveTasks", "parameters": "(\n      RunnerTaskState state,\n      List<AnyTask> allTasks\n  )", "modifiers": "private", "return": "List<AnyTask>", "signature": "List<AnyTask> filterActiveTasks(\n      RunnerTaskState state,\n      List<AnyTask> allTasks\n  )", "full_signature": "private List<AnyTask> filterActiveTasks(\n      RunnerTaskState state,\n      List<AnyTask> allTasks\n  )", "class_method_signature": "OverlordResource.filterActiveTasks(\n      RunnerTaskState state,\n      List<AnyTask> allTasks\n  )", "testcase": false, "constructor": false}, {"identifier": "securedTaskStatusPlus", "parameters": "(\n      List<TaskStatusPlus> collectionToFilter,\n      @Nullable String dataSource,\n      @Nullable String type,\n      HttpServletRequest req\n  )", "modifiers": "private", "return": "List<TaskStatusPlus>", "signature": "List<TaskStatusPlus> securedTaskStatusPlus(\n      List<TaskStatusPlus> collectionToFilter,\n      @Nullable String dataSource,\n      @Nullable String type,\n      HttpServletRequest req\n  )", "full_signature": "private List<TaskStatusPlus> securedTaskStatusPlus(\n      List<TaskStatusPlus> collectionToFilter,\n      @Nullable String dataSource,\n      @Nullable String type,\n      HttpServletRequest req\n  )", "class_method_signature": "OverlordResource.securedTaskStatusPlus(\n      List<TaskStatusPlus> collectionToFilter,\n      @Nullable String dataSource,\n      @Nullable String type,\n      HttpServletRequest req\n  )", "testcase": false, "constructor": false}], "file": "indexing-service/src/main/java/org/apache/druid/indexing/overlord/http/OverlordResource.java"}, "focal_method": {"identifier": "getLeader", "parameters": "()", "modifiers": "@GET @Path(\"/leader\") @ResourceFilters(StateResourceFilter.class) @Produces(MediaType.APPLICATION_JSON) public", "return": "Response", "body": "@GET\n  @Path(\"/leader\")\n  @ResourceFilters(StateResourceFilter.class)\n  @Produces(MediaType.APPLICATION_JSON)\n  public Response getLeader()\n  {\n    return Response.ok(taskMaster.getCurrentLeader()).build();\n  }", "signature": "Response getLeader()", "full_signature": "@GET @Path(\"/leader\") @ResourceFilters(StateResourceFilter.class) @Produces(MediaType.APPLICATION_JSON) public Response getLeader()", "class_method_signature": "OverlordResource.getLeader()", "testcase": false, "constructor": false, "invocations": ["build", "ok", "getCurrentLeader"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}