{"test_class": {"identifier": "CuratorUtilsTest", "superclass": "extends CuratorTestBase", "interfaces": "", "fields": [], "file": "server/src/test/java/org/apache/druid/curator/CuratorUtilsTest.java"}, "test_case": {"identifier": "testCreateOrSetPayloadTooLarge", "parameters": "()", "modifiers": "@Test(timeout = 60_000L) public", "return": "void", "body": "@Test(timeout = 60_000L)\n  public void testCreateOrSetPayloadTooLarge() throws Exception\n  {\n    curator.start();\n    curator.blockUntilConnected();\n\n    Exception thrown = null;\n    try {\n      CuratorUtils.createOrSet(\n          curator,\n          \"/foo/bar\",\n          CreateMode.PERSISTENT,\n          StringUtils.toUtf8(\"baz\"),\n          2\n      );\n    }\n    catch (Exception e) {\n      thrown = e;\n    }\n\n    Assert.assertTrue(thrown instanceof IllegalArgumentException);\n    Assert.assertNull(curator.checkExists().forPath(\"/foo/bar\"));\n  }", "signature": "void testCreateOrSetPayloadTooLarge()", "full_signature": "@Test(timeout = 60_000L) public void testCreateOrSetPayloadTooLarge()", "class_method_signature": "CuratorUtilsTest.testCreateOrSetPayloadTooLarge()", "testcase": true, "constructor": false, "invocations": ["start", "blockUntilConnected", "createOrSet", "toUtf8", "assertTrue", "assertNull", "forPath", "checkExists"]}, "focal_class": {"identifier": "CuratorUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int DEFAULT_MAX_ZNODE_BYTES = 512 * 1024;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_MAX_ZNODE_BYTES = 512 * 1024", "var_name": "DEFAULT_MAX_ZNODE_BYTES"}, {"original_string": "private static final Logger log = new Logger(CuratorUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = new Logger(CuratorUtils.class)", "var_name": "log"}], "methods": [{"identifier": "createIfNotExists", "parameters": "(\n      CuratorFramework curatorFramework,\n      String path,\n      CreateMode mode,\n      byte[] rawBytes,\n      int maxZnodeBytes\n  )", "modifiers": "public static", "return": "void", "signature": "void createIfNotExists(\n      CuratorFramework curatorFramework,\n      String path,\n      CreateMode mode,\n      byte[] rawBytes,\n      int maxZnodeBytes\n  )", "full_signature": "public static void createIfNotExists(\n      CuratorFramework curatorFramework,\n      String path,\n      CreateMode mode,\n      byte[] rawBytes,\n      int maxZnodeBytes\n  )", "class_method_signature": "CuratorUtils.createIfNotExists(\n      CuratorFramework curatorFramework,\n      String path,\n      CreateMode mode,\n      byte[] rawBytes,\n      int maxZnodeBytes\n  )", "testcase": false, "constructor": false}, {"identifier": "createOrSet", "parameters": "(\n      CuratorFramework curatorFramework,\n      String path,\n      CreateMode mode,\n      byte[] rawBytes,\n      int maxZnodeBytes\n  )", "modifiers": "public static", "return": "void", "signature": "void createOrSet(\n      CuratorFramework curatorFramework,\n      String path,\n      CreateMode mode,\n      byte[] rawBytes,\n      int maxZnodeBytes\n  )", "full_signature": "public static void createOrSet(\n      CuratorFramework curatorFramework,\n      String path,\n      CreateMode mode,\n      byte[] rawBytes,\n      int maxZnodeBytes\n  )", "class_method_signature": "CuratorUtils.createOrSet(\n      CuratorFramework curatorFramework,\n      String path,\n      CreateMode mode,\n      byte[] rawBytes,\n      int maxZnodeBytes\n  )", "testcase": false, "constructor": false}, {"identifier": "verifySize", "parameters": "(String path, byte[] rawBytes, int maxZnodeBytes)", "modifiers": "private static", "return": "void", "signature": "void verifySize(String path, byte[] rawBytes, int maxZnodeBytes)", "full_signature": "private static void verifySize(String path, byte[] rawBytes, int maxZnodeBytes)", "class_method_signature": "CuratorUtils.verifySize(String path, byte[] rawBytes, int maxZnodeBytes)", "testcase": false, "constructor": false}, {"identifier": "isChildAdded", "parameters": "(PathChildrenCacheEvent event)", "modifiers": "public static", "return": "boolean", "signature": "boolean isChildAdded(PathChildrenCacheEvent event)", "full_signature": "public static boolean isChildAdded(PathChildrenCacheEvent event)", "class_method_signature": "CuratorUtils.isChildAdded(PathChildrenCacheEvent event)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/apache/druid/curator/CuratorUtils.java"}, "focal_method": {"identifier": "createOrSet", "parameters": "(\n      CuratorFramework curatorFramework,\n      String path,\n      CreateMode mode,\n      byte[] rawBytes,\n      int maxZnodeBytes\n  )", "modifiers": "public static", "return": "void", "body": "public static void createOrSet(\n      CuratorFramework curatorFramework,\n      String path,\n      CreateMode mode,\n      byte[] rawBytes,\n      int maxZnodeBytes\n  ) throws Exception\n  {\n    verifySize(path, rawBytes, maxZnodeBytes);\n\n    boolean created = false;\n    if (curatorFramework.checkExists().forPath(path) == null) {\n      try {\n        curatorFramework.create()\n                        .creatingParentsIfNeeded()\n                        .withMode(mode)\n                        .forPath(path, rawBytes);\n\n        created = true;\n      }\n      catch (KeeperException.NodeExistsException e) {\n        log.debug(\"Path [%s] created while we were running, will setData instead.\", path);\n      }\n    }\n\n    if (!created) {\n      try {\n        curatorFramework.setData()\n                        .forPath(path, rawBytes);\n      }\n      catch (KeeperException.NoNodeException e) {\n        log.warn(\"Someone deleted path[%s] while we were trying to set it. Leaving it deleted.\", path);\n      }\n    }\n  }", "signature": "void createOrSet(\n      CuratorFramework curatorFramework,\n      String path,\n      CreateMode mode,\n      byte[] rawBytes,\n      int maxZnodeBytes\n  )", "full_signature": "public static void createOrSet(\n      CuratorFramework curatorFramework,\n      String path,\n      CreateMode mode,\n      byte[] rawBytes,\n      int maxZnodeBytes\n  )", "class_method_signature": "CuratorUtils.createOrSet(\n      CuratorFramework curatorFramework,\n      String path,\n      CreateMode mode,\n      byte[] rawBytes,\n      int maxZnodeBytes\n  )", "testcase": false, "constructor": false, "invocations": ["verifySize", "forPath", "checkExists", "forPath", "withMode", "creatingParentsIfNeeded", "create", "debug", "forPath", "setData", "warn"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}