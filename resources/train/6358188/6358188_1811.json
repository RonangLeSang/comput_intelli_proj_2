{"test_class": {"identifier": "ProcCgroupDiscovererTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "@Rule\n  public TemporaryFolder temporaryFolder = new TemporaryFolder();", "modifier": "@Rule\n  public", "type": "TemporaryFolder", "declarator": "temporaryFolder = new TemporaryFolder()", "var_name": "temporaryFolder"}, {"original_string": "private File procDir;", "modifier": "private", "type": "File", "declarator": "procDir", "var_name": "procDir"}, {"original_string": "private File cgroupDir;", "modifier": "private", "type": "File", "declarator": "cgroupDir", "var_name": "cgroupDir"}, {"original_string": "private CgroupDiscoverer discoverer;", "modifier": "private", "type": "CgroupDiscoverer", "declarator": "discoverer", "var_name": "discoverer"}], "file": "core/src/test/java/org/apache/druid/java/util/metrics/cgroups/ProcCgroupDiscovererTest.java"}, "test_case": {"identifier": "testNullCgroup", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testNullCgroup()\n  {\n    expectedException.expect(NullPointerException.class);\n    Assert.assertNull(new ProcCgroupDiscoverer(procDir.toPath()).discover(null));\n  }", "signature": "void testNullCgroup()", "full_signature": "@Test public void testNullCgroup()", "class_method_signature": "ProcCgroupDiscovererTest.testNullCgroup()", "testcase": true, "constructor": false, "invocations": ["expect", "assertNull", "discover", "toPath"]}, "focal_class": {"identifier": "ProcCgroupDiscoverer", "superclass": "", "interfaces": "implements CgroupDiscoverer", "fields": [{"original_string": "private static final String CGROUP_TYPE = \"cgroup\";", "modifier": "private static final", "type": "String", "declarator": "CGROUP_TYPE = \"cgroup\"", "var_name": "CGROUP_TYPE"}, {"original_string": "private final File procDir;", "modifier": "private final", "type": "File", "declarator": "procDir", "var_name": "procDir"}], "methods": [{"identifier": "ProcCgroupDiscoverer", "parameters": "(Path procDir)", "modifiers": "public", "return": "", "signature": " ProcCgroupDiscoverer(Path procDir)", "full_signature": "public  ProcCgroupDiscoverer(Path procDir)", "class_method_signature": "ProcCgroupDiscoverer.ProcCgroupDiscoverer(Path procDir)", "testcase": false, "constructor": true}, {"identifier": "discover", "parameters": "(final String cgroup)", "modifiers": "@Override public", "return": "Path", "signature": "Path discover(final String cgroup)", "full_signature": "@Override public Path discover(final String cgroup)", "class_method_signature": "ProcCgroupDiscoverer.discover(final String cgroup)", "testcase": false, "constructor": false}, {"identifier": "getCgroupEntry", "parameters": "(final File procCgroup, final String cgroup)", "modifiers": "private", "return": "PidCgroupEntry", "signature": "PidCgroupEntry getCgroupEntry(final File procCgroup, final String cgroup)", "full_signature": "private PidCgroupEntry getCgroupEntry(final File procCgroup, final String cgroup)", "class_method_signature": "ProcCgroupDiscoverer.getCgroupEntry(final File procCgroup, final String cgroup)", "testcase": false, "constructor": false}, {"identifier": "getMountEntry", "parameters": "(final File procMounts, final String cgroup)", "modifiers": "private", "return": "ProcMountsEntry", "signature": "ProcMountsEntry getMountEntry(final File procMounts, final String cgroup)", "full_signature": "private ProcMountsEntry getMountEntry(final File procMounts, final String cgroup)", "class_method_signature": "ProcCgroupDiscoverer.getMountEntry(final File procMounts, final String cgroup)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/apache/druid/java/util/metrics/cgroups/ProcCgroupDiscoverer.java"}, "focal_method": {"identifier": "discover", "parameters": "(final String cgroup)", "modifiers": "@Override public", "return": "Path", "body": "@Override\n  public Path discover(final String cgroup)\n  {\n    Preconditions.checkNotNull(cgroup, \"cgroup required\");\n    final File procMounts = new File(procDir, \"mounts\");\n    final File pidCgroups = new File(procDir, \"cgroup\");\n    final PidCgroupEntry pidCgroupsEntry = getCgroupEntry(pidCgroups, cgroup);\n    final ProcMountsEntry procMountsEntry = getMountEntry(procMounts, cgroup);\n    final File cgroupDir = new File(\n        procMountsEntry.path.toString(),\n        pidCgroupsEntry.path.toString()\n    );\n    if (cgroupDir.exists() && cgroupDir.isDirectory()) {\n      return cgroupDir.toPath();\n    }\n    throw new RE(\"Invalid cgroup directory [%s]\", cgroupDir);\n  }", "signature": "Path discover(final String cgroup)", "full_signature": "@Override public Path discover(final String cgroup)", "class_method_signature": "ProcCgroupDiscoverer.discover(final String cgroup)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "getCgroupEntry", "getMountEntry", "toString", "toString", "exists", "isDirectory", "toPath"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}