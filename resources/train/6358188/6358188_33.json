{"test_class": {"identifier": "PullDependenciesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String EXTENSION_A_COORDINATE = \"groupX:extension_A:123\";", "modifier": "private static final", "type": "String", "declarator": "EXTENSION_A_COORDINATE = \"groupX:extension_A:123\"", "var_name": "EXTENSION_A_COORDINATE"}, {"original_string": "private static final String EXTENSION_B_COORDINATE = \"groupY:extension_B:456\";", "modifier": "private static final", "type": "String", "declarator": "EXTENSION_B_COORDINATE = \"groupY:extension_B:456\"", "var_name": "EXTENSION_B_COORDINATE"}, {"original_string": "private static final String HADOOP_CLIENT_2_3_0_COORDINATE = \"org.apache.hadoop:hadoop-client:2.3.0\";", "modifier": "private static final", "type": "String", "declarator": "HADOOP_CLIENT_2_3_0_COORDINATE = \"org.apache.hadoop:hadoop-client:2.3.0\"", "var_name": "HADOOP_CLIENT_2_3_0_COORDINATE"}, {"original_string": "private static final String HADOOP_CLIENT_2_4_0_COORDINATE = \"org.apache.hadoop:hadoop-client:2.4.0\";", "modifier": "private static final", "type": "String", "declarator": "HADOOP_CLIENT_2_4_0_COORDINATE = \"org.apache.hadoop:hadoop-client:2.4.0\"", "var_name": "HADOOP_CLIENT_2_4_0_COORDINATE"}, {"original_string": "private static final String DEPENDENCY_GROUPID = \"groupid\";", "modifier": "private static final", "type": "String", "declarator": "DEPENDENCY_GROUPID = \"groupid\"", "var_name": "DEPENDENCY_GROUPID"}, {"original_string": "private static final String HADOOP_CLIENT_VULNERABLE_ARTIFACTID1 = \"vulnerable1\";", "modifier": "private static final", "type": "String", "declarator": "HADOOP_CLIENT_VULNERABLE_ARTIFACTID1 = \"vulnerable1\"", "var_name": "HADOOP_CLIENT_VULNERABLE_ARTIFACTID1"}, {"original_string": "private static final String HADOOP_CLIENT_VULNERABLE_ARTIFACTID2 = \"vulnerable2\";", "modifier": "private static final", "type": "String", "declarator": "HADOOP_CLIENT_VULNERABLE_ARTIFACTID2 = \"vulnerable2\"", "var_name": "HADOOP_CLIENT_VULNERABLE_ARTIFACTID2"}, {"original_string": "private static final Set<String> HADOOP_CLIENT_VULNERABLE_ARTIFACTIDS = ImmutableSet.of(\n      HADOOP_CLIENT_VULNERABLE_ARTIFACTID1,\n      HADOOP_CLIENT_VULNERABLE_ARTIFACTID2\n  );", "modifier": "private static final", "type": "Set<String>", "declarator": "HADOOP_CLIENT_VULNERABLE_ARTIFACTIDS = ImmutableSet.of(\n      HADOOP_CLIENT_VULNERABLE_ARTIFACTID1,\n      HADOOP_CLIENT_VULNERABLE_ARTIFACTID2\n  )", "var_name": "HADOOP_CLIENT_VULNERABLE_ARTIFACTIDS"}, {"original_string": "private static final String HADOOP_CLIENT_VULNERABLE_JAR1 = HADOOP_CLIENT_VULNERABLE_ARTIFACTID1 + \".jar\";", "modifier": "private static final", "type": "String", "declarator": "HADOOP_CLIENT_VULNERABLE_JAR1 = HADOOP_CLIENT_VULNERABLE_ARTIFACTID1 + \".jar\"", "var_name": "HADOOP_CLIENT_VULNERABLE_JAR1"}, {"original_string": "private static final String HADOOP_CLIENT_VULNERABLE_JAR2 = HADOOP_CLIENT_VULNERABLE_ARTIFACTID2 + \".jar\";", "modifier": "private static final", "type": "String", "declarator": "HADOOP_CLIENT_VULNERABLE_JAR2 = HADOOP_CLIENT_VULNERABLE_ARTIFACTID2 + \".jar\"", "var_name": "HADOOP_CLIENT_VULNERABLE_JAR2"}, {"original_string": "private static final PullDependencies.Dependencies HADOOP_EXCLUSIONS =\n      PullDependencies.Dependencies.builder()\n                                   .put(DEPENDENCY_GROUPID, HADOOP_CLIENT_VULNERABLE_ARTIFACTID1)\n                                   .put(DEPENDENCY_GROUPID, HADOOP_CLIENT_VULNERABLE_ARTIFACTID2)\n                                   .build();", "modifier": "private static final", "type": "PullDependencies.Dependencies", "declarator": "HADOOP_EXCLUSIONS =\n      PullDependencies.Dependencies.builder()\n                                   .put(DEPENDENCY_GROUPID, HADOOP_CLIENT_VULNERABLE_ARTIFACTID1)\n                                   .put(DEPENDENCY_GROUPID, HADOOP_CLIENT_VULNERABLE_ARTIFACTID2)\n                                   .build()", "var_name": "HADOOP_EXCLUSIONS"}, {"original_string": "@Rule\n  public final TemporaryFolder temporaryFolder = new TemporaryFolder();", "modifier": "@Rule\n  public final", "type": "TemporaryFolder", "declarator": "temporaryFolder = new TemporaryFolder()", "var_name": "temporaryFolder"}, {"original_string": "private File localRepo;", "modifier": "private", "type": "File", "declarator": "localRepo", "var_name": "localRepo"}, {"original_string": "private final Artifact extension_A = new DefaultArtifact(EXTENSION_A_COORDINATE);", "modifier": "private final", "type": "Artifact", "declarator": "extension_A = new DefaultArtifact(EXTENSION_A_COORDINATE)", "var_name": "extension_A"}, {"original_string": "private final Artifact extension_B = new DefaultArtifact(EXTENSION_B_COORDINATE);", "modifier": "private final", "type": "Artifact", "declarator": "extension_B = new DefaultArtifact(EXTENSION_B_COORDINATE)", "var_name": "extension_B"}, {"original_string": "private final Artifact hadoop_client_2_3_0 = new DefaultArtifact(HADOOP_CLIENT_2_3_0_COORDINATE);", "modifier": "private final", "type": "Artifact", "declarator": "hadoop_client_2_3_0 = new DefaultArtifact(HADOOP_CLIENT_2_3_0_COORDINATE)", "var_name": "hadoop_client_2_3_0"}, {"original_string": "private final Artifact hadoop_client_2_4_0 = new DefaultArtifact(HADOOP_CLIENT_2_4_0_COORDINATE);", "modifier": "private final", "type": "Artifact", "declarator": "hadoop_client_2_4_0 = new DefaultArtifact(HADOOP_CLIENT_2_4_0_COORDINATE)", "var_name": "hadoop_client_2_4_0"}, {"original_string": "private PullDependencies pullDependencies;", "modifier": "private", "type": "PullDependencies", "declarator": "pullDependencies", "var_name": "pullDependencies"}, {"original_string": "private File rootExtensionsDir;", "modifier": "private", "type": "File", "declarator": "rootExtensionsDir", "var_name": "rootExtensionsDir"}, {"original_string": "private File rootHadoopDependenciesDir;", "modifier": "private", "type": "File", "declarator": "rootHadoopDependenciesDir", "var_name": "rootHadoopDependenciesDir"}, {"original_string": "private Map<Artifact, List<String>> extensionToDependency;", "modifier": "private", "type": "Map<Artifact, List<String>>", "declarator": "extensionToDependency", "var_name": "extensionToDependency"}], "file": "services/src/test/java/org/apache/druid/cli/PullDependenciesTest.java"}, "test_case": {"identifier": "testPullDependencies_root_extension_dir_bad_state", "parameters": "()", "modifiers": "@Test(expected = RuntimeException.class) public", "return": "void", "body": "@Test(expected = RuntimeException.class)\n  public void testPullDependencies_root_extension_dir_bad_state() throws IOException\n  {\n    Assert.assertTrue(rootExtensionsDir.delete());\n    Assert.assertTrue(rootExtensionsDir.createNewFile());\n    pullDependencies.run();\n  }", "signature": "void testPullDependencies_root_extension_dir_bad_state()", "full_signature": "@Test(expected = RuntimeException.class) public void testPullDependencies_root_extension_dir_bad_state()", "class_method_signature": "PullDependenciesTest.testPullDependencies_root_extension_dir_bad_state()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "delete", "assertTrue", "createNewFile", "run"]}, "focal_class": {"identifier": "PullDependencies", "superclass": "", "interfaces": "implements Runnable", "fields": [{"original_string": "private static final Logger log = new Logger(PullDependencies.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = new Logger(PullDependencies.class)", "var_name": "log"}, {"original_string": "private static final List<String> DEFAULT_REMOTE_REPOSITORIES = ImmutableList.of(\n      \"https://repo1.maven.org/maven2/\"\n  );", "modifier": "private static final", "type": "List<String>", "declarator": "DEFAULT_REMOTE_REPOSITORIES = ImmutableList.of(\n      \"https://repo1.maven.org/maven2/\"\n  )", "var_name": "DEFAULT_REMOTE_REPOSITORIES"}, {"original_string": "private static final Dependencies PROVIDED_BY_CORE_DEPENDENCIES =\n      Dependencies.builder()\n                  .put(\"com.squareup.okhttp\", \"okhttp\")\n                  .put(\"commons-beanutils\", \"commons-beanutils\")\n                  .put(\"org.apache.commons\", \"commons-compress\")\n                  .put(\"org.apache.zookeeper\", \"zookeeper\")\n                  .build();", "modifier": "private static final", "type": "Dependencies", "declarator": "PROVIDED_BY_CORE_DEPENDENCIES =\n      Dependencies.builder()\n                  .put(\"com.squareup.okhttp\", \"okhttp\")\n                  .put(\"commons-beanutils\", \"commons-beanutils\")\n                  .put(\"org.apache.commons\", \"commons-compress\")\n                  .put(\"org.apache.zookeeper\", \"zookeeper\")\n                  .build()", "var_name": "PROVIDED_BY_CORE_DEPENDENCIES"}, {"original_string": "private static final Dependencies SECURITY_VULNERABILITY_EXCLUSIONS =\n      Dependencies.builder()\n                  .put(\"commons-beanutils\", \"commons-beanutils-core\")\n                  .build();", "modifier": "private static final", "type": "Dependencies", "declarator": "SECURITY_VULNERABILITY_EXCLUSIONS =\n      Dependencies.builder()\n                  .put(\"commons-beanutils\", \"commons-beanutils-core\")\n                  .build()", "var_name": "SECURITY_VULNERABILITY_EXCLUSIONS"}, {"original_string": "private final Dependencies hadoopExclusions;", "modifier": "private final", "type": "Dependencies", "declarator": "hadoopExclusions", "var_name": "hadoopExclusions"}, {"original_string": "private TeslaAether aether;", "modifier": "private", "type": "TeslaAether", "declarator": "aether", "var_name": "aether"}, {"original_string": "@Inject\n  public ExtensionsConfig extensionsConfig;", "modifier": "@Inject\n  public", "type": "ExtensionsConfig", "declarator": "extensionsConfig", "var_name": "extensionsConfig"}, {"original_string": "@Option(\n      name = {\"-c\", \"--coordinate\"},\n      title = \"coordinate\",\n      description = \"Extension coordinate to pull down, followed by a maven coordinate, e.g. org.apache.druid.extensions:mysql-metadata-storage\"\n  )\n  public List<String> coordinates = new ArrayList<>();", "modifier": "@Option(\n      name = {\"-c\", \"--coordinate\"},\n      title = \"coordinate\",\n      description = \"Extension coordinate to pull down, followed by a maven coordinate, e.g. org.apache.druid.extensions:mysql-metadata-storage\"\n  )\n  public", "type": "List<String>", "declarator": "coordinates = new ArrayList<>()", "var_name": "coordinates"}, {"original_string": "@Option(\n      name = {\"-h\", \"--hadoop-coordinate\"},\n      title = \"hadoop coordinate\",\n      description = \"Hadoop dependency to pull down, followed by a maven coordinate, e.g. org.apache.hadoop:hadoop-client:2.4.0\"\n  )\n  public List<String> hadoopCoordinates = new ArrayList<>();", "modifier": "@Option(\n      name = {\"-h\", \"--hadoop-coordinate\"},\n      title = \"hadoop coordinate\",\n      description = \"Hadoop dependency to pull down, followed by a maven coordinate, e.g. org.apache.hadoop:hadoop-client:2.4.0\"\n  )\n  public", "type": "List<String>", "declarator": "hadoopCoordinates = new ArrayList<>()", "var_name": "hadoopCoordinates"}, {"original_string": "@Option(\n      name = \"--no-default-hadoop\",\n      description = \"Don't pull down the default hadoop coordinate, i.e., org.apache.hadoop:hadoop-client:2.8.5. If `-h` option is supplied, then default hadoop coordinate will not be downloaded.\"\n  )\n  public boolean noDefaultHadoop = false;", "modifier": "@Option(\n      name = \"--no-default-hadoop\",\n      description = \"Don't pull down the default hadoop coordinate, i.e., org.apache.hadoop:hadoop-client:2.8.5. If `-h` option is supplied, then default hadoop coordinate will not be downloaded.\"\n  )\n  public", "type": "boolean", "declarator": "noDefaultHadoop = false", "var_name": "noDefaultHadoop"}, {"original_string": "@Option(\n      name = \"--clean\",\n      title = \"Remove exisiting extension and hadoop dependencies directories before pulling down dependencies.\"\n  )\n  public boolean clean = false;", "modifier": "@Option(\n      name = \"--clean\",\n      title = \"Remove exisiting extension and hadoop dependencies directories before pulling down dependencies.\"\n  )\n  public", "type": "boolean", "declarator": "clean = false", "var_name": "clean"}, {"original_string": "@Option(\n      name = {\"-l\", \"--localRepository\"},\n      title = \"A local repository that Maven will use to put downloaded files. Then pull-deps will lay these files out into the extensions directory as needed.\"\n  )\n  public String localRepository = StringUtils.format(\"%s/%s\", System.getProperty(\"user.home\"), \".m2/repository\");", "modifier": "@Option(\n      name = {\"-l\", \"--localRepository\"},\n      title = \"A local repository that Maven will use to put downloaded files. Then pull-deps will lay these files out into the extensions directory as needed.\"\n  )\n  public", "type": "String", "declarator": "localRepository = StringUtils.format(\"%s/%s\", System.getProperty(\"user.home\"), \".m2/repository\")", "var_name": "localRepository"}, {"original_string": "@Option(\n      name = {\"-r\", \"--remoteRepository\"},\n      title = \"Add a remote repository. Unless --no-default-remote-repositories is provided, these will be used after https://repo1.maven.org/maven2/\"\n  )\n  List<String> remoteRepositories = new ArrayList<>();", "modifier": "@Option(\n      name = {\"-r\", \"--remoteRepository\"},\n      title = \"Add a remote repository. Unless --no-default-remote-repositories is provided, these will be used after https://repo1.maven.org/maven2/\"\n  )", "type": "List<String>", "declarator": "remoteRepositories = new ArrayList<>()", "var_name": "remoteRepositories"}, {"original_string": "@Option(\n      name = \"--no-default-remote-repositories\",\n      description = \"Don't use the default remote repositories, only use the repositories provided directly via --remoteRepository\"\n  )\n  public boolean noDefaultRemoteRepositories = false;", "modifier": "@Option(\n      name = \"--no-default-remote-repositories\",\n      description = \"Don't use the default remote repositories, only use the repositories provided directly via --remoteRepository\"\n  )\n  public", "type": "boolean", "declarator": "noDefaultRemoteRepositories = false", "var_name": "noDefaultRemoteRepositories"}, {"original_string": "@Option(\n      name = {\"-d\", \"--defaultVersion\"},\n      title = \"Version to use for extension artifacts without version information.\"\n  )\n  public String defaultVersion = PullDependencies.class.getPackage().getImplementationVersion();", "modifier": "@Option(\n      name = {\"-d\", \"--defaultVersion\"},\n      title = \"Version to use for extension artifacts without version information.\"\n  )\n  public", "type": "String", "declarator": "defaultVersion = PullDependencies.class.getPackage().getImplementationVersion()", "var_name": "defaultVersion"}, {"original_string": "@Option(\n      name = {\"--use-proxy\"},\n      title = \"Use http/https proxy to pull dependencies.\"\n  )\n  public boolean useProxy = false;", "modifier": "@Option(\n      name = {\"--use-proxy\"},\n      title = \"Use http/https proxy to pull dependencies.\"\n  )\n  public", "type": "boolean", "declarator": "useProxy = false", "var_name": "useProxy"}, {"original_string": "@Option(\n      name = {\"--proxy-type\"},\n      title = \"The proxy type, should be either http or https\"\n  )\n  public String proxyType = \"https\";", "modifier": "@Option(\n      name = {\"--proxy-type\"},\n      title = \"The proxy type, should be either http or https\"\n  )\n  public", "type": "String", "declarator": "proxyType = \"https\"", "var_name": "proxyType"}, {"original_string": "@Option(\n      name = {\"--proxy-host\"},\n      title = \"The proxy host\"\n  )\n  public String proxyHost = \"\";", "modifier": "@Option(\n      name = {\"--proxy-host\"},\n      title = \"The proxy host\"\n  )\n  public", "type": "String", "declarator": "proxyHost = \"\"", "var_name": "proxyHost"}, {"original_string": "@Option(\n      name = {\"--proxy-port\"},\n      title = \"The proxy port\"\n  )\n  public int proxyPort = -1;", "modifier": "@Option(\n      name = {\"--proxy-port\"},\n      title = \"The proxy port\"\n  )\n  public", "type": "int", "declarator": "proxyPort = -1", "var_name": "proxyPort"}, {"original_string": "@Option(\n      name = {\"--proxy-username\"},\n      title = \"The proxy username\"\n  )\n  public String proxyUsername = \"\";", "modifier": "@Option(\n      name = {\"--proxy-username\"},\n      title = \"The proxy username\"\n  )\n  public", "type": "String", "declarator": "proxyUsername = \"\"", "var_name": "proxyUsername"}, {"original_string": "@Option(\n      name = {\"--proxy-password\"},\n      title = \"The proxy password\"\n  )\n  public String proxyPassword = \"\";", "modifier": "@Option(\n      name = {\"--proxy-password\"},\n      title = \"The proxy password\"\n  )\n  public", "type": "String", "declarator": "proxyPassword = \"\"", "var_name": "proxyPassword"}], "methods": [{"identifier": "PullDependencies", "parameters": "()", "modifiers": "@SuppressWarnings(\"unused\") // used by io.airlift:airline public", "return": "", "signature": " PullDependencies()", "full_signature": "@SuppressWarnings(\"unused\") // used by io.airlift:airline public  PullDependencies()", "class_method_signature": "PullDependencies.PullDependencies()", "testcase": false, "constructor": true}, {"identifier": "PullDependencies", "parameters": "(TeslaAether aether, ExtensionsConfig extensionsConfig, Dependencies hadoopExclusions)", "modifiers": "", "return": "", "signature": " PullDependencies(TeslaAether aether, ExtensionsConfig extensionsConfig, Dependencies hadoopExclusions)", "full_signature": "  PullDependencies(TeslaAether aether, ExtensionsConfig extensionsConfig, Dependencies hadoopExclusions)", "class_method_signature": "PullDependencies.PullDependencies(TeslaAether aether, ExtensionsConfig extensionsConfig, Dependencies hadoopExclusions)", "testcase": false, "constructor": true}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "PullDependencies.run()", "testcase": false, "constructor": false}, {"identifier": "getArtifact", "parameters": "(String coordinate)", "modifiers": "private", "return": "Artifact", "signature": "Artifact getArtifact(String coordinate)", "full_signature": "private Artifact getArtifact(String coordinate)", "class_method_signature": "PullDependencies.getArtifact(String coordinate)", "testcase": false, "constructor": false}, {"identifier": "downloadExtension", "parameters": "(Artifact versionedArtifact, File toLocation)", "modifiers": "private", "return": "void", "signature": "void downloadExtension(Artifact versionedArtifact, File toLocation)", "full_signature": "private void downloadExtension(Artifact versionedArtifact, File toLocation)", "class_method_signature": "PullDependencies.downloadExtension(Artifact versionedArtifact, File toLocation)", "testcase": false, "constructor": false}, {"identifier": "downloadExtension", "parameters": "(Artifact versionedArtifact, File toLocation, Dependencies exclusions)", "modifiers": "private", "return": "void", "signature": "void downloadExtension(Artifact versionedArtifact, File toLocation, Dependencies exclusions)", "full_signature": "private void downloadExtension(Artifact versionedArtifact, File toLocation, Dependencies exclusions)", "class_method_signature": "PullDependencies.downloadExtension(Artifact versionedArtifact, File toLocation, Dependencies exclusions)", "testcase": false, "constructor": false}, {"identifier": "getAetherClient", "parameters": "()", "modifiers": "@SuppressForbidden(reason = \"System#out\") private", "return": "DefaultTeslaAether", "signature": "DefaultTeslaAether getAetherClient()", "full_signature": "@SuppressForbidden(reason = \"System#out\") private DefaultTeslaAether getAetherClient()", "class_method_signature": "PullDependencies.getAetherClient()", "testcase": false, "constructor": false}, {"identifier": "createTeslaAether", "parameters": "(List<Repository> remoteRepositories)", "modifiers": "private", "return": "DefaultTeslaAether", "signature": "DefaultTeslaAether createTeslaAether(List<Repository> remoteRepositories)", "full_signature": "private DefaultTeslaAether createTeslaAether(List<Repository> remoteRepositories)", "class_method_signature": "PullDependencies.createTeslaAether(List<Repository> remoteRepositories)", "testcase": false, "constructor": false}, {"identifier": "createExtensionDirectory", "parameters": "(String coordinate, File atLocation)", "modifiers": "private", "return": "void", "signature": "void createExtensionDirectory(String coordinate, File atLocation)", "full_signature": "private void createExtensionDirectory(String coordinate, File atLocation)", "class_method_signature": "PullDependencies.createExtensionDirectory(String coordinate, File atLocation)", "testcase": false, "constructor": false}], "file": "services/src/main/java/org/apache/druid/cli/PullDependencies.java"}, "focal_method": {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void run()\n  {\n    if (aether == null) {\n      aether = getAetherClient();\n    }\n\n    final File extensionsDir = new File(extensionsConfig.getDirectory());\n    final File hadoopDependenciesDir = new File(extensionsConfig.getHadoopDependenciesDir());\n\n    try {\n      if (clean) {\n        FileUtils.deleteDirectory(extensionsDir);\n        FileUtils.deleteDirectory(hadoopDependenciesDir);\n      }\n      org.apache.commons.io.FileUtils.forceMkdir(extensionsDir);\n      org.apache.commons.io.FileUtils.forceMkdir(hadoopDependenciesDir);\n    }\n    catch (IOException e) {\n      log.error(e, \"Unable to clear or create extension directory at [%s]\", extensionsDir);\n      throw new RuntimeException(e);\n    }\n\n    log.info(\n        \"Start pull-deps with local repository [%s] and remote repositories [%s]\",\n        localRepository,\n        remoteRepositories\n    );\n\n    try {\n      log.info(\"Start downloading dependencies for extension coordinates: [%s]\", coordinates);\n      for (String coordinate : coordinates) {\n        coordinate = coordinate.trim();\n        final Artifact versionedArtifact = getArtifact(coordinate);\n\n        File currExtensionDir = new File(extensionsDir, versionedArtifact.getArtifactId());\n        createExtensionDirectory(coordinate, currExtensionDir);\n\n        downloadExtension(versionedArtifact, currExtensionDir);\n      }\n      log.info(\"Finish downloading dependencies for extension coordinates: [%s]\", coordinates);\n\n      if (!noDefaultHadoop && hadoopCoordinates.isEmpty()) {\n        hadoopCoordinates.addAll(TaskConfig.DEFAULT_DEFAULT_HADOOP_COORDINATES);\n      }\n\n      log.info(\"Start downloading dependencies for hadoop extension coordinates: [%s]\", hadoopCoordinates);\n      for (final String hadoopCoordinate : hadoopCoordinates) {\n        final Artifact versionedArtifact = getArtifact(hadoopCoordinate);\n\n        File currExtensionDir = new File(hadoopDependenciesDir, versionedArtifact.getArtifactId());\n        createExtensionDirectory(hadoopCoordinate, currExtensionDir);\n\n        // add a version folder for hadoop dependency directory\n        currExtensionDir = new File(currExtensionDir, versionedArtifact.getVersion());\n        createExtensionDirectory(hadoopCoordinate, currExtensionDir);\n\n        downloadExtension(versionedArtifact, currExtensionDir, hadoopExclusions);\n      }\n      log.info(\"Finish downloading dependencies for hadoop extension coordinates: [%s]\", hadoopCoordinates);\n    }\n    catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "PullDependencies.run()", "testcase": false, "constructor": false, "invocations": ["getAetherClient", "getDirectory", "getHadoopDependenciesDir", "deleteDirectory", "deleteDirectory", "forceMkdir", "forceMkdir", "error", "info", "info", "trim", "getArtifact", "getArtifactId", "createExtensionDirectory", "downloadExtension", "info", "isEmpty", "addAll", "info", "getArtifact", "getArtifactId", "createExtensionDirectory", "getVersion", "createExtensionDirectory", "downloadExtension", "info"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}