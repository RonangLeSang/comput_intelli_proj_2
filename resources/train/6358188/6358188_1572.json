{"test_class": {"identifier": "DruidRelsTest", "superclass": "", "interfaces": "", "fields": [], "file": "sql/src/test/java/org/apache/druid/sql/calcite/rel/DruidRelsTest.java"}, "test_case": {"identifier": "test_isScanOrMapping_nonMapping", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void test_isScanOrMapping_nonMapping()\n  {\n    final Project project = mockNonMappingProject();\n    final DruidRel<?> rel = mockDruidRel(\n        DruidQueryRel.class,\n        PartialDruidQuery.Stage.SELECT_PROJECT,\n        null,\n        project,\n        null\n    );\n    Assert.assertFalse(DruidRels.isScanOrMapping(rel, true));\n    Assert.assertFalse(DruidRels.isScanOrMapping(rel, false));\n\n    EasyMock.verify(rel, rel.getPartialDruidQuery(), project);\n  }", "signature": "void test_isScanOrMapping_nonMapping()", "full_signature": "@Test public void test_isScanOrMapping_nonMapping()", "class_method_signature": "DruidRelsTest.test_isScanOrMapping_nonMapping()", "testcase": true, "constructor": false, "invocations": ["mockNonMappingProject", "mockDruidRel", "assertFalse", "isScanOrMapping", "assertFalse", "isScanOrMapping", "verify", "getPartialDruidQuery"]}, "focal_class": {"identifier": "DruidRels", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "druidTableIfLeafRel", "parameters": "(final DruidRel<?> druidRel)", "modifiers": "public static", "return": "Optional<DruidTable>", "signature": "Optional<DruidTable> druidTableIfLeafRel(final DruidRel<?> druidRel)", "full_signature": "public static Optional<DruidTable> druidTableIfLeafRel(final DruidRel<?> druidRel)", "class_method_signature": "DruidRels.druidTableIfLeafRel(final DruidRel<?> druidRel)", "testcase": false, "constructor": false}, {"identifier": "isScanOrMapping", "parameters": "(final DruidRel<?> druidRel, final boolean canBeJoinOrUnion)", "modifiers": "public static", "return": "boolean", "signature": "boolean isScanOrMapping(final DruidRel<?> druidRel, final boolean canBeJoinOrUnion)", "full_signature": "public static boolean isScanOrMapping(final DruidRel<?> druidRel, final boolean canBeJoinOrUnion)", "class_method_signature": "DruidRels.isScanOrMapping(final DruidRel<?> druidRel, final boolean canBeJoinOrUnion)", "testcase": false, "constructor": false}, {"identifier": "isScanOrProject", "parameters": "(final DruidRel<?> druidRel, final boolean canBeJoinOrUnion)", "modifiers": "private static", "return": "boolean", "signature": "boolean isScanOrProject(final DruidRel<?> druidRel, final boolean canBeJoinOrUnion)", "full_signature": "private static boolean isScanOrProject(final DruidRel<?> druidRel, final boolean canBeJoinOrUnion)", "class_method_signature": "DruidRels.isScanOrProject(final DruidRel<?> druidRel, final boolean canBeJoinOrUnion)", "testcase": false, "constructor": false}], "file": "sql/src/main/java/org/apache/druid/sql/calcite/rel/DruidRels.java"}, "focal_method": {"identifier": "isScanOrMapping", "parameters": "(final DruidRel<?> druidRel, final boolean canBeJoinOrUnion)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isScanOrMapping(final DruidRel<?> druidRel, final boolean canBeJoinOrUnion)\n  {\n    if (isScanOrProject(druidRel, canBeJoinOrUnion)) {\n      // Like isScanOrProject, but don't allow transforming projections.\n      final PartialDruidQuery partialQuery = druidRel.getPartialDruidQuery();\n      return partialQuery.getSelectProject() == null || partialQuery.getSelectProject().isMapping();\n    } else {\n      return false;\n    }\n  }", "signature": "boolean isScanOrMapping(final DruidRel<?> druidRel, final boolean canBeJoinOrUnion)", "full_signature": "public static boolean isScanOrMapping(final DruidRel<?> druidRel, final boolean canBeJoinOrUnion)", "class_method_signature": "DruidRels.isScanOrMapping(final DruidRel<?> druidRel, final boolean canBeJoinOrUnion)", "testcase": false, "constructor": false, "invocations": ["isScanOrProject", "getPartialDruidQuery", "getSelectProject", "isMapping", "getSelectProject"]}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}