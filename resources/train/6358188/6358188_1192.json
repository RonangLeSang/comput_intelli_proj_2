{"test_class": {"identifier": "ArrayOfDoublesSketchToMeansPostAggregatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}], "file": "extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchToMeansPostAggregatorTest.java"}, "test_case": {"identifier": "testComparator", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testComparator()\n  {\n    expectedException.expect(IAE.class);\n    expectedException.expectMessage(\"Comparing arrays of mean values is not supported\");\n    final PostAggregator postAgg = new ArrayOfDoublesSketchToMeansPostAggregator(\n        \"a\",\n        new ConstantPostAggregator(\"\", 0)\n    );\n    postAgg.getComparator();\n  }", "signature": "void testComparator()", "full_signature": "@Test public void testComparator()", "class_method_signature": "ArrayOfDoublesSketchToMeansPostAggregatorTest.testComparator()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "getComparator"]}, "focal_class": {"identifier": "ArrayOfDoublesSketchToMeansPostAggregator", "superclass": "extends ArrayOfDoublesSketchUnaryPostAggregator", "interfaces": "", "fields": [], "methods": [{"identifier": "ArrayOfDoublesSketchToMeansPostAggregator", "parameters": "(\n      @JsonProperty(\"name\") final String name,\n      @JsonProperty(\"field\") final PostAggregator field\n  )", "modifiers": "@JsonCreator public", "return": "", "signature": " ArrayOfDoublesSketchToMeansPostAggregator(\n      @JsonProperty(\"name\") final String name,\n      @JsonProperty(\"field\") final PostAggregator field\n  )", "full_signature": "@JsonCreator public  ArrayOfDoublesSketchToMeansPostAggregator(\n      @JsonProperty(\"name\") final String name,\n      @JsonProperty(\"field\") final PostAggregator field\n  )", "class_method_signature": "ArrayOfDoublesSketchToMeansPostAggregator.ArrayOfDoublesSketchToMeansPostAggregator(\n      @JsonProperty(\"name\") final String name,\n      @JsonProperty(\"field\") final PostAggregator field\n  )", "testcase": false, "constructor": true}, {"identifier": "compute", "parameters": "(final Map<String, Object> combinedAggregators)", "modifiers": "@Override public", "return": "double[]", "signature": "double[] compute(final Map<String, Object> combinedAggregators)", "full_signature": "@Override public double[] compute(final Map<String, Object> combinedAggregators)", "class_method_signature": "ArrayOfDoublesSketchToMeansPostAggregator.compute(final Map<String, Object> combinedAggregators)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "ValueType", "signature": "ValueType getType()", "full_signature": "@Override public ValueType getType()", "class_method_signature": "ArrayOfDoublesSketchToMeansPostAggregator.getType()", "testcase": false, "constructor": false}, {"identifier": "getComparator", "parameters": "()", "modifiers": "@Override public", "return": "Comparator<double[]>", "signature": "Comparator<double[]> getComparator()", "full_signature": "@Override public Comparator<double[]> getComparator()", "class_method_signature": "ArrayOfDoublesSketchToMeansPostAggregator.getComparator()", "testcase": false, "constructor": false}, {"identifier": "getCacheKey", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] getCacheKey()", "full_signature": "@Override public byte[] getCacheKey()", "class_method_signature": "ArrayOfDoublesSketchToMeansPostAggregator.getCacheKey()", "testcase": false, "constructor": false}], "file": "extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchToMeansPostAggregator.java"}, "focal_method": {"identifier": "getComparator", "parameters": "()", "modifiers": "@Override public", "return": "Comparator<double[]>", "body": "@Override\n  public Comparator<double[]> getComparator()\n  {\n    throw new IAE(\"Comparing arrays of mean values is not supported\");\n  }", "signature": "Comparator<double[]> getComparator()", "full_signature": "@Override public Comparator<double[]> getComparator()", "class_method_signature": "ArrayOfDoublesSketchToMeansPostAggregator.getComparator()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 6358188, "url": "https://github.com/apache/druid", "stars": 9116, "created": "10/23/2012 7:08:07 PM +00:00", "updates": "2020-01-27T21:36:20+00:00", "fork": "False", "license": "licensed"}}