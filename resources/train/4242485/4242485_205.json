{"test_class": {"identifier": "XmlDataReaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Charset CHARSET = DataStore.DEFAULT_CHARSET;", "modifier": "private static final", "type": "Charset", "declarator": "CHARSET = DataStore.DEFAULT_CHARSET", "var_name": "CHARSET"}, {"original_string": "private static final URL CORRUPTED_DATA_URL = XmlDataReaderTest.class.getClassLoader().getResource(\"uas_corrupted.xml\");", "modifier": "private static final", "type": "URL", "declarator": "CORRUPTED_DATA_URL = XmlDataReaderTest.class.getClassLoader().getResource(\"uas_corrupted.xml\")", "var_name": "CORRUPTED_DATA_URL"}, {"original_string": "private static final URL DATA_URL = XmlDataReaderTest.class.getClassLoader().getResource(\"uas_older.xml\");", "modifier": "private static final", "type": "URL", "declarator": "DATA_URL = XmlDataReaderTest.class.getClassLoader().getResource(\"uas_older.xml\")", "var_name": "DATA_URL"}, {"original_string": "private static final URL DIRTY_DATA_URL = XmlDataReaderTest.class.getClassLoader().getResource(\"uas_dirty.xml\");", "modifier": "private static final", "type": "URL", "declarator": "DIRTY_DATA_URL = XmlDataReaderTest.class.getClassLoader().getResource(\"uas_dirty.xml\")", "var_name": "DIRTY_DATA_URL"}], "file": "modules/uadetector-core/src/test/java/net/sf/uadetector/datareader/XmlDataReaderTest.java"}, "test_case": {"identifier": "read_charset_null", "parameters": "()", "modifiers": "@Test(expected = IllegalNullArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalNullArgumentException.class)\n\tpublic void read_charset_null() throws MalformedURLException {\n\t\tnew XmlDataReader().read(new URL(\"http://localhost/\"), null);\n\t}", "signature": "void read_charset_null()", "full_signature": "@Test(expected = IllegalNullArgumentException.class) public void read_charset_null()", "class_method_signature": "XmlDataReaderTest.read_charset_null()", "testcase": true, "constructor": false, "invocations": ["read"]}, "focal_class": {"identifier": "XmlDataReader", "superclass": "", "interfaces": "implements DataReader", "fields": [{"original_string": "private static final Charset DEFAULT_CHARSET = Charset.forName(\"UTF-8\");", "modifier": "private static final", "type": "Charset", "declarator": "DEFAULT_CHARSET = Charset.forName(\"UTF-8\")", "var_name": "DEFAULT_CHARSET"}, {"original_string": "private static final Logger LOG = LoggerFactory.getLogger(XmlDataReader.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(XmlDataReader.class)", "var_name": "LOG"}], "methods": [{"identifier": "readXml", "parameters": "(@Nonnull final InputStream inputStream, @Nonnull final Charset charset)", "modifiers": "protected static", "return": "Data", "signature": "Data readXml(@Nonnull final InputStream inputStream, @Nonnull final Charset charset)", "full_signature": "protected static Data readXml(@Nonnull final InputStream inputStream, @Nonnull final Charset charset)", "class_method_signature": "XmlDataReader.readXml(@Nonnull final InputStream inputStream, @Nonnull final Charset charset)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(@Nonnull final String data)", "modifiers": "@Override public", "return": "Data", "signature": "Data read(@Nonnull final String data)", "full_signature": "@Override public Data read(@Nonnull final String data)", "class_method_signature": "XmlDataReader.read(@Nonnull final String data)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(@Nonnull final URL url, @Nonnull final Charset charset)", "modifiers": "@Override public", "return": "Data", "signature": "Data read(@Nonnull final URL url, @Nonnull final Charset charset)", "full_signature": "@Override public Data read(@Nonnull final URL url, @Nonnull final Charset charset)", "class_method_signature": "XmlDataReader.read(@Nonnull final URL url, @Nonnull final Charset charset)", "testcase": false, "constructor": false}], "file": "modules/uadetector-core/src/main/java/net/sf/uadetector/datareader/XmlDataReader.java"}, "focal_method": {"identifier": "read", "parameters": "(@Nonnull final String data)", "modifiers": "@Override public", "return": "Data", "body": "@Override\n\tpublic Data read(@Nonnull final String data) {\n\t\tCheck.notNull(data, \"data\");\n\n\t\treturn readXml(new ByteArrayInputStream(data.getBytes(DEFAULT_CHARSET)), DEFAULT_CHARSET);\n\t}", "signature": "Data read(@Nonnull final String data)", "full_signature": "@Override public Data read(@Nonnull final String data)", "class_method_signature": "XmlDataReader.read(@Nonnull final String data)", "testcase": false, "constructor": false, "invocations": ["notNull", "readXml", "getBytes"]}, "repository": {"repo_id": 4242485, "url": "https://github.com/arouel/uadetector", "language": "Java", "is_fork": false, "fork_count": 102, "stargazer_count": 231, "size": 7755, "license": "licensed"}}