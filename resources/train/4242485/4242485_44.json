{"test_class": {"identifier": "CachingXmlDataStoreTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Charset CHARSET = DataStore.DEFAULT_CHARSET;", "modifier": "private static final", "type": "Charset", "declarator": "CHARSET = DataStore.DEFAULT_CHARSET", "var_name": "CHARSET"}, {"original_string": "private static final URL DATA_URL = CachingXmlDataStoreTest.class.getClassLoader().getResource(\"uas_older.xml\");", "modifier": "private static final", "type": "URL", "declarator": "DATA_URL = CachingXmlDataStoreTest.class.getClassLoader().getResource(\"uas_older.xml\")", "var_name": "DATA_URL"}, {"original_string": "private static final Logger LOG = LoggerFactory.getLogger(CachingXmlDataStoreTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(CachingXmlDataStoreTest.class)", "var_name": "LOG"}, {"original_string": "private static final URL UNREACHABLE_URL = UrlUtil.build(\"http://unreachable.local/\");", "modifier": "private static final", "type": "URL", "declarator": "UNREACHABLE_URL = UrlUtil.build(\"http://unreachable.local/\")", "var_name": "UNREACHABLE_URL"}, {"original_string": "private static final URL VERSION_URL = CachingXmlDataStoreTest.class.getClassLoader().getResource(\"uas_older.version\");", "modifier": "private static final", "type": "URL", "declarator": "VERSION_URL = CachingXmlDataStoreTest.class.getClassLoader().getResource(\"uas_older.version\")", "var_name": "VERSION_URL"}, {"original_string": "private DataStore fallback;", "modifier": "private", "type": "DataStore", "declarator": "fallback", "var_name": "fallback"}, {"original_string": "@Rule\n\tpublic final TemporaryFolder folder = new TemporaryFolder();", "modifier": "@Rule\n\tpublic final", "type": "TemporaryFolder", "declarator": "folder = new TemporaryFolder()", "var_name": "folder"}], "file": "modules/uadetector-core/src/test/java/net/sf/uadetector/datastore/CachingXmlDataStoreTest.java"}, "test_case": {"identifier": "createCachingXmlDataStore_dataUrl_null", "parameters": "()", "modifiers": "@Test(expected = IllegalNullArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalNullArgumentException.class)\n\tpublic void createCachingXmlDataStore_dataUrl_null() throws IOException {\n\t\tCachingXmlDataStore.createCachingXmlDataStore(folder.newFile(\"uas_test.xml\"), null, VERSION_URL, CHARSET, fallback);\n\t}", "signature": "void createCachingXmlDataStore_dataUrl_null()", "full_signature": "@Test(expected = IllegalNullArgumentException.class) public void createCachingXmlDataStore_dataUrl_null()", "class_method_signature": "CachingXmlDataStoreTest.createCachingXmlDataStore_dataUrl_null()", "testcase": true, "constructor": false, "invocations": ["createCachingXmlDataStore", "newFile"]}, "focal_class": {"identifier": "CachingXmlDataStore", "superclass": "extends AbstractRefreshableDataStore", "interfaces": "", "fields": [{"original_string": "private static final String CACHE_DIR = System.getProperty(\"java.io.tmpdir\");", "modifier": "private static final", "type": "String", "declarator": "CACHE_DIR = System.getProperty(\"java.io.tmpdir\")", "var_name": "CACHE_DIR"}, {"original_string": "private static final Logger LOG = LoggerFactory.getLogger(CachingXmlDataStore.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(CachingXmlDataStore.class)", "var_name": "LOG"}, {"original_string": "private static final String MSG_CACHE_FILE_IS_EMPTY = \"The cache file is empty. The given UAS data source will be imported.\";", "modifier": "private static final", "type": "String", "declarator": "MSG_CACHE_FILE_IS_EMPTY = \"The cache file is empty. The given UAS data source will be imported.\"", "var_name": "MSG_CACHE_FILE_IS_EMPTY"}, {"original_string": "private static final String MSG_CACHE_FILE_IS_FILLED = \"The cache file is filled and will be imported.\";", "modifier": "private static final", "type": "String", "declarator": "MSG_CACHE_FILE_IS_FILLED = \"The cache file is filled and will be imported.\"", "var_name": "MSG_CACHE_FILE_IS_FILLED"}, {"original_string": "private static final String MSG_CACHE_FILE_IS_DAMAGED = \"The cache file '%s' is damaged and must be removed manually.\";", "modifier": "private static final", "type": "String", "declarator": "MSG_CACHE_FILE_IS_DAMAGED = \"The cache file '%s' is damaged and must be removed manually.\"", "var_name": "MSG_CACHE_FILE_IS_DAMAGED"}, {"original_string": "private static final String MSG_CACHE_FILE_IS_DAMAGED_AND_DELETED = \"The cache file '%s' is damaged and has been deleted.\";", "modifier": "private static final", "type": "String", "declarator": "MSG_CACHE_FILE_IS_DAMAGED_AND_DELETED = \"The cache file '%s' is damaged and has been deleted.\"", "var_name": "MSG_CACHE_FILE_IS_DAMAGED_AND_DELETED"}, {"original_string": "private static final String PREFIX = \"uas\";", "modifier": "private static final", "type": "String", "declarator": "PREFIX = \"uas\"", "var_name": "PREFIX"}, {"original_string": "private static final String SUFFIX = \".xml\";", "modifier": "private static final", "type": "String", "declarator": "SUFFIX = \".xml\"", "var_name": "SUFFIX"}], "methods": [{"identifier": "createCachingXmlDataStore", "parameters": "(@Nonnull final URL dataUrl, @Nonnull final URL versionURL, @Nonnull final DataStore fallback)", "modifiers": "@Nonnull public static", "return": "CachingXmlDataStore", "signature": "CachingXmlDataStore createCachingXmlDataStore(@Nonnull final URL dataUrl, @Nonnull final URL versionURL, @Nonnull final DataStore fallback)", "full_signature": "@Nonnull public static CachingXmlDataStore createCachingXmlDataStore(@Nonnull final URL dataUrl, @Nonnull final URL versionURL, @Nonnull final DataStore fallback)", "class_method_signature": "CachingXmlDataStore.createCachingXmlDataStore(@Nonnull final URL dataUrl, @Nonnull final URL versionURL, @Nonnull final DataStore fallback)", "testcase": false, "constructor": false}, {"identifier": "createCachingXmlDataStore", "parameters": "(@Nonnull final DataStore fallback)", "modifiers": "@Deprecated public static", "return": "CachingXmlDataStore", "signature": "CachingXmlDataStore createCachingXmlDataStore(@Nonnull final DataStore fallback)", "full_signature": "@Deprecated public static CachingXmlDataStore createCachingXmlDataStore(@Nonnull final DataStore fallback)", "class_method_signature": "CachingXmlDataStore.createCachingXmlDataStore(@Nonnull final DataStore fallback)", "testcase": false, "constructor": false}, {"identifier": "createCachingXmlDataStore", "parameters": "(@Nonnull final File cacheFile, @Nonnull final DataStore fallback)", "modifiers": "@Nonnull @Deprecated public static", "return": "CachingXmlDataStore", "signature": "CachingXmlDataStore createCachingXmlDataStore(@Nonnull final File cacheFile, @Nonnull final DataStore fallback)", "full_signature": "@Nonnull @Deprecated public static CachingXmlDataStore createCachingXmlDataStore(@Nonnull final File cacheFile, @Nonnull final DataStore fallback)", "class_method_signature": "CachingXmlDataStore.createCachingXmlDataStore(@Nonnull final File cacheFile, @Nonnull final DataStore fallback)", "testcase": false, "constructor": false}, {"identifier": "createCachingXmlDataStore", "parameters": "(@Nonnull final File cacheFile, @Nonnull final URL dataUrl,\n\t\t\t@Nonnull final URL versionUrl, @Nonnull final Charset charset, @Nonnull final DataStore fallback)", "modifiers": "@Nonnull public static", "return": "CachingXmlDataStore", "signature": "CachingXmlDataStore createCachingXmlDataStore(@Nonnull final File cacheFile, @Nonnull final URL dataUrl,\n\t\t\t@Nonnull final URL versionUrl, @Nonnull final Charset charset, @Nonnull final DataStore fallback)", "full_signature": "@Nonnull public static CachingXmlDataStore createCachingXmlDataStore(@Nonnull final File cacheFile, @Nonnull final URL dataUrl,\n\t\t\t@Nonnull final URL versionUrl, @Nonnull final Charset charset, @Nonnull final DataStore fallback)", "class_method_signature": "CachingXmlDataStore.createCachingXmlDataStore(@Nonnull final File cacheFile, @Nonnull final URL dataUrl,\n\t\t\t@Nonnull final URL versionUrl, @Nonnull final Charset charset, @Nonnull final DataStore fallback)", "testcase": false, "constructor": false}, {"identifier": "createCachingXmlDataStore", "parameters": "(@Nonnull final URL dataUrl, @Nonnull final URL versionUrl,\n\t\t\t@Nonnull final Charset charset, @Nonnull final DataStore fallback)", "modifiers": "@Nonnull public static", "return": "CachingXmlDataStore", "signature": "CachingXmlDataStore createCachingXmlDataStore(@Nonnull final URL dataUrl, @Nonnull final URL versionUrl,\n\t\t\t@Nonnull final Charset charset, @Nonnull final DataStore fallback)", "full_signature": "@Nonnull public static CachingXmlDataStore createCachingXmlDataStore(@Nonnull final URL dataUrl, @Nonnull final URL versionUrl,\n\t\t\t@Nonnull final Charset charset, @Nonnull final DataStore fallback)", "class_method_signature": "CachingXmlDataStore.createCachingXmlDataStore(@Nonnull final URL dataUrl, @Nonnull final URL versionUrl,\n\t\t\t@Nonnull final Charset charset, @Nonnull final DataStore fallback)", "testcase": false, "constructor": false}, {"identifier": "deleteCacheFile", "parameters": "(final File cacheFile)", "modifiers": "private static", "return": "void", "signature": "void deleteCacheFile(final File cacheFile)", "full_signature": "private static void deleteCacheFile(final File cacheFile)", "class_method_signature": "CachingXmlDataStore.deleteCacheFile(final File cacheFile)", "testcase": false, "constructor": false}, {"identifier": "findOrCreateCacheFile", "parameters": "()", "modifiers": "@Nonnull public static", "return": "File", "signature": "File findOrCreateCacheFile()", "full_signature": "@Nonnull public static File findOrCreateCacheFile()", "class_method_signature": "CachingXmlDataStore.findOrCreateCacheFile()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "(@Nonnull final File file, @Nonnull final Charset charset)", "modifiers": "private static", "return": "boolean", "signature": "boolean isEmpty(@Nonnull final File file, @Nonnull final Charset charset)", "full_signature": "private static boolean isEmpty(@Nonnull final File file, @Nonnull final Charset charset)", "class_method_signature": "CachingXmlDataStore.isEmpty(@Nonnull final File file, @Nonnull final Charset charset)", "testcase": false, "constructor": false}, {"identifier": "readCacheFileAsFallback", "parameters": "(@Nonnull final DataReader reader, @Nonnull final File cacheFile,\n\t\t\t@Nonnull final Charset charset, @Nonnull final DataStore fallback)", "modifiers": "private static", "return": "DataStore", "signature": "DataStore readCacheFileAsFallback(@Nonnull final DataReader reader, @Nonnull final File cacheFile,\n\t\t\t@Nonnull final Charset charset, @Nonnull final DataStore fallback)", "full_signature": "private static DataStore readCacheFileAsFallback(@Nonnull final DataReader reader, @Nonnull final File cacheFile,\n\t\t\t@Nonnull final Charset charset, @Nonnull final DataStore fallback)", "class_method_signature": "CachingXmlDataStore.readCacheFileAsFallback(@Nonnull final DataReader reader, @Nonnull final File cacheFile,\n\t\t\t@Nonnull final Charset charset, @Nonnull final DataStore fallback)", "testcase": false, "constructor": false}, {"identifier": "CachingXmlDataStore", "parameters": "(@Nonnull final DataReader reader, @Nonnull final URL dataUrl, @Nonnull final URL versionUrl,\n\t\t\t@Nonnull final Charset charset, @Nonnull final File cacheFile, @Nonnull final DataStore fallback)", "modifiers": "private", "return": "", "signature": " CachingXmlDataStore(@Nonnull final DataReader reader, @Nonnull final URL dataUrl, @Nonnull final URL versionUrl,\n\t\t\t@Nonnull final Charset charset, @Nonnull final File cacheFile, @Nonnull final DataStore fallback)", "full_signature": "private  CachingXmlDataStore(@Nonnull final DataReader reader, @Nonnull final URL dataUrl, @Nonnull final URL versionUrl,\n\t\t\t@Nonnull final Charset charset, @Nonnull final File cacheFile, @Nonnull final DataStore fallback)", "class_method_signature": "CachingXmlDataStore.CachingXmlDataStore(@Nonnull final DataReader reader, @Nonnull final URL dataUrl, @Nonnull final URL versionUrl,\n\t\t\t@Nonnull final Charset charset, @Nonnull final File cacheFile, @Nonnull final DataStore fallback)", "testcase": false, "constructor": true}], "file": "modules/uadetector-core/src/main/java/net/sf/uadetector/datastore/CachingXmlDataStore.java"}, "focal_method": {"identifier": "createCachingXmlDataStore", "parameters": "(@Nonnull final URL dataUrl, @Nonnull final URL versionURL, @Nonnull final DataStore fallback)", "modifiers": "@Nonnull public static", "return": "CachingXmlDataStore", "body": "@Nonnull\n\tpublic static CachingXmlDataStore createCachingXmlDataStore(@Nonnull final URL dataUrl, @Nonnull final URL versionURL, @Nonnull final DataStore fallback) {\n\t\treturn createCachingXmlDataStore(findOrCreateCacheFile(), dataUrl, versionURL, DEFAULT_CHARSET,\n\t\t\t\tfallback);\n\t}", "signature": "CachingXmlDataStore createCachingXmlDataStore(@Nonnull final URL dataUrl, @Nonnull final URL versionURL, @Nonnull final DataStore fallback)", "full_signature": "@Nonnull public static CachingXmlDataStore createCachingXmlDataStore(@Nonnull final URL dataUrl, @Nonnull final URL versionURL, @Nonnull final DataStore fallback)", "class_method_signature": "CachingXmlDataStore.createCachingXmlDataStore(@Nonnull final URL dataUrl, @Nonnull final URL versionURL, @Nonnull final DataStore fallback)", "testcase": false, "constructor": false, "invocations": ["createCachingXmlDataStore", "findOrCreateCacheFile"]}, "repository": {"repo_id": 4242485, "url": "https://github.com/arouel/uadetector", "language": "Java", "is_fork": false, "fork_count": 102, "stargazer_count": 231, "size": 7755, "license": "licensed"}}