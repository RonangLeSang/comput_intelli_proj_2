{"test_class": {"identifier": "BrowserOperatingSystemMappingTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/uadetector-core/src/test/java/net/sf/uadetector/internal/data/domain/BrowserOperatingSystemMappingTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testToString() {\n\t\t// reduces only some noise in coverage report\n\t\tfinal BrowserOperatingSystemMapping m = new BrowserOperatingSystemMapping(12345, 98765);\n\t\tassertThat(m.toString()).isEqualTo(\"BrowserOperatingSystemMapping [browserId=12345, operatingSystemId=98765]\");\n\t}", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "BrowserOperatingSystemMappingTest.testToString()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "toString"]}, "focal_class": {"identifier": "BrowserOperatingSystemMapping", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 6074931648810031757L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 6074931648810031757L", "var_name": "serialVersionUID"}, {"original_string": "@Nonnegative\n\tprivate final int browserId;", "modifier": "@Nonnegative\n\tprivate final", "type": "int", "declarator": "browserId", "var_name": "browserId"}, {"original_string": "@Nonnegative\n\tprivate final int operatingSystemId;", "modifier": "@Nonnegative\n\tprivate final", "type": "int", "declarator": "operatingSystemId", "var_name": "operatingSystemId"}], "methods": [{"identifier": "BrowserOperatingSystemMapping", "parameters": "(@Nonnegative final int browserId, @Nonnegative final int operatingSystemId)", "modifiers": "public", "return": "", "signature": " BrowserOperatingSystemMapping(@Nonnegative final int browserId, @Nonnegative final int operatingSystemId)", "full_signature": "public  BrowserOperatingSystemMapping(@Nonnegative final int browserId, @Nonnegative final int operatingSystemId)", "class_method_signature": "BrowserOperatingSystemMapping.BrowserOperatingSystemMapping(@Nonnegative final int browserId, @Nonnegative final int operatingSystemId)", "testcase": false, "constructor": true}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "BrowserOperatingSystemMapping.equals(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "getBrowserId", "parameters": "()", "modifiers": "@Nonnegative public", "return": "int", "signature": "int getBrowserId()", "full_signature": "@Nonnegative public int getBrowserId()", "class_method_signature": "BrowserOperatingSystemMapping.getBrowserId()", "testcase": false, "constructor": false}, {"identifier": "getOperatingSystemId", "parameters": "()", "modifiers": "@Nonnegative public", "return": "int", "signature": "int getOperatingSystemId()", "full_signature": "@Nonnegative public int getOperatingSystemId()", "class_method_signature": "BrowserOperatingSystemMapping.getOperatingSystemId()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "BrowserOperatingSystemMapping.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BrowserOperatingSystemMapping.toString()", "testcase": false, "constructor": false}], "file": "modules/uadetector-core/src/main/java/net/sf/uadetector/internal/data/domain/BrowserOperatingSystemMapping.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n\tpublic String toString() {\n\t\tfinal StringBuilder builder = new StringBuilder();\n\t\tbuilder.append(\"BrowserOperatingSystemMapping [browserId=\");\n\t\tbuilder.append(browserId);\n\t\tbuilder.append(\", operatingSystemId=\");\n\t\tbuilder.append(operatingSystemId);\n\t\tbuilder.append(\"]\");\n\t\treturn builder.toString();\n\t}", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BrowserOperatingSystemMapping.toString()", "testcase": false, "constructor": false, "invocations": ["append", "append", "append", "append", "append", "toString"]}, "repository": {"repo_id": 4242485, "url": "https://github.com/arouel/uadetector", "language": "Java", "is_fork": false, "fork_count": 102, "stargazer_count": 231, "size": 7755, "license": "licensed"}}