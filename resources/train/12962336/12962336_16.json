{"test_class": {"identifier": "TransactionResultTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final JSONObject transaction_notification_message;", "modifier": "public static final", "type": "JSONObject", "declarator": "transaction_notification_message", "var_name": "transaction_notification_message"}, {"original_string": "public static final JSONObject account_tx_result;", "modifier": "public static final", "type": "JSONObject", "declarator": "account_tx_result", "var_name": "account_tx_result"}, {"original_string": "public static final JSONObject account_tx_binary_result;", "modifier": "public static final", "type": "JSONObject", "declarator": "account_tx_binary_result", "var_name": "account_tx_binary_result"}, {"original_string": "public static final JSONObject request_tx_result;", "modifier": "public static final", "type": "JSONObject", "declarator": "request_tx_result", "var_name": "request_tx_result"}, {"original_string": "public static final JSONObject request_tx_binary_result;", "modifier": "public static final", "type": "JSONObject", "declarator": "request_tx_binary_result", "var_name": "request_tx_binary_result"}, {"original_string": "public static final JSONObject ledger_expanded;", "modifier": "public static final", "type": "JSONObject", "declarator": "ledger_expanded", "var_name": "ledger_expanded"}], "file": "ripple-core/src/test/java/com/ripple/core/types/known/tx/result/TransactionResultTest.java"}, "test_case": {"identifier": "testRequestTxResult", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRequestTxResult() {\n        TransactionResult tr = TransactionResult.fromJSON(request_tx_result);\n        assertHelper(tr);\n\n        tr = new TransactionResult(request_tx_result, Source.request_tx_result);\n        assertHelper(tr);\n    }", "signature": "void testRequestTxResult()", "full_signature": "@Test public void testRequestTxResult()", "class_method_signature": "TransactionResultTest.testRequestTxResult()", "testcase": true, "constructor": false, "invocations": ["fromJSON", "assertHelper", "assertHelper"]}, "focal_class": {"identifier": "TransactionResult", "superclass": "", "interfaces": "implements Comparable<TransactionResult>", "fields": [{"original_string": "public EngineResult engineResult;", "modifier": "public", "type": "EngineResult", "declarator": "engineResult", "var_name": "engineResult"}, {"original_string": "public UInt32 ledgerIndex;", "modifier": "public", "type": "UInt32", "declarator": "ledgerIndex", "var_name": "ledgerIndex"}, {"original_string": "public Hash256 hash;", "modifier": "public", "type": "Hash256", "declarator": "hash", "var_name": "hash"}, {"original_string": "@Deprecated\n    public Hash256 ledgerHash;", "modifier": "@Deprecated\n    public", "type": "Hash256", "declarator": "ledgerHash", "var_name": "ledgerHash"}, {"original_string": "@Deprecated\n    public boolean validated;", "modifier": "@Deprecated\n    public", "type": "boolean", "declarator": "validated", "var_name": "validated"}, {"original_string": "public Transaction txn;", "modifier": "public", "type": "Transaction", "declarator": "txn", "var_name": "txn"}, {"original_string": "public TransactionMeta  meta;", "modifier": "public", "type": "TransactionMeta", "declarator": "meta", "var_name": "meta"}, {"original_string": "@Deprecated\n    public JSONObject       message;", "modifier": "@Deprecated\n    public", "type": "JSONObject", "declarator": "message", "var_name": "message"}], "methods": [{"identifier": "TransactionResult", "parameters": "(long ledgerIndex, Hash256 hash, Transaction txn, TransactionMeta meta)", "modifiers": "public", "return": "", "signature": " TransactionResult(long ledgerIndex, Hash256 hash, Transaction txn, TransactionMeta meta)", "full_signature": "public  TransactionResult(long ledgerIndex, Hash256 hash, Transaction txn, TransactionMeta meta)", "class_method_signature": "TransactionResult.TransactionResult(long ledgerIndex, Hash256 hash, Transaction txn, TransactionMeta meta)", "testcase": false, "constructor": true}, {"identifier": "isPayment", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isPayment()", "full_signature": "public boolean isPayment()", "class_method_signature": "TransactionResult.isPayment()", "testcase": false, "constructor": false}, {"identifier": "transactionType", "parameters": "()", "modifiers": "public", "return": "TransactionType", "signature": "TransactionType transactionType()", "full_signature": "public TransactionType transactionType()", "class_method_signature": "TransactionResult.transactionType()", "testcase": false, "constructor": false}, {"identifier": "createdAccount", "parameters": "()", "modifiers": "public", "return": "AccountID", "signature": "AccountID createdAccount()", "full_signature": "public AccountID createdAccount()", "class_method_signature": "TransactionResult.createdAccount()", "testcase": false, "constructor": false}, {"identifier": "modifiedRoots", "parameters": "()", "modifiers": "public", "return": "Map<AccountID, STObject>", "signature": "Map<AccountID, STObject> modifiedRoots()", "full_signature": "public Map<AccountID, STObject> modifiedRoots()", "class_method_signature": "TransactionResult.modifiedRoots()", "testcase": false, "constructor": false}, {"identifier": "initiatingAccount", "parameters": "()", "modifiers": "public", "return": "AccountID", "signature": "AccountID initiatingAccount()", "full_signature": "public AccountID initiatingAccount()", "class_method_signature": "TransactionResult.initiatingAccount()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(TransactionResult o2)", "modifiers": "public", "return": "int", "signature": "int compareTo(TransactionResult o2)", "full_signature": "public int compareTo(TransactionResult o2)", "class_method_signature": "TransactionResult.compareTo(TransactionResult o2)", "testcase": false, "constructor": false}, {"identifier": "fromJSON", "parameters": "(JSONObject json)", "modifiers": "public static", "return": "TransactionResult", "signature": "TransactionResult fromJSON(JSONObject json)", "full_signature": "public static TransactionResult fromJSON(JSONObject json)", "class_method_signature": "TransactionResult.fromJSON(JSONObject json)", "testcase": false, "constructor": false}, {"identifier": "parseObject", "parameters": "(JSONObject json, String key, boolean binary)", "modifiers": "private static", "return": "STObject", "signature": "STObject parseObject(JSONObject json, String key, boolean binary)", "full_signature": "private static STObject parseObject(JSONObject json, String key, boolean binary)", "class_method_signature": "TransactionResult.parseObject(JSONObject json, String key, boolean binary)", "testcase": false, "constructor": false}, {"identifier": "TransactionResult", "parameters": "(JSONObject json, Source resultMessageSource)", "modifiers": "public", "return": "", "signature": " TransactionResult(JSONObject json, Source resultMessageSource)", "full_signature": "public  TransactionResult(JSONObject json, Source resultMessageSource)", "class_method_signature": "TransactionResult.TransactionResult(JSONObject json, Source resultMessageSource)", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TransactionResult.toString()", "testcase": false, "constructor": false}, {"identifier": "toJSON", "parameters": "()", "modifiers": "public", "return": "JSONObject", "signature": "JSONObject toJSON()", "full_signature": "public JSONObject toJSON()", "class_method_signature": "TransactionResult.toJSON()", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "public", "return": "TransactionResult", "signature": "TransactionResult copy()", "full_signature": "public TransactionResult copy()", "class_method_signature": "TransactionResult.copy()", "testcase": false, "constructor": false}, {"identifier": "toJSONBinary", "parameters": "()", "modifiers": "public", "return": "JSONObject", "signature": "JSONObject toJSONBinary()", "full_signature": "public JSONObject toJSONBinary()", "class_method_signature": "TransactionResult.toJSONBinary()", "testcase": false, "constructor": false}], "file": "ripple-core/src/main/java/com/ripple/core/types/known/tx/result/TransactionResult.java"}, "focal_method": {"identifier": "fromJSON", "parameters": "(JSONObject json)", "modifiers": "public static", "return": "TransactionResult", "body": "public static TransactionResult fromJSON(JSONObject json) {\n        boolean binary;\n\n        String metaKey = json.has(\"meta\") ? \"meta\" : \"metaData\";\n\n        String txKey = json.has(\"transaction\") ? \"transaction\" :\n                       json.has(\"tx\") ? \"tx\" :\n                       json.has(\"tx_blob\") ? \"tx_blob\" : null;\n\n        if (txKey == null && !json.has(\"TransactionType\")) {\n            throw new RuntimeException(\"This json isn't a transaction \" + json);\n        }\n\n        binary = txKey != null && json.get(txKey) instanceof String;\n\n        Transaction txn;\n        if (txKey == null) {\n            // This should parse the `hash` field\n            txn = (Transaction) STObject.fromJSONObject(json);\n        } else {\n            txn = (Transaction) parseObject(json, txKey, binary);\n            if (json.has(\"hash\")) {\n                txn.put(Hash256.hash, Hash256.fromHex(json.getString(\"hash\")));\n            } else if (binary) {\n                byte[] decode = B16.decode(json.getString(txKey));\n                txn.put(Hash256.hash, Index.transactionID(decode));\n            }\n        }\n\n        TransactionMeta meta = (TransactionMeta) parseObject(json, metaKey, binary);\n        long ledger_index = json.optLong(\"ledger_index\", 0);\n        if (ledger_index == 0 && !binary) {\n            ledger_index = json.getJSONObject(txKey).getLong(\"ledger_index\");\n        }\n\n        TransactionResult tr = new TransactionResult(ledger_index, txn.get(Hash256.hash), txn, meta);\n        if (json.has(\"ledger_hash\")) {\n            tr.ledgerHash = Hash256.fromHex(json.getString(\"ledger_hash\"));\n        }\n        return tr;\n    }", "signature": "TransactionResult fromJSON(JSONObject json)", "full_signature": "public static TransactionResult fromJSON(JSONObject json)", "class_method_signature": "TransactionResult.fromJSON(JSONObject json)", "testcase": false, "constructor": false, "invocations": ["has", "has", "has", "has", "has", "get", "fromJSONObject", "parseObject", "has", "put", "fromHex", "getString", "decode", "getString", "put", "transactionID", "parseObject", "optLong", "getLong", "getJSONObject", "get", "has", "fromHex", "getString"]}, "repository": {"repo_id": 12962336, "url": "https://github.com/ripple-unmaintained/ripple-lib-java", "language": "Java", "is_fork": false, "fork_count": 104, "stargazer_count": 124, "size": 9796, "license": "licensed"}}