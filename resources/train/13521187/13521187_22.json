{"test_class": {"identifier": "ModelListTest", "superclass": "", "interfaces": "", "fields": [], "file": "library/src/test/java/se/emilsjolander/sprinkles/ModelListTest.java"}, "test_case": {"identifier": "fromCursorList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void fromCursorList() {\n        MatrixCursor c = new MatrixCursor(new String[]{\"title\", \"id\"});\n        c.addRow(new Object[]{\"title1\", 1});\n        c.addRow(new Object[]{\"title2\", 2});\n        c.addRow(new Object[]{\"title3\", 3});\n        CursorList<TestModel> cursorList = new CursorList<TestModel>(c, TestModel.class);\n\n        ModelList<TestModel> modelList = ModelList.from(cursorList);\n        assertEquals(3, modelList.size());\n        assertEquals(\"title1\", modelList.get(0).title);\n        assertEquals(\"title2\", modelList.get(1).title);\n        assertEquals(\"title3\", modelList.get(2).title);\n    }", "signature": "void fromCursorList()", "full_signature": "@Test public void fromCursorList()", "class_method_signature": "ModelListTest.fromCursorList()", "testcase": true, "constructor": false, "invocations": ["addRow", "addRow", "addRow", "from", "assertEquals", "size", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "ModelList", "superclass": "extends ArrayList<E>", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 9111033070491580889L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 9111033070491580889L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "from", "parameters": "(CursorList<E> cursorList)", "modifiers": "public static", "return": "ModelList<E>", "signature": "ModelList<E> from(CursorList<E> cursorList)", "full_signature": "public static ModelList<E> from(CursorList<E> cursorList)", "class_method_signature": "ModelList.from(CursorList<E> cursorList)", "testcase": false, "constructor": false}, {"identifier": "ModelList", "parameters": "()", "modifiers": "public", "return": "", "signature": " ModelList()", "full_signature": "public  ModelList()", "class_method_signature": "ModelList.ModelList()", "testcase": false, "constructor": true}, {"identifier": "ModelList", "parameters": "(int capacity)", "modifiers": "public", "return": "", "signature": " ModelList(int capacity)", "full_signature": "public  ModelList(int capacity)", "class_method_signature": "ModelList.ModelList(int capacity)", "testcase": false, "constructor": true}, {"identifier": "ModelList", "parameters": "(Collection<? extends E> collection)", "modifiers": "public", "return": "", "signature": " ModelList(Collection<? extends E> collection)", "full_signature": "public  ModelList(Collection<? extends E> collection)", "class_method_signature": "ModelList.ModelList(Collection<? extends E> collection)", "testcase": false, "constructor": true}, {"identifier": "saveAll", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean saveAll()", "full_signature": "public boolean saveAll()", "class_method_signature": "ModelList.saveAll()", "testcase": false, "constructor": false}, {"identifier": "saveAll", "parameters": "(Transaction t)", "modifiers": "public", "return": "boolean", "signature": "boolean saveAll(Transaction t)", "full_signature": "public boolean saveAll(Transaction t)", "class_method_signature": "ModelList.saveAll(Transaction t)", "testcase": false, "constructor": false}, {"identifier": "saveAllAsync", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void saveAllAsync()", "full_signature": "public void saveAllAsync()", "class_method_signature": "ModelList.saveAllAsync()", "testcase": false, "constructor": false}, {"identifier": "saveAllAsync", "parameters": "(final OnAllSavedCallback callback)", "modifiers": "public", "return": "void", "signature": "void saveAllAsync(final OnAllSavedCallback callback)", "full_signature": "public void saveAllAsync(final OnAllSavedCallback callback)", "class_method_signature": "ModelList.saveAllAsync(final OnAllSavedCallback callback)", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void deleteAll()", "full_signature": "public void deleteAll()", "class_method_signature": "ModelList.deleteAll()", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "(Transaction t)", "modifiers": "public", "return": "void", "signature": "void deleteAll(Transaction t)", "full_signature": "public void deleteAll(Transaction t)", "class_method_signature": "ModelList.deleteAll(Transaction t)", "testcase": false, "constructor": false}, {"identifier": "deleteAllAsync", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void deleteAllAsync()", "full_signature": "public void deleteAllAsync()", "class_method_signature": "ModelList.deleteAllAsync()", "testcase": false, "constructor": false}, {"identifier": "deleteAllAsync", "parameters": "(final OnAllDeletedCallback callback)", "modifiers": "public", "return": "void", "signature": "void deleteAllAsync(final OnAllDeletedCallback callback)", "full_signature": "public void deleteAllAsync(final OnAllDeletedCallback callback)", "class_method_signature": "ModelList.deleteAllAsync(final OnAllDeletedCallback callback)", "testcase": false, "constructor": false}], "file": "library/src/main/java/se/emilsjolander/sprinkles/ModelList.java"}, "focal_method": {"identifier": "from", "parameters": "(CursorList<E> cursorList)", "modifiers": "public static", "return": "ModelList<E>", "body": "public static <E extends Model> ModelList<E> from(CursorList<E> cursorList) {\n        return new ModelList<E>(cursorList.asList());\n    }", "signature": "ModelList<E> from(CursorList<E> cursorList)", "full_signature": "public static ModelList<E> from(CursorList<E> cursorList)", "class_method_signature": "ModelList.from(CursorList<E> cursorList)", "testcase": false, "constructor": false, "invocations": ["asList"]}, "repository": {"repo_id": 13521187, "url": "https://github.com/emilsjolander/sprinkles", "language": "Java", "is_fork": false, "fork_count": 85, "stargazer_count": 790, "size": 2700, "license": "licensed"}}