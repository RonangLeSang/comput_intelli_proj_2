{"test_class": {"identifier": "TokenTest", "superclass": "extends EduArteTestCase", "interfaces": "", "fields": [{"original_string": "private Token token;", "modifier": "private", "type": "Token", "declarator": "token", "var_name": "token"}], "file": "eduarte/core/src/test/java/nl/topicus/eduarte/entities/security/authentication/vasco/TokenTest.java"}, "test_case": {"identifier": "applicatienaamWordtVerwijderdVanSerienummer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void applicatienaamWordtVerwijderdVanSerienummer()\n\t{\n\t\tassertThat(token.getSerienummer(), is(\"123456789\"));\n\t}", "signature": "void applicatienaamWordtVerwijderdVanSerienummer()", "full_signature": "@Test public void applicatienaamWordtVerwijderdVanSerienummer()", "class_method_signature": "TokenTest.applicatienaamWordtVerwijderdVanSerienummer()", "testcase": true, "constructor": false, "invocations": ["assertThat", "getSerienummer", "is"]}, "focal_class": {"identifier": "Token", "superclass": "extends InstellingEntiteit", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "@Column(nullable = false, length = 32)\n\t@RestrictedAccess(hasSetter = false)\n\t@AutoForm(readOnly = true, label = \"Serienummer\", description = \"Het serienummer van het token (zie achterkant van het apparaat)\")\n\tprivate String serienummer;", "modifier": "@Column(nullable = false, length = 32)\n\t@RestrictedAccess(hasSetter = false)\n\t@AutoForm(readOnly = true, label = \"Serienummer\", description = \"Het serienummer van het token (zie achterkant van het apparaat)\")\n\tprivate", "type": "String", "declarator": "serienummer", "var_name": "serienummer"}, {"original_string": "@Column(nullable = false, length = 32)\n\t@RestrictedAccess(hasSetter = false, hasGetter = false)\n\tprivate String applicatie;", "modifier": "@Column(nullable = false, length = 32)\n\t@RestrictedAccess(hasSetter = false, hasGetter = false)\n\tprivate", "type": "String", "declarator": "applicatie", "var_name": "applicatie"}, {"original_string": "@Column(nullable = false, length = 248)\n\t@RestrictedAccess(hasSetter = false, hasGetter = false)\n\tprivate String initieleData;", "modifier": "@Column(nullable = false, length = 248)\n\t@RestrictedAccess(hasSetter = false, hasGetter = false)\n\tprivate", "type": "String", "declarator": "initieleData", "var_name": "initieleData"}, {"original_string": "@Column(nullable = false, length = 248)\n\t@RestrictedAccess(hasSetter = false, hasGetter = false)\n\tprivate String digipassData;", "modifier": "@Column(nullable = false, length = 248)\n\t@RestrictedAccess(hasSetter = false, hasGetter = false)\n\tprivate", "type": "String", "declarator": "digipassData", "var_name": "digipassData"}, {"original_string": "@Column(nullable = false)\n\t@Enumerated(EnumType.STRING)\n\t@RestrictedAccess(hasSetter = false)\n\t@AutoForm(readOnly = true, label = \"Status\", description = \"De Status van dit token\")\n\tprivate TokenStatus status;", "modifier": "@Column(nullable = false)\n\t@Enumerated(EnumType.STRING)\n\t@RestrictedAccess(hasSetter = false)\n\t@AutoForm(readOnly = true, label = \"Status\", description = \"De Status van dit token\")\n\tprivate", "type": "TokenStatus", "declarator": "status", "var_name": "status"}, {"original_string": "@ManyToOne(targetEntity = Account.class)\n\t@JoinColumn(name = \"gebruiker\", nullable = true)\n\t@Index(name = \"IDX_VASCOTOKEN_ACCOUNT\")\n\t@RestrictedAccess(hasSetter = false)\n\t@AutoForm(editorClass = AccountSearchEditor.class, label = \"Gebruiker\", description = \"De gebruiker die dit token bezit\")\n\tprivate Account gebruiker;", "modifier": "@ManyToOne(targetEntity = Account.class)\n\t@JoinColumn(name = \"gebruiker\", nullable = true)\n\t@Index(name = \"IDX_VASCOTOKEN_ACCOUNT\")\n\t@RestrictedAccess(hasSetter = false)\n\t@AutoForm(editorClass = AccountSearchEditor.class, label = \"Gebruiker\", description = \"De gebruiker die dit token bezit\")\n\tprivate", "type": "Account", "declarator": "gebruiker", "var_name": "gebruiker"}], "methods": [{"identifier": "Token", "parameters": "(String serienummer, String applicatie, String blob)", "modifiers": "public", "return": "", "signature": " Token(String serienummer, String applicatie, String blob)", "full_signature": "public  Token(String serienummer, String applicatie, String blob)", "class_method_signature": "Token.Token(String serienummer, String applicatie, String blob)", "testcase": false, "constructor": true}, {"identifier": "verwijderApplicatieVanSerienummer", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void verwijderApplicatieVanSerienummer()", "full_signature": "private void verwijderApplicatieVanSerienummer()", "class_method_signature": "Token.verwijderApplicatieVanSerienummer()", "testcase": false, "constructor": false}, {"identifier": "Token", "parameters": "()", "modifiers": "protected", "return": "", "signature": " Token()", "full_signature": "protected  Token()", "class_method_signature": "Token.Token()", "testcase": false, "constructor": true}, {"identifier": "verifieerPassword", "parameters": "(String password)", "modifiers": "public", "return": "boolean", "signature": "boolean verifieerPassword(String password)", "full_signature": "public boolean verifieerPassword(String password)", "class_method_signature": "Token.verifieerPassword(String password)", "testcase": false, "constructor": false}, {"identifier": "geefUit", "parameters": "(Account gebruiker)", "modifiers": "@SuppressWarnings(\"hiding\") public", "return": "void", "signature": "void geefUit(Account gebruiker)", "full_signature": "@SuppressWarnings(\"hiding\") public void geefUit(Account gebruiker)", "class_method_signature": "Token.geefUit(Account gebruiker)", "testcase": false, "constructor": false}, {"identifier": "neemIn", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void neemIn()", "full_signature": "public void neemIn()", "class_method_signature": "Token.neemIn()", "testcase": false, "constructor": false}, {"identifier": "meldDefect", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void meldDefect()", "full_signature": "public void meldDefect()", "class_method_signature": "Token.meldDefect()", "testcase": false, "constructor": false}, {"identifier": "repareer", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void repareer()", "full_signature": "public void repareer()", "class_method_signature": "Token.repareer()", "testcase": false, "constructor": false}, {"identifier": "blokkeer", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void blokkeer()", "full_signature": "public void blokkeer()", "class_method_signature": "Token.blokkeer()", "testcase": false, "constructor": false}, {"identifier": "deblokkeer", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void deblokkeer()", "full_signature": "public void deblokkeer()", "class_method_signature": "Token.deblokkeer()", "testcase": false, "constructor": false}, {"identifier": "assertStatus", "parameters": "(TokenStatus andereStatus)", "modifiers": "private", "return": "void", "signature": "void assertStatus(TokenStatus andereStatus)", "full_signature": "private void assertStatus(TokenStatus andereStatus)", "class_method_signature": "Token.assertStatus(TokenStatus andereStatus)", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "()", "modifiers": "public", "return": "TokenStatus", "signature": "TokenStatus getStatus()", "full_signature": "public TokenStatus getStatus()", "class_method_signature": "Token.getStatus()", "testcase": false, "constructor": false}, {"identifier": "getGebruiker", "parameters": "()", "modifiers": "public", "return": "Account", "signature": "Account getGebruiker()", "full_signature": "public Account getGebruiker()", "class_method_signature": "Token.getGebruiker()", "testcase": false, "constructor": false}, {"identifier": "getVascoSerienummer", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getVascoSerienummer()", "full_signature": "public String getVascoSerienummer()", "class_method_signature": "Token.getVascoSerienummer()", "testcase": false, "constructor": false}, {"identifier": "getSerienummer", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSerienummer()", "full_signature": "public String getSerienummer()", "class_method_signature": "Token.getSerienummer()", "testcase": false, "constructor": false}], "file": "eduarte/core/src/main/java/nl/topicus/eduarte/entities/security/authentication/vasco/Token.java"}, "focal_method": {"identifier": "getSerienummer", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getSerienummer()\n\t{\n\t\treturn serienummer;\n\t}", "signature": "String getSerienummer()", "full_signature": "public String getSerienummer()", "class_method_signature": "Token.getSerienummer()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9812178, "url": "https://github.com/topicusonderwijs/tribe-krd-opensource", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 6540, "license": "licensed"}}