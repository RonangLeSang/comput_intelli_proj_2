{"test_class": {"identifier": "ClientConnectionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Exporter            exporter;", "modifier": "private", "type": "Exporter", "declarator": "exporter", "var_name": "exporter"}, {"original_string": "private BlobStoreConnection con;", "modifier": "private", "type": "BlobStoreConnection", "declarator": "con", "var_name": "con"}, {"original_string": "private ServerConnection    sc;", "modifier": "private", "type": "ServerConnection", "declarator": "sc", "var_name": "sc"}, {"original_string": "private ClientConnection    cc;", "modifier": "private", "type": "ClientConnection", "declarator": "cc", "var_name": "cc"}], "file": "akubra-rmi/src/test/java/org/akubraproject/rmi/client/ClientConnectionTest.java"}, "test_case": {"identifier": "testClose", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testClose() throws IOException {\n    ServerConnection sc = new ServerConnection(con, exporter);\n    ClientConnection cc =\n      new ClientConnection(this.cc.getBlobStore(), new StreamManager(),\n                           (RemoteConnection) sc.getExported());\n\n    reset(con);\n    con.close();\n    replay(con);\n\n    cc.close();\n    verify(con);\n  }", "signature": "void testClose()", "full_signature": "@Test public void testClose()", "class_method_signature": "ClientConnectionTest.testClose()", "testcase": true, "constructor": false, "invocations": ["getBlobStore", "getExported", "reset", "close", "replay", "close", "verify"]}, "focal_class": {"identifier": "ClientConnection", "superclass": "extends AbstractBlobStoreConnection", "interfaces": "", "fields": [{"original_string": "private static final Logger       log    = LoggerFactory.getLogger(ClientConnection.class);", "modifier": "private static final", "type": "Logger", "declarator": "log    = LoggerFactory.getLogger(ClientConnection.class)", "var_name": "log"}, {"original_string": "private final RemoteConnection remote;", "modifier": "private final", "type": "RemoteConnection", "declarator": "remote", "var_name": "remote"}, {"original_string": "public static int ITERATOR_BATCH_SIZE = 100;", "modifier": "public static", "type": "int", "declarator": "ITERATOR_BATCH_SIZE = 100", "var_name": "ITERATOR_BATCH_SIZE"}], "methods": [{"identifier": "ClientConnection", "parameters": "(BlobStore store, StreamManager strMgr, RemoteConnection con)", "modifiers": "public", "return": "", "signature": " ClientConnection(BlobStore store, StreamManager strMgr, RemoteConnection con)", "full_signature": "public  ClientConnection(BlobStore store, StreamManager strMgr, RemoteConnection con)", "class_method_signature": "ClientConnection.ClientConnection(BlobStore store, StreamManager strMgr, RemoteConnection con)", "testcase": false, "constructor": true}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "ClientConnection.close()", "testcase": false, "constructor": false}, {"identifier": "getBlob", "parameters": "(URI blobId, Map<String, String> hints)", "modifiers": "@Override public", "return": "Blob", "signature": "Blob getBlob(URI blobId, Map<String, String> hints)", "full_signature": "@Override public Blob getBlob(URI blobId, Map<String, String> hints)", "class_method_signature": "ClientConnection.getBlob(URI blobId, Map<String, String> hints)", "testcase": false, "constructor": false}, {"identifier": "getBlob", "parameters": "(InputStream in, long estimatedSize, Map<String, String> hints)", "modifiers": "@Override public", "return": "Blob", "signature": "Blob getBlob(InputStream in, long estimatedSize, Map<String, String> hints)", "full_signature": "@Override public Blob getBlob(InputStream in, long estimatedSize, Map<String, String> hints)", "class_method_signature": "ClientConnection.getBlob(InputStream in, long estimatedSize, Map<String, String> hints)", "testcase": false, "constructor": false}, {"identifier": "listBlobIds", "parameters": "(String filterPrefix)", "modifiers": "@Override public", "return": "Iterator<URI>", "signature": "Iterator<URI> listBlobIds(String filterPrefix)", "full_signature": "@Override public Iterator<URI> listBlobIds(String filterPrefix)", "class_method_signature": "ClientConnection.listBlobIds(String filterPrefix)", "testcase": false, "constructor": false}, {"identifier": "sync", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void sync()", "full_signature": "@Override public void sync()", "class_method_signature": "ClientConnection.sync()", "testcase": false, "constructor": false}], "file": "akubra-rmi/src/main/java/org/akubraproject/rmi/client/ClientConnection.java"}, "focal_method": {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void close() {\n    if (!isClosed()) {\n      super.close();\n\n      try {\n        remote.close();\n      } catch (IOException e) {\n        log.warn(\"Failed to close connection on remote server.\", e);\n      }\n    }\n  }", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "ClientConnection.close()", "testcase": false, "constructor": false, "invocations": ["isClosed", "close", "close", "warn"]}, "repository": {"repo_id": 1146205, "url": "https://github.com/akubra/akubra", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 11, "size": 5955, "license": "licensed"}}