{"test_class": {"identifier": "CreatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Class<Foo> fooType = Foo.class;", "modifier": "", "type": "Class<Foo>", "declarator": "fooType = Foo.class", "var_name": "fooType"}, {"original_string": "Class<Foo2> fooType2 = Foo2.class;", "modifier": "", "type": "Class<Foo2>", "declarator": "fooType2 = Foo2.class", "var_name": "fooType2"}], "file": "boon/src/test/java/org/boon/di/CreatorTest.java"}, "test_case": {"identifier": "testCreateWithInstance", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateWithInstance() {\n\n        Bar bar = new Bar();\n        bar.name = \"baz\";\n\n        Foo foo = create( fooType, map( \"bar\", bar ) );\n\n        boolean ok = foo != null || die();\n        ok = foo.bar != null || die();\n        ok = foo.bar.name.equals( \"baz\" )  || die();\n\n    }", "signature": "void testCreateWithInstance()", "full_signature": "@Test public void testCreateWithInstance()", "class_method_signature": "CreatorTest.testCreateWithInstance()", "testcase": true, "constructor": false, "invocations": ["create", "map", "die", "die", "equals", "die"]}, "focal_class": {"identifier": "Creator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "create", "parameters": "(Class<T> type, Map<?, ?> map)", "modifiers": "public static", "return": "T", "signature": "T create(Class<T> type, Map<?, ?> map)", "full_signature": "public static T create(Class<T> type, Map<?, ?> map)", "class_method_signature": "Creator.create(Class<T> type, Map<?, ?> map)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Class<T> type, Context context)", "modifiers": "public static", "return": "T", "signature": "T create(Class<T> type, Context context)", "full_signature": "public static T create(Class<T> type, Context context)", "class_method_signature": "Creator.create(Class<T> type, Context context)", "testcase": false, "constructor": false}, {"identifier": "newOf", "parameters": "( Class<T> type, Object... args )", "modifiers": "public static", "return": "T", "signature": "T newOf( Class<T> type, Object... args )", "full_signature": "public static T newOf( Class<T> type, Object... args )", "class_method_signature": "Creator.newOf( Class<T> type, Object... args )", "testcase": false, "constructor": false}], "file": "boon/src/main/java/org/boon/di/Creator.java"}, "focal_method": {"identifier": "create", "parameters": "(Class<T> type, Map<?, ?> map)", "modifiers": "public static", "return": "T", "body": "public static <T> T create(Class<T> type, Map<?, ?> map) {\n      Context context = DependencyInjection.fromMap(map);\n      context.add( DependencyInjection.classes(type) );\n      return context.get( type );\n    }", "signature": "T create(Class<T> type, Map<?, ?> map)", "full_signature": "public static T create(Class<T> type, Map<?, ?> map)", "class_method_signature": "Creator.create(Class<T> type, Map<?, ?> map)", "testcase": false, "constructor": false, "invocations": ["fromMap", "add", "classes", "get"]}, "repository": {"repo_id": 13580866, "url": "https://github.com/boonproject/boon", "language": "Java", "is_fork": false, "fork_count": 103, "stargazer_count": 512, "size": 7401, "license": "licensed"}}