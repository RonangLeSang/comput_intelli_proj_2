{"test_class": {"identifier": "MapObjectConversionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Employee employee;", "modifier": "", "type": "Employee", "declarator": "employee", "var_name": "employee"}, {"original_string": "Employee boss = new Employee(1);", "modifier": "", "type": "Employee", "declarator": "boss = new Employee(1)", "var_name": "boss"}, {"original_string": "boolean ok;", "modifier": "", "type": "boolean", "declarator": "ok", "var_name": "ok"}], "file": "boon/src/test/java/org/boon/core/reflection/MapObjectConversionTest.java"}, "test_case": {"identifier": "looseIntFirst", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void looseIntFirst() throws Exception {\n        employee = fromList(Lists.list(null, 1, \"2\"), Employee.class);\n        ok = employee != null || die();\n        ok = employee.abc.equals(\"2\") || die();\n        ok = employee.i == 1 || die();\n\n\n    }", "signature": "void looseIntFirst()", "full_signature": "@Test public void looseIntFirst()", "class_method_signature": "MapObjectConversionTest.looseIntFirst()", "testcase": true, "constructor": false, "invocations": ["fromList", "list", "die", "equals", "die", "die"]}, "focal_class": {"identifier": "MapObjectConversion", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Mapper mapper = new MapperSimple();", "modifier": "private static final", "type": "Mapper", "declarator": "mapper = new MapperSimple()", "var_name": "mapper"}, {"original_string": "private static final Mapper mapperWithType = new MapperComplex();", "modifier": "private static final", "type": "Mapper", "declarator": "mapperWithType = new MapperComplex()", "var_name": "mapperWithType"}, {"original_string": "private static final Mapper prettyMapper = new MapperComplex(\n            false, //outputType\n            FieldAccessMode.PROPERTY_THEN_FIELD, //fieldAccessType\n            true, //useAnnotations\n            false, //caseInsensitiveFields\n            null, //ignoreSet\n            null, //view\n            true, true);", "modifier": "private static final", "type": "Mapper", "declarator": "prettyMapper = new MapperComplex(\n            false, //outputType\n            FieldAccessMode.PROPERTY_THEN_FIELD, //fieldAccessType\n            true, //useAnnotations\n            false, //caseInsensitiveFields\n            null, //ignoreSet\n            null, //view\n            true, true)", "var_name": "prettyMapper"}], "methods": [{"identifier": "fromList", "parameters": "( List<?> argList, Class<T> clazz )", "modifiers": "public static", "return": "T", "signature": "T fromList( List<?> argList, Class<T> clazz )", "full_signature": "public static T fromList( List<?> argList, Class<T> clazz )", "class_method_signature": "MapObjectConversion.fromList( List<?> argList, Class<T> clazz )", "testcase": false, "constructor": false}, {"identifier": "fromList", "parameters": "( boolean respectIgnore, String view, FieldsAccessor fieldsAccessor,\n                                  List<?> argList, Class<T> clazz, Set<String> ignoreSet )", "modifiers": "public static", "return": "T", "signature": "T fromList( boolean respectIgnore, String view, FieldsAccessor fieldsAccessor,\n                                  List<?> argList, Class<T> clazz, Set<String> ignoreSet )", "full_signature": "public static T fromList( boolean respectIgnore, String view, FieldsAccessor fieldsAccessor,\n                                  List<?> argList, Class<T> clazz, Set<String> ignoreSet )", "class_method_signature": "MapObjectConversion.fromList( boolean respectIgnore, String view, FieldsAccessor fieldsAccessor,\n                                  List<?> argList, Class<T> clazz, Set<String> ignoreSet )", "testcase": false, "constructor": false}, {"identifier": "fromList", "parameters": "( FieldsAccessor fieldsAccessor, List<?> argList, Class<T> clazz )", "modifiers": "public static", "return": "T", "signature": "T fromList( FieldsAccessor fieldsAccessor, List<?> argList, Class<T> clazz )", "full_signature": "public static T fromList( FieldsAccessor fieldsAccessor, List<?> argList, Class<T> clazz )", "class_method_signature": "MapObjectConversion.fromList( FieldsAccessor fieldsAccessor, List<?> argList, Class<T> clazz )", "testcase": false, "constructor": false}, {"identifier": "toList", "parameters": "( Object object)", "modifiers": "public static", "return": "List<?>", "signature": "List<?> toList( Object object)", "full_signature": "public static List<?> toList( Object object)", "class_method_signature": "MapObjectConversion.toList( Object object)", "testcase": false, "constructor": false}, {"identifier": "fromMap", "parameters": "( Map<String, Object> map, Class<T> clazz )", "modifiers": "@SuppressWarnings( \"unchecked\" ) public static", "return": "T", "signature": "T fromMap( Map<String, Object> map, Class<T> clazz )", "full_signature": "@SuppressWarnings( \"unchecked\" ) public static T fromMap( Map<String, Object> map, Class<T> clazz )", "class_method_signature": "MapObjectConversion.fromMap( Map<String, Object> map, Class<T> clazz )", "testcase": false, "constructor": false}, {"identifier": "fromMap", "parameters": "( Map<String, Object> map, Class<T> clazz, String... excludeProperties )", "modifiers": "@SuppressWarnings( \"unchecked\" ) public static", "return": "T", "signature": "T fromMap( Map<String, Object> map, Class<T> clazz, String... excludeProperties )", "full_signature": "@SuppressWarnings( \"unchecked\" ) public static T fromMap( Map<String, Object> map, Class<T> clazz, String... excludeProperties )", "class_method_signature": "MapObjectConversion.fromMap( Map<String, Object> map, Class<T> clazz, String... excludeProperties )", "testcase": false, "constructor": false}, {"identifier": "fromMap", "parameters": "( Map<String, Object> map )", "modifiers": "public static", "return": "Object", "signature": "Object fromMap( Map<String, Object> map )", "full_signature": "public static Object fromMap( Map<String, Object> map )", "class_method_signature": "MapObjectConversion.fromMap( Map<String, Object> map )", "testcase": false, "constructor": false}, {"identifier": "fromMap", "parameters": "( boolean respectIgnore, String view, FieldsAccessor fieldsAccessor, Map<String, Object> map, Class<T> cls, Set<String> ignoreSet )", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "T", "signature": "T fromMap( boolean respectIgnore, String view, FieldsAccessor fieldsAccessor, Map<String, Object> map, Class<T> cls, Set<String> ignoreSet )", "full_signature": "@SuppressWarnings(\"unchecked\") public static T fromMap( boolean respectIgnore, String view, FieldsAccessor fieldsAccessor, Map<String, Object> map, Class<T> cls, Set<String> ignoreSet )", "class_method_signature": "MapObjectConversion.fromMap( boolean respectIgnore, String view, FieldsAccessor fieldsAccessor, Map<String, Object> map, Class<T> cls, Set<String> ignoreSet )", "testcase": false, "constructor": false}, {"identifier": "fromValueMap", "parameters": "( boolean respectIgnore, String view, final FieldsAccessor fieldsAccessor,\n                                      final Map<String, Value> valueMap,\n                                      final Class<T> cls, Set<String> ignoreSet )", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "T", "signature": "T fromValueMap( boolean respectIgnore, String view, final FieldsAccessor fieldsAccessor,\n                                      final Map<String, Value> valueMap,\n                                      final Class<T> cls, Set<String> ignoreSet )", "full_signature": "@SuppressWarnings(\"unchecked\") public static T fromValueMap( boolean respectIgnore, String view, final FieldsAccessor fieldsAccessor,\n                                      final Map<String, Value> valueMap,\n                                      final Class<T> cls, Set<String> ignoreSet )", "class_method_signature": "MapObjectConversion.fromValueMap( boolean respectIgnore, String view, final FieldsAccessor fieldsAccessor,\n                                      final Map<String, Value> valueMap,\n                                      final Class<T> cls, Set<String> ignoreSet )", "testcase": false, "constructor": false}, {"identifier": "toMap", "parameters": "( final Object object, final String... ignore )", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> toMap( final Object object, final String... ignore )", "full_signature": "public static Map<String, Object> toMap( final Object object, final String... ignore )", "class_method_signature": "MapObjectConversion.toMap( final Object object, final String... ignore )", "testcase": false, "constructor": false}, {"identifier": "toMap", "parameters": "( final Object object, Set<String> ignore )", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> toMap( final Object object, Set<String> ignore )", "full_signature": "public static Map<String, Object> toMap( final Object object, Set<String> ignore )", "class_method_signature": "MapObjectConversion.toMap( final Object object, Set<String> ignore )", "testcase": false, "constructor": false}, {"identifier": "toMap", "parameters": "( final Object object )", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> toMap( final Object object )", "full_signature": "public static Map<String, Object> toMap( final Object object )", "class_method_signature": "MapObjectConversion.toMap( final Object object )", "testcase": false, "constructor": false}, {"identifier": "toMapWithType", "parameters": "( final Object object )", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> toMapWithType( final Object object )", "full_signature": "public static Map<String, Object> toMapWithType( final Object object )", "class_method_signature": "MapObjectConversion.toMapWithType( final Object object )", "testcase": false, "constructor": false}, {"identifier": "convertListOfMapsToObjects", "parameters": "(   boolean respectIgnore, String view,\n                                                            FieldsAccessor fieldsAccessor,\n                                                            Class<T> componentType, List<Map> list, Set<String> ignoreProperties)", "modifiers": "public static", "return": "List<T>", "signature": "List<T> convertListOfMapsToObjects(   boolean respectIgnore, String view,\n                                                            FieldsAccessor fieldsAccessor,\n                                                            Class<T> componentType, List<Map> list, Set<String> ignoreProperties)", "full_signature": "public static List<T> convertListOfMapsToObjects(   boolean respectIgnore, String view,\n                                                            FieldsAccessor fieldsAccessor,\n                                                            Class<T> componentType, List<Map> list, Set<String> ignoreProperties)", "class_method_signature": "MapObjectConversion.convertListOfMapsToObjects(   boolean respectIgnore, String view,\n                                                            FieldsAccessor fieldsAccessor,\n                                                            Class<T> componentType, List<Map> list, Set<String> ignoreProperties)", "testcase": false, "constructor": false}, {"identifier": "convertListOfMapsToObjects", "parameters": "(Class<T> componentType, List<Map> list)", "modifiers": "public static", "return": "List<T>", "signature": "List<T> convertListOfMapsToObjects(Class<T> componentType, List<Map> list)", "full_signature": "public static List<T> convertListOfMapsToObjects(Class<T> componentType, List<Map> list)", "class_method_signature": "MapObjectConversion.convertListOfMapsToObjects(Class<T> componentType, List<Map> list)", "testcase": false, "constructor": false}, {"identifier": "toListOfMaps", "parameters": "( Collection<?> collection )", "modifiers": "public static", "return": "List<Map<String, Object>>", "signature": "List<Map<String, Object>> toListOfMaps( Collection<?> collection )", "full_signature": "public static List<Map<String, Object>> toListOfMaps( Collection<?> collection )", "class_method_signature": "MapObjectConversion.toListOfMaps( Collection<?> collection )", "testcase": false, "constructor": false}, {"identifier": "toPrettyMap", "parameters": "(Object object)", "modifiers": "public static", "return": "Map", "signature": "Map toPrettyMap(Object object)", "full_signature": "public static Map toPrettyMap(Object object)", "class_method_signature": "MapObjectConversion.toPrettyMap(Object object)", "testcase": false, "constructor": false}], "file": "boon/src/main/java/org/boon/core/reflection/MapObjectConversion.java"}, "focal_method": {"identifier": "fromList", "parameters": "( List<?> argList, Class<T> clazz )", "modifiers": "public static", "return": "T", "body": "public static <T> T fromList( List<?> argList, Class<T> clazz ) {\n        return mapper.fromList(argList, clazz);\n    }", "signature": "T fromList( List<?> argList, Class<T> clazz )", "full_signature": "public static T fromList( List<?> argList, Class<T> clazz )", "class_method_signature": "MapObjectConversion.fromList( List<?> argList, Class<T> clazz )", "testcase": false, "constructor": false, "invocations": ["fromList"]}, "repository": {"repo_id": 13580866, "url": "https://github.com/boonproject/boon", "language": "Java", "is_fork": false, "fork_count": 103, "stargazer_count": 512, "size": 7401, "license": "licensed"}}