{"test_class": {"identifier": "GenericItemBasedRecommenderTest", "superclass": "extends TasteTestCase", "interfaces": "", "fields": [], "file": "core/src/test/java/org/apache/mahout/cf/taste/impl/recommender/GenericItemBasedRecommenderTest.java"}, "test_case": {"identifier": "testRescorer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRescorer() throws Exception {\n\n    DataModel dataModel = getDataModel(\n            new long[] {1, 2, 3},\n            new Double[][] {\n                    {0.1, 0.2},\n                    {0.2, 0.3, 0.3, 0.6},\n                    {0.4, 0.4, 0.5, 0.9},\n            });\n\n    Collection<GenericItemSimilarity.ItemItemSimilarity> similarities =\n        new ArrayList<GenericItemSimilarity.ItemItemSimilarity>(6);\n    similarities.add(new GenericItemSimilarity.ItemItemSimilarity(0, 1, 1.0));\n    similarities.add(new GenericItemSimilarity.ItemItemSimilarity(0, 2, 0.5));\n    similarities.add(new GenericItemSimilarity.ItemItemSimilarity(0, 3, 0.2));\n    similarities.add(new GenericItemSimilarity.ItemItemSimilarity(1, 2, 0.7));\n    similarities.add(new GenericItemSimilarity.ItemItemSimilarity(1, 3, 0.5));\n    similarities.add(new GenericItemSimilarity.ItemItemSimilarity(2, 3, 0.9));\n    ItemSimilarity similarity = new GenericItemSimilarity(similarities);\n    Recommender recommender = new GenericItemBasedRecommender(dataModel, similarity);\n    List<RecommendedItem> originalRecommended = recommender.recommend(1, 2);\n    List<RecommendedItem> rescoredRecommended =\n        recommender.recommend(1, 2, new ReversingRescorer<Long>());\n    assertNotNull(originalRecommended);\n    assertNotNull(rescoredRecommended);\n    assertEquals(2, originalRecommended.size());\n    assertEquals(2, rescoredRecommended.size());\n    assertEquals(originalRecommended.get(0).getItemID(), rescoredRecommended.get(1).getItemID());\n    assertEquals(originalRecommended.get(1).getItemID(), rescoredRecommended.get(0).getItemID());\n  }", "signature": "void testRescorer()", "full_signature": "@Test public void testRescorer()", "class_method_signature": "GenericItemBasedRecommenderTest.testRescorer()", "testcase": true, "constructor": false, "invocations": ["getDataModel", "add", "add", "add", "add", "add", "add", "recommend", "recommend", "assertNotNull", "assertNotNull", "assertEquals", "size", "assertEquals", "size", "assertEquals", "getItemID", "get", "getItemID", "get", "assertEquals", "getItemID", "get", "getItemID", "get"]}, "focal_class": {"identifier": "GenericItemBasedRecommender", "superclass": "extends AbstractRecommender", "interfaces": "implements ItemBasedRecommender", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(GenericItemBasedRecommender.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(GenericItemBasedRecommender.class)", "var_name": "log"}, {"original_string": "private final ItemSimilarity similarity;", "modifier": "private final", "type": "ItemSimilarity", "declarator": "similarity", "var_name": "similarity"}, {"original_string": "private final MostSimilarItemsCandidateItemsStrategy mostSimilarItemsCandidateItemsStrategy;", "modifier": "private final", "type": "MostSimilarItemsCandidateItemsStrategy", "declarator": "mostSimilarItemsCandidateItemsStrategy", "var_name": "mostSimilarItemsCandidateItemsStrategy"}, {"original_string": "private final RefreshHelper refreshHelper;", "modifier": "private final", "type": "RefreshHelper", "declarator": "refreshHelper", "var_name": "refreshHelper"}, {"original_string": "private EstimatedPreferenceCapper capper;", "modifier": "private", "type": "EstimatedPreferenceCapper", "declarator": "capper", "var_name": "capper"}, {"original_string": "private static final boolean EXCLUDE_ITEM_IF_NOT_SIMILAR_TO_ALL_BY_DEFAULT = true;", "modifier": "private static final", "type": "boolean", "declarator": "EXCLUDE_ITEM_IF_NOT_SIMILAR_TO_ALL_BY_DEFAULT = true", "var_name": "EXCLUDE_ITEM_IF_NOT_SIMILAR_TO_ALL_BY_DEFAULT"}], "methods": [{"identifier": "GenericItemBasedRecommender", "parameters": "(DataModel dataModel,\n                                     ItemSimilarity similarity,\n                                     CandidateItemsStrategy candidateItemsStrategy,\n                                     MostSimilarItemsCandidateItemsStrategy mostSimilarItemsCandidateItemsStrategy)", "modifiers": "public", "return": "", "signature": " GenericItemBasedRecommender(DataModel dataModel,\n                                     ItemSimilarity similarity,\n                                     CandidateItemsStrategy candidateItemsStrategy,\n                                     MostSimilarItemsCandidateItemsStrategy mostSimilarItemsCandidateItemsStrategy)", "full_signature": "public  GenericItemBasedRecommender(DataModel dataModel,\n                                     ItemSimilarity similarity,\n                                     CandidateItemsStrategy candidateItemsStrategy,\n                                     MostSimilarItemsCandidateItemsStrategy mostSimilarItemsCandidateItemsStrategy)", "class_method_signature": "GenericItemBasedRecommender.GenericItemBasedRecommender(DataModel dataModel,\n                                     ItemSimilarity similarity,\n                                     CandidateItemsStrategy candidateItemsStrategy,\n                                     MostSimilarItemsCandidateItemsStrategy mostSimilarItemsCandidateItemsStrategy)", "testcase": false, "constructor": true}, {"identifier": "GenericItemBasedRecommender", "parameters": "(DataModel dataModel, ItemSimilarity similarity)", "modifiers": "public", "return": "", "signature": " GenericItemBasedRecommender(DataModel dataModel, ItemSimilarity similarity)", "full_signature": "public  GenericItemBasedRecommender(DataModel dataModel, ItemSimilarity similarity)", "class_method_signature": "GenericItemBasedRecommender.GenericItemBasedRecommender(DataModel dataModel, ItemSimilarity similarity)", "testcase": false, "constructor": true}, {"identifier": "getDefaultMostSimilarItemsCandidateItemsStrategy", "parameters": "()", "modifiers": "protected static", "return": "MostSimilarItemsCandidateItemsStrategy", "signature": "MostSimilarItemsCandidateItemsStrategy getDefaultMostSimilarItemsCandidateItemsStrategy()", "full_signature": "protected static MostSimilarItemsCandidateItemsStrategy getDefaultMostSimilarItemsCandidateItemsStrategy()", "class_method_signature": "GenericItemBasedRecommender.getDefaultMostSimilarItemsCandidateItemsStrategy()", "testcase": false, "constructor": false}, {"identifier": "getSimilarity", "parameters": "()", "modifiers": "public", "return": "ItemSimilarity", "signature": "ItemSimilarity getSimilarity()", "full_signature": "public ItemSimilarity getSimilarity()", "class_method_signature": "GenericItemBasedRecommender.getSimilarity()", "testcase": false, "constructor": false}, {"identifier": "recommend", "parameters": "(long userID, int howMany, IDRescorer rescorer)", "modifiers": "@Override public", "return": "List<RecommendedItem>", "signature": "List<RecommendedItem> recommend(long userID, int howMany, IDRescorer rescorer)", "full_signature": "@Override public List<RecommendedItem> recommend(long userID, int howMany, IDRescorer rescorer)", "class_method_signature": "GenericItemBasedRecommender.recommend(long userID, int howMany, IDRescorer rescorer)", "testcase": false, "constructor": false}, {"identifier": "estimatePreference", "parameters": "(long userID, long itemID)", "modifiers": "@Override public", "return": "float", "signature": "float estimatePreference(long userID, long itemID)", "full_signature": "@Override public float estimatePreference(long userID, long itemID)", "class_method_signature": "GenericItemBasedRecommender.estimatePreference(long userID, long itemID)", "testcase": false, "constructor": false}, {"identifier": "getPreferenceForItem", "parameters": "(PreferenceArray preferencesFromUser, long itemID)", "modifiers": "private static", "return": "Float", "signature": "Float getPreferenceForItem(PreferenceArray preferencesFromUser, long itemID)", "full_signature": "private static Float getPreferenceForItem(PreferenceArray preferencesFromUser, long itemID)", "class_method_signature": "GenericItemBasedRecommender.getPreferenceForItem(PreferenceArray preferencesFromUser, long itemID)", "testcase": false, "constructor": false}, {"identifier": "mostSimilarItems", "parameters": "(long itemID, int howMany)", "modifiers": "@Override public", "return": "List<RecommendedItem>", "signature": "List<RecommendedItem> mostSimilarItems(long itemID, int howMany)", "full_signature": "@Override public List<RecommendedItem> mostSimilarItems(long itemID, int howMany)", "class_method_signature": "GenericItemBasedRecommender.mostSimilarItems(long itemID, int howMany)", "testcase": false, "constructor": false}, {"identifier": "mostSimilarItems", "parameters": "(long itemID, int howMany,\n                                                Rescorer<LongPair> rescorer)", "modifiers": "@Override public", "return": "List<RecommendedItem>", "signature": "List<RecommendedItem> mostSimilarItems(long itemID, int howMany,\n                                                Rescorer<LongPair> rescorer)", "full_signature": "@Override public List<RecommendedItem> mostSimilarItems(long itemID, int howMany,\n                                                Rescorer<LongPair> rescorer)", "class_method_signature": "GenericItemBasedRecommender.mostSimilarItems(long itemID, int howMany,\n                                                Rescorer<LongPair> rescorer)", "testcase": false, "constructor": false}, {"identifier": "mostSimilarItems", "parameters": "(long[] itemIDs, int howMany)", "modifiers": "@Override public", "return": "List<RecommendedItem>", "signature": "List<RecommendedItem> mostSimilarItems(long[] itemIDs, int howMany)", "full_signature": "@Override public List<RecommendedItem> mostSimilarItems(long[] itemIDs, int howMany)", "class_method_signature": "GenericItemBasedRecommender.mostSimilarItems(long[] itemIDs, int howMany)", "testcase": false, "constructor": false}, {"identifier": "mostSimilarItems", "parameters": "(long[] itemIDs, int howMany,\n                                                Rescorer<LongPair> rescorer)", "modifiers": "@Override public", "return": "List<RecommendedItem>", "signature": "List<RecommendedItem> mostSimilarItems(long[] itemIDs, int howMany,\n                                                Rescorer<LongPair> rescorer)", "full_signature": "@Override public List<RecommendedItem> mostSimilarItems(long[] itemIDs, int howMany,\n                                                Rescorer<LongPair> rescorer)", "class_method_signature": "GenericItemBasedRecommender.mostSimilarItems(long[] itemIDs, int howMany,\n                                                Rescorer<LongPair> rescorer)", "testcase": false, "constructor": false}, {"identifier": "mostSimilarItems", "parameters": "(long[] itemIDs,\n                                                int howMany,\n                                                boolean excludeItemIfNotSimilarToAll)", "modifiers": "@Override public", "return": "List<RecommendedItem>", "signature": "List<RecommendedItem> mostSimilarItems(long[] itemIDs,\n                                                int howMany,\n                                                boolean excludeItemIfNotSimilarToAll)", "full_signature": "@Override public List<RecommendedItem> mostSimilarItems(long[] itemIDs,\n                                                int howMany,\n                                                boolean excludeItemIfNotSimilarToAll)", "class_method_signature": "GenericItemBasedRecommender.mostSimilarItems(long[] itemIDs,\n                                                int howMany,\n                                                boolean excludeItemIfNotSimilarToAll)", "testcase": false, "constructor": false}, {"identifier": "mostSimilarItems", "parameters": "(long[] itemIDs, int howMany,\n                                                Rescorer<LongPair> rescorer,\n                                                boolean excludeItemIfNotSimilarToAll)", "modifiers": "@Override public", "return": "List<RecommendedItem>", "signature": "List<RecommendedItem> mostSimilarItems(long[] itemIDs, int howMany,\n                                                Rescorer<LongPair> rescorer,\n                                                boolean excludeItemIfNotSimilarToAll)", "full_signature": "@Override public List<RecommendedItem> mostSimilarItems(long[] itemIDs, int howMany,\n                                                Rescorer<LongPair> rescorer,\n                                                boolean excludeItemIfNotSimilarToAll)", "class_method_signature": "GenericItemBasedRecommender.mostSimilarItems(long[] itemIDs, int howMany,\n                                                Rescorer<LongPair> rescorer,\n                                                boolean excludeItemIfNotSimilarToAll)", "testcase": false, "constructor": false}, {"identifier": "recommendedBecause", "parameters": "(long userID, long itemID, int howMany)", "modifiers": "@Override public", "return": "List<RecommendedItem>", "signature": "List<RecommendedItem> recommendedBecause(long userID, long itemID, int howMany)", "full_signature": "@Override public List<RecommendedItem> recommendedBecause(long userID, long itemID, int howMany)", "class_method_signature": "GenericItemBasedRecommender.recommendedBecause(long userID, long itemID, int howMany)", "testcase": false, "constructor": false}, {"identifier": "doMostSimilarItems", "parameters": "(long[] itemIDs,\n                                                   int howMany,\n                                                   TopItems.Estimator<Long> estimator)", "modifiers": "private", "return": "List<RecommendedItem>", "signature": "List<RecommendedItem> doMostSimilarItems(long[] itemIDs,\n                                                   int howMany,\n                                                   TopItems.Estimator<Long> estimator)", "full_signature": "private List<RecommendedItem> doMostSimilarItems(long[] itemIDs,\n                                                   int howMany,\n                                                   TopItems.Estimator<Long> estimator)", "class_method_signature": "GenericItemBasedRecommender.doMostSimilarItems(long[] itemIDs,\n                                                   int howMany,\n                                                   TopItems.Estimator<Long> estimator)", "testcase": false, "constructor": false}, {"identifier": "doEstimatePreference", "parameters": "(long userID, PreferenceArray preferencesFromUser, long itemID)", "modifiers": "protected", "return": "float", "signature": "float doEstimatePreference(long userID, PreferenceArray preferencesFromUser, long itemID)", "full_signature": "protected float doEstimatePreference(long userID, PreferenceArray preferencesFromUser, long itemID)", "class_method_signature": "GenericItemBasedRecommender.doEstimatePreference(long userID, PreferenceArray preferencesFromUser, long itemID)", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "(Collection<Refreshable> alreadyRefreshed)", "modifiers": "@Override public", "return": "void", "signature": "void refresh(Collection<Refreshable> alreadyRefreshed)", "full_signature": "@Override public void refresh(Collection<Refreshable> alreadyRefreshed)", "class_method_signature": "GenericItemBasedRecommender.refresh(Collection<Refreshable> alreadyRefreshed)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "GenericItemBasedRecommender.toString()", "testcase": false, "constructor": false}, {"identifier": "buildCapper", "parameters": "()", "modifiers": "private", "return": "EstimatedPreferenceCapper", "signature": "EstimatedPreferenceCapper buildCapper()", "full_signature": "private EstimatedPreferenceCapper buildCapper()", "class_method_signature": "GenericItemBasedRecommender.buildCapper()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/apache/mahout/cf/taste/impl/recommender/GenericItemBasedRecommender.java"}, "focal_method": {"identifier": "recommend", "parameters": "(long userID, int howMany, IDRescorer rescorer)", "modifiers": "@Override public", "return": "List<RecommendedItem>", "body": "@Override\n  public List<RecommendedItem> recommend(long userID, int howMany, IDRescorer rescorer) throws TasteException {\n    Preconditions.checkArgument(howMany >= 1, \"howMany must be at least 1\");\n    log.debug(\"Recommending items for user ID '{}'\", userID);\n\n    PreferenceArray preferencesFromUser = getDataModel().getPreferencesFromUser(userID);\n    if (preferencesFromUser.length() == 0) {\n      return Collections.emptyList();\n    }\n\n    FastIDSet possibleItemIDs = getAllOtherItems(userID, preferencesFromUser);\n\n    TopItems.Estimator<Long> estimator = new Estimator(userID, preferencesFromUser);\n\n    List<RecommendedItem> topItems = TopItems.getTopItems(howMany, possibleItemIDs.iterator(), rescorer,\n      estimator);\n\n    log.debug(\"Recommendations are: {}\", topItems);\n    return topItems;\n  }", "signature": "List<RecommendedItem> recommend(long userID, int howMany, IDRescorer rescorer)", "full_signature": "@Override public List<RecommendedItem> recommend(long userID, int howMany, IDRescorer rescorer)", "class_method_signature": "GenericItemBasedRecommender.recommend(long userID, int howMany, IDRescorer rescorer)", "testcase": false, "constructor": false, "invocations": ["checkArgument", "debug", "getPreferencesFromUser", "getDataModel", "length", "emptyList", "getAllOtherItems", "getTopItems", "iterator", "debug"]}, "repository": {"repo_id": 336330, "url": "https://github.com/jakemannix/Mahout", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 8, "size": 41087, "license": "licensed"}}