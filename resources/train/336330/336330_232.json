{"test_class": {"identifier": "GenericUserBasedRecommenderTest", "superclass": "extends TasteTestCase", "interfaces": "", "fields": [], "file": "core/src/test/java/org/apache/mahout/cf/taste/impl/recommender/GenericUserBasedRecommenderTest.java"}, "test_case": {"identifier": "testMostSimilar", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testMostSimilar() throws Exception {\n    UserBasedRecommender recommender = buildRecommender();\n    long[] similar = recommender.mostSimilarUserIDs(1, 2);\n    assertNotNull(similar);\n    assertEquals(2, similar.length);\n    assertEquals(2, similar[0]);\n    assertEquals(4, similar[1]);\n  }", "signature": "void testMostSimilar()", "full_signature": "@Test public void testMostSimilar()", "class_method_signature": "GenericUserBasedRecommenderTest.testMostSimilar()", "testcase": true, "constructor": false, "invocations": ["buildRecommender", "mostSimilarUserIDs", "assertNotNull", "assertEquals", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "GenericUserBasedRecommender", "superclass": "extends AbstractRecommender", "interfaces": "implements UserBasedRecommender", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(GenericUserBasedRecommender.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(GenericUserBasedRecommender.class)", "var_name": "log"}, {"original_string": "private final UserNeighborhood neighborhood;", "modifier": "private final", "type": "UserNeighborhood", "declarator": "neighborhood", "var_name": "neighborhood"}, {"original_string": "private final UserSimilarity similarity;", "modifier": "private final", "type": "UserSimilarity", "declarator": "similarity", "var_name": "similarity"}, {"original_string": "private final RefreshHelper refreshHelper;", "modifier": "private final", "type": "RefreshHelper", "declarator": "refreshHelper", "var_name": "refreshHelper"}, {"original_string": "private EstimatedPreferenceCapper capper;", "modifier": "private", "type": "EstimatedPreferenceCapper", "declarator": "capper", "var_name": "capper"}], "methods": [{"identifier": "GenericUserBasedRecommender", "parameters": "(DataModel dataModel,\n                                     UserNeighborhood neighborhood,\n                                     UserSimilarity similarity)", "modifiers": "public", "return": "", "signature": " GenericUserBasedRecommender(DataModel dataModel,\n                                     UserNeighborhood neighborhood,\n                                     UserSimilarity similarity)", "full_signature": "public  GenericUserBasedRecommender(DataModel dataModel,\n                                     UserNeighborhood neighborhood,\n                                     UserSimilarity similarity)", "class_method_signature": "GenericUserBasedRecommender.GenericUserBasedRecommender(DataModel dataModel,\n                                     UserNeighborhood neighborhood,\n                                     UserSimilarity similarity)", "testcase": false, "constructor": true}, {"identifier": "getSimilarity", "parameters": "()", "modifiers": "public", "return": "UserSimilarity", "signature": "UserSimilarity getSimilarity()", "full_signature": "public UserSimilarity getSimilarity()", "class_method_signature": "GenericUserBasedRecommender.getSimilarity()", "testcase": false, "constructor": false}, {"identifier": "recommend", "parameters": "(long userID, int howMany, IDRescorer rescorer)", "modifiers": "@Override public", "return": "List<RecommendedItem>", "signature": "List<RecommendedItem> recommend(long userID, int howMany, IDRescorer rescorer)", "full_signature": "@Override public List<RecommendedItem> recommend(long userID, int howMany, IDRescorer rescorer)", "class_method_signature": "GenericUserBasedRecommender.recommend(long userID, int howMany, IDRescorer rescorer)", "testcase": false, "constructor": false}, {"identifier": "estimatePreference", "parameters": "(long userID, long itemID)", "modifiers": "@Override public", "return": "float", "signature": "float estimatePreference(long userID, long itemID)", "full_signature": "@Override public float estimatePreference(long userID, long itemID)", "class_method_signature": "GenericUserBasedRecommender.estimatePreference(long userID, long itemID)", "testcase": false, "constructor": false}, {"identifier": "mostSimilarUserIDs", "parameters": "(long userID, int howMany)", "modifiers": "@Override public", "return": "long[]", "signature": "long[] mostSimilarUserIDs(long userID, int howMany)", "full_signature": "@Override public long[] mostSimilarUserIDs(long userID, int howMany)", "class_method_signature": "GenericUserBasedRecommender.mostSimilarUserIDs(long userID, int howMany)", "testcase": false, "constructor": false}, {"identifier": "mostSimilarUserIDs", "parameters": "(long userID, int howMany, Rescorer<LongPair> rescorer)", "modifiers": "@Override public", "return": "long[]", "signature": "long[] mostSimilarUserIDs(long userID, int howMany, Rescorer<LongPair> rescorer)", "full_signature": "@Override public long[] mostSimilarUserIDs(long userID, int howMany, Rescorer<LongPair> rescorer)", "class_method_signature": "GenericUserBasedRecommender.mostSimilarUserIDs(long userID, int howMany, Rescorer<LongPair> rescorer)", "testcase": false, "constructor": false}, {"identifier": "doMostSimilarUsers", "parameters": "(int howMany, TopItems.Estimator<Long> estimator)", "modifiers": "private", "return": "long[]", "signature": "long[] doMostSimilarUsers(int howMany, TopItems.Estimator<Long> estimator)", "full_signature": "private long[] doMostSimilarUsers(int howMany, TopItems.Estimator<Long> estimator)", "class_method_signature": "GenericUserBasedRecommender.doMostSimilarUsers(int howMany, TopItems.Estimator<Long> estimator)", "testcase": false, "constructor": false}, {"identifier": "doEstimatePreference", "parameters": "(long theUserID, long[] theNeighborhood, long itemID)", "modifiers": "protected", "return": "float", "signature": "float doEstimatePreference(long theUserID, long[] theNeighborhood, long itemID)", "full_signature": "protected float doEstimatePreference(long theUserID, long[] theNeighborhood, long itemID)", "class_method_signature": "GenericUserBasedRecommender.doEstimatePreference(long theUserID, long[] theNeighborhood, long itemID)", "testcase": false, "constructor": false}, {"identifier": "getAllOtherItems", "parameters": "(long[] theNeighborhood, long theUserID)", "modifiers": "protected", "return": "FastIDSet", "signature": "FastIDSet getAllOtherItems(long[] theNeighborhood, long theUserID)", "full_signature": "protected FastIDSet getAllOtherItems(long[] theNeighborhood, long theUserID)", "class_method_signature": "GenericUserBasedRecommender.getAllOtherItems(long[] theNeighborhood, long theUserID)", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "(Collection<Refreshable> alreadyRefreshed)", "modifiers": "@Override public", "return": "void", "signature": "void refresh(Collection<Refreshable> alreadyRefreshed)", "full_signature": "@Override public void refresh(Collection<Refreshable> alreadyRefreshed)", "class_method_signature": "GenericUserBasedRecommender.refresh(Collection<Refreshable> alreadyRefreshed)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "GenericUserBasedRecommender.toString()", "testcase": false, "constructor": false}, {"identifier": "buildCapper", "parameters": "()", "modifiers": "private", "return": "EstimatedPreferenceCapper", "signature": "EstimatedPreferenceCapper buildCapper()", "full_signature": "private EstimatedPreferenceCapper buildCapper()", "class_method_signature": "GenericUserBasedRecommender.buildCapper()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/apache/mahout/cf/taste/impl/recommender/GenericUserBasedRecommender.java"}, "focal_method": {"identifier": "mostSimilarUserIDs", "parameters": "(long userID, int howMany)", "modifiers": "@Override public", "return": "long[]", "body": "@Override\n  public long[] mostSimilarUserIDs(long userID, int howMany) throws TasteException {\n    return mostSimilarUserIDs(userID, howMany, null);\n  }", "signature": "long[] mostSimilarUserIDs(long userID, int howMany)", "full_signature": "@Override public long[] mostSimilarUserIDs(long userID, int howMany)", "class_method_signature": "GenericUserBasedRecommender.mostSimilarUserIDs(long userID, int howMany)", "testcase": false, "constructor": false, "invocations": ["mostSimilarUserIDs"]}, "repository": {"repo_id": 336330, "url": "https://github.com/jakemannix/Mahout", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 8, "size": 41087, "license": "licensed"}}