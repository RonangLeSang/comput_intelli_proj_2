{"test_class": {"identifier": "JdbcConnectionDefinitionManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private JdbcConnectionDefinitionManager manager;", "modifier": "private", "type": "JdbcConnectionDefinitionManager", "declarator": "manager", "var_name": "manager"}], "file": "designer/datasource-editor-jdbc/src/test/java/org/pentaho/reporting/ui/datasources/jdbc/connection/JdbcConnectionDefinitionManagerTest.java"}, "test_case": {"identifier": "removeSource", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void removeSource() {\n    JdbcConnectionDefinition connectionDefinition =\n        new JndiConnectionDefinition( \"NAME\", \"JNDI_NAME\", \"DATABASE_TYPE\", \"USERNAME\", \"PASSWORD\" );\n    manager.updateSourceList( connectionDefinition );\n    manager.removeSource( \"NAME\" );\n    JdbcConnectionDefinition[] actual = manager.getSources();\n    assertEquals( 0, actual.length );\n  }", "signature": "void removeSource()", "full_signature": "@Test public void removeSource()", "class_method_signature": "JdbcConnectionDefinitionManagerTest.removeSource()", "testcase": true, "constructor": false, "invocations": ["updateSourceList", "removeSource", "getSources", "assertEquals"]}, "focal_class": {"identifier": "JdbcConnectionDefinitionManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Log log = LogFactory.getLog( JdbcConnectionDefinitionManager.class );", "modifier": "private static final", "type": "Log", "declarator": "log = LogFactory.getLog( JdbcConnectionDefinitionManager.class )", "var_name": "log"}, {"original_string": "private static final JdbcConnectionDefinition SAMPLE_DATA_JNDI_SOURCE = new JndiConnectionDefinition( \"SampleData\",\n      \"SampleData\", \"Hypersonic\", null, null );", "modifier": "private static final", "type": "JdbcConnectionDefinition", "declarator": "SAMPLE_DATA_JNDI_SOURCE = new JndiConnectionDefinition( \"SampleData\",\n      \"SampleData\", \"Hypersonic\", null, null )", "var_name": "SAMPLE_DATA_JNDI_SOURCE"}, {"original_string": "private static final JdbcConnectionDefinition SAMPLE_DATA_DRIVER_SOURCE = new DriverConnectionDefinition(\n      \"SampleData (Hypersonic)\", \"org.hsqldb.jdbcDriver\", \"jdbc:hsqldb:hsql://localhost:9001/sampledata\",\n      \"pentaho_user\", \"password\" );", "modifier": "private static final", "type": "JdbcConnectionDefinition", "declarator": "SAMPLE_DATA_DRIVER_SOURCE = new DriverConnectionDefinition(\n      \"SampleData (Hypersonic)\", \"org.hsqldb.jdbcDriver\", \"jdbc:hsqldb:hsql://localhost:9001/sampledata\",\n      \"pentaho_user\", \"password\" )", "var_name": "SAMPLE_DATA_DRIVER_SOURCE"}, {"original_string": "private static final JdbcConnectionDefinition SAMPLE_DATA_MEMORY_SOURCE = new DriverConnectionDefinition(\n      \"SampleData (Memory)\", \"org.hsqldb.jdbcDriver\", \"jdbc:hsqldb:mem:SampleData\", \"pentaho_user\", \"password\" );", "modifier": "private static final", "type": "JdbcConnectionDefinition", "declarator": "SAMPLE_DATA_MEMORY_SOURCE = new DriverConnectionDefinition(\n      \"SampleData (Memory)\", \"org.hsqldb.jdbcDriver\", \"jdbc:hsqldb:mem:SampleData\", \"pentaho_user\", \"password\" )", "var_name": "SAMPLE_DATA_MEMORY_SOURCE"}, {"original_string": "private static final JdbcConnectionDefinition LOCAL_SAMPLE_DATA_DRIVER_SOURCE = new DriverConnectionDefinition(\n      \"SampleData (Local)\", \"org.hsqldb.jdbcDriver\", \"jdbc:hsqldb:./resources/sampledata/sampledata\", \"pentaho_user\",\n      \"password\" );", "modifier": "private static final", "type": "JdbcConnectionDefinition", "declarator": "LOCAL_SAMPLE_DATA_DRIVER_SOURCE = new DriverConnectionDefinition(\n      \"SampleData (Local)\", \"org.hsqldb.jdbcDriver\", \"jdbc:hsqldb:./resources/sampledata/sampledata\", \"pentaho_user\",\n      \"password\" )", "var_name": "LOCAL_SAMPLE_DATA_DRIVER_SOURCE"}, {"original_string": "private static final JdbcConnectionDefinition MYSQL_SAMPLE_DATA_DRIVER_SOURCE = new DriverConnectionDefinition(\n      \"SampleData (MySQL)\", \"com.mysql.jdbc.Driver\", \"jdbc:mysql://localhost:3306/sampledata\", \"pentaho_user\",\n      \"password\" );", "modifier": "private static final", "type": "JdbcConnectionDefinition", "declarator": "MYSQL_SAMPLE_DATA_DRIVER_SOURCE = new DriverConnectionDefinition(\n      \"SampleData (MySQL)\", \"com.mysql.jdbc.Driver\", \"jdbc:mysql://localhost:3306/sampledata\", \"pentaho_user\",\n      \"password\" )", "var_name": "MYSQL_SAMPLE_DATA_DRIVER_SOURCE"}, {"original_string": "private static final String DATASOURCE_PREFERENCES_NODE = \"org/pentaho/reporting/ui/datasources/jdbc/Settings\";", "modifier": "private static final", "type": "String", "declarator": "DATASOURCE_PREFERENCES_NODE = \"org/pentaho/reporting/ui/datasources/jdbc/Settings\"", "var_name": "DATASOURCE_PREFERENCES_NODE"}, {"original_string": "private TreeMap<String, JdbcConnectionDefinition> connectionDefinitions =\n      new TreeMap<String, JdbcConnectionDefinition>();", "modifier": "private", "type": "TreeMap<String, JdbcConnectionDefinition>", "declarator": "connectionDefinitions =\n      new TreeMap<String, JdbcConnectionDefinition>()", "var_name": "connectionDefinitions"}, {"original_string": "private final Preferences userPreferences;", "modifier": "private final", "type": "Preferences", "declarator": "userPreferences", "var_name": "userPreferences"}, {"original_string": "private static final String TYPE_KEY = \"type\";", "modifier": "private static final", "type": "String", "declarator": "TYPE_KEY = \"type\"", "var_name": "TYPE_KEY"}, {"original_string": "private static final String DRIVER_KEY = \"driver\";", "modifier": "private static final", "type": "String", "declarator": "DRIVER_KEY = \"driver\"", "var_name": "DRIVER_KEY"}, {"original_string": "private static final String URL_KEY = \"url\";", "modifier": "private static final", "type": "String", "declarator": "URL_KEY = \"url\"", "var_name": "URL_KEY"}, {"original_string": "private static final String USERNAME_KEY = \"username\";", "modifier": "private static final", "type": "String", "declarator": "USERNAME_KEY = \"username\"", "var_name": "USERNAME_KEY"}, {"original_string": "private static final String PASSWORD_KEY = \"password\";", "modifier": "private static final", "type": "String", "declarator": "PASSWORD_KEY = \"password\"", "var_name": "PASSWORD_KEY"}, {"original_string": "private static final String HOSTNAME_KEY = \"hostname\";", "modifier": "private static final", "type": "String", "declarator": "HOSTNAME_KEY = \"hostname\"", "var_name": "HOSTNAME_KEY"}, {"original_string": "private static final String PORT_KEY = \"port\";", "modifier": "private static final", "type": "String", "declarator": "PORT_KEY = \"port\"", "var_name": "PORT_KEY"}, {"original_string": "private static final String DATABASE_TYPE_KEY = \"database_type\";", "modifier": "private static final", "type": "String", "declarator": "DATABASE_TYPE_KEY = \"database_type\"", "var_name": "DATABASE_TYPE_KEY"}, {"original_string": "private static final String DATABASE_NAME_KEY = \"database_name\";", "modifier": "private static final", "type": "String", "declarator": "DATABASE_NAME_KEY = \"database_name\"", "var_name": "DATABASE_NAME_KEY"}, {"original_string": "private static final String JNDI_LOCATION = \"jndi-location\";", "modifier": "private static final", "type": "String", "declarator": "JNDI_LOCATION = \"jndi-location\"", "var_name": "JNDI_LOCATION"}], "methods": [{"identifier": "JdbcConnectionDefinitionManager", "parameters": "()", "modifiers": "public", "return": "", "signature": " JdbcConnectionDefinitionManager()", "full_signature": "public  JdbcConnectionDefinitionManager()", "class_method_signature": "JdbcConnectionDefinitionManager.JdbcConnectionDefinitionManager()", "testcase": false, "constructor": true}, {"identifier": "JdbcConnectionDefinitionManager", "parameters": "( final String node )", "modifiers": "public", "return": "", "signature": " JdbcConnectionDefinitionManager( final String node )", "full_signature": "public  JdbcConnectionDefinitionManager( final String node )", "class_method_signature": "JdbcConnectionDefinitionManager.JdbcConnectionDefinitionManager( final String node )", "testcase": false, "constructor": true}, {"identifier": "JdbcConnectionDefinitionManager", "parameters": "( final Preferences externalPreferences, final String node )", "modifiers": "", "return": "", "signature": " JdbcConnectionDefinitionManager( final Preferences externalPreferences, final String node )", "full_signature": "  JdbcConnectionDefinitionManager( final Preferences externalPreferences, final String node )", "class_method_signature": "JdbcConnectionDefinitionManager.JdbcConnectionDefinitionManager( final Preferences externalPreferences, final String node )", "testcase": false, "constructor": true}, {"identifier": "getSources", "parameters": "()", "modifiers": "public", "return": "JdbcConnectionDefinition[]", "signature": "JdbcConnectionDefinition[] getSources()", "full_signature": "public JdbcConnectionDefinition[] getSources()", "class_method_signature": "JdbcConnectionDefinitionManager.getSources()", "testcase": false, "constructor": false}, {"identifier": "removeSource", "parameters": "( final String name )", "modifiers": "public", "return": "void", "signature": "void removeSource( final String name )", "full_signature": "public void removeSource( final String name )", "class_method_signature": "JdbcConnectionDefinitionManager.removeSource( final String name )", "testcase": false, "constructor": false}, {"identifier": "updateSourceList", "parameters": "( final JdbcConnectionDefinition source )", "modifiers": "public", "return": "boolean", "signature": "boolean updateSourceList( final JdbcConnectionDefinition source )", "full_signature": "public boolean updateSourceList( final JdbcConnectionDefinition source )", "class_method_signature": "JdbcConnectionDefinitionManager.updateSourceList( final JdbcConnectionDefinition source )", "testcase": false, "constructor": false}, {"identifier": "updateSourceList", "parameters": "( final DriverConnectionDefinition source )", "modifiers": "private", "return": "boolean", "signature": "boolean updateSourceList( final DriverConnectionDefinition source )", "full_signature": "private boolean updateSourceList( final DriverConnectionDefinition source )", "class_method_signature": "JdbcConnectionDefinitionManager.updateSourceList( final DriverConnectionDefinition source )", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "( final Preferences node, final String key, final String value )", "modifiers": "private static", "return": "void", "signature": "void put( final Preferences node, final String key, final String value )", "full_signature": "private static void put( final Preferences node, final String key, final String value )", "class_method_signature": "JdbcConnectionDefinitionManager.put( final Preferences node, final String key, final String value )", "testcase": false, "constructor": false}, {"identifier": "updateSourceList", "parameters": "( final JndiConnectionDefinition source )", "modifiers": "private", "return": "boolean", "signature": "boolean updateSourceList( final JndiConnectionDefinition source )", "full_signature": "private boolean updateSourceList( final JndiConnectionDefinition source )", "class_method_signature": "JdbcConnectionDefinitionManager.updateSourceList( final JndiConnectionDefinition source )", "testcase": false, "constructor": false}], "file": "designer/datasource-editor-jdbc/src/main/java/org/pentaho/reporting/ui/datasources/jdbc/connection/JdbcConnectionDefinitionManager.java"}, "focal_method": {"identifier": "removeSource", "parameters": "( final String name )", "modifiers": "public", "return": "void", "body": "public void removeSource( final String name ) {\n    // Make sure the name provided is not null\n    if ( StringUtils.isEmpty( name ) ) {\n      throw new IllegalArgumentException( \"The provided name is invalid\" );\n    }\n\n    // If the source is in our list, remove it\n    connectionDefinitions.remove( name );\n\n    // Remove the entry from the user preferences\n    try {\n      final Preferences node = userPreferences.node( name );\n      if ( node != null ) {\n        node.removeNode();\n        userPreferences.flush();\n      }\n    } catch ( BackingStoreException e ) {\n      log.error( \"Could not remove JNDI connection entry [\" + name + ']', e );\n    }\n\n  }", "signature": "void removeSource( final String name )", "full_signature": "public void removeSource( final String name )", "class_method_signature": "JdbcConnectionDefinitionManager.removeSource( final String name )", "testcase": false, "constructor": false, "invocations": ["isEmpty", "remove", "node", "removeNode", "flush", "error"]}, "repository": {"repo_id": 7506968, "url": "https://github.com/pentaho/pentaho-reporting", "stars": 189, "created": "1/8/2013 6:41:44 PM +00:00", "updates": "2020-01-20T06:07:55+00:00", "fork": "False", "license": "licensed"}}