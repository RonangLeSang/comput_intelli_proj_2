{"test_class": {"identifier": "FileObjectResourceLoaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String STRING_SERIALIZATION_PREFIX = \"resourcekey:\";", "modifier": "private static final", "type": "String", "declarator": "STRING_SERIALIZATION_PREFIX = \"resourcekey:\"", "var_name": "STRING_SERIALIZATION_PREFIX"}, {"original_string": "private static final String DESERIALIZE_PREFIX = STRING_SERIALIZATION_PREFIX + FileObjectResourceLoader.class.getName();", "modifier": "private static final", "type": "String", "declarator": "DESERIALIZE_PREFIX = STRING_SERIALIZATION_PREFIX + FileObjectResourceLoader.class.getName()", "var_name": "DESERIALIZE_PREFIX"}], "file": "libraries/libloader/src/test/java/org/pentaho/reporting/libraries/resourceloader/loader/fileobject/FileObjectResourceLoaderTest.java"}, "test_case": {"identifier": "deriveKeyTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void deriveKeyTest() throws Exception {\n    String parentFolder = System.getProperty( \"os.name\" ).startsWith( \"Windows\" ) ? \"C:/parentFolder/parentfile.txt\" : \"/parentFolder/parentfile.txt\";\n    String expected = System.getProperty( \"os.name\" ).startsWith( \"Windows\" ) ? \"file:///C:/parentFolder/test.txt\" : \"file:///parentFolder/test.txt\";\n    FileObject identifier = mock( FileObject.class );\n    FileName fileName = mock( FileName.class );\n    FileSystem fileSystem = mock( FileSystem.class );\n    when( identifier.getName() ).thenReturn( fileName );\n    when( fileName.getURI() ).thenReturn( parentFolder );\n    when( identifier.getFileSystem() ).thenReturn( fileSystem );\n    FileObjectResourceLoader fileObjectResourceLoader = new FileObjectResourceLoader();\n    ResourceKey parent = new ResourceKey( FileObjectResourceLoader.SCHEMA_NAME, identifier, null );\n    ResourceKey derivedKey = fileObjectResourceLoader.deriveKey( parent, \"test.txt\", null );\n    assertEquals( expected, derivedKey.getIdentifierAsString() );\n  }", "signature": "void deriveKeyTest()", "full_signature": "@Test public void deriveKeyTest()", "class_method_signature": "FileObjectResourceLoaderTest.deriveKeyTest()", "testcase": true, "constructor": false, "invocations": ["startsWith", "getProperty", "startsWith", "getProperty", "mock", "mock", "mock", "thenReturn", "when", "getName", "thenReturn", "when", "getURI", "thenReturn", "when", "getFileSystem", "deriveKey", "assertEquals", "getIdentifierAsString"]}, "focal_class": {"identifier": "FileObjectResourceLoader", "superclass": "", "interfaces": "implements ResourceLoader", "fields": [{"original_string": "public static final String SCHEMA_NAME = FileObjectResourceLoader.class.getName();", "modifier": "public static final", "type": "String", "declarator": "SCHEMA_NAME = FileObjectResourceLoader.class.getName()", "var_name": "SCHEMA_NAME"}, {"original_string": "private static final Log logger = LogFactory.getLog( FileObjectResourceLoader.class );", "modifier": "private static final", "type": "Log", "declarator": "logger = LogFactory.getLog( FileObjectResourceLoader.class )", "var_name": "logger"}], "methods": [{"identifier": "FileObjectResourceLoader", "parameters": "()", "modifiers": "public", "return": "", "signature": " FileObjectResourceLoader()", "full_signature": "public  FileObjectResourceLoader()", "class_method_signature": "FileObjectResourceLoader.FileObjectResourceLoader()", "testcase": false, "constructor": true}, {"identifier": "isSupportedKey", "parameters": "( final ResourceKey key )", "modifiers": "public", "return": "boolean", "signature": "boolean isSupportedKey( final ResourceKey key )", "full_signature": "public boolean isSupportedKey( final ResourceKey key )", "class_method_signature": "FileObjectResourceLoader.isSupportedKey( final ResourceKey key )", "testcase": false, "constructor": false}, {"identifier": "createKey", "parameters": "( final Object value, final Map factoryKeys )", "modifiers": "public", "return": "ResourceKey", "signature": "ResourceKey createKey( final Object value, final Map factoryKeys )", "full_signature": "public ResourceKey createKey( final Object value, final Map factoryKeys )", "class_method_signature": "FileObjectResourceLoader.createKey( final Object value, final Map factoryKeys )", "testcase": false, "constructor": false}, {"identifier": "deriveKey", "parameters": "( final ResourceKey parent, final String path, final Map factoryKeys )", "modifiers": "public", "return": "ResourceKey", "signature": "ResourceKey deriveKey( final ResourceKey parent, final String path, final Map factoryKeys )", "full_signature": "public ResourceKey deriveKey( final ResourceKey parent, final String path, final Map factoryKeys )", "class_method_signature": "FileObjectResourceLoader.deriveKey( final ResourceKey parent, final String path, final Map factoryKeys )", "testcase": false, "constructor": false}, {"identifier": "toURL", "parameters": "( final ResourceKey key )", "modifiers": "public", "return": "URL", "signature": "URL toURL( final ResourceKey key )", "full_signature": "public URL toURL( final ResourceKey key )", "class_method_signature": "FileObjectResourceLoader.toURL( final ResourceKey key )", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "( final ResourceKey key )", "modifiers": "public", "return": "ResourceData", "signature": "ResourceData load( final ResourceKey key )", "full_signature": "public ResourceData load( final ResourceKey key )", "class_method_signature": "FileObjectResourceLoader.load( final ResourceKey key )", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "( final ResourceKey bundleKey, final ResourceKey key )", "modifiers": "public", "return": "String", "signature": "String serialize( final ResourceKey bundleKey, final ResourceKey key )", "full_signature": "public String serialize( final ResourceKey bundleKey, final ResourceKey key )", "class_method_signature": "FileObjectResourceLoader.serialize( final ResourceKey bundleKey, final ResourceKey key )", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "( final ResourceKey bundleKey, final String stringKey )", "modifiers": "public", "return": "ResourceKey", "signature": "ResourceKey deserialize( final ResourceKey bundleKey, final String stringKey )", "full_signature": "public ResourceKey deserialize( final ResourceKey bundleKey, final String stringKey )", "class_method_signature": "FileObjectResourceLoader.deserialize( final ResourceKey bundleKey, final String stringKey )", "testcase": false, "constructor": false}, {"identifier": "isSupportedDeserializer", "parameters": "( final String data )", "modifiers": "public", "return": "boolean", "signature": "boolean isSupportedDeserializer( final String data )", "full_signature": "public boolean isSupportedDeserializer( final String data )", "class_method_signature": "FileObjectResourceLoader.isSupportedDeserializer( final String data )", "testcase": false, "constructor": false}], "file": "libraries/libloader/src/main/java/org/pentaho/reporting/libraries/resourceloader/loader/fileobject/FileObjectResourceLoader.java"}, "focal_method": {"identifier": "deriveKey", "parameters": "( final ResourceKey parent, final String path, final Map factoryKeys )", "modifiers": "public", "return": "ResourceKey", "body": "public ResourceKey deriveKey( final ResourceKey parent, final String path, final Map factoryKeys )\n        throws ResourceKeyCreationException {\n    if ( isSupportedKey( parent ) == false ) {\n      throw new ResourceKeyCreationException( \"Assertation: Unsupported parent key type\" );\n    }\n    try {\n      final File target;\n      if ( path != null ) {\n        final File parentResource = new File( parent.getIdentifierAsString() );\n        final File parentFile = parentResource.getParentFile();\n        if ( parentFile == null ) {\n          throw new FileNotFoundException( \"Parent file does not exist\" );\n        }\n        target = new File( parentFile, path );\n      } else {\n        return parent;\n      }\n      final Map map;\n      if ( factoryKeys != null ) {\n        map = new HashMap();\n        map.putAll( parent.getFactoryParameters() );\n        map.putAll( factoryKeys );\n      } else {\n        map = parent.getFactoryParameters();\n      }\n      String targetIdentifier = ( (FileObject) parent.getIdentifier() ).getFileSystem() != null ? target.toString() : \"solution:\" + target.toString();\n      return new ResourceKey( parent.getSchema(), VFS.getManager().resolveFile( targetIdentifier ), map );\n    } catch ( IOException ioe ) {\n      throw new ResourceKeyCreationException( \"Failed to create key\", ioe );\n    }\n  }", "signature": "ResourceKey deriveKey( final ResourceKey parent, final String path, final Map factoryKeys )", "full_signature": "public ResourceKey deriveKey( final ResourceKey parent, final String path, final Map factoryKeys )", "class_method_signature": "FileObjectResourceLoader.deriveKey( final ResourceKey parent, final String path, final Map factoryKeys )", "testcase": false, "constructor": false, "invocations": ["isSupportedKey", "getIdentifierAsString", "getParentFile", "putAll", "getFactoryParameters", "putAll", "getFactoryParameters", "getFileSystem", "getIdentifier", "toString", "toString", "getSchema", "resolveFile", "getManager"]}, "repository": {"repo_id": 7506968, "url": "https://github.com/pentaho/pentaho-reporting", "stars": 189, "created": "1/8/2013 6:41:44 PM +00:00", "updates": "2020-01-20T06:07:55+00:00", "fork": "False", "license": "licensed"}}