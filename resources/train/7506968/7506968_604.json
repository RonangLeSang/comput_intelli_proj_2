{"test_class": {"identifier": "SessionPropertyReadHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String URI = \"test/uri\";", "modifier": "private static final", "type": "String", "declarator": "URI = \"test/uri\"", "var_name": "URI"}, {"original_string": "private static final String TAG_NAME = \"tag\";", "modifier": "private static final", "type": "String", "declarator": "TAG_NAME = \"tag\"", "var_name": "TAG_NAME"}, {"original_string": "private static final String ATTR_TYPE = \"string\";", "modifier": "private static final", "type": "String", "declarator": "ATTR_TYPE = \"string\"", "var_name": "ATTR_TYPE"}, {"original_string": "private static final String PROP_NAME = \"test-name\";", "modifier": "private static final", "type": "String", "declarator": "PROP_NAME = \"test-name\"", "var_name": "PROP_NAME"}, {"original_string": "private static final String PROP_VALUE = \"test_val\";", "modifier": "private static final", "type": "String", "declarator": "PROP_VALUE = \"test_val\"", "var_name": "PROP_VALUE"}, {"original_string": "private SessionPropertyReadHandler handler;", "modifier": "private", "type": "SessionPropertyReadHandler", "declarator": "handler", "var_name": "handler"}], "file": "engine/extensions/src/test/java/org/pentaho/reporting/engine/classic/extensions/modules/mailer/parser/SessionPropertyReadHandlerTest.java"}, "test_case": {"identifier": "testParsingWithoutValue", "parameters": "()", "modifiers": "@Test( expected = ParseException.class ) public", "return": "void", "body": "@Test( expected = ParseException.class )\n  public void testParsingWithoutValue() throws SAXException {\n    XMLAttributesImpl attrs = new XMLAttributesImpl();\n    attrs.addAttribute( new QName( null, \"name\", null, URI ), ATTR_TYPE, PROP_NAME );\n    attrs.addAttribute( new QName( null, \"value\", null, URI ), ATTR_TYPE, null );\n    AttributesProxy fAttributesProxy = new AttributesProxy( attrs );\n\n    handler.startParsing( fAttributesProxy );\n  }", "signature": "void testParsingWithoutValue()", "full_signature": "@Test( expected = ParseException.class ) public void testParsingWithoutValue()", "class_method_signature": "SessionPropertyReadHandlerTest.testParsingWithoutValue()", "testcase": true, "constructor": false, "invocations": ["addAttribute", "addAttribute", "startParsing"]}, "focal_class": {"identifier": "SessionPropertyReadHandler", "superclass": "extends AbstractXmlReadHandler", "interfaces": "", "fields": [{"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private String value;", "modifier": "private", "type": "String", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "SessionPropertyReadHandler", "parameters": "()", "modifiers": "public", "return": "", "signature": " SessionPropertyReadHandler()", "full_signature": "public  SessionPropertyReadHandler()", "class_method_signature": "SessionPropertyReadHandler.SessionPropertyReadHandler()", "testcase": false, "constructor": true}, {"identifier": "startParsing", "parameters": "( final Attributes attrs )", "modifiers": "protected", "return": "void", "signature": "void startParsing( final Attributes attrs )", "full_signature": "protected void startParsing( final Attributes attrs )", "class_method_signature": "SessionPropertyReadHandler.startParsing( final Attributes attrs )", "testcase": false, "constructor": false}, {"identifier": "getObject", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object getObject()", "full_signature": "public Object getObject()", "class_method_signature": "SessionPropertyReadHandler.getObject()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "SessionPropertyReadHandler.getName()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getValue()", "full_signature": "public String getValue()", "class_method_signature": "SessionPropertyReadHandler.getValue()", "testcase": false, "constructor": false}], "file": "engine/extensions/src/main/java/org/pentaho/reporting/engine/classic/extensions/modules/mailer/parser/SessionPropertyReadHandler.java"}, "focal_method": {"identifier": "startParsing", "parameters": "( final Attributes attrs )", "modifiers": "protected", "return": "void", "body": "protected void startParsing( final Attributes attrs ) throws SAXException {\n    name = attrs.getValue( getUri(), \"name\" );\n    if ( StringUtils.isEmpty( name ) ) {\n      throw new ParseException( \"Required attribute 'name' is missing.\", getLocator() );\n    }\n    value = attrs.getValue( getUri(), \"value\" );\n    if ( StringUtils.isEmpty( value ) ) {\n      throw new ParseException( \"Required attribute 'value' is missing.\", getLocator() );\n    }\n  }", "signature": "void startParsing( final Attributes attrs )", "full_signature": "protected void startParsing( final Attributes attrs )", "class_method_signature": "SessionPropertyReadHandler.startParsing( final Attributes attrs )", "testcase": false, "constructor": false, "invocations": ["getValue", "getUri", "isEmpty", "getLocator", "getValue", "getUri", "isEmpty", "getLocator"]}, "repository": {"repo_id": 7506968, "url": "https://github.com/pentaho/pentaho-reporting", "stars": 189, "created": "1/8/2013 6:41:44 PM +00:00", "updates": "2020-01-20T06:07:55+00:00", "fork": "False", "license": "licensed"}}