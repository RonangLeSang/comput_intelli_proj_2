{"test_class": {"identifier": "PieSparklinesWrapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PieSparklinesWrapper wrapper;", "modifier": "private", "type": "PieSparklinesWrapper", "declarator": "wrapper", "var_name": "wrapper"}, {"original_string": "private PieGraphDrawable sparkline;", "modifier": "private", "type": "PieGraphDrawable", "declarator": "sparkline", "var_name": "sparkline"}], "file": "engine/extensions/src/test/java/org/pentaho/reporting/engine/classic/extensions/modules/sparklines/PieSparklinesWrapperTest.java"}, "test_case": {"identifier": "testSetStyleSheetWithNullableColor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSetStyleSheetWithNullableColor() {\n    StyleSheet style = mock( StyleSheet.class );\n    doReturn( null ).when( style ).getStyleProperty( ElementStyleKeys.BACKGROUND_COLOR );\n    doReturn( null ).when( style ).getStyleProperty( ElementStyleKeys.PAINT );\n    doReturn( null ).when( style ).getStyleProperty( SparklineStyleKeys.LAST_COLOR );\n    doReturn( null ).when( style ).getStyleProperty( SparklineStyleKeys.HIGH_COLOR );\n\n    wrapper.setStyleSheet( style );\n\n    verify( sparkline, never() ).setHighColor( any( Color.class ) );\n    verify( sparkline, never() ).setBackground( any( Color.class ) );\n    verify( sparkline, never() ).setColor( any( Color.class ) );\n    verify( sparkline, never() ).setMediumColor( any( Color.class ) );\n    verify( sparkline, never() ).setLowColor( any( Color.class ) );\n  }", "signature": "void testSetStyleSheetWithNullableColor()", "full_signature": "@Test public void testSetStyleSheetWithNullableColor()", "class_method_signature": "PieSparklinesWrapperTest.testSetStyleSheetWithNullableColor()", "testcase": true, "constructor": false, "invocations": ["mock", "getStyleProperty", "when", "doReturn", "getStyleProperty", "when", "doReturn", "getStyleProperty", "when", "doReturn", "getStyleProperty", "when", "doReturn", "setStyleSheet", "setHighColor", "verify", "never", "any", "setBackground", "verify", "never", "any", "setColor", "verify", "never", "any", "setMediumColor", "verify", "never", "any", "setLowColor", "verify", "never", "any"]}, "focal_class": {"identifier": "PieSparklinesWrapper", "superclass": "extends DrawableWrapper", "interfaces": "implements ReportDrawable", "fields": [], "methods": [{"identifier": "PieSparklinesWrapper", "parameters": "( final PieGraphDrawable sparkline )", "modifiers": "public", "return": "", "signature": " PieSparklinesWrapper( final PieGraphDrawable sparkline )", "full_signature": "public  PieSparklinesWrapper( final PieGraphDrawable sparkline )", "class_method_signature": "PieSparklinesWrapper.PieSparklinesWrapper( final PieGraphDrawable sparkline )", "testcase": false, "constructor": true}, {"identifier": "getPieGraphDrawable", "parameters": "()", "modifiers": "private", "return": "PieGraphDrawable", "signature": "PieGraphDrawable getPieGraphDrawable()", "full_signature": "private PieGraphDrawable getPieGraphDrawable()", "class_method_signature": "PieSparklinesWrapper.getPieGraphDrawable()", "testcase": false, "constructor": false}, {"identifier": "setConfiguration", "parameters": "( final Configuration config )", "modifiers": "public", "return": "void", "signature": "void setConfiguration( final Configuration config )", "full_signature": "public void setConfiguration( final Configuration config )", "class_method_signature": "PieSparklinesWrapper.setConfiguration( final Configuration config )", "testcase": false, "constructor": false}, {"identifier": "setStyleSheet", "parameters": "( final StyleSheet style )", "modifiers": "public", "return": "void", "signature": "void setStyleSheet( final StyleSheet style )", "full_signature": "public void setStyleSheet( final StyleSheet style )", "class_method_signature": "PieSparklinesWrapper.setStyleSheet( final StyleSheet style )", "testcase": false, "constructor": false}, {"identifier": "setResourceBundleFactory", "parameters": "( final ResourceBundleFactory bundleFactory )", "modifiers": "public", "return": "void", "signature": "void setResourceBundleFactory( final ResourceBundleFactory bundleFactory )", "full_signature": "public void setResourceBundleFactory( final ResourceBundleFactory bundleFactory )", "class_method_signature": "PieSparklinesWrapper.setResourceBundleFactory( final ResourceBundleFactory bundleFactory )", "testcase": false, "constructor": false}, {"identifier": "getImageMap", "parameters": "( final Rectangle2D bounds )", "modifiers": "public", "return": "ImageMap", "signature": "ImageMap getImageMap( final Rectangle2D bounds )", "full_signature": "public ImageMap getImageMap( final Rectangle2D bounds )", "class_method_signature": "PieSparklinesWrapper.getImageMap( final Rectangle2D bounds )", "testcase": false, "constructor": false}, {"identifier": "isPreserveAspectRatio", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isPreserveAspectRatio()", "full_signature": "public boolean isPreserveAspectRatio()", "class_method_signature": "PieSparklinesWrapper.isPreserveAspectRatio()", "testcase": false, "constructor": false}, {"identifier": "getPreferredSize", "parameters": "()", "modifiers": "public", "return": "Dimension", "signature": "Dimension getPreferredSize()", "full_signature": "public Dimension getPreferredSize()", "class_method_signature": "PieSparklinesWrapper.getPreferredSize()", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "( final Graphics2D g2, final Rectangle2D bounds )", "modifiers": "public", "return": "void", "signature": "void draw( final Graphics2D g2, final Rectangle2D bounds )", "full_signature": "public void draw( final Graphics2D g2, final Rectangle2D bounds )", "class_method_signature": "PieSparklinesWrapper.draw( final Graphics2D g2, final Rectangle2D bounds )", "testcase": false, "constructor": false}], "file": "engine/extensions/src/main/java/org/pentaho/reporting/engine/classic/extensions/modules/sparklines/PieSparklinesWrapper.java"}, "focal_method": {"identifier": "setStyleSheet", "parameters": "( final StyleSheet style )", "modifiers": "public", "return": "void", "body": "public void setStyleSheet( final StyleSheet style ) {\n    if ( style != null ) {\n      final Color backgroundColor = (Color) style.getStyleProperty( ElementStyleKeys.BACKGROUND_COLOR );\n      if ( backgroundColor != null ) {\n        getPieGraphDrawable().setBackground( backgroundColor );\n      }\n      final Color color = (Color) style.getStyleProperty( ElementStyleKeys.PAINT );\n      if ( color != null ) {\n        getPieGraphDrawable().setColor( color );\n      }\n      final Color lowColor = (Color) style.getStyleProperty( SparklineStyleKeys.LOW_COLOR );\n      if ( lowColor != null ) {\n        getPieGraphDrawable().setLowColor( lowColor );\n      }\n      final Color mediumColor = (Color) style.getStyleProperty( SparklineStyleKeys.MEDIUM_COLOR );\n      if ( mediumColor != null ) {\n        getPieGraphDrawable().setMediumColor( mediumColor );\n      }\n      final Color highColor = (Color) style.getStyleProperty( SparklineStyleKeys.HIGH_COLOR );\n      if ( highColor != null ) {\n        getPieGraphDrawable().setHighColor( highColor );\n      }\n    }\n  }", "signature": "void setStyleSheet( final StyleSheet style )", "full_signature": "public void setStyleSheet( final StyleSheet style )", "class_method_signature": "PieSparklinesWrapper.setStyleSheet( final StyleSheet style )", "testcase": false, "constructor": false, "invocations": ["getStyleProperty", "setBackground", "getPieGraphDrawable", "getStyleProperty", "setColor", "getPieGraphDrawable", "getStyleProperty", "setLowColor", "getPieGraphDrawable", "getStyleProperty", "setMediumColor", "getPieGraphDrawable", "getStyleProperty", "setHighColor", "getPieGraphDrawable"]}, "repository": {"repo_id": 7506968, "url": "https://github.com/pentaho/pentaho-reporting", "stars": 189, "created": "1/8/2013 6:41:44 PM +00:00", "updates": "2020-01-20T06:07:55+00:00", "fork": "False", "license": "licensed"}}