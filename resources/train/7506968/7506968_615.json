{"test_class": {"identifier": "MailDefinitionReadHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String URI = \"test/uri\";", "modifier": "private static final", "type": "String", "declarator": "URI = \"test/uri\"", "var_name": "URI"}, {"original_string": "private MailDefinitionReadHandler handler;", "modifier": "private", "type": "MailDefinitionReadHandler", "declarator": "handler", "var_name": "handler"}], "file": "engine/extensions/src/test/java/org/pentaho/reporting/engine/classic/extensions/modules/mailer/parser/MailDefinitionReadHandlerTest.java"}, "test_case": {"identifier": "testParsingIncorrectParameters", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testParsingIncorrectParameters() throws SAXException {\n    XmlReadHandler childHandler = handler.getHandlerForChild( BundleNamespaces.DATADEFINITION, \"incorrect-tag\", null );\n    assertThat( childHandler, is( nullValue() ) );\n\n    childHandler = handler.getHandlerForChild( \"incorrectUri\", \"incorrect-tag\", null );\n    assertThat( childHandler, is( nullValue() ) );\n\n    childHandler = handler.getHandlerForChild( URI, \"incorrect-tag\", null );\n    assertThat( childHandler, is( nullValue() ) );\n  }", "signature": "void testParsingIncorrectParameters()", "full_signature": "@Test public void testParsingIncorrectParameters()", "class_method_signature": "MailDefinitionReadHandlerTest.testParsingIncorrectParameters()", "testcase": true, "constructor": false, "invocations": ["getHandlerForChild", "assertThat", "is", "nullValue", "getHandlerForChild", "assertThat", "is", "nullValue", "getHandlerForChild", "assertThat", "is", "nullValue"]}, "focal_class": {"identifier": "MailDefinitionReadHandler", "superclass": "extends AbstractXmlReadHandler", "interfaces": "", "fields": [{"original_string": "private MailDefinition mailDefinition;", "modifier": "private", "type": "MailDefinition", "declarator": "mailDefinition", "var_name": "mailDefinition"}, {"original_string": "private HeadersReadHandler headersReadHandler;", "modifier": "private", "type": "HeadersReadHandler", "declarator": "headersReadHandler", "var_name": "headersReadHandler"}, {"original_string": "private SessionPropertiesReadHandler sessionPropertiesReadHandler;", "modifier": "private", "type": "SessionPropertiesReadHandler", "declarator": "sessionPropertiesReadHandler", "var_name": "sessionPropertiesReadHandler"}, {"original_string": "private StringReadHandler burstQueryReadHandler;", "modifier": "private", "type": "StringReadHandler", "declarator": "burstQueryReadHandler", "var_name": "burstQueryReadHandler"}, {"original_string": "private StringReadHandler recipientsQueryReadHandler;", "modifier": "private", "type": "StringReadHandler", "declarator": "recipientsQueryReadHandler", "var_name": "recipientsQueryReadHandler"}, {"original_string": "private ReportReadHandler bodyReportReadHandler;", "modifier": "private", "type": "ReportReadHandler", "declarator": "bodyReportReadHandler", "var_name": "bodyReportReadHandler"}, {"original_string": "private ArrayList attachmentReportReadHandlers;", "modifier": "private", "type": "ArrayList", "declarator": "attachmentReportReadHandlers", "var_name": "attachmentReportReadHandlers"}, {"original_string": "private MasterParameterDefinitionReadHandler parameterDefinitionReadHandler;", "modifier": "private", "type": "MasterParameterDefinitionReadHandler", "declarator": "parameterDefinitionReadHandler", "var_name": "parameterDefinitionReadHandler"}, {"original_string": "private DataSourceElementHandler dataSourceElementHandler;", "modifier": "private", "type": "DataSourceElementHandler", "declarator": "dataSourceElementHandler", "var_name": "dataSourceElementHandler"}], "methods": [{"identifier": "MailDefinitionReadHandler", "parameters": "()", "modifiers": "public", "return": "", "signature": " MailDefinitionReadHandler()", "full_signature": "public  MailDefinitionReadHandler()", "class_method_signature": "MailDefinitionReadHandler.MailDefinitionReadHandler()", "testcase": false, "constructor": true}, {"identifier": "getHandlerForChild", "parameters": "( final String uri, final String tagName, final Attributes atts )", "modifiers": "protected", "return": "XmlReadHandler", "signature": "XmlReadHandler getHandlerForChild( final String uri, final String tagName, final Attributes atts )", "full_signature": "protected XmlReadHandler getHandlerForChild( final String uri, final String tagName, final Attributes atts )", "class_method_signature": "MailDefinitionReadHandler.getHandlerForChild( final String uri, final String tagName, final Attributes atts )", "testcase": false, "constructor": false}, {"identifier": "doneParsing", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void doneParsing()", "full_signature": "protected void doneParsing()", "class_method_signature": "MailDefinitionReadHandler.doneParsing()", "testcase": false, "constructor": false}, {"identifier": "getObject", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object getObject()", "full_signature": "public Object getObject()", "class_method_signature": "MailDefinitionReadHandler.getObject()", "testcase": false, "constructor": false}], "file": "engine/extensions/src/main/java/org/pentaho/reporting/engine/classic/extensions/modules/mailer/parser/MailDefinitionReadHandler.java"}, "focal_method": {"identifier": "getHandlerForChild", "parameters": "( final String uri, final String tagName, final Attributes atts )", "modifiers": "protected", "return": "XmlReadHandler", "body": "protected XmlReadHandler getHandlerForChild( final String uri, final String tagName, final Attributes atts )\n    throws SAXException {\n    if ( BundleNamespaces.DATADEFINITION.equals( uri ) ) {\n      if ( \"parameter-definition\".equals( tagName ) ) {\n        parameterDefinitionReadHandler = new MasterParameterDefinitionReadHandler();\n        return parameterDefinitionReadHandler;\n      }\n      if ( \"data-source\".equals( tagName ) ) {\n        dataSourceElementHandler = new DataSourceElementHandler();\n        return dataSourceElementHandler;\n      }\n      return null;\n    }\n\n    if ( isSameNamespace( uri ) == false ) {\n      return null;\n    }\n    if ( \"header\".equals( tagName ) ) {\n      headersReadHandler = new HeadersReadHandler();\n      return headersReadHandler;\n    }\n    if ( \"session\".equals( tagName ) ) {\n      sessionPropertiesReadHandler = new SessionPropertiesReadHandler();\n      return sessionPropertiesReadHandler;\n    }\n    if ( \"burst-query\".equals( tagName ) ) {\n      burstQueryReadHandler = new StringReadHandler();\n      return burstQueryReadHandler;\n    }\n    if ( \"recipients-query\".equals( tagName ) ) {\n      recipientsQueryReadHandler = new StringReadHandler();\n      return recipientsQueryReadHandler;\n    }\n    if ( \"body-report\".equals( tagName ) ) {\n      bodyReportReadHandler = new ReportReadHandler();\n      return bodyReportReadHandler;\n    }\n    if ( \"attachment-report\".equals( tagName ) ) {\n      final ReportReadHandler reportReadHandler = new ReportReadHandler();\n      attachmentReportReadHandlers.add( reportReadHandler );\n      return reportReadHandler;\n    }\n    return null;\n  }", "signature": "XmlReadHandler getHandlerForChild( final String uri, final String tagName, final Attributes atts )", "full_signature": "protected XmlReadHandler getHandlerForChild( final String uri, final String tagName, final Attributes atts )", "class_method_signature": "MailDefinitionReadHandler.getHandlerForChild( final String uri, final String tagName, final Attributes atts )", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "equals", "isSameNamespace", "equals", "equals", "equals", "equals", "equals", "equals", "add"]}, "repository": {"repo_id": 7506968, "url": "https://github.com/pentaho/pentaho-reporting", "stars": 189, "created": "1/8/2013 6:41:44 PM +00:00", "updates": "2020-01-20T06:07:55+00:00", "fork": "False", "license": "licensed"}}