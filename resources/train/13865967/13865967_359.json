{"test_class": {"identifier": "KeyStoreManagementTest", "superclass": "", "interfaces": "", "fields": [], "file": "cougar-framework/cougar-util/src/test/java/com/betfair/cougar/util/KeyStoreManagementTest.java"}, "test_case": {"identifier": "truststore", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void truststore() throws Exception {\n        KeyStoreManagement ksm = KeyStoreManagement.getKeyStoreManagement(\"JKS\", new FileSystemResource(getTruststorePath()), \"password\");\n        assertNotNull(ksm);\n\n    }", "signature": "void truststore()", "full_signature": "@Test public void truststore()", "class_method_signature": "KeyStoreManagementTest.truststore()", "testcase": true, "constructor": false, "invocations": ["getKeyStoreManagement", "getTruststorePath", "assertNotNull"]}, "focal_class": {"identifier": "KeyStoreManagement", "superclass": "", "interfaces": "implements DynamicMBean", "fields": [{"original_string": "private KeyStore keyStore;", "modifier": "private", "type": "KeyStore", "declarator": "keyStore", "var_name": "keyStore"}, {"original_string": "private SortedMap<String, X509Certificate> certificates = new TreeMap<String, X509Certificate>();", "modifier": "private", "type": "SortedMap<String, X509Certificate>", "declarator": "certificates = new TreeMap<String, X509Certificate>()", "var_name": "certificates"}, {"original_string": "private SortedMap<String, X509Certificate[]> certificateChains = new TreeMap<String, X509Certificate[]>();", "modifier": "private", "type": "SortedMap<String, X509Certificate[]>", "declarator": "certificateChains = new TreeMap<String, X509Certificate[]>()", "var_name": "certificateChains"}, {"original_string": "private Map<String, ValueResolver> attributeValues = new HashMap<String, ValueResolver>();", "modifier": "private", "type": "Map<String, ValueResolver>", "declarator": "attributeValues = new HashMap<String, ValueResolver>()", "var_name": "attributeValues"}, {"original_string": "private static String STRING = \"java.lang.String\";", "modifier": "private static", "type": "String", "declarator": "STRING = \"java.lang.String\"", "var_name": "STRING"}, {"original_string": "private final Resource source;", "modifier": "private final", "type": "Resource", "declarator": "source", "var_name": "source"}, {"original_string": "private final String type;", "modifier": "private final", "type": "String", "declarator": "type", "var_name": "type"}], "methods": [{"identifier": "getKeyStoreManagement", "parameters": "(String type, Resource source, String pass)", "modifiers": "public static", "return": "KeyStoreManagement", "signature": "KeyStoreManagement getKeyStoreManagement(String type, Resource source, String pass)", "full_signature": "public static KeyStoreManagement getKeyStoreManagement(String type, Resource source, String pass)", "class_method_signature": "KeyStoreManagement.getKeyStoreManagement(String type, Resource source, String pass)", "testcase": false, "constructor": false}, {"identifier": "KeyStoreManagement", "parameters": "(KeyStore keyStore, Resource source, String type)", "modifiers": "private", "return": "", "signature": " KeyStoreManagement(KeyStore keyStore, Resource source, String type)", "full_signature": "private  KeyStoreManagement(KeyStore keyStore, Resource source, String type)", "class_method_signature": "KeyStoreManagement.KeyStoreManagement(KeyStore keyStore, Resource source, String type)", "testcase": false, "constructor": true}, {"identifier": "addCertificateChain", "parameters": "(String alias)", "modifiers": "private", "return": "void", "signature": "void addCertificateChain(String alias)", "full_signature": "private void addCertificateChain(String alias)", "class_method_signature": "KeyStoreManagement.addCertificateChain(String alias)", "testcase": false, "constructor": false}, {"identifier": "addCertificate", "parameters": "(String alias)", "modifiers": "private", "return": "void", "signature": "void addCertificate(String alias)", "full_signature": "private void addCertificate(String alias)", "class_method_signature": "KeyStoreManagement.addCertificate(String alias)", "testcase": false, "constructor": false}, {"identifier": "getKeyStore", "parameters": "()", "modifiers": "public", "return": "KeyStore", "signature": "KeyStore getKeyStore()", "full_signature": "public KeyStore getKeyStore()", "class_method_signature": "KeyStoreManagement.getKeyStore()", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(Attribute attribute)", "modifiers": "@Override public", "return": "void", "signature": "void setAttribute(Attribute attribute)", "full_signature": "@Override public void setAttribute(Attribute attribute)", "class_method_signature": "KeyStoreManagement.setAttribute(Attribute attribute)", "testcase": false, "constructor": false}, {"identifier": "setAttributes", "parameters": "(AttributeList attributes)", "modifiers": "@Override public", "return": "AttributeList", "signature": "AttributeList setAttributes(AttributeList attributes)", "full_signature": "@Override public AttributeList setAttributes(AttributeList attributes)", "class_method_signature": "KeyStoreManagement.setAttributes(AttributeList attributes)", "testcase": false, "constructor": false}, {"identifier": "invoke", "parameters": "(String actionName, Object[] params, String[] signature)", "modifiers": "@Override public", "return": "Object", "signature": "Object invoke(String actionName, Object[] params, String[] signature)", "full_signature": "@Override public Object invoke(String actionName, Object[] params, String[] signature)", "class_method_signature": "KeyStoreManagement.invoke(String actionName, Object[] params, String[] signature)", "testcase": false, "constructor": false}, {"identifier": "getMBeanInfo", "parameters": "()", "modifiers": "@Override public", "return": "MBeanInfo", "signature": "MBeanInfo getMBeanInfo()", "full_signature": "@Override public MBeanInfo getMBeanInfo()", "class_method_signature": "KeyStoreManagement.getMBeanInfo()", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String attribute)", "modifiers": "@Override public", "return": "Object", "signature": "Object getAttribute(String attribute)", "full_signature": "@Override public Object getAttribute(String attribute)", "class_method_signature": "KeyStoreManagement.getAttribute(String attribute)", "testcase": false, "constructor": false}, {"identifier": "getAttributes", "parameters": "(String[] attributes)", "modifiers": "@Override public", "return": "AttributeList", "signature": "AttributeList getAttributes(String[] attributes)", "full_signature": "@Override public AttributeList getAttributes(String[] attributes)", "class_method_signature": "KeyStoreManagement.getAttributes(String[] attributes)", "testcase": false, "constructor": false}, {"identifier": "addComplexAttribute", "parameters": "(List<MBeanAttributeInfo> ret, String name, String type, String description, ValueResolver vr)", "modifiers": "private", "return": "void", "signature": "void addComplexAttribute(List<MBeanAttributeInfo> ret, String name, String type, String description, ValueResolver vr)", "full_signature": "private void addComplexAttribute(List<MBeanAttributeInfo> ret, String name, String type, String description, ValueResolver vr)", "class_method_signature": "KeyStoreManagement.addComplexAttribute(List<MBeanAttributeInfo> ret, String name, String type, String description, ValueResolver vr)", "testcase": false, "constructor": false}, {"identifier": "addCertificateAttributes", "parameters": "(List<MBeanAttributeInfo> ret, final X509Certificate certificate, String prefix)", "modifiers": "private", "return": "void", "signature": "void addCertificateAttributes(List<MBeanAttributeInfo> ret, final X509Certificate certificate, String prefix)", "full_signature": "private void addCertificateAttributes(List<MBeanAttributeInfo> ret, final X509Certificate certificate, String prefix)", "class_method_signature": "KeyStoreManagement.addCertificateAttributes(List<MBeanAttributeInfo> ret, final X509Certificate certificate, String prefix)", "testcase": false, "constructor": false}, {"identifier": "getAttributes", "parameters": "()", "modifiers": "private", "return": "MBeanAttributeInfo[]", "signature": "MBeanAttributeInfo[] getAttributes()", "full_signature": "private MBeanAttributeInfo[] getAttributes()", "class_method_signature": "KeyStoreManagement.getAttributes()", "testcase": false, "constructor": false}], "file": "cougar-framework/cougar-util/src/main/java/com/betfair/cougar/util/KeyStoreManagement.java"}, "focal_method": {"identifier": "getKeyStoreManagement", "parameters": "(String type, Resource source, String pass)", "modifiers": "public static", "return": "KeyStoreManagement", "body": "public static KeyStoreManagement getKeyStoreManagement(String type, Resource source, String pass) throws Exception {\n        if (type == null) {\n            throw new IllegalArgumentException(\"type cannot be null\");\n        }\n        KeyStore store = KeyStore.getInstance(type);\n        if (source == null || source.getFilename().equals(PropertyConfigurer.NO_DEFAULT)) {\n            return null;\n        }\n        InputStream is = source.getInputStream();\n        try {\n            store.load(is, pass.toCharArray());\n        } finally {\n            if (is != null) {\n                is.close();\n            }\n        }\n        return new KeyStoreManagement(store, source, type);\n    }", "signature": "KeyStoreManagement getKeyStoreManagement(String type, Resource source, String pass)", "full_signature": "public static KeyStoreManagement getKeyStoreManagement(String type, Resource source, String pass)", "class_method_signature": "KeyStoreManagement.getKeyStoreManagement(String type, Resource source, String pass)", "testcase": false, "constructor": false, "invocations": ["getInstance", "equals", "getFilename", "getInputStream", "load", "toCharArray", "close"]}, "repository": {"repo_id": 13865967, "url": "https://github.com/betfair/cougar", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 25, "size": 49594, "license": "licensed"}}