{"test_class": {"identifier": "ZipkinTracerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ZipkinEmitter zipkinEmitter;", "modifier": "@Mock\n    private", "type": "ZipkinEmitter", "declarator": "zipkinEmitter", "var_name": "zipkinEmitter"}, {"original_string": "@Mock\n    private ZipkinRequestUUIDImpl requestUUID;", "modifier": "@Mock\n    private", "type": "ZipkinRequestUUIDImpl", "declarator": "requestUUID", "var_name": "requestUUID"}, {"original_string": "@Mock\n    private ZipkinData zipkinData;", "modifier": "@Mock\n    private", "type": "ZipkinData", "declarator": "zipkinData", "var_name": "zipkinData"}, {"original_string": "@Mock\n    private OperationKey operationKey;", "modifier": "@Mock\n    private", "type": "OperationKey", "declarator": "operationKey", "var_name": "operationKey"}, {"original_string": "@InjectMocks\n    private ZipkinTracer victim = new ZipkinTracer();", "modifier": "@InjectMocks\n    private", "type": "ZipkinTracer", "declarator": "victim = new ZipkinTracer()", "var_name": "victim"}], "file": "cougar-framework/cougar-zipkin-common/src/test/java/com/betfair/cougar/modules/zipkin/impl/ZipkinTracerTest.java"}, "test_case": {"identifier": "startCall_WhenZipkinTracingIsEnabled_ShouldEmitClientSend", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void startCall_WhenZipkinTracingIsEnabled_ShouldEmitClientSend() {\n\n        when(requestUUID.isZipkinTracingEnabled()).thenReturn(true);\n        when(requestUUID.getZipkinData()).thenReturn(zipkinData);\n\n        victim.startCall(null, requestUUID, operationKey);\n\n        verify(zipkinEmitter).emitClientSend(zipkinData);\n    }", "signature": "void startCall_WhenZipkinTracingIsEnabled_ShouldEmitClientSend()", "full_signature": "@Test public void startCall_WhenZipkinTracingIsEnabled_ShouldEmitClientSend()", "class_method_signature": "ZipkinTracerTest.startCall_WhenZipkinTracingIsEnabled_ShouldEmitClientSend()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "isZipkinTracingEnabled", "thenReturn", "when", "getZipkinData", "startCall", "emitClientSend", "verify"]}, "focal_class": {"identifier": "ZipkinTracer", "superclass": "extends AbstractTracer", "interfaces": "", "fields": [{"original_string": "private ZipkinEmitter zipkinEmitter;", "modifier": "private", "type": "ZipkinEmitter", "declarator": "zipkinEmitter", "var_name": "zipkinEmitter"}], "methods": [{"identifier": "start", "parameters": "(RequestUUID uuid, OperationKey operationKey)", "modifiers": "@Override public", "return": "void", "signature": "void start(RequestUUID uuid, OperationKey operationKey)", "full_signature": "@Override public void start(RequestUUID uuid, OperationKey operationKey)", "class_method_signature": "ZipkinTracer.start(RequestUUID uuid, OperationKey operationKey)", "testcase": false, "constructor": false}, {"identifier": "trace", "parameters": "(RequestUUID uuid, String msg)", "modifiers": "@Override public", "return": "void", "signature": "void trace(RequestUUID uuid, String msg)", "full_signature": "@Override public void trace(RequestUUID uuid, String msg)", "class_method_signature": "ZipkinTracer.trace(RequestUUID uuid, String msg)", "testcase": false, "constructor": false}, {"identifier": "trace", "parameters": "(RequestUUID uuid, String msg, Object arg1)", "modifiers": "@Override public", "return": "void", "signature": "void trace(RequestUUID uuid, String msg, Object arg1)", "full_signature": "@Override public void trace(RequestUUID uuid, String msg, Object arg1)", "class_method_signature": "ZipkinTracer.trace(RequestUUID uuid, String msg, Object arg1)", "testcase": false, "constructor": false}, {"identifier": "trace", "parameters": "(RequestUUID uuid, String msg, Object arg1, Object arg2)", "modifiers": "@Override public", "return": "void", "signature": "void trace(RequestUUID uuid, String msg, Object arg1, Object arg2)", "full_signature": "@Override public void trace(RequestUUID uuid, String msg, Object arg1, Object arg2)", "class_method_signature": "ZipkinTracer.trace(RequestUUID uuid, String msg, Object arg1, Object arg2)", "testcase": false, "constructor": false}, {"identifier": "trace", "parameters": "(RequestUUID uuid, String msg, Object arg1, Object arg2, Object arg3)", "modifiers": "@Override public", "return": "void", "signature": "void trace(RequestUUID uuid, String msg, Object arg1, Object arg2, Object arg3)", "full_signature": "@Override public void trace(RequestUUID uuid, String msg, Object arg1, Object arg2, Object arg3)", "class_method_signature": "ZipkinTracer.trace(RequestUUID uuid, String msg, Object arg1, Object arg2, Object arg3)", "testcase": false, "constructor": false}, {"identifier": "trace", "parameters": "(RequestUUID uuid, String msg, Object... args)", "modifiers": "@Override public", "return": "void", "signature": "void trace(RequestUUID uuid, String msg, Object... args)", "full_signature": "@Override public void trace(RequestUUID uuid, String msg, Object... args)", "class_method_signature": "ZipkinTracer.trace(RequestUUID uuid, String msg, Object... args)", "testcase": false, "constructor": false}, {"identifier": "end", "parameters": "(RequestUUID uuid)", "modifiers": "@Override public", "return": "void", "signature": "void end(RequestUUID uuid)", "full_signature": "@Override public void end(RequestUUID uuid)", "class_method_signature": "ZipkinTracer.end(RequestUUID uuid)", "testcase": false, "constructor": false}, {"identifier": "startCall", "parameters": "(RequestUUID uuid, RequestUUID subUuid, OperationKey operationKey)", "modifiers": "@Override public", "return": "void", "signature": "void startCall(RequestUUID uuid, RequestUUID subUuid, OperationKey operationKey)", "full_signature": "@Override public void startCall(RequestUUID uuid, RequestUUID subUuid, OperationKey operationKey)", "class_method_signature": "ZipkinTracer.startCall(RequestUUID uuid, RequestUUID subUuid, OperationKey operationKey)", "testcase": false, "constructor": false}, {"identifier": "endCall", "parameters": "(RequestUUID uuid, RequestUUID subUuid, OperationKey operationKey)", "modifiers": "@Override public", "return": "void", "signature": "void endCall(RequestUUID uuid, RequestUUID subUuid, OperationKey operationKey)", "full_signature": "@Override public void endCall(RequestUUID uuid, RequestUUID subUuid, OperationKey operationKey)", "class_method_signature": "ZipkinTracer.endCall(RequestUUID uuid, RequestUUID subUuid, OperationKey operationKey)", "testcase": false, "constructor": false}, {"identifier": "getZipkinDataIfReady", "parameters": "(@Nonnull RequestUUID uuid)", "modifiers": "private static", "return": "ZipkinData", "signature": "ZipkinData getZipkinDataIfReady(@Nonnull RequestUUID uuid)", "full_signature": "private static ZipkinData getZipkinDataIfReady(@Nonnull RequestUUID uuid)", "class_method_signature": "ZipkinTracer.getZipkinDataIfReady(@Nonnull RequestUUID uuid)", "testcase": false, "constructor": false}, {"identifier": "buildZipkinDataIfEnabled", "parameters": "(@Nonnull RequestUUID uuid, @Nonnull OperationKey operationKey)", "modifiers": "private static", "return": "ZipkinData", "signature": "ZipkinData buildZipkinDataIfEnabled(@Nonnull RequestUUID uuid, @Nonnull OperationKey operationKey)", "full_signature": "private static ZipkinData buildZipkinDataIfEnabled(@Nonnull RequestUUID uuid, @Nonnull OperationKey operationKey)", "class_method_signature": "ZipkinTracer.buildZipkinDataIfEnabled(@Nonnull RequestUUID uuid, @Nonnull OperationKey operationKey)", "testcase": false, "constructor": false}, {"identifier": "emitAnnotation", "parameters": "(@Nonnull ZipkinData zipkinData, String msg, Object... args)", "modifiers": "private", "return": "void", "signature": "void emitAnnotation(@Nonnull ZipkinData zipkinData, String msg, Object... args)", "full_signature": "private void emitAnnotation(@Nonnull ZipkinData zipkinData, String msg, Object... args)", "class_method_signature": "ZipkinTracer.emitAnnotation(@Nonnull ZipkinData zipkinData, String msg, Object... args)", "testcase": false, "constructor": false}, {"identifier": "setZipkinEmitter", "parameters": "(@Nonnull ZipkinEmitter zipkinEmitter)", "modifiers": "public", "return": "void", "signature": "void setZipkinEmitter(@Nonnull ZipkinEmitter zipkinEmitter)", "full_signature": "public void setZipkinEmitter(@Nonnull ZipkinEmitter zipkinEmitter)", "class_method_signature": "ZipkinTracer.setZipkinEmitter(@Nonnull ZipkinEmitter zipkinEmitter)", "testcase": false, "constructor": false}], "file": "cougar-framework/cougar-zipkin-common/src/main/java/com/betfair/cougar/modules/zipkin/impl/ZipkinTracer.java"}, "focal_method": {"identifier": "startCall", "parameters": "(RequestUUID uuid, RequestUUID subUuid, OperationKey operationKey)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void startCall(RequestUUID uuid, RequestUUID subUuid, OperationKey operationKey) {\n        ZipkinData zipkinData = buildZipkinDataIfEnabled(subUuid, operationKey);\n        if (zipkinData != null) {\n            zipkinEmitter.emitClientSend(zipkinData);\n        }\n    }", "signature": "void startCall(RequestUUID uuid, RequestUUID subUuid, OperationKey operationKey)", "full_signature": "@Override public void startCall(RequestUUID uuid, RequestUUID subUuid, OperationKey operationKey)", "class_method_signature": "ZipkinTracer.startCall(RequestUUID uuid, RequestUUID subUuid, OperationKey operationKey)", "testcase": false, "constructor": false, "invocations": ["buildZipkinDataIfEnabled", "emitClientSend"]}, "repository": {"repo_id": 13865967, "url": "https://github.com/betfair/cougar", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 25, "size": 49594, "license": "licensed"}}