{"test_class": {"identifier": "AbstractHttpCommandProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SERVICE_PATH = \"/myservice/v1.0\";", "modifier": "private static final", "type": "String", "declarator": "SERVICE_PATH = \"/myservice/v1.0\"", "var_name": "SERVICE_PATH"}, {"original_string": "protected static final OperationKey firstOpKey = new OperationKey(\n\t\t\tnew ServiceVersion(2, 1), \"HTTPTest\", \"FirstTestOp\");", "modifier": "protected static final", "type": "OperationKey", "declarator": "firstOpKey = new OperationKey(\n\t\t\tnew ServiceVersion(2, 1), \"HTTPTest\", \"FirstTestOp\")", "var_name": "firstOpKey"}, {"original_string": "protected static final Parameter[] firstOpParams = new Parameter[] { new Parameter(\n\t\t\t\"FirstOpFirstParam\", ParameterType.create(String.class, null),\n\t\t\tfalse) };", "modifier": "protected static final", "type": "Parameter[]", "declarator": "firstOpParams = new Parameter[] { new Parameter(\n\t\t\t\"FirstOpFirstParam\", ParameterType.create(String.class, null),\n\t\t\tfalse) }", "var_name": "firstOpParams"}, {"original_string": "protected static final ParameterType firstOpReturn = ParameterType.create(String.class,\n\t\t\tnull);", "modifier": "protected static final", "type": "ParameterType", "declarator": "firstOpReturn = ParameterType.create(String.class,\n\t\t\tnull)", "var_name": "firstOpReturn"}, {"original_string": "protected static final OperationKey mapOpKey = new OperationKey(\n\t\t\tnew ServiceVersion(2, 1), \"HTTPTest\", \"MapTestOp\");", "modifier": "protected static final", "type": "OperationKey", "declarator": "mapOpKey = new OperationKey(\n\t\t\tnew ServiceVersion(2, 1), \"HTTPTest\", \"MapTestOp\")", "var_name": "mapOpKey"}, {"original_string": "protected static final Parameter[] mapOpParams = new Parameter[] { new Parameter(\n\t\t\t\"MapOpFirstParam\", ParameterType.create(HashMap.class, Integer.class, Double.class),\n\t\t\tfalse) };", "modifier": "protected static final", "type": "Parameter[]", "declarator": "mapOpParams = new Parameter[] { new Parameter(\n\t\t\t\"MapOpFirstParam\", ParameterType.create(HashMap.class, Integer.class, Double.class),\n\t\t\tfalse) }", "var_name": "mapOpParams"}, {"original_string": "protected static final ParameterType mapOpReturn = ParameterType.create(HashMap.class, Integer.class, Double.class);", "modifier": "protected static final", "type": "ParameterType", "declarator": "mapOpReturn = ParameterType.create(HashMap.class, Integer.class, Double.class)", "var_name": "mapOpReturn"}, {"original_string": "protected static final OperationKey listOpKey = new OperationKey(\n\t\t\tnew ServiceVersion(2, 1), \"HTTPTest\", \"ListTestOp\");", "modifier": "protected static final", "type": "OperationKey", "declarator": "listOpKey = new OperationKey(\n\t\t\tnew ServiceVersion(2, 1), \"HTTPTest\", \"ListTestOp\")", "var_name": "listOpKey"}, {"original_string": "protected static final Parameter[] listOpParams = new Parameter[] { new Parameter(\n\t\t\t\"ListOpFirstParam\", ParameterType.create(List.class, Date.class),\n\t\t\tfalse) };", "modifier": "protected static final", "type": "Parameter[]", "declarator": "listOpParams = new Parameter[] { new Parameter(\n\t\t\t\"ListOpFirstParam\", ParameterType.create(List.class, Date.class),\n\t\t\tfalse) }", "var_name": "listOpParams"}, {"original_string": "protected static final ParameterType listOpReturn = ParameterType.create(List.class, Date.class);", "modifier": "protected static final", "type": "ParameterType", "declarator": "listOpReturn = ParameterType.create(List.class, Date.class)", "var_name": "listOpReturn"}, {"original_string": "protected static final OperationKey invalidOpKey = new OperationKey(\n\t\t\tnew ServiceVersion(2, 1), \"HTTPTest\", \"InvalidTestOp\");", "modifier": "protected static final", "type": "OperationKey", "declarator": "invalidOpKey = new OperationKey(\n\t\t\tnew ServiceVersion(2, 1), \"HTTPTest\", \"InvalidTestOp\")", "var_name": "invalidOpKey"}, {"original_string": "protected static final Parameter[] invalidOpParams = new Parameter[] { new Parameter(\n\t\t\t\"InvalidOpFirstParam\", ParameterType.create(TestEnum.class, null),\n\t\t\tfalse) };", "modifier": "protected static final", "type": "Parameter[]", "declarator": "invalidOpParams = new Parameter[] { new Parameter(\n\t\t\t\"InvalidOpFirstParam\", ParameterType.create(TestEnum.class, null),\n\t\t\tfalse) }", "var_name": "invalidOpParams"}, {"original_string": "protected static final ParameterType invalidOpReturn = ParameterType.create(TestEnum.class, null);", "modifier": "protected static final", "type": "ParameterType", "declarator": "invalidOpReturn = ParameterType.create(TestEnum.class, null)", "var_name": "invalidOpReturn"}, {"original_string": "protected static final OperationKey voidReturnOpKey = new OperationKey( new ServiceVersion(2, 1), \"HTTPTest\", \"VoidReturnTestOp\");", "modifier": "protected static final", "type": "OperationKey", "declarator": "voidReturnOpKey = new OperationKey( new ServiceVersion(2, 1), \"HTTPTest\", \"VoidReturnTestOp\")", "var_name": "voidReturnOpKey"}, {"original_string": "protected static final Parameter[] voidReturnOpParams = new Parameter[] { new Parameter(\"VoidReturnOpFirstParam\", ParameterType.create(TestEnum.class, null), true)};", "modifier": "protected static final", "type": "Parameter[]", "declarator": "voidReturnOpParams = new Parameter[] { new Parameter(\"VoidReturnOpFirstParam\", ParameterType.create(TestEnum.class, null), true)}", "var_name": "voidReturnOpParams"}, {"original_string": "protected DehydratedExecutionContext context;", "modifier": "protected", "type": "DehydratedExecutionContext", "declarator": "context", "var_name": "context"}, {"original_string": "protected XMLTestCase xmlTestCase = new XMLTestCase();", "modifier": "protected", "type": "XMLTestCase", "declarator": "xmlTestCase = new XMLTestCase()", "var_name": "xmlTestCase"}, {"original_string": "protected HttpServletRequest request;", "modifier": "protected", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "protected HttpServletResponse response;", "modifier": "protected", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}, {"original_string": "protected TestServletOutputStream testOut;", "modifier": "protected", "type": "TestServletOutputStream", "declarator": "testOut", "var_name": "testOut"}, {"original_string": "protected List<String[]> faultMessages;", "modifier": "protected", "type": "List<String[]>", "declarator": "faultMessages", "var_name": "faultMessages"}, {"original_string": "protected TestEV ev;", "modifier": "protected", "type": "TestEV", "declarator": "ev", "var_name": "ev"}, {"original_string": "protected RequestLogger logger;", "modifier": "protected", "type": "RequestLogger", "declarator": "logger", "var_name": "logger"}, {"original_string": "protected Tracer tracer;", "modifier": "protected", "type": "Tracer", "declarator": "tracer", "var_name": "tracer"}, {"original_string": "protected CommandValidatorRegistry<HttpCommand> validatorRegistry = new CommandValidatorRegistry<>();", "modifier": "protected", "type": "CommandValidatorRegistry<HttpCommand>", "declarator": "validatorRegistry = new CommandValidatorRegistry<>()", "var_name": "validatorRegistry"}, {"original_string": "protected DehydratedExecutionContextResolution contextResolution;", "modifier": "protected", "type": "DehydratedExecutionContextResolution", "declarator": "contextResolution", "var_name": "contextResolution"}, {"original_string": "protected LocalCommandProcessor commandProcessor;", "modifier": "protected", "type": "LocalCommandProcessor", "declarator": "commandProcessor", "var_name": "commandProcessor"}, {"original_string": "protected Protocol protocol;", "modifier": "protected", "type": "Protocol", "declarator": "protocol", "var_name": "protocol"}], "file": "cougar-framework/jetty-transport/src/test/java/com/betfair/cougar/transport/impl/protocol/http/AbstractHttpCommandProcessorTest.java"}, "test_case": {"identifier": "testMultipleServiceBindingSameMajorVersion", "parameters": "()", "modifiers": "@Test(expected = PanicInTheCougar.class) public", "return": "void", "body": "@Test(expected = PanicInTheCougar.class)\n    public void testMultipleServiceBindingSameMajorVersion() {\n        final String serviceName = \"testServiceName\";\n\n        commandProcessor.bind(new ServiceBindingDescriptor() {\n            @Override\n            public OperationBindingDescriptor[] getOperationBindings() {\n                return new OperationBindingDescriptor[0];  //To change body of implemented methods use File | Settings | File Templates.\n            }\n\n            @Override\n            public ServiceVersion getServiceVersion() {\n                return new ServiceVersion(\"v3.2\");\n            }\n\n            @Override\n            public String getServiceName() {\n                return serviceName;\n            }\n\n            @Override\n            public Protocol getServiceProtocol() {\n                return null;\n            }\n        });\n\n        commandProcessor.bind(new ServiceBindingDescriptor() {\n            @Override\n            public OperationBindingDescriptor[] getOperationBindings() {\n                return new OperationBindingDescriptor[0];  //To change body of implemented methods use File | Settings | File Templates.\n            }\n\n            @Override\n            public ServiceVersion getServiceVersion() {\n                return new ServiceVersion(\"v3.3\");\n            }\n\n            @Override\n            public String getServiceName() {\n                return serviceName;\n            }\n\n            @Override\n            public Protocol getServiceProtocol() {\n                return null;\n            }\n        });\n    }", "signature": "void testMultipleServiceBindingSameMajorVersion()", "full_signature": "@Test(expected = PanicInTheCougar.class) public void testMultipleServiceBindingSameMajorVersion()", "class_method_signature": "AbstractHttpCommandProcessorTest.testMultipleServiceBindingSameMajorVersion()", "testcase": true, "constructor": false, "invocations": ["bind", "bind"]}, "focal_class": {"identifier": "AbstractHttpCommandProcessor", "superclass": "extends\n\t\tAbstractCommandProcessor<HttpCommand>", "interfaces": "implements HttpCommandProcessor,\n\t\tGateListener", "fields": [{"original_string": "private static Logger LOGGER = LoggerFactory.getLogger(AbstractHttpCommandProcessor.class);", "modifier": "private static", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(AbstractHttpCommandProcessor.class)", "var_name": "LOGGER"}, {"original_string": "private static Pattern VERSION_REMOVAL_PATTERN = Pattern.compile(\"(/?.*/v\\\\d+)(?:\\\\.\\\\d+)?(/.*)?\", Pattern.CASE_INSENSITIVE);", "modifier": "private static", "type": "Pattern", "declarator": "VERSION_REMOVAL_PATTERN = Pattern.compile(\"(/?.*/v\\\\d+)(?:\\\\.\\\\d+)?(/.*)?\", Pattern.CASE_INSENSITIVE)", "var_name": "VERSION_REMOVAL_PATTERN"}, {"original_string": "private DehydratedExecutionContextResolution contextResolution;", "modifier": "private", "type": "DehydratedExecutionContextResolution", "declarator": "contextResolution", "var_name": "contextResolution"}, {"original_string": "private Protocol protocol;", "modifier": "private", "type": "Protocol", "declarator": "protocol", "var_name": "protocol"}, {"original_string": "private final String requestTimeoutHeader;", "modifier": "private final", "type": "String", "declarator": "requestTimeoutHeader", "var_name": "requestTimeoutHeader"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private int priority = 1;", "modifier": "private", "type": "int", "declarator": "priority = 1", "var_name": "priority"}, {"original_string": "private Map<String, ServiceBindingDescriptor> serviceBindingDescriptors = new HashMap<String, ServiceBindingDescriptor>();", "modifier": "private", "type": "Map<String, ServiceBindingDescriptor>", "declarator": "serviceBindingDescriptors = new HashMap<String, ServiceBindingDescriptor>()", "var_name": "serviceBindingDescriptors"}, {"original_string": "private RequestLogger requestLogger;", "modifier": "private", "type": "RequestLogger", "declarator": "requestLogger", "var_name": "requestLogger"}, {"original_string": "private ContentTypeNormaliser contentTypeNormaliser;", "modifier": "private", "type": "ContentTypeNormaliser", "declarator": "contentTypeNormaliser", "var_name": "contentTypeNormaliser"}, {"original_string": "private CommandValidatorRegistry<HttpCommand> validatorRegistry;", "modifier": "private", "type": "CommandValidatorRegistry<HttpCommand>", "declarator": "validatorRegistry", "var_name": "validatorRegistry"}, {"original_string": "protected boolean hardFailEnumDeserialisation;", "modifier": "protected", "type": "boolean", "declarator": "hardFailEnumDeserialisation", "var_name": "hardFailEnumDeserialisation"}, {"original_string": "protected long maxPostBodyLength;", "modifier": "protected", "type": "long", "declarator": "maxPostBodyLength", "var_name": "maxPostBodyLength"}], "methods": [{"identifier": "AbstractHttpCommandProcessor", "parameters": "(Protocol protocol, DehydratedExecutionContextResolution contextResolution, String requestTimeoutHeader)", "modifiers": "protected", "return": "", "signature": " AbstractHttpCommandProcessor(Protocol protocol, DehydratedExecutionContextResolution contextResolution, String requestTimeoutHeader)", "full_signature": "protected  AbstractHttpCommandProcessor(Protocol protocol, DehydratedExecutionContextResolution contextResolution, String requestTimeoutHeader)", "class_method_signature": "AbstractHttpCommandProcessor.AbstractHttpCommandProcessor(Protocol protocol, DehydratedExecutionContextResolution contextResolution, String requestTimeoutHeader)", "testcase": false, "constructor": true}, {"identifier": "setStartingGate", "parameters": "(CougarStartingGate startingGate)", "modifiers": "public", "return": "void", "signature": "void setStartingGate(CougarStartingGate startingGate)", "full_signature": "public void setStartingGate(CougarStartingGate startingGate)", "class_method_signature": "AbstractHttpCommandProcessor.setStartingGate(CougarStartingGate startingGate)", "testcase": false, "constructor": false}, {"identifier": "setRequestLogger", "parameters": "(RequestLogger requestLogger)", "modifiers": "public", "return": "void", "signature": "void setRequestLogger(RequestLogger requestLogger)", "full_signature": "public void setRequestLogger(RequestLogger requestLogger)", "class_method_signature": "AbstractHttpCommandProcessor.setRequestLogger(RequestLogger requestLogger)", "testcase": false, "constructor": false}, {"identifier": "isHardFailEnumDeserialisation", "parameters": "()", "modifiers": "@ManagedAttribute public", "return": "boolean", "signature": "boolean isHardFailEnumDeserialisation()", "full_signature": "@ManagedAttribute public boolean isHardFailEnumDeserialisation()", "class_method_signature": "AbstractHttpCommandProcessor.isHardFailEnumDeserialisation()", "testcase": false, "constructor": false}, {"identifier": "setHardFailEnumDeserialisation", "parameters": "(boolean hardFailEnumDeserialisation)", "modifiers": "public", "return": "void", "signature": "void setHardFailEnumDeserialisation(boolean hardFailEnumDeserialisation)", "full_signature": "public void setHardFailEnumDeserialisation(boolean hardFailEnumDeserialisation)", "class_method_signature": "AbstractHttpCommandProcessor.setHardFailEnumDeserialisation(boolean hardFailEnumDeserialisation)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override @ManagedAttribute public", "return": "String", "signature": "String getName()", "full_signature": "@Override @ManagedAttribute public String getName()", "class_method_signature": "AbstractHttpCommandProcessor.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void setName(String name)", "full_signature": "public void setName(String name)", "class_method_signature": "AbstractHttpCommandProcessor.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "getPriority", "parameters": "()", "modifiers": "@Override @ManagedAttribute public", "return": "int", "signature": "int getPriority()", "full_signature": "@Override @ManagedAttribute public int getPriority()", "class_method_signature": "AbstractHttpCommandProcessor.getPriority()", "testcase": false, "constructor": false}, {"identifier": "setPriority", "parameters": "(int priority)", "modifiers": "public", "return": "void", "signature": "void setPriority(int priority)", "full_signature": "public void setPriority(int priority)", "class_method_signature": "AbstractHttpCommandProcessor.setPriority(int priority)", "testcase": false, "constructor": false}, {"identifier": "bind", "parameters": "(ServiceBindingDescriptor bindingDescriptor)", "modifiers": "@Override public", "return": "void", "signature": "void bind(ServiceBindingDescriptor bindingDescriptor)", "full_signature": "@Override public void bind(ServiceBindingDescriptor bindingDescriptor)", "class_method_signature": "AbstractHttpCommandProcessor.bind(ServiceBindingDescriptor bindingDescriptor)", "testcase": false, "constructor": false}, {"identifier": "getCommandValidators", "parameters": "()", "modifiers": "@Override protected", "return": "List<CommandValidator<HttpCommand>>", "signature": "List<CommandValidator<HttpCommand>> getCommandValidators()", "full_signature": "@Override protected List<CommandValidator<HttpCommand>> getCommandValidators()", "class_method_signature": "AbstractHttpCommandProcessor.getCommandValidators()", "testcase": false, "constructor": false}, {"identifier": "getServiceBindingDescriptors", "parameters": "()", "modifiers": "protected", "return": "Iterable<ServiceBindingDescriptor>", "signature": "Iterable<ServiceBindingDescriptor> getServiceBindingDescriptors()", "full_signature": "protected Iterable<ServiceBindingDescriptor> getServiceBindingDescriptors()", "class_method_signature": "AbstractHttpCommandProcessor.getServiceBindingDescriptors()", "testcase": false, "constructor": false}, {"identifier": "logAccess", "parameters": "(final HttpCommand command,\n            final ExecutionContext context, final long bytesRead,\n            final long bytesWritten, final MediaType requestMediaType,\n            final MediaType responseMediaType, final ResponseCode responseCode)", "modifiers": "protected", "return": "void", "signature": "void logAccess(final HttpCommand command,\n            final ExecutionContext context, final long bytesRead,\n            final long bytesWritten, final MediaType requestMediaType,\n            final MediaType responseMediaType, final ResponseCode responseCode)", "full_signature": "protected void logAccess(final HttpCommand command,\n            final ExecutionContext context, final long bytesRead,\n            final long bytesWritten, final MediaType requestMediaType,\n            final MediaType responseMediaType, final ResponseCode responseCode)", "class_method_signature": "AbstractHttpCommandProcessor.logAccess(final HttpCommand command,\n            final ExecutionContext context, final long bytesRead,\n            final long bytesWritten, final MediaType requestMediaType,\n            final MediaType responseMediaType, final ResponseCode responseCode)", "testcase": false, "constructor": false}, {"identifier": "resolveContextForErrorHandling", "parameters": "(DehydratedExecutionContext ctx, HttpCommand command)", "modifiers": "protected", "return": "DehydratedExecutionContext", "signature": "DehydratedExecutionContext resolveContextForErrorHandling(DehydratedExecutionContext ctx, HttpCommand command)", "full_signature": "protected DehydratedExecutionContext resolveContextForErrorHandling(DehydratedExecutionContext ctx, HttpCommand command)", "class_method_signature": "AbstractHttpCommandProcessor.resolveContextForErrorHandling(DehydratedExecutionContext ctx, HttpCommand command)", "testcase": false, "constructor": false}, {"identifier": "readRawTimeConstraints", "parameters": "(HttpServletRequest request)", "modifiers": "protected", "return": "TimeConstraints", "signature": "TimeConstraints readRawTimeConstraints(HttpServletRequest request)", "full_signature": "protected TimeConstraints readRawTimeConstraints(HttpServletRequest request)", "class_method_signature": "AbstractHttpCommandProcessor.readRawTimeConstraints(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "resolveExecutionContext", "parameters": "(HttpCommand http, CredentialsContainer cc)", "modifiers": "protected", "return": "DehydratedExecutionContext", "signature": "DehydratedExecutionContext resolveExecutionContext(HttpCommand http, CredentialsContainer cc)", "full_signature": "protected DehydratedExecutionContext resolveExecutionContext(HttpCommand http, CredentialsContainer cc)", "class_method_signature": "AbstractHttpCommandProcessor.resolveExecutionContext(HttpCommand http, CredentialsContainer cc)", "testcase": false, "constructor": false}, {"identifier": "writeIdentity", "parameters": "(List<IdentityToken> tokens, IdentityTokenIOAdapter ioAdapter)", "modifiers": "public", "return": "void", "signature": "void writeIdentity(List<IdentityToken> tokens, IdentityTokenIOAdapter ioAdapter)", "full_signature": "public void writeIdentity(List<IdentityToken> tokens, IdentityTokenIOAdapter ioAdapter)", "class_method_signature": "AbstractHttpCommandProcessor.writeIdentity(List<IdentityToken> tokens, IdentityTokenIOAdapter ioAdapter)", "testcase": false, "constructor": false}, {"identifier": "handleResponseWritingIOException", "parameters": "(Exception e, Class resultClass)", "modifiers": "protected", "return": "CougarException", "signature": "CougarException handleResponseWritingIOException(Exception e, Class resultClass)", "full_signature": "protected CougarException handleResponseWritingIOException(Exception e, Class resultClass)", "class_method_signature": "AbstractHttpCommandProcessor.handleResponseWritingIOException(Exception e, Class resultClass)", "testcase": false, "constructor": false}, {"identifier": "getIOException", "parameters": "(Throwable e)", "modifiers": "private", "return": "IOException", "signature": "IOException getIOException(Throwable e)", "full_signature": "private IOException getIOException(Throwable e)", "class_method_signature": "AbstractHttpCommandProcessor.getIOException(Throwable e)", "testcase": false, "constructor": false}, {"identifier": "closeStream", "parameters": "(OutputStream out)", "modifiers": "protected", "return": "void", "signature": "void closeStream(OutputStream out)", "full_signature": "protected void closeStream(OutputStream out)", "class_method_signature": "AbstractHttpCommandProcessor.closeStream(OutputStream out)", "testcase": false, "constructor": false}, {"identifier": "stripMinorVersionFromUri", "parameters": "(String uri)", "modifiers": "protected", "return": "String", "signature": "String stripMinorVersionFromUri(String uri)", "full_signature": "protected String stripMinorVersionFromUri(String uri)", "class_method_signature": "AbstractHttpCommandProcessor.stripMinorVersionFromUri(String uri)", "testcase": false, "constructor": false}, {"identifier": "createByteCountingInputStream", "parameters": "(InputStream is)", "modifiers": "protected", "return": "ByteCountingInputStream", "signature": "ByteCountingInputStream createByteCountingInputStream(InputStream is)", "full_signature": "protected ByteCountingInputStream createByteCountingInputStream(InputStream is)", "class_method_signature": "AbstractHttpCommandProcessor.createByteCountingInputStream(InputStream is)", "testcase": false, "constructor": false}, {"identifier": "getContentTypeNormaliser", "parameters": "()", "modifiers": "public", "return": "ContentTypeNormaliser", "signature": "ContentTypeNormaliser getContentTypeNormaliser()", "full_signature": "public ContentTypeNormaliser getContentTypeNormaliser()", "class_method_signature": "AbstractHttpCommandProcessor.getContentTypeNormaliser()", "testcase": false, "constructor": false}, {"identifier": "setContentTypeNormaliser", "parameters": "(ContentTypeNormaliser contentTypeNormaliser)", "modifiers": "public", "return": "void", "signature": "void setContentTypeNormaliser(ContentTypeNormaliser contentTypeNormaliser)", "full_signature": "public void setContentTypeNormaliser(ContentTypeNormaliser contentTypeNormaliser)", "class_method_signature": "AbstractHttpCommandProcessor.setContentTypeNormaliser(ContentTypeNormaliser contentTypeNormaliser)", "testcase": false, "constructor": false}, {"identifier": "setValidatorRegistry", "parameters": "(CommandValidatorRegistry<HttpCommand> validatorRegistry)", "modifiers": "public", "return": "void", "signature": "void setValidatorRegistry(CommandValidatorRegistry<HttpCommand> validatorRegistry)", "full_signature": "public void setValidatorRegistry(CommandValidatorRegistry<HttpCommand> validatorRegistry)", "class_method_signature": "AbstractHttpCommandProcessor.setValidatorRegistry(CommandValidatorRegistry<HttpCommand> validatorRegistry)", "testcase": false, "constructor": false}, {"identifier": "getValidatorRegistry", "parameters": "()", "modifiers": "", "return": "CommandValidatorRegistry<HttpCommand>", "signature": "CommandValidatorRegistry<HttpCommand> getValidatorRegistry()", "full_signature": " CommandValidatorRegistry<HttpCommand> getValidatorRegistry()", "class_method_signature": "AbstractHttpCommandProcessor.getValidatorRegistry()", "testcase": false, "constructor": false}, {"identifier": "getMaxPostBodyLength", "parameters": "()", "modifiers": "@ManagedAttribute public", "return": "long", "signature": "long getMaxPostBodyLength()", "full_signature": "@ManagedAttribute public long getMaxPostBodyLength()", "class_method_signature": "AbstractHttpCommandProcessor.getMaxPostBodyLength()", "testcase": false, "constructor": false}, {"identifier": "setMaxPostBodyLength", "parameters": "(long maxPostBodyLength)", "modifiers": "public", "return": "void", "signature": "void setMaxPostBodyLength(long maxPostBodyLength)", "full_signature": "public void setMaxPostBodyLength(long maxPostBodyLength)", "class_method_signature": "AbstractHttpCommandProcessor.setMaxPostBodyLength(long maxPostBodyLength)", "testcase": false, "constructor": false}], "file": "cougar-framework/jetty-transport/src/main/java/com/betfair/cougar/transport/impl/protocol/http/AbstractHttpCommandProcessor.java"}, "focal_method": {"identifier": "bind", "parameters": "(ServiceBindingDescriptor bindingDescriptor)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void bind(ServiceBindingDescriptor bindingDescriptor) {\n        String servicePlusMajorVersion=bindingDescriptor.getServiceName() +\n                \"-v\" + bindingDescriptor.getServiceVersion().getMajor();\n\n        if (serviceBindingDescriptors.containsKey(servicePlusMajorVersion)) {\n                throw new PanicInTheCougar(\"More than one version of service [\" + bindingDescriptor.getServiceName() +\n                        \"] is attempting to be bound for the same major version. The clashing versions are [\" +\n                        serviceBindingDescriptors.get(servicePlusMajorVersion).getServiceVersion() + \", \" +\n                        bindingDescriptor.getServiceVersion() +\n                        \"] - only one instance of a service is permissable for each major version\");\n        }\n\t\tserviceBindingDescriptors.put(servicePlusMajorVersion, bindingDescriptor);\n\t}", "signature": "void bind(ServiceBindingDescriptor bindingDescriptor)", "full_signature": "@Override public void bind(ServiceBindingDescriptor bindingDescriptor)", "class_method_signature": "AbstractHttpCommandProcessor.bind(ServiceBindingDescriptor bindingDescriptor)", "testcase": false, "constructor": false, "invocations": ["getServiceName", "getMajor", "getServiceVersion", "containsKey", "getServiceName", "getServiceVersion", "get", "getServiceVersion", "put"]}, "repository": {"repo_id": 13865967, "url": "https://github.com/betfair/cougar", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 25, "size": 49594, "license": "licensed"}}