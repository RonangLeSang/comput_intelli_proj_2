{"test_class": {"identifier": "JSONBindingFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "cougar-framework/cougar-marshalling-impl/src/test/java/com/betfair/cougar/marshalling/impl/databinding/json/JSONBindingFactoryTest.java"}, "test_case": {"identifier": "testByteConversion", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testByteConversion() {\n        ObjectMapper mapper = new JSONBindingFactory().createBaseObjectMapper();\n        JsonNode paramValue = new IntNode(128);\n        JavaType javaType = SimpleType.construct(byte.class);\n        mapper.convertValue(paramValue, javaType);\n    }", "signature": "void testByteConversion()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testByteConversion()", "class_method_signature": "JSONBindingFactoryTest.testByteConversion()", "testcase": true, "constructor": false, "invocations": ["createBaseObjectMapper", "construct", "convertValue"]}, "focal_class": {"identifier": "JSONBindingFactory", "superclass": "", "interfaces": "implements DataBindingFactory", "fields": [{"original_string": "private final static Logger LOGGER = LoggerFactory.getLogger(JSONBindingFactory.class);", "modifier": "private final static", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(JSONBindingFactory.class)", "var_name": "LOGGER"}, {"original_string": "private final ObjectMapper objectMapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "objectMapper", "var_name": "objectMapper"}, {"original_string": "private final JSONMarshaller marshaller;", "modifier": "private final", "type": "JSONMarshaller", "declarator": "marshaller", "var_name": "marshaller"}, {"original_string": "private final JSONUnMarshaller unMarshaller;", "modifier": "private final", "type": "JSONUnMarshaller", "declarator": "unMarshaller", "var_name": "unMarshaller"}, {"original_string": "private boolean enableAfterburner = true;", "modifier": "private", "type": "boolean", "declarator": "enableAfterburner = true", "var_name": "enableAfterburner"}, {"original_string": "private boolean useOptimizedBeanDeserializer = true;", "modifier": "private", "type": "boolean", "declarator": "useOptimizedBeanDeserializer = true", "var_name": "useOptimizedBeanDeserializer"}, {"original_string": "private boolean useValueClassLoader = true;", "modifier": "private", "type": "boolean", "declarator": "useValueClassLoader = true", "var_name": "useValueClassLoader"}], "methods": [{"identifier": "JSONBindingFactory", "parameters": "()", "modifiers": "public", "return": "", "signature": " JSONBindingFactory()", "full_signature": "public  JSONBindingFactory()", "class_method_signature": "JSONBindingFactory.JSONBindingFactory()", "testcase": false, "constructor": true}, {"identifier": "createBaseObjectMapper", "parameters": "()", "modifiers": "public", "return": "ObjectMapper", "signature": "ObjectMapper createBaseObjectMapper()", "full_signature": "public ObjectMapper createBaseObjectMapper()", "class_method_signature": "JSONBindingFactory.createBaseObjectMapper()", "testcase": false, "constructor": false}, {"identifier": "applyNumericRangeBugfixes", "parameters": "(ObjectMapper mapper)", "modifiers": "private static", "return": "void", "signature": "void applyNumericRangeBugfixes(ObjectMapper mapper)", "full_signature": "private static void applyNumericRangeBugfixes(ObjectMapper mapper)", "class_method_signature": "JSONBindingFactory.applyNumericRangeBugfixes(ObjectMapper mapper)", "testcase": false, "constructor": false}, {"identifier": "getUnMarshaller", "parameters": "()", "modifiers": "@Override public", "return": "UnMarshaller", "signature": "UnMarshaller getUnMarshaller()", "full_signature": "@Override public UnMarshaller getUnMarshaller()", "class_method_signature": "JSONBindingFactory.getUnMarshaller()", "testcase": false, "constructor": false}, {"identifier": "getMarshaller", "parameters": "()", "modifiers": "@Override public", "return": "Marshaller", "signature": "Marshaller getMarshaller()", "full_signature": "@Override public Marshaller getMarshaller()", "class_method_signature": "JSONBindingFactory.getMarshaller()", "testcase": false, "constructor": false}, {"identifier": "getFaultMarshaller", "parameters": "()", "modifiers": "@Override public", "return": "FaultMarshaller", "signature": "FaultMarshaller getFaultMarshaller()", "full_signature": "@Override public FaultMarshaller getFaultMarshaller()", "class_method_signature": "JSONBindingFactory.getFaultMarshaller()", "testcase": false, "constructor": false}, {"identifier": "getFaultUnMarshaller", "parameters": "()", "modifiers": "@Override public", "return": "FaultUnMarshaller", "signature": "FaultUnMarshaller getFaultUnMarshaller()", "full_signature": "@Override public FaultUnMarshaller getFaultUnMarshaller()", "class_method_signature": "JSONBindingFactory.getFaultUnMarshaller()", "testcase": false, "constructor": false}, {"identifier": "setEnableAfterburner", "parameters": "(boolean enableAfterburner)", "modifiers": "public", "return": "void", "signature": "void setEnableAfterburner(boolean enableAfterburner)", "full_signature": "public void setEnableAfterburner(boolean enableAfterburner)", "class_method_signature": "JSONBindingFactory.setEnableAfterburner(boolean enableAfterburner)", "testcase": false, "constructor": false}, {"identifier": "setUseOptimizedBeanDeserializer", "parameters": "(boolean useOptimizedBeanDeserializer)", "modifiers": "public", "return": "void", "signature": "void setUseOptimizedBeanDeserializer(boolean useOptimizedBeanDeserializer)", "full_signature": "public void setUseOptimizedBeanDeserializer(boolean useOptimizedBeanDeserializer)", "class_method_signature": "JSONBindingFactory.setUseOptimizedBeanDeserializer(boolean useOptimizedBeanDeserializer)", "testcase": false, "constructor": false}, {"identifier": "setUseValueClassLoader", "parameters": "(boolean useValueClassLoader)", "modifiers": "public", "return": "void", "signature": "void setUseValueClassLoader(boolean useValueClassLoader)", "full_signature": "public void setUseValueClassLoader(boolean useValueClassLoader)", "class_method_signature": "JSONBindingFactory.setUseValueClassLoader(boolean useValueClassLoader)", "testcase": false, "constructor": false}], "file": "cougar-framework/cougar-marshalling-impl/src/main/java/com/betfair/cougar/marshalling/impl/databinding/json/JSONBindingFactory.java"}, "focal_method": {"identifier": "createBaseObjectMapper", "parameters": "()", "modifiers": "public", "return": "ObjectMapper", "body": "public ObjectMapper createBaseObjectMapper() {\n\t\tObjectMapper mapper = new ObjectMapper();\n\t\tJSONDateFormat jdf=new JSONDateFormat();\n\n\t\tmapper.setDateFormat(jdf);\n\t\tmapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);\n        if (enableAfterburner) {\n            AfterburnerModule module = new AfterburnerModule();\n            module.setUseOptimizedBeanDeserializer(useOptimizedBeanDeserializer);\n            module.setUseValueClassLoader(useValueClassLoader);\n            mapper.registerModule(module);\n        }\n\n        applyNumericRangeBugfixes(mapper);\n\t\treturn mapper;\n\t}", "signature": "ObjectMapper createBaseObjectMapper()", "full_signature": "public ObjectMapper createBaseObjectMapper()", "class_method_signature": "JSONBindingFactory.createBaseObjectMapper()", "testcase": false, "constructor": false, "invocations": ["setDateFormat", "setSerializationInclusion", "setUseOptimizedBeanDeserializer", "setUseValueClassLoader", "registerModule", "applyNumericRangeBugfixes"]}, "repository": {"repo_id": 13865967, "url": "https://github.com/betfair/cougar", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 25, "size": 49594, "license": "licensed"}}