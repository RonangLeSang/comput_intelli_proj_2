{"test_class": {"identifier": "IoSessionFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IoSessionFactory sessionFactory;", "modifier": "private", "type": "IoSessionFactory", "declarator": "sessionFactory", "var_name": "sessionFactory"}, {"original_string": "private IoSession connectedSession;", "modifier": "private", "type": "IoSession", "declarator": "connectedSession", "var_name": "connectedSession"}], "file": "cougar-framework/cougar-client/src/test/java/com/betfair/cougar/client/socket/IoSessionFactoryTest.java"}, "test_case": {"identifier": "testCloseSession", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCloseSession() throws Exception {\n        final InetSocketAddress address1 = new InetSocketAddress(\"host1\", 9003);\n        final InetSocketAddress address2 = new InetSocketAddress(\"host2\", 9003);\n        sessionFactory.openSession(address1);\n        sessionFactory.openSession(address2);\n\n        sessionFactory.closeSession(connectedSession.getRemoteAddress(), false);\n        sessionFactory.closeSession(address1, false);\n        sessionFactory.closeSession(address2, false);\n        verify(sessionFactory).close(connectedSession, false);\n    }", "signature": "void testCloseSession()", "full_signature": "@Test public void testCloseSession()", "class_method_signature": "IoSessionFactoryTest.testCloseSession()", "testcase": true, "constructor": false, "invocations": ["openSession", "openSession", "closeSession", "getRemoteAddress", "closeSession", "closeSession", "close", "verify"]}, "focal_class": {"identifier": "IoSessionFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(IoSessionFactory.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(IoSessionFactory.class)", "var_name": "log"}, {"original_string": "private final NioLogger logger;", "modifier": "private final", "type": "NioLogger", "declarator": "logger", "var_name": "logger"}, {"original_string": "private int handshakeResponseTimeout;", "modifier": "private", "type": "int", "declarator": "handshakeResponseTimeout", "var_name": "handshakeResponseTimeout"}, {"original_string": "private int reconnectInterval;", "modifier": "private", "type": "int", "declarator": "reconnectInterval", "var_name": "reconnectInterval"}, {"original_string": "private final SocketConnector socketConnector;", "modifier": "private final", "type": "SocketConnector", "declarator": "socketConnector", "var_name": "socketConnector"}, {"original_string": "private final Object lock = new Object();", "modifier": "private final", "type": "Object", "declarator": "lock = new Object()", "var_name": "lock"}, {"original_string": "private volatile int counter = 0;", "modifier": "private volatile", "type": "int", "declarator": "counter = 0", "var_name": "counter"}, {"original_string": "private final Map<SocketAddress, IoSession> sessions = new TreeMap<SocketAddress, IoSession>(new AddressComparator());", "modifier": "private final", "type": "Map<SocketAddress, IoSession>", "declarator": "sessions = new TreeMap<SocketAddress, IoSession>(new AddressComparator())", "var_name": "sessions"}, {"original_string": "private final IoHandler ioHandler;", "modifier": "private final", "type": "IoHandler", "declarator": "ioHandler", "var_name": "ioHandler"}, {"original_string": "private final IoFutureListener sessionClosedListener;", "modifier": "private final", "type": "IoFutureListener", "declarator": "sessionClosedListener", "var_name": "sessionClosedListener"}, {"original_string": "private final NioConfig nioConfig;", "modifier": "private final", "type": "NioConfig", "declarator": "nioConfig", "var_name": "nioConfig"}, {"original_string": "private volatile boolean keepRunning = false;", "modifier": "private volatile", "type": "boolean", "declarator": "keepRunning = false", "var_name": "keepRunning"}, {"original_string": "private JMXReportingThreadPoolExecutor reconnectExecutor;", "modifier": "private", "type": "JMXReportingThreadPoolExecutor", "declarator": "reconnectExecutor", "var_name": "reconnectExecutor"}, {"original_string": "private final String hosts;", "modifier": "private final", "type": "String", "declarator": "hosts", "var_name": "hosts"}, {"original_string": "private SessionRecycler sessionRecycler;", "modifier": "private", "type": "SessionRecycler", "declarator": "sessionRecycler", "var_name": "sessionRecycler"}, {"original_string": "private Map<SocketAddress, ReconnectTask> pendingConnections = new HashMap<SocketAddress, ReconnectTask>();", "modifier": "private", "type": "Map<SocketAddress, ReconnectTask>", "declarator": "pendingConnections = new HashMap<SocketAddress, ReconnectTask>()", "var_name": "pendingConnections"}, {"original_string": "private final IoFutureListener serverSideCloseListener =\n            new IoFutureListener() {\n                @Override\n                public void operationComplete(IoFuture future) {\n                    IoSessionFactory.this.close(future.getSession());\n                }\n            };", "modifier": "private final", "type": "IoFutureListener", "declarator": "serverSideCloseListener =\n            new IoFutureListener() {\n                @Override\n                public void operationComplete(IoFuture future) {\n                    IoSessionFactory.this.close(future.getSession());\n                }\n            }", "var_name": "serverSideCloseListener"}], "methods": [{"identifier": "IoSessionFactory", "parameters": "(NioLogger logger,\n                            String hosts,\n                            JMXReportingThreadPoolExecutor executorService,\n                            JMXReportingThreadPoolExecutor reconnectExecutor,\n                            NioConfig config,\n                            IoHandler ioHandler,\n                            IoFutureListener sessionClosedListener,\n                            int reconnectInterval,\n                            int handshakeResponseTimeout,\n                            long sessionRecycleInterval,\n                            NetworkAddressResolver addressResolver)", "modifiers": "public", "return": "", "signature": " IoSessionFactory(NioLogger logger,\n                            String hosts,\n                            JMXReportingThreadPoolExecutor executorService,\n                            JMXReportingThreadPoolExecutor reconnectExecutor,\n                            NioConfig config,\n                            IoHandler ioHandler,\n                            IoFutureListener sessionClosedListener,\n                            int reconnectInterval,\n                            int handshakeResponseTimeout,\n                            long sessionRecycleInterval,\n                            NetworkAddressResolver addressResolver)", "full_signature": "public  IoSessionFactory(NioLogger logger,\n                            String hosts,\n                            JMXReportingThreadPoolExecutor executorService,\n                            JMXReportingThreadPoolExecutor reconnectExecutor,\n                            NioConfig config,\n                            IoHandler ioHandler,\n                            IoFutureListener sessionClosedListener,\n                            int reconnectInterval,\n                            int handshakeResponseTimeout,\n                            long sessionRecycleInterval,\n                            NetworkAddressResolver addressResolver)", "class_method_signature": "IoSessionFactory.IoSessionFactory(NioLogger logger,\n                            String hosts,\n                            JMXReportingThreadPoolExecutor executorService,\n                            JMXReportingThreadPoolExecutor reconnectExecutor,\n                            NioConfig config,\n                            IoHandler ioHandler,\n                            IoFutureListener sessionClosedListener,\n                            int reconnectInterval,\n                            int handshakeResponseTimeout,\n                            long sessionRecycleInterval,\n                            NetworkAddressResolver addressResolver)", "testcase": false, "constructor": true}, {"identifier": "isConnected", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isConnected()", "full_signature": "public boolean isConnected()", "class_method_signature": "IoSessionFactory.isConnected()", "testcase": false, "constructor": false}, {"identifier": "getCurrentSessionAddresses", "parameters": "()", "modifiers": "public", "return": "Set<SocketAddress>", "signature": "Set<SocketAddress> getCurrentSessionAddresses()", "full_signature": "public Set<SocketAddress> getCurrentSessionAddresses()", "class_method_signature": "IoSessionFactory.getCurrentSessionAddresses()", "testcase": false, "constructor": false}, {"identifier": "getConnectedStatus", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getConnectedStatus()", "full_signature": "public Map<String, String> getConnectedStatus()", "class_method_signature": "IoSessionFactory.getConnectedStatus()", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void start()", "full_signature": "public void start()", "class_method_signature": "IoSessionFactory.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stop()", "full_signature": "public void stop()", "class_method_signature": "IoSessionFactory.stop()", "testcase": false, "constructor": false}, {"identifier": "getSession", "parameters": "()", "modifiers": "public", "return": "IoSession", "signature": "IoSession getSession()", "full_signature": "public IoSession getSession()", "class_method_signature": "IoSessionFactory.getSession()", "testcase": false, "constructor": false}, {"identifier": "openSession", "parameters": "(SocketAddress endpoint)", "modifiers": "public", "return": "void", "signature": "void openSession(SocketAddress endpoint)", "full_signature": "public void openSession(SocketAddress endpoint)", "class_method_signature": "IoSessionFactory.openSession(SocketAddress endpoint)", "testcase": false, "constructor": false}, {"identifier": "closeSession", "parameters": "(SocketAddress endpoint, boolean reconnect)", "modifiers": "public", "return": "void", "signature": "void closeSession(SocketAddress endpoint, boolean reconnect)", "full_signature": "public void closeSession(SocketAddress endpoint, boolean reconnect)", "class_method_signature": "IoSessionFactory.closeSession(SocketAddress endpoint, boolean reconnect)", "testcase": false, "constructor": false}, {"identifier": "isAvailable", "parameters": "(IoSession session)", "modifiers": "", "return": "boolean", "signature": "boolean isAvailable(IoSession session)", "full_signature": " boolean isAvailable(IoSession session)", "class_method_signature": "IoSessionFactory.isAvailable(IoSession session)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "(final IoSession aSession)", "modifiers": "public", "return": "void", "signature": "void close(final IoSession aSession)", "full_signature": "public void close(final IoSession aSession)", "class_method_signature": "IoSessionFactory.close(final IoSession aSession)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "(final IoSession aSession, boolean reconnect)", "modifiers": "public", "return": "void", "signature": "void close(final IoSession aSession, boolean reconnect)", "full_signature": "public void close(final IoSession aSession, boolean reconnect)", "class_method_signature": "IoSessionFactory.close(final IoSession aSession, boolean reconnect)", "testcase": false, "constructor": false}, {"identifier": "connect", "parameters": "(final SocketAddress endpoint)", "modifiers": "public", "return": "IoSession", "signature": "IoSession connect(final SocketAddress endpoint)", "full_signature": "public IoSession connect(final SocketAddress endpoint)", "class_method_signature": "IoSessionFactory.connect(final SocketAddress endpoint)", "testcase": false, "constructor": false}, {"identifier": "handshake", "parameters": "(IoSession session)", "modifiers": "private", "return": "boolean", "signature": "boolean handshake(IoSession session)", "full_signature": "private boolean handshake(IoSession session)", "class_method_signature": "IoSessionFactory.handshake(IoSession session)", "testcase": false, "constructor": false}, {"identifier": "getReconnectInterval", "parameters": "()", "modifiers": "@ManagedAttribute public", "return": "int", "signature": "int getReconnectInterval()", "full_signature": "@ManagedAttribute public int getReconnectInterval()", "class_method_signature": "IoSessionFactory.getReconnectInterval()", "testcase": false, "constructor": false}, {"identifier": "setReconnectInterval", "parameters": "(int reconnectInterval)", "modifiers": "", "return": "void", "signature": "void setReconnectInterval(int reconnectInterval)", "full_signature": " void setReconnectInterval(int reconnectInterval)", "class_method_signature": "IoSessionFactory.setReconnectInterval(int reconnectInterval)", "testcase": false, "constructor": false}, {"identifier": "getHosts", "parameters": "()", "modifiers": "@ManagedAttribute public", "return": "String", "signature": "String getHosts()", "full_signature": "@ManagedAttribute public String getHosts()", "class_method_signature": "IoSessionFactory.getHosts()", "testcase": false, "constructor": false}, {"identifier": "getSessionRecycler", "parameters": "()", "modifiers": "", "return": "SessionRecycler", "signature": "SessionRecycler getSessionRecycler()", "full_signature": " SessionRecycler getSessionRecycler()", "class_method_signature": "IoSessionFactory.getSessionRecycler()", "testcase": false, "constructor": false}], "file": "cougar-framework/cougar-client/src/main/java/com/betfair/cougar/client/socket/IoSessionFactory.java"}, "focal_method": {"identifier": "closeSession", "parameters": "(SocketAddress endpoint, boolean reconnect)", "modifiers": "public", "return": "void", "body": "public void closeSession(SocketAddress endpoint, boolean reconnect) {\n        synchronized (lock) {\n            // Submit a reconnect task for this address if one is not already present\n            if (pendingConnections.containsKey(endpoint)) {\n                final ReconnectTask task = pendingConnections.get(endpoint);\n                if (task != null) {\n                    task.stop();\n                }\n            } else {\n                final IoSession ioSession = sessions.get(endpoint);\n                if (ioSession != null) {\n                    close(ioSession, reconnect);\n                }\n            }\n        }\n    }", "signature": "void closeSession(SocketAddress endpoint, boolean reconnect)", "full_signature": "public void closeSession(SocketAddress endpoint, boolean reconnect)", "class_method_signature": "IoSessionFactory.closeSession(SocketAddress endpoint, boolean reconnect)", "testcase": false, "constructor": false, "invocations": ["containsKey", "get", "stop", "get", "close"]}, "repository": {"repo_id": 13865967, "url": "https://github.com/betfair/cougar", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 25, "size": 49594, "license": "licensed"}}