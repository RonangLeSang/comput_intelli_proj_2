{"test_class": {"identifier": "HttpClientCougarRequestFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ClientCallContext mockCallContext;", "modifier": "@Mock\n    private", "type": "ClientCallContext", "declarator": "mockCallContext", "var_name": "mockCallContext"}, {"original_string": "@Mock\n    private Message mockMessage;", "modifier": "@Mock\n    private", "type": "Message", "declarator": "mockMessage", "var_name": "mockMessage"}, {"original_string": "@Mock\n    private Marshaller mockMarshaller;", "modifier": "@Mock\n    private", "type": "Marshaller", "declarator": "mockMarshaller", "var_name": "mockMarshaller"}, {"original_string": "@Mock\n    private GeoLocationDetails mockGeoLocation;", "modifier": "@Mock\n    private", "type": "GeoLocationDetails", "declarator": "mockGeoLocation", "var_name": "mockGeoLocation"}, {"original_string": "@Mock\n    private TimeConstraints mockTimeConstraints;", "modifier": "@Mock\n    private", "type": "TimeConstraints", "declarator": "mockTimeConstraints", "var_name": "mockTimeConstraints"}, {"original_string": "private HttpClientCougarRequestFactory factory = new HttpClientCougarRequestFactory(new HttpContextEmitter<HttpUriRequest>(new DefaultGeoLocationSerializer(), \"X-REQUEST-UUID\", \"X-REQUEST-UUID-PARENTS\"));", "modifier": "private", "type": "HttpClientCougarRequestFactory", "declarator": "factory = new HttpClientCougarRequestFactory(new HttpContextEmitter<HttpUriRequest>(new DefaultGeoLocationSerializer(), \"X-REQUEST-UUID\", \"X-REQUEST-UUID-PARENTS\"))", "var_name": "factory"}, {"original_string": "private String uri = \"http://Some.uri\";", "modifier": "private", "type": "String", "declarator": "uri = \"http://Some.uri\"", "var_name": "uri"}, {"original_string": "private String contentType = \"application/X-my-type\";", "modifier": "private", "type": "String", "declarator": "contentType = \"application/X-my-type\"", "var_name": "contentType"}], "file": "cougar-framework/cougar-client/src/test/java/com/betfair/cougar/client/HttpClientCougarRequestFactoryTest.java"}, "test_case": {"identifier": "shouldAddNewHeadersWithoutDeleteTheExistingHeaders", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldAddNewHeadersWithoutDeleteTheExistingHeaders() {\n\n        HttpUriRequest request = new HttpGet();\n        request.setHeader(\"X-UUID\", \"1111-111-111-111\");\n\n        List<Header> headers = new ArrayList<>(1);\n        headers.add(new BasicHeader(\"NEW-HEADER\", \"value\"));\n        factory.addHeaders(request, headers);\n\n        assertEquals(2, request.getAllHeaders().length);\n        assertEquals(\"1111-111-111-111\", request.getFirstHeader(\"X-UUID\").getValue());\n        assertEquals(\"value\", request.getFirstHeader(\"NEW-HEADER\").getValue());\n    }", "signature": "void shouldAddNewHeadersWithoutDeleteTheExistingHeaders()", "full_signature": "@Test public void shouldAddNewHeadersWithoutDeleteTheExistingHeaders()", "class_method_signature": "HttpClientCougarRequestFactoryTest.shouldAddNewHeadersWithoutDeleteTheExistingHeaders()", "testcase": true, "constructor": false, "invocations": ["setHeader", "add", "addHeaders", "assertEquals", "getAllHeaders", "assertEquals", "getValue", "getFirstHeader", "assertEquals", "getValue", "getFirstHeader"]}, "focal_class": {"identifier": "HttpClientCougarRequestFactory", "superclass": "extends CougarRequestFactory<HttpUriRequest>", "interfaces": "", "fields": [], "methods": [{"identifier": "HttpClientCougarRequestFactory", "parameters": "(ContextEmitter<HttpUriRequest,List<Header>> emission)", "modifiers": "public", "return": "", "signature": " HttpClientCougarRequestFactory(ContextEmitter<HttpUriRequest,List<Header>> emission)", "full_signature": "public  HttpClientCougarRequestFactory(ContextEmitter<HttpUriRequest,List<Header>> emission)", "class_method_signature": "HttpClientCougarRequestFactory.HttpClientCougarRequestFactory(ContextEmitter<HttpUriRequest,List<Header>> emission)", "testcase": false, "constructor": true}, {"identifier": "addHeaders", "parameters": "(HttpUriRequest httpRequest, List<Header> headers)", "modifiers": "@Override protected", "return": "void", "signature": "void addHeaders(HttpUriRequest httpRequest, List<Header> headers)", "full_signature": "@Override protected void addHeaders(HttpUriRequest httpRequest, List<Header> headers)", "class_method_signature": "HttpClientCougarRequestFactory.addHeaders(HttpUriRequest httpRequest, List<Header> headers)", "testcase": false, "constructor": false}, {"identifier": "addPostEntity", "parameters": "(HttpUriRequest httpRequest, String postEntity, String contentType)", "modifiers": "@Override protected", "return": "void", "signature": "void addPostEntity(HttpUriRequest httpRequest, String postEntity, String contentType)", "full_signature": "@Override protected void addPostEntity(HttpUriRequest httpRequest, String postEntity, String contentType)", "class_method_signature": "HttpClientCougarRequestFactory.addPostEntity(HttpUriRequest httpRequest, String postEntity, String contentType)", "testcase": false, "constructor": false}, {"identifier": "createRequest", "parameters": "(String method, String uri)", "modifiers": "@Override protected", "return": "HttpUriRequest", "signature": "HttpUriRequest createRequest(String method, String uri)", "full_signature": "@Override protected HttpUriRequest createRequest(String method, String uri)", "class_method_signature": "HttpClientCougarRequestFactory.createRequest(String method, String uri)", "testcase": false, "constructor": false}], "file": "cougar-framework/cougar-client/src/main/java/com/betfair/cougar/client/HttpClientCougarRequestFactory.java"}, "focal_method": {"identifier": "addHeaders", "parameters": "(HttpUriRequest httpRequest, List<Header> headers)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void addHeaders(HttpUriRequest httpRequest, List<Header> headers) {\n        for (Header header : headers) {\n            if (header.getValue() != null) {\n                httpRequest.addHeader(header);\n            }\n        }\n    }", "signature": "void addHeaders(HttpUriRequest httpRequest, List<Header> headers)", "full_signature": "@Override protected void addHeaders(HttpUriRequest httpRequest, List<Header> headers)", "class_method_signature": "HttpClientCougarRequestFactory.addHeaders(HttpUriRequest httpRequest, List<Header> headers)", "testcase": false, "constructor": false, "invocations": ["getValue", "addHeader"]}, "repository": {"repo_id": 13865967, "url": "https://github.com/betfair/cougar", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 25, "size": 49594, "license": "licensed"}}