{"test_class": {"identifier": "SSLAwareTokenResolverTest", "superclass": "", "interfaces": "", "fields": [], "file": "cougar-framework/cougar-core-impl/src/test/java/com/betfair/cougar/core/impl/security/SSLAwareTokenResolverTest.java"}, "test_case": {"identifier": "emptyCredentials", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void emptyCredentials() throws NamingException {\n        SSLAwareTokenResolver tr = new SSLAwareTokenResolver<Object,Object,Object>(new CommonNameCertInfoExtractor()) {\n            public List<IdentityToken> resolve(Object input, Object transportAuthTokens) { return null; }\n            public void rewrite(List<IdentityToken> credentials, Object output) {}\n            public boolean isRewriteSupported() { return false; }\n        };\n        assertNull(tr.findCertInfo(new X509Certificate[]{}));\n    }", "signature": "void emptyCredentials()", "full_signature": "@Test public void emptyCredentials()", "class_method_signature": "SSLAwareTokenResolverTest.emptyCredentials()", "testcase": true, "constructor": false, "invocations": ["assertNull", "findCertInfo"]}, "focal_class": {"identifier": "SSLAwareTokenResolver", "superclass": "", "interfaces": "implements IdentityTokenResolver<I,O,C>", "fields": [{"original_string": "public static final String SSL_CERT_INFO = \"X-SSL-Cert-Info\";", "modifier": "public static final", "type": "String", "declarator": "SSL_CERT_INFO = \"X-SSL-Cert-Info\"", "var_name": "SSL_CERT_INFO"}, {"original_string": "private final CertInfoExtractor certInfoExtractor;", "modifier": "private final", "type": "CertInfoExtractor", "declarator": "certInfoExtractor", "var_name": "certInfoExtractor"}], "methods": [{"identifier": "SSLAwareTokenResolver", "parameters": "(CertInfoExtractor certInfoExtractor)", "modifiers": "protected", "return": "", "signature": " SSLAwareTokenResolver(CertInfoExtractor certInfoExtractor)", "full_signature": "protected  SSLAwareTokenResolver(CertInfoExtractor certInfoExtractor)", "class_method_signature": "SSLAwareTokenResolver.SSLAwareTokenResolver(CertInfoExtractor certInfoExtractor)", "testcase": false, "constructor": true}, {"identifier": "attachCertInfo", "parameters": "(List<IdentityToken> credentials, X509Certificate[] certificateChain)", "modifiers": "protected", "return": "void", "signature": "void attachCertInfo(List<IdentityToken> credentials, X509Certificate[] certificateChain)", "full_signature": "protected void attachCertInfo(List<IdentityToken> credentials, X509Certificate[] certificateChain)", "class_method_signature": "SSLAwareTokenResolver.attachCertInfo(List<IdentityToken> credentials, X509Certificate[] certificateChain)", "testcase": false, "constructor": false}, {"identifier": "findCertInfo", "parameters": "(X509Certificate[] x509certificates)", "modifiers": "protected", "return": "String", "signature": "String findCertInfo(X509Certificate[] x509certificates)", "full_signature": "protected String findCertInfo(X509Certificate[] x509certificates)", "class_method_signature": "SSLAwareTokenResolver.findCertInfo(X509Certificate[] x509certificates)", "testcase": false, "constructor": false}], "file": "cougar-framework/cougar-core-impl/src/main/java/com/betfair/cougar/core/impl/security/SSLAwareTokenResolver.java"}, "focal_method": {"identifier": "findCertInfo", "parameters": "(X509Certificate[] x509certificates)", "modifiers": "protected", "return": "String", "body": "protected String findCertInfo(X509Certificate[] x509certificates) throws NamingException {\n        if (x509certificates != null && x509certificates.length != 0) {\n            // Only ever use the first certificate, as this si the client supplied one.\n            // Further ones are trust stores and CAs that have signed the first cert.\n            Principal subject = x509certificates[0].getSubjectDN();\n            if (subject != null && subject.getName() != null) {\n                List<Rdn> rdns;\n                try {\n                    rdns = new LdapName(subject.getName()).getRdns();\n                }\n                catch (InvalidNameException ine) {\n                    return null;\n                }\n                return certInfoExtractor.extractCertInfo(rdns);\n            }\n        }\n        return null;\n    }", "signature": "String findCertInfo(X509Certificate[] x509certificates)", "full_signature": "protected String findCertInfo(X509Certificate[] x509certificates)", "class_method_signature": "SSLAwareTokenResolver.findCertInfo(X509Certificate[] x509certificates)", "testcase": false, "constructor": false, "invocations": ["getSubjectDN", "getName", "getRdns", "getName", "extractCertInfo"]}, "repository": {"repo_id": 13865967, "url": "https://github.com/betfair/cougar", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 25, "size": 49594, "license": "licensed"}}