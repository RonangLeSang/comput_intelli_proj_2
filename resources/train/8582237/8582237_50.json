{"test_class": {"identifier": "SQLLongIntTest", "superclass": "extends SQLDataValueDescriptorTest", "interfaces": "", "fields": [], "file": "db-engine/src/test/java/com/splicemachine/db/iapi/types/SQLLongIntTest.java"}, "test_case": {"identifier": "readExternalNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n        public void readExternalNull() throws IOException {\n                SQLLongint lint = new SQLLongint();\n                MockObjectInput moi = new MockObjectInput();\n                moi.isNull = true;\n                moi.value = 0L;\n                lint.readExternal(moi);\n                Assert.assertTrue(\"Should be null\", lint.isNull());\n        }", "signature": "void readExternalNull()", "full_signature": "@Test public void readExternalNull()", "class_method_signature": "SQLLongIntTest.readExternalNull()", "testcase": true, "constructor": false, "invocations": ["readExternal", "assertTrue", "isNull"]}, "focal_class": {"identifier": "SQLLongint", "superclass": "extends NumberDataType", "interfaces": "", "fields": [{"original_string": "private static final int BASE_MEMORY_USAGE = ClassSize.estimateBaseFromCatalog( SQLLongint.class);", "modifier": "private static final", "type": "int", "declarator": "BASE_MEMORY_USAGE = ClassSize.estimateBaseFromCatalog( SQLLongint.class)", "var_name": "BASE_MEMORY_USAGE"}, {"original_string": "private long\t\tvalue;", "modifier": "private", "type": "long", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "getInt", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getInt()", "full_signature": "public int getInt()", "class_method_signature": "SQLLongint.getInt()", "testcase": false, "constructor": false}, {"identifier": "getByte", "parameters": "()", "modifiers": "public", "return": "byte", "signature": "byte getByte()", "full_signature": "public byte getByte()", "class_method_signature": "SQLLongint.getByte()", "testcase": false, "constructor": false}, {"identifier": "getShort", "parameters": "()", "modifiers": "public", "return": "short", "signature": "short getShort()", "full_signature": "public short getShort()", "class_method_signature": "SQLLongint.getShort()", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLong()", "full_signature": "public long getLong()", "class_method_signature": "SQLLongint.getLong()", "testcase": false, "constructor": false}, {"identifier": "getFloat", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getFloat()", "full_signature": "public float getFloat()", "class_method_signature": "SQLLongint.getFloat()", "testcase": false, "constructor": false}, {"identifier": "getDouble", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getDouble()", "full_signature": "public double getDouble()", "class_method_signature": "SQLLongint.getDouble()", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getBoolean()", "full_signature": "public boolean getBoolean()", "class_method_signature": "SQLLongint.getBoolean()", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getString()", "full_signature": "public String getString()", "class_method_signature": "SQLLongint.getString()", "testcase": false, "constructor": false}, {"identifier": "getObject", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object getObject()", "full_signature": "public Object getObject()", "class_method_signature": "SQLLongint.getObject()", "testcase": false, "constructor": false}, {"identifier": "getLength", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLength()", "full_signature": "public int getLength()", "class_method_signature": "SQLLongint.getLength()", "testcase": false, "constructor": false}, {"identifier": "getTypeName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTypeName()", "full_signature": "public String getTypeName()", "class_method_signature": "SQLLongint.getTypeName()", "testcase": false, "constructor": false}, {"identifier": "getTypeFormatId", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTypeFormatId()", "full_signature": "public int getTypeFormatId()", "class_method_signature": "SQLLongint.getTypeFormatId()", "testcase": false, "constructor": false}, {"identifier": "writeExternal", "parameters": "(ObjectOutput out)", "modifiers": "public", "return": "void", "signature": "void writeExternal(ObjectOutput out)", "full_signature": "public void writeExternal(ObjectOutput out)", "class_method_signature": "SQLLongint.writeExternal(ObjectOutput out)", "testcase": false, "constructor": false}, {"identifier": "readExternal", "parameters": "(ObjectInput in)", "modifiers": "public", "return": "void", "signature": "void readExternal(ObjectInput in)", "full_signature": "public void readExternal(ObjectInput in)", "class_method_signature": "SQLLongint.readExternal(ObjectInput in)", "testcase": false, "constructor": false}, {"identifier": "readExternalFromArray", "parameters": "(ArrayInputStream in)", "modifiers": "public", "return": "void", "signature": "void readExternalFromArray(ArrayInputStream in)", "full_signature": "public void readExternalFromArray(ArrayInputStream in)", "class_method_signature": "SQLLongint.readExternalFromArray(ArrayInputStream in)", "testcase": false, "constructor": false}, {"identifier": "restoreToNull", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void restoreToNull()", "full_signature": "public void restoreToNull()", "class_method_signature": "SQLLongint.restoreToNull()", "testcase": false, "constructor": false}, {"identifier": "typeCompare", "parameters": "(DataValueDescriptor arg)", "modifiers": "protected", "return": "int", "signature": "int typeCompare(DataValueDescriptor arg)", "full_signature": "protected int typeCompare(DataValueDescriptor arg)", "class_method_signature": "SQLLongint.typeCompare(DataValueDescriptor arg)", "testcase": false, "constructor": false}, {"identifier": "cloneValue", "parameters": "(boolean forceMaterialization)", "modifiers": "public", "return": "DataValueDescriptor", "signature": "DataValueDescriptor cloneValue(boolean forceMaterialization)", "full_signature": "public DataValueDescriptor cloneValue(boolean forceMaterialization)", "class_method_signature": "SQLLongint.cloneValue(boolean forceMaterialization)", "testcase": false, "constructor": false}, {"identifier": "getNewNull", "parameters": "()", "modifiers": "public", "return": "DataValueDescriptor", "signature": "DataValueDescriptor getNewNull()", "full_signature": "public DataValueDescriptor getNewNull()", "class_method_signature": "SQLLongint.getNewNull()", "testcase": false, "constructor": false}, {"identifier": "setValueFromResultSet", "parameters": "(ResultSet resultSet, int colNumber,\n\t\t\t\t\t\t\t\t\t  boolean isNullable)", "modifiers": "public", "return": "void", "signature": "void setValueFromResultSet(ResultSet resultSet, int colNumber,\n\t\t\t\t\t\t\t\t\t  boolean isNullable)", "full_signature": "public void setValueFromResultSet(ResultSet resultSet, int colNumber,\n\t\t\t\t\t\t\t\t\t  boolean isNullable)", "class_method_signature": "SQLLongint.setValueFromResultSet(ResultSet resultSet, int colNumber,\n\t\t\t\t\t\t\t\t\t  boolean isNullable)", "testcase": false, "constructor": false}, {"identifier": "setInto", "parameters": "(PreparedStatement ps, int position)", "modifiers": "public final", "return": "void", "signature": "void setInto(PreparedStatement ps, int position)", "full_signature": "public final void setInto(PreparedStatement ps, int position)", "class_method_signature": "SQLLongint.setInto(PreparedStatement ps, int position)", "testcase": false, "constructor": false}, {"identifier": "setInto", "parameters": "(ResultSet rs, int position)", "modifiers": "public final", "return": "void", "signature": "void setInto(ResultSet rs, int position)", "full_signature": "public final void setInto(ResultSet rs, int position)", "class_method_signature": "SQLLongint.setInto(ResultSet rs, int position)", "testcase": false, "constructor": false}, {"identifier": "SQLLongint", "parameters": "()", "modifiers": "public", "return": "", "signature": " SQLLongint()", "full_signature": "public  SQLLongint()", "class_method_signature": "SQLLongint.SQLLongint()", "testcase": false, "constructor": true}, {"identifier": "SQLLongint", "parameters": "(long val)", "modifiers": "public", "return": "", "signature": " SQLLongint(long val)", "full_signature": "public  SQLLongint(long val)", "class_method_signature": "SQLLongint.SQLLongint(long val)", "testcase": false, "constructor": true}, {"identifier": "SQLLongint", "parameters": "(long val, boolean isNullArg)", "modifiers": "private", "return": "", "signature": " SQLLongint(long val, boolean isNullArg)", "full_signature": "private  SQLLongint(long val, boolean isNullArg)", "class_method_signature": "SQLLongint.SQLLongint(long val, boolean isNullArg)", "testcase": false, "constructor": true}, {"identifier": "SQLLongint", "parameters": "(Long obj)", "modifiers": "public", "return": "", "signature": " SQLLongint(Long obj)", "full_signature": "public  SQLLongint(Long obj)", "class_method_signature": "SQLLongint.SQLLongint(Long obj)", "testcase": false, "constructor": true}, {"identifier": "setValue", "parameters": "(String theValue)", "modifiers": "public", "return": "void", "signature": "void setValue(String theValue)", "full_signature": "public void setValue(String theValue)", "class_method_signature": "SQLLongint.setValue(String theValue)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(Number theValue)", "modifiers": "public final", "return": "void", "signature": "void setValue(Number theValue)", "full_signature": "public final void setValue(Number theValue)", "class_method_signature": "SQLLongint.setValue(Number theValue)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(long theValue)", "modifiers": "public", "return": "void", "signature": "void setValue(long theValue)", "full_signature": "public void setValue(long theValue)", "class_method_signature": "SQLLongint.setValue(long theValue)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(int theValue)", "modifiers": "public", "return": "void", "signature": "void setValue(int theValue)", "full_signature": "public void setValue(int theValue)", "class_method_signature": "SQLLongint.setValue(int theValue)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(float theValue)", "modifiers": "public", "return": "void", "signature": "void setValue(float theValue)", "full_signature": "public void setValue(float theValue)", "class_method_signature": "SQLLongint.setValue(float theValue)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(double theValue)", "modifiers": "public", "return": "void", "signature": "void setValue(double theValue)", "full_signature": "public void setValue(double theValue)", "class_method_signature": "SQLLongint.setValue(double theValue)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(boolean theValue)", "modifiers": "public", "return": "void", "signature": "void setValue(boolean theValue)", "full_signature": "public void setValue(boolean theValue)", "class_method_signature": "SQLLongint.setValue(boolean theValue)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(BigInteger theValue)", "modifiers": "public", "return": "void", "signature": "void setValue(BigInteger theValue)", "full_signature": "public void setValue(BigInteger theValue)", "class_method_signature": "SQLLongint.setValue(BigInteger theValue)", "testcase": false, "constructor": false}, {"identifier": "setObject", "parameters": "(Object theValue)", "modifiers": "", "return": "void", "signature": "void setObject(Object theValue)", "full_signature": " void setObject(Object theValue)", "class_method_signature": "SQLLongint.setObject(Object theValue)", "testcase": false, "constructor": false}, {"identifier": "setFrom", "parameters": "(DataValueDescriptor theValue)", "modifiers": "protected", "return": "void", "signature": "void setFrom(DataValueDescriptor theValue)", "full_signature": "protected void setFrom(DataValueDescriptor theValue)", "class_method_signature": "SQLLongint.setFrom(DataValueDescriptor theValue)", "testcase": false, "constructor": false}, {"identifier": "typePrecedence", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int typePrecedence()", "full_signature": "public int typePrecedence()", "class_method_signature": "SQLLongint.typePrecedence()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "modifiers": "public", "return": "BooleanDataValue", "signature": "BooleanDataValue equals(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "full_signature": "public BooleanDataValue equals(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "class_method_signature": "SQLLongint.equals(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "testcase": false, "constructor": false}, {"identifier": "notEquals", "parameters": "(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "modifiers": "public", "return": "BooleanDataValue", "signature": "BooleanDataValue notEquals(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "full_signature": "public BooleanDataValue notEquals(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "class_method_signature": "SQLLongint.notEquals(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "testcase": false, "constructor": false}, {"identifier": "lessThan", "parameters": "(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "modifiers": "public", "return": "BooleanDataValue", "signature": "BooleanDataValue lessThan(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "full_signature": "public BooleanDataValue lessThan(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "class_method_signature": "SQLLongint.lessThan(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "testcase": false, "constructor": false}, {"identifier": "greaterThan", "parameters": "(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "modifiers": "public", "return": "BooleanDataValue", "signature": "BooleanDataValue greaterThan(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "full_signature": "public BooleanDataValue greaterThan(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "class_method_signature": "SQLLongint.greaterThan(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "testcase": false, "constructor": false}, {"identifier": "lessOrEquals", "parameters": "(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "modifiers": "public", "return": "BooleanDataValue", "signature": "BooleanDataValue lessOrEquals(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "full_signature": "public BooleanDataValue lessOrEquals(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "class_method_signature": "SQLLongint.lessOrEquals(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "testcase": false, "constructor": false}, {"identifier": "greaterOrEquals", "parameters": "(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "modifiers": "public", "return": "BooleanDataValue", "signature": "BooleanDataValue greaterOrEquals(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "full_signature": "public BooleanDataValue greaterOrEquals(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "class_method_signature": "SQLLongint.greaterOrEquals(DataValueDescriptor left,\n\t\t\t\t\t\t\tDataValueDescriptor right)", "testcase": false, "constructor": false}, {"identifier": "plus", "parameters": "(NumberDataValue addend1,\n\t\t\t\t\t\t\tNumberDataValue addend2,\n\t\t\t\t\t\t\tNumberDataValue result)", "modifiers": "public", "return": "NumberDataValue", "signature": "NumberDataValue plus(NumberDataValue addend1,\n\t\t\t\t\t\t\tNumberDataValue addend2,\n\t\t\t\t\t\t\tNumberDataValue result)", "full_signature": "public NumberDataValue plus(NumberDataValue addend1,\n\t\t\t\t\t\t\tNumberDataValue addend2,\n\t\t\t\t\t\t\tNumberDataValue result)", "class_method_signature": "SQLLongint.plus(NumberDataValue addend1,\n\t\t\t\t\t\t\tNumberDataValue addend2,\n\t\t\t\t\t\t\tNumberDataValue result)", "testcase": false, "constructor": false}, {"identifier": "minus", "parameters": "(NumberDataValue left,\n\t\t\t\t\t\t\tNumberDataValue right,\n\t\t\t\t\t\t\tNumberDataValue result)", "modifiers": "public", "return": "NumberDataValue", "signature": "NumberDataValue minus(NumberDataValue left,\n\t\t\t\t\t\t\tNumberDataValue right,\n\t\t\t\t\t\t\tNumberDataValue result)", "full_signature": "public NumberDataValue minus(NumberDataValue left,\n\t\t\t\t\t\t\tNumberDataValue right,\n\t\t\t\t\t\t\tNumberDataValue result)", "class_method_signature": "SQLLongint.minus(NumberDataValue left,\n\t\t\t\t\t\t\tNumberDataValue right,\n\t\t\t\t\t\t\tNumberDataValue result)", "testcase": false, "constructor": false}, {"identifier": "times", "parameters": "(NumberDataValue left,\n\t\t\t\t\t\t\tNumberDataValue right,\n\t\t\t\t\t\t\tNumberDataValue result)", "modifiers": "public", "return": "NumberDataValue", "signature": "NumberDataValue times(NumberDataValue left,\n\t\t\t\t\t\t\tNumberDataValue right,\n\t\t\t\t\t\t\tNumberDataValue result)", "full_signature": "public NumberDataValue times(NumberDataValue left,\n\t\t\t\t\t\t\tNumberDataValue right,\n\t\t\t\t\t\t\tNumberDataValue result)", "class_method_signature": "SQLLongint.times(NumberDataValue left,\n\t\t\t\t\t\t\tNumberDataValue right,\n\t\t\t\t\t\t\tNumberDataValue result)", "testcase": false, "constructor": false}, {"identifier": "divide", "parameters": "(NumberDataValue dividend,\n\t\t\t\t\t\t\t NumberDataValue divisor,\n\t\t\t\t\t\t\t NumberDataValue result)", "modifiers": "public", "return": "NumberDataValue", "signature": "NumberDataValue divide(NumberDataValue dividend,\n\t\t\t\t\t\t\t NumberDataValue divisor,\n\t\t\t\t\t\t\t NumberDataValue result)", "full_signature": "public NumberDataValue divide(NumberDataValue dividend,\n\t\t\t\t\t\t\t NumberDataValue divisor,\n\t\t\t\t\t\t\t NumberDataValue result)", "class_method_signature": "SQLLongint.divide(NumberDataValue dividend,\n\t\t\t\t\t\t\t NumberDataValue divisor,\n\t\t\t\t\t\t\t NumberDataValue result)", "testcase": false, "constructor": false}, {"identifier": "mod", "parameters": "(NumberDataValue dividend,\n\t\t\t\t\t\t\t NumberDataValue divisor,\n\t\t\t\t\t\t\t NumberDataValue result)", "modifiers": "public", "return": "NumberDataValue", "signature": "NumberDataValue mod(NumberDataValue dividend,\n\t\t\t\t\t\t\t NumberDataValue divisor,\n\t\t\t\t\t\t\t NumberDataValue result)", "full_signature": "public NumberDataValue mod(NumberDataValue dividend,\n\t\t\t\t\t\t\t NumberDataValue divisor,\n\t\t\t\t\t\t\t NumberDataValue result)", "class_method_signature": "SQLLongint.mod(NumberDataValue dividend,\n\t\t\t\t\t\t\t NumberDataValue divisor,\n\t\t\t\t\t\t\t NumberDataValue result)", "testcase": false, "constructor": false}, {"identifier": "minus", "parameters": "(NumberDataValue result)", "modifiers": "public", "return": "NumberDataValue", "signature": "NumberDataValue minus(NumberDataValue result)", "full_signature": "public NumberDataValue minus(NumberDataValue result)", "class_method_signature": "SQLLongint.minus(NumberDataValue result)", "testcase": false, "constructor": false}, {"identifier": "isNegative", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean isNegative()", "full_signature": "protected boolean isNegative()", "class_method_signature": "SQLLongint.isNegative()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "SQLLongint.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "SQLLongint.hashCode()", "testcase": false, "constructor": false}, {"identifier": "estimateMemoryUsage", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int estimateMemoryUsage()", "full_signature": "public int estimateMemoryUsage()", "class_method_signature": "SQLLongint.estimateMemoryUsage()", "testcase": false, "constructor": false}, {"identifier": "getFormat", "parameters": "()", "modifiers": "public", "return": "Format", "signature": "Format getFormat()", "full_signature": "public Format getFormat()", "class_method_signature": "SQLLongint.getFormat()", "testcase": false, "constructor": false}, {"identifier": "getBigDecimal", "parameters": "()", "modifiers": "public", "return": "BigDecimal", "signature": "BigDecimal getBigDecimal()", "full_signature": "public BigDecimal getBigDecimal()", "class_method_signature": "SQLLongint.getBigDecimal()", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(Row row, int ordinal)", "modifiers": "@Override public", "return": "void", "signature": "void read(Row row, int ordinal)", "full_signature": "@Override public void read(Row row, int ordinal)", "class_method_signature": "SQLLongint.read(Row row, int ordinal)", "testcase": false, "constructor": false}, {"identifier": "getStructField", "parameters": "(String columnName)", "modifiers": "@Override public", "return": "StructField", "signature": "StructField getStructField(String columnName)", "full_signature": "@Override public StructField getStructField(String columnName)", "class_method_signature": "SQLLongint.getStructField(String columnName)", "testcase": false, "constructor": false}, {"identifier": "updateThetaSketch", "parameters": "(UpdateSketch updateSketch)", "modifiers": "public", "return": "void", "signature": "void updateThetaSketch(UpdateSketch updateSketch)", "full_signature": "public void updateThetaSketch(UpdateSketch updateSketch)", "class_method_signature": "SQLLongint.updateThetaSketch(UpdateSketch updateSketch)", "testcase": false, "constructor": false}, {"identifier": "setSparkObject", "parameters": "(Object sparkObject)", "modifiers": "@Override public", "return": "void", "signature": "void setSparkObject(Object sparkObject)", "full_signature": "@Override public void setSparkObject(Object sparkObject)", "class_method_signature": "SQLLongint.setSparkObject(Object sparkObject)", "testcase": false, "constructor": false}], "file": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLLongint.java"}, "focal_method": {"identifier": "readExternal", "parameters": "(ObjectInput in)", "modifiers": "public", "return": "void", "body": "public void readExternal(ObjectInput in) throws IOException {\n\t\tsetIsNull(in.readBoolean());\n\t\tvalue = in.readLong();\n\t}", "signature": "void readExternal(ObjectInput in)", "full_signature": "public void readExternal(ObjectInput in)", "class_method_signature": "SQLLongint.readExternal(ObjectInput in)", "testcase": false, "constructor": false, "invocations": ["setIsNull", "readBoolean", "readLong"]}, "repository": {"repo_id": 8582237, "url": "https://github.com/splicemachine/spliceengine", "stars": 128, "created": "3/5/2013 3:07:56 PM +00:00", "updates": "2020-01-23T21:06:43+00:00", "fork": "False", "license": "licensed"}}