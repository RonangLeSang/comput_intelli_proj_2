{"test_class": {"identifier": "MoreExecutorsTest", "superclass": "", "interfaces": "", "fields": [], "file": "utilities/src/test/java/com/splicemachine/concurrent/MoreExecutorsTest.java"}, "test_case": {"identifier": "newSingleThreadExecutor_usesThreadWithExpectedName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void newSingleThreadExecutor_usesThreadWithExpectedName() throws Exception {\n        ExecutorService executorService = MoreExecutors.namedSingleThreadExecutor(\"testName-%d\", false);\n        Future<String> threadName = executorService.submit(new GetThreadNameCallable());\n        Future<Boolean> isDaemon = executorService.submit(new IsDaemonCallable());\n\n        assertTrue(threadName.get().matches(\"testName-\\\\d\"));\n        assertEquals(false, isDaemon.get());\n        executorService.shutdown();\n    }", "signature": "void newSingleThreadExecutor_usesThreadWithExpectedName()", "full_signature": "@Test public void newSingleThreadExecutor_usesThreadWithExpectedName()", "class_method_signature": "MoreExecutorsTest.newSingleThreadExecutor_usesThreadWithExpectedName()", "testcase": true, "constructor": false, "invocations": ["namedSingleThreadExecutor", "submit", "submit", "assertTrue", "matches", "get", "assertEquals", "get", "shutdown"]}, "focal_class": {"identifier": "MoreExecutors", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "MoreExecutors", "parameters": "()", "modifiers": "private", "return": "", "signature": " MoreExecutors()", "full_signature": "private  MoreExecutors()", "class_method_signature": "MoreExecutors.MoreExecutors()", "testcase": false, "constructor": true}, {"identifier": "namedSingleThreadExecutor", "parameters": "(String nameFormat, boolean isDaemon)", "modifiers": "public static", "return": "ExecutorService", "signature": "ExecutorService namedSingleThreadExecutor(String nameFormat, boolean isDaemon)", "full_signature": "public static ExecutorService namedSingleThreadExecutor(String nameFormat, boolean isDaemon)", "class_method_signature": "MoreExecutors.namedSingleThreadExecutor(String nameFormat, boolean isDaemon)", "testcase": false, "constructor": false}, {"identifier": "namedSingleThreadScheduledExecutor", "parameters": "(String nameFormat)", "modifiers": "public static", "return": "ScheduledExecutorService", "signature": "ScheduledExecutorService namedSingleThreadScheduledExecutor(String nameFormat)", "full_signature": "public static ScheduledExecutorService namedSingleThreadScheduledExecutor(String nameFormat)", "class_method_signature": "MoreExecutors.namedSingleThreadScheduledExecutor(String nameFormat)", "testcase": false, "constructor": false}, {"identifier": "namedThreadPool", "parameters": "(int coreWorkers, int maxWorkers,\n                                                     String nameFormat,\n                                                     long keepAliveSeconds,\n                                                     boolean isDaemon)", "modifiers": "public static", "return": "ThreadPoolExecutor", "signature": "ThreadPoolExecutor namedThreadPool(int coreWorkers, int maxWorkers,\n                                                     String nameFormat,\n                                                     long keepAliveSeconds,\n                                                     boolean isDaemon)", "full_signature": "public static ThreadPoolExecutor namedThreadPool(int coreWorkers, int maxWorkers,\n                                                     String nameFormat,\n                                                     long keepAliveSeconds,\n                                                     boolean isDaemon)", "class_method_signature": "MoreExecutors.namedThreadPool(int coreWorkers, int maxWorkers,\n                                                     String nameFormat,\n                                                     long keepAliveSeconds,\n                                                     boolean isDaemon)", "testcase": false, "constructor": false}], "file": "utilities/src/main/java/com/splicemachine/concurrent/MoreExecutors.java"}, "focal_method": {"identifier": "namedSingleThreadExecutor", "parameters": "(String nameFormat, boolean isDaemon)", "modifiers": "public static", "return": "ExecutorService", "body": "public static ExecutorService namedSingleThreadExecutor(String nameFormat, boolean isDaemon) {\n        ThreadFactory factory = new ThreadFactoryBuilder()\n                .setNameFormat(nameFormat)\n                .setDaemon(isDaemon)\n                .build();\n        return Executors.newSingleThreadExecutor(factory);\n    }", "signature": "ExecutorService namedSingleThreadExecutor(String nameFormat, boolean isDaemon)", "full_signature": "public static ExecutorService namedSingleThreadExecutor(String nameFormat, boolean isDaemon)", "class_method_signature": "MoreExecutors.namedSingleThreadExecutor(String nameFormat, boolean isDaemon)", "testcase": false, "constructor": false, "invocations": ["build", "setDaemon", "setNameFormat", "newSingleThreadExecutor"]}, "repository": {"repo_id": 8582237, "url": "https://github.com/splicemachine/spliceengine", "stars": 128, "created": "3/5/2013 3:07:56 PM +00:00", "updates": "2020-01-23T21:06:43+00:00", "fork": "False", "license": "licensed"}}