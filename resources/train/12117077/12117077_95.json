{"test_class": {"identifier": "CQLTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/io/jeo/filter/cql/CQLTest.java"}, "test_case": {"identifier": "testBBOX", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBBOX() throws ParseException {\n        //Filter f = CQL.parse(\"BBOX(pp,30, -125, 40, -110)\");\n        //assertTrue(f instanceof Spatial);\n\n        Filter f = CQL.parse(\"BBOX(pp,30, -125, 40, -110,'EPSG:4326')\");\n        assertTrue(f instanceof Spatial);\n    }", "signature": "void testBBOX()", "full_signature": "@Test public void testBBOX()", "class_method_signature": "CQLTest.testBBOX()", "testcase": true, "constructor": false, "invocations": ["parse", "assertTrue"]}, "focal_class": {"identifier": "CQL", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "parse", "parameters": "(String cql)", "modifiers": "public static", "return": "Filter", "signature": "Filter parse(String cql)", "full_signature": "public static Filter parse(String cql)", "class_method_signature": "CQL.parse(String cql)", "testcase": false, "constructor": false}], "file": "core/src/main/java/io/jeo/filter/cql/CQL.java"}, "focal_method": {"identifier": "parse", "parameters": "(String cql)", "modifiers": "public static", "return": "Filter", "body": "public static Filter parse(String cql) throws ParseException {\n        try {\n            return new CQLBuilder(cql).parse();\n        }\n        catch (Throwable orig) {\n            try {\n                return new ECQLBuilder(cql).parse();\n            }\n            catch (Throwable e) {\n                if (e instanceof ParseException) {\n                    throw (ParseException) e;\n                }\n                if (e instanceof TokenMgrError) {\n                    throw (ParseException) new ParseException(\"Invalid CQL syntax: \" + e.getMessage()).initCause(e);\n                }\n                throw (ParseException) new ParseException(\"CQL Parsing error\").initCause(e);\n            }\n        }\n\n    }", "signature": "Filter parse(String cql)", "full_signature": "public static Filter parse(String cql)", "class_method_signature": "CQL.parse(String cql)", "testcase": false, "constructor": false, "invocations": ["parse", "parse", "initCause", "getMessage", "initCause"]}, "repository": {"repo_id": 12117077, "url": "https://github.com/jeo/jeo", "language": "Java", "is_fork": false, "fork_count": 18, "stargazer_count": 15, "size": 6497, "license": "licensed"}}