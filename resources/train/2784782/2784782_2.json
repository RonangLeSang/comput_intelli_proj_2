{"test_class": {"identifier": "IOTest", "superclass": "", "interfaces": "", "fields": [], "file": "geoserver/webapp/api-composer/src/test/java/com/boundlessgeo/geoserver/api/controllers/IOTest.java"}, "test_case": {"identifier": "TestProj", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void TestProj() {\n        \n        //Test regurlar CRS\n        String srs = \"EPSG:4326\";\n        JSONObj obj = new JSONObj();\n        IO.proj(obj, Proj.get().crs(srs), srs);\n        assertEquals(srs, obj.str(\"srs\"));\n        assertNotNull(obj.get(\"wkt\"));\n        //Test complex CRS (Polar)\n        srs = \"EPSG:3031\";\n        obj = new JSONObj();\n        IO.proj(obj, Proj.get().crs(srs), srs);\n        assertEquals(srs, obj.str(\"srs\"));\n        assertNotNull(obj.get(\"wkt\"));\n    }", "signature": "void TestProj()", "full_signature": "@Test public void TestProj()", "class_method_signature": "IOTest.TestProj()", "testcase": true, "constructor": false, "invocations": ["proj", "crs", "get", "assertEquals", "str", "assertNotNull", "get", "proj", "crs", "get", "assertEquals", "str", "assertNotNull", "get"]}, "focal_class": {"identifier": "IO", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String DATE_FORMAT = \"yyyy-MM-dd'T'HH:mm:ssXXX\";", "modifier": "static final", "type": "String", "declarator": "DATE_FORMAT = \"yyyy-MM-dd'T'HH:mm:ssXXX\"", "var_name": "DATE_FORMAT"}, {"original_string": "static Logger LOG = Logging.getLogger(IO.class);", "modifier": "static", "type": "Logger", "declarator": "LOG = Logging.getLogger(IO.class)", "var_name": "LOG"}, {"original_string": "private static PrettyTime PRETTY_TIME = new PrettyTime();", "modifier": "private static", "type": "PrettyTime", "declarator": "PRETTY_TIME = new PrettyTime()", "var_name": "PRETTY_TIME"}], "methods": [{"identifier": "proj", "parameters": "(JSONObj obj, CoordinateReferenceSystem crs, String srs)", "modifiers": "public static", "return": "JSONObj", "signature": "JSONObj proj(JSONObj obj, CoordinateReferenceSystem crs, String srs)", "full_signature": "public static JSONObj proj(JSONObj obj, CoordinateReferenceSystem crs, String srs)", "class_method_signature": "IO.proj(JSONObj obj, CoordinateReferenceSystem crs, String srs)", "testcase": false, "constructor": false}, {"identifier": "bounds", "parameters": "(JSONObj obj, org.opengis.geometry.Envelope bbox)", "modifiers": "public static", "return": "JSONObj", "signature": "JSONObj bounds(JSONObj obj, org.opengis.geometry.Envelope bbox)", "full_signature": "public static JSONObj bounds(JSONObj obj, org.opengis.geometry.Envelope bbox)", "class_method_signature": "IO.bounds(JSONObj obj, org.opengis.geometry.Envelope bbox)", "testcase": false, "constructor": false}, {"identifier": "bounds", "parameters": "(JSONObj obj)", "modifiers": "public static", "return": "Envelope", "signature": "Envelope bounds(JSONObj obj)", "full_signature": "public static Envelope bounds(JSONObj obj)", "class_method_signature": "IO.bounds(JSONObj obj)", "testcase": false, "constructor": false}, {"identifier": "crs", "parameters": "(JSONObj obj)", "modifiers": "public static", "return": "CoordinateReferenceSystem", "signature": "CoordinateReferenceSystem crs(JSONObj obj)", "full_signature": "public static CoordinateReferenceSystem crs(JSONObj obj)", "class_method_signature": "IO.crs(JSONObj obj)", "testcase": false, "constructor": false}, {"identifier": "srs", "parameters": "(JSONObj obj)", "modifiers": "public static", "return": "String", "signature": "String srs(JSONObj obj)", "full_signature": "public static String srs(JSONObj obj)", "class_method_signature": "IO.srs(JSONObj obj)", "testcase": false, "constructor": false}, {"identifier": "workspace", "parameters": "(JSONObj obj, WorkspaceInfo workspace, NamespaceInfo namespace, boolean isDefault)", "modifiers": "public static", "return": "JSONObj", "signature": "JSONObj workspace(JSONObj obj, WorkspaceInfo workspace, NamespaceInfo namespace, boolean isDefault)", "full_signature": "public static JSONObj workspace(JSONObj obj, WorkspaceInfo workspace, NamespaceInfo namespace, boolean isDefault)", "class_method_signature": "IO.workspace(JSONObj obj, WorkspaceInfo workspace, NamespaceInfo namespace, boolean isDefault)", "testcase": false, "constructor": false}, {"identifier": "title", "parameters": "(LayerInfo layer)", "modifiers": "static", "return": "Object", "signature": "Object title(LayerInfo layer)", "full_signature": "static Object title(LayerInfo layer)", "class_method_signature": "IO.title(LayerInfo layer)", "testcase": false, "constructor": false}, {"identifier": "description", "parameters": "(LayerInfo layer)", "modifiers": "static", "return": "Object", "signature": "Object description(LayerInfo layer)", "full_signature": "static Object description(LayerInfo layer)", "class_method_signature": "IO.description(LayerInfo layer)", "testcase": false, "constructor": false}, {"identifier": "layer", "parameters": "(JSONObj json, LayerInfo info, HttpServletRequest req)", "modifiers": "public static", "return": "JSONObj", "signature": "JSONObj layer(JSONObj json, LayerInfo info, HttpServletRequest req)", "full_signature": "public static JSONObj layer(JSONObj json, LayerInfo info, HttpServletRequest req)", "class_method_signature": "IO.layer(JSONObj json, LayerInfo info, HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "layerDetails", "parameters": "(JSONObj obj, PublishedInfo layer, HttpServletRequest req)", "modifiers": "public static", "return": "JSONObj", "signature": "JSONObj layerDetails(JSONObj obj, PublishedInfo layer, HttpServletRequest req)", "full_signature": "public static JSONObj layerDetails(JSONObj obj, PublishedInfo layer, HttpServletRequest req)", "class_method_signature": "IO.layerDetails(JSONObj obj, PublishedInfo layer, HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "layerDetails", "parameters": "(JSONObj obj, LayerGroupInfo group, HttpServletRequest req)", "modifiers": "public static", "return": "JSONObj", "signature": "JSONObj layerDetails(JSONObj obj, LayerGroupInfo group, HttpServletRequest req)", "full_signature": "public static JSONObj layerDetails(JSONObj obj, LayerGroupInfo group, HttpServletRequest req)", "class_method_signature": "IO.layerDetails(JSONObj obj, LayerGroupInfo group, HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "layerDetails", "parameters": "(JSONObj obj, LayerInfo layer, HttpServletRequest req)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "JSONObj", "signature": "JSONObj layerDetails(JSONObj obj, LayerInfo layer, HttpServletRequest req)", "full_signature": "@SuppressWarnings(\"unchecked\") public static JSONObj layerDetails(JSONObj obj, LayerInfo layer, HttpServletRequest req)", "class_method_signature": "IO.layerDetails(JSONObj obj, LayerInfo layer, HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "type", "parameters": "(ResourceInfo r)", "modifiers": "static", "return": "String", "signature": "String type(ResourceInfo r)", "full_signature": "static String type(ResourceInfo r)", "class_method_signature": "IO.type(ResourceInfo r)", "testcase": false, "constructor": false}, {"identifier": "geometry", "parameters": "(LayerInfo layer)", "modifiers": "static", "return": "String", "signature": "String geometry(LayerInfo layer)", "full_signature": "static String geometry(LayerInfo layer)", "class_method_signature": "IO.geometry(LayerInfo layer)", "testcase": false, "constructor": false}, {"identifier": "bbox", "parameters": "( JSONObj bbox, LayerGroupInfo l )", "modifiers": "public static", "return": "JSONObj", "signature": "JSONObj bbox( JSONObj bbox, LayerGroupInfo l )", "full_signature": "public static JSONObj bbox( JSONObj bbox, LayerGroupInfo l )", "class_method_signature": "IO.bbox( JSONObj bbox, LayerGroupInfo l )", "testcase": false, "constructor": false}, {"identifier": "bbox", "parameters": "( JSONObj bbox, ResourceInfo r )", "modifiers": "public static", "return": "JSONObj", "signature": "JSONObj bbox( JSONObj bbox, ResourceInfo r )", "full_signature": "public static JSONObj bbox( JSONObj bbox, ResourceInfo r )", "class_method_signature": "IO.bbox( JSONObj bbox, ResourceInfo r )", "testcase": false, "constructor": false}, {"identifier": "schema", "parameters": "( JSONObj schema, FeatureType type, boolean details)", "modifiers": "public static", "return": "JSONObj", "signature": "JSONObj schema( JSONObj schema, FeatureType type, boolean details)", "full_signature": "public static JSONObj schema( JSONObj schema, FeatureType type, boolean details)", "class_method_signature": "IO.schema( JSONObj schema, FeatureType type, boolean details)", "testcase": false, "constructor": false}, {"identifier": "feature", "parameters": "( JSONArr arr, Feature feature)", "modifiers": "public static", "return": "JSONArr", "signature": "JSONArr feature( JSONArr arr, Feature feature)", "full_signature": "public static JSONArr feature( JSONArr arr, Feature feature)", "class_method_signature": "IO.feature( JSONArr arr, Feature feature)", "testcase": false, "constructor": false}, {"identifier": "features", "parameters": "( JSONArr arr, FeatureCollection<FeatureType, Feature> features)", "modifiers": "public static", "return": "JSONArr", "signature": "JSONArr features( JSONArr arr, FeatureCollection<FeatureType, Feature> features)", "full_signature": "public static JSONArr features( JSONArr arr, FeatureCollection<FeatureType, Feature> features)", "class_method_signature": "IO.features( JSONArr arr, FeatureCollection<FeatureType, Feature> features)", "testcase": false, "constructor": false}, {"identifier": "schemaGrid", "parameters": "( JSONObj schema, CoverageInfo info, boolean details )", "modifiers": "public static", "return": "JSONObj", "signature": "JSONObj schemaGrid( JSONObj schema, CoverageInfo info, boolean details )", "full_signature": "public static JSONObj schemaGrid( JSONObj schema, CoverageInfo info, boolean details )", "class_method_signature": "IO.schemaGrid( JSONObj schema, CoverageInfo info, boolean details )", "testcase": false, "constructor": false}, {"identifier": "schemaGrid", "parameters": "( JSONObj schema, CoordinateReferenceSystem crs, boolean details)", "modifiers": "public static", "return": "JSONObj", "signature": "JSONObj schemaGrid( JSONObj schema, CoordinateReferenceSystem crs, boolean details)", "full_signature": "public static JSONObj schemaGrid( JSONObj schema, CoordinateReferenceSystem crs, boolean details)", "class_method_signature": "IO.schemaGrid( JSONObj schema, CoordinateReferenceSystem crs, boolean details)", "testcase": false, "constructor": false}, {"identifier": "store", "parameters": "(JSONObj obj, StoreInfo store, HttpServletRequest req, GeoServer geoServer)", "modifiers": "public static", "return": "JSONObj", "signature": "JSONObj store(JSONObj obj, StoreInfo store, HttpServletRequest req, GeoServer geoServer)", "full_signature": "public static JSONObj store(JSONObj obj, StoreInfo store, HttpServletRequest req, GeoServer geoServer)", "class_method_signature": "IO.store(JSONObj obj, StoreInfo store, HttpServletRequest req, GeoServer geoServer)", "testcase": false, "constructor": false}, {"identifier": "storeDetails", "parameters": "(JSONObj json, StoreInfo store, HttpServletRequest req, GeoServer geoServer)", "modifiers": "public static", "return": "JSONObj", "signature": "JSONObj storeDetails(JSONObj json, StoreInfo store, HttpServletRequest req, GeoServer geoServer)", "full_signature": "public static JSONObj storeDetails(JSONObj json, StoreInfo store, HttpServletRequest req, GeoServer geoServer)", "class_method_signature": "IO.storeDetails(JSONObj json, StoreInfo store, HttpServletRequest req, GeoServer geoServer)", "testcase": false, "constructor": false}, {"identifier": "layerCount", "parameters": "(StoreInfo store, GeoServer geoServer)", "modifiers": "static", "return": "int", "signature": "int layerCount(StoreInfo store, GeoServer geoServer)", "full_signature": "static int layerCount(StoreInfo store, GeoServer geoServer)", "class_method_signature": "IO.layerCount(StoreInfo store, GeoServer geoServer)", "testcase": false, "constructor": false}, {"identifier": "layers", "parameters": "(ResourceInfo r, JSONArr list, GeoServer geoServer)", "modifiers": "private static", "return": "JSONArr", "signature": "JSONArr layers(ResourceInfo r, JSONArr list, GeoServer geoServer)", "full_signature": "private static JSONArr layers(ResourceInfo r, JSONArr list, GeoServer geoServer)", "class_method_signature": "IO.layers(ResourceInfo r, JSONArr list, GeoServer geoServer)", "testcase": false, "constructor": false}, {"identifier": "layers", "parameters": "(StoreInfo store, JSONArr list, GeoServer geoServer)", "modifiers": "private static", "return": "JSONArr", "signature": "JSONArr layers(StoreInfo store, JSONArr list, GeoServer geoServer)", "full_signature": "private static JSONArr layers(StoreInfo store, JSONArr list, GeoServer geoServer)", "class_method_signature": "IO.layers(StoreInfo store, JSONArr list, GeoServer geoServer)", "testcase": false, "constructor": false}, {"identifier": "resources", "parameters": "(StoreInfo store, JSONArr list, GeoServer geoServer)", "modifiers": "@SuppressWarnings(\"unchecked\") private static", "return": "JSONArr", "signature": "JSONArr resources(StoreInfo store, JSONArr list, GeoServer geoServer)", "full_signature": "@SuppressWarnings(\"unchecked\") private static JSONArr resources(StoreInfo store, JSONArr list, GeoServer geoServer)", "class_method_signature": "IO.resources(StoreInfo store, JSONArr list, GeoServer geoServer)", "testcase": false, "constructor": false}, {"identifier": "resource", "parameters": "(JSONObj obj, StoreInfo store, String name, GeoServer geoServer)", "modifiers": "public static", "return": "JSONObj", "signature": "JSONObj resource(JSONObj obj, StoreInfo store, String name, GeoServer geoServer)", "full_signature": "public static JSONObj resource(JSONObj obj, StoreInfo store, String name, GeoServer geoServer)", "class_method_signature": "IO.resource(JSONObj obj, StoreInfo store, String name, GeoServer geoServer)", "testcase": false, "constructor": false}, {"identifier": "listResources", "parameters": "(StoreInfo store)", "modifiers": "private static", "return": "Iterable<String>", "signature": "Iterable<String> listResources(StoreInfo store)", "full_signature": "private static Iterable<String> listResources(StoreInfo store)", "class_method_signature": "IO.listResources(StoreInfo store)", "testcase": false, "constructor": false}, {"identifier": "source", "parameters": "(StoreInfo store, GeoServer geoServer)", "modifiers": "private static", "return": "String", "signature": "String source(StoreInfo store, GeoServer geoServer)", "full_signature": "private static String source(StoreInfo store, GeoServer geoServer)", "class_method_signature": "IO.source(StoreInfo store, GeoServer geoServer)", "testcase": false, "constructor": false}, {"identifier": "source", "parameters": "(File file, GeoServerDataDirectory dataDir)", "modifiers": "private static", "return": "String", "signature": "String source(File file, GeoServerDataDirectory dataDir)", "full_signature": "private static String source(File file, GeoServerDataDirectory dataDir)", "class_method_signature": "IO.source(File file, GeoServerDataDirectory dataDir)", "testcase": false, "constructor": false}, {"identifier": "source", "parameters": "(URL url, GeoServerDataDirectory dataDir)", "modifiers": "private static", "return": "String", "signature": "String source(URL url, GeoServerDataDirectory dataDir)", "full_signature": "private static String source(URL url, GeoServerDataDirectory dataDir)", "class_method_signature": "IO.source(URL url, GeoServerDataDirectory dataDir)", "testcase": false, "constructor": false}, {"identifier": "sourceURL", "parameters": "(String url, GeoServerDataDirectory dataDir)", "modifiers": "private static", "return": "String", "signature": "String sourceURL(String url, GeoServerDataDirectory dataDir)", "full_signature": "private static String sourceURL(String url, GeoServerDataDirectory dataDir)", "class_method_signature": "IO.sourceURL(String url, GeoServerDataDirectory dataDir)", "testcase": false, "constructor": false}, {"identifier": "sourceFile", "parameters": "(String file, GeoServerDataDirectory dataDir)", "modifiers": "private static", "return": "String", "signature": "String sourceFile(String file, GeoServerDataDirectory dataDir)", "full_signature": "private static String sourceFile(String file, GeoServerDataDirectory dataDir)", "class_method_signature": "IO.sourceFile(String file, GeoServerDataDirectory dataDir)", "testcase": false, "constructor": false}, {"identifier": "date", "parameters": "(JSONObj obj, Date date)", "modifiers": "static", "return": "JSONObj", "signature": "JSONObj date(JSONObj obj, Date date)", "full_signature": "static JSONObj date(JSONObj obj, Date date)", "class_method_signature": "IO.date(JSONObj obj, Date date)", "testcase": false, "constructor": false}, {"identifier": "metadata", "parameters": "(JSONObj obj, Info i)", "modifiers": "static", "return": "JSONObj", "signature": "JSONObj metadata(JSONObj obj, Info i)", "full_signature": "static JSONObj metadata(JSONObj obj, Info i)", "class_method_signature": "IO.metadata(JSONObj obj, Info i)", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(JSONObj json, Throwable error)", "modifiers": "public static", "return": "JSONObj", "signature": "JSONObj error(JSONObj json, Throwable error)", "full_signature": "public static JSONObj error(JSONObj json, Throwable error)", "class_method_signature": "IO.error(JSONObj json, Throwable error)", "testcase": false, "constructor": false}, {"identifier": "param", "parameters": "(JSONObj json, Parameter<?> p)", "modifiers": "public static", "return": "JSONObj", "signature": "JSONObj param(JSONObj json, Parameter<?> p)", "full_signature": "public static JSONObj param(JSONObj json, Parameter<?> p)", "class_method_signature": "IO.param(JSONObj json, Parameter<?> p)", "testcase": false, "constructor": false}, {"identifier": "param", "parameters": "(JSONObj json, Format g)", "modifiers": "public static", "return": "void", "signature": "void param(JSONObj json, Format g)", "full_signature": "public static void param(JSONObj json, Format g)", "class_method_signature": "IO.param(JSONObj json, Format g)", "testcase": false, "constructor": false}, {"identifier": "safeValue", "parameters": "(Object value)", "modifiers": "static private", "return": "Object", "signature": "Object safeValue(Object value)", "full_signature": "static private Object safeValue(Object value)", "class_method_signature": "IO.safeValue(Object value)", "testcase": false, "constructor": false}, {"identifier": "url", "parameters": "(HttpServletRequest req, String path, Object ... args)", "modifiers": "public static", "return": "Object", "signature": "Object url(HttpServletRequest req, String path, Object ... args)", "full_signature": "public static Object url(HttpServletRequest req, String path, Object ... args)", "class_method_signature": "IO.url(HttpServletRequest req, String path, Object ... args)", "testcase": false, "constructor": false}, {"identifier": "ref", "parameters": "(JSONObj obj, Ref ref)", "modifiers": "public static", "return": "JSONObj", "signature": "JSONObj ref(JSONObj obj, Ref ref)", "full_signature": "public static JSONObj ref(JSONObj obj, Ref ref)", "class_method_signature": "IO.ref(JSONObj obj, Ref ref)", "testcase": false, "constructor": false}], "file": "geoserver/webapp/api-composer/src/main/java/com/boundlessgeo/geoserver/api/controllers/IO.java"}, "focal_method": {"identifier": "proj", "parameters": "(JSONObj obj, CoordinateReferenceSystem crs, String srs)", "modifiers": "public static", "return": "JSONObj", "body": "public static JSONObj proj(JSONObj obj, CoordinateReferenceSystem crs, String srs) {\n        if (srs == null && crs != null) {\n            try {\n                srs = CRS.toSRS(crs);\n            } catch (Exception e) {\n                LOG.log(Level.WARNING, \"Unable to determine srs from crs: \" + crs, e);\n            }\n        }\n        \n        if (crs != null && crs.getName() != null) {\n            ReferenceIdentifier name = crs.getName();\n            if (name instanceof GenericName) {\n                obj.put(\"title\", ((GenericName) name).tip().toString());\n            } else {\n                obj.put(\"title\", name.toString());\n            }\n        }\n        \n        if (srs != null) {\n            obj.put(\"srs\", srs);\n        }\n        else {\n            obj.put(\"srs\", \"UNKNOWN\");\n        }\n\n        if (crs == null && srs != null) {\n            try {\n                crs = CRS.decode(srs);\n            } catch (Exception e) {\n                LOG.log(Level.WARNING, \"Unable to determine crs from srs: \" + srs, e);\n            }\n        }\n\n        if (crs != null) {\n            // type\n            obj.put(\"type\",\n                    crs instanceof ProjectedCRS ? \"projected\" : crs instanceof GeographicCRS ? \"geographic\" : \"other\");\n\n            // units\n            String units = null;\n            try {\n                // try to determine from actual crs\n                String unit = crs.getCoordinateSystem().getAxis(0).getUnit().toString();\n                if (\"ft\".equals(unit) || \"feets\".equals(unit))\n                    units = \"ft\";\n            } catch (Exception e) {\n                LOG.log(Level.WARNING, \"Unable to determine units from crs\", e);\n            }\n            if (units == null) {\n                // fallback: meters for projected, otherwise degrees\n                units = crs instanceof ProjectedCRS ? \"m\" : \"degrees\";\n            }\n            obj.put(\"unit\", units);\n            obj.put(\"wkt\", crs.toString());\n        }\n\n        return obj;\n    }", "signature": "JSONObj proj(JSONObj obj, CoordinateReferenceSystem crs, String srs)", "full_signature": "public static JSONObj proj(JSONObj obj, CoordinateReferenceSystem crs, String srs)", "class_method_signature": "IO.proj(JSONObj obj, CoordinateReferenceSystem crs, String srs)", "testcase": false, "constructor": false, "invocations": ["toSRS", "log", "getName", "getName", "put", "toString", "tip", "put", "toString", "put", "put", "decode", "log", "put", "toString", "getUnit", "getAxis", "getCoordinateSystem", "equals", "equals", "log", "put", "put", "toString"]}, "repository": {"repo_id": 2784782, "url": "https://github.com/planetfederal/suite", "language": "Java", "is_fork": false, "fork_count": 207, "stargazer_count": 200, "size": 448459, "license": "licensed"}}