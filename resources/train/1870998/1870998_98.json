{"test_class": {"identifier": "QRCodeUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "bc-photo/src/test/java/cn/bc/photo/util/QRCodeUtilsTest.java"}, "test_case": {"identifier": "encodeToPNGFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void encodeToPNGFile() throws Exception {\n    File file = new File(\"e:\\\\t\\\\zxing\\\\qrcode.png\");\n    String content = \"http://detail.tmall.com/item.htm?spm=a1z10.1.w6129549-4101809663.2.n4kSGW&id=23289408383&rn=cd665709a25a50ce8bad23b01868a212\";\n    QRCodeUtils.encode(content, file);\n  }", "signature": "void encodeToPNGFile()", "full_signature": "@Test public void encodeToPNGFile()", "class_method_signature": "QRCodeUtilsTest.encodeToPNGFile()", "testcase": true, "constructor": false, "invocations": ["encode"]}, "focal_class": {"identifier": "QRCodeUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static String DEFAULT_ENCODE = \"UTF-8\";", "modifier": "public static", "type": "String", "declarator": "DEFAULT_ENCODE = \"UTF-8\"", "var_name": "DEFAULT_ENCODE"}, {"original_string": "public static int DEFAULT_SIZE = 300;", "modifier": "public static", "type": "int", "declarator": "DEFAULT_SIZE = 300", "var_name": "DEFAULT_SIZE"}, {"original_string": "public static String DEFAULT_FORMAT = \"png\";", "modifier": "public static", "type": "String", "declarator": "DEFAULT_FORMAT = \"png\"", "var_name": "DEFAULT_FORMAT"}, {"original_string": "private static Hashtable<EncodeHintType, String> encodeHints;", "modifier": "private static", "type": "Hashtable<EncodeHintType, String>", "declarator": "encodeHints", "var_name": "encodeHints"}, {"original_string": "private static Hashtable<DecodeHintType, String> decodeHints;", "modifier": "private static", "type": "Hashtable<DecodeHintType, String>", "declarator": "decodeHints", "var_name": "decodeHints"}], "methods": [{"identifier": "QRCodeUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " QRCodeUtils()", "full_signature": "private  QRCodeUtils()", "class_method_signature": "QRCodeUtils.QRCodeUtils()", "testcase": false, "constructor": true}, {"identifier": "encode", "parameters": "(String content, File file)", "modifiers": "public static", "return": "void", "signature": "void encode(String content, File file)", "full_signature": "public static void encode(String content, File file)", "class_method_signature": "QRCodeUtils.encode(String content, File file)", "testcase": false, "constructor": false}, {"identifier": "getFormat", "parameters": "(File file)", "modifiers": "private static", "return": "String", "signature": "String getFormat(File file)", "full_signature": "private static String getFormat(File file)", "class_method_signature": "QRCodeUtils.getFormat(File file)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(String content, OutputStream stream, String format)", "modifiers": "public static", "return": "void", "signature": "void encode(String content, OutputStream stream, String format)", "full_signature": "public static void encode(String content, OutputStream stream, String format)", "class_method_signature": "QRCodeUtils.encode(String content, OutputStream stream, String format)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(File file)", "modifiers": "public static", "return": "String", "signature": "String decode(File file)", "full_signature": "public static String decode(File file)", "class_method_signature": "QRCodeUtils.decode(File file)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(InputStream inputStream)", "modifiers": "public static", "return": "String", "signature": "String decode(InputStream inputStream)", "full_signature": "public static String decode(InputStream inputStream)", "class_method_signature": "QRCodeUtils.decode(InputStream inputStream)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(BufferedImage image)", "modifiers": "public static", "return": "String", "signature": "String decode(BufferedImage image)", "full_signature": "public static String decode(BufferedImage image)", "class_method_signature": "QRCodeUtils.decode(BufferedImage image)", "testcase": false, "constructor": false}], "file": "bc-photo/src/main/java/cn/bc/photo/util/QRCodeUtils.java"}, "focal_method": {"identifier": "encode", "parameters": "(String content, File file)", "modifiers": "public static", "return": "void", "body": "public static void encode(String content, File file) throws Exception {\n    MultiFormatWriter barcodeWriter = new MultiFormatWriter();\n    BitMatrix matrix = barcodeWriter.encode(content, BarcodeFormat.QR_CODE,\n      DEFAULT_SIZE, DEFAULT_SIZE, encodeHints);\n\n    // \u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\n    if (!file.exists())\n      file.mkdirs();\n\n    // \u786e\u5b9a\u6587\u4ef6\u683c\u5f0f\n    String format = getFormat(file);\n\n    // \u751f\u6210\u6587\u4ef6\n    MatrixToImageWriter.writeToFile(matrix, format, file);\n  }", "signature": "void encode(String content, File file)", "full_signature": "public static void encode(String content, File file)", "class_method_signature": "QRCodeUtils.encode(String content, File file)", "testcase": false, "constructor": false, "invocations": ["encode", "exists", "mkdirs", "getFormat", "writeToFile"]}, "repository": {"repo_id": 1870998, "url": "https://github.com/bcsoft/bc-framework", "stars": 26, "created": "6/9/2011 2:10:06 PM +00:00", "updates": "2019-05-30T14:11:53+00:00", "fork": "False", "license": "licensed"}}