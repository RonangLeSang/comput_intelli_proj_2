{"test_class": {"identifier": "MapPoolDuplicateActionTest", "superclass": "extends TestingClass", "interfaces": "", "fields": [], "file": "gpswinggui/src/test/java/org/geopublishing/geopublisher/gui/map/MapPoolDuplicateActionTest.java"}, "test_case": {"identifier": "testDuplicateMap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testDuplicateMap() throws AtlasException, FactoryException,\n\t\t\tTransformException, SAXException, IOException,\n\t\t\tParserConfigurationException {\n\t\tAtlasConfigEditable ace = GpTestingUtil\n\t\t\t\t.getAtlasConfigE(TestAtlas.small);\n\t\tMap map1 = ace.getMapPool().get(0);\n\t\tFile htmlDir1 = ace.getHtmlDirFor(map1);\n\n\t\tint count1 = htmlDir1.list().length;\n\t\tlong size1 = FileUtils.sizeOfDirectory(htmlDir1);\n\n\t\tassertTrue(\"map html dir may not be empty for this test\", count1 > 0);\n\n\t\t// if (TestingUtil.INTERACTIVE) {\n\t\tMapPoolDuplicateAction mapPoolDuplicateAction = new MapPoolDuplicateAction(\n\t\t\t\tnew MapPoolJTable(ace));\n\n\t\t// Start copy now!\n\t\tif (TestingUtil.INTERACTIVE) {\n\t\t\tMap map2 = mapPoolDuplicateAction.actionPerformed(map1);\n\n\t\t\tassertFalse(map1.equals(map2));\n\t\t\tFile htmlDir2 = ace.getHtmlDirFor(map2);\n\t\t\tassertFalse(htmlDir1.equals(htmlDir2));\n\n\t\t\t// Assert, that the files have been copied to.\n\t\t\tlong size2 = FileUtils.sizeOfDirectory(htmlDir2);\n\t\t\tint count2 = htmlDir2.list().length;\n\n\t\t\tassertEquals(size1, size2);\n\t\t\tassertEquals(count1, count2);\n\t\t\tassertFalse(\"SVN files should have been omitted during copy\",\n\t\t\t\t\tnew File(htmlDir2, \".svn\").exists());\n\n\t\t\t// Cleanup\n\t\t\tFileUtils.deleteDirectory(htmlDir2);\n\t\t}\n\t\tace.deleteAtlas();\n\t}", "signature": "void testDuplicateMap()", "full_signature": "@Test public void testDuplicateMap()", "class_method_signature": "MapPoolDuplicateActionTest.testDuplicateMap()", "testcase": true, "constructor": false, "invocations": ["getAtlasConfigE", "get", "getMapPool", "getHtmlDirFor", "list", "sizeOfDirectory", "assertTrue", "actionPerformed", "assertFalse", "equals", "getHtmlDirFor", "assertFalse", "equals", "sizeOfDirectory", "list", "assertEquals", "assertEquals", "assertFalse", "exists", "deleteDirectory", "deleteAtlas"]}, "focal_class": {"identifier": "MapPoolDuplicateAction", "superclass": "extends AbstractAction", "interfaces": "", "fields": [{"original_string": "final static private Logger LOGGER = Logger\n\t\t\t.getLogger(MapPoolDuplicateAction.class);", "modifier": "final static private", "type": "Logger", "declarator": "LOGGER = Logger\n\t\t\t.getLogger(MapPoolDuplicateAction.class)", "var_name": "LOGGER"}, {"original_string": "private final MapPoolJTable mapPoolJTable;", "modifier": "private final", "type": "MapPoolJTable", "declarator": "mapPoolJTable", "var_name": "mapPoolJTable"}, {"original_string": "private final MapPool mapPool;", "modifier": "private final", "type": "MapPool", "declarator": "mapPool", "var_name": "mapPool"}], "methods": [{"identifier": "MapPoolDuplicateAction", "parameters": "(MapPoolJTable mapPoolJTable)", "modifiers": "public", "return": "", "signature": " MapPoolDuplicateAction(MapPoolJTable mapPoolJTable)", "full_signature": "public  MapPoolDuplicateAction(MapPoolJTable mapPoolJTable)", "class_method_signature": "MapPoolDuplicateAction.MapPoolDuplicateAction(MapPoolJTable mapPoolJTable)", "testcase": false, "constructor": true}, {"identifier": "actionPerformed", "parameters": "(ActionEvent e)", "modifiers": "@Override public", "return": "void", "signature": "void actionPerformed(ActionEvent e)", "full_signature": "@Override public void actionPerformed(ActionEvent e)", "class_method_signature": "MapPoolDuplicateAction.actionPerformed(ActionEvent e)", "testcase": false, "constructor": false}, {"identifier": "actionPerformed", "parameters": "(final Map map)", "modifiers": "public", "return": "Map", "signature": "Map actionPerformed(final Map map)", "full_signature": "public Map actionPerformed(final Map map)", "class_method_signature": "MapPoolDuplicateAction.actionPerformed(final Map map)", "testcase": false, "constructor": false}], "file": "gpswinggui/src/main/java/org/geopublishing/geopublisher/gui/map/MapPoolDuplicateAction.java"}, "focal_method": {"identifier": "actionPerformed", "parameters": "(ActionEvent e)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void actionPerformed(ActionEvent e) {\n\n\t\tint idx = mapPoolJTable.getSelectedRow();\n\n\t\tfinal Map map = mapPool.get(mapPoolJTable.convertRowIndexToModel(idx));\n\n\t\tactionPerformed(map);\n\n\t}", "signature": "void actionPerformed(ActionEvent e)", "full_signature": "@Override public void actionPerformed(ActionEvent e)", "class_method_signature": "MapPoolDuplicateAction.actionPerformed(ActionEvent e)", "testcase": false, "constructor": false, "invocations": ["getSelectedRow", "get", "convertRowIndexToModel", "actionPerformed"]}, "repository": {"repo_id": 11159652, "url": "https://github.com/geopublishing/atlasframework", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 65429, "license": "licensed"}}