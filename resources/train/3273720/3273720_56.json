{"test_class": {"identifier": "ValidateInstanceMemoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEMPLATE_NAME = \"TEMPLATE_1\";", "modifier": "private static final", "type": "String", "declarator": "TEMPLATE_NAME = \"TEMPLATE_1\"", "var_name": "TEMPLATE_NAME"}, {"original_string": "private static final String CLOUD_FILE_PATH = ValidatorsTestsUtils.FOLDER + \"/byon/byon-cloud.groovy\";", "modifier": "private static final", "type": "String", "declarator": "CLOUD_FILE_PATH = ValidatorsTestsUtils.FOLDER + \"/byon/byon-cloud.groovy\"", "var_name": "CLOUD_FILE_PATH"}, {"original_string": "private static final String ERR_MSG = CloudifyMessageKeys.INSUFFICIENT_MEMORY.getName();", "modifier": "private static final", "type": "String", "declarator": "ERR_MSG = CloudifyMessageKeys.INSUFFICIENT_MEMORY.getName()", "var_name": "ERR_MSG"}, {"original_string": "private Cloud byonCloud;", "modifier": "private", "type": "Cloud", "declarator": "byonCloud", "var_name": "byonCloud"}, {"original_string": "private Service service;", "modifier": "private", "type": "Service", "declarator": "service", "var_name": "service"}, {"original_string": "private ValidateInstanceMemory validateInstanceMemory;", "modifier": "private", "type": "ValidateInstanceMemory", "declarator": "validateInstanceMemory", "var_name": "validateInstanceMemory"}, {"original_string": "private ValidateApplicationServices validateApplicationServices;", "modifier": "private", "type": "ValidateApplicationServices", "declarator": "validateApplicationServices", "var_name": "validateApplicationServices"}], "file": "restful/src/test/java/org/cloudifysource/rest/validators/ValidateInstanceMemoryTest.java"}, "test_case": {"identifier": "testInsufficientReservedMemoryInInstallService", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testInsufficientReservedMemoryInInstallService() {\n\t\tinitInsufficientMemory(true);\n\t\tInstallServiceValidationContext context = new InstallServiceValidationContext();\n\t\tcontext.setCloud(byonCloud);\n\t\tcontext.setService(service);\n\t\tValidatorsTestsUtils.validate(validateInstanceMemory, context, ERR_MSG);\n\t}", "signature": "void testInsufficientReservedMemoryInInstallService()", "full_signature": "@Test public void testInsufficientReservedMemoryInInstallService()", "class_method_signature": "ValidateInstanceMemoryTest.testInsufficientReservedMemoryInInstallService()", "testcase": true, "constructor": false, "invocations": ["initInsufficientMemory", "setCloud", "setService", "validate"]}, "focal_class": {"identifier": "ValidateInstanceMemory", "superclass": "", "interfaces": "implements InstallServiceValidator", "fields": [{"original_string": "private static final Logger logger = Logger.getLogger(ValidateInstanceMemory.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(ValidateInstanceMemory.class.getName())", "var_name": "logger"}], "methods": [{"identifier": "validate", "parameters": "(final InstallServiceValidationContext validationContext)", "modifiers": "@Override public", "return": "void", "signature": "void validate(final InstallServiceValidationContext validationContext)", "full_signature": "@Override public void validate(final InstallServiceValidationContext validationContext)", "class_method_signature": "ValidateInstanceMemory.validate(final InstallServiceValidationContext validationContext)", "testcase": false, "constructor": false}], "file": "restful/src/main/java/org/cloudifysource/rest/validators/ValidateInstanceMemory.java"}, "focal_method": {"identifier": "validate", "parameters": "(final InstallServiceValidationContext validationContext)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validate(final InstallServiceValidationContext validationContext) throws RestErrorException {\n    \tlogger.info(\"Validating isntance memory\");\n    \tfinal Service service = validationContext.getService();\n        final Cloud cloud = validationContext.getCloud();\n        if (service == null) {\n            return;\n        }\n        if (IsolationUtils.isDedicated(service)) {\n            return;\n        }\n        String serviceTemplate = null;\n        if (service.getCompute() != null) {\n            serviceTemplate = service.getCompute().getTemplate();\n        }\n        if (serviceTemplate == null) {\n            serviceTemplate = cloud.getCloudCompute().getTemplates().entrySet().iterator().next().getKey();\n        }\n        final int machineTemplateMemory =\n                cloud.getCloudCompute().getTemplates().get(serviceTemplate).getMachineMemoryMB();\n        final int reservedMachineMemory = cloud.getProvider().getReservedMemoryCapacityPerMachineInMB();\n        final long instanceMemoryMB = IsolationUtils.getInstanceMemoryMB(service);\n        if (instanceMemoryMB > machineTemplateMemory - reservedMachineMemory) {\n            throw new RestErrorException(CloudifyMessageKeys.INSUFFICIENT_MEMORY.getName(),\n                    service.getName(), instanceMemoryMB, machineTemplateMemory, reservedMachineMemory);\n        }\n    }", "signature": "void validate(final InstallServiceValidationContext validationContext)", "full_signature": "@Override public void validate(final InstallServiceValidationContext validationContext)", "class_method_signature": "ValidateInstanceMemory.validate(final InstallServiceValidationContext validationContext)", "testcase": false, "constructor": false, "invocations": ["info", "getService", "getCloud", "isDedicated", "getCompute", "getTemplate", "getCompute", "getKey", "next", "iterator", "entrySet", "getTemplates", "getCloudCompute", "getMachineMemoryMB", "get", "getTemplates", "getCloudCompute", "getReservedMemoryCapacityPerMachineInMB", "getProvider", "getInstanceMemoryMB", "getName", "getName"]}, "repository": {"repo_id": 3273720, "url": "https://github.com/CloudifySource/cloudify", "language": "Java", "is_fork": false, "fork_count": 165, "stargazer_count": 341, "size": 141067, "license": "licensed"}}