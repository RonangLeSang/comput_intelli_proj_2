{"test_class": {"identifier": "ValidateTemplateTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CLOUD_FILE_PATH = ValidatorsTestsUtils.FOLDER + \"/byon/byon-cloud.groovy\";", "modifier": "private static final", "type": "String", "declarator": "CLOUD_FILE_PATH = ValidatorsTestsUtils.FOLDER + \"/byon/byon-cloud.groovy\"", "var_name": "CLOUD_FILE_PATH"}, {"original_string": "private static final String NO_COMPUTE_SERVICE = ValidatorsTestsUtils.FOLDER + \"/simple.groovy\";", "modifier": "private static final", "type": "String", "declarator": "NO_COMPUTE_SERVICE = ValidatorsTestsUtils.FOLDER + \"/simple.groovy\"", "var_name": "NO_COMPUTE_SERVICE"}, {"original_string": "private static final String NOT_EXIST_TEMPLATE_SERVICE_GROOVY = \n    \t\tValidatorsTestsUtils.FOLDER + \"/template5service.groovy\";", "modifier": "private static final", "type": "String", "declarator": "NOT_EXIST_TEMPLATE_SERVICE_GROOVY = \n    \t\tValidatorsTestsUtils.FOLDER + \"/template5service.groovy\"", "var_name": "NOT_EXIST_TEMPLATE_SERVICE_GROOVY"}, {"original_string": "private static final String ERR_MSG = CloudifyErrorMessages.MISSING_TEMPLATE.getName();", "modifier": "private static final", "type": "String", "declarator": "ERR_MSG = CloudifyErrorMessages.MISSING_TEMPLATE.getName()", "var_name": "ERR_MSG"}, {"original_string": "private ValidateTemplate validateTempalte;", "modifier": "private", "type": "ValidateTemplate", "declarator": "validateTempalte", "var_name": "validateTempalte"}, {"original_string": "private ValidateApplicationServices validateApplicationServices;", "modifier": "private", "type": "ValidateApplicationServices", "declarator": "validateApplicationServices", "var_name": "validateApplicationServices"}, {"original_string": "private Cloud cloud;", "modifier": "private", "type": "Cloud", "declarator": "cloud", "var_name": "cloud"}], "file": "restful/src/test/java/org/cloudifysource/rest/validators/ValidateTemplateTest.java"}, "test_case": {"identifier": "testMissingTemplateOnInstallService", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMissingTemplateOnInstallService() throws DSLException, PackagingException {\n        Service service = ServiceReader.readService(new File(NOT_EXIST_TEMPLATE_SERVICE_GROOVY));        \n        InstallServiceValidationContext validationContext = new InstallServiceValidationContext();\n        validationContext.setCloud(cloud);\n        validationContext.setService(service);\n\t\tValidatorsTestsUtils.validate(validateTempalte, validationContext, ERR_MSG);\n    }", "signature": "void testMissingTemplateOnInstallService()", "full_signature": "@Test public void testMissingTemplateOnInstallService()", "class_method_signature": "ValidateTemplateTest.testMissingTemplateOnInstallService()", "testcase": true, "constructor": false, "invocations": ["readService", "setCloud", "setService", "validate"]}, "focal_class": {"identifier": "ValidateTemplate", "superclass": "", "interfaces": "implements InstallServiceValidator", "fields": [{"original_string": "private static final Logger logger = Logger.getLogger(ValidateTemplateOperation.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(ValidateTemplateOperation.class.getName())", "var_name": "logger"}], "methods": [{"identifier": "validate", "parameters": "(final InstallServiceValidationContext validationContext)", "modifiers": "@Override public", "return": "void", "signature": "void validate(final InstallServiceValidationContext validationContext)", "full_signature": "@Override public void validate(final InstallServiceValidationContext validationContext)", "class_method_signature": "ValidateTemplate.validate(final InstallServiceValidationContext validationContext)", "testcase": false, "constructor": false}, {"identifier": "validateTemplate", "parameters": "(final String templateName, final Cloud cloud)", "modifiers": "private", "return": "void", "signature": "void validateTemplate(final String templateName, final Cloud cloud)", "full_signature": "private void validateTemplate(final String templateName, final Cloud cloud)", "class_method_signature": "ValidateTemplate.validateTemplate(final String templateName, final Cloud cloud)", "testcase": false, "constructor": false}], "file": "restful/src/main/java/org/cloudifysource/rest/validators/ValidateTemplate.java"}, "focal_method": {"identifier": "validate", "parameters": "(final InstallServiceValidationContext validationContext)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validate(final InstallServiceValidationContext validationContext) throws RestErrorException {\n    \tlogger.info(\"Validating tempalte\");\n        Cloud cloud = validationContext.getCloud();\n        Service service = validationContext.getService();\n        String templateName = null;\n        if (service != null) {\n        \tComputeDetails compute = service.getCompute();\n        \tif (compute != null) {\n        \t\ttemplateName = compute.getTemplate();\n        \t}\n        }\n        validateTemplate(templateName, cloud);\n    }", "signature": "void validate(final InstallServiceValidationContext validationContext)", "full_signature": "@Override public void validate(final InstallServiceValidationContext validationContext)", "class_method_signature": "ValidateTemplate.validate(final InstallServiceValidationContext validationContext)", "testcase": false, "constructor": false, "invocations": ["info", "getCloud", "getService", "getCompute", "getTemplate", "validateTemplate"]}, "repository": {"repo_id": 3273720, "url": "https://github.com/CloudifySource/cloudify", "language": "Java", "is_fork": false, "fork_count": 165, "stargazer_count": 341, "size": 141067, "license": "licensed"}}