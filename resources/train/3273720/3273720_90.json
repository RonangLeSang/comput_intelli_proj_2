{"test_class": {"identifier": "EventsCacheTest", "superclass": "", "interfaces": "", "fields": [], "file": "restful/src/test/java/org/cloudifysource/rest/events/cache/EventsCacheTest.java"}, "test_case": {"identifier": "testRefresh", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRefresh() throws Exception {\n\n    }", "signature": "void testRefresh()", "full_signature": "@Test public void testRefresh()", "class_method_signature": "EventsCacheTest.testRefresh()", "testcase": true, "constructor": false, "invocations": []}, "focal_class": {"identifier": "EventsCache", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = Logger.getLogger(EventsCache.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(EventsCache.class.getName())", "var_name": "logger"}, {"original_string": "private static final int CACHE_EXPIRATION_MINUTES = 5;", "modifier": "private static final", "type": "int", "declarator": "CACHE_EXPIRATION_MINUTES = 5", "var_name": "CACHE_EXPIRATION_MINUTES"}, {"original_string": "private final LoadingCache<EventsCacheKey, EventsCacheValue> eventsLoadingCache;", "modifier": "private final", "type": "LoadingCache<EventsCacheKey, EventsCacheValue>", "declarator": "eventsLoadingCache", "var_name": "eventsLoadingCache"}, {"original_string": "private final LogEntryMatcherProvider matcherProvider;", "modifier": "private final", "type": "LogEntryMatcherProvider", "declarator": "matcherProvider", "var_name": "matcherProvider"}, {"original_string": "private int cacheExpirationPeriod = CACHE_EXPIRATION_MINUTES;", "modifier": "private", "type": "int", "declarator": "cacheExpirationPeriod = CACHE_EXPIRATION_MINUTES", "var_name": "cacheExpirationPeriod"}, {"original_string": "private TimeUnit cacheExpirationTimeunit = TimeUnit.MINUTES;", "modifier": "private", "type": "TimeUnit", "declarator": "cacheExpirationTimeunit = TimeUnit.MINUTES", "var_name": "cacheExpirationTimeunit"}], "methods": [{"identifier": "setCacheExpirationPeriod", "parameters": "(int cacheExpirationPeriod)", "modifiers": "public", "return": "void", "signature": "void setCacheExpirationPeriod(int cacheExpirationPeriod)", "full_signature": "public void setCacheExpirationPeriod(int cacheExpirationPeriod)", "class_method_signature": "EventsCache.setCacheExpirationPeriod(int cacheExpirationPeriod)", "testcase": false, "constructor": false}, {"identifier": "setCacheExpirationTimeunit", "parameters": "(TimeUnit cacheExpirationTimeunit)", "modifiers": "public", "return": "void", "signature": "void setCacheExpirationTimeunit(TimeUnit cacheExpirationTimeunit)", "full_signature": "public void setCacheExpirationTimeunit(TimeUnit cacheExpirationTimeunit)", "class_method_signature": "EventsCache.setCacheExpirationTimeunit(TimeUnit cacheExpirationTimeunit)", "testcase": false, "constructor": false}, {"identifier": "EventsCache", "parameters": "(final Admin admin)", "modifiers": "public", "return": "", "signature": " EventsCache(final Admin admin)", "full_signature": "public  EventsCache(final Admin admin)", "class_method_signature": "EventsCache.EventsCache(final Admin admin)", "testcase": false, "constructor": true}, {"identifier": "refresh", "parameters": "(final EventsCacheKey key)", "modifiers": "public", "return": "void", "signature": "void refresh(final EventsCacheKey key)", "full_signature": "public void refresh(final EventsCacheKey key)", "class_method_signature": "EventsCache.refresh(final EventsCacheKey key)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final EventsCacheKey key)", "modifiers": "public", "return": "EventsCacheValue", "signature": "EventsCacheValue get(final EventsCacheKey key)", "full_signature": "public EventsCacheValue get(final EventsCacheKey key)", "class_method_signature": "EventsCache.get(final EventsCacheKey key)", "testcase": false, "constructor": false}, {"identifier": "getIfExists", "parameters": "(final EventsCacheKey key)", "modifiers": "public", "return": "EventsCacheValue", "signature": "EventsCacheValue getIfExists(final EventsCacheKey key)", "full_signature": "public EventsCacheValue getIfExists(final EventsCacheKey key)", "class_method_signature": "EventsCache.getIfExists(final EventsCacheKey key)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(final EventsCacheKey key, final EventsCacheValue value)", "modifiers": "public", "return": "void", "signature": "void put(final EventsCacheKey key, final EventsCacheValue value)", "full_signature": "public void put(final EventsCacheKey key, final EventsCacheValue value)", "class_method_signature": "EventsCache.put(final EventsCacheKey key, final EventsCacheValue value)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final EventsCacheKey key, final DeploymentEvent event)", "modifiers": "public", "return": "void", "signature": "void add(final EventsCacheKey key, final DeploymentEvent event)", "full_signature": "public void add(final EventsCacheKey key, final DeploymentEvent event)", "class_method_signature": "EventsCache.add(final EventsCacheKey key, final DeploymentEvent event)", "testcase": false, "constructor": false}], "file": "restful/src/main/java/org/cloudifysource/rest/events/cache/EventsCache.java"}, "focal_method": {"identifier": "refresh", "parameters": "(final EventsCacheKey key)", "modifiers": "public", "return": "void", "body": "public void refresh(final EventsCacheKey key) {\n        logger.finest(\"Refreshing events cache for entry \" + key);\n        eventsLoadingCache.refresh(key);\n    }", "signature": "void refresh(final EventsCacheKey key)", "full_signature": "public void refresh(final EventsCacheKey key)", "class_method_signature": "EventsCache.refresh(final EventsCacheKey key)", "testcase": false, "constructor": false, "invocations": ["finest", "refresh"]}, "repository": {"repo_id": 3273720, "url": "https://github.com/CloudifySource/cloudify", "language": "Java", "is_fork": false, "fork_count": 165, "stargazer_count": 341, "size": 141067, "license": "licensed"}}