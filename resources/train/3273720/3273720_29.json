{"test_class": {"identifier": "OpenStackNetworkConfigurationHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Object MNG_COMPUTE_TEMPLATE = \"MANAGER\";", "modifier": "private static final", "type": "Object", "declarator": "MNG_COMPUTE_TEMPLATE = \"MANAGER\"", "var_name": "MNG_COMPUTE_TEMPLATE"}, {"original_string": "private static final String APPLI_COMPUTE_TEMPLATE = \"APPLI\";", "modifier": "private static final", "type": "String", "declarator": "APPLI_COMPUTE_TEMPLATE = \"APPLI\"", "var_name": "APPLI_COMPUTE_TEMPLATE"}, {"original_string": "private static final String TEMPLATE_MNG_NAME = \"Cloudify-Management-Network\";", "modifier": "private static final", "type": "String", "declarator": "TEMPLATE_MNG_NAME = \"Cloudify-Management-Network\"", "var_name": "TEMPLATE_MNG_NAME"}, {"original_string": "private static final String TEMPLATE_APPLI_NAME = \"Cloudify-Application-Network\";", "modifier": "private static final", "type": "String", "declarator": "TEMPLATE_APPLI_NAME = \"Cloudify-Application-Network\"", "var_name": "TEMPLATE_APPLI_NAME"}, {"original_string": "private static final String COMPUTE_NET1 = \"SOME_INTERNAL_NETWORK_1\";", "modifier": "private static final", "type": "String", "declarator": "COMPUTE_NET1 = \"SOME_INTERNAL_NETWORK_1\"", "var_name": "COMPUTE_NET1"}, {"original_string": "private static final String COMPUTE_NET2 = \"SOME_INTERNAL_NETWORK_2\";", "modifier": "private static final", "type": "String", "declarator": "COMPUTE_NET2 = \"SOME_INTERNAL_NETWORK_2\"", "var_name": "COMPUTE_NET2"}, {"original_string": "private static final String APPLICATION_NET = \"APPLICATION_NET\";", "modifier": "private static final", "type": "String", "declarator": "APPLICATION_NET = \"APPLICATION_NET\"", "var_name": "APPLICATION_NET"}, {"original_string": "private static final String APPLI_NAME = \"APPLICATION_NAME\";", "modifier": "private static final", "type": "String", "declarator": "APPLI_NAME = \"APPLICATION_NAME\"", "var_name": "APPLI_NAME"}, {"original_string": "private static final String SERVICE_NAME = \"SERVICE_NAME\";", "modifier": "private static final", "type": "String", "declarator": "SERVICE_NAME = \"SERVICE_NAME\"", "var_name": "SERVICE_NAME"}, {"original_string": "private Cloud cloud;", "modifier": "private", "type": "Cloud", "declarator": "cloud", "var_name": "cloud"}, {"original_string": "private CloudNetwork cloudNetwork;", "modifier": "private", "type": "CloudNetwork", "declarator": "cloudNetwork", "var_name": "cloudNetwork"}, {"original_string": "private List<String> mngComputeNetwork;", "modifier": "private", "type": "List<String>", "declarator": "mngComputeNetwork", "var_name": "mngComputeNetwork"}, {"original_string": "private List<String> appliComputeNetwork;", "modifier": "private", "type": "List<String>", "declarator": "appliComputeNetwork", "var_name": "appliComputeNetwork"}, {"original_string": "private NetworkConfiguration mngNetConfig;", "modifier": "private", "type": "NetworkConfiguration", "declarator": "mngNetConfig", "var_name": "mngNetConfig"}, {"original_string": "private NetworkConfiguration appliNetConfig;", "modifier": "private", "type": "NetworkConfiguration", "declarator": "appliNetConfig", "var_name": "appliNetConfig"}, {"original_string": "private String prefixedMngNetTemplateName;", "modifier": "private", "type": "String", "declarator": "prefixedMngNetTemplateName", "var_name": "prefixedMngNetTemplateName"}, {"original_string": "private String prefixedAppliNetTemplateName;", "modifier": "private", "type": "String", "declarator": "prefixedAppliNetTemplateName", "var_name": "prefixedAppliNetTemplateName"}], "file": "esc/src/test/java/org/cloudifysource/esc/driver/provisioning/openstack/OpenStackNetworkConfigurationHelperTest.java"}, "test_case": {"identifier": "missingManagementSubnetNameTest", "parameters": "()", "modifiers": "@Test(expected = CloudProvisioningException.class) public", "return": "void", "body": "@Test(expected = CloudProvisioningException.class)\n\tpublic void missingManagementSubnetNameTest() throws CloudProvisioningException {\n\t\tcloudNetwork.getManagement().getNetworkConfiguration().getSubnets().get(0).setName(null);\n\t\tnew OpenStackNetworkConfigurationHelper().validateNetworkNames(cloudNetwork);\n\t}", "signature": "void missingManagementSubnetNameTest()", "full_signature": "@Test(expected = CloudProvisioningException.class) public void missingManagementSubnetNameTest()", "class_method_signature": "OpenStackNetworkConfigurationHelperTest.missingManagementSubnetNameTest()", "testcase": true, "constructor": false, "invocations": ["setName", "get", "getSubnets", "getNetworkConfiguration", "getManagement", "validateNetworkNames"]}, "focal_class": {"identifier": "OpenStackNetworkConfigurationHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Logger logger = Logger.getLogger(BaseProvisioningDriver.class.getName());", "modifier": "private final", "type": "Logger", "declarator": "logger = Logger.getLogger(BaseProvisioningDriver.class.getName())", "var_name": "logger"}, {"original_string": "private static final String ASSOCIATE_FLOATING_IP_ON_BOOTSTRAP = \"associateFloatingIpOnBootstrap\";", "modifier": "private static final", "type": "String", "declarator": "ASSOCIATE_FLOATING_IP_ON_BOOTSTRAP = \"associateFloatingIpOnBootstrap\"", "var_name": "ASSOCIATE_FLOATING_IP_ON_BOOTSTRAP"}, {"original_string": "private boolean management;", "modifier": "private", "type": "boolean", "declarator": "management", "var_name": "management"}, {"original_string": "private NetworkConfiguration managementNetworkConfiguration;", "modifier": "private", "type": "NetworkConfiguration", "declarator": "managementNetworkConfiguration", "var_name": "managementNetworkConfiguration"}, {"original_string": "private NetworkConfiguration applicationNetworkConfiguration;", "modifier": "private", "type": "NetworkConfiguration", "declarator": "applicationNetworkConfiguration", "var_name": "applicationNetworkConfiguration"}, {"original_string": "private List<String> computeNetworks;", "modifier": "private", "type": "List<String>", "declarator": "computeNetworks", "var_name": "computeNetworks"}, {"original_string": "private AccessRules serviceAccessRules;", "modifier": "private", "type": "AccessRules", "declarator": "serviceAccessRules", "var_name": "serviceAccessRules"}, {"original_string": "private Map<String, Object> managementNetworkOptions;", "modifier": "private", "type": "Map<String, Object>", "declarator": "managementNetworkOptions", "var_name": "managementNetworkOptions"}, {"original_string": "private String managementNetworkPrefixName;", "modifier": "private", "type": "String", "declarator": "managementNetworkPrefixName", "var_name": "managementNetworkPrefixName"}, {"original_string": "private String applicationNetworkPrefixName;", "modifier": "private", "type": "String", "declarator": "applicationNetworkPrefixName", "var_name": "applicationNetworkPrefixName"}], "methods": [{"identifier": "OpenStackNetworkConfigurationHelper", "parameters": "()", "modifiers": "", "return": "", "signature": " OpenStackNetworkConfigurationHelper()", "full_signature": "  OpenStackNetworkConfigurationHelper()", "class_method_signature": "OpenStackNetworkConfigurationHelper.OpenStackNetworkConfigurationHelper()", "testcase": false, "constructor": true}, {"identifier": "OpenStackNetworkConfigurationHelper", "parameters": "(final ComputeDriverConfiguration configuration)", "modifiers": "", "return": "", "signature": " OpenStackNetworkConfigurationHelper(final ComputeDriverConfiguration configuration)", "full_signature": "  OpenStackNetworkConfigurationHelper(final ComputeDriverConfiguration configuration)", "class_method_signature": "OpenStackNetworkConfigurationHelper.OpenStackNetworkConfigurationHelper(final ComputeDriverConfiguration configuration)", "testcase": false, "constructor": true}, {"identifier": "initManagementNetworkConfig", "parameters": "(final ComputeDriverConfiguration configuration)", "modifiers": "private", "return": "void", "signature": "void initManagementNetworkConfig(final ComputeDriverConfiguration configuration)", "full_signature": "private void initManagementNetworkConfig(final ComputeDriverConfiguration configuration)", "class_method_signature": "OpenStackNetworkConfigurationHelper.initManagementNetworkConfig(final ComputeDriverConfiguration configuration)", "testcase": false, "constructor": false}, {"identifier": "initServiceNetworkConfig", "parameters": "(final ComputeDriverConfiguration configuration)", "modifiers": "private", "return": "void", "signature": "void initServiceNetworkConfig(final ComputeDriverConfiguration configuration)", "full_signature": "private void initServiceNetworkConfig(final ComputeDriverConfiguration configuration)", "class_method_signature": "OpenStackNetworkConfigurationHelper.initServiceNetworkConfig(final ComputeDriverConfiguration configuration)", "testcase": false, "constructor": false}, {"identifier": "getManagementNetworkTemplate", "parameters": "()", "modifiers": "public", "return": "NetworkConfiguration", "signature": "NetworkConfiguration getManagementNetworkTemplate()", "full_signature": "public NetworkConfiguration getManagementNetworkTemplate()", "class_method_signature": "OpenStackNetworkConfigurationHelper.getManagementNetworkTemplate()", "testcase": false, "constructor": false}, {"identifier": "getApplicationNetworkTemplate", "parameters": "()", "modifiers": "public", "return": "NetworkConfiguration", "signature": "NetworkConfiguration getApplicationNetworkTemplate()", "full_signature": "public NetworkConfiguration getApplicationNetworkTemplate()", "class_method_signature": "OpenStackNetworkConfigurationHelper.getApplicationNetworkTemplate()", "testcase": false, "constructor": false}, {"identifier": "useManagementNetwork", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean useManagementNetwork()", "full_signature": "public boolean useManagementNetwork()", "class_method_signature": "OpenStackNetworkConfigurationHelper.useManagementNetwork()", "testcase": false, "constructor": false}, {"identifier": "useApplicationNetworkTemplate", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean useApplicationNetworkTemplate()", "full_signature": "public boolean useApplicationNetworkTemplate()", "class_method_signature": "OpenStackNetworkConfigurationHelper.useApplicationNetworkTemplate()", "testcase": false, "constructor": false}, {"identifier": "getManagementNetworkPrefixedName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getManagementNetworkPrefixedName()", "full_signature": "public String getManagementNetworkPrefixedName()", "class_method_signature": "OpenStackNetworkConfigurationHelper.getManagementNetworkPrefixedName()", "testcase": false, "constructor": false}, {"identifier": "getApplicationNetworkPrefixedName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getApplicationNetworkPrefixedName()", "full_signature": "public String getApplicationNetworkPrefixedName()", "class_method_signature": "OpenStackNetworkConfigurationHelper.getApplicationNetworkPrefixedName()", "testcase": false, "constructor": false}, {"identifier": "getPrivateIpNetworkName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPrivateIpNetworkName()", "full_signature": "public String getPrivateIpNetworkName()", "class_method_signature": "OpenStackNetworkConfigurationHelper.getPrivateIpNetworkName()", "testcase": false, "constructor": false}, {"identifier": "getComputeNetworks", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getComputeNetworks()", "full_signature": "public List<String> getComputeNetworks()", "class_method_signature": "OpenStackNetworkConfigurationHelper.getComputeNetworks()", "testcase": false, "constructor": false}, {"identifier": "getServiceAccessRules", "parameters": "()", "modifiers": "public", "return": "AccessRules", "signature": "AccessRules getServiceAccessRules()", "full_signature": "public AccessRules getServiceAccessRules()", "class_method_signature": "OpenStackNetworkConfigurationHelper.getServiceAccessRules()", "testcase": false, "constructor": false}, {"identifier": "isValidDefiniton", "parameters": "(final String definition)", "modifiers": "private", "return": "boolean", "signature": "boolean isValidDefiniton(final String definition)", "full_signature": "private boolean isValidDefiniton(final String definition)", "class_method_signature": "OpenStackNetworkConfigurationHelper.isValidDefiniton(final String definition)", "testcase": false, "constructor": false}, {"identifier": "isValidSubnetName", "parameters": "(final org.cloudifysource.domain.cloud.network.Subnet subnet)", "modifiers": "public", "return": "boolean", "signature": "boolean isValidSubnetName(final org.cloudifysource.domain.cloud.network.Subnet subnet)", "full_signature": "public boolean isValidSubnetName(final org.cloudifysource.domain.cloud.network.Subnet subnet)", "class_method_signature": "OpenStackNetworkConfigurationHelper.isValidSubnetName(final org.cloudifysource.domain.cloud.network.Subnet subnet)", "testcase": false, "constructor": false}, {"identifier": "isValidSubnetRange", "parameters": "(final org.cloudifysource.domain.cloud.network.Subnet subnet)", "modifiers": "public", "return": "boolean", "signature": "boolean isValidSubnetRange(final org.cloudifysource.domain.cloud.network.Subnet subnet)", "full_signature": "public boolean isValidSubnetRange(final org.cloudifysource.domain.cloud.network.Subnet subnet)", "class_method_signature": "OpenStackNetworkConfigurationHelper.isValidSubnetRange(final org.cloudifysource.domain.cloud.network.Subnet subnet)", "testcase": false, "constructor": false}, {"identifier": "isValidNetworkName", "parameters": "(final NetworkConfiguration networkConfiguration)", "modifiers": "public", "return": "boolean", "signature": "boolean isValidNetworkName(final NetworkConfiguration networkConfiguration)", "full_signature": "public boolean isValidNetworkName(final NetworkConfiguration networkConfiguration)", "class_method_signature": "OpenStackNetworkConfigurationHelper.isValidNetworkName(final NetworkConfiguration networkConfiguration)", "testcase": false, "constructor": false}, {"identifier": "validateNetworkNames", "parameters": "(final CloudNetwork cloudNetwork)", "modifiers": "protected", "return": "void", "signature": "void validateNetworkNames(final CloudNetwork cloudNetwork)", "full_signature": "protected void validateNetworkNames(final CloudNetwork cloudNetwork)", "class_method_signature": "OpenStackNetworkConfigurationHelper.validateNetworkNames(final CloudNetwork cloudNetwork)", "testcase": false, "constructor": false}, {"identifier": "validateNetworkName", "parameters": "(final NetworkConfiguration networkConfiguration)", "modifiers": "public", "return": "void", "signature": "void validateNetworkName(final NetworkConfiguration networkConfiguration)", "full_signature": "public void validateNetworkName(final NetworkConfiguration networkConfiguration)", "class_method_signature": "OpenStackNetworkConfigurationHelper.validateNetworkName(final NetworkConfiguration networkConfiguration)", "testcase": false, "constructor": false}, {"identifier": "isCreateExternalRouter", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCreateExternalRouter()", "full_signature": "public boolean isCreateExternalRouter()", "class_method_signature": "OpenStackNetworkConfigurationHelper.isCreateExternalRouter()", "testcase": false, "constructor": false}, {"identifier": "getExternalRouterName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getExternalRouterName()", "full_signature": "public String getExternalRouterName()", "class_method_signature": "OpenStackNetworkConfigurationHelper.getExternalRouterName()", "testcase": false, "constructor": false}, {"identifier": "isCreateExternalNetwork", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCreateExternalNetwork()", "full_signature": "public boolean isCreateExternalNetwork()", "class_method_signature": "OpenStackNetworkConfigurationHelper.isCreateExternalNetwork()", "testcase": false, "constructor": false}, {"identifier": "getExternalNetworkName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getExternalNetworkName()", "full_signature": "public String getExternalNetworkName()", "class_method_signature": "OpenStackNetworkConfigurationHelper.getExternalNetworkName()", "testcase": false, "constructor": false}, {"identifier": "skipExternalNetworking", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean skipExternalNetworking()", "full_signature": "public boolean skipExternalNetworking()", "class_method_signature": "OpenStackNetworkConfigurationHelper.skipExternalNetworking()", "testcase": false, "constructor": false}, {"identifier": "associateFloatingIp", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean associateFloatingIp()", "full_signature": "public boolean associateFloatingIp()", "class_method_signature": "OpenStackNetworkConfigurationHelper.associateFloatingIp()", "testcase": false, "constructor": false}], "file": "esc/src/main/java/org/cloudifysource/esc/driver/provisioning/openstack/OpenStackNetworkConfigurationHelper.java"}, "focal_method": {"identifier": "validateNetworkNames", "parameters": "(final CloudNetwork cloudNetwork)", "modifiers": "protected", "return": "void", "body": "protected void validateNetworkNames(final CloudNetwork cloudNetwork)\n\t\t\tthrows CloudProvisioningException {\n\t\tfinal ManagementNetwork mn = cloudNetwork.getManagement();\n\t\tif (mn != null) {\n\t\t\tthis.validateNetworkName(mn.getNetworkConfiguration());\n\t\t}\n\t\tfinal Collection<NetworkConfiguration> templates =\n\t\t\t\tcloudNetwork.getTemplates().values();\n\t\tif (templates != null && !templates.isEmpty()) {\n\t\t\tfor (NetworkConfiguration nc : templates) {\n\t\t\t\tthis.validateNetworkName(nc);\n\t\t\t}\n\t\t}\n\t}", "signature": "void validateNetworkNames(final CloudNetwork cloudNetwork)", "full_signature": "protected void validateNetworkNames(final CloudNetwork cloudNetwork)", "class_method_signature": "OpenStackNetworkConfigurationHelper.validateNetworkNames(final CloudNetwork cloudNetwork)", "testcase": false, "constructor": false, "invocations": ["getManagement", "validateNetworkName", "getNetworkConfiguration", "values", "getTemplates", "isEmpty", "validateNetworkName"]}, "repository": {"repo_id": 3273720, "url": "https://github.com/CloudifySource/cloudify", "language": "Java", "is_fork": false, "fork_count": 165, "stargazer_count": 341, "size": 141067, "license": "licensed"}}