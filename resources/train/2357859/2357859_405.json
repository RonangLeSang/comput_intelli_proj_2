{"test_class": {"identifier": "IndexingServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String USERNAME = \"username\";", "modifier": "private static final", "type": "String", "declarator": "USERNAME = \"username\"", "var_name": "USERNAME"}, {"original_string": "@Mock\n    private AccessControlService aclService;", "modifier": "@Mock\n    private", "type": "AccessControlService", "declarator": "aclService", "var_name": "aclService"}, {"original_string": "@Mock\n    private IndexingMessageSender messageSender;", "modifier": "@Mock\n    private", "type": "IndexingMessageSender", "declarator": "messageSender", "var_name": "messageSender"}, {"original_string": "@Mock\n    private AgentPrincipals agent;", "modifier": "@Mock\n    private", "type": "AgentPrincipals", "declarator": "agent", "var_name": "agent"}, {"original_string": "@Mock\n    private AccessGroupSet groups;", "modifier": "@Mock\n    private", "type": "AccessGroupSet", "declarator": "groups", "var_name": "groups"}, {"original_string": "@Mock\n    private ContentObject obj;", "modifier": "@Mock\n    private", "type": "ContentObject", "declarator": "obj", "var_name": "obj"}, {"original_string": "@Captor\n    private ArgumentCaptor<PID> pidCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<PID>", "declarator": "pidCaptor", "var_name": "pidCaptor"}, {"original_string": "@Captor\n    private ArgumentCaptor<String> stringCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<String>", "declarator": "stringCaptor", "var_name": "stringCaptor"}, {"original_string": "@Captor\n    private ArgumentCaptor<IndexingActionType> actionCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<IndexingActionType>", "declarator": "actionCaptor", "var_name": "actionCaptor"}, {"original_string": "private IndexingService service;", "modifier": "private", "type": "IndexingService", "declarator": "service", "var_name": "service"}, {"original_string": "private PID objPid;", "modifier": "private", "type": "PID", "declarator": "objPid", "var_name": "objPid"}], "file": "persistence/src/test/java/edu/unc/lib/dl/persist/services/indexing/IndexingServiceTest.java"}, "test_case": {"identifier": "reindexObjectTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void reindexObjectTest() {\n        service.reindexObject(agent, objPid);\n\n        verify(messageSender).sendIndexingOperation(stringCaptor.capture(), pidCaptor.capture(),\n                actionCaptor.capture());\n\n        verifyParameters(IndexingActionType.ADD);\n    }", "signature": "void reindexObjectTest()", "full_signature": "@Test public void reindexObjectTest()", "class_method_signature": "IndexingServiceTest.reindexObjectTest()", "testcase": true, "constructor": false, "invocations": ["reindexObject", "sendIndexingOperation", "verify", "capture", "capture", "capture", "verifyParameters"]}, "focal_class": {"identifier": "IndexingService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AccessControlService aclService;", "modifier": "private", "type": "AccessControlService", "declarator": "aclService", "var_name": "aclService"}, {"original_string": "private IndexingMessageSender indexingMessageSender;", "modifier": "private", "type": "IndexingMessageSender", "declarator": "indexingMessageSender", "var_name": "indexingMessageSender"}, {"original_string": "private static final Timer timer = TimerFactory.createTimerForClass(IndexingService.class);", "modifier": "private static final", "type": "Timer", "declarator": "timer = TimerFactory.createTimerForClass(IndexingService.class)", "var_name": "timer"}], "methods": [{"identifier": "reindexObjectAndChildren", "parameters": "(AgentPrincipals agent, PID objectPid, Boolean inplace)", "modifiers": "public", "return": "void", "signature": "void reindexObjectAndChildren(AgentPrincipals agent, PID objectPid, Boolean inplace)", "full_signature": "public void reindexObjectAndChildren(AgentPrincipals agent, PID objectPid, Boolean inplace)", "class_method_signature": "IndexingService.reindexObjectAndChildren(AgentPrincipals agent, PID objectPid, Boolean inplace)", "testcase": false, "constructor": false}, {"identifier": "reindexObject", "parameters": "(AgentPrincipals agent, PID objectPid)", "modifiers": "public", "return": "void", "signature": "void reindexObject(AgentPrincipals agent, PID objectPid)", "full_signature": "public void reindexObject(AgentPrincipals agent, PID objectPid)", "class_method_signature": "IndexingService.reindexObject(AgentPrincipals agent, PID objectPid)", "testcase": false, "constructor": false}, {"identifier": "setAclService", "parameters": "(AccessControlService aclService)", "modifiers": "public", "return": "void", "signature": "void setAclService(AccessControlService aclService)", "full_signature": "public void setAclService(AccessControlService aclService)", "class_method_signature": "IndexingService.setAclService(AccessControlService aclService)", "testcase": false, "constructor": false}, {"identifier": "setIndexingMessageSender", "parameters": "(IndexingMessageSender indexingMessageSender)", "modifiers": "public", "return": "void", "signature": "void setIndexingMessageSender(IndexingMessageSender indexingMessageSender)", "full_signature": "public void setIndexingMessageSender(IndexingMessageSender indexingMessageSender)", "class_method_signature": "IndexingService.setIndexingMessageSender(IndexingMessageSender indexingMessageSender)", "testcase": false, "constructor": false}], "file": "persistence/src/main/java/edu/unc/lib/dl/persist/services/indexing/IndexingService.java"}, "focal_method": {"identifier": "reindexObject", "parameters": "(AgentPrincipals agent, PID objectPid)", "modifiers": "public", "return": "void", "body": "public void reindexObject(AgentPrincipals agent, PID objectPid) {\n        try (Timer.Context context = timer.time()) {\n            aclService.assertHasAccess(\"User does not have permission to reindex\", objectPid, agent.getPrincipals(),\n                    Permission.reindex);\n            // Add message to indexing queue\n            indexingMessageSender.sendIndexingOperation(agent.getUsername(), objectPid,\n                    IndexingActionType.ADD);\n        }\n    }", "signature": "void reindexObject(AgentPrincipals agent, PID objectPid)", "full_signature": "public void reindexObject(AgentPrincipals agent, PID objectPid)", "class_method_signature": "IndexingService.reindexObject(AgentPrincipals agent, PID objectPid)", "testcase": false, "constructor": false, "invocations": ["time", "assertHasAccess", "getPrincipals", "sendIndexingOperation", "getUsername"]}, "repository": {"repo_id": 2357859, "url": "https://github.com/UNC-Libraries/Carolina-Digital-Repository", "stars": 10, "created": "9/9/2011 8:22:21 PM +00:00", "updates": "2020-01-24T19:34:45+00:00", "fork": "False", "license": "licensed"}}