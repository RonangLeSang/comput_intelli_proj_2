{"test_class": {"identifier": "ACLTransformationHelpersTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static String EMBARGO_END_DATE = \"2040-01-01T00:00:00.000Z\";", "modifier": "private final static", "type": "String", "declarator": "EMBARGO_END_DATE = \"2040-01-01T00:00:00.000Z\"", "var_name": "EMBARGO_END_DATE"}, {"original_string": "private final static String BAD_EMBARGO_END_DATE = \"2040-01-01T00:00:00\";", "modifier": "private final static", "type": "String", "declarator": "BAD_EMBARGO_END_DATE = \"2040-01-01T00:00:00\"", "var_name": "BAD_EMBARGO_END_DATE"}, {"original_string": "private PID pid;", "modifier": "private", "type": "PID", "declarator": "pid", "var_name": "pid"}, {"original_string": "private PID parentPid;", "modifier": "private", "type": "PID", "declarator": "parentPid", "var_name": "parentPid"}], "file": "migration-util/src/test/java/edu/unc/lib/dcr/migration/content/ACLTransformationHelpersTest.java"}, "test_case": {"identifier": "transformStaffRoles_EmptyPrincipal_Ignore", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void transformStaffRoles_EmptyPrincipal_Ignore() throws Exception {\n        Resource bxc3Resc = buildBoxc3Resource(pid, ContentModel.CONTAINER);\n        addStaffRole(bxc3Resc, Bxc3UserRole.processor, \"\");\n        addStaffRole(bxc3Resc, Bxc3UserRole.processor, \"curator_grp\");\n\n        Resource bxc5Resc = buildBoxc5Resource(pid, Cdr.Folder);\n\n        ACLTransformationHelpers.transformStaffRoles(bxc3Resc, bxc5Resc);\n\n        assertDoesNotHaveStaffAssignment(CdrAcl.canProcess, \"\", bxc5Resc);\n        assertHasStaffRole(CdrAcl.canProcess, \"curator_grp\", bxc5Resc);\n    }", "signature": "void transformStaffRoles_EmptyPrincipal_Ignore()", "full_signature": "@Test public void transformStaffRoles_EmptyPrincipal_Ignore()", "class_method_signature": "ACLTransformationHelpersTest.transformStaffRoles_EmptyPrincipal_Ignore()", "testcase": true, "constructor": false, "invocations": ["buildBoxc3Resource", "addStaffRole", "addStaffRole", "buildBoxc5Resource", "transformStaffRoles", "assertDoesNotHaveStaffAssignment", "assertHasStaffRole"]}, "focal_class": {"identifier": "ACLTransformationHelpers", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = getLogger(ACLTransformationHelpers.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = getLogger(ACLTransformationHelpers.class)", "var_name": "log"}, {"original_string": "public final static String BXC3_PUBLIC_GROUP = \"public\";", "modifier": "public final static", "type": "String", "declarator": "BXC3_PUBLIC_GROUP = \"public\"", "var_name": "BXC3_PUBLIC_GROUP"}, {"original_string": "public final static String BXC3_AUTHENTICATED_GROUP = \"authenticated\";", "modifier": "public final static", "type": "String", "declarator": "BXC3_AUTHENTICATED_GROUP = \"authenticated\"", "var_name": "BXC3_AUTHENTICATED_GROUP"}, {"original_string": "private static final Map<PID, Model> unitPatronAccessCache = new HashMap<>();", "modifier": "private static final", "type": "Map<PID, Model>", "declarator": "unitPatronAccessCache = new HashMap<>()", "var_name": "unitPatronAccessCache"}], "methods": [{"identifier": "ACLTransformationHelpers", "parameters": "()", "modifiers": "private", "return": "", "signature": " ACLTransformationHelpers()", "full_signature": "private  ACLTransformationHelpers()", "class_method_signature": "ACLTransformationHelpers.ACLTransformationHelpers()", "testcase": false, "constructor": true}, {"identifier": "transformPatronAccess", "parameters": "(Resource bxc3Resc, Resource bxc5Resc, PID parentPid)", "modifiers": "public static", "return": "void", "signature": "void transformPatronAccess(Resource bxc3Resc, Resource bxc5Resc, PID parentPid)", "full_signature": "public static void transformPatronAccess(Resource bxc3Resc, Resource bxc5Resc, PID parentPid)", "class_method_signature": "ACLTransformationHelpers.transformPatronAccess(Resource bxc3Resc, Resource bxc5Resc, PID parentPid)", "testcase": false, "constructor": false}, {"identifier": "calculatePatronRoles", "parameters": "(Resource bxc3Resc)", "modifiers": "private static", "return": "Property[]", "signature": "Property[] calculatePatronRoles(Resource bxc3Resc)", "full_signature": "private static Property[] calculatePatronRoles(Resource bxc3Resc)", "class_method_signature": "ACLTransformationHelpers.calculatePatronRoles(Resource bxc3Resc)", "testcase": false, "constructor": false}, {"identifier": "mostRestrictiveRole", "parameters": "(Property existingRole, Property bxc3Role)", "modifiers": "private static", "return": "Property", "signature": "Property mostRestrictiveRole(Property existingRole, Property bxc3Role)", "full_signature": "private static Property mostRestrictiveRole(Property existingRole, Property bxc3Role)", "class_method_signature": "ACLTransformationHelpers.mostRestrictiveRole(Property existingRole, Property bxc3Role)", "testcase": false, "constructor": false}, {"identifier": "mergeParentPatronAcls", "parameters": "(PID parentPid, Resource destResc, Property everyoneRole,\n            Property authRole)", "modifiers": "private static", "return": "void", "signature": "void mergeParentPatronAcls(PID parentPid, Resource destResc, Property everyoneRole,\n            Property authRole)", "full_signature": "private static void mergeParentPatronAcls(PID parentPid, Resource destResc, Property everyoneRole,\n            Property authRole)", "class_method_signature": "ACLTransformationHelpers.mergeParentPatronAcls(PID parentPid, Resource destResc, Property everyoneRole,\n            Property authRole)", "testcase": false, "constructor": false}, {"identifier": "transformStaffRoles", "parameters": "(Resource bxc3Resc, Resource bxc5Resc)", "modifiers": "public static", "return": "void", "signature": "void transformStaffRoles(Resource bxc3Resc, Resource bxc5Resc)", "full_signature": "public static void transformStaffRoles(Resource bxc3Resc, Resource bxc5Resc)", "class_method_signature": "ACLTransformationHelpers.transformStaffRoles(Resource bxc3Resc, Resource bxc5Resc)", "testcase": false, "constructor": false}, {"identifier": "mapStaffRole", "parameters": "(Bxc3UserRole bxc3Role, Property bxc5Role,\n            Resource bxc3Resc, Resource bxc5Resc, Set<String> principalsAssigned)", "modifiers": "private static", "return": "void", "signature": "void mapStaffRole(Bxc3UserRole bxc3Role, Property bxc5Role,\n            Resource bxc3Resc, Resource bxc5Resc, Set<String> principalsAssigned)", "full_signature": "private static void mapStaffRole(Bxc3UserRole bxc3Role, Property bxc5Role,\n            Resource bxc3Resc, Resource bxc5Resc, Set<String> principalsAssigned)", "class_method_signature": "ACLTransformationHelpers.mapStaffRole(Bxc3UserRole bxc3Role, Property bxc5Role,\n            Resource bxc3Resc, Resource bxc5Resc, Set<String> principalsAssigned)", "testcase": false, "constructor": false}, {"identifier": "formatEmbargoDate", "parameters": "(String embargoDate)", "modifiers": "private static", "return": "String", "signature": "String formatEmbargoDate(String embargoDate)", "full_signature": "private static String formatEmbargoDate(String embargoDate)", "class_method_signature": "ACLTransformationHelpers.formatEmbargoDate(String embargoDate)", "testcase": false, "constructor": false}, {"identifier": "isPatronPrincipal", "parameters": "(String principal)", "modifiers": "private static", "return": "boolean", "signature": "boolean isPatronPrincipal(String principal)", "full_signature": "private static boolean isPatronPrincipal(String principal)", "class_method_signature": "ACLTransformationHelpers.isPatronPrincipal(String principal)", "testcase": false, "constructor": false}], "file": "migration-util/src/main/java/edu/unc/lib/dcr/migration/content/ACLTransformationHelpers.java"}, "focal_method": {"identifier": "transformStaffRoles", "parameters": "(Resource bxc3Resc, Resource bxc5Resc)", "modifiers": "public static", "return": "void", "body": "public static void transformStaffRoles(Resource bxc3Resc, Resource bxc5Resc) {\n        Set<String> principalsAssigned = new HashSet<>();\n        // Order matters here, as a principal can only be assigned a single role, so we\n        // prioritize the higher permission granting role first.\n        mapStaffRole(Bxc3UserRole.curator, CdrAcl.canManage, bxc3Resc, bxc5Resc, principalsAssigned);\n        mapStaffRole(Bxc3UserRole.processor, CdrAcl.canProcess, bxc3Resc, bxc5Resc, principalsAssigned);\n        mapStaffRole(Bxc3UserRole.metadataEditor, CdrAcl.canDescribe, bxc3Resc, bxc5Resc, principalsAssigned);\n        mapStaffRole(Bxc3UserRole.ingester, CdrAcl.canIngest, bxc3Resc, bxc5Resc, principalsAssigned);\n        mapStaffRole(Bxc3UserRole.observer, CdrAcl.canAccess, bxc3Resc, bxc5Resc, principalsAssigned);\n    }", "signature": "void transformStaffRoles(Resource bxc3Resc, Resource bxc5Resc)", "full_signature": "public static void transformStaffRoles(Resource bxc3Resc, Resource bxc5Resc)", "class_method_signature": "ACLTransformationHelpers.transformStaffRoles(Resource bxc3Resc, Resource bxc5Resc)", "testcase": false, "constructor": false, "invocations": ["mapStaffRole", "mapStaffRole", "mapStaffRole", "mapStaffRole", "mapStaffRole"]}, "repository": {"repo_id": 2357859, "url": "https://github.com/UNC-Libraries/Carolina-Digital-Repository", "stars": 10, "created": "9/9/2011 8:22:21 PM +00:00", "updates": "2020-01-24T19:34:45+00:00", "fork": "False", "license": "licensed"}}