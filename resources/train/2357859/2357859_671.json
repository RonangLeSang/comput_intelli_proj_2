{"test_class": {"identifier": "SetContentStatusFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private DocumentIndexingPackage dip;", "modifier": "@Mock\n    private", "type": "DocumentIndexingPackage", "declarator": "dip", "var_name": "dip"}, {"original_string": "@Mock\n    private PID pid;", "modifier": "@Mock\n    private", "type": "PID", "declarator": "pid", "var_name": "pid"}, {"original_string": "@Mock\n    private FileObject fileObj;", "modifier": "@Mock\n    private", "type": "FileObject", "declarator": "fileObj", "var_name": "fileObj"}, {"original_string": "@Mock\n    private WorkObject workObj;", "modifier": "@Mock\n    private", "type": "WorkObject", "declarator": "workObj", "var_name": "workObj"}, {"original_string": "@Mock\n    private FolderObject folderObj;", "modifier": "@Mock\n    private", "type": "FolderObject", "declarator": "folderObj", "var_name": "folderObj"}, {"original_string": "@Mock\n    private IndexDocumentBean idb;", "modifier": "@Mock\n    private", "type": "IndexDocumentBean", "declarator": "idb", "var_name": "idb"}, {"original_string": "@Mock\n    private Resource resc, fileResc;", "modifier": "@Mock\n    private", "type": "Resource", "declarator": "resc", "var_name": "resc"}, {"original_string": "@Captor\n    private ArgumentCaptor<List<String>> listCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<List<String>>", "declarator": "listCaptor", "var_name": "listCaptor"}, {"original_string": "private SetContentStatusFilter filter;", "modifier": "private", "type": "SetContentStatusFilter", "declarator": "filter", "var_name": "filter"}], "file": "solr-ingest/src/test/java/edu/unc/lib/dl/data/ingest/solr/filter/SetContentStatusFilterTest.java"}, "test_case": {"identifier": "testUnpublishedFileObject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUnpublishedFileObject() throws Exception {\n        when(workObj.getResource()).thenReturn(resc);\n\n        when(dip.getContentObject()).thenReturn(fileObj);\n        when(fileObj.getResource()).thenReturn(fileResc);\n        when(fileResc.hasProperty(Cdr.unpublished)).thenReturn(true);\n\n        filter.filter(dip);\n\n        verify(idb).setContentStatus(listCaptor.capture());\n    }", "signature": "void testUnpublishedFileObject()", "full_signature": "@Test public void testUnpublishedFileObject()", "class_method_signature": "SetContentStatusFilterTest.testUnpublishedFileObject()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getResource", "thenReturn", "when", "getContentObject", "thenReturn", "when", "getResource", "thenReturn", "when", "hasProperty", "filter", "setContentStatus", "verify", "capture"]}, "focal_class": {"identifier": "SetContentStatusFilter", "superclass": "", "interfaces": "implements IndexDocumentFilter", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(SetContentStatusFilter.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(SetContentStatusFilter.class)", "var_name": "log"}], "methods": [{"identifier": "filter", "parameters": "(DocumentIndexingPackage dip)", "modifiers": "@Override public", "return": "void", "signature": "void filter(DocumentIndexingPackage dip)", "full_signature": "@Override public void filter(DocumentIndexingPackage dip)", "class_method_signature": "SetContentStatusFilter.filter(DocumentIndexingPackage dip)", "testcase": false, "constructor": false}, {"identifier": "determineContentStatus", "parameters": "(DocumentIndexingPackage dip)", "modifiers": "private", "return": "List<String>", "signature": "List<String> determineContentStatus(DocumentIndexingPackage dip)", "full_signature": "private List<String> determineContentStatus(DocumentIndexingPackage dip)", "class_method_signature": "SetContentStatusFilter.determineContentStatus(DocumentIndexingPackage dip)", "testcase": false, "constructor": false}], "file": "solr-ingest/src/main/java/edu/unc/lib/dl/data/ingest/solr/filter/SetContentStatusFilter.java"}, "focal_method": {"identifier": "filter", "parameters": "(DocumentIndexingPackage dip)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void filter(DocumentIndexingPackage dip) throws IndexingException {\n        List<String> contentStatus = determineContentStatus(dip);\n        dip.getDocument().setContentStatus(contentStatus);\n\n        log.debug(\"Content status for {} set to {}\", dip.getPid().toString(), contentStatus);\n    }", "signature": "void filter(DocumentIndexingPackage dip)", "full_signature": "@Override public void filter(DocumentIndexingPackage dip)", "class_method_signature": "SetContentStatusFilter.filter(DocumentIndexingPackage dip)", "testcase": false, "constructor": false, "invocations": ["determineContentStatus", "setContentStatus", "getDocument", "debug", "toString", "getPid"]}, "repository": {"repo_id": 2357859, "url": "https://github.com/UNC-Libraries/Carolina-Digital-Repository", "stars": 10, "created": "9/9/2011 8:22:21 PM +00:00", "updates": "2020-01-24T19:34:45+00:00", "fork": "False", "license": "licensed"}}