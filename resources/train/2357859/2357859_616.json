{"test_class": {"identifier": "SetDatastreamFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String BASE_URI = \"http://example.com/rest/\";", "modifier": "private static final", "type": "String", "declarator": "BASE_URI = \"http://example.com/rest/\"", "var_name": "BASE_URI"}, {"original_string": "private static final String PID_STRING = \"uuid:07d9594f-310d-4095-ab67-79a1056e7430\";", "modifier": "private static final", "type": "String", "declarator": "PID_STRING = \"uuid:07d9594f-310d-4095-ab67-79a1056e7430\"", "var_name": "PID_STRING"}, {"original_string": "private static final String FILE_MIMETYPE = \"text/plain\";", "modifier": "private static final", "type": "String", "declarator": "FILE_MIMETYPE = \"text/plain\"", "var_name": "FILE_MIMETYPE"}, {"original_string": "private static final String FILE_NAME = \"test.txt\";", "modifier": "private static final", "type": "String", "declarator": "FILE_NAME = \"test.txt\"", "var_name": "FILE_NAME"}, {"original_string": "private static final String FILE_DIGEST = \"urn:sha1:82022e1782b92dce5461ee636a6c5bea8509ffee\";", "modifier": "private static final", "type": "String", "declarator": "FILE_DIGEST = \"urn:sha1:82022e1782b92dce5461ee636a6c5bea8509ffee\"", "var_name": "FILE_DIGEST"}, {"original_string": "private static final long FILE_SIZE = 5062l;", "modifier": "private static final", "type": "long", "declarator": "FILE_SIZE = 5062l", "var_name": "FILE_SIZE"}, {"original_string": "private static final String FILE2_MIMETYPE = \"text/xml\";", "modifier": "private static final", "type": "String", "declarator": "FILE2_MIMETYPE = \"text/xml\"", "var_name": "FILE2_MIMETYPE"}, {"original_string": "private static final String FILE2_NAME = \"fits.xml\";", "modifier": "private static final", "type": "String", "declarator": "FILE2_NAME = \"fits.xml\"", "var_name": "FILE2_NAME"}, {"original_string": "private static final String FILE2_DIGEST = \"urn:sha1:afbf62faf8a82d00969e0d4d965d62a45bb8c69b\";", "modifier": "private static final", "type": "String", "declarator": "FILE2_DIGEST = \"urn:sha1:afbf62faf8a82d00969e0d4d965d62a45bb8c69b\"", "var_name": "FILE2_DIGEST"}, {"original_string": "private static final long FILE2_SIZE = 7231l;", "modifier": "private static final", "type": "long", "declarator": "FILE2_SIZE = 7231l", "var_name": "FILE2_SIZE"}, {"original_string": "private static final String FILE3_MIMETYPE = \"image/png\";", "modifier": "private static final", "type": "String", "declarator": "FILE3_MIMETYPE = \"image/png\"", "var_name": "FILE3_MIMETYPE"}, {"original_string": "private static final String FILE3_NAME = \"image.png\";", "modifier": "private static final", "type": "String", "declarator": "FILE3_NAME = \"image.png\"", "var_name": "FILE3_NAME"}, {"original_string": "private static final String FILE3_DIGEST = \"urn:sha1:280f5922b6487c39d6d01a5a8e93bfa07b8f1740\";", "modifier": "private static final", "type": "String", "declarator": "FILE3_DIGEST = \"urn:sha1:280f5922b6487c39d6d01a5a8e93bfa07b8f1740\"", "var_name": "FILE3_DIGEST"}, {"original_string": "private static final long FILE3_SIZE = 17136l;", "modifier": "private static final", "type": "long", "declarator": "FILE3_SIZE = 17136l", "var_name": "FILE3_SIZE"}, {"original_string": "private static final String MODS_MIMETYPE = \"text/xml\";", "modifier": "private static final", "type": "String", "declarator": "MODS_MIMETYPE = \"text/xml\"", "var_name": "MODS_MIMETYPE"}, {"original_string": "private static final String MODS_NAME = \"mods.xml\";", "modifier": "private static final", "type": "String", "declarator": "MODS_NAME = \"mods.xml\"", "var_name": "MODS_NAME"}, {"original_string": "private static final String MODS_DIGEST = \"urn:sha1:aa0c62faf8a82d00969e0d4d965d62a45bb8c69b\";", "modifier": "private static final", "type": "String", "declarator": "MODS_DIGEST = \"urn:sha1:aa0c62faf8a82d00969e0d4d965d62a45bb8c69b\"", "var_name": "MODS_DIGEST"}, {"original_string": "private static final long MODS_SIZE = 540l;", "modifier": "private static final", "type": "long", "declarator": "MODS_SIZE = 540l", "var_name": "MODS_SIZE"}, {"original_string": "private static final String PREMIS_MIMETYPE = \"text/xml\";", "modifier": "private static final", "type": "String", "declarator": "PREMIS_MIMETYPE = \"text/xml\"", "var_name": "PREMIS_MIMETYPE"}, {"original_string": "private static final String PREMIS_NAME = \"premis.xml\";", "modifier": "private static final", "type": "String", "declarator": "PREMIS_NAME = \"premis.xml\"", "var_name": "PREMIS_NAME"}, {"original_string": "private static final String PREMIS_DIGEST = \"urn:sha1:da39a3ee5e6b4b0d3255bfef95601890afd80709\";", "modifier": "private static final", "type": "String", "declarator": "PREMIS_DIGEST = \"urn:sha1:da39a3ee5e6b4b0d3255bfef95601890afd80709\"", "var_name": "PREMIS_DIGEST"}, {"original_string": "private static final long PREMIS_SIZE = 893l;", "modifier": "private static final", "type": "long", "declarator": "PREMIS_SIZE = 893l", "var_name": "PREMIS_SIZE"}, {"original_string": "@Rule\n    public TemporaryFolder derivDir = new TemporaryFolder();", "modifier": "@Rule\n    public", "type": "TemporaryFolder", "declarator": "derivDir = new TemporaryFolder()", "var_name": "derivDir"}, {"original_string": "@Mock\n    private DocumentIndexingPackage dip;", "modifier": "@Mock\n    private", "type": "DocumentIndexingPackage", "declarator": "dip", "var_name": "dip"}, {"original_string": "private PID pid;", "modifier": "private", "type": "PID", "declarator": "pid", "var_name": "pid"}, {"original_string": "@Mock\n    private FileObject fileObj;", "modifier": "@Mock\n    private", "type": "FileObject", "declarator": "fileObj", "var_name": "fileObj"}, {"original_string": "@Mock\n    private BinaryObject binObj;", "modifier": "@Mock\n    private", "type": "BinaryObject", "declarator": "binObj", "var_name": "binObj"}, {"original_string": "@Mock\n    private IndexDocumentBean idb;", "modifier": "@Mock\n    private", "type": "IndexDocumentBean", "declarator": "idb", "var_name": "idb"}, {"original_string": "@Captor\n    private ArgumentCaptor<List<String>> listCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<List<String>>", "declarator": "listCaptor", "var_name": "listCaptor"}, {"original_string": "@Mock\n    private DerivativeService derivativeService;", "modifier": "@Mock\n    private", "type": "DerivativeService", "declarator": "derivativeService", "var_name": "derivativeService"}, {"original_string": "private SetDatastreamFilter filter;", "modifier": "private", "type": "SetDatastreamFilter", "declarator": "filter", "var_name": "filter"}], "file": "solr-ingest/src/test/java/edu/unc/lib/dl/data/ingest/solr/filter/SetDatastreamFilterTest.java"}, "test_case": {"identifier": "fileObjectNoOriginalTest", "parameters": "()", "modifiers": "@Test(expected = IndexingException.class) public", "return": "void", "body": "@Test(expected = IndexingException.class)\n    public void fileObjectNoOriginalTest() throws Exception {\n        when(binObj.getResource()).thenReturn(\n                fileResource(TECHNICAL_METADATA.getId(), FILE2_SIZE, FILE2_MIMETYPE, FILE2_NAME, FILE2_DIGEST));\n\n        when(fileObj.getBinaryObjects()).thenReturn(Arrays.asList(binObj));\n        when(dip.getContentObject()).thenReturn(fileObj);\n\n        filter.filter(dip);\n    }", "signature": "void fileObjectNoOriginalTest()", "full_signature": "@Test(expected = IndexingException.class) public void fileObjectNoOriginalTest()", "class_method_signature": "SetDatastreamFilterTest.fileObjectNoOriginalTest()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getResource", "fileResource", "getId", "thenReturn", "when", "getBinaryObjects", "asList", "thenReturn", "when", "getContentObject", "filter"]}, "focal_class": {"identifier": "SetDatastreamFilter", "superclass": "", "interfaces": "implements IndexDocumentFilter", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(SetDatastreamFilter.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(SetDatastreamFilter.class)", "var_name": "log"}, {"original_string": "private DerivativeService derivativeService;", "modifier": "private", "type": "DerivativeService", "declarator": "derivativeService", "var_name": "derivativeService"}], "methods": [{"identifier": "filter", "parameters": "(DocumentIndexingPackage dip)", "modifiers": "@Override public", "return": "void", "signature": "void filter(DocumentIndexingPackage dip)", "full_signature": "@Override public void filter(DocumentIndexingPackage dip)", "class_method_signature": "SetDatastreamFilter.filter(DocumentIndexingPackage dip)", "testcase": false, "constructor": false}, {"identifier": "getFileObject", "parameters": "(ContentObject contentObj)", "modifiers": "private", "return": "FileObject", "signature": "FileObject getFileObject(ContentObject contentObj)", "full_signature": "private FileObject getFileObject(ContentObject contentObj)", "class_method_signature": "SetDatastreamFilter.getFileObject(ContentObject contentObj)", "testcase": false, "constructor": false}, {"identifier": "addDatastreams", "parameters": "(List<Datastream> dsList, List<BinaryObject> binList, boolean ownedByOtherObject)", "modifiers": "private", "return": "void", "signature": "void addDatastreams(List<Datastream> dsList, List<BinaryObject> binList, boolean ownedByOtherObject)", "full_signature": "private void addDatastreams(List<Datastream> dsList, List<BinaryObject> binList, boolean ownedByOtherObject)", "class_method_signature": "SetDatastreamFilter.addDatastreams(List<Datastream> dsList, List<BinaryObject> binList, boolean ownedByOtherObject)", "testcase": false, "constructor": false}, {"identifier": "getFirstChecksum", "parameters": "(Resource resc)", "modifiers": "private", "return": "String", "signature": "String getFirstChecksum(Resource resc)", "full_signature": "private String getFirstChecksum(Resource resc)", "class_method_signature": "SetDatastreamFilter.getFirstChecksum(Resource resc)", "testcase": false, "constructor": false}, {"identifier": "getDatastreamStrings", "parameters": "(List<Datastream> datastreams)", "modifiers": "private", "return": "List<String>", "signature": "List<String> getDatastreamStrings(List<Datastream> datastreams)", "full_signature": "private List<String> getDatastreamStrings(List<Datastream> datastreams)", "class_method_signature": "SetDatastreamFilter.getDatastreamStrings(List<Datastream> datastreams)", "testcase": false, "constructor": false}, {"identifier": "getFilesizeTotal", "parameters": "(List<Datastream> datastreams)", "modifiers": "private", "return": "long", "signature": "long getFilesizeTotal(List<Datastream> datastreams)", "full_signature": "private long getFilesizeTotal(List<Datastream> datastreams)", "class_method_signature": "SetDatastreamFilter.getFilesizeTotal(List<Datastream> datastreams)", "testcase": false, "constructor": false}, {"identifier": "getFilesize", "parameters": "(List<Datastream> datastreams)", "modifiers": "private", "return": "long", "signature": "long getFilesize(List<Datastream> datastreams)", "full_signature": "private long getFilesize(List<Datastream> datastreams)", "class_method_signature": "SetDatastreamFilter.getFilesize(List<Datastream> datastreams)", "testcase": false, "constructor": false}, {"identifier": "addDerivatives", "parameters": "(List<Datastream> dsList, PID pid, boolean ownedByOtherObject)", "modifiers": "private", "return": "void", "signature": "void addDerivatives(List<Datastream> dsList, PID pid, boolean ownedByOtherObject)", "full_signature": "private void addDerivatives(List<Datastream> dsList, PID pid, boolean ownedByOtherObject)", "class_method_signature": "SetDatastreamFilter.addDerivatives(List<Datastream> dsList, PID pid, boolean ownedByOtherObject)", "testcase": false, "constructor": false}, {"identifier": "setDerivativeService", "parameters": "(DerivativeService derivativeService)", "modifiers": "public", "return": "void", "signature": "void setDerivativeService(DerivativeService derivativeService)", "full_signature": "public void setDerivativeService(DerivativeService derivativeService)", "class_method_signature": "SetDatastreamFilter.setDerivativeService(DerivativeService derivativeService)", "testcase": false, "constructor": false}], "file": "solr-ingest/src/main/java/edu/unc/lib/dl/data/ingest/solr/filter/SetDatastreamFilter.java"}, "focal_method": {"identifier": "filter", "parameters": "(DocumentIndexingPackage dip)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void filter(DocumentIndexingPackage dip) throws IndexingException {\n        log.debug(\"Performing Datastream filter for object {}\", dip.getPid());\n\n        ContentObject contentObj = dip.getContentObject();\n        IndexDocumentBean doc = dip.getDocument();\n\n        List<Datastream> datastreams = new ArrayList<>();\n\n        FileObject fileObj = getFileObject(contentObj);\n        if (fileObj != null) {\n            boolean ownedByOtherObject = contentObj instanceof WorkObject;\n\n            // Add list of file datastreams associated with this object\n            addDatastreams(datastreams, fileObj.getBinaryObjects(), ownedByOtherObject);\n            // Set the sort file size to the size of the original file\n            doc.setFilesizeSort(getFilesize(datastreams));\n\n            // Add list of derivatives associated from the representative file\n            addDerivatives(datastreams, fileObj.getPid(), ownedByOtherObject);\n        } else {\n            // Add list of derivatives associated with the object\n            addDerivatives(datastreams, contentObj.getPid(), false);\n        }\n\n        // Add in metadata datastreams\n        addDatastreams(datastreams, contentObj.listMetadata(), false);\n\n        doc.setFilesizeTotal(getFilesizeTotal(datastreams));\n        doc.setDatastream(getDatastreamStrings(datastreams));\n    }", "signature": "void filter(DocumentIndexingPackage dip)", "full_signature": "@Override public void filter(DocumentIndexingPackage dip)", "class_method_signature": "SetDatastreamFilter.filter(DocumentIndexingPackage dip)", "testcase": false, "constructor": false, "invocations": ["debug", "getPid", "getContentObject", "getDocument", "getFileObject", "addDatastreams", "getBinaryObjects", "setFilesizeSort", "getFilesize", "addDerivatives", "getPid", "addDerivatives", "getPid", "addDatastreams", "listMetadata", "setFilesizeTotal", "getFilesizeTotal", "setDatastream", "getDatastreamStrings"]}, "repository": {"repo_id": 2357859, "url": "https://github.com/UNC-Libraries/Carolina-Digital-Repository", "stars": 10, "created": "9/9/2011 8:22:21 PM +00:00", "updates": "2020-01-24T19:34:45+00:00", "fork": "False", "license": "licensed"}}