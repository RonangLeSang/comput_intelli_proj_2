{"test_class": {"identifier": "RibbonDynamicProxyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private HttpResourceGroup httpResourceGroupMock;", "modifier": "@Mock\n    private", "type": "HttpResourceGroup", "declarator": "httpResourceGroupMock", "var_name": "httpResourceGroupMock"}, {"original_string": "@Mock\n    private ProxyHttpResourceGroupFactory httpResourceGroupFactoryMock;", "modifier": "@Mock\n    private", "type": "ProxyHttpResourceGroupFactory", "declarator": "httpResourceGroupFactoryMock", "var_name": "httpResourceGroupFactoryMock"}, {"original_string": "@Mock\n    private RibbonRequest ribbonRequestMock;", "modifier": "@Mock\n    private", "type": "RibbonRequest", "declarator": "ribbonRequestMock", "var_name": "ribbonRequestMock"}, {"original_string": "@Mock\n    private HttpClient<ByteBuf, ByteBuf> httpClientMock;", "modifier": "@Mock\n    private", "type": "HttpClient<ByteBuf, ByteBuf>", "declarator": "httpClientMock", "var_name": "httpClientMock"}], "file": "ribbon/src/test/java/com/netflix/ribbon/proxy/RibbonDynamicProxyTest.java"}, "test_case": {"identifier": "testTypedClientGetWithPathParameter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTypedClientGetWithPathParameter() throws Exception {\n        initializeSampleMovieServiceMocks();\n        replayAll();\n\n        SampleMovieService service = RibbonDynamicProxy.newInstance(SampleMovieService.class, httpResourceGroupMock);\n        RibbonRequest<ByteBuf> ribbonMovie = service.findMovieById(\"123\");\n\n        assertNotNull(ribbonMovie);\n    }", "signature": "void testTypedClientGetWithPathParameter()", "full_signature": "@Test public void testTypedClientGetWithPathParameter()", "class_method_signature": "RibbonDynamicProxyTest.testTypedClientGetWithPathParameter()", "testcase": true, "constructor": false, "invocations": ["initializeSampleMovieServiceMocks", "replayAll", "newInstance", "findMovieById", "assertNotNull"]}, "focal_class": {"identifier": "RibbonDynamicProxy", "superclass": "", "interfaces": "implements InvocationHandler", "fields": [{"original_string": "private final ProxyLifeCycle lifeCycle;", "modifier": "private final", "type": "ProxyLifeCycle", "declarator": "lifeCycle", "var_name": "lifeCycle"}, {"original_string": "private final Map<Method, MethodTemplateExecutor> templateExecutorMap;", "modifier": "private final", "type": "Map<Method, MethodTemplateExecutor>", "declarator": "templateExecutorMap", "var_name": "templateExecutorMap"}], "methods": [{"identifier": "RibbonDynamicProxy", "parameters": "(Class<T> clientInterface, HttpResourceGroup httpResourceGroup)", "modifiers": "", "return": "", "signature": " RibbonDynamicProxy(Class<T> clientInterface, HttpResourceGroup httpResourceGroup)", "full_signature": "  RibbonDynamicProxy(Class<T> clientInterface, HttpResourceGroup httpResourceGroup)", "class_method_signature": "RibbonDynamicProxy.RibbonDynamicProxy(Class<T> clientInterface, HttpResourceGroup httpResourceGroup)", "testcase": false, "constructor": true}, {"identifier": "RibbonDynamicProxy", "parameters": "(Class<T> clientInterface, RibbonResourceFactory resourceGroupFactory, ClientConfigFactory configFactory,\n                              RibbonTransportFactory transportFactory, AnnotationProcessorsProvider processors)", "modifiers": "public", "return": "", "signature": " RibbonDynamicProxy(Class<T> clientInterface, RibbonResourceFactory resourceGroupFactory, ClientConfigFactory configFactory,\n                              RibbonTransportFactory transportFactory, AnnotationProcessorsProvider processors)", "full_signature": "public  RibbonDynamicProxy(Class<T> clientInterface, RibbonResourceFactory resourceGroupFactory, ClientConfigFactory configFactory,\n                              RibbonTransportFactory transportFactory, AnnotationProcessorsProvider processors)", "class_method_signature": "RibbonDynamicProxy.RibbonDynamicProxy(Class<T> clientInterface, RibbonResourceFactory resourceGroupFactory, ClientConfigFactory configFactory,\n                              RibbonTransportFactory transportFactory, AnnotationProcessorsProvider processors)", "testcase": false, "constructor": true}, {"identifier": "registerAnnotationProcessors", "parameters": "(AnnotationProcessorsProvider processors)", "modifiers": "static", "return": "void", "signature": "void registerAnnotationProcessors(AnnotationProcessorsProvider processors)", "full_signature": "static void registerAnnotationProcessors(AnnotationProcessorsProvider processors)", "class_method_signature": "RibbonDynamicProxy.registerAnnotationProcessors(AnnotationProcessorsProvider processors)", "testcase": false, "constructor": false}, {"identifier": "invoke", "parameters": "(Object proxy, Method method, Object[] args)", "modifiers": "@Override public", "return": "Object", "signature": "Object invoke(Object proxy, Method method, Object[] args)", "full_signature": "@Override public Object invoke(Object proxy, Method method, Object[] args)", "class_method_signature": "RibbonDynamicProxy.invoke(Object proxy, Method method, Object[] args)", "testcase": false, "constructor": false}, {"identifier": "handleProxyLifeCycle", "parameters": "(Method method, Object[] args)", "modifiers": "private", "return": "Object", "signature": "Object handleProxyLifeCycle(Method method, Object[] args)", "full_signature": "private Object handleProxyLifeCycle(Method method, Object[] args)", "class_method_signature": "RibbonDynamicProxy.handleProxyLifeCycle(Method method, Object[] args)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "RibbonDynamicProxy.toString()", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(Class<T> clientInterface)", "modifiers": "public static", "return": "T", "signature": "T newInstance(Class<T> clientInterface)", "full_signature": "public static T newInstance(Class<T> clientInterface)", "class_method_signature": "RibbonDynamicProxy.newInstance(Class<T> clientInterface)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(Class<T> clientInterface, HttpResourceGroup httpResourceGroup)", "modifiers": "@SuppressWarnings(\"unchecked\") static", "return": "T", "signature": "T newInstance(Class<T> clientInterface, HttpResourceGroup httpResourceGroup)", "full_signature": "@SuppressWarnings(\"unchecked\") static T newInstance(Class<T> clientInterface, HttpResourceGroup httpResourceGroup)", "class_method_signature": "RibbonDynamicProxy.newInstance(Class<T> clientInterface, HttpResourceGroup httpResourceGroup)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(Class<T> clientInterface, RibbonResourceFactory resourceGroupFactory,\n                                    ClientConfigFactory configFactory, RibbonTransportFactory transportFactory, AnnotationProcessorsProvider processors)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "T", "signature": "T newInstance(Class<T> clientInterface, RibbonResourceFactory resourceGroupFactory,\n                                    ClientConfigFactory configFactory, RibbonTransportFactory transportFactory, AnnotationProcessorsProvider processors)", "full_signature": "@SuppressWarnings(\"unchecked\") public static T newInstance(Class<T> clientInterface, RibbonResourceFactory resourceGroupFactory,\n                                    ClientConfigFactory configFactory, RibbonTransportFactory transportFactory, AnnotationProcessorsProvider processors)", "class_method_signature": "RibbonDynamicProxy.newInstance(Class<T> clientInterface, RibbonResourceFactory resourceGroupFactory,\n                                    ClientConfigFactory configFactory, RibbonTransportFactory transportFactory, AnnotationProcessorsProvider processors)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(Class<T> clientInterface, RibbonResourceFactory resourceGroupFactory,\n                                    ClientConfigFactory configFactory, RibbonTransportFactory transportFactory)", "modifiers": "public static", "return": "T", "signature": "T newInstance(Class<T> clientInterface, RibbonResourceFactory resourceGroupFactory,\n                                    ClientConfigFactory configFactory, RibbonTransportFactory transportFactory)", "full_signature": "public static T newInstance(Class<T> clientInterface, RibbonResourceFactory resourceGroupFactory,\n                                    ClientConfigFactory configFactory, RibbonTransportFactory transportFactory)", "class_method_signature": "RibbonDynamicProxy.newInstance(Class<T> clientInterface, RibbonResourceFactory resourceGroupFactory,\n                                    ClientConfigFactory configFactory, RibbonTransportFactory transportFactory)", "testcase": false, "constructor": false}], "file": "ribbon/src/main/java/com/netflix/ribbon/proxy/RibbonDynamicProxy.java"}, "focal_method": {"identifier": "newInstance", "parameters": "(Class<T> clientInterface)", "modifiers": "public static", "return": "T", "body": "public static <T> T newInstance(Class<T> clientInterface) {\n        return newInstance(clientInterface, new DefaultResourceFactory(ClientConfigFactory.DEFAULT, RibbonTransportFactory.DEFAULT, AnnotationProcessorsProvider.DEFAULT),\n                ClientConfigFactory.DEFAULT, RibbonTransportFactory.DEFAULT, AnnotationProcessorsProvider.DEFAULT);\n    }", "signature": "T newInstance(Class<T> clientInterface)", "full_signature": "public static T newInstance(Class<T> clientInterface)", "class_method_signature": "RibbonDynamicProxy.newInstance(Class<T> clientInterface)", "testcase": false, "constructor": false, "invocations": ["newInstance"]}, "repository": {"repo_id": 7616158, "url": "https://github.com/Netflix/ribbon", "language": "Java", "is_fork": false, "fork_count": 939, "stargazer_count": 3631, "size": 3280, "license": "licensed"}}