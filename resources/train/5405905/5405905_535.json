{"test_class": {"identifier": "ProcessSummaryMapperTest", "superclass": "", "interfaces": "", "fields": [], "file": "jbpm-wb-process-runtime/jbpm-wb-process-runtime-backend/src/test/java/org/jbpm/workbench/pr/backend/server/ProcessSummaryMapperTest.java"}, "test_case": {"identifier": "testProcessSummaryMapper_mapNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcessSummaryMapper_mapNull() {\n        assertNull(new ProcessSummaryMapper().apply(null));\n    }", "signature": "void testProcessSummaryMapper_mapNull()", "full_signature": "@Test public void testProcessSummaryMapper_mapNull()", "class_method_signature": "ProcessSummaryMapperTest.testProcessSummaryMapper_mapNull()", "testcase": true, "constructor": false, "invocations": ["assertNull", "apply"]}, "focal_class": {"identifier": "ProcessSummaryMapper", "superclass": "", "interfaces": "implements Function<ProcessDefinition, ProcessSummary>", "fields": [], "methods": [{"identifier": "apply", "parameters": "(final ProcessDefinition definition)", "modifiers": "@Override public", "return": "ProcessSummary", "signature": "ProcessSummary apply(final ProcessDefinition definition)", "full_signature": "@Override public ProcessSummary apply(final ProcessDefinition definition)", "class_method_signature": "ProcessSummaryMapper.apply(final ProcessDefinition definition)", "testcase": false, "constructor": false}], "file": "jbpm-wb-process-runtime/jbpm-wb-process-runtime-backend/src/main/java/org/jbpm/workbench/pr/backend/server/ProcessSummaryMapper.java"}, "focal_method": {"identifier": "apply", "parameters": "(final ProcessDefinition definition)", "modifiers": "@Override public", "return": "ProcessSummary", "body": "@Override\n    public ProcessSummary apply(final ProcessDefinition definition) {\n        if (definition == null) {\n            return null;\n        }\n\n        final ProcessSummary summary = new ProcessSummary(definition.getId(),\n                                                          definition.getName(),\n                                                          definition.getContainerId(),\n                                                          definition.getVersion(),\n                                                          definition.isDynamic());\n\n        summary.setAssociatedEntities(definition.getAssociatedEntities());\n        summary.setProcessVariables(definition.getProcessVariables());\n        summary.setReusableSubProcesses(definition.getReusableSubProcesses());\n        summary.setServiceTasks(definition.getServiceTasks());\n        summary.setDynamicFormsEnabled(KieServerUtils.isKieServerRendererEnabled());\n        summary.setNodes(definition.getNodes() == null ? emptyList() : definition.getNodes().stream().map(node -> new ProcessNodeSummary(node.getId(),\n                                                                                                                                         node.getName(),\n                                                                                                                                         node.getType(),\n                                                                                                                                         node.getUniqueId())).collect(toList()));\n\n        summary.setTimers(definition.getTimers() == null ? emptyList() : definition.getTimers().stream().map(timer -> new TimerSummary(timer.getId(),\n                                                                                                                                       timer.getNodeId(),\n                                                                                                                                       timer.getNodeName(),\n                                                                                                                                       timer.getUniqueId())).collect(toList()));\n        return summary;\n    }", "signature": "ProcessSummary apply(final ProcessDefinition definition)", "full_signature": "@Override public ProcessSummary apply(final ProcessDefinition definition)", "class_method_signature": "ProcessSummaryMapper.apply(final ProcessDefinition definition)", "testcase": false, "constructor": false, "invocations": ["getId", "getName", "getContainerId", "getVersion", "isDynamic", "setAssociatedEntities", "getAssociatedEntities", "setProcessVariables", "getProcessVariables", "setReusableSubProcesses", "getReusableSubProcesses", "setServiceTasks", "getServiceTasks", "setDynamicFormsEnabled", "isKieServerRendererEnabled", "setNodes", "getNodes", "emptyList", "collect", "map", "stream", "getNodes", "getId", "getName", "getType", "getUniqueId", "toList", "setTimers", "getTimers", "emptyList", "collect", "map", "stream", "getTimers", "getId", "getNodeId", "getNodeName", "getUniqueId", "toList"]}, "repository": {"repo_id": 5405905, "url": "https://github.com/kiegroup/jbpm-wb", "stars": 36, "created": "8/13/2012 11:08:21 PM +00:00", "updates": "2020-01-21T13:08:37+00:00", "fork": "False", "license": "licensed"}}