{"test_class": {"identifier": "NewCaseProjectHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    CaseProjectService caseProjectService;", "modifier": "@Mock", "type": "CaseProjectService", "declarator": "caseProjectService", "var_name": "caseProjectService"}, {"original_string": "Caller<CaseProjectService> caseProjectServiceCaller;", "modifier": "", "type": "Caller<CaseProjectService>", "declarator": "caseProjectServiceCaller", "var_name": "caseProjectServiceCaller"}, {"original_string": "@Spy\n    Event<NotificationEvent> notification = new EventSourceMock<>();", "modifier": "@Spy", "type": "Event<NotificationEvent>", "declarator": "notification = new EventSourceMock<>()", "var_name": "notification"}, {"original_string": "@Mock\n    AddProjectPopUpPresenter addProjectPopUpPresenter;", "modifier": "@Mock", "type": "AddProjectPopUpPresenter", "declarator": "addProjectPopUpPresenter", "var_name": "addProjectPopUpPresenter"}, {"original_string": "@Mock\n    ProjectController projectController;", "modifier": "@Mock", "type": "ProjectController", "declarator": "projectController", "var_name": "projectController"}, {"original_string": "@Mock\n    WorkspaceProjectContext context;", "modifier": "@Mock", "type": "WorkspaceProjectContext", "declarator": "context", "var_name": "context"}, {"original_string": "Instance<AddProjectPopUpPresenter> addProjectPopUpPresenterProvider;", "modifier": "", "type": "Instance<AddProjectPopUpPresenter>", "declarator": "addProjectPopUpPresenterProvider", "var_name": "addProjectPopUpPresenterProvider"}, {"original_string": "@InjectMocks\n    NewCaseProjectHandler newCaseProjectHandler;", "modifier": "@InjectMocks", "type": "NewCaseProjectHandler", "declarator": "newCaseProjectHandler", "var_name": "newCaseProjectHandler"}], "file": "jbpm-wb-integration/jbpm-wb-integration-client/src/test/java/org/jbpm/workbench/wi/client/handlers/NewCaseProjectHandlerTest.java"}, "test_case": {"identifier": "testCanNotCreateCaseProjectWhenUserHasNoPermissionOnCurrentOU", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCanNotCreateCaseProjectWhenUserHasNoPermissionOnCurrentOU() {\n        final OrganizationalUnit currentOU = mock(OrganizationalUnit.class);\n        doReturn(Optional.of(currentOU)).when(context).getActiveOrganizationalUnit();\n        doReturn(false).when(projectController).canCreateProjects(same(currentOU));\n\n        assertFalse(newCaseProjectHandler.canCreate());\n    }", "signature": "void testCanNotCreateCaseProjectWhenUserHasNoPermissionOnCurrentOU()", "full_signature": "@Test public void testCanNotCreateCaseProjectWhenUserHasNoPermissionOnCurrentOU()", "class_method_signature": "NewCaseProjectHandlerTest.testCanNotCreateCaseProjectWhenUserHasNoPermissionOnCurrentOU()", "testcase": true, "constructor": false, "invocations": ["mock", "getActiveOrganizationalUnit", "when", "doReturn", "of", "canCreateProjects", "when", "doReturn", "same", "assertFalse", "canCreate"]}, "focal_class": {"identifier": "NewCaseProjectHandler", "superclass": "", "interfaces": "implements NewWorkspaceProjectHandler", "fields": [{"original_string": "@Inject\n    private Event<WorkspaceProjectContextChangeEvent> projectContextChangeEventEvent;", "modifier": "@Inject\n    private", "type": "Event<WorkspaceProjectContextChangeEvent>", "declarator": "projectContextChangeEventEvent", "var_name": "projectContextChangeEventEvent"}, {"original_string": "@Inject\n    private LibraryPreferences libraryPreferences;", "modifier": "@Inject\n    private", "type": "LibraryPreferences", "declarator": "libraryPreferences", "var_name": "libraryPreferences"}, {"original_string": "@Inject\n    private Caller<OrganizationalUnitService> ouService;", "modifier": "@Inject\n    private", "type": "Caller<OrganizationalUnitService>", "declarator": "ouService", "var_name": "ouService"}, {"original_string": "@Inject\n    private WorkspaceProjectContext context;", "modifier": "@Inject\n    private", "type": "WorkspaceProjectContext", "declarator": "context", "var_name": "context"}, {"original_string": "@Inject\n    private ProjectController projectController;", "modifier": "@Inject\n    private", "type": "ProjectController", "declarator": "projectController", "var_name": "projectController"}, {"original_string": "private Instance<AddProjectPopUpPresenter> addProjectPopUpPresenterProvider;", "modifier": "private", "type": "Instance<AddProjectPopUpPresenter>", "declarator": "addProjectPopUpPresenterProvider", "var_name": "addProjectPopUpPresenterProvider"}, {"original_string": "@Inject\n    private AnyResourceTypeDefinition resourceType;", "modifier": "@Inject\n    private", "type": "AnyResourceTypeDefinition", "declarator": "resourceType", "var_name": "resourceType"}, {"original_string": "private Caller<CaseProjectService> caseProjectService;", "modifier": "private", "type": "Caller<CaseProjectService>", "declarator": "caseProjectService", "var_name": "caseProjectService"}, {"original_string": "private Event<NotificationEvent> notification;", "modifier": "private", "type": "Event<NotificationEvent>", "declarator": "notification", "var_name": "notification"}, {"original_string": "private org.uberfire.client.callbacks.Callback<WorkspaceProject> creationSuccessCallback;", "modifier": "private", "type": "org.uberfire.client.callbacks.Callback<WorkspaceProject>", "declarator": "creationSuccessCallback", "var_name": "creationSuccessCallback"}], "methods": [{"identifier": "setCaseProjectService", "parameters": "(Caller<CaseProjectService> caseProjectService)", "modifiers": "@Inject public", "return": "void", "signature": "void setCaseProjectService(Caller<CaseProjectService> caseProjectService)", "full_signature": "@Inject public void setCaseProjectService(Caller<CaseProjectService> caseProjectService)", "class_method_signature": "NewCaseProjectHandler.setCaseProjectService(Caller<CaseProjectService> caseProjectService)", "testcase": false, "constructor": false}, {"identifier": "setNotification", "parameters": "(Event<NotificationEvent> notification)", "modifiers": "@Inject public", "return": "void", "signature": "void setNotification(Event<NotificationEvent> notification)", "full_signature": "@Inject public void setNotification(Event<NotificationEvent> notification)", "class_method_signature": "NewCaseProjectHandler.setNotification(Event<NotificationEvent> notification)", "testcase": false, "constructor": false}, {"identifier": "setAddProjectPopUpPresenterProvider", "parameters": "(Instance<AddProjectPopUpPresenter> addProjectPopUpPresenterProvider)", "modifiers": "@Inject public", "return": "void", "signature": "void setAddProjectPopUpPresenterProvider(Instance<AddProjectPopUpPresenter> addProjectPopUpPresenterProvider)", "full_signature": "@Inject public void setAddProjectPopUpPresenterProvider(Instance<AddProjectPopUpPresenter> addProjectPopUpPresenterProvider)", "class_method_signature": "NewCaseProjectHandler.setAddProjectPopUpPresenterProvider(Instance<AddProjectPopUpPresenter> addProjectPopUpPresenterProvider)", "testcase": false, "constructor": false}, {"identifier": "getExtensions", "parameters": "()", "modifiers": "@Override public", "return": "List<Pair<String, ? extends IsWidget>>", "signature": "List<Pair<String, ? extends IsWidget>> getExtensions()", "full_signature": "@Override public List<Pair<String, ? extends IsWidget>> getExtensions()", "class_method_signature": "NewCaseProjectHandler.getExtensions()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDescription()", "full_signature": "@Override public String getDescription()", "class_method_signature": "NewCaseProjectHandler.getDescription()", "testcase": false, "constructor": false}, {"identifier": "getIcon", "parameters": "()", "modifiers": "@Override public", "return": "IsWidget", "signature": "IsWidget getIcon()", "full_signature": "@Override public IsWidget getIcon()", "class_method_signature": "NewCaseProjectHandler.getIcon()", "testcase": false, "constructor": false}, {"identifier": "getResourceType", "parameters": "()", "modifiers": "@Override public", "return": "ResourceTypeDefinition", "signature": "ResourceTypeDefinition getResourceType()", "full_signature": "@Override public ResourceTypeDefinition getResourceType()", "class_method_signature": "NewCaseProjectHandler.getResourceType()", "testcase": false, "constructor": false}, {"identifier": "canCreate", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canCreate()", "full_signature": "@Override public boolean canCreate()", "class_method_signature": "NewCaseProjectHandler.canCreate()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(final Package pkg,\n                       final String projectName,\n                       final NewResourcePresenter presenter)", "modifiers": "@Override public", "return": "void", "signature": "void create(final Package pkg,\n                       final String projectName,\n                       final NewResourcePresenter presenter)", "full_signature": "@Override public void create(final Package pkg,\n                       final String projectName,\n                       final NewResourcePresenter presenter)", "class_method_signature": "NewCaseProjectHandler.create(final Package pkg,\n                       final String projectName,\n                       final NewResourcePresenter presenter)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(final String projectName,\n                         final ValidatorWithReasonCallback callback)", "modifiers": "@Override public", "return": "void", "signature": "void validate(final String projectName,\n                         final ValidatorWithReasonCallback callback)", "full_signature": "@Override public void validate(final String projectName,\n                         final ValidatorWithReasonCallback callback)", "class_method_signature": "NewCaseProjectHandler.validate(final String projectName,\n                         final ValidatorWithReasonCallback callback)", "testcase": false, "constructor": false}, {"identifier": "acceptContext", "parameters": "(final Callback<Boolean, Void> response)", "modifiers": "@Override public", "return": "void", "signature": "void acceptContext(final Callback<Boolean, Void> response)", "full_signature": "@Override public void acceptContext(final Callback<Boolean, Void> response)", "class_method_signature": "NewCaseProjectHandler.acceptContext(final Callback<Boolean, Void> response)", "testcase": false, "constructor": false}, {"identifier": "getCommand", "parameters": "(final NewResourcePresenter newResourcePresenter)", "modifiers": "@Override public", "return": "Command", "signature": "Command getCommand(final NewResourcePresenter newResourcePresenter)", "full_signature": "@Override public Command getCommand(final NewResourcePresenter newResourcePresenter)", "class_method_signature": "NewCaseProjectHandler.getCommand(final NewResourcePresenter newResourcePresenter)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void init()", "full_signature": "protected void init()", "class_method_signature": "NewCaseProjectHandler.init()", "testcase": false, "constructor": false}, {"identifier": "setOpenEditorOnCreation", "parameters": "(final boolean openEditorOnCreation)", "modifiers": "@Override public", "return": "void", "signature": "void setOpenEditorOnCreation(final boolean openEditorOnCreation)", "full_signature": "@Override public void setOpenEditorOnCreation(final boolean openEditorOnCreation)", "class_method_signature": "NewCaseProjectHandler.setOpenEditorOnCreation(final boolean openEditorOnCreation)", "testcase": false, "constructor": false}, {"identifier": "setCreationSuccessCallback", "parameters": "(org.uberfire.client.callbacks.Callback<WorkspaceProject> creationSuccessCallback)", "modifiers": "@Override public", "return": "void", "signature": "void setCreationSuccessCallback(org.uberfire.client.callbacks.Callback<WorkspaceProject> creationSuccessCallback)", "full_signature": "@Override public void setCreationSuccessCallback(org.uberfire.client.callbacks.Callback<WorkspaceProject> creationSuccessCallback)", "class_method_signature": "NewCaseProjectHandler.setCreationSuccessCallback(org.uberfire.client.callbacks.Callback<WorkspaceProject> creationSuccessCallback)", "testcase": false, "constructor": false}, {"identifier": "isProjectAsset", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isProjectAsset()", "full_signature": "@Override public boolean isProjectAsset()", "class_method_signature": "NewCaseProjectHandler.isProjectAsset()", "testcase": false, "constructor": false}], "file": "jbpm-wb-integration/jbpm-wb-integration-client/src/main/java/org/jbpm/workbench/wi/client/handlers/NewCaseProjectHandler.java"}, "focal_method": {"identifier": "canCreate", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean canCreate() {\n        return projectController.canCreateProjects(context.getActiveOrganizationalUnit().get());\n    }", "signature": "boolean canCreate()", "full_signature": "@Override public boolean canCreate()", "class_method_signature": "NewCaseProjectHandler.canCreate()", "testcase": false, "constructor": false, "invocations": ["canCreateProjects", "get", "getActiveOrganizationalUnit"]}, "repository": {"repo_id": 5405905, "url": "https://github.com/kiegroup/jbpm-wb", "stars": 36, "created": "8/13/2012 11:08:21 PM +00:00", "updates": "2020-01-21T13:08:37+00:00", "fork": "False", "license": "licensed"}}