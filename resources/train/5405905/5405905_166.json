{"test_class": {"identifier": "CaseProvisioningAppLauncherHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Spy\n    Event<AppLauncherAddEvent> appLauncherAddEvent = new EventSourceMock<>();", "modifier": "@Spy", "type": "Event<AppLauncherAddEvent>", "declarator": "appLauncherAddEvent = new EventSourceMock<>()", "var_name": "appLauncherAddEvent"}, {"original_string": "@Spy\n    Event<NotificationEvent> notification = new EventSourceMock<>();", "modifier": "@Spy", "type": "Event<NotificationEvent>", "declarator": "notification = new EventSourceMock<>()", "var_name": "notification"}, {"original_string": "@Mock\n    CaseProvisioningService caseManagementService;", "modifier": "@Mock", "type": "CaseProvisioningService", "declarator": "caseManagementService", "var_name": "caseManagementService"}, {"original_string": "@InjectMocks\n    CaseProvisioningAppLauncherHandler appLauncherHandler;", "modifier": "@InjectMocks", "type": "CaseProvisioningAppLauncherHandler", "declarator": "appLauncherHandler", "var_name": "appLauncherHandler"}], "file": "jbpm-wb-integration/jbpm-wb-integration-client/src/test/java/org/jbpm/workbench/wi/client/casemgmt/CaseProvisioningAppLauncherHandlerTest.java"}, "test_case": {"identifier": "testOnCaseManagementProvisioningFailedEvent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOnCaseManagementProvisioningFailedEvent() {\n        appLauncherHandler.onCaseManagementProvisioningFailedEvent(new CaseProvisioningFailedEvent());\n\n        verify(appLauncherAddEvent,\n               never()).fire(any(AppLauncherAddEvent.class));\n        assertNotification(ERROR);\n    }", "signature": "void testOnCaseManagementProvisioningFailedEvent()", "full_signature": "@Test public void testOnCaseManagementProvisioningFailedEvent()", "class_method_signature": "CaseProvisioningAppLauncherHandlerTest.testOnCaseManagementProvisioningFailedEvent()", "testcase": true, "constructor": false, "invocations": ["onCaseManagementProvisioningFailedEvent", "fire", "verify", "never", "any", "assertNotification"]}, "focal_class": {"identifier": "CaseProvisioningAppLauncherHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Constants constants = Constants.INSTANCE;", "modifier": "private final", "type": "Constants", "declarator": "constants = Constants.INSTANCE", "var_name": "constants"}, {"original_string": "@Inject\n    private Event<AppLauncherAddEvent> appLauncherAddEvent;", "modifier": "@Inject\n    private", "type": "Event<AppLauncherAddEvent>", "declarator": "appLauncherAddEvent", "var_name": "appLauncherAddEvent"}, {"original_string": "@Inject\n    private Event<NotificationEvent> notification;", "modifier": "@Inject\n    private", "type": "Event<NotificationEvent>", "declarator": "notification", "var_name": "notification"}, {"original_string": "private Caller<CaseProvisioningService> service;", "modifier": "private", "type": "Caller<CaseProvisioningService>", "declarator": "service", "var_name": "service"}], "methods": [{"identifier": "verifyCaseAppStatus", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void verifyCaseAppStatus()", "full_signature": "public void verifyCaseAppStatus()", "class_method_signature": "CaseProvisioningAppLauncherHandler.verifyCaseAppStatus()", "testcase": false, "constructor": false}, {"identifier": "onCaseManagementProvisioningStartedEvent", "parameters": "(@Observes CaseProvisioningStartedEvent event)", "modifiers": "public", "return": "void", "signature": "void onCaseManagementProvisioningStartedEvent(@Observes CaseProvisioningStartedEvent event)", "full_signature": "public void onCaseManagementProvisioningStartedEvent(@Observes CaseProvisioningStartedEvent event)", "class_method_signature": "CaseProvisioningAppLauncherHandler.onCaseManagementProvisioningStartedEvent(@Observes CaseProvisioningStartedEvent event)", "testcase": false, "constructor": false}, {"identifier": "onCaseManagementProvisioningCompletedEvent", "parameters": "(@Observes CaseProvisioningCompletedEvent event)", "modifiers": "public", "return": "void", "signature": "void onCaseManagementProvisioningCompletedEvent(@Observes CaseProvisioningCompletedEvent event)", "full_signature": "public void onCaseManagementProvisioningCompletedEvent(@Observes CaseProvisioningCompletedEvent event)", "class_method_signature": "CaseProvisioningAppLauncherHandler.onCaseManagementProvisioningCompletedEvent(@Observes CaseProvisioningCompletedEvent event)", "testcase": false, "constructor": false}, {"identifier": "addCaseAppLauncher", "parameters": "(final String caseAppContext)", "modifiers": "protected", "return": "void", "signature": "void addCaseAppLauncher(final String caseAppContext)", "full_signature": "protected void addCaseAppLauncher(final String caseAppContext)", "class_method_signature": "CaseProvisioningAppLauncherHandler.addCaseAppLauncher(final String caseAppContext)", "testcase": false, "constructor": false}, {"identifier": "onCaseManagementProvisioningFailedEvent", "parameters": "(@Observes CaseProvisioningFailedEvent event)", "modifiers": "public", "return": "void", "signature": "void onCaseManagementProvisioningFailedEvent(@Observes CaseProvisioningFailedEvent event)", "full_signature": "public void onCaseManagementProvisioningFailedEvent(@Observes CaseProvisioningFailedEvent event)", "class_method_signature": "CaseProvisioningAppLauncherHandler.onCaseManagementProvisioningFailedEvent(@Observes CaseProvisioningFailedEvent event)", "testcase": false, "constructor": false}, {"identifier": "setCaseProvisioningService", "parameters": "(final Caller<CaseProvisioningService> service)", "modifiers": "@Inject public", "return": "void", "signature": "void setCaseProvisioningService(final Caller<CaseProvisioningService> service)", "full_signature": "@Inject public void setCaseProvisioningService(final Caller<CaseProvisioningService> service)", "class_method_signature": "CaseProvisioningAppLauncherHandler.setCaseProvisioningService(final Caller<CaseProvisioningService> service)", "testcase": false, "constructor": false}], "file": "jbpm-wb-integration/jbpm-wb-integration-client/src/main/java/org/jbpm/workbench/wi/client/casemgmt/CaseProvisioningAppLauncherHandler.java"}, "focal_method": {"identifier": "onCaseManagementProvisioningFailedEvent", "parameters": "(@Observes CaseProvisioningFailedEvent event)", "modifiers": "public", "return": "void", "body": "public void onCaseManagementProvisioningFailedEvent(@Observes CaseProvisioningFailedEvent event) {\n        notification.fire(new NotificationEvent(constants.CaseAppProvisioningFailed(),\n                                                ERROR));\n    }", "signature": "void onCaseManagementProvisioningFailedEvent(@Observes CaseProvisioningFailedEvent event)", "full_signature": "public void onCaseManagementProvisioningFailedEvent(@Observes CaseProvisioningFailedEvent event)", "class_method_signature": "CaseProvisioningAppLauncherHandler.onCaseManagementProvisioningFailedEvent(@Observes CaseProvisioningFailedEvent event)", "testcase": false, "constructor": false, "invocations": ["fire", "CaseAppProvisioningFailed"]}, "repository": {"repo_id": 5405905, "url": "https://github.com/kiegroup/jbpm-wb", "stars": 36, "created": "8/13/2012 11:08:21 PM +00:00", "updates": "2020-01-21T13:08:37+00:00", "fork": "False", "license": "licensed"}}