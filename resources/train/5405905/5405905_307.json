{"test_class": {"identifier": "RequestListPresenterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Long REQUEST_ID = 1L;", "modifier": "private static final", "type": "Long", "declarator": "REQUEST_ID = 1L", "var_name": "REQUEST_ID"}, {"original_string": "private static final String PERSPECTIVE_ID = PerspectiveIds.JOBS;", "modifier": "private static final", "type": "String", "declarator": "PERSPECTIVE_ID = PerspectiveIds.JOBS", "var_name": "PERSPECTIVE_ID"}, {"original_string": "private String datasetUId = REQUEST_LIST_DATASET;", "modifier": "private", "type": "String", "declarator": "datasetUId = REQUEST_LIST_DATASET", "var_name": "datasetUId"}, {"original_string": "private org.jbpm.workbench.common.client.resources.i18n.Constants commonConstants;", "modifier": "private", "type": "org.jbpm.workbench.common.client.resources.i18n.Constants", "declarator": "commonConstants", "var_name": "commonConstants"}, {"original_string": "private CallerMock<ExecutorService> callerMockExecutorService;", "modifier": "private", "type": "CallerMock<ExecutorService>", "declarator": "callerMockExecutorService", "var_name": "callerMockExecutorService"}, {"original_string": "@Mock\n    private ExecutorService executorServiceMock;", "modifier": "@Mock\n    private", "type": "ExecutorService", "declarator": "executorServiceMock", "var_name": "executorServiceMock"}, {"original_string": "@Mock\n    private RequestListViewImpl viewMock;", "modifier": "@Mock\n    private", "type": "RequestListViewImpl", "declarator": "viewMock", "var_name": "viewMock"}, {"original_string": "@Mock\n    private DataSetQueryHelper dataSetQueryHelper;", "modifier": "@Mock\n    private", "type": "DataSetQueryHelper", "declarator": "dataSetQueryHelper", "var_name": "dataSetQueryHelper"}, {"original_string": "@Spy\n    private DataSetLookup dataSetLookup;", "modifier": "@Spy\n    private", "type": "DataSetLookup", "declarator": "dataSetLookup", "var_name": "dataSetLookup"}, {"original_string": "@Mock\n    private ListTable<RequestSummary> extendedPagedTable;", "modifier": "@Mock\n    private", "type": "ListTable<RequestSummary>", "declarator": "extendedPagedTable", "var_name": "extendedPagedTable"}, {"original_string": "@Mock\n    private EventSourceMock<RequestChangedEvent> requestChangedEvent;", "modifier": "@Mock\n    private", "type": "EventSourceMock<RequestChangedEvent>", "declarator": "requestChangedEvent", "var_name": "requestChangedEvent"}, {"original_string": "@Mock\n    private EventSourceMock<JobSelectedEvent> jobSelectedEventMock;", "modifier": "@Mock\n    private", "type": "EventSourceMock<JobSelectedEvent>", "declarator": "jobSelectedEventMock", "var_name": "jobSelectedEventMock"}, {"original_string": "@Mock\n    private PlaceManager placeManager;", "modifier": "@Mock\n    private", "type": "PlaceManager", "declarator": "placeManager", "var_name": "placeManager"}, {"original_string": "@Mock\n    private UberfireBreadcrumbs breadcrumbs;", "modifier": "@Mock\n    private", "type": "UberfireBreadcrumbs", "declarator": "breadcrumbs", "var_name": "breadcrumbs"}, {"original_string": "@Mock\n    private PerspectiveManager perspectiveManager;", "modifier": "@Mock\n    private", "type": "PerspectiveManager", "declarator": "perspectiveManager", "var_name": "perspectiveManager"}, {"original_string": "@Mock\n    private PerspectiveActivity perspectiveActivity;", "modifier": "@Mock\n    private", "type": "PerspectiveActivity", "declarator": "perspectiveActivity", "var_name": "perspectiveActivity"}, {"original_string": "@Mock\n    private ServerTemplateSelectorMenuBuilder serverTemplateSelectorMenuBuilder;", "modifier": "@Mock\n    private", "type": "ServerTemplateSelectorMenuBuilder", "declarator": "serverTemplateSelectorMenuBuilder", "var_name": "serverTemplateSelectorMenuBuilder"}, {"original_string": "@Mock\n    private NewJobPresenter newJobPresenterMock;", "modifier": "@Mock\n    private", "type": "NewJobPresenter", "declarator": "newJobPresenterMock", "var_name": "newJobPresenterMock"}, {"original_string": "@Mock\n    private DataSet dataSet;", "modifier": "@Mock\n    private", "type": "DataSet", "declarator": "dataSet", "var_name": "dataSet"}, {"original_string": "@Spy\n    private FilterSettings filterSettings;", "modifier": "@Spy\n    private", "type": "FilterSettings", "declarator": "filterSettings", "var_name": "filterSettings"}, {"original_string": "@Mock\n    private ManagedInstance<ErrorHandlerBuilder> errorHandlerBuilder;", "modifier": "@Mock\n    private", "type": "ManagedInstance<ErrorHandlerBuilder>", "declarator": "errorHandlerBuilder", "var_name": "errorHandlerBuilder"}, {"original_string": "private RequestListPresenter presenter;", "modifier": "private", "type": "RequestListPresenter", "declarator": "presenter", "var_name": "presenter"}], "file": "jbpm-wb-executor-service/jbpm-wb-executor-service-client/src/test/java/org/jbpm/workbench/es/client/editors/requestlist/RequestListPresenterTest.java"}, "test_case": {"identifier": "testActiveFilterLabelStatus", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testActiveFilterLabelStatus() {\n        ColumnFilter testColumFilter = equalsTo(COLUMN_STATUS,\n                                                Arrays.asList(RequestStatus.CANCELLED.name(),\n                                                              RequestStatus.RUNNING.name()));\n\n        ActiveFilterItem activeFilterItem = presenter.getActiveFilterFromColumnFilter(testColumFilter);\n\n        assertEquals(Constants.INSTANCE.Status(), activeFilterItem.getKey());\n        assertEquals(\"Status: Canceled, Running\", activeFilterItem.getLabelValue());\n        assertNotEquals(testColumFilter.toString(), activeFilterItem.getLabelValue());\n    }", "signature": "void testActiveFilterLabelStatus()", "full_signature": "@Test public void testActiveFilterLabelStatus()", "class_method_signature": "RequestListPresenterTest.testActiveFilterLabelStatus()", "testcase": true, "constructor": false, "invocations": ["equalsTo", "asList", "name", "name", "getActiveFilterFromColumnFilter", "assertEquals", "Status", "getKey", "assertEquals", "getLabelValue", "assertNotEquals", "toString", "getLabelValue"]}, "focal_class": {"identifier": "RequestListPresenter", "superclass": "extends AbstractMultiGridPresenter<RequestSummary, RequestListPresenter.RequestListView>", "interfaces": "", "fields": [{"original_string": "private final org.jbpm.workbench.common.client.resources.i18n.Constants commonConstants = org.jbpm.workbench.common.client.resources.i18n.Constants.INSTANCE;", "modifier": "private final", "type": "org.jbpm.workbench.common.client.resources.i18n.Constants", "declarator": "commonConstants = org.jbpm.workbench.common.client.resources.i18n.Constants.INSTANCE", "var_name": "commonConstants"}, {"original_string": "private Constants constants = Constants.INSTANCE;", "modifier": "private", "type": "Constants", "declarator": "constants = Constants.INSTANCE", "var_name": "constants"}, {"original_string": "private NewJobPresenter newJobPresenter;", "modifier": "private", "type": "NewJobPresenter", "declarator": "newJobPresenter", "var_name": "newJobPresenter"}, {"original_string": "private Command newJobCommand;", "modifier": "private", "type": "Command", "declarator": "newJobCommand", "var_name": "newJobCommand"}, {"original_string": "@Inject\n    private Caller<ExecutorService> executorServices;", "modifier": "@Inject\n    private", "type": "Caller<ExecutorService>", "declarator": "executorServices", "var_name": "executorServices"}, {"original_string": "@Inject\n    private Event<RequestChangedEvent> requestChangedEvent;", "modifier": "@Inject\n    private", "type": "Event<RequestChangedEvent>", "declarator": "requestChangedEvent", "var_name": "requestChangedEvent"}, {"original_string": "@Inject\n    private Event<JobSelectedEvent> jobSelectedEvent;", "modifier": "@Inject\n    private", "type": "Event<JobSelectedEvent>", "declarator": "jobSelectedEvent", "var_name": "jobSelectedEvent"}], "methods": [{"identifier": "RequestListPresenter", "parameters": "()", "modifiers": "public", "return": "", "signature": " RequestListPresenter()", "full_signature": "public  RequestListPresenter()", "class_method_signature": "RequestListPresenter.RequestListPresenter()", "testcase": false, "constructor": true}, {"identifier": "RequestListPresenter", "parameters": "(RequestListViewImpl view,\n                                Caller<ExecutorService> executorServices,\n                                DataSetQueryHelper dataSetQueryHelper,\n                                Event<RequestChangedEvent> requestChangedEvent,\n                                Event<JobSelectedEvent> jobSelectedEvent,\n                                PlaceManager placeManager)", "modifiers": "public", "return": "", "signature": " RequestListPresenter(RequestListViewImpl view,\n                                Caller<ExecutorService> executorServices,\n                                DataSetQueryHelper dataSetQueryHelper,\n                                Event<RequestChangedEvent> requestChangedEvent,\n                                Event<JobSelectedEvent> jobSelectedEvent,\n                                PlaceManager placeManager)", "full_signature": "public  RequestListPresenter(RequestListViewImpl view,\n                                Caller<ExecutorService> executorServices,\n                                DataSetQueryHelper dataSetQueryHelper,\n                                Event<RequestChangedEvent> requestChangedEvent,\n                                Event<JobSelectedEvent> jobSelectedEvent,\n                                PlaceManager placeManager)", "class_method_signature": "RequestListPresenter.RequestListPresenter(RequestListViewImpl view,\n                                Caller<ExecutorService> executorServices,\n                                DataSetQueryHelper dataSetQueryHelper,\n                                Event<RequestChangedEvent> requestChangedEvent,\n                                Event<JobSelectedEvent> jobSelectedEvent,\n                                PlaceManager placeManager)", "testcase": false, "constructor": true}, {"identifier": "setNewJobPresenter", "parameters": "(NewJobPresenter newJobPresenter)", "modifiers": "@Inject protected", "return": "void", "signature": "void setNewJobPresenter(NewJobPresenter newJobPresenter)", "full_signature": "@Inject protected void setNewJobPresenter(NewJobPresenter newJobPresenter)", "class_method_signature": "RequestListPresenter.setNewJobPresenter(NewJobPresenter newJobPresenter)", "testcase": false, "constructor": false}, {"identifier": "setFilterSettingsManager", "parameters": "(final JobListFilterSettingsManager filterSettingsManager)", "modifiers": "@Inject public", "return": "void", "signature": "void setFilterSettingsManager(final JobListFilterSettingsManager filterSettingsManager)", "full_signature": "@Inject public void setFilterSettingsManager(final JobListFilterSettingsManager filterSettingsManager)", "class_method_signature": "RequestListPresenter.setFilterSettingsManager(final JobListFilterSettingsManager filterSettingsManager)", "testcase": false, "constructor": false}, {"identifier": "createListBreadcrumb", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void createListBreadcrumb()", "full_signature": "@Override public void createListBreadcrumb()", "class_method_signature": "RequestListPresenter.createListBreadcrumb()", "testcase": false, "constructor": false}, {"identifier": "setupDetailBreadcrumb", "parameters": "(String detailLabel)", "modifiers": "public", "return": "void", "signature": "void setupDetailBreadcrumb(String detailLabel)", "full_signature": "public void setupDetailBreadcrumb(String detailLabel)", "class_method_signature": "RequestListPresenter.setupDetailBreadcrumb(String detailLabel)", "testcase": false, "constructor": false}, {"identifier": "getDataSetReadyCallback", "parameters": "(final Integer startRange,\n                                                           final FilterSettings tableSettings)", "modifiers": "@Override protected", "return": "DataSetReadyCallback", "signature": "DataSetReadyCallback getDataSetReadyCallback(final Integer startRange,\n                                                           final FilterSettings tableSettings)", "full_signature": "@Override protected DataSetReadyCallback getDataSetReadyCallback(final Integer startRange,\n                                                           final FilterSettings tableSettings)", "class_method_signature": "RequestListPresenter.getDataSetReadyCallback(final Integer startRange,\n                                                           final FilterSettings tableSettings)", "testcase": false, "constructor": false}, {"identifier": "getRequestSummary", "parameters": "(final DataSet dataSet,\n                                               final Integer index)", "modifiers": "protected", "return": "RequestSummary", "signature": "RequestSummary getRequestSummary(final DataSet dataSet,\n                                               final Integer index)", "full_signature": "protected RequestSummary getRequestSummary(final DataSet dataSet,\n                                               final Integer index)", "class_method_signature": "RequestListPresenter.getRequestSummary(final DataSet dataSet,\n                                               final Integer index)", "testcase": false, "constructor": false}, {"identifier": "cancelRequest", "parameters": "(final String deploymentId,\n                              final Long requestId)", "modifiers": "public", "return": "void", "signature": "void cancelRequest(final String deploymentId,\n                              final Long requestId)", "full_signature": "public void cancelRequest(final String deploymentId,\n                              final Long requestId)", "class_method_signature": "RequestListPresenter.cancelRequest(final String deploymentId,\n                              final Long requestId)", "testcase": false, "constructor": false}, {"identifier": "requeueRequest", "parameters": "(final String deploymentId,\n                               final Long requestId)", "modifiers": "public", "return": "void", "signature": "void requeueRequest(final String deploymentId,\n                               final Long requestId)", "full_signature": "public void requeueRequest(final String deploymentId,\n                               final Long requestId)", "class_method_signature": "RequestListPresenter.requeueRequest(final String deploymentId,\n                               final Long requestId)", "testcase": false, "constructor": false}, {"identifier": "getNewJobCommand", "parameters": "()", "modifiers": "protected", "return": "Command", "signature": "Command getNewJobCommand()", "full_signature": "protected Command getNewJobCommand()", "class_method_signature": "RequestListPresenter.getNewJobCommand()", "testcase": false, "constructor": false}, {"identifier": "getMenus", "parameters": "(final Consumer<Menus> menusConsumer)", "modifiers": "@WorkbenchMenu public", "return": "void", "signature": "void getMenus(final Consumer<Menus> menusConsumer)", "full_signature": "@WorkbenchMenu public void getMenus(final Consumer<Menus> menusConsumer)", "class_method_signature": "RequestListPresenter.getMenus(final Consumer<Menus> menusConsumer)", "testcase": false, "constructor": false}, {"identifier": "selectSummaryItem", "parameters": "(final RequestSummary job)", "modifiers": "@Override public", "return": "void", "signature": "void selectSummaryItem(final RequestSummary job)", "full_signature": "@Override public void selectSummaryItem(final RequestSummary job)", "class_method_signature": "RequestListPresenter.selectSummaryItem(final RequestSummary job)", "testcase": false, "constructor": false}, {"identifier": "requestCreated", "parameters": "(@Observes RequestChangedEvent event)", "modifiers": "public", "return": "void", "signature": "void requestCreated(@Observes RequestChangedEvent event)", "full_signature": "public void requestCreated(@Observes RequestChangedEvent event)", "class_method_signature": "RequestListPresenter.requestCreated(@Observes RequestChangedEvent event)", "testcase": false, "constructor": false}, {"identifier": "setupActiveSearchFilters", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void setupActiveSearchFilters()", "full_signature": "@Override public void setupActiveSearchFilters()", "class_method_signature": "RequestListPresenter.setupActiveSearchFilters()", "testcase": false, "constructor": false}, {"identifier": "existActiveSearchFilters", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean existActiveSearchFilters()", "full_signature": "@Override public boolean existActiveSearchFilters()", "class_method_signature": "RequestListPresenter.existActiveSearchFilters()", "testcase": false, "constructor": false}, {"identifier": "getActiveFilterFromColumnFilter", "parameters": "(ColumnFilter columnFilter)", "modifiers": "@Override public", "return": "ActiveFilterItem", "signature": "ActiveFilterItem getActiveFilterFromColumnFilter(ColumnFilter columnFilter)", "full_signature": "@Override public ActiveFilterItem getActiveFilterFromColumnFilter(ColumnFilter columnFilter)", "class_method_signature": "RequestListPresenter.getActiveFilterFromColumnFilter(ColumnFilter columnFilter)", "testcase": false, "constructor": false}, {"identifier": "getStatusColumnFilterDescription", "parameters": "(ColumnFilter columnFilter)", "modifiers": "public", "return": "String", "signature": "String getStatusColumnFilterDescription(ColumnFilter columnFilter)", "full_signature": "public String getStatusColumnFilterDescription(ColumnFilter columnFilter)", "class_method_signature": "RequestListPresenter.getStatusColumnFilterDescription(ColumnFilter columnFilter)", "testcase": false, "constructor": false}, {"identifier": "openProcessInstanceView", "parameters": "(final String processInstanceId)", "modifiers": "public", "return": "void", "signature": "void openProcessInstanceView(final String processInstanceId)", "full_signature": "public void openProcessInstanceView(final String processInstanceId)", "class_method_signature": "RequestListPresenter.openProcessInstanceView(final String processInstanceId)", "testcase": false, "constructor": false}, {"identifier": "getCancelActionCondition", "parameters": "()", "modifiers": "public", "return": "Predicate<RequestSummary>", "signature": "Predicate<RequestSummary> getCancelActionCondition()", "full_signature": "public Predicate<RequestSummary> getCancelActionCondition()", "class_method_signature": "RequestListPresenter.getCancelActionCondition()", "testcase": false, "constructor": false}, {"identifier": "getRequeueActionCondition", "parameters": "()", "modifiers": "public", "return": "Predicate<RequestSummary>", "signature": "Predicate<RequestSummary> getRequeueActionCondition()", "full_signature": "public Predicate<RequestSummary> getRequeueActionCondition()", "class_method_signature": "RequestListPresenter.getRequeueActionCondition()", "testcase": false, "constructor": false}, {"identifier": "getViewProcessActionCondition", "parameters": "()", "modifiers": "public", "return": "Predicate<RequestSummary>", "signature": "Predicate<RequestSummary> getViewProcessActionCondition()", "full_signature": "public Predicate<RequestSummary> getViewProcessActionCondition()", "class_method_signature": "RequestListPresenter.getViewProcessActionCondition()", "testcase": false, "constructor": false}, {"identifier": "getActionConditionFromStatusList", "parameters": "(RequestStatus[] statusList)", "modifiers": "private", "return": "Predicate<RequestSummary>", "signature": "Predicate<RequestSummary> getActionConditionFromStatusList(RequestStatus[] statusList)", "full_signature": "private Predicate<RequestSummary> getActionConditionFromStatusList(RequestStatus[] statusList)", "class_method_signature": "RequestListPresenter.getActionConditionFromStatusList(RequestStatus[] statusList)", "testcase": false, "constructor": false}, {"identifier": "bulkCancel", "parameters": "(List<RequestSummary> jobsSelected)", "modifiers": "public", "return": "void", "signature": "void bulkCancel(List<RequestSummary> jobsSelected)", "full_signature": "public void bulkCancel(List<RequestSummary> jobsSelected)", "class_method_signature": "RequestListPresenter.bulkCancel(List<RequestSummary> jobsSelected)", "testcase": false, "constructor": false}, {"identifier": "bulkRequeue", "parameters": "(List<RequestSummary> jobsSelected)", "modifiers": "public", "return": "void", "signature": "void bulkRequeue(List<RequestSummary> jobsSelected)", "full_signature": "public void bulkRequeue(List<RequestSummary> jobsSelected)", "class_method_signature": "RequestListPresenter.bulkRequeue(List<RequestSummary> jobsSelected)", "testcase": false, "constructor": false}], "file": "jbpm-wb-executor-service/jbpm-wb-executor-service-client/src/main/java/org/jbpm/workbench/es/client/editors/requestlist/RequestListPresenter.java"}, "focal_method": {"identifier": "getActiveFilterFromColumnFilter", "parameters": "(ColumnFilter columnFilter)", "modifiers": "@Override public", "return": "ActiveFilterItem", "body": "@Override\n    public ActiveFilterItem getActiveFilterFromColumnFilter(ColumnFilter columnFilter) {\n        if (columnFilter instanceof CoreFunctionFilter) {\n            CoreFunctionFilter coreFunctionFilter = (CoreFunctionFilter) columnFilter;\n            if (columnFilter.getColumnId().equals(COLUMN_STATUS) &&\n                    (coreFunctionFilter.getType() == CoreFunctionType.IN ||\n                            coreFunctionFilter.getType() == CoreFunctionType.EQUALS_TO)) {\n                return new ActiveFilterItem<>(constants.Status(),\n                                              getStatusColumnFilterDescription(columnFilter),\n                                              null,\n                                              coreFunctionFilter.getParameters(),\n                                              v -> removeActiveFilter(columnFilter));\n            }\n        }\n        return super.getActiveFilterFromColumnFilter(columnFilter);\n    }", "signature": "ActiveFilterItem getActiveFilterFromColumnFilter(ColumnFilter columnFilter)", "full_signature": "@Override public ActiveFilterItem getActiveFilterFromColumnFilter(ColumnFilter columnFilter)", "class_method_signature": "RequestListPresenter.getActiveFilterFromColumnFilter(ColumnFilter columnFilter)", "testcase": false, "constructor": false, "invocations": ["equals", "getColumnId", "getType", "getType", "Status", "getStatusColumnFilterDescription", "getParameters", "removeActiveFilter", "getActiveFilterFromColumnFilter"]}, "repository": {"repo_id": 5405905, "url": "https://github.com/kiegroup/jbpm-wb", "stars": 36, "created": "8/13/2012 11:08:21 PM +00:00", "updates": "2020-01-21T13:08:37+00:00", "fork": "False", "license": "licensed"}}