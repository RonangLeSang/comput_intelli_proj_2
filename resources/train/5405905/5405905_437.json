{"test_class": {"identifier": "ProcessInstanceListPresenterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PERSPECTIVE_ID = PerspectiveIds.PROCESS_INSTANCES;", "modifier": "private static final", "type": "String", "declarator": "PERSPECTIVE_ID = PerspectiveIds.PROCESS_INSTANCES", "var_name": "PERSPECTIVE_ID"}, {"original_string": "private String datasetUId = PROCESS_INSTANCE_DATASET;", "modifier": "private", "type": "String", "declarator": "datasetUId = PROCESS_INSTANCE_DATASET", "var_name": "datasetUId"}, {"original_string": "private org.jbpm.workbench.common.client.resources.i18n.Constants commonConstants;", "modifier": "private", "type": "org.jbpm.workbench.common.client.resources.i18n.Constants", "declarator": "commonConstants", "var_name": "commonConstants"}, {"original_string": "@Mock\n    protected PlaceManager placeManager;", "modifier": "@Mock\n    protected", "type": "PlaceManager", "declarator": "placeManager", "var_name": "placeManager"}, {"original_string": "private CallerMock<ProcessService> remoteProcessServiceCaller;", "modifier": "private", "type": "CallerMock<ProcessService>", "declarator": "remoteProcessServiceCaller", "var_name": "remoteProcessServiceCaller"}, {"original_string": "@Mock\n    private ProcessService processService;", "modifier": "@Mock\n    private", "type": "ProcessService", "declarator": "processService", "var_name": "processService"}, {"original_string": "@Mock\n    private ProcessInstanceListViewImpl viewMock;", "modifier": "@Mock\n    private", "type": "ProcessInstanceListViewImpl", "declarator": "viewMock", "var_name": "viewMock"}, {"original_string": "@Mock\n    private DataSetQueryHelper dataSetQueryHelper;", "modifier": "@Mock\n    private", "type": "DataSetQueryHelper", "declarator": "dataSetQueryHelper", "var_name": "dataSetQueryHelper"}, {"original_string": "@Mock\n    private DataSet dataSet;", "modifier": "@Mock\n    private", "type": "DataSet", "declarator": "dataSet", "var_name": "dataSet"}, {"original_string": "@Mock\n    private DataSet dataSetProcessVar;", "modifier": "@Mock\n    private", "type": "DataSet", "declarator": "dataSetProcessVar", "var_name": "dataSetProcessVar"}, {"original_string": "@Mock\n    private DataSetQueryHelper dataSetQueryHelperDomainSpecific;", "modifier": "@Mock\n    private", "type": "DataSetQueryHelper", "declarator": "dataSetQueryHelperDomainSpecific", "var_name": "dataSetQueryHelperDomainSpecific"}, {"original_string": "@Mock\n    private ListTable extendedPagedTable;", "modifier": "@Mock\n    private", "type": "ListTable", "declarator": "extendedPagedTable", "var_name": "extendedPagedTable"}, {"original_string": "@Spy\n    private FilterSettings filterSettings;", "modifier": "@Spy\n    private", "type": "FilterSettings", "declarator": "filterSettings", "var_name": "filterSettings"}, {"original_string": "@Mock\n    private FilterSettingsJSONMarshaller filterSettingsJSONMarshaller;", "modifier": "@Mock\n    private", "type": "FilterSettingsJSONMarshaller", "declarator": "filterSettingsJSONMarshaller", "var_name": "filterSettingsJSONMarshaller"}, {"original_string": "@Spy\n    private DataSetLookup dataSetLookup;", "modifier": "@Spy\n    private", "type": "DataSetLookup", "declarator": "dataSetLookup", "var_name": "dataSetLookup"}, {"original_string": "@Mock\n    private AuthorizationManager authorizationManager;", "modifier": "@Mock\n    private", "type": "AuthorizationManager", "declarator": "authorizationManager", "var_name": "authorizationManager"}, {"original_string": "@Mock\n    private User identity;", "modifier": "@Mock\n    private", "type": "User", "declarator": "identity", "var_name": "identity"}, {"original_string": "@Mock\n    private ServerTemplateSelectorMenuBuilder serverTemplateSelectorMenuBuilder;", "modifier": "@Mock\n    private", "type": "ServerTemplateSelectorMenuBuilder", "declarator": "serverTemplateSelectorMenuBuilder", "var_name": "serverTemplateSelectorMenuBuilder"}, {"original_string": "@Mock\n    private UberfireBreadcrumbs breadcrumbs;", "modifier": "@Mock\n    private", "type": "UberfireBreadcrumbs", "declarator": "breadcrumbs", "var_name": "breadcrumbs"}, {"original_string": "@Mock\n    private PerspectiveManager perspectiveManager;", "modifier": "@Mock\n    private", "type": "PerspectiveManager", "declarator": "perspectiveManager", "var_name": "perspectiveManager"}, {"original_string": "@Mock\n    private PerspectiveActivity perspectiveActivity;", "modifier": "@Mock\n    private", "type": "PerspectiveActivity", "declarator": "perspectiveActivity", "var_name": "perspectiveActivity"}, {"original_string": "private ArrayList<ProcessInstanceSummary> processInstanceSummaries;", "modifier": "private", "type": "ArrayList<ProcessInstanceSummary>", "declarator": "processInstanceSummaries", "var_name": "processInstanceSummaries"}, {"original_string": "@Mock\n    private FilterSettingsManager filterSettingsManager;", "modifier": "@Mock\n    private", "type": "FilterSettingsManager", "declarator": "filterSettingsManager", "var_name": "filterSettingsManager"}, {"original_string": "@Mock\n    private EventSourceMock<ProcessInstanceSelectionEvent> processInstanceSelectionEvent = new EventSourceMock<>();", "modifier": "@Mock\n    private", "type": "EventSourceMock<ProcessInstanceSelectionEvent>", "declarator": "processInstanceSelectionEvent = new EventSourceMock<>()", "var_name": "processInstanceSelectionEvent"}, {"original_string": "@Mock\n    private ManagedInstance<ErrorHandlerBuilder> errorHandlerBuilder;", "modifier": "@Mock\n    private", "type": "ManagedInstance<ErrorHandlerBuilder>", "declarator": "errorHandlerBuilder", "var_name": "errorHandlerBuilder"}, {"original_string": "@Spy\n    private ErrorHandlerBuilder errorHandler;", "modifier": "@Spy\n    private", "type": "ErrorHandlerBuilder", "declarator": "errorHandler", "var_name": "errorHandler"}, {"original_string": "@InjectMocks\n    private ProcessInstanceListPresenter presenter;", "modifier": "@InjectMocks\n    private", "type": "ProcessInstanceListPresenter", "declarator": "presenter", "var_name": "presenter"}], "file": "jbpm-wb-process-runtime/jbpm-wb-process-runtime-client/src/test/java/org/jbpm/workbench/pr/client/editors/instance/list/ProcessInstanceListPresenterTest.java"}, "test_case": {"identifier": "getDomainSpecifDataForProcessInstancesTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getDomainSpecifDataForProcessInstancesTest() {\n        final DataSetFilter filter = new DataSetFilter();\n        filter.addFilterColumn(equalsTo(COLUMN_PROCESS_ID,\n                                        \"testProc\"));\n        filterSettings.getDataSetLookup().addOperation(filter);\n\n        when(dataSet.getRowCount()).thenReturn(1);//1 process instance\n        when(dataSet.getValueAt(0,\n                                COLUMN_PROCESS_INSTANCE_ID)).thenReturn(Long.valueOf(1));\n\n        when(dataSetProcessVar.getRowCount()).thenReturn(2); //two domain variables associated\n        when(dataSetProcessVar.getValueAt(0,\n                                          PROCESS_INSTANCE_ID)).thenReturn(Long.valueOf(1));\n        String processVariable1 = \"var1\";\n        when(dataSetProcessVar.getValueAt(0,\n                                          VARIABLE_NAME)).thenReturn(processVariable1);\n        when(dataSetProcessVar.getValueAt(0,\n                                          VARIABLE_VALUE)).thenReturn(\"value1\");\n\n        when(dataSetProcessVar.getValueAt(1,\n                                          PROCESS_INSTANCE_ID)).thenReturn(Long.valueOf(1));\n        String processVariable2 = \"var2\";\n        when(dataSetProcessVar.getValueAt(1,\n                                          VARIABLE_NAME)).thenReturn(processVariable2);\n        when(dataSetProcessVar.getValueAt(1,\n                                          VARIABLE_VALUE)).thenReturn(\"value2\");\n\n        Set<String> expectedColumns = new HashSet<String>();\n        expectedColumns.add(processVariable1);\n        expectedColumns.add(processVariable2);\n\n        presenter.getData(new Range(0,\n                                    5));\n\n        ArgumentCaptor<Set> argument = ArgumentCaptor.forClass(Set.class);\n        verify(viewMock).addDomainSpecifColumns(argument.capture());\n\n        assertEquals(expectedColumns,\n                     argument.getValue());\n\n        verify(dataSetQueryHelper).lookupDataSet(anyInt(),\n                                                 any(DataSetReadyCallback.class));\n        verify(dataSetQueryHelperDomainSpecific).lookupDataSet(anyInt(),\n                                                               any(DataSetReadyCallback.class));\n        verify(dataSetQueryHelperDomainSpecific).setLastOrderedColumn(PROCESS_INSTANCE_ID);\n        verify(dataSetQueryHelperDomainSpecific).setLastSortOrder(SortOrder.ASCENDING);\n\n        when(dataSetProcessVar.getRowCount()).thenReturn(1); //one domain variables associated\n        when(dataSetProcessVar.getValueAt(0,\n                                          PROCESS_INSTANCE_ID)).thenReturn(Long.valueOf(1));\n        processVariable1 = \"varTest1\";\n        when(dataSetProcessVar.getValueAt(0,\n                                          VARIABLE_NAME)).thenReturn(processVariable1);\n        when(dataSetProcessVar.getValueAt(0,\n                                          VARIABLE_VALUE)).thenReturn(\"value1\");\n\n        expectedColumns = Collections.singleton(processVariable1);\n\n        presenter.getData(new Range(0,\n                                    5));\n\n        argument = ArgumentCaptor.forClass(Set.class);\n        verify(viewMock, times(2)).addDomainSpecifColumns(argument.capture());\n\n        assertEquals(expectedColumns,\n                     argument.getValue());\n        verify(dataSetQueryHelper,\n               times(2)).lookupDataSet(anyInt(),\n                                       any(DataSetReadyCallback.class));\n        verify(dataSetQueryHelperDomainSpecific,\n               times(2)).lookupDataSet(anyInt(),\n                                       any(DataSetReadyCallback.class));\n    }", "signature": "void getDomainSpecifDataForProcessInstancesTest()", "full_signature": "@Test public void getDomainSpecifDataForProcessInstancesTest()", "class_method_signature": "ProcessInstanceListPresenterTest.getDomainSpecifDataForProcessInstancesTest()", "testcase": true, "constructor": false, "invocations": ["addFilterColumn", "equalsTo", "addOperation", "getDataSetLookup", "thenReturn", "when", "getRowCount", "thenReturn", "when", "getValueAt", "valueOf", "thenReturn", "when", "getRowCount", "thenReturn", "when", "getValueAt", "valueOf", "thenReturn", "when", "getValueAt", "thenReturn", "when", "getValueAt", "thenReturn", "when", "getValueAt", "valueOf", "thenReturn", "when", "getValueAt", "thenReturn", "when", "getValueAt", "add", "add", "getData", "forClass", "addDomainSpecifColumns", "verify", "capture", "assertEquals", "getValue", "lookupDataSet", "verify", "anyInt", "any", "lookupDataSet", "verify", "anyInt", "any", "setLastOrderedColumn", "verify", "setLastSortOrder", "verify", "thenReturn", "when", "getRowCount", "thenReturn", "when", "getValueAt", "valueOf", "thenReturn", "when", "getValueAt", "thenReturn", "when", "getValueAt", "singleton", "getData", "forClass", "addDomainSpecifColumns", "verify", "times", "capture", "assertEquals", "getValue", "lookupDataSet", "verify", "times", "anyInt", "any", "lookupDataSet", "verify", "times", "anyInt", "any"]}, "focal_class": {"identifier": "ProcessInstanceListPresenter", "superclass": "extends AbstractMultiGridPresenter<ProcessInstanceSummary, ProcessInstanceListPresenter.ProcessInstanceListView>", "interfaces": "", "fields": [{"original_string": "protected final List<ProcessInstanceSummary> myProcessInstancesFromDataSet = new ArrayList<ProcessInstanceSummary>();", "modifier": "protected final", "type": "List<ProcessInstanceSummary>", "declarator": "myProcessInstancesFromDataSet = new ArrayList<ProcessInstanceSummary>()", "var_name": "myProcessInstancesFromDataSet"}, {"original_string": "private final Constants constants = Constants.INSTANCE;", "modifier": "private final", "type": "Constants", "declarator": "constants = Constants.INSTANCE", "var_name": "constants"}, {"original_string": "private final org.jbpm.workbench.common.client.resources.i18n.Constants commonConstants = org.jbpm.workbench.common.client.resources.i18n.Constants.INSTANCE;", "modifier": "private final", "type": "org.jbpm.workbench.common.client.resources.i18n.Constants", "declarator": "commonConstants = org.jbpm.workbench.common.client.resources.i18n.Constants.INSTANCE", "var_name": "commonConstants"}, {"original_string": "@Inject\n    private DataSetQueryHelper dataSetQueryHelperDomainSpecific;", "modifier": "@Inject\n    private", "type": "DataSetQueryHelper", "declarator": "dataSetQueryHelperDomainSpecific", "var_name": "dataSetQueryHelperDomainSpecific"}, {"original_string": "@Inject\n    private QuickNewProcessInstancePopup newProcessInstancePopup;", "modifier": "@Inject\n    private", "type": "QuickNewProcessInstancePopup", "declarator": "newProcessInstancePopup", "var_name": "newProcessInstancePopup"}, {"original_string": "private Caller<ProcessService> processService;", "modifier": "private", "type": "Caller<ProcessService>", "declarator": "processService", "var_name": "processService"}, {"original_string": "protected Event<ProcessInstanceSelectionEvent> processInstanceSelectionEvent;", "modifier": "protected", "type": "Event<ProcessInstanceSelectionEvent>", "declarator": "processInstanceSelectionEvent", "var_name": "processInstanceSelectionEvent"}], "methods": [{"identifier": "setProcessInstanceSelectedEvent", "parameters": "(final Event<ProcessInstanceSelectionEvent> processInstanceSelectionEvent)", "modifiers": "@Inject public", "return": "void", "signature": "void setProcessInstanceSelectedEvent(final Event<ProcessInstanceSelectionEvent> processInstanceSelectionEvent)", "full_signature": "@Inject public void setProcessInstanceSelectedEvent(final Event<ProcessInstanceSelectionEvent> processInstanceSelectionEvent)", "class_method_signature": "ProcessInstanceListPresenter.setProcessInstanceSelectedEvent(final Event<ProcessInstanceSelectionEvent> processInstanceSelectionEvent)", "testcase": false, "constructor": false}, {"identifier": "createListBreadcrumb", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void createListBreadcrumb()", "full_signature": "@Override public void createListBreadcrumb()", "class_method_signature": "ProcessInstanceListPresenter.createListBreadcrumb()", "testcase": false, "constructor": false}, {"identifier": "setupDetailBreadcrumb", "parameters": "(String detailLabel)", "modifiers": "public", "return": "void", "signature": "void setupDetailBreadcrumb(String detailLabel)", "full_signature": "public void setupDetailBreadcrumb(String detailLabel)", "class_method_signature": "ProcessInstanceListPresenter.setupDetailBreadcrumb(String detailLabel)", "testcase": false, "constructor": false}, {"identifier": "createDataSetDomainSpecificCallback", "parameters": "(final int startRange,\n                                                                       final FilterSettings tableSettings,\n                                                                       boolean lastPage)", "modifiers": "protected", "return": "DataSetReadyCallback", "signature": "DataSetReadyCallback createDataSetDomainSpecificCallback(final int startRange,\n                                                                       final FilterSettings tableSettings,\n                                                                       boolean lastPage)", "full_signature": "protected DataSetReadyCallback createDataSetDomainSpecificCallback(final int startRange,\n                                                                       final FilterSettings tableSettings,\n                                                                       boolean lastPage)", "class_method_signature": "ProcessInstanceListPresenter.createDataSetDomainSpecificCallback(final int startRange,\n                                                                       final FilterSettings tableSettings,\n                                                                       boolean lastPage)", "testcase": false, "constructor": false}, {"identifier": "filterInitiator", "parameters": "(String variableName,\n                                      String variableValue,\n                                      String initiator)", "modifiers": "protected", "return": "boolean", "signature": "boolean filterInitiator(String variableName,\n                                      String variableValue,\n                                      String initiator)", "full_signature": "protected boolean filterInitiator(String variableName,\n                                      String variableValue,\n                                      String initiator)", "class_method_signature": "ProcessInstanceListPresenter.filterInitiator(String variableName,\n                                      String variableValue,\n                                      String initiator)", "testcase": false, "constructor": false}, {"identifier": "getDataSetReadyCallback", "parameters": "(final Integer startRange,\n                                                           final FilterSettings tableSettings)", "modifiers": "@Override protected", "return": "DataSetReadyCallback", "signature": "DataSetReadyCallback getDataSetReadyCallback(final Integer startRange,\n                                                           final FilterSettings tableSettings)", "full_signature": "@Override protected DataSetReadyCallback getDataSetReadyCallback(final Integer startRange,\n                                                           final FilterSettings tableSettings)", "class_method_signature": "ProcessInstanceListPresenter.getDataSetReadyCallback(final Integer startRange,\n                                                           final FilterSettings tableSettings)", "testcase": false, "constructor": false}, {"identifier": "removeActiveFilter", "parameters": "(final ColumnFilter columnFilter)", "modifiers": "@Override protected", "return": "void", "signature": "void removeActiveFilter(final ColumnFilter columnFilter)", "full_signature": "@Override protected void removeActiveFilter(final ColumnFilter columnFilter)", "class_method_signature": "ProcessInstanceListPresenter.removeActiveFilter(final ColumnFilter columnFilter)", "testcase": false, "constructor": false}, {"identifier": "isFilteredByProcessId", "parameters": "(ColumnFilter filter)", "modifiers": "protected", "return": "String", "signature": "String isFilteredByProcessId(ColumnFilter filter)", "full_signature": "protected String isFilteredByProcessId(ColumnFilter filter)", "class_method_signature": "ProcessInstanceListPresenter.isFilteredByProcessId(ColumnFilter filter)", "testcase": false, "constructor": false}, {"identifier": "isFilteredByProcessId", "parameters": "(List<DataSetOp> ops)", "modifiers": "protected", "return": "String", "signature": "String isFilteredByProcessId(List<DataSetOp> ops)", "full_signature": "protected String isFilteredByProcessId(List<DataSetOp> ops)", "class_method_signature": "ProcessInstanceListPresenter.isFilteredByProcessId(List<DataSetOp> ops)", "testcase": false, "constructor": false}, {"identifier": "getDomainSpecifDataForProcessInstances", "parameters": "(final Integer startRange,\n                                                       final List<ProcessInstanceSummary> instancesFromDataSet,\n                                                       final Boolean lastPage)", "modifiers": "public", "return": "void", "signature": "void getDomainSpecifDataForProcessInstances(final Integer startRange,\n                                                       final List<ProcessInstanceSummary> instancesFromDataSet,\n                                                       final Boolean lastPage)", "full_signature": "public void getDomainSpecifDataForProcessInstances(final Integer startRange,\n                                                       final List<ProcessInstanceSummary> instancesFromDataSet,\n                                                       final Boolean lastPage)", "class_method_signature": "ProcessInstanceListPresenter.getDomainSpecifDataForProcessInstances(final Integer startRange,\n                                                       final List<ProcessInstanceSummary> instancesFromDataSet,\n                                                       final Boolean lastPage)", "testcase": false, "constructor": false}, {"identifier": "createProcessInstanceSummaryFromDataSet", "parameters": "(DataSet dataSet,\n                                                                             int i)", "modifiers": "protected", "return": "ProcessInstanceSummary", "signature": "ProcessInstanceSummary createProcessInstanceSummaryFromDataSet(DataSet dataSet,\n                                                                             int i)", "full_signature": "protected ProcessInstanceSummary createProcessInstanceSummaryFromDataSet(DataSet dataSet,\n                                                                             int i)", "class_method_signature": "ProcessInstanceListPresenter.createProcessInstanceSummaryFromDataSet(DataSet dataSet,\n                                                                             int i)", "testcase": false, "constructor": false}, {"identifier": "newInstanceCreated", "parameters": "(@Observes final NewProcessInstanceEvent pi)", "modifiers": "public", "return": "void", "signature": "void newInstanceCreated(@Observes final NewProcessInstanceEvent pi)", "full_signature": "public void newInstanceCreated(@Observes final NewProcessInstanceEvent pi)", "class_method_signature": "ProcessInstanceListPresenter.newInstanceCreated(@Observes final NewProcessInstanceEvent pi)", "testcase": false, "constructor": false}, {"identifier": "newInstanceCreated", "parameters": "(@Observes final ProcessInstancesUpdateEvent pis)", "modifiers": "public", "return": "void", "signature": "void newInstanceCreated(@Observes final ProcessInstancesUpdateEvent pis)", "full_signature": "public void newInstanceCreated(@Observes final ProcessInstancesUpdateEvent pis)", "class_method_signature": "ProcessInstanceListPresenter.newInstanceCreated(@Observes final ProcessInstancesUpdateEvent pis)", "testcase": false, "constructor": false}, {"identifier": "abortProcessInstance", "parameters": "(String containerId,\n                                     long processInstanceId)", "modifiers": "public", "return": "void", "signature": "void abortProcessInstance(String containerId,\n                                     long processInstanceId)", "full_signature": "public void abortProcessInstance(String containerId,\n                                     long processInstanceId)", "class_method_signature": "ProcessInstanceListPresenter.abortProcessInstance(String containerId,\n                                     long processInstanceId)", "testcase": false, "constructor": false}, {"identifier": "abortProcessInstances", "parameters": "(Map<String, List<Long>> containerInstances)", "modifiers": "public", "return": "void", "signature": "void abortProcessInstances(Map<String, List<Long>> containerInstances)", "full_signature": "public void abortProcessInstances(Map<String, List<Long>> containerInstances)", "class_method_signature": "ProcessInstanceListPresenter.abortProcessInstances(Map<String, List<Long>> containerInstances)", "testcase": false, "constructor": false}, {"identifier": "bulkSignal", "parameters": "(List<ProcessInstanceSummary> processInstances)", "modifiers": "public", "return": "void", "signature": "void bulkSignal(List<ProcessInstanceSummary> processInstances)", "full_signature": "public void bulkSignal(List<ProcessInstanceSummary> processInstances)", "class_method_signature": "ProcessInstanceListPresenter.bulkSignal(List<ProcessInstanceSummary> processInstances)", "testcase": false, "constructor": false}, {"identifier": "bulkAbort", "parameters": "(List<ProcessInstanceSummary> processInstances)", "modifiers": "public", "return": "void", "signature": "void bulkAbort(List<ProcessInstanceSummary> processInstances)", "full_signature": "public void bulkAbort(List<ProcessInstanceSummary> processInstances)", "class_method_signature": "ProcessInstanceListPresenter.bulkAbort(List<ProcessInstanceSummary> processInstances)", "testcase": false, "constructor": false}, {"identifier": "getMenus", "parameters": "(final Consumer<Menus> menusConsumer)", "modifiers": "@WorkbenchMenu public", "return": "void", "signature": "void getMenus(final Consumer<Menus> menusConsumer)", "full_signature": "@WorkbenchMenu public void getMenus(final Consumer<Menus> menusConsumer)", "class_method_signature": "ProcessInstanceListPresenter.getMenus(final Consumer<Menus> menusConsumer)", "testcase": false, "constructor": false}, {"identifier": "signalProcessInstance", "parameters": "(final ProcessInstanceSummary processInstance)", "modifiers": "public", "return": "void", "signature": "void signalProcessInstance(final ProcessInstanceSummary processInstance)", "full_signature": "public void signalProcessInstance(final ProcessInstanceSummary processInstance)", "class_method_signature": "ProcessInstanceListPresenter.signalProcessInstance(final ProcessInstanceSummary processInstance)", "testcase": false, "constructor": false}, {"identifier": "selectSummaryItem", "parameters": "(final ProcessInstanceSummary summary)", "modifiers": "@Override public", "return": "void", "signature": "void selectSummaryItem(final ProcessInstanceSummary summary)", "full_signature": "@Override public void selectSummaryItem(final ProcessInstanceSummary summary)", "class_method_signature": "ProcessInstanceListPresenter.selectSummaryItem(final ProcessInstanceSummary summary)", "testcase": false, "constructor": false}, {"identifier": "refreshDetailBreadcrumb", "parameters": "(@Observes ProcessInstanceSelectionEvent event)", "modifiers": "public", "return": "void", "signature": "void refreshDetailBreadcrumb(@Observes ProcessInstanceSelectionEvent event)", "full_signature": "public void refreshDetailBreadcrumb(@Observes ProcessInstanceSelectionEvent event)", "class_method_signature": "ProcessInstanceListPresenter.refreshDetailBreadcrumb(@Observes ProcessInstanceSelectionEvent event)", "testcase": false, "constructor": false}, {"identifier": "formClosed", "parameters": "(@Observes BeforeClosePlaceEvent closed)", "modifiers": "public", "return": "void", "signature": "void formClosed(@Observes BeforeClosePlaceEvent closed)", "full_signature": "public void formClosed(@Observes BeforeClosePlaceEvent closed)", "class_method_signature": "ProcessInstanceListPresenter.formClosed(@Observes BeforeClosePlaceEvent closed)", "testcase": false, "constructor": false}, {"identifier": "setFilterSettingsManager", "parameters": "(final ProcessInstanceListFilterSettingsManager filterSettingsManager)", "modifiers": "@Inject public", "return": "void", "signature": "void setFilterSettingsManager(final ProcessInstanceListFilterSettingsManager filterSettingsManager)", "full_signature": "@Inject public void setFilterSettingsManager(final ProcessInstanceListFilterSettingsManager filterSettingsManager)", "class_method_signature": "ProcessInstanceListPresenter.setFilterSettingsManager(final ProcessInstanceListFilterSettingsManager filterSettingsManager)", "testcase": false, "constructor": false}, {"identifier": "setProcessService", "parameters": "(final Caller<ProcessService> processService)", "modifiers": "@Inject public", "return": "void", "signature": "void setProcessService(final Caller<ProcessService> processService)", "full_signature": "@Inject public void setProcessService(final Caller<ProcessService> processService)", "class_method_signature": "ProcessInstanceListPresenter.setProcessService(final Caller<ProcessService> processService)", "testcase": false, "constructor": false}, {"identifier": "setupActiveSearchFilters", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void setupActiveSearchFilters()", "full_signature": "@Override public void setupActiveSearchFilters()", "class_method_signature": "ProcessInstanceListPresenter.setupActiveSearchFilters()", "testcase": false, "constructor": false}, {"identifier": "existActiveSearchFilters", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean existActiveSearchFilters()", "full_signature": "@Override public boolean existActiveSearchFilters()", "class_method_signature": "ProcessInstanceListPresenter.existActiveSearchFilters()", "testcase": false, "constructor": false}, {"identifier": "getActiveFilterFromColumnFilter", "parameters": "(ColumnFilter columnFilter)", "modifiers": "@Override public", "return": "ActiveFilterItem", "signature": "ActiveFilterItem getActiveFilterFromColumnFilter(ColumnFilter columnFilter)", "full_signature": "@Override public ActiveFilterItem getActiveFilterFromColumnFilter(ColumnFilter columnFilter)", "class_method_signature": "ProcessInstanceListPresenter.getActiveFilterFromColumnFilter(ColumnFilter columnFilter)", "testcase": false, "constructor": false}, {"identifier": "isStatusFilters", "parameters": "(CoreFunctionFilter columnFilter)", "modifiers": "private", "return": "boolean", "signature": "boolean isStatusFilters(CoreFunctionFilter columnFilter)", "full_signature": "private boolean isStatusFilters(CoreFunctionFilter columnFilter)", "class_method_signature": "ProcessInstanceListPresenter.isStatusFilters(CoreFunctionFilter columnFilter)", "testcase": false, "constructor": false}, {"identifier": "isErrorsFilters", "parameters": "(CoreFunctionFilter columnFilter)", "modifiers": "private", "return": "boolean", "signature": "boolean isErrorsFilters(CoreFunctionFilter columnFilter)", "full_signature": "private boolean isErrorsFilters(CoreFunctionFilter columnFilter)", "class_method_signature": "ProcessInstanceListPresenter.isErrorsFilters(CoreFunctionFilter columnFilter)", "testcase": false, "constructor": false}, {"identifier": "getStatusColumnFilterDescription", "parameters": "(ColumnFilter columnFilter)", "modifiers": "public", "return": "String", "signature": "String getStatusColumnFilterDescription(ColumnFilter columnFilter)", "full_signature": "public String getStatusColumnFilterDescription(ColumnFilter columnFilter)", "class_method_signature": "ProcessInstanceListPresenter.getStatusColumnFilterDescription(ColumnFilter columnFilter)", "testcase": false, "constructor": false}, {"identifier": "openJobsView", "parameters": "(final String pid)", "modifiers": "public", "return": "void", "signature": "void openJobsView(final String pid)", "full_signature": "public void openJobsView(final String pid)", "class_method_signature": "ProcessInstanceListPresenter.openJobsView(final String pid)", "testcase": false, "constructor": false}, {"identifier": "openTaskView", "parameters": "(final String pid)", "modifiers": "public", "return": "void", "signature": "void openTaskView(final String pid)", "full_signature": "public void openTaskView(final String pid)", "class_method_signature": "ProcessInstanceListPresenter.openTaskView(final String pid)", "testcase": false, "constructor": false}, {"identifier": "openErrorView", "parameters": "(final String pid)", "modifiers": "@Override public", "return": "void", "signature": "void openErrorView(final String pid)", "full_signature": "@Override public void openErrorView(final String pid)", "class_method_signature": "ProcessInstanceListPresenter.openErrorView(final String pid)", "testcase": false, "constructor": false}, {"identifier": "getSignalActionCondition", "parameters": "()", "modifiers": "public", "return": "Predicate<ProcessInstanceSummary>", "signature": "Predicate<ProcessInstanceSummary> getSignalActionCondition()", "full_signature": "public Predicate<ProcessInstanceSummary> getSignalActionCondition()", "class_method_signature": "ProcessInstanceListPresenter.getSignalActionCondition()", "testcase": false, "constructor": false}, {"identifier": "getAbortActionCondition", "parameters": "()", "modifiers": "public", "return": "Predicate<ProcessInstanceSummary>", "signature": "Predicate<ProcessInstanceSummary> getAbortActionCondition()", "full_signature": "public Predicate<ProcessInstanceSummary> getAbortActionCondition()", "class_method_signature": "ProcessInstanceListPresenter.getAbortActionCondition()", "testcase": false, "constructor": false}, {"identifier": "getViewJobsActionCondition", "parameters": "()", "modifiers": "public", "return": "Predicate<ProcessInstanceSummary>", "signature": "Predicate<ProcessInstanceSummary> getViewJobsActionCondition()", "full_signature": "public Predicate<ProcessInstanceSummary> getViewJobsActionCondition()", "class_method_signature": "ProcessInstanceListPresenter.getViewJobsActionCondition()", "testcase": false, "constructor": false}, {"identifier": "getViewTasksActionCondition", "parameters": "()", "modifiers": "public", "return": "Predicate<ProcessInstanceSummary>", "signature": "Predicate<ProcessInstanceSummary> getViewTasksActionCondition()", "full_signature": "public Predicate<ProcessInstanceSummary> getViewTasksActionCondition()", "class_method_signature": "ProcessInstanceListPresenter.getViewTasksActionCondition()", "testcase": false, "constructor": false}, {"identifier": "getViewErrorsActionCondition", "parameters": "()", "modifiers": "@Override public", "return": "Predicate<ProcessInstanceSummary>", "signature": "Predicate<ProcessInstanceSummary> getViewErrorsActionCondition()", "full_signature": "@Override public Predicate<ProcessInstanceSummary> getViewErrorsActionCondition()", "class_method_signature": "ProcessInstanceListPresenter.getViewErrorsActionCondition()", "testcase": false, "constructor": false}], "file": "jbpm-wb-process-runtime/jbpm-wb-process-runtime-client/src/main/java/org/jbpm/workbench/pr/client/editors/instance/list/ProcessInstanceListPresenter.java"}, "focal_method": {"identifier": "getDomainSpecifDataForProcessInstances", "parameters": "(final Integer startRange,\n                                                       final List<ProcessInstanceSummary> instancesFromDataSet,\n                                                       final Boolean lastPage)", "modifiers": "public", "return": "void", "body": "public void getDomainSpecifDataForProcessInstances(final Integer startRange,\n                                                       final List<ProcessInstanceSummary> instancesFromDataSet,\n                                                       final Boolean lastPage) {\n        List<Long> processIds = instancesFromDataSet.stream().map(t -> t.getId()).collect(Collectors.toList());\n        FilterSettings variablesTableSettings = filterSettingsManager.getVariablesFilterSettings(processIds);\n        variablesTableSettings.setServerTemplateId(getSelectedServerTemplate());\n        variablesTableSettings.setTablePageSize(-1);\n\n        dataSetQueryHelperDomainSpecific.setDataSetHandler(variablesTableSettings);\n        dataSetQueryHelperDomainSpecific.setCurrentTableSettings(variablesTableSettings);\n        dataSetQueryHelperDomainSpecific.setLastOrderedColumn(PROCESS_INSTANCE_ID);\n        dataSetQueryHelperDomainSpecific.setLastSortOrder(SortOrder.ASCENDING);\n        dataSetQueryHelperDomainSpecific.lookupDataSet(0,\n                                                       createDataSetDomainSpecificCallback(startRange,\n                                                                                           variablesTableSettings,\n                                                                                           lastPage));\n    }", "signature": "void getDomainSpecifDataForProcessInstances(final Integer startRange,\n                                                       final List<ProcessInstanceSummary> instancesFromDataSet,\n                                                       final Boolean lastPage)", "full_signature": "public void getDomainSpecifDataForProcessInstances(final Integer startRange,\n                                                       final List<ProcessInstanceSummary> instancesFromDataSet,\n                                                       final Boolean lastPage)", "class_method_signature": "ProcessInstanceListPresenter.getDomainSpecifDataForProcessInstances(final Integer startRange,\n                                                       final List<ProcessInstanceSummary> instancesFromDataSet,\n                                                       final Boolean lastPage)", "testcase": false, "constructor": false, "invocations": ["collect", "map", "stream", "getId", "toList", "getVariablesFilterSettings", "setServerTemplateId", "getSelectedServerTemplate", "setTablePageSize", "setDataSetHandler", "setCurrentTableSettings", "setLastOrderedColumn", "setLastSortOrder", "lookupDataSet", "createDataSetDomainSpecificCallback"]}, "repository": {"repo_id": 5405905, "url": "https://github.com/kiegroup/jbpm-wb", "stars": 36, "created": "8/13/2012 11:08:21 PM +00:00", "updates": "2020-01-21T13:08:37+00:00", "fork": "False", "license": "licensed"}}