{"test_class": {"identifier": "CaseRolesPresenterTest", "superclass": "extends AbstractCaseInstancePresenterTest", "interfaces": "", "fields": [{"original_string": "private static final String USER = \"User\";", "modifier": "private static final", "type": "String", "declarator": "USER = \"User\"", "var_name": "USER"}, {"original_string": "private static final String GROUP = \"Group\";", "modifier": "private static final", "type": "String", "declarator": "GROUP = \"Group\"", "var_name": "GROUP"}, {"original_string": "private static final String CASE_ROLE = \"Role\";", "modifier": "private static final", "type": "String", "declarator": "CASE_ROLE = \"Role\"", "var_name": "CASE_ROLE"}, {"original_string": "private static final String CASE_DEFINITION_ID = \"org.jbpm.case\";", "modifier": "private static final", "type": "String", "declarator": "CASE_DEFINITION_ID = \"org.jbpm.case\"", "var_name": "CASE_DEFINITION_ID"}, {"original_string": "final CaseInstanceSummary caseInstance = newCaseInstanceSummary();", "modifier": "final", "type": "CaseInstanceSummary", "declarator": "caseInstance = newCaseInstanceSummary()", "var_name": "caseInstance"}, {"original_string": "@Mock\n    CaseRolesPresenter.CaseRolesView view;", "modifier": "@Mock", "type": "CaseRolesPresenter.CaseRolesView", "declarator": "view", "var_name": "view"}, {"original_string": "@Mock\n    CaseRolesValidations caseRolesValidations;", "modifier": "@Mock", "type": "CaseRolesValidations", "declarator": "caseRolesValidations", "var_name": "caseRolesValidations"}, {"original_string": "@Mock\n    CaseRolesPresenter.EditRoleAssignmentView editRoleAssignmentView;", "modifier": "@Mock", "type": "CaseRolesPresenter.EditRoleAssignmentView", "declarator": "editRoleAssignmentView", "var_name": "editRoleAssignmentView"}, {"original_string": "@Spy\n    @InjectMocks\n    CaseRolesPresenter presenter;", "modifier": "@Spy\n    @InjectMocks", "type": "CaseRolesPresenter", "declarator": "presenter", "var_name": "presenter"}, {"original_string": "CaseDefinitionSummary caseDefinition;", "modifier": "", "type": "CaseDefinitionSummary", "declarator": "caseDefinition", "var_name": "caseDefinition"}, {"original_string": "private CaseRoleItemView caseRole;", "modifier": "private", "type": "CaseRoleItemView", "declarator": "caseRole", "var_name": "caseRole"}], "file": "jbpm-wb-case-mgmt/jbpm-wb-case-mgmt-client/src/test/java/org/jbpm/workbench/cm/client/roles/CaseRolesPresenterTest.java"}, "test_case": {"identifier": "testAssignToRole_noAssignmentsProvided", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAssignToRole_noAssignmentsProvided() {\n        final CaseRoleAssignmentSummary newRoleAssignments = CaseRoleAssignmentSummary.builder()\n                                                                                      .name(CASE_ROLE)\n                                                                                      .build();\n        presenter.assignToRole(caseRole,\n                               newRoleAssignments);\n\n        verify(caseRole).showErrorState();\n        final ArgumentCaptor<List> errorList = ArgumentCaptor.forClass(List.class);\n        verify(caseRole).showAssignmentErrors(errorList.capture());\n        final int errorsNumber = 1;\n        assertEquals(errorsNumber,\n                     errorList.getValue().size());\n        assertEquals(PLEASE_INTRO_USER_OR_GROUP_TO_CREATE_ASSIGNMENT,\n                     errorList.getValue().get(0));\n    }", "signature": "void testAssignToRole_noAssignmentsProvided()", "full_signature": "@Test public void testAssignToRole_noAssignmentsProvided()", "class_method_signature": "CaseRolesPresenterTest.testAssignToRole_noAssignmentsProvided()", "testcase": true, "constructor": false, "invocations": ["build", "name", "builder", "assignToRole", "showErrorState", "verify", "forClass", "showAssignmentErrors", "verify", "capture", "assertEquals", "size", "getValue", "assertEquals", "get", "getValue"]}, "focal_class": {"identifier": "CaseRolesPresenter", "superclass": "extends AbstractCaseInstancePresenter<CaseRolesPresenter.CaseRolesView>", "interfaces": "", "fields": [{"original_string": "public static final String SCREEN_ID = \"Case Roles\";", "modifier": "public static final", "type": "String", "declarator": "SCREEN_ID = \"Case Roles\"", "var_name": "SCREEN_ID"}, {"original_string": "public static final String CASE_OWNER_ROLE = \"owner\";", "modifier": "public static final", "type": "String", "declarator": "CASE_OWNER_ROLE = \"owner\"", "var_name": "CASE_OWNER_ROLE"}, {"original_string": "private CaseDefinitionSummary caseDefinition;", "modifier": "private", "type": "CaseDefinitionSummary", "declarator": "caseDefinition", "var_name": "caseDefinition"}, {"original_string": "private List<CaseRoleAssignmentSummary> caseRolesAssignments = new ArrayList<>();", "modifier": "private", "type": "List<CaseRoleAssignmentSummary>", "declarator": "caseRolesAssignments = new ArrayList<>()", "var_name": "caseRolesAssignments"}, {"original_string": "@Inject\n    private CaseRolesValidations caseRolesValidations;", "modifier": "@Inject\n    private", "type": "CaseRolesValidations", "declarator": "caseRolesValidations", "var_name": "caseRolesValidations"}], "methods": [{"identifier": "getTittle", "parameters": "()", "modifiers": "@WorkbenchPartTitle public", "return": "String", "signature": "String getTittle()", "full_signature": "@WorkbenchPartTitle public String getTittle()", "class_method_signature": "CaseRolesPresenter.getTittle()", "testcase": false, "constructor": false}, {"identifier": "setCaseRolesAssignments", "parameters": "(List<CaseRoleAssignmentSummary> caseRolesAssignments)", "modifiers": "", "return": "void", "signature": "void setCaseRolesAssignments(List<CaseRoleAssignmentSummary> caseRolesAssignments)", "full_signature": " void setCaseRolesAssignments(List<CaseRoleAssignmentSummary> caseRolesAssignments)", "class_method_signature": "CaseRolesPresenter.setCaseRolesAssignments(List<CaseRoleAssignmentSummary> caseRolesAssignments)", "testcase": false, "constructor": false}, {"identifier": "getCaseRolesAssignments", "parameters": "()", "modifiers": "", "return": "List<CaseRoleAssignmentSummary>", "signature": "List<CaseRoleAssignmentSummary> getCaseRolesAssignments()", "full_signature": " List<CaseRoleAssignmentSummary> getCaseRolesAssignments()", "class_method_signature": "CaseRolesPresenter.getCaseRolesAssignments()", "testcase": false, "constructor": false}, {"identifier": "clearCaseInstance", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void clearCaseInstance()", "full_signature": "@Override protected void clearCaseInstance()", "class_method_signature": "CaseRolesPresenter.clearCaseInstance()", "testcase": false, "constructor": false}, {"identifier": "loadCaseInstance", "parameters": "(final CaseInstanceSummary cis)", "modifiers": "@Override protected", "return": "void", "signature": "void loadCaseInstance(final CaseInstanceSummary cis)", "full_signature": "@Override protected void loadCaseInstance(final CaseInstanceSummary cis)", "class_method_signature": "CaseRolesPresenter.loadCaseInstance(final CaseInstanceSummary cis)", "testcase": false, "constructor": false}, {"identifier": "loadCaseRoles", "parameters": "(final CaseInstanceSummary cis)", "modifiers": "protected", "return": "void", "signature": "void loadCaseRoles(final CaseInstanceSummary cis)", "full_signature": "protected void loadCaseRoles(final CaseInstanceSummary cis)", "class_method_signature": "CaseRolesPresenter.loadCaseRoles(final CaseInstanceSummary cis)", "testcase": false, "constructor": false}, {"identifier": "filterCaseRoles", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void filterCaseRoles()", "full_signature": "public void filterCaseRoles()", "class_method_signature": "CaseRolesPresenter.filterCaseRoles()", "testcase": false, "constructor": false}, {"identifier": "setCaseRoleActions", "parameters": "(CaseRoleItemView caseRole)", "modifiers": "public", "return": "void", "signature": "void setCaseRoleActions(CaseRoleItemView caseRole)", "full_signature": "public void setCaseRoleActions(CaseRoleItemView caseRole)", "class_method_signature": "CaseRolesPresenter.setCaseRoleActions(CaseRoleItemView caseRole)", "testcase": false, "constructor": false}, {"identifier": "addCaseRoleAction", "parameters": "(CaseRoleItemView caseRole,\n                           CaseRoleAction caseRoleAction)", "modifiers": "", "return": "void", "signature": "void addCaseRoleAction(CaseRoleItemView caseRole,\n                           CaseRoleAction caseRoleAction)", "full_signature": " void addCaseRoleAction(CaseRoleItemView caseRole,\n                           CaseRoleAction caseRoleAction)", "class_method_signature": "CaseRolesPresenter.addCaseRoleAction(CaseRoleItemView caseRole,\n                           CaseRoleAction caseRoleAction)", "testcase": false, "constructor": false}, {"identifier": "setCaseRoleAssignments", "parameters": "(CaseRoleItemView caseRole,\n                                       final int assignmentsListMaxWidth)", "modifiers": "public", "return": "void", "signature": "void setCaseRoleAssignments(CaseRoleItemView caseRole,\n                                       final int assignmentsListMaxWidth)", "full_signature": "public void setCaseRoleAssignments(CaseRoleItemView caseRole,\n                                       final int assignmentsListMaxWidth)", "class_method_signature": "CaseRolesPresenter.setCaseRoleAssignments(CaseRoleItemView caseRole,\n                                       final int assignmentsListMaxWidth)", "testcase": false, "constructor": false}, {"identifier": "assignToRole", "parameters": "(final CaseRoleItemView caseRole,\n                      final CaseRoleAssignmentSummary newRoleAssignments)", "modifiers": "", "return": "void", "signature": "void assignToRole(final CaseRoleItemView caseRole,\n                      final CaseRoleAssignmentSummary newRoleAssignments)", "full_signature": " void assignToRole(final CaseRoleItemView caseRole,\n                      final CaseRoleAssignmentSummary newRoleAssignments)", "class_method_signature": "CaseRolesPresenter.assignToRole(final CaseRoleItemView caseRole,\n                      final CaseRoleAssignmentSummary newRoleAssignments)", "testcase": false, "constructor": false}, {"identifier": "storeRoleAssignments", "parameters": "(final CaseRoleAssignmentSummary currentRoleAssignments,\n                                     List<String> users,\n                                     List<String> groups)", "modifiers": "public", "return": "void", "signature": "void storeRoleAssignments(final CaseRoleAssignmentSummary currentRoleAssignments,\n                                     List<String> users,\n                                     List<String> groups)", "full_signature": "public void storeRoleAssignments(final CaseRoleAssignmentSummary currentRoleAssignments,\n                                     List<String> users,\n                                     List<String> groups)", "class_method_signature": "CaseRolesPresenter.storeRoleAssignments(final CaseRoleAssignmentSummary currentRoleAssignments,\n                                     List<String> users,\n                                     List<String> groups)", "testcase": false, "constructor": false}, {"identifier": "removeUserFromRole", "parameters": "(final String userName,\n                                      final CaseRoleAssignmentSummary caseRoleAssignmentSummary)", "modifiers": "protected", "return": "void", "signature": "void removeUserFromRole(final String userName,\n                                      final CaseRoleAssignmentSummary caseRoleAssignmentSummary)", "full_signature": "protected void removeUserFromRole(final String userName,\n                                      final CaseRoleAssignmentSummary caseRoleAssignmentSummary)", "class_method_signature": "CaseRolesPresenter.removeUserFromRole(final String userName,\n                                      final CaseRoleAssignmentSummary caseRoleAssignmentSummary)", "testcase": false, "constructor": false}, {"identifier": "removeGroupFromRole", "parameters": "(final String groupName,\n                                       final CaseRoleAssignmentSummary caseRoleAssignmentSummary)", "modifiers": "protected", "return": "void", "signature": "void removeGroupFromRole(final String groupName,\n                                       final CaseRoleAssignmentSummary caseRoleAssignmentSummary)", "full_signature": "protected void removeGroupFromRole(final String groupName,\n                                       final CaseRoleAssignmentSummary caseRoleAssignmentSummary)", "class_method_signature": "CaseRolesPresenter.removeGroupFromRole(final String groupName,\n                                       final CaseRoleAssignmentSummary caseRoleAssignmentSummary)", "testcase": false, "constructor": false}], "file": "jbpm-wb-case-mgmt/jbpm-wb-case-mgmt-client/src/main/java/org/jbpm/workbench/cm/client/roles/CaseRolesPresenter.java"}, "focal_method": {"identifier": "assignToRole", "parameters": "(final CaseRoleItemView caseRole,\n                      final CaseRoleAssignmentSummary newRoleAssignments)", "modifiers": "", "return": "void", "body": "void assignToRole(final CaseRoleItemView caseRole,\n                      final CaseRoleAssignmentSummary newRoleAssignments) {\n        if (!newRoleAssignments.hasAssignment()) {\n            caseRole.showErrorState();\n            caseRole.showAssignmentErrors(singletonList(translationService.format(PLEASE_INTRO_USER_OR_GROUP_TO_CREATE_ASSIGNMENT)));\n            return;\n        }\n        List<String> caseRoleAssignmentErrors = caseRolesValidations.validateRolesAssignments(caseDefinition,\n                                                                                              singletonList(newRoleAssignments));\n        if (!caseRoleAssignmentErrors.isEmpty()) {\n            caseRole.showAssignmentErrors(caseRoleAssignmentErrors);\n        } else {\n            caseRole.hideEditRoleAssignmentDialog();\n            final CaseRoleAssignmentSummary currentRoleAssignments = caseRole.getValue();\n            storeRoleAssignments(currentRoleAssignments,\n                                 newRoleAssignments.getUsers(),\n                                 newRoleAssignments.getGroups());\n        }\n    }", "signature": "void assignToRole(final CaseRoleItemView caseRole,\n                      final CaseRoleAssignmentSummary newRoleAssignments)", "full_signature": " void assignToRole(final CaseRoleItemView caseRole,\n                      final CaseRoleAssignmentSummary newRoleAssignments)", "class_method_signature": "CaseRolesPresenter.assignToRole(final CaseRoleItemView caseRole,\n                      final CaseRoleAssignmentSummary newRoleAssignments)", "testcase": false, "constructor": false, "invocations": ["hasAssignment", "showErrorState", "showAssignmentErrors", "singletonList", "format", "validateRolesAssignments", "singletonList", "isEmpty", "showAssignmentErrors", "hideEditRoleAssignmentDialog", "getValue", "storeRoleAssignments", "getUsers", "getGroups"]}, "repository": {"repo_id": 5405905, "url": "https://github.com/kiegroup/jbpm-wb", "stars": 36, "created": "8/13/2012 11:08:21 PM +00:00", "updates": "2020-01-21T13:08:37+00:00", "fork": "False", "license": "licensed"}}