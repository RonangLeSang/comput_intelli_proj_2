{"test_class": {"identifier": "AbstractMultiGridPresenterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    FilterSettingsManager filterSettingsManager;", "modifier": "@Mock", "type": "FilterSettingsManager", "declarator": "filterSettingsManager", "var_name": "filterSettingsManager"}, {"original_string": "@Mock\n    FilterSettings filterSettingsMock;", "modifier": "@Mock", "type": "FilterSettings", "declarator": "filterSettingsMock", "var_name": "filterSettingsMock"}, {"original_string": "@Mock\n    UberfireBreadcrumbs breadcrumbsMock;", "modifier": "@Mock", "type": "UberfireBreadcrumbs", "declarator": "breadcrumbsMock", "var_name": "breadcrumbsMock"}, {"original_string": "@Mock\n    ListView listView;", "modifier": "@Mock", "type": "ListView", "declarator": "listView", "var_name": "listView"}, {"original_string": "@Mock\n    ServerTemplateSelectorMenuBuilder serverTemplateSelectorMenuBuilderMock;", "modifier": "@Mock", "type": "ServerTemplateSelectorMenuBuilder", "declarator": "serverTemplateSelectorMenuBuilderMock", "var_name": "serverTemplateSelectorMenuBuilderMock"}, {"original_string": "@Mock\n    ServerTemplateSelectorMenuBuilder.ServerTemplateSelectorElementView serverTemplateSelectorElementViewMock;", "modifier": "@Mock", "type": "ServerTemplateSelectorMenuBuilder.ServerTemplateSelectorElementView", "declarator": "serverTemplateSelectorElementViewMock", "var_name": "serverTemplateSelectorElementViewMock"}, {"original_string": "@Mock\n    protected DataSetQueryHelper dataSetQueryHelper;", "modifier": "@Mock\n    protected", "type": "DataSetQueryHelper", "declarator": "dataSetQueryHelper", "var_name": "dataSetQueryHelper"}, {"original_string": "@Spy\n    Event<ClearAllActiveFiltersEvent> clearAllActiveFiltersEvent = new EventSourceMock<>();", "modifier": "@Spy", "type": "Event<ClearAllActiveFiltersEvent>", "declarator": "clearAllActiveFiltersEvent = new EventSourceMock<>()", "var_name": "clearAllActiveFiltersEvent"}, {"original_string": "@Spy\n    AbstractMultiGridPresenter presenter;", "modifier": "@Spy", "type": "AbstractMultiGridPresenter", "declarator": "presenter", "var_name": "presenter"}, {"original_string": "@Mock\n    AbstractMultiGridView view;", "modifier": "@Mock", "type": "AbstractMultiGridView", "declarator": "view", "var_name": "view"}], "file": "jbpm-wb-common/jbpm-wb-common-client/src/test/java/org/jbpm/workbench/common/client/list/AbstractMultiGridPresenterTest.java"}, "test_case": {"identifier": "testSaveSearchFilterSettings", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSaveSearchFilterSettings() {\n        String key = \"key\";\n        ListTable listTable = mock(ListTable.class);\n        GridPreferencesStore gridPreferencesStore = mock(GridPreferencesStore.class);\n\n        when(dataSetQueryHelper.getCurrentTableSettings()).thenReturn(filterSettingsMock);\n        when(filterSettingsMock.getKey()).thenReturn(key);\n        when(listView.getListGrid()).thenReturn(listTable);\n        when(listTable.getGridPreferencesStore()).thenReturn(gridPreferencesStore);\n\n        presenter.saveSearchFilterSettings(\"filterName\", mock(Consumer.class));\n\n        ArgumentCaptor<Consumer> booleanConsumerCaptor = ArgumentCaptor.forClass(Consumer.class);\n        verify(filterSettingsManager).saveFilterIntoPreferences(eq(filterSettingsMock),\n                                                                booleanConsumerCaptor.capture());\n        booleanConsumerCaptor.getValue().accept(true);\n        verify(gridPreferencesStore).setPreferenceKey(key);\n        verify(listTable).saveGridToUserPreferences();\n    }", "signature": "void testSaveSearchFilterSettings()", "full_signature": "@Test public void testSaveSearchFilterSettings()", "class_method_signature": "AbstractMultiGridPresenterTest.testSaveSearchFilterSettings()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "getCurrentTableSettings", "thenReturn", "when", "getKey", "thenReturn", "when", "getListGrid", "thenReturn", "when", "getGridPreferencesStore", "saveSearchFilterSettings", "mock", "forClass", "saveFilterIntoPreferences", "verify", "eq", "capture", "accept", "getValue", "setPreferenceKey", "verify", "saveGridToUserPreferences", "verify"]}, "focal_class": {"identifier": "AbstractMultiGridPresenter", "superclass": "extends AbstractScreenListPresenter<T>", "interfaces": "", "fields": [{"original_string": "protected DataSetQueryHelper dataSetQueryHelper;", "modifier": "protected", "type": "DataSetQueryHelper", "declarator": "dataSetQueryHelper", "var_name": "dataSetQueryHelper"}, {"original_string": "protected V view;", "modifier": "protected", "type": "V", "declarator": "view", "var_name": "view"}, {"original_string": "protected AuthorizationManager authorizationManager;", "modifier": "protected", "type": "AuthorizationManager", "declarator": "authorizationManager", "var_name": "authorizationManager"}, {"original_string": "protected FilterSettingsManager filterSettingsManager;", "modifier": "protected", "type": "FilterSettingsManager", "declarator": "filterSettingsManager", "var_name": "filterSettingsManager"}, {"original_string": "@Inject\n    protected DefaultWorkbenchErrorCallback errorCallback;", "modifier": "@Inject\n    protected", "type": "DefaultWorkbenchErrorCallback", "declarator": "errorCallback", "var_name": "errorCallback"}, {"original_string": "protected Event<ClearAllActiveFiltersEvent> clearAllActiveFiltersEvent;", "modifier": "protected", "type": "Event<ClearAllActiveFiltersEvent>", "declarator": "clearAllActiveFiltersEvent", "var_name": "clearAllActiveFiltersEvent"}, {"original_string": "protected ManagedInstance<ErrorHandlerBuilder> errorHandlerBuilder;", "modifier": "protected", "type": "ManagedInstance<ErrorHandlerBuilder>", "declarator": "errorHandlerBuilder", "var_name": "errorHandlerBuilder"}], "methods": [{"identifier": "setErrorHandlerBuilder", "parameters": "(final ManagedInstance<ErrorHandlerBuilder> errorHandlerBuilder)", "modifiers": "@Inject public", "return": "void", "signature": "void setErrorHandlerBuilder(final ManagedInstance<ErrorHandlerBuilder> errorHandlerBuilder)", "full_signature": "@Inject public void setErrorHandlerBuilder(final ManagedInstance<ErrorHandlerBuilder> errorHandlerBuilder)", "class_method_signature": "AbstractMultiGridPresenter.setErrorHandlerBuilder(final ManagedInstance<ErrorHandlerBuilder> errorHandlerBuilder)", "testcase": false, "constructor": false}, {"identifier": "setAuthorizationManager", "parameters": "(final AuthorizationManager authorizationManager)", "modifiers": "@Inject public", "return": "void", "signature": "void setAuthorizationManager(final AuthorizationManager authorizationManager)", "full_signature": "@Inject public void setAuthorizationManager(final AuthorizationManager authorizationManager)", "class_method_signature": "AbstractMultiGridPresenter.setAuthorizationManager(final AuthorizationManager authorizationManager)", "testcase": false, "constructor": false}, {"identifier": "setDataSetQueryHelper", "parameters": "(final DataSetQueryHelper dataSetQueryHelper)", "modifiers": "@Inject public", "return": "void", "signature": "void setDataSetQueryHelper(final DataSetQueryHelper dataSetQueryHelper)", "full_signature": "@Inject public void setDataSetQueryHelper(final DataSetQueryHelper dataSetQueryHelper)", "class_method_signature": "AbstractMultiGridPresenter.setDataSetQueryHelper(final DataSetQueryHelper dataSetQueryHelper)", "testcase": false, "constructor": false}, {"identifier": "setClearAllActiveFiltersEvent", "parameters": "(Event<ClearAllActiveFiltersEvent> clearAllActiveFiltersEvent)", "modifiers": "@Inject public", "return": "void", "signature": "void setClearAllActiveFiltersEvent(Event<ClearAllActiveFiltersEvent> clearAllActiveFiltersEvent)", "full_signature": "@Inject public void setClearAllActiveFiltersEvent(Event<ClearAllActiveFiltersEvent> clearAllActiveFiltersEvent)", "class_method_signature": "AbstractMultiGridPresenter.setClearAllActiveFiltersEvent(Event<ClearAllActiveFiltersEvent> clearAllActiveFiltersEvent)", "testcase": false, "constructor": false}, {"identifier": "setFilterSettingsManager", "parameters": "(final FilterSettingsManager filterSettingsManager)", "modifiers": "public", "return": "void", "signature": "void setFilterSettingsManager(final FilterSettingsManager filterSettingsManager)", "full_signature": "public void setFilterSettingsManager(final FilterSettingsManager filterSettingsManager)", "class_method_signature": "AbstractMultiGridPresenter.setFilterSettingsManager(final FilterSettingsManager filterSettingsManager)", "testcase": false, "constructor": false}, {"identifier": "getDataSetQueryHelper", "parameters": "()", "modifiers": "public", "return": "DataSetQueryHelper", "signature": "DataSetQueryHelper getDataSetQueryHelper()", "full_signature": "public DataSetQueryHelper getDataSetQueryHelper()", "class_method_signature": "AbstractMultiGridPresenter.getDataSetQueryHelper()", "testcase": false, "constructor": false}, {"identifier": "getListView", "parameters": "()", "modifiers": "@Override protected", "return": "ListView", "signature": "ListView getListView()", "full_signature": "@Override protected ListView getListView()", "class_method_signature": "AbstractMultiGridPresenter.getListView()", "testcase": false, "constructor": false}, {"identifier": "getView", "parameters": "()", "modifiers": "@WorkbenchPartView public", "return": "UberView<T>", "signature": "UberView<T> getView()", "full_signature": "@WorkbenchPartView public UberView<T> getView()", "class_method_signature": "AbstractMultiGridPresenter.getView()", "testcase": false, "constructor": false}, {"identifier": "setView", "parameters": "(V view)", "modifiers": "@Inject public", "return": "void", "signature": "void setView(V view)", "full_signature": "@Inject public void setView(V view)", "class_method_signature": "AbstractMultiGridPresenter.setView(V view)", "testcase": false, "constructor": false}, {"identifier": "setupActiveSearchFilters", "parameters": "()", "modifiers": "public abstract", "return": "void", "signature": "void setupActiveSearchFilters()", "full_signature": "public abstract void setupActiveSearchFilters()", "class_method_signature": "AbstractMultiGridPresenter.setupActiveSearchFilters()", "testcase": false, "constructor": false}, {"identifier": "existActiveSearchFilters", "parameters": "()", "modifiers": "public abstract", "return": "boolean", "signature": "boolean existActiveSearchFilters()", "full_signature": "public abstract boolean existActiveSearchFilters()", "class_method_signature": "AbstractMultiGridPresenter.existActiveSearchFilters()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "@PostConstruct public", "return": "void", "signature": "void init()", "full_signature": "@PostConstruct public void init()", "class_method_signature": "AbstractMultiGridPresenter.init()", "testcase": false, "constructor": false}, {"identifier": "onOpen", "parameters": "()", "modifiers": "@Override @OnOpen public", "return": "void", "signature": "void onOpen()", "full_signature": "@Override @OnOpen public void onOpen()", "class_method_signature": "AbstractMultiGridPresenter.onOpen()", "testcase": false, "constructor": false}, {"identifier": "getFilterEventPredicate", "parameters": "()", "modifiers": "public", "return": "Predicate<String>", "signature": "Predicate<String> getFilterEventPredicate()", "full_signature": "public Predicate<String> getFilterEventPredicate()", "class_method_signature": "AbstractMultiGridPresenter.getFilterEventPredicate()", "testcase": false, "constructor": false}, {"identifier": "onBasicFilterAddEvent", "parameters": "(@Observes final BasicFilterAddEvent event)", "modifiers": "public", "return": "void", "signature": "void onBasicFilterAddEvent(@Observes final BasicFilterAddEvent event)", "full_signature": "public void onBasicFilterAddEvent(@Observes final BasicFilterAddEvent event)", "class_method_signature": "AbstractMultiGridPresenter.onBasicFilterAddEvent(@Observes final BasicFilterAddEvent event)", "testcase": false, "constructor": false}, {"identifier": "onBasicFilterRemoveEvent", "parameters": "(@Observes final BasicFilterRemoveEvent event)", "modifiers": "public", "return": "void", "signature": "void onBasicFilterRemoveEvent(@Observes final BasicFilterRemoveEvent event)", "full_signature": "public void onBasicFilterRemoveEvent(@Observes final BasicFilterRemoveEvent event)", "class_method_signature": "AbstractMultiGridPresenter.onBasicFilterRemoveEvent(@Observes final BasicFilterRemoveEvent event)", "testcase": false, "constructor": false}, {"identifier": "onSavedFilterSelectedEvent", "parameters": "(@Observes final SavedFilterSelectedEvent event)", "modifiers": "protected", "return": "void", "signature": "void onSavedFilterSelectedEvent(@Observes final SavedFilterSelectedEvent event)", "full_signature": "protected void onSavedFilterSelectedEvent(@Observes final SavedFilterSelectedEvent event)", "class_method_signature": "AbstractMultiGridPresenter.onSavedFilterSelectedEvent(@Observes final SavedFilterSelectedEvent event)", "testcase": false, "constructor": false}, {"identifier": "setFilterSettings", "parameters": "(final FilterSettings filter, final Consumer<ListTable<T>> readyCallback)", "modifiers": "protected", "return": "void", "signature": "void setFilterSettings(final FilterSettings filter, final Consumer<ListTable<T>> readyCallback)", "full_signature": "protected void setFilterSettings(final FilterSettings filter, final Consumer<ListTable<T>> readyCallback)", "class_method_signature": "AbstractMultiGridPresenter.setFilterSettings(final FilterSettings filter, final Consumer<ListTable<T>> readyCallback)", "testcase": false, "constructor": false}, {"identifier": "getActiveFilterFromColumnFilter", "parameters": "(ColumnFilter columnFilter)", "modifiers": "public", "return": "ActiveFilterItem", "signature": "ActiveFilterItem getActiveFilterFromColumnFilter(ColumnFilter columnFilter)", "full_signature": "public ActiveFilterItem getActiveFilterFromColumnFilter(ColumnFilter columnFilter)", "class_method_signature": "AbstractMultiGridPresenter.getActiveFilterFromColumnFilter(ColumnFilter columnFilter)", "testcase": false, "constructor": false}, {"identifier": "addActiveFilters", "parameters": "(final FilterSettings filter)", "modifiers": "protected", "return": "void", "signature": "void addActiveFilters(final FilterSettings filter)", "full_signature": "protected void addActiveFilters(final FilterSettings filter)", "class_method_signature": "AbstractMultiGridPresenter.addActiveFilters(final FilterSettings filter)", "testcase": false, "constructor": false}, {"identifier": "getData", "parameters": "(final Range visibleRange)", "modifiers": "@Override public", "return": "void", "signature": "void getData(final Range visibleRange)", "full_signature": "@Override public void getData(final Range visibleRange)", "class_method_signature": "AbstractMultiGridPresenter.getData(final Range visibleRange)", "testcase": false, "constructor": false}, {"identifier": "selectSummaryItem", "parameters": "(final T summary)", "modifiers": "protected abstract", "return": "void", "signature": "void selectSummaryItem(final T summary)", "full_signature": "protected abstract void selectSummaryItem(final T summary)", "class_method_signature": "AbstractMultiGridPresenter.selectSummaryItem(final T summary)", "testcase": false, "constructor": false}, {"identifier": "getDataSetReadyCallback", "parameters": "(final Integer startRange,\n                                                                    final FilterSettings tableSettings)", "modifiers": "protected abstract", "return": "DataSetReadyCallback", "signature": "DataSetReadyCallback getDataSetReadyCallback(final Integer startRange,\n                                                                    final FilterSettings tableSettings)", "full_signature": "protected abstract DataSetReadyCallback getDataSetReadyCallback(final Integer startRange,\n                                                                    final FilterSettings tableSettings)", "class_method_signature": "AbstractMultiGridPresenter.getDataSetReadyCallback(final Integer startRange,\n                                                                    final FilterSettings tableSettings)", "testcase": false, "constructor": false}, {"identifier": "addActiveFilter", "parameters": "(final ColumnFilter columnFilter,\n                                                      final String labelKey,\n                                                      final String labelValue,\n                                                      final T value,\n                                                      final Consumer<T> removeCallback)", "modifiers": "protected", "return": "void", "signature": "void addActiveFilter(final ColumnFilter columnFilter,\n                                                      final String labelKey,\n                                                      final String labelValue,\n                                                      final T value,\n                                                      final Consumer<T> removeCallback)", "full_signature": "protected void addActiveFilter(final ColumnFilter columnFilter,\n                                                      final String labelKey,\n                                                      final String labelValue,\n                                                      final T value,\n                                                      final Consumer<T> removeCallback)", "class_method_signature": "AbstractMultiGridPresenter.addActiveFilter(final ColumnFilter columnFilter,\n                                                      final String labelKey,\n                                                      final String labelValue,\n                                                      final T value,\n                                                      final Consumer<T> removeCallback)", "testcase": false, "constructor": false}, {"identifier": "addActiveFilter", "parameters": "(final ColumnFilter columnFilter,\n                                                      final ActiveFilterItem<T> filter)", "modifiers": "protected", "return": "void", "signature": "void addActiveFilter(final ColumnFilter columnFilter,\n                                                      final ActiveFilterItem<T> filter)", "full_signature": "protected void addActiveFilter(final ColumnFilter columnFilter,\n                                                      final ActiveFilterItem<T> filter)", "class_method_signature": "AbstractMultiGridPresenter.addActiveFilter(final ColumnFilter columnFilter,\n                                                      final ActiveFilterItem<T> filter)", "testcase": false, "constructor": false}, {"identifier": "removeActiveFilter", "parameters": "(final ColumnFilter columnFilter)", "modifiers": "protected", "return": "void", "signature": "void removeActiveFilter(final ColumnFilter columnFilter)", "full_signature": "protected void removeActiveFilter(final ColumnFilter columnFilter)", "class_method_signature": "AbstractMultiGridPresenter.removeActiveFilter(final ColumnFilter columnFilter)", "testcase": false, "constructor": false}, {"identifier": "removeActiveFilter", "parameters": "(final ColumnFilter columnFilter,\n                                      final ActiveFilterItem<T> filter)", "modifiers": "protected", "return": "void", "signature": "void removeActiveFilter(final ColumnFilter columnFilter,\n                                      final ActiveFilterItem<T> filter)", "full_signature": "protected void removeActiveFilter(final ColumnFilter columnFilter,\n                                      final ActiveFilterItem<T> filter)", "class_method_signature": "AbstractMultiGridPresenter.removeActiveFilter(final ColumnFilter columnFilter,\n                                      final ActiveFilterItem<T> filter)", "testcase": false, "constructor": false}, {"identifier": "saveSearchFilterSettings", "parameters": "(final String filterName,\n                                         final Consumer<String> callback)", "modifiers": "public", "return": "void", "signature": "void saveSearchFilterSettings(final String filterName,\n                                         final Consumer<String> callback)", "full_signature": "public void saveSearchFilterSettings(final String filterName,\n                                         final Consumer<String> callback)", "class_method_signature": "AbstractMultiGridPresenter.saveSearchFilterSettings(final String filterName,\n                                         final Consumer<String> callback)", "testcase": false, "constructor": false}, {"identifier": "getSearchParameter", "parameters": "(final String parameterId)", "modifiers": "protected", "return": "Optional<String>", "signature": "Optional<String> getSearchParameter(final String parameterId)", "full_signature": "protected Optional<String> getSearchParameter(final String parameterId)", "class_method_signature": "AbstractMultiGridPresenter.getSearchParameter(final String parameterId)", "testcase": false, "constructor": false}, {"identifier": "navigateToPerspective", "parameters": "(final String perspectiveId,\n                                         final String parameterName,\n                                         final String parameterValue)", "modifiers": "protected", "return": "void", "signature": "void navigateToPerspective(final String perspectiveId,\n                                         final String parameterName,\n                                         final String parameterValue)", "full_signature": "protected void navigateToPerspective(final String perspectiveId,\n                                         final String parameterName,\n                                         final String parameterValue)", "class_method_signature": "AbstractMultiGridPresenter.navigateToPerspective(final String perspectiveId,\n                                         final String parameterName,\n                                         final String parameterValue)", "testcase": false, "constructor": false}, {"identifier": "isUserAuthorizedForPerspective", "parameters": "(final String perspectiveId)", "modifiers": "public", "return": "boolean", "signature": "boolean isUserAuthorizedForPerspective(final String perspectiveId)", "full_signature": "public boolean isUserAuthorizedForPerspective(final String perspectiveId)", "class_method_signature": "AbstractMultiGridPresenter.isUserAuthorizedForPerspective(final String perspectiveId)", "testcase": false, "constructor": false}, {"identifier": "openErrorView", "parameters": "(final String parameterId)", "modifiers": "public", "return": "void", "signature": "void openErrorView(final String parameterId)", "full_signature": "public void openErrorView(final String parameterId)", "class_method_signature": "AbstractMultiGridPresenter.openErrorView(final String parameterId)", "testcase": false, "constructor": false}, {"identifier": "getViewErrorsActionCondition", "parameters": "()", "modifiers": "public", "return": "Predicate<T>", "signature": "Predicate<T> getViewErrorsActionCondition()", "full_signature": "public Predicate<T> getViewErrorsActionCondition()", "class_method_signature": "AbstractMultiGridPresenter.getViewErrorsActionCondition()", "testcase": false, "constructor": false}], "file": "jbpm-wb-common/jbpm-wb-common-client/src/main/java/org/jbpm/workbench/common/client/list/AbstractMultiGridPresenter.java"}, "focal_method": {"identifier": "saveSearchFilterSettings", "parameters": "(final String filterName,\n                                         final Consumer<String> callback)", "modifiers": "public", "return": "void", "body": "public void saveSearchFilterSettings(final String filterName,\n                                         final Consumer<String> callback) {\n        final FilterSettings settings = getDataSetQueryHelper().getCurrentTableSettings();\n        settings.setTableName(filterName);\n        settings.setTableDescription(filterName);\n        filterSettingsManager.saveFilterIntoPreferences(settings,\n                                                        state -> {\n                                                            if (state) {\n                                                                getListView().getListGrid().getGridPreferencesStore().setPreferenceKey(settings.getKey());\n                                                                getListView().getListGrid().saveGridToUserPreferences();\n                                                                callback.accept(null);\n                                                            } else {\n                                                                callback.accept(Constants.INSTANCE.FilterWithSameNameAlreadyExists());\n                                                            }\n                                                        });\n    }", "signature": "void saveSearchFilterSettings(final String filterName,\n                                         final Consumer<String> callback)", "full_signature": "public void saveSearchFilterSettings(final String filterName,\n                                         final Consumer<String> callback)", "class_method_signature": "AbstractMultiGridPresenter.saveSearchFilterSettings(final String filterName,\n                                         final Consumer<String> callback)", "testcase": false, "constructor": false, "invocations": ["getCurrentTableSettings", "getDataSetQueryHelper", "setTableName", "setTableDescription", "saveFilterIntoPreferences", "setPreferenceKey", "getGridPreferencesStore", "getListGrid", "getListView", "getKey", "saveGridToUserPreferences", "getListGrid", "getListView", "accept", "accept", "FilterWithSameNameAlreadyExists"]}, "repository": {"repo_id": 5405905, "url": "https://github.com/kiegroup/jbpm-wb", "stars": 36, "created": "8/13/2012 11:08:21 PM +00:00", "updates": "2020-01-21T13:08:37+00:00", "fork": "False", "license": "licensed"}}