{"test_class": {"identifier": "ArrayMergerTest", "superclass": "extends EvaluableExpressionTest<ArrayAccess>", "interfaces": "", "fields": [], "file": "sopremo/sopremo-common/src/test/java/eu/stratosphere/sopremo/expressions/ArrayMergerTest.java"}, "test_case": {"identifier": "shouldNotReuseTargetIfWrongType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldNotReuseTargetIfWrongType() {\n\t\tfinal IJsonNode target = new ObjectNode();\n\n\t\tfinal IArrayNode firstArray = createArrayNode(null, IntNode.valueOf(2), IntNode.valueOf(3));\n\t\tfinal IArrayNode secondArray = createArrayNode(IntNode.valueOf(1));\n\n\t\tfinal IJsonNode result = new ArrayMerger().evaluate(createArrayNode(firstArray, secondArray), target,\n\t\t\tthis.context);\n\n\t\tAssert.assertEquals(createArrayNode(IntNode.valueOf(1), IntNode.valueOf(2), IntNode.valueOf(3)), result);\n\t\tAssert.assertNotSame(target, result);\n\t}", "signature": "void shouldNotReuseTargetIfWrongType()", "full_signature": "@Test public void shouldNotReuseTargetIfWrongType()", "class_method_signature": "ArrayMergerTest.shouldNotReuseTargetIfWrongType()", "testcase": true, "constructor": false, "invocations": ["createArrayNode", "valueOf", "valueOf", "createArrayNode", "valueOf", "evaluate", "createArrayNode", "assertEquals", "createArrayNode", "valueOf", "valueOf", "valueOf", "assertNotSame"]}, "focal_class": {"identifier": "ArrayMerger", "superclass": "extends EvaluationExpression", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = -6884623565349727369L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -6884623565349727369L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "evaluate", "parameters": "(final IJsonNode node, final IJsonNode target, final EvaluationContext context)", "modifiers": "@Override public", "return": "IJsonNode", "signature": "IJsonNode evaluate(final IJsonNode node, final IJsonNode target, final EvaluationContext context)", "full_signature": "@Override public IJsonNode evaluate(final IJsonNode node, final IJsonNode target, final EvaluationContext context)", "class_method_signature": "ArrayMerger.evaluate(final IJsonNode node, final IJsonNode target, final EvaluationContext context)", "testcase": false, "constructor": false}, {"identifier": "isNull", "parameters": "(final IJsonNode value)", "modifiers": "private", "return": "boolean", "signature": "boolean isNull(final IJsonNode value)", "full_signature": "private boolean isNull(final IJsonNode value)", "class_method_signature": "ArrayMerger.isNull(final IJsonNode value)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(final StringBuilder builder)", "modifiers": "@Override public", "return": "void", "signature": "void toString(final StringBuilder builder)", "full_signature": "@Override public void toString(final StringBuilder builder)", "class_method_signature": "ArrayMerger.toString(final StringBuilder builder)", "testcase": false, "constructor": false}], "file": "sopremo/sopremo-common/src/main/java/eu/stratosphere/sopremo/expressions/ArrayMerger.java"}, "focal_method": {"identifier": "evaluate", "parameters": "(final IJsonNode node, final IJsonNode target, final EvaluationContext context)", "modifiers": "@Override public", "return": "IJsonNode", "body": "@Override\n\tpublic IJsonNode evaluate(final IJsonNode node, final IJsonNode target, final EvaluationContext context) {\n\t\tfinal ArrayNode targetArray = SopremoUtil.reinitializeTarget(target, ArrayNode.class);\n\n\t\tfor (final IJsonNode nextNode : (IArrayNode) node)\n\t\t\tif (nextNode != NullNode.getInstance()) {\n\t\t\t\tfinal IArrayNode array = (IArrayNode) nextNode;\n\t\t\t\tfor (int index = 0; index < array.size(); index++)\n\t\t\t\t\tif (targetArray.size() <= index)\n\t\t\t\t\t\ttargetArray.add(array.get(index));\n\t\t\t\t\telse if (this.isNull(targetArray.get(index)) && !this.isNull(array.get(index)))\n\t\t\t\t\t\ttargetArray.set(index, array.get(index));\n\t\t\t}\n\n\t\treturn targetArray;\n\t}", "signature": "IJsonNode evaluate(final IJsonNode node, final IJsonNode target, final EvaluationContext context)", "full_signature": "@Override public IJsonNode evaluate(final IJsonNode node, final IJsonNode target, final EvaluationContext context)", "class_method_signature": "ArrayMerger.evaluate(final IJsonNode node, final IJsonNode target, final EvaluationContext context)", "testcase": false, "constructor": false, "invocations": ["reinitializeTarget", "getInstance", "size", "size", "add", "get", "isNull", "get", "isNull", "get", "set", "get"]}, "repository": {"repo_id": 4726303, "url": "https://github.com/stratosphere-eu/stratosphere-OLD-REPO", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 14146, "license": "licensed"}}