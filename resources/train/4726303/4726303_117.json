{"test_class": {"identifier": "ElementaryOperatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Schema SCHEMA = new ObjectSchema();", "modifier": "private static final", "type": "Schema", "declarator": "SCHEMA = new ObjectSchema()", "var_name": "SCHEMA"}], "file": "sopremo/sopremo-common/src/test/java/eu/stratosphere/sopremo/operator/ElementaryOperatorTest.java"}, "test_case": {"identifier": "getStubClassShouldReturnNullIfNoStub", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void getStubClassShouldReturnNullIfNoStub() {\n\t\tassertEquals(null, new OperatorWithNoStubs().getStubClass());\n\t}", "signature": "void getStubClassShouldReturnNullIfNoStub()", "full_signature": "@Test public void getStubClassShouldReturnNullIfNoStub()", "class_method_signature": "ElementaryOperatorTest.getStubClassShouldReturnNullIfNoStub()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getStubClass"]}, "focal_class": {"identifier": "ElementaryOperator", "superclass": "extends Operator<Self>", "interfaces": "", "fields": [{"original_string": "private static final org.apache.commons.logging.Log LOG = LogFactory\n\t\t.getLog(ElementaryOperator.class);", "modifier": "private static final", "type": "org.apache.commons.logging.Log", "declarator": "LOG = LogFactory\n\t\t.getLog(ElementaryOperator.class)", "var_name": "LOG"}, {"original_string": "private final List<List<? extends EvaluationExpression>> keyExpressions =\n\t\tnew ArrayList<List<? extends EvaluationExpression>>();", "modifier": "private final", "type": "List<List<? extends EvaluationExpression>>", "declarator": "keyExpressions =\n\t\tnew ArrayList<List<? extends EvaluationExpression>>()", "var_name": "keyExpressions"}, {"original_string": "private EvaluationExpression resultProjection = EvaluationExpression.VALUE;", "modifier": "private", "type": "EvaluationExpression", "declarator": "resultProjection = EvaluationExpression.VALUE", "var_name": "resultProjection"}, {"original_string": "private static final long serialVersionUID = 4504792171699882490L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 4504792171699882490L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "getResultProjection", "parameters": "()", "modifiers": "public", "return": "EvaluationExpression", "signature": "EvaluationExpression getResultProjection()", "full_signature": "public EvaluationExpression getResultProjection()", "class_method_signature": "ElementaryOperator.getResultProjection()", "testcase": false, "constructor": false}, {"identifier": "setResultProjection", "parameters": "(final EvaluationExpression resultProjection)", "modifiers": "@Property @Name(preposition = \"into\") public", "return": "void", "signature": "void setResultProjection(final EvaluationExpression resultProjection)", "full_signature": "@Property @Name(preposition = \"into\") public void setResultProjection(final EvaluationExpression resultProjection)", "class_method_signature": "ElementaryOperator.setResultProjection(final EvaluationExpression resultProjection)", "testcase": false, "constructor": false}, {"identifier": "withResultProjection", "parameters": "(final EvaluationExpression resultProjection)", "modifiers": "public", "return": "Self", "signature": "Self withResultProjection(final EvaluationExpression resultProjection)", "full_signature": "public Self withResultProjection(final EvaluationExpression resultProjection)", "class_method_signature": "ElementaryOperator.withResultProjection(final EvaluationExpression resultProjection)", "testcase": false, "constructor": false}, {"identifier": "ElementaryOperator", "parameters": "()", "modifiers": "public", "return": "", "signature": " ElementaryOperator()", "full_signature": "public  ElementaryOperator()", "class_method_signature": "ElementaryOperator.ElementaryOperator()", "testcase": false, "constructor": true}, {"identifier": "ElementaryOperator", "parameters": "(final int minInputs, final int maxInputs)", "modifiers": "public", "return": "", "signature": " ElementaryOperator(final int minInputs, final int maxInputs)", "full_signature": "public  ElementaryOperator(final int minInputs, final int maxInputs)", "class_method_signature": "ElementaryOperator.ElementaryOperator(final int minInputs, final int maxInputs)", "testcase": false, "constructor": true}, {"identifier": "ElementaryOperator", "parameters": "(final int inputs)", "modifiers": "public", "return": "", "signature": " ElementaryOperator(final int inputs)", "full_signature": "public  ElementaryOperator(final int inputs)", "class_method_signature": "ElementaryOperator.ElementaryOperator(final int inputs)", "testcase": false, "constructor": true}, {"identifier": "getKeyExpressions", "parameters": "(\n\t\t\tfinal int inputIndex)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "List<? extends EvaluationExpression>", "signature": "List<? extends EvaluationExpression> getKeyExpressions(\n\t\t\tfinal int inputIndex)", "full_signature": "@SuppressWarnings(\"unchecked\") public List<? extends EvaluationExpression> getKeyExpressions(\n\t\t\tfinal int inputIndex)", "class_method_signature": "ElementaryOperator.getKeyExpressions(\n\t\t\tfinal int inputIndex)", "testcase": false, "constructor": false}, {"identifier": "setKeyExpressions", "parameters": "(final int inputIndex,\n\t\t\tfinal List<? extends EvaluationExpression> keyExpressions)", "modifiers": "@Property(hidden = true) public", "return": "void", "signature": "void setKeyExpressions(final int inputIndex,\n\t\t\tfinal List<? extends EvaluationExpression> keyExpressions)", "full_signature": "@Property(hidden = true) public void setKeyExpressions(final int inputIndex,\n\t\t\tfinal List<? extends EvaluationExpression> keyExpressions)", "class_method_signature": "ElementaryOperator.setKeyExpressions(final int inputIndex,\n\t\t\tfinal List<? extends EvaluationExpression> keyExpressions)", "testcase": false, "constructor": false}, {"identifier": "setKeyExpressions", "parameters": "(final int index,\n\t\t\tfinal EvaluationExpression... keyExpressions)", "modifiers": "public", "return": "void", "signature": "void setKeyExpressions(final int index,\n\t\t\tfinal EvaluationExpression... keyExpressions)", "full_signature": "public void setKeyExpressions(final int index,\n\t\t\tfinal EvaluationExpression... keyExpressions)", "class_method_signature": "ElementaryOperator.setKeyExpressions(final int index,\n\t\t\tfinal EvaluationExpression... keyExpressions)", "testcase": false, "constructor": false}, {"identifier": "withKeyExpression", "parameters": "(final int index,\n\t\t\tfinal EvaluationExpression... keyExpressions)", "modifiers": "public", "return": "Self", "signature": "Self withKeyExpression(final int index,\n\t\t\tfinal EvaluationExpression... keyExpressions)", "full_signature": "public Self withKeyExpression(final int index,\n\t\t\tfinal EvaluationExpression... keyExpressions)", "class_method_signature": "ElementaryOperator.withKeyExpression(final int index,\n\t\t\tfinal EvaluationExpression... keyExpressions)", "testcase": false, "constructor": false}, {"identifier": "withKeyExpressions", "parameters": "(final int index,\n\t\t\tfinal List<? extends EvaluationExpression> keyExpressions)", "modifiers": "public", "return": "Self", "signature": "Self withKeyExpressions(final int index,\n\t\t\tfinal List<? extends EvaluationExpression> keyExpressions)", "full_signature": "public Self withKeyExpressions(final int index,\n\t\t\tfinal List<? extends EvaluationExpression> keyExpressions)", "class_method_signature": "ElementaryOperator.withKeyExpressions(final int index,\n\t\t\tfinal List<? extends EvaluationExpression> keyExpressions)", "testcase": false, "constructor": false}, {"identifier": "asPactModule", "parameters": "(final EvaluationContext context)", "modifiers": "@Override public", "return": "PactModule", "signature": "PactModule asPactModule(final EvaluationContext context)", "full_signature": "@Override public PactModule asPactModule(final EvaluationContext context)", "class_method_signature": "ElementaryOperator.asPactModule(final EvaluationContext context)", "testcase": false, "constructor": false}, {"identifier": "createShortCircuitModule", "parameters": "()", "modifiers": "protected", "return": "PactModule", "signature": "PactModule createShortCircuitModule()", "full_signature": "protected PactModule createShortCircuitModule()", "class_method_signature": "ElementaryOperator.createShortCircuitModule()", "testcase": false, "constructor": false}, {"identifier": "configureContract", "parameters": "(final Contract contract,\n\t\t\tfinal Configuration stubConfiguration,\n\t\t\tfinal EvaluationContext context)", "modifiers": "protected", "return": "void", "signature": "void configureContract(final Contract contract,\n\t\t\tfinal Configuration stubConfiguration,\n\t\t\tfinal EvaluationContext context)", "full_signature": "protected void configureContract(final Contract contract,\n\t\t\tfinal Configuration stubConfiguration,\n\t\t\tfinal EvaluationContext context)", "class_method_signature": "ElementaryOperator.configureContract(final Contract contract,\n\t\t\tfinal Configuration stubConfiguration,\n\t\t\tfinal EvaluationContext context)", "testcase": false, "constructor": false}, {"identifier": "asElementaryOperators", "parameters": "(final EvaluationContext context)", "modifiers": "@Override public", "return": "ElementarySopremoModule", "signature": "ElementarySopremoModule asElementaryOperators(final EvaluationContext context)", "full_signature": "@Override public ElementarySopremoModule asElementaryOperators(final EvaluationContext context)", "class_method_signature": "ElementaryOperator.asElementaryOperators(final EvaluationContext context)", "testcase": false, "constructor": false}, {"identifier": "getContract", "parameters": "(final Schema globalSchema)", "modifiers": "@SuppressWarnings(\"unchecked\") protected", "return": "Contract", "signature": "Contract getContract(final Schema globalSchema)", "full_signature": "@SuppressWarnings(\"unchecked\") protected Contract getContract(final Schema globalSchema)", "class_method_signature": "ElementaryOperator.getContract(final Schema globalSchema)", "testcase": false, "constructor": false}, {"identifier": "getCommonKeyClasses", "parameters": "(\n\t\t\tfinal Schema globalSchema, final int[] keyIndices1,\n\t\t\tfinal int[] keyIndices2)", "modifiers": "private", "return": "Class<? extends Key>[]", "signature": "Class<? extends Key>[] getCommonKeyClasses(\n\t\t\tfinal Schema globalSchema, final int[] keyIndices1,\n\t\t\tfinal int[] keyIndices2)", "full_signature": "private Class<? extends Key>[] getCommonKeyClasses(\n\t\t\tfinal Schema globalSchema, final int[] keyIndices1,\n\t\t\tfinal int[] keyIndices2)", "class_method_signature": "ElementaryOperator.getCommonKeyClasses(\n\t\t\tfinal Schema globalSchema, final int[] keyIndices1,\n\t\t\tfinal int[] keyIndices2)", "testcase": false, "constructor": false}, {"identifier": "getAllKeyExpressions", "parameters": "()", "modifiers": "public", "return": "List<List<? extends EvaluationExpression>>", "signature": "List<List<? extends EvaluationExpression>> getAllKeyExpressions()", "full_signature": "public List<List<? extends EvaluationExpression>> getAllKeyExpressions()", "class_method_signature": "ElementaryOperator.getAllKeyExpressions()", "testcase": false, "constructor": false}, {"identifier": "getKeyClasses", "parameters": "(final Schema globalSchema,\n\t\t\tfinal int[] keyIndices)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "Class<? extends Key>[]", "signature": "Class<? extends Key>[] getKeyClasses(final Schema globalSchema,\n\t\t\tfinal int[] keyIndices)", "full_signature": "@SuppressWarnings(\"unchecked\") private Class<? extends Key>[] getKeyClasses(final Schema globalSchema,\n\t\t\tfinal int[] keyIndices)", "class_method_signature": "ElementaryOperator.getKeyClasses(final Schema globalSchema,\n\t\t\tfinal int[] keyIndices)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ElementaryOperator.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "ElementaryOperator.equals(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ElementaryOperator.toString()", "testcase": false, "constructor": false}, {"identifier": "getKeyIndices", "parameters": "(final Schema globalSchema,\n\t\t\tfinal Iterable<? extends EvaluationExpression> keyExpressions)", "modifiers": "private", "return": "int[]", "signature": "int[] getKeyIndices(final Schema globalSchema,\n\t\t\tfinal Iterable<? extends EvaluationExpression> keyExpressions)", "full_signature": "private int[] getKeyIndices(final Schema globalSchema,\n\t\t\tfinal Iterable<? extends EvaluationExpression> keyExpressions)", "class_method_signature": "ElementaryOperator.getKeyIndices(final Schema globalSchema,\n\t\t\tfinal Iterable<? extends EvaluationExpression> keyExpressions)", "testcase": false, "constructor": false}, {"identifier": "getStubClass", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") protected", "return": "Class<? extends Stub>", "signature": "Class<? extends Stub> getStubClass()", "full_signature": "@SuppressWarnings(\"unchecked\") protected Class<? extends Stub> getStubClass()", "class_method_signature": "ElementaryOperator.getStubClass()", "testcase": false, "constructor": false}], "file": "sopremo/sopremo-common/src/main/java/eu/stratosphere/sopremo/operator/ElementaryOperator.java"}, "focal_method": {"identifier": "getStubClass", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") protected", "return": "Class<? extends Stub>", "body": "@SuppressWarnings(\"unchecked\")\n\tprotected Class<? extends Stub> getStubClass() {\n\t\tfor (final Class<?> stubClass : this.getClass().getDeclaredClasses())\n\t\t\tif ((stubClass.getModifiers() & Modifier.STATIC) != 0\n\t\t\t\t&& Stub.class.isAssignableFrom(stubClass))\n\t\t\t\treturn (Class<? extends Stub>) stubClass;\n\t\treturn null;\n\t}", "signature": "Class<? extends Stub> getStubClass()", "full_signature": "@SuppressWarnings(\"unchecked\") protected Class<? extends Stub> getStubClass()", "class_method_signature": "ElementaryOperator.getStubClass()", "testcase": false, "constructor": false, "invocations": ["getDeclaredClasses", "getClass", "getModifiers", "isAssignableFrom"]}, "repository": {"repo_id": 4726303, "url": "https://github.com/stratosphere-eu/stratosphere-OLD-REPO", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 14146, "license": "licensed"}}