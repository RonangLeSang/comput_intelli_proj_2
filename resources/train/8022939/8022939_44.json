{"test_class": {"identifier": "DefaultMessageFormatFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MessageFormatFactory messageFormatFactory = new DefaultMessageFormatFactory();", "modifier": "private", "type": "MessageFormatFactory", "declarator": "messageFormatFactory = new DefaultMessageFormatFactory()", "var_name": "messageFormatFactory"}], "file": "core/src/test/java/com/vityuk/ginger/provider/format/DefaultMessageFormatFactoryTest.java"}, "test_case": {"identifier": "testDateTimeWithFullStyle", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDateTimeWithFullStyle() throws Exception {\n        MessageFormat messageFormat = messageFormatFactory.create(Locale.ITALY, \"Now is {0, datetime, full}\");\n\n\n        String result = messageFormat.format(new Object[]{createDate()});\n\n        assertThat(result).isNotNull().isEqualTo(\"Now is marted\u00ec 5 febbraio 2013 20.47.23 \" + TimeZone.getDefault().getDisplayName(false, TimeZone.SHORT));\n    }", "signature": "void testDateTimeWithFullStyle()", "full_signature": "@Test public void testDateTimeWithFullStyle()", "class_method_signature": "DefaultMessageFormatFactoryTest.testDateTimeWithFullStyle()", "testcase": true, "constructor": false, "invocations": ["create", "format", "createDate", "isEqualTo", "isNotNull", "assertThat", "etDisplayName(", "etDefault("]}, "focal_class": {"identifier": "DefaultMessageFormatFactory", "superclass": "", "interfaces": "implements MessageFormatFactory", "fields": [{"original_string": "private final Map<String, FormatFactory> formatFactoryRegistry;", "modifier": "private final", "type": "Map<String, FormatFactory>", "declarator": "formatFactoryRegistry", "var_name": "formatFactoryRegistry"}], "methods": [{"identifier": "DefaultMessageFormatFactory", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultMessageFormatFactory()", "full_signature": "public  DefaultMessageFormatFactory()", "class_method_signature": "DefaultMessageFormatFactory.DefaultMessageFormatFactory()", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(Locale locale, String format)", "modifiers": "@Override public", "return": "MessageFormat", "signature": "MessageFormat create(Locale locale, String format)", "full_signature": "@Override public MessageFormat create(Locale locale, String format)", "class_method_signature": "DefaultMessageFormatFactory.create(Locale locale, String format)", "testcase": false, "constructor": false}, {"identifier": "createFactoryRegistry", "parameters": "()", "modifiers": "private static", "return": "Map<String, FormatFactory>", "signature": "Map<String, FormatFactory> createFactoryRegistry()", "full_signature": "private static Map<String, FormatFactory> createFactoryRegistry()", "class_method_signature": "DefaultMessageFormatFactory.createFactoryRegistry()", "testcase": false, "constructor": false}, {"identifier": "isJodaTimeAvailable", "parameters": "()", "modifiers": "private static", "return": "boolean", "signature": "boolean isJodaTimeAvailable()", "full_signature": "private static boolean isJodaTimeAvailable()", "class_method_signature": "DefaultMessageFormatFactory.isJodaTimeAvailable()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/vityuk/ginger/provider/format/DefaultMessageFormatFactory.java"}, "focal_method": {"identifier": "create", "parameters": "(Locale locale, String format)", "modifiers": "@Override public", "return": "MessageFormat", "body": "@Override\n    public MessageFormat create(Locale locale, String format) {\n        checkNotNull(locale);\n        checkNotNull(format);\n        return new ExtendedMessageFormat(format, locale, formatFactoryRegistry);\n    }", "signature": "MessageFormat create(Locale locale, String format)", "full_signature": "@Override public MessageFormat create(Locale locale, String format)", "class_method_signature": "DefaultMessageFormatFactory.create(Locale locale, String format)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "checkNotNull"]}, "repository": {"repo_id": 8022939, "url": "https://github.com/avityuk/ginger", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 7, "size": 273, "license": "licensed"}}