{"test_class": {"identifier": "HtmlUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "mbhd-swing/src/test/java/org/multibit/hd/ui/utils/HtmlUtilsTest.java"}, "test_case": {"identifier": "testApplyBoldFragments_NoFragment", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testApplyBoldFragments_NoFragment() throws Exception {\n\n    // New Configuration relies on default locale\n    Configurations.currentConfiguration = new Configuration();\n\n    String expected = \"<html>hello world</html>\";\n    assertThat(HtmlUtils.applyBoldFragments(\"\",\"hello world\")).isEqualTo(expected);\n\n  }", "signature": "void testApplyBoldFragments_NoFragment()", "full_signature": "@Test public void testApplyBoldFragments_NoFragment()", "class_method_signature": "HtmlUtilsTest.testApplyBoldFragments_NoFragment()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "applyBoldFragments"]}, "focal_class": {"identifier": "HtmlUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "HtmlUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " HtmlUtils()", "full_signature": "private  HtmlUtils()", "class_method_signature": "HtmlUtils.HtmlUtils()", "testcase": false, "constructor": true}, {"identifier": "localiseWithLineBreaks", "parameters": "(String[] lines)", "modifiers": "public static", "return": "String", "signature": "String localiseWithLineBreaks(String[] lines)", "full_signature": "public static String localiseWithLineBreaks(String[] lines)", "class_method_signature": "HtmlUtils.localiseWithLineBreaks(String[] lines)", "testcase": false, "constructor": false}, {"identifier": "localiseWithCenteredLinedBreaks", "parameters": "(String[] lines)", "modifiers": "public static", "return": "String", "signature": "String localiseWithCenteredLinedBreaks(String[] lines)", "full_signature": "public static String localiseWithCenteredLinedBreaks(String[] lines)", "class_method_signature": "HtmlUtils.localiseWithCenteredLinedBreaks(String[] lines)", "testcase": false, "constructor": false}, {"identifier": "applyBoldFragments", "parameters": "(String fragment, String sourceText)", "modifiers": "public static", "return": "String", "signature": "String applyBoldFragments(String fragment, String sourceText)", "full_signature": "public static String applyBoldFragments(String fragment, String sourceText)", "class_method_signature": "HtmlUtils.applyBoldFragments(String fragment, String sourceText)", "testcase": false, "constructor": false}, {"identifier": "stripHtml", "parameters": "(String html)", "modifiers": "public static", "return": "String", "signature": "String stripHtml(String html)", "full_signature": "public static String stripHtml(String html)", "class_method_signature": "HtmlUtils.stripHtml(String html)", "testcase": false, "constructor": false}, {"identifier": "wrapAndLineBreak", "parameters": "(String[] lines, StringBuilder sb)", "modifiers": "private static", "return": "void", "signature": "void wrapAndLineBreak(String[] lines, StringBuilder sb)", "full_signature": "private static void wrapAndLineBreak(String[] lines, StringBuilder sb)", "class_method_signature": "HtmlUtils.wrapAndLineBreak(String[] lines, StringBuilder sb)", "testcase": false, "constructor": false}], "file": "mbhd-swing/src/main/java/org/multibit/hd/ui/utils/HtmlUtils.java"}, "focal_method": {"identifier": "applyBoldFragments", "parameters": "(String fragment, String sourceText)", "modifiers": "public static", "return": "String", "body": "public static String applyBoldFragments(String fragment, String sourceText) {\n\n    if (Strings.isNullOrEmpty(fragment) || Strings.isNullOrEmpty(sourceText)) {\n      return \"<html>\" + sourceText + \"</html>\";\n    }\n\n    String lowerFragment = fragment.toLowerCase();\n    String lowerSource = sourceText.toLowerCase();\n\n    // Find the match locations within the source text\n    int sourceIndex = 0;\n    int matchIndex;\n    StringBuilder sb = new StringBuilder(\"<html>\");\n    do {\n\n      // Match using case-insensitivity\n      matchIndex = lowerSource.indexOf(lowerFragment, sourceIndex);\n\n      if (matchIndex > -1) {\n\n        // Decorate the original source text to preserve case\n        sb.append(sourceText.substring(sourceIndex, matchIndex))\n          .append(\"<b>\")\n          .append(sourceText.substring(matchIndex, matchIndex + fragment.length()))\n          .append(\"</b>\");\n\n        sourceIndex = matchIndex + fragment.length();\n      }\n\n    } while (matchIndex > -1);\n\n    sb.append(sourceText.substring(sourceIndex));\n    sb.append(\"</html>\");\n\n    return sb.toString();\n  }", "signature": "String applyBoldFragments(String fragment, String sourceText)", "full_signature": "public static String applyBoldFragments(String fragment, String sourceText)", "class_method_signature": "HtmlUtils.applyBoldFragments(String fragment, String sourceText)", "testcase": false, "constructor": false, "invocations": ["isNullOrEmpty", "isNullOrEmpty", "toLowerCase", "toLowerCase", "indexOf", "append", "append", "append", "append", "substring", "substring", "length", "length", "append", "substring", "append", "toString"]}, "repository": {"repo_id": 13379760, "url": "https://github.com/Multibit-Legacy/multibit-hd", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 171, "size": 51941, "license": "licensed"}}