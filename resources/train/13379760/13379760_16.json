{"test_class": {"identifier": "BlockExplorersTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String[] EXAMPLE_TX_ID = new String[]{\"58be29550b129655bebae4ceb948768278504fe1378f7a624ab5907019d167da\"};", "modifier": "private static final", "type": "String[]", "declarator": "EXAMPLE_TX_ID = new String[]{\"58be29550b129655bebae4ceb948768278504fe1378f7a624ab5907019d167da\"}", "var_name": "EXAMPLE_TX_ID"}, {"original_string": "private static final String EXPECTED_BIT_EASY_COM_URL = \"https://www.biteasy.com/blockchain/transactions/58be29550b129655bebae4ceb948768278504fe1378f7a624ab5907019d167da\";", "modifier": "private static final", "type": "String", "declarator": "EXPECTED_BIT_EASY_COM_URL = \"https://www.biteasy.com/blockchain/transactions/58be29550b129655bebae4ceb948768278504fe1378f7a624ab5907019d167da\"", "var_name": "EXPECTED_BIT_EASY_COM_URL"}, {"original_string": "private static final String EXPECTED_BITPAY_COM_URL = \"https://insight.bitpay.com/tx/58be29550b129655bebae4ceb948768278504fe1378f7a624ab5907019d167da\";", "modifier": "private static final", "type": "String", "declarator": "EXPECTED_BITPAY_COM_URL = \"https://insight.bitpay.com/tx/58be29550b129655bebae4ceb948768278504fe1378f7a624ab5907019d167da\"", "var_name": "EXPECTED_BITPAY_COM_URL"}, {"original_string": "private static final String EXPECTED_BLOCKCHAIN_INFO_URL = \"https://blockchain.info/tx-index/58be29550b129655bebae4ceb948768278504fe1378f7a624ab5907019d167da\";", "modifier": "private static final", "type": "String", "declarator": "EXPECTED_BLOCKCHAIN_INFO_URL = \"https://blockchain.info/tx-index/58be29550b129655bebae4ceb948768278504fe1378f7a624ab5907019d167da\"", "var_name": "EXPECTED_BLOCKCHAIN_INFO_URL"}, {"original_string": "private static final String EXPECTED_BLOCKONOMICS_CO_URL = \"https://www.blockonomics.co/api/tx?txid=58be29550b129655bebae4ceb948768278504fe1378f7a624ab5907019d167da\";", "modifier": "private static final", "type": "String", "declarator": "EXPECTED_BLOCKONOMICS_CO_URL = \"https://www.blockonomics.co/api/tx?txid=58be29550b129655bebae4ceb948768278504fe1378f7a624ab5907019d167da\"", "var_name": "EXPECTED_BLOCKONOMICS_CO_URL"}, {"original_string": "private static final String EXPECTED_BLOCKR_IO_URL = \"https://btc.blockr.io/tx/info/58be29550b129655bebae4ceb948768278504fe1378f7a624ab5907019d167da\";", "modifier": "private static final", "type": "String", "declarator": "EXPECTED_BLOCKR_IO_URL = \"https://btc.blockr.io/tx/info/58be29550b129655bebae4ceb948768278504fe1378f7a624ab5907019d167da\"", "var_name": "EXPECTED_BLOCKR_IO_URL"}, {"original_string": "private static final String EXPECTED_BLOCK_TRAIL_COM_URL = \"https://www.blocktrail.com/BTC/tx/58be29550b129655bebae4ceb948768278504fe1378f7a624ab5907019d167da\";", "modifier": "private static final", "type": "String", "declarator": "EXPECTED_BLOCK_TRAIL_COM_URL = \"https://www.blocktrail.com/BTC/tx/58be29550b129655bebae4ceb948768278504fe1378f7a624ab5907019d167da\"", "var_name": "EXPECTED_BLOCK_TRAIL_COM_URL"}, {"original_string": "private static final String EXPECTED_SMARTBIT_COM_AU_URL = \"https://www.smartbit.com.au/tx/58be29550b129655bebae4ceb948768278504fe1378f7a624ab5907019d167da\";", "modifier": "private static final", "type": "String", "declarator": "EXPECTED_SMARTBIT_COM_AU_URL = \"https://www.smartbit.com.au/tx/58be29550b129655bebae4ceb948768278504fe1378f7a624ab5907019d167da\"", "var_name": "EXPECTED_SMARTBIT_COM_AU_URL"}], "file": "mbhd-core/src/test/java/org/multibit/hd/core/blockexplorer/BlockExplorersTest.java"}, "test_case": {"identifier": "testGetAll", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetAll() {\n    Collection<BlockExplorer> allBlockExplorers = BlockExplorers.getAll();\n\n    Iterator<BlockExplorer> iterator = allBlockExplorers.iterator();\n\n    assertThat(iterator.next() instanceof BitEasyComBlockExplorer).isTrue();\n    assertThat(iterator.next() instanceof BitPayComBlockExplorer).isTrue();\n    assertThat(iterator.next() instanceof BlockChainInfoBlockExplorer).isTrue();\n    assertThat(iterator.next() instanceof BlockonomicsBlockExplorer).isTrue();\n    assertThat(iterator.next() instanceof BlockrIoBlockExplorer).isTrue();\n    assertThat(iterator.next() instanceof BlockTrailComBlockExplorer).isTrue();\n    assertThat(iterator.next() instanceof SmartBitComAuBlockExplorer).isTrue();\n\n    // No more\n    assertThat(iterator.hasNext()).isFalse();\n  }", "signature": "void testGetAll()", "full_signature": "@Test public void testGetAll()", "class_method_signature": "BlockExplorersTest.testGetAll()", "testcase": true, "constructor": false, "invocations": ["getAll", "iterator", "isTrue", "assertThat", "next", "isTrue", "assertThat", "next", "isTrue", "assertThat", "next", "isTrue", "assertThat", "next", "isTrue", "assertThat", "next", "isTrue", "assertThat", "next", "isTrue", "assertThat", "next", "isFalse", "assertThat", "hasNext"]}, "focal_class": {"identifier": "BlockExplorers", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final List<BlockExplorer> allBlockExplorers = Lists.newArrayList();", "modifier": "private static final", "type": "List<BlockExplorer>", "declarator": "allBlockExplorers = Lists.newArrayList()", "var_name": "allBlockExplorers"}], "methods": [{"identifier": "BlockExplorers", "parameters": "()", "modifiers": "private", "return": "", "signature": " BlockExplorers()", "full_signature": "private  BlockExplorers()", "class_method_signature": "BlockExplorers.BlockExplorers()", "testcase": false, "constructor": true}, {"identifier": "getAll", "parameters": "()", "modifiers": "public static", "return": "List<BlockExplorer>", "signature": "List<BlockExplorer> getAll()", "full_signature": "public static List<BlockExplorer> getAll()", "class_method_signature": "BlockExplorers.getAll()", "testcase": false, "constructor": false}, {"identifier": "getBlockExplorerById", "parameters": "(String id)", "modifiers": "public static", "return": "Optional<BlockExplorer>", "signature": "Optional<BlockExplorer> getBlockExplorerById(String id)", "full_signature": "public static Optional<BlockExplorer> getBlockExplorerById(String id)", "class_method_signature": "BlockExplorers.getBlockExplorerById(String id)", "testcase": false, "constructor": false}, {"identifier": "getDefaultBlockExplorer", "parameters": "()", "modifiers": "public static", "return": "BlockExplorer", "signature": "BlockExplorer getDefaultBlockExplorer()", "full_signature": "public static BlockExplorer getDefaultBlockExplorer()", "class_method_signature": "BlockExplorers.getDefaultBlockExplorer()", "testcase": false, "constructor": false}], "file": "mbhd-core/src/main/java/org/multibit/hd/core/blockexplorer/BlockExplorers.java"}, "focal_method": {"identifier": "getAll", "parameters": "()", "modifiers": "public static", "return": "List<BlockExplorer>", "body": "public static List<BlockExplorer> getAll() {\n    return allBlockExplorers;\n  }", "signature": "List<BlockExplorer> getAll()", "full_signature": "public static List<BlockExplorer> getAll()", "class_method_signature": "BlockExplorers.getAll()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 13379760, "url": "https://github.com/Multibit-Legacy/multibit-hd", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 171, "size": 51941, "license": "licensed"}}