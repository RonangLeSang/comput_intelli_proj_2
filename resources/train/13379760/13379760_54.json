{"test_class": {"identifier": "ExternalDataListeningServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(ExternalDataListeningServiceTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(ExternalDataListeningServiceTest.class)", "var_name": "log"}, {"original_string": "private static final String PAYMENT_REQUEST_BIP21_MINIMUM = \"bitcoin:1AhN6rPdrMuKBGFDKR1k9A8SCLYaNgXhty\";", "modifier": "private static final", "type": "String", "declarator": "PAYMENT_REQUEST_BIP21_MINIMUM = \"bitcoin:1AhN6rPdrMuKBGFDKR1k9A8SCLYaNgXhty\"", "var_name": "PAYMENT_REQUEST_BIP21_MINIMUM"}, {"original_string": "private static final String PAYMENT_REQUEST_BIP21 = \"bitcoin:1AhN6rPdrMuKBGFDKR1k9A8SCLYaNgXhty?\" +\n    \"amount=0.01&\" +\n    \"label=Please%20donate%20to%20multibit.org\";", "modifier": "private static final", "type": "String", "declarator": "PAYMENT_REQUEST_BIP21 = \"bitcoin:1AhN6rPdrMuKBGFDKR1k9A8SCLYaNgXhty?\" +\n    \"amount=0.01&\" +\n    \"label=Please%20donate%20to%20multibit.org\"", "var_name": "PAYMENT_REQUEST_BIP21"}, {"original_string": "private static final String PAYMENT_REQUEST_BIP72_URL_MULTIPLE = \"bitcoin:1AhN6rPdrMuKBGFDKR1k9A8SCLYaNgXhty?\" +\n    \"r=https://localhost:8443/abc123&\" +\n    \"r1=https://localhost:8443/def456&\" +\n    \"r2=https://localhost:8443/ghi789&\" +\n    \"amount=1\";", "modifier": "private static final", "type": "String", "declarator": "PAYMENT_REQUEST_BIP72_URL_MULTIPLE = \"bitcoin:1AhN6rPdrMuKBGFDKR1k9A8SCLYaNgXhty?\" +\n    \"r=https://localhost:8443/abc123&\" +\n    \"r1=https://localhost:8443/def456&\" +\n    \"r2=https://localhost:8443/ghi789&\" +\n    \"amount=1\"", "var_name": "PAYMENT_REQUEST_BIP72_URL_MULTIPLE"}, {"original_string": "private static final String PAYMENT_REQUEST_BIP72_URL_SINGLE = \"bitcoin:1AhN6rPdrMuKBGFDKR1k9A8SCLYaNgXhty?\" +\n    \"r=https://localhost:8443/abc123&\" +\n    \"amount=1\";", "modifier": "private static final", "type": "String", "declarator": "PAYMENT_REQUEST_BIP72_URL_SINGLE = \"bitcoin:1AhN6rPdrMuKBGFDKR1k9A8SCLYaNgXhty?\" +\n    \"r=https://localhost:8443/abc123&\" +\n    \"amount=1\"", "var_name": "PAYMENT_REQUEST_BIP72_URL_SINGLE"}, {"original_string": "private static final String PAYMENT_REQUEST_BIP72_FILE_WINDOWS_SINGLE = \"src\\\\test\\\\resources\\\\fixtures\\\\payments\\\\localhost-signed.bitcoinpaymentrequest\";", "modifier": "private static final", "type": "String", "declarator": "PAYMENT_REQUEST_BIP72_FILE_WINDOWS_SINGLE = \"src\\\\test\\\\resources\\\\fixtures\\\\payments\\\\localhost-signed.bitcoinpaymentrequest\"", "var_name": "PAYMENT_REQUEST_BIP72_FILE_WINDOWS_SINGLE"}, {"original_string": "private static final String PAYMENT_REQUEST_BIP72_FILE_JAVA_SINGLE = \"src/test/resources/fixtures/payments/localhost-signed.bitcoinpaymentrequest\";", "modifier": "private static final", "type": "String", "declarator": "PAYMENT_REQUEST_BIP72_FILE_JAVA_SINGLE = \"src/test/resources/fixtures/payments/localhost-signed.bitcoinpaymentrequest\"", "var_name": "PAYMENT_REQUEST_BIP72_FILE_JAVA_SINGLE"}, {"original_string": "private ServerSocket serverSocket = null;", "modifier": "private", "type": "ServerSocket", "declarator": "serverSocket = null", "var_name": "serverSocket"}, {"original_string": "private ExternalDataListeningService testObject;", "modifier": "private", "type": "ExternalDataListeningService", "declarator": "testObject", "var_name": "testObject"}], "file": "mbhd-swing/src/test/java/org/multibit/hd/ui/services/ExternalDataListeningServiceTest.java"}, "test_case": {"identifier": "testNotify_BIP21", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testNotify_BIP21() throws Exception {\n\n    // Arrange to grab the server socket first\n    serverSocket = new ServerSocket(\n      ExternalDataListeningService.MULTIBIT_HD_NETWORK_SOCKET,\n      10,\n      InetAddress.getLoopbackAddress()\n    );\n\n    String[] args = new String[]{\n      PAYMENT_REQUEST_BIP21\n    };\n\n    testObject = new ExternalDataListeningService(args);\n    testObject.start();\n\n    Socket client = serverSocket.accept();\n\n    String text;\n    try (InputStreamReader reader = new InputStreamReader(client.getInputStream(), Charsets.UTF_8)) {\n      text = CharStreams.toString(reader);\n    }\n    client.close();\n\n    // Act\n    String expectedMessage = ExternalDataListeningService.MESSAGE_START + PAYMENT_REQUEST_BIP21 + ExternalDataListeningService.MESSAGE_END;\n\n    // Assert\n    assertThat(text).isEqualTo(expectedMessage);\n\n    // Don't crash the JVM\n    CoreEvents.fireShutdownEvent(ShutdownEvent.ShutdownType.SOFT);\n\n    assertThat(testObject.getServerSocket().isPresent()).isFalse();\n  }", "signature": "void testNotify_BIP21()", "full_signature": "@Test public void testNotify_BIP21()", "class_method_signature": "ExternalDataListeningServiceTest.testNotify_BIP21()", "testcase": true, "constructor": false, "invocations": ["getLoopbackAddress", "start", "accept", "getInputStream", "toString", "close", "isEqualTo", "assertThat", "fireShutdownEvent", "isFalse", "assertThat", "isPresent", "getServerSocket"]}, "focal_class": {"identifier": "ExternalDataListeningService", "superclass": "extends AbstractService", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(ExternalDataListeningService.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(ExternalDataListeningService.class)", "var_name": "log"}, {"original_string": "public static final int MULTIBIT_HD_NETWORK_SOCKET = 8330;", "modifier": "public static final", "type": "int", "declarator": "MULTIBIT_HD_NETWORK_SOCKET = 8330", "var_name": "MULTIBIT_HD_NETWORK_SOCKET"}, {"original_string": "public static final String MESSAGE_START = \"$$MBHD-Start$$\";", "modifier": "public static final", "type": "String", "declarator": "MESSAGE_START = \"$$MBHD-Start$$\"", "var_name": "MESSAGE_START"}, {"original_string": "public static final String MESSAGE_END = \"$$MBHD-End$$\";", "modifier": "public static final", "type": "String", "declarator": "MESSAGE_END = \"$$MBHD-End$$\"", "var_name": "MESSAGE_END"}, {"original_string": "static final Queue<AlertModel> alertModelQueue = Queues.newArrayBlockingQueue(50);", "modifier": "static final", "type": "Queue<AlertModel>", "declarator": "alertModelQueue = Queues.newArrayBlockingQueue(50)", "var_name": "alertModelQueue"}, {"original_string": "private Optional<ServerSocket> serverSocket = Optional.absent();", "modifier": "private", "type": "Optional<ServerSocket>", "declarator": "serverSocket = Optional.absent()", "var_name": "serverSocket"}, {"original_string": "private final Optional<String[]> args;", "modifier": "private final", "type": "Optional<String[]>", "declarator": "args", "var_name": "args"}], "methods": [{"identifier": "ExternalDataListeningService", "parameters": "(String[] args)", "modifiers": "public", "return": "", "signature": " ExternalDataListeningService(String[] args)", "full_signature": "public  ExternalDataListeningService(String[] args)", "class_method_signature": "ExternalDataListeningService.ExternalDataListeningService(String[] args)", "testcase": false, "constructor": true}, {"identifier": "startInternal", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean startInternal()", "full_signature": "@Override public boolean startInternal()", "class_method_signature": "ExternalDataListeningService.startInternal()", "testcase": false, "constructor": false}, {"identifier": "shutdownNowInternal", "parameters": "(ShutdownEvent.ShutdownType shutdownType)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean shutdownNowInternal(ShutdownEvent.ShutdownType shutdownType)", "full_signature": "@Override protected boolean shutdownNowInternal(ShutdownEvent.ShutdownType shutdownType)", "class_method_signature": "ExternalDataListeningService.shutdownNowInternal(ShutdownEvent.ShutdownType shutdownType)", "testcase": false, "constructor": false}, {"identifier": "writeToSocket", "parameters": "(String message)", "modifiers": "public static synchronized", "return": "void", "signature": "void writeToSocket(String message)", "full_signature": "public static synchronized void writeToSocket(String message)", "class_method_signature": "ExternalDataListeningService.writeToSocket(String message)", "testcase": false, "constructor": false}, {"identifier": "getAlertModelQueue", "parameters": "()", "modifiers": "public", "return": "Queue<AlertModel>", "signature": "Queue<AlertModel> getAlertModelQueue()", "full_signature": "public Queue<AlertModel> getAlertModelQueue()", "class_method_signature": "ExternalDataListeningService.getAlertModelQueue()", "testcase": false, "constructor": false}, {"identifier": "getServerSocket", "parameters": "()", "modifiers": "", "return": "Optional<ServerSocket>", "signature": "Optional<ServerSocket> getServerSocket()", "full_signature": " Optional<ServerSocket> getServerSocket()", "class_method_signature": "ExternalDataListeningService.getServerSocket()", "testcase": false, "constructor": false}, {"identifier": "parseRawData", "parameters": "(String rawData)", "modifiers": "public static", "return": "void", "signature": "void parseRawData(String rawData)", "full_signature": "public static void parseRawData(String rawData)", "class_method_signature": "ExternalDataListeningService.parseRawData(String rawData)", "testcase": false, "constructor": false}, {"identifier": "addBitcoinURIToQueue", "parameters": "(final Optional<BitcoinURI> bitcoinURI, final String failureMessage)", "modifiers": "private static", "return": "void", "signature": "void addBitcoinURIToQueue(final Optional<BitcoinURI> bitcoinURI, final String failureMessage)", "full_signature": "private static void addBitcoinURIToQueue(final Optional<BitcoinURI> bitcoinURI, final String failureMessage)", "class_method_signature": "ExternalDataListeningService.addBitcoinURIToQueue(final Optional<BitcoinURI> bitcoinURI, final String failureMessage)", "testcase": false, "constructor": false}, {"identifier": "addPaymentSessionToQueue", "parameters": "(Optional<PaymentSessionSummary> paymentSessionSummary, String failureMessage)", "modifiers": "private static", "return": "void", "signature": "void addPaymentSessionToQueue(Optional<PaymentSessionSummary> paymentSessionSummary, String failureMessage)", "full_signature": "private static void addPaymentSessionToQueue(Optional<PaymentSessionSummary> paymentSessionSummary, String failureMessage)", "class_method_signature": "ExternalDataListeningService.addPaymentSessionToQueue(Optional<PaymentSessionSummary> paymentSessionSummary, String failureMessage)", "testcase": false, "constructor": false}, {"identifier": "purgeAlertModelQueue", "parameters": "()", "modifiers": "public static synchronized", "return": "void", "signature": "void purgeAlertModelQueue()", "full_signature": "public static synchronized void purgeAlertModelQueue()", "class_method_signature": "ExternalDataListeningService.purgeAlertModelQueue()", "testcase": false, "constructor": false}, {"identifier": "getInstanceServerRunnable", "parameters": "(final ServerSocket serverSocket)", "modifiers": "private", "return": "Runnable", "signature": "Runnable getInstanceServerRunnable(final ServerSocket serverSocket)", "full_signature": "private Runnable getInstanceServerRunnable(final ServerSocket serverSocket)", "class_method_signature": "ExternalDataListeningService.getInstanceServerRunnable(final ServerSocket serverSocket)", "testcase": false, "constructor": false}, {"identifier": "parseBitcoinURI", "parameters": "(String rawData)", "modifiers": "private static", "return": "Optional<BitcoinURI>", "signature": "Optional<BitcoinURI> parseBitcoinURI(String rawData)", "full_signature": "private static Optional<BitcoinURI> parseBitcoinURI(String rawData)", "class_method_signature": "ExternalDataListeningService.parseBitcoinURI(String rawData)", "testcase": false, "constructor": false}, {"identifier": "parsePaymentSessionSummary", "parameters": "(String rawData)", "modifiers": "private static", "return": "Optional<PaymentSessionSummary>", "signature": "Optional<PaymentSessionSummary> parsePaymentSessionSummary(String rawData)", "full_signature": "private static Optional<PaymentSessionSummary> parsePaymentSessionSummary(String rawData)", "class_method_signature": "ExternalDataListeningService.parsePaymentSessionSummary(String rawData)", "testcase": false, "constructor": false}, {"identifier": "parseRawDataAsUri", "parameters": "(String rawData)", "modifiers": "static", "return": "Optional<URI>", "signature": "Optional<URI> parseRawDataAsUri(String rawData)", "full_signature": "static Optional<URI> parseRawDataAsUri(String rawData)", "class_method_signature": "ExternalDataListeningService.parseRawDataAsUri(String rawData)", "testcase": false, "constructor": false}], "file": "mbhd-swing/src/main/java/org/multibit/hd/ui/services/ExternalDataListeningService.java"}, "focal_method": {"identifier": "getServerSocket", "parameters": "()", "modifiers": "", "return": "Optional<ServerSocket>", "body": "Optional<ServerSocket> getServerSocket() {\n    return serverSocket;\n  }", "signature": "Optional<ServerSocket> getServerSocket()", "full_signature": " Optional<ServerSocket> getServerSocket()", "class_method_signature": "ExternalDataListeningService.getServerSocket()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 13379760, "url": "https://github.com/Multibit-Legacy/multibit-hd", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 171, "size": 51941, "license": "licensed"}}