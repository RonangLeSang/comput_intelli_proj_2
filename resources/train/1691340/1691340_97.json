{"test_class": {"identifier": "DefaultModulePluginLoaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Log\tlog\t= LogFactory.getLog(DefaultModulePluginLoaderTest.class);", "modifier": "private static final", "type": "Log", "declarator": "log\t= LogFactory.getLog(DefaultModulePluginLoaderTest.class)", "var_name": "log"}], "file": "wf-support/src/test/java/org/webframe/support/driver/loader/DefaultModulePluginLoaderTest.java"}, "test_case": {"identifier": "testLoadModulePlugin", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testLoadModulePlugin() {\n\t\tDefaultModulePluginLoader loader = new DefaultModulePluginLoader(null);\n\t\ttry {\n\t\t\tloader.loadModulePlugin();\n\t\t} catch (DriverNotExistException e) {\n\t\t\tlog.error(e.getMessage());\n\t\t}\n\t\tString[] drivers = new String[]{\n\t\t\t\t\t\"org.webframe.support.NotExistModulePluginDriver\", null};\n\t\ttry {\n\t\t\tloader.loadModulePlugin(drivers);\n\t\t} catch (DriverNotExistException e) {\n\t\t\tlog.info(e.getMessage());\n\t\t}\n\t}", "signature": "void testLoadModulePlugin()", "full_signature": "@Test public void testLoadModulePlugin()", "class_method_signature": "DefaultModulePluginLoaderTest.testLoadModulePlugin()", "testcase": true, "constructor": false, "invocations": ["loadModulePlugin", "error", "getMessage", "loadModulePlugin", "info", "getMessage"]}, "focal_class": {"identifier": "DefaultModulePluginLoader", "superclass": "extends AbstractModulePluginLoader", "interfaces": "", "fields": [{"original_string": "private String[]\tdrivers;", "modifier": "private", "type": "String[]", "declarator": "drivers", "var_name": "drivers"}], "methods": [{"identifier": "DefaultModulePluginLoader", "parameters": "(String[] drivers)", "modifiers": "public", "return": "", "signature": " DefaultModulePluginLoader(String[] drivers)", "full_signature": "public  DefaultModulePluginLoader(String[] drivers)", "class_method_signature": "DefaultModulePluginLoader.DefaultModulePluginLoader(String[] drivers)", "testcase": false, "constructor": true}, {"identifier": "loadModulePlugin", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void loadModulePlugin()", "full_signature": "@Override public void loadModulePlugin()", "class_method_signature": "DefaultModulePluginLoader.loadModulePlugin()", "testcase": false, "constructor": false}], "file": "wf-support/src/main/java/org/webframe/support/driver/loader/DefaultModulePluginLoader.java"}, "focal_method": {"identifier": "loadModulePlugin", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void loadModulePlugin() throws DriverNotExistException {\n\t\tloadModulePlugin(drivers);\n\t}", "signature": "void loadModulePlugin()", "full_signature": "@Override public void loadModulePlugin()", "class_method_signature": "DefaultModulePluginLoader.loadModulePlugin()", "testcase": false, "constructor": false, "invocations": ["loadModulePlugin"]}, "repository": {"repo_id": 1691340, "url": "https://github.com/fqntxmqee/webframe", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 9, "size": 3393, "license": "licensed"}}