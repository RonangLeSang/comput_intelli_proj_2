{"test_class": {"identifier": "BaseDaoTest", "superclass": "extends BaseSpringTransactionalTests", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate IBaseDao\t\t\t\t\t\t\t\t\t\t\tbaseDao;", "modifier": "@Autowired\n\tprivate", "type": "IBaseDao", "declarator": "baseDao", "var_name": "baseDao"}, {"original_string": "private volatile static Map<String, TTestUser>\tuserMap\t\t\t= new HashMap<String, TTestUser>(8);", "modifier": "private volatile static", "type": "Map<String, TTestUser>", "declarator": "userMap\t\t\t= new HashMap<String, TTestUser>(8)", "var_name": "userMap"}, {"original_string": "private final String\t\t\t\t\t\t\t\t\t\ttestUserName\t= \"testuser\";", "modifier": "private final", "type": "String", "declarator": "testUserName\t= \"testuser\"", "var_name": "testUserName"}, {"original_string": "private volatile static boolean\t\t\t\t\t\tinit\t\t\t\t= true;", "modifier": "private volatile static", "type": "boolean", "declarator": "init\t\t\t\t= true", "var_name": "init"}], "file": "wf-core/src/test/java/org/webframe/core/dao/BaseDaoTest.java"}, "test_case": {"identifier": "testSaveOrUpdateObject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSaveOrUpdateObject() {\n\t\tTTestUser entity = new TTestUser();\n\t\tentity.setName(testUserName);\n\t\tentity.setPassword(\"password\");\n\t\tentity.setEnabled(true);\n\t\tentity.setCreateTime(DateUtils.getStandTime());\n\t\tbaseDao.saveOrUpdate(entity);\n\t\tgetUserMap().put(entity.getId(), entity);\n\t\tassertSame(\"saveOrUpdate\u9519\u8bef\uff01\", getUserMap().size(), baseDao.loadAll(TTestUser.class).size());\n\t}", "signature": "void testSaveOrUpdateObject()", "full_signature": "@Test public void testSaveOrUpdateObject()", "class_method_signature": "BaseDaoTest.testSaveOrUpdateObject()", "testcase": true, "constructor": false, "invocations": ["setName", "setPassword", "setEnabled", "setCreateTime", "getStandTime", "saveOrUpdate", "put", "getUserMap", "getId", "assertSame", ", ba", "rMap().siz", ");", "l(TTest"]}, "focal_class": {"identifier": "BaseDao", "superclass": "extends HibernateDaoSupport", "interfaces": "implements IBaseDao", "fields": [{"original_string": "protected Log\tlog\t= LogFactory.getLog(getClass());", "modifier": "protected", "type": "Log", "declarator": "log\t= LogFactory.getLog(getClass())", "var_name": "log"}], "methods": [{"identifier": "setSuperSessionFactory", "parameters": "(SessionFactory sessionFactory)", "modifiers": "@Autowired public", "return": "void", "signature": "void setSuperSessionFactory(SessionFactory sessionFactory)", "full_signature": "@Autowired public void setSuperSessionFactory(SessionFactory sessionFactory)", "class_method_signature": "BaseDao.setSuperSessionFactory(SessionFactory sessionFactory)", "testcase": false, "constructor": false}, {"identifier": "saveOrUpdate", "parameters": "(Object entity)", "modifiers": "@Override public", "return": "void", "signature": "void saveOrUpdate(Object entity)", "full_signature": "@Override public void saveOrUpdate(Object entity)", "class_method_signature": "BaseDao.saveOrUpdate(Object entity)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(Object entity)", "modifiers": "@Override public", "return": "void", "signature": "void save(Object entity)", "full_signature": "@Override public void save(Object entity)", "class_method_signature": "BaseDao.save(Object entity)", "testcase": false, "constructor": false}, {"identifier": "saveOrUpdate", "parameters": "(Collection<?> co)", "modifiers": "@Override public", "return": "void", "signature": "void saveOrUpdate(Collection<?> co)", "full_signature": "@Override public void saveOrUpdate(Collection<?> co)", "class_method_signature": "BaseDao.saveOrUpdate(Collection<?> co)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Object entity)", "modifiers": "@Override public", "return": "void", "signature": "void update(Object entity)", "full_signature": "@Override public void update(Object entity)", "class_method_signature": "BaseDao.update(Object entity)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(String hql)", "modifiers": "@Override public", "return": "void", "signature": "void update(String hql)", "full_signature": "@Override public void update(String hql)", "class_method_signature": "BaseDao.update(String hql)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Object entity)", "modifiers": "@Override public", "return": "void", "signature": "void delete(Object entity)", "full_signature": "@Override public void delete(Object entity)", "class_method_signature": "BaseDao.delete(Object entity)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(String hql)", "modifiers": "@Override public", "return": "void", "signature": "void delete(String hql)", "full_signature": "@Override public void delete(String hql)", "class_method_signature": "BaseDao.delete(String hql)", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "(Collection<?> collectionEntities)", "modifiers": "@Override public", "return": "void", "signature": "void deleteAll(Collection<?> collectionEntities)", "full_signature": "@Override public void deleteAll(Collection<?> collectionEntities)", "class_method_signature": "BaseDao.deleteAll(Collection<?> collectionEntities)", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "void", "signature": "void refresh(Object obj)", "full_signature": "@Override public void refresh(Object obj)", "class_method_signature": "BaseDao.refresh(Object obj)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(Class<?> clazz, Serializable id)", "modifiers": "@Override public", "return": "Object", "signature": "Object load(Class<?> clazz, Serializable id)", "full_signature": "@Override public Object load(Class<?> clazz, Serializable id)", "class_method_signature": "BaseDao.load(Class<?> clazz, Serializable id)", "testcase": false, "constructor": false}, {"identifier": "loadAll", "parameters": "(Class<?> entityClass)", "modifiers": "@Override public", "return": "List<?>", "signature": "List<?> loadAll(Class<?> entityClass)", "full_signature": "@Override public List<?> loadAll(Class<?> entityClass)", "class_method_signature": "BaseDao.loadAll(Class<?> entityClass)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Class<?> clazz, Serializable id)", "modifiers": "@Override public", "return": "Object", "signature": "Object get(Class<?> clazz, Serializable id)", "full_signature": "@Override public Object get(Class<?> clazz, Serializable id)", "class_method_signature": "BaseDao.get(Class<?> clazz, Serializable id)", "testcase": false, "constructor": false}, {"identifier": "loadNotLazy", "parameters": "(Class<?> clazz, Serializable id)", "modifiers": "@Override public", "return": "Object", "signature": "Object loadNotLazy(Class<?> clazz, Serializable id)", "full_signature": "@Override public Object loadNotLazy(Class<?> clazz, Serializable id)", "class_method_signature": "BaseDao.loadNotLazy(Class<?> clazz, Serializable id)", "testcase": false, "constructor": false}, {"identifier": "iterate", "parameters": "(String hql)", "modifiers": "@Override public", "return": "Iterator<?>", "signature": "Iterator<?> iterate(String hql)", "full_signature": "@Override public Iterator<?> iterate(String hql)", "class_method_signature": "BaseDao.iterate(String hql)", "testcase": false, "constructor": false}, {"identifier": "queryUniqueObject", "parameters": "(String hql, Class<X> clazz)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "X", "signature": "X queryUniqueObject(String hql, Class<X> clazz)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public X queryUniqueObject(String hql, Class<X> clazz)", "class_method_signature": "BaseDao.queryUniqueObject(String hql, Class<X> clazz)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(String hql)", "modifiers": "@Override public", "return": "List<?>", "signature": "List<?> query(String hql)", "full_signature": "@Override public List<?> query(String hql)", "class_method_signature": "BaseDao.query(String hql)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(String hql, Object[] args, Type[] types)", "modifiers": "@Override public", "return": "List<?>", "signature": "List<?> query(String hql, Object[] args, Type[] types)", "full_signature": "@Override public List<?> query(String hql, Object[] args, Type[] types)", "class_method_signature": "BaseDao.query(String hql, Object[] args, Type[] types)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(String hql, Integer maxSize)", "modifiers": "@Override public", "return": "List<?>", "signature": "List<?> query(String hql, Integer maxSize)", "full_signature": "@Override public List<?> query(String hql, Integer maxSize)", "class_method_signature": "BaseDao.query(String hql, Integer maxSize)", "testcase": false, "constructor": false}, {"identifier": "queryByNamedParam", "parameters": "(String hql, String[] args, Object[] values)", "modifiers": "@Override public", "return": "List<?>", "signature": "List<?> queryByNamedParam(String hql, String[] args, Object[] values)", "full_signature": "@Override public List<?> queryByNamedParam(String hql, String[] args, Object[] values)", "class_method_signature": "BaseDao.queryByNamedParam(String hql, String[] args, Object[] values)", "testcase": false, "constructor": false}, {"identifier": "findBySql", "parameters": "(String sql, Object[] args, Type[] types)", "modifiers": "@Override public", "return": "List<?>", "signature": "List<?> findBySql(String sql, Object[] args, Type[] types)", "full_signature": "@Override public List<?> findBySql(String sql, Object[] args, Type[] types)", "class_method_signature": "BaseDao.findBySql(String sql, Object[] args, Type[] types)", "testcase": false, "constructor": false}, {"identifier": "findBySql", "parameters": "(String sql, int count)", "modifiers": "@Override public", "return": "List<?>", "signature": "List<?> findBySql(String sql, int count)", "full_signature": "@Override public List<?> findBySql(String sql, int count)", "class_method_signature": "BaseDao.findBySql(String sql, int count)", "testcase": false, "constructor": false}, {"identifier": "findBySql", "parameters": "(String sql)", "modifiers": "@Override public", "return": "List<?>", "signature": "List<?> findBySql(String sql)", "full_signature": "@Override public List<?> findBySql(String sql)", "class_method_signature": "BaseDao.findBySql(String sql)", "testcase": false, "constructor": false}, {"identifier": "findBySql", "parameters": "(String sql, Class<?> persistentClass, int count)", "modifiers": "@Override public", "return": "List<?>", "signature": "List<?> findBySql(String sql, Class<?> persistentClass, int count)", "full_signature": "@Override public List<?> findBySql(String sql, Class<?> persistentClass, int count)", "class_method_signature": "BaseDao.findBySql(String sql, Class<?> persistentClass, int count)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "BaseDao.clear()", "testcase": false, "constructor": false}, {"identifier": "evict", "parameters": "(Object entity)", "modifiers": "@Override public", "return": "void", "signature": "void evict(Object entity)", "full_signature": "@Override public void evict(Object entity)", "class_method_signature": "BaseDao.evict(Object entity)", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void flush()", "full_signature": "@Override public void flush()", "class_method_signature": "BaseDao.flush()", "testcase": false, "constructor": false}, {"identifier": "evictSecondLevelCache", "parameters": "(Class<?> persistentClass)", "modifiers": "@Override public", "return": "void", "signature": "void evictSecondLevelCache(Class<?> persistentClass)", "full_signature": "@Override public void evictSecondLevelCache(Class<?> persistentClass)", "class_method_signature": "BaseDao.evictSecondLevelCache(Class<?> persistentClass)", "testcase": false, "constructor": false}, {"identifier": "getDataBaseType", "parameters": "()", "modifiers": "@Override public", "return": "DataBaseType", "signature": "DataBaseType getDataBaseType()", "full_signature": "@Override public DataBaseType getDataBaseType()", "class_method_signature": "BaseDao.getDataBaseType()", "testcase": false, "constructor": false}, {"identifier": "excuteHql", "parameters": "(String hql)", "modifiers": "private", "return": "void", "signature": "void excuteHql(String hql)", "full_signature": "private void excuteHql(String hql)", "class_method_signature": "BaseDao.excuteHql(String hql)", "testcase": false, "constructor": false}], "file": "wf-core/src/main/java/org/webframe/core/dao/BaseDao.java"}, "focal_method": {"identifier": "saveOrUpdate", "parameters": "(Object entity)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void saveOrUpdate(Object entity) {\n\t\tHibernateTemplate ht = getHibernateTemplate();\n\t\tht.saveOrUpdate(entity);\n\t}", "signature": "void saveOrUpdate(Object entity)", "full_signature": "@Override public void saveOrUpdate(Object entity)", "class_method_signature": "BaseDao.saveOrUpdate(Object entity)", "testcase": false, "constructor": false, "invocations": ["getHibernateTemplate", "saveOrUpdate"]}, "repository": {"repo_id": 1691340, "url": "https://github.com/fqntxmqee/webframe", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 9, "size": 3393, "license": "licensed"}}