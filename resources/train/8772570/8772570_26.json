{"test_class": {"identifier": "ActivatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "src/messic-server-plugin-tagwizard-discogs/src/test/java/org/messic/server/api/tagwizard/discogs/ActivatorTest.java"}, "test_case": {"identifier": "testStart", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testStart()\n    {\n\n        BundleContext bc = Mockito.mock( BundleContext.class );\n\n        Activator a = new Activator();\n        a.start( bc );\n\n        Dictionary<String, ?> props = new Hashtable<String, String>();\n\n        Mockito.verify( bc, Mockito.times( 1 ) ).registerService( Mockito.eq( TAGWizardPlugin.class.getName() ),\n                                                                  Mockito.any( DiscogsTAGWizardPlugin.class ),\n                                                                  Mockito.any( props.getClass() ) );\n    }", "signature": "void testStart()", "full_signature": "@Test public void testStart()", "class_method_signature": "ActivatorTest.testStart()", "testcase": true, "constructor": false, "invocations": ["mock", "start", "registerService", "verify", "times", "eq", "getName", "any", "any", "getClass"]}, "focal_class": {"identifier": "Activator", "superclass": "", "interfaces": "implements BundleActivator", "fields": [{"original_string": "private static Logger logger = Logger.getLogger( Activator.class );", "modifier": "private static", "type": "Logger", "declarator": "logger = Logger.getLogger( Activator.class )", "var_name": "logger"}], "methods": [{"identifier": "start", "parameters": "( BundleContext bundleContext )", "modifiers": "public", "return": "void", "signature": "void start( BundleContext bundleContext )", "full_signature": "public void start( BundleContext bundleContext )", "class_method_signature": "Activator.start( BundleContext bundleContext )", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "( BundleContext bundleContext )", "modifiers": "public", "return": "void", "signature": "void stop( BundleContext bundleContext )", "full_signature": "public void stop( BundleContext bundleContext )", "class_method_signature": "Activator.stop( BundleContext bundleContext )", "testcase": false, "constructor": false}], "file": "src/messic-server-plugin-tagwizard-discogs/src/main/java/org/messic/server/api/tagwizard/discogs/Activator.java"}, "focal_method": {"identifier": "start", "parameters": "( BundleContext bundleContext )", "modifiers": "public", "return": "void", "body": "public void start( BundleContext bundleContext )\n    {\n        logger.info( \"TAGWizard - Discogs Started\" );\n        Hashtable<String, String> props = new Hashtable<String, String>();\n        props.put( \"TAGWizard\", DiscogsTAGWizardPlugin.NAME );\n        bundleContext.registerService( TAGWizardPlugin.class.getName(), new DiscogsTAGWizardPlugin(), props );\n    }", "signature": "void start( BundleContext bundleContext )", "full_signature": "public void start( BundleContext bundleContext )", "class_method_signature": "Activator.start( BundleContext bundleContext )", "testcase": false, "constructor": false, "invocations": ["info", "put", "registerService", "getName"]}, "repository": {"repo_id": 8772570, "url": "https://github.com/spheras/messic", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 29, "size": 921703, "license": "licensed"}}