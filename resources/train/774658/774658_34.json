{"test_class": {"identifier": "RichFileTest", "superclass": "", "interfaces": "", "fields": [], "file": "softwaremill-util/src/test/java/com/softwaremill/common/util/io/RichFileTest.java"}, "test_case": {"identifier": "getExtensionOneDot", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getExtensionOneDot() {\n        assertThat(new RichFile(new File(\"/dir/a.b.txt\")).getExtension()).isEqualTo(\"txt\");\n    }", "signature": "void getExtensionOneDot()", "full_signature": "@Test public void getExtensionOneDot()", "class_method_signature": "RichFileTest.getExtensionOneDot()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "getExtension"]}, "focal_class": {"identifier": "RichFile", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final File file;", "modifier": "private final", "type": "File", "declarator": "file", "var_name": "file"}], "methods": [{"identifier": "RichFile", "parameters": "(File file)", "modifiers": "public", "return": "", "signature": " RichFile(File file)", "full_signature": "public  RichFile(File file)", "class_method_signature": "RichFile.RichFile(File file)", "testcase": false, "constructor": true}, {"identifier": "writeStringToFile", "parameters": "(String content)", "modifiers": "public", "return": "void", "signature": "void writeStringToFile(String content)", "full_signature": "public void writeStringToFile(String content)", "class_method_signature": "RichFile.writeStringToFile(String content)", "testcase": false, "constructor": false}, {"identifier": "writeInputStream", "parameters": "(final InputStream stream)", "modifiers": "public", "return": "void", "signature": "void writeInputStream(final InputStream stream)", "full_signature": "public void writeInputStream(final InputStream stream)", "class_method_signature": "RichFile.writeInputStream(final InputStream stream)", "testcase": false, "constructor": false}, {"identifier": "getStringFromFile", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStringFromFile()", "full_signature": "public String getStringFromFile()", "class_method_signature": "RichFile.getStringFromFile()", "testcase": false, "constructor": false}, {"identifier": "getCharset", "parameters": "()", "modifiers": "private", "return": "Charset", "signature": "Charset getCharset()", "full_signature": "private Charset getCharset()", "class_method_signature": "RichFile.getCharset()", "testcase": false, "constructor": false}, {"identifier": "deleteDirectory", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean deleteDirectory()", "full_signature": "public boolean deleteDirectory()", "class_method_signature": "RichFile.deleteDirectory()", "testcase": false, "constructor": false}, {"identifier": "deleteFile", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean deleteFile()", "full_signature": "public boolean deleteFile()", "class_method_signature": "RichFile.deleteFile()", "testcase": false, "constructor": false}, {"identifier": "deleteDirectory", "parameters": "(File path)", "modifiers": "private", "return": "boolean", "signature": "boolean deleteDirectory(File path)", "full_signature": "private boolean deleteDirectory(File path)", "class_method_signature": "RichFile.deleteDirectory(File path)", "testcase": false, "constructor": false}, {"identifier": "createChildFile", "parameters": "(String childName)", "modifiers": "public", "return": "File", "signature": "File createChildFile(String childName)", "full_signature": "public File createChildFile(String childName)", "class_method_signature": "RichFile.createChildFile(String childName)", "testcase": false, "constructor": false}, {"identifier": "createFileSameNameDifferentExtension", "parameters": "(String extension)", "modifiers": "public", "return": "File", "signature": "File createFileSameNameDifferentExtension(String extension)", "full_signature": "public File createFileSameNameDifferentExtension(String extension)", "class_method_signature": "RichFile.createFileSameNameDifferentExtension(String extension)", "testcase": false, "constructor": false}, {"identifier": "getNameWithoutExtension", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getNameWithoutExtension()", "full_signature": "public String getNameWithoutExtension()", "class_method_signature": "RichFile.getNameWithoutExtension()", "testcase": false, "constructor": false}, {"identifier": "getExtension", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getExtension()", "full_signature": "public String getExtension()", "class_method_signature": "RichFile.getExtension()", "testcase": false, "constructor": false}], "file": "softwaremill-util/src/main/java/com/softwaremill/common/util/io/RichFile.java"}, "focal_method": {"identifier": "getExtension", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getExtension() {\n        String name = file.getName();\n        int lastDot = name.lastIndexOf('.');\n        if (lastDot != -1) {\n            return name.substring(lastDot+1);\n        } else {\n            return \"\";\n        }\n    }", "signature": "String getExtension()", "full_signature": "public String getExtension()", "class_method_signature": "RichFile.getExtension()", "testcase": false, "constructor": false, "invocations": ["getName", "lastIndexOf", "substring"]}, "repository": {"repo_id": 774658, "url": "https://github.com/softwaremill/softwaremill-common", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 37, "size": 2765, "license": "licensed"}}