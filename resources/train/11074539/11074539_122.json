{"test_class": {"identifier": "GlusterPathTest", "superclass": "extends TestCase", "interfaces": "", "fields": [{"original_string": "@Mock\n    private GlusterFileSystem mockFileSystem;", "modifier": "@Mock\n    private", "type": "GlusterFileSystem", "declarator": "mockFileSystem", "var_name": "mockFileSystem"}, {"original_string": "@Mock\n    private GlusterPath mockGlusterPath;", "modifier": "@Mock\n    private", "type": "GlusterPath", "declarator": "mockGlusterPath", "var_name": "mockGlusterPath"}], "file": "glusterfs-java-filesystem/src/test/java/com/peircean/glusterfs/GlusterPathTest.java"}, "test_case": {"identifier": "testGetName_excessive", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testGetName_excessive() {\n        Path p = new GlusterPath(mockFileSystem, \"/foo\");\n        p.getName(4);\n    }", "signature": "void testGetName_excessive()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testGetName_excessive()", "class_method_signature": "GlusterPathTest.testGetName_excessive()", "testcase": true, "constructor": false, "invocations": ["getName"]}, "focal_class": {"identifier": "GlusterPath", "superclass": "", "interfaces": "implements Path", "fields": [{"original_string": "private GlusterFileSystem fileSystem;", "modifier": "private", "type": "GlusterFileSystem", "declarator": "fileSystem", "var_name": "fileSystem"}, {"original_string": "private String[] parts;", "modifier": "private", "type": "String[]", "declarator": "parts", "var_name": "parts"}, {"original_string": "private String pathString;", "modifier": "private", "type": "String", "declarator": "pathString", "var_name": "pathString"}, {"original_string": "private boolean absolute;", "modifier": "private", "type": "boolean", "declarator": "absolute", "var_name": "absolute"}], "methods": [{"identifier": "GlusterPath", "parameters": "(GlusterFileSystem fileSystem, String path)", "modifiers": "public", "return": "", "signature": " GlusterPath(GlusterFileSystem fileSystem, String path)", "full_signature": "public  GlusterPath(GlusterFileSystem fileSystem, String path)", "class_method_signature": "GlusterPath.GlusterPath(GlusterFileSystem fileSystem, String path)", "testcase": false, "constructor": true}, {"identifier": "GlusterPath", "parameters": "(GlusterFileSystem fileSystem, String[] parts, boolean absolute)", "modifiers": "", "return": "", "signature": " GlusterPath(GlusterFileSystem fileSystem, String[] parts, boolean absolute)", "full_signature": "  GlusterPath(GlusterFileSystem fileSystem, String[] parts, boolean absolute)", "class_method_signature": "GlusterPath.GlusterPath(GlusterFileSystem fileSystem, String[] parts, boolean absolute)", "testcase": false, "constructor": true}, {"identifier": "isAbsolute", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAbsolute()", "full_signature": "@Override public boolean isAbsolute()", "class_method_signature": "GlusterPath.isAbsolute()", "testcase": false, "constructor": false}, {"identifier": "getRoot", "parameters": "()", "modifiers": "@Override public", "return": "Path", "signature": "Path getRoot()", "full_signature": "@Override public Path getRoot()", "class_method_signature": "GlusterPath.getRoot()", "testcase": false, "constructor": false}, {"identifier": "getFileName", "parameters": "()", "modifiers": "@Override public", "return": "Path", "signature": "Path getFileName()", "full_signature": "@Override public Path getFileName()", "class_method_signature": "GlusterPath.getFileName()", "testcase": false, "constructor": false}, {"identifier": "getParent", "parameters": "()", "modifiers": "@Override public", "return": "Path", "signature": "Path getParent()", "full_signature": "@Override public Path getParent()", "class_method_signature": "GlusterPath.getParent()", "testcase": false, "constructor": false}, {"identifier": "getNameCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getNameCount()", "full_signature": "@Override public int getNameCount()", "class_method_signature": "GlusterPath.getNameCount()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "(int i)", "modifiers": "@Override public", "return": "Path", "signature": "Path getName(int i)", "full_signature": "@Override public Path getName(int i)", "class_method_signature": "GlusterPath.getName(int i)", "testcase": false, "constructor": false}, {"identifier": "subpath", "parameters": "(int i, int i2)", "modifiers": "@Override public", "return": "Path", "signature": "Path subpath(int i, int i2)", "full_signature": "@Override public Path subpath(int i, int i2)", "class_method_signature": "GlusterPath.subpath(int i, int i2)", "testcase": false, "constructor": false}, {"identifier": "startsWith", "parameters": "(Path path)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean startsWith(Path path)", "full_signature": "@Override public boolean startsWith(Path path)", "class_method_signature": "GlusterPath.startsWith(Path path)", "testcase": false, "constructor": false}, {"identifier": "startsWith", "parameters": "(String s)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean startsWith(String s)", "full_signature": "@Override public boolean startsWith(String s)", "class_method_signature": "GlusterPath.startsWith(String s)", "testcase": false, "constructor": false}, {"identifier": "endsWith", "parameters": "(Path path)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean endsWith(Path path)", "full_signature": "@Override public boolean endsWith(Path path)", "class_method_signature": "GlusterPath.endsWith(Path path)", "testcase": false, "constructor": false}, {"identifier": "endsWith", "parameters": "(String s)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean endsWith(String s)", "full_signature": "@Override public boolean endsWith(String s)", "class_method_signature": "GlusterPath.endsWith(String s)", "testcase": false, "constructor": false}, {"identifier": "normalize", "parameters": "()", "modifiers": "@Override public", "return": "Path", "signature": "Path normalize()", "full_signature": "@Override public Path normalize()", "class_method_signature": "GlusterPath.normalize()", "testcase": false, "constructor": false}, {"identifier": "resolve", "parameters": "(Path path)", "modifiers": "@Override public", "return": "Path", "signature": "Path resolve(Path path)", "full_signature": "@Override public Path resolve(Path path)", "class_method_signature": "GlusterPath.resolve(Path path)", "testcase": false, "constructor": false}, {"identifier": "resolve", "parameters": "(String s)", "modifiers": "@Override public", "return": "Path", "signature": "Path resolve(String s)", "full_signature": "@Override public Path resolve(String s)", "class_method_signature": "GlusterPath.resolve(String s)", "testcase": false, "constructor": false}, {"identifier": "resolveSibling", "parameters": "(Path path)", "modifiers": "@Override public", "return": "Path", "signature": "Path resolveSibling(Path path)", "full_signature": "@Override public Path resolveSibling(Path path)", "class_method_signature": "GlusterPath.resolveSibling(Path path)", "testcase": false, "constructor": false}, {"identifier": "resolveSibling", "parameters": "(String s)", "modifiers": "@Override public", "return": "Path", "signature": "Path resolveSibling(String s)", "full_signature": "@Override public Path resolveSibling(String s)", "class_method_signature": "GlusterPath.resolveSibling(String s)", "testcase": false, "constructor": false}, {"identifier": "relativize", "parameters": "(Path path)", "modifiers": "@Override public", "return": "Path", "signature": "Path relativize(Path path)", "full_signature": "@Override public Path relativize(Path path)", "class_method_signature": "GlusterPath.relativize(Path path)", "testcase": false, "constructor": false}, {"identifier": "toUri", "parameters": "()", "modifiers": "@Override public", "return": "URI", "signature": "URI toUri()", "full_signature": "@Override public URI toUri()", "class_method_signature": "GlusterPath.toUri()", "testcase": false, "constructor": false}, {"identifier": "toAbsolutePath", "parameters": "()", "modifiers": "@Override public", "return": "Path", "signature": "Path toAbsolutePath()", "full_signature": "@Override public Path toAbsolutePath()", "class_method_signature": "GlusterPath.toAbsolutePath()", "testcase": false, "constructor": false}, {"identifier": "toRealPath", "parameters": "(LinkOption... linkOptions)", "modifiers": "@Override public", "return": "Path", "signature": "Path toRealPath(LinkOption... linkOptions)", "full_signature": "@Override public Path toRealPath(LinkOption... linkOptions)", "class_method_signature": "GlusterPath.toRealPath(LinkOption... linkOptions)", "testcase": false, "constructor": false}, {"identifier": "toFile", "parameters": "()", "modifiers": "@Override public", "return": "File", "signature": "File toFile()", "full_signature": "@Override public File toFile()", "class_method_signature": "GlusterPath.toFile()", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(WatchService watchService, WatchEvent.Kind<?>[] kinds, WatchEvent.Modifier... modifiers)", "modifiers": "@Override public", "return": "WatchKey", "signature": "WatchKey register(WatchService watchService, WatchEvent.Kind<?>[] kinds, WatchEvent.Modifier... modifiers)", "full_signature": "@Override public WatchKey register(WatchService watchService, WatchEvent.Kind<?>[] kinds, WatchEvent.Modifier... modifiers)", "class_method_signature": "GlusterPath.register(WatchService watchService, WatchEvent.Kind<?>[] kinds, WatchEvent.Modifier... modifiers)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(WatchService watchService, WatchEvent.Kind<?>... kinds)", "modifiers": "@Override public", "return": "WatchKey", "signature": "WatchKey register(WatchService watchService, WatchEvent.Kind<?>... kinds)", "full_signature": "@Override public WatchKey register(WatchService watchService, WatchEvent.Kind<?>... kinds)", "class_method_signature": "GlusterPath.register(WatchService watchService, WatchEvent.Kind<?>... kinds)", "testcase": false, "constructor": false}, {"identifier": "guardRegisterWatchDirectory", "parameters": "()", "modifiers": "", "return": "void", "signature": "void guardRegisterWatchDirectory()", "full_signature": " void guardRegisterWatchDirectory()", "class_method_signature": "GlusterPath.guardRegisterWatchDirectory()", "testcase": false, "constructor": false}, {"identifier": "guardRegisterWatchService", "parameters": "(WatchService watchService)", "modifiers": "", "return": "void", "signature": "void guardRegisterWatchService(WatchService watchService)", "full_signature": " void guardRegisterWatchService(WatchService watchService)", "class_method_signature": "GlusterPath.guardRegisterWatchService(WatchService watchService)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Path>", "signature": "Iterator<Path> iterator()", "full_signature": "@Override public Iterator<Path> iterator()", "class_method_signature": "GlusterPath.iterator()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Path path)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(Path path)", "full_signature": "@Override public int compareTo(Path path)", "class_method_signature": "GlusterPath.compareTo(Path path)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "GlusterPath.toString()", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getString()", "full_signature": "public String getString()", "class_method_signature": "GlusterPath.getString()", "testcase": false, "constructor": false}], "file": "glusterfs-java-filesystem/src/main/java/com/peircean/glusterfs/GlusterPath.java"}, "focal_method": {"identifier": "getName", "parameters": "(int i)", "modifiers": "@Override public", "return": "Path", "body": "@Override\n    public Path getName(int i) {\n        if (i < 0 || i >= parts.length || (0 == i && parts.length <= 1 && parts[0].isEmpty())) {\n            throw new IllegalArgumentException(\"invalid name index\");\n        }\n        return new GlusterPath(fileSystem, Arrays.copyOfRange(parts, 0, i + 1), absolute);\n    }", "signature": "Path getName(int i)", "full_signature": "@Override public Path getName(int i)", "class_method_signature": "GlusterPath.getName(int i)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "copyOfRange"]}, "repository": {"repo_id": 11074539, "url": "https://github.com/gluster/glusterfs-java-filesystem", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 48, "size": 396, "license": "licensed"}}