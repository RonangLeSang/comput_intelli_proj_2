{"test_class": {"identifier": "StaticResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String RESOURCE_NAME = \"resourceName\";", "modifier": "private static final", "type": "String", "declarator": "RESOURCE_NAME = \"resourceName\"", "var_name": "RESOURCE_NAME"}, {"original_string": "private static final String RESOURCE_TYPE = \"resourceType\";", "modifier": "private static final", "type": "String", "declarator": "RESOURCE_TYPE = \"resourceType\"", "var_name": "RESOURCE_TYPE"}, {"original_string": "private static final String RESOURCE_PACKAGE = \"resourcePackage\";", "modifier": "private static final", "type": "String", "declarator": "RESOURCE_PACKAGE = \"resourcePackage\"", "var_name": "RESOURCE_PACKAGE"}, {"original_string": "@DataPoints\n\tpublic static LegalStaticResource[] legalStaticResources = {\n\t\t\tnew LegalStaticResource(\"@layout/layoutX\", \"layoutX\", \"layout\", null),\n\t\t\tnew LegalStaticResource(\"@android:layout/layoutY\", \"layoutY\", \"layout\", \"android\"),\n\t\t\tnew LegalStaticResource(\"@com.somecompany.widget:layout/layoutY\", \"layoutY\", \"layout\", \"com.somecompany.widget\") };", "modifier": "@DataPoints\n\tpublic static", "type": "LegalStaticResource[]", "declarator": "legalStaticResources = {\n\t\t\tnew LegalStaticResource(\"@layout/layoutX\", \"layoutX\", \"layout\", null),\n\t\t\tnew LegalStaticResource(\"@android:layout/layoutY\", \"layoutY\", \"layout\", \"android\"),\n\t\t\tnew LegalStaticResource(\"@com.somecompany.widget:layout/layoutY\", \"layoutY\", \"layout\", \"com.somecompany.widget\") }", "var_name": "legalStaticResources"}], "file": "framework/src/test/java/org/robobinding/attribute/StaticResourceTest.java"}, "test_case": {"identifier": "givenAResourceThatDoesNotExist_thenThrowRuntimeExceptionWhenGettingResourceId", "parameters": "()", "modifiers": "@Test(expected = RuntimeException.class) public", "return": "void", "body": "@Test(expected = RuntimeException.class)\n\tpublic void givenAResourceThatDoesNotExist_thenThrowRuntimeExceptionWhenGettingResourceId() {\n\t\tResources resources = mock(Resources.class);\n\t\twhen(resources.getIdentifier(anyString(), anyString(), anyString())).thenReturn(0);\n\t\tContext context = mock(Context.class);\n\t\twhen(context.getResources()).thenReturn(resources);\n\n\t\tStaticResource resource = new StaticResource(\"@layout/non_existent_resource\");\n\n\t\tresource.getResourceId(context);\n\t}", "signature": "void givenAResourceThatDoesNotExist_thenThrowRuntimeExceptionWhenGettingResourceId()", "full_signature": "@Test(expected = RuntimeException.class) public void givenAResourceThatDoesNotExist_thenThrowRuntimeExceptionWhenGettingResourceId()", "class_method_signature": "StaticResourceTest.givenAResourceThatDoesNotExist_thenThrowRuntimeExceptionWhenGettingResourceId()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getIdentifier", "anyString", "anyString", "anyString", "mock", "thenReturn", "when", "getResources", "getResourceId"]}, "focal_class": {"identifier": "StaticResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int RESOURCE_ID_NOT_EXIST = 0;", "modifier": "public static final", "type": "int", "declarator": "RESOURCE_ID_NOT_EXIST = 0", "var_name": "RESOURCE_ID_NOT_EXIST"}, {"original_string": "static final String PATTERN = \"@([\\\\w\\\\.]+:)?(\\\\w+)/(\\\\w+)\";", "modifier": "static final", "type": "String", "declarator": "PATTERN = \"@([\\\\w\\\\.]+:)?(\\\\w+)/(\\\\w+)\"", "var_name": "PATTERN"}, {"original_string": "private static final Pattern RESOURCE_ATTRIBUTE_PATTERN = Pattern.compile(\"^\"+PATTERN+\"$\");", "modifier": "private static final", "type": "Pattern", "declarator": "RESOURCE_ATTRIBUTE_PATTERN = Pattern.compile(\"^\"+PATTERN+\"$\")", "var_name": "RESOURCE_ATTRIBUTE_PATTERN"}, {"original_string": "String resourceName;", "modifier": "", "type": "String", "declarator": "resourceName", "var_name": "resourceName"}, {"original_string": "String resourceType;", "modifier": "", "type": "String", "declarator": "resourceType", "var_name": "resourceType"}, {"original_string": "String resourcePackage;", "modifier": "", "type": "String", "declarator": "resourcePackage", "var_name": "resourcePackage"}], "methods": [{"identifier": "StaticResource", "parameters": "(String value)", "modifiers": "", "return": "", "signature": " StaticResource(String value)", "full_signature": "  StaticResource(String value)", "class_method_signature": "StaticResource.StaticResource(String value)", "testcase": false, "constructor": true}, {"identifier": "determineResourceNameAndType", "parameters": "(String value)", "modifiers": "private", "return": "void", "signature": "void determineResourceNameAndType(String value)", "full_signature": "private void determineResourceNameAndType(String value)", "class_method_signature": "StaticResource.determineResourceNameAndType(String value)", "testcase": false, "constructor": false}, {"identifier": "hasResourcePackage", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean hasResourcePackage()", "full_signature": "private boolean hasResourcePackage()", "class_method_signature": "StaticResource.hasResourcePackage()", "testcase": false, "constructor": false}, {"identifier": "getResourceId", "parameters": "(Context context)", "modifiers": "public", "return": "int", "signature": "int getResourceId(Context context)", "full_signature": "public int getResourceId(Context context)", "class_method_signature": "StaticResource.getResourceId(Context context)", "testcase": false, "constructor": false}, {"identifier": "checkResource", "parameters": "(int resourceId)", "modifiers": "private", "return": "void", "signature": "void checkResource(int resourceId)", "full_signature": "private void checkResource(int resourceId)", "class_method_signature": "StaticResource.checkResource(int resourceId)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "StaticResource.toString()", "testcase": false, "constructor": false}, {"identifier": "isStaticResource", "parameters": "(String value)", "modifiers": "static", "return": "boolean", "signature": "boolean isStaticResource(String value)", "full_signature": "static boolean isStaticResource(String value)", "class_method_signature": "StaticResource.isStaticResource(String value)", "testcase": false, "constructor": false}], "file": "framework/src/main/java/org/robobinding/attribute/StaticResource.java"}, "focal_method": {"identifier": "getResourceId", "parameters": "(Context context)", "modifiers": "public", "return": "int", "body": "public int getResourceId(Context context) {\n\t\tint resourceId = context.getResources().getIdentifier(\n\t\t\t\tresourceName, resourceType, hasResourcePackage() ? resourcePackage : context.getPackageName());\n\n\t\tcheckResource(resourceId);\n\n\t\treturn resourceId;\n\t}", "signature": "int getResourceId(Context context)", "full_signature": "public int getResourceId(Context context)", "class_method_signature": "StaticResource.getResourceId(Context context)", "testcase": false, "constructor": false, "invocations": ["getIdentifier", "getResources", "hasResourcePackage", "getPackageName", "checkResource"]}, "repository": {"repo_id": 2408915, "url": "https://github.com/RoboBinding/RoboBinding", "language": "Java", "is_fork": false, "fork_count": 227, "stargazer_count": 1306, "size": 20509, "license": "licensed"}}