{"test_class": {"identifier": "SimpleDbQueryRunnerTest", "superclass": "", "interfaces": "", "fields": [], "file": "spring-data-simpledb-impl/src/test/java/org/springframework/data/simpledb/query/SimpleDbQueryRunnerTest.java"}, "test_case": {"identifier": "executeSingleResultQuery_should_fail_if_multiple_results_are_retrieved", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n\tpublic void executeSingleResultQuery_should_fail_if_multiple_results_are_retrieved() {\n\n\t\tSimpleDbOperations simpleDbOperations = Mockito.mock(SimpleDbOperations.class);\n\n\t\tList<SampleEntity> sampleMultipleResults = new ArrayList<SampleEntity>();\n\t\tsampleMultipleResults.add(new SampleEntity());\n\t\tsampleMultipleResults.add(new SampleEntity());\n\n\t\tMockito.when(simpleDbOperations.find(Mockito.same(SampleEntity.class), Mockito.anyString())).thenReturn(\n\t\t\t\tsampleMultipleResults);\n\n\t\tSimpleDbQueryRunner runner = new SimpleDbQueryRunner((SimpleDbOperations) simpleDbOperations,\n\t\t\t\tSampleEntity.class, null);\n\n\t\trunner.executeSingleResultQuery();\n\t}", "signature": "void executeSingleResultQuery_should_fail_if_multiple_results_are_retrieved()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void executeSingleResultQuery_should_fail_if_multiple_results_are_retrieved()", "class_method_signature": "SimpleDbQueryRunnerTest.executeSingleResultQuery_should_fail_if_multiple_results_are_retrieved()", "testcase": true, "constructor": false, "invocations": ["mock", "add", "add", "thenReturn", "when", "find", "same", "anyString", "executeSingleResultQuery"]}, "focal_class": {"identifier": "SimpleDbQueryRunner", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final SimpleDbOperations simpledbOperations;", "modifier": "private final", "type": "SimpleDbOperations", "declarator": "simpledbOperations", "var_name": "simpledbOperations"}, {"original_string": "private final Class<?> domainClass;", "modifier": "private final", "type": "Class<?>", "declarator": "domainClass", "var_name": "domainClass"}, {"original_string": "private final String query;", "modifier": "private final", "type": "String", "declarator": "query", "var_name": "query"}, {"original_string": "private Pageable pageable;", "modifier": "private", "type": "Pageable", "declarator": "pageable", "var_name": "pageable"}], "methods": [{"identifier": "SimpleDbQueryRunner", "parameters": "(SimpleDbOperations simpledbOperations, Class<?> domainClass, String query)", "modifiers": "public", "return": "", "signature": " SimpleDbQueryRunner(SimpleDbOperations simpledbOperations, Class<?> domainClass, String query)", "full_signature": "public  SimpleDbQueryRunner(SimpleDbOperations simpledbOperations, Class<?> domainClass, String query)", "class_method_signature": "SimpleDbQueryRunner.SimpleDbQueryRunner(SimpleDbOperations simpledbOperations, Class<?> domainClass, String query)", "testcase": false, "constructor": true}, {"identifier": "SimpleDbQueryRunner", "parameters": "(SimpleDbOperations simpledbOperations, Class<?> domainClass, String query,\n\t\t\tPageable pageable)", "modifiers": "public", "return": "", "signature": " SimpleDbQueryRunner(SimpleDbOperations simpledbOperations, Class<?> domainClass, String query,\n\t\t\tPageable pageable)", "full_signature": "public  SimpleDbQueryRunner(SimpleDbOperations simpledbOperations, Class<?> domainClass, String query,\n\t\t\tPageable pageable)", "class_method_signature": "SimpleDbQueryRunner.SimpleDbQueryRunner(SimpleDbOperations simpledbOperations, Class<?> domainClass, String query,\n\t\t\tPageable pageable)", "testcase": false, "constructor": true}, {"identifier": "executeQuery", "parameters": "()", "modifiers": "public", "return": "List<?>", "signature": "List<?> executeQuery()", "full_signature": "public List<?> executeQuery()", "class_method_signature": "SimpleDbQueryRunner.executeQuery()", "testcase": false, "constructor": false}, {"identifier": "executeSingleResultQuery", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object executeSingleResultQuery()", "full_signature": "public Object executeSingleResultQuery()", "class_method_signature": "SimpleDbQueryRunner.executeSingleResultQuery()", "testcase": false, "constructor": false}, {"identifier": "getSingleResult", "parameters": "(List<?> returnListFromDb)", "modifiers": "", "return": "Object", "signature": "Object getSingleResult(List<?> returnListFromDb)", "full_signature": " Object getSingleResult(List<?> returnListFromDb)", "class_method_signature": "SimpleDbQueryRunner.getSingleResult(List<?> returnListFromDb)", "testcase": false, "constructor": false}, {"identifier": "executeCount", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long executeCount()", "full_signature": "public long executeCount()", "class_method_signature": "SimpleDbQueryRunner.executeCount()", "testcase": false, "constructor": false}, {"identifier": "getRequestedQueryFieldNames", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getRequestedQueryFieldNames()", "full_signature": "public List<String> getRequestedQueryFieldNames()", "class_method_signature": "SimpleDbQueryRunner.getRequestedQueryFieldNames()", "testcase": false, "constructor": false}, {"identifier": "getSingleQueryFieldName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSingleQueryFieldName()", "full_signature": "public String getSingleQueryFieldName()", "class_method_signature": "SimpleDbQueryRunner.getSingleQueryFieldName()", "testcase": false, "constructor": false}, {"identifier": "executePagedQuery", "parameters": "()", "modifiers": "public", "return": "Page<?>", "signature": "Page<?> executePagedQuery()", "full_signature": "public Page<?> executePagedQuery()", "class_method_signature": "SimpleDbQueryRunner.executePagedQuery()", "testcase": false, "constructor": false}], "file": "spring-data-simpledb-impl/src/main/java/org/springframework/data/simpledb/query/SimpleDbQueryRunner.java"}, "focal_method": {"identifier": "executeSingleResultQuery", "parameters": "()", "modifiers": "public", "return": "Object", "body": "public Object executeSingleResultQuery() {\n\t\tList<?> returnListFromDb = executeQuery();\n\n\t\treturn getSingleResult(returnListFromDb);\n\t}", "signature": "Object executeSingleResultQuery()", "full_signature": "public Object executeSingleResultQuery()", "class_method_signature": "SimpleDbQueryRunner.executeSingleResultQuery()", "testcase": false, "constructor": false, "invocations": ["executeQuery", "getSingleResult"]}, "repository": {"repo_id": 9619226, "url": "https://github.com/3pillarlabs/spring-data-simpledb", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 12, "size": 2234, "license": "licensed"}}