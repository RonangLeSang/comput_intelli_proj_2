{"test_class": {"identifier": "QueryBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "spring-data-simpledb-impl/src/test/java/org/springframework/data/simpledb/core/QueryBuilderTest.java"}, "test_case": {"identifier": "should_create_correct_queries_if_no_other_clauses_are_specified", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void should_create_correct_queries_if_no_other_clauses_are_specified() throws Exception {\n\t\tQueryBuilder builder = new QueryBuilder(SimpleDbSampleEntity.entityInformation());\n\n\t\tString returnedQuery = builder.toString();\n\n\t\tassertEquals(\"select * from `simpleDbSampleEntity`\", returnedQuery);\n\n\t}", "signature": "void should_create_correct_queries_if_no_other_clauses_are_specified()", "full_signature": "@Test public void should_create_correct_queries_if_no_other_clauses_are_specified()", "class_method_signature": "QueryBuilderTest.should_create_correct_queries_if_no_other_clauses_are_specified()", "testcase": true, "constructor": false, "invocations": ["entityInformation", "toString", "assertEquals"]}, "focal_class": {"identifier": "QueryBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(QueryBuilder.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(QueryBuilder.class)", "var_name": "LOGGER"}, {"original_string": "private StringBuilder query;", "modifier": "private", "type": "StringBuilder", "declarator": "query", "var_name": "query"}], "methods": [{"identifier": "QueryBuilder", "parameters": "(SimpleDbEntityInformation<?, ?> entityInformation)", "modifiers": "public", "return": "", "signature": " QueryBuilder(SimpleDbEntityInformation<?, ?> entityInformation)", "full_signature": "public  QueryBuilder(SimpleDbEntityInformation<?, ?> entityInformation)", "class_method_signature": "QueryBuilder.QueryBuilder(SimpleDbEntityInformation<?, ?> entityInformation)", "testcase": false, "constructor": true}, {"identifier": "QueryBuilder", "parameters": "(SimpleDbEntityInformation<?, ?> entityInformation, boolean shouldCount)", "modifiers": "public", "return": "", "signature": " QueryBuilder(SimpleDbEntityInformation<?, ?> entityInformation, boolean shouldCount)", "full_signature": "public  QueryBuilder(SimpleDbEntityInformation<?, ?> entityInformation, boolean shouldCount)", "class_method_signature": "QueryBuilder.QueryBuilder(SimpleDbEntityInformation<?, ?> entityInformation, boolean shouldCount)", "testcase": false, "constructor": true}, {"identifier": "QueryBuilder", "parameters": "(String customQuery)", "modifiers": "public", "return": "", "signature": " QueryBuilder(String customQuery)", "full_signature": "public  QueryBuilder(String customQuery)", "class_method_signature": "QueryBuilder.QueryBuilder(String customQuery)", "testcase": false, "constructor": true}, {"identifier": "QueryBuilder", "parameters": "(String customQuery, boolean shouldCount)", "modifiers": "public", "return": "", "signature": " QueryBuilder(String customQuery, boolean shouldCount)", "full_signature": "public  QueryBuilder(String customQuery, boolean shouldCount)", "class_method_signature": "QueryBuilder.QueryBuilder(String customQuery, boolean shouldCount)", "testcase": false, "constructor": true}, {"identifier": "withLimit", "parameters": "(final int limit)", "modifiers": "public", "return": "QueryBuilder", "signature": "QueryBuilder withLimit(final int limit)", "full_signature": "public QueryBuilder withLimit(final int limit)", "class_method_signature": "QueryBuilder.withLimit(final int limit)", "testcase": false, "constructor": false}, {"identifier": "withIds", "parameters": "(Iterable<?> iterable)", "modifiers": "public", "return": "QueryBuilder", "signature": "QueryBuilder withIds(Iterable<?> iterable)", "full_signature": "public QueryBuilder withIds(Iterable<?> iterable)", "class_method_signature": "QueryBuilder.withIds(Iterable<?> iterable)", "testcase": false, "constructor": false}, {"identifier": "with", "parameters": "(Sort sort)", "modifiers": "public", "return": "QueryBuilder", "signature": "QueryBuilder with(Sort sort)", "full_signature": "public QueryBuilder with(Sort sort)", "class_method_signature": "QueryBuilder.with(Sort sort)", "testcase": false, "constructor": false}, {"identifier": "with", "parameters": "(Pageable pageable)", "modifiers": "public", "return": "QueryBuilder", "signature": "QueryBuilder with(Pageable pageable)", "full_signature": "public QueryBuilder with(Pageable pageable)", "class_method_signature": "QueryBuilder.with(Pageable pageable)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "QueryBuilder.toString()", "testcase": false, "constructor": false}, {"identifier": "appendWhereOrEndClause", "parameters": "(StringBuilder query)", "modifiers": "private", "return": "void", "signature": "void appendWhereOrEndClause(StringBuilder query)", "full_signature": "private void appendWhereOrEndClause(StringBuilder query)", "class_method_signature": "QueryBuilder.appendWhereOrEndClause(StringBuilder query)", "testcase": false, "constructor": false}, {"identifier": "quote", "parameters": "(String simpleDbName)", "modifiers": "private", "return": "String", "signature": "String quote(String simpleDbName)", "full_signature": "private String quote(String simpleDbName)", "class_method_signature": "QueryBuilder.quote(String simpleDbName)", "testcase": false, "constructor": false}], "file": "spring-data-simpledb-impl/src/main/java/org/springframework/data/simpledb/core/QueryBuilder.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n\tpublic String toString() {\n\t\t// TODO change itemName() to ID field from domain object\n\t\tString result = query.toString();\n\t\tLOGGER.debug(\"Created query: {}\", result);\n\t\treturn result;\n\t}", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "QueryBuilder.toString()", "testcase": false, "constructor": false, "invocations": ["toString", "debug"]}, "repository": {"repo_id": 9619226, "url": "https://github.com/3pillarlabs/spring-data-simpledb", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 12, "size": 2234, "license": "licensed"}}