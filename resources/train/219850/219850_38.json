{"test_class": {"identifier": "VCSReaderTest", "superclass": "extends BrainTestBase", "interfaces": "", "fields": [], "file": "smsn-server/src/test/java/net/fortytwo/smsn/brain/io/vcs/VCSReaderTest.java"}, "test_case": {"identifier": "interconnectedFilesAreReadCorrectly", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void interconnectedFilesAreReadCorrectly() throws IOException {\n        VCSReader reader = new VCSReader();\n        List<Format> formats = reader.getFormats();\n        assertEquals(1, formats.size());\n        assertEquals(\"VCS\", formats.get(0).getName());\n\n        assertEquals(0, countAtoms());\n\n        BrainReader.Context context = new BrainReader.Context();\n        context.setFormat(formats.get(0));\n        context.setSourceDirectory(createTestDirectory());\n        context.setTopicGraph(topicGraph);\n        reader.doImport(context);\n\n        assertEquals(2, countAtoms());\n\n        Atom arthur = topicGraph.getAtomById(ARTHUR_ID).get();\n        assertEquals(ARTHUR_ID, arthur.getId());\n        assertEquals(\"Arthur Dent\", arthur.getTitle());\n        assertEquals(DefaultSources.UNIVERSAL, arthur.getSource());\n\n        assertEquals(1, countChildren(arthur));\n        assertEquals(\"Ford Prefect (character)\", arthur.getChildren().getFirst().getTitle());\n    }", "signature": "void interconnectedFilesAreReadCorrectly()", "full_signature": "@Test public void interconnectedFilesAreReadCorrectly()", "class_method_signature": "VCSReaderTest.interconnectedFilesAreReadCorrectly()", "testcase": true, "constructor": false, "invocations": ["getFormats", "assertEquals", "size", "assertEquals", "getName", "get", "assertEquals", "countAtoms", "setFormat", "get", "setSourceDirectory", "createTestDirectory", "setTopicGraph", "doImport", "assertEquals", "countAtoms", "get", "getAtomById", "assertEquals", "getId", "assertEquals", "getTitle", "assertEquals", "getSource", "assertEquals", "countChildren", "assertEquals", "getTitle", "getFirst", "getChildren"]}, "focal_class": {"identifier": "VCSReader", "superclass": "extends BrainReader", "interfaces": "", "fields": [{"original_string": "private final WikiParser reader;", "modifier": "private final", "type": "WikiParser", "declarator": "reader", "var_name": "reader"}], "methods": [{"identifier": "VCSReader", "parameters": "()", "modifiers": "public", "return": "", "signature": " VCSReader()", "full_signature": "public  VCSReader()", "class_method_signature": "VCSReader.VCSReader()", "testcase": false, "constructor": true}, {"identifier": "importInternal", "parameters": "(Context context)", "modifiers": "@Override protected", "return": "void", "signature": "void importInternal(Context context)", "full_signature": "@Override protected void importInternal(Context context)", "class_method_signature": "VCSReader.importInternal(Context context)", "testcase": false, "constructor": false}, {"identifier": "getFormats", "parameters": "()", "modifiers": "@Override public", "return": "List<Format>", "signature": "List<Format> getFormats()", "full_signature": "@Override public List<Format> getFormats()", "class_method_signature": "VCSReader.getFormats()", "testcase": false, "constructor": false}, {"identifier": "readDataSource", "parameters": "(final DataSource dataSource, final Context context)", "modifiers": "private", "return": "void", "signature": "void readDataSource(final DataSource dataSource, final Context context)", "full_signature": "private void readDataSource(final DataSource dataSource, final Context context)", "class_method_signature": "VCSReader.readDataSource(final DataSource dataSource, final Context context)", "testcase": false, "constructor": false}, {"identifier": "readAtomFile", "parameters": "(final File file, final Helper helper, final DataSource source)", "modifiers": "private", "return": "void", "signature": "void readAtomFile(final File file, final Helper helper, final DataSource source)", "full_signature": "private void readAtomFile(final File file, final Helper helper, final DataSource source)", "class_method_signature": "VCSReader.readAtomFile(final File file, final Helper helper, final DataSource source)", "testcase": false, "constructor": false}], "file": "smsn-server/src/main/java/net/fortytwo/smsn/brain/io/vcs/VCSReader.java"}, "focal_method": {"identifier": "getFormats", "parameters": "()", "modifiers": "@Override public", "return": "List<Format>", "body": "@Override\n    public List<Format> getFormats() {\n        return Collections.singletonList(VCSFormat.getInstance());\n    }", "signature": "List<Format> getFormats()", "full_signature": "@Override public List<Format> getFormats()", "class_method_signature": "VCSReader.getFormats()", "testcase": false, "constructor": false, "invocations": ["singletonList", "getInstance"]}, "repository": {"repo_id": 219850, "url": "https://github.com/synchrony/smsn", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 145, "size": 4399, "license": "licensed"}}