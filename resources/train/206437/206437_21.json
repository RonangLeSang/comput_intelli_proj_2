{"test_class": {"identifier": "EmptyIndexCursorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EmptyIndexCursor<String> indexCursor;", "modifier": "private", "type": "EmptyIndexCursor<String>", "declarator": "indexCursor", "var_name": "indexCursor"}], "file": "xdbm-partition/src/test/java/org/apache/directory/server/xdbm/EmptyIndexCursorTest.java"}, "test_case": {"identifier": "testAfter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAfter() throws Exception\n    {\n        indexCursor.after( null );\n    }", "signature": "void testAfter()", "full_signature": "@Test public void testAfter()", "class_method_signature": "EmptyIndexCursorTest.testAfter()", "testcase": true, "constructor": false, "invocations": ["after"]}, "focal_class": {"identifier": "EmptyIndexCursor", "superclass": "extends AbstractIndexCursor<K>", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG_CURSOR = LoggerFactory.getLogger( Loggers.CURSOR_LOG.getName() );", "modifier": "private static final", "type": "Logger", "declarator": "LOG_CURSOR = LoggerFactory.getLogger( Loggers.CURSOR_LOG.getName() )", "var_name": "LOG_CURSOR"}, {"original_string": "private static final boolean IS_DEBUG = LOG_CURSOR.isDebugEnabled();", "modifier": "private static final", "type": "boolean", "declarator": "IS_DEBUG = LOG_CURSOR.isDebugEnabled()", "var_name": "IS_DEBUG"}], "methods": [{"identifier": "EmptyIndexCursor", "parameters": "( PartitionTxn partitionTxn )", "modifiers": "public", "return": "", "signature": " EmptyIndexCursor( PartitionTxn partitionTxn )", "full_signature": "public  EmptyIndexCursor( PartitionTxn partitionTxn )", "class_method_signature": "EmptyIndexCursor.EmptyIndexCursor( PartitionTxn partitionTxn )", "testcase": false, "constructor": true}, {"identifier": "before", "parameters": "( IndexEntry<K, String> element )", "modifiers": "@Override public", "return": "void", "signature": "void before( IndexEntry<K, String> element )", "full_signature": "@Override public void before( IndexEntry<K, String> element )", "class_method_signature": "EmptyIndexCursor.before( IndexEntry<K, String> element )", "testcase": false, "constructor": false}, {"identifier": "getUnsupportedMessage", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getUnsupportedMessage()", "full_signature": "protected String getUnsupportedMessage()", "class_method_signature": "EmptyIndexCursor.getUnsupportedMessage()", "testcase": false, "constructor": false}, {"identifier": "after", "parameters": "( IndexEntry<K, String> element )", "modifiers": "@Override public", "return": "void", "signature": "void after( IndexEntry<K, String> element )", "full_signature": "@Override public void after( IndexEntry<K, String> element )", "class_method_signature": "EmptyIndexCursor.after( IndexEntry<K, String> element )", "testcase": false, "constructor": false}, {"identifier": "beforeFirst", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void beforeFirst()", "full_signature": "public void beforeFirst()", "class_method_signature": "EmptyIndexCursor.beforeFirst()", "testcase": false, "constructor": false}, {"identifier": "afterLast", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void afterLast()", "full_signature": "public void afterLast()", "class_method_signature": "EmptyIndexCursor.afterLast()", "testcase": false, "constructor": false}, {"identifier": "first", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean first()", "full_signature": "public boolean first()", "class_method_signature": "EmptyIndexCursor.first()", "testcase": false, "constructor": false}, {"identifier": "last", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean last()", "full_signature": "public boolean last()", "class_method_signature": "EmptyIndexCursor.last()", "testcase": false, "constructor": false}, {"identifier": "previous", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean previous()", "full_signature": "@Override public boolean previous()", "class_method_signature": "EmptyIndexCursor.previous()", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean next()", "full_signature": "@Override public boolean next()", "class_method_signature": "EmptyIndexCursor.next()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "public", "return": "IndexEntry<K, String>", "signature": "IndexEntry<K, String> get()", "full_signature": "public IndexEntry<K, String> get()", "class_method_signature": "EmptyIndexCursor.get()", "testcase": false, "constructor": false}, {"identifier": "afterValue", "parameters": "( String id, K indexValue )", "modifiers": "public", "return": "void", "signature": "void afterValue( String id, K indexValue )", "full_signature": "public void afterValue( String id, K indexValue )", "class_method_signature": "EmptyIndexCursor.afterValue( String id, K indexValue )", "testcase": false, "constructor": false}, {"identifier": "beforeValue", "parameters": "( String id, K indexValue )", "modifiers": "public", "return": "void", "signature": "void beforeValue( String id, K indexValue )", "full_signature": "public void beforeValue( String id, K indexValue )", "class_method_signature": "EmptyIndexCursor.beforeValue( String id, K indexValue )", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "EmptyIndexCursor.close()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "( Exception cause )", "modifiers": "@Override public", "return": "void", "signature": "void close( Exception cause )", "full_signature": "@Override public void close( Exception cause )", "class_method_signature": "EmptyIndexCursor.close( Exception cause )", "testcase": false, "constructor": false}], "file": "xdbm-partition/src/main/java/org/apache/directory/server/xdbm/EmptyIndexCursor.java"}, "focal_method": {"identifier": "after", "parameters": "( IndexEntry<K, String> element )", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void after( IndexEntry<K, String> element ) throws LdapException, CursorException\n    {\n        checkNotClosed();\n    }", "signature": "void after( IndexEntry<K, String> element )", "full_signature": "@Override public void after( IndexEntry<K, String> element )", "class_method_signature": "EmptyIndexCursor.after( IndexEntry<K, String> element )", "testcase": false, "constructor": false, "invocations": ["checkNotClosed"]}, "repository": {"repo_id": 206437, "url": "https://github.com/apache/directory-server", "language": "Java", "is_fork": false, "fork_count": 58, "stargazer_count": 74, "size": 70769, "license": "licensed"}}