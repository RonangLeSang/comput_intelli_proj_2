{"test_class": {"identifier": "DefaultComponentInfoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final List<UIComponent> NO_COMPONENTS = Collections.emptyList();", "modifier": "private static final", "type": "List<UIComponent>", "declarator": "NO_COMPONENTS = Collections.emptyList()", "var_name": "NO_COMPONENTS"}, {"original_string": "private static final Iterator<FacesMessage> EMPTY_MESSAGES = Collections.<FacesMessage> emptyList().iterator();", "modifier": "private static final", "type": "Iterator<FacesMessage>", "declarator": "EMPTY_MESSAGES = Collections.<FacesMessage> emptyList().iterator()", "var_name": "EMPTY_MESSAGES"}, {"original_string": "@Rule\n\tpublic ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n\tpublic", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "@Mock\n\tprivate FacesContext context;", "modifier": "@Mock\n\tprivate", "type": "FacesContext", "declarator": "context", "var_name": "context"}, {"original_string": "private Map<String, Object> applicationMap = new HashMap<String, Object>();", "modifier": "private", "type": "Map<String, Object>", "declarator": "applicationMap = new HashMap<String, Object>()", "var_name": "applicationMap"}, {"original_string": "private Bean bean = new Bean();", "modifier": "private", "type": "Bean", "declarator": "bean = new Bean()", "var_name": "bean"}], "file": "springfaces/src/test/java/org/springframework/springfaces/template/ui/DefaultComponentInfoTest.java"}, "test_case": {"identifier": "shouldNotBeRequiredIfNoneAreRequired", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldNotBeRequiredIfNoneAreRequired() throws Exception {\n\t\tList<UIComponent> components = createComponents(3);\n\t\tComponentInfo info = new DefaultComponentInfo(this.context, components);\n\t\tassertThat(info.isRequired(), is(false));\n\t}", "signature": "void shouldNotBeRequiredIfNoneAreRequired()", "full_signature": "@Test public void shouldNotBeRequiredIfNoneAreRequired()", "class_method_signature": "DefaultComponentInfoTest.shouldNotBeRequiredIfNoneAreRequired()", "testcase": true, "constructor": false, "invocations": ["createComponents", "assertThat", "isRequired", "is"]}, "focal_class": {"identifier": "DefaultComponentInfo", "superclass": "", "interfaces": "implements ComponentInfo", "fields": [{"original_string": "private FacesContext context;", "modifier": "private", "type": "FacesContext", "declarator": "context", "var_name": "context"}, {"original_string": "private List<UIComponent> components;", "modifier": "private", "type": "List<UIComponent>", "declarator": "components", "var_name": "components"}, {"original_string": "private BeanValidation beanValidation;", "modifier": "private", "type": "BeanValidation", "declarator": "beanValidation", "var_name": "beanValidation"}], "methods": [{"identifier": "DefaultComponentInfo", "parameters": "(FacesContext context, List<UIComponent> components)", "modifiers": "public", "return": "", "signature": " DefaultComponentInfo(FacesContext context, List<UIComponent> components)", "full_signature": "public  DefaultComponentInfo(FacesContext context, List<UIComponent> components)", "class_method_signature": "DefaultComponentInfo.DefaultComponentInfo(FacesContext context, List<UIComponent> components)", "testcase": false, "constructor": true}, {"identifier": "getComponent", "parameters": "()", "modifiers": "public", "return": "UIComponent", "signature": "UIComponent getComponent()", "full_signature": "public UIComponent getComponent()", "class_method_signature": "DefaultComponentInfo.getComponent()", "testcase": false, "constructor": false}, {"identifier": "getComponents", "parameters": "()", "modifiers": "public", "return": "List<UIComponent>", "signature": "List<UIComponent> getComponents()", "full_signature": "public List<UIComponent> getComponents()", "class_method_signature": "DefaultComponentInfo.getComponents()", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isValid()", "full_signature": "public boolean isValid()", "class_method_signature": "DefaultComponentInfo.isValid()", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "(UIComponent component)", "modifiers": "private", "return": "boolean", "signature": "boolean isValid(UIComponent component)", "full_signature": "private boolean isValid(UIComponent component)", "class_method_signature": "DefaultComponentInfo.isValid(UIComponent component)", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "(UIComponent component, EditableValueHolder editableValueHolder)", "modifiers": "private", "return": "boolean", "signature": "boolean isValid(UIComponent component, EditableValueHolder editableValueHolder)", "full_signature": "private boolean isValid(UIComponent component, EditableValueHolder editableValueHolder)", "class_method_signature": "DefaultComponentInfo.isValid(UIComponent component, EditableValueHolder editableValueHolder)", "testcase": false, "constructor": false}, {"identifier": "containsErrorMessage", "parameters": "(Iterator<FacesMessage> messages)", "modifiers": "private", "return": "boolean", "signature": "boolean containsErrorMessage(Iterator<FacesMessage> messages)", "full_signature": "private boolean containsErrorMessage(Iterator<FacesMessage> messages)", "class_method_signature": "DefaultComponentInfo.containsErrorMessage(Iterator<FacesMessage> messages)", "testcase": false, "constructor": false}, {"identifier": "isRequired", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRequired()", "full_signature": "public boolean isRequired()", "class_method_signature": "DefaultComponentInfo.isRequired()", "testcase": false, "constructor": false}, {"identifier": "isRequired", "parameters": "(UIComponent component)", "modifiers": "private", "return": "boolean", "signature": "boolean isRequired(UIComponent component)", "full_signature": "private boolean isRequired(UIComponent component)", "class_method_signature": "DefaultComponentInfo.isRequired(UIComponent component)", "testcase": false, "constructor": false}, {"identifier": "getLabel", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLabel()", "full_signature": "public String getLabel()", "class_method_signature": "DefaultComponentInfo.getLabel()", "testcase": false, "constructor": false}, {"identifier": "getFor", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFor()", "full_signature": "public String getFor()", "class_method_signature": "DefaultComponentInfo.getFor()", "testcase": false, "constructor": false}], "file": "springfaces/src/main/java/org/springframework/springfaces/template/ui/DefaultComponentInfo.java"}, "focal_method": {"identifier": "isRequired", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isRequired() {\n\t\tfor (UIComponent component : this.components) {\n\t\t\tif (isRequired(component)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}", "signature": "boolean isRequired()", "full_signature": "public boolean isRequired()", "class_method_signature": "DefaultComponentInfo.isRequired()", "testcase": false, "constructor": false, "invocations": ["isRequired"]}, "repository": {"repo_id": 1642369, "url": "https://github.com/philwebb/springfaces", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 34, "size": 3761, "license": "licensed"}}