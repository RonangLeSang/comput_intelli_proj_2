{"test_class": {"identifier": "RequestMappedRedirectDestinationViewResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n\tpublic", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "@InjectMocks\n\tprivate RequestMappedRedirectDestinationViewResolver resolver = new RequestMappedRedirectDestinationViewResolver() {\n\t\t@Override\n\t\tprotected View createView(RequestMappedRedirectViewContext context, Object handler, Method handlerMethod) {\n\t\t\tRequestMappedRedirectDestinationViewResolverTest.this.createdViewContext = context;\n\t\t\tRequestMappedRedirectDestinationViewResolverTest.this.createdViewHandler = handler;\n\t\t\tRequestMappedRedirectDestinationViewResolverTest.this.createdViewHandlerMethod = handlerMethod;\n\t\t\treturn RequestMappedRedirectDestinationViewResolverTest.this.resolvedView;\n\t\t};\n\t};", "modifier": "@InjectMocks\n\tprivate", "type": "RequestMappedRedirectDestinationViewResolver", "declarator": "resolver = new RequestMappedRedirectDestinationViewResolver() {\n\t\t@Override\n\t\tprotected View createView(RequestMappedRedirectViewContext context, Object handler, Method handlerMethod) {\n\t\t\tRequestMappedRedirectDestinationViewResolverTest.this.createdViewContext = context;\n\t\t\tRequestMappedRedirectDestinationViewResolverTest.this.createdViewHandler = handler;\n\t\t\tRequestMappedRedirectDestinationViewResolverTest.this.createdViewHandlerMethod = handlerMethod;\n\t\t\treturn RequestMappedRedirectDestinationViewResolverTest.this.resolvedView;\n\t\t};\n\t}", "var_name": "resolver"}, {"original_string": "@Mock\n\tprivate FacesContext facesContext;", "modifier": "@Mock\n\tprivate", "type": "FacesContext", "declarator": "facesContext", "var_name": "facesContext"}, {"original_string": "@Mock\n\tprivate SpringFacesContext springFacesContext;", "modifier": "@Mock\n\tprivate", "type": "SpringFacesContext", "declarator": "springFacesContext", "var_name": "springFacesContext"}, {"original_string": "@Mock\n\tprivate ApplicationContext applicationContext;", "modifier": "@Mock\n\tprivate", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "@Mock\n\tprivate View resolvedView;", "modifier": "@Mock\n\tprivate", "type": "View", "declarator": "resolvedView", "var_name": "resolvedView"}, {"original_string": "private ControllerBean controllerBean = new ControllerBean();", "modifier": "private", "type": "ControllerBean", "declarator": "controllerBean = new ControllerBean()", "var_name": "controllerBean"}, {"original_string": "protected RequestMappedRedirectViewContext createdViewContext;", "modifier": "protected", "type": "RequestMappedRedirectViewContext", "declarator": "createdViewContext", "var_name": "createdViewContext"}, {"original_string": "protected Object createdViewHandler;", "modifier": "protected", "type": "Object", "declarator": "createdViewHandler", "var_name": "createdViewHandler"}, {"original_string": "protected Method createdViewHandlerMethod;", "modifier": "protected", "type": "Method", "declarator": "createdViewHandlerMethod", "var_name": "createdViewHandlerMethod"}], "file": "springfaces-mvc/src/test/java/org/springframework/springfaces/mvc/navigation/requestmapped/RequestMappedRedirectDestinationViewResolverTest.java"}, "test_case": {"identifier": "shouldFailIfCurrentHandlerIsNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldFailIfCurrentHandlerIsNull() throws Exception {\n\t\treset(this.springFacesContext);\n\t\tthis.thrown.expect(IllegalStateException.class);\n\t\tthis.thrown.expectMessage(\"Unable to resolve @RequestMapped view from destination '@method' : \"\n\t\t\t\t+ \"Unable to locate SpringFaces MVC Controller\");\n\t\tthis.resolver.resolveDestination(this.facesContext, \"@method\", Locale.UK, null);\n\t}", "signature": "void shouldFailIfCurrentHandlerIsNull()", "full_signature": "@Test public void shouldFailIfCurrentHandlerIsNull()", "class_method_signature": "RequestMappedRedirectDestinationViewResolverTest.shouldFailIfCurrentHandlerIsNull()", "testcase": true, "constructor": false, "invocations": ["reset", "expect", "expectMessage", "resolveDestination"]}, "focal_class": {"identifier": "RequestMappedRedirectDestinationViewResolver", "superclass": "", "interfaces": "implements DestinationViewResolver, ApplicationContextAware,\n\t\tRequestMappedRedirectViewContext", "fields": [{"original_string": "private Map<String, Method> cachedDestinationMethods = new ConcurrentHashMap<String, Method>();", "modifier": "private", "type": "Map<String, Method>", "declarator": "cachedDestinationMethods = new ConcurrentHashMap<String, Method>()", "var_name": "cachedDestinationMethods"}, {"original_string": "private String dispatcherServletPath;", "modifier": "private", "type": "String", "declarator": "dispatcherServletPath", "var_name": "dispatcherServletPath"}, {"original_string": "private PathMatcher pathMatcher;", "modifier": "private", "type": "PathMatcher", "declarator": "pathMatcher", "var_name": "pathMatcher"}, {"original_string": "private WebBindingInitializer webBindingInitializer;", "modifier": "private", "type": "WebBindingInitializer", "declarator": "webBindingInitializer", "var_name": "webBindingInitializer"}, {"original_string": "private WebArgumentResolver[] customArgumentResolvers;", "modifier": "private", "type": "WebArgumentResolver[]", "declarator": "customArgumentResolvers", "var_name": "customArgumentResolvers"}, {"original_string": "private ParameterNameDiscoverer parameterNameDiscoverer;", "modifier": "private", "type": "ParameterNameDiscoverer", "declarator": "parameterNameDiscoverer", "var_name": "parameterNameDiscoverer"}, {"original_string": "private ApplicationContext applicationContext;", "modifier": "private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private String prefix = \"@\";", "modifier": "private", "type": "String", "declarator": "prefix = \"@\"", "var_name": "prefix"}], "methods": [{"identifier": "resolveDestination", "parameters": "(FacesContext context, Object destination, Locale locale,\n\t\t\tSpringFacesModel model)", "modifiers": "public", "return": "ModelAndView", "signature": "ModelAndView resolveDestination(FacesContext context, Object destination, Locale locale,\n\t\t\tSpringFacesModel model)", "full_signature": "public ModelAndView resolveDestination(FacesContext context, Object destination, Locale locale,\n\t\t\tSpringFacesModel model)", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.resolveDestination(FacesContext context, Object destination, Locale locale,\n\t\t\tSpringFacesModel model)", "testcase": false, "constructor": false}, {"identifier": "resolvePrefixedDestination", "parameters": "(String destination, Locale locale, SpringFacesModel model)", "modifiers": "private", "return": "ModelAndView", "signature": "ModelAndView resolvePrefixedDestination(String destination, Locale locale, SpringFacesModel model)", "full_signature": "private ModelAndView resolvePrefixedDestination(String destination, Locale locale, SpringFacesModel model)", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.resolvePrefixedDestination(String destination, Locale locale, SpringFacesModel model)", "testcase": false, "constructor": false}, {"identifier": "createView", "parameters": "(RequestMappedRedirectViewContext context, Object handler, Method method)", "modifiers": "protected", "return": "View", "signature": "View createView(RequestMappedRedirectViewContext context, Object handler, Method method)", "full_signature": "protected View createView(RequestMappedRedirectViewContext context, Object handler, Method method)", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.createView(RequestMappedRedirectViewContext context, Object handler, Method method)", "testcase": false, "constructor": false}, {"identifier": "getPropagatedModel", "parameters": "(View view, SpringFacesModel model)", "modifiers": "protected", "return": "Map<String, Object>", "signature": "Map<String, Object> getPropagatedModel(View view, SpringFacesModel model)", "full_signature": "protected Map<String, Object> getPropagatedModel(View view, SpringFacesModel model)", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.getPropagatedModel(View view, SpringFacesModel model)", "testcase": false, "constructor": false}, {"identifier": "resolveDestinationHandler", "parameters": "(String destination)", "modifiers": "private", "return": "Object", "signature": "Object resolveDestinationHandler(String destination)", "full_signature": "private Object resolveDestinationHandler(String destination)", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.resolveDestinationHandler(String destination)", "testcase": false, "constructor": false}, {"identifier": "resolveDestinationMethod", "parameters": "(Object handler, String destination)", "modifiers": "private", "return": "Method", "signature": "Method resolveDestinationMethod(Object handler, String destination)", "full_signature": "private Method resolveDestinationMethod(Object handler, String destination)", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.resolveDestinationMethod(Object handler, String destination)", "testcase": false, "constructor": false}, {"identifier": "getHandlerMethod", "parameters": "(Object handler, String handlerMethodName)", "modifiers": "private", "return": "Method", "signature": "Method getHandlerMethod(Object handler, String handlerMethodName)", "full_signature": "private Method getHandlerMethod(Object handler, String handlerMethodName)", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.getHandlerMethod(Object handler, String handlerMethodName)", "testcase": false, "constructor": false}, {"identifier": "setApplicationContext", "parameters": "(ApplicationContext applicationContext)", "modifiers": "public", "return": "void", "signature": "void setApplicationContext(ApplicationContext applicationContext)", "full_signature": "public void setApplicationContext(ApplicationContext applicationContext)", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.setApplicationContext(ApplicationContext applicationContext)", "testcase": false, "constructor": false}, {"identifier": "setPrefix", "parameters": "(String prefix)", "modifiers": "public", "return": "void", "signature": "void setPrefix(String prefix)", "full_signature": "public void setPrefix(String prefix)", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.setPrefix(String prefix)", "testcase": false, "constructor": false}, {"identifier": "getPathMatcher", "parameters": "()", "modifiers": "public", "return": "PathMatcher", "signature": "PathMatcher getPathMatcher()", "full_signature": "public PathMatcher getPathMatcher()", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.getPathMatcher()", "testcase": false, "constructor": false}, {"identifier": "setPathMatcher", "parameters": "(PathMatcher pathMatcher)", "modifiers": "public", "return": "void", "signature": "void setPathMatcher(PathMatcher pathMatcher)", "full_signature": "public void setPathMatcher(PathMatcher pathMatcher)", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.setPathMatcher(PathMatcher pathMatcher)", "testcase": false, "constructor": false}, {"identifier": "setCustomArgumentResolver", "parameters": "(WebArgumentResolver argumentResolver)", "modifiers": "public", "return": "void", "signature": "void setCustomArgumentResolver(WebArgumentResolver argumentResolver)", "full_signature": "public void setCustomArgumentResolver(WebArgumentResolver argumentResolver)", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.setCustomArgumentResolver(WebArgumentResolver argumentResolver)", "testcase": false, "constructor": false}, {"identifier": "getCustomArgumentResolvers", "parameters": "()", "modifiers": "public", "return": "WebArgumentResolver[]", "signature": "WebArgumentResolver[] getCustomArgumentResolvers()", "full_signature": "public WebArgumentResolver[] getCustomArgumentResolvers()", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.getCustomArgumentResolvers()", "testcase": false, "constructor": false}, {"identifier": "setCustomArgumentResolvers", "parameters": "(WebArgumentResolver[] argumentResolvers)", "modifiers": "public", "return": "void", "signature": "void setCustomArgumentResolvers(WebArgumentResolver[] argumentResolvers)", "full_signature": "public void setCustomArgumentResolvers(WebArgumentResolver[] argumentResolvers)", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.setCustomArgumentResolvers(WebArgumentResolver[] argumentResolvers)", "testcase": false, "constructor": false}, {"identifier": "getWebBindingInitializer", "parameters": "()", "modifiers": "public", "return": "WebBindingInitializer", "signature": "WebBindingInitializer getWebBindingInitializer()", "full_signature": "public WebBindingInitializer getWebBindingInitializer()", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.getWebBindingInitializer()", "testcase": false, "constructor": false}, {"identifier": "setWebBindingInitializer", "parameters": "(WebBindingInitializer webBindingInitializer)", "modifiers": "public", "return": "void", "signature": "void setWebBindingInitializer(WebBindingInitializer webBindingInitializer)", "full_signature": "public void setWebBindingInitializer(WebBindingInitializer webBindingInitializer)", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.setWebBindingInitializer(WebBindingInitializer webBindingInitializer)", "testcase": false, "constructor": false}, {"identifier": "getParameterNameDiscoverer", "parameters": "()", "modifiers": "public", "return": "ParameterNameDiscoverer", "signature": "ParameterNameDiscoverer getParameterNameDiscoverer()", "full_signature": "public ParameterNameDiscoverer getParameterNameDiscoverer()", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.getParameterNameDiscoverer()", "testcase": false, "constructor": false}, {"identifier": "setParameterNameDiscoverer", "parameters": "(ParameterNameDiscoverer parameterNameDiscoverer)", "modifiers": "public", "return": "void", "signature": "void setParameterNameDiscoverer(ParameterNameDiscoverer parameterNameDiscoverer)", "full_signature": "public void setParameterNameDiscoverer(ParameterNameDiscoverer parameterNameDiscoverer)", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.setParameterNameDiscoverer(ParameterNameDiscoverer parameterNameDiscoverer)", "testcase": false, "constructor": false}, {"identifier": "getDispatcherServletPath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDispatcherServletPath()", "full_signature": "public String getDispatcherServletPath()", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.getDispatcherServletPath()", "testcase": false, "constructor": false}, {"identifier": "setDispatcherServletPath", "parameters": "(String dispatcherServletPath)", "modifiers": "public", "return": "void", "signature": "void setDispatcherServletPath(String dispatcherServletPath)", "full_signature": "public void setDispatcherServletPath(String dispatcherServletPath)", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.setDispatcherServletPath(String dispatcherServletPath)", "testcase": false, "constructor": false}], "file": "springfaces-mvc/src/main/java/org/springframework/springfaces/mvc/navigation/requestmapped/RequestMappedRedirectDestinationViewResolver.java"}, "focal_method": {"identifier": "resolveDestination", "parameters": "(FacesContext context, Object destination, Locale locale,\n\t\t\tSpringFacesModel model)", "modifiers": "public", "return": "ModelAndView", "body": "public ModelAndView resolveDestination(FacesContext context, Object destination, Locale locale,\n\t\t\tSpringFacesModel model) throws Exception {\n\t\tif ((destination instanceof String) && ((String) destination).startsWith(this.prefix)) {\n\t\t\ttry {\n\t\t\t\treturn resolvePrefixedDestination(((String) destination).substring(this.prefix.length()), locale, model);\n\t\t\t} catch (RuntimeException e) {\n\t\t\t\tthrow new IllegalStateException(\"Unable to resolve @RequestMapped view from destination '\"\n\t\t\t\t\t\t+ destination + \"' : \" + e.getMessage(), e);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}", "signature": "ModelAndView resolveDestination(FacesContext context, Object destination, Locale locale,\n\t\t\tSpringFacesModel model)", "full_signature": "public ModelAndView resolveDestination(FacesContext context, Object destination, Locale locale,\n\t\t\tSpringFacesModel model)", "class_method_signature": "RequestMappedRedirectDestinationViewResolver.resolveDestination(FacesContext context, Object destination, Locale locale,\n\t\t\tSpringFacesModel model)", "testcase": false, "constructor": false, "invocations": ["startsWith", "resolvePrefixedDestination", "substring", "length", "getMessage"]}, "repository": {"repo_id": 1642369, "url": "https://github.com/philwebb/springfaces", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 34, "size": 3761, "license": "licensed"}}