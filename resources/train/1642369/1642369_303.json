{"test_class": {"identifier": "SpringBeanPartialStateHolderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n\tpublic", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "@Mock\n\tprivate FacesContext context;", "modifier": "@Mock\n\tprivate", "type": "FacesContext", "declarator": "context", "var_name": "context"}, {"original_string": "@Mock\n\tprivate WebApplicationContext applicationContext;", "modifier": "@Mock\n\tprivate", "type": "WebApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private String beanName = \"bean\";", "modifier": "private", "type": "String", "declarator": "beanName = \"bean\"", "var_name": "beanName"}, {"original_string": "@Mock\n\tprivate Object bean;", "modifier": "@Mock\n\tprivate", "type": "Object", "declarator": "bean", "var_name": "bean"}, {"original_string": "private String stateHolderBeanName = \"stateHolderBean\";", "modifier": "private", "type": "String", "declarator": "stateHolderBeanName = \"stateHolderBean\"", "var_name": "stateHolderBeanName"}, {"original_string": "@Mock\n\tprivate PartialStateHolder stateHolderBean;", "modifier": "@Mock\n\tprivate", "type": "PartialStateHolder", "declarator": "stateHolderBean", "var_name": "stateHolderBean"}, {"original_string": "private String integerBeanName = \"integerBean\";", "modifier": "private", "type": "String", "declarator": "integerBeanName = \"integerBean\"", "var_name": "integerBeanName"}, {"original_string": "private Integer integerBean = new Integer(5);", "modifier": "private", "type": "Integer", "declarator": "integerBean = new Integer(5)", "var_name": "integerBean"}], "file": "springfaces/src/test/java/org/springframework/springfaces/component/SpringBeanPartialStateHolderTest.java"}, "test_case": {"identifier": "shouldOnlySupportStateHolderBeansIfPrototype", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldOnlySupportStateHolderBeansIfPrototype() throws Exception {\n\t\treset(this.applicationContext);\n\t\tgiven(this.applicationContext.getBean(this.stateHolderBeanName)).willReturn(this.stateHolderBean);\n\t\tthis.thrown.expect(IllegalStateException.class);\n\t\tthis.thrown.expectMessage(\"StateHolders must be declared as protoype beans\");\n\t\tnew SpringBeanPartialStateHolder<Object>(this.context, this.stateHolderBeanName);\n\t}", "signature": "void shouldOnlySupportStateHolderBeansIfPrototype()", "full_signature": "@Test public void shouldOnlySupportStateHolderBeansIfPrototype()", "class_method_signature": "SpringBeanPartialStateHolderTest.shouldOnlySupportStateHolderBeansIfPrototype()", "testcase": true, "constructor": false, "invocations": ["reset", "willReturn", "given", "getBean", "expect", "expectMessage"]}, "focal_class": {"identifier": "SpringBeanPartialStateHolder", "superclass": "", "interfaces": "implements PartialStateHolder", "fields": [{"original_string": "private String beanName;", "modifier": "private", "type": "String", "declarator": "beanName", "var_name": "beanName"}, {"original_string": "private T bean;", "modifier": "private", "type": "T", "declarator": "bean", "var_name": "bean"}, {"original_string": "private boolean transientValue;", "modifier": "private", "type": "boolean", "declarator": "transientValue", "var_name": "transientValue"}, {"original_string": "private boolean initialState;", "modifier": "private", "type": "boolean", "declarator": "initialState", "var_name": "initialState"}], "methods": [{"identifier": "SpringBeanPartialStateHolder", "parameters": "()", "modifiers": "@Deprecated public", "return": "", "signature": " SpringBeanPartialStateHolder()", "full_signature": "@Deprecated public  SpringBeanPartialStateHolder()", "class_method_signature": "SpringBeanPartialStateHolder.SpringBeanPartialStateHolder()", "testcase": false, "constructor": true}, {"identifier": "SpringBeanPartialStateHolder", "parameters": "(FacesContext context, String beanName)", "modifiers": "public", "return": "", "signature": " SpringBeanPartialStateHolder(FacesContext context, String beanName)", "full_signature": "public  SpringBeanPartialStateHolder(FacesContext context, String beanName)", "class_method_signature": "SpringBeanPartialStateHolder.SpringBeanPartialStateHolder(FacesContext context, String beanName)", "testcase": false, "constructor": true}, {"identifier": "getBean", "parameters": "()", "modifiers": "protected final", "return": "T", "signature": "T getBean()", "full_signature": "protected final T getBean()", "class_method_signature": "SpringBeanPartialStateHolder.getBean()", "testcase": false, "constructor": false}, {"identifier": "saveState", "parameters": "(FacesContext context)", "modifiers": "public", "return": "Object", "signature": "Object saveState(FacesContext context)", "full_signature": "public Object saveState(FacesContext context)", "class_method_signature": "SpringBeanPartialStateHolder.saveState(FacesContext context)", "testcase": false, "constructor": false}, {"identifier": "restoreState", "parameters": "(FacesContext context, Object state)", "modifiers": "public", "return": "void", "signature": "void restoreState(FacesContext context, Object state)", "full_signature": "public void restoreState(FacesContext context, Object state)", "class_method_signature": "SpringBeanPartialStateHolder.restoreState(FacesContext context, Object state)", "testcase": false, "constructor": false}, {"identifier": "loadBeanFromContext", "parameters": "(FacesContext context)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "void", "signature": "void loadBeanFromContext(FacesContext context)", "full_signature": "@SuppressWarnings(\"unchecked\") private void loadBeanFromContext(FacesContext context)", "class_method_signature": "SpringBeanPartialStateHolder.loadBeanFromContext(FacesContext context)", "testcase": false, "constructor": false}, {"identifier": "isTransient", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTransient()", "full_signature": "public boolean isTransient()", "class_method_signature": "SpringBeanPartialStateHolder.isTransient()", "testcase": false, "constructor": false}, {"identifier": "setTransient", "parameters": "(boolean newTransientValue)", "modifiers": "public", "return": "void", "signature": "void setTransient(boolean newTransientValue)", "full_signature": "public void setTransient(boolean newTransientValue)", "class_method_signature": "SpringBeanPartialStateHolder.setTransient(boolean newTransientValue)", "testcase": false, "constructor": false}, {"identifier": "markInitialState", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void markInitialState()", "full_signature": "public void markInitialState()", "class_method_signature": "SpringBeanPartialStateHolder.markInitialState()", "testcase": false, "constructor": false}, {"identifier": "initialStateMarked", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean initialStateMarked()", "full_signature": "public boolean initialStateMarked()", "class_method_signature": "SpringBeanPartialStateHolder.initialStateMarked()", "testcase": false, "constructor": false}, {"identifier": "clearInitialState", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearInitialState()", "full_signature": "public void clearInitialState()", "class_method_signature": "SpringBeanPartialStateHolder.clearInitialState()", "testcase": false, "constructor": false}], "file": "springfaces/src/main/java/org/springframework/springfaces/component/SpringBeanPartialStateHolder.java"}, "focal_method": {"identifier": "getBean", "parameters": "()", "modifiers": "protected final", "return": "T", "body": "protected final T getBean() {\n\t\treturn this.bean;\n\t}", "signature": "T getBean()", "full_signature": "protected final T getBean()", "class_method_signature": "SpringBeanPartialStateHolder.getBean()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1642369, "url": "https://github.com/philwebb/springfaces", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 34, "size": 3761, "license": "licensed"}}