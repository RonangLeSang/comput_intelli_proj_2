{"test_class": {"identifier": "JHFilterTest", "superclass": "", "interfaces": "", "fields": [], "file": "webcam-capture/src/test/java/com/github/sarxos/webcam/util/jh/JHFilterTest.java"}, "test_case": {"identifier": "test_getBounds2D", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test_getBounds2D() {\n\n\t\tfinal TestFilter filter = new TestFilter();\n\t\tfinal BufferedImage image = new BufferedImage(11, 22, BufferedImage.TYPE_BYTE_INDEXED);\n\t\tfinal Rectangle2D bounds = filter.getBounds2D(image);\n\n\t\tAssertions\n\t\t\t.assertThat(bounds.getWidth())\n\t\t\t.isEqualTo(11);\n\t\tAssertions\n\t\t\t.assertThat(bounds.getHeight())\n\t\t\t.isEqualTo(22);\n\t\tAssertions\n\t\t\t.assertThat(bounds.getX())\n\t\t\t.isEqualTo(0);\n\t\tAssertions\n\t\t\t.assertThat(bounds.getY())\n\t\t\t.isEqualTo(0);\n\t}", "signature": "void test_getBounds2D()", "full_signature": "@Test public void test_getBounds2D()", "class_method_signature": "JHFilterTest.test_getBounds2D()", "testcase": true, "constructor": false, "invocations": ["getBounds2D", "isEqualTo", "assertThat", "getWidth", "isEqualTo", "assertThat", "getHeight", "isEqualTo", "assertThat", "getX", "isEqualTo", "assertThat", "getY"]}, "focal_class": {"identifier": "JHFilter", "superclass": "", "interfaces": "implements BufferedImageOp", "fields": [], "methods": [{"identifier": "createCompatibleDestImage", "parameters": "(BufferedImage src, ColorModel dstCM)", "modifiers": "@Override public", "return": "BufferedImage", "signature": "BufferedImage createCompatibleDestImage(BufferedImage src, ColorModel dstCM)", "full_signature": "@Override public BufferedImage createCompatibleDestImage(BufferedImage src, ColorModel dstCM)", "class_method_signature": "JHFilter.createCompatibleDestImage(BufferedImage src, ColorModel dstCM)", "testcase": false, "constructor": false}, {"identifier": "getBounds2D", "parameters": "(BufferedImage src)", "modifiers": "@Override public", "return": "Rectangle2D", "signature": "Rectangle2D getBounds2D(BufferedImage src)", "full_signature": "@Override public Rectangle2D getBounds2D(BufferedImage src)", "class_method_signature": "JHFilter.getBounds2D(BufferedImage src)", "testcase": false, "constructor": false}, {"identifier": "getPoint2D", "parameters": "(Point2D srcPt, Point2D dstPt)", "modifiers": "@Override public", "return": "Point2D", "signature": "Point2D getPoint2D(Point2D srcPt, Point2D dstPt)", "full_signature": "@Override public Point2D getPoint2D(Point2D srcPt, Point2D dstPt)", "class_method_signature": "JHFilter.getPoint2D(Point2D srcPt, Point2D dstPt)", "testcase": false, "constructor": false}, {"identifier": "getRenderingHints", "parameters": "()", "modifiers": "@Override public", "return": "RenderingHints", "signature": "RenderingHints getRenderingHints()", "full_signature": "@Override public RenderingHints getRenderingHints()", "class_method_signature": "JHFilter.getRenderingHints()", "testcase": false, "constructor": false}, {"identifier": "getRGB", "parameters": "(BufferedImage image, int x, int y, int width, int height, int[] pixels)", "modifiers": "public", "return": "int[]", "signature": "int[] getRGB(BufferedImage image, int x, int y, int width, int height, int[] pixels)", "full_signature": "public int[] getRGB(BufferedImage image, int x, int y, int width, int height, int[] pixels)", "class_method_signature": "JHFilter.getRGB(BufferedImage image, int x, int y, int width, int height, int[] pixels)", "testcase": false, "constructor": false}, {"identifier": "setRGB", "parameters": "(BufferedImage image, int x, int y, int width, int height, int[] pixels)", "modifiers": "public", "return": "void", "signature": "void setRGB(BufferedImage image, int x, int y, int width, int height, int[] pixels)", "full_signature": "public void setRGB(BufferedImage image, int x, int y, int width, int height, int[] pixels)", "class_method_signature": "JHFilter.setRGB(BufferedImage image, int x, int y, int width, int height, int[] pixels)", "testcase": false, "constructor": false}], "file": "webcam-capture/src/main/java/com/github/sarxos/webcam/util/jh/JHFilter.java"}, "focal_method": {"identifier": "getBounds2D", "parameters": "(BufferedImage src)", "modifiers": "@Override public", "return": "Rectangle2D", "body": "@Override\n\tpublic Rectangle2D getBounds2D(BufferedImage src) {\n\t\treturn new Rectangle(0, 0, src.getWidth(), src.getHeight());\n\t}", "signature": "Rectangle2D getBounds2D(BufferedImage src)", "full_signature": "@Override public Rectangle2D getBounds2D(BufferedImage src)", "class_method_signature": "JHFilter.getBounds2D(BufferedImage src)", "testcase": false, "constructor": false, "invocations": ["getWidth", "getHeight"]}, "repository": {"repo_id": 4449830, "url": "https://github.com/sarxos/webcam-capture", "language": "Java", "is_fork": false, "fork_count": 1011, "stargazer_count": 1720, "size": 23819, "license": "licensed"}}