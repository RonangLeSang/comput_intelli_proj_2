{"test_class": {"identifier": "ConfigurationImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "pax-runner-platform/src/test/java/org/ops4j/pax/runner/platform/internal/ConfigurationImplTest.java"}, "test_case": {"identifier": "isAutoWrapWithInvalidValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isAutoWrapWithInvalidValue()\n    {\n        PropertyResolver propertyResolver = createMock( PropertyResolver.class );\n        expect( propertyResolver.get( \"org.ops4j.pax.runner.platform.autoWrap\" ) ).andReturn( \"of course\" );\n\n        replay( propertyResolver );\n        Configuration config = new ConfigurationImpl( propertyResolver );\n        assertEquals( \"Auto Wrap\", false, config.isAutoWrap() );\n        verify( propertyResolver );\n    }", "signature": "void isAutoWrapWithInvalidValue()", "full_signature": "@Test public void isAutoWrapWithInvalidValue()", "class_method_signature": "ConfigurationImplTest.isAutoWrapWithInvalidValue()", "testcase": true, "constructor": false, "invocations": ["createMock", "andReturn", "expect", "get", "replay", "assertEquals", "isAutoWrap", "verify"]}, "focal_class": {"identifier": "ConfigurationImpl", "superclass": "extends PropertyStore", "interfaces": "implements Configuration", "fields": [{"original_string": "private static final Log LOGGER = LogFactory.getLog( ConfigurationImpl.class );", "modifier": "private static final", "type": "Log", "declarator": "LOGGER = LogFactory.getLog( ConfigurationImpl.class )", "var_name": "LOGGER"}, {"original_string": "private static final String DEFAULT_WORKING_DIRECTORY = \"runner\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_WORKING_DIRECTORY = \"runner\"", "var_name": "DEFAULT_WORKING_DIRECTORY"}, {"original_string": "private static final String DEFAULT_FRAMEWORK_PROFILE = \"runner\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_FRAMEWORK_PROFILE = \"runner\"", "var_name": "DEFAULT_FRAMEWORK_PROFILE"}, {"original_string": "private static final int DEFAULT_START_LEVEL = 6;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_START_LEVEL = 6", "var_name": "DEFAULT_START_LEVEL"}, {"original_string": "private static final int DEFAULT_PROFILE_START_LEVEL = 1;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_PROFILE_START_LEVEL = 1", "var_name": "DEFAULT_PROFILE_START_LEVEL"}, {"original_string": "private static final int DEFAULT_BUNDLE_START_LEVEL = 5;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_BUNDLE_START_LEVEL = 5", "var_name": "DEFAULT_BUNDLE_START_LEVEL"}, {"original_string": "private final PropertyResolver m_propertyResolver;", "modifier": "private final", "type": "PropertyResolver", "declarator": "m_propertyResolver", "var_name": "m_propertyResolver"}], "methods": [{"identifier": "ConfigurationImpl", "parameters": "( final PropertyResolver propertyResolver )", "modifiers": "public", "return": "", "signature": " ConfigurationImpl( final PropertyResolver propertyResolver )", "full_signature": "public  ConfigurationImpl( final PropertyResolver propertyResolver )", "class_method_signature": "ConfigurationImpl.ConfigurationImpl( final PropertyResolver propertyResolver )", "testcase": false, "constructor": true}, {"identifier": "getDefinitionURL", "parameters": "()", "modifiers": "public", "return": "URL", "signature": "URL getDefinitionURL()", "full_signature": "public URL getDefinitionURL()", "class_method_signature": "ConfigurationImpl.getDefinitionURL()", "testcase": false, "constructor": false}, {"identifier": "getWorkingDirectory", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getWorkingDirectory()", "full_signature": "public String getWorkingDirectory()", "class_method_signature": "ConfigurationImpl.getWorkingDirectory()", "testcase": false, "constructor": false}, {"identifier": "getVMOptions", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getVMOptions()", "full_signature": "public String[] getVMOptions()", "class_method_signature": "ConfigurationImpl.getVMOptions()", "testcase": false, "constructor": false}, {"identifier": "getEnvOptions", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getEnvOptions()", "full_signature": "public String[] getEnvOptions()", "class_method_signature": "ConfigurationImpl.getEnvOptions()", "testcase": false, "constructor": false}, {"identifier": "getClasspath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getClasspath()", "full_signature": "public String getClasspath()", "class_method_signature": "ConfigurationImpl.getClasspath()", "testcase": false, "constructor": false}, {"identifier": "getSystemPackages", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSystemPackages()", "full_signature": "public String getSystemPackages()", "class_method_signature": "ConfigurationImpl.getSystemPackages()", "testcase": false, "constructor": false}, {"identifier": "getExecutionEnvironment", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getExecutionEnvironment()", "full_signature": "public String getExecutionEnvironment()", "class_method_signature": "ConfigurationImpl.getExecutionEnvironment()", "testcase": false, "constructor": false}, {"identifier": "getJavaHome", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getJavaHome()", "full_signature": "public String getJavaHome()", "class_method_signature": "ConfigurationImpl.getJavaHome()", "testcase": false, "constructor": false}, {"identifier": "usePersistedState", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean usePersistedState()", "full_signature": "public Boolean usePersistedState()", "class_method_signature": "ConfigurationImpl.usePersistedState()", "testcase": false, "constructor": false}, {"identifier": "startConsole", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean startConsole()", "full_signature": "public Boolean startConsole()", "class_method_signature": "ConfigurationImpl.startConsole()", "testcase": false, "constructor": false}, {"identifier": "isOverwrite", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean isOverwrite()", "full_signature": "public Boolean isOverwrite()", "class_method_signature": "ConfigurationImpl.isOverwrite()", "testcase": false, "constructor": false}, {"identifier": "getProfiles", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getProfiles()", "full_signature": "public String getProfiles()", "class_method_signature": "ConfigurationImpl.getProfiles()", "testcase": false, "constructor": false}, {"identifier": "getFrameworkProfile", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFrameworkProfile()", "full_signature": "public String getFrameworkProfile()", "class_method_signature": "ConfigurationImpl.getFrameworkProfile()", "testcase": false, "constructor": false}, {"identifier": "getProfileStartLevel", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getProfileStartLevel()", "full_signature": "public Integer getProfileStartLevel()", "class_method_signature": "ConfigurationImpl.getProfileStartLevel()", "testcase": false, "constructor": false}, {"identifier": "getStartLevel", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getStartLevel()", "full_signature": "public Integer getStartLevel()", "class_method_signature": "ConfigurationImpl.getStartLevel()", "testcase": false, "constructor": false}, {"identifier": "getBundleStartLevel", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getBundleStartLevel()", "full_signature": "public Integer getBundleStartLevel()", "class_method_signature": "ConfigurationImpl.getBundleStartLevel()", "testcase": false, "constructor": false}, {"identifier": "resolveStartLevel", "parameters": "( final String optionName, final Integer defaultValue )", "modifiers": "private", "return": "Integer", "signature": "Integer resolveStartLevel( final String optionName, final Integer defaultValue )", "full_signature": "private Integer resolveStartLevel( final String optionName, final Integer defaultValue )", "class_method_signature": "ConfigurationImpl.resolveStartLevel( final String optionName, final Integer defaultValue )", "testcase": false, "constructor": false}, {"identifier": "isOverwriteUserBundles", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean isOverwriteUserBundles()", "full_signature": "public Boolean isOverwriteUserBundles()", "class_method_signature": "ConfigurationImpl.isOverwriteUserBundles()", "testcase": false, "constructor": false}, {"identifier": "isOverwriteSystemBundles", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean isOverwriteSystemBundles()", "full_signature": "public Boolean isOverwriteSystemBundles()", "class_method_signature": "ConfigurationImpl.isOverwriteSystemBundles()", "testcase": false, "constructor": false}, {"identifier": "isDebugClassLoading", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean isDebugClassLoading()", "full_signature": "public Boolean isDebugClassLoading()", "class_method_signature": "ConfigurationImpl.isDebugClassLoading()", "testcase": false, "constructor": false}, {"identifier": "isDownloadFeedback", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean isDownloadFeedback()", "full_signature": "public Boolean isDownloadFeedback()", "class_method_signature": "ConfigurationImpl.isDownloadFeedback()", "testcase": false, "constructor": false}, {"identifier": "getBootDelegation", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getBootDelegation()", "full_signature": "public String getBootDelegation()", "class_method_signature": "ConfigurationImpl.getBootDelegation()", "testcase": false, "constructor": false}, {"identifier": "isAutoWrap", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean isAutoWrap()", "full_signature": "public Boolean isAutoWrap()", "class_method_signature": "ConfigurationImpl.isAutoWrap()", "testcase": false, "constructor": false}, {"identifier": "keepOriginalUrls", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean keepOriginalUrls()", "full_signature": "public Boolean keepOriginalUrls()", "class_method_signature": "ConfigurationImpl.keepOriginalUrls()", "testcase": false, "constructor": false}, {"identifier": "validateBundles", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean validateBundles()", "full_signature": "public Boolean validateBundles()", "class_method_signature": "ConfigurationImpl.validateBundles()", "testcase": false, "constructor": false}, {"identifier": "skipInvalidBundles", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean skipInvalidBundles()", "full_signature": "public Boolean skipInvalidBundles()", "class_method_signature": "ConfigurationImpl.skipInvalidBundles()", "testcase": false, "constructor": false}, {"identifier": "useAbsoluteFilePaths", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean useAbsoluteFilePaths()", "full_signature": "public Boolean useAbsoluteFilePaths()", "class_method_signature": "ConfigurationImpl.useAbsoluteFilePaths()", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "( final String name )", "modifiers": "public", "return": "String", "signature": "String getProperty( final String name )", "full_signature": "public String getProperty( final String name )", "class_method_signature": "ConfigurationImpl.getProperty( final String name )", "testcase": false, "constructor": false}], "file": "pax-runner-platform/src/main/java/org/ops4j/pax/runner/platform/internal/ConfigurationImpl.java"}, "focal_method": {"identifier": "isAutoWrap", "parameters": "()", "modifiers": "public", "return": "Boolean", "body": "public Boolean isAutoWrap()\n    {\n        if( !contains( ServiceConstants.CONFIG_AUTO_WRAP ) )\n        {\n            return set( ServiceConstants.CONFIG_AUTO_WRAP,\n                        Boolean.valueOf( m_propertyResolver.get( ServiceConstants.CONFIG_AUTO_WRAP ) )\n            );\n        }\n        return get( ServiceConstants.CONFIG_AUTO_WRAP );\n    }", "signature": "Boolean isAutoWrap()", "full_signature": "public Boolean isAutoWrap()", "class_method_signature": "ConfigurationImpl.isAutoWrap()", "testcase": false, "constructor": false, "invocations": ["contains", "set", "valueOf", "get", "get"]}, "repository": {"repo_id": 905232, "url": "https://github.com/ops4j/org.ops4j.pax.runner", "language": "Java", "is_fork": false, "fork_count": 40, "stargazer_count": 44, "size": 18304, "license": "licensed"}}