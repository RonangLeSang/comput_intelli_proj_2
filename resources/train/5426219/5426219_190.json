{"test_class": {"identifier": "HealthCheckServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private SolrCloudAdminProxy solrCloudAdminProxyMock;", "modifier": "@Mock\n    private", "type": "SolrCloudAdminProxy", "declarator": "solrCloudAdminProxyMock", "var_name": "solrCloudAdminProxyMock"}, {"original_string": "@Mock\n    private ExperimentDao experimentDaoMock;", "modifier": "@Mock\n    private", "type": "ExperimentDao", "declarator": "experimentDaoMock", "var_name": "experimentDaoMock"}, {"original_string": "private HealthCheckService subject;", "modifier": "private", "type": "HealthCheckService", "declarator": "subject", "var_name": "subject"}, {"original_string": "private static final List<String> MOCK_SOLR_COLLECTIONS = Arrays.asList(\"mockCollection1\", \"mockCollection2\");", "modifier": "private static final", "type": "List<String>", "declarator": "MOCK_SOLR_COLLECTIONS = Arrays.asList(\"mockCollection1\", \"mockCollection2\")", "var_name": "MOCK_SOLR_COLLECTIONS"}, {"original_string": "private static final String MOCK_SOLR_COLLECTION_ALIAS = \"mockCollectionAlias\";", "modifier": "private static final", "type": "String", "declarator": "MOCK_SOLR_COLLECTION_ALIAS = \"mockCollectionAlias\"", "var_name": "MOCK_SOLR_COLLECTION_ALIAS"}], "file": "base/src/test/java/uk/ac/ebi/atlas/monitoring/HealthCheckServiceTest.java"}, "test_case": {"identifier": "experimentDaoThrowsException", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void experimentDaoThrowsException() {\n        when(experimentDaoMock.countExperiments()).thenThrow(RuntimeException.class);\n\n        assertThat(subject.isDatabaseUp(experimentDaoMock)).isFalse();\n    }", "signature": "void experimentDaoThrowsException()", "full_signature": "@Test void experimentDaoThrowsException()", "class_method_signature": "HealthCheckServiceTest.experimentDaoThrowsException()", "testcase": true, "constructor": false, "invocations": ["thenThrow", "when", "countExperiments", "isFalse", "assertThat", "isDatabaseUp"]}, "focal_class": {"identifier": "HealthCheckService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SolrCloudAdminProxy solrCloudAdminProxy;", "modifier": "private", "type": "SolrCloudAdminProxy", "declarator": "solrCloudAdminProxy", "var_name": "solrCloudAdminProxy"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(HealthCheckService.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(HealthCheckService.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "HealthCheckService", "parameters": "(SolrCloudAdminProxy solrCloudAdminProxy)", "modifiers": "public", "return": "", "signature": " HealthCheckService(SolrCloudAdminProxy solrCloudAdminProxy)", "full_signature": "public  HealthCheckService(SolrCloudAdminProxy solrCloudAdminProxy)", "class_method_signature": "HealthCheckService.HealthCheckService(SolrCloudAdminProxy solrCloudAdminProxy)", "testcase": false, "constructor": true}, {"identifier": "isSolrUp", "parameters": "(List<String> solrCollections, String... solrCollectionsWithAliases)", "modifiers": "public", "return": "boolean", "signature": "boolean isSolrUp(List<String> solrCollections, String... solrCollectionsWithAliases)", "full_signature": "public boolean isSolrUp(List<String> solrCollections, String... solrCollectionsWithAliases)", "class_method_signature": "HealthCheckService.isSolrUp(List<String> solrCollections, String... solrCollectionsWithAliases)", "testcase": false, "constructor": false}, {"identifier": "isDatabaseUp", "parameters": "(ExperimentDao experimentDao)", "modifiers": "public", "return": "boolean", "signature": "boolean isDatabaseUp(ExperimentDao experimentDao)", "full_signature": "public boolean isDatabaseUp(ExperimentDao experimentDao)", "class_method_signature": "HealthCheckService.isDatabaseUp(ExperimentDao experimentDao)", "testcase": false, "constructor": false}], "file": "base/src/main/java/uk/ac/ebi/atlas/monitoring/HealthCheckService.java"}, "focal_method": {"identifier": "isDatabaseUp", "parameters": "(ExperimentDao experimentDao)", "modifiers": "public", "return": "boolean", "body": "public boolean isDatabaseUp(ExperimentDao experimentDao) {\n        try {\n            return experimentDao.countExperiments() > 0;\n        } catch (Exception e) {\n            LOGGER.error(e.getMessage());\n            return false;\n        }\n    }", "signature": "boolean isDatabaseUp(ExperimentDao experimentDao)", "full_signature": "public boolean isDatabaseUp(ExperimentDao experimentDao)", "class_method_signature": "HealthCheckService.isDatabaseUp(ExperimentDao experimentDao)", "testcase": false, "constructor": false, "invocations": ["countExperiments", "error", "getMessage"]}, "repository": {"repo_id": 5426219, "url": "https://github.com/ebi-gene-expression-group/atlas", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 24, "size": 877296, "license": "licensed"}}