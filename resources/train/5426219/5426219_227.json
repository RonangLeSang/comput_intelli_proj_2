{"test_class": {"identifier": "ReactomeClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Set<String> SET_OF_45_STABLE_IDS = ImmutableSet.of(\n            \"R-HSA-15869\", \"R-HSA-37001\", \"R-HSA-43124\", \"R-HSA-48888\", \"R-HSA-49155\",\n            \"R-HSA-49189\", \"R-HSA-49191\", \"R-HSA-49291\", \"R-HSA-49335\", \"R-HSA-49459\",\n            \"R-HSA-49489\", \"R-HSA-49491\", \"R-HSA-49493\", \"R-HSA-49495\", \"R-HSA-49699\",\n            \"R-HSA-49701\", \"R-HSA-49725\", \"R-HSA-49741\", \"R-HSA-49743\", \"R-HSA-49745\",\n            \"R-HSA-49859\", \"R-HSA-49865\", \"R-HSA-49925\", \"R-HSA-49927\", \"R-HSA-49929\",\n            \"R-HSA-50099\", \"R-HSA-50119\", \"R-HSA-50171\", \"R-HSA-50270\", \"R-HSA-50320\",\n            \"R-HSA-50498\", \"R-HSA-50500\", \"R-HSA-50508\", \"R-HSA-50514\", \"R-HSA-50516\",\n            \"R-HSA-50518\", \"R-HSA-50522\", \"R-HSA-50662\", \"R-HSA-50690\", \"R-HSA-50757\",\n            \"R-HSA-50825\", \"R-HSA-50845\", \"R-HSA-50847\", \"R-HSA-50849\", \"R-HSA-50851\");", "modifier": "private static final", "type": "Set<String>", "declarator": "SET_OF_45_STABLE_IDS = ImmutableSet.of(\n            \"R-HSA-15869\", \"R-HSA-37001\", \"R-HSA-43124\", \"R-HSA-48888\", \"R-HSA-49155\",\n            \"R-HSA-49189\", \"R-HSA-49191\", \"R-HSA-49291\", \"R-HSA-49335\", \"R-HSA-49459\",\n            \"R-HSA-49489\", \"R-HSA-49491\", \"R-HSA-49493\", \"R-HSA-49495\", \"R-HSA-49699\",\n            \"R-HSA-49701\", \"R-HSA-49725\", \"R-HSA-49741\", \"R-HSA-49743\", \"R-HSA-49745\",\n            \"R-HSA-49859\", \"R-HSA-49865\", \"R-HSA-49925\", \"R-HSA-49927\", \"R-HSA-49929\",\n            \"R-HSA-50099\", \"R-HSA-50119\", \"R-HSA-50171\", \"R-HSA-50270\", \"R-HSA-50320\",\n            \"R-HSA-50498\", \"R-HSA-50500\", \"R-HSA-50508\", \"R-HSA-50514\", \"R-HSA-50516\",\n            \"R-HSA-50518\", \"R-HSA-50522\", \"R-HSA-50662\", \"R-HSA-50690\", \"R-HSA-50757\",\n            \"R-HSA-50825\", \"R-HSA-50845\", \"R-HSA-50847\", \"R-HSA-50849\", \"R-HSA-50851\")", "var_name": "SET_OF_45_STABLE_IDS"}, {"original_string": "@Mock\n    private RestTemplate restTemplateMock;", "modifier": "@Mock\n    private", "type": "RestTemplate", "declarator": "restTemplateMock", "var_name": "restTemplateMock"}, {"original_string": "private ReactomeClient subject;", "modifier": "private", "type": "ReactomeClient", "declarator": "subject", "var_name": "subject"}], "file": "base/src/test/java/uk/ac/ebi/atlas/utils/ReactomeClientTest.java"}, "test_case": {"identifier": "returnEmptyIfEmptyResponse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void returnEmptyIfEmptyResponse() {\n        when(restTemplateMock.postForObject(eq(ReactomeClient.URL), anyString(), eq(String.class))).thenReturn(\"\");\n\n        assertThat(subject.getPathwayNames(ImmutableSet.of(\"R-FOO-123\")).entrySet(), hasSize(0));\n    }", "signature": "void returnEmptyIfEmptyResponse()", "full_signature": "@Test public void returnEmptyIfEmptyResponse()", "class_method_signature": "ReactomeClientTest.returnEmptyIfEmptyResponse()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "postForObject", "eq", "anyString", "eq", "assertThat", "entrySet", "getPathwayNames", "of", "hasSize"]}, "focal_class": {"identifier": "ReactomeClient", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ReactomeClient.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ReactomeClient.class)", "var_name": "LOGGER"}, {"original_string": "static final String URL = \"http://reactome.org/ContentService/data/query/ids\";", "modifier": "static final", "type": "String", "declarator": "URL = \"http://reactome.org/ContentService/data/query/ids\"", "var_name": "URL"}, {"original_string": "static final int QUERY_MAX_SIZE = 20;", "modifier": "static final", "type": "int", "declarator": "QUERY_MAX_SIZE = 20", "var_name": "QUERY_MAX_SIZE"}, {"original_string": "private static final String PLANT_URL = \"http://plantreactome.gramene.org/ContentService/data/query/ids\";", "modifier": "private static final", "type": "String", "declarator": "PLANT_URL = \"http://plantreactome.gramene.org/ContentService/data/query/ids\"", "var_name": "PLANT_URL"}, {"original_string": "private static final String STATIC_ID_FIELD = \"stId\";", "modifier": "private static final", "type": "String", "declarator": "STATIC_ID_FIELD = \"stId\"", "var_name": "STATIC_ID_FIELD"}, {"original_string": "private static final String DISPLAY_NAME_FIELD = \"displayName\";", "modifier": "private static final", "type": "String", "declarator": "DISPLAY_NAME_FIELD = \"displayName\"", "var_name": "DISPLAY_NAME_FIELD"}, {"original_string": "private final RestTemplate restTemplate;", "modifier": "private final", "type": "RestTemplate", "declarator": "restTemplate", "var_name": "restTemplate"}], "methods": [{"identifier": "ReactomeClient", "parameters": "(RestTemplate restTemplate)", "modifiers": "@Inject public", "return": "", "signature": " ReactomeClient(RestTemplate restTemplate)", "full_signature": "@Inject public  ReactomeClient(RestTemplate restTemplate)", "class_method_signature": "ReactomeClient.ReactomeClient(RestTemplate restTemplate)", "testcase": false, "constructor": true}, {"identifier": "getPathwayName", "parameters": "(String reactomeId)", "modifiers": "public", "return": "Optional<String>", "signature": "Optional<String> getPathwayName(String reactomeId)", "full_signature": "public Optional<String> getPathwayName(String reactomeId)", "class_method_signature": "ReactomeClient.getPathwayName(String reactomeId)", "testcase": false, "constructor": false}, {"identifier": "getPlantPathwayName", "parameters": "(String reactomeId)", "modifiers": "public", "return": "Optional<String>", "signature": "Optional<String> getPlantPathwayName(String reactomeId)", "full_signature": "public Optional<String> getPlantPathwayName(String reactomeId)", "class_method_signature": "ReactomeClient.getPlantPathwayName(String reactomeId)", "testcase": false, "constructor": false}, {"identifier": "getPathwayNames", "parameters": "(Collection<String> stableIds)", "modifiers": "public", "return": "ImmutableMap<String, String>", "signature": "ImmutableMap<String, String> getPathwayNames(Collection<String> stableIds)", "full_signature": "public ImmutableMap<String, String> getPathwayNames(Collection<String> stableIds)", "class_method_signature": "ReactomeClient.getPathwayNames(Collection<String> stableIds)", "testcase": false, "constructor": false}, {"identifier": "getPlantPathwayNames", "parameters": "(Collection<String> stableIds)", "modifiers": "public", "return": "ImmutableMap<String, String>", "signature": "ImmutableMap<String, String> getPlantPathwayNames(Collection<String> stableIds)", "full_signature": "public ImmutableMap<String, String> getPlantPathwayNames(Collection<String> stableIds)", "class_method_signature": "ReactomeClient.getPlantPathwayNames(Collection<String> stableIds)", "testcase": false, "constructor": false}, {"identifier": "getPartitions", "parameters": "(Collection<String> stableIds)", "modifiers": "private", "return": "List<List<String>>", "signature": "List<List<String>> getPartitions(Collection<String> stableIds)", "full_signature": "private List<List<String>> getPartitions(Collection<String> stableIds)", "class_method_signature": "ReactomeClient.getPartitions(Collection<String> stableIds)", "testcase": false, "constructor": false}, {"identifier": "getMappedIds", "parameters": "(Collection<String> stableIds,\n                                                      ImmutableMap.Builder<String, String> mappedStableIdsBuilder)", "modifiers": "private", "return": "ImmutableMap<String, String>", "signature": "ImmutableMap<String, String> getMappedIds(Collection<String> stableIds,\n                                                      ImmutableMap.Builder<String, String> mappedStableIdsBuilder)", "full_signature": "private ImmutableMap<String, String> getMappedIds(Collection<String> stableIds,\n                                                      ImmutableMap.Builder<String, String> mappedStableIdsBuilder)", "class_method_signature": "ReactomeClient.getMappedIds(Collection<String> stableIds,\n                                                      ImmutableMap.Builder<String, String> mappedStableIdsBuilder)", "testcase": false, "constructor": false}, {"identifier": "fetchPathwayNames", "parameters": "(Collection<String> stableIds)", "modifiers": "private", "return": "ImmutableMap<String, String>", "signature": "ImmutableMap<String, String> fetchPathwayNames(Collection<String> stableIds)", "full_signature": "private ImmutableMap<String, String> fetchPathwayNames(Collection<String> stableIds)", "class_method_signature": "ReactomeClient.fetchPathwayNames(Collection<String> stableIds)", "testcase": false, "constructor": false}, {"identifier": "fetchPlantPathwayNames", "parameters": "(Collection<String> stableIds)", "modifiers": "private", "return": "ImmutableMap<String, String>", "signature": "ImmutableMap<String, String> fetchPlantPathwayNames(Collection<String> stableIds)", "full_signature": "private ImmutableMap<String, String> fetchPlantPathwayNames(Collection<String> stableIds)", "class_method_signature": "ReactomeClient.fetchPlantPathwayNames(Collection<String> stableIds)", "testcase": false, "constructor": false}, {"identifier": "parseResponse", "parameters": "(Collection<String> stableIds, String url)", "modifiers": "private", "return": "ImmutableMap<String, String>", "signature": "ImmutableMap<String, String> parseResponse(Collection<String> stableIds, String url)", "full_signature": "private ImmutableMap<String, String> parseResponse(Collection<String> stableIds, String url)", "class_method_signature": "ReactomeClient.parseResponse(Collection<String> stableIds, String url)", "testcase": false, "constructor": false}, {"identifier": "parseJsonResponse", "parameters": "(String response, Collection<String> stableIds)", "modifiers": "private", "return": "ImmutableMap<String, String>", "signature": "ImmutableMap<String, String> parseJsonResponse(String response, Collection<String> stableIds)", "full_signature": "private ImmutableMap<String, String> parseJsonResponse(String response, Collection<String> stableIds)", "class_method_signature": "ReactomeClient.parseJsonResponse(String response, Collection<String> stableIds)", "testcase": false, "constructor": false}, {"identifier": "logMissingIds", "parameters": "(Collection<String> stableIds, Map<String, String> mappedIds)", "modifiers": "private", "return": "void", "signature": "void logMissingIds(Collection<String> stableIds, Map<String, String> mappedIds)", "full_signature": "private void logMissingIds(Collection<String> stableIds, Map<String, String> mappedIds)", "class_method_signature": "ReactomeClient.logMissingIds(Collection<String> stableIds, Map<String, String> mappedIds)", "testcase": false, "constructor": false}], "file": "base/src/main/java/uk/ac/ebi/atlas/utils/ReactomeClient.java"}, "focal_method": {"identifier": "getPathwayNames", "parameters": "(Collection<String> stableIds)", "modifiers": "public", "return": "ImmutableMap<String, String>", "body": "public ImmutableMap<String, String> getPathwayNames(Collection<String> stableIds) {\n        ImmutableMap.Builder<String, String> mappedStableIdsBuilder = ImmutableMap.builder();\n        for (List<String> partition : getPartitions(stableIds)) {\n            mappedStableIdsBuilder.putAll(fetchPathwayNames(partition));\n        }\n        return getMappedIds(stableIds, mappedStableIdsBuilder);\n    }", "signature": "ImmutableMap<String, String> getPathwayNames(Collection<String> stableIds)", "full_signature": "public ImmutableMap<String, String> getPathwayNames(Collection<String> stableIds)", "class_method_signature": "ReactomeClient.getPathwayNames(Collection<String> stableIds)", "testcase": false, "constructor": false, "invocations": ["builder", "getPartitions", "putAll", "fetchPathwayNames", "getMappedIds"]}, "repository": {"repo_id": 5426219, "url": "https://github.com/ebi-gene-expression-group/atlas", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 24, "size": 877296, "license": "licensed"}}