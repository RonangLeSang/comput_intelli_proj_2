{"test_class": {"identifier": "GeneSearchServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private GeneSearchDao geneSearchDaoMock;", "modifier": "@Mock\n    private", "type": "GeneSearchDao", "declarator": "geneSearchDaoMock", "var_name": "geneSearchDaoMock"}, {"original_string": "@Mock\n    private TsnePlotSettingsService tsnePlotSettingsServiceMock;", "modifier": "@Mock\n    private", "type": "TsnePlotSettingsService", "declarator": "tsnePlotSettingsServiceMock", "var_name": "tsnePlotSettingsServiceMock"}, {"original_string": "private GeneSearchService subject;", "modifier": "private", "type": "GeneSearchService", "declarator": "subject", "var_name": "subject"}], "file": "sc/src/test/java/uk/ac/ebi/atlas/search/GeneSearchServiceTest.java"}, "test_case": {"identifier": "returnsFacets", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void returnsFacets() {\n        String experimentAccession1 = generateRandomExperimentAccession();\n        String experimentAccession2 = generateRandomExperimentAccession();\n\n        when(geneSearchDaoMock.getFacets(anyList(), any(SingleCellAnalyticsSchemaField.class)))\n                .thenReturn(ImmutableMap.of(\n                        experimentAccession1, ImmutableMap.of(\n                                \"inferred_cell_type\", Arrays.asList(\"neuron\", \"stem cell\"),\n                                \"species\", Collections.singletonList(\"homo sapiens\")),\n                        experimentAccession2, ImmutableMap.of(\n                                \"inferred_cell_type\", Arrays.asList(\"immune cell\", \"liver cell\", \"stem cell\"),\n                                \"organism_part\", Collections.singletonList(\"liver\"),\n                                \"species\", Arrays.asList(\"homo sapiens\", \"mus musculus\"))\n                ));\n\n        Map<String, Map<String, List<String>>> result = subject.getFacets(Arrays.asList(\"cell_id_1\", \"cell_id_2\"));\n\n        assertThat(result)\n                .isNotEmpty()\n                .containsOnlyKeys(experimentAccession1, experimentAccession2);\n\n        assertThat(result.get(experimentAccession1)).containsKeys(\"species\");\n        assertThat(result.get(experimentAccession2)).containsKeys(\"species\");\n    }", "signature": "void returnsFacets()", "full_signature": "@Test void returnsFacets()", "class_method_signature": "GeneSearchServiceTest.returnsFacets()", "testcase": true, "constructor": false, "invocations": ["generateRandomExperimentAccession", "generateRandomExperimentAccession", "thenReturn", "when", "getFacets", "anyList", "any", "of", "of", "asList", "singletonList", "of", "asList", "singletonList", "asList", "getFacets", "asList", "containsOnlyKeys", "isNotEmpty", "assertThat", "containsKeys", "assertThat", "get", "containsKeys", "assertThat", "get"]}, "focal_class": {"identifier": "GeneSearchService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GeneSearchDao geneSearchDao;", "modifier": "private", "type": "GeneSearchDao", "declarator": "geneSearchDao", "var_name": "geneSearchDao"}, {"original_string": "private TsnePlotSettingsService tsnePlotSettingsService;", "modifier": "private", "type": "TsnePlotSettingsService", "declarator": "tsnePlotSettingsService", "var_name": "tsnePlotSettingsService"}], "methods": [{"identifier": "GeneSearchService", "parameters": "(GeneSearchDao geneSearchDao, TsnePlotSettingsService tsnePlotSettingsService)", "modifiers": "public", "return": "", "signature": " GeneSearchService(GeneSearchDao geneSearchDao, TsnePlotSettingsService tsnePlotSettingsService)", "full_signature": "public  GeneSearchService(GeneSearchDao geneSearchDao, TsnePlotSettingsService tsnePlotSettingsService)", "class_method_signature": "GeneSearchService.GeneSearchService(GeneSearchDao geneSearchDao, TsnePlotSettingsService tsnePlotSettingsService)", "testcase": false, "constructor": true}, {"identifier": "getCellIdsInExperiments", "parameters": "(String... geneIds)", "modifiers": "public", "return": "Map<String, Map<String, List<String>>>", "signature": "Map<String, Map<String, List<String>>> getCellIdsInExperiments(String... geneIds)", "full_signature": "public Map<String, Map<String, List<String>>> getCellIdsInExperiments(String... geneIds)", "class_method_signature": "GeneSearchService.getCellIdsInExperiments(String... geneIds)", "testcase": false, "constructor": false}, {"identifier": "getFacets", "parameters": "(List<String> cellIds)", "modifiers": "public", "return": "Map<String, Map<String, List<String>>>", "signature": "Map<String, Map<String, List<String>>> getFacets(List<String> cellIds)", "full_signature": "public Map<String, Map<String, List<String>>> getFacets(List<String> cellIds)", "class_method_signature": "GeneSearchService.getFacets(List<String> cellIds)", "testcase": false, "constructor": false}, {"identifier": "getMarkerGeneProfile", "parameters": "(String... geneIds)", "modifiers": "public", "return": "Map<String, Map<String, Map<Integer, List<Integer>>>>", "signature": "Map<String, Map<String, Map<Integer, List<Integer>>>> getMarkerGeneProfile(String... geneIds)", "full_signature": "public Map<String, Map<String, Map<Integer, List<Integer>>>> getMarkerGeneProfile(String... geneIds)", "class_method_signature": "GeneSearchService.getMarkerGeneProfile(String... geneIds)", "testcase": false, "constructor": false}, {"identifier": "fetchInParallel", "parameters": "(Set<String> geneIds, Function<String, T> geneIdInfoProvider)", "modifiers": "private", "return": "Map<String, T>", "signature": "Map<String, T> fetchInParallel(Set<String> geneIds, Function<String, T> geneIdInfoProvider)", "full_signature": "private Map<String, T> fetchInParallel(Set<String> geneIds, Function<String, T> geneIdInfoProvider)", "class_method_signature": "GeneSearchService.fetchInParallel(Set<String> geneIds, Function<String, T> geneIdInfoProvider)", "testcase": false, "constructor": false}, {"identifier": "fetchClusterIDWithPreferredKAndMinPForGeneID", "parameters": "(\n            List<String> experimentAccessions, String geneId)", "modifiers": "private", "return": "Map<String, Map<Integer, List<Integer>>>", "signature": "Map<String, Map<Integer, List<Integer>>> fetchClusterIDWithPreferredKAndMinPForGeneID(\n            List<String> experimentAccessions, String geneId)", "full_signature": "private Map<String, Map<Integer, List<Integer>>> fetchClusterIDWithPreferredKAndMinPForGeneID(\n            List<String> experimentAccessions, String geneId)", "class_method_signature": "GeneSearchService.fetchClusterIDWithPreferredKAndMinPForGeneID(\n            List<String> experimentAccessions, String geneId)", "testcase": false, "constructor": false}], "file": "sc/src/main/java/uk/ac/ebi/atlas/search/GeneSearchService.java"}, "focal_method": {"identifier": "getFacets", "parameters": "(List<String> cellIds)", "modifiers": "public", "return": "Map<String, Map<String, List<String>>>", "body": "public Map<String, Map<String, List<String>>> getFacets(List<String> cellIds) {\n        return geneSearchDao.getFacets(\n                cellIds,\n                CHARACTERISTIC_INFERRED_CELL_TYPE, CHARACTERISTIC_ORGANISM_PART, CHARACTERISTIC_SPECIES);\n    }", "signature": "Map<String, Map<String, List<String>>> getFacets(List<String> cellIds)", "full_signature": "public Map<String, Map<String, List<String>>> getFacets(List<String> cellIds)", "class_method_signature": "GeneSearchService.getFacets(List<String> cellIds)", "testcase": false, "constructor": false, "invocations": ["getFacets"]}, "repository": {"repo_id": 5426219, "url": "https://github.com/ebi-gene-expression-group/atlas", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 24, "size": 877296, "license": "licensed"}}