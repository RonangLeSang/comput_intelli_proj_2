{"test_class": {"identifier": "GsonJSONSerializationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GsonJSONSerialization serialization;", "modifier": "private", "type": "GsonJSONSerialization", "declarator": "serialization", "var_name": "serialization"}, {"original_string": "private ByteArrayOutputStream stream;", "modifier": "private", "type": "ByteArrayOutputStream", "declarator": "stream", "var_name": "stream"}, {"original_string": "private HttpServletResponse response;", "modifier": "private", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}, {"original_string": "private DefaultTypeNameExtractor extractor;", "modifier": "private", "type": "DefaultTypeNameExtractor", "declarator": "extractor", "var_name": "extractor"}, {"original_string": "private Environment environment;", "modifier": "private", "type": "Environment", "declarator": "environment", "var_name": "environment"}, {"original_string": "private GsonSerializerBuilder builder;", "modifier": "private", "type": "GsonSerializerBuilder", "declarator": "builder", "var_name": "builder"}], "file": "vraptor-core/src/test/java/br/com/caelum/vraptor/serialization/gson/GsonJSONSerializationTest.java"}, "test_case": {"identifier": "shouldExcludeOnlyOmmitedFields", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldExcludeOnlyOmmitedFields() {\n\t\tUser user = new User(\"caelum\", \"pwd12345\",\n\t\t\tnew UserPrivateInfo(\"123.456.789-00\", \"+55 (11) 1111-1111\"));\n\t\tserialization.from(user).recursive().serialize();\n\n\t\tassertThat(result(), not(containsString(\"\\\"pwd12345\\\"\")));\n\t\tassertThat(result(), not(containsString(\"password\")));\n\t\tassertThat(result(), containsString(\"\\\"caelum\\\"\"));\n\t\tassertThat(result(), containsString(\"login\"));\n\t}", "signature": "void shouldExcludeOnlyOmmitedFields()", "full_signature": "@Test public void shouldExcludeOnlyOmmitedFields()", "class_method_signature": "GsonJSONSerializationTest.shouldExcludeOnlyOmmitedFields()", "testcase": true, "constructor": false, "invocations": ["serialize", "recursive", "from", "assertThat", "result", "not", "containsString", "assertThat", "result", "not", "containsString", "assertThat", "result", "containsString", "assertThat", "result", "containsString"]}, "focal_class": {"identifier": "GsonJSONSerialization", "superclass": "", "interfaces": "implements JSONSerialization", "fields": [{"original_string": "private final HttpServletResponse response;", "modifier": "private final", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}, {"original_string": "private final TypeNameExtractor extractor;", "modifier": "private final", "type": "TypeNameExtractor", "declarator": "extractor", "var_name": "extractor"}, {"original_string": "private final GsonSerializerBuilder builder;", "modifier": "private final", "type": "GsonSerializerBuilder", "declarator": "builder", "var_name": "builder"}, {"original_string": "private Environment environment;", "modifier": "private", "type": "Environment", "declarator": "environment", "var_name": "environment"}, {"original_string": "private ReflectionProvider reflectionProvider;", "modifier": "private", "type": "ReflectionProvider", "declarator": "reflectionProvider", "var_name": "reflectionProvider"}], "methods": [{"identifier": "GsonJSONSerialization", "parameters": "()", "modifiers": "protected", "return": "", "signature": " GsonJSONSerialization()", "full_signature": "protected  GsonJSONSerialization()", "class_method_signature": "GsonJSONSerialization.GsonJSONSerialization()", "testcase": false, "constructor": true}, {"identifier": "GsonJSONSerialization", "parameters": "(HttpServletResponse response, TypeNameExtractor extractor,\n\t\t\tGsonSerializerBuilder builder, Environment environment, ReflectionProvider reflectionProvider)", "modifiers": "@Inject public", "return": "", "signature": " GsonJSONSerialization(HttpServletResponse response, TypeNameExtractor extractor,\n\t\t\tGsonSerializerBuilder builder, Environment environment, ReflectionProvider reflectionProvider)", "full_signature": "@Inject public  GsonJSONSerialization(HttpServletResponse response, TypeNameExtractor extractor,\n\t\t\tGsonSerializerBuilder builder, Environment environment, ReflectionProvider reflectionProvider)", "class_method_signature": "GsonJSONSerialization.GsonJSONSerialization(HttpServletResponse response, TypeNameExtractor extractor,\n\t\t\tGsonSerializerBuilder builder, Environment environment, ReflectionProvider reflectionProvider)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "()", "modifiers": "@PostConstruct protected", "return": "void", "signature": "void init()", "full_signature": "@PostConstruct protected void init()", "class_method_signature": "GsonJSONSerialization.init()", "testcase": false, "constructor": false}, {"identifier": "accepts", "parameters": "(String format)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean accepts(String format)", "full_signature": "@Override public boolean accepts(String format)", "class_method_signature": "GsonJSONSerialization.accepts(String format)", "testcase": false, "constructor": false}, {"identifier": "from", "parameters": "(T object)", "modifiers": "@Override public", "return": "Serializer", "signature": "Serializer from(T object)", "full_signature": "@Override public Serializer from(T object)", "class_method_signature": "GsonJSONSerialization.from(T object)", "testcase": false, "constructor": false}, {"identifier": "from", "parameters": "(T object, String alias)", "modifiers": "@Override public", "return": "Serializer", "signature": "Serializer from(T object, String alias)", "full_signature": "@Override public Serializer from(T object, String alias)", "class_method_signature": "GsonJSONSerialization.from(T object, String alias)", "testcase": false, "constructor": false}, {"identifier": "getSerializer", "parameters": "()", "modifiers": "protected", "return": "SerializerBuilder", "signature": "SerializerBuilder getSerializer()", "full_signature": "protected SerializerBuilder getSerializer()", "class_method_signature": "GsonJSONSerialization.getSerializer()", "testcase": false, "constructor": false}, {"identifier": "withoutRoot", "parameters": "()", "modifiers": "@Override public", "return": "NoRootSerialization", "signature": "NoRootSerialization withoutRoot()", "full_signature": "@Override public NoRootSerialization withoutRoot()", "class_method_signature": "GsonJSONSerialization.withoutRoot()", "testcase": false, "constructor": false}, {"identifier": "indented", "parameters": "()", "modifiers": "@Override public", "return": "JSONSerialization", "signature": "JSONSerialization indented()", "full_signature": "@Override public JSONSerialization indented()", "class_method_signature": "GsonJSONSerialization.indented()", "testcase": false, "constructor": false}, {"identifier": "version", "parameters": "(double versionNumber)", "modifiers": "@Override public", "return": "JSONSerialization", "signature": "JSONSerialization version(double versionNumber)", "full_signature": "@Override public JSONSerialization version(double versionNumber)", "class_method_signature": "GsonJSONSerialization.version(double versionNumber)", "testcase": false, "constructor": false}, {"identifier": "serializeNulls", "parameters": "()", "modifiers": "@Override public", "return": "JSONSerialization", "signature": "JSONSerialization serializeNulls()", "full_signature": "@Override public JSONSerialization serializeNulls()", "class_method_signature": "GsonJSONSerialization.serializeNulls()", "testcase": false, "constructor": false}], "file": "vraptor-core/src/main/java/br/com/caelum/vraptor/serialization/gson/GsonJSONSerialization.java"}, "focal_method": {"identifier": "from", "parameters": "(T object)", "modifiers": "@Override public", "return": "Serializer", "body": "@Override\n\tpublic <T> Serializer from(T object) {\n\t\treturn from(object, null);\n\t}", "signature": "Serializer from(T object)", "full_signature": "@Override public Serializer from(T object)", "class_method_signature": "GsonJSONSerialization.from(T object)", "testcase": false, "constructor": false, "invocations": ["from"]}, "repository": {"repo_id": 9821876, "url": "https://github.com/caelum/vraptor4", "language": "Java", "is_fork": false, "fork_count": 323, "stargazer_count": 341, "size": 14087, "license": "licensed"}}