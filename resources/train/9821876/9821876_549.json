{"test_class": {"identifier": "BigIntegerConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic ExpectedException exception = ExpectedException.none();", "modifier": "@Rule\n\tpublic", "type": "ExpectedException", "declarator": "exception = ExpectedException.none()", "var_name": "exception"}, {"original_string": "private BigIntegerConverter converter;", "modifier": "private", "type": "BigIntegerConverter", "declarator": "converter", "var_name": "converter"}], "file": "vraptor-core/src/test/java/br/com/caelum/vraptor/converter/BigIntegerConverterTest.java"}, "test_case": {"identifier": "shouldComplainAboutInvalidNumber", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldComplainAboutInvalidNumber() {\n\t\texception.expect(hasConversionException(\"--- is not a valid number.\"));\n\t\tconverter.convert(\"---\", BigInteger.class);\n\t}", "signature": "void shouldComplainAboutInvalidNumber()", "full_signature": "@Test public void shouldComplainAboutInvalidNumber()", "class_method_signature": "BigIntegerConverterTest.shouldComplainAboutInvalidNumber()", "testcase": true, "constructor": false, "invocations": ["expect", "hasConversionException", "convert"]}, "focal_class": {"identifier": "BigIntegerConverter", "superclass": "", "interfaces": "implements Converter<BigInteger>", "fields": [{"original_string": "public static final String INVALID_MESSAGE_KEY = \"is_not_a_valid_number\";", "modifier": "public static final", "type": "String", "declarator": "INVALID_MESSAGE_KEY = \"is_not_a_valid_number\"", "var_name": "INVALID_MESSAGE_KEY"}], "methods": [{"identifier": "convert", "parameters": "(String value, Class<? extends BigInteger> type)", "modifiers": "@Override public", "return": "BigInteger", "signature": "BigInteger convert(String value, Class<? extends BigInteger> type)", "full_signature": "@Override public BigInteger convert(String value, Class<? extends BigInteger> type)", "class_method_signature": "BigIntegerConverter.convert(String value, Class<? extends BigInteger> type)", "testcase": false, "constructor": false}], "file": "vraptor-core/src/main/java/br/com/caelum/vraptor/converter/BigIntegerConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(String value, Class<? extends BigInteger> type)", "modifiers": "@Override public", "return": "BigInteger", "body": "@Override\n\tpublic BigInteger convert(String value, Class<? extends BigInteger> type) {\n\t\tif (isNullOrEmpty(value)) {\n\t\t\treturn null;\n\t\t}\n\n\t\ttry {\n\t\t\treturn new BigInteger(value);\n\t\t} catch (NumberFormatException e) {\n\t\t\tthrow new ConversionException(new ConversionMessage(INVALID_MESSAGE_KEY, value));\n\t\t}\n\n\t}", "signature": "BigInteger convert(String value, Class<? extends BigInteger> type)", "full_signature": "@Override public BigInteger convert(String value, Class<? extends BigInteger> type)", "class_method_signature": "BigIntegerConverter.convert(String value, Class<? extends BigInteger> type)", "testcase": false, "constructor": false, "invocations": ["isNullOrEmpty"]}, "repository": {"repo_id": 9821876, "url": "https://github.com/caelum/vraptor4", "language": "Java", "is_fork": false, "fork_count": 323, "stargazer_count": 341, "size": 14087, "license": "licensed"}}