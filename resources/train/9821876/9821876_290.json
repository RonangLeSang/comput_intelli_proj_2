{"test_class": {"identifier": "CustomAndInternalAcceptsValidationRuleTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic ExpectedException exception = ExpectedException.none();", "modifier": "@Rule\n\tpublic", "type": "ExpectedException", "declarator": "exception = ExpectedException.none()", "var_name": "exception"}, {"original_string": "private CustomAndInternalAcceptsValidationRule validationRule;", "modifier": "private", "type": "CustomAndInternalAcceptsValidationRule", "declarator": "validationRule", "var_name": "validationRule"}, {"original_string": "private StepInvoker stepInvoker;", "modifier": "private", "type": "StepInvoker", "declarator": "stepInvoker", "var_name": "stepInvoker"}], "file": "vraptor-core/src/test/java/br/com/caelum/vraptor/interceptor/CustomAndInternalAcceptsValidationRuleTest.java"}, "test_case": {"identifier": "shouldValidateIfConstainsOnlyCustomAccepts", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldValidateIfConstainsOnlyCustomAccepts(){\n\t\tClass<?> type = CustomAcceptsInterceptor.class;\n\t\tList<Method> methods = stepInvoker.findAllMethods(type);\n\t\tvalidationRule.validate(type, methods);\n\t}", "signature": "void shouldValidateIfConstainsOnlyCustomAccepts()", "full_signature": "@Test public void shouldValidateIfConstainsOnlyCustomAccepts()", "class_method_signature": "CustomAndInternalAcceptsValidationRuleTest.shouldValidateIfConstainsOnlyCustomAccepts()", "testcase": true, "constructor": false, "invocations": ["findAllMethods", "validate"]}, "focal_class": {"identifier": "CustomAndInternalAcceptsValidationRule", "superclass": "", "interfaces": "implements ValidationRule", "fields": [{"original_string": "private final StepInvoker invoker;", "modifier": "private final", "type": "StepInvoker", "declarator": "invoker", "var_name": "invoker"}], "methods": [{"identifier": "CustomAndInternalAcceptsValidationRule", "parameters": "()", "modifiers": "protected", "return": "", "signature": " CustomAndInternalAcceptsValidationRule()", "full_signature": "protected  CustomAndInternalAcceptsValidationRule()", "class_method_signature": "CustomAndInternalAcceptsValidationRule.CustomAndInternalAcceptsValidationRule()", "testcase": false, "constructor": true}, {"identifier": "CustomAndInternalAcceptsValidationRule", "parameters": "(StepInvoker invoker)", "modifiers": "@Inject public", "return": "", "signature": " CustomAndInternalAcceptsValidationRule(StepInvoker invoker)", "full_signature": "@Inject public  CustomAndInternalAcceptsValidationRule(StepInvoker invoker)", "class_method_signature": "CustomAndInternalAcceptsValidationRule.CustomAndInternalAcceptsValidationRule(StepInvoker invoker)", "testcase": false, "constructor": true}, {"identifier": "validate", "parameters": "(Class<?> originalType, List<Method> methods)", "modifiers": "@Override public", "return": "void", "signature": "void validate(Class<?> originalType, List<Method> methods)", "full_signature": "@Override public void validate(Class<?> originalType, List<Method> methods)", "class_method_signature": "CustomAndInternalAcceptsValidationRule.validate(Class<?> originalType, List<Method> methods)", "testcase": false, "constructor": false}], "file": "vraptor-core/src/main/java/br/com/caelum/vraptor/interceptor/CustomAndInternalAcceptsValidationRule.java"}, "focal_method": {"identifier": "validate", "parameters": "(Class<?> originalType, List<Method> methods)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void validate(Class<?> originalType, List<Method> methods) {\n\n\t\tMethod accepts = invoker.findMethod(methods, Accepts.class, originalType);\n\t\tList<Annotation> constraints = getCustomAcceptsAnnotations(originalType);\n\n\t\tcheckState(accepts == null || constraints.isEmpty(), \n\t\t\t\t\"Interceptor %s must declare internal accepts or custom, not both.\", originalType);\n\t}", "signature": "void validate(Class<?> originalType, List<Method> methods)", "full_signature": "@Override public void validate(Class<?> originalType, List<Method> methods)", "class_method_signature": "CustomAndInternalAcceptsValidationRule.validate(Class<?> originalType, List<Method> methods)", "testcase": false, "constructor": false, "invocations": ["findMethod", "getCustomAcceptsAnnotations", "checkState", "isEmpty"]}, "repository": {"repo_id": 9821876, "url": "https://github.com/caelum/vraptor4", "language": "Java", "is_fork": false, "fork_count": 323, "stargazer_count": 341, "size": 14087, "license": "licensed"}}