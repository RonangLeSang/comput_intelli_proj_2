{"test_class": {"identifier": "SpecificityControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public final MockitoComponentMockingRule<PatientDataController<Object>> mocker =\n        new MockitoComponentMockingRule<>(SpecificityController.class);", "modifier": "@Rule\n    public final", "type": "MockitoComponentMockingRule<PatientDataController<Object>>", "declarator": "mocker =\n        new MockitoComponentMockingRule<>(SpecificityController.class)", "var_name": "mocker"}, {"original_string": "@Mock\n    private Patient patient;", "modifier": "@Mock\n    private", "type": "Patient", "declarator": "patient", "var_name": "patient"}, {"original_string": "@Mock\n    private PatientSpecificity spec;", "modifier": "@Mock\n    private", "type": "PatientSpecificity", "declarator": "spec", "var_name": "spec"}, {"original_string": "private PatientSpecificityService service;", "modifier": "private", "type": "PatientSpecificityService", "declarator": "service", "var_name": "service"}, {"original_string": "private Date date;", "modifier": "private", "type": "Date", "declarator": "date", "var_name": "date"}, {"original_string": "private String dateStr;", "modifier": "private", "type": "String", "declarator": "dateStr", "var_name": "dateStr"}, {"original_string": "private DateFormat isoDateFormat;", "modifier": "private", "type": "DateFormat", "declarator": "isoDateFormat", "var_name": "isoDateFormat"}], "file": "components/specificity-meter/api/src/test/java/org/phenotips/data/internal/controller/SpecificityControllerTest.java"}, "test_case": {"identifier": "writeJSONWithNoSpecificityDoesNothing", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void writeJSONWithNoSpecificityDoesNothing() throws ComponentLookupException\n    {\n        when(this.patient.getData(\"specificity\")).thenReturn(null);\n        JSONObject json = new JSONObject();\n        this.mocker.getComponentUnderTest().writeJSON(this.patient, json);\n        Assert.assertEquals(0, json.length());\n    }", "signature": "void writeJSONWithNoSpecificityDoesNothing()", "full_signature": "@Test public void writeJSONWithNoSpecificityDoesNothing()", "class_method_signature": "SpecificityControllerTest.writeJSONWithNoSpecificityDoesNothing()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getData", "writeJSON", "getComponentUnderTest", "assertEquals", "length"]}, "focal_class": {"identifier": "SpecificityController", "superclass": "", "interfaces": "implements PatientDataController<Object>, Initializable", "fields": [{"original_string": "private static final String NAME = \"specificity\";", "modifier": "private static final", "type": "String", "declarator": "NAME = \"specificity\"", "var_name": "NAME"}, {"original_string": "@Inject\n    private PatientSpecificityService service;", "modifier": "@Inject\n    private", "type": "PatientSpecificityService", "declarator": "service", "var_name": "service"}, {"original_string": "private DateFormat isoDateFormat;", "modifier": "private", "type": "DateFormat", "declarator": "isoDateFormat", "var_name": "isoDateFormat"}], "methods": [{"identifier": "initialize", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void initialize()", "full_signature": "@Override public void initialize()", "class_method_signature": "SpecificityController.initialize()", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(Patient patient)", "modifiers": "@Override public", "return": "PatientData<Object>", "signature": "PatientData<Object> load(Patient patient)", "full_signature": "@Override public PatientData<Object> load(Patient patient)", "class_method_signature": "SpecificityController.load(Patient patient)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(Patient patient)", "modifiers": "@Override public", "return": "void", "signature": "void save(Patient patient)", "full_signature": "@Override public void save(Patient patient)", "class_method_signature": "SpecificityController.save(Patient patient)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(final Patient patient, final PatientWritePolicy policy)", "modifiers": "@Override public", "return": "void", "signature": "void save(final Patient patient, final PatientWritePolicy policy)", "full_signature": "@Override public void save(final Patient patient, final PatientWritePolicy policy)", "class_method_signature": "SpecificityController.save(final Patient patient, final PatientWritePolicy policy)", "testcase": false, "constructor": false}, {"identifier": "writeJSON", "parameters": "(Patient patient, JSONObject json)", "modifiers": "@Override public", "return": "void", "signature": "void writeJSON(Patient patient, JSONObject json)", "full_signature": "@Override public void writeJSON(Patient patient, JSONObject json)", "class_method_signature": "SpecificityController.writeJSON(Patient patient, JSONObject json)", "testcase": false, "constructor": false}, {"identifier": "writeJSON", "parameters": "(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "modifiers": "@Override public", "return": "void", "signature": "void writeJSON(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "full_signature": "@Override public void writeJSON(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "class_method_signature": "SpecificityController.writeJSON(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "testcase": false, "constructor": false}, {"identifier": "readJSON", "parameters": "(JSONObject json)", "modifiers": "@Override public", "return": "PatientData<Object>", "signature": "PatientData<Object> readJSON(JSONObject json)", "full_signature": "@Override public PatientData<Object> readJSON(JSONObject json)", "class_method_signature": "SpecificityController.readJSON(JSONObject json)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "SpecificityController.getName()", "testcase": false, "constructor": false}], "file": "components/specificity-meter/api/src/main/java/org/phenotips/data/internal/controller/SpecificityController.java"}, "focal_method": {"identifier": "writeJSON", "parameters": "(Patient patient, JSONObject json)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void writeJSON(Patient patient, JSONObject json)\n    {\n        writeJSON(patient, json, null);\n    }", "signature": "void writeJSON(Patient patient, JSONObject json)", "full_signature": "@Override public void writeJSON(Patient patient, JSONObject json)", "class_method_signature": "SpecificityController.writeJSON(Patient patient, JSONObject json)", "testcase": false, "constructor": false, "invocations": ["writeJSON"]}, "repository": {"repo_id": 2685841, "url": "https://github.com/phenotips/phenotips", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 87, "size": 1662205, "license": "licensed"}}