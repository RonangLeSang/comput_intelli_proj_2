{"test_class": {"identifier": "FamilyScriptServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public final MockitoComponentMockingRule<FamilyScriptService> mocker =\n        new MockitoComponentMockingRule<>(FamilyScriptService.class);", "modifier": "@Rule\n    public final", "type": "MockitoComponentMockingRule<FamilyScriptService>", "declarator": "mocker =\n        new MockitoComponentMockingRule<>(FamilyScriptService.class)", "var_name": "mocker"}, {"original_string": "@Mock\n    private Family family;", "modifier": "@Mock\n    private", "type": "Family", "declarator": "family", "var_name": "family"}, {"original_string": "private FamilyTools tools;", "modifier": "private", "type": "FamilyTools", "declarator": "tools", "var_name": "tools"}], "file": "components/family-studies/api/src/test/java/org/phenotips/studies/family/script/FamilyScriptServiceTest.java"}, "test_case": {"identifier": "deleteFamilyForwardsCalls", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void deleteFamilyForwardsCalls() throws ComponentLookupException\n    {\n        when(this.tools.deleteFamily(\"FAM0123456\", true)).thenReturn(true);\n        Assert.assertTrue(this.mocker.getComponentUnderTest().deleteFamily(this.family.getId(), true));\n    }", "signature": "void deleteFamilyForwardsCalls()", "full_signature": "@Test public void deleteFamilyForwardsCalls()", "class_method_signature": "FamilyScriptServiceTest.deleteFamilyForwardsCalls()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "deleteFamily", "assertTrue", "deleteFamily", "getComponentUnderTest", "getId"]}, "focal_class": {"identifier": "FamilyScriptService", "superclass": "", "interfaces": "implements ScriptService", "fields": [{"original_string": "@Inject\n    @Named(\"secure\")\n    private FamilyTools familyTools;", "modifier": "@Inject\n    @Named(\"secure\")\n    private", "type": "FamilyTools", "declarator": "familyTools", "var_name": "familyTools"}], "methods": [{"identifier": "create", "parameters": "()", "modifiers": "public", "return": "Family", "signature": "Family create()", "full_signature": "public Family create()", "class_method_signature": "FamilyScriptService.create()", "testcase": false, "constructor": false}, {"identifier": "createFamily", "parameters": "()", "modifiers": "public", "return": "Family", "signature": "Family createFamily()", "full_signature": "public Family createFamily()", "class_method_signature": "FamilyScriptService.createFamily()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String id)", "modifiers": "public", "return": "Family", "signature": "Family get(String id)", "full_signature": "public Family get(String id)", "class_method_signature": "FamilyScriptService.get(String id)", "testcase": false, "constructor": false}, {"identifier": "getFamilyById", "parameters": "(String familyId)", "modifiers": "public", "return": "Family", "signature": "Family getFamilyById(String familyId)", "full_signature": "public Family getFamilyById(String familyId)", "class_method_signature": "FamilyScriptService.getFamilyById(String familyId)", "testcase": false, "constructor": false}, {"identifier": "getPedigreeForFamily", "parameters": "(String familyId)", "modifiers": "public", "return": "Pedigree", "signature": "Pedigree getPedigreeForFamily(String familyId)", "full_signature": "public Pedigree getPedigreeForFamily(String familyId)", "class_method_signature": "FamilyScriptService.getPedigreeForFamily(String familyId)", "testcase": false, "constructor": false}, {"identifier": "getFamilyForPatient", "parameters": "(String patientId)", "modifiers": "public", "return": "Family", "signature": "Family getFamilyForPatient(String patientId)", "full_signature": "public Family getFamilyForPatient(String patientId)", "class_method_signature": "FamilyScriptService.getFamilyForPatient(String patientId)", "testcase": false, "constructor": false}, {"identifier": "getPedigreeForPatient", "parameters": "(String patientId)", "modifiers": "public", "return": "Pedigree", "signature": "Pedigree getPedigreeForPatient(String patientId)", "full_signature": "public Pedigree getPedigreeForPatient(String patientId)", "class_method_signature": "FamilyScriptService.getPedigreeForPatient(String patientId)", "testcase": false, "constructor": false}, {"identifier": "removeMember", "parameters": "(String patientId)", "modifiers": "public", "return": "boolean", "signature": "boolean removeMember(String patientId)", "full_signature": "public boolean removeMember(String patientId)", "class_method_signature": "FamilyScriptService.removeMember(String patientId)", "testcase": false, "constructor": false}, {"identifier": "addMember", "parameters": "(String patientId, String familyId)", "modifiers": "public", "return": "boolean", "signature": "boolean addMember(String patientId, String familyId)", "full_signature": "public boolean addMember(String patientId, String familyId)", "class_method_signature": "FamilyScriptService.addMember(String patientId, String familyId)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Family family)", "modifiers": "public", "return": "boolean", "signature": "boolean delete(Family family)", "full_signature": "public boolean delete(Family family)", "class_method_signature": "FamilyScriptService.delete(Family family)", "testcase": false, "constructor": false}, {"identifier": "deleteFamily", "parameters": "(String familyId, boolean deleteAllMembers)", "modifiers": "public", "return": "boolean", "signature": "boolean deleteFamily(String familyId, boolean deleteAllMembers)", "full_signature": "public boolean deleteFamily(String familyId, boolean deleteAllMembers)", "class_method_signature": "FamilyScriptService.deleteFamily(String familyId, boolean deleteAllMembers)", "testcase": false, "constructor": false}, {"identifier": "canDeleteFamily", "parameters": "(String familyId, boolean deleteAllMembers)", "modifiers": "public", "return": "boolean", "signature": "boolean canDeleteFamily(String familyId, boolean deleteAllMembers)", "full_signature": "public boolean canDeleteFamily(String familyId, boolean deleteAllMembers)", "class_method_signature": "FamilyScriptService.canDeleteFamily(String familyId, boolean deleteAllMembers)", "testcase": false, "constructor": false}], "file": "components/family-studies/api/src/main/java/org/phenotips/studies/family/script/FamilyScriptService.java"}, "focal_method": {"identifier": "deleteFamily", "parameters": "(String familyId, boolean deleteAllMembers)", "modifiers": "public", "return": "boolean", "body": "public boolean deleteFamily(String familyId, boolean deleteAllMembers)\n    {\n        return this.familyTools.deleteFamily(familyId, deleteAllMembers);\n    }", "signature": "boolean deleteFamily(String familyId, boolean deleteAllMembers)", "full_signature": "public boolean deleteFamily(String familyId, boolean deleteAllMembers)", "class_method_signature": "FamilyScriptService.deleteFamily(String familyId, boolean deleteAllMembers)", "testcase": false, "constructor": false, "invocations": ["deleteFamily"]}, "repository": {"repo_id": 2685841, "url": "https://github.com/phenotips/phenotips", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 87, "size": 1662205, "license": "licensed"}}