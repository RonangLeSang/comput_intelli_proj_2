{"test_class": {"identifier": "DefaultPatientByExternalIdResourceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String EID = \"eid\";", "modifier": "private static final", "type": "String", "declarator": "EID = \"eid\"", "var_name": "EID"}, {"original_string": "private static final String ID = \"id\";", "modifier": "private static final", "type": "String", "declarator": "ID = \"id\"", "var_name": "ID"}, {"original_string": "private static final String PATIENT_ID = \"P0000001\";", "modifier": "private static final", "type": "String", "declarator": "PATIENT_ID = \"P0000001\"", "var_name": "PATIENT_ID"}, {"original_string": "private static final String EMPTY_JSON = \"{}\";", "modifier": "private static final", "type": "String", "declarator": "EMPTY_JSON = \"{}\"", "var_name": "EMPTY_JSON"}, {"original_string": "private static final String EXTERNAL_ID = \"external_id\";", "modifier": "private static final", "type": "String", "declarator": "EXTERNAL_ID = \"external_id\"", "var_name": "EXTERNAL_ID"}, {"original_string": "private static final String UPDATE = \"update\";", "modifier": "private static final", "type": "String", "declarator": "UPDATE = \"update\"", "var_name": "UPDATE"}, {"original_string": "@Rule\n    public final MockitoComponentMockingRule<PatientByExternalIdResource> mocker =\n        new MockitoComponentMockingRule<>(DefaultPatientByExternalIdResourceImpl.class);", "modifier": "@Rule\n    public final", "type": "MockitoComponentMockingRule<PatientByExternalIdResource>", "declarator": "mocker =\n        new MockitoComponentMockingRule<>(DefaultPatientByExternalIdResourceImpl.class)", "var_name": "mocker"}, {"original_string": "@Mock\n    private Patient patient;", "modifier": "@Mock\n    private", "type": "Patient", "declarator": "patient", "var_name": "patient"}, {"original_string": "@Mock\n    private UriInfo uriInfo;", "modifier": "@Mock\n    private", "type": "UriInfo", "declarator": "uriInfo", "var_name": "uriInfo"}, {"original_string": "@Mock\n    private UriBuilder uriBuilder;", "modifier": "@Mock\n    private", "type": "UriBuilder", "declarator": "uriBuilder", "var_name": "uriBuilder"}, {"original_string": "@Mock\n    private User currentUser;", "modifier": "@Mock\n    private", "type": "User", "declarator": "currentUser", "var_name": "currentUser"}, {"original_string": "@Mock\n    private EntityReferenceResolver<EntityReference> resolver;", "modifier": "@Mock\n    private", "type": "EntityReferenceResolver<EntityReference>", "declarator": "resolver", "var_name": "resolver"}, {"original_string": "private Logger logger;", "modifier": "private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "private PatientRepository repository;", "modifier": "private", "type": "PatientRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "private DomainObjectFactory factory;", "modifier": "private", "type": "DomainObjectFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "private QueryManager qm;", "modifier": "private", "type": "QueryManager", "declarator": "qm", "var_name": "qm"}, {"original_string": "private AuthorizationService access;", "modifier": "private", "type": "AuthorizationService", "declarator": "access", "var_name": "access"}, {"original_string": "private URI uri;", "modifier": "private", "type": "URI", "declarator": "uri", "var_name": "uri"}, {"original_string": "private DefaultPatientByExternalIdResourceImpl component;", "modifier": "private", "type": "DefaultPatientByExternalIdResourceImpl", "declarator": "component", "var_name": "component"}, {"original_string": "private DocumentReference patientReference = new DocumentReference(\"wiki\", \"data\", PATIENT_ID);", "modifier": "private", "type": "DocumentReference", "declarator": "patientReference = new DocumentReference(\"wiki\", \"data\", PATIENT_ID)", "var_name": "patientReference"}], "file": "components/patient-data/rest/src/test/java/org/phenotips/data/rest/internal/DefaultPatientByExternalIdResourceImplTest.java"}, "test_case": {"identifier": "updatePatientWrongJSONId", "parameters": "()", "modifiers": "@Test(expected = WebApplicationException.class) public", "return": "void", "body": "@Test(expected = WebApplicationException.class)\n    public void updatePatientWrongJSONId() throws ComponentLookupException\n    {\n        this.component.updatePatient(\"{\\\"id\\\":\\\"notid\\\"}\", EID, UPDATE);\n    }", "signature": "void updatePatientWrongJSONId()", "full_signature": "@Test(expected = WebApplicationException.class) public void updatePatientWrongJSONId()", "class_method_signature": "DefaultPatientByExternalIdResourceImplTest.updatePatientWrongJSONId()", "testcase": true, "constructor": false, "invocations": ["updatePatient"]}, "focal_class": {"identifier": "DefaultPatientByExternalIdResourceImpl", "superclass": "extends XWikiResource", "interfaces": "implements PatientByExternalIdResource", "fields": [{"original_string": "private static final String EID_LABEL = \"external_id\";", "modifier": "private static final", "type": "String", "declarator": "EID_LABEL = \"external_id\"", "var_name": "EID_LABEL"}, {"original_string": "@Inject\n    private PatientRepository repository;", "modifier": "@Inject\n    private", "type": "PatientRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "@Inject\n    private DomainObjectFactory factory;", "modifier": "@Inject\n    private", "type": "DomainObjectFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "@Inject\n    private QueryManager qm;", "modifier": "@Inject\n    private", "type": "QueryManager", "declarator": "qm", "var_name": "qm"}, {"original_string": "@Inject\n    private AuthorizationService access;", "modifier": "@Inject\n    private", "type": "AuthorizationService", "declarator": "access", "var_name": "access"}, {"original_string": "@Inject\n    private UserManager users;", "modifier": "@Inject\n    private", "type": "UserManager", "declarator": "users", "var_name": "users"}, {"original_string": "@Inject\n    @Named(\"current\")\n    private EntityReferenceResolver<EntityReference> currentResolver;", "modifier": "@Inject\n    @Named(\"current\")\n    private", "type": "EntityReferenceResolver<EntityReference>", "declarator": "currentResolver", "var_name": "currentResolver"}, {"original_string": "@Inject\n    private Provider<Autolinker> autolinker;", "modifier": "@Inject\n    private", "type": "Provider<Autolinker>", "declarator": "autolinker", "var_name": "autolinker"}], "methods": [{"identifier": "getPatient", "parameters": "(String eid)", "modifiers": "@Override public", "return": "Response", "signature": "Response getPatient(String eid)", "full_signature": "@Override public Response getPatient(String eid)", "class_method_signature": "DefaultPatientByExternalIdResourceImpl.getPatient(String eid)", "testcase": false, "constructor": false}, {"identifier": "updatePatient", "parameters": "(final String json, final String eid, final String policy)", "modifiers": "@Override public", "return": "Response", "signature": "Response updatePatient(final String json, final String eid, final String policy)", "full_signature": "@Override public Response updatePatient(final String json, final String eid, final String policy)", "class_method_signature": "DefaultPatientByExternalIdResourceImpl.updatePatient(final String json, final String eid, final String policy)", "testcase": false, "constructor": false}, {"identifier": "patchPatient", "parameters": "(final String json, final String eid)", "modifiers": "@Override public", "return": "Response", "signature": "Response patchPatient(final String json, final String eid)", "full_signature": "@Override public Response patchPatient(final String json, final String eid)", "class_method_signature": "DefaultPatientByExternalIdResourceImpl.patchPatient(final String json, final String eid)", "testcase": false, "constructor": false}, {"identifier": "updatePatient", "parameters": "(final String json, final String eid, final PatientWritePolicy policy)", "modifiers": "private", "return": "Response", "signature": "Response updatePatient(final String json, final String eid, final PatientWritePolicy policy)", "full_signature": "private Response updatePatient(final String json, final String eid, final PatientWritePolicy policy)", "class_method_signature": "DefaultPatientByExternalIdResourceImpl.updatePatient(final String json, final String eid, final PatientWritePolicy policy)", "testcase": false, "constructor": false}, {"identifier": "deletePatient", "parameters": "(String eid)", "modifiers": "@Override public", "return": "Response", "signature": "Response deletePatient(String eid)", "full_signature": "@Override public Response deletePatient(String eid)", "class_method_signature": "DefaultPatientByExternalIdResourceImpl.deletePatient(String eid)", "testcase": false, "constructor": false}, {"identifier": "checkForMultipleRecords", "parameters": "(Patient patient, String eid)", "modifiers": "private", "return": "Response", "signature": "Response checkForMultipleRecords(Patient patient, String eid)", "full_signature": "private Response checkForMultipleRecords(Patient patient, String eid)", "class_method_signature": "DefaultPatientByExternalIdResourceImpl.checkForMultipleRecords(Patient patient, String eid)", "testcase": false, "constructor": false}, {"identifier": "checkRecords", "parameters": "(final String eid, final String json)", "modifiers": "private", "return": "Response", "signature": "Response checkRecords(final String eid, final String json)", "full_signature": "private Response checkRecords(final String eid, final String json)", "class_method_signature": "DefaultPatientByExternalIdResourceImpl.checkRecords(final String eid, final String json)", "testcase": false, "constructor": false}, {"identifier": "createPatient", "parameters": "(final String eid, final String json)", "modifiers": "private", "return": "Response", "signature": "Response createPatient(final String eid, final String json)", "full_signature": "private Response createPatient(final String eid, final String json)", "class_method_signature": "DefaultPatientByExternalIdResourceImpl.createPatient(final String eid, final String json)", "testcase": false, "constructor": false}, {"identifier": "updatePatientWithJsonData", "parameters": "(final Patient patient, final String eid, final JSONObject patientJson)", "modifiers": "private", "return": "Response", "signature": "Response updatePatientWithJsonData(final Patient patient, final String eid, final JSONObject patientJson)", "full_signature": "private Response updatePatientWithJsonData(final Patient patient, final String eid, final JSONObject patientJson)", "class_method_signature": "DefaultPatientByExternalIdResourceImpl.updatePatientWithJsonData(final Patient patient, final String eid, final JSONObject patientJson)", "testcase": false, "constructor": false}, {"identifier": "hasInternalIdConflict", "parameters": "(final JSONObject jsonInput, final Patient patient)", "modifiers": "private", "return": "boolean", "signature": "boolean hasInternalIdConflict(final JSONObject jsonInput, final Patient patient)", "full_signature": "private boolean hasInternalIdConflict(final JSONObject jsonInput, final Patient patient)", "class_method_signature": "DefaultPatientByExternalIdResourceImpl.hasInternalIdConflict(final JSONObject jsonInput, final Patient patient)", "testcase": false, "constructor": false}], "file": "components/patient-data/rest/src/main/java/org/phenotips/data/rest/internal/DefaultPatientByExternalIdResourceImpl.java"}, "focal_method": {"identifier": "updatePatient", "parameters": "(final String json, final String eid, final String policy)", "modifiers": "@Override public", "return": "Response", "body": "@Override\n    public Response updatePatient(final String json, final String eid, final String policy)\n    {\n        final PatientWritePolicy policyType = PatientWritePolicy.fromString(policy);\n        return updatePatient(json, eid, policyType);\n    }", "signature": "Response updatePatient(final String json, final String eid, final String policy)", "full_signature": "@Override public Response updatePatient(final String json, final String eid, final String policy)", "class_method_signature": "DefaultPatientByExternalIdResourceImpl.updatePatient(final String json, final String eid, final String policy)", "testcase": false, "constructor": false, "invocations": ["fromString", "updatePatient"]}, "repository": {"repo_id": 2685841, "url": "https://github.com/phenotips/phenotips", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 87, "size": 1662205, "license": "licensed"}}