{"test_class": {"identifier": "SecureEntityPermissionsManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public final MockitoComponentMockingRule<EntityPermissionsManager> mocker =\n        new MockitoComponentMockingRule<EntityPermissionsManager>(SecureEntityPermissionsManager.class);", "modifier": "@Rule\n    public final", "type": "MockitoComponentMockingRule<EntityPermissionsManager>", "declarator": "mocker =\n        new MockitoComponentMockingRule<EntityPermissionsManager>(SecureEntityPermissionsManager.class)", "var_name": "mocker"}, {"original_string": "private AccessLevel edit = new EditAccessLevel();", "modifier": "private", "type": "AccessLevel", "declarator": "edit = new EditAccessLevel()", "var_name": "edit"}, {"original_string": "private Visibility publicVisibility = new PublicVisibility();", "modifier": "private", "type": "Visibility", "declarator": "publicVisibility = new PublicVisibility()", "var_name": "publicVisibility"}], "file": "components/entity-access-rules/api/src/test/java/org/phenotips/data/permissions/internal/SecureEntityPermissionsManagerTest.java"}, "test_case": {"identifier": "listVisibilityOptionsForwardsCalls", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void listVisibilityOptionsForwardsCalls() throws ComponentLookupException\n    {\n        EntityPermissionsManager internal = this.mocker.getInstance(EntityPermissionsManager.class);\n        List<Visibility> visibilities = new ArrayList<>();\n        when(internal.listVisibilityOptions()).thenReturn(visibilities);\n        Collection<Visibility> returnedVisibilities = this.mocker.getComponentUnderTest().listVisibilityOptions();\n        Assert.assertSame(visibilities, returnedVisibilities);\n    }", "signature": "void listVisibilityOptionsForwardsCalls()", "full_signature": "@Test public void listVisibilityOptionsForwardsCalls()", "class_method_signature": "SecureEntityPermissionsManagerTest.listVisibilityOptionsForwardsCalls()", "testcase": true, "constructor": false, "invocations": ["getInstance", "thenReturn", "when", "listVisibilityOptions", "listVisibilityOptions", "getComponentUnderTest", "assertSame"]}, "focal_class": {"identifier": "SecureEntityPermissionsManager", "superclass": "", "interfaces": "implements EntityPermissionsManager", "fields": [{"original_string": "@Inject\n    private EntityPermissionsManager internalService;", "modifier": "@Inject\n    private", "type": "EntityPermissionsManager", "declarator": "internalService", "var_name": "internalService"}], "methods": [{"identifier": "listVisibilityOptions", "parameters": "()", "modifiers": "@Nonnull @Override public", "return": "Collection<Visibility>", "signature": "Collection<Visibility> listVisibilityOptions()", "full_signature": "@Nonnull @Override public Collection<Visibility> listVisibilityOptions()", "class_method_signature": "SecureEntityPermissionsManager.listVisibilityOptions()", "testcase": false, "constructor": false}, {"identifier": "listAllVisibilityOptions", "parameters": "()", "modifiers": "@Nonnull @Override public", "return": "Collection<Visibility>", "signature": "Collection<Visibility> listAllVisibilityOptions()", "full_signature": "@Nonnull @Override public Collection<Visibility> listAllVisibilityOptions()", "class_method_signature": "SecureEntityPermissionsManager.listAllVisibilityOptions()", "testcase": false, "constructor": false}, {"identifier": "getDefaultVisibility", "parameters": "()", "modifiers": "@Nonnull @Override public", "return": "Visibility", "signature": "Visibility getDefaultVisibility()", "full_signature": "@Nonnull @Override public Visibility getDefaultVisibility()", "class_method_signature": "SecureEntityPermissionsManager.getDefaultVisibility()", "testcase": false, "constructor": false}, {"identifier": "resolveVisibility", "parameters": "(@Nullable final String name)", "modifiers": "@Nonnull @Override public", "return": "Visibility", "signature": "Visibility resolveVisibility(@Nullable final String name)", "full_signature": "@Nonnull @Override public Visibility resolveVisibility(@Nullable final String name)", "class_method_signature": "SecureEntityPermissionsManager.resolveVisibility(@Nullable final String name)", "testcase": false, "constructor": false}, {"identifier": "listAccessLevels", "parameters": "()", "modifiers": "@Nonnull @Override public", "return": "Collection<AccessLevel>", "signature": "Collection<AccessLevel> listAccessLevels()", "full_signature": "@Nonnull @Override public Collection<AccessLevel> listAccessLevels()", "class_method_signature": "SecureEntityPermissionsManager.listAccessLevels()", "testcase": false, "constructor": false}, {"identifier": "listAllAccessLevels", "parameters": "()", "modifiers": "@Nonnull @Override public", "return": "Collection<AccessLevel>", "signature": "Collection<AccessLevel> listAllAccessLevels()", "full_signature": "@Nonnull @Override public Collection<AccessLevel> listAllAccessLevels()", "class_method_signature": "SecureEntityPermissionsManager.listAllAccessLevels()", "testcase": false, "constructor": false}, {"identifier": "resolveAccessLevel", "parameters": "(@Nullable final String name)", "modifiers": "@Nonnull @Override public", "return": "AccessLevel", "signature": "AccessLevel resolveAccessLevel(@Nullable final String name)", "full_signature": "@Nonnull @Override public AccessLevel resolveAccessLevel(@Nullable final String name)", "class_method_signature": "SecureEntityPermissionsManager.resolveAccessLevel(@Nullable final String name)", "testcase": false, "constructor": false}, {"identifier": "getEntityAccess", "parameters": "(@Nullable final PrimaryEntity targetEntity)", "modifiers": "@Nonnull @Override public", "return": "EntityAccess", "signature": "EntityAccess getEntityAccess(@Nullable final PrimaryEntity targetEntity)", "full_signature": "@Nonnull @Override public EntityAccess getEntityAccess(@Nullable final PrimaryEntity targetEntity)", "class_method_signature": "SecureEntityPermissionsManager.getEntityAccess(@Nullable final PrimaryEntity targetEntity)", "testcase": false, "constructor": false}, {"identifier": "filterByVisibility", "parameters": "(\n        @Nullable final Collection<? extends PrimaryEntity> entities,\n        @Nullable final Visibility requiredVisibility)", "modifiers": "@Nonnull @Override public", "return": "Collection<? extends PrimaryEntity>", "signature": "Collection<? extends PrimaryEntity> filterByVisibility(\n        @Nullable final Collection<? extends PrimaryEntity> entities,\n        @Nullable final Visibility requiredVisibility)", "full_signature": "@Nonnull @Override public Collection<? extends PrimaryEntity> filterByVisibility(\n        @Nullable final Collection<? extends PrimaryEntity> entities,\n        @Nullable final Visibility requiredVisibility)", "class_method_signature": "SecureEntityPermissionsManager.filterByVisibility(\n        @Nullable final Collection<? extends PrimaryEntity> entities,\n        @Nullable final Visibility requiredVisibility)", "testcase": false, "constructor": false}, {"identifier": "filterByVisibility", "parameters": "(\n        @Nullable final Iterator<? extends PrimaryEntity> entities,\n        @Nullable final Visibility requiredVisibility)", "modifiers": "@Nonnull @Override public", "return": "Iterator<? extends PrimaryEntity>", "signature": "Iterator<? extends PrimaryEntity> filterByVisibility(\n        @Nullable final Iterator<? extends PrimaryEntity> entities,\n        @Nullable final Visibility requiredVisibility)", "full_signature": "@Nonnull @Override public Iterator<? extends PrimaryEntity> filterByVisibility(\n        @Nullable final Iterator<? extends PrimaryEntity> entities,\n        @Nullable final Visibility requiredVisibility)", "class_method_signature": "SecureEntityPermissionsManager.filterByVisibility(\n        @Nullable final Iterator<? extends PrimaryEntity> entities,\n        @Nullable final Visibility requiredVisibility)", "testcase": false, "constructor": false}, {"identifier": "fireRightsUpdateEvent", "parameters": "(@Nonnull final String entityId)", "modifiers": "@Override public", "return": "void", "signature": "void fireRightsUpdateEvent(@Nonnull final String entityId)", "full_signature": "@Override public void fireRightsUpdateEvent(@Nonnull final String entityId)", "class_method_signature": "SecureEntityPermissionsManager.fireRightsUpdateEvent(@Nonnull final String entityId)", "testcase": false, "constructor": false}], "file": "components/entity-access-rules/api/src/main/java/org/phenotips/data/permissions/internal/SecureEntityPermissionsManager.java"}, "focal_method": {"identifier": "listVisibilityOptions", "parameters": "()", "modifiers": "@Nonnull @Override public", "return": "Collection<Visibility>", "body": "@Nonnull\n    @Override\n    public Collection<Visibility> listVisibilityOptions()\n    {\n        return this.internalService.listVisibilityOptions();\n    }", "signature": "Collection<Visibility> listVisibilityOptions()", "full_signature": "@Nonnull @Override public Collection<Visibility> listVisibilityOptions()", "class_method_signature": "SecureEntityPermissionsManager.listVisibilityOptions()", "testcase": false, "constructor": false, "invocations": ["listVisibilityOptions"]}, "repository": {"repo_id": 2685841, "url": "https://github.com/phenotips/phenotips", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 87, "size": 1662205, "license": "licensed"}}