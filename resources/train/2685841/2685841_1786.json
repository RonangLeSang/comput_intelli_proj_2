{"test_class": {"identifier": "ClinicalStatusControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String AFFECTED = \"affected\";", "modifier": "private static final", "type": "String", "declarator": "AFFECTED = \"affected\"", "var_name": "AFFECTED"}, {"original_string": "private static final String UNAFFECTED = \"unaffected\";", "modifier": "private static final", "type": "String", "declarator": "UNAFFECTED = \"unaffected\"", "var_name": "UNAFFECTED"}, {"original_string": "private static final String DATA_NAME = \"clinicalStatus\";", "modifier": "private static final", "type": "String", "declarator": "DATA_NAME = \"clinicalStatus\"", "var_name": "DATA_NAME"}, {"original_string": "private static final String CONTROLLING_FIELDNAME = UNAFFECTED;", "modifier": "private static final", "type": "String", "declarator": "CONTROLLING_FIELDNAME = UNAFFECTED", "var_name": "CONTROLLING_FIELDNAME"}, {"original_string": "@Rule\n    public MockitoComponentMockingRule<PatientDataController<String>> mocker =\n        new MockitoComponentMockingRule<>(ClinicalStatusController.class);", "modifier": "@Rule\n    public", "type": "MockitoComponentMockingRule<PatientDataController<String>>", "declarator": "mocker =\n        new MockitoComponentMockingRule<>(ClinicalStatusController.class)", "var_name": "mocker"}, {"original_string": "@Mock\n    private Patient patient;", "modifier": "@Mock\n    private", "type": "Patient", "declarator": "patient", "var_name": "patient"}, {"original_string": "@Mock\n    private XWikiDocument doc;", "modifier": "@Mock\n    private", "type": "XWikiDocument", "declarator": "doc", "var_name": "doc"}, {"original_string": "@Mock\n    private BaseObject dataHolder;", "modifier": "@Mock\n    private", "type": "BaseObject", "declarator": "dataHolder", "var_name": "dataHolder"}, {"original_string": "@Mock\n    private BaseProperty field;", "modifier": "@Mock\n    private", "type": "BaseProperty", "declarator": "field", "var_name": "field"}, {"original_string": "private PatientDataController<String> component;", "modifier": "private", "type": "PatientDataController<String>", "declarator": "component", "var_name": "component"}], "file": "components/patient-data/impl/src/test/java/org/phenotips/data/internal/controller/ClinicalStatusControllerTest.java"}, "test_case": {"identifier": "writeJSONAddsAffectedValueToJSON", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void writeJSONAddsAffectedValueToJSON()\n    {\n        PatientData<String> data = new SimpleValuePatientData<>(DATA_NAME, AFFECTED);\n        doReturn(data).when(this.patient).getData(DATA_NAME);\n        JSONObject json = new JSONObject();\n\n        this.component.writeJSON(this.patient, json);\n\n        Assert.assertNotNull(json.opt(DATA_NAME));\n        Assert.assertEquals(AFFECTED, json.getString(DATA_NAME));\n    }", "signature": "void writeJSONAddsAffectedValueToJSON()", "full_signature": "@Test public void writeJSONAddsAffectedValueToJSON()", "class_method_signature": "ClinicalStatusControllerTest.writeJSONAddsAffectedValueToJSON()", "testcase": true, "constructor": false, "invocations": ["getData", "when", "doReturn", "writeJSON", "assertNotNull", "opt", "assertEquals", "getString"]}, "focal_class": {"identifier": "ClinicalStatusController", "superclass": "", "interfaces": "implements PatientDataController<String>", "fields": [{"original_string": "private static final String CLINICAL_STATUS = \"clinicalStatus\";", "modifier": "private static final", "type": "String", "declarator": "CLINICAL_STATUS = \"clinicalStatus\"", "var_name": "CLINICAL_STATUS"}, {"original_string": "private static final String UNAFFECTED_STRING = \"unaffected\";", "modifier": "private static final", "type": "String", "declarator": "UNAFFECTED_STRING = \"unaffected\"", "var_name": "UNAFFECTED_STRING"}, {"original_string": "private static final String PATIENT_DOCUMENT_FIELDNAME = UNAFFECTED_STRING;", "modifier": "private static final", "type": "String", "declarator": "PATIENT_DOCUMENT_FIELDNAME = UNAFFECTED_STRING", "var_name": "PATIENT_DOCUMENT_FIELDNAME"}, {"original_string": "private static final String CONTROLLING_FIELDNAME = UNAFFECTED_STRING;", "modifier": "private static final", "type": "String", "declarator": "CONTROLLING_FIELDNAME = UNAFFECTED_STRING", "var_name": "CONTROLLING_FIELDNAME"}, {"original_string": "private static final String JSON_FIELDNAME = CLINICAL_STATUS;", "modifier": "private static final", "type": "String", "declarator": "JSON_FIELDNAME = CLINICAL_STATUS", "var_name": "JSON_FIELDNAME"}, {"original_string": "private static final String VALUE_UNAFFECTED = UNAFFECTED_STRING;", "modifier": "private static final", "type": "String", "declarator": "VALUE_UNAFFECTED = UNAFFECTED_STRING", "var_name": "VALUE_UNAFFECTED"}, {"original_string": "private static final String VALUE_AFFECTED = \"affected\";", "modifier": "private static final", "type": "String", "declarator": "VALUE_AFFECTED = \"affected\"", "var_name": "VALUE_AFFECTED"}, {"original_string": "@Inject\n    private Logger logger;", "modifier": "@Inject\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "@Inject\n    private Provider<XWikiContext> xcontext;", "modifier": "@Inject\n    private", "type": "Provider<XWikiContext>", "declarator": "xcontext", "var_name": "xcontext"}], "methods": [{"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "ClinicalStatusController.getName()", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(Patient patient)", "modifiers": "@Override public", "return": "PatientData<String>", "signature": "PatientData<String> load(Patient patient)", "full_signature": "@Override public PatientData<String> load(Patient patient)", "class_method_signature": "ClinicalStatusController.load(Patient patient)", "testcase": false, "constructor": false}, {"identifier": "writeJSON", "parameters": "(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "modifiers": "@Override public", "return": "void", "signature": "void writeJSON(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "full_signature": "@Override public void writeJSON(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "class_method_signature": "ClinicalStatusController.writeJSON(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "testcase": false, "constructor": false}, {"identifier": "writeJSON", "parameters": "(Patient patient, JSONObject json)", "modifiers": "@Override public", "return": "void", "signature": "void writeJSON(Patient patient, JSONObject json)", "full_signature": "@Override public void writeJSON(Patient patient, JSONObject json)", "class_method_signature": "ClinicalStatusController.writeJSON(Patient patient, JSONObject json)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(Patient patient)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "void", "signature": "void save(Patient patient)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public void save(Patient patient)", "class_method_signature": "ClinicalStatusController.save(Patient patient)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(@Nonnull final Patient patient, @Nonnull final PatientWritePolicy policy)", "modifiers": "@Override public", "return": "void", "signature": "void save(@Nonnull final Patient patient, @Nonnull final PatientWritePolicy policy)", "full_signature": "@Override public void save(@Nonnull final Patient patient, @Nonnull final PatientWritePolicy policy)", "class_method_signature": "ClinicalStatusController.save(@Nonnull final Patient patient, @Nonnull final PatientWritePolicy policy)", "testcase": false, "constructor": false}, {"identifier": "setClinicalStatusValue", "parameters": "(\n        @Nullable final String value,\n        @Nonnull final BaseProperty<ObjectPropertyReference> isNormal)", "modifiers": "private", "return": "void", "signature": "void setClinicalStatusValue(\n        @Nullable final String value,\n        @Nonnull final BaseProperty<ObjectPropertyReference> isNormal)", "full_signature": "private void setClinicalStatusValue(\n        @Nullable final String value,\n        @Nonnull final BaseProperty<ObjectPropertyReference> isNormal)", "class_method_signature": "ClinicalStatusController.setClinicalStatusValue(\n        @Nullable final String value,\n        @Nonnull final BaseProperty<ObjectPropertyReference> isNormal)", "testcase": false, "constructor": false}, {"identifier": "readJSON", "parameters": "(JSONObject json)", "modifiers": "@Override public", "return": "PatientData<String>", "signature": "PatientData<String> readJSON(JSONObject json)", "full_signature": "@Override public PatientData<String> readJSON(JSONObject json)", "class_method_signature": "ClinicalStatusController.readJSON(JSONObject json)", "testcase": false, "constructor": false}], "file": "components/patient-data/impl/src/main/java/org/phenotips/data/internal/controller/ClinicalStatusController.java"}, "focal_method": {"identifier": "writeJSON", "parameters": "(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void writeJSON(Patient patient, JSONObject json, Collection<String> selectedFieldNames)\n    {\n        if (selectedFieldNames != null && !selectedFieldNames.contains(CONTROLLING_FIELDNAME)) {\n            return;\n        }\n        PatientData<String> data = patient.getData(getName());\n        if (data == null) {\n            if (selectedFieldNames != null && selectedFieldNames.contains(CONTROLLING_FIELDNAME)) {\n                json.put(getName(), VALUE_AFFECTED);\n            }\n            return;\n        }\n\n        json.put(JSON_FIELDNAME, data.getValue());\n    }", "signature": "void writeJSON(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "full_signature": "@Override public void writeJSON(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "class_method_signature": "ClinicalStatusController.writeJSON(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "testcase": false, "constructor": false, "invocations": ["contains", "getData", "getName", "contains", "put", "getName", "put", "getValue"]}, "repository": {"repo_id": 2685841, "url": "https://github.com/phenotips/phenotips", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 87, "size": 1662205, "license": "licensed"}}