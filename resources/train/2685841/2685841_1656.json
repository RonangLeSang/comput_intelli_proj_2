{"test_class": {"identifier": "PatientNameControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String FIRST_NAME = \"first_name\";", "modifier": "private static final", "type": "String", "declarator": "FIRST_NAME = \"first_name\"", "var_name": "FIRST_NAME"}, {"original_string": "private static final String LAST_NAME = \"last_name\";", "modifier": "private static final", "type": "String", "declarator": "LAST_NAME = \"last_name\"", "var_name": "LAST_NAME"}, {"original_string": "@Rule\n    public MockitoComponentMockingRule<PatientDataController<String>> mocker =\n        new MockitoComponentMockingRule<>(PatientNameController.class);", "modifier": "@Rule\n    public", "type": "MockitoComponentMockingRule<PatientDataController<String>>", "declarator": "mocker =\n        new MockitoComponentMockingRule<>(PatientNameController.class)", "var_name": "mocker"}, {"original_string": "@Mock\n    private Patient patient;", "modifier": "@Mock\n    private", "type": "Patient", "declarator": "patient", "var_name": "patient"}, {"original_string": "@Mock\n    private XWikiDocument doc;", "modifier": "@Mock\n    private", "type": "XWikiDocument", "declarator": "doc", "var_name": "doc"}, {"original_string": "@Mock\n    private BaseObject dataHolder;", "modifier": "@Mock\n    private", "type": "BaseObject", "declarator": "dataHolder", "var_name": "dataHolder"}, {"original_string": "private PatientDataController<String> component;", "modifier": "private", "type": "PatientDataController<String>", "declarator": "component", "var_name": "component"}], "file": "components/patient-data/impl/src/test/java/org/phenotips/data/internal/controller/PatientNameControllerTest.java"}, "test_case": {"identifier": "saveDoesNothingWhenPatientDataIsNullAndPolicyIsMerge", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void saveDoesNothingWhenPatientDataIsNullAndPolicyIsMerge()\n    {\n        when(this.patient.getData(this.component.getName())).thenReturn(null);\n        this.component.save(this.patient, PatientWritePolicy.MERGE);\n\n        verify(this.doc, times(1)).getXObject(eq(Patient.CLASS_REFERENCE), eq(true), any());\n        verifyNoMoreInteractions(this.doc);\n\n        verifyZeroInteractions(this.dataHolder);\n    }", "signature": "void saveDoesNothingWhenPatientDataIsNullAndPolicyIsMerge()", "full_signature": "@Test public void saveDoesNothingWhenPatientDataIsNullAndPolicyIsMerge()", "class_method_signature": "PatientNameControllerTest.saveDoesNothingWhenPatientDataIsNullAndPolicyIsMerge()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getData", "getName", "save", "getXObject", "verify", "times", "eq", "eq", "any", "verifyNoMoreInteractions", "verifyZeroInteractions"]}, "focal_class": {"identifier": "PatientNameController", "superclass": "extends AbstractSimpleController", "interfaces": "", "fields": [], "methods": [{"identifier": "getProperties", "parameters": "()", "modifiers": "@Override protected", "return": "List<String>", "signature": "List<String> getProperties()", "full_signature": "@Override protected List<String> getProperties()", "class_method_signature": "PatientNameController.getProperties()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "PatientNameController.getName()", "testcase": false, "constructor": false}, {"identifier": "getJsonPropertyName", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getJsonPropertyName()", "full_signature": "@Override protected String getJsonPropertyName()", "class_method_signature": "PatientNameController.getJsonPropertyName()", "testcase": false, "constructor": false}], "file": "components/patient-data/impl/src/main/java/org/phenotips/data/internal/controller/PatientNameController.java"}, "focal_method": {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getName()\n    {\n        return \"patientName\";\n    }", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "PatientNameController.getName()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2685841, "url": "https://github.com/phenotips/phenotips", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 87, "size": 1662205, "license": "licensed"}}