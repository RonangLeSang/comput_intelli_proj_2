{"test_class": {"identifier": "VariantListControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String VARIANTS_STRING = \"variants\";", "modifier": "private static final", "type": "String", "declarator": "VARIANTS_STRING = \"variants\"", "var_name": "VARIANTS_STRING"}, {"original_string": "private static final String CONTROLLER_NAME = VARIANTS_STRING;", "modifier": "private static final", "type": "String", "declarator": "CONTROLLER_NAME = VARIANTS_STRING", "var_name": "CONTROLLER_NAME"}, {"original_string": "private static final String VARIANTS_ENABLING_FIELD_NAME = \"variants\";", "modifier": "private static final", "type": "String", "declarator": "VARIANTS_ENABLING_FIELD_NAME = \"variants\"", "var_name": "VARIANTS_ENABLING_FIELD_NAME"}, {"original_string": "private static final String VARIANT_KEY = \"cdna\";", "modifier": "private static final", "type": "String", "declarator": "VARIANT_KEY = \"cdna\"", "var_name": "VARIANT_KEY"}, {"original_string": "private static final String GENE_KEY = \"gene\";", "modifier": "private static final", "type": "String", "declarator": "GENE_KEY = \"gene\"", "var_name": "GENE_KEY"}, {"original_string": "private static final String PROTEIN_KEY = \"protein\";", "modifier": "private static final", "type": "String", "declarator": "PROTEIN_KEY = \"protein\"", "var_name": "PROTEIN_KEY"}, {"original_string": "private static final String TRANSCRIPT_KEY = \"transcript\";", "modifier": "private static final", "type": "String", "declarator": "TRANSCRIPT_KEY = \"transcript\"", "var_name": "TRANSCRIPT_KEY"}, {"original_string": "private static final String DBSNP_KEY = \"dbsnp\";", "modifier": "private static final", "type": "String", "declarator": "DBSNP_KEY = \"dbsnp\"", "var_name": "DBSNP_KEY"}, {"original_string": "private static final String ZYGOSITY_KEY = \"zygosity\";", "modifier": "private static final", "type": "String", "declarator": "ZYGOSITY_KEY = \"zygosity\"", "var_name": "ZYGOSITY_KEY"}, {"original_string": "private static final String EFFECT_KEY = \"effect\";", "modifier": "private static final", "type": "String", "declarator": "EFFECT_KEY = \"effect\"", "var_name": "EFFECT_KEY"}, {"original_string": "private static final String INTERPRETATION_KEY = \"interpretation\";", "modifier": "private static final", "type": "String", "declarator": "INTERPRETATION_KEY = \"interpretation\"", "var_name": "INTERPRETATION_KEY"}, {"original_string": "private static final String INHERITANCE_KEY = \"inheritance\";", "modifier": "private static final", "type": "String", "declarator": "INHERITANCE_KEY = \"inheritance\"", "var_name": "INHERITANCE_KEY"}, {"original_string": "private static final String EVIDENCE_KEY = \"evidence\";", "modifier": "private static final", "type": "String", "declarator": "EVIDENCE_KEY = \"evidence\"", "var_name": "EVIDENCE_KEY"}, {"original_string": "private static final String SEGREGATION_KEY = \"segregation\";", "modifier": "private static final", "type": "String", "declarator": "SEGREGATION_KEY = \"segregation\"", "var_name": "SEGREGATION_KEY"}, {"original_string": "private static final String SANGER_KEY = \"sanger\";", "modifier": "private static final", "type": "String", "declarator": "SANGER_KEY = \"sanger\"", "var_name": "SANGER_KEY"}, {"original_string": "private static final String CHROMOSOME_KEY = \"chromosome\";", "modifier": "private static final", "type": "String", "declarator": "CHROMOSOME_KEY = \"chromosome\"", "var_name": "CHROMOSOME_KEY"}, {"original_string": "private static final String START_POSITION_KEY = \"start_position\";", "modifier": "private static final", "type": "String", "declarator": "START_POSITION_KEY = \"start_position\"", "var_name": "START_POSITION_KEY"}, {"original_string": "private static final String END_POSITION_KEY = \"end_position\";", "modifier": "private static final", "type": "String", "declarator": "END_POSITION_KEY = \"end_position\"", "var_name": "END_POSITION_KEY"}, {"original_string": "private static final String REFERENCE_GENOME_KEY = \"reference_genome\";", "modifier": "private static final", "type": "String", "declarator": "REFERENCE_GENOME_KEY = \"reference_genome\"", "var_name": "REFERENCE_GENOME_KEY"}, {"original_string": "private static final String VARIANT_1 = \"VARIANT1\";", "modifier": "private static final", "type": "String", "declarator": "VARIANT_1 = \"VARIANT1\"", "var_name": "VARIANT_1"}, {"original_string": "private static final String VARIANT_2 = \"VARIANT2\";", "modifier": "private static final", "type": "String", "declarator": "VARIANT_2 = \"VARIANT2\"", "var_name": "VARIANT_2"}, {"original_string": "private static final String VARIANT_3 = \"VARIANT3\";", "modifier": "private static final", "type": "String", "declarator": "VARIANT_3 = \"VARIANT3\"", "var_name": "VARIANT_3"}, {"original_string": "private static final String GENE_1 = \"GENE1\";", "modifier": "private static final", "type": "String", "declarator": "GENE_1 = \"GENE1\"", "var_name": "GENE_1"}, {"original_string": "private static final String GENE_2 = \"GENE2\";", "modifier": "private static final", "type": "String", "declarator": "GENE_2 = \"GENE2\"", "var_name": "GENE_2"}, {"original_string": "private static final String POS_22 = \"22\";", "modifier": "private static final", "type": "String", "declarator": "POS_22 = \"22\"", "var_name": "POS_22"}, {"original_string": "@Rule\n    public MockitoComponentMockingRule<PatientDataController<Map<String, String>>> mocker =\n        new MockitoComponentMockingRule<>(VariantListController.class);", "modifier": "@Rule\n    public", "type": "MockitoComponentMockingRule<PatientDataController<Map<String, String>>>", "declarator": "mocker =\n        new MockitoComponentMockingRule<>(VariantListController.class)", "var_name": "mocker"}, {"original_string": "@Mock\n    private Patient patient;", "modifier": "@Mock\n    private", "type": "Patient", "declarator": "patient", "var_name": "patient"}, {"original_string": "@Mock\n    private XWikiDocument doc;", "modifier": "@Mock\n    private", "type": "XWikiDocument", "declarator": "doc", "var_name": "doc"}, {"original_string": "@Mock\n    private XWikiContext context;", "modifier": "@Mock\n    private", "type": "XWikiContext", "declarator": "context", "var_name": "context"}, {"original_string": "private List<BaseObject> variantXWikiObjects;", "modifier": "private", "type": "List<BaseObject>", "declarator": "variantXWikiObjects", "var_name": "variantXWikiObjects"}, {"original_string": "private PatientDataController<Map<String, String>> component;", "modifier": "private", "type": "PatientDataController<Map<String, String>>", "declarator": "component", "var_name": "component"}], "file": "components/patient-data/impl/src/test/java/org/phenotips/data/internal/controller/VariantListControllerTest.java"}, "test_case": {"identifier": "checkGetProperties", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void checkGetProperties() throws ComponentLookupException\n    {\n        List<String> result =\n            ((AbstractComplexController<Map<String, String>>) this.mocker.getComponentUnderTest()).getProperties();\n\n        Assert.assertEquals(16, result.size());\n        Assert.assertThat(result, Matchers.hasItem(VARIANT_KEY));\n        Assert.assertThat(result, Matchers.hasItem(GENE_KEY));\n        Assert.assertThat(result, Matchers.hasItem(PROTEIN_KEY));\n        Assert.assertThat(result, Matchers.hasItem(TRANSCRIPT_KEY));\n        Assert.assertThat(result, Matchers.hasItem(DBSNP_KEY));\n        Assert.assertThat(result, Matchers.hasItem(ZYGOSITY_KEY));\n        Assert.assertThat(result, Matchers.hasItem(EFFECT_KEY));\n        Assert.assertThat(result, Matchers.hasItem(INTERPRETATION_KEY));\n        Assert.assertThat(result, Matchers.hasItem(INHERITANCE_KEY));\n        Assert.assertThat(result, Matchers.hasItem(EVIDENCE_KEY));\n        Assert.assertThat(result, Matchers.hasItem(SEGREGATION_KEY));\n        Assert.assertThat(result, Matchers.hasItem(SANGER_KEY));\n        Assert.assertThat(result, Matchers.hasItem(CHROMOSOME_KEY));\n        Assert.assertThat(result, Matchers.hasItem(START_POSITION_KEY));\n        Assert.assertThat(result, Matchers.hasItem(END_POSITION_KEY));\n        Assert.assertThat(result, Matchers.hasItem(REFERENCE_GENOME_KEY));\n    }", "signature": "void checkGetProperties()", "full_signature": "@Test public void checkGetProperties()", "class_method_signature": "VariantListControllerTest.checkGetProperties()", "testcase": true, "constructor": false, "invocations": ["getProperties", "getComponentUnderTest", "assertEquals", "size", "assertThat", "hasItem", "assertThat", "hasItem", "assertThat", "hasItem", "assertThat", "hasItem", "assertThat", "hasItem", "assertThat", "hasItem", "assertThat", "hasItem", "assertThat", "hasItem", "assertThat", "hasItem", "assertThat", "hasItem", "assertThat", "hasItem", "assertThat", "hasItem", "assertThat", "hasItem", "assertThat", "hasItem", "assertThat", "hasItem", "assertThat", "hasItem"]}, "focal_class": {"identifier": "VariantListController", "superclass": "extends AbstractComplexController<Map<String, String>>", "interfaces": "", "fields": [{"original_string": "static final EntityReference VARIANT_CLASS_REFERENCE = new EntityReference(\"GeneVariantClass\",\n        EntityType.DOCUMENT, Constants.CODE_SPACE_REFERENCE);", "modifier": "static final", "type": "EntityReference", "declarator": "VARIANT_CLASS_REFERENCE = new EntityReference(\"GeneVariantClass\",\n        EntityType.DOCUMENT, Constants.CODE_SPACE_REFERENCE)", "var_name": "VARIANT_CLASS_REFERENCE"}, {"original_string": "private static final String VARIANTS_STRING = \"variants\";", "modifier": "private static final", "type": "String", "declarator": "VARIANTS_STRING = \"variants\"", "var_name": "VARIANTS_STRING"}, {"original_string": "private static final String CONTROLLER_NAME = VARIANTS_STRING;", "modifier": "private static final", "type": "String", "declarator": "CONTROLLER_NAME = VARIANTS_STRING", "var_name": "CONTROLLER_NAME"}, {"original_string": "private static final String VARIANTS_ENABLING_FIELD_NAME = \"variants\";", "modifier": "private static final", "type": "String", "declarator": "VARIANTS_ENABLING_FIELD_NAME = \"variants\"", "var_name": "VARIANTS_ENABLING_FIELD_NAME"}, {"original_string": "private static final String INTERNAL_VARIANT_KEY = \"cdna\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_VARIANT_KEY = \"cdna\"", "var_name": "INTERNAL_VARIANT_KEY"}, {"original_string": "private static final String INTERNAL_GENE_KEY = \"gene\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_GENE_KEY = \"gene\"", "var_name": "INTERNAL_GENE_KEY"}, {"original_string": "private static final String INTERNAL_PROTEIN_KEY = \"protein\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_PROTEIN_KEY = \"protein\"", "var_name": "INTERNAL_PROTEIN_KEY"}, {"original_string": "private static final String INTERNAL_TRANSCRIPT_KEY = \"transcript\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_TRANSCRIPT_KEY = \"transcript\"", "var_name": "INTERNAL_TRANSCRIPT_KEY"}, {"original_string": "private static final String INTERNAL_DBSNP_KEY = \"dbsnp\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_DBSNP_KEY = \"dbsnp\"", "var_name": "INTERNAL_DBSNP_KEY"}, {"original_string": "private static final String INTERNAL_ZYGOSITY_KEY = \"zygosity\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_ZYGOSITY_KEY = \"zygosity\"", "var_name": "INTERNAL_ZYGOSITY_KEY"}, {"original_string": "private static final String INTERNAL_EFFECT_KEY = \"effect\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_EFFECT_KEY = \"effect\"", "var_name": "INTERNAL_EFFECT_KEY"}, {"original_string": "private static final String INTERNAL_INTERPRETATION_KEY = \"interpretation\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_INTERPRETATION_KEY = \"interpretation\"", "var_name": "INTERNAL_INTERPRETATION_KEY"}, {"original_string": "private static final String INTERNAL_INHERITANCE_KEY = \"inheritance\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_INHERITANCE_KEY = \"inheritance\"", "var_name": "INTERNAL_INHERITANCE_KEY"}, {"original_string": "private static final String INTERNAL_EVIDENCE_KEY = \"evidence\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_EVIDENCE_KEY = \"evidence\"", "var_name": "INTERNAL_EVIDENCE_KEY"}, {"original_string": "private static final String INTERNAL_SEGREGATION_KEY = \"segregation\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_SEGREGATION_KEY = \"segregation\"", "var_name": "INTERNAL_SEGREGATION_KEY"}, {"original_string": "private static final String INTERNAL_SANGER_KEY = \"sanger\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_SANGER_KEY = \"sanger\"", "var_name": "INTERNAL_SANGER_KEY"}, {"original_string": "private static final String INTERNAL_CHROMOSOME_KEY = \"chromosome\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_CHROMOSOME_KEY = \"chromosome\"", "var_name": "INTERNAL_CHROMOSOME_KEY"}, {"original_string": "private static final String INTERNAL_START_POSITION_KEY = \"start_position\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_START_POSITION_KEY = \"start_position\"", "var_name": "INTERNAL_START_POSITION_KEY"}, {"original_string": "private static final String INTERNAL_END_POSITION_KEY = \"end_position\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_END_POSITION_KEY = \"end_position\"", "var_name": "INTERNAL_END_POSITION_KEY"}, {"original_string": "private static final String INTERNAL_REFERENCE_GENOME_KEY = \"reference_genome\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_REFERENCE_GENOME_KEY = \"reference_genome\"", "var_name": "INTERNAL_REFERENCE_GENOME_KEY"}, {"original_string": "private static final String JSON_VARIANT_KEY = INTERNAL_VARIANT_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_VARIANT_KEY = INTERNAL_VARIANT_KEY", "var_name": "JSON_VARIANT_KEY"}, {"original_string": "private static final String JSON_GENE_KEY = INTERNAL_GENE_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_GENE_KEY = INTERNAL_GENE_KEY", "var_name": "JSON_GENE_KEY"}, {"original_string": "private static final String JSON_OLD_GENE_KEY = \"genesymbol\";", "modifier": "private static final", "type": "String", "declarator": "JSON_OLD_GENE_KEY = \"genesymbol\"", "var_name": "JSON_OLD_GENE_KEY"}, {"original_string": "private static final String JSON_PROTEIN_KEY = INTERNAL_PROTEIN_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_PROTEIN_KEY = INTERNAL_PROTEIN_KEY", "var_name": "JSON_PROTEIN_KEY"}, {"original_string": "private static final String JSON_TRANSCRIPT_KEY = INTERNAL_TRANSCRIPT_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_TRANSCRIPT_KEY = INTERNAL_TRANSCRIPT_KEY", "var_name": "JSON_TRANSCRIPT_KEY"}, {"original_string": "private static final String JSON_DBSNP_KEY = INTERNAL_DBSNP_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_DBSNP_KEY = INTERNAL_DBSNP_KEY", "var_name": "JSON_DBSNP_KEY"}, {"original_string": "private static final String JSON_ZYGOSITY_KEY = INTERNAL_ZYGOSITY_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_ZYGOSITY_KEY = INTERNAL_ZYGOSITY_KEY", "var_name": "JSON_ZYGOSITY_KEY"}, {"original_string": "private static final String JSON_EFFECT_KEY = INTERNAL_EFFECT_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_EFFECT_KEY = INTERNAL_EFFECT_KEY", "var_name": "JSON_EFFECT_KEY"}, {"original_string": "private static final String JSON_INTERPRETATION_KEY = INTERNAL_INTERPRETATION_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_INTERPRETATION_KEY = INTERNAL_INTERPRETATION_KEY", "var_name": "JSON_INTERPRETATION_KEY"}, {"original_string": "private static final String JSON_INHERITANCE_KEY = INTERNAL_INHERITANCE_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_INHERITANCE_KEY = INTERNAL_INHERITANCE_KEY", "var_name": "JSON_INHERITANCE_KEY"}, {"original_string": "private static final String JSON_EVIDENCE_KEY = INTERNAL_EVIDENCE_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_EVIDENCE_KEY = INTERNAL_EVIDENCE_KEY", "var_name": "JSON_EVIDENCE_KEY"}, {"original_string": "private static final String JSON_SEGREGATION_KEY = INTERNAL_SEGREGATION_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_SEGREGATION_KEY = INTERNAL_SEGREGATION_KEY", "var_name": "JSON_SEGREGATION_KEY"}, {"original_string": "private static final String JSON_SANGER_KEY = INTERNAL_SANGER_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_SANGER_KEY = INTERNAL_SANGER_KEY", "var_name": "JSON_SANGER_KEY"}, {"original_string": "private static final String JSON_CHROMOSOME_KEY = INTERNAL_CHROMOSOME_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_CHROMOSOME_KEY = INTERNAL_CHROMOSOME_KEY", "var_name": "JSON_CHROMOSOME_KEY"}, {"original_string": "private static final String JSON_START_POSITION_KEY = INTERNAL_START_POSITION_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_START_POSITION_KEY = INTERNAL_START_POSITION_KEY", "var_name": "JSON_START_POSITION_KEY"}, {"original_string": "private static final String JSON_END_POSITION_KEY = INTERNAL_END_POSITION_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_END_POSITION_KEY = INTERNAL_END_POSITION_KEY", "var_name": "JSON_END_POSITION_KEY"}, {"original_string": "private static final String JSON_REFERENCE_GENOME_KEY = INTERNAL_REFERENCE_GENOME_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_REFERENCE_GENOME_KEY = INTERNAL_REFERENCE_GENOME_KEY", "var_name": "JSON_REFERENCE_GENOME_KEY"}, {"original_string": "private static final List<String> ZYGOSITY_VALUES = Arrays.asList(\"heterozygous\", \"homozygous\", \"hemizygous\");", "modifier": "private static final", "type": "List<String>", "declarator": "ZYGOSITY_VALUES = Arrays.asList(\"heterozygous\", \"homozygous\", \"hemizygous\")", "var_name": "ZYGOSITY_VALUES"}, {"original_string": "private static final List<String> EFFECT_VALUES = Arrays.asList(\"missense\", \"nonsense\", \"insertion_in_frame\",\n        \"insertion_frameshift\", \"deletion_in_frame\", \"deletion_frameshift\", \"indel_in_frame\", \"indel_frameshift\",\n        \"duplication\", \"repeat_expansion\", \"synonymous\", \"other\");", "modifier": "private static final", "type": "List<String>", "declarator": "EFFECT_VALUES = Arrays.asList(\"missense\", \"nonsense\", \"insertion_in_frame\",\n        \"insertion_frameshift\", \"deletion_in_frame\", \"deletion_frameshift\", \"indel_in_frame\", \"indel_frameshift\",\n        \"duplication\", \"repeat_expansion\", \"synonymous\", \"other\")", "var_name": "EFFECT_VALUES"}, {"original_string": "private static final List<String> INTERPRETATION_VALUES = Arrays.asList(\"pathogenic\", \"likely_pathogenic\",\n        \"variant_u_s\", \"likely_benign\", \"benign\", \"investigation_n\");", "modifier": "private static final", "type": "List<String>", "declarator": "INTERPRETATION_VALUES = Arrays.asList(\"pathogenic\", \"likely_pathogenic\",\n        \"variant_u_s\", \"likely_benign\", \"benign\", \"investigation_n\")", "var_name": "INTERPRETATION_VALUES"}, {"original_string": "private static final List<String> INHERITANCE_VALUES = Arrays.asList(\"denovo_germline\", \"denovo_s_mosaicism\",\n        \"maternal\", \"paternal\", \"unknown\");", "modifier": "private static final", "type": "List<String>", "declarator": "INHERITANCE_VALUES = Arrays.asList(\"denovo_germline\", \"denovo_s_mosaicism\",\n        \"maternal\", \"paternal\", \"unknown\")", "var_name": "INHERITANCE_VALUES"}, {"original_string": "private static final List<String> EVIDENCE_VALUES = Arrays.asList(\"rare\", \"predicted\", \"reported\");", "modifier": "private static final", "type": "List<String>", "declarator": "EVIDENCE_VALUES = Arrays.asList(\"rare\", \"predicted\", \"reported\")", "var_name": "EVIDENCE_VALUES"}, {"original_string": "private static final List<String> SEGREGATION_VALUES = Arrays.asList(\"segregates\", \"not_segregates\");", "modifier": "private static final", "type": "List<String>", "declarator": "SEGREGATION_VALUES = Arrays.asList(\"segregates\", \"not_segregates\")", "var_name": "SEGREGATION_VALUES"}, {"original_string": "private static final List<String> SANGER_VALUES = Arrays.asList(\"positive\", \"negative\");", "modifier": "private static final", "type": "List<String>", "declarator": "SANGER_VALUES = Arrays.asList(\"positive\", \"negative\")", "var_name": "SANGER_VALUES"}, {"original_string": "private static final List<String> CHROMOSOME_VALUES = Arrays.asList(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\",\n        \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"X\", \"Y\");", "modifier": "private static final", "type": "List<String>", "declarator": "CHROMOSOME_VALUES = Arrays.asList(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\",\n        \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"X\", \"Y\")", "var_name": "CHROMOSOME_VALUES"}, {"original_string": "private static final List<String> REFERENCE_GENOME_VALUES = Arrays.asList(\"GRCh37\", \"GRCh38\", \"NCBI36\");", "modifier": "private static final", "type": "List<String>", "declarator": "REFERENCE_GENOME_VALUES = Arrays.asList(\"GRCh37\", \"GRCh38\", \"NCBI36\")", "var_name": "REFERENCE_GENOME_VALUES"}, {"original_string": "private static final Map<String, String> INTERNAL_TO_JSON_KEYS = new HashMap<>();", "modifier": "private static final", "type": "Map<String, String>", "declarator": "INTERNAL_TO_JSON_KEYS = new HashMap<>()", "var_name": "INTERNAL_TO_JSON_KEYS"}, {"original_string": "@Inject\n    private VocabularyManager vocabularyManager;", "modifier": "@Inject\n    private", "type": "VocabularyManager", "declarator": "vocabularyManager", "var_name": "vocabularyManager"}, {"original_string": "@Inject\n    private Logger logger;", "modifier": "@Inject\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "private Vocabulary hgnc;", "modifier": "private", "type": "Vocabulary", "declarator": "hgnc", "var_name": "hgnc"}, {"original_string": "@Inject\n    private Provider<XWikiContext> xcontextProvider;", "modifier": "@Inject\n    private", "type": "Provider<XWikiContext>", "declarator": "xcontextProvider", "var_name": "xcontextProvider"}], "methods": [{"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "VariantListController.getName()", "testcase": false, "constructor": false}, {"identifier": "getJsonPropertyName", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getJsonPropertyName()", "full_signature": "@Override protected String getJsonPropertyName()", "class_method_signature": "VariantListController.getJsonPropertyName()", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override protected", "return": "List<String>", "signature": "List<String> getProperties()", "full_signature": "@Override protected List<String> getProperties()", "class_method_signature": "VariantListController.getProperties()", "testcase": false, "constructor": false}, {"identifier": "getBooleanFields", "parameters": "()", "modifiers": "@Override protected", "return": "List<String>", "signature": "List<String> getBooleanFields()", "full_signature": "@Override protected List<String> getBooleanFields()", "class_method_signature": "VariantListController.getBooleanFields()", "testcase": false, "constructor": false}, {"identifier": "getCodeFields", "parameters": "()", "modifiers": "@Override protected", "return": "List<String>", "signature": "List<String> getCodeFields()", "full_signature": "@Override protected List<String> getCodeFields()", "class_method_signature": "VariantListController.getCodeFields()", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(Patient patient)", "modifiers": "@Override public", "return": "PatientData<Map<String, String>>", "signature": "PatientData<Map<String, String>> load(Patient patient)", "full_signature": "@Override public PatientData<Map<String, String>> load(Patient patient)", "class_method_signature": "VariantListController.load(Patient patient)", "testcase": false, "constructor": false}, {"identifier": "getFieldValue", "parameters": "(BaseObject variantObject, String property)", "modifiers": "private", "return": "String", "signature": "String getFieldValue(BaseObject variantObject, String property)", "full_signature": "private String getFieldValue(BaseObject variantObject, String property)", "class_method_signature": "VariantListController.getFieldValue(BaseObject variantObject, String property)", "testcase": false, "constructor": false}, {"identifier": "writeJSON", "parameters": "(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "modifiers": "@SuppressWarnings(\"checkstyle:CyclomaticComplexity\") @Override public", "return": "void", "signature": "void writeJSON(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "full_signature": "@SuppressWarnings(\"checkstyle:CyclomaticComplexity\") @Override public void writeJSON(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "class_method_signature": "VariantListController.writeJSON(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "testcase": false, "constructor": false}, {"identifier": "readJSON", "parameters": "(JSONObject json)", "modifiers": "@Override public", "return": "PatientData<Map<String, String>>", "signature": "PatientData<Map<String, String>> readJSON(JSONObject json)", "full_signature": "@Override public PatientData<Map<String, String>> readJSON(JSONObject json)", "class_method_signature": "VariantListController.readJSON(JSONObject json)", "testcase": false, "constructor": false}, {"identifier": "parseVariantJson", "parameters": "(JSONObject variantJson, Map<String, List<String>> enumValues,\n        List<String> enumValueKeys)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> parseVariantJson(JSONObject variantJson, Map<String, List<String>> enumValues,\n        List<String> enumValueKeys)", "full_signature": "private Map<String, String> parseVariantJson(JSONObject variantJson, Map<String, List<String>> enumValues,\n        List<String> enumValueKeys)", "class_method_signature": "VariantListController.parseVariantJson(JSONObject variantJson, Map<String, List<String>> enumValues,\n        List<String> enumValueKeys)", "testcase": false, "constructor": false}, {"identifier": "parseVariantProperty", "parameters": "(String property, JSONObject variantJson, Map<String, List<String>> enumValues,\n        Map<String, String> singleVariant, List<String> enumValueKeys)", "modifiers": "@SuppressWarnings(\"checkstyle:CyclomaticComplexity\") private", "return": "void", "signature": "void parseVariantProperty(String property, JSONObject variantJson, Map<String, List<String>> enumValues,\n        Map<String, String> singleVariant, List<String> enumValueKeys)", "full_signature": "@SuppressWarnings(\"checkstyle:CyclomaticComplexity\") private void parseVariantProperty(String property, JSONObject variantJson, Map<String, List<String>> enumValues,\n        Map<String, String> singleVariant, List<String> enumValueKeys)", "class_method_signature": "VariantListController.parseVariantProperty(String property, JSONObject variantJson, Map<String, List<String>> enumValues,\n        Map<String, String> singleVariant, List<String> enumValueKeys)", "testcase": false, "constructor": false}, {"identifier": "getJSONProperties", "parameters": "()", "modifiers": "private", "return": "List<String>", "signature": "List<String> getJSONProperties()", "full_signature": "private List<String> getJSONProperties()", "class_method_signature": "VariantListController.getJSONProperties()", "testcase": false, "constructor": false}, {"identifier": "getEnsemblId", "parameters": "(String gene)", "modifiers": "private", "return": "String", "signature": "String getEnsemblId(String gene)", "full_signature": "private String getEnsemblId(String gene)", "class_method_signature": "VariantListController.getEnsemblId(String gene)", "testcase": false, "constructor": false}, {"identifier": "getTerm", "parameters": "(String gene)", "modifiers": "private", "return": "VocabularyTerm", "signature": "VocabularyTerm getTerm(String gene)", "full_signature": "private VocabularyTerm getTerm(String gene)", "class_method_signature": "VariantListController.getTerm(String gene)", "testcase": false, "constructor": false}, {"identifier": "getHGNCVocabulary", "parameters": "()", "modifiers": "private", "return": "Vocabulary", "signature": "Vocabulary getHGNCVocabulary()", "full_signature": "private Vocabulary getHGNCVocabulary()", "class_method_signature": "VariantListController.getHGNCVocabulary()", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(Patient patient)", "modifiers": "@Override public", "return": "void", "signature": "void save(Patient patient)", "full_signature": "@Override public void save(Patient patient)", "class_method_signature": "VariantListController.save(Patient patient)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(@Nonnull final Patient patient, @Nonnull final PatientWritePolicy policy)", "modifiers": "@Override public", "return": "void", "signature": "void save(@Nonnull final Patient patient, @Nonnull final PatientWritePolicy policy)", "full_signature": "@Override public void save(@Nonnull final Patient patient, @Nonnull final PatientWritePolicy policy)", "class_method_signature": "VariantListController.save(@Nonnull final Patient patient, @Nonnull final PatientWritePolicy policy)", "testcase": false, "constructor": false}, {"identifier": "saveVariants", "parameters": "(\n        @Nonnull final XWikiDocument docX,\n        @Nonnull final Patient patient,\n        @Nonnull final PatientData<Map<String, String>> variants,\n        @Nonnull final PatientWritePolicy policy,\n        @Nonnull final XWikiContext context)", "modifiers": "private", "return": "void", "signature": "void saveVariants(\n        @Nonnull final XWikiDocument docX,\n        @Nonnull final Patient patient,\n        @Nonnull final PatientData<Map<String, String>> variants,\n        @Nonnull final PatientWritePolicy policy,\n        @Nonnull final XWikiContext context)", "full_signature": "private void saveVariants(\n        @Nonnull final XWikiDocument docX,\n        @Nonnull final Patient patient,\n        @Nonnull final PatientData<Map<String, String>> variants,\n        @Nonnull final PatientWritePolicy policy,\n        @Nonnull final XWikiContext context)", "class_method_signature": "VariantListController.saveVariants(\n        @Nonnull final XWikiDocument docX,\n        @Nonnull final Patient patient,\n        @Nonnull final PatientData<Map<String, String>> variants,\n        @Nonnull final PatientWritePolicy policy,\n        @Nonnull final XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "saveVariant", "parameters": "(\n        @Nonnull final XWikiDocument docX,\n        @Nonnull final Map<String, String> variant,\n        @Nonnull final XWikiContext context)", "modifiers": "private", "return": "void", "signature": "void saveVariant(\n        @Nonnull final XWikiDocument docX,\n        @Nonnull final Map<String, String> variant,\n        @Nonnull final XWikiContext context)", "full_signature": "private void saveVariant(\n        @Nonnull final XWikiDocument docX,\n        @Nonnull final Map<String, String> variant,\n        @Nonnull final XWikiContext context)", "class_method_signature": "VariantListController.saveVariant(\n        @Nonnull final XWikiDocument docX,\n        @Nonnull final Map<String, String> variant,\n        @Nonnull final XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "setVariantProperty", "parameters": "(\n        @Nonnull final Map<String, String> variant,\n        @Nonnull final String property,\n        @Nonnull final BaseObject xwikiObject,\n        @Nonnull final XWikiContext context)", "modifiers": "private", "return": "void", "signature": "void setVariantProperty(\n        @Nonnull final Map<String, String> variant,\n        @Nonnull final String property,\n        @Nonnull final BaseObject xwikiObject,\n        @Nonnull final XWikiContext context)", "full_signature": "private void setVariantProperty(\n        @Nonnull final Map<String, String> variant,\n        @Nonnull final String property,\n        @Nonnull final BaseObject xwikiObject,\n        @Nonnull final XWikiContext context)", "class_method_signature": "VariantListController.setVariantProperty(\n        @Nonnull final Map<String, String> variant,\n        @Nonnull final String property,\n        @Nonnull final BaseObject xwikiObject,\n        @Nonnull final XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "getMergedVariantsMap", "parameters": "(\n        @Nullable final PatientData<Map<String, String>> variants,\n        @Nullable final PatientData<Map<String, String>> storedVariants)", "modifiers": "private", "return": "Map<String, Map<String, String>>", "signature": "Map<String, Map<String, String>> getMergedVariantsMap(\n        @Nullable final PatientData<Map<String, String>> variants,\n        @Nullable final PatientData<Map<String, String>> storedVariants)", "full_signature": "private Map<String, Map<String, String>> getMergedVariantsMap(\n        @Nullable final PatientData<Map<String, String>> variants,\n        @Nullable final PatientData<Map<String, String>> storedVariants)", "class_method_signature": "VariantListController.getMergedVariantsMap(\n        @Nullable final PatientData<Map<String, String>> variants,\n        @Nullable final PatientData<Map<String, String>> storedVariants)", "testcase": false, "constructor": false}], "file": "components/patient-data/impl/src/main/java/org/phenotips/data/internal/controller/VariantListController.java"}, "focal_method": {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override protected", "return": "List<String>", "body": "@Override\n    protected List<String> getProperties()\n    {\n        return Arrays.asList(INTERNAL_VARIANT_KEY, INTERNAL_GENE_KEY, INTERNAL_PROTEIN_KEY,\n            INTERNAL_TRANSCRIPT_KEY, INTERNAL_DBSNP_KEY, INTERNAL_ZYGOSITY_KEY,\n            INTERNAL_EFFECT_KEY, INTERNAL_INTERPRETATION_KEY, INTERNAL_INHERITANCE_KEY, INTERNAL_EVIDENCE_KEY,\n            INTERNAL_SEGREGATION_KEY, INTERNAL_SANGER_KEY, INTERNAL_CHROMOSOME_KEY, INTERNAL_START_POSITION_KEY,\n            INTERNAL_END_POSITION_KEY, INTERNAL_REFERENCE_GENOME_KEY);\n    }", "signature": "List<String> getProperties()", "full_signature": "@Override protected List<String> getProperties()", "class_method_signature": "VariantListController.getProperties()", "testcase": false, "constructor": false, "invocations": ["asList"]}, "repository": {"repo_id": 2685841, "url": "https://github.com/phenotips/phenotips", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 87, "size": 1662205, "license": "licensed"}}