{"test_class": {"identifier": "AbstractPrimaryEntityManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final DocumentReference PERSON_CLASS_REFERENCE =\n        new DocumentReference(\"main\", \"PhenoTips\", \"PersonClass\");", "modifier": "private static final", "type": "DocumentReference", "declarator": "PERSON_CLASS_REFERENCE =\n        new DocumentReference(\"main\", \"PhenoTips\", \"PersonClass\")", "var_name": "PERSON_CLASS_REFERENCE"}, {"original_string": "private static final DocumentReference PERSON_REFERENCE = new DocumentReference(\"main\", \"Persons\", \"jdoe\");", "modifier": "private static final", "type": "DocumentReference", "declarator": "PERSON_REFERENCE = new DocumentReference(\"main\", \"Persons\", \"jdoe\")", "var_name": "PERSON_REFERENCE"}, {"original_string": "private static final String PERSON_ID = \"jdoe\";", "modifier": "private static final", "type": "String", "declarator": "PERSON_ID = \"jdoe\"", "var_name": "PERSON_ID"}, {"original_string": "private static final String PERSON_DOCNAME = \"Persons.jdoe\";", "modifier": "private static final", "type": "String", "declarator": "PERSON_DOCNAME = \"Persons.jdoe\"", "var_name": "PERSON_DOCNAME"}, {"original_string": "private static final String PERSON_NAME = \"John Doe\";", "modifier": "private static final", "type": "String", "declarator": "PERSON_NAME = \"John Doe\"", "var_name": "PERSON_NAME"}, {"original_string": "@Rule\n    public final MockitoComponentMockingRule<PrimaryEntityManager<Person>> mocker =\n        new MockitoComponentMockingRule<>(PersonsManager.class);", "modifier": "@Rule\n    public final", "type": "MockitoComponentMockingRule<PrimaryEntityManager<Person>>", "declarator": "mocker =\n        new MockitoComponentMockingRule<>(PersonsManager.class)", "var_name": "mocker"}, {"original_string": "private PrimaryEntityManager<Person> manager;", "modifier": "private", "type": "PrimaryEntityManager<Person>", "declarator": "manager", "var_name": "manager"}, {"original_string": "private DocumentAccessBridge dab;", "modifier": "private", "type": "DocumentAccessBridge", "declarator": "dab", "var_name": "dab"}, {"original_string": "private QueryManager qm;", "modifier": "private", "type": "QueryManager", "declarator": "qm", "var_name": "qm"}, {"original_string": "private DocumentReferenceResolver<String> resolver;", "modifier": "private", "type": "DocumentReferenceResolver<String>", "declarator": "resolver", "var_name": "resolver"}, {"original_string": "private DocumentReferenceResolver<EntityReference> referenceResolver;", "modifier": "private", "type": "DocumentReferenceResolver<EntityReference>", "declarator": "referenceResolver", "var_name": "referenceResolver"}, {"original_string": "private EntityReferenceSerializer<String> localSerializer;", "modifier": "private", "type": "EntityReferenceSerializer<String>", "declarator": "localSerializer", "var_name": "localSerializer"}, {"original_string": "private DocumentReference currentUser = new DocumentReference(\"main\", \"XWiki\", \"padams\");", "modifier": "private", "type": "DocumentReference", "declarator": "currentUser = new DocumentReference(\"main\", \"XWiki\", \"padams\")", "var_name": "currentUser"}, {"original_string": "@Mock\n    private XWiki xwiki;", "modifier": "@Mock\n    private", "type": "XWiki", "declarator": "xwiki", "var_name": "xwiki"}, {"original_string": "@Mock\n    private XWikiDocument doc;", "modifier": "@Mock\n    private", "type": "XWikiDocument", "declarator": "doc", "var_name": "doc"}, {"original_string": "@Mock\n    private Query getByNameQuery;", "modifier": "@Mock\n    private", "type": "Query", "declarator": "getByNameQuery", "var_name": "getByNameQuery"}, {"original_string": "@Mock\n    private Query getLastIdQuery;", "modifier": "@Mock\n    private", "type": "Query", "declarator": "getLastIdQuery", "var_name": "getLastIdQuery"}, {"original_string": "@Mock\n    private XWikiContext xcontext;", "modifier": "@Mock\n    private", "type": "XWikiContext", "declarator": "xcontext", "var_name": "xcontext"}], "file": "components/entities/api/src/test/java/org/phenotips/entities/spi/AbstractPrimaryEntityManagerTest.java"}, "test_case": {"identifier": "getFromReferenceReturnsNullWhenDABThrowsException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getFromReferenceReturnsNullWhenDABThrowsException() throws Exception\n    {\n        when(this.dab.getDocument(PERSON_REFERENCE)).thenThrow(new Exception());\n\n        Person result = this.manager.get(PERSON_REFERENCE);\n        Assert.assertNull(result);\n    }", "signature": "void getFromReferenceReturnsNullWhenDABThrowsException()", "full_signature": "@Test public void getFromReferenceReturnsNullWhenDABThrowsException()", "class_method_signature": "AbstractPrimaryEntityManagerTest.getFromReferenceReturnsNullWhenDABThrowsException()", "testcase": true, "constructor": false, "invocations": ["thenThrow", "when", "getDocument", "get", "assertNull"]}, "focal_class": {"identifier": "AbstractPrimaryEntityManager", "superclass": "", "interfaces": "implements PrimaryEntityManager<E>", "fields": [{"original_string": "@Inject\n    protected Logger logger;", "modifier": "@Inject\n    protected", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "@Inject\n    protected QueryManager qm;", "modifier": "@Inject\n    protected", "type": "QueryManager", "declarator": "qm", "var_name": "qm"}, {"original_string": "@Inject\n    protected Provider<XWikiContext> xcontextProvider;", "modifier": "@Inject\n    protected", "type": "Provider<XWikiContext>", "declarator": "xcontextProvider", "var_name": "xcontextProvider"}, {"original_string": "@Inject\n    protected DocumentAccessBridge bridge;", "modifier": "@Inject\n    protected", "type": "DocumentAccessBridge", "declarator": "bridge", "var_name": "bridge"}, {"original_string": "@Inject\n    @Named(\"current\")\n    protected DocumentReferenceResolver<String> stringResolver;", "modifier": "@Inject\n    @Named(\"current\")\n    protected", "type": "DocumentReferenceResolver<String>", "declarator": "stringResolver", "var_name": "stringResolver"}, {"original_string": "@Inject\n    @Named(\"current\")\n    protected DocumentReferenceResolver<EntityReference> referenceResolver;", "modifier": "@Inject\n    @Named(\"current\")\n    protected", "type": "DocumentReferenceResolver<EntityReference>", "declarator": "referenceResolver", "var_name": "referenceResolver"}, {"original_string": "@Inject\n    @Named(\"local\")\n    protected EntityReferenceSerializer<String> localSerializer;", "modifier": "@Inject\n    @Named(\"local\")\n    protected", "type": "EntityReferenceSerializer<String>", "declarator": "localSerializer", "var_name": "localSerializer"}, {"original_string": "private Class<? extends E> eclass;", "modifier": "private", "type": "Class<? extends E>", "declarator": "eclass", "var_name": "eclass"}, {"original_string": "private Constructor<? extends E> econstructor;", "modifier": "private", "type": "Constructor<? extends E>", "declarator": "econstructor", "var_name": "econstructor"}], "methods": [{"identifier": "create", "parameters": "()", "modifiers": "@Override public", "return": "E", "signature": "E create()", "full_signature": "@Override public E create()", "class_method_signature": "AbstractPrimaryEntityManager.create()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(DocumentReference creator)", "modifiers": "@Override public synchronized", "return": "E", "signature": "E create(DocumentReference creator)", "full_signature": "@Override public synchronized E create(DocumentReference creator)", "class_method_signature": "AbstractPrimaryEntityManager.create(DocumentReference creator)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String id)", "modifiers": "@Override public", "return": "E", "signature": "E get(String id)", "full_signature": "@Override public E get(String id)", "class_method_signature": "AbstractPrimaryEntityManager.get(String id)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(DocumentReference reference)", "modifiers": "@Override public", "return": "E", "signature": "E get(DocumentReference reference)", "full_signature": "@Override public E get(DocumentReference reference)", "class_method_signature": "AbstractPrimaryEntityManager.get(DocumentReference reference)", "testcase": false, "constructor": false}, {"identifier": "getByName", "parameters": "(String name)", "modifiers": "@Override public", "return": "E", "signature": "E getByName(String name)", "full_signature": "@Override public E getByName(String name)", "class_method_signature": "AbstractPrimaryEntityManager.getByName(String name)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<E>", "signature": "Iterator<E> getAll()", "full_signature": "@Override public Iterator<E> getAll()", "class_method_signature": "AbstractPrimaryEntityManager.getAll()", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(E entity)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean delete(E entity)", "full_signature": "@Override public boolean delete(E entity)", "class_method_signature": "AbstractPrimaryEntityManager.delete(E entity)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(DocumentModelBridge document)", "modifiers": "@Override public", "return": "E", "signature": "E load(DocumentModelBridge document)", "full_signature": "@Override public E load(DocumentModelBridge document)", "class_method_signature": "AbstractPrimaryEntityManager.load(DocumentModelBridge document)", "testcase": false, "constructor": false}, {"identifier": "getNextDocument", "parameters": "()", "modifiers": "protected", "return": "DocumentReference", "signature": "DocumentReference getNextDocument()", "full_signature": "protected DocumentReference getNextDocument()", "class_method_signature": "AbstractPrimaryEntityManager.getNextDocument()", "testcase": false, "constructor": false}, {"identifier": "getIdPrefix", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getIdPrefix()", "full_signature": "@Override public String getIdPrefix()", "class_method_signature": "AbstractPrimaryEntityManager.getIdPrefix()", "testcase": false, "constructor": false}, {"identifier": "getLastUsedId", "parameters": "()", "modifiers": "protected", "return": "long", "signature": "long getLastUsedId()", "full_signature": "protected long getLastUsedId()", "class_method_signature": "AbstractPrimaryEntityManager.getLastUsedId()", "testcase": false, "constructor": false}, {"identifier": "getEntityXClassReference", "parameters": "()", "modifiers": "protected", "return": "DocumentReference", "signature": "DocumentReference getEntityXClassReference()", "full_signature": "protected DocumentReference getEntityXClassReference()", "class_method_signature": "AbstractPrimaryEntityManager.getEntityXClassReference()", "testcase": false, "constructor": false}, {"identifier": "getEntityType", "parameters": "()", "modifiers": "@Override public", "return": "EntityReference", "signature": "EntityReference getEntityType()", "full_signature": "@Override public EntityReference getEntityType()", "class_method_signature": "AbstractPrimaryEntityManager.getEntityType()", "testcase": false, "constructor": false}, {"identifier": "getEntityClass", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") protected", "return": "Class<? extends E>", "signature": "Class<? extends E> getEntityClass()", "full_signature": "@SuppressWarnings(\"unchecked\") protected Class<? extends E> getEntityClass()", "class_method_signature": "AbstractPrimaryEntityManager.getEntityClass()", "testcase": false, "constructor": false}, {"identifier": "getEntityConstructor", "parameters": "()", "modifiers": "protected", "return": "Constructor<? extends E>", "signature": "Constructor<? extends E> getEntityConstructor()", "full_signature": "protected Constructor<? extends E> getEntityConstructor()", "class_method_signature": "AbstractPrimaryEntityManager.getEntityConstructor()", "testcase": false, "constructor": false}], "file": "components/entities/api/src/main/java/org/phenotips/entities/spi/AbstractPrimaryEntityManager.java"}, "focal_method": {"identifier": "get", "parameters": "(String id)", "modifiers": "@Override public", "return": "E", "body": "@Override\n    public E get(String id)\n    {\n        return get(this.stringResolver.resolve(id, getDataSpace()));\n    }", "signature": "E get(String id)", "full_signature": "@Override public E get(String id)", "class_method_signature": "AbstractPrimaryEntityManager.get(String id)", "testcase": false, "constructor": false, "invocations": ["get", "resolve", "getDataSpace"]}, "repository": {"repo_id": 2685841, "url": "https://github.com/phenotips/phenotips", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 87, "size": 1662205, "license": "licensed"}}