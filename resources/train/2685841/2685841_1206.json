{"test_class": {"identifier": "DefaultPatientsResourceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public MockitoComponentMockingRule<PatientsResource> mocker =\n        new MockitoComponentMockingRule<>(DefaultPatientsResourceImpl.class);", "modifier": "@Rule\n    public", "type": "MockitoComponentMockingRule<PatientsResource>", "declarator": "mocker =\n        new MockitoComponentMockingRule<>(DefaultPatientsResourceImpl.class)", "var_name": "mocker"}, {"original_string": "@Mock\n    private User currentUser;", "modifier": "@Mock\n    private", "type": "User", "declarator": "currentUser", "var_name": "currentUser"}, {"original_string": "@Mock\n    private Patient patient;", "modifier": "@Mock\n    private", "type": "Patient", "declarator": "patient", "var_name": "patient"}, {"original_string": "@Mock\n    private Logger logger;", "modifier": "@Mock\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "@Mock\n    private UriInfo uriInfo;", "modifier": "@Mock\n    private", "type": "UriInfo", "declarator": "uriInfo", "var_name": "uriInfo"}, {"original_string": "private DomainObjectFactory factory;", "modifier": "private", "type": "DomainObjectFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "private PatientRepository repository;", "modifier": "private", "type": "PatientRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "private QueryManager queries;", "modifier": "private", "type": "QueryManager", "declarator": "queries", "var_name": "queries"}, {"original_string": "private AuthorizationService access;", "modifier": "private", "type": "AuthorizationService", "declarator": "access", "var_name": "access"}, {"original_string": "private UserManager users;", "modifier": "private", "type": "UserManager", "declarator": "users", "var_name": "users"}, {"original_string": "private URI uri;", "modifier": "private", "type": "URI", "declarator": "uri", "var_name": "uri"}, {"original_string": "private PatientsResource patientsResource;", "modifier": "private", "type": "PatientsResource", "declarator": "patientsResource", "var_name": "patientsResource"}, {"original_string": "private XWikiContext context;", "modifier": "private", "type": "XWikiContext", "declarator": "context", "var_name": "context"}], "file": "components/patient-data/rest/src/test/java/org/phenotips/data/rest/internal/DefaultPatientsResourceImplTest.java"}, "test_case": {"identifier": "creatingPatientFails", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void creatingPatientFails()\n    {\n        JSONObject json = new JSONObject();\n        Exception exception = new NullPointerException();\n        doReturn(true).when(this.access).hasAccess(any(User.class), eq(Right.EDIT), any(EntityReference.class));\n        doThrow(exception).when(this.repository).create();\n        Response response = this.patientsResource.add(json.toString());\n        Assert.assertEquals(Response.Status.INTERNAL_SERVER_ERROR.getStatusCode(), response.getStatus());\n        verify(this.logger).error(\"Could not process patient creation request: {}\", exception.getMessage(), exception);\n    }", "signature": "void creatingPatientFails()", "full_signature": "@Test public void creatingPatientFails()", "class_method_signature": "DefaultPatientsResourceImplTest.creatingPatientFails()", "testcase": true, "constructor": false, "invocations": ["hasAccess", "when", "doReturn", "any", "eq", "any", "create", "when", "doThrow", "add", "toString", "assertEquals", "getStatusCode", "getStatus", "error", "verify", "getMessage"]}, "focal_class": {"identifier": "DefaultPatientsResourceImpl", "superclass": "extends XWikiResource", "interfaces": "implements PatientsResource", "fields": [{"original_string": "@Inject\n    private PatientRepository repository;", "modifier": "@Inject\n    private", "type": "PatientRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "@Inject\n    private QueryManager queries;", "modifier": "@Inject\n    private", "type": "QueryManager", "declarator": "queries", "var_name": "queries"}, {"original_string": "@Inject\n    private AuthorizationService access;", "modifier": "@Inject\n    private", "type": "AuthorizationService", "declarator": "access", "var_name": "access"}, {"original_string": "@Inject\n    private UserManager users;", "modifier": "@Inject\n    private", "type": "UserManager", "declarator": "users", "var_name": "users"}, {"original_string": "@Inject\n    @Named(\"current\")\n    private EntityReferenceResolver<EntityReference> currentResolver;", "modifier": "@Inject\n    @Named(\"current\")\n    private", "type": "EntityReferenceResolver<EntityReference>", "declarator": "currentResolver", "var_name": "currentResolver"}, {"original_string": "@Inject\n    private DomainObjectFactory factory;", "modifier": "@Inject\n    private", "type": "DomainObjectFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "@Inject\n    private Provider<Autolinker> autolinker;", "modifier": "@Inject\n    private", "type": "Provider<Autolinker>", "declarator": "autolinker", "var_name": "autolinker"}], "methods": [{"identifier": "add", "parameters": "(final String json)", "modifiers": "@Override public", "return": "Response", "signature": "Response add(final String json)", "full_signature": "@Override public Response add(final String json)", "class_method_signature": "DefaultPatientsResourceImpl.add(final String json)", "testcase": false, "constructor": false}, {"identifier": "addPatients", "parameters": "(final String json)", "modifiers": "private", "return": "Response", "signature": "Response addPatients(final String json)", "full_signature": "private Response addPatients(final String json)", "class_method_signature": "DefaultPatientsResourceImpl.addPatients(final String json)", "testcase": false, "constructor": false}, {"identifier": "addPatient", "parameters": "(final String json)", "modifiers": "private", "return": "Response", "signature": "Response addPatient(final String json)", "full_signature": "private Response addPatient(final String json)", "class_method_signature": "DefaultPatientsResourceImpl.addPatient(final String json)", "testcase": false, "constructor": false}, {"identifier": "buildCreatedResponse", "parameters": "(final Patient patient)", "modifiers": "private", "return": "Response", "signature": "Response buildCreatedResponse(final Patient patient)", "full_signature": "private Response buildCreatedResponse(final Patient patient)", "class_method_signature": "DefaultPatientsResourceImpl.buildCreatedResponse(final Patient patient)", "testcase": false, "constructor": false}, {"identifier": "listPatients", "parameters": "(Integer start, Integer number, String orderField, String order)", "modifiers": "@Override public", "return": "Patients", "signature": "Patients listPatients(Integer start, Integer number, String orderField, String order)", "full_signature": "@Override public Patients listPatients(Integer start, Integer number, String orderField, String order)", "class_method_signature": "DefaultPatientsResourceImpl.listPatients(Integer start, Integer number, String orderField, String order)", "testcase": false, "constructor": false}, {"identifier": "getGrantedRight", "parameters": "()", "modifiers": "private", "return": "Right", "signature": "Right getGrantedRight()", "full_signature": "private Right getGrantedRight()", "class_method_signature": "DefaultPatientsResourceImpl.getGrantedRight()", "testcase": false, "constructor": false}], "file": "components/patient-data/rest/src/main/java/org/phenotips/data/rest/internal/DefaultPatientsResourceImpl.java"}, "focal_method": {"identifier": "add", "parameters": "(final String json)", "modifiers": "@Override public", "return": "Response", "body": "@Override\n    public Response add(final String json)\n    {\n        this.slf4Jlogger.debug(\"Importing new patient from JSON via REST: {}\", json);\n\n        final User currentUser = this.users.getCurrentUser();\n        if (!this.access.hasAccess(currentUser, Right.EDIT,\n            this.currentResolver.resolve(Patient.DEFAULT_DATA_SPACE, EntityType.SPACE))) {\n            throw new WebApplicationException(Status.UNAUTHORIZED);\n        }\n\n        try {\n            final Response response;\n            if (json != null) {\n                response = json.startsWith(\"[\") ? addPatients(json) : addPatient(json);\n            } else {\n                response = buildCreatedResponse(this.repository.create());\n            }\n            return response;\n        } catch (Exception ex) {\n            this.slf4Jlogger.error(\"Could not process patient creation request: {}\", ex.getMessage(), ex);\n            return Response.status(Status.INTERNAL_SERVER_ERROR).build();\n        }\n    }", "signature": "Response add(final String json)", "full_signature": "@Override public Response add(final String json)", "class_method_signature": "DefaultPatientsResourceImpl.add(final String json)", "testcase": false, "constructor": false, "invocations": ["debug", "getCurrentUser", "hasAccess", "resolve", "startsWith", "addPatients", "addPatient", "buildCreatedResponse", "create", "error", "getMessage", "build", "status"]}, "repository": {"repo_id": 2685841, "url": "https://github.com/phenotips/phenotips", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 87, "size": 1662205, "license": "licensed"}}