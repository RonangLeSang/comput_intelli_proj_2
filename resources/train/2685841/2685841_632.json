{"test_class": {"identifier": "AuditEventProcessorsListProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public MockitoComponentMockingRule<Provider<List<AuditEventProcessor>>> mocker =\n        new MockitoComponentMockingRule<>(AuditEventProcessorsListProvider.class);", "modifier": "@Rule\n    public", "type": "MockitoComponentMockingRule<Provider<List<AuditEventProcessor>>>", "declarator": "mocker =\n        new MockitoComponentMockingRule<>(AuditEventProcessorsListProvider.class)", "var_name": "mocker"}, {"original_string": "@Mock\n    private AuditEventProcessor processor1;", "modifier": "@Mock\n    private", "type": "AuditEventProcessor", "declarator": "processor1", "var_name": "processor1"}, {"original_string": "@Mock\n    private AuditEventProcessor processor2;", "modifier": "@Mock\n    private", "type": "AuditEventProcessor", "declarator": "processor2", "var_name": "processor2"}, {"original_string": "private ComponentManager componentManager;", "modifier": "private", "type": "ComponentManager", "declarator": "componentManager", "var_name": "componentManager"}, {"original_string": "private List<AuditEventProcessor> processorsList;", "modifier": "private", "type": "List<AuditEventProcessor>", "declarator": "processorsList", "var_name": "processorsList"}], "file": "components/security/audit/backend/src/test/java/org/phenotips/security/audit/internal/AuditEventProcessorsListProviderTest.java"}, "test_case": {"identifier": "allProcessorsAreReturned", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void allProcessorsAreReturned() throws Exception\n    {\n        List<AuditEventProcessor> actualList = this.mocker.getComponentUnderTest().get();\n\n        Assert.assertEquals(2, actualList.size());\n        Assert.assertTrue(actualList.contains(this.processor1));\n        Assert.assertTrue(actualList.contains(this.processor2));\n\n    }", "signature": "void allProcessorsAreReturned()", "full_signature": "@Test public void allProcessorsAreReturned()", "class_method_signature": "AuditEventProcessorsListProviderTest.allProcessorsAreReturned()", "testcase": true, "constructor": false, "invocations": ["get", "getComponentUnderTest", "assertEquals", "size", "assertTrue", "contains", "assertTrue", "contains"]}, "focal_class": {"identifier": "AuditEventProcessorsListProvider", "superclass": "", "interfaces": "implements Provider<List<AuditEventProcessor>>", "fields": [{"original_string": "@Inject\n    @Named(\"wiki\")\n    private ComponentManager componentManager;", "modifier": "@Inject\n    @Named(\"wiki\")\n    private", "type": "ComponentManager", "declarator": "componentManager", "var_name": "componentManager"}], "methods": [{"identifier": "get", "parameters": "()", "modifiers": "@Override public", "return": "List<AuditEventProcessor>", "signature": "List<AuditEventProcessor> get()", "full_signature": "@Override public List<AuditEventProcessor> get()", "class_method_signature": "AuditEventProcessorsListProvider.get()", "testcase": false, "constructor": false}], "file": "components/security/audit/backend/src/main/java/org/phenotips/security/audit/internal/AuditEventProcessorsListProvider.java"}, "focal_method": {"identifier": "get", "parameters": "()", "modifiers": "@Override public", "return": "List<AuditEventProcessor>", "body": "@Override\n    public List<AuditEventProcessor> get()\n    {\n        try {\n            return this.componentManager.<AuditEventProcessor>getInstanceList(AuditEventProcessor.class);\n        } catch (ComponentLookupException ex) {\n            throw new RuntimeException(\"Failed to look up audit event processors\", ex);\n        }\n    }", "signature": "List<AuditEventProcessor> get()", "full_signature": "@Override public List<AuditEventProcessor> get()", "class_method_signature": "AuditEventProcessorsListProvider.get()", "testcase": false, "constructor": false, "invocations": ["getInstanceList"]}, "repository": {"repo_id": 2685841, "url": "https://github.com/phenotips/phenotips", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 87, "size": 1662205, "license": "licensed"}}