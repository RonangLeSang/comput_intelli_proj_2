{"test_class": {"identifier": "UIXRecordElementTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "@Mock\n    private RecordSection recordSection;", "modifier": "@Mock\n    private", "type": "RecordSection", "declarator": "recordSection", "var_name": "recordSection"}, {"original_string": "@Mock\n    private UIExtension uiExtension;", "modifier": "@Mock\n    private", "type": "UIExtension", "declarator": "uiExtension", "var_name": "uiExtension"}, {"original_string": "private Map<String, String> parameters = new HashMap<>();", "modifier": "private", "type": "Map<String, String>", "declarator": "parameters = new HashMap<>()", "var_name": "parameters"}], "file": "components/application-configuration/api/src/test/java/org/phenotips/configuration/spi/UIXRecordElementTest.java"}, "test_case": {"identifier": "containsPIIReturnsFalseForEmptySetting", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void containsPIIReturnsFalseForEmptySetting()\n    {\n        this.parameters.put(\"contains_PII\", \"\");\n        RecordElement s = new UIXRecordElement(this.uiExtension, this.recordSection);\n        Assert.assertFalse(s.containsPrivateIdentifiableInformation());\n    }", "signature": "void containsPIIReturnsFalseForEmptySetting()", "full_signature": "@Test public void containsPIIReturnsFalseForEmptySetting()", "class_method_signature": "UIXRecordElementTest.containsPIIReturnsFalseForEmptySetting()", "testcase": true, "constructor": false, "invocations": ["put", "assertFalse", "containsPrivateIdentifiableInformation"]}, "focal_class": {"identifier": "UIXRecordElement", "superclass": "", "interfaces": "implements RecordElement", "fields": [{"original_string": "private static final String CONTAINS_PII_LABEL = \"contains_PII\";", "modifier": "private static final", "type": "String", "declarator": "CONTAINS_PII_LABEL = \"contains_PII\"", "var_name": "CONTAINS_PII_LABEL"}, {"original_string": "private static final String TRUE_LABEL = \"true\";", "modifier": "private static final", "type": "String", "declarator": "TRUE_LABEL = \"true\"", "var_name": "TRUE_LABEL"}, {"original_string": "private static final String FALSE_LABEL = \"false\";", "modifier": "private static final", "type": "String", "declarator": "FALSE_LABEL = \"false\"", "var_name": "FALSE_LABEL"}, {"original_string": "private static final String ENABLED_LABEL = \"enabled\";", "modifier": "private static final", "type": "String", "declarator": "ENABLED_LABEL = \"enabled\"", "var_name": "ENABLED_LABEL"}, {"original_string": "private static final String TITLE_LABEL = \"title\";", "modifier": "private static final", "type": "String", "declarator": "TITLE_LABEL = \"title\"", "var_name": "TITLE_LABEL"}, {"original_string": "private static final String FIELDS_LABEL = \"fields\";", "modifier": "private static final", "type": "String", "declarator": "FIELDS_LABEL = \"fields\"", "var_name": "FIELDS_LABEL"}, {"original_string": "private final UIExtension extension;", "modifier": "private final", "type": "UIExtension", "declarator": "extension", "var_name": "extension"}, {"original_string": "private final RecordSection section;", "modifier": "private final", "type": "RecordSection", "declarator": "section", "var_name": "section"}, {"original_string": "private final List<String> fields;", "modifier": "private final", "type": "List<String>", "declarator": "fields", "var_name": "fields"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private boolean enabled;", "modifier": "private", "type": "boolean", "declarator": "enabled", "var_name": "enabled"}], "methods": [{"identifier": "UIXRecordElement", "parameters": "(UIExtension extension, RecordSection section)", "modifiers": "public", "return": "", "signature": " UIXRecordElement(UIExtension extension, RecordSection section)", "full_signature": "public  UIXRecordElement(UIExtension extension, RecordSection section)", "class_method_signature": "UIXRecordElement.UIXRecordElement(UIExtension extension, RecordSection section)", "testcase": false, "constructor": true}, {"identifier": "getExtension", "parameters": "()", "modifiers": "@Override public", "return": "UIExtension", "signature": "UIExtension getExtension()", "full_signature": "@Override public UIExtension getExtension()", "class_method_signature": "UIXRecordElement.getExtension()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "UIXRecordElement.getName()", "testcase": false, "constructor": false}, {"identifier": "isEnabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEnabled()", "full_signature": "@Override public boolean isEnabled()", "class_method_signature": "UIXRecordElement.isEnabled()", "testcase": false, "constructor": false}, {"identifier": "containsPrivateIdentifiableInformation", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsPrivateIdentifiableInformation()", "full_signature": "@Override public boolean containsPrivateIdentifiableInformation()", "class_method_signature": "UIXRecordElement.containsPrivateIdentifiableInformation()", "testcase": false, "constructor": false}, {"identifier": "getDisplayedFields", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getDisplayedFields()", "full_signature": "@Override public List<String> getDisplayedFields()", "class_method_signature": "UIXRecordElement.getDisplayedFields()", "testcase": false, "constructor": false}, {"identifier": "getContainingSection", "parameters": "()", "modifiers": "@Override public", "return": "RecordSection", "signature": "RecordSection getContainingSection()", "full_signature": "@Override public RecordSection getContainingSection()", "class_method_signature": "UIXRecordElement.getContainingSection()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "UIXRecordElement.toString()", "testcase": false, "constructor": false}, {"identifier": "setEnabled", "parameters": "(boolean enabled)", "modifiers": "@Override public", "return": "void", "signature": "void setEnabled(boolean enabled)", "full_signature": "@Override public void setEnabled(boolean enabled)", "class_method_signature": "UIXRecordElement.setEnabled(boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "constructFields", "parameters": "()", "modifiers": "private", "return": "List<String>", "signature": "List<String> constructFields()", "full_signature": "private List<String> constructFields()", "class_method_signature": "UIXRecordElement.constructFields()", "testcase": false, "constructor": false}, {"identifier": "constructName", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String constructName()", "full_signature": "private String constructName()", "class_method_signature": "UIXRecordElement.constructName()", "testcase": false, "constructor": false}], "file": "components/application-configuration/api/src/main/java/org/phenotips/configuration/spi/UIXRecordElement.java"}, "focal_method": {"identifier": "containsPrivateIdentifiableInformation", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean containsPrivateIdentifiableInformation()\n    {\n        return StringUtils.equals(TRUE_LABEL, this.extension.getParameters().get(CONTAINS_PII_LABEL));\n    }", "signature": "boolean containsPrivateIdentifiableInformation()", "full_signature": "@Override public boolean containsPrivateIdentifiableInformation()", "class_method_signature": "UIXRecordElement.containsPrivateIdentifiableInformation()", "testcase": false, "constructor": false, "invocations": ["equals", "get", "getParameters"]}, "repository": {"repo_id": 2685841, "url": "https://github.com/phenotips/phenotips", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 87, "size": 1662205, "license": "licensed"}}