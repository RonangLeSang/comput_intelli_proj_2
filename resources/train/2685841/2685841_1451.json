{"test_class": {"identifier": "ParentalNamesControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public MockitoComponentMockingRule<PatientDataController<String>> mocker =\n        new MockitoComponentMockingRule<>(ParentalNamesController.class);", "modifier": "@Rule\n    public", "type": "MockitoComponentMockingRule<PatientDataController<String>>", "declarator": "mocker =\n        new MockitoComponentMockingRule<>(ParentalNamesController.class)", "var_name": "mocker"}, {"original_string": "private PatientDataController<String> component;", "modifier": "private", "type": "PatientDataController<String>", "declarator": "component", "var_name": "component"}], "file": "components/patient-data/impl/src/test/java/org/phenotips/data/internal/controller/ParentalNamesControllerTest.java"}, "test_case": {"identifier": "checkGetJsonPropertyName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void checkGetJsonPropertyName()\n    {\n        Assert.assertEquals(\"parental_names\",\n            ((AbstractSimpleController) this.component).getJsonPropertyName());\n    }", "signature": "void checkGetJsonPropertyName()", "full_signature": "@Test public void checkGetJsonPropertyName()", "class_method_signature": "ParentalNamesControllerTest.checkGetJsonPropertyName()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getJsonPropertyName"]}, "focal_class": {"identifier": "ParentalNamesController", "superclass": "extends AbstractSimpleController", "interfaces": "", "fields": [{"original_string": "public static final EntityReference CLASS_REFERENCE =\n        new EntityReference(\"ParentalInformationClass\", EntityType.DOCUMENT, Constants.CODE_SPACE_REFERENCE);", "modifier": "public static final", "type": "EntityReference", "declarator": "CLASS_REFERENCE =\n        new EntityReference(\"ParentalInformationClass\", EntityType.DOCUMENT, Constants.CODE_SPACE_REFERENCE)", "var_name": "CLASS_REFERENCE"}], "methods": [{"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "ParentalNamesController.getName()", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override protected", "return": "List<String>", "signature": "List<String> getProperties()", "full_signature": "@Override protected List<String> getProperties()", "class_method_signature": "ParentalNamesController.getProperties()", "testcase": false, "constructor": false}, {"identifier": "getJsonPropertyName", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getJsonPropertyName()", "full_signature": "@Override protected String getJsonPropertyName()", "class_method_signature": "ParentalNamesController.getJsonPropertyName()", "testcase": false, "constructor": false}, {"identifier": "getStorageXClass", "parameters": "()", "modifiers": "@Override protected", "return": "EntityReference", "signature": "EntityReference getStorageXClass()", "full_signature": "@Override protected EntityReference getStorageXClass()", "class_method_signature": "ParentalNamesController.getStorageXClass()", "testcase": false, "constructor": false}], "file": "components/patient-data/impl/src/main/java/org/phenotips/data/internal/controller/ParentalNamesController.java"}, "focal_method": {"identifier": "getJsonPropertyName", "parameters": "()", "modifiers": "@Override protected", "return": "String", "body": "@Override\n    protected String getJsonPropertyName()\n    {\n        return \"parental_names\";\n    }", "signature": "String getJsonPropertyName()", "full_signature": "@Override protected String getJsonPropertyName()", "class_method_signature": "ParentalNamesController.getJsonPropertyName()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2685841, "url": "https://github.com/phenotips/phenotips", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 87, "size": 1662205, "license": "licensed"}}