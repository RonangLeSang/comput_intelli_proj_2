{"test_class": {"identifier": "FamilyHistoryControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CONSANGUINITY = \"consanguinity\";", "modifier": "private static final", "type": "String", "declarator": "CONSANGUINITY = \"consanguinity\"", "var_name": "CONSANGUINITY"}, {"original_string": "private static final String MISCARRIAGES = \"miscarriages\";", "modifier": "private static final", "type": "String", "declarator": "MISCARRIAGES = \"miscarriages\"", "var_name": "MISCARRIAGES"}, {"original_string": "private static final String AFFECTED_RELATIVES = \"affectedRelatives\";", "modifier": "private static final", "type": "String", "declarator": "AFFECTED_RELATIVES = \"affectedRelatives\"", "var_name": "AFFECTED_RELATIVES"}, {"original_string": "private static final String FAMILY_HISTORY = \"familyHistory\";", "modifier": "private static final", "type": "String", "declarator": "FAMILY_HISTORY = \"familyHistory\"", "var_name": "FAMILY_HISTORY"}, {"original_string": "@Rule\n    public MockitoComponentMockingRule<PatientDataController<Integer>> mocker =\n        new MockitoComponentMockingRule<>(FamilyHistoryController.class);", "modifier": "@Rule\n    public", "type": "MockitoComponentMockingRule<PatientDataController<Integer>>", "declarator": "mocker =\n        new MockitoComponentMockingRule<>(FamilyHistoryController.class)", "var_name": "mocker"}, {"original_string": "@Mock\n    private Patient patient;", "modifier": "@Mock\n    private", "type": "Patient", "declarator": "patient", "var_name": "patient"}, {"original_string": "@Mock\n    private XWikiDocument doc;", "modifier": "@Mock\n    private", "type": "XWikiDocument", "declarator": "doc", "var_name": "doc"}, {"original_string": "@Mock\n    private BaseObject dataHolder;", "modifier": "@Mock\n    private", "type": "BaseObject", "declarator": "dataHolder", "var_name": "dataHolder"}, {"original_string": "@Mock\n    private XWikiContext xcontext;", "modifier": "@Mock\n    private", "type": "XWikiContext", "declarator": "xcontext", "var_name": "xcontext"}, {"original_string": "private PatientDataController<Integer> component;", "modifier": "private", "type": "PatientDataController<Integer>", "declarator": "component", "var_name": "component"}], "file": "components/patient-data/impl/src/test/java/org/phenotips/data/internal/controller/FamilyHistoryControllerTest.java"}, "test_case": {"identifier": "checkGetName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void checkGetName() throws ComponentLookupException\n    {\n        Assert.assertEquals(\"familyHistory\", this.mocker.getComponentUnderTest().getName());\n    }", "signature": "void checkGetName()", "full_signature": "@Test public void checkGetName()", "class_method_signature": "FamilyHistoryControllerTest.checkGetName()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getName", "getComponentUnderTest"]}, "focal_class": {"identifier": "FamilyHistoryController", "superclass": "extends AbstractComplexController<Integer>", "interfaces": "", "fields": [{"original_string": "private static final String CONSANGUINITY = \"consanguinity\";", "modifier": "private static final", "type": "String", "declarator": "CONSANGUINITY = \"consanguinity\"", "var_name": "CONSANGUINITY"}, {"original_string": "private static final String MISCARRIAGES = \"miscarriages\";", "modifier": "private static final", "type": "String", "declarator": "MISCARRIAGES = \"miscarriages\"", "var_name": "MISCARRIAGES"}, {"original_string": "private static final String AFFECTED_RELATIVES = \"affectedRelatives\";", "modifier": "private static final", "type": "String", "declarator": "AFFECTED_RELATIVES = \"affectedRelatives\"", "var_name": "AFFECTED_RELATIVES"}, {"original_string": "private List<String> booleans = Arrays.asList(CONSANGUINITY, MISCARRIAGES, AFFECTED_RELATIVES);", "modifier": "private", "type": "List<String>", "declarator": "booleans = Arrays.asList(CONSANGUINITY, MISCARRIAGES, AFFECTED_RELATIVES)", "var_name": "booleans"}], "methods": [{"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "FamilyHistoryController.getName()", "testcase": false, "constructor": false}, {"identifier": "getJsonPropertyName", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getJsonPropertyName()", "full_signature": "@Override protected String getJsonPropertyName()", "class_method_signature": "FamilyHistoryController.getJsonPropertyName()", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override protected", "return": "List<String>", "signature": "List<String> getProperties()", "full_signature": "@Override protected List<String> getProperties()", "class_method_signature": "FamilyHistoryController.getProperties()", "testcase": false, "constructor": false}, {"identifier": "getBooleanFields", "parameters": "()", "modifiers": "@Override protected", "return": "List<String>", "signature": "List<String> getBooleanFields()", "full_signature": "@Override protected List<String> getBooleanFields()", "class_method_signature": "FamilyHistoryController.getBooleanFields()", "testcase": false, "constructor": false}, {"identifier": "getCodeFields", "parameters": "()", "modifiers": "@Override protected", "return": "List<String>", "signature": "List<String> getCodeFields()", "full_signature": "@Override protected List<String> getCodeFields()", "class_method_signature": "FamilyHistoryController.getCodeFields()", "testcase": false, "constructor": false}], "file": "components/patient-data/impl/src/main/java/org/phenotips/data/internal/controller/FamilyHistoryController.java"}, "focal_method": {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getName()\n    {\n        return \"familyHistory\";\n    }", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "FamilyHistoryController.getName()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2685841, "url": "https://github.com/phenotips/phenotips", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 87, "size": 1662205, "license": "licensed"}}