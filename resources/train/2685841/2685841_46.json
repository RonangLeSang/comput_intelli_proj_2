{"test_class": {"identifier": "GroupSetupEventListenerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final EntityReference GROUPS_CLASS_REFERENCE =\n        new EntityReference(\"XWikiGroups\", EntityType.DOCUMENT,\n            new EntityReference(\"XWiki\", EntityType.SPACE));", "modifier": "private static final", "type": "EntityReference", "declarator": "GROUPS_CLASS_REFERENCE =\n        new EntityReference(\"XWikiGroups\", EntityType.DOCUMENT,\n            new EntityReference(\"XWiki\", EntityType.SPACE))", "var_name": "GROUPS_CLASS_REFERENCE"}, {"original_string": "private static final EntityReference RIGHTS_CLASS_REFERENCE =\n        new EntityReference(\"XWikiRights\", EntityType.DOCUMENT,\n            new EntityReference(\"XWiki\", EntityType.SPACE));", "modifier": "private static final", "type": "EntityReference", "declarator": "RIGHTS_CLASS_REFERENCE =\n        new EntityReference(\"XWikiRights\", EntityType.DOCUMENT,\n            new EntityReference(\"XWiki\", EntityType.SPACE))", "var_name": "RIGHTS_CLASS_REFERENCE"}, {"original_string": "@Rule\n    public final MockitoComponentMockingRule<EventListener> mocker = new MockitoComponentMockingRule<>(\n        GroupSetupEventListener.class);", "modifier": "@Rule\n    public final", "type": "MockitoComponentMockingRule<EventListener>", "declarator": "mocker = new MockitoComponentMockingRule<>(\n        GroupSetupEventListener.class)", "var_name": "mocker"}], "file": "components/users/api/src/test/java/org/phenotips/groups/internal/listeners/GroupSetupEventListenerTest.java"}, "test_case": {"identifier": "onEventWithTemplate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void onEventWithTemplate() throws ComponentLookupException, XWikiException\n    {\n        Utils.setComponentManager(this.mocker);\n\n        DocumentReference docReference = new DocumentReference(\"xwiki\", \"PhenoTips\", \"PhenoTipsGroupTemplate\");\n        Provider<XWikiContext> contextProvider = this.mocker.getInstance(XWikiContext.TYPE_PROVIDER);\n        XWikiContext context = mock(XWikiContext.class);\n        when(contextProvider.get()).thenReturn(context);\n        XWikiDocument doc = mock(XWikiDocument.class);\n        when(doc.getXObject(Group.CLASS_REFERENCE)).thenReturn(mock(BaseObject.class));\n        when(doc.getDocumentReference()).thenReturn(docReference);\n\n        this.mocker.getComponentUnderTest().onEvent(new DocumentCreatingEvent(docReference), doc, context);\n\n        Mockito.verifyZeroInteractions(context);\n        Mockito.verify(doc).getXObject(Group.CLASS_REFERENCE);\n        Mockito.verify(doc).getDocumentReference();\n        Mockito.verifyNoMoreInteractions(doc);\n    }", "signature": "void onEventWithTemplate()", "full_signature": "@Test public void onEventWithTemplate()", "class_method_signature": "GroupSetupEventListenerTest.onEventWithTemplate()", "testcase": true, "constructor": false, "invocations": ["setComponentManager", "getInstance", "mock", "thenReturn", "when", "get", "mock", "thenReturn", "when", "getXObject", "mock", "thenReturn", "when", "getDocumentReference", "onEvent", "getComponentUnderTest", "verifyZeroInteractions", "getXObject", "verify", "getDocumentReference", "verify", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "GroupSetupEventListener", "superclass": "", "interfaces": "implements EventListener", "fields": [{"original_string": "private static final EntityReference SYSTEM_SPACE_REFERENCE = new EntityReference(XWiki.SYSTEM_SPACE,\n        EntityType.SPACE);", "modifier": "private static final", "type": "EntityReference", "declarator": "SYSTEM_SPACE_REFERENCE = new EntityReference(XWiki.SYSTEM_SPACE,\n        EntityType.SPACE)", "var_name": "SYSTEM_SPACE_REFERENCE"}, {"original_string": "private static final EntityReference GROUP_CLASS_REFERENCE = new EntityReference(\"XWikiGroups\",\n        EntityType.DOCUMENT, SYSTEM_SPACE_REFERENCE);", "modifier": "private static final", "type": "EntityReference", "declarator": "GROUP_CLASS_REFERENCE = new EntityReference(\"XWikiGroups\",\n        EntityType.DOCUMENT, SYSTEM_SPACE_REFERENCE)", "var_name": "GROUP_CLASS_REFERENCE"}, {"original_string": "private static final EntityReference RIGHTS_CLASS_REFERENCE = new EntityReference(\"XWikiRights\",\n        EntityType.DOCUMENT, SYSTEM_SPACE_REFERENCE);", "modifier": "private static final", "type": "EntityReference", "declarator": "RIGHTS_CLASS_REFERENCE = new EntityReference(\"XWikiRights\",\n        EntityType.DOCUMENT, SYSTEM_SPACE_REFERENCE)", "var_name": "RIGHTS_CLASS_REFERENCE"}, {"original_string": "@Inject\n    private Logger logger;", "modifier": "@Inject\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "@Inject\n    private Provider<XWikiContext> xcontextProvider;", "modifier": "@Inject\n    private", "type": "Provider<XWikiContext>", "declarator": "xcontextProvider", "var_name": "xcontextProvider"}, {"original_string": "@Inject\n    private DocumentAccessBridge dab;", "modifier": "@Inject\n    private", "type": "DocumentAccessBridge", "declarator": "dab", "var_name": "dab"}], "methods": [{"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "GroupSetupEventListener.getName()", "testcase": false, "constructor": false}, {"identifier": "getEvents", "parameters": "()", "modifiers": "@Override public", "return": "List<Event>", "signature": "List<Event> getEvents()", "full_signature": "@Override public List<Event> getEvents()", "class_method_signature": "GroupSetupEventListener.getEvents()", "testcase": false, "constructor": false}, {"identifier": "onEvent", "parameters": "(Event event, Object source, Object data)", "modifiers": "@Override public", "return": "void", "signature": "void onEvent(Event event, Object source, Object data)", "full_signature": "@Override public void onEvent(Event event, Object source, Object data)", "class_method_signature": "GroupSetupEventListener.onEvent(Event event, Object source, Object data)", "testcase": false, "constructor": false}, {"identifier": "setMembers", "parameters": "(DocumentReference member, XWikiDocument doc, XWikiContext context)", "modifiers": "private", "return": "void", "signature": "void setMembers(DocumentReference member, XWikiDocument doc, XWikiContext context)", "full_signature": "private void setMembers(DocumentReference member, XWikiDocument doc, XWikiContext context)", "class_method_signature": "GroupSetupEventListener.setMembers(DocumentReference member, XWikiDocument doc, XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "setRights", "parameters": "(DocumentReference editor, XWikiDocument doc, XWikiContext context)", "modifiers": "private", "return": "void", "signature": "void setRights(DocumentReference editor, XWikiDocument doc, XWikiContext context)", "full_signature": "private void setRights(DocumentReference editor, XWikiDocument doc, XWikiContext context)", "class_method_signature": "GroupSetupEventListener.setRights(DocumentReference editor, XWikiDocument doc, XWikiContext context)", "testcase": false, "constructor": false}], "file": "components/users/api/src/main/java/org/phenotips/groups/internal/listeners/GroupSetupEventListener.java"}, "focal_method": {"identifier": "onEvent", "parameters": "(Event event, Object source, Object data)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onEvent(Event event, Object source, Object data)\n    {\n        XWikiDocument doc = (XWikiDocument) source;\n        if (doc.getXObject(Group.CLASS_REFERENCE) == null) {\n            return;\n        }\n        DocumentReference docReference = doc.getDocumentReference();\n        if (\"PhenoTipsGroupTemplate\".equals(docReference.getName())) {\n            return;\n        }\n        XWikiContext context = this.xcontextProvider.get();\n        DocumentReference adminsReference =\n            new DocumentReference(docReference.getName() + \" Managers\", docReference.getLastSpaceReference());\n        XWiki xwiki = context.getWiki();\n        try {\n            // Create the managers group\n            XWikiDocument adminsDoc = xwiki.getDocument(adminsReference, context);\n            setMembers(this.dab.getCurrentUserReference(), adminsDoc, context);\n            setRights(adminsReference, adminsDoc, context);\n            adminsDoc.setParentReference(new EntityReference(docReference));\n            xwiki.saveDocument(adminsDoc, \"Automatically created managers group\", true, context);\n\n            // Setup the new group\n            setMembers(adminsReference, doc, context);\n            setRights(adminsReference, doc, context);\n            // This is a pre-save notification, the document will be saved afterwards\n        } catch (XWikiException ex) {\n            this.logger.error(\"Failed to set up the new group [{}]: {}\", docReference, ex.getMessage(), ex);\n        }\n    }", "signature": "void onEvent(Event event, Object source, Object data)", "full_signature": "@Override public void onEvent(Event event, Object source, Object data)", "class_method_signature": "GroupSetupEventListener.onEvent(Event event, Object source, Object data)", "testcase": false, "constructor": false, "invocations": ["getXObject", "getDocumentReference", "equals", "getName", "get", "getName", "getLastSpaceReference", "getWiki", "getDocument", "setMembers", "getCurrentUserReference", "setRights", "setParentReference", "saveDocument", "setMembers", "setRights", "error", "getMessage"]}, "repository": {"repo_id": 2685841, "url": "https://github.com/phenotips/phenotips", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 87, "size": 1662205, "license": "licensed"}}