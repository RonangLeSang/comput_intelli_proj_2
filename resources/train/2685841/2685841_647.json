{"test_class": {"identifier": "BaseAuthorizationModuleTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public final MockitoComponentMockingRule<AuthorizationModule> mocker =\n        new MockitoComponentMockingRule<>(BaseAuthorizationModule.class);", "modifier": "@Rule\n    public final", "type": "MockitoComponentMockingRule<AuthorizationModule>", "declarator": "mocker =\n        new MockitoComponentMockingRule<>(BaseAuthorizationModule.class)", "var_name": "mocker"}, {"original_string": "@Mock\n    private User user;", "modifier": "@Mock\n    private", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "@Mock\n    private Right right;", "modifier": "@Mock\n    private", "type": "Right", "declarator": "right", "var_name": "right"}, {"original_string": "@Mock\n    private DocumentReference doc;", "modifier": "@Mock\n    private", "type": "DocumentReference", "declarator": "doc", "var_name": "doc"}], "file": "components/security/authorization/src/test/java/org/phenotips/security/authorization/internal/BaseAuthorizationModuleTest.java"}, "test_case": {"identifier": "defaultDecisionIsDeny", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void defaultDecisionIsDeny() throws ComponentLookupException\n    {\n        Assert.assertFalse(this.mocker.getComponentUnderTest().hasAccess(this.user, this.right, this.doc));\n    }", "signature": "void defaultDecisionIsDeny()", "full_signature": "@Test public void defaultDecisionIsDeny()", "class_method_signature": "BaseAuthorizationModuleTest.defaultDecisionIsDeny()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "hasAccess", "getComponentUnderTest"]}, "focal_class": {"identifier": "BaseAuthorizationModule", "superclass": "", "interfaces": "implements AuthorizationModule", "fields": [{"original_string": "@Inject\n    @Named(\"restricted\")\n    private ConfigurationSource configuration;", "modifier": "@Inject\n    @Named(\"restricted\")\n    private", "type": "ConfigurationSource", "declarator": "configuration", "var_name": "configuration"}], "methods": [{"identifier": "getPriority", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getPriority()", "full_signature": "@Override public int getPriority()", "class_method_signature": "BaseAuthorizationModule.getPriority()", "testcase": false, "constructor": false}, {"identifier": "hasAccess", "parameters": "(User user, Right access, EntityReference entity)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean hasAccess(User user, Right access, EntityReference entity)", "full_signature": "@Override public Boolean hasAccess(User user, Right access, EntityReference entity)", "class_method_signature": "BaseAuthorizationModule.hasAccess(User user, Right access, EntityReference entity)", "testcase": false, "constructor": false}], "file": "components/security/authorization/src/main/java/org/phenotips/security/authorization/internal/BaseAuthorizationModule.java"}, "focal_method": {"identifier": "hasAccess", "parameters": "(User user, Right access, EntityReference entity)", "modifiers": "@Override public", "return": "Boolean", "body": "@Override\n    public Boolean hasAccess(User user, Right access, EntityReference entity)\n    {\n        Boolean result = this.configuration.getProperty(\"phenotips.security.authorization.allowAllAccessByDefault\");\n        if (result == null) {\n            result = Boolean.FALSE;\n        }\n        return result;\n    }", "signature": "Boolean hasAccess(User user, Right access, EntityReference entity)", "full_signature": "@Override public Boolean hasAccess(User user, Right access, EntityReference entity)", "class_method_signature": "BaseAuthorizationModule.hasAccess(User user, Right access, EntityReference entity)", "testcase": false, "constructor": false, "invocations": ["getProperty"]}, "repository": {"repo_id": 2685841, "url": "https://github.com/phenotips/phenotips", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 87, "size": 1662205, "license": "licensed"}}