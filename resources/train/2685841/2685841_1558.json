{"test_class": {"identifier": "GeneListControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String GENES_STRING = \"genes\";", "modifier": "private static final", "type": "String", "declarator": "GENES_STRING = \"genes\"", "var_name": "GENES_STRING"}, {"original_string": "private static final String CONTROLLER_NAME = GENES_STRING;", "modifier": "private static final", "type": "String", "declarator": "CONTROLLER_NAME = GENES_STRING", "var_name": "CONTROLLER_NAME"}, {"original_string": "private static final String GENES_ENABLING_FIELD_NAME = GENES_STRING;", "modifier": "private static final", "type": "String", "declarator": "GENES_ENABLING_FIELD_NAME = GENES_STRING", "var_name": "GENES_ENABLING_FIELD_NAME"}, {"original_string": "private static final String GENE_KEY = \"gene\";", "modifier": "private static final", "type": "String", "declarator": "GENE_KEY = \"gene\"", "var_name": "GENE_KEY"}, {"original_string": "private static final String GENE_VALUE = \"GENE\";", "modifier": "private static final", "type": "String", "declarator": "GENE_VALUE = \"GENE\"", "var_name": "GENE_VALUE"}, {"original_string": "private static final String STATUS_KEY = \"status\";", "modifier": "private static final", "type": "String", "declarator": "STATUS_KEY = \"status\"", "var_name": "STATUS_KEY"}, {"original_string": "private static final String STRATEGY_KEY = \"strategy\";", "modifier": "private static final", "type": "String", "declarator": "STRATEGY_KEY = \"strategy\"", "var_name": "STRATEGY_KEY"}, {"original_string": "private static final String COMMENTS_KEY = \"comments\";", "modifier": "private static final", "type": "String", "declarator": "COMMENTS_KEY = \"comments\"", "var_name": "COMMENTS_KEY"}, {"original_string": "private static final String JSON_GENE_ID = \"id\";", "modifier": "private static final", "type": "String", "declarator": "JSON_GENE_ID = \"id\"", "var_name": "JSON_GENE_ID"}, {"original_string": "private static final String JSON_GENE_SYMBOL = GENE_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_GENE_SYMBOL = GENE_KEY", "var_name": "JSON_GENE_SYMBOL"}, {"original_string": "private static final String JSON_STATUS_KEY = STATUS_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_STATUS_KEY = STATUS_KEY", "var_name": "JSON_STATUS_KEY"}, {"original_string": "private static final String JSON_STRATEGY_KEY = STRATEGY_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_STRATEGY_KEY = STRATEGY_KEY", "var_name": "JSON_STRATEGY_KEY"}, {"original_string": "private static final String JSON_COMMENTS_KEY = COMMENTS_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_COMMENTS_KEY = COMMENTS_KEY", "var_name": "JSON_COMMENTS_KEY"}, {"original_string": "private static final String JSON_OLD_REJECTED_GENE_KEY = \"rejectedGenes\";", "modifier": "private static final", "type": "String", "declarator": "JSON_OLD_REJECTED_GENE_KEY = \"rejectedGenes\"", "var_name": "JSON_OLD_REJECTED_GENE_KEY"}, {"original_string": "private static final String JSON_OLD_SOLVED_GENE_KEY = \"solved\";", "modifier": "private static final", "type": "String", "declarator": "JSON_OLD_SOLVED_GENE_KEY = \"solved\"", "var_name": "JSON_OLD_SOLVED_GENE_KEY"}, {"original_string": "private static final String JSON_OLD_CANDIDATE_GENE_KEY = \"candidate\";", "modifier": "private static final", "type": "String", "declarator": "JSON_OLD_CANDIDATE_GENE_KEY = \"candidate\"", "var_name": "JSON_OLD_CANDIDATE_GENE_KEY"}, {"original_string": "private static final List<String> STATUS_VALUES = Arrays.asList(\"candidate\", \"rejected\", \"rejected_candidate\",\n        \"solved\", \"carrier\");", "modifier": "private static final", "type": "List<String>", "declarator": "STATUS_VALUES = Arrays.asList(\"candidate\", \"rejected\", \"rejected_candidate\",\n        \"solved\", \"carrier\")", "var_name": "STATUS_VALUES"}, {"original_string": "private static final List<String> STRATEGY_VALUES = Arrays.asList(\"sequencing\", \"deletion\", \"familial_mutation\",\n        \"common_mutations\");", "modifier": "private static final", "type": "List<String>", "declarator": "STRATEGY_VALUES = Arrays.asList(\"sequencing\", \"deletion\", \"familial_mutation\",\n        \"common_mutations\")", "var_name": "STRATEGY_VALUES"}, {"original_string": "@Rule\n    public MockitoComponentMockingRule<PatientDataController<Gene>> mocker =\n        new MockitoComponentMockingRule<>(GeneListController.class);", "modifier": "@Rule\n    public", "type": "MockitoComponentMockingRule<PatientDataController<Gene>>", "declarator": "mocker =\n        new MockitoComponentMockingRule<>(GeneListController.class)", "var_name": "mocker"}, {"original_string": "@Mock\n    private Patient patient;", "modifier": "@Mock\n    private", "type": "Patient", "declarator": "patient", "var_name": "patient"}, {"original_string": "@Mock\n    private XWikiDocument doc;", "modifier": "@Mock\n    private", "type": "XWikiDocument", "declarator": "doc", "var_name": "doc"}, {"original_string": "@Mock\n    private XWikiContext context;", "modifier": "@Mock\n    private", "type": "XWikiContext", "declarator": "context", "var_name": "context"}, {"original_string": "@Mock\n    private ComponentManager cm;", "modifier": "@Mock\n    private", "type": "ComponentManager", "declarator": "cm", "var_name": "cm"}, {"original_string": "@Mock\n    private Provider<ComponentManager> mockProvider;", "modifier": "@Mock\n    private", "type": "Provider<ComponentManager>", "declarator": "mockProvider", "var_name": "mockProvider"}, {"original_string": "@Mock\n    private VocabularyManager vm;", "modifier": "@Mock\n    private", "type": "VocabularyManager", "declarator": "vm", "var_name": "vm"}, {"original_string": "@Mock\n    private XWiki xwiki;", "modifier": "@Mock\n    private", "type": "XWiki", "declarator": "xwiki", "var_name": "xwiki"}, {"original_string": "@Mock\n    private Provider<XWikiContext> provider;", "modifier": "@Mock\n    private", "type": "Provider<XWikiContext>", "declarator": "provider", "var_name": "provider"}, {"original_string": "private List<BaseObject> geneXWikiObjects;", "modifier": "private", "type": "List<BaseObject>", "declarator": "geneXWikiObjects", "var_name": "geneXWikiObjects"}, {"original_string": "private PatientDataController<Gene> component;", "modifier": "private", "type": "PatientDataController<Gene>", "declarator": "component", "var_name": "component"}], "file": "components/patient-data/impl/src/test/java/org/phenotips/data/internal/controller/GeneListControllerTest.java"}, "test_case": {"identifier": "saveWithWrongTypeOfDataDoesNothing", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void saveWithWrongTypeOfDataDoesNothing()\n    {\n        when(this.patient.getData(CONTROLLER_NAME)).thenReturn(new SimpleValuePatientData<>(\"a\", \"b\"));\n        this.component.save(this.patient);\n        verifyZeroInteractions(this.doc);\n    }", "signature": "void saveWithWrongTypeOfDataDoesNothing()", "full_signature": "@Test public void saveWithWrongTypeOfDataDoesNothing()", "class_method_signature": "GeneListControllerTest.saveWithWrongTypeOfDataDoesNothing()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getData", "save", "verifyZeroInteractions"]}, "focal_class": {"identifier": "GeneListController", "superclass": "", "interfaces": "implements PatientDataController<Gene>", "fields": [{"original_string": "private static final String GENES_STRING = \"genes\";", "modifier": "private static final", "type": "String", "declarator": "GENES_STRING = \"genes\"", "var_name": "GENES_STRING"}, {"original_string": "private static final String CONTROLLER_NAME = GENES_STRING;", "modifier": "private static final", "type": "String", "declarator": "CONTROLLER_NAME = GENES_STRING", "var_name": "CONTROLLER_NAME"}, {"original_string": "private static final String GENES_ENABLING_FIELD_NAME = GENES_STRING;", "modifier": "private static final", "type": "String", "declarator": "GENES_ENABLING_FIELD_NAME = GENES_STRING", "var_name": "GENES_ENABLING_FIELD_NAME"}, {"original_string": "private static final String INTERNAL_GENE_KEY = \"gene\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_GENE_KEY = \"gene\"", "var_name": "INTERNAL_GENE_KEY"}, {"original_string": "private static final String INTERNAL_STATUS_KEY = \"status\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_STATUS_KEY = \"status\"", "var_name": "INTERNAL_STATUS_KEY"}, {"original_string": "private static final String INTERNAL_STRATEGY_KEY = \"strategy\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_STRATEGY_KEY = \"strategy\"", "var_name": "INTERNAL_STRATEGY_KEY"}, {"original_string": "private static final String INTERNAL_COMMENTS_KEY = \"comments\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_COMMENTS_KEY = \"comments\"", "var_name": "INTERNAL_COMMENTS_KEY"}, {"original_string": "private static final String INTERNAL_CANDIDATE_VALUE = \"candidate\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_CANDIDATE_VALUE = \"candidate\"", "var_name": "INTERNAL_CANDIDATE_VALUE"}, {"original_string": "private static final String INTERNAL_REJECTED_VALUE = \"rejected\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_REJECTED_VALUE = \"rejected\"", "var_name": "INTERNAL_REJECTED_VALUE"}, {"original_string": "private static final String INTERNAL_SOLVED_VALUE = \"solved\";", "modifier": "private static final", "type": "String", "declarator": "INTERNAL_SOLVED_VALUE = \"solved\"", "var_name": "INTERNAL_SOLVED_VALUE"}, {"original_string": "private static final String JSON_GENE_ID = \"id\";", "modifier": "private static final", "type": "String", "declarator": "JSON_GENE_ID = \"id\"", "var_name": "JSON_GENE_ID"}, {"original_string": "private static final String JSON_GENE_SYMBOL = INTERNAL_GENE_KEY;", "modifier": "private static final", "type": "String", "declarator": "JSON_GENE_SYMBOL = INTERNAL_GENE_KEY", "var_name": "JSON_GENE_SYMBOL"}, {"original_string": "private static final String JSON_DEPRECATED_GENE_ID = JSON_GENE_SYMBOL;", "modifier": "private static final", "type": "String", "declarator": "JSON_DEPRECATED_GENE_ID = JSON_GENE_SYMBOL", "var_name": "JSON_DEPRECATED_GENE_ID"}, {"original_string": "private static final String JSON_SOLVED_KEY = INTERNAL_SOLVED_VALUE;", "modifier": "private static final", "type": "String", "declarator": "JSON_SOLVED_KEY = INTERNAL_SOLVED_VALUE", "var_name": "JSON_SOLVED_KEY"}, {"original_string": "private static final String JSON_REJECTEDGENES_KEY = \"rejectedGenes\";", "modifier": "private static final", "type": "String", "declarator": "JSON_REJECTEDGENES_KEY = \"rejectedGenes\"", "var_name": "JSON_REJECTEDGENES_KEY"}, {"original_string": "@Inject\n    private Logger logger;", "modifier": "@Inject\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "@Inject\n    private Provider<XWikiContext> xcontextProvider;", "modifier": "@Inject\n    private", "type": "Provider<XWikiContext>", "declarator": "xcontextProvider", "var_name": "xcontextProvider"}], "methods": [{"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "GeneListController.getName()", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(Patient patient)", "modifiers": "@Override public", "return": "PatientData<Gene>", "signature": "PatientData<Gene> load(Patient patient)", "full_signature": "@Override public PatientData<Gene> load(Patient patient)", "class_method_signature": "GeneListController.load(Patient patient)", "testcase": false, "constructor": false}, {"identifier": "getFieldListValue", "parameters": "(BaseObject geneObject, String property)", "modifiers": "private", "return": "Collection<String>", "signature": "Collection<String> getFieldListValue(BaseObject geneObject, String property)", "full_signature": "private Collection<String> getFieldListValue(BaseObject geneObject, String property)", "class_method_signature": "GeneListController.getFieldListValue(BaseObject geneObject, String property)", "testcase": false, "constructor": false}, {"identifier": "getFieldValue", "parameters": "(BaseObject geneObject, String property)", "modifiers": "private", "return": "String", "signature": "String getFieldValue(BaseObject geneObject, String property)", "full_signature": "private String getFieldValue(BaseObject geneObject, String property)", "class_method_signature": "GeneListController.getFieldValue(BaseObject geneObject, String property)", "testcase": false, "constructor": false}, {"identifier": "writeJSON", "parameters": "(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "modifiers": "@Override public", "return": "void", "signature": "void writeJSON(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "full_signature": "@Override public void writeJSON(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "class_method_signature": "GeneListController.writeJSON(Patient patient, JSONObject json, Collection<String> selectedFieldNames)", "testcase": false, "constructor": false}, {"identifier": "readJSON", "parameters": "(JSONObject json)", "modifiers": "@Override public", "return": "PatientData<Gene>", "signature": "PatientData<Gene> readJSON(JSONObject json)", "full_signature": "@Override public PatientData<Gene> readJSON(JSONObject json)", "class_method_signature": "GeneListController.readJSON(JSONObject json)", "testcase": false, "constructor": false}, {"identifier": "parseGenesJson", "parameters": "(JSONObject json, List<Gene> accumulatedGenes)", "modifiers": "private", "return": "void", "signature": "void parseGenesJson(JSONObject json, List<Gene> accumulatedGenes)", "full_signature": "private void parseGenesJson(JSONObject json, List<Gene> accumulatedGenes)", "class_method_signature": "GeneListController.parseGenesJson(JSONObject json, List<Gene> accumulatedGenes)", "testcase": false, "constructor": false}, {"identifier": "parseRejectedGenes", "parameters": "(JSONObject json, List<Gene> accumulatedGenes)", "modifiers": "private", "return": "void", "signature": "void parseRejectedGenes(JSONObject json, List<Gene> accumulatedGenes)", "full_signature": "private void parseRejectedGenes(JSONObject json, List<Gene> accumulatedGenes)", "class_method_signature": "GeneListController.parseRejectedGenes(JSONObject json, List<Gene> accumulatedGenes)", "testcase": false, "constructor": false}, {"identifier": "parseSolvedGene", "parameters": "(JSONObject json, List<Gene> accumulatedGenes)", "modifiers": "private", "return": "void", "signature": "void parseSolvedGene(JSONObject json, List<Gene> accumulatedGenes)", "full_signature": "private void parseSolvedGene(JSONObject json, List<Gene> accumulatedGenes)", "class_method_signature": "GeneListController.parseSolvedGene(JSONObject json, List<Gene> accumulatedGenes)", "testcase": false, "constructor": false}, {"identifier": "addOrReplaceGene", "parameters": "(List<Gene> allGenes, Gene gene)", "modifiers": "private", "return": "void", "signature": "void addOrReplaceGene(List<Gene> allGenes, Gene gene)", "full_signature": "private void addOrReplaceGene(List<Gene> allGenes, Gene gene)", "class_method_signature": "GeneListController.addOrReplaceGene(List<Gene> allGenes, Gene gene)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(Patient patient)", "modifiers": "@Override public", "return": "void", "signature": "void save(Patient patient)", "full_signature": "@Override public void save(Patient patient)", "class_method_signature": "GeneListController.save(Patient patient)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(@Nonnull final Patient patient, @Nonnull final PatientWritePolicy policy)", "modifiers": "@Override public", "return": "void", "signature": "void save(@Nonnull final Patient patient, @Nonnull final PatientWritePolicy policy)", "full_signature": "@Override public void save(@Nonnull final Patient patient, @Nonnull final PatientWritePolicy policy)", "class_method_signature": "GeneListController.save(@Nonnull final Patient patient, @Nonnull final PatientWritePolicy policy)", "testcase": false, "constructor": false}, {"identifier": "saveGenes", "parameters": "(\n        @Nonnull final XWikiDocument docX,\n        @Nonnull final Patient patient,\n        @Nonnull final PatientData<Gene> data,\n        @Nonnull final PatientWritePolicy policy,\n        @Nonnull final XWikiContext context)", "modifiers": "private", "return": "void", "signature": "void saveGenes(\n        @Nonnull final XWikiDocument docX,\n        @Nonnull final Patient patient,\n        @Nonnull final PatientData<Gene> data,\n        @Nonnull final PatientWritePolicy policy,\n        @Nonnull final XWikiContext context)", "full_signature": "private void saveGenes(\n        @Nonnull final XWikiDocument docX,\n        @Nonnull final Patient patient,\n        @Nonnull final PatientData<Gene> data,\n        @Nonnull final PatientWritePolicy policy,\n        @Nonnull final XWikiContext context)", "class_method_signature": "GeneListController.saveGenes(\n        @Nonnull final XWikiDocument docX,\n        @Nonnull final Patient patient,\n        @Nonnull final PatientData<Gene> data,\n        @Nonnull final PatientWritePolicy policy,\n        @Nonnull final XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "saveGene", "parameters": "(\n        @Nonnull final XWikiDocument docX,\n        @Nonnull final Gene gene,\n        @Nonnull final XWikiContext context)", "modifiers": "private", "return": "void", "signature": "void saveGene(\n        @Nonnull final XWikiDocument docX,\n        @Nonnull final Gene gene,\n        @Nonnull final XWikiContext context)", "full_signature": "private void saveGene(\n        @Nonnull final XWikiDocument docX,\n        @Nonnull final Gene gene,\n        @Nonnull final XWikiContext context)", "class_method_signature": "GeneListController.saveGene(\n        @Nonnull final XWikiDocument docX,\n        @Nonnull final Gene gene,\n        @Nonnull final XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "getMergedGenes", "parameters": "(\n        @Nullable final Iterable<Gene> genes,\n        @Nullable final Iterable<Gene> storedGenes)", "modifiers": "private", "return": "Map<String, Gene>", "signature": "Map<String, Gene> getMergedGenes(\n        @Nullable final Iterable<Gene> genes,\n        @Nullable final Iterable<Gene> storedGenes)", "full_signature": "private Map<String, Gene> getMergedGenes(\n        @Nullable final Iterable<Gene> genes,\n        @Nullable final Iterable<Gene> storedGenes)", "class_method_signature": "GeneListController.getMergedGenes(\n        @Nullable final Iterable<Gene> genes,\n        @Nullable final Iterable<Gene> storedGenes)", "testcase": false, "constructor": false}, {"identifier": "setXWikiObjectProperty", "parameters": "(String property, Object value, BaseObject xwikiObject, XWikiContext context)", "modifiers": "private", "return": "void", "signature": "void setXWikiObjectProperty(String property, Object value, BaseObject xwikiObject, XWikiContext context)", "full_signature": "private void setXWikiObjectProperty(String property, Object value, BaseObject xwikiObject, XWikiContext context)", "class_method_signature": "GeneListController.setXWikiObjectProperty(String property, Object value, BaseObject xwikiObject, XWikiContext context)", "testcase": false, "constructor": false}, {"identifier": "writeJSON", "parameters": "(Patient patient, JSONObject json)", "modifiers": "@Override public", "return": "void", "signature": "void writeJSON(Patient patient, JSONObject json)", "full_signature": "@Override public void writeJSON(Patient patient, JSONObject json)", "class_method_signature": "GeneListController.writeJSON(Patient patient, JSONObject json)", "testcase": false, "constructor": false}], "file": "components/patient-data/impl/src/main/java/org/phenotips/data/internal/controller/GeneListController.java"}, "focal_method": {"identifier": "save", "parameters": "(Patient patient)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void save(Patient patient)\n    {\n        save(patient, PatientWritePolicy.UPDATE);\n    }", "signature": "void save(Patient patient)", "full_signature": "@Override public void save(Patient patient)", "class_method_signature": "GeneListController.save(Patient patient)", "testcase": false, "constructor": false, "invocations": ["save"]}, "repository": {"repo_id": 2685841, "url": "https://github.com/phenotips/phenotips", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 87, "size": 1662205, "license": "licensed"}}