{"test_class": {"identifier": "StringUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "aws-java-sdk-core/src/test/java/com/amazonaws/util/StringUtilsTest.java"}, "test_case": {"identifier": "hasValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void hasValue() {\n        Assert.assertTrue(StringUtils.hasValue(\"something\"));\n        Assert.assertFalse(StringUtils.hasValue(null));\n        Assert.assertFalse(StringUtils.hasValue(\"\"));\n    }", "signature": "void hasValue()", "full_signature": "@Test public void hasValue()", "class_method_signature": "StringUtilsTest.hasValue()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "hasValue", "assertFalse", "hasValue", "assertFalse", "hasValue"]}, "focal_class": {"identifier": "StringUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_ENCODING = \"UTF-8\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_ENCODING = \"UTF-8\"", "var_name": "DEFAULT_ENCODING"}, {"original_string": "public static final String COMMA_SEPARATOR = \",\";", "modifier": "public static final", "type": "String", "declarator": "COMMA_SEPARATOR = \",\"", "var_name": "COMMA_SEPARATOR"}, {"original_string": "public static final Charset UTF8 = Charset.forName(DEFAULT_ENCODING);", "modifier": "public static final", "type": "Charset", "declarator": "UTF8 = Charset.forName(DEFAULT_ENCODING)", "var_name": "UTF8"}, {"original_string": "private static final Locale LOCALE_ENGLISH = Locale.ENGLISH;", "modifier": "private static final", "type": "Locale", "declarator": "LOCALE_ENGLISH = Locale.ENGLISH", "var_name": "LOCALE_ENGLISH"}, {"original_string": "private static final char CHAR_SPACE = ' ';", "modifier": "private static final", "type": "char", "declarator": "CHAR_SPACE = ' '", "var_name": "CHAR_SPACE"}, {"original_string": "private static final char CHAR_TAB = '\\t';", "modifier": "private static final", "type": "char", "declarator": "CHAR_TAB = '\\t'", "var_name": "CHAR_TAB"}, {"original_string": "private static final char CHAR_NEW_LINE = '\\n';", "modifier": "private static final", "type": "char", "declarator": "CHAR_NEW_LINE = '\\n'", "var_name": "CHAR_NEW_LINE"}, {"original_string": "private static final char CHAR_VERTICAL_TAB = '\\u000b';", "modifier": "private static final", "type": "char", "declarator": "CHAR_VERTICAL_TAB = '\\u000b'", "var_name": "CHAR_VERTICAL_TAB"}, {"original_string": "private static final char CHAR_CARRIAGE_RETURN = '\\r';", "modifier": "private static final", "type": "char", "declarator": "CHAR_CARRIAGE_RETURN = '\\r'", "var_name": "CHAR_CARRIAGE_RETURN"}, {"original_string": "private static final char CHAR_FORM_FEED = '\\f';", "modifier": "private static final", "type": "char", "declarator": "CHAR_FORM_FEED = '\\f'", "var_name": "CHAR_FORM_FEED"}], "methods": [{"identifier": "toInteger", "parameters": "(StringBuilder value)", "modifiers": "public static", "return": "Integer", "signature": "Integer toInteger(StringBuilder value)", "full_signature": "public static Integer toInteger(StringBuilder value)", "class_method_signature": "StringUtils.toInteger(StringBuilder value)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(StringBuilder value)", "modifiers": "public static", "return": "String", "signature": "String toString(StringBuilder value)", "full_signature": "public static String toString(StringBuilder value)", "class_method_signature": "StringUtils.toString(StringBuilder value)", "testcase": false, "constructor": false}, {"identifier": "toBoolean", "parameters": "(StringBuilder value)", "modifiers": "public static", "return": "Boolean", "signature": "Boolean toBoolean(StringBuilder value)", "full_signature": "public static Boolean toBoolean(StringBuilder value)", "class_method_signature": "StringUtils.toBoolean(StringBuilder value)", "testcase": false, "constructor": false}, {"identifier": "fromInteger", "parameters": "(Integer value)", "modifiers": "public static", "return": "String", "signature": "String fromInteger(Integer value)", "full_signature": "public static String fromInteger(Integer value)", "class_method_signature": "StringUtils.fromInteger(Integer value)", "testcase": false, "constructor": false}, {"identifier": "fromLong", "parameters": "(Long value)", "modifiers": "public static", "return": "String", "signature": "String fromLong(Long value)", "full_signature": "public static String fromLong(Long value)", "class_method_signature": "StringUtils.fromLong(Long value)", "testcase": false, "constructor": false}, {"identifier": "fromShort", "parameters": "(Short value)", "modifiers": "public static", "return": "String", "signature": "String fromShort(Short value)", "full_signature": "public static String fromShort(Short value)", "class_method_signature": "StringUtils.fromShort(Short value)", "testcase": false, "constructor": false}, {"identifier": "fromString", "parameters": "(String value)", "modifiers": "public static", "return": "String", "signature": "String fromString(String value)", "full_signature": "public static String fromString(String value)", "class_method_signature": "StringUtils.fromString(String value)", "testcase": false, "constructor": false}, {"identifier": "fromBoolean", "parameters": "(Boolean value)", "modifiers": "public static", "return": "String", "signature": "String fromBoolean(Boolean value)", "full_signature": "public static String fromBoolean(Boolean value)", "class_method_signature": "StringUtils.fromBoolean(Boolean value)", "testcase": false, "constructor": false}, {"identifier": "fromBigInteger", "parameters": "(BigInteger value)", "modifiers": "public static", "return": "String", "signature": "String fromBigInteger(BigInteger value)", "full_signature": "public static String fromBigInteger(BigInteger value)", "class_method_signature": "StringUtils.fromBigInteger(BigInteger value)", "testcase": false, "constructor": false}, {"identifier": "fromBigDecimal", "parameters": "(BigDecimal value)", "modifiers": "public static", "return": "String", "signature": "String fromBigDecimal(BigDecimal value)", "full_signature": "public static String fromBigDecimal(BigDecimal value)", "class_method_signature": "StringUtils.fromBigDecimal(BigDecimal value)", "testcase": false, "constructor": false}, {"identifier": "toBigInteger", "parameters": "(String s)", "modifiers": "public static", "return": "BigInteger", "signature": "BigInteger toBigInteger(String s)", "full_signature": "public static BigInteger toBigInteger(String s)", "class_method_signature": "StringUtils.toBigInteger(String s)", "testcase": false, "constructor": false}, {"identifier": "toBigDecimal", "parameters": "(String s)", "modifiers": "public static", "return": "BigDecimal", "signature": "BigDecimal toBigDecimal(String s)", "full_signature": "public static BigDecimal toBigDecimal(String s)", "class_method_signature": "StringUtils.toBigDecimal(String s)", "testcase": false, "constructor": false}, {"identifier": "fromFloat", "parameters": "(Float value)", "modifiers": "public static", "return": "String", "signature": "String fromFloat(Float value)", "full_signature": "public static String fromFloat(Float value)", "class_method_signature": "StringUtils.fromFloat(Float value)", "testcase": false, "constructor": false}, {"identifier": "fromDate", "parameters": "(Date value)", "modifiers": "public static", "return": "String", "signature": "String fromDate(Date value)", "full_signature": "public static String fromDate(Date value)", "class_method_signature": "StringUtils.fromDate(Date value)", "testcase": false, "constructor": false}, {"identifier": "fromDate", "parameters": "(Date date, String timestampFormat)", "modifiers": "public static", "return": "String", "signature": "String fromDate(Date date, String timestampFormat)", "full_signature": "public static String fromDate(Date date, String timestampFormat)", "class_method_signature": "StringUtils.fromDate(Date date, String timestampFormat)", "testcase": false, "constructor": false}, {"identifier": "fromDouble", "parameters": "(Double d)", "modifiers": "public static", "return": "String", "signature": "String fromDouble(Double d)", "full_signature": "public static String fromDouble(Double d)", "class_method_signature": "StringUtils.fromDouble(Double d)", "testcase": false, "constructor": false}, {"identifier": "fromByte", "parameters": "(Byte b)", "modifiers": "public static", "return": "String", "signature": "String fromByte(Byte b)", "full_signature": "public static String fromByte(Byte b)", "class_method_signature": "StringUtils.fromByte(Byte b)", "testcase": false, "constructor": false}, {"identifier": "fromByteBuffer", "parameters": "(ByteBuffer byteBuffer)", "modifiers": "public static", "return": "String", "signature": "String fromByteBuffer(ByteBuffer byteBuffer)", "full_signature": "public static String fromByteBuffer(ByteBuffer byteBuffer)", "class_method_signature": "StringUtils.fromByteBuffer(ByteBuffer byteBuffer)", "testcase": false, "constructor": false}, {"identifier": "replace", "parameters": "( String originalString, String partToMatch, String replacement )", "modifiers": "public static", "return": "String", "signature": "String replace( String originalString, String partToMatch, String replacement )", "full_signature": "public static String replace( String originalString, String partToMatch, String replacement )", "class_method_signature": "StringUtils.replace( String originalString, String partToMatch, String replacement )", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(String joiner, String... parts)", "modifiers": "public static", "return": "String", "signature": "String join(String joiner, String... parts)", "full_signature": "public static String join(String joiner, String... parts)", "class_method_signature": "StringUtils.join(String joiner, String... parts)", "testcase": false, "constructor": false}, {"identifier": "trim", "parameters": "(String value)", "modifiers": "public static", "return": "String", "signature": "String trim(String value)", "full_signature": "public static String trim(String value)", "class_method_signature": "StringUtils.trim(String value)", "testcase": false, "constructor": false}, {"identifier": "isNullOrEmpty", "parameters": "(String value)", "modifiers": "public static", "return": "boolean", "signature": "boolean isNullOrEmpty(String value)", "full_signature": "public static boolean isNullOrEmpty(String value)", "class_method_signature": "StringUtils.isNullOrEmpty(String value)", "testcase": false, "constructor": false}, {"identifier": "hasValue", "parameters": "(String str)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasValue(String str)", "full_signature": "public static boolean hasValue(String str)", "class_method_signature": "StringUtils.hasValue(String str)", "testcase": false, "constructor": false}, {"identifier": "lowerCase", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String lowerCase(String str)", "full_signature": "public static String lowerCase(String str)", "class_method_signature": "StringUtils.lowerCase(String str)", "testcase": false, "constructor": false}, {"identifier": "upperCase", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String upperCase(String str)", "full_signature": "public static String upperCase(String str)", "class_method_signature": "StringUtils.upperCase(String str)", "testcase": false, "constructor": false}, {"identifier": "compare", "parameters": "(String str1, String str2)", "modifiers": "public static", "return": "int", "signature": "int compare(String str1, String str2)", "full_signature": "public static int compare(String str1, String str2)", "class_method_signature": "StringUtils.compare(String str1, String str2)", "testcase": false, "constructor": false}, {"identifier": "isWhiteSpace", "parameters": "(final char ch)", "modifiers": "private static", "return": "boolean", "signature": "boolean isWhiteSpace(final char ch)", "full_signature": "private static boolean isWhiteSpace(final char ch)", "class_method_signature": "StringUtils.isWhiteSpace(final char ch)", "testcase": false, "constructor": false}, {"identifier": "appendCompactedString", "parameters": "(final StringBuilder destination, final String source)", "modifiers": "public static", "return": "void", "signature": "void appendCompactedString(final StringBuilder destination, final String source)", "full_signature": "public static void appendCompactedString(final StringBuilder destination, final String source)", "class_method_signature": "StringUtils.appendCompactedString(final StringBuilder destination, final String source)", "testcase": false, "constructor": false}, {"identifier": "beginsWithIgnoreCase", "parameters": "(final String data, final String seq)", "modifiers": "public static", "return": "boolean", "signature": "boolean beginsWithIgnoreCase(final String data, final String seq)", "full_signature": "public static boolean beginsWithIgnoreCase(final String data, final String seq)", "class_method_signature": "StringUtils.beginsWithIgnoreCase(final String data, final String seq)", "testcase": false, "constructor": false}, {"identifier": "findFirstOccurrence", "parameters": "(String s, char ...charsToMatch)", "modifiers": "public static", "return": "Character", "signature": "Character findFirstOccurrence(String s, char ...charsToMatch)", "full_signature": "public static Character findFirstOccurrence(String s, char ...charsToMatch)", "class_method_signature": "StringUtils.findFirstOccurrence(String s, char ...charsToMatch)", "testcase": false, "constructor": false}], "file": "aws-java-sdk-core/src/main/java/com/amazonaws/util/StringUtils.java"}, "focal_method": {"identifier": "hasValue", "parameters": "(String str)", "modifiers": "public static", "return": "boolean", "body": "public static boolean hasValue(String str) {\n        return !isNullOrEmpty(str);\n    }", "signature": "boolean hasValue(String str)", "full_signature": "public static boolean hasValue(String str)", "class_method_signature": "StringUtils.hasValue(String str)", "testcase": false, "constructor": false, "invocations": ["isNullOrEmpty"]}, "repository": {"repo_id": 574877, "url": "https://github.com/aws/aws-sdk-java", "stars": 3141, "created": "3/22/2010 11:34:58 PM +00:00", "updates": "2020-01-25T22:06:42+00:00", "fork": "False", "license": "licensed"}}