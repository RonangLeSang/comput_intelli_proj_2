{"test_class": {"identifier": "VideoToTest", "superclass": "", "interfaces": "", "fields": [], "file": "audiolicious-domain-objects/src/test/java/me/m1key/audiolicious/domain/to/VideoToTest.java"}, "test_case": {"identifier": "testNotEquals9", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testNotEquals9() {\n\t\tDate dateAdded = new Date();\n\t\tDate dateModified = new Date();\n\t\tVideoTo video1 = new VideoTo(\"Invisible\", \"Rainbow in the Dark\", \"Dio\",\n\t\t\t\t\"Dio\", 1983, \"Rock\", dateAdded, dateModified,\n\t\t\t\tnew RatingTo(100), 100, false, 0, 0, false);\n\t\tVideoTo video2 = new VideoTo(\"Invisible\", \"Rainbow in the Dark\", \"Dio\",\n\t\t\t\t\"Dio\", 1983, \"Rock\", dateAdded, dateModified,\n\t\t\t\tnew RatingTo(100), 100, true, 0, 0, false);\n\t\tassertFalse(video1.equals(video2));\n\t}", "signature": "void testNotEquals9()", "full_signature": "@Test public void testNotEquals9()", "class_method_signature": "VideoToTest.testNotEquals9()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "equals"]}, "focal_class": {"identifier": "VideoTo", "superclass": "extends TrackTo", "interfaces": "", "fields": [{"original_string": "private int videoHeight;", "modifier": "private", "type": "int", "declarator": "videoHeight", "var_name": "videoHeight"}, {"original_string": "private int videoWidth;", "modifier": "private", "type": "int", "declarator": "videoWidth", "var_name": "videoWidth"}, {"original_string": "private boolean hd;", "modifier": "private", "type": "boolean", "declarator": "hd", "var_name": "hd"}], "methods": [{"identifier": "VideoTo", "parameters": "(String name, String albumName, String albumArtist,\n\t\t\tString artist, int year, String genre, Date dateAdded,\n\t\t\tDate dateModified, RatingTo rating, int playCount,\n\t\t\tboolean hasVideo, int videoHeight, int videoWidth, boolean hd)", "modifiers": "public", "return": "", "signature": " VideoTo(String name, String albumName, String albumArtist,\n\t\t\tString artist, int year, String genre, Date dateAdded,\n\t\t\tDate dateModified, RatingTo rating, int playCount,\n\t\t\tboolean hasVideo, int videoHeight, int videoWidth, boolean hd)", "full_signature": "public  VideoTo(String name, String albumName, String albumArtist,\n\t\t\tString artist, int year, String genre, Date dateAdded,\n\t\t\tDate dateModified, RatingTo rating, int playCount,\n\t\t\tboolean hasVideo, int videoHeight, int videoWidth, boolean hd)", "class_method_signature": "VideoTo.VideoTo(String name, String albumName, String albumArtist,\n\t\t\tString artist, int year, String genre, Date dateAdded,\n\t\t\tDate dateModified, RatingTo rating, int playCount,\n\t\t\tboolean hasVideo, int videoHeight, int videoWidth, boolean hd)", "testcase": false, "constructor": true}, {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "TrackToType", "signature": "TrackToType getType()", "full_signature": "@Override public TrackToType getType()", "class_method_signature": "VideoTo.getType()", "testcase": false, "constructor": false}, {"identifier": "isPodcast", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isPodcast()", "full_signature": "@Override public boolean isPodcast()", "class_method_signature": "VideoTo.isPodcast()", "testcase": false, "constructor": false}, {"identifier": "getVideoHeight", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getVideoHeight()", "full_signature": "public int getVideoHeight()", "class_method_signature": "VideoTo.getVideoHeight()", "testcase": false, "constructor": false}, {"identifier": "getVideoWidth", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getVideoWidth()", "full_signature": "public int getVideoWidth()", "class_method_signature": "VideoTo.getVideoWidth()", "testcase": false, "constructor": false}, {"identifier": "isHd", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isHd()", "full_signature": "public boolean isHd()", "class_method_signature": "VideoTo.isHd()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "VideoTo.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object other)", "full_signature": "@Override public boolean equals(final Object other)", "class_method_signature": "VideoTo.equals(final Object other)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "VideoTo.toString()", "testcase": false, "constructor": false}], "file": "audiolicious-domain-objects/src/main/java/me/m1key/audiolicious/domain/to/VideoTo.java"}, "focal_method": {"identifier": "equals", "parameters": "(final Object other)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean equals(final Object other) {\n\t\tif (!(other instanceof VideoTo))\n\t\t\treturn false;\n\t\tVideoTo castOther = (VideoTo) other;\n\t\treturn new EqualsBuilder().appendSuper(super.equals(other))\n\t\t\t\t.append(getType(), castOther.getType())\n\t\t\t\t.append(isPodcast(), castOther.isPodcast())\n\t\t\t\t.append(videoHeight, castOther.videoHeight)\n\t\t\t\t.append(videoWidth, castOther.videoWidth)\n\t\t\t\t.append(hd, castOther.hd).isEquals();\n\t}", "signature": "boolean equals(final Object other)", "full_signature": "@Override public boolean equals(final Object other)", "class_method_signature": "VideoTo.equals(final Object other)", "testcase": false, "constructor": false, "invocations": ["isEquals", "append", "append", "append", "append", "append", "appendSuper", "equals", "getType", "getType", "isPodcast", "isPodcast"]}, "repository": {"repo_id": 2080454, "url": "https://github.com/m1key/audiolicious", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 6844, "license": "licensed"}}