{"test_class": {"identifier": "RegexProxyFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "context-logger/proxy/src/test/java/org/piraso/proxy/RegexProxyFactoryTest.java"}, "test_case": {"identifier": "testIllegalListener", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testIllegalListener() throws Exception {\n        RegexProxyFactory<DataSource> factory = new RegexProxyFactory<DataSource>(DataSource.class);\n\n        factory.addMethodListener(\".*\", null);\n    }", "signature": "void testIllegalListener()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testIllegalListener()", "class_method_signature": "RegexProxyFactoryTest.testIllegalListener()", "testcase": true, "constructor": false, "invocations": ["addMethodListener"]}, "focal_class": {"identifier": "RegexProxyFactory", "superclass": "", "interfaces": "implements ProxyAware<T>", "fields": [{"original_string": "private Class<T> clazz;", "modifier": "private", "type": "Class<T>", "declarator": "clazz", "var_name": "clazz"}, {"original_string": "private Map<String, Set<RegexMethodInterceptorListener<T>>> listeners = new HashMap<String, Set<RegexMethodInterceptorListener<T>>>();", "modifier": "private", "type": "Map<String, Set<RegexMethodInterceptorListener<T>>>", "declarator": "listeners = new HashMap<String, Set<RegexMethodInterceptorListener<T>>>()", "var_name": "listeners"}], "methods": [{"identifier": "RegexProxyFactory", "parameters": "(Class<T> clazz)", "modifiers": "public", "return": "", "signature": " RegexProxyFactory(Class<T> clazz)", "full_signature": "public  RegexProxyFactory(Class<T> clazz)", "class_method_signature": "RegexProxyFactory.RegexProxyFactory(Class<T> clazz)", "testcase": false, "constructor": true}, {"identifier": "getProxy", "parameters": "(T object)", "modifiers": "public", "return": "T", "signature": "T getProxy(T object)", "full_signature": "public T getProxy(T object)", "class_method_signature": "RegexProxyFactory.getProxy(T object)", "testcase": false, "constructor": false}, {"identifier": "getProxyInterceptor", "parameters": "(T object)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "ProxyInterceptorAware<T>", "signature": "ProxyInterceptorAware<T> getProxyInterceptor(T object)", "full_signature": "@SuppressWarnings(\"unchecked\") public ProxyInterceptorAware<T> getProxyInterceptor(T object)", "class_method_signature": "RegexProxyFactory.getProxyInterceptor(T object)", "testcase": false, "constructor": false}, {"identifier": "addMethodListener", "parameters": "(String regex, RegexMethodInterceptorListener<T> listener)", "modifiers": "public", "return": "void", "signature": "void addMethodListener(String regex, RegexMethodInterceptorListener<T> listener)", "full_signature": "public void addMethodListener(String regex, RegexMethodInterceptorListener<T> listener)", "class_method_signature": "RegexProxyFactory.addMethodListener(String regex, RegexMethodInterceptorListener<T> listener)", "testcase": false, "constructor": false}], "file": "context-logger/proxy/src/main/java/org/piraso/proxy/RegexProxyFactory.java"}, "focal_method": {"identifier": "addMethodListener", "parameters": "(String regex, RegexMethodInterceptorListener<T> listener)", "modifiers": "public", "return": "void", "body": "public void addMethodListener(String regex, RegexMethodInterceptorListener<T> listener) {\n        if(listener == null) {\n            throw new IllegalArgumentException(\"listener cannot be null.\");\n        }\n\n        Set<RegexMethodInterceptorListener<T>> set = listeners.get(regex);\n        if(set == null) {\n            set = new HashSet<RegexMethodInterceptorListener<T>>();\n            listeners.put(regex, set);\n        }\n        \n        set.add(listener);\n    }", "signature": "void addMethodListener(String regex, RegexMethodInterceptorListener<T> listener)", "full_signature": "public void addMethodListener(String regex, RegexMethodInterceptorListener<T> listener)", "class_method_signature": "RegexProxyFactory.addMethodListener(String regex, RegexMethodInterceptorListener<T> listener)", "testcase": false, "constructor": false, "invocations": ["get", "put", "add"]}, "repository": {"repo_id": 2576181, "url": "https://github.com/piraso/piraso", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 7, "size": 39068, "license": "licensed"}}