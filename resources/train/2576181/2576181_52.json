{"test_class": {"identifier": "ObjectConverterRegistryTest", "superclass": "", "interfaces": "", "fields": [], "file": "context-logger/api/src/test/java/org/piraso/api/converter/ObjectConverterRegistryTest.java"}, "test_case": {"identifier": "testIsSupported", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsSupported() throws Exception {\n        assertTrue(ObjectConverterRegistry.isSupported(\"test\"));\n        assertTrue(ObjectConverterRegistry.isSupported('a'));\n        assertTrue(ObjectConverterRegistry.isSupported(1));\n        assertTrue(ObjectConverterRegistry.isSupported(Byte.valueOf(\"1\")));\n        assertTrue(ObjectConverterRegistry.isSupported(Short.valueOf(\"1\")));\n        assertTrue(ObjectConverterRegistry.isSupported(1.0f));\n        assertTrue(ObjectConverterRegistry.isSupported(1.0));\n        assertTrue(ObjectConverterRegistry.isSupported(Integer.class));\n\n        assertFalse(ObjectConverterRegistry.isSupported(new Object()));\n        assertFalse(ObjectConverterRegistry.isSupported(new SampleBean(\"test\")));\n\n        ObjectConverterRegistry.register(SampleBean.class, new TypeConverter<SampleBean>(SampleBean.class));\n\n        assertTrue(ObjectConverterRegistry.isSupported(new SampleBean(\"test\")));\n    }", "signature": "void testIsSupported()", "full_signature": "@Test public void testIsSupported()", "class_method_signature": "ObjectConverterRegistryTest.testIsSupported()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isSupported", "assertTrue", "isSupported", "assertTrue", "isSupported", "assertTrue", "isSupported", "valueOf", "assertTrue", "isSupported", "valueOf", "assertTrue", "isSupported", "assertTrue", "isSupported", "assertTrue", "isSupported", "assertFalse", "isSupported", "assertFalse", "isSupported", "register", "assertTrue", "isSupported"]}, "focal_class": {"identifier": "ObjectConverterRegistry", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ObjectConverterRegistry REGISTRY = new ObjectConverterRegistry();", "modifier": "private static final", "type": "ObjectConverterRegistry", "declarator": "REGISTRY = new ObjectConverterRegistry()", "var_name": "REGISTRY"}, {"original_string": "private Map<Class, ObjectConverter> converters = Collections.synchronizedMap(new LinkedHashMap<Class, ObjectConverter>());", "modifier": "private", "type": "Map<Class, ObjectConverter>", "declarator": "converters = Collections.synchronizedMap(new LinkedHashMap<Class, ObjectConverter>())", "var_name": "converters"}], "methods": [{"identifier": "register", "parameters": "(Class clazz, ObjectConverter converter)", "modifiers": "public static", "return": "void", "signature": "void register(Class clazz, ObjectConverter converter)", "full_signature": "public static void register(Class clazz, ObjectConverter converter)", "class_method_signature": "ObjectConverterRegistry.register(Class clazz, ObjectConverter converter)", "testcase": false, "constructor": false}, {"identifier": "isSupported", "parameters": "(Object obj)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSupported(Object obj)", "full_signature": "public static boolean isSupported(Object obj)", "class_method_signature": "ObjectConverterRegistry.isSupported(Object obj)", "testcase": false, "constructor": false}, {"identifier": "convertToString", "parameters": "(Object obj)", "modifiers": "public static", "return": "String", "signature": "String convertToString(Object obj)", "full_signature": "public static String convertToString(Object obj)", "class_method_signature": "ObjectConverterRegistry.convertToString(Object obj)", "testcase": false, "constructor": false}, {"identifier": "convertToString", "parameters": "(Object obj, Class forceClass)", "modifiers": "public static", "return": "String", "signature": "String convertToString(Object obj, Class forceClass)", "full_signature": "public static String convertToString(Object obj, Class forceClass)", "class_method_signature": "ObjectConverterRegistry.convertToString(Object obj, Class forceClass)", "testcase": false, "constructor": false}, {"identifier": "convertToObject", "parameters": "(String className, String strValue)", "modifiers": "public static", "return": "Object", "signature": "Object convertToObject(String className, String strValue)", "full_signature": "public static Object convertToObject(String className, String strValue)", "class_method_signature": "ObjectConverterRegistry.convertToObject(String className, String strValue)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Class clazz, ObjectConverter converter)", "modifiers": "private", "return": "void", "signature": "void add(Class clazz, ObjectConverter converter)", "full_signature": "private void add(Class clazz, ObjectConverter converter)", "class_method_signature": "ObjectConverterRegistry.add(Class clazz, ObjectConverter converter)", "testcase": false, "constructor": false}, {"identifier": "isClassSupported", "parameters": "(Object obj)", "modifiers": "private", "return": "boolean", "signature": "boolean isClassSupported(Object obj)", "full_signature": "private boolean isClassSupported(Object obj)", "class_method_signature": "ObjectConverterRegistry.isClassSupported(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(Object obj, Class forceClass)", "modifiers": "private", "return": "String", "signature": "String toString(Object obj, Class forceClass)", "full_signature": "private String toString(Object obj, Class forceClass)", "class_method_signature": "ObjectConverterRegistry.toString(Object obj, Class forceClass)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(Object obj)", "modifiers": "private", "return": "String", "signature": "String toString(Object obj)", "full_signature": "private String toString(Object obj)", "class_method_signature": "ObjectConverterRegistry.toString(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toObject", "parameters": "(String className, String strValue)", "modifiers": "private", "return": "Object", "signature": "Object toObject(String className, String strValue)", "full_signature": "private Object toObject(String className, String strValue)", "class_method_signature": "ObjectConverterRegistry.toObject(String className, String strValue)", "testcase": false, "constructor": false}], "file": "context-logger/api/src/main/java/org/piraso/api/converter/ObjectConverterRegistry.java"}, "focal_method": {"identifier": "isSupported", "parameters": "(Object obj)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isSupported(Object obj) {\n        return REGISTRY.isClassSupported(obj);\n    }", "signature": "boolean isSupported(Object obj)", "full_signature": "public static boolean isSupported(Object obj)", "class_method_signature": "ObjectConverterRegistry.isSupported(Object obj)", "testcase": false, "constructor": false, "invocations": ["isClassSupported"]}, "repository": {"repo_id": 2576181, "url": "https://github.com/piraso/piraso", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 7, "size": 39068, "license": "licensed"}}