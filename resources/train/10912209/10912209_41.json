{"test_class": {"identifier": "HasCookieMatcherTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String cookieName = \"Cookie\";", "modifier": "private static final", "type": "String", "declarator": "cookieName = \"Cookie\"", "var_name": "cookieName"}], "file": "webdriver-matchers/src/test/java/ru/yandex/qatools/matchers/webdriver/driver/HasCookieMatcherTest.java"}, "test_case": {"identifier": "shouldFindExistingCookie", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldFindExistingCookie() {\n        WebDriver driver = mock(WebDriver.class);\n        Options options = mock(Options.class);\n        Cookie cookie = new Cookie(cookieName, \"oki-doki\");\n\n\n        when(driver.manage()).thenReturn(options);\n        when(options.getCookieNamed(eq(cookieName))).thenReturn(cookie);\n\n        assertThat(\"Cookie not found!\", driver, hasCookie(cookieName));\n    }", "signature": "void shouldFindExistingCookie()", "full_signature": "@Test public void shouldFindExistingCookie()", "class_method_signature": "HasCookieMatcherTest.shouldFindExistingCookie()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "manage", "thenReturn", "when", "getCookieNamed", "eq", "assertThat", "hasCookie"]}, "focal_class": {"identifier": "HasCookieMatcher", "superclass": "extends TypeSafeMatcher<WebDriver>", "interfaces": "", "fields": [{"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}], "methods": [{"identifier": "HasCookieMatcher", "parameters": "(String name)", "modifiers": "protected", "return": "", "signature": " HasCookieMatcher(String name)", "full_signature": "protected  HasCookieMatcher(String name)", "class_method_signature": "HasCookieMatcher.HasCookieMatcher(String name)", "testcase": false, "constructor": true}, {"identifier": "matchesSafely", "parameters": "(WebDriver wDriver)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean matchesSafely(WebDriver wDriver)", "full_signature": "@Override protected boolean matchesSafely(WebDriver wDriver)", "class_method_signature": "HasCookieMatcher.matchesSafely(WebDriver wDriver)", "testcase": false, "constructor": false}, {"identifier": "describeTo", "parameters": "(Description description)", "modifiers": "@Override public", "return": "void", "signature": "void describeTo(Description description)", "full_signature": "@Override public void describeTo(Description description)", "class_method_signature": "HasCookieMatcher.describeTo(Description description)", "testcase": false, "constructor": false}, {"identifier": "describeMismatchSafely", "parameters": "(WebDriver item, Description mismatchDescription)", "modifiers": "@Override protected", "return": "void", "signature": "void describeMismatchSafely(WebDriver item, Description mismatchDescription)", "full_signature": "@Override protected void describeMismatchSafely(WebDriver item, Description mismatchDescription)", "class_method_signature": "HasCookieMatcher.describeMismatchSafely(WebDriver item, Description mismatchDescription)", "testcase": false, "constructor": false}, {"identifier": "hasCookie", "parameters": "(String name)", "modifiers": "@Factory public static", "return": "Matcher<WebDriver>", "signature": "Matcher<WebDriver> hasCookie(String name)", "full_signature": "@Factory public static Matcher<WebDriver> hasCookie(String name)", "class_method_signature": "HasCookieMatcher.hasCookie(String name)", "testcase": false, "constructor": false}], "file": "webdriver-matchers/src/main/java/ru/yandex/qatools/matchers/webdriver/driver/HasCookieMatcher.java"}, "focal_method": {"identifier": "hasCookie", "parameters": "(String name)", "modifiers": "@Factory public static", "return": "Matcher<WebDriver>", "body": "@Factory\n    public static Matcher<WebDriver> hasCookie(String name) {\n        return new HasCookieMatcher(name);\n    }", "signature": "Matcher<WebDriver> hasCookie(String name)", "full_signature": "@Factory public static Matcher<WebDriver> hasCookie(String name)", "class_method_signature": "HasCookieMatcher.hasCookie(String name)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 10912209, "url": "https://github.com/yandex-qatools/matchers-java", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 53, "size": 110, "license": "licensed"}}