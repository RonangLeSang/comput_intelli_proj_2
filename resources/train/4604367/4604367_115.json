{"test_class": {"identifier": "ObjectBooleanNodeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PageTrx pageTrx;", "modifier": "private", "type": "PageTrx", "declarator": "pageTrx", "var_name": "pageTrx"}, {"original_string": "private Database<JsonResourceManager> database;", "modifier": "private", "type": "Database<JsonResourceManager>", "declarator": "database", "var_name": "database"}], "file": "bundles/sirix-core/src/test/java/org/sirix/node/json/ObjectBooleanNodeTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void test() throws IOException {\n    // Create empty node.\n    final boolean boolValue = true;\n    final NodeDelegate del = new NodeDelegate(13, 14, Hashing.sha256(), null, 0, SirixDeweyID.newRootID());\n    final StructNodeDelegate strucDel = new StructNodeDelegate(del,\n                                                               Fixed.NULL_NODE_KEY.getStandardProperty(),\n                                                               Fixed.NULL_NODE_KEY.getStandardProperty(),\n                                                               Fixed.NULL_NODE_KEY.getStandardProperty(),\n                                                               0L, 0L);\n    final ObjectBooleanNode node = new ObjectBooleanNode(boolValue, strucDel);\n    node.setHash(node.computeHash());\n    check(node);\n\n    // Serialize and deserialize node.\n    final ByteArrayOutputStream out = new ByteArrayOutputStream();\n    node.getKind().serialize(new DataOutputStream(out), node, pageTrx);\n    final ByteArrayInputStream in = new ByteArrayInputStream(out.toByteArray());\n    final ObjectBooleanNode node2 =\n        (ObjectBooleanNode) NodeKind.OBJECT_BOOLEAN_VALUE.deserialize(new DataInputStream(in),\n                                                                      node.getNodeKey(),\n                                                                      null,\n                                                                      pageTrx);\n    check(node2);\n  }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "ObjectBooleanNodeTest.test()", "testcase": true, "constructor": false, "invocations": ["sha256", "newRootID", "getStandardProperty", "getStandardProperty", "getStandardProperty", "setHash", "computeHash", "check", "serialize", "getKind", "toByteArray", "deserialize", "getNodeKey", "check"]}, "focal_class": {"identifier": "ObjectBooleanNode", "superclass": "extends AbstractBooleanNode", "interfaces": "", "fields": [], "methods": [{"identifier": "ObjectBooleanNode", "parameters": "(final boolean boolValue, final StructNodeDelegate structNodeDelegate)", "modifiers": "public", "return": "", "signature": " ObjectBooleanNode(final boolean boolValue, final StructNodeDelegate structNodeDelegate)", "full_signature": "public  ObjectBooleanNode(final boolean boolValue, final StructNodeDelegate structNodeDelegate)", "class_method_signature": "ObjectBooleanNode.ObjectBooleanNode(final boolean boolValue, final StructNodeDelegate structNodeDelegate)", "testcase": false, "constructor": true}, {"identifier": "getKind", "parameters": "()", "modifiers": "@Override public", "return": "NodeKind", "signature": "NodeKind getKind()", "full_signature": "@Override public NodeKind getKind()", "class_method_signature": "ObjectBooleanNode.getKind()", "testcase": false, "constructor": false}, {"identifier": "acceptVisitor", "parameters": "(final JsonNodeVisitor visitor)", "modifiers": "@Override public", "return": "VisitResult", "signature": "VisitResult acceptVisitor(final JsonNodeVisitor visitor)", "full_signature": "@Override public VisitResult acceptVisitor(final JsonNodeVisitor visitor)", "class_method_signature": "ObjectBooleanNode.acceptVisitor(final JsonNodeVisitor visitor)", "testcase": false, "constructor": false}], "file": "bundles/sirix-core/src/main/java/org/sirix/node/json/ObjectBooleanNode.java"}, "focal_method": {"identifier": "getKind", "parameters": "()", "modifiers": "@Override public", "return": "NodeKind", "body": "@Override\n  public NodeKind getKind() {\n    return NodeKind.OBJECT_BOOLEAN_VALUE;\n  }", "signature": "NodeKind getKind()", "full_signature": "@Override public NodeKind getKind()", "class_method_signature": "ObjectBooleanNode.getKind()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4604367, "url": "https://github.com/sirixdb/sirix", "stars": 510, "created": "6/9/2012 2:22:14 AM +00:00", "updates": "2020-01-27T20:14:11+00:00", "fork": "False", "license": "licensed"}}