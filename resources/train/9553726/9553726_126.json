{"test_class": {"identifier": "DividendPayoutRatioTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Money DIVIDENDS = Money.of(120, \"GBP\");", "modifier": "private static final", "type": "Money", "declarator": "DIVIDENDS = Money.of(120, \"GBP\")", "var_name": "DIVIDENDS"}, {"original_string": "private static final Money NET_INCOME = Money.of(150, \"GBP\");", "modifier": "private static final", "type": "Money", "declarator": "NET_INCOME = Money.of(150, \"GBP\")", "var_name": "NET_INCOME"}], "file": "calc/src/test/java/org/javamoney/calc/securities/DividendPayoutRatioTest.java"}, "test_case": {"identifier": "testCalculate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCalculate() {\n        assertEquals(BigDecimal.valueOf(0.8), DividendPayoutRatio.calculate(DIVIDENDS, NET_INCOME));\n    }", "signature": "void testCalculate()", "full_signature": "@Test public void testCalculate()", "class_method_signature": "DividendPayoutRatioTest.testCalculate()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "valueOf", "calculate"]}, "focal_class": {"identifier": "DividendPayoutRatio", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "DividendPayoutRatio", "parameters": "()", "modifiers": "private", "return": "", "signature": " DividendPayoutRatio()", "full_signature": "private  DividendPayoutRatio()", "class_method_signature": "DividendPayoutRatio.DividendPayoutRatio()", "testcase": false, "constructor": true}, {"identifier": "calculate", "parameters": "(MonetaryAmount dividends, MonetaryAmount netIncome)", "modifiers": "public static", "return": "BigDecimal", "signature": "BigDecimal calculate(MonetaryAmount dividends, MonetaryAmount netIncome)", "full_signature": "public static BigDecimal calculate(MonetaryAmount dividends, MonetaryAmount netIncome)", "class_method_signature": "DividendPayoutRatio.calculate(MonetaryAmount dividends, MonetaryAmount netIncome)", "testcase": false, "constructor": false}], "file": "calc/src/main/java/org/javamoney/calc/securities/DividendPayoutRatio.java"}, "focal_method": {"identifier": "calculate", "parameters": "(MonetaryAmount dividends, MonetaryAmount netIncome)", "modifiers": "public static", "return": "BigDecimal", "body": "public static BigDecimal calculate(MonetaryAmount dividends, MonetaryAmount netIncome) {\n        BigDecimal dividendsValue = BigDecimal.valueOf(dividends.getNumber().doubleValueExact());\n        BigDecimal netIncomeValue = BigDecimal.valueOf(netIncome.getNumber().doubleValueExact());\n\n        return dividendsValue.divide(netIncomeValue, MathContext.DECIMAL64);\n    }", "signature": "BigDecimal calculate(MonetaryAmount dividends, MonetaryAmount netIncome)", "full_signature": "public static BigDecimal calculate(MonetaryAmount dividends, MonetaryAmount netIncome)", "class_method_signature": "DividendPayoutRatio.calculate(MonetaryAmount dividends, MonetaryAmount netIncome)", "testcase": false, "constructor": false, "invocations": ["valueOf", "doubleValueExact", "getNumber", "valueOf", "doubleValueExact", "getNumber", "divide"]}, "repository": {"repo_id": 9553726, "url": "https://github.com/JavaMoney/javamoney-lib", "language": "Java", "is_fork": false, "fork_count": 72, "stargazer_count": 93, "size": 2478, "license": "licensed"}}