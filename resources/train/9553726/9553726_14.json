{"test_class": {"identifier": "ContinuousCompoundInterestTest", "superclass": "", "interfaces": "", "fields": [], "file": "calc/src/test/java/org/javamoney/calc/common/ContinuousCompoundInterestTest.java"}, "test_case": {"identifier": "calculate_zeroPeriods", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void calculate_zeroPeriods() throws Exception {\n        ContinuousCompoundInterest ci = ContinuousCompoundInterest.of(\n                RateAndPeriods.of(0.05,0)\n        );\n        assertEquals(Money.of(10.03,\"CHF\").with(ci), Money.of(0,\"CHF\"));\n        assertEquals(Money.of(0,\"CHF\").with(ci), Money.of(0,\"CHF\"));\n        assertEquals(Money.of(-20.45,\"CHF\").with(ci), Money.of(0,\"CHF\"));\n    }", "signature": "void calculate_zeroPeriods()", "full_signature": "@Test public void calculate_zeroPeriods()", "class_method_signature": "ContinuousCompoundInterestTest.calculate_zeroPeriods()", "testcase": true, "constructor": false, "invocations": ["of", "of", "assertEquals", "with", "of", "of", "assertEquals", "with", "of", "of", "assertEquals", "with", "of", "of"]}, "focal_class": {"identifier": "ContinuousCompoundInterest", "superclass": "extends AbstractRateAndPeriodBasedOperator", "interfaces": "", "fields": [], "methods": [{"identifier": "ContinuousCompoundInterest", "parameters": "(RateAndPeriods rateAndPeriods)", "modifiers": "private", "return": "", "signature": " ContinuousCompoundInterest(RateAndPeriods rateAndPeriods)", "full_signature": "private  ContinuousCompoundInterest(RateAndPeriods rateAndPeriods)", "class_method_signature": "ContinuousCompoundInterest.ContinuousCompoundInterest(RateAndPeriods rateAndPeriods)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(RateAndPeriods rateAndPeriods)", "modifiers": "public static", "return": "ContinuousCompoundInterest", "signature": "ContinuousCompoundInterest of(RateAndPeriods rateAndPeriods)", "full_signature": "public static ContinuousCompoundInterest of(RateAndPeriods rateAndPeriods)", "class_method_signature": "ContinuousCompoundInterest.of(RateAndPeriods rateAndPeriods)", "testcase": false, "constructor": false}, {"identifier": "calculate", "parameters": "(MonetaryAmount amount, RateAndPeriods rateAndPeriods)", "modifiers": "public static", "return": "MonetaryAmount", "signature": "MonetaryAmount calculate(MonetaryAmount amount, RateAndPeriods rateAndPeriods)", "full_signature": "public static MonetaryAmount calculate(MonetaryAmount amount, RateAndPeriods rateAndPeriods)", "class_method_signature": "ContinuousCompoundInterest.calculate(MonetaryAmount amount, RateAndPeriods rateAndPeriods)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(MonetaryAmount amount)", "modifiers": "@Override public", "return": "MonetaryAmount", "signature": "MonetaryAmount apply(MonetaryAmount amount)", "full_signature": "@Override public MonetaryAmount apply(MonetaryAmount amount)", "class_method_signature": "ContinuousCompoundInterest.apply(MonetaryAmount amount)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ContinuousCompoundInterest.toString()", "testcase": false, "constructor": false}], "file": "calc/src/main/java/org/javamoney/calc/common/ContinuousCompoundInterest.java"}, "focal_method": {"identifier": "of", "parameters": "(RateAndPeriods rateAndPeriods)", "modifiers": "public static", "return": "ContinuousCompoundInterest", "body": "public static ContinuousCompoundInterest of(RateAndPeriods rateAndPeriods) {\n        return new ContinuousCompoundInterest(rateAndPeriods);\n    }", "signature": "ContinuousCompoundInterest of(RateAndPeriods rateAndPeriods)", "full_signature": "public static ContinuousCompoundInterest of(RateAndPeriods rateAndPeriods)", "class_method_signature": "ContinuousCompoundInterest.of(RateAndPeriods rateAndPeriods)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9553726, "url": "https://github.com/JavaMoney/javamoney-lib", "language": "Java", "is_fork": false, "fork_count": 72, "stargazer_count": 93, "size": 2478, "license": "licensed"}}