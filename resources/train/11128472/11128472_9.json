{"test_class": {"identifier": "TurnoverAggregationTest", "superclass": "", "interfaces": "", "fields": [], "file": "estatioapp/app/src/test/java/org/estatio/module/turnoveraggregate/dom/TurnoverAggregationTest.java"}, "test_case": {"identifier": "calculationPeriod_works", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void calculationPeriod_works() {\n\n        // given\n        TurnoverAggregation aggregation = new TurnoverAggregation();\n        final LocalDate aggregationDate = new LocalDate(2020, 1, 1);\n        aggregation.setDate(aggregationDate);\n        // when, then\n        Assertions.assertThat(aggregation.calculationPeriod().toString()).isEqualTo(\"2018-02-01/2020-01-02\");\n        Assertions.assertThat(aggregation.calculationPeriod().endDate()).isEqualTo(aggregationDate);\n    }", "signature": "void calculationPeriod_works()", "full_signature": "@Test public void calculationPeriod_works()", "class_method_signature": "TurnoverAggregationTest.calculationPeriod_works()", "testcase": true, "constructor": false, "invocations": ["setDate", "isEqualTo", "assertThat", "toString", "calculationPeriod", "isEqualTo", "assertThat", "endDate", "calculationPeriod"]}, "focal_class": {"identifier": "TurnoverAggregation", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Getter @Setter\n    @Column(name = \"turnoverReportingConfigId\", allowsNull = \"false\")\n    private TurnoverReportingConfig turnoverReportingConfig;", "modifier": "@Getter @Setter\n    @Column(name = \"turnoverReportingConfigId\", allowsNull = \"false\")\n    private", "type": "TurnoverReportingConfig", "declarator": "turnoverReportingConfig", "var_name": "turnoverReportingConfig"}, {"original_string": "@Getter @Setter\n    @Column(allowsNull = \"false\")\n    private LocalDate date;", "modifier": "@Getter @Setter\n    @Column(allowsNull = \"false\")\n    private", "type": "LocalDate", "declarator": "date", "var_name": "date"}, {"original_string": "@Getter @Setter\n    @Column(name = \"currencyId\", allowsNull = \"false\")\n    private Currency currency;", "modifier": "@Getter @Setter\n    @Column(name = \"currencyId\", allowsNull = \"false\")\n    private", "type": "Currency", "declarator": "currency", "var_name": "currency"}, {"original_string": "@Getter @Setter\n    @Column(name = \"turnoverAggregate1MonthId\", allowsNull = \"false\")\n    private TurnoverAggregateForPeriod aggregate1Month;", "modifier": "@Getter @Setter\n    @Column(name = \"turnoverAggregate1MonthId\", allowsNull = \"false\")\n    private", "type": "TurnoverAggregateForPeriod", "declarator": "aggregate1Month", "var_name": "aggregate1Month"}, {"original_string": "@Getter @Setter\n    @Column(name = \"turnoverAggregate2MonthId\", allowsNull = \"false\")\n    private TurnoverAggregateForPeriod aggregate2Month;", "modifier": "@Getter @Setter\n    @Column(name = \"turnoverAggregate2MonthId\", allowsNull = \"false\")\n    private", "type": "TurnoverAggregateForPeriod", "declarator": "aggregate2Month", "var_name": "aggregate2Month"}, {"original_string": "@Getter @Setter\n    @Column(name = \"turnoverAggregate3MonthId\", allowsNull = \"false\")\n    private TurnoverAggregateForPeriod aggregate3Month;", "modifier": "@Getter @Setter\n    @Column(name = \"turnoverAggregate3MonthId\", allowsNull = \"false\")\n    private", "type": "TurnoverAggregateForPeriod", "declarator": "aggregate3Month", "var_name": "aggregate3Month"}, {"original_string": "@Getter @Setter\n    @Column(name = \"turnoverAggregate6MonthId\", allowsNull = \"false\")\n    private TurnoverAggregateForPeriod aggregate6Month;", "modifier": "@Getter @Setter\n    @Column(name = \"turnoverAggregate6MonthId\", allowsNull = \"false\")\n    private", "type": "TurnoverAggregateForPeriod", "declarator": "aggregate6Month", "var_name": "aggregate6Month"}, {"original_string": "@Getter @Setter\n    @Column(name = \"turnoverAggregate9MonthId\", allowsNull = \"false\")\n    private TurnoverAggregateForPeriod aggregate9Month;", "modifier": "@Getter @Setter\n    @Column(name = \"turnoverAggregate9MonthId\", allowsNull = \"false\")\n    private", "type": "TurnoverAggregateForPeriod", "declarator": "aggregate9Month", "var_name": "aggregate9Month"}, {"original_string": "@Getter @Setter\n    @Column(name = \"turnoverAggregate12MonthId\", allowsNull = \"false\")\n    private TurnoverAggregateForPeriod aggregate12Month;", "modifier": "@Getter @Setter\n    @Column(name = \"turnoverAggregate12MonthId\", allowsNull = \"false\")\n    private", "type": "TurnoverAggregateForPeriod", "declarator": "aggregate12Month", "var_name": "aggregate12Month"}, {"original_string": "@Getter @Setter\n    @Column(name = \"turnoverAggregate12MonthCovidId\", allowsNull = \"true\")\n    private TurnoverAggregateForPeriod aggregate12MonthCovid;", "modifier": "@Getter @Setter\n    @Column(name = \"turnoverAggregate12MonthCovidId\", allowsNull = \"true\")\n    private", "type": "TurnoverAggregateForPeriod", "declarator": "aggregate12MonthCovid", "var_name": "aggregate12MonthCovid"}, {"original_string": "@Getter @Setter\n    @Column(name = \"turnoverAggregateToDateId\", allowsNull = \"false\")\n    @PropertyLayout(named = \"yearToDate\")\n    private TurnoverAggregateToDate aggregateToDate;", "modifier": "@Getter @Setter\n    @Column(name = \"turnoverAggregateToDateId\", allowsNull = \"false\")\n    @PropertyLayout(named = \"yearToDate\")\n    private", "type": "TurnoverAggregateToDate", "declarator": "aggregateToDate", "var_name": "aggregateToDate"}, {"original_string": "@Getter @Setter\n    @Column(allowsNull = \"true\", scale = MoneyType.Meta.SCALE)\n    @PropertyLayout(hidden = Where.EVERYWHERE)\n    private BigDecimal grossAmount1MCY_1;", "modifier": "@Getter @Setter\n    @Column(allowsNull = \"true\", scale = MoneyType.Meta.SCALE)\n    @PropertyLayout(hidden = Where.EVERYWHERE)\n    private", "type": "BigDecimal", "declarator": "grossAmount1MCY_1", "var_name": "grossAmount1MCY_1"}, {"original_string": "@Getter @Setter\n    @PropertyLayout(hidden = Where.EVERYWHERE)\n    @Column(allowsNull = \"true\", scale = MoneyType.Meta.SCALE)\n    private BigDecimal netAmount1MCY_1;", "modifier": "@Getter @Setter\n    @PropertyLayout(hidden = Where.EVERYWHERE)\n    @Column(allowsNull = \"true\", scale = MoneyType.Meta.SCALE)\n    private", "type": "BigDecimal", "declarator": "netAmount1MCY_1", "var_name": "netAmount1MCY_1"}, {"original_string": "@Getter @Setter\n    @PropertyLayout(hidden = Where.EVERYWHERE)\n    @Column(allowsNull = \"true\", scale = MoneyType.Meta.SCALE)\n    private BigDecimal grossAmount1MCY_2;", "modifier": "@Getter @Setter\n    @PropertyLayout(hidden = Where.EVERYWHERE)\n    @Column(allowsNull = \"true\", scale = MoneyType.Meta.SCALE)\n    private", "type": "BigDecimal", "declarator": "grossAmount1MCY_2", "var_name": "grossAmount1MCY_2"}, {"original_string": "@Getter @Setter\n    @PropertyLayout(hidden = Where.EVERYWHERE)\n    @Column(allowsNull = \"true\", scale = MoneyType.Meta.SCALE)\n    private BigDecimal netAmount1MCY_2;", "modifier": "@Getter @Setter\n    @PropertyLayout(hidden = Where.EVERYWHERE)\n    @Column(allowsNull = \"true\", scale = MoneyType.Meta.SCALE)\n    private", "type": "BigDecimal", "declarator": "netAmount1MCY_2", "var_name": "netAmount1MCY_2"}, {"original_string": "@Getter @Setter\n    @Column(allowsNull = \"true\", length = 1024)\n    private String comments12MCY;", "modifier": "@Getter @Setter\n    @Column(allowsNull = \"true\", length = 1024)\n    private", "type": "String", "declarator": "comments12MCY", "var_name": "comments12MCY"}, {"original_string": "@Getter @Setter\n    @Column(allowsNull = \"true\", length = 1024)\n    private String comments12MPY;", "modifier": "@Getter @Setter\n    @Column(allowsNull = \"true\", length = 1024)\n    private", "type": "String", "declarator": "comments12MPY", "var_name": "comments12MPY"}, {"original_string": "@Getter @Setter\n    @Column(name = \"purchaseCountAggregate1MonthId\", allowsNull = \"false\")\n    private PurchaseCountAggregateForPeriod purchaseCountAggregate1Month;", "modifier": "@Getter @Setter\n    @Column(name = \"purchaseCountAggregate1MonthId\", allowsNull = \"false\")\n    private", "type": "PurchaseCountAggregateForPeriod", "declarator": "purchaseCountAggregate1Month", "var_name": "purchaseCountAggregate1Month"}, {"original_string": "@Getter @Setter\n    @Column(name = \"purchaseCountAggregate3MonthId\", allowsNull = \"false\")\n    private PurchaseCountAggregateForPeriod purchaseCountAggregate3Month;", "modifier": "@Getter @Setter\n    @Column(name = \"purchaseCountAggregate3MonthId\", allowsNull = \"false\")\n    private", "type": "PurchaseCountAggregateForPeriod", "declarator": "purchaseCountAggregate3Month", "var_name": "purchaseCountAggregate3Month"}, {"original_string": "@Getter @Setter\n    @Column(name = \"purchaseCountAggregate6MonthId\", allowsNull = \"false\")\n    private PurchaseCountAggregateForPeriod purchaseCountAggregate6Month;", "modifier": "@Getter @Setter\n    @Column(name = \"purchaseCountAggregate6MonthId\", allowsNull = \"false\")\n    private", "type": "PurchaseCountAggregateForPeriod", "declarator": "purchaseCountAggregate6Month", "var_name": "purchaseCountAggregate6Month"}, {"original_string": "@Getter @Setter\n    @Column(name = \"purchaseCountAggregate12MonthId\", allowsNull = \"false\")\n    private PurchaseCountAggregateForPeriod purchaseCountAggregate12Month;", "modifier": "@Getter @Setter\n    @Column(name = \"purchaseCountAggregate12MonthId\", allowsNull = \"false\")\n    private", "type": "PurchaseCountAggregateForPeriod", "declarator": "purchaseCountAggregate12Month", "var_name": "purchaseCountAggregate12Month"}, {"original_string": "@Getter @Setter\n    @Column(allowsNull = \"true\")\n    private LocalDateTime calculatedOn;", "modifier": "@Getter @Setter\n    @Column(allowsNull = \"true\")\n    private", "type": "LocalDateTime", "declarator": "calculatedOn", "var_name": "calculatedOn"}, {"original_string": "@Persistent(table=\"AggregationsTurnovers\")\n    @Join(column=\"aggregationId\")\n    @Element(column=\"turnoverId\")\n    @Getter\n    @Setter\n    public Set<Turnover> turnovers = new HashSet<>();", "modifier": "@Persistent(table=\"AggregationsTurnovers\")\n    @Join(column=\"aggregationId\")\n    @Element(column=\"turnoverId\")\n    @Getter\n    @Setter\n    public", "type": "Set<Turnover>", "declarator": "turnovers = new HashSet<>()", "var_name": "turnovers"}, {"original_string": "@Inject RepositoryService repositoryService;", "modifier": "@Inject", "type": "RepositoryService", "declarator": "repositoryService", "var_name": "repositoryService"}], "methods": [{"identifier": "title", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String title()", "full_signature": "public String title()", "class_method_signature": "TurnoverAggregation.title()", "testcase": false, "constructor": false}, {"identifier": "TurnoverAggregation", "parameters": "()", "modifiers": "public", "return": "", "signature": " TurnoverAggregation()", "full_signature": "public  TurnoverAggregation()", "class_method_signature": "TurnoverAggregation.TurnoverAggregation()", "testcase": false, "constructor": true}, {"identifier": "TurnoverAggregation", "parameters": "(final TurnoverReportingConfig turnoverReportingConfig, final LocalDate date, final Currency currency)", "modifiers": "public", "return": "", "signature": " TurnoverAggregation(final TurnoverReportingConfig turnoverReportingConfig, final LocalDate date, final Currency currency)", "full_signature": "public  TurnoverAggregation(final TurnoverReportingConfig turnoverReportingConfig, final LocalDate date, final Currency currency)", "class_method_signature": "TurnoverAggregation.TurnoverAggregation(final TurnoverReportingConfig turnoverReportingConfig, final LocalDate date, final Currency currency)", "testcase": false, "constructor": true}, {"identifier": "remove", "parameters": "()", "modifiers": "@Programmatic public", "return": "void", "signature": "void remove()", "full_signature": "@Programmatic public void remove()", "class_method_signature": "TurnoverAggregation.remove()", "testcase": false, "constructor": false}, {"identifier": "calculationPeriod", "parameters": "()", "modifiers": "@Programmatic public", "return": "LocalDateInterval", "signature": "LocalDateInterval calculationPeriod()", "full_signature": "@Programmatic public LocalDateInterval calculationPeriod()", "class_method_signature": "TurnoverAggregation.calculationPeriod()", "testcase": false, "constructor": false}, {"identifier": "aggregatesForPeriod", "parameters": "()", "modifiers": "@Programmatic public", "return": "List<TurnoverAggregateForPeriod>", "signature": "List<TurnoverAggregateForPeriod> aggregatesForPeriod()", "full_signature": "@Programmatic public List<TurnoverAggregateForPeriod> aggregatesForPeriod()", "class_method_signature": "TurnoverAggregation.aggregatesForPeriod()", "testcase": false, "constructor": false}, {"identifier": "purchaseCountAggregatesForPeriod", "parameters": "()", "modifiers": "@Programmatic public", "return": "List<PurchaseCountAggregateForPeriod>", "signature": "List<PurchaseCountAggregateForPeriod> purchaseCountAggregatesForPeriod()", "full_signature": "@Programmatic public List<PurchaseCountAggregateForPeriod> purchaseCountAggregatesForPeriod()", "class_method_signature": "TurnoverAggregation.purchaseCountAggregatesForPeriod()", "testcase": false, "constructor": false}], "file": "estatioapp/app/src/main/java/org/estatio/module/turnoveraggregate/dom/TurnoverAggregation.java"}, "focal_method": {"identifier": "calculationPeriod", "parameters": "()", "modifiers": "@Programmatic public", "return": "LocalDateInterval", "body": "@Programmatic\n    public LocalDateInterval calculationPeriod(){\n        return LocalDateInterval.including(getDate().minusMonths(23), getDate());\n    }", "signature": "LocalDateInterval calculationPeriod()", "full_signature": "@Programmatic public LocalDateInterval calculationPeriod()", "class_method_signature": "TurnoverAggregation.calculationPeriod()", "testcase": false, "constructor": false, "invocations": ["including", "minusMonths", "getDate", "getDate"]}, "repository": {"repo_id": 11128472, "url": "https://github.com/estatio/estatio", "stars": 184, "created": "7/2/2013 3:49:01 PM +00:00", "updates": "2020-01-22T12:30:30+00:00", "fork": "False", "license": "licensed"}}