{"test_class": {"identifier": "ChamberOfCommerceCodeLookUpServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public JUnitRuleMockery2 context = JUnitRuleMockery2.createFor(JUnitRuleMockery2.Mode.INTERFACES_AND_CLASSES);", "modifier": "@Rule\n    public", "type": "JUnitRuleMockery2", "declarator": "context = JUnitRuleMockery2.createFor(JUnitRuleMockery2.Mode.INTERFACES_AND_CLASSES)", "var_name": "context"}, {"original_string": "@Mock MessageService mockMessageService;", "modifier": "@Mock", "type": "MessageService", "declarator": "mockMessageService", "var_name": "mockMessageService"}, {"original_string": "@Mock SirenService mockSirenService;", "modifier": "@Mock", "type": "SirenService", "declarator": "mockSirenService", "var_name": "mockSirenService"}], "file": "estatioapp/app/src/test/java/org/estatio/module/party/app/services/ChamberOfCommerceCodeLookUpServiceTest.java"}, "test_case": {"identifier": "getChamberOfCommerceCodeCandidatesByCode_works", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getChamberOfCommerceCodeCandidatesByCode_works() throws Exception {\n\n        // given\n        ChamberOfCommerceCodeLookUpService service = new ChamberOfCommerceCodeLookUpService(){\n            @Override\n            OrganisationNameNumberViewModel findCandidateForFranceByCode(final String code){\n                return new OrganisationNameNumberViewModel();\n            }\n        };\n        Organisation organisation = new Organisation(){\n            @Override\n            public String getAtPath(){\n                return \"/FRA\";\n            }\n        };\n        organisation.setName(\"Company\");\n\n        // when\n        OrganisationNameNumberViewModel result = service.getChamberOfCommerceCodeCandidatesByCode(organisation.getName(), organisation.getAtPath());\n\n        // then\n        Assertions.assertThat(result).isNotNull();\n\n    }", "signature": "void getChamberOfCommerceCodeCandidatesByCode_works()", "full_signature": "@Test public void getChamberOfCommerceCodeCandidatesByCode_works()", "class_method_signature": "ChamberOfCommerceCodeLookUpServiceTest.getChamberOfCommerceCodeCandidatesByCode_works()", "testcase": true, "constructor": false, "invocations": ["setName", "getChamberOfCommerceCodeCandidatesByCode", "getName", "getAtPath", "isNotNull", "assertThat"]}, "focal_class": {"identifier": "ChamberOfCommerceCodeLookUpService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static String CONNECTION_WARNING = \"A connection to the external Siren service could not be made\";", "modifier": "private final static", "type": "String", "declarator": "CONNECTION_WARNING = \"A connection to the external Siren service could not be made\"", "var_name": "CONNECTION_WARNING"}, {"original_string": "private final static String NO_RESULTS_WARNING = \"A connection to the external Siren service could be made, but no results were returned\";", "modifier": "private final static", "type": "String", "declarator": "NO_RESULTS_WARNING = \"A connection to the external Siren service could be made, but no results were returned\"", "var_name": "NO_RESULTS_WARNING"}, {"original_string": "public static final List<String> LEGAL_FORMS = Arrays.asList(\"SA\", \"SAS\", \"SASU\", \"SARL\", \"EURL\", \"SCI\", \"SNC\");", "modifier": "public static final", "type": "List<String>", "declarator": "LEGAL_FORMS = Arrays.asList(\"SA\", \"SAS\", \"SASU\", \"SARL\", \"EURL\", \"SCI\", \"SNC\")", "var_name": "LEGAL_FORMS"}, {"original_string": "@Inject MessageService messageService;", "modifier": "@Inject", "type": "MessageService", "declarator": "messageService", "var_name": "messageService"}, {"original_string": "@Inject SirenService sirenService;", "modifier": "@Inject", "type": "SirenService", "declarator": "sirenService", "var_name": "sirenService"}], "methods": [{"identifier": "getChamberOfCommerceCodeCandidatesByOrganisation", "parameters": "(final Organisation organisation)", "modifiers": "public", "return": "List<OrganisationNameNumberViewModel>", "signature": "List<OrganisationNameNumberViewModel> getChamberOfCommerceCodeCandidatesByOrganisation(final Organisation organisation)", "full_signature": "public List<OrganisationNameNumberViewModel> getChamberOfCommerceCodeCandidatesByOrganisation(final Organisation organisation)", "class_method_signature": "ChamberOfCommerceCodeLookUpService.getChamberOfCommerceCodeCandidatesByOrganisation(final Organisation organisation)", "testcase": false, "constructor": false}, {"identifier": "getChamberOfCommerceCodeCandidatesByOrganisation", "parameters": "(final String name, final String atPath)", "modifiers": "public", "return": "List<OrganisationNameNumberViewModel>", "signature": "List<OrganisationNameNumberViewModel> getChamberOfCommerceCodeCandidatesByOrganisation(final String name, final String atPath)", "full_signature": "public List<OrganisationNameNumberViewModel> getChamberOfCommerceCodeCandidatesByOrganisation(final String name, final String atPath)", "class_method_signature": "ChamberOfCommerceCodeLookUpService.getChamberOfCommerceCodeCandidatesByOrganisation(final String name, final String atPath)", "testcase": false, "constructor": false}, {"identifier": "getChamberOfCommerceCodeCandidatesByCode", "parameters": "(final Organisation organisation)", "modifiers": "public", "return": "OrganisationNameNumberViewModel", "signature": "OrganisationNameNumberViewModel getChamberOfCommerceCodeCandidatesByCode(final Organisation organisation)", "full_signature": "public OrganisationNameNumberViewModel getChamberOfCommerceCodeCandidatesByCode(final Organisation organisation)", "class_method_signature": "ChamberOfCommerceCodeLookUpService.getChamberOfCommerceCodeCandidatesByCode(final Organisation organisation)", "testcase": false, "constructor": false}, {"identifier": "getChamberOfCommerceCodeCandidatesByCode", "parameters": "(final String code, final String atPath)", "modifiers": "public", "return": "OrganisationNameNumberViewModel", "signature": "OrganisationNameNumberViewModel getChamberOfCommerceCodeCandidatesByCode(final String code, final String atPath)", "full_signature": "public OrganisationNameNumberViewModel getChamberOfCommerceCodeCandidatesByCode(final String code, final String atPath)", "class_method_signature": "ChamberOfCommerceCodeLookUpService.getChamberOfCommerceCodeCandidatesByCode(final String code, final String atPath)", "testcase": false, "constructor": false}, {"identifier": "findCandidatesForFranceByName", "parameters": "(final String name)", "modifiers": "", "return": "List<OrganisationNameNumberViewModel>", "signature": "List<OrganisationNameNumberViewModel> findCandidatesForFranceByName(final String name)", "full_signature": " List<OrganisationNameNumberViewModel> findCandidatesForFranceByName(final String name)", "class_method_signature": "ChamberOfCommerceCodeLookUpService.findCandidatesForFranceByName(final String name)", "testcase": false, "constructor": false}, {"identifier": "findCandidateForFranceByCode", "parameters": "(final String code)", "modifiers": "", "return": "OrganisationNameNumberViewModel", "signature": "OrganisationNameNumberViewModel findCandidateForFranceByCode(final String code)", "full_signature": " OrganisationNameNumberViewModel findCandidateForFranceByCode(final String code)", "class_method_signature": "ChamberOfCommerceCodeLookUpService.findCandidateForFranceByCode(final String code)", "testcase": false, "constructor": false}, {"identifier": "filterLegalFormsFromOrganisationName", "parameters": "(final String name )", "modifiers": "", "return": "String", "signature": "String filterLegalFormsFromOrganisationName(final String name )", "full_signature": " String filterLegalFormsFromOrganisationName(final String name )", "class_method_signature": "ChamberOfCommerceCodeLookUpService.filterLegalFormsFromOrganisationName(final String name )", "testcase": false, "constructor": false}], "file": "estatioapp/app/src/main/java/org/estatio/module/party/app/services/ChamberOfCommerceCodeLookUpService.java"}, "focal_method": {"identifier": "getChamberOfCommerceCodeCandidatesByCode", "parameters": "(final Organisation organisation)", "modifiers": "public", "return": "OrganisationNameNumberViewModel", "body": "public OrganisationNameNumberViewModel getChamberOfCommerceCodeCandidatesByCode(final Organisation organisation) {\n        return getChamberOfCommerceCodeCandidatesByCode(organisation.getChamberOfCommerceCode(), organisation.getAtPath());\n    }", "signature": "OrganisationNameNumberViewModel getChamberOfCommerceCodeCandidatesByCode(final Organisation organisation)", "full_signature": "public OrganisationNameNumberViewModel getChamberOfCommerceCodeCandidatesByCode(final Organisation organisation)", "class_method_signature": "ChamberOfCommerceCodeLookUpService.getChamberOfCommerceCodeCandidatesByCode(final Organisation organisation)", "testcase": false, "constructor": false, "invocations": ["getChamberOfCommerceCodeCandidatesByCode", "getChamberOfCommerceCode", "getAtPath"]}, "repository": {"repo_id": 11128472, "url": "https://github.com/estatio/estatio", "stars": 184, "created": "7/2/2013 3:49:01 PM +00:00", "updates": "2020-01-22T12:30:30+00:00", "fork": "False", "license": "licensed"}}