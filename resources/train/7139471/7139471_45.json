{"test_class": {"identifier": "EpisodeViewHolderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "EpisodeViewHolder viewHolder;", "modifier": "", "type": "EpisodeViewHolder", "declarator": "viewHolder", "var_name": "viewHolder"}, {"original_string": "@Mock\n    VideoContentInfo mockVideoContentInfo;", "modifier": "@Mock", "type": "VideoContentInfo", "declarator": "mockVideoContentInfo", "var_name": "mockVideoContentInfo"}, {"original_string": "@Mock\n    RecyclerView mockRecyclerView;", "modifier": "@Mock", "type": "RecyclerView", "declarator": "mockRecyclerView", "var_name": "mockRecyclerView"}, {"original_string": "@Mock\n    RecyclerView.LayoutManager mockLayoutManager;", "modifier": "@Mock", "type": "RecyclerView.LayoutManager", "declarator": "mockLayoutManager", "var_name": "mockLayoutManager"}], "file": "serenity-app/src/test/java/us/nineworlds/serenity/ui/browser/tv/episodes/EpisodeViewHolderTest.java"}, "test_case": {"identifier": "seasonMetaDataHasExpectedEpisodeText", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void seasonMetaDataHasExpectedEpisodeText() {\n        doReturn(\"Episode\").when(mockVideoContentInfo).getEpisode();\n\n        viewHolder.updateSeasonsTitle(mockVideoContentInfo);\n\n        assertThat(viewHolder.metaData).endsWithText(\"Episode\").isVisible();\n\n        verify(mockVideoContentInfo, atLeastOnce()).getEpisode();\n    }", "signature": "void seasonMetaDataHasExpectedEpisodeText()", "full_signature": "@Test public void seasonMetaDataHasExpectedEpisodeText()", "class_method_signature": "EpisodeViewHolderTest.seasonMetaDataHasExpectedEpisodeText()", "testcase": true, "constructor": false, "invocations": ["getEpisode", "when", "doReturn", "updateSeasonsTitle", "isVisible", "endsWithText", "assertThat", "getEpisode", "verify", "atLeastOnce"]}, "focal_class": {"identifier": "EpisodeViewHolder", "superclass": "extends AbstractPosterImageViewHolder<VideoContentInfo>", "interfaces": "", "fields": [{"original_string": "@BindView(R.id.metaOverlay) TextView metaData;", "modifier": "@BindView(R.id.metaOverlay)", "type": "TextView", "declarator": "metaData", "var_name": "metaData"}, {"original_string": "@BindView(R.id.posterOverlayTitle) TextView title;", "modifier": "@BindView(R.id.posterOverlayTitle)", "type": "TextView", "declarator": "title", "var_name": "title"}], "methods": [{"identifier": "EpisodeViewHolder", "parameters": "(View itemView)", "modifiers": "public", "return": "", "signature": " EpisodeViewHolder(View itemView)", "full_signature": "public  EpisodeViewHolder(View itemView)", "class_method_signature": "EpisodeViewHolder.EpisodeViewHolder(View itemView)", "testcase": false, "constructor": true}, {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "EpisodeViewHolder.reset()", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "()", "modifiers": "public", "return": "Context", "signature": "Context getContext()", "full_signature": "public Context getContext()", "class_method_signature": "EpisodeViewHolder.getContext()", "testcase": false, "constructor": false}, {"identifier": "createImage", "parameters": "(VideoContentInfo pi, int imageWidth, int imageHeight, RecyclerView recyclerView)", "modifiers": "public", "return": "void", "signature": "void createImage(VideoContentInfo pi, int imageWidth, int imageHeight, RecyclerView recyclerView)", "full_signature": "public void createImage(VideoContentInfo pi, int imageWidth, int imageHeight, RecyclerView recyclerView)", "class_method_signature": "EpisodeViewHolder.createImage(VideoContentInfo pi, int imageWidth, int imageHeight, RecyclerView recyclerView)", "testcase": false, "constructor": false}, {"identifier": "initPosterMetaData", "parameters": "(VideoContentInfo pi, int width, int height)", "modifiers": "protected", "return": "void", "signature": "void initPosterMetaData(VideoContentInfo pi, int width, int height)", "full_signature": "protected void initPosterMetaData(VideoContentInfo pi, int width, int height)", "class_method_signature": "EpisodeViewHolder.initPosterMetaData(VideoContentInfo pi, int width, int height)", "testcase": false, "constructor": false}, {"identifier": "loadImage", "parameters": "(String url)", "modifiers": "@Override public", "return": "void", "signature": "void loadImage(String url)", "full_signature": "@Override public void loadImage(String url)", "class_method_signature": "EpisodeViewHolder.loadImage(String url)", "testcase": false, "constructor": false}, {"identifier": "toggleWatchedIndicator", "parameters": "(VideoContentInfo pi)", "modifiers": "public", "return": "void", "signature": "void toggleWatchedIndicator(VideoContentInfo pi)", "full_signature": "public void toggleWatchedIndicator(VideoContentInfo pi)", "class_method_signature": "EpisodeViewHolder.toggleWatchedIndicator(VideoContentInfo pi)", "testcase": false, "constructor": false}, {"identifier": "updateSeasonsTitle", "parameters": "(VideoContentInfo pi)", "modifiers": "public", "return": "void", "signature": "void updateSeasonsTitle(VideoContentInfo pi)", "full_signature": "public void updateSeasonsTitle(VideoContentInfo pi)", "class_method_signature": "EpisodeViewHolder.updateSeasonsTitle(VideoContentInfo pi)", "testcase": false, "constructor": false}], "file": "serenity-app/src/main/java/us/nineworlds/serenity/ui/browser/tv/episodes/EpisodeViewHolder.java"}, "focal_method": {"identifier": "updateSeasonsTitle", "parameters": "(VideoContentInfo pi)", "modifiers": "public", "return": "void", "body": "public void updateSeasonsTitle(VideoContentInfo pi) {\n    String metaText = \"\";\n    if (pi.getSeason() != null) {\n      metaText = pi.getSeason() + \" \";\n    }\n\n    if (pi.getEpisode() != null) {\n      metaText = metaText + pi.getEpisode();\n    }\n\n    if (metaText.length() > 0) {\n      metaData.setText(metaText);\n      metaData.setVisibility(View.VISIBLE);\n    }\n\n    title.setText(pi.getTitle());\n    title.setVisibility(View.VISIBLE);\n  }", "signature": "void updateSeasonsTitle(VideoContentInfo pi)", "full_signature": "public void updateSeasonsTitle(VideoContentInfo pi)", "class_method_signature": "EpisodeViewHolder.updateSeasonsTitle(VideoContentInfo pi)", "testcase": false, "constructor": false, "invocations": ["getSeason", "getSeason", "getEpisode", "getEpisode", "length", "setText", "setVisibility", "setText", "getTitle", "setVisibility"]}, "repository": {"repo_id": 7139471, "url": "https://github.com/NineWorlds/serenity-android", "language": "Java", "is_fork": false, "fork_count": 58, "stargazer_count": 154, "size": 23158, "license": "licensed"}}