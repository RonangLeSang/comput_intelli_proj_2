{"test_class": {"identifier": "SecondaryCategorySpinnerOnItemSelectedListenerTest", "superclass": "extends InjectingTest", "interfaces": "", "fields": [{"original_string": "@Rule\n    public MockitoRule rule = MockitoJUnit.rule().strictness(Strictness.STRICT_STUBS);", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "rule = MockitoJUnit.rule().strictness(Strictness.STRICT_STUBS)", "var_name": "rule"}, {"original_string": "@Mock\n    protected SharedPreferences mockSharedPreferences;", "modifier": "@Mock\n    protected", "type": "SharedPreferences", "declarator": "mockSharedPreferences", "var_name": "mockSharedPreferences"}, {"original_string": "@Mock\n    protected View mockView;", "modifier": "@Mock\n    protected", "type": "View", "declarator": "mockView", "var_name": "mockView"}, {"original_string": "@Mock\n    protected AdapterView mockAdapterView;", "modifier": "@Mock\n    protected", "type": "AdapterView", "declarator": "mockAdapterView", "var_name": "mockAdapterView"}, {"original_string": "@Mock\n    protected SecondaryCategoryInfo mockCategoryInfo;", "modifier": "@Mock\n    protected", "type": "SecondaryCategoryInfo", "declarator": "mockCategoryInfo", "var_name": "mockCategoryInfo"}, {"original_string": "@Mock\n    protected SerenityMultiViewVideoActivity mockMultiViewVideoActivity;", "modifier": "@Mock\n    protected", "type": "SerenityMultiViewVideoActivity", "declarator": "mockMultiViewVideoActivity", "var_name": "mockMultiViewVideoActivity"}, {"original_string": "@Mock\n    protected MovieSelectedCategoryState mockCategoryState;", "modifier": "@Mock\n    protected", "type": "MovieSelectedCategoryState", "declarator": "mockCategoryState", "var_name": "mockCategoryState"}, {"original_string": "@Mock\n    protected MoviePosterImageAdapter mockPosterImageAdapter;", "modifier": "@Mock\n    protected", "type": "MoviePosterImageAdapter", "declarator": "mockPosterImageAdapter", "var_name": "mockPosterImageAdapter"}, {"original_string": "@Mock\n    VideoPlayerIntentUtils mockVideoPlayerIntentUtils;", "modifier": "@Mock", "type": "VideoPlayerIntentUtils", "declarator": "mockVideoPlayerIntentUtils", "var_name": "mockVideoPlayerIntentUtils"}, {"original_string": "MovieBrowserActivity movieBrowserActivity;", "modifier": "", "type": "MovieBrowserActivity", "declarator": "movieBrowserActivity", "var_name": "movieBrowserActivity"}, {"original_string": "protected SecondaryCategorySpinnerOnItemSelectedListener onItemSelectedListener;", "modifier": "protected", "type": "SecondaryCategorySpinnerOnItemSelectedListener", "declarator": "onItemSelectedListener", "var_name": "onItemSelectedListener"}, {"original_string": "protected SecondaryCategorySpinnerOnItemSelectedListener spyOnItemSelectedListener;", "modifier": "protected", "type": "SecondaryCategorySpinnerOnItemSelectedListener", "declarator": "spyOnItemSelectedListener", "var_name": "spyOnItemSelectedListener"}], "file": "serenity-app/src/test/java/us/nineworlds/serenity/ui/browser/movie/SecondaryCategorySpinnerOnItemSelectedListenerTest.java"}, "test_case": {"identifier": "verifyCategoryStateSetsGenreCategoryWhenGenresDoNotMatch", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void verifyCategoryStateSetsGenreCategoryWhenGenresDoNotMatch() {\n        spyOnItemSelectedListener.setFirstSelection(false);\n        doReturn(mockCategoryInfo).when(mockAdapterView).getItemAtPosition(\n                anyInt());\n        doReturn(\"All\").when(mockCategoryInfo).getCategory();\n\n        spyOnItemSelectedListener.onItemSelected(mockAdapterView, mockView, 0,\n                0);\n\n        verify(mockCategoryState).setGenreCategory(\"All\");\n    }", "signature": "void verifyCategoryStateSetsGenreCategoryWhenGenresDoNotMatch()", "full_signature": "@Test public void verifyCategoryStateSetsGenreCategoryWhenGenresDoNotMatch()", "class_method_signature": "SecondaryCategorySpinnerOnItemSelectedListenerTest.verifyCategoryStateSetsGenreCategoryWhenGenresDoNotMatch()", "testcase": true, "constructor": false, "invocations": ["setFirstSelection", "getItemAtPosition", "when", "doReturn", "anyInt", "getCategory", "when", "doReturn", "onItemSelected", "setGenreCategory", "verify"]}, "focal_class": {"identifier": "SecondaryCategorySpinnerOnItemSelectedListener", "superclass": "extends BaseSpinnerOnItemSelectedListener", "interfaces": "implements OnItemSelectedListener", "fields": [{"original_string": "SerenityMultiViewVideoActivity activity;", "modifier": "", "type": "SerenityMultiViewVideoActivity", "declarator": "activity", "var_name": "activity"}], "methods": [{"identifier": "SecondaryCategorySpinnerOnItemSelectedListener", "parameters": "(String defaultSelection, String key,\n      SerenityMultiViewVideoActivity activity)", "modifiers": "public", "return": "", "signature": " SecondaryCategorySpinnerOnItemSelectedListener(String defaultSelection, String key,\n      SerenityMultiViewVideoActivity activity)", "full_signature": "public  SecondaryCategorySpinnerOnItemSelectedListener(String defaultSelection, String key,\n      SerenityMultiViewVideoActivity activity)", "class_method_signature": "SecondaryCategorySpinnerOnItemSelectedListener.SecondaryCategorySpinnerOnItemSelectedListener(String defaultSelection, String key,\n      SerenityMultiViewVideoActivity activity)", "testcase": false, "constructor": true}, {"identifier": "onItemSelected", "parameters": "(AdapterView<?> viewAdapter, View view, int position, long id)", "modifiers": "@Override public", "return": "void", "signature": "void onItemSelected(AdapterView<?> viewAdapter, View view, int position, long id)", "full_signature": "@Override public void onItemSelected(AdapterView<?> viewAdapter, View view, int position, long id)", "class_method_signature": "SecondaryCategorySpinnerOnItemSelectedListener.onItemSelected(AdapterView<?> viewAdapter, View view, int position, long id)", "testcase": false, "constructor": false}, {"identifier": "getSavedCategory", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getSavedCategory()", "full_signature": "@Override protected String getSavedCategory()", "class_method_signature": "SecondaryCategorySpinnerOnItemSelectedListener.getSavedCategory()", "testcase": false, "constructor": false}], "file": "serenity-app/src/main/java/us/nineworlds/serenity/ui/browser/movie/SecondaryCategorySpinnerOnItemSelectedListener.java"}, "focal_method": {"identifier": "onItemSelected", "parameters": "(AdapterView<?> viewAdapter, View view, int position, long id)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void onItemSelected(AdapterView<?> viewAdapter, View view, int position, long id) {\n\n    setMultiViewVideoActivity(activity);\n\n    findViews();\n\n    SecondaryCategoryInfo item = (SecondaryCategoryInfo) viewAdapter.getItemAtPosition(position);\n\n    if (isFirstSelection()) {\n      if (categoryState.getGenreCategory() != null) {\n        int savedInstancePosition = getSavedInstancePosition(viewAdapter);\n        item = (SecondaryCategoryInfo) viewAdapter.getItemAtPosition(savedInstancePosition);\n        viewAdapter.setSelection(savedInstancePosition);\n      }\n      setFirstSelection(false);\n    }\n\n    if (selected.equalsIgnoreCase(item.getCategory())) {\n      return;\n    }\n\n    selected = item.getCategory();\n\n    categoryState.setGenreCategory(item.getCategory());\n\n    Activity activity = getActivity(getMultiViewVideoActivity());\n    if (activity instanceof MovieBrowserActivity) {\n      MovieBrowserActivity movieBrowserActivity = (MovieBrowserActivity) activity;\n      movieBrowserActivity.requestUpdatedVideos(key,\n          item.getParentCategory() + \"/\" + item.getCategory());\n    }\n  }", "signature": "void onItemSelected(AdapterView<?> viewAdapter, View view, int position, long id)", "full_signature": "@Override public void onItemSelected(AdapterView<?> viewAdapter, View view, int position, long id)", "class_method_signature": "SecondaryCategorySpinnerOnItemSelectedListener.onItemSelected(AdapterView<?> viewAdapter, View view, int position, long id)", "testcase": false, "constructor": false, "invocations": ["setMultiViewVideoActivity", "findViews", "getItemAtPosition", "isFirstSelection", "getGenreCategory", "getSavedInstancePosition", "getItemAtPosition", "setSelection", "setFirstSelection", "equalsIgnoreCase", "getCategory", "getCategory", "setGenreCategory", "getCategory", "getActivity", "getMultiViewVideoActivity", "requestUpdatedVideos", "getParentCategory", "getCategory"]}, "repository": {"repo_id": 7139471, "url": "https://github.com/NineWorlds/serenity-android", "language": "Java", "is_fork": false, "fork_count": 58, "stargazer_count": 154, "size": 23158, "license": "licensed"}}