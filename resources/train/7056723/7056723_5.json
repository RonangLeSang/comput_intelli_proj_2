{"test_class": {"identifier": "DefaultCallContextWithExistingWeaverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CallContext context;", "modifier": "private", "type": "CallContext", "declarator": "context", "var_name": "context"}, {"original_string": "private Weaver weaverMock;", "modifier": "private", "type": "Weaver", "declarator": "weaverMock", "var_name": "weaverMock"}], "file": "mock4aj-core/src/test/java/info/rubico/mock4aj/api/calls/DefaultCallContextWithExistingWeaverTest.java"}, "test_case": {"identifier": "whenWithAspectShouldRegisterTheAspectOnTheWeaver", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void whenWithAspectShouldRegisterTheAspectOnTheWeaver() {\n        Class<?> theAspect = AnAspect.class;\n        context.withAspect(theAspect);\n\n        verify(weaverMock).registerAspect(theAspect);\n    }", "signature": "void whenWithAspectShouldRegisterTheAspectOnTheWeaver()", "full_signature": "@Test public void whenWithAspectShouldRegisterTheAspectOnTheWeaver()", "class_method_signature": "DefaultCallContextWithExistingWeaverTest.whenWithAspectShouldRegisterTheAspectOnTheWeaver()", "testcase": true, "constructor": false, "invocations": ["withAspect", "registerAspect", "verify"]}, "focal_class": {"identifier": "DefaultCallContextWithExistingWeaver", "superclass": "", "interfaces": "implements CallContext", "fields": [{"original_string": "private final Weaver weaver;", "modifier": "private final", "type": "Weaver", "declarator": "weaver", "var_name": "weaver"}, {"original_string": "private CallSource source;", "modifier": "private", "type": "CallSource", "declarator": "source", "var_name": "source"}], "methods": [{"identifier": "DefaultCallContextWithExistingWeaver", "parameters": "(Weaver weaver)", "modifiers": "public", "return": "", "signature": " DefaultCallContextWithExistingWeaver(Weaver weaver)", "full_signature": "public  DefaultCallContextWithExistingWeaver(Weaver weaver)", "class_method_signature": "DefaultCallContextWithExistingWeaver.DefaultCallContextWithExistingWeaver(Weaver weaver)", "testcase": false, "constructor": true}, {"identifier": "withAspect", "parameters": "(Class<?> aspectClass)", "modifiers": "public", "return": "void", "signature": "void withAspect(Class<?> aspectClass)", "full_signature": "public void withAspect(Class<?> aspectClass)", "class_method_signature": "DefaultCallContextWithExistingWeaver.withAspect(Class<?> aspectClass)", "testcase": false, "constructor": false}, {"identifier": "from", "parameters": "(Class<?> sourceType)", "modifiers": "public", "return": "void", "signature": "void from(Class<?> sourceType)", "full_signature": "public void from(Class<?> sourceType)", "class_method_signature": "DefaultCallContextWithExistingWeaver.from(Class<?> sourceType)", "testcase": false, "constructor": false}, {"identifier": "from", "parameters": "(CallSource source)", "modifiers": "public", "return": "void", "signature": "void from(CallSource source)", "full_signature": "public void from(CallSource source)", "class_method_signature": "DefaultCallContextWithExistingWeaver.from(CallSource source)", "testcase": false, "constructor": false}, {"identifier": "getConfiguredWeaver", "parameters": "()", "modifiers": "public", "return": "Weaver", "signature": "Weaver getConfiguredWeaver()", "full_signature": "public Weaver getConfiguredWeaver()", "class_method_signature": "DefaultCallContextWithExistingWeaver.getConfiguredWeaver()", "testcase": false, "constructor": false}, {"identifier": "getConfiguredCallSource", "parameters": "()", "modifiers": "public", "return": "CallSource", "signature": "CallSource getConfiguredCallSource()", "full_signature": "public CallSource getConfiguredCallSource()", "class_method_signature": "DefaultCallContextWithExistingWeaver.getConfiguredCallSource()", "testcase": false, "constructor": false}], "file": "mock4aj-core/src/main/java/info/rubico/mock4aj/api/calls/DefaultCallContextWithExistingWeaver.java"}, "focal_method": {"identifier": "withAspect", "parameters": "(Class<?> aspectClass)", "modifiers": "public", "return": "void", "body": "public void withAspect(Class<?> aspectClass) {\n        weaver.registerAspect(aspectClass);\n    }", "signature": "void withAspect(Class<?> aspectClass)", "full_signature": "public void withAspect(Class<?> aspectClass)", "class_method_signature": "DefaultCallContextWithExistingWeaver.withAspect(Class<?> aspectClass)", "testcase": false, "constructor": false, "invocations": ["registerAspect"]}, "repository": {"repo_id": 7056723, "url": "https://github.com/mock4aj/mock4aj", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 476, "license": "licensed"}}