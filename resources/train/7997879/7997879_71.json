{"test_class": {"identifier": "CounterMetricFamilyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "CollectorRegistry registry;", "modifier": "", "type": "CollectorRegistry", "declarator": "registry", "var_name": "registry"}], "file": "simpleclient/src/test/java/io/prometheus/client/CounterMetricFamilyTest.java"}, "test_case": {"identifier": "testJavadocExample", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testJavadocExample() {\n    class YourCustomCollector extends Collector {\n      public List<MetricFamilySamples> collect() {\n        List<MetricFamilySamples> mfs = new ArrayList<MetricFamilySamples>();\n        // With no labels.\n        mfs.add(new CounterMetricFamily(\"my_counter\", \"help\", 42));\n        // With labels\n        CounterMetricFamily labeledCounter = new CounterMetricFamily(\"my_other_counter\", \"help\", Arrays.asList(\"labelname\"));\n        labeledCounter.addMetric(Arrays.asList(\"foo\"), 4);\n        labeledCounter.addMetric(Arrays.asList(\"bar\"), 5);\n        mfs.add(labeledCounter);\n        return mfs;\n      }\n    }\n    new YourCustomCollector().register(registry);\n\n    assertEquals(42.0, registry.getSampleValue(\"my_counter\").doubleValue(), .001);\n    assertEquals(null, registry.getSampleValue(\"my_other_counter\"));\n    assertEquals(4.0, registry.getSampleValue(\"my_other_counter\", new String[]{\"labelname\"}, new String[]{\"foo\"}).doubleValue(), .001);\n    assertEquals(5.0, registry.getSampleValue(\"my_other_counter\", new String[]{\"labelname\"}, new String[]{\"bar\"}).doubleValue(), .001);\n  }", "signature": "void testJavadocExample()", "full_signature": "@Test public void testJavadocExample()", "class_method_signature": "CounterMetricFamilyTest.testJavadocExample()", "testcase": true, "constructor": false, "invocations": ["add", "asList", "addMetric", "asList", "addMetric", "asList", "add", "register", "assertEquals", "doubleValue", "getSampleValue", "assertEquals", "getSampleValue", "assertEquals", "doubleValue", "getSampleValue", "assertEquals", "doubleValue", "getSampleValue"]}, "focal_class": {"identifier": "CounterMetricFamily", "superclass": "extends Collector.MetricFamilySamples", "interfaces": "", "fields": [{"original_string": "private final List<String> labelNames;", "modifier": "private final", "type": "List<String>", "declarator": "labelNames", "var_name": "labelNames"}], "methods": [{"identifier": "CounterMetricFamily", "parameters": "(String name, String help, double value)", "modifiers": "public", "return": "", "signature": " CounterMetricFamily(String name, String help, double value)", "full_signature": "public  CounterMetricFamily(String name, String help, double value)", "class_method_signature": "CounterMetricFamily.CounterMetricFamily(String name, String help, double value)", "testcase": false, "constructor": true}, {"identifier": "CounterMetricFamily", "parameters": "(String name, String help, List<String> labelNames)", "modifiers": "public", "return": "", "signature": " CounterMetricFamily(String name, String help, List<String> labelNames)", "full_signature": "public  CounterMetricFamily(String name, String help, List<String> labelNames)", "class_method_signature": "CounterMetricFamily.CounterMetricFamily(String name, String help, List<String> labelNames)", "testcase": false, "constructor": true}, {"identifier": "addMetric", "parameters": "(List<String> labelValues, double value)", "modifiers": "public", "return": "CounterMetricFamily", "signature": "CounterMetricFamily addMetric(List<String> labelValues, double value)", "full_signature": "public CounterMetricFamily addMetric(List<String> labelValues, double value)", "class_method_signature": "CounterMetricFamily.addMetric(List<String> labelValues, double value)", "testcase": false, "constructor": false}], "file": "simpleclient/src/main/java/io/prometheus/client/CounterMetricFamily.java"}, "focal_method": {"identifier": "addMetric", "parameters": "(List<String> labelValues, double value)", "modifiers": "public", "return": "CounterMetricFamily", "body": "public CounterMetricFamily addMetric(List<String> labelValues, double value) {\n    if (labelValues.size() != labelNames.size()) {\n      throw new IllegalArgumentException(\"Incorrect number of labels.\");\n    }\n    samples.add(new Sample(name, labelNames, labelValues, value));\n    return this;\n  }", "signature": "CounterMetricFamily addMetric(List<String> labelValues, double value)", "full_signature": "public CounterMetricFamily addMetric(List<String> labelValues, double value)", "class_method_signature": "CounterMetricFamily.addMetric(List<String> labelValues, double value)", "testcase": false, "constructor": false, "invocations": ["size", "size", "add"]}, "repository": {"repo_id": 7997879, "url": "https://github.com/prometheus/client_java", "stars": 1094, "created": "2/3/2013 10:55:49 PM +00:00", "updates": "2020-01-25T01:49:53+00:00", "fork": "False", "license": "licensed"}}