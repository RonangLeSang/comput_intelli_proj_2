{"test_class": {"identifier": "CollectorRegistryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "CollectorRegistry registry;", "modifier": "", "type": "CollectorRegistry", "declarator": "registry", "var_name": "registry"}], "file": "simpleclient/src/test/java/io/prometheus/client/CollectorRegistryTest.java"}, "test_case": {"identifier": "testClear", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testClear() {\n    Collector g = Gauge.build().name(\"g\").help(\"h\").register(registry);\n    Collector c = Counter.build().name(\"c\").help(\"h\").register(registry);\n    List<Collector.MetricFamilySamples> mfs = Collections.list(registry.metricFamilySamples());\n    assertEquals(2, mfs.size());\n    registry.clear();\n    mfs = Collections.list(registry.metricFamilySamples());\n    assertEquals(0, mfs.size());\n  }", "signature": "void testClear()", "full_signature": "@Test public void testClear()", "class_method_signature": "CollectorRegistryTest.testClear()", "testcase": true, "constructor": false, "invocations": ["register", "help", "name", "build", "register", "help", "name", "build", "list", "metricFamilySamples", "assertEquals", "size", "clear", "list", "metricFamilySamples", "assertEquals", "size"]}, "focal_class": {"identifier": "CollectorRegistry", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final CollectorRegistry defaultRegistry = new CollectorRegistry(true);", "modifier": "public static final", "type": "CollectorRegistry", "declarator": "defaultRegistry = new CollectorRegistry(true)", "var_name": "defaultRegistry"}, {"original_string": "private final Object namesCollectorsLock = new Object();", "modifier": "private final", "type": "Object", "declarator": "namesCollectorsLock = new Object()", "var_name": "namesCollectorsLock"}, {"original_string": "private final Map<Collector, List<String>> collectorsToNames = new HashMap<Collector, List<String>>();", "modifier": "private final", "type": "Map<Collector, List<String>>", "declarator": "collectorsToNames = new HashMap<Collector, List<String>>()", "var_name": "collectorsToNames"}, {"original_string": "private final Map<String, Collector> namesToCollectors = new HashMap<String, Collector>();", "modifier": "private final", "type": "Map<String, Collector>", "declarator": "namesToCollectors = new HashMap<String, Collector>()", "var_name": "namesToCollectors"}, {"original_string": "private final boolean autoDescribe;", "modifier": "private final", "type": "boolean", "declarator": "autoDescribe", "var_name": "autoDescribe"}], "methods": [{"identifier": "CollectorRegistry", "parameters": "()", "modifiers": "public", "return": "", "signature": " CollectorRegistry()", "full_signature": "public  CollectorRegistry()", "class_method_signature": "CollectorRegistry.CollectorRegistry()", "testcase": false, "constructor": true}, {"identifier": "CollectorRegistry", "parameters": "(boolean autoDescribe)", "modifiers": "public", "return": "", "signature": " CollectorRegistry(boolean autoDescribe)", "full_signature": "public  CollectorRegistry(boolean autoDescribe)", "class_method_signature": "CollectorRegistry.CollectorRegistry(boolean autoDescribe)", "testcase": false, "constructor": true}, {"identifier": "register", "parameters": "(Collector m)", "modifiers": "public", "return": "void", "signature": "void register(Collector m)", "full_signature": "public void register(Collector m)", "class_method_signature": "CollectorRegistry.register(Collector m)", "testcase": false, "constructor": false}, {"identifier": "unregister", "parameters": "(Collector m)", "modifiers": "public", "return": "void", "signature": "void unregister(Collector m)", "full_signature": "public void unregister(Collector m)", "class_method_signature": "CollectorRegistry.unregister(Collector m)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "CollectorRegistry.clear()", "testcase": false, "constructor": false}, {"identifier": "collectors", "parameters": "()", "modifiers": "private", "return": "Set<Collector>", "signature": "Set<Collector> collectors()", "full_signature": "private Set<Collector> collectors()", "class_method_signature": "CollectorRegistry.collectors()", "testcase": false, "constructor": false}, {"identifier": "collectorNames", "parameters": "(Collector m)", "modifiers": "private", "return": "List<String>", "signature": "List<String> collectorNames(Collector m)", "full_signature": "private List<String> collectorNames(Collector m)", "class_method_signature": "CollectorRegistry.collectorNames(Collector m)", "testcase": false, "constructor": false}, {"identifier": "metricFamilySamples", "parameters": "()", "modifiers": "public", "return": "Enumeration<Collector.MetricFamilySamples>", "signature": "Enumeration<Collector.MetricFamilySamples> metricFamilySamples()", "full_signature": "public Enumeration<Collector.MetricFamilySamples> metricFamilySamples()", "class_method_signature": "CollectorRegistry.metricFamilySamples()", "testcase": false, "constructor": false}, {"identifier": "filteredMetricFamilySamples", "parameters": "(Set<String> includedNames)", "modifiers": "public", "return": "Enumeration<Collector.MetricFamilySamples>", "signature": "Enumeration<Collector.MetricFamilySamples> filteredMetricFamilySamples(Set<String> includedNames)", "full_signature": "public Enumeration<Collector.MetricFamilySamples> filteredMetricFamilySamples(Set<String> includedNames)", "class_method_signature": "CollectorRegistry.filteredMetricFamilySamples(Set<String> includedNames)", "testcase": false, "constructor": false}, {"identifier": "getSampleValue", "parameters": "(String name)", "modifiers": "public", "return": "Double", "signature": "Double getSampleValue(String name)", "full_signature": "public Double getSampleValue(String name)", "class_method_signature": "CollectorRegistry.getSampleValue(String name)", "testcase": false, "constructor": false}, {"identifier": "getSampleValue", "parameters": "(String name, String[] labelNames, String[] labelValues)", "modifiers": "public", "return": "Double", "signature": "Double getSampleValue(String name, String[] labelNames, String[] labelValues)", "full_signature": "public Double getSampleValue(String name, String[] labelNames, String[] labelValues)", "class_method_signature": "CollectorRegistry.getSampleValue(String name, String[] labelNames, String[] labelValues)", "testcase": false, "constructor": false}], "file": "simpleclient/src/main/java/io/prometheus/client/CollectorRegistry.java"}, "focal_method": {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void clear() {\n    synchronized (namesCollectorsLock) {\n      collectorsToNames.clear();\n      namesToCollectors.clear();\n    }\n  }", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "CollectorRegistry.clear()", "testcase": false, "constructor": false, "invocations": ["clear", "clear"]}, "repository": {"repo_id": 7997879, "url": "https://github.com/prometheus/client_java", "stars": 1094, "created": "2/3/2013 10:55:49 PM +00:00", "updates": "2020-01-25T01:49:53+00:00", "fork": "False", "license": "licensed"}}