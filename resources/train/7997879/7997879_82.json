{"test_class": {"identifier": "GraphiteNamePatternTest", "superclass": "", "interfaces": "", "fields": [], "file": "simpleclient_dropwizard/src/test/java/io/prometheus/client/dropwizard/samplebuilder/GraphiteNamePatternTest.java"}, "test_case": {"identifier": "createNew_WHEN_ValidPattern_THEN_ShouldInitInternalPatternSuccessfully", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createNew_WHEN_ValidPattern_THEN_ShouldInitInternalPatternSuccessfully() {\n        final Map<String, String> validPatterns = new HashMap<String, String>();\n        validPatterns.put(\"org.test.controller.gather.status.400\", \"^\\\\Qorg.test.controller.gather.status.400\\\\E$\");\n        validPatterns.put(\"org.test.controller.*.status.400\", \"^\\\\Qorg.test.controller.\\\\E([^.]*)\\\\Q.status.400\\\\E$\");\n        validPatterns.put(\"org.test.controller.*.status.*\", \"^\\\\Qorg.test.controller.\\\\E([^.]*)\\\\Q.status.\\\\E([^.]*)\\\\Q\\\\E$\");\n        validPatterns.put(\"*.test.controller.*.status.*\", \"^\\\\Q\\\\E([^.]*)\\\\Q.test.controller.\\\\E([^.]*)\\\\Q.status.\\\\E([^.]*)\\\\Q\\\\E$\");\n\n        for (Map.Entry<String, String> expected : validPatterns.entrySet()) {\n            final GraphiteNamePattern pattern = new GraphiteNamePattern(expected.getKey());\n            Assertions.assertThat(pattern.getPatternString()).isEqualTo(expected.getValue());\n        }\n    }", "signature": "void createNew_WHEN_ValidPattern_THEN_ShouldInitInternalPatternSuccessfully()", "full_signature": "@Test public void createNew_WHEN_ValidPattern_THEN_ShouldInitInternalPatternSuccessfully()", "class_method_signature": "GraphiteNamePatternTest.createNew_WHEN_ValidPattern_THEN_ShouldInitInternalPatternSuccessfully()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "put", "entrySet", "getKey", "isEqualTo", "assertThat", "getPatternString", "getValue"]}, "focal_class": {"identifier": "GraphiteNamePattern", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern VALIDATION_PATTERN = Pattern.compile(METRIC_GLOB_REGEX);", "modifier": "private static final", "type": "Pattern", "declarator": "VALIDATION_PATTERN = Pattern.compile(METRIC_GLOB_REGEX)", "var_name": "VALIDATION_PATTERN"}, {"original_string": "private Pattern pattern;", "modifier": "private", "type": "Pattern", "declarator": "pattern", "var_name": "pattern"}, {"original_string": "private String patternStr;", "modifier": "private", "type": "String", "declarator": "patternStr", "var_name": "patternStr"}], "methods": [{"identifier": "GraphiteNamePattern", "parameters": "(final String pattern)", "modifiers": "", "return": "", "signature": " GraphiteNamePattern(final String pattern)", "full_signature": "  GraphiteNamePattern(final String pattern)", "class_method_signature": "GraphiteNamePattern.GraphiteNamePattern(final String pattern)", "testcase": false, "constructor": true}, {"identifier": "matches", "parameters": "(final String metricName)", "modifiers": "", "return": "boolean", "signature": "boolean matches(final String metricName)", "full_signature": " boolean matches(final String metricName)", "class_method_signature": "GraphiteNamePattern.matches(final String metricName)", "testcase": false, "constructor": false}, {"identifier": "extractParameters", "parameters": "(final String metricName)", "modifiers": "", "return": "Map<String, String>", "signature": "Map<String, String> extractParameters(final String metricName)", "full_signature": " Map<String, String> extractParameters(final String metricName)", "class_method_signature": "GraphiteNamePattern.extractParameters(final String metricName)", "testcase": false, "constructor": false}, {"identifier": "initializePattern", "parameters": "(final String pattern)", "modifiers": "private", "return": "void", "signature": "void initializePattern(final String pattern)", "full_signature": "private void initializePattern(final String pattern)", "class_method_signature": "GraphiteNamePattern.initializePattern(final String pattern)", "testcase": false, "constructor": false}, {"identifier": "getPatternString", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getPatternString()", "full_signature": " String getPatternString()", "class_method_signature": "GraphiteNamePattern.getPatternString()", "testcase": false, "constructor": false}], "file": "simpleclient_dropwizard/src/main/java/io/prometheus/client/dropwizard/samplebuilder/GraphiteNamePattern.java"}, "focal_method": {"identifier": "getPatternString", "parameters": "()", "modifiers": "", "return": "String", "body": "String getPatternString() {\n        return this.patternStr;\n    }", "signature": "String getPatternString()", "full_signature": " String getPatternString()", "class_method_signature": "GraphiteNamePattern.getPatternString()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 7997879, "url": "https://github.com/prometheus/client_java", "stars": 1094, "created": "2/3/2013 10:55:49 PM +00:00", "updates": "2020-01-25T01:49:53+00:00", "fork": "False", "license": "licensed"}}