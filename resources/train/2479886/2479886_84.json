{"test_class": {"identifier": "TemplateProcessorTest", "superclass": "", "interfaces": "", "fields": [], "file": "yamcs-core/src/test/java/org/yamcs/templating/TemplateProcessorTest.java"}, "test_case": {"identifier": "testMapVariable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMapVariable() {\n        String template = \"Hello {{ m.a }} and {{ m.b }}!\";\n        Map<String, Object> nested = ImmutableMap.of(\"a\", \"XX\", \"b\", \"YY\");\n        Map<String, Object> args = ImmutableMap.of(\"m\", nested);\n        assertEquals(\"Hello XX and YY!\", TemplateProcessor.process(template, args));\n    }", "signature": "void testMapVariable()", "full_signature": "@Test public void testMapVariable()", "class_method_signature": "TemplateProcessorTest.testMapVariable()", "testcase": true, "constructor": false, "invocations": ["of", "of", "assertEquals", "process"]}, "focal_class": {"identifier": "TemplateProcessor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern VAR_BEGIN = Pattern.compile(\"\\\\{\\\\{\");", "modifier": "private static final", "type": "Pattern", "declarator": "VAR_BEGIN = Pattern.compile(\"\\\\{\\\\{\")", "var_name": "VAR_BEGIN"}, {"original_string": "private static final Pattern VAR_CONTINUE = Pattern.compile(\"\\\\s?([\\\\w_\\\\.]+)\\\\s?\\\\}\\\\}\");", "modifier": "private static final", "type": "Pattern", "declarator": "VAR_CONTINUE = Pattern.compile(\"\\\\s?([\\\\w_\\\\.]+)\\\\s?\\\\}\\\\}\")", "var_name": "VAR_CONTINUE"}, {"original_string": "private static final Pattern TAG_BEGIN = Pattern.compile(\"\\\\{\\\\%\");", "modifier": "private static final", "type": "Pattern", "declarator": "TAG_BEGIN = Pattern.compile(\"\\\\{\\\\%\")", "var_name": "TAG_BEGIN"}, {"original_string": "private static final Pattern TAG_CONTINUE = Pattern.compile(\"\\\\s?([\\\\w]+)\\\\s+([^\\\\{\\\\}]*)\\\\%\\\\}\");", "modifier": "private static final", "type": "Pattern", "declarator": "TAG_CONTINUE = Pattern.compile(\"\\\\s?([\\\\w]+)\\\\s+([^\\\\{\\\\}]*)\\\\%\\\\}\")", "var_name": "TAG_CONTINUE"}, {"original_string": "private String template;", "modifier": "private", "type": "String", "declarator": "template", "var_name": "template"}, {"original_string": "private String lookahead;", "modifier": "private", "type": "String", "declarator": "lookahead", "var_name": "lookahead"}, {"original_string": "private Stack<PendingCondition> pendingConditions = new Stack<>();", "modifier": "private", "type": "Stack<PendingCondition>", "declarator": "pendingConditions = new Stack<>()", "var_name": "pendingConditions"}], "methods": [{"identifier": "TemplateProcessor", "parameters": "(String template)", "modifiers": "public", "return": "", "signature": " TemplateProcessor(String template)", "full_signature": "public  TemplateProcessor(String template)", "class_method_signature": "TemplateProcessor.TemplateProcessor(String template)", "testcase": false, "constructor": true}, {"identifier": "process", "parameters": "(String template, Map<String, Object> args)", "modifiers": "public static", "return": "String", "signature": "String process(String template, Map<String, Object> args)", "full_signature": "public static String process(String template, Map<String, Object> args)", "class_method_signature": "TemplateProcessor.process(String template, Map<String, Object> args)", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(Map<String, Object> args)", "modifiers": "public", "return": "String", "signature": "String process(Map<String, Object> args)", "full_signature": "public String process(Map<String, Object> args)", "class_method_signature": "TemplateProcessor.process(Map<String, Object> args)", "testcase": false, "constructor": false}, {"identifier": "processTag", "parameters": "(Scanner scanner, String tagName, Map<String, Object> args)", "modifiers": "private", "return": "void", "signature": "void processTag(Scanner scanner, String tagName, Map<String, Object> args)", "full_signature": "private void processTag(Scanner scanner, String tagName, Map<String, Object> args)", "class_method_signature": "TemplateProcessor.processTag(Scanner scanner, String tagName, Map<String, Object> args)", "testcase": false, "constructor": false}, {"identifier": "processIf", "parameters": "(Scanner scanner, String condition, Map<String, Object> args)", "modifiers": "private", "return": "void", "signature": "void processIf(Scanner scanner, String condition, Map<String, Object> args)", "full_signature": "private void processIf(Scanner scanner, String condition, Map<String, Object> args)", "class_method_signature": "TemplateProcessor.processIf(Scanner scanner, String condition, Map<String, Object> args)", "testcase": false, "constructor": false}, {"identifier": "processElif", "parameters": "(Scanner scanner, String condition, Map<String, Object> args)", "modifiers": "private", "return": "void", "signature": "void processElif(Scanner scanner, String condition, Map<String, Object> args)", "full_signature": "private void processElif(Scanner scanner, String condition, Map<String, Object> args)", "class_method_signature": "TemplateProcessor.processElif(Scanner scanner, String condition, Map<String, Object> args)", "testcase": false, "constructor": false}, {"identifier": "processElse", "parameters": "(Scanner scanner, Map<String, Object> args)", "modifiers": "private", "return": "void", "signature": "void processElse(Scanner scanner, Map<String, Object> args)", "full_signature": "private void processElse(Scanner scanner, Map<String, Object> args)", "class_method_signature": "TemplateProcessor.processElse(Scanner scanner, Map<String, Object> args)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(String name, Map<String, Object> args)", "modifiers": "private", "return": "Object", "signature": "Object getValue(String name, Map<String, Object> args)", "full_signature": "private Object getValue(String name, Map<String, Object> args)", "class_method_signature": "TemplateProcessor.getValue(String name, Map<String, Object> args)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(String name, Map<String, Object> args, String nameContext)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "Object", "signature": "Object getValue(String name, Map<String, Object> args, String nameContext)", "full_signature": "@SuppressWarnings(\"unchecked\") private Object getValue(String name, Map<String, Object> args, String nameContext)", "class_method_signature": "TemplateProcessor.getValue(String name, Map<String, Object> args, String nameContext)", "testcase": false, "constructor": false}, {"identifier": "isTruthy", "parameters": "(Object value)", "modifiers": "private", "return": "boolean", "signature": "boolean isTruthy(Object value)", "full_signature": "private boolean isTruthy(Object value)", "class_method_signature": "TemplateProcessor.isTruthy(Object value)", "testcase": false, "constructor": false}, {"identifier": "isFalsy", "parameters": "(Object value)", "modifiers": "private", "return": "boolean", "signature": "boolean isFalsy(Object value)", "full_signature": "private boolean isFalsy(Object value)", "class_method_signature": "TemplateProcessor.isFalsy(Object value)", "testcase": false, "constructor": false}, {"identifier": "processEndif", "parameters": "(Scanner scanner)", "modifiers": "private", "return": "void", "signature": "void processEndif(Scanner scanner)", "full_signature": "private void processEndif(Scanner scanner)", "class_method_signature": "TemplateProcessor.processEndif(Scanner scanner)", "testcase": false, "constructor": false}, {"identifier": "processComment", "parameters": "(Scanner scanner)", "modifiers": "private", "return": "void", "signature": "void processComment(Scanner scanner)", "full_signature": "private void processComment(Scanner scanner)", "class_method_signature": "TemplateProcessor.processComment(Scanner scanner)", "testcase": false, "constructor": false}], "file": "yamcs-core/src/main/java/org/yamcs/templating/TemplateProcessor.java"}, "focal_method": {"identifier": "process", "parameters": "(String template, Map<String, Object> args)", "modifiers": "public static", "return": "String", "body": "public static String process(String template, Map<String, Object> args) {\n        return new TemplateProcessor(template).process(args);\n    }", "signature": "String process(String template, Map<String, Object> args)", "full_signature": "public static String process(String template, Map<String, Object> args)", "class_method_signature": "TemplateProcessor.process(String template, Map<String, Object> args)", "testcase": false, "constructor": false, "invocations": ["process"]}, "repository": {"repo_id": 2479886, "url": "https://github.com/yamcs/yamcs", "stars": 30, "created": "9/29/2011 4:29:56 AM +00:00", "updates": "2020-01-24T11:39:15+00:00", "fork": "False", "license": "licensed"}}