{"test_class": {"identifier": "XtceToGpbAssemblerTest", "superclass": "", "interfaces": "", "fields": [], "file": "yamcs-core/src/test/java/org/yamcs/http/api/XtceToGpbAssemblerTest.java"}, "test_case": {"identifier": "toCommandInfo_calib_test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toCommandInfo_calib_test() throws Exception {\n        // Arrange\n        YConfiguration.setupTest(\"refmdb\");\n        XtceDbFactory.reset();\n        XtceDb db = XtceDbFactory.getInstance(\"refmdb\");\n        MetaCommand cmd1 = db.getMetaCommand(\"/REFMDB/SUBSYS1/CALIB_TC\");\n\n        // Act\n        CommandInfo commandInfo = XtceToGpbAssembler.toCommandInfo(cmd1, DetailLevel.FULL);\n\n        // Assert\n        assertEquals(\"CALIB_TC\", commandInfo.getName());\n        assertEquals(\"enumeration\", commandInfo.getArgument(3).getType().getEngType());\n        assertEquals(\"value0\", commandInfo.getArgument(3).getType().getEnumValue(0).getLabel());\n        assertEquals(\"value2\", commandInfo.getArgument(3).getType().getEnumValue(2).getLabel());\n        assertTrue(\"should not have a range set\", !commandInfo.getArgument(0).getType().hasRangeMin());\n    }", "signature": "void toCommandInfo_calib_test()", "full_signature": "@Test public void toCommandInfo_calib_test()", "class_method_signature": "XtceToGpbAssemblerTest.toCommandInfo_calib_test()", "testcase": true, "constructor": false, "invocations": ["setupTest", "reset", "getInstance", "getMetaCommand", "toCommandInfo", "assertEquals", "getName", "assertEquals", "getEngType", "getType", "getArgument", "assertEquals", "getLabel", "getEnumValue", "getType", "getArgument", "assertEquals", "getLabel", "getEnumValue", "getType", "getArgument", "assertTrue", "hasRangeMin", "getType", "getArgument"]}, "focal_class": {"identifier": "XtceToGpbAssembler", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "toContainerInfo", "parameters": "(SequenceContainer c, DetailLevel detail)", "modifiers": "public static", "return": "ContainerInfo", "signature": "ContainerInfo toContainerInfo(SequenceContainer c, DetailLevel detail)", "full_signature": "public static ContainerInfo toContainerInfo(SequenceContainer c, DetailLevel detail)", "class_method_signature": "XtceToGpbAssembler.toContainerInfo(SequenceContainer c, DetailLevel detail)", "testcase": false, "constructor": false}, {"identifier": "toSequenceEntryInfo", "parameters": "(SequenceEntry e, DetailLevel detail)", "modifiers": "public static", "return": "SequenceEntryInfo", "signature": "SequenceEntryInfo toSequenceEntryInfo(SequenceEntry e, DetailLevel detail)", "full_signature": "public static SequenceEntryInfo toSequenceEntryInfo(SequenceEntry e, DetailLevel detail)", "class_method_signature": "XtceToGpbAssembler.toSequenceEntryInfo(SequenceEntry e, DetailLevel detail)", "testcase": false, "constructor": false}, {"identifier": "toFixedValueInfo", "parameters": "(FixedValueEntry entry)", "modifiers": "public static", "return": "FixedValueInfo", "signature": "FixedValueInfo toFixedValueInfo(FixedValueEntry entry)", "full_signature": "public static FixedValueInfo toFixedValueInfo(FixedValueEntry entry)", "class_method_signature": "XtceToGpbAssembler.toFixedValueInfo(FixedValueEntry entry)", "testcase": false, "constructor": false}, {"identifier": "toRepeatInfo", "parameters": "(Repeat xtceRepeat, DetailLevel detail)", "modifiers": "public static", "return": "RepeatInfo", "signature": "RepeatInfo toRepeatInfo(Repeat xtceRepeat, DetailLevel detail)", "full_signature": "public static RepeatInfo toRepeatInfo(Repeat xtceRepeat, DetailLevel detail)", "class_method_signature": "XtceToGpbAssembler.toRepeatInfo(Repeat xtceRepeat, DetailLevel detail)", "testcase": false, "constructor": false}, {"identifier": "toCommandContainerInfo", "parameters": "(CommandContainer container, DetailLevel detail)", "modifiers": "public static", "return": "CommandContainerInfo", "signature": "CommandContainerInfo toCommandContainerInfo(CommandContainer container, DetailLevel detail)", "full_signature": "public static CommandContainerInfo toCommandContainerInfo(CommandContainer container, DetailLevel detail)", "class_method_signature": "XtceToGpbAssembler.toCommandContainerInfo(CommandContainer container, DetailLevel detail)", "testcase": false, "constructor": false}, {"identifier": "toCommandInfo", "parameters": "(MetaCommand cmd, DetailLevel detail)", "modifiers": "public static", "return": "CommandInfo", "signature": "CommandInfo toCommandInfo(MetaCommand cmd, DetailLevel detail)", "full_signature": "public static CommandInfo toCommandInfo(MetaCommand cmd, DetailLevel detail)", "class_method_signature": "XtceToGpbAssembler.toCommandInfo(MetaCommand cmd, DetailLevel detail)", "testcase": false, "constructor": false}, {"identifier": "toArgumentInfo", "parameters": "(Argument xtceArgument)", "modifiers": "public static", "return": "ArgumentInfo", "signature": "ArgumentInfo toArgumentInfo(Argument xtceArgument)", "full_signature": "public static ArgumentInfo toArgumentInfo(Argument xtceArgument)", "class_method_signature": "XtceToGpbAssembler.toArgumentInfo(Argument xtceArgument)", "testcase": false, "constructor": false}, {"identifier": "toArgumentAssignmentInfo", "parameters": "(ArgumentAssignment xtceArgument)", "modifiers": "public static", "return": "ArgumentAssignmentInfo", "signature": "ArgumentAssignmentInfo toArgumentAssignmentInfo(ArgumentAssignment xtceArgument)", "full_signature": "public static ArgumentAssignmentInfo toArgumentAssignmentInfo(ArgumentAssignment xtceArgument)", "class_method_signature": "XtceToGpbAssembler.toArgumentAssignmentInfo(ArgumentAssignment xtceArgument)", "testcase": false, "constructor": false}, {"identifier": "toTransmissionConstraintInfo", "parameters": "(TransmissionConstraint xtceConstraint)", "modifiers": "public static", "return": "TransmissionConstraintInfo", "signature": "TransmissionConstraintInfo toTransmissionConstraintInfo(TransmissionConstraint xtceConstraint)", "full_signature": "public static TransmissionConstraintInfo toTransmissionConstraintInfo(TransmissionConstraint xtceConstraint)", "class_method_signature": "XtceToGpbAssembler.toTransmissionConstraintInfo(TransmissionConstraint xtceConstraint)", "testcase": false, "constructor": false}, {"identifier": "toVerifierInfo", "parameters": "(CommandVerifier xtceVerifier)", "modifiers": "public static", "return": "VerifierInfo", "signature": "VerifierInfo toVerifierInfo(CommandVerifier xtceVerifier)", "full_signature": "public static VerifierInfo toVerifierInfo(CommandVerifier xtceVerifier)", "class_method_signature": "XtceToGpbAssembler.toVerifierInfo(CommandVerifier xtceVerifier)", "testcase": false, "constructor": false}, {"identifier": "toTerminationType", "parameters": "(TerminationAction xtceTerminationAction)", "modifiers": "private static", "return": "TerminationActionType", "signature": "TerminationActionType toTerminationType(TerminationAction xtceTerminationAction)", "full_signature": "private static TerminationActionType toTerminationType(TerminationAction xtceTerminationAction)", "class_method_signature": "XtceToGpbAssembler.toTerminationType(TerminationAction xtceTerminationAction)", "testcase": false, "constructor": false}, {"identifier": "toCheckWindow", "parameters": "(CheckWindow checkWindow)", "modifiers": "private static", "return": "CheckWindowInfo", "signature": "CheckWindowInfo toCheckWindow(CheckWindow checkWindow)", "full_signature": "private static CheckWindowInfo toCheckWindow(CheckWindow checkWindow)", "class_method_signature": "XtceToGpbAssembler.toCheckWindow(CheckWindow checkWindow)", "testcase": false, "constructor": false}, {"identifier": "toComparisonInfo", "parameters": "(Comparison xtceComparison)", "modifiers": "public static", "return": "ComparisonInfo", "signature": "ComparisonInfo toComparisonInfo(Comparison xtceComparison)", "full_signature": "public static ComparisonInfo toComparisonInfo(Comparison xtceComparison)", "class_method_signature": "XtceToGpbAssembler.toComparisonInfo(Comparison xtceComparison)", "testcase": false, "constructor": false}, {"identifier": "toOperatorType", "parameters": "(OperatorType xtceOperator)", "modifiers": "public static", "return": "ComparisonInfo.OperatorType", "signature": "ComparisonInfo.OperatorType toOperatorType(OperatorType xtceOperator)", "full_signature": "public static ComparisonInfo.OperatorType toOperatorType(OperatorType xtceOperator)", "class_method_signature": "XtceToGpbAssembler.toOperatorType(OperatorType xtceOperator)", "testcase": false, "constructor": false}, {"identifier": "toSignificanceInfo", "parameters": "(Significance xtceSignificance)", "modifiers": "public static", "return": "SignificanceInfo", "signature": "SignificanceInfo toSignificanceInfo(Significance xtceSignificance)", "full_signature": "public static SignificanceInfo toSignificanceInfo(Significance xtceSignificance)", "class_method_signature": "XtceToGpbAssembler.toSignificanceInfo(Significance xtceSignificance)", "testcase": false, "constructor": false}, {"identifier": "toSignificanceLevelType", "parameters": "(Levels level)", "modifiers": "public static", "return": "SignificanceLevelType", "signature": "SignificanceLevelType toSignificanceLevelType(Levels level)", "full_signature": "public static SignificanceLevelType toSignificanceLevelType(Levels level)", "class_method_signature": "XtceToGpbAssembler.toSignificanceLevelType(Levels level)", "testcase": false, "constructor": false}, {"identifier": "toParameterInfo", "parameters": "(ParameterInstanceRef ref)", "modifiers": "public static", "return": "ParameterInfo", "signature": "ParameterInfo toParameterInfo(ParameterInstanceRef ref)", "full_signature": "public static ParameterInfo toParameterInfo(ParameterInstanceRef ref)", "class_method_signature": "XtceToGpbAssembler.toParameterInfo(ParameterInstanceRef ref)", "testcase": false, "constructor": false}, {"identifier": "toParameterInfo", "parameters": "(Parameter p, DetailLevel detail)", "modifiers": "public static", "return": "ParameterInfo", "signature": "ParameterInfo toParameterInfo(Parameter p, DetailLevel detail)", "full_signature": "public static ParameterInfo toParameterInfo(Parameter p, DetailLevel detail)", "class_method_signature": "XtceToGpbAssembler.toParameterInfo(Parameter p, DetailLevel detail)", "testcase": false, "constructor": false}, {"identifier": "toAncillaryDataInfo", "parameters": "(AncillaryData data)", "modifiers": "public static", "return": "AncillaryDataInfo", "signature": "AncillaryDataInfo toAncillaryDataInfo(AncillaryData data)", "full_signature": "public static AncillaryDataInfo toAncillaryDataInfo(AncillaryData data)", "class_method_signature": "XtceToGpbAssembler.toAncillaryDataInfo(AncillaryData data)", "testcase": false, "constructor": false}, {"identifier": "toParameterTypeInfo", "parameters": "(ParameterType parameterType, DetailLevel detail)", "modifiers": "public static", "return": "ParameterTypeInfo", "signature": "ParameterTypeInfo toParameterTypeInfo(ParameterType parameterType, DetailLevel detail)", "full_signature": "public static ParameterTypeInfo toParameterTypeInfo(ParameterType parameterType, DetailLevel detail)", "class_method_signature": "XtceToGpbAssembler.toParameterTypeInfo(ParameterType parameterType, DetailLevel detail)", "testcase": false, "constructor": false}, {"identifier": "getDataTypeInitialValue", "parameters": "(BaseDataType dataType)", "modifiers": "private static", "return": "String", "signature": "String getDataTypeInitialValue(BaseDataType dataType)", "full_signature": "private static String getDataTypeInitialValue(BaseDataType dataType)", "class_method_signature": "XtceToGpbAssembler.getDataTypeInitialValue(BaseDataType dataType)", "testcase": false, "constructor": false}, {"identifier": "toArgumentTypeInfo", "parameters": "(ArgumentType argumentType)", "modifiers": "public static", "return": "ArgumentTypeInfo", "signature": "ArgumentTypeInfo toArgumentTypeInfo(ArgumentType argumentType)", "full_signature": "public static ArgumentTypeInfo toArgumentTypeInfo(ArgumentType argumentType)", "class_method_signature": "XtceToGpbAssembler.toArgumentTypeInfo(ArgumentType argumentType)", "testcase": false, "constructor": false}, {"identifier": "toComparisons", "parameters": "(MatchCriteria matchCriteria)", "modifiers": "public static", "return": "List<ComparisonInfo>", "signature": "List<ComparisonInfo> toComparisons(MatchCriteria matchCriteria)", "full_signature": "public static List<ComparisonInfo> toComparisons(MatchCriteria matchCriteria)", "class_method_signature": "XtceToGpbAssembler.toComparisons(MatchCriteria matchCriteria)", "testcase": false, "constructor": false}, {"identifier": "toDataEncodingInfo", "parameters": "(DataEncoding xtceDataEncoding)", "modifiers": "public static", "return": "DataEncodingInfo", "signature": "DataEncodingInfo toDataEncodingInfo(DataEncoding xtceDataEncoding)", "full_signature": "public static DataEncodingInfo toDataEncodingInfo(DataEncoding xtceDataEncoding)", "class_method_signature": "XtceToGpbAssembler.toDataEncodingInfo(DataEncoding xtceDataEncoding)", "testcase": false, "constructor": false}, {"identifier": "toTextualEncoding", "parameters": "(StringDataEncoding sde)", "modifiers": "public static", "return": "String", "signature": "String toTextualEncoding(StringDataEncoding sde)", "full_signature": "public static String toTextualEncoding(StringDataEncoding sde)", "class_method_signature": "XtceToGpbAssembler.toTextualEncoding(StringDataEncoding sde)", "testcase": false, "constructor": false}, {"identifier": "toEnumValue", "parameters": "(ValueEnumeration xtceValue)", "modifiers": "public static", "return": "Mdb.EnumValue", "signature": "Mdb.EnumValue toEnumValue(ValueEnumeration xtceValue)", "full_signature": "public static Mdb.EnumValue toEnumValue(ValueEnumeration xtceValue)", "class_method_signature": "XtceToGpbAssembler.toEnumValue(ValueEnumeration xtceValue)", "testcase": false, "constructor": false}, {"identifier": "toUnitInfo", "parameters": "(UnitType ut)", "modifiers": "public static", "return": "UnitInfo", "signature": "UnitInfo toUnitInfo(UnitType ut)", "full_signature": "public static UnitInfo toUnitInfo(UnitType ut)", "class_method_signature": "XtceToGpbAssembler.toUnitInfo(UnitType ut)", "testcase": false, "constructor": false}, {"identifier": "toCalibratorInfo", "parameters": "(Calibrator calibrator)", "modifiers": "public static", "return": "CalibratorInfo", "signature": "CalibratorInfo toCalibratorInfo(Calibrator calibrator)", "full_signature": "public static CalibratorInfo toCalibratorInfo(Calibrator calibrator)", "class_method_signature": "XtceToGpbAssembler.toCalibratorInfo(Calibrator calibrator)", "testcase": false, "constructor": false}, {"identifier": "toAlarmInfo", "parameters": "(NumericAlarm numericAlarm)", "modifiers": "public static", "return": "AlarmInfo", "signature": "AlarmInfo toAlarmInfo(NumericAlarm numericAlarm)", "full_signature": "public static AlarmInfo toAlarmInfo(NumericAlarm numericAlarm)", "class_method_signature": "XtceToGpbAssembler.toAlarmInfo(NumericAlarm numericAlarm)", "testcase": false, "constructor": false}, {"identifier": "toContextAlarmInfo", "parameters": "(NumericContextAlarm contextAlarm)", "modifiers": "private static", "return": "ContextAlarmInfo", "signature": "ContextAlarmInfo toContextAlarmInfo(NumericContextAlarm contextAlarm)", "full_signature": "private static ContextAlarmInfo toContextAlarmInfo(NumericContextAlarm contextAlarm)", "class_method_signature": "XtceToGpbAssembler.toContextAlarmInfo(NumericContextAlarm contextAlarm)", "testcase": false, "constructor": false}, {"identifier": "toAlarmInfo", "parameters": "(EnumerationAlarm enumerationAlarm)", "modifiers": "public static", "return": "AlarmInfo", "signature": "AlarmInfo toAlarmInfo(EnumerationAlarm enumerationAlarm)", "full_signature": "public static AlarmInfo toAlarmInfo(EnumerationAlarm enumerationAlarm)", "class_method_signature": "XtceToGpbAssembler.toAlarmInfo(EnumerationAlarm enumerationAlarm)", "testcase": false, "constructor": false}, {"identifier": "toContextAlarmInfo", "parameters": "(EnumerationContextAlarm contextAlarm)", "modifiers": "private static", "return": "ContextAlarmInfo", "signature": "ContextAlarmInfo toContextAlarmInfo(EnumerationContextAlarm contextAlarm)", "full_signature": "private static ContextAlarmInfo toContextAlarmInfo(EnumerationContextAlarm contextAlarm)", "class_method_signature": "XtceToGpbAssembler.toContextAlarmInfo(EnumerationContextAlarm contextAlarm)", "testcase": false, "constructor": false}, {"identifier": "toEnumerationAlarm", "parameters": "(EnumerationAlarmItem xtceAlarmItem)", "modifiers": "public static", "return": "Mdb.EnumerationAlarm", "signature": "Mdb.EnumerationAlarm toEnumerationAlarm(EnumerationAlarmItem xtceAlarmItem)", "full_signature": "public static Mdb.EnumerationAlarm toEnumerationAlarm(EnumerationAlarmItem xtceAlarmItem)", "class_method_signature": "XtceToGpbAssembler.toEnumerationAlarm(EnumerationAlarmItem xtceAlarmItem)", "testcase": false, "constructor": false}, {"identifier": "toAlgorithmInfo", "parameters": "(Algorithm a, DetailLevel detail)", "modifiers": "public static", "return": "AlgorithmInfo", "signature": "AlgorithmInfo toAlgorithmInfo(Algorithm a, DetailLevel detail)", "full_signature": "public static AlgorithmInfo toAlgorithmInfo(Algorithm a, DetailLevel detail)", "class_method_signature": "XtceToGpbAssembler.toAlgorithmInfo(Algorithm a, DetailLevel detail)", "testcase": false, "constructor": false}, {"identifier": "toInputParameterInfo", "parameters": "(InputParameter xtceInput)", "modifiers": "public static", "return": "InputParameterInfo", "signature": "InputParameterInfo toInputParameterInfo(InputParameter xtceInput)", "full_signature": "public static InputParameterInfo toInputParameterInfo(InputParameter xtceInput)", "class_method_signature": "XtceToGpbAssembler.toInputParameterInfo(InputParameter xtceInput)", "testcase": false, "constructor": false}, {"identifier": "toOutputParameterInfo", "parameters": "(OutputParameter xtceOutput)", "modifiers": "public static", "return": "OutputParameterInfo", "signature": "OutputParameterInfo toOutputParameterInfo(OutputParameter xtceOutput)", "full_signature": "public static OutputParameterInfo toOutputParameterInfo(OutputParameter xtceOutput)", "class_method_signature": "XtceToGpbAssembler.toOutputParameterInfo(OutputParameter xtceOutput)", "testcase": false, "constructor": false}, {"identifier": "toSpaceSystemInfo", "parameters": "(SpaceSystem ss)", "modifiers": "public static", "return": "SpaceSystemInfo", "signature": "SpaceSystemInfo toSpaceSystemInfo(SpaceSystem ss)", "full_signature": "public static SpaceSystemInfo toSpaceSystemInfo(SpaceSystem ss)", "class_method_signature": "XtceToGpbAssembler.toSpaceSystemInfo(SpaceSystem ss)", "testcase": false, "constructor": false}], "file": "yamcs-core/src/main/java/org/yamcs/http/api/XtceToGpbAssembler.java"}, "focal_method": {"identifier": "toCommandInfo", "parameters": "(MetaCommand cmd, DetailLevel detail)", "modifiers": "public static", "return": "CommandInfo", "body": "public static CommandInfo toCommandInfo(MetaCommand cmd, DetailLevel detail) {\n        CommandInfo.Builder cb = CommandInfo.newBuilder();\n\n        cb.setName(cmd.getName());\n        cb.setQualifiedName(cmd.getQualifiedName());\n\n        if (detail == DetailLevel.SUMMARY || detail == DetailLevel.FULL) {\n            if (cmd.getShortDescription() != null) {\n                cb.setShortDescription(cmd.getShortDescription());\n            }\n            if (cmd.getLongDescription() != null) {\n                cb.setLongDescription(cmd.getLongDescription());\n            }\n            if (cmd.getAliasSet() != null) {\n                Map<String, String> aliases = cmd.getAliasSet().getAliases();\n                for (Entry<String, String> me : aliases.entrySet()) {\n                    cb.addAlias(NamedObjectId.newBuilder().setName(me.getValue()).setNamespace(me.getKey()));\n                }\n            }\n            if (cmd.getAncillaryData() != null) {\n                for (AncillaryData data : cmd.getAncillaryData()) {\n                    cb.putAncillaryData(data.getName(), toAncillaryDataInfo(data));\n                }\n            }\n\n            if (cmd.getDefaultSignificance() != null) {\n                cb.setSignificance(toSignificanceInfo(cmd.getDefaultSignificance()));\n            }\n            if (cmd.getArgumentList() != null) {\n                for (Argument xtceArgument : cmd.getArgumentList()) {\n                    cb.addArgument(toArgumentInfo(xtceArgument));\n                }\n            }\n            if (cmd.getArgumentAssignmentList() != null) {\n                for (ArgumentAssignment xtceAssignment : cmd.getArgumentAssignmentList()) {\n                    cb.addArgumentAssignment(toArgumentAssignmentInfo(xtceAssignment));\n                }\n            }\n            cb.setAbstract(cmd.isAbstract());\n            if (cmd.getTransmissionConstraintList() != null) {\n                for (TransmissionConstraint xtceConstraint : cmd.getTransmissionConstraintList()) {\n                    cb.addConstraint(toTransmissionConstraintInfo(xtceConstraint));\n                }\n            }\n\n            if (cmd.getCommandContainer() != null) {\n                CommandContainer container = cmd.getCommandContainer();\n                cb.setCommandContainer(toCommandContainerInfo(container, DetailLevel.FULL));\n            }\n\n            if (detail == DetailLevel.SUMMARY) {\n                if (cmd.getBaseMetaCommand() != null) {\n                    cb.setBaseCommand(toCommandInfo(cmd.getBaseMetaCommand(), DetailLevel.LINK));\n                }\n            } else if (detail == DetailLevel.FULL) {\n                if (cmd.getBaseMetaCommand() != null) {\n                    cb.setBaseCommand(toCommandInfo(cmd.getBaseMetaCommand(), DetailLevel.FULL));\n                }\n            }\n\n            for (CommandVerifier verifier : cmd.getCommandVerifiers()) {\n                cb.addVerifier(toVerifierInfo(verifier));\n            }\n        }\n\n        return cb.build();\n    }", "signature": "CommandInfo toCommandInfo(MetaCommand cmd, DetailLevel detail)", "full_signature": "public static CommandInfo toCommandInfo(MetaCommand cmd, DetailLevel detail)", "class_method_signature": "XtceToGpbAssembler.toCommandInfo(MetaCommand cmd, DetailLevel detail)", "testcase": false, "constructor": false, "invocations": ["newBuilder", "setName", "getName", "setQualifiedName", "getQualifiedName", "getShortDescription", "setShortDescription", "getShortDescription", "getLongDescription", "setLongDescription", "getLongDescription", "getAliasSet", "getAliases", "getAliasSet", "entrySet", "addAlias", "setNamespace", "setName", "newBuilder", "getValue", "getKey", "getAncillaryData", "getAncillaryData", "putAncillaryData", "getName", "toAncillaryDataInfo", "getDefaultSignificance", "setSignificance", "toSignificanceInfo", "getDefaultSignificance", "getArgumentList", "getArgumentList", "addArgument", "toArgumentInfo", "getArgumentAssignmentList", "getArgumentAssignmentList", "addArgumentAssignment", "toArgumentAssignmentInfo", "setAbstract", "isAbstract", "getTransmissionConstraintList", "getTransmissionConstraintList", "addConstraint", "toTransmissionConstraintInfo", "getCommandContainer", "getCommandContainer", "setCommandContainer", "toCommandContainerInfo", "getBaseMetaCommand", "setBaseCommand", "toCommandInfo", "getBaseMetaCommand", "getBaseMetaCommand", "setBaseCommand", "toCommandInfo", "getBaseMetaCommand", "getCommandVerifiers", "addVerifier", "toVerifierInfo", "build"]}, "repository": {"repo_id": 2479886, "url": "https://github.com/yamcs/yamcs", "stars": 30, "created": "9/29/2011 4:29:56 AM +00:00", "updates": "2020-01-24T11:39:15+00:00", "fork": "False", "license": "licensed"}}