{"test_class": {"identifier": "FormSubmissionServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private AllFormSubmissions allFormSubmissions;", "modifier": "@Mock\n    private", "type": "AllFormSubmissions", "declarator": "allFormSubmissions", "var_name": "allFormSubmissions"}, {"original_string": "private FormSubmissionService formSubmissionService;", "modifier": "private", "type": "FormSubmissionService", "declarator": "formSubmissionService", "var_name": "formSubmissionService"}, {"original_string": "private long serverVersion;", "modifier": "private", "type": "long", "declarator": "serverVersion", "var_name": "serverVersion"}], "file": "drishti-form/src/test/java/org/ei/drishti/form/service/FormSubmissionServiceTest.java"}, "test_case": {"identifier": "shouldFetchAllFormSubmissions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldFetchAllFormSubmissions() throws Exception {\n        long baseTimeStamp = DateUtil.now().getMillis();\n        FormSubmission firstFormSubmission = new FormSubmission(\"anm id 1\", \"instance id 1\", \"form name 1\", \"entity id 1\", baseTimeStamp, \"1\", null, 0L);\n        FormSubmission secondFormSubmission = new FormSubmission(\"anm id 2\", \"instance id 2\", \"form name 1\", \"entity id 2\", baseTimeStamp + 1, \"1\", null, 1L);\n        when(allFormSubmissions.allFormSubmissions(0, 2)).thenReturn(asList(firstFormSubmission, secondFormSubmission));\n\n        List<FormSubmission> formSubmissions = formSubmissionService.getAllSubmissions(0L, 2);\n\n        assertEquals(asList(firstFormSubmission, secondFormSubmission), formSubmissions);\n    }", "signature": "void shouldFetchAllFormSubmissions()", "full_signature": "@Test public void shouldFetchAllFormSubmissions()", "class_method_signature": "FormSubmissionServiceTest.shouldFetchAllFormSubmissions()", "testcase": true, "constructor": false, "invocations": ["getMillis", "now", "thenReturn", "when", "allFormSubmissions", "asList", "getAllSubmissions", "assertEquals", "asList"]}, "focal_class": {"identifier": "FormSubmissionService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger logger = LoggerFactory.getLogger(FormSubmissionService.class.toString());", "modifier": "private static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(FormSubmissionService.class.toString())", "var_name": "logger"}, {"original_string": "private AllFormSubmissions allFormSubmissions;", "modifier": "private", "type": "AllFormSubmissions", "declarator": "allFormSubmissions", "var_name": "allFormSubmissions"}], "methods": [{"identifier": "FormSubmissionService", "parameters": "(AllFormSubmissions allFormSubmissions)", "modifiers": "@Autowired public", "return": "", "signature": " FormSubmissionService(AllFormSubmissions allFormSubmissions)", "full_signature": "@Autowired public  FormSubmissionService(AllFormSubmissions allFormSubmissions)", "class_method_signature": "FormSubmissionService.FormSubmissionService(AllFormSubmissions allFormSubmissions)", "testcase": false, "constructor": true}, {"identifier": "fetch", "parameters": "(long formFetchToken)", "modifiers": "public", "return": "List<FormSubmissionDTO>", "signature": "List<FormSubmissionDTO> fetch(long formFetchToken)", "full_signature": "public List<FormSubmissionDTO> fetch(long formFetchToken)", "class_method_signature": "FormSubmissionService.fetch(long formFetchToken)", "testcase": false, "constructor": false}, {"identifier": "getNewSubmissionsForANM", "parameters": "(String anmIdentifier, Long version, Integer batchSize)", "modifiers": "public", "return": "List<FormSubmission>", "signature": "List<FormSubmission> getNewSubmissionsForANM(String anmIdentifier, Long version, Integer batchSize)", "full_signature": "public List<FormSubmission> getNewSubmissionsForANM(String anmIdentifier, Long version, Integer batchSize)", "class_method_signature": "FormSubmissionService.getNewSubmissionsForANM(String anmIdentifier, Long version, Integer batchSize)", "testcase": false, "constructor": false}, {"identifier": "getAllSubmissions", "parameters": "(Long version, Integer batchSize)", "modifiers": "public", "return": "List<FormSubmission>", "signature": "List<FormSubmission> getAllSubmissions(Long version, Integer batchSize)", "full_signature": "public List<FormSubmission> getAllSubmissions(Long version, Integer batchSize)", "class_method_signature": "FormSubmissionService.getAllSubmissions(Long version, Integer batchSize)", "testcase": false, "constructor": false}, {"identifier": "submit", "parameters": "(List<FormSubmissionDTO> formSubmissionsDTO)", "modifiers": "public", "return": "void", "signature": "void submit(List<FormSubmissionDTO> formSubmissionsDTO)", "full_signature": "public void submit(List<FormSubmissionDTO> formSubmissionsDTO)", "class_method_signature": "FormSubmissionService.submit(List<FormSubmissionDTO> formSubmissionsDTO)", "testcase": false, "constructor": false}, {"identifier": "timeStampComparator", "parameters": "()", "modifiers": "private", "return": "Comparator<FormSubmission>", "signature": "Comparator<FormSubmission> timeStampComparator()", "full_signature": "private Comparator<FormSubmission> timeStampComparator()", "class_method_signature": "FormSubmissionService.timeStampComparator()", "testcase": false, "constructor": false}], "file": "drishti-form/src/main/java/org/ei/drishti/form/service/FormSubmissionService.java"}, "focal_method": {"identifier": "getAllSubmissions", "parameters": "(Long version, Integer batchSize)", "modifiers": "public", "return": "List<FormSubmission>", "body": "public List<FormSubmission> getAllSubmissions(Long version, Integer batchSize) {\n        return allFormSubmissions.allFormSubmissions(version, batchSize);\n    }", "signature": "List<FormSubmission> getAllSubmissions(Long version, Integer batchSize)", "full_signature": "public List<FormSubmission> getAllSubmissions(Long version, Integer batchSize)", "class_method_signature": "FormSubmissionService.getAllSubmissions(Long version, Integer batchSize)", "testcase": false, "constructor": false, "invocations": ["allFormSubmissions"]}, "repository": {"repo_id": 3263787, "url": "https://github.com/SEL-Columbia/dristhi", "language": "Java", "is_fork": false, "fork_count": 56, "stargazer_count": 15, "size": 19905, "license": "licensed"}}