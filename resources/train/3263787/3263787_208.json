{"test_class": {"identifier": "ChildReportingServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ReportingService reportingService;", "modifier": "@Mock\n    private", "type": "ReportingService", "declarator": "reportingService", "var_name": "reportingService"}, {"original_string": "@Mock\n    private AllChildren allChildren;", "modifier": "@Mock\n    private", "type": "AllChildren", "declarator": "allChildren", "var_name": "allChildren"}, {"original_string": "@Mock\n    private AllMothers allMothers;", "modifier": "@Mock\n    private", "type": "AllMothers", "declarator": "allMothers", "var_name": "allMothers"}, {"original_string": "@Mock\n    private AllEligibleCouples allEligibleCouples;", "modifier": "@Mock\n    private", "type": "AllEligibleCouples", "declarator": "allEligibleCouples", "var_name": "allEligibleCouples"}, {"original_string": "@Mock\n    private AllInfantBalanceOnHandReportTokens allInfantBalanceOnHandTokens;", "modifier": "@Mock\n    private", "type": "AllInfantBalanceOnHandReportTokens", "declarator": "allInfantBalanceOnHandTokens", "var_name": "allInfantBalanceOnHandTokens"}, {"original_string": "@Mock\n    private ReportMonth reportMonth;", "modifier": "@Mock\n    private", "type": "ReportMonth", "declarator": "reportMonth", "var_name": "reportMonth"}, {"original_string": "@Mock\n    private MCTSReporter mctsReporter;", "modifier": "@Mock\n    private", "type": "MCTSReporter", "declarator": "mctsReporter", "var_name": "mctsReporter"}, {"original_string": "private ChildReportingService service;", "modifier": "private", "type": "ChildReportingService", "declarator": "service", "var_name": "service"}, {"original_string": "private static final Child CHILD = new Child(\"CASE X\", \"MOTHER-CASE-1\", \"bcg\", \"3\", \"female\")\n            .withDateOfBirth(\"2012-01-01\")\n            .withLocation(\"bherya\", \"Sub Center\", \"PHC X\")\n            .withAnm(\"ANM X\")\n            .withThayiCard(\"TC 1\");", "modifier": "private static final", "type": "Child", "declarator": "CHILD = new Child(\"CASE X\", \"MOTHER-CASE-1\", \"bcg\", \"3\", \"female\")\n            .withDateOfBirth(\"2012-01-01\")\n            .withLocation(\"bherya\", \"Sub Center\", \"PHC X\")\n            .withAnm(\"ANM X\")\n            .withThayiCard(\"TC 1\")", "var_name": "CHILD"}], "file": "drishti-mother-child/src/test/java/org/ei/drishti/service/reporting/ChildReportingServiceTest.java"}, "test_case": {"identifier": "shouldNotReportWhenServiceProvidedDateAndFormSubmissionDateBelongToDifferentReportingMonth", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldNotReportWhenServiceProvidedDateAndFormSubmissionDateBelongToDifferentReportingMonth() throws Exception {\n        Child child = new Child(\"child id 1\", \"mother id 1\", \"bcg\", \"3\", \"female\").withAnm(\"ANM X\");\n        Location location = new Location(\"bherya\", \"Sub Center\", \"PHC X\");\n        when(reportMonth.areDatesBelongToSameReportingMonth(parse(\"2013-01-01\"), parse(\"2013-01-26\"))).thenReturn(false);\n\n        service.reportToBoth(child, Indicator.FP_IUD, \"2013-01-01\", \"2013-01-26\", location);\n        verify(reportMonth).areDatesBelongToSameReportingMonth(parse(\"2013-01-01\"), parse(\"2013-01-26\"));\n        verifyZeroInteractions(reportingService);\n    }", "signature": "void shouldNotReportWhenServiceProvidedDateAndFormSubmissionDateBelongToDifferentReportingMonth()", "full_signature": "@Test public void shouldNotReportWhenServiceProvidedDateAndFormSubmissionDateBelongToDifferentReportingMonth()", "class_method_signature": "ChildReportingServiceTest.shouldNotReportWhenServiceProvidedDateAndFormSubmissionDateBelongToDifferentReportingMonth()", "testcase": true, "constructor": false, "invocations": ["withAnm", "thenReturn", "when", "areDatesBelongToSameReportingMonth", "parse", "parse", "reportToBoth", "areDatesBelongToSameReportingMonth", "verify", "parse", "parse", "verifyZeroInteractions"]}, "focal_class": {"identifier": "ChildReportingService", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String CHILD_ID_FIELD = \"childId\";", "modifier": "public static final", "type": "String", "declarator": "CHILD_ID_FIELD = \"childId\"", "var_name": "CHILD_ID_FIELD"}, {"original_string": "private static Logger logger = LoggerFactory.getLogger(ChildReportingService.class.toString());", "modifier": "private static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ChildReportingService.class.toString())", "var_name": "logger"}, {"original_string": "private final ReportingService reportingService;", "modifier": "private final", "type": "ReportingService", "declarator": "reportingService", "var_name": "reportingService"}, {"original_string": "private final AllChildren allChildren;", "modifier": "private final", "type": "AllChildren", "declarator": "allChildren", "var_name": "allChildren"}, {"original_string": "private final AllMothers allMothers;", "modifier": "private final", "type": "AllMothers", "declarator": "allMothers", "var_name": "allMothers"}, {"original_string": "private final AllEligibleCouples allEligibleCouples;", "modifier": "private final", "type": "AllEligibleCouples", "declarator": "allEligibleCouples", "var_name": "allEligibleCouples"}, {"original_string": "private final AllInfantBalanceOnHandReportTokens allInfantBalanceOnHandReportTokens;", "modifier": "private final", "type": "AllInfantBalanceOnHandReportTokens", "declarator": "allInfantBalanceOnHandReportTokens", "var_name": "allInfantBalanceOnHandReportTokens"}, {"original_string": "private final ReportMonth reportMonth;", "modifier": "private final", "type": "ReportMonth", "declarator": "reportMonth", "var_name": "reportMonth"}, {"original_string": "private MCTSReporter mctsReporter;", "modifier": "private", "type": "MCTSReporter", "declarator": "mctsReporter", "var_name": "mctsReporter"}, {"original_string": "private Map<String, List<Indicator>> immunizationToIndicator;", "modifier": "private", "type": "Map<String, List<Indicator>>", "declarator": "immunizationToIndicator", "var_name": "immunizationToIndicator"}], "methods": [{"identifier": "ChildReportingService", "parameters": "(ReportingService reportingService, AllChildren allChildren, AllMothers allMothers,\n                                 AllEligibleCouples allEligibleCouples,\n                                 AllInfantBalanceOnHandReportTokens allInfantBalanceOnHandReportTokens, ReportMonth reportMonth, MCTSReporter mctsReporter)", "modifiers": "@Autowired public", "return": "", "signature": " ChildReportingService(ReportingService reportingService, AllChildren allChildren, AllMothers allMothers,\n                                 AllEligibleCouples allEligibleCouples,\n                                 AllInfantBalanceOnHandReportTokens allInfantBalanceOnHandReportTokens, ReportMonth reportMonth, MCTSReporter mctsReporter)", "full_signature": "@Autowired public  ChildReportingService(ReportingService reportingService, AllChildren allChildren, AllMothers allMothers,\n                                 AllEligibleCouples allEligibleCouples,\n                                 AllInfantBalanceOnHandReportTokens allInfantBalanceOnHandReportTokens, ReportMonth reportMonth, MCTSReporter mctsReporter)", "class_method_signature": "ChildReportingService.ChildReportingService(ReportingService reportingService, AllChildren allChildren, AllMothers allMothers,\n                                 AllEligibleCouples allEligibleCouples,\n                                 AllInfantBalanceOnHandReportTokens allInfantBalanceOnHandReportTokens, ReportMonth reportMonth, MCTSReporter mctsReporter)", "testcase": false, "constructor": true}, {"identifier": "registerChild", "parameters": "(SafeMap reportData)", "modifiers": "public", "return": "void", "signature": "void registerChild(SafeMap reportData)", "full_signature": "public void registerChild(SafeMap reportData)", "class_method_signature": "ChildReportingService.registerChild(SafeMap reportData)", "testcase": false, "constructor": false}, {"identifier": "reportMCTSIndicators", "parameters": "(SafeMap reportData, Child child, List<String> immunizations)", "modifiers": "private", "return": "void", "signature": "void reportMCTSIndicators(SafeMap reportData, Child child, List<String> immunizations)", "full_signature": "private void reportMCTSIndicators(SafeMap reportData, Child child, List<String> immunizations)", "class_method_signature": "ChildReportingService.reportMCTSIndicators(SafeMap reportData, Child child, List<String> immunizations)", "testcase": false, "constructor": false}, {"identifier": "reportNRHMImmunizations", "parameters": "(SafeMap reportData, Child child, List<String> immunizations, Location location)", "modifiers": "private", "return": "void", "signature": "void reportNRHMImmunizations(SafeMap reportData, Child child, List<String> immunizations, Location location)", "full_signature": "private void reportNRHMImmunizations(SafeMap reportData, Child child, List<String> immunizations, Location location)", "class_method_signature": "ChildReportingService.reportNRHMImmunizations(SafeMap reportData, Child child, List<String> immunizations, Location location)", "testcase": false, "constructor": false}, {"identifier": "immunizationProvided", "parameters": "(SafeMap reportData, List<String> previousImmunizations)", "modifiers": "public", "return": "void", "signature": "void immunizationProvided(SafeMap reportData, List<String> previousImmunizations)", "full_signature": "public void immunizationProvided(SafeMap reportData, List<String> previousImmunizations)", "class_method_signature": "ChildReportingService.immunizationProvided(SafeMap reportData, List<String> previousImmunizations)", "testcase": false, "constructor": false}, {"identifier": "vitaminAProvided", "parameters": "(SafeMap reportData)", "modifiers": "public", "return": "void", "signature": "void vitaminAProvided(SafeMap reportData)", "full_signature": "public void vitaminAProvided(SafeMap reportData)", "class_method_signature": "ChildReportingService.vitaminAProvided(SafeMap reportData)", "testcase": false, "constructor": false}, {"identifier": "reportForVitaminADose_1_2_5_9", "parameters": "(SafeMap reportData, Child child, Location location, Indicator indicator)", "modifiers": "private", "return": "void", "signature": "void reportForVitaminADose_1_2_5_9(SafeMap reportData, Child child, Location location, Indicator indicator)", "full_signature": "private void reportForVitaminADose_1_2_5_9(SafeMap reportData, Child child, Location location, Indicator indicator)", "class_method_signature": "ChildReportingService.reportForVitaminADose_1_2_5_9(SafeMap reportData, Child child, Location location, Indicator indicator)", "testcase": false, "constructor": false}, {"identifier": "pncVisitHappened", "parameters": "(SafeMap reportData)", "modifiers": "public", "return": "void", "signature": "void pncVisitHappened(SafeMap reportData)", "full_signature": "public void pncVisitHappened(SafeMap reportData)", "class_method_signature": "ChildReportingService.pncVisitHappened(SafeMap reportData)", "testcase": false, "constructor": false}, {"identifier": "reportVisitsThatHappenWithin24HoursOfHomeDelivery", "parameters": "(SafeMap reportData, Child child, Location location)", "modifiers": "private", "return": "void", "signature": "void reportVisitsThatHappenWithin24HoursOfHomeDelivery(SafeMap reportData, Child child, Location location)", "full_signature": "private void reportVisitsThatHappenWithin24HoursOfHomeDelivery(SafeMap reportData, Child child, Location location)", "class_method_signature": "ChildReportingService.reportVisitsThatHappenWithin24HoursOfHomeDelivery(SafeMap reportData, Child child, Location location)", "testcase": false, "constructor": false}, {"identifier": "reportDIarrhea", "parameters": "(SafeMap reportData, Child child, Location location)", "modifiers": "private", "return": "void", "signature": "void reportDIarrhea(SafeMap reportData, Child child, Location location)", "full_signature": "private void reportDIarrhea(SafeMap reportData, Child child, Location location)", "class_method_signature": "ChildReportingService.reportDIarrhea(SafeMap reportData, Child child, Location location)", "testcase": false, "constructor": false}, {"identifier": "sickVisitHappened", "parameters": "(SafeMap reportData)", "modifiers": "public", "return": "void", "signature": "void sickVisitHappened(SafeMap reportData)", "full_signature": "public void sickVisitHappened(SafeMap reportData)", "class_method_signature": "ChildReportingService.sickVisitHappened(SafeMap reportData)", "testcase": false, "constructor": false}, {"identifier": "closeChild", "parameters": "(SafeMap reportData)", "modifiers": "public", "return": "void", "signature": "void closeChild(SafeMap reportData)", "full_signature": "public void closeChild(SafeMap reportData)", "class_method_signature": "ChildReportingService.closeChild(SafeMap reportData)", "testcase": false, "constructor": false}, {"identifier": "reportVitaminADose2ForMaleChild", "parameters": "(SafeMap reportData, Child child, Location location)", "modifiers": "private", "return": "void", "signature": "void reportVitaminADose2ForMaleChild(SafeMap reportData, Child child, Location location)", "full_signature": "private void reportVitaminADose2ForMaleChild(SafeMap reportData, Child child, Location location)", "class_method_signature": "ChildReportingService.reportVitaminADose2ForMaleChild(SafeMap reportData, Child child, Location location)", "testcase": false, "constructor": false}, {"identifier": "reportVitaminADose5ForMaleChild", "parameters": "(SafeMap reportData, Child child, Location location)", "modifiers": "private", "return": "void", "signature": "void reportVitaminADose5ForMaleChild(SafeMap reportData, Child child, Location location)", "full_signature": "private void reportVitaminADose5ForMaleChild(SafeMap reportData, Child child, Location location)", "class_method_signature": "ChildReportingService.reportVitaminADose5ForMaleChild(SafeMap reportData, Child child, Location location)", "testcase": false, "constructor": false}, {"identifier": "reportVitaminADose9ForMaleChild", "parameters": "(SafeMap reportData, Child child, Location location)", "modifiers": "private", "return": "void", "signature": "void reportVitaminADose9ForMaleChild(SafeMap reportData, Child child, Location location)", "full_signature": "private void reportVitaminADose9ForMaleChild(SafeMap reportData, Child child, Location location)", "class_method_signature": "ChildReportingService.reportVitaminADose9ForMaleChild(SafeMap reportData, Child child, Location location)", "testcase": false, "constructor": false}, {"identifier": "reportVitaminADose1ForMaleChild", "parameters": "(SafeMap reportData, Child child, Location location)", "modifiers": "private", "return": "void", "signature": "void reportVitaminADose1ForMaleChild(SafeMap reportData, Child child, Location location)", "full_signature": "private void reportVitaminADose1ForMaleChild(SafeMap reportData, Child child, Location location)", "class_method_signature": "ChildReportingService.reportVitaminADose1ForMaleChild(SafeMap reportData, Child child, Location location)", "testcase": false, "constructor": false}, {"identifier": "reportVitaminADose2ForFemaleChild", "parameters": "(SafeMap reportData, Child child, Location location)", "modifiers": "private", "return": "void", "signature": "void reportVitaminADose2ForFemaleChild(SafeMap reportData, Child child, Location location)", "full_signature": "private void reportVitaminADose2ForFemaleChild(SafeMap reportData, Child child, Location location)", "class_method_signature": "ChildReportingService.reportVitaminADose2ForFemaleChild(SafeMap reportData, Child child, Location location)", "testcase": false, "constructor": false}, {"identifier": "reportVitaminADose5ForFemaleChild", "parameters": "(SafeMap reportData, Child child, Location location)", "modifiers": "private", "return": "void", "signature": "void reportVitaminADose5ForFemaleChild(SafeMap reportData, Child child, Location location)", "full_signature": "private void reportVitaminADose5ForFemaleChild(SafeMap reportData, Child child, Location location)", "class_method_signature": "ChildReportingService.reportVitaminADose5ForFemaleChild(SafeMap reportData, Child child, Location location)", "testcase": false, "constructor": false}, {"identifier": "reportVitaminADose9ForFemaleChild", "parameters": "(SafeMap reportData, Child child, Location location)", "modifiers": "private", "return": "void", "signature": "void reportVitaminADose9ForFemaleChild(SafeMap reportData, Child child, Location location)", "full_signature": "private void reportVitaminADose9ForFemaleChild(SafeMap reportData, Child child, Location location)", "class_method_signature": "ChildReportingService.reportVitaminADose9ForFemaleChild(SafeMap reportData, Child child, Location location)", "testcase": false, "constructor": false}, {"identifier": "reportVitaminADose1ForFemaleChild", "parameters": "(SafeMap reportData, Child child, Location location)", "modifiers": "private", "return": "void", "signature": "void reportVitaminADose1ForFemaleChild(SafeMap reportData, Child child, Location location)", "full_signature": "private void reportVitaminADose1ForFemaleChild(SafeMap reportData, Child child, Location location)", "class_method_signature": "ChildReportingService.reportVitaminADose1ForFemaleChild(SafeMap reportData, Child child, Location location)", "testcase": false, "constructor": false}, {"identifier": "loadLocationOfChild", "parameters": "(Child child)", "modifiers": "private", "return": "Location", "signature": "Location loadLocationOfChild(Child child)", "full_signature": "private Location loadLocationOfChild(Child child)", "class_method_signature": "ChildReportingService.loadLocationOfChild(Child child)", "testcase": false, "constructor": false}, {"identifier": "reportBirthWeight", "parameters": "(Child child, String submissionDate, Location location)", "modifiers": "private", "return": "void", "signature": "void reportBirthWeight(Child child, String submissionDate, Location location)", "full_signature": "private void reportBirthWeight(Child child, String submissionDate, Location location)", "class_method_signature": "ChildReportingService.reportBirthWeight(Child child, String submissionDate, Location location)", "testcase": false, "constructor": false}, {"identifier": "reportBFPostBirth", "parameters": "(String bfPostBirth, Child child, Location location, String deliveryPlace, String submissionDate)", "modifiers": "private", "return": "void", "signature": "void reportBFPostBirth(String bfPostBirth, Child child, Location location, String deliveryPlace, String submissionDate)", "full_signature": "private void reportBFPostBirth(String bfPostBirth, Child child, Location location, String deliveryPlace, String submissionDate)", "class_method_signature": "ChildReportingService.reportBFPostBirth(String bfPostBirth, Child child, Location location, String deliveryPlace, String submissionDate)", "testcase": false, "constructor": false}, {"identifier": "reportLiveBirthByGender", "parameters": "(SafeMap reportData, Child child, Location location)", "modifiers": "private", "return": "void", "signature": "void reportLiveBirthByGender(SafeMap reportData, Child child, Location location)", "full_signature": "private void reportLiveBirthByGender(SafeMap reportData, Child child, Location location)", "class_method_signature": "ChildReportingService.reportLiveBirthByGender(SafeMap reportData, Child child, Location location)", "testcase": false, "constructor": false}, {"identifier": "reportImmunizations", "parameters": "(Child child, List<String> immunizations, Location location, String immunizationDate, String submissionDate)", "modifiers": "private", "return": "void", "signature": "void reportImmunizations(Child child, List<String> immunizations, Location location, String immunizationDate, String submissionDate)", "full_signature": "private void reportImmunizations(Child child, List<String> immunizations, Location location, String immunizationDate, String submissionDate)", "class_method_signature": "ChildReportingService.reportImmunizations(Child child, List<String> immunizations, Location location, String immunizationDate, String submissionDate)", "testcase": false, "constructor": false}, {"identifier": "reportToBoth", "parameters": "(Child child, Indicator indicator, String serviceProvidedDate, String submissionDate, Location location)", "modifiers": "public", "return": "void", "signature": "void reportToBoth(Child child, Indicator indicator, String serviceProvidedDate, String submissionDate, Location location)", "full_signature": "public void reportToBoth(Child child, Indicator indicator, String serviceProvidedDate, String submissionDate, Location location)", "class_method_signature": "ChildReportingService.reportToBoth(Child child, Indicator indicator, String serviceProvidedDate, String submissionDate, Location location)", "testcase": false, "constructor": false}, {"identifier": "reportToBoth", "parameters": "(Child child, Indicator indicator, String serviceProvidedDate, Location location)", "modifiers": "public", "return": "void", "signature": "void reportToBoth(Child child, Indicator indicator, String serviceProvidedDate, Location location)", "full_signature": "public void reportToBoth(Child child, Indicator indicator, String serviceProvidedDate, Location location)", "class_method_signature": "ChildReportingService.reportToBoth(Child child, Indicator indicator, String serviceProvidedDate, Location location)", "testcase": false, "constructor": false}, {"identifier": "report", "parameters": "(Child child, Indicator indicator, String serviceProvidedDate, Location location)", "modifiers": "private", "return": "void", "signature": "void report(Child child, Indicator indicator, String serviceProvidedDate, Location location)", "full_signature": "private void report(Child child, Indicator indicator, String serviceProvidedDate, Location location)", "class_method_signature": "ChildReportingService.report(Child child, Indicator indicator, String serviceProvidedDate, Location location)", "testcase": false, "constructor": false}, {"identifier": "reportInfantAndChildBalance", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reportInfantAndChildBalance()", "full_signature": "public void reportInfantAndChildBalance()", "class_method_signature": "ChildReportingService.reportInfantAndChildBalance()", "testcase": false, "constructor": false}, {"identifier": "reportInfantBalanceOnHand", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reportInfantBalanceOnHand()", "full_signature": "public void reportInfantBalanceOnHand()", "class_method_signature": "ChildReportingService.reportInfantBalanceOnHand()", "testcase": false, "constructor": false}, {"identifier": "reportInfantBalanceTurningOneYearOld", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reportInfantBalanceTurningOneYearOld()", "full_signature": "public void reportInfantBalanceTurningOneYearOld()", "class_method_signature": "ChildReportingService.reportInfantBalanceTurningOneYearOld()", "testcase": false, "constructor": false}, {"identifier": "reportInfantBalanceTotalNumberOfOAChildren", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reportInfantBalanceTotalNumberOfOAChildren()", "full_signature": "public void reportInfantBalanceTotalNumberOfOAChildren()", "class_method_signature": "ChildReportingService.reportInfantBalanceTotalNumberOfOAChildren()", "testcase": false, "constructor": false}, {"identifier": "reportInfantBalanceLessThanOneYearOld", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reportInfantBalanceLessThanOneYearOld()", "full_signature": "public void reportInfantBalanceLessThanOneYearOld()", "class_method_signature": "ChildReportingService.reportInfantBalanceLessThanOneYearOld()", "testcase": false, "constructor": false}, {"identifier": "reportChildBalanceLessThanFiveYearOld", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reportChildBalanceLessThanFiveYearOld()", "full_signature": "public void reportChildBalanceLessThanFiveYearOld()", "class_method_signature": "ChildReportingService.reportChildBalanceLessThanFiveYearOld()", "testcase": false, "constructor": false}, {"identifier": "getInfantBalanceOnHandReportToken", "parameters": "(LocalDate today)", "modifiers": "private", "return": "InfantBalanceOnHandReportToken", "signature": "InfantBalanceOnHandReportToken getInfantBalanceOnHandReportToken(LocalDate today)", "full_signature": "private InfantBalanceOnHandReportToken getInfantBalanceOnHandReportToken(LocalDate today)", "class_method_signature": "ChildReportingService.getInfantBalanceOnHandReportToken(LocalDate today)", "testcase": false, "constructor": false}, {"identifier": "updateInfantBalanceIndicator", "parameters": "(Indicator indicator, List<Child> children, String date)", "modifiers": "private", "return": "void", "signature": "void updateInfantBalanceIndicator(Indicator indicator, List<Child> children, String date)", "full_signature": "private void updateInfantBalanceIndicator(Indicator indicator, List<Child> children, String date)", "class_method_signature": "ChildReportingService.updateInfantBalanceIndicator(Indicator indicator, List<Child> children, String date)", "testcase": false, "constructor": false}, {"identifier": "getEligibleCouple", "parameters": "(Child child)", "modifiers": "private", "return": "EligibleCouple", "signature": "EligibleCouple getEligibleCouple(Child child)", "full_signature": "private EligibleCouple getEligibleCouple(Child child)", "class_method_signature": "ChildReportingService.getEligibleCouple(Child child)", "testcase": false, "constructor": false}, {"identifier": "updateInfantBalanceOAChildren", "parameters": "(List<Child> children, List<Mother> mothers, List<EligibleCouple> ecs, Indicator indicator, String date)", "modifiers": "private", "return": "void", "signature": "void updateInfantBalanceOAChildren(List<Child> children, List<Mother> mothers, List<EligibleCouple> ecs, Indicator indicator, String date)", "full_signature": "private void updateInfantBalanceOAChildren(List<Child> children, List<Mother> mothers, List<EligibleCouple> ecs, Indicator indicator, String date)", "class_method_signature": "ChildReportingService.updateInfantBalanceOAChildren(List<Child> children, List<Mother> mothers, List<EligibleCouple> ecs, Indicator indicator, String date)", "testcase": false, "constructor": false}, {"identifier": "getExternalId", "parameters": "(Child child, EligibleCouple ec)", "modifiers": "private", "return": "String", "signature": "String getExternalId(Child child, EligibleCouple ec)", "full_signature": "private String getExternalId(Child child, EligibleCouple ec)", "class_method_signature": "ChildReportingService.getExternalId(Child child, EligibleCouple ec)", "testcase": false, "constructor": false}, {"identifier": "updateBothReports", "parameters": "(Indicator indicator, String date, List<ReportingData> serviceProvidedData, List<ReportingData> anmReportData)", "modifiers": "private", "return": "void", "signature": "void updateBothReports(Indicator indicator, String date, List<ReportingData> serviceProvidedData, List<ReportingData> anmReportData)", "full_signature": "private void updateBothReports(Indicator indicator, String date, List<ReportingData> serviceProvidedData, List<ReportingData> anmReportData)", "class_method_signature": "ChildReportingService.updateBothReports(Indicator indicator, String date, List<ReportingData> serviceProvidedData, List<ReportingData> anmReportData)", "testcase": false, "constructor": false}, {"identifier": "deleteReports", "parameters": "(String childCaseId)", "modifiers": "private", "return": "void", "signature": "void deleteReports(String childCaseId)", "full_signature": "private void deleteReports(String childCaseId)", "class_method_signature": "ChildReportingService.deleteReports(String childCaseId)", "testcase": false, "constructor": false}], "file": "drishti-mother-child/src/main/java/org/ei/drishti/service/reporting/ChildReportingService.java"}, "focal_method": {"identifier": "reportToBoth", "parameters": "(Child child, Indicator indicator, String serviceProvidedDate, String submissionDate, Location location)", "modifiers": "public", "return": "void", "body": "public void reportToBoth(Child child, Indicator indicator, String serviceProvidedDate, String submissionDate, Location location) {\n        if (!reportMonth.areDatesBelongToSameReportingMonth(LocalDate.parse(serviceProvidedDate), LocalDate.parse(submissionDate)))\n            return;\n        report(child, indicator, serviceProvidedDate, location);\n    }", "signature": "void reportToBoth(Child child, Indicator indicator, String serviceProvidedDate, String submissionDate, Location location)", "full_signature": "public void reportToBoth(Child child, Indicator indicator, String serviceProvidedDate, String submissionDate, Location location)", "class_method_signature": "ChildReportingService.reportToBoth(Child child, Indicator indicator, String serviceProvidedDate, String submissionDate, Location location)", "testcase": false, "constructor": false, "invocations": ["areDatesBelongToSameReportingMonth", "parse", "parse", "report"]}, "repository": {"repo_id": 3263787, "url": "https://github.com/SEL-Columbia/dristhi", "language": "Java", "is_fork": false, "fork_count": 56, "stargazer_count": 15, "size": 19905, "license": "licensed"}}