{"test_class": {"identifier": "AlertCreationActionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ActionService actionService;", "modifier": "@Mock\n    private", "type": "ActionService", "declarator": "actionService", "var_name": "actionService"}, {"original_string": "private DateTime dueWindowStart;", "modifier": "private", "type": "DateTime", "declarator": "dueWindowStart", "var_name": "dueWindowStart"}, {"original_string": "private DateTime lateWindowStart;", "modifier": "private", "type": "DateTime", "declarator": "lateWindowStart", "var_name": "lateWindowStart"}, {"original_string": "private DateTime maxWindowStart;", "modifier": "private", "type": "DateTime", "declarator": "maxWindowStart", "var_name": "maxWindowStart"}, {"original_string": "private AlertCreationAction reminderAction;", "modifier": "private", "type": "AlertCreationAction", "declarator": "reminderAction", "var_name": "reminderAction"}], "file": "drishti-mother-child/src/test/java/org/ei/drishti/action/AlertCreationActionTest.java"}, "test_case": {"identifier": "shouldRaiseNormalAlertActionsForDueWindowAlerts", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldRaiseNormalAlertActionsForDueWindowAlerts() throws Exception {\n        HashMap<String, String> extraData = new HashMap<>();\n        extraData.put(\"beneficiaryType\", \"mother\");\n        reminderAction.invoke(event(\"Case 1\", \"Schedule 1\", \"Milestone 1\", WindowName.due, dueWindowStart, lateWindowStart, maxWindowStart), extraData);\n\n        verify(actionService).alertForBeneficiary(mother, \"Case 1\", \"Schedule 1\", \"Milestone 1\", normal, dueWindowStart, lateWindowStart);\n    }", "signature": "void shouldRaiseNormalAlertActionsForDueWindowAlerts()", "full_signature": "@Test public void shouldRaiseNormalAlertActionsForDueWindowAlerts()", "class_method_signature": "AlertCreationActionTest.shouldRaiseNormalAlertActionsForDueWindowAlerts()", "testcase": true, "constructor": false, "invocations": ["put", "invoke", "event", "alertForBeneficiary", "verify"]}, "focal_class": {"identifier": "AlertCreationAction", "superclass": "", "interfaces": "implements Action", "fields": [{"original_string": "ActionService actionService;", "modifier": "", "type": "ActionService", "declarator": "actionService", "var_name": "actionService"}], "methods": [{"identifier": "AlertCreationAction", "parameters": "(ActionService actionService)", "modifiers": "@Autowired public", "return": "", "signature": " AlertCreationAction(ActionService actionService)", "full_signature": "@Autowired public  AlertCreationAction(ActionService actionService)", "class_method_signature": "AlertCreationAction.AlertCreationAction(ActionService actionService)", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "(MilestoneEvent event, Map<String, String> extraData)", "modifiers": "@Override public", "return": "void", "signature": "void invoke(MilestoneEvent event, Map<String, String> extraData)", "full_signature": "@Override public void invoke(MilestoneEvent event, Map<String, String> extraData)", "class_method_signature": "AlertCreationAction.invoke(MilestoneEvent event, Map<String, String> extraData)", "testcase": false, "constructor": false}], "file": "drishti-mother-child/src/main/java/org/ei/drishti/action/AlertCreationAction.java"}, "focal_method": {"identifier": "invoke", "parameters": "(MilestoneEvent event, Map<String, String> extraData)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void invoke(MilestoneEvent event, Map<String, String> extraData) {\n        BeneficiaryType beneficiaryType = BeneficiaryType.from(extraData.get(\"beneficiaryType\"));\n\n        if (WindowName.late.toString().equals(event.windowName())) {\n            actionService.alertForBeneficiary(beneficiaryType, event.externalId(), event.scheduleName(), event.milestoneName(), urgent, event.startOfLateWindow(), event.startOfMaxWindow());\n        } else if (WindowName.earliest.toString().equals(event.windowName())) {\n            actionService.alertForBeneficiary(beneficiaryType, event.externalId(), event.scheduleName(), event.milestoneName(), upcoming, event.startOfDueWindow(), event.startOfLateWindow());\n        } else {\n            actionService.alertForBeneficiary(beneficiaryType, event.externalId(), event.scheduleName(), event.milestoneName(), normal, event.startOfDueWindow(), event.startOfLateWindow());\n        }\n    }", "signature": "void invoke(MilestoneEvent event, Map<String, String> extraData)", "full_signature": "@Override public void invoke(MilestoneEvent event, Map<String, String> extraData)", "class_method_signature": "AlertCreationAction.invoke(MilestoneEvent event, Map<String, String> extraData)", "testcase": false, "constructor": false, "invocations": ["from", "get", "equals", "toString", "windowName", "alertForBeneficiary", "externalId", "scheduleName", "milestoneName", "startOfLateWindow", "startOfMaxWindow", "equals", "toString", "windowName", "alertForBeneficiary", "externalId", "scheduleName", "milestoneName", "startOfDueWindow", "startOfLateWindow", "alertForBeneficiary", "externalId", "scheduleName", "milestoneName", "startOfDueWindow", "startOfLateWindow"]}, "repository": {"repo_id": 3263787, "url": "https://github.com/SEL-Columbia/dristhi", "language": "Java", "is_fork": false, "fork_count": 56, "stargazer_count": 15, "size": 19905, "license": "licensed"}}