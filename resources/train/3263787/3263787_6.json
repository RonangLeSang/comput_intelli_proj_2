{"test_class": {"identifier": "ReportMonthTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ReportMonth reportMonth = new ReportMonth();", "modifier": "private final", "type": "ReportMonth", "declarator": "reportMonth = new ReportMonth()", "var_name": "reportMonth"}], "file": "drishti-common/src/test/java/org/ei/drishti/common/domain/ReportMonthTest.java"}, "test_case": {"identifier": "shouldCheckWhetherTheDateIsWithInTheReportingMonth", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldCheckWhetherTheDateIsWithInTheReportingMonth() throws Exception {\n        DateUtil.fakeIt(LocalDate.parse(\"2013-01-26\"));\n        assertTrue(reportMonth.isDateWithinCurrentReportMonth(LocalDate.parse(\"2013-01-26\")));\n        assertTrue(reportMonth.isDateWithinCurrentReportMonth(LocalDate.parse(\"2013-02-01\")));\n        assertTrue(reportMonth.isDateWithinCurrentReportMonth(LocalDate.parse(\"2013-02-25\")));\n        assertFalse(reportMonth.isDateWithinCurrentReportMonth(LocalDate.parse(\"2013-01-25\")));\n        assertFalse(reportMonth.isDateWithinCurrentReportMonth(LocalDate.parse(\"2013-02-26\")));\n\n        DateUtil.fakeIt(LocalDate.parse(\"2012-12-26\"));\n        assertTrue(reportMonth.isDateWithinCurrentReportMonth(LocalDate.parse(\"2013-01-01\")));\n        assertTrue(reportMonth.isDateWithinCurrentReportMonth(LocalDate.parse(\"2013-01-25\")));\n    }", "signature": "void shouldCheckWhetherTheDateIsWithInTheReportingMonth()", "full_signature": "@Test public void shouldCheckWhetherTheDateIsWithInTheReportingMonth()", "class_method_signature": "ReportMonthTest.shouldCheckWhetherTheDateIsWithInTheReportingMonth()", "testcase": true, "constructor": false, "invocations": ["fakeIt", "parse", "assertTrue", "isDateWithinCurrentReportMonth", "parse", "assertTrue", "isDateWithinCurrentReportMonth", "parse", "assertTrue", "isDateWithinCurrentReportMonth", "parse", "assertFalse", "isDateWithinCurrentReportMonth", "parse", "assertFalse", "isDateWithinCurrentReportMonth", "parse", "fakeIt", "parse", "assertTrue", "isDateWithinCurrentReportMonth", "parse", "assertTrue", "isDateWithinCurrentReportMonth", "parse"]}, "focal_class": {"identifier": "ReportMonth", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int JANUARY = 1;", "modifier": "private static final", "type": "int", "declarator": "JANUARY = 1", "var_name": "JANUARY"}, {"original_string": "private static final int DECEMBER = 12;", "modifier": "private static final", "type": "int", "declarator": "DECEMBER = 12", "var_name": "DECEMBER"}], "methods": [{"identifier": "startDateOfReportingYear", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date startDateOfReportingYear()", "full_signature": "public Date startDateOfReportingYear()", "class_method_signature": "ReportMonth.startDateOfReportingYear()", "testcase": false, "constructor": false}, {"identifier": "reportingYear", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int reportingYear()", "full_signature": "public int reportingYear()", "class_method_signature": "ReportMonth.reportingYear()", "testcase": false, "constructor": false}, {"identifier": "startDateOfNextReportingMonth", "parameters": "(LocalDate date)", "modifiers": "public", "return": "LocalDate", "signature": "LocalDate startDateOfNextReportingMonth(LocalDate date)", "full_signature": "public LocalDate startDateOfNextReportingMonth(LocalDate date)", "class_method_signature": "ReportMonth.startDateOfNextReportingMonth(LocalDate date)", "testcase": false, "constructor": false}, {"identifier": "endDateOfReportingMonthGivenStartDate", "parameters": "(LocalDate startDate)", "modifiers": "public", "return": "LocalDate", "signature": "LocalDate endDateOfReportingMonthGivenStartDate(LocalDate startDate)", "full_signature": "public LocalDate endDateOfReportingMonthGivenStartDate(LocalDate startDate)", "class_method_signature": "ReportMonth.endDateOfReportingMonthGivenStartDate(LocalDate startDate)", "testcase": false, "constructor": false}, {"identifier": "startOfCurrentReportMonth", "parameters": "(LocalDate date)", "modifiers": "public", "return": "LocalDate", "signature": "LocalDate startOfCurrentReportMonth(LocalDate date)", "full_signature": "public LocalDate startOfCurrentReportMonth(LocalDate date)", "class_method_signature": "ReportMonth.startOfCurrentReportMonth(LocalDate date)", "testcase": false, "constructor": false}, {"identifier": "endOfCurrentReportMonth", "parameters": "(LocalDate date)", "modifiers": "public", "return": "LocalDate", "signature": "LocalDate endOfCurrentReportMonth(LocalDate date)", "full_signature": "public LocalDate endOfCurrentReportMonth(LocalDate date)", "class_method_signature": "ReportMonth.endOfCurrentReportMonth(LocalDate date)", "testcase": false, "constructor": false}, {"identifier": "isDateWithinCurrentReportMonth", "parameters": "(LocalDate lastReportedDate)", "modifiers": "public", "return": "boolean", "signature": "boolean isDateWithinCurrentReportMonth(LocalDate lastReportedDate)", "full_signature": "public boolean isDateWithinCurrentReportMonth(LocalDate lastReportedDate)", "class_method_signature": "ReportMonth.isDateWithinCurrentReportMonth(LocalDate lastReportedDate)", "testcase": false, "constructor": false}, {"identifier": "previousMonth", "parameters": "(LocalDate today)", "modifiers": "private", "return": "int", "signature": "int previousMonth(LocalDate today)", "full_signature": "private int previousMonth(LocalDate today)", "class_method_signature": "ReportMonth.previousMonth(LocalDate today)", "testcase": false, "constructor": false}, {"identifier": "nextMonth", "parameters": "(LocalDate today)", "modifiers": "private", "return": "int", "signature": "int nextMonth(LocalDate today)", "full_signature": "private int nextMonth(LocalDate today)", "class_method_signature": "ReportMonth.nextMonth(LocalDate today)", "testcase": false, "constructor": false}, {"identifier": "previousYear", "parameters": "(LocalDate today)", "modifiers": "private", "return": "int", "signature": "int previousYear(LocalDate today)", "full_signature": "private int previousYear(LocalDate today)", "class_method_signature": "ReportMonth.previousYear(LocalDate today)", "testcase": false, "constructor": false}, {"identifier": "nextYear", "parameters": "(LocalDate today)", "modifiers": "private", "return": "int", "signature": "int nextYear(LocalDate today)", "full_signature": "private int nextYear(LocalDate today)", "class_method_signature": "ReportMonth.nextYear(LocalDate today)", "testcase": false, "constructor": false}, {"identifier": "reportingMonth", "parameters": "(LocalDate date)", "modifiers": "public", "return": "int", "signature": "int reportingMonth(LocalDate date)", "full_signature": "public int reportingMonth(LocalDate date)", "class_method_signature": "ReportMonth.reportingMonth(LocalDate date)", "testcase": false, "constructor": false}, {"identifier": "reportingYear", "parameters": "(LocalDate date)", "modifiers": "public", "return": "int", "signature": "int reportingYear(LocalDate date)", "full_signature": "public int reportingYear(LocalDate date)", "class_method_signature": "ReportMonth.reportingYear(LocalDate date)", "testcase": false, "constructor": false}, {"identifier": "areDatesBelongToSameReportingMonth", "parameters": "(LocalDate date, LocalDate anotherDate)", "modifiers": "public", "return": "boolean", "signature": "boolean areDatesBelongToSameReportingMonth(LocalDate date, LocalDate anotherDate)", "full_signature": "public boolean areDatesBelongToSameReportingMonth(LocalDate date, LocalDate anotherDate)", "class_method_signature": "ReportMonth.areDatesBelongToSameReportingMonth(LocalDate date, LocalDate anotherDate)", "testcase": false, "constructor": false}], "file": "drishti-common/src/main/java/org/ei/drishti/common/domain/ReportMonth.java"}, "focal_method": {"identifier": "isDateWithinCurrentReportMonth", "parameters": "(LocalDate lastReportedDate)", "modifiers": "public", "return": "boolean", "body": "public boolean isDateWithinCurrentReportMonth(LocalDate lastReportedDate) {\n        return areDatesBelongToSameReportingMonth(lastReportedDate, DateUtil.today());\n    }", "signature": "boolean isDateWithinCurrentReportMonth(LocalDate lastReportedDate)", "full_signature": "public boolean isDateWithinCurrentReportMonth(LocalDate lastReportedDate)", "class_method_signature": "ReportMonth.isDateWithinCurrentReportMonth(LocalDate lastReportedDate)", "testcase": false, "constructor": false, "invocations": ["areDatesBelongToSameReportingMonth", "today"]}, "repository": {"repo_id": 3263787, "url": "https://github.com/SEL-Columbia/dristhi", "language": "Java", "is_fork": false, "fork_count": 56, "stargazer_count": 15, "size": 19905, "license": "licensed"}}