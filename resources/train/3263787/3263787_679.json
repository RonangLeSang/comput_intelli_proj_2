{"test_class": {"identifier": "PNCRegistrationOAHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private PNCService pncService;", "modifier": "@Mock\n    private", "type": "PNCService", "declarator": "pncService", "var_name": "pncService"}, {"original_string": "@Mock\n    private ChildService childService;", "modifier": "@Mock\n    private", "type": "ChildService", "declarator": "childService", "var_name": "childService"}, {"original_string": "private PNCRegistrationOAHandler handler;", "modifier": "private", "type": "PNCRegistrationOAHandler", "declarator": "handler", "var_name": "handler"}], "file": "drishti-mother-child/src/test/java/org/ei/drishti/service/formSubmission/handler/PNCRegistrationOAHandlerTest.java"}, "test_case": {"identifier": "shouldDelegateFormSubmissionHandlingToPNCService", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldDelegateFormSubmissionHandlingToPNCService() throws Exception {\n        FormSubmission submission = new FormSubmission(\"anm id 1\", \"instance id 1\", \"pnc_registration_oa\", \"entity id 1\", 0L, \"1\", null, 0L);\n\n        handler.handle(submission);\n\n        verify(pncService).pncRegistrationOA(submission);\n        verify(childService).pncOAChildRegistration(submission);\n    }", "signature": "void shouldDelegateFormSubmissionHandlingToPNCService()", "full_signature": "@Test public void shouldDelegateFormSubmissionHandlingToPNCService()", "class_method_signature": "PNCRegistrationOAHandlerTest.shouldDelegateFormSubmissionHandlingToPNCService()", "testcase": true, "constructor": false, "invocations": ["handle", "pncRegistrationOA", "verify", "pncOAChildRegistration", "verify"]}, "focal_class": {"identifier": "PNCRegistrationOAHandler", "superclass": "", "interfaces": "implements FormSubmissionHandler", "fields": [{"original_string": "private PNCService pncService;", "modifier": "private", "type": "PNCService", "declarator": "pncService", "var_name": "pncService"}, {"original_string": "private ChildService childService;", "modifier": "private", "type": "ChildService", "declarator": "childService", "var_name": "childService"}], "methods": [{"identifier": "PNCRegistrationOAHandler", "parameters": "(PNCService pncService, ChildService childService)", "modifiers": "@Autowired public", "return": "", "signature": " PNCRegistrationOAHandler(PNCService pncService, ChildService childService)", "full_signature": "@Autowired public  PNCRegistrationOAHandler(PNCService pncService, ChildService childService)", "class_method_signature": "PNCRegistrationOAHandler.PNCRegistrationOAHandler(PNCService pncService, ChildService childService)", "testcase": false, "constructor": true}, {"identifier": "handle", "parameters": "(FormSubmission submission)", "modifiers": "@Override public", "return": "void", "signature": "void handle(FormSubmission submission)", "full_signature": "@Override public void handle(FormSubmission submission)", "class_method_signature": "PNCRegistrationOAHandler.handle(FormSubmission submission)", "testcase": false, "constructor": false}], "file": "drishti-mother-child/src/main/java/org/ei/drishti/service/formSubmission/handler/PNCRegistrationOAHandler.java"}, "focal_method": {"identifier": "handle", "parameters": "(FormSubmission submission)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void handle(FormSubmission submission) {\n        pncService.pncRegistrationOA(submission);\n        childService.pncOAChildRegistration(submission);\n    }", "signature": "void handle(FormSubmission submission)", "full_signature": "@Override public void handle(FormSubmission submission)", "class_method_signature": "PNCRegistrationOAHandler.handle(FormSubmission submission)", "testcase": false, "constructor": false, "invocations": ["pncRegistrationOA", "pncOAChildRegistration"]}, "repository": {"repo_id": 3263787, "url": "https://github.com/SEL-Columbia/dristhi", "language": "Java", "is_fork": false, "fork_count": 56, "stargazer_count": 15, "size": 19905, "license": "licensed"}}