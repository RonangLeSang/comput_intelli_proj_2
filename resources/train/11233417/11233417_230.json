{"test_class": {"identifier": "GenomeIntervalTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final ReferenceDictionary refDict = HG19RefDictBuilder.build();", "modifier": "static final", "type": "ReferenceDictionary", "declarator": "refDict = HG19RefDictBuilder.build()", "var_name": "refDict"}], "file": "jannovar-core/src/test/java/de/charite/compbio/jannovar/reference/GenomeIntervalTest.java"}, "test_case": {"identifier": "testIsRightOf", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testIsRightOf() {\n\t\tGenomeInterval interval = new GenomeInterval(refDict, Strand.FWD, 1, 1000, 1200, PositionType.ONE_BASED);\n\t\tAssert.assertFalse(interval.isLeftOf(new GenomePosition(refDict, Strand.FWD, 1, 1200, PositionType.ONE_BASED)));\n\t\tAssert.assertTrue(interval.isLeftOf(new GenomePosition(refDict, Strand.FWD, 1, 1201, PositionType.ONE_BASED)));\n\t}", "signature": "void testIsRightOf()", "full_signature": "@Test public void testIsRightOf()", "class_method_signature": "GenomeIntervalTest.testIsRightOf()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isLeftOf", "assertTrue", "isLeftOf"]}, "focal_class": {"identifier": "GenomeInterval", "superclass": "", "interfaces": "implements Serializable, Comparable<GenomeInterval>", "fields": [{"original_string": "private static final long serialVersionUID = 2L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 2L", "var_name": "serialVersionUID"}, {"original_string": "final ReferenceDictionary refDict;", "modifier": "final", "type": "ReferenceDictionary", "declarator": "refDict", "var_name": "refDict"}, {"original_string": "private final Strand strand;", "modifier": "private final", "type": "Strand", "declarator": "strand", "var_name": "strand"}, {"original_string": "private final int chr;", "modifier": "private final", "type": "int", "declarator": "chr", "var_name": "chr"}, {"original_string": "private final int beginPos;", "modifier": "private final", "type": "int", "declarator": "beginPos", "var_name": "beginPos"}, {"original_string": "private final int endPos;", "modifier": "private final", "type": "int", "declarator": "endPos", "var_name": "endPos"}], "methods": [{"identifier": "GenomeInterval", "parameters": "(ReferenceDictionary refDict, Strand strand, int chr, int beginPos, int endPos)", "modifiers": "public", "return": "", "signature": " GenomeInterval(ReferenceDictionary refDict, Strand strand, int chr, int beginPos, int endPos)", "full_signature": "public  GenomeInterval(ReferenceDictionary refDict, Strand strand, int chr, int beginPos, int endPos)", "class_method_signature": "GenomeInterval.GenomeInterval(ReferenceDictionary refDict, Strand strand, int chr, int beginPos, int endPos)", "testcase": false, "constructor": true}, {"identifier": "GenomeInterval", "parameters": "(ReferenceDictionary refDict, Strand strand, int chr, int beginPos, int endPos,\n\t\t\t\t\t\t  PositionType positionType)", "modifiers": "public", "return": "", "signature": " GenomeInterval(ReferenceDictionary refDict, Strand strand, int chr, int beginPos, int endPos,\n\t\t\t\t\t\t  PositionType positionType)", "full_signature": "public  GenomeInterval(ReferenceDictionary refDict, Strand strand, int chr, int beginPos, int endPos,\n\t\t\t\t\t\t  PositionType positionType)", "class_method_signature": "GenomeInterval.GenomeInterval(ReferenceDictionary refDict, Strand strand, int chr, int beginPos, int endPos,\n\t\t\t\t\t\t  PositionType positionType)", "testcase": false, "constructor": true}, {"identifier": "GenomeInterval", "parameters": "(GenomePosition pos, int length)", "modifiers": "public", "return": "", "signature": " GenomeInterval(GenomePosition pos, int length)", "full_signature": "public  GenomeInterval(GenomePosition pos, int length)", "class_method_signature": "GenomeInterval.GenomeInterval(GenomePosition pos, int length)", "testcase": false, "constructor": true}, {"identifier": "getRefDict", "parameters": "()", "modifiers": "public", "return": "ReferenceDictionary", "signature": "ReferenceDictionary getRefDict()", "full_signature": "public ReferenceDictionary getRefDict()", "class_method_signature": "GenomeInterval.getRefDict()", "testcase": false, "constructor": false}, {"identifier": "getStrand", "parameters": "()", "modifiers": "public", "return": "Strand", "signature": "Strand getStrand()", "full_signature": "public Strand getStrand()", "class_method_signature": "GenomeInterval.getStrand()", "testcase": false, "constructor": false}, {"identifier": "getChr", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getChr()", "full_signature": "public int getChr()", "class_method_signature": "GenomeInterval.getChr()", "testcase": false, "constructor": false}, {"identifier": "getBeginPos", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getBeginPos()", "full_signature": "public int getBeginPos()", "class_method_signature": "GenomeInterval.getBeginPos()", "testcase": false, "constructor": false}, {"identifier": "getEndPos", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getEndPos()", "full_signature": "public int getEndPos()", "class_method_signature": "GenomeInterval.getEndPos()", "testcase": false, "constructor": false}, {"identifier": "withStrand", "parameters": "(Strand strand)", "modifiers": "public", "return": "GenomeInterval", "signature": "GenomeInterval withStrand(Strand strand)", "full_signature": "public GenomeInterval withStrand(Strand strand)", "class_method_signature": "GenomeInterval.withStrand(Strand strand)", "testcase": false, "constructor": false}, {"identifier": "getGenomeBeginPos", "parameters": "()", "modifiers": "public", "return": "GenomePosition", "signature": "GenomePosition getGenomeBeginPos()", "full_signature": "public GenomePosition getGenomeBeginPos()", "class_method_signature": "GenomeInterval.getGenomeBeginPos()", "testcase": false, "constructor": false}, {"identifier": "getGenomeEndPos", "parameters": "()", "modifiers": "public", "return": "GenomePosition", "signature": "GenomePosition getGenomeEndPos()", "full_signature": "public GenomePosition getGenomeEndPos()", "class_method_signature": "GenomeInterval.getGenomeEndPos()", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int length()", "full_signature": "public int length()", "class_method_signature": "GenomeInterval.length()", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(GenomeInterval other)", "modifiers": "public", "return": "GenomeInterval", "signature": "GenomeInterval intersection(GenomeInterval other)", "full_signature": "public GenomeInterval intersection(GenomeInterval other)", "class_method_signature": "GenomeInterval.intersection(GenomeInterval other)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(GenomeInterval other)", "modifiers": "public", "return": "GenomeInterval", "signature": "GenomeInterval union(GenomeInterval other)", "full_signature": "public GenomeInterval union(GenomeInterval other)", "class_method_signature": "GenomeInterval.union(GenomeInterval other)", "testcase": false, "constructor": false}, {"identifier": "isLeftOf", "parameters": "(GenomePosition pos)", "modifiers": "public", "return": "boolean", "signature": "boolean isLeftOf(GenomePosition pos)", "full_signature": "public boolean isLeftOf(GenomePosition pos)", "class_method_signature": "GenomeInterval.isLeftOf(GenomePosition pos)", "testcase": false, "constructor": false}, {"identifier": "isRightOf", "parameters": "(GenomePosition pos)", "modifiers": "public", "return": "boolean", "signature": "boolean isRightOf(GenomePosition pos)", "full_signature": "public boolean isRightOf(GenomePosition pos)", "class_method_signature": "GenomeInterval.isRightOf(GenomePosition pos)", "testcase": false, "constructor": false}, {"identifier": "isLeftOfGap", "parameters": "(GenomePosition pos)", "modifiers": "public", "return": "boolean", "signature": "boolean isLeftOfGap(GenomePosition pos)", "full_signature": "public boolean isLeftOfGap(GenomePosition pos)", "class_method_signature": "GenomeInterval.isLeftOfGap(GenomePosition pos)", "testcase": false, "constructor": false}, {"identifier": "ensureSameStrand", "parameters": "(GenomePosition pos)", "modifiers": "private", "return": "GenomePosition", "signature": "GenomePosition ensureSameStrand(GenomePosition pos)", "full_signature": "private GenomePosition ensureSameStrand(GenomePosition pos)", "class_method_signature": "GenomeInterval.ensureSameStrand(GenomePosition pos)", "testcase": false, "constructor": false}, {"identifier": "isRightOfGap", "parameters": "(GenomePosition pos)", "modifiers": "public", "return": "boolean", "signature": "boolean isRightOfGap(GenomePosition pos)", "full_signature": "public boolean isRightOfGap(GenomePosition pos)", "class_method_signature": "GenomeInterval.isRightOfGap(GenomePosition pos)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(GenomePosition pos)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(GenomePosition pos)", "full_signature": "public boolean contains(GenomePosition pos)", "class_method_signature": "GenomeInterval.contains(GenomePosition pos)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(GenomeInterval other)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(GenomeInterval other)", "full_signature": "public boolean contains(GenomeInterval other)", "class_method_signature": "GenomeInterval.contains(GenomeInterval other)", "testcase": false, "constructor": false}, {"identifier": "withMorePadding", "parameters": "(int padding)", "modifiers": "public", "return": "GenomeInterval", "signature": "GenomeInterval withMorePadding(int padding)", "full_signature": "public GenomeInterval withMorePadding(int padding)", "class_method_signature": "GenomeInterval.withMorePadding(int padding)", "testcase": false, "constructor": false}, {"identifier": "withMorePadding", "parameters": "(int paddingUpstream, int paddingDownstream)", "modifiers": "public", "return": "GenomeInterval", "signature": "GenomeInterval withMorePadding(int paddingUpstream, int paddingDownstream)", "full_signature": "public GenomeInterval withMorePadding(int paddingUpstream, int paddingDownstream)", "class_method_signature": "GenomeInterval.withMorePadding(int paddingUpstream, int paddingDownstream)", "testcase": false, "constructor": false}, {"identifier": "overlapsWith", "parameters": "(GenomeInterval other)", "modifiers": "public", "return": "boolean", "signature": "boolean overlapsWith(GenomeInterval other)", "full_signature": "public boolean overlapsWith(GenomeInterval other)", "class_method_signature": "GenomeInterval.overlapsWith(GenomeInterval other)", "testcase": false, "constructor": false}, {"identifier": "ensureSameStrand", "parameters": "(GenomeInterval other)", "modifiers": "private", "return": "GenomeInterval", "signature": "GenomeInterval ensureSameStrand(GenomeInterval other)", "full_signature": "private GenomeInterval ensureSameStrand(GenomeInterval other)", "class_method_signature": "GenomeInterval.ensureSameStrand(GenomeInterval other)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "GenomeInterval.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "GenomeInterval.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "GenomeInterval.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(GenomeInterval other)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(GenomeInterval other)", "full_signature": "@Override public int compareTo(GenomeInterval other)", "class_method_signature": "GenomeInterval.compareTo(GenomeInterval other)", "testcase": false, "constructor": false}], "file": "jannovar-core/src/main/java/de/charite/compbio/jannovar/reference/GenomeInterval.java"}, "focal_method": {"identifier": "isRightOf", "parameters": "(GenomePosition pos)", "modifiers": "public", "return": "boolean", "body": "public boolean isRightOf(GenomePosition pos) {\n\t\tif (chr != pos.getChr())\n\t\t\treturn false; // wrong chromosome\n\t\tpos = ensureSameStrand(pos);\n\t\treturn (pos.getPos() < beginPos);\n\t}", "signature": "boolean isRightOf(GenomePosition pos)", "full_signature": "public boolean isRightOf(GenomePosition pos)", "class_method_signature": "GenomeInterval.isRightOf(GenomePosition pos)", "testcase": false, "constructor": false, "invocations": ["getChr", "ensureSameStrand", "getPos"]}, "repository": {"repo_id": 11233417, "url": "https://github.com/charite/jannovar", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 35, "size": 23934, "license": "licensed"}}