{"test_class": {"identifier": "NucleotideSubstitutionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private NucleotideSubstitution subWithOffset;", "modifier": "private", "type": "NucleotideSubstitution", "declarator": "subWithOffset", "var_name": "subWithOffset"}, {"original_string": "private NucleotideSubstitution subWithoutOffset;", "modifier": "private", "type": "NucleotideSubstitution", "declarator": "subWithoutOffset", "var_name": "subWithoutOffset"}], "file": "jannovar-hgvs/src/test/java/de/charite/compbio/jannovar/hgvs/nts/change/NucleotideSubstitutionTest.java"}, "test_case": {"identifier": "testBuildWithOffset", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testBuildWithOffset() {\n\t\tAssert.assertEquals(subWithOffset, NucleotideSubstitution.buildWithOffset(true, 10, 1, \"A\", \"T\"));\n\t}", "signature": "void testBuildWithOffset()", "full_signature": "@Test public void testBuildWithOffset()", "class_method_signature": "NucleotideSubstitutionTest.testBuildWithOffset()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "buildWithOffset"]}, "focal_class": {"identifier": "NucleotideSubstitution", "superclass": "extends NucleotideChange", "interfaces": "", "fields": [{"original_string": "private final NucleotidePointLocation position;", "modifier": "private final", "type": "NucleotidePointLocation", "declarator": "position", "var_name": "position"}, {"original_string": "private final String fromNT;", "modifier": "private final", "type": "String", "declarator": "fromNT", "var_name": "fromNT"}, {"original_string": "private final String toNT;", "modifier": "private final", "type": "String", "declarator": "toNT", "var_name": "toNT"}], "methods": [{"identifier": "buildWithOffset", "parameters": "(boolean onlyPredicted, int basePos, int posOffset,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t String fromNT, String toNT)", "modifiers": "public static", "return": "NucleotideSubstitution", "signature": "NucleotideSubstitution buildWithOffset(boolean onlyPredicted, int basePos, int posOffset,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t String fromNT, String toNT)", "full_signature": "public static NucleotideSubstitution buildWithOffset(boolean onlyPredicted, int basePos, int posOffset,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t String fromNT, String toNT)", "class_method_signature": "NucleotideSubstitution.buildWithOffset(boolean onlyPredicted, int basePos, int posOffset,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t String fromNT, String toNT)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(boolean onlyPredicted, int basePos, String fromNT, String toNT)", "modifiers": "public static", "return": "NucleotideSubstitution", "signature": "NucleotideSubstitution build(boolean onlyPredicted, int basePos, String fromNT, String toNT)", "full_signature": "public static NucleotideSubstitution build(boolean onlyPredicted, int basePos, String fromNT, String toNT)", "class_method_signature": "NucleotideSubstitution.build(boolean onlyPredicted, int basePos, String fromNT, String toNT)", "testcase": false, "constructor": false}, {"identifier": "NucleotideSubstitution", "parameters": "(boolean onlyPredicted, NucleotidePointLocation position, String fromNT, String toNT)", "modifiers": "public", "return": "", "signature": " NucleotideSubstitution(boolean onlyPredicted, NucleotidePointLocation position, String fromNT, String toNT)", "full_signature": "public  NucleotideSubstitution(boolean onlyPredicted, NucleotidePointLocation position, String fromNT, String toNT)", "class_method_signature": "NucleotideSubstitution.NucleotideSubstitution(boolean onlyPredicted, NucleotidePointLocation position, String fromNT, String toNT)", "testcase": false, "constructor": true}, {"identifier": "withOnlyPredicted", "parameters": "(boolean flag)", "modifiers": "@Override public", "return": "NucleotideSubstitution", "signature": "NucleotideSubstitution withOnlyPredicted(boolean flag)", "full_signature": "@Override public NucleotideSubstitution withOnlyPredicted(boolean flag)", "class_method_signature": "NucleotideSubstitution.withOnlyPredicted(boolean flag)", "testcase": false, "constructor": false}, {"identifier": "getPosition", "parameters": "()", "modifiers": "public", "return": "NucleotidePointLocation", "signature": "NucleotidePointLocation getPosition()", "full_signature": "public NucleotidePointLocation getPosition()", "class_method_signature": "NucleotideSubstitution.getPosition()", "testcase": false, "constructor": false}, {"identifier": "getFromNT", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFromNT()", "full_signature": "public String getFromNT()", "class_method_signature": "NucleotideSubstitution.getFromNT()", "testcase": false, "constructor": false}, {"identifier": "getToNT", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getToNT()", "full_signature": "public String getToNT()", "class_method_signature": "NucleotideSubstitution.getToNT()", "testcase": false, "constructor": false}, {"identifier": "toHGVSString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toHGVSString()", "full_signature": "@Override public String toHGVSString()", "class_method_signature": "NucleotideSubstitution.toHGVSString()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "NucleotideSubstitution.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "NucleotideSubstitution.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "NucleotideSubstitution.equals(Object obj)", "testcase": false, "constructor": false}], "file": "jannovar-hgvs/src/main/java/de/charite/compbio/jannovar/hgvs/nts/change/NucleotideSubstitution.java"}, "focal_method": {"identifier": "buildWithOffset", "parameters": "(boolean onlyPredicted, int basePos, int posOffset,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t String fromNT, String toNT)", "modifiers": "public static", "return": "NucleotideSubstitution", "body": "public static NucleotideSubstitution buildWithOffset(boolean onlyPredicted, int basePos, int posOffset,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t String fromNT, String toNT) {\n\t\treturn new NucleotideSubstitution(onlyPredicted, NucleotidePointLocation.buildWithOffset(basePos, posOffset),\n\t\t\tfromNT, toNT);\n\t}", "signature": "NucleotideSubstitution buildWithOffset(boolean onlyPredicted, int basePos, int posOffset,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t String fromNT, String toNT)", "full_signature": "public static NucleotideSubstitution buildWithOffset(boolean onlyPredicted, int basePos, int posOffset,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t String fromNT, String toNT)", "class_method_signature": "NucleotideSubstitution.buildWithOffset(boolean onlyPredicted, int basePos, int posOffset,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t String fromNT, String toNT)", "testcase": false, "constructor": false, "invocations": ["buildWithOffset"]}, "repository": {"repo_id": 11233417, "url": "https://github.com/charite/jannovar", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 35, "size": 23934, "license": "licensed"}}