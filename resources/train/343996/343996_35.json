{"test_class": {"identifier": "CityTest", "superclass": "", "interfaces": "", "fields": [], "file": "client/src/test/java/com/gisgraphy/client/administrativedivision/CityTest.java"}, "test_case": {"identifier": "shouldReturnCurrency", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void shouldReturnCurrency() {\n\tAssert.assertEquals(\"EUR\", rambouilletCity().getCurrency().getCurrencyCode());\n    }", "signature": "void shouldReturnCurrency()", "full_signature": "@Test public void shouldReturnCurrency()", "class_method_signature": "CityTest.shouldReturnCurrency()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getCurrencyCode", "getCurrency", "rambouilletCity"]}, "focal_class": {"identifier": "City", "superclass": "", "interfaces": "implements Comparable<City>, GisFeature, DistanceCalculator<City>, AdministrativeEntity, CurrencyProvider", "fields": [{"original_string": "private GisFeatureProvider gisFeatureProvider;", "modifier": "private", "type": "GisFeatureProvider", "declarator": "gisFeatureProvider", "var_name": "gisFeatureProvider"}], "methods": [{"identifier": "forFeature", "parameters": "(GeonamesGisFeature gisFeature)", "modifiers": "public static", "return": "City", "signature": "City forFeature(GeonamesGisFeature gisFeature)", "full_signature": "public static City forFeature(GeonamesGisFeature gisFeature)", "class_method_signature": "City.forFeature(GeonamesGisFeature gisFeature)", "testcase": false, "constructor": false}, {"identifier": "forGisFeatureProvider", "parameters": "(GisFeatureProvider gisFeatureProvider)", "modifiers": "public static", "return": "City", "signature": "City forGisFeatureProvider(GisFeatureProvider gisFeatureProvider)", "full_signature": "public static City forGisFeatureProvider(GisFeatureProvider gisFeatureProvider)", "class_method_signature": "City.forGisFeatureProvider(GisFeatureProvider gisFeatureProvider)", "testcase": false, "constructor": false}, {"identifier": "City", "parameters": "(GisFeatureProvider gisFeatureProvider)", "modifiers": "private", "return": "", "signature": " City(GisFeatureProvider gisFeatureProvider)", "full_signature": "private  City(GisFeatureProvider gisFeatureProvider)", "class_method_signature": "City.City(GisFeatureProvider gisFeatureProvider)", "testcase": false, "constructor": true}, {"identifier": "shouldHaveParentAdministrativeEntity", "parameters": "(GisFeature gisFeature)", "modifiers": "private", "return": "void", "signature": "void shouldHaveParentAdministrativeEntity(GisFeature gisFeature)", "full_signature": "private void shouldHaveParentAdministrativeEntity(GisFeature gisFeature)", "class_method_signature": "City.shouldHaveParentAdministrativeEntity(GisFeature gisFeature)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(City o)", "modifiers": "public", "return": "int", "signature": "int compareTo(City o)", "full_signature": "public int compareTo(City o)", "class_method_signature": "City.compareTo(City o)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "City.getName()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "City.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "City.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "getGisFeatureAlternateNames", "parameters": "()", "modifiers": "public", "return": "ImmutableSet<AlternateGisFeatureName>", "signature": "ImmutableSet<AlternateGisFeatureName> getGisFeatureAlternateNames()", "full_signature": "public ImmutableSet<AlternateGisFeatureName> getGisFeatureAlternateNames()", "class_method_signature": "City.getGisFeatureAlternateNames()", "testcase": false, "constructor": false}, {"identifier": "getGisFeature", "parameters": "()", "modifiers": "public", "return": "GisFeature", "signature": "GisFeature getGisFeature()", "full_signature": "public GisFeature getGisFeature()", "class_method_signature": "City.getGisFeature()", "testcase": false, "constructor": false}, {"identifier": "getGeonamesId", "parameters": "()", "modifiers": "public", "return": "Long", "signature": "Long getGeonamesId()", "full_signature": "public Long getGeonamesId()", "class_method_signature": "City.getGeonamesId()", "testcase": false, "constructor": false}, {"identifier": "getGisFeatureDefaultName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getGisFeatureDefaultName()", "full_signature": "public String getGisFeatureDefaultName()", "class_method_signature": "City.getGisFeatureDefaultName()", "testcase": false, "constructor": false}, {"identifier": "getGisFeaturePreferredName", "parameters": "(Iso639Language language)", "modifiers": "public", "return": "String", "signature": "String getGisFeaturePreferredName(Iso639Language language)", "full_signature": "public String getGisFeaturePreferredName(Iso639Language language)", "class_method_signature": "City.getGisFeaturePreferredName(Iso639Language language)", "testcase": false, "constructor": false}, {"identifier": "getGisFeatureShortName", "parameters": "(Iso639Language language)", "modifiers": "public", "return": "String", "signature": "String getGisFeatureShortName(Iso639Language language)", "full_signature": "public String getGisFeatureShortName(Iso639Language language)", "class_method_signature": "City.getGisFeatureShortName(Iso639Language language)", "testcase": false, "constructor": false}, {"identifier": "getParentAdministrativeEntity", "parameters": "()", "modifiers": "public", "return": "AdministrativeEntity", "signature": "AdministrativeEntity getParentAdministrativeEntity()", "full_signature": "public AdministrativeEntity getParentAdministrativeEntity()", "class_method_signature": "City.getParentAdministrativeEntity()", "testcase": false, "constructor": false}, {"identifier": "getElevation", "parameters": "()", "modifiers": "public", "return": "Long", "signature": "Long getElevation()", "full_signature": "public Long getElevation()", "class_method_signature": "City.getElevation()", "testcase": false, "constructor": false}, {"identifier": "getGisFeatureType", "parameters": "()", "modifiers": "public", "return": "GisFeatureType", "signature": "GisFeatureType getGisFeatureType()", "full_signature": "public GisFeatureType getGisFeatureType()", "class_method_signature": "City.getGisFeatureType()", "testcase": false, "constructor": false}, {"identifier": "getGtopo30AverageElevation", "parameters": "()", "modifiers": "public", "return": "Long", "signature": "Long getGtopo30AverageElevation()", "full_signature": "public Long getGtopo30AverageElevation()", "class_method_signature": "City.getGtopo30AverageElevation()", "testcase": false, "constructor": false}, {"identifier": "getLastModificationDate", "parameters": "()", "modifiers": "public", "return": "DateTime", "signature": "DateTime getLastModificationDate()", "full_signature": "public DateTime getLastModificationDate()", "class_method_signature": "City.getLastModificationDate()", "testcase": false, "constructor": false}, {"identifier": "getLatitude", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getLatitude()", "full_signature": "public double getLatitude()", "class_method_signature": "City.getLatitude()", "testcase": false, "constructor": false}, {"identifier": "getLocation", "parameters": "()", "modifiers": "public", "return": "Point", "signature": "Point getLocation()", "full_signature": "public Point getLocation()", "class_method_signature": "City.getLocation()", "testcase": false, "constructor": false}, {"identifier": "getLongitude", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getLongitude()", "full_signature": "public double getLongitude()", "class_method_signature": "City.getLongitude()", "testcase": false, "constructor": false}, {"identifier": "getPopulation", "parameters": "()", "modifiers": "public", "return": "Long", "signature": "Long getPopulation()", "full_signature": "public Long getPopulation()", "class_method_signature": "City.getPopulation()", "testcase": false, "constructor": false}, {"identifier": "getTimeZone", "parameters": "()", "modifiers": "public", "return": "DateTimeZone", "signature": "DateTimeZone getTimeZone()", "full_signature": "public DateTimeZone getTimeZone()", "class_method_signature": "City.getTimeZone()", "testcase": false, "constructor": false}, {"identifier": "distance", "parameters": "(City o, Unit<Length> unit)", "modifiers": "public", "return": "double", "signature": "double distance(City o, Unit<Length> unit)", "full_signature": "public double distance(City o, Unit<Length> unit)", "class_method_signature": "City.distance(City o, Unit<Length> unit)", "testcase": false, "constructor": false}, {"identifier": "gisFeatureDistanceCalculator", "parameters": "()", "modifiers": "private", "return": "DistanceCalculator<GisFeature>", "signature": "DistanceCalculator<GisFeature> gisFeatureDistanceCalculator()", "full_signature": "private DistanceCalculator<GisFeature> gisFeatureDistanceCalculator()", "class_method_signature": "City.gisFeatureDistanceCalculator()", "testcase": false, "constructor": false}, {"identifier": "administrativeEntityLevelProvider", "parameters": "()", "modifiers": "private", "return": "AdministrativeEntityHierarchy", "signature": "AdministrativeEntityHierarchy administrativeEntityLevelProvider()", "full_signature": "private AdministrativeEntityHierarchy administrativeEntityLevelProvider()", "class_method_signature": "City.administrativeEntityLevelProvider()", "testcase": false, "constructor": false}, {"identifier": "getAdministrativeEntity", "parameters": "(int level)", "modifiers": "public", "return": "AdministrativeEntity", "signature": "AdministrativeEntity getAdministrativeEntity(int level)", "full_signature": "public AdministrativeEntity getAdministrativeEntity(int level)", "class_method_signature": "City.getAdministrativeEntity(int level)", "testcase": false, "constructor": false}, {"identifier": "getAdminitrativeDivisionLevel", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getAdminitrativeDivisionLevel()", "full_signature": "public int getAdminitrativeDivisionLevel()", "class_method_signature": "City.getAdminitrativeDivisionLevel()", "testcase": false, "constructor": false}, {"identifier": "getCountry", "parameters": "()", "modifiers": "public", "return": "Country", "signature": "Country getCountry()", "full_signature": "public Country getCountry()", "class_method_signature": "City.getCountry()", "testcase": false, "constructor": false}, {"identifier": "getCurrency", "parameters": "()", "modifiers": "public", "return": "Currency", "signature": "Currency getCurrency()", "full_signature": "public Currency getCurrency()", "class_method_signature": "City.getCurrency()", "testcase": false, "constructor": false}, {"identifier": "getFullyQualifiedNameParts", "parameters": "()", "modifiers": "public", "return": "ImmutableList<NamePart>", "signature": "ImmutableList<NamePart> getFullyQualifiedNameParts()", "full_signature": "public ImmutableList<NamePart> getFullyQualifiedNameParts()", "class_method_signature": "City.getFullyQualifiedNameParts()", "testcase": false, "constructor": false}, {"identifier": "getFriendlyCode", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFriendlyCode()", "full_signature": "public String getFriendlyCode()", "class_method_signature": "City.getFriendlyCode()", "testcase": false, "constructor": false}, {"identifier": "formatName", "parameters": "(NameFormatter nameFormatter)", "modifiers": "public", "return": "String", "signature": "String formatName(NameFormatter nameFormatter)", "full_signature": "public String formatName(NameFormatter nameFormatter)", "class_method_signature": "City.formatName(NameFormatter nameFormatter)", "testcase": false, "constructor": false}, {"identifier": "gisFeature", "parameters": "()", "modifiers": "private", "return": "GisFeature", "signature": "GisFeature gisFeature()", "full_signature": "private GisFeature gisFeature()", "class_method_signature": "City.gisFeature()", "testcase": false, "constructor": false}], "file": "client/src/main/java/com/gisgraphy/client/administrativedivision/City.java"}, "focal_method": {"identifier": "getCurrency", "parameters": "()", "modifiers": "public", "return": "Currency", "body": "public Currency getCurrency() {\n\treturn getCountry().getCurrency();\n    }", "signature": "Currency getCurrency()", "full_signature": "public Currency getCurrency()", "class_method_signature": "City.getCurrency()", "testcase": false, "constructor": false, "invocations": ["getCurrency", "getCountry"]}, "repository": {"repo_id": 343996, "url": "https://github.com/samidalouche/gisgraphy-java-client", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 562, "license": "licensed"}}