{"test_class": {"identifier": "TestWorkBenchPresenter", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private WorkBenchViewImpl         view;", "modifier": "@Mock\n    private", "type": "WorkBenchViewImpl", "declarator": "view", "var_name": "view"}, {"original_string": "@Mock\n    private EditorPartStack           editorPartStackPresenter;", "modifier": "@Mock\n    private", "type": "EditorPartStack", "declarator": "editorPartStackPresenter", "var_name": "editorPartStackPresenter"}, {"original_string": "@Mock(answer = Answers.RETURNS_MOCKS)\n    private PartStackPresenterFactory stackPresenterFactory;", "modifier": "@Mock(answer = Answers.RETURNS_MOCKS)\n    private", "type": "PartStackPresenterFactory", "declarator": "stackPresenterFactory", "var_name": "stackPresenterFactory"}, {"original_string": "@Mock\n    private PartStackViewFactory      partViewFactory;", "modifier": "@Mock\n    private", "type": "PartStackViewFactory", "declarator": "partViewFactory", "var_name": "partViewFactory"}, {"original_string": "@Mock\n    private OutlinePart               outlinePart;", "modifier": "@Mock\n    private", "type": "OutlinePart", "declarator": "outlinePart", "var_name": "outlinePart"}, {"original_string": "@Mock\n    private ProjectExplorerPart       projectExplorerPart;", "modifier": "@Mock\n    private", "type": "ProjectExplorerPart", "declarator": "projectExplorerPart", "var_name": "projectExplorerPart"}, {"original_string": "@Mock\n    private NotificationManager       notificationManager;", "modifier": "@Mock\n    private", "type": "NotificationManager", "declarator": "notificationManager", "var_name": "notificationManager"}, {"original_string": "@Mock\n    private HideWidgetCallback        hideWidgetCallback;", "modifier": "@Mock\n    private", "type": "HideWidgetCallback", "declarator": "hideWidgetCallback", "var_name": "hideWidgetCallback"}, {"original_string": "private WorkBenchPresenter workBenchPresenter;", "modifier": "private", "type": "WorkBenchPresenter", "declarator": "workBenchPresenter", "var_name": "workBenchPresenter"}, {"original_string": "@Mock\n    private PartPresenter toolingPart;", "modifier": "@Mock\n    private", "type": "PartPresenter", "declarator": "toolingPart", "var_name": "toolingPart"}, {"original_string": "@Mock\n    private PartPresenter informationPart;", "modifier": "@Mock\n    private", "type": "PartPresenter", "declarator": "informationPart", "var_name": "informationPart"}, {"original_string": "@Mock\n    private PartPresenter editorPart;", "modifier": "@Mock\n    private", "type": "PartPresenter", "declarator": "editorPart", "var_name": "editorPart"}, {"original_string": "@Mock\n    private PartPresenter navigationPart;", "modifier": "@Mock\n    private", "type": "PartPresenter", "declarator": "navigationPart", "var_name": "navigationPart"}, {"original_string": "private static PartStack toolingPartStack;", "modifier": "private static", "type": "PartStack", "declarator": "toolingPartStack", "var_name": "toolingPartStack"}, {"original_string": "private static PartStack informationPartStack;", "modifier": "private static", "type": "PartStack", "declarator": "informationPartStack", "var_name": "informationPartStack"}, {"original_string": "private static PartStack editorPartStack;", "modifier": "private static", "type": "PartStack", "declarator": "editorPartStack", "var_name": "editorPartStack"}, {"original_string": "private static PartStack navigationPartStack;", "modifier": "private static", "type": "PartStack", "declarator": "navigationPartStack", "var_name": "navigationPartStack"}], "file": "codenvy-ide-core/src/test/java/org/eclipse/che/ide/workspace/TestWorkBenchPresenter.java"}, "test_case": {"identifier": "shouldSetActivePart", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldSetActivePart() {\n        PartPresenter part = mock(PartPresenter.class);\n\n        when(toolingPartStack.containsPart(part)).thenReturn(true);\n\n        workBenchPresenter.setActivePart(part);\n\n        verify(toolingPartStack).setActivePart(part);\n    }", "signature": "void shouldSetActivePart()", "full_signature": "@Test public void shouldSetActivePart()", "class_method_signature": "TestWorkBenchPresenter.shouldSetActivePart()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "containsPart", "setActivePart", "setActivePart", "verify"]}, "focal_class": {"identifier": "WorkBenchPresenter", "superclass": "", "interfaces": "implements Presenter", "fields": [{"original_string": "protected final StringMap<PartStack> partStacks = Collections.createStringMap();", "modifier": "protected final", "type": "StringMap<PartStack>", "declarator": "partStacks = Collections.createStringMap()", "var_name": "partStacks"}, {"original_string": "private WorkBenchViewImpl   view;", "modifier": "private", "type": "WorkBenchViewImpl", "declarator": "view", "var_name": "view"}, {"original_string": "private List<PartPresenter> activeParts;", "modifier": "private", "type": "List<PartPresenter>", "declarator": "activeParts", "var_name": "activeParts"}], "methods": [{"identifier": "WorkBenchPresenter", "parameters": "(WorkBenchViewImpl view,\n                              EditorPartStack editorPartStackPresenter,\n                              PartStackPresenterFactory stackPresenterFactory,\n                              PartStackViewFactory partViewFactory,\n                              OutlinePart outlinePart,\n                              ProjectExplorerPart projectExplorerPart,\n                              NotificationManager notificationManager,\n                              HideWidgetCallback hideWidgetCallback)", "modifiers": "@Inject public", "return": "", "signature": " WorkBenchPresenter(WorkBenchViewImpl view,\n                              EditorPartStack editorPartStackPresenter,\n                              PartStackPresenterFactory stackPresenterFactory,\n                              PartStackViewFactory partViewFactory,\n                              OutlinePart outlinePart,\n                              ProjectExplorerPart projectExplorerPart,\n                              NotificationManager notificationManager,\n                              HideWidgetCallback hideWidgetCallback)", "full_signature": "@Inject public  WorkBenchPresenter(WorkBenchViewImpl view,\n                              EditorPartStack editorPartStackPresenter,\n                              PartStackPresenterFactory stackPresenterFactory,\n                              PartStackViewFactory partViewFactory,\n                              OutlinePart outlinePart,\n                              ProjectExplorerPart projectExplorerPart,\n                              NotificationManager notificationManager,\n                              HideWidgetCallback hideWidgetCallback)", "class_method_signature": "WorkBenchPresenter.WorkBenchPresenter(WorkBenchViewImpl view,\n                              EditorPartStack editorPartStackPresenter,\n                              PartStackPresenterFactory stackPresenterFactory,\n                              PartStackViewFactory partViewFactory,\n                              OutlinePart outlinePart,\n                              ProjectExplorerPart projectExplorerPart,\n                              NotificationManager notificationManager,\n                              HideWidgetCallback hideWidgetCallback)", "testcase": false, "constructor": true}, {"identifier": "removePart", "parameters": "(PartPresenter part)", "modifiers": "public", "return": "void", "signature": "void removePart(PartPresenter part)", "full_signature": "public void removePart(PartPresenter part)", "class_method_signature": "WorkBenchPresenter.removePart(PartPresenter part)", "testcase": false, "constructor": false}, {"identifier": "hidePart", "parameters": "(PartPresenter part)", "modifiers": "public", "return": "void", "signature": "void hidePart(PartPresenter part)", "full_signature": "public void hidePart(PartPresenter part)", "class_method_signature": "WorkBenchPresenter.hidePart(PartPresenter part)", "testcase": false, "constructor": false}, {"identifier": "expandEditorPart", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void expandEditorPart()", "full_signature": "public void expandEditorPart()", "class_method_signature": "WorkBenchPresenter.expandEditorPart()", "testcase": false, "constructor": false}, {"identifier": "restoreEditorPart", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void restoreEditorPart()", "full_signature": "public void restoreEditorPart()", "class_method_signature": "WorkBenchPresenter.restoreEditorPart()", "testcase": false, "constructor": false}, {"identifier": "setActivePart", "parameters": "(PartPresenter part)", "modifiers": "public", "return": "void", "signature": "void setActivePart(PartPresenter part)", "full_signature": "public void setActivePart(PartPresenter part)", "class_method_signature": "WorkBenchPresenter.setActivePart(PartPresenter part)", "testcase": false, "constructor": false}, {"identifier": "findPartStackByPart", "parameters": "(PartPresenter part)", "modifiers": "protected", "return": "PartStack", "signature": "PartStack findPartStackByPart(PartPresenter part)", "full_signature": "protected PartStack findPartStackByPart(PartPresenter part)", "class_method_signature": "WorkBenchPresenter.findPartStackByPart(PartPresenter part)", "testcase": false, "constructor": false}, {"identifier": "openPart", "parameters": "(PartPresenter part, PartStackType type)", "modifiers": "public", "return": "void", "signature": "void openPart(PartPresenter part, PartStackType type)", "full_signature": "public void openPart(PartPresenter part, PartStackType type)", "class_method_signature": "WorkBenchPresenter.openPart(PartPresenter part, PartStackType type)", "testcase": false, "constructor": false}, {"identifier": "openPart", "parameters": "(PartPresenter part, PartStackType type, Constraints constraint)", "modifiers": "public", "return": "void", "signature": "void openPart(PartPresenter part, PartStackType type, Constraints constraint)", "full_signature": "public void openPart(PartPresenter part, PartStackType type, Constraints constraint)", "class_method_signature": "WorkBenchPresenter.openPart(PartPresenter part, PartStackType type, Constraints constraint)", "testcase": false, "constructor": false}, {"identifier": "go", "parameters": "(AcceptsOneWidget container)", "modifiers": "@Override public", "return": "void", "signature": "void go(AcceptsOneWidget container)", "full_signature": "@Override public void go(AcceptsOneWidget container)", "class_method_signature": "WorkBenchPresenter.go(AcceptsOneWidget container)", "testcase": false, "constructor": false}, {"identifier": "getPartStack", "parameters": "(PartStackType type)", "modifiers": "protected", "return": "PartStack", "signature": "PartStack getPartStack(PartStackType type)", "full_signature": "protected PartStack getPartStack(PartStackType type)", "class_method_signature": "WorkBenchPresenter.getPartStack(PartStackType type)", "testcase": false, "constructor": false}], "file": "codenvy-ide-core/src/main/java/org/eclipse/che/ide/workspace/WorkBenchPresenter.java"}, "focal_method": {"identifier": "setActivePart", "parameters": "(PartPresenter part)", "modifiers": "public", "return": "void", "body": "public void setActivePart(PartPresenter part) {\n        PartStack destPartStack = findPartStackByPart(part);\n        if (destPartStack != null) {\n            destPartStack.setActivePart(part);\n            // will request focus for stack\n        }\n    }", "signature": "void setActivePart(PartPresenter part)", "full_signature": "public void setActivePart(PartPresenter part)", "class_method_signature": "WorkBenchPresenter.setActivePart(PartPresenter part)", "testcase": false, "constructor": false, "invocations": ["findPartStackByPart", "setActivePart"]}, "repository": {"repo_id": 7891529, "url": "https://github.com/codenvy-legacy/ide", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 30, "size": 215508, "license": "licensed"}}