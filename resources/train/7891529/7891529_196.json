{"test_class": {"identifier": "NotificationManagerImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private EventBus                 eventBus;", "modifier": "@Mock\n    private", "type": "EventBus", "declarator": "eventBus", "var_name": "eventBus"}, {"original_string": "@Mock\n    private NotificationManagerView  view;", "modifier": "@Mock\n    private", "type": "NotificationManagerView", "declarator": "view", "var_name": "view"}, {"original_string": "@Mock\n    private DialogFactory            dialogFactory;", "modifier": "@Mock\n    private", "type": "DialogFactory", "declarator": "dialogFactory", "var_name": "dialogFactory"}, {"original_string": "@Mock\n    private NotificationContainer    notificationContainer;", "modifier": "@Mock\n    private", "type": "NotificationContainer", "declarator": "notificationContainer", "var_name": "notificationContainer"}, {"original_string": "@Mock\n    private NotificationMessageStack notificationMessageStack;", "modifier": "@Mock\n    private", "type": "NotificationMessageStack", "declarator": "notificationMessageStack", "var_name": "notificationMessageStack"}, {"original_string": "private NotificationManagerImpl manager;", "modifier": "private", "type": "NotificationManagerImpl", "declarator": "manager", "var_name": "manager"}, {"original_string": "@Mock\n    PartStackPresenter partStack;", "modifier": "@Mock", "type": "PartStackPresenter", "declarator": "partStack", "var_name": "partStack"}], "file": "codenvy-ide-core/src/test/java/org/eclipse/che/ide/notification/NotificationManagerImplTest.java"}, "test_case": {"identifier": "testRemoveNotification", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRemoveNotification() throws Exception {\n        Notification notification = new Notification(\"test message\", INFO);\n        manager.removeNotification(notification);\n\n        verify(notificationContainer).removeNotification(eq(notification));\n        verify(notificationMessageStack).removeNotification(eq(notification));\n        verify(view).setNotificationCount(anyInt());\n    }", "signature": "void testRemoveNotification()", "full_signature": "@Test public void testRemoveNotification()", "class_method_signature": "NotificationManagerImplTest.testRemoveNotification()", "testcase": true, "constructor": false, "invocations": ["removeNotification", "removeNotification", "verify", "eq", "removeNotification", "verify", "eq", "setNotificationCount", "verify", "anyInt"]}, "focal_class": {"identifier": "NotificationManagerImpl", "superclass": "extends BasePresenter", "interfaces": "implements NotificationManager,\n                                                                      NotificationItem.ActionDelegate,\n                                                                      Notification.NotificationObserver,\n                                                                      NotificationManagerView.ActionDelegate,\n                                                                      NotificationMessageStack.ActionDelegate,\n                                                                      HasView", "fields": [{"original_string": "private static final DateTimeFormat DATA_FORMAT = DateTimeFormat.getFormat(\"hh:mm:ss\");", "modifier": "private static final", "type": "DateTimeFormat", "declarator": "DATA_FORMAT = DateTimeFormat.getFormat(\"hh:mm:ss\")", "var_name": "DATA_FORMAT"}, {"original_string": "private static final String         TITLE       = \"Events\";", "modifier": "private static final", "type": "String", "declarator": "TITLE       = \"Events\"", "var_name": "TITLE"}, {"original_string": "private NotificationManagerView  view;", "modifier": "private", "type": "NotificationManagerView", "declarator": "view", "var_name": "view"}, {"original_string": "private DialogFactory            dialogFactory;", "modifier": "private", "type": "DialogFactory", "declarator": "dialogFactory", "var_name": "dialogFactory"}, {"original_string": "private NotificationContainer    notificationContainer;", "modifier": "private", "type": "NotificationContainer", "declarator": "notificationContainer", "var_name": "notificationContainer"}, {"original_string": "private NotificationMessageStack notificationMessageStack;", "modifier": "private", "type": "NotificationMessageStack", "declarator": "notificationMessageStack", "var_name": "notificationMessageStack"}, {"original_string": "private Array<Notification>      notifications;", "modifier": "private", "type": "Array<Notification>", "declarator": "notifications", "var_name": "notifications"}], "methods": [{"identifier": "NotificationManagerImpl", "parameters": "(EventBus eventBus,\n                                   NotificationManagerView view,\n                                   DialogFactory dialogFactory,\n                                   final NotificationContainer notificationContainer,\n                                   final NotificationMessageStack notificationMessageStack)", "modifiers": "@Inject public", "return": "", "signature": " NotificationManagerImpl(EventBus eventBus,\n                                   NotificationManagerView view,\n                                   DialogFactory dialogFactory,\n                                   final NotificationContainer notificationContainer,\n                                   final NotificationMessageStack notificationMessageStack)", "full_signature": "@Inject public  NotificationManagerImpl(EventBus eventBus,\n                                   NotificationManagerView view,\n                                   DialogFactory dialogFactory,\n                                   final NotificationContainer notificationContainer,\n                                   final NotificationMessageStack notificationMessageStack)", "class_method_signature": "NotificationManagerImpl.NotificationManagerImpl(EventBus eventBus,\n                                   NotificationManagerView view,\n                                   DialogFactory dialogFactory,\n                                   final NotificationContainer notificationContainer,\n                                   final NotificationMessageStack notificationMessageStack)", "testcase": false, "constructor": true}, {"identifier": "getView", "parameters": "()", "modifiers": "@Override public", "return": "View", "signature": "View getView()", "full_signature": "@Override public View getView()", "class_method_signature": "NotificationManagerImpl.getView()", "testcase": false, "constructor": false}, {"identifier": "onValueChanged", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onValueChanged()", "full_signature": "@Override public void onValueChanged()", "class_method_signature": "NotificationManagerImpl.onValueChanged()", "testcase": false, "constructor": false}, {"identifier": "showNotification", "parameters": "(@Nonnull Notification notification)", "modifiers": "@Override public", "return": "void", "signature": "void showNotification(@Nonnull Notification notification)", "full_signature": "@Override public void showNotification(@Nonnull Notification notification)", "class_method_signature": "NotificationManagerImpl.showNotification(@Nonnull Notification notification)", "testcase": false, "constructor": false}, {"identifier": "showInfo", "parameters": "(@Nonnull String message)", "modifiers": "@Override public", "return": "void", "signature": "void showInfo(@Nonnull String message)", "full_signature": "@Override public void showInfo(@Nonnull String message)", "class_method_signature": "NotificationManagerImpl.showInfo(@Nonnull String message)", "testcase": false, "constructor": false}, {"identifier": "showWarning", "parameters": "(@Nonnull String message)", "modifiers": "@Override public", "return": "void", "signature": "void showWarning(@Nonnull String message)", "full_signature": "@Override public void showWarning(@Nonnull String message)", "class_method_signature": "NotificationManagerImpl.showWarning(@Nonnull String message)", "testcase": false, "constructor": false}, {"identifier": "showError", "parameters": "(@Nonnull String message)", "modifiers": "@Override public", "return": "void", "signature": "void showError(@Nonnull String message)", "full_signature": "@Override public void showError(@Nonnull String message)", "class_method_signature": "NotificationManagerImpl.showError(@Nonnull String message)", "testcase": false, "constructor": false}, {"identifier": "removeNotification", "parameters": "(@Nonnull Notification notification)", "modifiers": "public", "return": "void", "signature": "void removeNotification(@Nonnull Notification notification)", "full_signature": "public void removeNotification(@Nonnull Notification notification)", "class_method_signature": "NotificationManagerImpl.removeNotification(@Nonnull Notification notification)", "testcase": false, "constructor": false}, {"identifier": "onOpenMessageClicked", "parameters": "(@Nonnull Notification notification)", "modifiers": "@Override public", "return": "void", "signature": "void onOpenMessageClicked(@Nonnull Notification notification)", "full_signature": "@Override public void onOpenMessageClicked(@Nonnull Notification notification)", "class_method_signature": "NotificationManagerImpl.onOpenMessageClicked(@Nonnull Notification notification)", "testcase": false, "constructor": false}, {"identifier": "onOpenItemClicked", "parameters": "(@Nonnull Notification notification)", "modifiers": "@Override public", "return": "void", "signature": "void onOpenItemClicked(@Nonnull Notification notification)", "full_signature": "@Override public void onOpenItemClicked(@Nonnull Notification notification)", "class_method_signature": "NotificationManagerImpl.onOpenItemClicked(@Nonnull Notification notification)", "testcase": false, "constructor": false}, {"identifier": "onOpenClicked", "parameters": "(@Nonnull Notification notification)", "modifiers": "private", "return": "void", "signature": "void onOpenClicked(@Nonnull Notification notification)", "full_signature": "private void onOpenClicked(@Nonnull Notification notification)", "class_method_signature": "NotificationManagerImpl.onOpenClicked(@Nonnull Notification notification)", "testcase": false, "constructor": false}, {"identifier": "onCloseMessageClicked", "parameters": "(@Nonnull Notification notification)", "modifiers": "@Override public", "return": "void", "signature": "void onCloseMessageClicked(@Nonnull Notification notification)", "full_signature": "@Override public void onCloseMessageClicked(@Nonnull Notification notification)", "class_method_signature": "NotificationManagerImpl.onCloseMessageClicked(@Nonnull Notification notification)", "testcase": false, "constructor": false}, {"identifier": "onCloseItemClicked", "parameters": "(@Nonnull Notification notification)", "modifiers": "@Override public", "return": "void", "signature": "void onCloseItemClicked(@Nonnull Notification notification)", "full_signature": "@Override public void onCloseItemClicked(@Nonnull Notification notification)", "class_method_signature": "NotificationManagerImpl.onCloseItemClicked(@Nonnull Notification notification)", "testcase": false, "constructor": false}, {"identifier": "onCloseClicked", "parameters": "(@Nonnull Notification notification)", "modifiers": "private", "return": "void", "signature": "void onCloseClicked(@Nonnull Notification notification)", "full_signature": "private void onCloseClicked(@Nonnull Notification notification)", "class_method_signature": "NotificationManagerImpl.onCloseClicked(@Nonnull Notification notification)", "testcase": false, "constructor": false}, {"identifier": "getTitle", "parameters": "()", "modifiers": "@Nonnull @Override public", "return": "String", "signature": "String getTitle()", "full_signature": "@Nonnull @Override public String getTitle()", "class_method_signature": "NotificationManagerImpl.getTitle()", "testcase": false, "constructor": false}, {"identifier": "getTitleImage", "parameters": "()", "modifiers": "@Nullable @Override public", "return": "ImageResource", "signature": "ImageResource getTitleImage()", "full_signature": "@Nullable @Override public ImageResource getTitleImage()", "class_method_signature": "NotificationManagerImpl.getTitleImage()", "testcase": false, "constructor": false}, {"identifier": "getTitleSVGImage", "parameters": "()", "modifiers": "@Nullable @Override public", "return": "SVGResource", "signature": "SVGResource getTitleSVGImage()", "full_signature": "@Nullable @Override public SVGResource getTitleSVGImage()", "class_method_signature": "NotificationManagerImpl.getTitleSVGImage()", "testcase": false, "constructor": false}, {"identifier": "getTitleWidget", "parameters": "()", "modifiers": "@Override public", "return": "IsWidget", "signature": "IsWidget getTitleWidget()", "full_signature": "@Override public IsWidget getTitleWidget()", "class_method_signature": "NotificationManagerImpl.getTitleWidget()", "testcase": false, "constructor": false}, {"identifier": "getTitleToolTip", "parameters": "()", "modifiers": "@Nullable @Override public", "return": "String", "signature": "String getTitleToolTip()", "full_signature": "@Nullable @Override public String getTitleToolTip()", "class_method_signature": "NotificationManagerImpl.getTitleToolTip()", "testcase": false, "constructor": false}, {"identifier": "go", "parameters": "(AcceptsOneWidget container)", "modifiers": "@Override public", "return": "void", "signature": "void go(AcceptsOneWidget container)", "full_signature": "@Override public void go(AcceptsOneWidget container)", "class_method_signature": "NotificationManagerImpl.go(AcceptsOneWidget container)", "testcase": false, "constructor": false}], "file": "codenvy-ide-core/src/main/java/org/eclipse/che/ide/notification/NotificationManagerImpl.java"}, "focal_method": {"identifier": "removeNotification", "parameters": "(@Nonnull Notification notification)", "modifiers": "public", "return": "void", "body": "public void removeNotification(@Nonnull Notification notification) {\n        notification.removeObserver(this);\n        notifications.remove(notification);\n        notificationContainer.removeNotification(notification);\n        notificationMessageStack.removeNotification(notification);\n        onValueChanged();\n    }", "signature": "void removeNotification(@Nonnull Notification notification)", "full_signature": "public void removeNotification(@Nonnull Notification notification)", "class_method_signature": "NotificationManagerImpl.removeNotification(@Nonnull Notification notification)", "testcase": false, "constructor": false, "invocations": ["removeObserver", "remove", "removeNotification", "removeNotification", "onValueChanged"]}, "repository": {"repo_id": 7891529, "url": "https://github.com/codenvy-legacy/ide", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 30, "size": 215508, "license": "licensed"}}