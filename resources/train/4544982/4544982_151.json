{"test_class": {"identifier": "PhpExclusionsFileFilterTest", "superclass": "", "interfaces": "", "fields": [], "file": "sonar-php-plugin/src/test/java/org/sonar/plugins/php/PhpExclusionsFileFilterTest.java"}, "test_case": {"identifier": "should_exclude_using_custom_path_regex", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void should_exclude_using_custom_path_regex() {\n    MapSettings settings = new MapSettings();\n    settings.setProperty(\n      PhpPlugin.PHP_EXCLUSIONS_KEY, PhpPlugin.PHP_EXCLUSIONS_DEFAULT_VALUE + \",\" + \"**/libs/**\");\n\n    PhpExclusionsFileFilter filter = new PhpExclusionsFileFilter(settings.asConfig());\n\n    assertThat(filter.accept(inputFile(\"some_app.php\"))).isTrue();\n    assertThat(filter.accept(inputFile(\"vendor/some_lib.php\"))).isFalse();\n    assertThat(filter.accept(inputFile(\"libs/some_lib.php\"))).isFalse();\n  }", "signature": "void should_exclude_using_custom_path_regex()", "full_signature": "@Test public void should_exclude_using_custom_path_regex()", "class_method_signature": "PhpExclusionsFileFilterTest.should_exclude_using_custom_path_regex()", "testcase": true, "constructor": false, "invocations": ["setProperty", "asConfig", "isTrue", "assertThat", "accept", "inputFile", "isFalse", "assertThat", "accept", "inputFile", "isFalse", "assertThat", "accept", "inputFile"]}, "focal_class": {"identifier": "PhpExclusionsFileFilter", "superclass": "", "interfaces": "implements InputFileFilter", "fields": [{"original_string": "private final String[] excludedPatterns;", "modifier": "private final", "type": "String[]", "declarator": "excludedPatterns", "var_name": "excludedPatterns"}, {"original_string": "private static final Logger LOG = Loggers.get(PhpExclusionsFileFilter.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Loggers.get(PhpExclusionsFileFilter.class)", "var_name": "LOG"}, {"original_string": "private static final int DEFAULT_AVERAGE_LINE_LENGTH_THRESHOLD = 220;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_AVERAGE_LINE_LENGTH_THRESHOLD = 220", "var_name": "DEFAULT_AVERAGE_LINE_LENGTH_THRESHOLD"}], "methods": [{"identifier": "PhpExclusionsFileFilter", "parameters": "(Configuration configuration)", "modifiers": "public", "return": "", "signature": " PhpExclusionsFileFilter(Configuration configuration)", "full_signature": "public  PhpExclusionsFileFilter(Configuration configuration)", "class_method_signature": "PhpExclusionsFileFilter.PhpExclusionsFileFilter(Configuration configuration)", "testcase": false, "constructor": true}, {"identifier": "accept", "parameters": "(InputFile inputFile)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean accept(InputFile inputFile)", "full_signature": "@Override public boolean accept(InputFile inputFile)", "class_method_signature": "PhpExclusionsFileFilter.accept(InputFile inputFile)", "testcase": false, "constructor": false}], "file": "sonar-php-plugin/src/main/java/org/sonar/plugins/php/PhpExclusionsFileFilter.java"}, "focal_method": {"identifier": "accept", "parameters": "(InputFile inputFile)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean accept(InputFile inputFile) {\n    if (!Php.KEY.equals(inputFile.language())) {\n      return true;\n    }\n\n    String relativePath = inputFile.uri().toString();\n    if (WildcardPattern.match(WildcardPattern.create(excludedPatterns), relativePath)) {\n      LOG.debug(\"File [\" + inputFile.uri() + \"] is excluded by '\" + PhpPlugin.PHP_EXCLUSIONS_KEY + \"' property and will not be analyzed\");\n      return false;\n    }\n\n    if (new AverageLineLengthCalculator(inputFile).getAverageLineLength() > DEFAULT_AVERAGE_LINE_LENGTH_THRESHOLD) {\n      LOG.debug(\"File [\" + inputFile.uri() + \"] is excluded because it is considered generated (average line length is too big).\");\n      return false;\n    }\n\n    return true;\n  }", "signature": "boolean accept(InputFile inputFile)", "full_signature": "@Override public boolean accept(InputFile inputFile)", "class_method_signature": "PhpExclusionsFileFilter.accept(InputFile inputFile)", "testcase": false, "constructor": false, "invocations": ["equals", "language", "toString", "uri", "match", "create", "debug", "uri", "getAverageLineLength", "debug", "uri"]}, "repository": {"repo_id": 4544982, "url": "https://github.com/SonarSource/sonar-php", "stars": 227, "created": "6/4/2012 8:36:12 AM +00:00", "updates": "2020-01-20T15:23:41+00:00", "fork": "False", "license": "licensed"}}