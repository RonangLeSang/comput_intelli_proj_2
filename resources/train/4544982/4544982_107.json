{"test_class": {"identifier": "SymbolHighlighterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ActionParser<Tree> PARSER = PHPParserBuilder.createParser();", "modifier": "private static final", "type": "ActionParser<Tree>", "declarator": "PARSER = PHPParserBuilder.createParser()", "var_name": "PARSER"}, {"original_string": "private File file;", "modifier": "private", "type": "File", "declarator": "file", "var_name": "file"}, {"original_string": "private SensorContextTester context;", "modifier": "private", "type": "SensorContextTester", "declarator": "context", "var_name": "context"}, {"original_string": "@Rule\n  public TemporaryFolder tempFolder = new TemporaryFolder();", "modifier": "@Rule\n  public", "type": "TemporaryFolder", "declarator": "tempFolder = new TemporaryFolder()", "var_name": "tempFolder"}, {"original_string": "private DefaultFileSystem fileSystem;", "modifier": "private", "type": "DefaultFileSystem", "declarator": "fileSystem", "var_name": "fileSystem"}], "file": "php-frontend/src/test/java/org/sonar/php/highlighter/SymbolHighlighterTest.java"}, "test_case": {"identifier": "test_arrow_function", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void test_arrow_function() throws Exception {\n    highlight(\"<?php $a = 1; $b = 2; $f = fn($b) => $a + $b; foo($a); foo($b);\");\n    // global $a\n    checkSymbolReferences(1, 6, ImmutableList.of(\n      textRange(1, 37, 1, 39),\n      textRange(1, 50, 1, 52)\n      ));\n    // global $b\n    checkSymbolReferences(1, 14, ImmutableList.of(\n      textRange(1, 59, 1, 61)\n    ));\n    // local $b\n    checkSymbolReferences(1, 30, ImmutableList.of(\n      textRange(1, 42, 1, 44)\n    ));\n  }", "signature": "void test_arrow_function()", "full_signature": "@Test public void test_arrow_function()", "class_method_signature": "SymbolHighlighterTest.test_arrow_function()", "testcase": true, "constructor": false, "invocations": ["highlight", "checkSymbolReferences", "of", "textRange", "textRange", "checkSymbolReferences", "of", "textRange", "checkSymbolReferences", "of", "textRange"]}, "focal_class": {"identifier": "SymbolHighlighter", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "highlight", "parameters": "(SymbolTable symbolTable, NewSymbolTable newSymbolTable)", "modifiers": "public", "return": "void", "signature": "void highlight(SymbolTable symbolTable, NewSymbolTable newSymbolTable)", "full_signature": "public void highlight(SymbolTable symbolTable, NewSymbolTable newSymbolTable)", "class_method_signature": "SymbolHighlighter.highlight(SymbolTable symbolTable, NewSymbolTable newSymbolTable)", "testcase": false, "constructor": false}], "file": "php-frontend/src/main/java/org/sonar/php/highlighter/SymbolHighlighter.java"}, "focal_method": {"identifier": "highlight", "parameters": "(SymbolTable symbolTable, NewSymbolTable newSymbolTable)", "modifiers": "public", "return": "void", "body": "public void highlight(SymbolTable symbolTable, NewSymbolTable newSymbolTable) {\n    for (Symbol symbol : ((SymbolTableImpl) symbolTable).getSymbols()) {\n      SyntaxToken token = symbol.declaration().token();\n      NewSymbol newSymbol = newSymbolTable.newSymbol(token.line(), token.column(), token.endLine(), token.endColumn());\n      for (SyntaxToken usageToken : symbol.usages()) {\n        newSymbol.newReference(usageToken.line(), usageToken.column(), usageToken.endLine(), usageToken.endColumn());\n      }\n    }\n  }", "signature": "void highlight(SymbolTable symbolTable, NewSymbolTable newSymbolTable)", "full_signature": "public void highlight(SymbolTable symbolTable, NewSymbolTable newSymbolTable)", "class_method_signature": "SymbolHighlighter.highlight(SymbolTable symbolTable, NewSymbolTable newSymbolTable)", "testcase": false, "constructor": false, "invocations": ["getSymbols", "token", "declaration", "newSymbol", "line", "column", "endLine", "endColumn", "usages", "newReference", "line", "column", "endLine", "endColumn"]}, "repository": {"repo_id": 4544982, "url": "https://github.com/SonarSource/sonar-php", "stars": 227, "created": "6/4/2012 8:36:12 AM +00:00", "updates": "2020-01-20T15:23:41+00:00", "fork": "False", "license": "licensed"}}