{"test_class": {"identifier": "ViewInfoStoreTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "ViewInfoStore mStore;", "modifier": "", "type": "ViewInfoStore", "declarator": "mStore", "var_name": "mStore"}, {"original_string": "LoggingProcessCallback mCallback;", "modifier": "", "type": "LoggingProcessCallback", "declarator": "mCallback", "var_name": "mCallback"}], "file": "recyclerview/recyclerview/src/test/java/androidx/recyclerview/widget/ViewInfoStoreTest.java"}, "test_case": {"identifier": "addToPostLayout", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void addToPostLayout() {\n        RecyclerView.ViewHolder vh = new MockViewHolder();\n        MockInfo info = new MockInfo();\n        mStore.addToPostLayout(vh, info);\n        assertSame(info, find(vh, FLAG_POST));\n        mStore.removeViewHolder(vh);\n        assertNull(find(vh, FLAG_POST));\n    }", "signature": "void addToPostLayout()", "full_signature": "@Test public void addToPostLayout()", "class_method_signature": "ViewInfoStoreTest.addToPostLayout()", "testcase": true, "constructor": false, "invocations": ["addToPostLayout", "assertSame", "find", "removeViewHolder", "assertNull", "find"]}, "focal_class": {"identifier": "ViewInfoStore", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final boolean DEBUG = false;", "modifier": "private static final", "type": "boolean", "declarator": "DEBUG = false", "var_name": "DEBUG"}, {"original_string": "@VisibleForTesting\n    final SimpleArrayMap<RecyclerView.ViewHolder, InfoRecord> mLayoutHolderMap =\n            new SimpleArrayMap<>();", "modifier": "@VisibleForTesting\n    final", "type": "SimpleArrayMap<RecyclerView.ViewHolder, InfoRecord>", "declarator": "mLayoutHolderMap =\n            new SimpleArrayMap<>()", "var_name": "mLayoutHolderMap"}, {"original_string": "@VisibleForTesting\n    final LongSparseArray<RecyclerView.ViewHolder> mOldChangedHolders = new LongSparseArray<>();", "modifier": "@VisibleForTesting\n    final", "type": "LongSparseArray<RecyclerView.ViewHolder>", "declarator": "mOldChangedHolders = new LongSparseArray<>()", "var_name": "mOldChangedHolders"}], "methods": [{"identifier": "clear", "parameters": "()", "modifiers": "", "return": "void", "signature": "void clear()", "full_signature": " void clear()", "class_method_signature": "ViewInfoStore.clear()", "testcase": false, "constructor": false}, {"identifier": "addToPreLayout", "parameters": "(RecyclerView.ViewHolder holder, RecyclerView.ItemAnimator.ItemHolderInfo info)", "modifiers": "", "return": "void", "signature": "void addToPreLayout(RecyclerView.ViewHolder holder, RecyclerView.ItemAnimator.ItemHolderInfo info)", "full_signature": " void addToPreLayout(RecyclerView.ViewHolder holder, RecyclerView.ItemAnimator.ItemHolderInfo info)", "class_method_signature": "ViewInfoStore.addToPreLayout(RecyclerView.ViewHolder holder, RecyclerView.ItemAnimator.ItemHolderInfo info)", "testcase": false, "constructor": false}, {"identifier": "isDisappearing", "parameters": "(RecyclerView.ViewHolder holder)", "modifiers": "", "return": "boolean", "signature": "boolean isDisappearing(RecyclerView.ViewHolder holder)", "full_signature": " boolean isDisappearing(RecyclerView.ViewHolder holder)", "class_method_signature": "ViewInfoStore.isDisappearing(RecyclerView.ViewHolder holder)", "testcase": false, "constructor": false}, {"identifier": "popFromPreLayout", "parameters": "(RecyclerView.ViewHolder vh)", "modifiers": "@Nullable", "return": "RecyclerView.ItemAnimator.ItemHolderInfo", "signature": "RecyclerView.ItemAnimator.ItemHolderInfo popFromPreLayout(RecyclerView.ViewHolder vh)", "full_signature": "@Nullable RecyclerView.ItemAnimator.ItemHolderInfo popFromPreLayout(RecyclerView.ViewHolder vh)", "class_method_signature": "ViewInfoStore.popFromPreLayout(RecyclerView.ViewHolder vh)", "testcase": false, "constructor": false}, {"identifier": "popFromPostLayout", "parameters": "(RecyclerView.ViewHolder vh)", "modifiers": "@Nullable", "return": "RecyclerView.ItemAnimator.ItemHolderInfo", "signature": "RecyclerView.ItemAnimator.ItemHolderInfo popFromPostLayout(RecyclerView.ViewHolder vh)", "full_signature": "@Nullable RecyclerView.ItemAnimator.ItemHolderInfo popFromPostLayout(RecyclerView.ViewHolder vh)", "class_method_signature": "ViewInfoStore.popFromPostLayout(RecyclerView.ViewHolder vh)", "testcase": false, "constructor": false}, {"identifier": "popFromLayoutStep", "parameters": "(RecyclerView.ViewHolder vh, int flag)", "modifiers": "private", "return": "RecyclerView.ItemAnimator.ItemHolderInfo", "signature": "RecyclerView.ItemAnimator.ItemHolderInfo popFromLayoutStep(RecyclerView.ViewHolder vh, int flag)", "full_signature": "private RecyclerView.ItemAnimator.ItemHolderInfo popFromLayoutStep(RecyclerView.ViewHolder vh, int flag)", "class_method_signature": "ViewInfoStore.popFromLayoutStep(RecyclerView.ViewHolder vh, int flag)", "testcase": false, "constructor": false}, {"identifier": "addToOldChangeHolders", "parameters": "(long key, RecyclerView.ViewHolder holder)", "modifiers": "", "return": "void", "signature": "void addToOldChangeHolders(long key, RecyclerView.ViewHolder holder)", "full_signature": " void addToOldChangeHolders(long key, RecyclerView.ViewHolder holder)", "class_method_signature": "ViewInfoStore.addToOldChangeHolders(long key, RecyclerView.ViewHolder holder)", "testcase": false, "constructor": false}, {"identifier": "addToAppearedInPreLayoutHolders", "parameters": "(RecyclerView.ViewHolder holder, RecyclerView.ItemAnimator.ItemHolderInfo info)", "modifiers": "", "return": "void", "signature": "void addToAppearedInPreLayoutHolders(RecyclerView.ViewHolder holder, RecyclerView.ItemAnimator.ItemHolderInfo info)", "full_signature": " void addToAppearedInPreLayoutHolders(RecyclerView.ViewHolder holder, RecyclerView.ItemAnimator.ItemHolderInfo info)", "class_method_signature": "ViewInfoStore.addToAppearedInPreLayoutHolders(RecyclerView.ViewHolder holder, RecyclerView.ItemAnimator.ItemHolderInfo info)", "testcase": false, "constructor": false}, {"identifier": "isInPreLayout", "parameters": "(RecyclerView.ViewHolder viewHolder)", "modifiers": "", "return": "boolean", "signature": "boolean isInPreLayout(RecyclerView.ViewHolder viewHolder)", "full_signature": " boolean isInPreLayout(RecyclerView.ViewHolder viewHolder)", "class_method_signature": "ViewInfoStore.isInPreLayout(RecyclerView.ViewHolder viewHolder)", "testcase": false, "constructor": false}, {"identifier": "getFromOldChangeHolders", "parameters": "(long key)", "modifiers": "", "return": "RecyclerView.ViewHolder", "signature": "RecyclerView.ViewHolder getFromOldChangeHolders(long key)", "full_signature": " RecyclerView.ViewHolder getFromOldChangeHolders(long key)", "class_method_signature": "ViewInfoStore.getFromOldChangeHolders(long key)", "testcase": false, "constructor": false}, {"identifier": "addToPostLayout", "parameters": "(RecyclerView.ViewHolder holder, RecyclerView.ItemAnimator.ItemHolderInfo info)", "modifiers": "", "return": "void", "signature": "void addToPostLayout(RecyclerView.ViewHolder holder, RecyclerView.ItemAnimator.ItemHolderInfo info)", "full_signature": " void addToPostLayout(RecyclerView.ViewHolder holder, RecyclerView.ItemAnimator.ItemHolderInfo info)", "class_method_signature": "ViewInfoStore.addToPostLayout(RecyclerView.ViewHolder holder, RecyclerView.ItemAnimator.ItemHolderInfo info)", "testcase": false, "constructor": false}, {"identifier": "addToDisappearedInLayout", "parameters": "(RecyclerView.ViewHolder holder)", "modifiers": "", "return": "void", "signature": "void addToDisappearedInLayout(RecyclerView.ViewHolder holder)", "full_signature": " void addToDisappearedInLayout(RecyclerView.ViewHolder holder)", "class_method_signature": "ViewInfoStore.addToDisappearedInLayout(RecyclerView.ViewHolder holder)", "testcase": false, "constructor": false}, {"identifier": "removeFromDisappearedInLayout", "parameters": "(RecyclerView.ViewHolder holder)", "modifiers": "", "return": "void", "signature": "void removeFromDisappearedInLayout(RecyclerView.ViewHolder holder)", "full_signature": " void removeFromDisappearedInLayout(RecyclerView.ViewHolder holder)", "class_method_signature": "ViewInfoStore.removeFromDisappearedInLayout(RecyclerView.ViewHolder holder)", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(ProcessCallback callback)", "modifiers": "", "return": "void", "signature": "void process(ProcessCallback callback)", "full_signature": " void process(ProcessCallback callback)", "class_method_signature": "ViewInfoStore.process(ProcessCallback callback)", "testcase": false, "constructor": false}, {"identifier": "removeViewHolder", "parameters": "(RecyclerView.ViewHolder holder)", "modifiers": "", "return": "void", "signature": "void removeViewHolder(RecyclerView.ViewHolder holder)", "full_signature": " void removeViewHolder(RecyclerView.ViewHolder holder)", "class_method_signature": "ViewInfoStore.removeViewHolder(RecyclerView.ViewHolder holder)", "testcase": false, "constructor": false}, {"identifier": "onDetach", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onDetach()", "full_signature": " void onDetach()", "class_method_signature": "ViewInfoStore.onDetach()", "testcase": false, "constructor": false}, {"identifier": "onViewDetached", "parameters": "(RecyclerView.ViewHolder viewHolder)", "modifiers": "public", "return": "void", "signature": "void onViewDetached(RecyclerView.ViewHolder viewHolder)", "full_signature": "public void onViewDetached(RecyclerView.ViewHolder viewHolder)", "class_method_signature": "ViewInfoStore.onViewDetached(RecyclerView.ViewHolder viewHolder)", "testcase": false, "constructor": false}], "file": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/ViewInfoStore.java"}, "focal_method": {"identifier": "addToPostLayout", "parameters": "(RecyclerView.ViewHolder holder, RecyclerView.ItemAnimator.ItemHolderInfo info)", "modifiers": "", "return": "void", "body": "void addToPostLayout(RecyclerView.ViewHolder holder, RecyclerView.ItemAnimator.ItemHolderInfo info) {\n        InfoRecord record = mLayoutHolderMap.get(holder);\n        if (record == null) {\n            record = InfoRecord.obtain();\n            mLayoutHolderMap.put(holder, record);\n        }\n        record.postInfo = info;\n        record.flags |= FLAG_POST;\n    }", "signature": "void addToPostLayout(RecyclerView.ViewHolder holder, RecyclerView.ItemAnimator.ItemHolderInfo info)", "full_signature": " void addToPostLayout(RecyclerView.ViewHolder holder, RecyclerView.ItemAnimator.ItemHolderInfo info)", "class_method_signature": "ViewInfoStore.addToPostLayout(RecyclerView.ViewHolder holder, RecyclerView.ItemAnimator.ItemHolderInfo info)", "testcase": false, "constructor": false, "invocations": ["get", "obtain", "put"]}, "repository": {"repo_id": 3978781, "url": "https://github.com/aosp-mirror/platform_frameworks_support", "language": "Java", "is_fork": false, "fork_count": 641, "stargazer_count": 1569, "size": 354693, "license": "licensed"}}