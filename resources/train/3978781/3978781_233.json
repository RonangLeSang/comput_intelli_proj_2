{"test_class": {"identifier": "AdapterHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final boolean DEBUG = false;", "modifier": "private static final", "type": "boolean", "declarator": "DEBUG = false", "var_name": "DEBUG"}, {"original_string": "private boolean mCollectLogs = false;", "modifier": "private", "type": "boolean", "declarator": "mCollectLogs = false", "var_name": "mCollectLogs"}, {"original_string": "private static final String TAG = \"AHT\";", "modifier": "private static final", "type": "String", "declarator": "TAG = \"AHT\"", "var_name": "TAG"}, {"original_string": "private List<MockViewHolder> mViewHolders;", "modifier": "private", "type": "List<MockViewHolder>", "declarator": "mViewHolders", "var_name": "mViewHolders"}, {"original_string": "private AdapterHelper mAdapterHelper;", "modifier": "private", "type": "AdapterHelper", "declarator": "mAdapterHelper", "var_name": "mAdapterHelper"}, {"original_string": "private List<AdapterHelper.UpdateOp> mFirstPassUpdates, mSecondPassUpdates;", "modifier": "private", "type": "List<AdapterHelper.UpdateOp>", "declarator": "mFirstPassUpdates", "var_name": "mFirstPassUpdates"}, {"original_string": "TestAdapter mTestAdapter;", "modifier": "", "type": "TestAdapter", "declarator": "mTestAdapter", "var_name": "mTestAdapter"}, {"original_string": "private TestAdapter mPreProcessClone;", "modifier": "private", "type": "TestAdapter", "declarator": "mPreProcessClone", "var_name": "mPreProcessClone"}, {"original_string": "private List<TestAdapter.Item> mPreLayoutItems;", "modifier": "private", "type": "List<TestAdapter.Item>", "declarator": "mPreLayoutItems", "var_name": "mPreLayoutItems"}, {"original_string": "private StringBuilder mLog = new StringBuilder();", "modifier": "private", "type": "StringBuilder", "declarator": "mLog = new StringBuilder()", "var_name": "mLog"}, {"original_string": "@Rule\n    public TestWatcher reportErrorLog = new TestWatcher() {\n        @Override\n        protected void failed(Throwable e, Description description) {\n            System.out.println(mLog.toString());\n        }\n\n        @Override\n        protected void succeeded(Description description) {\n        }\n    };", "modifier": "@Rule\n    public", "type": "TestWatcher", "declarator": "reportErrorLog = new TestWatcher() {\n        @Override\n        protected void failed(Throwable e, Description description) {\n            System.out.println(mLog.toString());\n        }\n\n        @Override\n        protected void succeeded(Description description) {\n        }\n    }", "var_name": "reportErrorLog"}], "file": "recyclerview/recyclerview/src/test/java/androidx/recyclerview/widget/AdapterHelperTest.java"}, "test_case": {"identifier": "testScenerio31", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testScenerio31() {\n        mCollectLogs = true;\n        setupBasic(10, 3, 1);\n        rm(3, 1);\n        rm(2, 3);\n        preProcess();\n    }", "signature": "void testScenerio31()", "full_signature": "@Test public void testScenerio31()", "class_method_signature": "AdapterHelperTest.testScenerio31()", "testcase": true, "constructor": false, "invocations": ["setupBasic", "rm", "rm", "preProcess"]}, "focal_class": {"identifier": "AdapterHelper", "superclass": "", "interfaces": "implements OpReorderer.Callback", "fields": [{"original_string": "static final int POSITION_TYPE_INVISIBLE = 0;", "modifier": "static final", "type": "int", "declarator": "POSITION_TYPE_INVISIBLE = 0", "var_name": "POSITION_TYPE_INVISIBLE"}, {"original_string": "static final int POSITION_TYPE_NEW_OR_LAID_OUT = 1;", "modifier": "static final", "type": "int", "declarator": "POSITION_TYPE_NEW_OR_LAID_OUT = 1", "var_name": "POSITION_TYPE_NEW_OR_LAID_OUT"}, {"original_string": "private static final boolean DEBUG = false;", "modifier": "private static final", "type": "boolean", "declarator": "DEBUG = false", "var_name": "DEBUG"}, {"original_string": "private static final String TAG = \"AHT\";", "modifier": "private static final", "type": "String", "declarator": "TAG = \"AHT\"", "var_name": "TAG"}, {"original_string": "private Pools.Pool<UpdateOp> mUpdateOpPool = new Pools.SimplePool<UpdateOp>(UpdateOp.POOL_SIZE);", "modifier": "private", "type": "Pools.Pool<UpdateOp>", "declarator": "mUpdateOpPool = new Pools.SimplePool<UpdateOp>(UpdateOp.POOL_SIZE)", "var_name": "mUpdateOpPool"}, {"original_string": "final ArrayList<UpdateOp> mPendingUpdates = new ArrayList<UpdateOp>();", "modifier": "final", "type": "ArrayList<UpdateOp>", "declarator": "mPendingUpdates = new ArrayList<UpdateOp>()", "var_name": "mPendingUpdates"}, {"original_string": "final ArrayList<UpdateOp> mPostponedList = new ArrayList<UpdateOp>();", "modifier": "final", "type": "ArrayList<UpdateOp>", "declarator": "mPostponedList = new ArrayList<UpdateOp>()", "var_name": "mPostponedList"}, {"original_string": "final Callback mCallback;", "modifier": "final", "type": "Callback", "declarator": "mCallback", "var_name": "mCallback"}, {"original_string": "Runnable mOnItemProcessedCallback;", "modifier": "", "type": "Runnable", "declarator": "mOnItemProcessedCallback", "var_name": "mOnItemProcessedCallback"}, {"original_string": "final boolean mDisableRecycler;", "modifier": "final", "type": "boolean", "declarator": "mDisableRecycler", "var_name": "mDisableRecycler"}, {"original_string": "final OpReorderer mOpReorderer;", "modifier": "final", "type": "OpReorderer", "declarator": "mOpReorderer", "var_name": "mOpReorderer"}, {"original_string": "private int mExistingUpdateTypes = 0;", "modifier": "private", "type": "int", "declarator": "mExistingUpdateTypes = 0", "var_name": "mExistingUpdateTypes"}], "methods": [{"identifier": "AdapterHelper", "parameters": "(Callback callback)", "modifiers": "", "return": "", "signature": " AdapterHelper(Callback callback)", "full_signature": "  AdapterHelper(Callback callback)", "class_method_signature": "AdapterHelper.AdapterHelper(Callback callback)", "testcase": false, "constructor": true}, {"identifier": "AdapterHelper", "parameters": "(Callback callback, boolean disableRecycler)", "modifiers": "", "return": "", "signature": " AdapterHelper(Callback callback, boolean disableRecycler)", "full_signature": "  AdapterHelper(Callback callback, boolean disableRecycler)", "class_method_signature": "AdapterHelper.AdapterHelper(Callback callback, boolean disableRecycler)", "testcase": false, "constructor": true}, {"identifier": "addUpdateOp", "parameters": "(UpdateOp... ops)", "modifiers": "", "return": "AdapterHelper", "signature": "AdapterHelper addUpdateOp(UpdateOp... ops)", "full_signature": " AdapterHelper addUpdateOp(UpdateOp... ops)", "class_method_signature": "AdapterHelper.addUpdateOp(UpdateOp... ops)", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "", "return": "void", "signature": "void reset()", "full_signature": " void reset()", "class_method_signature": "AdapterHelper.reset()", "testcase": false, "constructor": false}, {"identifier": "preProcess", "parameters": "()", "modifiers": "", "return": "void", "signature": "void preProcess()", "full_signature": " void preProcess()", "class_method_signature": "AdapterHelper.preProcess()", "testcase": false, "constructor": false}, {"identifier": "consumePostponedUpdates", "parameters": "()", "modifiers": "", "return": "void", "signature": "void consumePostponedUpdates()", "full_signature": " void consumePostponedUpdates()", "class_method_signature": "AdapterHelper.consumePostponedUpdates()", "testcase": false, "constructor": false}, {"identifier": "applyMove", "parameters": "(UpdateOp op)", "modifiers": "private", "return": "void", "signature": "void applyMove(UpdateOp op)", "full_signature": "private void applyMove(UpdateOp op)", "class_method_signature": "AdapterHelper.applyMove(UpdateOp op)", "testcase": false, "constructor": false}, {"identifier": "applyRemove", "parameters": "(UpdateOp op)", "modifiers": "private", "return": "void", "signature": "void applyRemove(UpdateOp op)", "full_signature": "private void applyRemove(UpdateOp op)", "class_method_signature": "AdapterHelper.applyRemove(UpdateOp op)", "testcase": false, "constructor": false}, {"identifier": "applyUpdate", "parameters": "(UpdateOp op)", "modifiers": "private", "return": "void", "signature": "void applyUpdate(UpdateOp op)", "full_signature": "private void applyUpdate(UpdateOp op)", "class_method_signature": "AdapterHelper.applyUpdate(UpdateOp op)", "testcase": false, "constructor": false}, {"identifier": "dispatchAndUpdateViewHolders", "parameters": "(UpdateOp op)", "modifiers": "private", "return": "void", "signature": "void dispatchAndUpdateViewHolders(UpdateOp op)", "full_signature": "private void dispatchAndUpdateViewHolders(UpdateOp op)", "class_method_signature": "AdapterHelper.dispatchAndUpdateViewHolders(UpdateOp op)", "testcase": false, "constructor": false}, {"identifier": "dispatchFirstPassAndUpdateViewHolders", "parameters": "(UpdateOp op, int offsetStart)", "modifiers": "", "return": "void", "signature": "void dispatchFirstPassAndUpdateViewHolders(UpdateOp op, int offsetStart)", "full_signature": " void dispatchFirstPassAndUpdateViewHolders(UpdateOp op, int offsetStart)", "class_method_signature": "AdapterHelper.dispatchFirstPassAndUpdateViewHolders(UpdateOp op, int offsetStart)", "testcase": false, "constructor": false}, {"identifier": "updatePositionWithPostponed", "parameters": "(int pos, int cmd)", "modifiers": "private", "return": "int", "signature": "int updatePositionWithPostponed(int pos, int cmd)", "full_signature": "private int updatePositionWithPostponed(int pos, int cmd)", "class_method_signature": "AdapterHelper.updatePositionWithPostponed(int pos, int cmd)", "testcase": false, "constructor": false}, {"identifier": "canFindInPreLayout", "parameters": "(int position)", "modifiers": "private", "return": "boolean", "signature": "boolean canFindInPreLayout(int position)", "full_signature": "private boolean canFindInPreLayout(int position)", "class_method_signature": "AdapterHelper.canFindInPreLayout(int position)", "testcase": false, "constructor": false}, {"identifier": "applyAdd", "parameters": "(UpdateOp op)", "modifiers": "private", "return": "void", "signature": "void applyAdd(UpdateOp op)", "full_signature": "private void applyAdd(UpdateOp op)", "class_method_signature": "AdapterHelper.applyAdd(UpdateOp op)", "testcase": false, "constructor": false}, {"identifier": "postponeAndUpdateViewHolders", "parameters": "(UpdateOp op)", "modifiers": "private", "return": "void", "signature": "void postponeAndUpdateViewHolders(UpdateOp op)", "full_signature": "private void postponeAndUpdateViewHolders(UpdateOp op)", "class_method_signature": "AdapterHelper.postponeAndUpdateViewHolders(UpdateOp op)", "testcase": false, "constructor": false}, {"identifier": "hasPendingUpdates", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean hasPendingUpdates()", "full_signature": " boolean hasPendingUpdates()", "class_method_signature": "AdapterHelper.hasPendingUpdates()", "testcase": false, "constructor": false}, {"identifier": "hasAnyUpdateTypes", "parameters": "(int updateTypes)", "modifiers": "", "return": "boolean", "signature": "boolean hasAnyUpdateTypes(int updateTypes)", "full_signature": " boolean hasAnyUpdateTypes(int updateTypes)", "class_method_signature": "AdapterHelper.hasAnyUpdateTypes(int updateTypes)", "testcase": false, "constructor": false}, {"identifier": "findPositionOffset", "parameters": "(int position)", "modifiers": "", "return": "int", "signature": "int findPositionOffset(int position)", "full_signature": " int findPositionOffset(int position)", "class_method_signature": "AdapterHelper.findPositionOffset(int position)", "testcase": false, "constructor": false}, {"identifier": "findPositionOffset", "parameters": "(int position, int firstPostponedItem)", "modifiers": "", "return": "int", "signature": "int findPositionOffset(int position, int firstPostponedItem)", "full_signature": " int findPositionOffset(int position, int firstPostponedItem)", "class_method_signature": "AdapterHelper.findPositionOffset(int position, int firstPostponedItem)", "testcase": false, "constructor": false}, {"identifier": "onItemRangeChanged", "parameters": "(int positionStart, int itemCount, Object payload)", "modifiers": "", "return": "boolean", "signature": "boolean onItemRangeChanged(int positionStart, int itemCount, Object payload)", "full_signature": " boolean onItemRangeChanged(int positionStart, int itemCount, Object payload)", "class_method_signature": "AdapterHelper.onItemRangeChanged(int positionStart, int itemCount, Object payload)", "testcase": false, "constructor": false}, {"identifier": "onItemRangeInserted", "parameters": "(int positionStart, int itemCount)", "modifiers": "", "return": "boolean", "signature": "boolean onItemRangeInserted(int positionStart, int itemCount)", "full_signature": " boolean onItemRangeInserted(int positionStart, int itemCount)", "class_method_signature": "AdapterHelper.onItemRangeInserted(int positionStart, int itemCount)", "testcase": false, "constructor": false}, {"identifier": "onItemRangeRemoved", "parameters": "(int positionStart, int itemCount)", "modifiers": "", "return": "boolean", "signature": "boolean onItemRangeRemoved(int positionStart, int itemCount)", "full_signature": " boolean onItemRangeRemoved(int positionStart, int itemCount)", "class_method_signature": "AdapterHelper.onItemRangeRemoved(int positionStart, int itemCount)", "testcase": false, "constructor": false}, {"identifier": "onItemRangeMoved", "parameters": "(int from, int to, int itemCount)", "modifiers": "", "return": "boolean", "signature": "boolean onItemRangeMoved(int from, int to, int itemCount)", "full_signature": " boolean onItemRangeMoved(int from, int to, int itemCount)", "class_method_signature": "AdapterHelper.onItemRangeMoved(int from, int to, int itemCount)", "testcase": false, "constructor": false}, {"identifier": "consumeUpdatesInOnePass", "parameters": "()", "modifiers": "", "return": "void", "signature": "void consumeUpdatesInOnePass()", "full_signature": " void consumeUpdatesInOnePass()", "class_method_signature": "AdapterHelper.consumeUpdatesInOnePass()", "testcase": false, "constructor": false}, {"identifier": "applyPendingUpdatesToPosition", "parameters": "(int position)", "modifiers": "public", "return": "int", "signature": "int applyPendingUpdatesToPosition(int position)", "full_signature": "public int applyPendingUpdatesToPosition(int position)", "class_method_signature": "AdapterHelper.applyPendingUpdatesToPosition(int position)", "testcase": false, "constructor": false}, {"identifier": "hasUpdates", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean hasUpdates()", "full_signature": " boolean hasUpdates()", "class_method_signature": "AdapterHelper.hasUpdates()", "testcase": false, "constructor": false}, {"identifier": "obtainUpdateOp", "parameters": "(int cmd, int positionStart, int itemCount, Object payload)", "modifiers": "@Override public", "return": "UpdateOp", "signature": "UpdateOp obtainUpdateOp(int cmd, int positionStart, int itemCount, Object payload)", "full_signature": "@Override public UpdateOp obtainUpdateOp(int cmd, int positionStart, int itemCount, Object payload)", "class_method_signature": "AdapterHelper.obtainUpdateOp(int cmd, int positionStart, int itemCount, Object payload)", "testcase": false, "constructor": false}, {"identifier": "recycleUpdateOp", "parameters": "(UpdateOp op)", "modifiers": "@Override public", "return": "void", "signature": "void recycleUpdateOp(UpdateOp op)", "full_signature": "@Override public void recycleUpdateOp(UpdateOp op)", "class_method_signature": "AdapterHelper.recycleUpdateOp(UpdateOp op)", "testcase": false, "constructor": false}, {"identifier": "recycleUpdateOpsAndClearList", "parameters": "(List<UpdateOp> ops)", "modifiers": "", "return": "void", "signature": "void recycleUpdateOpsAndClearList(List<UpdateOp> ops)", "full_signature": " void recycleUpdateOpsAndClearList(List<UpdateOp> ops)", "class_method_signature": "AdapterHelper.recycleUpdateOpsAndClearList(List<UpdateOp> ops)", "testcase": false, "constructor": false}], "file": "recyclerview/recyclerview/src/main/java/androidx/recyclerview/widget/AdapterHelper.java"}, "focal_method": {"identifier": "preProcess", "parameters": "()", "modifiers": "", "return": "void", "body": "void preProcess() {\n        mOpReorderer.reorderOps(mPendingUpdates);\n        final int count = mPendingUpdates.size();\n        for (int i = 0; i < count; i++) {\n            UpdateOp op = mPendingUpdates.get(i);\n            switch (op.cmd) {\n                case UpdateOp.ADD:\n                    applyAdd(op);\n                    break;\n                case UpdateOp.REMOVE:\n                    applyRemove(op);\n                    break;\n                case UpdateOp.UPDATE:\n                    applyUpdate(op);\n                    break;\n                case UpdateOp.MOVE:\n                    applyMove(op);\n                    break;\n            }\n            if (mOnItemProcessedCallback != null) {\n                mOnItemProcessedCallback.run();\n            }\n        }\n        mPendingUpdates.clear();\n    }", "signature": "void preProcess()", "full_signature": " void preProcess()", "class_method_signature": "AdapterHelper.preProcess()", "testcase": false, "constructor": false, "invocations": ["reorderOps", "size", "get", "applyAdd", "applyRemove", "applyUpdate", "applyMove", "run", "clear"]}, "repository": {"repo_id": 3978781, "url": "https://github.com/aosp-mirror/platform_frameworks_support", "language": "Java", "is_fork": false, "fork_count": 641, "stargazer_count": 1569, "size": 354693, "license": "licensed"}}