{"test_class": {"identifier": "ExclusionArtifactFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Artifact artifact;", "modifier": "private", "type": "Artifact", "declarator": "artifact", "var_name": "artifact"}], "file": "maven-core/src/test/java/org/apache/maven/artifact/resolver/filter/ExclusionArtifactFilterTest.java"}, "test_case": {"identifier": "testExcludeGroupIdWildcard", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExcludeGroupIdWildcard()\n    {\n        Exclusion exclusion = new Exclusion();\n        exclusion.setGroupId( \"*\" );\n        exclusion.setArtifactId( \"maven-core\" );\n        ExclusionArtifactFilter filter = new ExclusionArtifactFilter( Collections.singletonList( exclusion ) );\n\n        assertThat( filter.include( artifact ), is( false ) );\n    }", "signature": "void testExcludeGroupIdWildcard()", "full_signature": "@Test public void testExcludeGroupIdWildcard()", "class_method_signature": "ExclusionArtifactFilterTest.testExcludeGroupIdWildcard()", "testcase": true, "constructor": false, "invocations": ["setGroupId", "setArtifactId", "singletonList", "assertThat", "include", "is"]}, "focal_class": {"identifier": "ExclusionArtifactFilter", "superclass": "", "interfaces": "implements ArtifactFilter", "fields": [{"original_string": "private static final String WILDCARD = \"*\";", "modifier": "private static final", "type": "String", "declarator": "WILDCARD = \"*\"", "var_name": "WILDCARD"}, {"original_string": "private final List<Exclusion> exclusions;", "modifier": "private final", "type": "List<Exclusion>", "declarator": "exclusions", "var_name": "exclusions"}], "methods": [{"identifier": "ExclusionArtifactFilter", "parameters": "( List<Exclusion> exclusions )", "modifiers": "public", "return": "", "signature": " ExclusionArtifactFilter( List<Exclusion> exclusions )", "full_signature": "public  ExclusionArtifactFilter( List<Exclusion> exclusions )", "class_method_signature": "ExclusionArtifactFilter.ExclusionArtifactFilter( List<Exclusion> exclusions )", "testcase": false, "constructor": true}, {"identifier": "include", "parameters": "( Artifact artifact )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean include( Artifact artifact )", "full_signature": "@Override public boolean include( Artifact artifact )", "class_method_signature": "ExclusionArtifactFilter.include( Artifact artifact )", "testcase": false, "constructor": false}], "file": "maven-core/src/main/java/org/apache/maven/artifact/resolver/filter/ExclusionArtifactFilter.java"}, "focal_method": {"identifier": "include", "parameters": "( Artifact artifact )", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean include( Artifact artifact )\n    {\n        for ( Exclusion exclusion : exclusions )\n        {\n            if ( WILDCARD.equals( exclusion.getGroupId() ) && WILDCARD.equals( exclusion.getArtifactId() ) )\n            {\n                return false;\n            }\n            if ( WILDCARD.equals( exclusion.getGroupId() )\n                && exclusion.getArtifactId().equals( artifact.getArtifactId() ) )\n            {\n                return false;\n            }\n            if ( WILDCARD.equals( exclusion.getArtifactId() )\n                && exclusion.getGroupId().equals( artifact.getGroupId() ) )\n            {\n                return false;\n            }\n            if ( exclusion.getGroupId().equals( artifact.getGroupId() )\n                && exclusion.getArtifactId().equals( artifact.getArtifactId() ) )\n            {\n                return false;\n            }\n        }\n        return true;\n    }", "signature": "boolean include( Artifact artifact )", "full_signature": "@Override public boolean include( Artifact artifact )", "class_method_signature": "ExclusionArtifactFilter.include( Artifact artifact )", "testcase": false, "constructor": false, "invocations": ["equals", "getGroupId", "equals", "getArtifactId", "equals", "getGroupId", "equals", "getArtifactId", "getArtifactId", "equals", "getArtifactId", "equals", "getGroupId", "getGroupId", "equals", "getGroupId", "getGroupId", "equals", "getArtifactId", "getArtifactId"]}, "repository": {"repo_id": 206483, "url": "https://github.com/apache/maven", "stars": 1997, "created": "5/21/2009 3:22:03 AM +00:00", "updates": "2020-01-27T15:31:10+00:00", "fork": "False", "license": "licensed"}}