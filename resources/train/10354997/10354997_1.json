{"test_class": {"identifier": "TestDoubleLinkedCountingSet", "superclass": "extends RandomizedTest", "interfaces": "", "fields": [], "file": "langid-java/src/test/java/com/carrotsearch/labs/langid/TestDoubleLinkedCountingSet.java"}, "test_case": {"identifier": "testRandomized", "parameters": "()", "modifiers": "@Test @Repeat(iterations = 20) public", "return": "void", "body": "@Test\n  @Repeat(iterations = 20)\n  public void testRandomized() {\n    int maxValue = randomIntBetween(0, 1000);\n    int maxValues = randomIntBetween(0, maxValue);\n\n    int [] values = new int [maxValues];\n    for (int i = 0; i < values.length; i++) {\n      values[i] = randomIntBetween(0, maxValue);\n    }\n\n    DoubleLinkedCountingSet s = new DoubleLinkedCountingSet(maxValue, maxValues);\n    IntIntOpenHashMap ref = IntIntOpenHashMap.newInstance();\n    for (int i = 0; i < maxValues * 10; i++) {\n      int r = values[randomIntBetween(0, values.length - 1)];\n      ref.addTo(r, 1);\n      s.increment(r);\n    }\n    \n    IntIntOpenHashMap result = IntIntOpenHashMap.newInstance();\n    for (int i = 0; i < s.elementsCount; i++) {\n      int k = s.dense[i];\n      int v = s.counts[i];\n      assertTrue(!result.containsKey(k));\n      result.put(k, v);\n    }\n    \n    assertEquals(ref, result);\n  }", "signature": "void testRandomized()", "full_signature": "@Test @Repeat(iterations = 20) public void testRandomized()", "class_method_signature": "TestDoubleLinkedCountingSet.testRandomized()", "testcase": true, "constructor": false, "invocations": ["randomIntBetween", "randomIntBetween", "randomIntBetween", "newInstance", "randomIntBetween", "addTo", "increment", "newInstance", "assertTrue", "containsKey", "put", "assertEquals"]}, "focal_class": {"identifier": "DoubleLinkedCountingSet", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final int[] sparse;", "modifier": "public final", "type": "int[]", "declarator": "sparse", "var_name": "sparse"}, {"original_string": "public final int[] dense;", "modifier": "public final", "type": "int[]", "declarator": "dense", "var_name": "dense"}, {"original_string": "public final int[] counts;", "modifier": "public final", "type": "int[]", "declarator": "counts", "var_name": "counts"}, {"original_string": "public int elementsCount;", "modifier": "public", "type": "int", "declarator": "elementsCount", "var_name": "elementsCount"}], "methods": [{"identifier": "DoubleLinkedCountingSet", "parameters": "(int maxValue, int maxValues)", "modifiers": "public", "return": "", "signature": " DoubleLinkedCountingSet(int maxValue, int maxValues)", "full_signature": "public  DoubleLinkedCountingSet(int maxValue, int maxValues)", "class_method_signature": "DoubleLinkedCountingSet.DoubleLinkedCountingSet(int maxValue, int maxValues)", "testcase": false, "constructor": true}, {"identifier": "increment", "parameters": "(int key)", "modifiers": "public", "return": "void", "signature": "void increment(int key)", "full_signature": "public void increment(int key)", "class_method_signature": "DoubleLinkedCountingSet.increment(int key)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "DoubleLinkedCountingSet.clear()", "testcase": false, "constructor": false}], "file": "langid-java/src/main/java/com/carrotsearch/labs/langid/DoubleLinkedCountingSet.java"}, "focal_method": {"identifier": "increment", "parameters": "(int key)", "modifiers": "public", "return": "void", "body": "public void increment(int key) {\n    int index = sparse[key];\n    if (index < elementsCount && dense[index] == key) {\n      counts[index]++;\n    } else {\n      index = elementsCount++;\n      sparse[key] = index;\n      dense[index] = key;\n      counts[index] = 1;\n    }\n  }", "signature": "void increment(int key)", "full_signature": "public void increment(int key)", "class_method_signature": "DoubleLinkedCountingSet.increment(int key)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 10354997, "url": "https://github.com/carrotsearch/langid-java", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 22, "size": 5167, "license": "licensed"}}