{"test_class": {"identifier": "TestIdentityColumnNameTranslator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HBaseColumnNameTranslator mTranslator;", "modifier": "private", "type": "HBaseColumnNameTranslator", "declarator": "mTranslator", "var_name": "mTranslator"}], "file": "kiji-schema/src/test/java/org/kiji/schema/layout/impl/hbase/TestIdentityColumnNameTranslator.java"}, "test_case": {"identifier": "testNoSuchHBaseColumn", "parameters": "()", "modifiers": "@Test(expected = NoSuchColumnException.class) public", "return": "void", "body": "@Test(expected = NoSuchColumnException.class)\n  public void testNoSuchHBaseColumn() throws Exception {\n    mTranslator.toHBaseColumnName(KijiColumnName.create(\"doesnt:exist\"));\n  }", "signature": "void testNoSuchHBaseColumn()", "full_signature": "@Test(expected = NoSuchColumnException.class) public void testNoSuchHBaseColumn()", "class_method_signature": "TestIdentityColumnNameTranslator.testNoSuchHBaseColumn()", "testcase": true, "constructor": false, "invocations": ["toHBaseColumnName", "create"]}, "focal_class": {"identifier": "IdentityColumnNameTranslator", "superclass": "extends HBaseColumnNameTranslator", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(IdentityColumnNameTranslator.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(IdentityColumnNameTranslator.class)", "var_name": "LOG"}, {"original_string": "private static final byte SEPARATOR = Bytes.toBytes(\":\")[0];", "modifier": "private static final", "type": "byte", "declarator": "SEPARATOR = Bytes.toBytes(\":\")[0]", "var_name": "SEPARATOR"}, {"original_string": "private final KijiTableLayout mLayout;", "modifier": "private final", "type": "KijiTableLayout", "declarator": "mLayout", "var_name": "mLayout"}], "methods": [{"identifier": "IdentityColumnNameTranslator", "parameters": "(KijiTableLayout tableLayout)", "modifiers": "public", "return": "", "signature": " IdentityColumnNameTranslator(KijiTableLayout tableLayout)", "full_signature": "public  IdentityColumnNameTranslator(KijiTableLayout tableLayout)", "class_method_signature": "IdentityColumnNameTranslator.IdentityColumnNameTranslator(KijiTableLayout tableLayout)", "testcase": false, "constructor": true}, {"identifier": "toKijiColumnName", "parameters": "(HBaseColumnName hbaseColumnName)", "modifiers": "@Override public", "return": "KijiColumnName", "signature": "KijiColumnName toKijiColumnName(HBaseColumnName hbaseColumnName)", "full_signature": "@Override public KijiColumnName toKijiColumnName(HBaseColumnName hbaseColumnName)", "class_method_signature": "IdentityColumnNameTranslator.toKijiColumnName(HBaseColumnName hbaseColumnName)", "testcase": false, "constructor": false}, {"identifier": "toHBaseColumnName", "parameters": "(KijiColumnName kijiColumnName)", "modifiers": "@Override public", "return": "HBaseColumnName", "signature": "HBaseColumnName toHBaseColumnName(KijiColumnName kijiColumnName)", "full_signature": "@Override public HBaseColumnName toHBaseColumnName(KijiColumnName kijiColumnName)", "class_method_signature": "IdentityColumnNameTranslator.toHBaseColumnName(KijiColumnName kijiColumnName)", "testcase": false, "constructor": false}, {"identifier": "toHBaseFamilyName", "parameters": "(LocalityGroupLayout localityGroup)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] toHBaseFamilyName(LocalityGroupLayout localityGroup)", "full_signature": "@Override public byte[] toHBaseFamilyName(LocalityGroupLayout localityGroup)", "class_method_signature": "IdentityColumnNameTranslator.toHBaseFamilyName(LocalityGroupLayout localityGroup)", "testcase": false, "constructor": false}, {"identifier": "getTableLayout", "parameters": "()", "modifiers": "@Override public", "return": "KijiTableLayout", "signature": "KijiTableLayout getTableLayout()", "full_signature": "@Override public KijiTableLayout getTableLayout()", "class_method_signature": "IdentityColumnNameTranslator.getTableLayout()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "IdentityColumnNameTranslator.toString()", "testcase": false, "constructor": false}], "file": "kiji-schema/src/main/java/org/kiji/schema/layout/impl/hbase/IdentityColumnNameTranslator.java"}, "focal_method": {"identifier": "toHBaseColumnName", "parameters": "(KijiColumnName kijiColumnName)", "modifiers": "@Override public", "return": "HBaseColumnName", "body": "@Override\n  public HBaseColumnName toHBaseColumnName(KijiColumnName kijiColumnName)\n      throws NoSuchColumnException {\n\n    final String familyName = kijiColumnName.getFamily();\n    final String qualifierName = kijiColumnName.getQualifier();\n\n    // Validate the Kiji family\n    final FamilyLayout family = mLayout.getFamilyMap().get(familyName);\n    if (family == null) {\n      throw new NoSuchColumnException(kijiColumnName.toString());\n    }\n\n    // Validate the Kiji qualifier\n    if (family.isGroupType() && !family.getColumnMap().containsKey(qualifierName)) {\n      throw new NoSuchColumnException(kijiColumnName.toString());\n    }\n\n    final byte[] localityGroupBytes = Bytes.toBytes(family.getLocalityGroup().getName());\n    final byte[] familyBytes = Bytes.toBytes(familyName);\n    final byte[] qualifierBytes = Bytes.toBytes(qualifierName);\n\n    final byte[] hbaseQualifierBytes =\n        ShortColumnNameTranslator.concatWithSeparator(SEPARATOR, familyBytes, qualifierBytes);\n\n    return new HBaseColumnName(localityGroupBytes, hbaseQualifierBytes);\n  }", "signature": "HBaseColumnName toHBaseColumnName(KijiColumnName kijiColumnName)", "full_signature": "@Override public HBaseColumnName toHBaseColumnName(KijiColumnName kijiColumnName)", "class_method_signature": "IdentityColumnNameTranslator.toHBaseColumnName(KijiColumnName kijiColumnName)", "testcase": false, "constructor": false, "invocations": ["getFamily", "getQualifier", "get", "getFamilyMap", "toString", "isGroupType", "containsKey", "getColumnMap", "toString", "toBytes", "getName", "getLocalityGroup", "toBytes", "toBytes", "concatWithSeparator"]}, "repository": {"repo_id": 6682280, "url": "https://github.com/kijiproject/kiji-schema", "language": "Java", "is_fork": false, "fork_count": 44, "stargazer_count": 55, "size": 11689, "license": "licensed"}}