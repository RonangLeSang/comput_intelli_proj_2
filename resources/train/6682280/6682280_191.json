{"test_class": {"identifier": "TestTableLayoutBuilder", "superclass": "extends KijiClientTest", "interfaces": "", "fields": [{"original_string": "private static final String TEST_LAYOUT =\n      \"org/kiji/schema/layout/TestTableLayoutBuilder.layout.json\";", "modifier": "private static final", "type": "String", "declarator": "TEST_LAYOUT =\n      \"org/kiji/schema/layout/TestTableLayoutBuilder.layout.json\"", "var_name": "TEST_LAYOUT"}], "file": "kiji-schema/src/test/java/org/kiji/schema/layout/TestTableLayoutBuilder.java"}, "test_case": {"identifier": "testTableLayoutSafeMutation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testTableLayoutSafeMutation() throws IOException {\n    final KijiTableLayout layout = KijiTableLayouts.getTableLayout(TEST_LAYOUT);\n    final TableLayoutDesc tld = layout.getDesc();\n    final TableLayoutBuilder tlb = new TableLayoutBuilder(tld, getKiji());\n    tld.setName(\"blastoise\");\n    final TableLayoutDesc tldBuilt = tlb.build();\n    assertFalse(tld.getName().equals(tldBuilt.getName()));\n  }", "signature": "void testTableLayoutSafeMutation()", "full_signature": "@Test public void testTableLayoutSafeMutation()", "class_method_signature": "TestTableLayoutBuilder.testTableLayoutSafeMutation()", "testcase": true, "constructor": false, "invocations": ["getTableLayout", "getDesc", "getKiji", "setName", "build", "assertFalse", "equals", "getName", "getName"]}, "focal_class": {"identifier": "TableLayoutBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(TableLayoutBuilder.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(TableLayoutBuilder.class)", "var_name": "LOG"}, {"original_string": "private final TableLayoutDesc.Builder mDescBuilder;", "modifier": "private final", "type": "TableLayoutDesc.Builder", "declarator": "mDescBuilder", "var_name": "mDescBuilder"}, {"original_string": "private final KijiSchemaTable mSchemaTable;", "modifier": "private final", "type": "KijiSchemaTable", "declarator": "mSchemaTable", "var_name": "mSchemaTable"}, {"original_string": "private final AvroSchemaResolver mSchemaResolver;", "modifier": "private final", "type": "AvroSchemaResolver", "declarator": "mSchemaResolver", "var_name": "mSchemaResolver"}], "methods": [{"identifier": "TableLayoutBuilder", "parameters": "(KijiSchemaTable schemaTable)", "modifiers": "public", "return": "", "signature": " TableLayoutBuilder(KijiSchemaTable schemaTable)", "full_signature": "public  TableLayoutBuilder(KijiSchemaTable schemaTable)", "class_method_signature": "TableLayoutBuilder.TableLayoutBuilder(KijiSchemaTable schemaTable)", "testcase": false, "constructor": true}, {"identifier": "TableLayoutBuilder", "parameters": "(TableLayoutDesc tableLayoutDesc, Kiji kiji)", "modifiers": "public", "return": "", "signature": " TableLayoutBuilder(TableLayoutDesc tableLayoutDesc, Kiji kiji)", "full_signature": "public  TableLayoutBuilder(TableLayoutDesc tableLayoutDesc, Kiji kiji)", "class_method_signature": "TableLayoutBuilder.TableLayoutBuilder(TableLayoutDesc tableLayoutDesc, Kiji kiji)", "testcase": false, "constructor": true}, {"identifier": "getFamilyDesc", "parameters": "(final KijiColumnName family)", "modifiers": "private", "return": "FamilyDesc", "signature": "FamilyDesc getFamilyDesc(final KijiColumnName family)", "full_signature": "private FamilyDesc getFamilyDesc(final KijiColumnName family)", "class_method_signature": "TableLayoutBuilder.getFamilyDesc(final KijiColumnName family)", "testcase": false, "constructor": false}, {"identifier": "getColumnSchema", "parameters": "(final KijiColumnName columnName)", "modifiers": "private", "return": "CellSchema", "signature": "CellSchema getColumnSchema(final KijiColumnName columnName)", "full_signature": "private CellSchema getColumnSchema(final KijiColumnName columnName)", "class_method_signature": "TableLayoutBuilder.getColumnSchema(final KijiColumnName columnName)", "testcase": false, "constructor": false}, {"identifier": "getMutableRegisteredSchemaList", "parameters": "(\n      final KijiColumnName columnName,\n      final SchemaRegistrationType schemaRegistrationType)", "modifiers": "private", "return": "List<AvroSchema>", "signature": "List<AvroSchema> getMutableRegisteredSchemaList(\n      final KijiColumnName columnName,\n      final SchemaRegistrationType schemaRegistrationType)", "full_signature": "private List<AvroSchema> getMutableRegisteredSchemaList(\n      final KijiColumnName columnName,\n      final SchemaRegistrationType schemaRegistrationType)", "class_method_signature": "TableLayoutBuilder.getMutableRegisteredSchemaList(\n      final KijiColumnName columnName,\n      final SchemaRegistrationType schemaRegistrationType)", "testcase": false, "constructor": false}, {"identifier": "withSchema", "parameters": "(\n      final KijiColumnName columnName,\n      final Schema schema,\n      final SchemaRegistrationType schemaRegistrationType)", "modifiers": "private", "return": "TableLayoutBuilder", "signature": "TableLayoutBuilder withSchema(\n      final KijiColumnName columnName,\n      final Schema schema,\n      final SchemaRegistrationType schemaRegistrationType)", "full_signature": "private TableLayoutBuilder withSchema(\n      final KijiColumnName columnName,\n      final Schema schema,\n      final SchemaRegistrationType schemaRegistrationType)", "class_method_signature": "TableLayoutBuilder.withSchema(\n      final KijiColumnName columnName,\n      final Schema schema,\n      final SchemaRegistrationType schemaRegistrationType)", "testcase": false, "constructor": false}, {"identifier": "withoutSchema", "parameters": "(\n      final KijiColumnName columnName,\n      final Schema schema,\n      final SchemaRegistrationType schemaRegistrationType)", "modifiers": "private", "return": "TableLayoutBuilder", "signature": "TableLayoutBuilder withoutSchema(\n      final KijiColumnName columnName,\n      final Schema schema,\n      final SchemaRegistrationType schemaRegistrationType)", "full_signature": "private TableLayoutBuilder withoutSchema(\n      final KijiColumnName columnName,\n      final Schema schema,\n      final SchemaRegistrationType schemaRegistrationType)", "class_method_signature": "TableLayoutBuilder.withoutSchema(\n      final KijiColumnName columnName,\n      final Schema schema,\n      final SchemaRegistrationType schemaRegistrationType)", "testcase": false, "constructor": false}, {"identifier": "getRegisteredSchemas", "parameters": "(\n      final KijiColumnName columnName,\n      final SchemaRegistrationType schemaRegistrationType)", "modifiers": "public", "return": "Collection<Schema>", "signature": "Collection<Schema> getRegisteredSchemas(\n      final KijiColumnName columnName,\n      final SchemaRegistrationType schemaRegistrationType)", "full_signature": "public Collection<Schema> getRegisteredSchemas(\n      final KijiColumnName columnName,\n      final SchemaRegistrationType schemaRegistrationType)", "class_method_signature": "TableLayoutBuilder.getRegisteredSchemas(\n      final KijiColumnName columnName,\n      final SchemaRegistrationType schemaRegistrationType)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "TableLayoutDesc", "signature": "TableLayoutDesc build()", "full_signature": "public TableLayoutDesc build()", "class_method_signature": "TableLayoutBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "withReader", "parameters": "(\n      final KijiColumnName columnName,\n      final Schema schema)", "modifiers": "public", "return": "TableLayoutBuilder", "signature": "TableLayoutBuilder withReader(\n      final KijiColumnName columnName,\n      final Schema schema)", "full_signature": "public TableLayoutBuilder withReader(\n      final KijiColumnName columnName,\n      final Schema schema)", "class_method_signature": "TableLayoutBuilder.withReader(\n      final KijiColumnName columnName,\n      final Schema schema)", "testcase": false, "constructor": false}, {"identifier": "withWriter", "parameters": "(\n      final KijiColumnName columnName,\n      final Schema schema)", "modifiers": "public", "return": "TableLayoutBuilder", "signature": "TableLayoutBuilder withWriter(\n      final KijiColumnName columnName,\n      final Schema schema)", "full_signature": "public TableLayoutBuilder withWriter(\n      final KijiColumnName columnName,\n      final Schema schema)", "class_method_signature": "TableLayoutBuilder.withWriter(\n      final KijiColumnName columnName,\n      final Schema schema)", "testcase": false, "constructor": false}, {"identifier": "withWritten", "parameters": "(\n      final KijiColumnName columnName,\n      final Schema schema)", "modifiers": "public", "return": "TableLayoutBuilder", "signature": "TableLayoutBuilder withWritten(\n      final KijiColumnName columnName,\n      final Schema schema)", "full_signature": "public TableLayoutBuilder withWritten(\n      final KijiColumnName columnName,\n      final Schema schema)", "class_method_signature": "TableLayoutBuilder.withWritten(\n      final KijiColumnName columnName,\n      final Schema schema)", "testcase": false, "constructor": false}, {"identifier": "withoutReader", "parameters": "(\n      final KijiColumnName columnName,\n      final Schema schema)", "modifiers": "public", "return": "TableLayoutBuilder", "signature": "TableLayoutBuilder withoutReader(\n      final KijiColumnName columnName,\n      final Schema schema)", "full_signature": "public TableLayoutBuilder withoutReader(\n      final KijiColumnName columnName,\n      final Schema schema)", "class_method_signature": "TableLayoutBuilder.withoutReader(\n      final KijiColumnName columnName,\n      final Schema schema)", "testcase": false, "constructor": false}, {"identifier": "withoutWriter", "parameters": "(\n      final KijiColumnName columnName,\n      final Schema schema)", "modifiers": "public", "return": "TableLayoutBuilder", "signature": "TableLayoutBuilder withoutWriter(\n      final KijiColumnName columnName,\n      final Schema schema)", "full_signature": "public TableLayoutBuilder withoutWriter(\n      final KijiColumnName columnName,\n      final Schema schema)", "class_method_signature": "TableLayoutBuilder.withoutWriter(\n      final KijiColumnName columnName,\n      final Schema schema)", "testcase": false, "constructor": false}, {"identifier": "withoutWritten", "parameters": "(\n      final KijiColumnName columnName,\n      final Schema schema)", "modifiers": "public", "return": "TableLayoutBuilder", "signature": "TableLayoutBuilder withoutWritten(\n      final KijiColumnName columnName,\n      final Schema schema)", "full_signature": "public TableLayoutBuilder withoutWritten(\n      final KijiColumnName columnName,\n      final Schema schema)", "class_method_signature": "TableLayoutBuilder.withoutWritten(\n      final KijiColumnName columnName,\n      final Schema schema)", "testcase": false, "constructor": false}, {"identifier": "getRegisteredReaders", "parameters": "(final KijiColumnName columnName)", "modifiers": "public", "return": "Collection<Schema>", "signature": "Collection<Schema> getRegisteredReaders(final KijiColumnName columnName)", "full_signature": "public Collection<Schema> getRegisteredReaders(final KijiColumnName columnName)", "class_method_signature": "TableLayoutBuilder.getRegisteredReaders(final KijiColumnName columnName)", "testcase": false, "constructor": false}, {"identifier": "getRegisteredWriters", "parameters": "(final KijiColumnName columnName)", "modifiers": "public", "return": "Collection<Schema>", "signature": "Collection<Schema> getRegisteredWriters(final KijiColumnName columnName)", "full_signature": "public Collection<Schema> getRegisteredWriters(final KijiColumnName columnName)", "class_method_signature": "TableLayoutBuilder.getRegisteredWriters(final KijiColumnName columnName)", "testcase": false, "constructor": false}, {"identifier": "getRegisteredWritten", "parameters": "(final KijiColumnName columnName)", "modifiers": "public", "return": "Collection<Schema>", "signature": "Collection<Schema> getRegisteredWritten(final KijiColumnName columnName)", "full_signature": "public Collection<Schema> getRegisteredWritten(final KijiColumnName columnName)", "class_method_signature": "TableLayoutBuilder.getRegisteredWritten(final KijiColumnName columnName)", "testcase": false, "constructor": false}, {"identifier": "withLayoutId", "parameters": "(String layoutId)", "modifiers": "public", "return": "TableLayoutBuilder", "signature": "TableLayoutBuilder withLayoutId(String layoutId)", "full_signature": "public TableLayoutBuilder withLayoutId(String layoutId)", "class_method_signature": "TableLayoutBuilder.withLayoutId(String layoutId)", "testcase": false, "constructor": false}, {"identifier": "getLayoutId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLayoutId()", "full_signature": "public String getLayoutId()", "class_method_signature": "TableLayoutBuilder.getLayoutId()", "testcase": false, "constructor": false}, {"identifier": "withAvroValidationPolicy", "parameters": "(\n      final KijiColumnName column,\n      final AvroValidationPolicy policy)", "modifiers": "public", "return": "TableLayoutBuilder", "signature": "TableLayoutBuilder withAvroValidationPolicy(\n      final KijiColumnName column,\n      final AvroValidationPolicy policy)", "full_signature": "public TableLayoutBuilder withAvroValidationPolicy(\n      final KijiColumnName column,\n      final AvroValidationPolicy policy)", "class_method_signature": "TableLayoutBuilder.withAvroValidationPolicy(\n      final KijiColumnName column,\n      final AvroValidationPolicy policy)", "testcase": false, "constructor": false}, {"identifier": "getAvroValidationPolicy", "parameters": "(final KijiColumnName column)", "modifiers": "public", "return": "AvroValidationPolicy", "signature": "AvroValidationPolicy getAvroValidationPolicy(final KijiColumnName column)", "full_signature": "public AvroValidationPolicy getAvroValidationPolicy(final KijiColumnName column)", "class_method_signature": "TableLayoutBuilder.getAvroValidationPolicy(final KijiColumnName column)", "testcase": false, "constructor": false}, {"identifier": "normalizeTableLayoutDesc", "parameters": "(TableLayoutDesc desc, LayoutOptions options)", "modifiers": "public", "return": "TableLayoutDesc", "signature": "TableLayoutDesc normalizeTableLayoutDesc(TableLayoutDesc desc, LayoutOptions options)", "full_signature": "public TableLayoutDesc normalizeTableLayoutDesc(TableLayoutDesc desc, LayoutOptions options)", "class_method_signature": "TableLayoutBuilder.normalizeTableLayoutDesc(TableLayoutDesc desc, LayoutOptions options)", "testcase": false, "constructor": false}, {"identifier": "normalizeTableLayoutDesc", "parameters": "(TableLayoutDesc.Builder descBuilder, LayoutOptions options)", "modifiers": "private", "return": "void", "signature": "void normalizeTableLayoutDesc(TableLayoutDesc.Builder descBuilder, LayoutOptions options)", "full_signature": "private void normalizeTableLayoutDesc(TableLayoutDesc.Builder descBuilder, LayoutOptions options)", "class_method_signature": "TableLayoutBuilder.normalizeTableLayoutDesc(TableLayoutDesc.Builder descBuilder, LayoutOptions options)", "testcase": false, "constructor": false}, {"identifier": "normalizeCellSchema", "parameters": "(CellSchema cellSchema, LayoutOptions options)", "modifiers": "private", "return": "void", "signature": "void normalizeCellSchema(CellSchema cellSchema, LayoutOptions options)", "full_signature": "private void normalizeCellSchema(CellSchema cellSchema, LayoutOptions options)", "class_method_signature": "TableLayoutBuilder.normalizeCellSchema(CellSchema cellSchema, LayoutOptions options)", "testcase": false, "constructor": false}, {"identifier": "normalizeAvroSchemaCollection", "parameters": "(\n      Collection<AvroSchema> avroSchemas,\n      LayoutOptions options)", "modifiers": "private", "return": "void", "signature": "void normalizeAvroSchemaCollection(\n      Collection<AvroSchema> avroSchemas,\n      LayoutOptions options)", "full_signature": "private void normalizeAvroSchemaCollection(\n      Collection<AvroSchema> avroSchemas,\n      LayoutOptions options)", "class_method_signature": "TableLayoutBuilder.normalizeAvroSchemaCollection(\n      Collection<AvroSchema> avroSchemas,\n      LayoutOptions options)", "testcase": false, "constructor": false}, {"identifier": "normalizeAvroSchema", "parameters": "(AvroSchema avroSchema, LayoutOptions options)", "modifiers": "private", "return": "void", "signature": "void normalizeAvroSchema(AvroSchema avroSchema, LayoutOptions options)", "full_signature": "private void normalizeAvroSchema(AvroSchema avroSchema, LayoutOptions options)", "class_method_signature": "TableLayoutBuilder.normalizeAvroSchema(AvroSchema avroSchema, LayoutOptions options)", "testcase": false, "constructor": false}, {"identifier": "nextLayoutId", "parameters": "(String layoutId)", "modifiers": "private static", "return": "String", "signature": "String nextLayoutId(String layoutId)", "full_signature": "private static String nextLayoutId(String layoutId)", "class_method_signature": "TableLayoutBuilder.nextLayoutId(String layoutId)", "testcase": false, "constructor": false}], "file": "kiji-schema/src/main/java/org/kiji/schema/layout/TableLayoutBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "TableLayoutDesc", "body": "public TableLayoutDesc build() {\n    return mDescBuilder.build();\n  }", "signature": "TableLayoutDesc build()", "full_signature": "public TableLayoutDesc build()", "class_method_signature": "TableLayoutBuilder.build()", "testcase": false, "constructor": false, "invocations": ["build"]}, "repository": {"repo_id": 6682280, "url": "https://github.com/kijiproject/kiji-schema", "language": "Java", "is_fork": false, "fork_count": 44, "stargazer_count": 55, "size": 11689, "license": "licensed"}}