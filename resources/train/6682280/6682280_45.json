{"test_class": {"identifier": "TestToolUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(TestToolUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(TestToolUtils.class)", "var_name": "LOG"}, {"original_string": "private final KijiTableLayout mFormattedLayout =\n      KijiTableLayouts.getTableLayout(KijiTableLayouts.FORMATTED_RKF);", "modifier": "private final", "type": "KijiTableLayout", "declarator": "mFormattedLayout =\n      KijiTableLayouts.getTableLayout(KijiTableLayouts.FORMATTED_RKF)", "var_name": "mFormattedLayout"}, {"original_string": "private final KijiTableLayout mRawLayout =\n      KijiTableLayouts.getTableLayout(KijiTableLayouts.SQOOP_EXPORT_SAMPLING_UNHASHED_TEST);", "modifier": "private final", "type": "KijiTableLayout", "declarator": "mRawLayout =\n      KijiTableLayouts.getTableLayout(KijiTableLayouts.SQOOP_EXPORT_SAMPLING_UNHASHED_TEST)", "var_name": "mRawLayout"}, {"original_string": "private final KijiTableLayout mHashedLayout =\n      KijiTableLayouts.getTableLayout(KijiTableLayouts.SQOOP_EXPORT_SAMPLING_HASHED_TEST);", "modifier": "private final", "type": "KijiTableLayout", "declarator": "mHashedLayout =\n      KijiTableLayouts.getTableLayout(KijiTableLayouts.SQOOP_EXPORT_SAMPLING_HASHED_TEST)", "var_name": "mHashedLayout"}, {"original_string": "private final KijiTableLayout mHashPrefixedLayout =\n      KijiTableLayouts.getTableLayout(KijiTableLayouts.HASH_PREFIXED_RKF);", "modifier": "private final", "type": "KijiTableLayout", "declarator": "mHashPrefixedLayout =\n      KijiTableLayouts.getTableLayout(KijiTableLayouts.HASH_PREFIXED_RKF)", "var_name": "mHashPrefixedLayout"}], "file": "kiji-schema/src/test/java/org/kiji/schema/tools/TestToolUtils.java"}, "test_case": {"identifier": "testNonNullFollowsNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testNonNullFollowsNull() throws IOException {\n\n    try {\n      ToolUtils\n          .createEntityIdFromUserInputs(\"['dummy', 'str1', 'str2', null, 5]\", mFormattedLayout);\n      fail(\"Should fail with EntityIdException.\");\n    } catch (EntityIdException eie) {\n      assertEquals(\"Non null component follows null component\", eie.getMessage());\n    }\n  }", "signature": "void testNonNullFollowsNull()", "full_signature": "@Test public void testNonNullFollowsNull()", "class_method_signature": "TestToolUtils.testNonNullFollowsNull()", "testcase": true, "constructor": false, "invocations": ["createEntityIdFromUserInputs", "fail", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "ToolUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ToolUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ToolUtils.class)", "var_name": "LOG"}, {"original_string": "public static final String HBASE_ROW_KEY_SPEC_PREFIX = \"hbase=\";", "modifier": "public static final", "type": "String", "declarator": "HBASE_ROW_KEY_SPEC_PREFIX = \"hbase=\"", "var_name": "HBASE_ROW_KEY_SPEC_PREFIX"}, {"original_string": "public static final String KIJI_ROW_KEY_SPEC_PREFIX = \"kiji=\";", "modifier": "public static final", "type": "String", "declarator": "KIJI_ROW_KEY_SPEC_PREFIX = \"kiji=\"", "var_name": "KIJI_ROW_KEY_SPEC_PREFIX"}, {"original_string": "public static final String BYTES_SPEC_PREFIX_HEX = \"hex:\";", "modifier": "public static final", "type": "String", "declarator": "BYTES_SPEC_PREFIX_HEX = \"hex:\"", "var_name": "BYTES_SPEC_PREFIX_HEX"}, {"original_string": "public static final String BYTES_SPEC_PREFIX_URL = \"url:\";", "modifier": "public static final", "type": "String", "declarator": "BYTES_SPEC_PREFIX_URL = \"url:\"", "var_name": "BYTES_SPEC_PREFIX_URL"}, {"original_string": "public static final String BYTES_SPEC_PREFIX_UTF8 = \"utf8:\";", "modifier": "public static final", "type": "String", "declarator": "BYTES_SPEC_PREFIX_UTF8 = \"utf8:\"", "var_name": "BYTES_SPEC_PREFIX_UTF8"}], "methods": [{"identifier": "ToolUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " ToolUtils()", "full_signature": "private  ToolUtils()", "class_method_signature": "ToolUtils.ToolUtils()", "testcase": false, "constructor": true}, {"identifier": "createEntityIdFromUserInputs", "parameters": "(String entityFlag, KijiTableLayout layout)", "modifiers": "public static", "return": "EntityId", "signature": "EntityId createEntityIdFromUserInputs(String entityFlag, KijiTableLayout layout)", "full_signature": "public static EntityId createEntityIdFromUserInputs(String entityFlag, KijiTableLayout layout)", "class_method_signature": "ToolUtils.createEntityIdFromUserInputs(String entityFlag, KijiTableLayout layout)", "testcase": false, "constructor": false}, {"identifier": "parseKijiRowKey", "parameters": "(\n      String rowKeySpec, EntityIdFactory factory, KijiTableLayout layout)", "modifiers": "public static", "return": "EntityId", "signature": "EntityId parseKijiRowKey(\n      String rowKeySpec, EntityIdFactory factory, KijiTableLayout layout)", "full_signature": "public static EntityId parseKijiRowKey(\n      String rowKeySpec, EntityIdFactory factory, KijiTableLayout layout)", "class_method_signature": "ToolUtils.parseKijiRowKey(\n      String rowKeySpec, EntityIdFactory factory, KijiTableLayout layout)", "testcase": false, "constructor": false}, {"identifier": "getJsonStringOrIntValue", "parameters": "(JsonNode node)", "modifiers": "private static", "return": "Object", "signature": "Object getJsonStringOrIntValue(JsonNode node)", "full_signature": "private static Object getJsonStringOrIntValue(JsonNode node)", "class_method_signature": "ToolUtils.getJsonStringOrIntValue(JsonNode node)", "testcase": false, "constructor": false}, {"identifier": "parseJsonFormattedKeySpec", "parameters": "(\n      String json, RowKeyFormat2 format, EntityIdFactory factory)", "modifiers": "public static", "return": "EntityId", "signature": "EntityId parseJsonFormattedKeySpec(\n      String json, RowKeyFormat2 format, EntityIdFactory factory)", "full_signature": "public static EntityId parseJsonFormattedKeySpec(\n      String json, RowKeyFormat2 format, EntityIdFactory factory)", "class_method_signature": "ToolUtils.parseJsonFormattedKeySpec(\n      String json, RowKeyFormat2 format, EntityIdFactory factory)", "testcase": false, "constructor": false}, {"identifier": "parseBytesFlag", "parameters": "(String flag)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] parseBytesFlag(String flag)", "full_signature": "public static byte[] parseBytesFlag(String flag)", "class_method_signature": "ToolUtils.parseBytesFlag(String flag)", "testcase": false, "constructor": false}, {"identifier": "printRow", "parameters": "(\n      KijiRowData row,\n      Map<FamilyLayout, List<String>> mapTypeFamilies,\n      Map<FamilyLayout, List<ColumnLayout>> groupTypeColumns,\n      PrintStream printStream)", "modifiers": "public static", "return": "void", "signature": "void printRow(\n      KijiRowData row,\n      Map<FamilyLayout, List<String>> mapTypeFamilies,\n      Map<FamilyLayout, List<ColumnLayout>> groupTypeColumns,\n      PrintStream printStream)", "full_signature": "public static void printRow(\n      KijiRowData row,\n      Map<FamilyLayout, List<String>> mapTypeFamilies,\n      Map<FamilyLayout, List<ColumnLayout>> groupTypeColumns,\n      PrintStream printStream)", "class_method_signature": "ToolUtils.printRow(\n      KijiRowData row,\n      Map<FamilyLayout, List<String>> mapTypeFamilies,\n      Map<FamilyLayout, List<ColumnLayout>> groupTypeColumns,\n      PrintStream printStream)", "testcase": false, "constructor": false}, {"identifier": "printCell", "parameters": "(EntityId entityId, Long timestamp,\n      String family, String qualifier, Object cellData, PrintStream printStream)", "modifiers": "private static", "return": "void", "signature": "void printCell(EntityId entityId, Long timestamp,\n      String family, String qualifier, Object cellData, PrintStream printStream)", "full_signature": "private static void printCell(EntityId entityId, Long timestamp,\n      String family, String qualifier, Object cellData, PrintStream printStream)", "class_method_signature": "ToolUtils.printCell(EntityId entityId, Long timestamp,\n      String family, String qualifier, Object cellData, PrintStream printStream)", "testcase": false, "constructor": false}, {"identifier": "printCell", "parameters": "(EntityId entityId, KijiCell<?> cell, PrintStream printStream)", "modifiers": "private static", "return": "void", "signature": "void printCell(EntityId entityId, KijiCell<?> cell, PrintStream printStream)", "full_signature": "private static void printCell(EntityId entityId, KijiCell<?> cell, PrintStream printStream)", "class_method_signature": "ToolUtils.printCell(EntityId entityId, KijiCell<?> cell, PrintStream printStream)", "testcase": false, "constructor": false}, {"identifier": "getMapTypeFamilies", "parameters": "(\n      List<KijiColumnName> rawColumnNames,\n      KijiTableLayout layout)", "modifiers": "public static", "return": "Map<FamilyLayout, List<String>>", "signature": "Map<FamilyLayout, List<String>> getMapTypeFamilies(\n      List<KijiColumnName> rawColumnNames,\n      KijiTableLayout layout)", "full_signature": "public static Map<FamilyLayout, List<String>> getMapTypeFamilies(\n      List<KijiColumnName> rawColumnNames,\n      KijiTableLayout layout)", "class_method_signature": "ToolUtils.getMapTypeFamilies(\n      List<KijiColumnName> rawColumnNames,\n      KijiTableLayout layout)", "testcase": false, "constructor": false}, {"identifier": "getGroupTypeColumns", "parameters": "(\n      List<KijiColumnName> rawColumnNames,\n      KijiTableLayout layout)", "modifiers": "public static", "return": "Map<FamilyLayout, List<ColumnLayout>>", "signature": "Map<FamilyLayout, List<ColumnLayout>> getGroupTypeColumns(\n      List<KijiColumnName> rawColumnNames,\n      KijiTableLayout layout)", "full_signature": "public static Map<FamilyLayout, List<ColumnLayout>> getGroupTypeColumns(\n      List<KijiColumnName> rawColumnNames,\n      KijiTableLayout layout)", "class_method_signature": "ToolUtils.getGroupTypeColumns(\n      List<KijiColumnName> rawColumnNames,\n      KijiTableLayout layout)", "testcase": false, "constructor": false}, {"identifier": "addColumn", "parameters": "(\n      FamilyLayout family,\n      ColumnLayout column,\n      Map<FamilyLayout, List<ColumnLayout>> familyColumnMap)", "modifiers": "private static", "return": "void", "signature": "void addColumn(\n      FamilyLayout family,\n      ColumnLayout column,\n      Map<FamilyLayout, List<ColumnLayout>> familyColumnMap)", "full_signature": "private static void addColumn(\n      FamilyLayout family,\n      ColumnLayout column,\n      Map<FamilyLayout, List<ColumnLayout>> familyColumnMap)", "class_method_signature": "ToolUtils.addColumn(\n      FamilyLayout family,\n      ColumnLayout column,\n      Map<FamilyLayout, List<ColumnLayout>> familyColumnMap)", "testcase": false, "constructor": false}, {"identifier": "addColumn", "parameters": "(\n      FamilyLayout mapFamily,\n      String qualifier,\n      Map<FamilyLayout, List<String>> familyQualifierMap)", "modifiers": "private static", "return": "void", "signature": "void addColumn(\n      FamilyLayout mapFamily,\n      String qualifier,\n      Map<FamilyLayout, List<String>> familyQualifierMap)", "full_signature": "private static void addColumn(\n      FamilyLayout mapFamily,\n      String qualifier,\n      Map<FamilyLayout, List<String>> familyQualifierMap)", "class_method_signature": "ToolUtils.addColumn(\n      FamilyLayout mapFamily,\n      String qualifier,\n      Map<FamilyLayout, List<String>> familyQualifierMap)", "testcase": false, "constructor": false}, {"identifier": "getDataRequest", "parameters": "(\n      Map<FamilyLayout, List<String>> mapTypeFamilies,\n      Map<FamilyLayout, List<ColumnLayout>> groupTypeColumns,\n      int maxVersions,\n      long minTimestamp,\n      long maxTimestamp)", "modifiers": "public static", "return": "KijiDataRequest", "signature": "KijiDataRequest getDataRequest(\n      Map<FamilyLayout, List<String>> mapTypeFamilies,\n      Map<FamilyLayout, List<ColumnLayout>> groupTypeColumns,\n      int maxVersions,\n      long minTimestamp,\n      long maxTimestamp)", "full_signature": "public static KijiDataRequest getDataRequest(\n      Map<FamilyLayout, List<String>> mapTypeFamilies,\n      Map<FamilyLayout, List<ColumnLayout>> groupTypeColumns,\n      int maxVersions,\n      long minTimestamp,\n      long maxTimestamp)", "class_method_signature": "ToolUtils.getDataRequest(\n      Map<FamilyLayout, List<String>> mapTypeFamilies,\n      Map<FamilyLayout, List<ColumnLayout>> groupTypeColumns,\n      int maxVersions,\n      long minTimestamp,\n      long maxTimestamp)", "testcase": false, "constructor": false}, {"identifier": "formatEntityId", "parameters": "(EntityId eid)", "modifiers": "@Deprecated public static", "return": "String", "signature": "String formatEntityId(EntityId eid)", "full_signature": "@Deprecated public static String formatEntityId(EntityId eid)", "class_method_signature": "ToolUtils.formatEntityId(EntityId eid)", "testcase": false, "constructor": false}], "file": "kiji-schema/src/main/java/org/kiji/schema/tools/ToolUtils.java"}, "focal_method": {"identifier": "createEntityIdFromUserInputs", "parameters": "(String entityFlag, KijiTableLayout layout)", "modifiers": "public static", "return": "EntityId", "body": "public static EntityId createEntityIdFromUserInputs(String entityFlag, KijiTableLayout layout)\n      throws IOException {\n    Preconditions.checkNotNull(entityFlag);\n\n    final EntityIdFactory factory = EntityIdFactory.getFactory(layout);\n\n    if (entityFlag.startsWith(HBASE_ROW_KEY_SPEC_PREFIX)) {\n      // HBase row key specification\n      final String hbaseSpec = entityFlag.substring(HBASE_ROW_KEY_SPEC_PREFIX.length());\n      final byte[] hbaseRowKey = parseBytesFlag(hbaseSpec);\n      return factory.getEntityIdFromHBaseRowKey(hbaseRowKey);\n\n    } else {\n      // Kiji row key specification\n      final String kijiSpec = entityFlag.startsWith(KIJI_ROW_KEY_SPEC_PREFIX)\n          ? entityFlag.substring(KIJI_ROW_KEY_SPEC_PREFIX.length())\n          : entityFlag;\n\n      return parseKijiRowKey(kijiSpec, factory, layout);\n    }\n  }", "signature": "EntityId createEntityIdFromUserInputs(String entityFlag, KijiTableLayout layout)", "full_signature": "public static EntityId createEntityIdFromUserInputs(String entityFlag, KijiTableLayout layout)", "class_method_signature": "ToolUtils.createEntityIdFromUserInputs(String entityFlag, KijiTableLayout layout)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "getFactory", "startsWith", "substring", "length", "parseBytesFlag", "getEntityIdFromHBaseRowKey", "startsWith", "substring", "length", "parseKijiRowKey"]}, "repository": {"repo_id": 6682280, "url": "https://github.com/kijiproject/kiji-schema", "language": "Java", "is_fork": false, "fork_count": 44, "stargazer_count": 55, "size": 11689, "license": "licensed"}}