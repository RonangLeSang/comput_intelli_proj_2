{"test_class": {"identifier": "TestJavaIdentifiers", "superclass": "", "interfaces": "", "fields": [], "file": "kiji-schema/src/test/java/org/kiji/schema/util/TestJavaIdentifiers.java"}, "test_case": {"identifier": "testIsValidIdentifier", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testIsValidIdentifier() {\n    assertFalse(JavaIdentifiers.isValidIdentifier(\"\"));\n    assertTrue(JavaIdentifiers.isValidIdentifier(\"a\"));\n    assertTrue(JavaIdentifiers.isValidIdentifier(\"B\"));\n    assertTrue(JavaIdentifiers.isValidIdentifier(\"_\"));\n    assertFalse(JavaIdentifiers.isValidIdentifier(\"-\"));\n    assertFalse(JavaIdentifiers.isValidIdentifier(\".\"));\n    assertFalse(JavaIdentifiers.isValidIdentifier(\"0\"));\n    assertTrue(JavaIdentifiers.isValidIdentifier(\"_1\"));\n    assertTrue(JavaIdentifiers.isValidIdentifier(\"_c\"));\n    assertTrue(JavaIdentifiers.isValidIdentifier(\"_giw07nf\"));\n    assertTrue(JavaIdentifiers.isValidIdentifier(\"giw07nf\"));\n    assertFalse(JavaIdentifiers.isValidIdentifier(\"2giw07nf\"));\n  }", "signature": "void testIsValidIdentifier()", "full_signature": "@Test public void testIsValidIdentifier()", "class_method_signature": "TestJavaIdentifiers.testIsValidIdentifier()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isValidIdentifier", "assertTrue", "isValidIdentifier", "assertTrue", "isValidIdentifier", "assertTrue", "isValidIdentifier", "assertFalse", "isValidIdentifier", "assertFalse", "isValidIdentifier", "assertFalse", "isValidIdentifier", "assertTrue", "isValidIdentifier", "assertTrue", "isValidIdentifier", "assertTrue", "isValidIdentifier", "assertTrue", "isValidIdentifier", "assertFalse", "isValidIdentifier"]}, "focal_class": {"identifier": "JavaIdentifiers", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "JavaIdentifiers", "parameters": "()", "modifiers": "private", "return": "", "signature": " JavaIdentifiers()", "full_signature": "private  JavaIdentifiers()", "class_method_signature": "JavaIdentifiers.JavaIdentifiers()", "testcase": false, "constructor": true}, {"identifier": "isValidIdentifier", "parameters": "(String identifier)", "modifiers": "public static", "return": "boolean", "signature": "boolean isValidIdentifier(String identifier)", "full_signature": "public static boolean isValidIdentifier(String identifier)", "class_method_signature": "JavaIdentifiers.isValidIdentifier(String identifier)", "testcase": false, "constructor": false}, {"identifier": "isValidClassName", "parameters": "(String className)", "modifiers": "public static", "return": "boolean", "signature": "boolean isValidClassName(String className)", "full_signature": "public static boolean isValidClassName(String className)", "class_method_signature": "JavaIdentifiers.isValidClassName(String className)", "testcase": false, "constructor": false}], "file": "kiji-schema/src/main/java/org/kiji/schema/util/JavaIdentifiers.java"}, "focal_method": {"identifier": "isValidIdentifier", "parameters": "(String identifier)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isValidIdentifier(String identifier) {\n    if (identifier.isEmpty() || !Character.isJavaIdentifierStart(identifier.charAt(0))) {\n      return false;\n    }\n    for (int i = 1; i < identifier.length(); i++) {\n      if (!Character.isJavaIdentifierPart(identifier.charAt(i))) {\n        return false;\n      }\n    }\n    return true;\n  }", "signature": "boolean isValidIdentifier(String identifier)", "full_signature": "public static boolean isValidIdentifier(String identifier)", "class_method_signature": "JavaIdentifiers.isValidIdentifier(String identifier)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "isJavaIdentifierStart", "charAt", "length", "isJavaIdentifierPart", "charAt"]}, "repository": {"repo_id": 6682280, "url": "https://github.com/kijiproject/kiji-schema", "language": "Java", "is_fork": false, "fork_count": 44, "stargazer_count": 55, "size": 11689, "license": "licensed"}}