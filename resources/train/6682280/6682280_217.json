{"test_class": {"identifier": "TestKijiTableLayout", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(TestKijiTableLayout.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(TestKijiTableLayout.class)", "var_name": "LOG"}, {"original_string": "private static final String TABLE_LAYOUT_VERSION = \"layout-1.2\";", "modifier": "private static final", "type": "String", "declarator": "TABLE_LAYOUT_VERSION = \"layout-1.2\"", "var_name": "TABLE_LAYOUT_VERSION"}, {"original_string": "private static final String TABLE_LAYOUT_1_1 = \"layout-1.1\";", "modifier": "private static final", "type": "String", "declarator": "TABLE_LAYOUT_1_1 = \"layout-1.1\"", "var_name": "TABLE_LAYOUT_1_1"}, {"original_string": "public static final String TABLE_LAYOUT_1_2 = \"layout-1.2.0\";", "modifier": "public static final", "type": "String", "declarator": "TABLE_LAYOUT_1_2 = \"layout-1.2.0\"", "var_name": "TABLE_LAYOUT_1_2"}], "file": "kiji-schema/src/test/java/org/kiji/schema/layout/TestKijiTableLayout.java"}, "test_case": {"identifier": "tooHighRangeScanIndexRKF", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void tooHighRangeScanIndexRKF() throws InvalidLayoutException {\n    final TableLayoutDesc desc = TableLayoutDesc.newBuilder()\n        .setName(\"table_name\")\n        .setKeysFormat(tooHighRangeScanIndexRowKeyFormat())\n        .setVersion(TABLE_LAYOUT_VERSION)\n        .build();\n    try {\n      final KijiTableLayout ktl = KijiTableLayout.newLayout(desc);\n      fail(\"An exception should have been thrown.\");\n    } catch (InvalidLayoutException ile) {\n      assertEquals(\n          \"Invalid range scan index. Range scans are supported starting with the second component.\",\n          ile.getMessage());\n    }\n  }", "signature": "void tooHighRangeScanIndexRKF()", "full_signature": "@Test public void tooHighRangeScanIndexRKF()", "class_method_signature": "TestKijiTableLayout.tooHighRangeScanIndexRKF()", "testcase": true, "constructor": false, "invocations": ["build", "setVersion", "setKeysFormat", "setName", "newBuilder", "tooHighRangeScanIndexRowKeyFormat", "newLayout", "fail", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "KijiTableLayout", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(KijiTableLayout.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(KijiTableLayout.class)", "var_name": "LOG"}, {"original_string": "private static final String LAYOUT_PROTOCOL_NAME = \"layout\";", "modifier": "private static final", "type": "String", "declarator": "LAYOUT_PROTOCOL_NAME = \"layout\"", "var_name": "LAYOUT_PROTOCOL_NAME"}, {"original_string": "private final TableLayoutDesc mDesc;", "modifier": "private final", "type": "TableLayoutDesc", "declarator": "mDesc", "var_name": "mDesc"}, {"original_string": "private final ProtocolVersion mLayoutVersion;", "modifier": "private final", "type": "ProtocolVersion", "declarator": "mLayoutVersion", "var_name": "mLayoutVersion"}, {"original_string": "private final ImmutableList<LocalityGroupLayout> mLocalityGroups;", "modifier": "private final", "type": "ImmutableList<LocalityGroupLayout>", "declarator": "mLocalityGroups", "var_name": "mLocalityGroups"}, {"original_string": "private final ImmutableMap<String, LocalityGroupLayout> mLocalityGroupMap;", "modifier": "private final", "type": "ImmutableMap<String, LocalityGroupLayout>", "declarator": "mLocalityGroupMap", "var_name": "mLocalityGroupMap"}, {"original_string": "private final ImmutableList<FamilyLayout> mFamilies;", "modifier": "private final", "type": "ImmutableList<FamilyLayout>", "declarator": "mFamilies", "var_name": "mFamilies"}, {"original_string": "private final ImmutableMap<String, FamilyLayout> mFamilyMap;", "modifier": "private final", "type": "ImmutableMap<String, FamilyLayout>", "declarator": "mFamilyMap", "var_name": "mFamilyMap"}, {"original_string": "private final ImmutableBiMap<ColumnId, String> mLocalityGroupIdNameMap;", "modifier": "private final", "type": "ImmutableBiMap<ColumnId, String>", "declarator": "mLocalityGroupIdNameMap", "var_name": "mLocalityGroupIdNameMap"}, {"original_string": "private final ImmutableSet<KijiColumnName> mColumnNames;", "modifier": "private final", "type": "ImmutableSet<KijiColumnName>", "declarator": "mColumnNames", "var_name": "mColumnNames"}, {"original_string": "private KijiSchemaTable mSchemaTable;", "modifier": "private", "type": "KijiSchemaTable", "declarator": "mSchemaTable", "var_name": "mSchemaTable"}], "methods": [{"identifier": "getMaxSupportedLayoutVersion", "parameters": "()", "modifiers": "public static", "return": "ProtocolVersion", "signature": "ProtocolVersion getMaxSupportedLayoutVersion()", "full_signature": "public static ProtocolVersion getMaxSupportedLayoutVersion()", "class_method_signature": "KijiTableLayout.getMaxSupportedLayoutVersion()", "testcase": false, "constructor": false}, {"identifier": "getMinSupportedLayoutVersion", "parameters": "()", "modifiers": "public static", "return": "ProtocolVersion", "signature": "ProtocolVersion getMinSupportedLayoutVersion()", "full_signature": "public static ProtocolVersion getMinSupportedLayoutVersion()", "class_method_signature": "KijiTableLayout.getMinSupportedLayoutVersion()", "testcase": false, "constructor": false}, {"identifier": "isValidRowKeyFormat1", "parameters": "(RowKeyFormat format)", "modifiers": "private", "return": "void", "signature": "void isValidRowKeyFormat1(RowKeyFormat format)", "full_signature": "private void isValidRowKeyFormat1(RowKeyFormat format)", "class_method_signature": "KijiTableLayout.isValidRowKeyFormat1(RowKeyFormat format)", "testcase": false, "constructor": false}, {"identifier": "isValidRowKeyFormat2", "parameters": "(RowKeyFormat2 format)", "modifiers": "private", "return": "void", "signature": "void isValidRowKeyFormat2(RowKeyFormat2 format)", "full_signature": "private void isValidRowKeyFormat2(RowKeyFormat2 format)", "class_method_signature": "KijiTableLayout.isValidRowKeyFormat2(RowKeyFormat2 format)", "testcase": false, "constructor": false}, {"identifier": "computeLayoutVersion", "parameters": "(String version)", "modifiers": "private static", "return": "ProtocolVersion", "signature": "ProtocolVersion computeLayoutVersion(String version)", "full_signature": "private static ProtocolVersion computeLayoutVersion(String version)", "class_method_signature": "KijiTableLayout.computeLayoutVersion(String version)", "testcase": false, "constructor": false}, {"identifier": "KijiTableLayout", "parameters": "(TableLayoutDesc desc, KijiTableLayout reference)", "modifiers": "private", "return": "", "signature": " KijiTableLayout(TableLayoutDesc desc, KijiTableLayout reference)", "full_signature": "private  KijiTableLayout(TableLayoutDesc desc, KijiTableLayout reference)", "class_method_signature": "KijiTableLayout.KijiTableLayout(TableLayoutDesc desc, KijiTableLayout reference)", "testcase": false, "constructor": true}, {"identifier": "getDesc", "parameters": "()", "modifiers": "public", "return": "TableLayoutDesc", "signature": "TableLayoutDesc getDesc()", "full_signature": "public TableLayoutDesc getDesc()", "class_method_signature": "KijiTableLayout.getDesc()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "KijiTableLayout.getName()", "testcase": false, "constructor": false}, {"identifier": "getLocalityGroups", "parameters": "()", "modifiers": "public", "return": "Collection<LocalityGroupLayout>", "signature": "Collection<LocalityGroupLayout> getLocalityGroups()", "full_signature": "public Collection<LocalityGroupLayout> getLocalityGroups()", "class_method_signature": "KijiTableLayout.getLocalityGroups()", "testcase": false, "constructor": false}, {"identifier": "getLocalityGroupIdNameMap", "parameters": "()", "modifiers": "public", "return": "BiMap<ColumnId, String>", "signature": "BiMap<ColumnId, String> getLocalityGroupIdNameMap()", "full_signature": "public BiMap<ColumnId, String> getLocalityGroupIdNameMap()", "class_method_signature": "KijiTableLayout.getLocalityGroupIdNameMap()", "testcase": false, "constructor": false}, {"identifier": "getLocalityGroupMap", "parameters": "()", "modifiers": "public", "return": "Map<String, LocalityGroupLayout>", "signature": "Map<String, LocalityGroupLayout> getLocalityGroupMap()", "full_signature": "public Map<String, LocalityGroupLayout> getLocalityGroupMap()", "class_method_signature": "KijiTableLayout.getLocalityGroupMap()", "testcase": false, "constructor": false}, {"identifier": "getFamilyMap", "parameters": "()", "modifiers": "public", "return": "Map<String, FamilyLayout>", "signature": "Map<String, FamilyLayout> getFamilyMap()", "full_signature": "public Map<String, FamilyLayout> getFamilyMap()", "class_method_signature": "KijiTableLayout.getFamilyMap()", "testcase": false, "constructor": false}, {"identifier": "getFamilies", "parameters": "()", "modifiers": "public", "return": "Collection<FamilyLayout>", "signature": "Collection<FamilyLayout> getFamilies()", "full_signature": "public Collection<FamilyLayout> getFamilies()", "class_method_signature": "KijiTableLayout.getFamilies()", "testcase": false, "constructor": false}, {"identifier": "getColumnNames", "parameters": "()", "modifiers": "public", "return": "Set<KijiColumnName>", "signature": "Set<KijiColumnName> getColumnNames()", "full_signature": "public Set<KijiColumnName> getColumnNames()", "class_method_signature": "KijiTableLayout.getColumnNames()", "testcase": false, "constructor": false}, {"identifier": "getCellSchema", "parameters": "(KijiColumnName columnName)", "modifiers": "public", "return": "CellSchema", "signature": "CellSchema getCellSchema(KijiColumnName columnName)", "full_signature": "public CellSchema getCellSchema(KijiColumnName columnName)", "class_method_signature": "KijiTableLayout.getCellSchema(KijiColumnName columnName)", "testcase": false, "constructor": false}, {"identifier": "getSchema", "parameters": "(KijiColumnName columnName)", "modifiers": "@Deprecated public", "return": "Schema", "signature": "Schema getSchema(KijiColumnName columnName)", "full_signature": "@Deprecated public Schema getSchema(KijiColumnName columnName)", "class_method_signature": "KijiTableLayout.getSchema(KijiColumnName columnName)", "testcase": false, "constructor": false}, {"identifier": "getCellFormat", "parameters": "(KijiColumnName column)", "modifiers": "@Deprecated public", "return": "SchemaStorage", "signature": "SchemaStorage getCellFormat(KijiColumnName column)", "full_signature": "@Deprecated public SchemaStorage getCellFormat(KijiColumnName column)", "class_method_signature": "KijiTableLayout.getCellFormat(KijiColumnName column)", "testcase": false, "constructor": false}, {"identifier": "getCellSpec", "parameters": "(KijiColumnName column)", "modifiers": "public", "return": "CellSpec", "signature": "CellSpec getCellSpec(KijiColumnName column)", "full_signature": "public CellSpec getCellSpec(KijiColumnName column)", "class_method_signature": "KijiTableLayout.getCellSpec(KijiColumnName column)", "testcase": false, "constructor": false}, {"identifier": "exists", "parameters": "(KijiColumnName column)", "modifiers": "public", "return": "boolean", "signature": "boolean exists(KijiColumnName column)", "full_signature": "public boolean exists(KijiColumnName column)", "class_method_signature": "KijiTableLayout.exists(KijiColumnName column)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "KijiTableLayout.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "KijiTableLayout.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "KijiTableLayout.toString()", "testcase": false, "constructor": false}, {"identifier": "setSchemaTable", "parameters": "(KijiSchemaTable schemaTable)", "modifiers": "public", "return": "KijiTableLayout", "signature": "KijiTableLayout setSchemaTable(KijiSchemaTable schemaTable)", "full_signature": "public KijiTableLayout setSchemaTable(KijiSchemaTable schemaTable)", "class_method_signature": "KijiTableLayout.setSchemaTable(KijiSchemaTable schemaTable)", "testcase": false, "constructor": false}, {"identifier": "getSchemaTable", "parameters": "()", "modifiers": "public", "return": "KijiSchemaTable", "signature": "KijiSchemaTable getSchemaTable()", "full_signature": "public KijiSchemaTable getSchemaTable()", "class_method_signature": "KijiTableLayout.getSchemaTable()", "testcase": false, "constructor": false}, {"identifier": "isValidName", "parameters": "(String name)", "modifiers": "private static", "return": "boolean", "signature": "boolean isValidName(String name)", "full_signature": "private static boolean isValidName(String name)", "class_method_signature": "KijiTableLayout.isValidName(String name)", "testcase": false, "constructor": false}, {"identifier": "isValidAlias", "parameters": "(String alias)", "modifiers": "private static", "return": "boolean", "signature": "boolean isValidAlias(String alias)", "full_signature": "private static boolean isValidAlias(String alias)", "class_method_signature": "KijiTableLayout.isValidAlias(String alias)", "testcase": false, "constructor": false}, {"identifier": "validateCellSchema", "parameters": "(\n      ProtocolVersion layoutVersion,\n      CellSchema schema,\n      CellSchema reference)", "modifiers": "private static", "return": "void", "signature": "void validateCellSchema(\n      ProtocolVersion layoutVersion,\n      CellSchema schema,\n      CellSchema reference)", "full_signature": "private static void validateCellSchema(\n      ProtocolVersion layoutVersion,\n      CellSchema schema,\n      CellSchema reference)", "class_method_signature": "KijiTableLayout.validateCellSchema(\n      ProtocolVersion layoutVersion,\n      CellSchema schema,\n      CellSchema reference)", "testcase": false, "constructor": false}, {"identifier": "createFromEffectiveJsonResource", "parameters": "(String resource)", "modifiers": "public static", "return": "KijiTableLayout", "signature": "KijiTableLayout createFromEffectiveJsonResource(String resource)", "full_signature": "public static KijiTableLayout createFromEffectiveJsonResource(String resource)", "class_method_signature": "KijiTableLayout.createFromEffectiveJsonResource(String resource)", "testcase": false, "constructor": false}, {"identifier": "createFromEffectiveJson", "parameters": "(InputStream istream)", "modifiers": "public static", "return": "KijiTableLayout", "signature": "KijiTableLayout createFromEffectiveJson(InputStream istream)", "full_signature": "public static KijiTableLayout createFromEffectiveJson(InputStream istream)", "class_method_signature": "KijiTableLayout.createFromEffectiveJson(InputStream istream)", "testcase": false, "constructor": false}, {"identifier": "newLayout", "parameters": "(TableLayoutDesc layout)", "modifiers": "public static", "return": "KijiTableLayout", "signature": "KijiTableLayout newLayout(TableLayoutDesc layout)", "full_signature": "public static KijiTableLayout newLayout(TableLayoutDesc layout)", "class_method_signature": "KijiTableLayout.newLayout(TableLayoutDesc layout)", "testcase": false, "constructor": false}, {"identifier": "createUpdatedLayout", "parameters": "(\n      TableLayoutDesc updateLayoutDesc, KijiTableLayout oldLayout)", "modifiers": "public static", "return": "KijiTableLayout", "signature": "KijiTableLayout createUpdatedLayout(\n      TableLayoutDesc updateLayoutDesc, KijiTableLayout oldLayout)", "full_signature": "public static KijiTableLayout createUpdatedLayout(\n      TableLayoutDesc updateLayoutDesc, KijiTableLayout oldLayout)", "class_method_signature": "KijiTableLayout.createUpdatedLayout(\n      TableLayoutDesc updateLayoutDesc, KijiTableLayout oldLayout)", "testcase": false, "constructor": false}, {"identifier": "readTableLayoutDescFromJSON", "parameters": "(InputStream istream)", "modifiers": "public static", "return": "TableLayoutDesc", "signature": "TableLayoutDesc readTableLayoutDescFromJSON(InputStream istream)", "full_signature": "public static TableLayoutDesc readTableLayoutDescFromJSON(InputStream istream)", "class_method_signature": "KijiTableLayout.readTableLayoutDescFromJSON(InputStream istream)", "testcase": false, "constructor": false}, {"identifier": "getEncoding", "parameters": "(Object rowKeyFormat)", "modifiers": "public static", "return": "RowKeyEncoding", "signature": "RowKeyEncoding getEncoding(Object rowKeyFormat)", "full_signature": "public static RowKeyEncoding getEncoding(Object rowKeyFormat)", "class_method_signature": "KijiTableLayout.getEncoding(Object rowKeyFormat)", "testcase": false, "constructor": false}, {"identifier": "getHashSize", "parameters": "(Object rowKeyFormat)", "modifiers": "public static", "return": "int", "signature": "int getHashSize(Object rowKeyFormat)", "full_signature": "public static int getHashSize(Object rowKeyFormat)", "class_method_signature": "KijiTableLayout.getHashSize(Object rowKeyFormat)", "testcase": false, "constructor": false}], "file": "kiji-schema/src/main/java/org/kiji/schema/layout/KijiTableLayout.java"}, "focal_method": {"identifier": "newLayout", "parameters": "(TableLayoutDesc layout)", "modifiers": "public static", "return": "KijiTableLayout", "body": "public static KijiTableLayout newLayout(TableLayoutDesc layout) throws InvalidLayoutException {\n    return new KijiTableLayout(layout, null);\n  }", "signature": "KijiTableLayout newLayout(TableLayoutDesc layout)", "full_signature": "public static KijiTableLayout newLayout(TableLayoutDesc layout)", "class_method_signature": "KijiTableLayout.newLayout(TableLayoutDesc layout)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 6682280, "url": "https://github.com/kijiproject/kiji-schema", "language": "Java", "is_fork": false, "fork_count": 44, "stargazer_count": 55, "size": 11689, "license": "licensed"}}