{"test_class": {"identifier": "TestZooKeeperUtils", "superclass": "extends ZooKeeperTest", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(TestZooKeeperUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(TestZooKeeperUtils.class)", "var_name": "LOG"}, {"original_string": "private volatile CuratorFramework mZKClient;", "modifier": "private volatile", "type": "CuratorFramework", "declarator": "mZKClient", "var_name": "mZKClient"}], "file": "kiji-schema/src/test/java/org/kiji/schema/zookeeper/TestZooKeeperUtils.java"}, "test_case": {"identifier": "testAtomicRecusiveDeleteWithConcurrentNodeAddition", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testAtomicRecusiveDeleteWithConcurrentNodeAddition() throws Exception {\n    final String path = \"/foo/bar/baz/faz/fooz\";\n    mZKClient.create().creatingParentsIfNeeded().forPath(path);\n    CuratorTransactionFinal tx =\n        ZooKeeperUtils.buildAtomicRecursiveDelete(mZKClient, mZKClient.inTransaction(), \"/foo\");\n    mZKClient.create().forPath(\"/foo/new-child\");\n\n    try {\n      tx.commit();\n    } catch (NotEmptyException nee) {\n      // expected\n    }\n    Assert.assertNotNull(mZKClient.checkExists().forPath(\"/foo\"));\n  }", "signature": "void testAtomicRecusiveDeleteWithConcurrentNodeAddition()", "full_signature": "@Test public void testAtomicRecusiveDeleteWithConcurrentNodeAddition()", "class_method_signature": "TestZooKeeperUtils.testAtomicRecusiveDeleteWithConcurrentNodeAddition()", "testcase": true, "constructor": false, "invocations": ["forPath", "creatingParentsIfNeeded", "create", "buildAtomicRecursiveDelete", "inTransaction", "forPath", "create", "commit", "assertNotNull", "forPath", "checkExists"]}, "focal_class": {"identifier": "ZooKeeperUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ZooKeeperUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ZooKeeperUtils.class)", "var_name": "LOG"}, {"original_string": "private static final ReferenceCountedCache<String, CuratorFramework> ZK_CLIENT_CACHE =\n      ReferenceCountedCache.create(\n          new Function<String, CuratorFramework>() {\n            /** {@inheritDoc}. */\n            @Override\n            public CuratorFramework apply(String zkEnsemble) {\n              return ZooKeeperUtils.createZooKeeperClient(zkEnsemble);\n            }\n          });", "modifier": "private static final", "type": "ReferenceCountedCache<String, CuratorFramework>", "declarator": "ZK_CLIENT_CACHE =\n      ReferenceCountedCache.create(\n          new Function<String, CuratorFramework>() {\n            /** {@inheritDoc}. */\n            @Override\n            public CuratorFramework apply(String zkEnsemble) {\n              return ZooKeeperUtils.createZooKeeperClient(zkEnsemble);\n            }\n          })", "var_name": "ZK_CLIENT_CACHE"}, {"original_string": "private static final File ROOT_ZOOKEEPER_PATH = new File(\"/kiji-schema\");", "modifier": "private static final", "type": "File", "declarator": "ROOT_ZOOKEEPER_PATH = new File(\"/kiji-schema\")", "var_name": "ROOT_ZOOKEEPER_PATH"}, {"original_string": "public static final File INSTANCES_ZOOKEEPER_PATH = new File(ROOT_ZOOKEEPER_PATH, \"instances\");", "modifier": "public static final", "type": "File", "declarator": "INSTANCES_ZOOKEEPER_PATH = new File(ROOT_ZOOKEEPER_PATH, \"instances\")", "var_name": "INSTANCES_ZOOKEEPER_PATH"}, {"original_string": "public static final String ZK_NODE_NAME_SEPARATOR = \"#\";", "modifier": "public static final", "type": "String", "declarator": "ZK_NODE_NAME_SEPARATOR = \"#\"", "var_name": "ZK_NODE_NAME_SEPARATOR"}], "methods": [{"identifier": "getInstanceDir", "parameters": "(KijiURI kijiURI)", "modifiers": "public static", "return": "File", "signature": "File getInstanceDir(KijiURI kijiURI)", "full_signature": "public static File getInstanceDir(KijiURI kijiURI)", "class_method_signature": "ZooKeeperUtils.getInstanceDir(KijiURI kijiURI)", "testcase": false, "constructor": false}, {"identifier": "getInstancePermissionsLock", "parameters": "(KijiURI instanceURI)", "modifiers": "public static", "return": "File", "signature": "File getInstancePermissionsLock(KijiURI instanceURI)", "full_signature": "public static File getInstancePermissionsLock(KijiURI instanceURI)", "class_method_signature": "ZooKeeperUtils.getInstancePermissionsLock(KijiURI instanceURI)", "testcase": false, "constructor": false}, {"identifier": "getInstanceTablesDir", "parameters": "(KijiURI kijiURI)", "modifiers": "public static", "return": "File", "signature": "File getInstanceTablesDir(KijiURI kijiURI)", "full_signature": "public static File getInstanceTablesDir(KijiURI kijiURI)", "class_method_signature": "ZooKeeperUtils.getInstanceTablesDir(KijiURI kijiURI)", "testcase": false, "constructor": false}, {"identifier": "getInstanceUsersDir", "parameters": "(KijiURI kijiURI)", "modifiers": "public static", "return": "File", "signature": "File getInstanceUsersDir(KijiURI kijiURI)", "full_signature": "public static File getInstanceUsersDir(KijiURI kijiURI)", "class_method_signature": "ZooKeeperUtils.getInstanceUsersDir(KijiURI kijiURI)", "testcase": false, "constructor": false}, {"identifier": "getTableDir", "parameters": "(KijiURI tableURI)", "modifiers": "public static", "return": "File", "signature": "File getTableDir(KijiURI tableURI)", "full_signature": "public static File getTableDir(KijiURI tableURI)", "class_method_signature": "ZooKeeperUtils.getTableDir(KijiURI tableURI)", "testcase": false, "constructor": false}, {"identifier": "getTableLayoutFile", "parameters": "(KijiURI tableURI)", "modifiers": "public static", "return": "File", "signature": "File getTableLayoutFile(KijiURI tableURI)", "full_signature": "public static File getTableLayoutFile(KijiURI tableURI)", "class_method_signature": "ZooKeeperUtils.getTableLayoutFile(KijiURI tableURI)", "testcase": false, "constructor": false}, {"identifier": "getTableUsersDir", "parameters": "(KijiURI tableURI)", "modifiers": "public static", "return": "File", "signature": "File getTableUsersDir(KijiURI tableURI)", "full_signature": "public static File getTableUsersDir(KijiURI tableURI)", "class_method_signature": "ZooKeeperUtils.getTableUsersDir(KijiURI tableURI)", "testcase": false, "constructor": false}, {"identifier": "getTableLayoutUpdateLock", "parameters": "(KijiURI tableURI)", "modifiers": "public static", "return": "File", "signature": "File getTableLayoutUpdateLock(KijiURI tableURI)", "full_signature": "public static File getTableLayoutUpdateLock(KijiURI tableURI)", "class_method_signature": "ZooKeeperUtils.getTableLayoutUpdateLock(KijiURI tableURI)", "testcase": false, "constructor": false}, {"identifier": "getSchemaTableLock", "parameters": "(KijiURI instanceURI)", "modifiers": "public static", "return": "File", "signature": "File getSchemaTableLock(KijiURI instanceURI)", "full_signature": "public static File getSchemaTableLock(KijiURI instanceURI)", "class_method_signature": "ZooKeeperUtils.getSchemaTableLock(KijiURI instanceURI)", "testcase": false, "constructor": false}, {"identifier": "setTableLayout", "parameters": "(\n      final CuratorFramework zkClient,\n      final KijiURI tableURI,\n      final String layoutID)", "modifiers": "public static", "return": "void", "signature": "void setTableLayout(\n      final CuratorFramework zkClient,\n      final KijiURI tableURI,\n      final String layoutID)", "full_signature": "public static void setTableLayout(\n      final CuratorFramework zkClient,\n      final KijiURI tableURI,\n      final String layoutID)", "class_method_signature": "ZooKeeperUtils.setTableLayout(\n      final CuratorFramework zkClient,\n      final KijiURI tableURI,\n      final String layoutID)", "testcase": false, "constructor": false}, {"identifier": "newTableLayoutLock", "parameters": "(\n      final CuratorFramework zkClient,\n      final KijiURI tableURI\n  )", "modifiers": "public static", "return": "ZooKeeperLock", "signature": "ZooKeeperLock newTableLayoutLock(\n      final CuratorFramework zkClient,\n      final KijiURI tableURI\n  )", "full_signature": "public static ZooKeeperLock newTableLayoutLock(\n      final CuratorFramework zkClient,\n      final KijiURI tableURI\n  )", "class_method_signature": "ZooKeeperUtils.newTableLayoutLock(\n      final CuratorFramework zkClient,\n      final KijiURI tableURI\n  )", "testcase": false, "constructor": false}, {"identifier": "newTableUsersTracker", "parameters": "(\n      final CuratorFramework zkClient,\n      final KijiURI tableURI\n  )", "modifiers": "public static", "return": "UsersTracker", "signature": "UsersTracker newTableUsersTracker(\n      final CuratorFramework zkClient,\n      final KijiURI tableURI\n  )", "full_signature": "public static UsersTracker newTableUsersTracker(\n      final CuratorFramework zkClient,\n      final KijiURI tableURI\n  )", "class_method_signature": "ZooKeeperUtils.newTableUsersTracker(\n      final CuratorFramework zkClient,\n      final KijiURI tableURI\n  )", "testcase": false, "constructor": false}, {"identifier": "newInstanceUsersTracker", "parameters": "(\n      final CuratorFramework zkClient,\n      final KijiURI instanceURI\n  )", "modifiers": "public static", "return": "UsersTracker", "signature": "UsersTracker newInstanceUsersTracker(\n      final CuratorFramework zkClient,\n      final KijiURI instanceURI\n  )", "full_signature": "public static UsersTracker newInstanceUsersTracker(\n      final CuratorFramework zkClient,\n      final KijiURI instanceURI\n  )", "class_method_signature": "ZooKeeperUtils.newInstanceUsersTracker(\n      final CuratorFramework zkClient,\n      final KijiURI instanceURI\n  )", "testcase": false, "constructor": false}, {"identifier": "atomicRecursiveDelete", "parameters": "(\n      final CuratorFramework zkClient,\n      final String path\n  )", "modifiers": "public static", "return": "boolean", "signature": "boolean atomicRecursiveDelete(\n      final CuratorFramework zkClient,\n      final String path\n  )", "full_signature": "public static boolean atomicRecursiveDelete(\n      final CuratorFramework zkClient,\n      final String path\n  )", "class_method_signature": "ZooKeeperUtils.atomicRecursiveDelete(\n      final CuratorFramework zkClient,\n      final String path\n  )", "testcase": false, "constructor": false}, {"identifier": "buildAtomicRecursiveDelete", "parameters": "(\n      final CuratorFramework zkClient,\n      final CuratorTransaction tx,\n      final String path\n  )", "modifiers": "static", "return": "CuratorTransactionFinal", "signature": "CuratorTransactionFinal buildAtomicRecursiveDelete(\n      final CuratorFramework zkClient,\n      final CuratorTransaction tx,\n      final String path\n  )", "full_signature": "static CuratorTransactionFinal buildAtomicRecursiveDelete(\n      final CuratorFramework zkClient,\n      final CuratorTransaction tx,\n      final String path\n  )", "class_method_signature": "ZooKeeperUtils.buildAtomicRecursiveDelete(\n      final CuratorFramework zkClient,\n      final CuratorTransaction tx,\n      final String path\n  )", "testcase": false, "constructor": false}, {"identifier": "makeZKNodeName", "parameters": "(String userId, String value)", "modifiers": "public static", "return": "String", "signature": "String makeZKNodeName(String userId, String value)", "full_signature": "public static String makeZKNodeName(String userId, String value)", "class_method_signature": "ZooKeeperUtils.makeZKNodeName(String userId, String value)", "testcase": false, "constructor": false}, {"identifier": "wrapAndRethrow", "parameters": "(Exception e)", "modifiers": "public static", "return": "void", "signature": "void wrapAndRethrow(Exception e)", "full_signature": "public static void wrapAndRethrow(Exception e)", "class_method_signature": "ZooKeeperUtils.wrapAndRethrow(Exception e)", "testcase": false, "constructor": false}, {"identifier": "getZooKeeperClient", "parameters": "(final String zkEnsemble)", "modifiers": "public static", "return": "CuratorFramework", "signature": "CuratorFramework getZooKeeperClient(final String zkEnsemble)", "full_signature": "public static CuratorFramework getZooKeeperClient(final String zkEnsemble)", "class_method_signature": "ZooKeeperUtils.getZooKeeperClient(final String zkEnsemble)", "testcase": false, "constructor": false}, {"identifier": "getZooKeeperClient", "parameters": "(KijiURI clusterURI)", "modifiers": "public static", "return": "CuratorFramework", "signature": "CuratorFramework getZooKeeperClient(KijiURI clusterURI)", "full_signature": "public static CuratorFramework getZooKeeperClient(KijiURI clusterURI)", "class_method_signature": "ZooKeeperUtils.getZooKeeperClient(KijiURI clusterURI)", "testcase": false, "constructor": false}, {"identifier": "createZooKeeperClient", "parameters": "(final String zkEnsemble)", "modifiers": "public static", "return": "CuratorFramework", "signature": "CuratorFramework createZooKeeperClient(final String zkEnsemble)", "full_signature": "public static CuratorFramework createZooKeeperClient(final String zkEnsemble)", "class_method_signature": "ZooKeeperUtils.createZooKeeperClient(final String zkEnsemble)", "testcase": false, "constructor": false}, {"identifier": "closeAllZooKeeperConnections", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void closeAllZooKeeperConnections()", "full_signature": "public static void closeAllZooKeeperConnections()", "class_method_signature": "ZooKeeperUtils.closeAllZooKeeperConnections()", "testcase": false, "constructor": false}, {"identifier": "ZooKeeperUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " ZooKeeperUtils()", "full_signature": "private  ZooKeeperUtils()", "class_method_signature": "ZooKeeperUtils.ZooKeeperUtils()", "testcase": false, "constructor": true}], "file": "kiji-schema/src/main/java/org/kiji/schema/zookeeper/ZooKeeperUtils.java"}, "focal_method": {"identifier": "buildAtomicRecursiveDelete", "parameters": "(\n      final CuratorFramework zkClient,\n      final CuratorTransaction tx,\n      final String path\n  )", "modifiers": "static", "return": "CuratorTransactionFinal", "body": "static CuratorTransactionFinal buildAtomicRecursiveDelete(\n      final CuratorFramework zkClient,\n      final CuratorTransaction tx,\n      final String path\n  ) throws Exception {\n    final List<String> children = zkClient.getChildren().forPath(path);\n\n    for (String child : children) {\n      buildAtomicRecursiveDelete(zkClient, tx, path + \"/\" + child);\n    }\n    return tx.delete().forPath(path).and();\n  }", "signature": "CuratorTransactionFinal buildAtomicRecursiveDelete(\n      final CuratorFramework zkClient,\n      final CuratorTransaction tx,\n      final String path\n  )", "full_signature": "static CuratorTransactionFinal buildAtomicRecursiveDelete(\n      final CuratorFramework zkClient,\n      final CuratorTransaction tx,\n      final String path\n  )", "class_method_signature": "ZooKeeperUtils.buildAtomicRecursiveDelete(\n      final CuratorFramework zkClient,\n      final CuratorTransaction tx,\n      final String path\n  )", "testcase": false, "constructor": false, "invocations": ["forPath", "getChildren", "buildAtomicRecursiveDelete", "and", "forPath", "delete"]}, "repository": {"repo_id": 6682280, "url": "https://github.com/kijiproject/kiji-schema", "language": "Java", "is_fork": false, "fork_count": 44, "stargazer_count": 55, "size": 11689, "license": "licensed"}}