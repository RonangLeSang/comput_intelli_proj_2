{"test_class": {"identifier": "TestVersionInfo", "superclass": "", "interfaces": "", "fields": [], "file": "kiji-schema/src/test/java/org/kiji/schema/util/TestVersionInfo.java"}, "test_case": {"identifier": "testValidateVersion", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testValidateVersion() throws Exception {\n    final KijiSystemTable systemTable = createMock(KijiSystemTable.class);\n    expect(systemTable.getDataVersion()).andReturn(VersionInfo.getClientDataVersion()).anyTimes();\n\n    final Kiji kiji = createMock(Kiji.class);\n    expect(kiji.getSystemTable()).andReturn(systemTable).anyTimes();\n\n    replay(systemTable);\n    replay(kiji);\n\n    // This should validate, since we set the cluster data version to match the client version.\n    VersionInfo.validateVersion(kiji);\n\n    verify(systemTable);\n    verify(kiji);\n  }", "signature": "void testValidateVersion()", "full_signature": "@Test public void testValidateVersion()", "class_method_signature": "TestVersionInfo.testValidateVersion()", "testcase": true, "constructor": false, "invocations": ["createMock", "anyTimes", "andReturn", "expect", "getDataVersion", "getClientDataVersion", "createMock", "anyTimes", "andReturn", "expect", "getSystemTable", "replay", "replay", "validateVersion", "verify", "verify"]}, "focal_class": {"identifier": "VersionInfo", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String DEFAULT_DEVELOPMENT_VERSION = \"development\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_DEVELOPMENT_VERSION = \"development\"", "var_name": "DEFAULT_DEVELOPMENT_VERSION"}, {"original_string": "private static final String KIJI_SCHEMA_PROPERTIES_RESOURCE =\n      \"org/kiji/schema/kiji-schema.properties\";", "modifier": "private static final", "type": "String", "declarator": "KIJI_SCHEMA_PROPERTIES_RESOURCE =\n      \"org/kiji/schema/kiji-schema.properties\"", "var_name": "KIJI_SCHEMA_PROPERTIES_RESOURCE"}, {"original_string": "private static final String KIJI_SCHEMA_VERSION_PROP_NAME = \"kiji-schema-version\";", "modifier": "private static final", "type": "String", "declarator": "KIJI_SCHEMA_VERSION_PROP_NAME = \"kiji-schema-version\"", "var_name": "KIJI_SCHEMA_VERSION_PROP_NAME"}], "methods": [{"identifier": "VersionInfo", "parameters": "()", "modifiers": "private", "return": "", "signature": " VersionInfo()", "full_signature": "private  VersionInfo()", "class_method_signature": "VersionInfo.VersionInfo()", "testcase": false, "constructor": true}, {"identifier": "loadKijiSchemaProperties", "parameters": "()", "modifiers": "private static", "return": "Properties", "signature": "Properties loadKijiSchemaProperties()", "full_signature": "private static Properties loadKijiSchemaProperties()", "class_method_signature": "VersionInfo.loadKijiSchemaProperties()", "testcase": false, "constructor": false}, {"identifier": "getClusterDataVersion", "parameters": "(KijiSystemTable systemTable)", "modifiers": "private static", "return": "ProtocolVersion", "signature": "ProtocolVersion getClusterDataVersion(KijiSystemTable systemTable)", "full_signature": "private static ProtocolVersion getClusterDataVersion(KijiSystemTable systemTable)", "class_method_signature": "VersionInfo.getClusterDataVersion(KijiSystemTable systemTable)", "testcase": false, "constructor": false}, {"identifier": "isKijiVersionCompatible", "parameters": "(KijiSystemTable systemTable)", "modifiers": "private static", "return": "boolean", "signature": "boolean isKijiVersionCompatible(KijiSystemTable systemTable)", "full_signature": "private static boolean isKijiVersionCompatible(KijiSystemTable systemTable)", "class_method_signature": "VersionInfo.isKijiVersionCompatible(KijiSystemTable systemTable)", "testcase": false, "constructor": false}, {"identifier": "getSoftwareVersion", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getSoftwareVersion()", "full_signature": "public static String getSoftwareVersion()", "class_method_signature": "VersionInfo.getSoftwareVersion()", "testcase": false, "constructor": false}, {"identifier": "getClientDataVersion", "parameters": "()", "modifiers": "public static", "return": "ProtocolVersion", "signature": "ProtocolVersion getClientDataVersion()", "full_signature": "public static ProtocolVersion getClientDataVersion()", "class_method_signature": "VersionInfo.getClientDataVersion()", "testcase": false, "constructor": false}, {"identifier": "getClusterDataVersion", "parameters": "(Kiji kiji)", "modifiers": "public static", "return": "ProtocolVersion", "signature": "ProtocolVersion getClusterDataVersion(Kiji kiji)", "full_signature": "public static ProtocolVersion getClusterDataVersion(Kiji kiji)", "class_method_signature": "VersionInfo.getClusterDataVersion(Kiji kiji)", "testcase": false, "constructor": false}, {"identifier": "validateVersion", "parameters": "(Kiji kiji)", "modifiers": "public static", "return": "void", "signature": "void validateVersion(Kiji kiji)", "full_signature": "public static void validateVersion(Kiji kiji)", "class_method_signature": "VersionInfo.validateVersion(Kiji kiji)", "testcase": false, "constructor": false}, {"identifier": "validateVersion", "parameters": "(KijiSystemTable systemTable)", "modifiers": "public static", "return": "void", "signature": "void validateVersion(KijiSystemTable systemTable)", "full_signature": "public static void validateVersion(KijiSystemTable systemTable)", "class_method_signature": "VersionInfo.validateVersion(KijiSystemTable systemTable)", "testcase": false, "constructor": false}, {"identifier": "isKijiVersionCompatible", "parameters": "(Kiji kiji)", "modifiers": "public static", "return": "boolean", "signature": "boolean isKijiVersionCompatible(Kiji kiji)", "full_signature": "public static boolean isKijiVersionCompatible(Kiji kiji)", "class_method_signature": "VersionInfo.isKijiVersionCompatible(Kiji kiji)", "testcase": false, "constructor": false}, {"identifier": "areInstanceVersionsCompatible", "parameters": "(\n      ProtocolVersion clientVersion, ProtocolVersion clusterVersion)", "modifiers": "static", "return": "boolean", "signature": "boolean areInstanceVersionsCompatible(\n      ProtocolVersion clientVersion, ProtocolVersion clusterVersion)", "full_signature": "static boolean areInstanceVersionsCompatible(\n      ProtocolVersion clientVersion, ProtocolVersion clusterVersion)", "class_method_signature": "VersionInfo.areInstanceVersionsCompatible(\n      ProtocolVersion clientVersion, ProtocolVersion clusterVersion)", "testcase": false, "constructor": false}], "file": "kiji-schema/src/main/java/org/kiji/schema/util/VersionInfo.java"}, "focal_method": {"identifier": "validateVersion", "parameters": "(Kiji kiji)", "modifiers": "public static", "return": "void", "body": "public static void validateVersion(Kiji kiji) throws IOException {\n    validateVersion(kiji.getSystemTable());\n  }", "signature": "void validateVersion(Kiji kiji)", "full_signature": "public static void validateVersion(Kiji kiji)", "class_method_signature": "VersionInfo.validateVersion(Kiji kiji)", "testcase": false, "constructor": false, "invocations": ["validateVersion", "getSystemTable"]}, "repository": {"repo_id": 6682280, "url": "https://github.com/kijiproject/kiji-schema", "language": "Java", "is_fork": false, "fork_count": 44, "stargazer_count": 55, "size": 11689, "license": "licensed"}}