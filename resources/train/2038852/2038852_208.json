{"test_class": {"identifier": "DeleteErrorFileListenerTest", "superclass": "extends STMTestBase", "interfaces": "", "fields": [{"original_string": "private Integer LOAD_BALANCER_ID;", "modifier": "private", "type": "Integer", "declarator": "LOAD_BALANCER_ID", "var_name": "LOAD_BALANCER_ID"}, {"original_string": "private Integer ACCOUNT_ID;", "modifier": "private", "type": "Integer", "declarator": "ACCOUNT_ID", "var_name": "ACCOUNT_ID"}, {"original_string": "@Mock\n    private ObjectMessage objectMessage;", "modifier": "@Mock\n    private", "type": "ObjectMessage", "declarator": "objectMessage", "var_name": "objectMessage"}, {"original_string": "@Mock\n    private MessageDataContainer messageDataContainer;", "modifier": "@Mock\n    private", "type": "MessageDataContainer", "declarator": "messageDataContainer", "var_name": "messageDataContainer"}, {"original_string": "@Mock\n    private LoadBalancerService loadBalancerService;", "modifier": "@Mock\n    private", "type": "LoadBalancerService", "declarator": "loadBalancerService", "var_name": "loadBalancerService"}, {"original_string": "@Mock\n    private NotificationService notificationService;", "modifier": "@Mock\n    private", "type": "NotificationService", "declarator": "notificationService", "var_name": "notificationService"}, {"original_string": "@Mock\n    private ReverseProxyLoadBalancerStmService reverseProxyLoadBalancerStmService;", "modifier": "@Mock\n    private", "type": "ReverseProxyLoadBalancerStmService", "declarator": "reverseProxyLoadBalancerStmService", "var_name": "reverseProxyLoadBalancerStmService"}, {"original_string": "@Mock\n    private LoadBalancerStatusHistoryService loadBalancerStatusHistoryService;", "modifier": "@Mock\n    private", "type": "LoadBalancerStatusHistoryService", "declarator": "loadBalancerStatusHistoryService", "var_name": "loadBalancerStatusHistoryService"}, {"original_string": "@Mock\n    private RestApiConfiguration config;", "modifier": "@Mock\n    private", "type": "RestApiConfiguration", "declarator": "config", "var_name": "config"}, {"original_string": "private DeleteErrorFileListener deleteErrorFileListener;", "modifier": "private", "type": "DeleteErrorFileListener", "declarator": "deleteErrorFileListener", "var_name": "deleteErrorFileListener"}], "file": "api/common-api/src/test/java/org/openstack/atlas/api/async/DeleteErrorFileListenerTest.java"}, "test_case": {"identifier": "testUpdateInvalidLoadBalancerInput", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUpdateInvalidLoadBalancerInput() throws Exception {\n        when(objectMessage.getObject()).thenReturn(messageDataContainer);\n        when(messageDataContainer.getAccountId()).thenReturn(null);\n        when(messageDataContainer.getLoadBalancerId()).thenReturn(null);\n        when(config.getString(Matchers.<ConfigurationKey>any())).thenReturn(\"REST\");\n\n        deleteErrorFileListener.doOnMessage(objectMessage);\n\n        verify(notificationService, never()).saveAlert(eq(ACCOUNT_ID), eq(LOAD_BALANCER_ID), isA(EntityNotFoundException.class), eq(AlertType.DATABASE_FAILURE.name()), anyString());\n        verify(reverseProxyLoadBalancerStmService, never()).deleteErrorFile(lb, null);\n        verify(loadBalancerService, never()).setStatus(lb, LoadBalancerStatus.ACTIVE);\n        verify(loadBalancerService, never()).setStatus(lb, LoadBalancerStatus.ERROR);\n    }", "signature": "void testUpdateInvalidLoadBalancerInput()", "full_signature": "@Test public void testUpdateInvalidLoadBalancerInput()", "class_method_signature": "DeleteErrorFileListenerTest.testUpdateInvalidLoadBalancerInput()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getObject", "thenReturn", "when", "getAccountId", "thenReturn", "when", "getLoadBalancerId", "thenReturn", "when", "getString", "any", "doOnMessage", "saveAlert", "verify", "never", "eq", "eq", "isA", "eq", "name", "anyString", "deleteErrorFile", "verify", "never", "setStatus", "verify", "never", "setStatus", "verify", "never"]}, "focal_class": {"identifier": "DeleteErrorFileListener", "superclass": "extends BaseListener", "interfaces": "", "fields": [{"original_string": "private final Log LOG = LogFactory.getLog(DeleteErrorFileListener.class);", "modifier": "private final", "type": "Log", "declarator": "LOG = LogFactory.getLog(DeleteErrorFileListener.class)", "var_name": "LOG"}], "methods": [{"identifier": "doOnMessage", "parameters": "(final Message message)", "modifiers": "public", "return": "void", "signature": "void doOnMessage(final Message message)", "full_signature": "public void doOnMessage(final Message message)", "class_method_signature": "DeleteErrorFileListener.doOnMessage(final Message message)", "testcase": false, "constructor": false}], "file": "api/common-api/src/main/java/org/openstack/atlas/api/async/DeleteErrorFileListener.java"}, "focal_method": {"identifier": "doOnMessage", "parameters": "(final Message message)", "modifiers": "public", "return": "void", "body": "public void doOnMessage(final Message message) throws Exception {\n        String msg = String.format(\"Inside %s.doMessage\", this.getClass().getName());\n        LOG.debug(\"Entering \" + getClass());\n        LOG.debug(message);\n        MessageDataContainer data = getDataContainerFromMessage(message);\n\n        LoadBalancer dbLoadBalancer = null;\n\n        if (data.getAccountId() != null && data.getLoadBalancerId() != null) {\n            try {\n                dbLoadBalancer = loadBalancerService.getWithUserPages(data.getLoadBalancerId(), data.getAccountId());\n            } catch (EntityNotFoundException enfe) {\n                String alertDescription = String.format(\"Load balancer '%d' not found in database.\", data.getLoadBalancerId());\n                LOG.error(alertDescription, enfe);\n                notificationService.saveAlert(data.getAccountId(), data.getLoadBalancerId(), enfe, DATABASE_FAILURE.name(), alertDescription);\n                return;\n            }\n\n            LOG.debug(\"About to remove the error file from zeus... \");\n\n            try {\n                if (isRestAdapter()) {\n                    LOG.debug(String.format(\"Deleting error file for %s in STM...\", dbLoadBalancer.getId()));\n                    reverseProxyLoadBalancerStmService.deleteErrorFile(dbLoadBalancer, loadBalancerService.getUserPages(data.getLoadBalancerId(), data.getAccountId()));\n                    LOG.debug(String.format(\"Successfully deleted error file for %s in Zeus...\", dbLoadBalancer.getId()));\n                } else {\n                    LOG.debug(String.format(\"Deleting error file for %s in ZXTM...\", dbLoadBalancer.getId()));\n                    reverseProxyLoadBalancerService.deleteErrorFile(dbLoadBalancer);\n                    LOG.debug(String.format(\"Successfully deleted error file for %s in Zeus...\", dbLoadBalancer.getId()));\n                }\n            } catch (Exception e) {\n                loadBalancerService.setStatus(dbLoadBalancer, LoadBalancerStatus.ERROR);\n                String tmpMsg = String.format(\"Error setting Errorfile for %d_%d\", data.getAccountId(), data.getLoadBalancerId());\n                LOG.error(tmpMsg, e);\n                notificationService.saveAlert(data.getAccountId(), data.getLoadBalancerId(), e, AlertType.ZEUS_FAILURE.name(), msg);\n                return;\n            }\n\n            //Set status record\n            loadBalancerService.setStatus(dbLoadBalancer, LoadBalancerStatus.ACTIVE);\n            LOG.debug(\"Successfully removed the error file from zeus... \");\n        } else {\n            //TODO I feel like there should be something else here -- this whole listener is a bit sparse\n            LOG.error(\"Error LoadbalancerId or accountId was null in call to DeleteErrorFileListener\");\n        }\n    }", "signature": "void doOnMessage(final Message message)", "full_signature": "public void doOnMessage(final Message message)", "class_method_signature": "DeleteErrorFileListener.doOnMessage(final Message message)", "testcase": false, "constructor": false, "invocations": ["format", "getName", "getClass", "debug", "getClass", "debug", "getDataContainerFromMessage", "getAccountId", "getLoadBalancerId", "getWithUserPages", "getLoadBalancerId", "getAccountId", "format", "getLoadBalancerId", "error", "saveAlert", "getAccountId", "getLoadBalancerId", "name", "debug", "isRestAdapter", "debug", "format", "getId", "deleteErrorFile", "getUserPages", "getLoadBalancerId", "getAccountId", "debug", "format", "getId", "debug", "format", "getId", "deleteErrorFile", "debug", "format", "getId", "setStatus", "format", "getAccountId", "getLoadBalancerId", "error", "saveAlert", "getAccountId", "getLoadBalancerId", "name", "setStatus", "debug", "error"]}, "repository": {"repo_id": 2038852, "url": "https://github.com/rackerlabs/atlas-lb", "language": "Java", "is_fork": false, "fork_count": 26, "stargazer_count": 21, "size": 126552, "license": "licensed"}}