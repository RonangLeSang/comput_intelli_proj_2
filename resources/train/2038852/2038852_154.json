{"test_class": {"identifier": "AccessListValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AccessListValidator alValidator;", "modifier": "private", "type": "AccessListValidator", "declarator": "alValidator", "var_name": "alValidator"}, {"original_string": "private AccessList alTest;", "modifier": "private", "type": "AccessList", "declarator": "alTest", "var_name": "alTest"}, {"original_string": "private AccessList alTest2;", "modifier": "private", "type": "AccessList", "declarator": "alTest2", "var_name": "alTest2"}, {"original_string": "private NetworkItem nwTest;", "modifier": "private", "type": "NetworkItem", "declarator": "nwTest", "var_name": "nwTest"}, {"original_string": "private NetworkItem nwTest2;", "modifier": "private", "type": "NetworkItem", "declarator": "nwTest2", "var_name": "nwTest2"}], "file": "api/common-api/src/test/java/org/openstack/atlas/api/validation/validators/AccessListValidatorTest.java"}, "test_case": {"identifier": "shouldAcceptMultipleNetworkItemsWhenTheyAreValid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldAcceptMultipleNetworkItemsWhenTheyAreValid() {\n        AccessList al = new AccessList();\n        al.getNetworkItems().add(initNetworkItem(\"192.168.3.51/32\", \"DENY\", null));\n        //al.getNetworkItems().add(initNetworkItem(\"ffff::/120\", \"ALLOW\", null));\n        al.getNetworkItems().add(initNetworkItem(\"127.0.0.1/8\", \"ALLOW\", null));\n        ValidatorResult result = alValidator.validate(al, POST);\n        assertTrue(resultMessage(result, POST), result.passedValidation());\n\n        result = alValidator.validate(al, PUT);\n        assertTrue(resultMessage(result, PUT), result.passedValidation());\n\n\n    }", "signature": "void shouldAcceptMultipleNetworkItemsWhenTheyAreValid()", "full_signature": "@Test public void shouldAcceptMultipleNetworkItemsWhenTheyAreValid()", "class_method_signature": "AccessListValidatorTest.shouldAcceptMultipleNetworkItemsWhenTheyAreValid()", "testcase": true, "constructor": false, "invocations": ["add", "getNetworkItems", "initNetworkItem", "add", "getNetworkItems", "initNetworkItem", "validate", "assertTrue", "resultMessage", "passedValidation", "validate", "assertTrue", "resultMessage", "passedValidation"]}, "focal_class": {"identifier": "AccessListValidator", "superclass": "", "interfaces": "implements ResourceValidator<AccessList>", "fields": [{"original_string": "private final Validator<AccessList> validator;", "modifier": "private final", "type": "Validator<AccessList>", "declarator": "validator", "var_name": "validator"}], "methods": [{"identifier": "AccessListValidator", "parameters": "()", "modifiers": "public", "return": "", "signature": " AccessListValidator()", "full_signature": "public  AccessListValidator()", "class_method_signature": "AccessListValidator.AccessListValidator()", "testcase": false, "constructor": true}, {"identifier": "validate", "parameters": "(AccessList accessList, Object httpRequestType)", "modifiers": "@Override public", "return": "ValidatorResult", "signature": "ValidatorResult validate(AccessList accessList, Object httpRequestType)", "full_signature": "@Override public ValidatorResult validate(AccessList accessList, Object httpRequestType)", "class_method_signature": "AccessListValidator.validate(AccessList accessList, Object httpRequestType)", "testcase": false, "constructor": false}, {"identifier": "getValidator", "parameters": "()", "modifiers": "@Override public", "return": "Validator<AccessList>", "signature": "Validator<AccessList> getValidator()", "full_signature": "@Override public Validator<AccessList> getValidator()", "class_method_signature": "AccessListValidator.getValidator()", "testcase": false, "constructor": false}], "file": "api/common-api/src/main/java/org/openstack/atlas/api/validation/validators/AccessListValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(AccessList accessList, Object httpRequestType)", "modifiers": "@Override public", "return": "ValidatorResult", "body": "@Override\n    public ValidatorResult validate(AccessList accessList, Object httpRequestType) {\n        ValidatorResult result = validator.validate(accessList, httpRequestType);\n        return ValidatorUtilities.removeEmptyMessages(result);\n    }", "signature": "ValidatorResult validate(AccessList accessList, Object httpRequestType)", "full_signature": "@Override public ValidatorResult validate(AccessList accessList, Object httpRequestType)", "class_method_signature": "AccessListValidator.validate(AccessList accessList, Object httpRequestType)", "testcase": false, "constructor": false, "invocations": ["validate", "removeEmptyMessages"]}, "repository": {"repo_id": 2038852, "url": "https://github.com/rackerlabs/atlas-lb", "language": "Java", "is_fork": false, "fork_count": 26, "stargazer_count": 21, "size": 126552, "license": "licensed"}}