{"test_class": {"identifier": "HttpHeadersToolsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Set<String> emptySet;", "modifier": "private", "type": "Set<String>", "declarator": "emptySet", "var_name": "emptySet"}, {"original_string": "private Set<String> oneItem;", "modifier": "private", "type": "Set<String>", "declarator": "oneItem", "var_name": "oneItem"}, {"original_string": "private Set<String> threeItems;", "modifier": "private", "type": "Set<String>", "declarator": "threeItems", "var_name": "threeItems"}, {"original_string": "private HttpServletRequest noAuthReq;", "modifier": "private", "type": "HttpServletRequest", "declarator": "noAuthReq", "var_name": "noAuthReq"}, {"original_string": "private HttpServletRequest AuthReq;", "modifier": "private", "type": "HttpServletRequest", "declarator": "AuthReq", "var_name": "AuthReq"}, {"original_string": "private HttpServletRequest badBase64;", "modifier": "private", "type": "HttpServletRequest", "declarator": "badBase64", "var_name": "badBase64"}, {"original_string": "private HttpServletRequest badUserPassPair;", "modifier": "private", "type": "HttpServletRequest", "declarator": "badUserPassPair", "var_name": "badUserPassPair"}, {"original_string": "private HttpServletRequest otherAuthReq;", "modifier": "private", "type": "HttpServletRequest", "declarator": "otherAuthReq", "var_name": "otherAuthReq"}, {"original_string": "private HttpServletResponse resp;", "modifier": "private", "type": "HttpServletResponse", "declarator": "resp", "var_name": "resp"}, {"original_string": "private HttpHeadersTools httpHeadersTools;", "modifier": "private", "type": "HttpHeadersTools", "declarator": "httpHeadersTools", "var_name": "httpHeadersTools"}, {"original_string": "private static final String digest = \"Digest username=\\\"x\\\",realm=\\\"x\\\",\"\n            + \"nonce=\\\"blah\\\",uri=\\\"/index.html\\\",qop=auth,nc=00000001,cnonce\"\n            + \"=\\\"X\\\",response=\\\"X\\\",opaque=\\\"x\\\"\";", "modifier": "private static final", "type": "String", "declarator": "digest = \"Digest username=\\\"x\\\",realm=\\\"x\\\",\"\n            + \"nonce=\\\"blah\\\",uri=\\\"/index.html\\\",qop=auth,nc=00000001,cnonce\"\n            + \"=\\\"X\\\",response=\\\"X\\\",opaque=\\\"x\\\"\"", "var_name": "digest"}], "file": "api/mgmt-api/src/test/java/org/openstack/atlas/api/mgmt/filters/helpers/HttpHeadersToolsTest.java"}, "test_case": {"identifier": "testShouldMapCommaListWithOneItem", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testShouldMapCommaListWithOneItem() {\n        String strList = HttpHeadersTools.set2commastr(oneItem);\n        assertEquals(\"AAA\", strList);\n    }", "signature": "void testShouldMapCommaListWithOneItem()", "full_signature": "@Test public void testShouldMapCommaListWithOneItem()", "class_method_signature": "HttpHeadersToolsTest.testShouldMapCommaListWithOneItem()", "testcase": true, "constructor": false, "invocations": ["set2commastr", "assertEquals"]}, "focal_class": {"identifier": "HttpHeadersTools", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HttpServletRequest req;", "modifier": "private", "type": "HttpServletRequest", "declarator": "req", "var_name": "req"}, {"original_string": "private HttpServletResponse res;", "modifier": "private", "type": "HttpServletResponse", "declarator": "res", "var_name": "res"}, {"original_string": "private String authHeader;", "modifier": "private", "type": "String", "declarator": "authHeader", "var_name": "authHeader"}, {"original_string": "private static final Pattern basicRe = Pattern.compile(\"BASIC\\\\s+(\\\\S+)\", Pattern.CASE_INSENSITIVE);", "modifier": "private static final", "type": "Pattern", "declarator": "basicRe = Pattern.compile(\"BASIC\\\\s+(\\\\S+)\", Pattern.CASE_INSENSITIVE)", "var_name": "basicRe"}, {"original_string": "private static final Pattern userRe = Pattern.compile(\"(\\\\S+):(\\\\S+)\");", "modifier": "private static final", "type": "Pattern", "declarator": "userRe = Pattern.compile(\"(\\\\S+):(\\\\S+)\")", "var_name": "userRe"}, {"original_string": "private static final String AUTHORIZATION = \"Authorization\";", "modifier": "private static final", "type": "String", "declarator": "AUTHORIZATION = \"Authorization\"", "var_name": "AUTHORIZATION"}], "methods": [{"identifier": "HttpHeadersTools", "parameters": "()", "modifiers": "public", "return": "", "signature": " HttpHeadersTools()", "full_signature": "public  HttpHeadersTools()", "class_method_signature": "HttpHeadersTools.HttpHeadersTools()", "testcase": false, "constructor": true}, {"identifier": "HttpHeadersTools", "parameters": "(HttpServletRequest req, HttpServletResponse res)", "modifiers": "public", "return": "", "signature": " HttpHeadersTools(HttpServletRequest req, HttpServletResponse res)", "full_signature": "public  HttpHeadersTools(HttpServletRequest req, HttpServletResponse res)", "class_method_signature": "HttpHeadersTools.HttpHeadersTools(HttpServletRequest req, HttpServletResponse res)", "testcase": false, "constructor": true}, {"identifier": "isValidAuth", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isValidAuth()", "full_signature": "public boolean isValidAuth()", "class_method_signature": "HttpHeadersTools.isValidAuth()", "testcase": false, "constructor": false}, {"identifier": "isBasicAuth", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isBasicAuth()", "full_signature": "public boolean isBasicAuth()", "class_method_signature": "HttpHeadersTools.isBasicAuth()", "testcase": false, "constructor": false}, {"identifier": "getReq", "parameters": "()", "modifiers": "public", "return": "HttpServletRequest", "signature": "HttpServletRequest getReq()", "full_signature": "public HttpServletRequest getReq()", "class_method_signature": "HttpHeadersTools.getReq()", "testcase": false, "constructor": false}, {"identifier": "setReq", "parameters": "(HttpServletRequest req)", "modifiers": "public", "return": "void", "signature": "void setReq(HttpServletRequest req)", "full_signature": "public void setReq(HttpServletRequest req)", "class_method_signature": "HttpHeadersTools.setReq(HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "getRes", "parameters": "()", "modifiers": "public", "return": "HttpServletResponse", "signature": "HttpServletResponse getRes()", "full_signature": "public HttpServletResponse getRes()", "class_method_signature": "HttpHeadersTools.getRes()", "testcase": false, "constructor": false}, {"identifier": "setRes", "parameters": "(HttpServletResponse res)", "modifiers": "public", "return": "void", "signature": "void setRes(HttpServletResponse res)", "full_signature": "public void setRes(HttpServletResponse res)", "class_method_signature": "HttpHeadersTools.setRes(HttpServletResponse res)", "testcase": false, "constructor": false}, {"identifier": "getBasicString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getBasicString()", "full_signature": "public String getBasicString()", "class_method_signature": "HttpHeadersTools.getBasicString()", "testcase": false, "constructor": false}, {"identifier": "getBasicUser", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getBasicUser()", "full_signature": "public String getBasicUser()", "class_method_signature": "HttpHeadersTools.getBasicUser()", "testcase": false, "constructor": false}, {"identifier": "getBasicPassword", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getBasicPassword()", "full_signature": "public String getBasicPassword()", "class_method_signature": "HttpHeadersTools.getBasicPassword()", "testcase": false, "constructor": false}, {"identifier": "isHeaderTrue", "parameters": "(String name)", "modifiers": "public", "return": "boolean", "signature": "boolean isHeaderTrue(String name)", "full_signature": "public boolean isHeaderTrue(String name)", "class_method_signature": "HttpHeadersTools.isHeaderTrue(String name)", "testcase": false, "constructor": false}, {"identifier": "commastr2set", "parameters": "(String valueStr)", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> commastr2set(String valueStr)", "full_signature": "public static Set<String> commastr2set(String valueStr)", "class_method_signature": "HttpHeadersTools.commastr2set(String valueStr)", "testcase": false, "constructor": false}, {"identifier": "set2commastr", "parameters": "(Set<String> values)", "modifiers": "public static", "return": "String", "signature": "String set2commastr(Set<String> values)", "full_signature": "public static String set2commastr(Set<String> values)", "class_method_signature": "HttpHeadersTools.set2commastr(Set<String> values)", "testcase": false, "constructor": false}], "file": "api/mgmt-api/src/main/java/org/openstack/atlas/api/mgmt/filters/helpers/HttpHeadersTools.java"}, "focal_method": {"identifier": "set2commastr", "parameters": "(Set<String> values)", "modifiers": "public static", "return": "String", "body": "public static String set2commastr(Set<String> values) {\n        int i;\n        List<String> valList = new ArrayList<String>(values);\n        Collections.sort(valList);\n        Object[] objAry = valList.toArray();\n        StringBuilder sb = new StringBuilder();\n        if (objAry.length == 0) {\n            return sb.toString();\n        }\n        i = 1;\n        for (i = 0; i < objAry.length - 1; i++) {\n            sb.append(String.format(\"%s,\", (String) objAry[i]));\n        }\n        sb.append(objAry[i]);\n        return sb.toString();\n    }", "signature": "String set2commastr(Set<String> values)", "full_signature": "public static String set2commastr(Set<String> values)", "class_method_signature": "HttpHeadersTools.set2commastr(Set<String> values)", "testcase": false, "constructor": false, "invocations": ["sort", "toArray", "toString", "append", "format", "append", "toString"]}, "repository": {"repo_id": 2038852, "url": "https://github.com/rackerlabs/atlas-lb", "language": "Java", "is_fork": false, "fork_count": 26, "stargazer_count": 21, "size": 126552, "license": "licensed"}}