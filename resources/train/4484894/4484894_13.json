{"test_class": {"identifier": "TrackedPriorityBlockingQueueTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "TrackedPriorityBlockingQueue<SimpleItem> queue;", "modifier": "", "type": "TrackedPriorityBlockingQueue<SimpleItem>", "declarator": "queue", "var_name": "queue"}, {"original_string": "SimpleItem item100 = new SimpleItem(1, 100);", "modifier": "", "type": "SimpleItem", "declarator": "item100 = new SimpleItem(1, 100)", "var_name": "item100"}, {"original_string": "SimpleItem item101 = new SimpleItem(1, 101);", "modifier": "", "type": "SimpleItem", "declarator": "item101 = new SimpleItem(1, 101)", "var_name": "item101"}, {"original_string": "SimpleItem item102 = new SimpleItem(1, 102);", "modifier": "", "type": "SimpleItem", "declarator": "item102 = new SimpleItem(1, 102)", "var_name": "item102"}, {"original_string": "SimpleItem item103 = new SimpleItem(1, 103);", "modifier": "", "type": "SimpleItem", "declarator": "item103 = new SimpleItem(1, 103)", "var_name": "item103"}, {"original_string": "SimpleItem item1   = new SimpleItem(1, 1);", "modifier": "", "type": "SimpleItem", "declarator": "item1   = new SimpleItem(1, 1)", "var_name": "item1"}, {"original_string": "SimpleItem item2   = new SimpleItem(1, 2);", "modifier": "", "type": "SimpleItem", "declarator": "item2   = new SimpleItem(1, 2)", "var_name": "item2"}, {"original_string": "SimpleItem item3   = new SimpleItem(1, 3);", "modifier": "", "type": "SimpleItem", "declarator": "item3   = new SimpleItem(1, 3)", "var_name": "item3"}], "file": "hazeltask-core/src/test/java/com/hazeltask/core/concurrent/collections/tracked/TrackedPriorityBlockingQueueTest.java"}, "test_case": {"identifier": "getLastAddedTime", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getLastAddedTime() throws InterruptedException {\n        Thread.sleep(10);\n        //unless a machine is really really slow... this should be ok\n        long now = System.currentTimeMillis();\n        queue.offer(item101);\n        \n        assertTrue(timeBuffer(now, (long)queue.getLastAddedTime()));\n    }", "signature": "void getLastAddedTime()", "full_signature": "@Test public void getLastAddedTime()", "class_method_signature": "TrackedPriorityBlockingQueueTest.getLastAddedTime()", "testcase": true, "constructor": false, "invocations": ["sleep", "currentTimeMillis", "offer", "assertTrue", "timeBuffer", "getLastAddedTime"]}, "focal_class": {"identifier": "TrackedPriorityBlockingQueue", "superclass": "extends PriorityBlockingQueue<E>", "interfaces": "implements ITrackedQueue<E>", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private volatile Long lastAddedTime = null;", "modifier": "private volatile", "type": "Long", "declarator": "lastAddedTime = null", "var_name": "lastAddedTime"}, {"original_string": "private volatile Long lastRemovedTime = null;", "modifier": "private volatile", "type": "Long", "declarator": "lastRemovedTime = null", "var_name": "lastRemovedTime"}, {"original_string": "private static final int DEFAULT_INITIAL_SIZE = 100;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_INITIAL_SIZE = 100", "var_name": "DEFAULT_INITIAL_SIZE"}], "methods": [{"identifier": "TrackedPriorityBlockingQueue", "parameters": "()", "modifiers": "public", "return": "", "signature": " TrackedPriorityBlockingQueue()", "full_signature": "public  TrackedPriorityBlockingQueue()", "class_method_signature": "TrackedPriorityBlockingQueue.TrackedPriorityBlockingQueue()", "testcase": false, "constructor": true}, {"identifier": "getOldestItemTime", "parameters": "()", "modifiers": "public", "return": "Long", "signature": "Long getOldestItemTime()", "full_signature": "public Long getOldestItemTime()", "class_method_signature": "TrackedPriorityBlockingQueue.getOldestItemTime()", "testcase": false, "constructor": false}, {"identifier": "offer", "parameters": "(E e)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean offer(E e)", "full_signature": "@Override public boolean offer(E e)", "class_method_signature": "TrackedPriorityBlockingQueue.offer(E e)", "testcase": false, "constructor": false}, {"identifier": "poll", "parameters": "()", "modifiers": "@Override public", "return": "E", "signature": "E poll()", "full_signature": "@Override public E poll()", "class_method_signature": "TrackedPriorityBlockingQueue.poll()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean remove(Object o)", "full_signature": "@Override public boolean remove(Object o)", "class_method_signature": "TrackedPriorityBlockingQueue.remove(Object o)", "testcase": false, "constructor": false}, {"identifier": "getLastAddedTime", "parameters": "()", "modifiers": "public", "return": "Long", "signature": "Long getLastAddedTime()", "full_signature": "public Long getLastAddedTime()", "class_method_signature": "TrackedPriorityBlockingQueue.getLastAddedTime()", "testcase": false, "constructor": false}, {"identifier": "getLastRemovedTime", "parameters": "()", "modifiers": "public", "return": "Long", "signature": "Long getLastRemovedTime()", "full_signature": "public Long getLastRemovedTime()", "class_method_signature": "TrackedPriorityBlockingQueue.getLastRemovedTime()", "testcase": false, "constructor": false}], "file": "hazeltask-core/src/main/java/com/hazeltask/core/concurrent/collections/tracked/TrackedPriorityBlockingQueue.java"}, "focal_method": {"identifier": "getLastAddedTime", "parameters": "()", "modifiers": "public", "return": "Long", "body": "public Long getLastAddedTime() {\n        return lastAddedTime;\n    }", "signature": "Long getLastAddedTime()", "full_signature": "public Long getLastAddedTime()", "class_method_signature": "TrackedPriorityBlockingQueue.getLastAddedTime()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4484894, "url": "https://github.com/jclawson/hazeltask", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 41, "size": 1005, "license": "licensed"}}