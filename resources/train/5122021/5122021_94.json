{"test_class": {"identifier": "TestConfigAccessor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private JSONObject jsonObject1;", "modifier": "private", "type": "JSONObject", "declarator": "jsonObject1", "var_name": "jsonObject1"}, {"original_string": "private ConfigAccessor configAccessor;", "modifier": "private", "type": "ConfigAccessor", "declarator": "configAccessor", "var_name": "configAccessor"}], "file": "config/src/test/java/com/facebook/config/TestConfigAccessor.java"}, "test_case": {"identifier": "testExtractBean", "parameters": "()", "modifiers": "@Test(groups = \"fast\") public", "return": "void", "body": "@Test(groups = \"fast\")\n  public void testExtractBean() throws Exception {\n    Fuu bean = configAccessor.getBean(\"fuu\", Fuu.FuuBuilder.class);\n\n    Assert.assertEquals(bean.getX(), 600);\n    Assert.assertEquals(bean.getY(), 6000000000L);\n    Assert.assertEquals(bean.getSomeClass(), Object.class);\n    Assert.assertEquals(bean.getS(), \"baar\");\n  }", "signature": "void testExtractBean()", "full_signature": "@Test(groups = \"fast\") public void testExtractBean()", "class_method_signature": "TestConfigAccessor.testExtractBean()", "testcase": true, "constructor": false, "invocations": ["getBean", "assertEquals", "getX", "assertEquals", "getY", "assertEquals", "getSomeClass", "assertEquals", "getS"]}, "focal_class": {"identifier": "ConfigAccessor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerImpl.getClassLogger();", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerImpl.getClassLogger()", "var_name": "LOG"}, {"original_string": "private final JSONObject jsonObject;", "modifier": "private final", "type": "JSONObject", "declarator": "jsonObject", "var_name": "jsonObject"}], "methods": [{"identifier": "ConfigAccessor", "parameters": "(JSONObject jsonObject)", "modifiers": "public", "return": "", "signature": " ConfigAccessor(JSONObject jsonObject)", "full_signature": "public  ConfigAccessor(JSONObject jsonObject)", "class_method_signature": "ConfigAccessor.ConfigAccessor(JSONObject jsonObject)", "testcase": false, "constructor": true}, {"identifier": "emptyConfig", "parameters": "()", "modifiers": "public static", "return": "ConfigAccessor", "signature": "ConfigAccessor emptyConfig()", "full_signature": "public static ConfigAccessor emptyConfig()", "class_method_signature": "ConfigAccessor.emptyConfig()", "testcase": false, "constructor": false}, {"identifier": "getBean", "parameters": "(String key, Class<? extends ExtractableBeanBuilder<T>> beanBuilderClass)", "modifiers": "public", "return": "T", "signature": "T getBean(String key, Class<? extends ExtractableBeanBuilder<T>> beanBuilderClass)", "full_signature": "public T getBean(String key, Class<? extends ExtractableBeanBuilder<T>> beanBuilderClass)", "class_method_signature": "ConfigAccessor.getBean(String key, Class<? extends ExtractableBeanBuilder<T>> beanBuilderClass)", "testcase": false, "constructor": false}, {"identifier": "getClass", "parameters": "(String key, Class<?> defaultValue)", "modifiers": "public", "return": "Class<?>", "signature": "Class<?> getClass(String key, Class<?> defaultValue)", "full_signature": "public Class<?> getClass(String key, Class<?> defaultValue)", "class_method_signature": "ConfigAccessor.getClass(String key, Class<?> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "hasKey", "parameters": "(String key)", "modifiers": "public", "return": "boolean", "signature": "boolean hasKey(String key)", "full_signature": "public boolean hasKey(String key)", "class_method_signature": "ConfigAccessor.hasKey(String key)", "testcase": false, "constructor": false}, {"identifier": "getDuration", "parameters": "(String key, String defaultValue)", "modifiers": "public", "return": "Duration", "signature": "Duration getDuration(String key, String defaultValue)", "full_signature": "public Duration getDuration(String key, String defaultValue)", "class_method_signature": "ConfigAccessor.getDuration(String key, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getDurationSeconds", "parameters": "(String key, String defaultValue)", "modifiers": "public", "return": "long", "signature": "long getDurationSeconds(String key, String defaultValue)", "full_signature": "public long getDurationSeconds(String key, String defaultValue)", "class_method_signature": "ConfigAccessor.getDurationSeconds(String key, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getDurationMillis", "parameters": "(String key, String defaultValue)", "modifiers": "public", "return": "long", "signature": "long getDurationMillis(String key, String defaultValue)", "full_signature": "public long getDurationMillis(String key, String defaultValue)", "class_method_signature": "ConfigAccessor.getDurationMillis(String key, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getSizeBytes", "parameters": "(String key, String defaultValue)", "modifiers": "public", "return": "long", "signature": "long getSizeBytes(String key, String defaultValue)", "full_signature": "public long getSizeBytes(String key, String defaultValue)", "class_method_signature": "ConfigAccessor.getSizeBytes(String key, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getSizeBytes", "parameters": "(String key, Long defaultValue)", "modifiers": "public", "return": "long", "signature": "long getSizeBytes(String key, Long defaultValue)", "full_signature": "public long getSizeBytes(String key, Long defaultValue)", "class_method_signature": "ConfigAccessor.getSizeBytes(String key, Long defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(String key)", "modifiers": "public", "return": "Boolean", "signature": "Boolean getBoolean(String key)", "full_signature": "public Boolean getBoolean(String key)", "class_method_signature": "ConfigAccessor.getBoolean(String key)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(String key, Boolean defaultValue)", "modifiers": "public", "return": "Boolean", "signature": "Boolean getBoolean(String key, Boolean defaultValue)", "full_signature": "public Boolean getBoolean(String key, Boolean defaultValue)", "class_method_signature": "ConfigAccessor.getBoolean(String key, Boolean defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(String key)", "modifiers": "public", "return": "String", "signature": "String getString(String key)", "full_signature": "public String getString(String key)", "class_method_signature": "ConfigAccessor.getString(String key)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(String key, String defaultValue)", "modifiers": "public", "return": "String", "signature": "String getString(String key, String defaultValue)", "full_signature": "public String getString(String key, String defaultValue)", "class_method_signature": "ConfigAccessor.getString(String key, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getInt", "parameters": "(String key)", "modifiers": "public", "return": "int", "signature": "int getInt(String key)", "full_signature": "public int getInt(String key)", "class_method_signature": "ConfigAccessor.getInt(String key)", "testcase": false, "constructor": false}, {"identifier": "getInt", "parameters": "(String key, Integer defaultValue)", "modifiers": "public", "return": "int", "signature": "int getInt(String key, Integer defaultValue)", "full_signature": "public int getInt(String key, Integer defaultValue)", "class_method_signature": "ConfigAccessor.getInt(String key, Integer defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "(String key)", "modifiers": "public", "return": "long", "signature": "long getLong(String key)", "full_signature": "public long getLong(String key)", "class_method_signature": "ConfigAccessor.getLong(String key)", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "(String key, Long defaultValue)", "modifiers": "public", "return": "long", "signature": "long getLong(String key, Long defaultValue)", "full_signature": "public long getLong(String key, Long defaultValue)", "class_method_signature": "ConfigAccessor.getLong(String key, Long defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getDouble", "parameters": "(String key)", "modifiers": "public", "return": "double", "signature": "double getDouble(String key)", "full_signature": "public double getDouble(String key)", "class_method_signature": "ConfigAccessor.getDouble(String key)", "testcase": false, "constructor": false}, {"identifier": "getDouble", "parameters": "(String key, Double defaultValue)", "modifiers": "public", "return": "double", "signature": "double getDouble(String key, Double defaultValue)", "full_signature": "public double getDouble(String key, Double defaultValue)", "class_method_signature": "ConfigAccessor.getDouble(String key, Double defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getStringMap", "parameters": "(String key)", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getStringMap(String key)", "full_signature": "public Map<String, String> getStringMap(String key)", "class_method_signature": "ConfigAccessor.getStringMap(String key)", "testcase": false, "constructor": false}, {"identifier": "getList", "parameters": "(String key, Mapper<String, T> converter)", "modifiers": "public", "return": "List<T>", "signature": "List<T> getList(String key, Mapper<String, T> converter)", "full_signature": "public List<T> getList(String key, Mapper<String, T> converter)", "class_method_signature": "ConfigAccessor.getList(String key, Mapper<String, T> converter)", "testcase": false, "constructor": false}, {"identifier": "getStringList", "parameters": "(String key)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getStringList(String key)", "full_signature": "public List<String> getStringList(String key)", "class_method_signature": "ConfigAccessor.getStringList(String key)", "testcase": false, "constructor": false}, {"identifier": "getByteArrayList", "parameters": "(String key)", "modifiers": "public", "return": "List<ByteArray>", "signature": "List<ByteArray> getByteArrayList(String key)", "full_signature": "public List<ByteArray> getByteArrayList(String key)", "class_method_signature": "ConfigAccessor.getByteArrayList(String key)", "testcase": false, "constructor": false}, {"identifier": "getKeys", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getKeys()", "full_signature": "public List<String> getKeys()", "class_method_signature": "ConfigAccessor.getKeys()", "testcase": false, "constructor": false}, {"identifier": "getConfigAsMap", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getConfigAsMap()", "full_signature": "public Map<String, String> getConfigAsMap()", "class_method_signature": "ConfigAccessor.getConfigAsMap()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String key, T defaultValue, Extractor<T> extractor)", "modifiers": "private", "return": "T", "signature": "T get(String key, T defaultValue, Extractor<T> extractor)", "full_signature": "private T get(String key, T defaultValue, Extractor<T> extractor)", "class_method_signature": "ConfigAccessor.get(String key, T defaultValue, Extractor<T> extractor)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ConfigAccessor.toString()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(int indentFactor)", "modifiers": "public", "return": "String", "signature": "String toString(int indentFactor)", "full_signature": "public String toString(int indentFactor)", "class_method_signature": "ConfigAccessor.toString(int indentFactor)", "testcase": false, "constructor": false}], "file": "config/src/main/java/com/facebook/config/ConfigAccessor.java"}, "focal_method": {"identifier": "getBean", "parameters": "(String key, Class<? extends ExtractableBeanBuilder<T>> beanBuilderClass)", "modifiers": "public", "return": "T", "body": "public <T> T getBean(String key, Class<? extends ExtractableBeanBuilder<T>> beanBuilderClass) {\n    try {\n      JSONObject jsonBean = get(key, null, new JSONObjectExtractor());\n      ConfigAccessor jsonBeanAccessor = new ConfigAccessor(jsonBean);\n      Object beanBuilder = beanBuilderClass.newInstance();\n\n      for (Method m : beanBuilderClass.getMethods()) {\n        if (m.getName().toLowerCase().startsWith(\"set\")) {\n          FieldExtractor extractor = m.getAnnotation(FieldExtractor.class);\n\n          if (extractor != null) {\n            if (!Extractor.class.isAssignableFrom(extractor.extractorClass())) {\n              String message =\n                  String.format(\"extractor %s does not extend Extractor.class\", extractor);\n\n              LOG.error(message);\n\n              throw new ConfigException(message);\n            }\n\n            // if the parameter isn't optional check, or if it's optional\n            // and it is present; ie, if it's not optional and not there, let\n            // get() throw a ConfigException\n            if (!extractor.optional() || jsonBeanAccessor.hasKey(extractor.key())) {\n              Object value =\n                  jsonBeanAccessor.get(\n                      extractor.key(), null, (Extractor) extractor.extractorClass().newInstance());\n\n              m.invoke(beanBuilder, value);\n            }\n          } else {\n            LOG.warn(\"unable to find annotation for setter method \" + m.getName());\n          }\n        }\n      }\n\n      return ((ExtractableBeanBuilder<T>) beanBuilder).build();\n    } catch (InstantiationException | IllegalAccessException | InvocationTargetException e) {\n      throw new ConfigException(e);\n    }\n  }", "signature": "T getBean(String key, Class<? extends ExtractableBeanBuilder<T>> beanBuilderClass)", "full_signature": "public T getBean(String key, Class<? extends ExtractableBeanBuilder<T>> beanBuilderClass)", "class_method_signature": "ConfigAccessor.getBean(String key, Class<? extends ExtractableBeanBuilder<T>> beanBuilderClass)", "testcase": false, "constructor": false, "invocations": ["get", "newInstance", "getMethods", "startsWith", "toLowerCase", "getName", "getAnnotation", "isAssignableFrom", "extractorClass", "format", "error", "optional", "hasKey", "key", "get", "key", "newInstance", "extractorClass", "invoke", "warn", "getName", "build"]}, "repository": {"repo_id": 5122021, "url": "https://github.com/facebookarchive/jcommon", "language": "Java", "is_fork": false, "fork_count": 226, "stargazer_count": 670, "size": 7081, "license": "licensed"}}