{"test_class": {"identifier": "UtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Class<? extends Object> TARGET_CLASS = Object.class;", "modifier": "private static final", "type": "Class<? extends Object>", "declarator": "TARGET_CLASS = Object.class", "var_name": "TARGET_CLASS"}, {"original_string": "private static final String GIVEN_KEY = obtainValidKey(TARGET_CLASS);", "modifier": "private static final", "type": "String", "declarator": "GIVEN_KEY = obtainValidKey(TARGET_CLASS)", "var_name": "GIVEN_KEY"}], "file": "carbonite/src/test/java/info/evelio/carbonite/util/UtilTest.java"}, "test_case": {"identifier": "testEmptyStr", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void testEmptyStr() {\n    assertTrue(Util.empty((String) null));\n    assertTrue(Util.empty(\"\"));\n\n    assertFalse(Util.empty(\"something\"));\n    assertFalse(Util.empty(\" \"));\n  }", "signature": "void testEmptyStr()", "full_signature": "@Test public void testEmptyStr()", "class_method_signature": "UtilTest.testEmptyStr()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "empty", "assertTrue", "empty", "assertFalse", "empty", "assertFalse", "empty"]}, "focal_class": {"identifier": "Util", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final Matcher LEGAL_KEY_PATTERN = Pattern.compile(\"[a-z0-9_-]{1,64}\").matcher(\"\");", "modifier": "static final", "type": "Matcher", "declarator": "LEGAL_KEY_PATTERN = Pattern.compile(\"[a-z0-9_-]{1,64}\").matcher(\"\")", "var_name": "LEGAL_KEY_PATTERN"}], "methods": [{"identifier": "Util", "parameters": "()", "modifiers": "private", "return": "", "signature": " Util()", "full_signature": "private  Util()", "class_method_signature": "Util.Util()", "testcase": false, "constructor": true}, {"identifier": "len", "parameters": "(Object[] arr)", "modifiers": "public static", "return": "int", "signature": "int len(Object[] arr)", "full_signature": "public static int len(Object[] arr)", "class_method_signature": "Util.len(Object[] arr)", "testcase": false, "constructor": false}, {"identifier": "len", "parameters": "(Collection collection)", "modifiers": "public static", "return": "int", "signature": "int len(Collection collection)", "full_signature": "public static int len(Collection collection)", "class_method_signature": "Util.len(Collection collection)", "testcase": false, "constructor": false}, {"identifier": "len", "parameters": "(Map map)", "modifiers": "public static", "return": "int", "signature": "int len(Map map)", "full_signature": "public static int len(Map map)", "class_method_signature": "Util.len(Map map)", "testcase": false, "constructor": false}, {"identifier": "len", "parameters": "(String str)", "modifiers": "public static", "return": "int", "signature": "int len(String str)", "full_signature": "public static int len(String str)", "class_method_signature": "Util.len(String str)", "testcase": false, "constructor": false}, {"identifier": "empty", "parameters": "(String str)", "modifiers": "public static", "return": "boolean", "signature": "boolean empty(String str)", "full_signature": "public static boolean empty(String str)", "class_method_signature": "Util.empty(String str)", "testcase": false, "constructor": false}, {"identifier": "empty", "parameters": "(Object[] arr)", "modifiers": "public static", "return": "boolean", "signature": "boolean empty(Object[] arr)", "full_signature": "public static boolean empty(Object[] arr)", "class_method_signature": "Util.empty(Object[] arr)", "testcase": false, "constructor": false}, {"identifier": "empty", "parameters": "(Collection collection)", "modifiers": "public static", "return": "boolean", "signature": "boolean empty(Collection collection)", "full_signature": "public static boolean empty(Collection collection)", "class_method_signature": "Util.empty(Collection collection)", "testcase": false, "constructor": false}, {"identifier": "empty", "parameters": "(Map map)", "modifiers": "public static", "return": "boolean", "signature": "boolean empty(Map map)", "full_signature": "public static boolean empty(Map map)", "class_method_signature": "Util.empty(Map map)", "testcase": false, "constructor": false}, {"identifier": "empty", "parameters": "(char ch)", "modifiers": "public static", "return": "boolean", "signature": "boolean empty(char ch)", "full_signature": "public static boolean empty(char ch)", "class_method_signature": "Util.empty(char ch)", "testcase": false, "constructor": false}, {"identifier": "validateKey", "parameters": "(Object key)", "modifiers": "public static", "return": "void", "signature": "void validateKey(Object key)", "full_signature": "public static void validateKey(Object key)", "class_method_signature": "Util.validateKey(Object key)", "testcase": false, "constructor": false}, {"identifier": "validateKey", "parameters": "(String key)", "modifiers": "public static", "return": "void", "signature": "void validateKey(String key)", "full_signature": "public static void validateKey(String key)", "class_method_signature": "Util.validateKey(String key)", "testcase": false, "constructor": false}, {"identifier": "obtainValidKey", "parameters": "(Class type)", "modifiers": "public static", "return": "String", "signature": "String obtainValidKey(Class type)", "full_signature": "public static String obtainValidKey(Class type)", "class_method_signature": "Util.obtainValidKey(Class type)", "testcase": false, "constructor": false}, {"identifier": "validateValue", "parameters": "(T value, boolean allowNullValues)", "modifiers": "public static", "return": "void", "signature": "void validateValue(T value, boolean allowNullValues)", "full_signature": "public static void validateValue(T value, boolean allowNullValues)", "class_method_signature": "Util.validateValue(T value, boolean allowNullValues)", "testcase": false, "constructor": false}, {"identifier": "illegalArg", "parameters": "(boolean throwIt, String msg)", "modifiers": "public static", "return": "void", "signature": "void illegalArg(boolean throwIt, String msg)", "full_signature": "public static void illegalArg(boolean throwIt, String msg)", "class_method_signature": "Util.illegalArg(boolean throwIt, String msg)", "testcase": false, "constructor": false}, {"identifier": "illegalState", "parameters": "(boolean throwIt, String msg)", "modifiers": "public static", "return": "void", "signature": "void illegalState(boolean throwIt, String msg)", "full_signature": "public static void illegalState(boolean throwIt, String msg)", "class_method_signature": "Util.illegalState(boolean throwIt, String msg)", "testcase": false, "constructor": false}, {"identifier": "illegalAccess", "parameters": "(boolean throwIt, String msg)", "modifiers": "public static", "return": "void", "signature": "void illegalAccess(boolean throwIt, String msg)", "full_signature": "public static void illegalAccess(boolean throwIt, String msg)", "class_method_signature": "Util.illegalAccess(boolean throwIt, String msg)", "testcase": false, "constructor": false}, {"identifier": "runtimeException", "parameters": "(String msg, Throwable thr)", "modifiers": "public static", "return": "void", "signature": "void runtimeException(String msg, Throwable thr)", "full_signature": "public static void runtimeException(String msg, Throwable thr)", "class_method_signature": "Util.runtimeException(String msg, Throwable thr)", "testcase": false, "constructor": false}, {"identifier": "notNullArg", "parameters": "(Object bob, String msg)", "modifiers": "public static", "return": "void", "signature": "void notNullArg(Object bob, String msg)", "full_signature": "public static void notNullArg(Object bob, String msg)", "class_method_signature": "Util.notNullArg(Object bob, String msg)", "testcase": false, "constructor": false}, {"identifier": "notNull", "parameters": "(Object bob, String msg)", "modifiers": "public static", "return": "void", "signature": "void notNull(Object bob, String msg)", "full_signature": "public static void notNull(Object bob, String msg)", "class_method_signature": "Util.notNull(Object bob, String msg)", "testcase": false, "constructor": false}, {"identifier": "nonEmptyArg", "parameters": "(char ch, String msg)", "modifiers": "public static", "return": "void", "signature": "void nonEmptyArg(char ch, String msg)", "full_signature": "public static void nonEmptyArg(char ch, String msg)", "class_method_signature": "Util.nonEmptyArg(char ch, String msg)", "testcase": false, "constructor": false}, {"identifier": "nonEmptyArg", "parameters": "(String str, String msg)", "modifiers": "public static", "return": "void", "signature": "void nonEmptyArg(String str, String msg)", "full_signature": "public static void nonEmptyArg(String str, String msg)", "class_method_signature": "Util.nonEmptyArg(String str, String msg)", "testcase": false, "constructor": false}, {"identifier": "nonEmptyArg", "parameters": "(Object[] arr, String msg)", "modifiers": "public static", "return": "void", "signature": "void nonEmptyArg(Object[] arr, String msg)", "full_signature": "public static void nonEmptyArg(Object[] arr, String msg)", "class_method_signature": "Util.nonEmptyArg(Object[] arr, String msg)", "testcase": false, "constructor": false}, {"identifier": "nonEmptyArg", "parameters": "(Collection collection, String msg)", "modifiers": "public static", "return": "void", "signature": "void nonEmptyArg(Collection collection, String msg)", "full_signature": "public static void nonEmptyArg(Collection collection, String msg)", "class_method_signature": "Util.nonEmptyArg(Collection collection, String msg)", "testcase": false, "constructor": false}, {"identifier": "nonEmpty", "parameters": "(char ch, String msg)", "modifiers": "public static", "return": "void", "signature": "void nonEmpty(char ch, String msg)", "full_signature": "public static void nonEmpty(char ch, String msg)", "class_method_signature": "Util.nonEmpty(char ch, String msg)", "testcase": false, "constructor": false}, {"identifier": "nonEmpty", "parameters": "(String str, String msg)", "modifiers": "public static", "return": "void", "signature": "void nonEmpty(String str, String msg)", "full_signature": "public static void nonEmpty(String str, String msg)", "class_method_signature": "Util.nonEmpty(String str, String msg)", "testcase": false, "constructor": false}, {"identifier": "nonEmpty", "parameters": "(Object[] arr, String msg)", "modifiers": "public static", "return": "void", "signature": "void nonEmpty(Object[] arr, String msg)", "full_signature": "public static void nonEmpty(Object[] arr, String msg)", "class_method_signature": "Util.nonEmpty(Object[] arr, String msg)", "testcase": false, "constructor": false}, {"identifier": "nonEmpty", "parameters": "(Collection collection, String msg)", "modifiers": "public static", "return": "void", "signature": "void nonEmpty(Collection collection, String msg)", "full_signature": "public static void nonEmpty(Collection collection, String msg)", "class_method_signature": "Util.nonEmpty(Collection collection, String msg)", "testcase": false, "constructor": false}, {"identifier": "nonEmpty", "parameters": "(Map map, String msg)", "modifiers": "public static", "return": "void", "signature": "void nonEmpty(Map map, String msg)", "full_signature": "public static void nonEmpty(Map map, String msg)", "class_method_signature": "Util.nonEmpty(Map map, String msg)", "testcase": false, "constructor": false}, {"identifier": "unchecked", "parameters": "(Future<V> future)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "UncheckedFuture<V>", "signature": "UncheckedFuture<V> unchecked(Future<V> future)", "full_signature": "@SuppressWarnings(\"unchecked\") public static UncheckedFuture<V> unchecked(Future<V> future)", "class_method_signature": "Util.unchecked(Future<V> future)", "testcase": false, "constructor": false}, {"identifier": "getUnchecked", "parameters": "(Future<V> future)", "modifiers": "public static", "return": "V", "signature": "V getUnchecked(Future<V> future)", "full_signature": "public static V getUnchecked(Future<V> future)", "class_method_signature": "Util.getUnchecked(Future<V> future)", "testcase": false, "constructor": false}, {"identifier": "pokeball", "parameters": "(Throwable pokemon)", "modifiers": "public static", "return": "void", "signature": "void pokeball(Throwable pokemon)", "full_signature": "public static void pokeball(Throwable pokemon)", "class_method_signature": "Util.pokeball(Throwable pokemon)", "testcase": false, "constructor": false}, {"identifier": "closeSilently", "parameters": "(Closeable closeable)", "modifiers": "public static", "return": "void", "signature": "void closeSilently(Closeable closeable)", "full_signature": "public static void closeSilently(Closeable closeable)", "class_method_signature": "Util.closeSilently(Closeable closeable)", "testcase": false, "constructor": false}, {"identifier": "checkedClass", "parameters": "(T value)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "Class<T>", "signature": "Class<T> checkedClass(T value)", "full_signature": "@SuppressWarnings(\"unchecked\") public static Class<T> checkedClass(T value)", "class_method_signature": "Util.checkedClass(T value)", "testcase": false, "constructor": false}, {"identifier": "present", "parameters": "(T result)", "modifiers": "public static", "return": "Future<T>", "signature": "Future<T> present(T result)", "full_signature": "public static Future<T> present(T result)", "class_method_signature": "Util.present(T result)", "testcase": false, "constructor": false}, {"identifier": "newFixedCachedThread", "parameters": "(int threads, ThreadFactory threadFactory)", "modifiers": "public static", "return": "ExecutorService", "signature": "ExecutorService newFixedCachedThread(int threads, ThreadFactory threadFactory)", "full_signature": "public static ExecutorService newFixedCachedThread(int threads, ThreadFactory threadFactory)", "class_method_signature": "Util.newFixedCachedThread(int threads, ThreadFactory threadFactory)", "testcase": false, "constructor": false}, {"identifier": "newCacheInstance", "parameters": "(Class<? extends Cache> imp, CacheOptions opts)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "Cache<K, V>", "signature": "Cache<K, V> newCacheInstance(Class<? extends Cache> imp, CacheOptions opts)", "full_signature": "@SuppressWarnings(\"unchecked\") public static Cache<K, V> newCacheInstance(Class<? extends Cache> imp, CacheOptions opts)", "class_method_signature": "Util.newCacheInstance(Class<? extends Cache> imp, CacheOptions opts)", "testcase": false, "constructor": false}], "file": "carbonite/src/main/java/info/evelio/carbonite/util/Util.java"}, "focal_method": {"identifier": "empty", "parameters": "(String str)", "modifiers": "public static", "return": "boolean", "body": "public static boolean empty(String str) {\n    return str == null || str.equals(\"\"); // We could trim it but don't want to generate garbage\n  }", "signature": "boolean empty(String str)", "full_signature": "public static boolean empty(String str)", "class_method_signature": "Util.empty(String str)", "testcase": false, "constructor": false, "invocations": ["equals"]}, "repository": {"repo_id": 11226198, "url": "https://github.com/eveliotc/carbonite", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 94, "size": 469, "license": "licensed"}}