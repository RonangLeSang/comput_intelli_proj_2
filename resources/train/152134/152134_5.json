{"test_class": {"identifier": "TestPixels", "superclass": "", "interfaces": "", "fields": [], "file": "koskela/src/test/java/com/tddinaction/swing/plotmap/view/TestPixels.java"}, "test_case": {"identifier": "testAround", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAround() throws Exception {\n        List<Point> pixels = Pixels.around(new Point(5, 5));\n        assertEquals(Arrays.asList(new Point(4, 4), new Point(4, 5),\n                new Point(4, 6), new Point(5, 4), new Point(5, 6),\n                new Point(6, 4), new Point(6, 5), new Point(6, 6)),\n                pixels);\n    }", "signature": "void testAround()", "full_signature": "@Test public void testAround()", "class_method_signature": "TestPixels.testAround()", "testcase": true, "constructor": false, "invocations": ["around", "assertEquals", "asList"]}, "focal_class": {"identifier": "Pixels", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "in", "parameters": "(final Raster raster)", "modifiers": "public static", "return": "PixelRangeAssertion", "signature": "PixelRangeAssertion in(final Raster raster)", "full_signature": "public static PixelRangeAssertion in(final Raster raster)", "class_method_signature": "Pixels.in(final Raster raster)", "testcase": false, "constructor": false}, {"identifier": "around", "parameters": "(Point point)", "modifiers": "public static", "return": "List<Point>", "signature": "List<Point> around(Point point)", "full_signature": "public static List<Point> around(Point point)", "class_method_signature": "Pixels.around(Point point)", "testcase": false, "constructor": false}], "file": "koskela/src/main/java/com/tddinaction/swing/plotmap/view/Pixels.java"}, "focal_method": {"identifier": "around", "parameters": "(Point point)", "modifiers": "public static", "return": "List<Point>", "body": "public static List<Point> around(Point point) {\n        List<Point> points = new ArrayList<Point>();\n        for (int x2 = point.x - 1; x2 <= point.x + 1; x2++) {\n            for (int y2 = point.y - 1; y2 <= point.y + 1; y2++) {\n                if (x2 != point.x || y2 != point.y) {\n                    points.add(new Point(x2, y2));\n                }\n            }\n        }\n        return points;\n    }", "signature": "List<Point> around(Point point)", "full_signature": "public static List<Point> around(Point point)", "class_method_signature": "Pixels.around(Point point)", "testcase": false, "constructor": false, "invocations": ["add"]}, "repository": {"repo_id": 152134, "url": "https://github.com/panterch/edu", "language": "Java", "is_fork": false, "fork_count": 59, "stargazer_count": 41, "size": 5120, "license": "licensed"}}