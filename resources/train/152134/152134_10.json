{"test_class": {"identifier": "JdbcTemplatePersonDaoTest", "superclass": "", "interfaces": "", "fields": [], "file": "koskela/src/test/java/com/tddinaction/data/spring/jdbc/JdbcTemplatePersonDaoTest.java"}, "test_case": {"identifier": "testFindAll", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFindAll() throws Exception {\n        List<Person> expected = createListOfPeopleWithLastname(\"Smith\");\n        JdbcTemplate template = createMock(JdbcTemplate.class);\n        template.query(eq(\"SELECT * FROM employee\"),\n                aryEq(new Object[0]), isA(PersonRowMapper.class));\n        expectLastCall().andReturn(expected);\n\n        replay(template);\n\n        JdbcTemplatePersonDao dao = new JdbcTemplatePersonDao();\n        dao.setJdbcTemplate(template);\n        assertEquals(expected, dao.findAll());\n\n        verify(template);\n    }", "signature": "void testFindAll()", "full_signature": "@Test public void testFindAll()", "class_method_signature": "JdbcTemplatePersonDaoTest.testFindAll()", "testcase": true, "constructor": false, "invocations": ["createListOfPeopleWithLastname", "createMock", "query", "eq", "aryEq", "isA", "andReturn", "expectLastCall", "replay", "setJdbcTemplate", "assertEquals", "findAll", "verify"]}, "focal_class": {"identifier": "JdbcTemplatePersonDao", "superclass": "extends JdbcDaoSupport", "interfaces": "implements\n        PersonDao", "fields": [], "methods": [{"identifier": "findAll", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "List<Person>", "signature": "List<Person> findAll()", "full_signature": "@SuppressWarnings(\"unchecked\") public List<Person> findAll()", "class_method_signature": "JdbcTemplatePersonDao.findAll()", "testcase": false, "constructor": false}, {"identifier": "findByLastName", "parameters": "(String lastName)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "List<Person>", "signature": "List<Person> findByLastName(String lastName)", "full_signature": "@SuppressWarnings(\"unchecked\") public List<Person> findByLastName(String lastName)", "class_method_signature": "JdbcTemplatePersonDao.findByLastName(String lastName)", "testcase": false, "constructor": false}, {"identifier": "findByLastname", "parameters": "(String lastname)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "List<Person>", "signature": "List<Person> findByLastname(String lastname)", "full_signature": "@SuppressWarnings(\"unchecked\") public List<Person> findByLastname(String lastname)", "class_method_signature": "JdbcTemplatePersonDao.findByLastname(String lastname)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(final Person person)", "modifiers": "public", "return": "void", "signature": "void save(final Person person)", "full_signature": "public void save(final Person person)", "class_method_signature": "JdbcTemplatePersonDao.save(final Person person)", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "(Long id)", "modifiers": "public", "return": "Person", "signature": "Person find(Long id)", "full_signature": "public Person find(Long id)", "class_method_signature": "JdbcTemplatePersonDao.find(Long id)", "testcase": false, "constructor": false}], "file": "koskela/src/main/java/com/tddinaction/data/spring/jdbc/JdbcTemplatePersonDao.java"}, "focal_method": {"identifier": "findAll", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "List<Person>", "body": "@SuppressWarnings(\"unchecked\")\n    public List<Person> findAll() {\n        return getJdbcTemplate().query(\"SELECT * FROM employee\",\n                new Object[0], new PersonRowMapper());\n    }", "signature": "List<Person> findAll()", "full_signature": "@SuppressWarnings(\"unchecked\") public List<Person> findAll()", "class_method_signature": "JdbcTemplatePersonDao.findAll()", "testcase": false, "constructor": false, "invocations": ["query", "getJdbcTemplate"]}, "repository": {"repo_id": 152134, "url": "https://github.com/panterch/edu", "language": "Java", "is_fork": false, "fork_count": 59, "stargazer_count": 41, "size": 5120, "license": "licensed"}}