{"test_class": {"identifier": "CacheUpdateEventsStorageTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CacheUpdateEventsStorage myStorage;", "modifier": "private", "type": "CacheUpdateEventsStorage", "declarator": "myStorage", "var_name": "myStorage"}, {"original_string": "private Document myDocument;", "modifier": "private", "type": "Document", "declarator": "myDocument", "var_name": "myDocument"}, {"original_string": "private Mockery myMockery;", "modifier": "private", "type": "Mockery", "declarator": "myMockery", "var_name": "myMockery"}, {"original_string": "private String myText;", "modifier": "private", "type": "String", "declarator": "myText", "var_name": "myText"}], "file": "platform/platform-impl/testSrc/com/intellij/openapi/editor/impl/softwrap/mapping/CacheUpdateEventsStorageTest.java"}, "test_case": {"identifier": "newEventLaysBetweenRegistered", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void newEventLaysBetweenRegistered() {\n    int offset = myDocument.getLineStartOffset(5) + 2;\n    change(offset, \"AB\");\n    assertEquals(1, myStorage.getEvents().size());\n    checkOrder();\n    \n    change(1, \"CD\");\n    assertEquals(2, myStorage.getEvents().size());\n    checkOrder();\n\n    offset = myDocument.getLineStartOffset(3) + 2;\n    change(offset, \"EF\");\n    assertEquals(3, myStorage.getEvents().size());\n    checkOrder();\n  }", "signature": "void newEventLaysBetweenRegistered()", "full_signature": "@Test public void newEventLaysBetweenRegistered()", "class_method_signature": "CacheUpdateEventsStorageTest.newEventLaysBetweenRegistered()", "testcase": true, "constructor": false, "invocations": ["getLineStartOffset", "change", "assertEquals", "size", "getEvents", "checkOrder", "change", "assertEquals", "size", "getEvents", "checkOrder", "getLineStartOffset", "change", "assertEquals", "size", "getEvents", "checkOrder"]}, "focal_class": {"identifier": "CacheUpdateEventsStorage", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final List<IncrementalCacheUpdateEvent> myEvents = new ArrayList<IncrementalCacheUpdateEvent>();", "modifier": "private final", "type": "List<IncrementalCacheUpdateEvent>", "declarator": "myEvents = new ArrayList<IncrementalCacheUpdateEvent>()", "var_name": "myEvents"}], "methods": [{"identifier": "add", "parameters": "(@NotNull Document document, @NotNull IncrementalCacheUpdateEvent event)", "modifiers": "public", "return": "void", "signature": "void add(@NotNull Document document, @NotNull IncrementalCacheUpdateEvent event)", "full_signature": "public void add(@NotNull Document document, @NotNull IncrementalCacheUpdateEvent event)", "class_method_signature": "CacheUpdateEventsStorage.add(@NotNull Document document, @NotNull IncrementalCacheUpdateEvent event)", "testcase": false, "constructor": false}, {"identifier": "findIndex", "parameters": "(IncrementalCacheUpdateEvent event)", "modifiers": "private", "return": "int", "signature": "int findIndex(IncrementalCacheUpdateEvent event)", "full_signature": "private int findIndex(IncrementalCacheUpdateEvent event)", "class_method_signature": "CacheUpdateEventsStorage.findIndex(IncrementalCacheUpdateEvent event)", "testcase": false, "constructor": false}, {"identifier": "getEvents", "parameters": "()", "modifiers": "@NotNull public", "return": "List<IncrementalCacheUpdateEvent>", "signature": "List<IncrementalCacheUpdateEvent> getEvents()", "full_signature": "@NotNull public List<IncrementalCacheUpdateEvent> getEvents()", "class_method_signature": "CacheUpdateEventsStorage.getEvents()", "testcase": false, "constructor": false}, {"identifier": "release", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void release()", "full_signature": "public void release()", "class_method_signature": "CacheUpdateEventsStorage.release()", "testcase": false, "constructor": false}], "file": "platform/platform-impl/src/com/intellij/openapi/editor/impl/softwrap/mapping/CacheUpdateEventsStorage.java"}, "focal_method": {"identifier": "getEvents", "parameters": "()", "modifiers": "@NotNull public", "return": "List<IncrementalCacheUpdateEvent>", "body": "@NotNull\n  public List<IncrementalCacheUpdateEvent> getEvents() {\n    return myEvents;\n  }", "signature": "List<IncrementalCacheUpdateEvent> getEvents()", "full_signature": "@NotNull public List<IncrementalCacheUpdateEvent> getEvents()", "class_method_signature": "CacheUpdateEventsStorage.getEvents()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1294371, "url": "https://github.com/joewalnes/idea-community", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 26, "size": 801312, "license": "licensed"}}