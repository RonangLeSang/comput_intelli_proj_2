{"test_class": {"identifier": "ChangeSetTest", "superclass": "extends LocalHistoryTestCase", "interfaces": "", "fields": [], "file": "platform/lvcs-impl/testSrc/com/intellij/history/core/changes/ChangeSetTest.java"}, "test_case": {"identifier": "testToCreationalChangesInOneChangeSet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testToCreationalChangesInOneChangeSet() {\n    ChangeSet cs = cs(new CreateFileChange(nextId(), \"file\"), new CreateDirectoryChange(nextId(), \"dir\"));\n    assertTrue(cs.isCreationalFor(\"file\"));\n    assertTrue(cs.isCreationalFor(\"dir\"));\n  }", "signature": "void testToCreationalChangesInOneChangeSet()", "full_signature": "@Test public void testToCreationalChangesInOneChangeSet()", "class_method_signature": "ChangeSetTest.testToCreationalChangesInOneChangeSet()", "testcase": true, "constructor": false, "invocations": ["cs", "nextId", "nextId", "assertTrue", "isCreationalFor", "assertTrue", "isCreationalFor"]}, "focal_class": {"identifier": "ChangeSet", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final long myId;", "modifier": "private final", "type": "long", "declarator": "myId", "var_name": "myId"}, {"original_string": "@Nullable private String myName;", "modifier": "@Nullable private", "type": "String", "declarator": "myName", "var_name": "myName"}, {"original_string": "private final long myTimestamp;", "modifier": "private final", "type": "long", "declarator": "myTimestamp", "var_name": "myTimestamp"}, {"original_string": "private final List<Change> myChanges;", "modifier": "private final", "type": "List<Change>", "declarator": "myChanges", "var_name": "myChanges"}], "methods": [{"identifier": "ChangeSet", "parameters": "(long id, long timestamp)", "modifiers": "public", "return": "", "signature": " ChangeSet(long id, long timestamp)", "full_signature": "public  ChangeSet(long id, long timestamp)", "class_method_signature": "ChangeSet.ChangeSet(long id, long timestamp)", "testcase": false, "constructor": true}, {"identifier": "ChangeSet", "parameters": "(DataInput in)", "modifiers": "public", "return": "", "signature": " ChangeSet(DataInput in)", "full_signature": "public  ChangeSet(DataInput in)", "class_method_signature": "ChangeSet.ChangeSet(DataInput in)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(DataOutput out)", "modifiers": "public", "return": "void", "signature": "void write(DataOutput out)", "full_signature": "public void write(DataOutput out)", "class_method_signature": "ChangeSet.write(DataOutput out)", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(@Nullable String name)", "modifiers": "public", "return": "void", "signature": "void setName(@Nullable String name)", "full_signature": "public void setName(@Nullable String name)", "class_method_signature": "ChangeSet.setName(@Nullable String name)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "signature": "String getName()", "full_signature": "@Nullable public String getName()", "class_method_signature": "ChangeSet.getName()", "testcase": false, "constructor": false}, {"identifier": "getTimestamp", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getTimestamp()", "full_signature": "public long getTimestamp()", "class_method_signature": "ChangeSet.getTimestamp()", "testcase": false, "constructor": false}, {"identifier": "getLabel", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "signature": "String getLabel()", "full_signature": "@Nullable public String getLabel()", "class_method_signature": "ChangeSet.getLabel()", "testcase": false, "constructor": false}, {"identifier": "getLabelColor", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLabelColor()", "full_signature": "public int getLabelColor()", "class_method_signature": "ChangeSet.getLabelColor()", "testcase": false, "constructor": false}, {"identifier": "addChange", "parameters": "(Change c)", "modifiers": "public", "return": "void", "signature": "void addChange(Change c)", "full_signature": "public void addChange(Change c)", "class_method_signature": "ChangeSet.addChange(Change c)", "testcase": false, "constructor": false}, {"identifier": "getChanges", "parameters": "()", "modifiers": "public", "return": "List<Change>", "signature": "List<Change> getChanges()", "full_signature": "public List<Change> getChanges()", "class_method_signature": "ChangeSet.getChanges()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "ChangeSet.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "affectsPath", "parameters": "(String paths)", "modifiers": "public", "return": "boolean", "signature": "boolean affectsPath(String paths)", "full_signature": "public boolean affectsPath(String paths)", "class_method_signature": "ChangeSet.affectsPath(String paths)", "testcase": false, "constructor": false}, {"identifier": "isCreationalFor", "parameters": "(String path)", "modifiers": "public", "return": "boolean", "signature": "boolean isCreationalFor(String path)", "full_signature": "public boolean isCreationalFor(String path)", "class_method_signature": "ChangeSet.isCreationalFor(String path)", "testcase": false, "constructor": false}, {"identifier": "getContentsToPurge", "parameters": "()", "modifiers": "public", "return": "List<Content>", "signature": "List<Content> getContentsToPurge()", "full_signature": "public List<Content> getContentsToPurge()", "class_method_signature": "ChangeSet.getContentsToPurge()", "testcase": false, "constructor": false}, {"identifier": "isContentChangeOnly", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isContentChangeOnly()", "full_signature": "public boolean isContentChangeOnly()", "class_method_signature": "ChangeSet.isContentChangeOnly()", "testcase": false, "constructor": false}, {"identifier": "isLabelOnly", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isLabelOnly()", "full_signature": "public boolean isLabelOnly()", "class_method_signature": "ChangeSet.isLabelOnly()", "testcase": false, "constructor": false}, {"identifier": "getFirstChange", "parameters": "()", "modifiers": "public", "return": "Change", "signature": "Change getFirstChange()", "full_signature": "public Change getFirstChange()", "class_method_signature": "ChangeSet.getFirstChange()", "testcase": false, "constructor": false}, {"identifier": "getLastChange", "parameters": "()", "modifiers": "public", "return": "Change", "signature": "Change getLastChange()", "full_signature": "public Change getLastChange()", "class_method_signature": "ChangeSet.getLastChange()", "testcase": false, "constructor": false}, {"identifier": "getAffectedPaths", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getAffectedPaths()", "full_signature": "public List<String> getAffectedPaths()", "class_method_signature": "ChangeSet.getAffectedPaths()", "testcase": false, "constructor": false}, {"identifier": "accept", "parameters": "(ChangeVisitor v)", "modifiers": "public", "return": "void", "signature": "void accept(ChangeVisitor v)", "full_signature": "public void accept(ChangeVisitor v)", "class_method_signature": "ChangeSet.accept(ChangeVisitor v)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "ChangeSet.toString()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getId()", "full_signature": "public long getId()", "class_method_signature": "ChangeSet.getId()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public final boolean equals(Object o)", "class_method_signature": "ChangeSet.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public final", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public final int hashCode()", "class_method_signature": "ChangeSet.hashCode()", "testcase": false, "constructor": false}], "file": "platform/lvcs-impl/src/com/intellij/history/core/changes/ChangeSet.java"}, "focal_method": {"identifier": "isCreationalFor", "parameters": "(String path)", "modifiers": "public", "return": "boolean", "body": "public boolean isCreationalFor(String path) {\n    for (Change c : myChanges) {\n      if (c.isCreationalFor(path)) return true;\n    }\n    return false;\n  }", "signature": "boolean isCreationalFor(String path)", "full_signature": "public boolean isCreationalFor(String path)", "class_method_signature": "ChangeSet.isCreationalFor(String path)", "testcase": false, "constructor": false, "invocations": ["isCreationalFor"]}, "repository": {"repo_id": 1294371, "url": "https://github.com/joewalnes/idea-community", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 26, "size": 801312, "license": "licensed"}}