{"test_class": {"identifier": "MBeanServerHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MBeanServer server = MBeanServerFactory.createMBeanServer();", "modifier": "private", "type": "MBeanServer", "declarator": "server = MBeanServerFactory.createMBeanServer()", "var_name": "server"}, {"original_string": "private ObjectName defaultObjectName;", "modifier": "private", "type": "ObjectName", "declarator": "defaultObjectName", "var_name": "defaultObjectName"}, {"original_string": "private ObjectName alteredObjectName;", "modifier": "private", "type": "ObjectName", "declarator": "alteredObjectName", "var_name": "alteredObjectName"}], "file": "shared-libraries/servicemix-common/src/test/java/org/apache/servicemix/common/management/MBeanServerHelperTest.java"}, "test_case": {"identifier": "testRegisterNullServerThrowsJBIException", "parameters": "()", "modifiers": "@Test(expected = JBIException.class) public", "return": "void", "body": "@Test(expected = JBIException.class)\n    public void testRegisterNullServerThrowsJBIException() throws NotCompliantMBeanException, MalformedObjectNameException, JBIException {\n        SampleMBean mbean = new SampleMBeanImpl();\n        Object object = new StandardMBean(mbean, SampleMBean.class);\n\n        MBeanServerHelper.register(null, defaultObjectName, object);\n    }", "signature": "void testRegisterNullServerThrowsJBIException()", "full_signature": "@Test(expected = JBIException.class) public void testRegisterNullServerThrowsJBIException()", "class_method_signature": "MBeanServerHelperTest.testRegisterNullServerThrowsJBIException()", "testcase": true, "constructor": false, "invocations": ["register"]}, "focal_class": {"identifier": "MBeanServerHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(MBeanServerHelper.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(MBeanServerHelper.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "register", "parameters": "(MBeanServer server, ObjectName name, Object object)", "modifiers": "public static", "return": "ObjectName", "signature": "ObjectName register(MBeanServer server, ObjectName name, Object object)", "full_signature": "public static ObjectName register(MBeanServer server, ObjectName name, Object object)", "class_method_signature": "MBeanServerHelper.register(MBeanServer server, ObjectName name, Object object)", "testcase": false, "constructor": false}, {"identifier": "doRegister", "parameters": "(MBeanServer server, ObjectName name, Object object)", "modifiers": "private static", "return": "ObjectInstance", "signature": "ObjectInstance doRegister(MBeanServer server, ObjectName name, Object object)", "full_signature": "private static ObjectInstance doRegister(MBeanServer server, ObjectName name, Object object)", "class_method_signature": "MBeanServerHelper.doRegister(MBeanServer server, ObjectName name, Object object)", "testcase": false, "constructor": false}, {"identifier": "unregister", "parameters": "(MBeanServer server, ObjectName name)", "modifiers": "public static", "return": "void", "signature": "void unregister(MBeanServer server, ObjectName name)", "full_signature": "public static void unregister(MBeanServer server, ObjectName name)", "class_method_signature": "MBeanServerHelper.unregister(MBeanServer server, ObjectName name)", "testcase": false, "constructor": false}, {"identifier": "doUnregister", "parameters": "(MBeanServer server, ObjectName name)", "modifiers": "private static", "return": "void", "signature": "void doUnregister(MBeanServer server, ObjectName name)", "full_signature": "private static void doUnregister(MBeanServer server, ObjectName name)", "class_method_signature": "MBeanServerHelper.doUnregister(MBeanServer server, ObjectName name)", "testcase": false, "constructor": false}], "file": "shared-libraries/servicemix-common/src/main/java/org/apache/servicemix/common/management/MBeanServerHelper.java"}, "focal_method": {"identifier": "register", "parameters": "(MBeanServer server, ObjectName name, Object object)", "modifiers": "public static", "return": "ObjectName", "body": "public static ObjectName register(MBeanServer server, ObjectName name, Object object) throws JBIException {\n        if (server == null) {\n            throw new JBIException(\"MBeanServer is null when registering MBean \" + name);\n        }\n\n        try {\n            // unregister a previously existing MBean first\n            doUnregister(server, name);\n\n            LOGGER.debug(\"Registering MBean {}\", name);\n            ObjectInstance instance = doRegister(server, name, object);\n\n            ObjectName result = instance.getObjectName();\n            LOGGER.debug(\"Successfully registered MBean {}\", result);\n\n            return result;\n        } catch (JMException e) {\n            throw new JBIException(\"Exception occured while registering JMX MBean \" + name, e);\n        }\n    }", "signature": "ObjectName register(MBeanServer server, ObjectName name, Object object)", "full_signature": "public static ObjectName register(MBeanServer server, ObjectName name, Object object)", "class_method_signature": "MBeanServerHelper.register(MBeanServer server, ObjectName name, Object object)", "testcase": false, "constructor": false, "invocations": ["doUnregister", "debug", "doRegister", "getObjectName", "debug"]}, "repository": {"repo_id": 1167439, "url": "https://github.com/apache/servicemix-components", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 7, "size": 11588, "license": "licensed"}}