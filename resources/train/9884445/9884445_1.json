{"test_class": {"identifier": "MigrationsPluginTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MigrationsPlugin plugin;", "modifier": "private", "type": "MigrationsPlugin", "declarator": "plugin", "var_name": "plugin"}, {"original_string": "private Application<ApplicationConfiguration> application;", "modifier": "private", "type": "Application<ApplicationConfiguration>", "declarator": "application", "var_name": "application"}, {"original_string": "private Flyway flyway;", "modifier": "private", "type": "Flyway", "declarator": "flyway", "var_name": "flyway"}, {"original_string": "private DatabaseConfiguration dbConfig;", "modifier": "private", "type": "DatabaseConfiguration", "declarator": "dbConfig", "var_name": "dbConfig"}], "file": "minnal-migrations/src/test/java/org/minnal/migrations/plugin/MigrationsPluginTest.java"}, "test_case": {"identifier": "shouldMigrateOnInit", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldMigrateOnInit() {\n\t\tplugin.init(application);\n\t\tverify(flyway).migrate();\n\t}", "signature": "void shouldMigrateOnInit()", "full_signature": "@Test public void shouldMigrateOnInit()", "class_method_signature": "MigrationsPluginTest.shouldMigrateOnInit()", "testcase": true, "constructor": false, "invocations": ["init", "migrate", "verify"]}, "focal_class": {"identifier": "MigrationsPlugin", "superclass": "", "interfaces": "implements Plugin", "fields": [{"original_string": "protected Flyway flyway;", "modifier": "protected", "type": "Flyway", "declarator": "flyway", "var_name": "flyway"}], "methods": [{"identifier": "MigrationsPlugin", "parameters": "()", "modifiers": "public", "return": "", "signature": " MigrationsPlugin()", "full_signature": "public  MigrationsPlugin()", "class_method_signature": "MigrationsPlugin.MigrationsPlugin()", "testcase": false, "constructor": true}, {"identifier": "MigrationsPlugin", "parameters": "(Flyway flyway)", "modifiers": "public", "return": "", "signature": " MigrationsPlugin(Flyway flyway)", "full_signature": "public  MigrationsPlugin(Flyway flyway)", "class_method_signature": "MigrationsPlugin.MigrationsPlugin(Flyway flyway)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "(Application<? extends ApplicationConfiguration> application)", "modifiers": "public", "return": "void", "signature": "void init(Application<? extends ApplicationConfiguration> application)", "full_signature": "public void init(Application<? extends ApplicationConfiguration> application)", "class_method_signature": "MigrationsPlugin.init(Application<? extends ApplicationConfiguration> application)", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void destroy()", "full_signature": "public void destroy()", "class_method_signature": "MigrationsPlugin.destroy()", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "(String jdbcUrl)", "modifiers": "private", "return": "URI", "signature": "URI getUri(String jdbcUrl)", "full_signature": "private URI getUri(String jdbcUrl)", "class_method_signature": "MigrationsPlugin.getUri(String jdbcUrl)", "testcase": false, "constructor": false}, {"identifier": "getUrl", "parameters": "(URI uri, boolean includeSchema)", "modifiers": "private", "return": "String", "signature": "String getUrl(URI uri, boolean includeSchema)", "full_signature": "private String getUrl(URI uri, boolean includeSchema)", "class_method_signature": "MigrationsPlugin.getUrl(URI uri, boolean includeSchema)", "testcase": false, "constructor": false}], "file": "minnal-migrations/src/main/java/org/minnal/migrations/plugin/MigrationsPlugin.java"}, "focal_method": {"identifier": "init", "parameters": "(Application<? extends ApplicationConfiguration> application)", "modifiers": "public", "return": "void", "body": "public void init(Application<? extends ApplicationConfiguration> application) {\n\t\tDatabaseConfiguration dbConfig = application.getConfiguration().getDatabaseConfiguration();\n\t\t\n\t\tURI uri = getUri(dbConfig.getUrl());\n\t\tif (Strings.isNullOrEmpty(uri.getPath())) {\n\t\t\tflyway.setDataSource(dbConfig.getUrl(), dbConfig.getUsername(), dbConfig.getPassword());\n\t\t} else {\n\t\t\tflyway.setDataSource(getUrl(uri, false), dbConfig.getUsername(), dbConfig.getPassword());\n\t\t\tflyway.setSchemas(uri.getPath().substring(1));\n\t\t}\n\t\tflyway.migrate();\n\t}", "signature": "void init(Application<? extends ApplicationConfiguration> application)", "full_signature": "public void init(Application<? extends ApplicationConfiguration> application)", "class_method_signature": "MigrationsPlugin.init(Application<? extends ApplicationConfiguration> application)", "testcase": false, "constructor": false, "invocations": ["getDatabaseConfiguration", "getConfiguration", "getUri", "getUrl", "isNullOrEmpty", "getPath", "setDataSource", "getUrl", "getUsername", "getPassword", "setDataSource", "getUrl", "getUsername", "getPassword", "setSchemas", "substring", "getPath", "migrate"]}, "repository": {"repo_id": 9884445, "url": "https://github.com/minnal/minnal", "language": "Java", "is_fork": false, "fork_count": 17, "stargazer_count": 26, "size": 88942, "license": "licensed"}}