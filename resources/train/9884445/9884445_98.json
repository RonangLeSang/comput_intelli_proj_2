{"test_class": {"identifier": "OneToManyAnnotationHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private OneToMany annotation;", "modifier": "private", "type": "OneToMany", "declarator": "annotation", "var_name": "annotation"}, {"original_string": "private OneToManyAnnotationHandler handler;", "modifier": "private", "type": "OneToManyAnnotationHandler", "declarator": "handler", "var_name": "handler"}, {"original_string": "private EntityMetaData metaData;", "modifier": "private", "type": "EntityMetaData", "declarator": "metaData", "var_name": "metaData"}], "file": "minnal-jaxrs/minnal-instrumentation-jaxrs/src/test/java/org/minnal/instrument/entity/metadata/handler/OneToManyAnnotationHandlerTest.java"}, "test_case": {"identifier": "shouldSetRightCollectionTypeWhenOnField", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldSetRightCollectionTypeWhenOnField() throws Exception {\n\t\tField field = DummyModel.class.getDeclaredField(\"siblings\");\n\t\thandler.handle(metaData, annotation, field);\n\t\tCollectionMetaData data = new CollectionMetaData(DummyModel.class, \"siblings\", DummyModel.class, List.class, true);\n\t\tverify(metaData).addCollection(data);\n\t}", "signature": "void shouldSetRightCollectionTypeWhenOnField()", "full_signature": "@Test public void shouldSetRightCollectionTypeWhenOnField()", "class_method_signature": "OneToManyAnnotationHandlerTest.shouldSetRightCollectionTypeWhenOnField()", "testcase": true, "constructor": false, "invocations": ["getDeclaredField", "handle", "addCollection", "verify"]}, "focal_class": {"identifier": "OneToManyAnnotationHandler", "superclass": "extends AbstractEntityAnnotationHandler", "interfaces": "", "fields": [], "methods": [{"identifier": "handle", "parameters": "(EntityMetaData metaData, Annotation annotation, Method method)", "modifiers": "@Override public", "return": "void", "signature": "void handle(EntityMetaData metaData, Annotation annotation, Method method)", "full_signature": "@Override public void handle(EntityMetaData metaData, Annotation annotation, Method method)", "class_method_signature": "OneToManyAnnotationHandler.handle(EntityMetaData metaData, Annotation annotation, Method method)", "testcase": false, "constructor": false}, {"identifier": "handle", "parameters": "(EntityMetaData metaData, Annotation annotation, Field field)", "modifiers": "@Override public", "return": "void", "signature": "void handle(EntityMetaData metaData, Annotation annotation, Field field)", "full_signature": "@Override public void handle(EntityMetaData metaData, Annotation annotation, Field field)", "class_method_signature": "OneToManyAnnotationHandler.handle(EntityMetaData metaData, Annotation annotation, Field field)", "testcase": false, "constructor": false}, {"identifier": "getAnnotationType", "parameters": "()", "modifiers": "@Override public", "return": "Class<?>", "signature": "Class<?> getAnnotationType()", "full_signature": "@Override public Class<?> getAnnotationType()", "class_method_signature": "OneToManyAnnotationHandler.getAnnotationType()", "testcase": false, "constructor": false}], "file": "minnal-jaxrs/minnal-instrumentation-jaxrs/src/main/java/org/minnal/instrument/entity/metadata/handler/OneToManyAnnotationHandler.java"}, "focal_method": {"identifier": "handle", "parameters": "(EntityMetaData metaData, Annotation annotation, Method method)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void handle(EntityMetaData metaData, Annotation annotation, Method method) {\n\t\tClass<?> elementType = getElementType(method.getGenericReturnType());\n\t\tCollectionMetaData collectionMetaData = new CollectionMetaData(metaData.getEntityClass(), getGetterName(method, false), \n\t\t\t\telementType, method.getReturnType(), isEntity(elementType));\n\t\tmetaData.addCollection(collectionMetaData);\n\t}", "signature": "void handle(EntityMetaData metaData, Annotation annotation, Method method)", "full_signature": "@Override public void handle(EntityMetaData metaData, Annotation annotation, Method method)", "class_method_signature": "OneToManyAnnotationHandler.handle(EntityMetaData metaData, Annotation annotation, Method method)", "testcase": false, "constructor": false, "invocations": ["getElementType", "getGenericReturnType", "getEntityClass", "getGetterName", "getReturnType", "isEntity", "addCollection"]}, "repository": {"repo_id": 9884445, "url": "https://github.com/minnal/minnal", "language": "Java", "is_fork": false, "fork_count": 17, "stargazer_count": 26, "size": 88942, "license": "licensed"}}