{"test_class": {"identifier": "MocoRequestHitTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final HttpsCertificate DEFAULT_CERTIFICATE = certificate(pathResource(\"cert.jks\"), \"mocohttps\", \"mocohttps\");", "modifier": "private static final", "type": "HttpsCertificate", "declarator": "DEFAULT_CERTIFICATE = certificate(pathResource(\"cert.jks\"), \"mocohttps\", \"mocohttps\")", "var_name": "DEFAULT_CERTIFICATE"}, {"original_string": "private MocoTestHelper helper;", "modifier": "private", "type": "MocoTestHelper", "declarator": "helper", "var_name": "helper"}, {"original_string": "private RequestHit hit;", "modifier": "private", "type": "RequestHit", "declarator": "hit", "var_name": "hit"}], "file": "moco-core/src/test/java/com/github/dreamhead/moco/MocoRequestHitTest.java"}, "test_case": {"identifier": "should_verify_expected_request_and_log_at_same_time_for_https", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_verify_expected_request_and_log_at_same_time_for_https() throws Exception {\n        final HttpServer server = httpsServer(port(), DEFAULT_CERTIFICATE, hit, log());\n        server.get(by(uri(\"/foo\"))).response(\"bar\");\n\n        running(server, () -> assertThat(helper.get(remoteHttpsUrl(\"/foo\")), is(\"bar\")));\n\n        hit.verify(by(uri(\"/foo\")), times(1));\n    }", "signature": "void should_verify_expected_request_and_log_at_same_time_for_https()", "full_signature": "@Test public void should_verify_expected_request_and_log_at_same_time_for_https()", "class_method_signature": "MocoRequestHitTest.should_verify_expected_request_and_log_at_same_time_for_https()", "testcase": true, "constructor": false, "invocations": ["httpsServer", "port", "log", "response", "get", "by", "uri", "running", "assertThat", "get", "remoteHttpsUrl", "is", "verify", "by", "uri", "times"]}, "focal_class": {"identifier": "MocoRequestHit", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "requestHit", "parameters": "()", "modifiers": "public static", "return": "RequestHit", "signature": "RequestHit requestHit()", "full_signature": "public static RequestHit requestHit()", "class_method_signature": "MocoRequestHit.requestHit()", "testcase": false, "constructor": false}, {"identifier": "unexpected", "parameters": "()", "modifiers": "public static", "return": "UnexpectedRequestMatcher", "signature": "UnexpectedRequestMatcher unexpected()", "full_signature": "public static UnexpectedRequestMatcher unexpected()", "class_method_signature": "MocoRequestHit.unexpected()", "testcase": false, "constructor": false}, {"identifier": "never", "parameters": "()", "modifiers": "public static", "return": "VerificationMode", "signature": "VerificationMode never()", "full_signature": "public static VerificationMode never()", "class_method_signature": "MocoRequestHit.never()", "testcase": false, "constructor": false}, {"identifier": "once", "parameters": "()", "modifiers": "public static", "return": "VerificationMode", "signature": "VerificationMode once()", "full_signature": "public static VerificationMode once()", "class_method_signature": "MocoRequestHit.once()", "testcase": false, "constructor": false}, {"identifier": "times", "parameters": "(final int count)", "modifiers": "public static", "return": "VerificationMode", "signature": "VerificationMode times(final int count)", "full_signature": "public static VerificationMode times(final int count)", "class_method_signature": "MocoRequestHit.times(final int count)", "testcase": false, "constructor": false}, {"identifier": "atLeast", "parameters": "(final int count)", "modifiers": "public static", "return": "VerificationMode", "signature": "VerificationMode atLeast(final int count)", "full_signature": "public static VerificationMode atLeast(final int count)", "class_method_signature": "MocoRequestHit.atLeast(final int count)", "testcase": false, "constructor": false}, {"identifier": "atMost", "parameters": "(final int count)", "modifiers": "public static", "return": "VerificationMode", "signature": "VerificationMode atMost(final int count)", "full_signature": "public static VerificationMode atMost(final int count)", "class_method_signature": "MocoRequestHit.atMost(final int count)", "testcase": false, "constructor": false}, {"identifier": "between", "parameters": "(final int min, final int max)", "modifiers": "public static", "return": "VerificationMode", "signature": "VerificationMode between(final int min, final int max)", "full_signature": "public static VerificationMode between(final int min, final int max)", "class_method_signature": "MocoRequestHit.between(final int min, final int max)", "testcase": false, "constructor": false}, {"identifier": "MocoRequestHit", "parameters": "()", "modifiers": "private", "return": "", "signature": " MocoRequestHit()", "full_signature": "private  MocoRequestHit()", "class_method_signature": "MocoRequestHit.MocoRequestHit()", "testcase": false, "constructor": true}], "file": "moco-core/src/main/java/com/github/dreamhead/moco/MocoRequestHit.java"}, "focal_method": {"identifier": "times", "parameters": "(final int count)", "modifiers": "public static", "return": "VerificationMode", "body": "public static VerificationMode times(final int count) {\n        checkArgument(count >= 0, \"Times count must not be less than zero\");\n        return new TimesVerification(count);\n    }", "signature": "VerificationMode times(final int count)", "full_signature": "public static VerificationMode times(final int count)", "class_method_signature": "MocoRequestHit.times(final int count)", "testcase": false, "constructor": false, "invocations": ["checkArgument"]}, "repository": {"repo_id": 6275822, "url": "https://github.com/dreamhead/moco", "language": "Java", "is_fork": false, "fork_count": 839, "stargazer_count": 3213, "size": 4874, "license": "licensed"}}