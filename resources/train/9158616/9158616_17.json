{"test_class": {"identifier": "OrderMapper1_12Test", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final CareSettingType OUT_PATIENT_CARE_SETTING = CareSettingType.OUTPATIENT;", "modifier": "private static final", "type": "CareSettingType", "declarator": "OUT_PATIENT_CARE_SETTING = CareSettingType.OUTPATIENT", "var_name": "OUT_PATIENT_CARE_SETTING"}, {"original_string": "private static final String DRUG_ORDER_TYPE = \"Drug Order\";", "modifier": "private static final", "type": "String", "declarator": "DRUG_ORDER_TYPE = \"Drug Order\"", "var_name": "DRUG_ORDER_TYPE"}, {"original_string": "private static final String ORDER_TYPE = \"Order\";", "modifier": "private static final", "type": "String", "declarator": "ORDER_TYPE = \"Order\"", "var_name": "ORDER_TYPE"}, {"original_string": "private static final String DAY_DURATION_UNIT = \"day\";", "modifier": "private static final", "type": "String", "declarator": "DAY_DURATION_UNIT = \"day\"", "var_name": "DAY_DURATION_UNIT"}, {"original_string": "private static final String DRUG_UUID = \"drug-uuid\";", "modifier": "private static final", "type": "String", "declarator": "DRUG_UUID = \"drug-uuid\"", "var_name": "DRUG_UUID"}, {"original_string": "private static final String ORDER_UUID = \"order-uuid\";", "modifier": "private static final", "type": "String", "declarator": "ORDER_UUID = \"order-uuid\"", "var_name": "ORDER_UUID"}, {"original_string": "private static final String CAPSULE_DOSE_UNIT = \"Capsule\";", "modifier": "private static final", "type": "String", "declarator": "CAPSULE_DOSE_UNIT = \"Capsule\"", "var_name": "CAPSULE_DOSE_UNIT"}, {"original_string": "private static final String TABLET_DOSAGE_FORM = \"TABLET\";", "modifier": "private static final", "type": "String", "declarator": "TABLET_DOSAGE_FORM = \"TABLET\"", "var_name": "TABLET_DOSAGE_FORM"}, {"original_string": "private static final String MOUTH_ROUTE = \"mouth\";", "modifier": "private static final", "type": "String", "declarator": "MOUTH_ROUTE = \"mouth\"", "var_name": "MOUTH_ROUTE"}, {"original_string": "private static final String TABLET_QUANTITY_UNIT = \"TABLET\";", "modifier": "private static final", "type": "String", "declarator": "TABLET_QUANTITY_UNIT = \"TABLET\"", "var_name": "TABLET_QUANTITY_UNIT"}, {"original_string": "private static final String TWICE_A_DAY_FREQUENCY = \"Twice a day\";", "modifier": "private static final", "type": "String", "declarator": "TWICE_A_DAY_FREQUENCY = \"Twice a day\"", "var_name": "TWICE_A_DAY_FREQUENCY"}, {"original_string": "private static final String FREE_TEXT_DRUG_NAME = \"Free Text Drug\";", "modifier": "private static final", "type": "String", "declarator": "FREE_TEXT_DRUG_NAME = \"Free Text Drug\"", "var_name": "FREE_TEXT_DRUG_NAME"}, {"original_string": "private OrderMapper1_12 orderMapper1_12;", "modifier": "private", "type": "OrderMapper1_12", "declarator": "orderMapper1_12", "var_name": "orderMapper1_12"}], "file": "api-1.12/src/test/java/org/openmrs/module/emrapi/encounter/mapper/OrderMapper1_12Test.java"}, "test_case": {"identifier": "shouldMapNewDrugOrder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldMapNewDrugOrder() throws ParseException, NoSuchFieldException, IllegalAccessException {\n\n        DrugOrder openMrsDrugOrder = drugOrder(CareSetting.CareSettingType.OUTPATIENT, 3, \"3-0-2\", 5, \"before meals\", \"boil in water\", null, \"ORD-100\");\n        Concept concept = concept(\"newConcept\", \"newConceptDataType\", \"newConceptUuid\");\n\n        openMrsDrugOrder.setConcept(concept);\n        EncounterTransaction.DrugOrder drugOrder = orderMapper1_12.mapDrugOrder(openMrsDrugOrder);\n\n        assertThat(drugOrder.getCareSetting(), is(equalTo(OUT_PATIENT_CARE_SETTING)));\n        assertThat(drugOrder.getAction(), is(equalTo(Order.Action.NEW.name())));\n        assertThat(drugOrder.getDrug().getUuid(), is(equalTo(DRUG_UUID)));\n        assertThat(drugOrder.getDosingInstructionType(), is(equalTo(SimpleDosingInstructions.class.getName())));\n        assertThat(drugOrder.getDuration(), is(equalTo(5)));\n        assertThat(drugOrder.getDurationUnits(), is(equalTo(DAY_DURATION_UNIT)));\n\n        assertThat(drugOrder.getDateActivated(), is(equalTo(new LocalDate().toDate())));\n        assertThat(drugOrder.getScheduledDate(), is(equalTo(new LocalDate().plusDays(3).toDate())));\n        assertThat(drugOrder.getEffectiveStartDate(), is(equalTo(new LocalDate().plusDays(3).toDate())));\n        assertThat(drugOrder.getAutoExpireDate(), is(equalTo(new LocalDate().plusDays(8).toDate())));\n        assertThat(drugOrder.getEffectiveStopDate(), is(equalTo(new LocalDate().plusDays(8).toDate())));\n\n        assertThat(drugOrder.getDosingInstructions().getDose(), is(equalTo(2.0)));\n        assertThat(drugOrder.getDosingInstructions().getDoseUnits(), is(equalTo(CAPSULE_DOSE_UNIT)));\n\n        assertThat(drugOrder.getDosingInstructions().getRoute(), is(equalTo(MOUTH_ROUTE)));\n        assertTrue(drugOrder.getDosingInstructions().getAsNeeded());\n\n        assertThat(drugOrder.getDosingInstructions().getFrequency(), is(equalTo(TWICE_A_DAY_FREQUENCY)));\n\n        assertThat(drugOrder.getDosingInstructions().getQuantity(), is(equalTo(1.0)));\n        assertThat(drugOrder.getDosingInstructions().getQuantityUnits(), is(equalTo(TABLET_QUANTITY_UNIT)));\n        assertThat(drugOrder.getDosingInstructions().getAdministrationInstructions(), is(equalTo(\"3-0-2\")));\n\n        assertThat(drugOrder.getInstructions(), is(equalTo(\"before meals\")));\n        assertThat(drugOrder.getCommentToFulfiller(), is(equalTo(\"boil in water\")));\n        assertThat(drugOrder.getOrderNumber(), is(equalTo(\"ORD-100\")));\n        assertThat(drugOrder.getConcept().getName(), is(equalTo(\"newConcept\")));\n        assertThat(drugOrder.getConcept().getUuid(), is(equalTo(\"newConceptUuid\")));\n    }", "signature": "void shouldMapNewDrugOrder()", "full_signature": "@Test public void shouldMapNewDrugOrder()", "class_method_signature": "OrderMapper1_12Test.shouldMapNewDrugOrder()", "testcase": true, "constructor": false, "invocations": ["drugOrder", "concept", "setConcept", "mapDrugOrder", "assertThat", "getCareSetting", "is", "equalTo", "assertThat", "getAction", "is", "equalTo", "name", "assertThat", "getUuid", "getDrug", "is", "equalTo", "assertThat", "getDosingInstructionType", "is", "equalTo", "getName", "assertThat", "getDuration", "is", "equalTo", "assertThat", "getDurationUnits", "is", "equalTo", "assertThat", "getDateActivated", "is", "equalTo", "toDate", "assertThat", "getScheduledDate", "is", "equalTo", "toDate", "plusDays", "assertThat", "getEffectiveStartDate", "is", "equalTo", "toDate", "plusDays", "assertThat", "getAutoExpireDate", "is", "equalTo", "toDate", "plusDays", "assertThat", "getEffectiveStopDate", "is", "equalTo", "toDate", "plusDays", "assertThat", "getDose", "getDosingInstructions", "is", "equalTo", "assertThat", "getDoseUnits", "getDosingInstructions", "is", "equalTo", "assertThat", "getRoute", "getDosingInstructions", "is", "equalTo", "assertTrue", "getAsNeeded", "getDosingInstructions", "assertThat", "getFrequency", "getDosingInstructions", "is", "equalTo", "assertThat", "getQuantity", "getDosingInstructions", "is", "equalTo", "assertThat", "getQuantityUnits", "getDosingInstructions", "is", "equalTo", "assertThat", "getAdministrationInstructions", "getDosingInstructions", "is", "equalTo", "assertThat", "getInstructions", "is", "equalTo", "assertThat", "getCommentToFulfiller", "is", "equalTo", "assertThat", "getOrderNumber", "is", "equalTo", "assertThat", "getName", "getConcept", "is", "equalTo", "assertThat", "getUuid", "getConcept", "is", "equalTo"]}, "focal_class": {"identifier": "OrderMapper1_12", "superclass": "", "interfaces": "implements OrderMapper", "fields": [{"original_string": "private final ConceptMapper conceptMapper = new ConceptMapper();", "modifier": "private final", "type": "ConceptMapper", "declarator": "conceptMapper = new ConceptMapper()", "var_name": "conceptMapper"}], "methods": [{"identifier": "mapDrugOrders", "parameters": "(Encounter encounter)", "modifiers": "@Override public", "return": "List<EncounterTransaction.DrugOrder>", "signature": "List<EncounterTransaction.DrugOrder> mapDrugOrders(Encounter encounter)", "full_signature": "@Override public List<EncounterTransaction.DrugOrder> mapDrugOrders(Encounter encounter)", "class_method_signature": "OrderMapper1_12.mapDrugOrders(Encounter encounter)", "testcase": false, "constructor": false}, {"identifier": "sortByOrderNumber", "parameters": "(List<EncounterTransaction.DrugOrder> orders)", "modifiers": "private", "return": "void", "signature": "void sortByOrderNumber(List<EncounterTransaction.DrugOrder> orders)", "full_signature": "private void sortByOrderNumber(List<EncounterTransaction.DrugOrder> orders)", "class_method_signature": "OrderMapper1_12.sortByOrderNumber(List<EncounterTransaction.DrugOrder> orders)", "testcase": false, "constructor": false}, {"identifier": "mapOrders", "parameters": "(Encounter encounter)", "modifiers": "@Override public", "return": "List<EncounterTransaction.Order>", "signature": "List<EncounterTransaction.Order> mapOrders(Encounter encounter)", "full_signature": "@Override public List<EncounterTransaction.Order> mapOrders(Encounter encounter)", "class_method_signature": "OrderMapper1_12.mapOrders(Encounter encounter)", "testcase": false, "constructor": false}, {"identifier": "mapDrugOrder", "parameters": "(DrugOrder openMRSDrugOrder)", "modifiers": "@Override public", "return": "EncounterTransaction.DrugOrder", "signature": "EncounterTransaction.DrugOrder mapDrugOrder(DrugOrder openMRSDrugOrder)", "full_signature": "@Override public EncounterTransaction.DrugOrder mapDrugOrder(DrugOrder openMRSDrugOrder)", "class_method_signature": "OrderMapper1_12.mapDrugOrder(DrugOrder openMRSDrugOrder)", "testcase": false, "constructor": false}, {"identifier": "mapOrder", "parameters": "(Order order)", "modifiers": "@Override public", "return": "EncounterTransaction.Order", "signature": "EncounterTransaction.Order mapOrder(Order order)", "full_signature": "@Override public EncounterTransaction.Order mapOrder(Order order)", "class_method_signature": "OrderMapper1_12.mapOrder(Order order)", "testcase": false, "constructor": false}, {"identifier": "getConceptName", "parameters": "(Concept concept)", "modifiers": "private", "return": "String", "signature": "String getConceptName(Concept concept)", "full_signature": "private String getConceptName(Concept concept)", "class_method_signature": "OrderMapper1_12.getConceptName(Concept concept)", "testcase": false, "constructor": false}], "file": "api-1.12/src/main/java/org/openmrs/module/emrapi/encounter/mapper/OrderMapper1_12.java"}, "focal_method": {"identifier": "mapDrugOrder", "parameters": "(DrugOrder openMRSDrugOrder)", "modifiers": "@Override public", "return": "EncounterTransaction.DrugOrder", "body": "@Override\n    public EncounterTransaction.DrugOrder mapDrugOrder(DrugOrder openMRSDrugOrder) {\n        EncounterTransaction.DrugOrder drugOrder = new EncounterTransaction.DrugOrder();\n        drugOrder.setUuid(openMRSDrugOrder.getUuid());\n        if (openMRSDrugOrder.getCareSetting() != null) {\n            drugOrder.setCareSetting(CareSettingType.valueOf(openMRSDrugOrder.getCareSetting().getCareSettingType().toString()));\n        }\n        drugOrder.setAction(openMRSDrugOrder.getAction().name());\n        drugOrder.setOrderType(openMRSDrugOrder.getOrderType().getName());\n\n        Order previousOrder = openMRSDrugOrder.getPreviousOrder();\n        if (previousOrder != null && StringUtils.isNotBlank(previousOrder.getUuid())) {\n            drugOrder.setPreviousOrderUuid(previousOrder.getUuid());\n        }\n\n        drugOrder.setDrugNonCoded(openMRSDrugOrder.getDrugNonCoded());\n        if (openMRSDrugOrder.getDrug() != null){\n            EncounterTransaction.Drug encounterTransactionDrug = new DrugMapper1_12().map(openMRSDrugOrder.getDrug());\n            drugOrder.setDrug(encounterTransactionDrug);\n        }\n\n        drugOrder.setDosingInstructionType(openMRSDrugOrder.getDosingType().getName());\n        drugOrder.setDuration(openMRSDrugOrder.getDuration());\n        drugOrder.setDurationUnits(getConceptName(openMRSDrugOrder.getDurationUnits()));\n\n        drugOrder.setConcept(conceptMapper.map(openMRSDrugOrder.getConcept()));\n        drugOrder.setScheduledDate(openMRSDrugOrder.getScheduledDate());\n        drugOrder.setDateActivated(openMRSDrugOrder.getDateActivated());\n        drugOrder.setEffectiveStartDate(openMRSDrugOrder.getEffectiveStartDate());\n        drugOrder.setAutoExpireDate(openMRSDrugOrder.getAutoExpireDate());\n        drugOrder.setEffectiveStopDate(openMRSDrugOrder.getEffectiveStopDate());\n\n        drugOrder.setDateStopped(openMRSDrugOrder.getDateStopped());\n\n        EncounterTransaction.DosingInstructions dosingInstructions = new EncounterTransaction.DosingInstructions();\n        dosingInstructions.setDose(openMRSDrugOrder.getDose());\n        dosingInstructions.setDoseUnits(getConceptName(openMRSDrugOrder.getDoseUnits()));\n        dosingInstructions.setRoute(getConceptName(openMRSDrugOrder.getRoute()));\n        dosingInstructions.setAsNeeded(openMRSDrugOrder.getAsNeeded());\n\n        if (openMRSDrugOrder.getFrequency() != null) {\n            dosingInstructions.setFrequency(openMRSDrugOrder.getFrequency().getName());\n        }\n        if (openMRSDrugOrder.getQuantity() != null) {\n            dosingInstructions.setQuantity(openMRSDrugOrder.getQuantity());\n        }\n        dosingInstructions.setQuantityUnits(getConceptName(openMRSDrugOrder.getQuantityUnits()));\n        dosingInstructions.setAdministrationInstructions(openMRSDrugOrder.getDosingInstructions());\n        drugOrder.setDosingInstructions(dosingInstructions);\n\n        drugOrder.setInstructions(openMRSDrugOrder.getInstructions());\n        drugOrder.setCommentToFulfiller(openMRSDrugOrder.getCommentToFulfiller());\n\n        drugOrder.setVoided(openMRSDrugOrder.getVoided());\n        drugOrder.setVoidReason(openMRSDrugOrder.getVoidReason());\n        drugOrder.setOrderNumber(openMRSDrugOrder.getOrderNumber());\n\n        drugOrder.setOrderReasonConcept(conceptMapper.map(openMRSDrugOrder.getOrderReason()));\n        drugOrder.setOrderReasonText(openMRSDrugOrder.getOrderReasonNonCoded());\n        OrderGroup openMRSOrderGroup = openMRSDrugOrder.getOrderGroup();\n        if(openMRSOrderGroup != null) {\n            EncounterTransaction.OrderGroup orderGroup = new EncounterTransaction.OrderGroup(openMRSOrderGroup.getUuid());\n            EncounterTransaction.OrderSet orderSet = new EncounterTransaction.OrderSet(openMRSOrderGroup.getOrderSet().getUuid());\n            orderGroup.setOrderSet(orderSet);\n            drugOrder.setOrderGroup(orderGroup);\n            drugOrder.setSortWeight(openMRSDrugOrder.getSortWeight());\n        }\n        return drugOrder;\n    }", "signature": "EncounterTransaction.DrugOrder mapDrugOrder(DrugOrder openMRSDrugOrder)", "full_signature": "@Override public EncounterTransaction.DrugOrder mapDrugOrder(DrugOrder openMRSDrugOrder)", "class_method_signature": "OrderMapper1_12.mapDrugOrder(DrugOrder openMRSDrugOrder)", "testcase": false, "constructor": false, "invocations": ["setUuid", "getUuid", "getCareSetting", "setCareSetting", "valueOf", "toString", "getCareSettingType", "getCareSetting", "setAction", "name", "getAction", "setOrderType", "getName", "getOrderType", "getPreviousOrder", "isNotBlank", "getUuid", "setPreviousOrderUuid", "getUuid", "setDrugNonCoded", "getDrugNonCoded", "getDrug", "map", "getDrug", "setDrug", "setDosingInstructionType", "getName", "getDosingType", "setDuration", "getDuration", "setDurationUnits", "getConceptName", "getDurationUnits", "setConcept", "map", "getConcept", "setScheduledDate", "getScheduledDate", "setDateActivated", "getDateActivated", "setEffectiveStartDate", "getEffectiveStartDate", "setAutoExpireDate", "getAutoExpireDate", "setEffectiveStopDate", "getEffectiveStopDate", "setDateStopped", "getDateStopped", "setDose", "getDose", "setDoseUnits", "getConceptName", "getDoseUnits", "setRoute", "getConceptName", "getRoute", "setAsNeeded", "getAsNeeded", "getFrequency", "setFrequency", "getName", "getFrequency", "getQuantity", "setQuantity", "getQuantity", "setQuantityUnits", "getConceptName", "getQuantityUnits", "setAdministrationInstructions", "getDosingInstructions", "setDosingInstructions", "setInstructions", "getInstructions", "setCommentToFulfiller", "getCommentToFulfiller", "setVoided", "getVoided", "setVoidReason", "getVoidReason", "setOrderNumber", "getOrderNumber", "setOrderReasonConcept", "map", "getOrderReason", "setOrderReasonText", "getOrderReasonNonCoded", "getOrderGroup", "getUuid", "getUuid", "getOrderSet", "setOrderSet", "setOrderGroup", "setSortWeight", "getSortWeight"]}, "repository": {"repo_id": 9158616, "url": "https://github.com/openmrs/openmrs-module-emrapi", "language": "Java", "is_fork": false, "fork_count": 117, "stargazer_count": 12, "size": 2691, "license": "licensed"}}