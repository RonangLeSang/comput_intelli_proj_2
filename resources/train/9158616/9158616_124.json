{"test_class": {"identifier": "GeneralUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "api/src/test/java/org/openmrs/module/emrapi/utils/GeneralUtilsTest.java"}, "test_case": {"identifier": "setPropertyIfDifferent_shouldChangePropertyWhenDifferent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setPropertyIfDifferent_shouldChangePropertyWhenDifferent() throws Exception {\n        Date date = new Date();\n        Patient p = new Patient();\n\n        boolean changed = GeneralUtils.setPropertyIfDifferent(p, \"birthdate\", date);\n        assertThat(changed, is(true));\n        assertThat(p.getBirthdate(), is(date));\n    }", "signature": "void setPropertyIfDifferent_shouldChangePropertyWhenDifferent()", "full_signature": "@Test public void setPropertyIfDifferent_shouldChangePropertyWhenDifferent()", "class_method_signature": "GeneralUtilsTest.setPropertyIfDifferent_shouldChangePropertyWhenDifferent()", "testcase": true, "constructor": false, "invocations": ["setPropertyIfDifferent", "assertThat", "is", "assertThat", "getBirthdate", "is"]}, "focal_class": {"identifier": "GeneralUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getDefaultLocale", "parameters": "(User user)", "modifiers": "public static", "return": "Locale", "signature": "Locale getDefaultLocale(User user)", "full_signature": "public static Locale getDefaultLocale(User user)", "class_method_signature": "GeneralUtils.getDefaultLocale(User user)", "testcase": false, "constructor": false}, {"identifier": "normalizeLocale", "parameters": "(String localeString)", "modifiers": "public static", "return": "Locale", "signature": "Locale normalizeLocale(String localeString)", "full_signature": "public static Locale normalizeLocale(String localeString)", "class_method_signature": "GeneralUtils.normalizeLocale(String localeString)", "testcase": false, "constructor": false}, {"identifier": "getPatientIdentifierType", "parameters": "(String id)", "modifiers": "public static", "return": "PatientIdentifierType", "signature": "PatientIdentifierType getPatientIdentifierType(String id)", "full_signature": "public static PatientIdentifierType getPatientIdentifierType(String id)", "class_method_signature": "GeneralUtils.getPatientIdentifierType(String id)", "testcase": false, "constructor": false}, {"identifier": "getPatientIdentifierType", "parameters": "(String id, PatientService patientService)", "modifiers": "public static", "return": "PatientIdentifierType", "signature": "PatientIdentifierType getPatientIdentifierType(String id, PatientService patientService)", "full_signature": "public static PatientIdentifierType getPatientIdentifierType(String id, PatientService patientService)", "class_method_signature": "GeneralUtils.getPatientIdentifierType(String id, PatientService patientService)", "testcase": false, "constructor": false}, {"identifier": "isValidUuidFormat", "parameters": "(String uuid)", "modifiers": "public static", "return": "boolean", "signature": "boolean isValidUuidFormat(String uuid)", "full_signature": "public static boolean isValidUuidFormat(String uuid)", "class_method_signature": "GeneralUtils.isValidUuidFormat(String uuid)", "testcase": false, "constructor": false}, {"identifier": "getPersonAddressProperty", "parameters": "(PersonAddress address, String property)", "modifiers": "public static", "return": "String", "signature": "String getPersonAddressProperty(PersonAddress address, String property)", "full_signature": "public static String getPersonAddressProperty(PersonAddress address, String property)", "class_method_signature": "GeneralUtils.getPersonAddressProperty(PersonAddress address, String property)", "testcase": false, "constructor": false}, {"identifier": "getPatientIdentifier", "parameters": "(Patient patient, PatientIdentifierType patientIdentifierType, Location location)", "modifiers": "public static", "return": "PatientIdentifier", "signature": "PatientIdentifier getPatientIdentifier(Patient patient, PatientIdentifierType patientIdentifierType, Location location)", "full_signature": "public static PatientIdentifier getPatientIdentifier(Patient patient, PatientIdentifierType patientIdentifierType, Location location)", "class_method_signature": "GeneralUtils.getPatientIdentifier(Patient patient, PatientIdentifierType patientIdentifierType, Location location)", "testcase": false, "constructor": false}, {"identifier": "setPropertyIfDifferent", "parameters": "(Object bean, String propertyName, Object newValue)", "modifiers": "public static", "return": "boolean", "signature": "boolean setPropertyIfDifferent(Object bean, String propertyName, Object newValue)", "full_signature": "public static boolean setPropertyIfDifferent(Object bean, String propertyName, Object newValue)", "class_method_signature": "GeneralUtils.setPropertyIfDifferent(Object bean, String propertyName, Object newValue)", "testcase": false, "constructor": false}, {"identifier": "getLastViewedPatients", "parameters": "(User user)", "modifiers": "public static", "return": "List<Patient>", "signature": "List<Patient> getLastViewedPatients(User user)", "full_signature": "public static List<Patient> getLastViewedPatients(User user)", "class_method_signature": "GeneralUtils.getLastViewedPatients(User user)", "testcase": false, "constructor": false}, {"identifier": "getCurrentDateIfNull", "parameters": "(Date date)", "modifiers": "public static", "return": "Date", "signature": "Date getCurrentDateIfNull(Date date)", "full_signature": "public static Date getCurrentDateIfNull(Date date)", "class_method_signature": "GeneralUtils.getCurrentDateIfNull(Date date)", "testcase": false, "constructor": false}], "file": "api/src/main/java/org/openmrs/module/emrapi/utils/GeneralUtils.java"}, "focal_method": {"identifier": "setPropertyIfDifferent", "parameters": "(Object bean, String propertyName, Object newValue)", "modifiers": "public static", "return": "boolean", "body": "public static boolean setPropertyIfDifferent(Object bean, String propertyName, Object newValue) {\n        try {\n            Object currentValue = PropertyUtils.getProperty(bean, propertyName);\n            if (OpenmrsUtil.nullSafeEquals(currentValue, newValue)) {\n                return false;\n            } else {\n                PropertyUtils.setProperty(bean, propertyName, newValue);\n                return true;\n            }\n        } catch (Exception ex) {\n            throw new RuntimeException(ex);\n        }\n    }", "signature": "boolean setPropertyIfDifferent(Object bean, String propertyName, Object newValue)", "full_signature": "public static boolean setPropertyIfDifferent(Object bean, String propertyName, Object newValue)", "class_method_signature": "GeneralUtils.setPropertyIfDifferent(Object bean, String propertyName, Object newValue)", "testcase": false, "constructor": false, "invocations": ["getProperty", "nullSafeEquals", "setProperty"]}, "repository": {"repo_id": 9158616, "url": "https://github.com/openmrs/openmrs-module-emrapi", "language": "Java", "is_fork": false, "fork_count": 117, "stargazer_count": 12, "size": 2691, "license": "licensed"}}