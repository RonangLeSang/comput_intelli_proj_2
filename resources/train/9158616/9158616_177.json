{"test_class": {"identifier": "VisitDomainWrapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private VisitDomainWrapper visitDomainWrapper;", "modifier": "private", "type": "VisitDomainWrapper", "declarator": "visitDomainWrapper", "var_name": "visitDomainWrapper"}, {"original_string": "private Visit visit;", "modifier": "private", "type": "Visit", "declarator": "visit", "var_name": "visit"}, {"original_string": "private EmrApiProperties emrApiProperties;", "modifier": "private", "type": "EmrApiProperties", "declarator": "emrApiProperties", "var_name": "emrApiProperties"}, {"original_string": "private DispositionService dispositionService;", "modifier": "private", "type": "DispositionService", "declarator": "dispositionService", "var_name": "dispositionService"}, {"original_string": "private ConceptService conceptService;", "modifier": "private", "type": "ConceptService", "declarator": "conceptService", "var_name": "conceptService"}, {"original_string": "private DiagnosisMetadata diagnosisMetadata;", "modifier": "private", "type": "DiagnosisMetadata", "declarator": "diagnosisMetadata", "var_name": "diagnosisMetadata"}, {"original_string": "private DispositionDescriptor dispositionDescriptor;", "modifier": "private", "type": "DispositionDescriptor", "declarator": "dispositionDescriptor", "var_name": "dispositionDescriptor"}], "file": "api/src/test/java/org/openmrs/module/emrapi/visit/VisitDomainWrapperTest.java"}, "test_case": {"identifier": "shouldUseTheStopDateOfTheVisitForEncounterStopDateRange", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldUseTheStopDateOfTheVisitForEncounterStopDateRange() {\n        DateTime visitEndDate = new DateTime(2013, 1, 15, 12, 12, 12);\n\n        Visit visit = new Visit();\n        visit.setStopDatetime(visitEndDate.toDate());\n\n        VisitDomainWrapper wrapper = new VisitDomainWrapper(visit);\n\n        assertThat(wrapper.getEncounterStopDateRange(), is(visitEndDate.toDate()));\n    }", "signature": "void shouldUseTheStopDateOfTheVisitForEncounterStopDateRange()", "full_signature": "@Test public void shouldUseTheStopDateOfTheVisitForEncounterStopDateRange()", "class_method_signature": "VisitDomainWrapperTest.shouldUseTheStopDateOfTheVisitForEncounterStopDateRange()", "testcase": true, "constructor": false, "invocations": ["setStopDatetime", "toDate", "assertThat", "getEncounterStopDateRange", "is", "toDate"]}, "focal_class": {"identifier": "VisitDomainWrapper", "superclass": "", "interfaces": "implements DomainWrapper", "fields": [{"original_string": "private static final Log log = LogFactory.getLog(VisitDomainWrapper.class);", "modifier": "private static final", "type": "Log", "declarator": "log = LogFactory.getLog(VisitDomainWrapper.class)", "var_name": "log"}, {"original_string": "@Qualifier(\"emrApiProperties\")\n    @Autowired\n    protected EmrApiProperties emrApiProperties;", "modifier": "@Qualifier(\"emrApiProperties\")\n    @Autowired\n    protected", "type": "EmrApiProperties", "declarator": "emrApiProperties", "var_name": "emrApiProperties"}, {"original_string": "@Qualifier(\"dispositionService\")\n    @Autowired\n    protected DispositionService dispositionService;", "modifier": "@Qualifier(\"dispositionService\")\n    @Autowired\n    protected", "type": "DispositionService", "declarator": "dispositionService", "var_name": "dispositionService"}, {"original_string": "@Autowired\n    protected VisitQueryService visitQueryService;", "modifier": "@Autowired\n    protected", "type": "VisitQueryService", "declarator": "visitQueryService", "var_name": "visitQueryService"}, {"original_string": "@Qualifier(\"emrVisitService\")\n    @Autowired\n    protected EmrVisitService emrVisitService;", "modifier": "@Qualifier(\"emrVisitService\")\n    @Autowired\n    protected", "type": "EmrVisitService", "declarator": "emrVisitService", "var_name": "emrVisitService"}, {"original_string": "private Visit visit;", "modifier": "private", "type": "Visit", "declarator": "visit", "var_name": "visit"}], "methods": [{"identifier": "VisitDomainWrapper", "parameters": "()", "modifiers": "public", "return": "", "signature": " VisitDomainWrapper()", "full_signature": "public  VisitDomainWrapper()", "class_method_signature": "VisitDomainWrapper.VisitDomainWrapper()", "testcase": false, "constructor": true}, {"identifier": "VisitDomainWrapper", "parameters": "(Visit visit)", "modifiers": "@Deprecated // use new VisitDomainWrapperFactory instead to instantiate a visit domain wrapper public", "return": "", "signature": " VisitDomainWrapper(Visit visit)", "full_signature": "@Deprecated // use new VisitDomainWrapperFactory instead to instantiate a visit domain wrapper public  VisitDomainWrapper(Visit visit)", "class_method_signature": "VisitDomainWrapper.VisitDomainWrapper(Visit visit)", "testcase": false, "constructor": true}, {"identifier": "VisitDomainWrapper", "parameters": "(Visit visit, EmrApiProperties emrApiProperties)", "modifiers": "@Deprecated // use new VisitDomainWrapperFactory instead to instantiate a visit domain wrapper public", "return": "", "signature": " VisitDomainWrapper(Visit visit, EmrApiProperties emrApiProperties)", "full_signature": "@Deprecated // use new VisitDomainWrapperFactory instead to instantiate a visit domain wrapper public  VisitDomainWrapper(Visit visit, EmrApiProperties emrApiProperties)", "class_method_signature": "VisitDomainWrapper.VisitDomainWrapper(Visit visit, EmrApiProperties emrApiProperties)", "testcase": false, "constructor": true}, {"identifier": "VisitDomainWrapper", "parameters": "(Visit visit, EmrApiProperties emrApiProperties, DispositionService dispositionService)", "modifiers": "@Deprecated // use new VisitDomainWrapperFactory instead to instantiate a visit domain wrapper public", "return": "", "signature": " VisitDomainWrapper(Visit visit, EmrApiProperties emrApiProperties, DispositionService dispositionService)", "full_signature": "@Deprecated // use new VisitDomainWrapperFactory instead to instantiate a visit domain wrapper public  VisitDomainWrapper(Visit visit, EmrApiProperties emrApiProperties, DispositionService dispositionService)", "class_method_signature": "VisitDomainWrapper.VisitDomainWrapper(Visit visit, EmrApiProperties emrApiProperties, DispositionService dispositionService)", "testcase": false, "constructor": true}, {"identifier": "getVisit", "parameters": "()", "modifiers": "public", "return": "Visit", "signature": "Visit getVisit()", "full_signature": "public Visit getVisit()", "class_method_signature": "VisitDomainWrapper.getVisit()", "testcase": false, "constructor": false}, {"identifier": "setVisit", "parameters": "(Visit visit)", "modifiers": "public", "return": "void", "signature": "void setVisit(Visit visit)", "full_signature": "public void setVisit(Visit visit)", "class_method_signature": "VisitDomainWrapper.setVisit(Visit visit)", "testcase": false, "constructor": false}, {"identifier": "getVisitId", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getVisitId()", "full_signature": "public int getVisitId()", "class_method_signature": "VisitDomainWrapper.getVisitId()", "testcase": false, "constructor": false}, {"identifier": "setEmrApiProperties", "parameters": "(EmrApiProperties emrApiProperties)", "modifiers": "public", "return": "void", "signature": "void setEmrApiProperties(EmrApiProperties emrApiProperties)", "full_signature": "public void setEmrApiProperties(EmrApiProperties emrApiProperties)", "class_method_signature": "VisitDomainWrapper.setEmrApiProperties(EmrApiProperties emrApiProperties)", "testcase": false, "constructor": false}, {"identifier": "setDispositionService", "parameters": "(DispositionService dispositionService)", "modifiers": "public", "return": "void", "signature": "void setDispositionService(DispositionService dispositionService)", "full_signature": "public void setDispositionService(DispositionService dispositionService)", "class_method_signature": "VisitDomainWrapper.setDispositionService(DispositionService dispositionService)", "testcase": false, "constructor": false}, {"identifier": "setVisitQueryService", "parameters": "(VisitQueryService visitQueryService)", "modifiers": "public", "return": "void", "signature": "void setVisitQueryService(VisitQueryService visitQueryService)", "full_signature": "public void setVisitQueryService(VisitQueryService visitQueryService)", "class_method_signature": "VisitDomainWrapper.setVisitQueryService(VisitQueryService visitQueryService)", "testcase": false, "constructor": false}, {"identifier": "getAdmissionEncounter", "parameters": "()", "modifiers": "public", "return": "Encounter", "signature": "Encounter getAdmissionEncounter()", "full_signature": "public Encounter getAdmissionEncounter()", "class_method_signature": "VisitDomainWrapper.getAdmissionEncounter()", "testcase": false, "constructor": false}, {"identifier": "getLatestAdtEncounter", "parameters": "()", "modifiers": "public", "return": "Encounter", "signature": "Encounter getLatestAdtEncounter()", "full_signature": "public Encounter getLatestAdtEncounter()", "class_method_signature": "VisitDomainWrapper.getLatestAdtEncounter()", "testcase": false, "constructor": false}, {"identifier": "isActive", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isActive()", "full_signature": "public boolean isActive()", "class_method_signature": "VisitDomainWrapper.isActive()", "testcase": false, "constructor": false}, {"identifier": "isOpen", "parameters": "()", "modifiers": "@Deprecated // renamed to is Active public", "return": "boolean", "signature": "boolean isOpen()", "full_signature": "@Deprecated // renamed to is Active public boolean isOpen()", "class_method_signature": "VisitDomainWrapper.isOpen()", "testcase": false, "constructor": false}, {"identifier": "getMostRecentCheckInEncounter", "parameters": "()", "modifiers": "public", "return": "Encounter", "signature": "Encounter getMostRecentCheckInEncounter()", "full_signature": "public Encounter getMostRecentCheckInEncounter()", "class_method_signature": "VisitDomainWrapper.getMostRecentCheckInEncounter()", "testcase": false, "constructor": false}, {"identifier": "getEarliestCheckInEncounter", "parameters": "()", "modifiers": "public", "return": "Encounter", "signature": "Encounter getEarliestCheckInEncounter()", "full_signature": "public Encounter getEarliestCheckInEncounter()", "class_method_signature": "VisitDomainWrapper.getEarliestCheckInEncounter()", "testcase": false, "constructor": false}, {"identifier": "getCheckInEncounter", "parameters": "()", "modifiers": "@Deprecated // use getMostRecentCheckInEncounter, as this is a more accurate method name public", "return": "Encounter", "signature": "Encounter getCheckInEncounter()", "full_signature": "@Deprecated // use getMostRecentCheckInEncounter, as this is a more accurate method name public Encounter getCheckInEncounter()", "class_method_signature": "VisitDomainWrapper.getCheckInEncounter()", "testcase": false, "constructor": false}, {"identifier": "getMostRecentEncounter", "parameters": "()", "modifiers": "public", "return": "Encounter", "signature": "Encounter getMostRecentEncounter()", "full_signature": "public Encounter getMostRecentEncounter()", "class_method_signature": "VisitDomainWrapper.getMostRecentEncounter()", "testcase": false, "constructor": false}, {"identifier": "getLastEncounter", "parameters": "()", "modifiers": "@Deprecated //use getMostRecentEncounter because this method name doesn't make sense public", "return": "Encounter", "signature": "Encounter getLastEncounter()", "full_signature": "@Deprecated //use getMostRecentEncounter because this method name doesn't make sense public Encounter getLastEncounter()", "class_method_signature": "VisitDomainWrapper.getLastEncounter()", "testcase": false, "constructor": false}, {"identifier": "getEarliestEncounter", "parameters": "()", "modifiers": "public", "return": "Encounter", "signature": "Encounter getEarliestEncounter()", "full_signature": "public Encounter getEarliestEncounter()", "class_method_signature": "VisitDomainWrapper.getEarliestEncounter()", "testcase": false, "constructor": false}, {"identifier": "getOldestEncounter", "parameters": "()", "modifiers": "@Deprecated // we are standardizing on \"Earliest\" and \"Most Recent\" to the public", "return": "Encounter", "signature": "Encounter getOldestEncounter()", "full_signature": "@Deprecated // we are standardizing on \"Earliest\" and \"Most Recent\" to the public Encounter getOldestEncounter()", "class_method_signature": "VisitDomainWrapper.getOldestEncounter()", "testcase": false, "constructor": false}, {"identifier": "getMostRecentVisitNote", "parameters": "()", "modifiers": "public", "return": "Encounter", "signature": "Encounter getMostRecentVisitNote()", "full_signature": "public Encounter getMostRecentVisitNote()", "class_method_signature": "VisitDomainWrapper.getMostRecentVisitNote()", "testcase": false, "constructor": false}, {"identifier": "getMostRecentVisitNoteAtLocation", "parameters": "(Location location)", "modifiers": "public", "return": "Encounter", "signature": "Encounter getMostRecentVisitNoteAtLocation(Location location)", "full_signature": "public Encounter getMostRecentVisitNoteAtLocation(Location location)", "class_method_signature": "VisitDomainWrapper.getMostRecentVisitNoteAtLocation(Location location)", "testcase": false, "constructor": false}, {"identifier": "hasVisitNote", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasVisitNote()", "full_signature": "public boolean hasVisitNote()", "class_method_signature": "VisitDomainWrapper.hasVisitNote()", "testcase": false, "constructor": false}, {"identifier": "hasVisitNoteAtLocation", "parameters": "(Location location)", "modifiers": "public", "return": "boolean", "signature": "boolean hasVisitNoteAtLocation(Location location)", "full_signature": "public boolean hasVisitNoteAtLocation(Location location)", "class_method_signature": "VisitDomainWrapper.hasVisitNoteAtLocation(Location location)", "testcase": false, "constructor": false}, {"identifier": "getSortedEncounters", "parameters": "()", "modifiers": "public", "return": "List<Encounter>", "signature": "List<Encounter> getSortedEncounters()", "full_signature": "public List<Encounter> getSortedEncounters()", "class_method_signature": "VisitDomainWrapper.getSortedEncounters()", "testcase": false, "constructor": false}, {"identifier": "getSortedEncounters", "parameters": "(SortOrder order)", "modifiers": "public", "return": "List<Encounter>", "signature": "List<Encounter> getSortedEncounters(SortOrder order)", "full_signature": "public List<Encounter> getSortedEncounters(SortOrder order)", "class_method_signature": "VisitDomainWrapper.getSortedEncounters(SortOrder order)", "testcase": false, "constructor": false}, {"identifier": "getDifferenceInDaysBetweenCurrentDateAndStartDate", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDifferenceInDaysBetweenCurrentDateAndStartDate()", "full_signature": "public int getDifferenceInDaysBetweenCurrentDateAndStartDate()", "class_method_signature": "VisitDomainWrapper.getDifferenceInDaysBetweenCurrentDateAndStartDate()", "testcase": false, "constructor": false}, {"identifier": "getMostRecentDisposition", "parameters": "()", "modifiers": "public", "return": "Disposition", "signature": "Disposition getMostRecentDisposition()", "full_signature": "public Disposition getMostRecentDisposition()", "class_method_signature": "VisitDomainWrapper.getMostRecentDisposition()", "testcase": false, "constructor": false}, {"identifier": "getDiagnosesFromMostRecentDispositionByType", "parameters": "(DispositionType type)", "modifiers": "public", "return": "List<Diagnosis>", "signature": "List<Diagnosis> getDiagnosesFromMostRecentDispositionByType(DispositionType type)", "full_signature": "public List<Diagnosis> getDiagnosesFromMostRecentDispositionByType(DispositionType type)", "class_method_signature": "VisitDomainWrapper.getDiagnosesFromMostRecentDispositionByType(DispositionType type)", "testcase": false, "constructor": false}, {"identifier": "getPrimaryDiagnoses", "parameters": "()", "modifiers": "public", "return": "List<Diagnosis>", "signature": "List<Diagnosis> getPrimaryDiagnoses()", "full_signature": "public List<Diagnosis> getPrimaryDiagnoses()", "class_method_signature": "VisitDomainWrapper.getPrimaryDiagnoses()", "testcase": false, "constructor": false}, {"identifier": "getUniqueDiagnoses", "parameters": "(Boolean primaryOnly, Boolean confirmedOnly)", "modifiers": "public", "return": "List<Diagnosis>", "signature": "List<Diagnosis> getUniqueDiagnoses(Boolean primaryOnly, Boolean confirmedOnly)", "full_signature": "public List<Diagnosis> getUniqueDiagnoses(Boolean primaryOnly, Boolean confirmedOnly)", "class_method_signature": "VisitDomainWrapper.getUniqueDiagnoses(Boolean primaryOnly, Boolean confirmedOnly)", "testcase": false, "constructor": false}, {"identifier": "getUniqueDiagnosesLegacy", "parameters": "(Boolean primaryOnly, Boolean confirmedOnly)", "modifiers": "@Deprecated public", "return": "List<Diagnosis>", "signature": "List<Diagnosis> getUniqueDiagnosesLegacy(Boolean primaryOnly, Boolean confirmedOnly)", "full_signature": "@Deprecated public List<Diagnosis> getUniqueDiagnosesLegacy(Boolean primaryOnly, Boolean confirmedOnly)", "class_method_signature": "VisitDomainWrapper.getUniqueDiagnosesLegacy(Boolean primaryOnly, Boolean confirmedOnly)", "testcase": false, "constructor": false}, {"identifier": "getDiagnosesFromEncounter", "parameters": "(Encounter encounter)", "modifiers": "private", "return": "List<Diagnosis>", "signature": "List<Diagnosis> getDiagnosesFromEncounter(Encounter encounter)", "full_signature": "private List<Diagnosis> getDiagnosesFromEncounter(Encounter encounter)", "class_method_signature": "VisitDomainWrapper.getDiagnosesFromEncounter(Encounter encounter)", "testcase": false, "constructor": false}, {"identifier": "getDiagnosesFromEncounter", "parameters": "(Encounter encounter, List<Diagnosis.Order> diagnosisOrders)", "modifiers": "private", "return": "List<Diagnosis>", "signature": "List<Diagnosis> getDiagnosesFromEncounter(Encounter encounter, List<Diagnosis.Order> diagnosisOrders)", "full_signature": "private List<Diagnosis> getDiagnosesFromEncounter(Encounter encounter, List<Diagnosis.Order> diagnosisOrders)", "class_method_signature": "VisitDomainWrapper.getDiagnosesFromEncounter(Encounter encounter, List<Diagnosis.Order> diagnosisOrders)", "testcase": false, "constructor": false}, {"identifier": "hasEncounters", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasEncounters()", "full_signature": "public boolean hasEncounters()", "class_method_signature": "VisitDomainWrapper.hasEncounters()", "testcase": false, "constructor": false}, {"identifier": "hasEncounterWithoutSubsequentEncounter", "parameters": "(EncounterType lookForEncounterType, EncounterType withoutSubsequentEncounterType)", "modifiers": "public", "return": "boolean", "signature": "boolean hasEncounterWithoutSubsequentEncounter(EncounterType lookForEncounterType, EncounterType withoutSubsequentEncounterType)", "full_signature": "public boolean hasEncounterWithoutSubsequentEncounter(EncounterType lookForEncounterType, EncounterType withoutSubsequentEncounterType)", "class_method_signature": "VisitDomainWrapper.hasEncounterWithoutSubsequentEncounter(EncounterType lookForEncounterType, EncounterType withoutSubsequentEncounterType)", "testcase": false, "constructor": false}, {"identifier": "hasEncounterWithoutSubsequentEncounter", "parameters": "(EncounterType lookForEncounterType, EncounterType withoutSubsequentEncounterType, Date onDate)", "modifiers": "private", "return": "boolean", "signature": "boolean hasEncounterWithoutSubsequentEncounter(EncounterType lookForEncounterType, EncounterType withoutSubsequentEncounterType, Date onDate)", "full_signature": "private boolean hasEncounterWithoutSubsequentEncounter(EncounterType lookForEncounterType, EncounterType withoutSubsequentEncounterType, Date onDate)", "class_method_signature": "VisitDomainWrapper.hasEncounterWithoutSubsequentEncounter(EncounterType lookForEncounterType, EncounterType withoutSubsequentEncounterType, Date onDate)", "testcase": false, "constructor": false}, {"identifier": "isAdmitted", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAdmitted()", "full_signature": "public boolean isAdmitted()", "class_method_signature": "VisitDomainWrapper.isAdmitted()", "testcase": false, "constructor": false}, {"identifier": "isAdmitted", "parameters": "(Date onDate)", "modifiers": "public", "return": "boolean", "signature": "boolean isAdmitted(Date onDate)", "full_signature": "public boolean isAdmitted(Date onDate)", "class_method_signature": "VisitDomainWrapper.isAdmitted(Date onDate)", "testcase": false, "constructor": false}, {"identifier": "isAwaitingAdmission", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAwaitingAdmission()", "full_signature": "public boolean isAwaitingAdmission()", "class_method_signature": "VisitDomainWrapper.isAwaitingAdmission()", "testcase": false, "constructor": false}, {"identifier": "getInpatientLocation", "parameters": "(Date onDate)", "modifiers": "public", "return": "Location", "signature": "Location getInpatientLocation(Date onDate)", "full_signature": "public Location getInpatientLocation(Date onDate)", "class_method_signature": "VisitDomainWrapper.getInpatientLocation(Date onDate)", "testcase": false, "constructor": false}, {"identifier": "getStartDatetime", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getStartDatetime()", "full_signature": "public Date getStartDatetime()", "class_method_signature": "VisitDomainWrapper.getStartDatetime()", "testcase": false, "constructor": false}, {"identifier": "getStopDatetime", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getStopDatetime()", "full_signature": "public Date getStopDatetime()", "class_method_signature": "VisitDomainWrapper.getStopDatetime()", "testcase": false, "constructor": false}, {"identifier": "getStartDate", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getStartDate()", "full_signature": "public Date getStartDate()", "class_method_signature": "VisitDomainWrapper.getStartDate()", "testcase": false, "constructor": false}, {"identifier": "getStopDate", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getStopDate()", "full_signature": "public Date getStopDate()", "class_method_signature": "VisitDomainWrapper.getStopDate()", "testcase": false, "constructor": false}, {"identifier": "addEncounter", "parameters": "(Encounter encounter)", "modifiers": "public", "return": "VisitDomainWrapper", "signature": "VisitDomainWrapper addEncounter(Encounter encounter)", "full_signature": "public VisitDomainWrapper addEncounter(Encounter encounter)", "class_method_signature": "VisitDomainWrapper.addEncounter(Encounter encounter)", "testcase": false, "constructor": false}, {"identifier": "closeOnLastEncounterDatetime", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void closeOnLastEncounterDatetime()", "full_signature": "public void closeOnLastEncounterDatetime()", "class_method_signature": "VisitDomainWrapper.closeOnLastEncounterDatetime()", "testcase": false, "constructor": false}, {"identifier": "errorIfOutsideVisit", "parameters": "(Date checkDatetime, String errorMessage)", "modifiers": "public", "return": "void", "signature": "void errorIfOutsideVisit(Date checkDatetime, String errorMessage)", "full_signature": "public void errorIfOutsideVisit(Date checkDatetime, String errorMessage)", "class_method_signature": "VisitDomainWrapper.errorIfOutsideVisit(Date checkDatetime, String errorMessage)", "testcase": false, "constructor": false}, {"identifier": "getEncounterStopDateRange", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getEncounterStopDateRange()", "full_signature": "public Date getEncounterStopDateRange()", "class_method_signature": "VisitDomainWrapper.getEncounterStopDateRange()", "testcase": false, "constructor": false}, {"identifier": "verifyIfUserIsTheCreatorOfVisit", "parameters": "(User currentUser)", "modifiers": "public", "return": "boolean", "signature": "boolean verifyIfUserIsTheCreatorOfVisit(User currentUser)", "full_signature": "public boolean verifyIfUserIsTheCreatorOfVisit(User currentUser)", "class_method_signature": "VisitDomainWrapper.verifyIfUserIsTheCreatorOfVisit(User currentUser)", "testcase": false, "constructor": false}, {"identifier": "getVisitAttribute", "parameters": "(String uuidOrName)", "modifiers": "public", "return": "Object", "signature": "Object getVisitAttribute(String uuidOrName)", "full_signature": "public Object getVisitAttribute(String uuidOrName)", "class_method_signature": "VisitDomainWrapper.getVisitAttribute(String uuidOrName)", "testcase": false, "constructor": false}], "file": "api/src/main/java/org/openmrs/module/emrapi/visit/VisitDomainWrapper.java"}, "focal_method": {"identifier": "getEncounterStopDateRange", "parameters": "()", "modifiers": "public", "return": "Date", "body": "public Date getEncounterStopDateRange() {\n        return getStopDatetime() == null ? new Date() : getStopDatetime();\n    }", "signature": "Date getEncounterStopDateRange()", "full_signature": "public Date getEncounterStopDateRange()", "class_method_signature": "VisitDomainWrapper.getEncounterStopDateRange()", "testcase": false, "constructor": false, "invocations": ["getStopDatetime", "getStopDatetime"]}, "repository": {"repo_id": 9158616, "url": "https://github.com/openmrs/openmrs-module-emrapi", "language": "Java", "is_fork": false, "fork_count": 117, "stargazer_count": 12, "size": 2691, "license": "licensed"}}