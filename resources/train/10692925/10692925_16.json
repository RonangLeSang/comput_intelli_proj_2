{"test_class": {"identifier": "PageWrapperUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "tooyoung-common/src/test/java/cc/tooyoung/common/page/PageWrapperUtilTest.java"}, "test_case": {"identifier": "testToJson", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test \n    public void testToJson() {\n        long[] items = new long[10];\n        for (int i = 0; i < items.length; i++) {\n            items[i] = (2300000000000000L + 101) + (items.length - 1 - i);\n        }\n        /*\n         * descending order with db pagination, so need reverse to ascending \n         */\n        ArrayUtil.reverse(items);\n        ApiLogger.debug(Arrays.toString(items));\n        \n        int count = 20;\n        int page = 1;\n        long[] expecteds = Arrays.copyOf(items, items.length);\n        ArrayUtil.reverse(expecteds);\n        \n        PaginationParam paginationParam = new PaginationParam.Builder().count(count).page(page).build();\n        PageWrapper<long[]> pageWrapper = PageWrapperUtil.paginationAndReverse(items, paginationParam);\n        ApiLogger.debug(paginationParam + \", \" + PageWrapperUtil.toJson(pageWrapper, \"ids\", pageWrapper.result));\n        \n    }", "signature": "void testToJson()", "full_signature": "@Test public void testToJson()", "class_method_signature": "PageWrapperUtilTest.testToJson()", "testcase": true, "constructor": false, "invocations": ["reverse", "debug", "toString", "copyOf", "reverse", "build", "page", "count", "paginationAndReverse", "debug", "toJson"]}, "focal_class": {"identifier": "PageWrapperUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static int MAX_ID_ADJECT = -1;", "modifier": "private static", "type": "int", "declarator": "MAX_ID_ADJECT = -1", "var_name": "MAX_ID_ADJECT"}], "methods": [{"identifier": "toJson", "parameters": "(PageWrapper<T> pageWrapper, String name, long[] values)", "modifiers": "public static", "return": "String", "signature": "String toJson(PageWrapper<T> pageWrapper, String name, long[] values)", "full_signature": "public static String toJson(PageWrapper<T> pageWrapper, String name, long[] values)", "class_method_signature": "PageWrapperUtil.toJson(PageWrapper<T> pageWrapper, String name, long[] values)", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(PageWrapper<T> pageWrapper, String name, Jsonable[] values)", "modifiers": "public static", "return": "String", "signature": "String toJson(PageWrapper<T> pageWrapper, String name, Jsonable[] values)", "full_signature": "public static String toJson(PageWrapper<T> pageWrapper, String name, Jsonable[] values)", "class_method_signature": "PageWrapperUtil.toJson(PageWrapper<T> pageWrapper, String name, Jsonable[] values)", "testcase": false, "constructor": false}, {"identifier": "appendJson", "parameters": "(JsonBuilder json, PageWrapper<T> pageWrapper)", "modifiers": "private static", "return": "JsonBuilder", "signature": "JsonBuilder appendJson(JsonBuilder json, PageWrapper<T> pageWrapper)", "full_signature": "private static JsonBuilder appendJson(JsonBuilder json, PageWrapper<T> pageWrapper)", "class_method_signature": "PageWrapperUtil.appendJson(JsonBuilder json, PageWrapper<T> pageWrapper)", "testcase": false, "constructor": false}, {"identifier": "wrap", "parameters": "(long[] ids, int count)", "modifiers": "public static", "return": "PageWrapper<long[]>", "signature": "PageWrapper<long[]> wrap(long[] ids, int count)", "full_signature": "public static PageWrapper<long[]> wrap(long[] ids, int count)", "class_method_signature": "PageWrapperUtil.wrap(long[] ids, int count)", "testcase": false, "constructor": false}, {"identifier": "getPageOffset", "parameters": "(int page, int count)", "modifiers": "public static", "return": "int", "signature": "int getPageOffset(int page, int count)", "full_signature": "public static int getPageOffset(int page, int count)", "class_method_signature": "PageWrapperUtil.getPageOffset(int page, int count)", "testcase": false, "constructor": false}, {"identifier": "paginationAndReverse", "parameters": "(long[] ids, PaginationParam paginationParam)", "modifiers": "public static", "return": "PageWrapper<long[]>", "signature": "PageWrapper<long[]> paginationAndReverse(long[] ids, PaginationParam paginationParam)", "full_signature": "public static PageWrapper<long[]> paginationAndReverse(long[] ids, PaginationParam paginationParam)", "class_method_signature": "PageWrapperUtil.paginationAndReverse(long[] ids, PaginationParam paginationParam)", "testcase": false, "constructor": false}, {"identifier": "paginationAndReverse", "parameters": "(long[] ids, int idsLen, long sinceId, long maxId, int count, int page)", "modifiers": "public static", "return": "PageWrapper<long[]>", "signature": "PageWrapper<long[]> paginationAndReverse(long[] ids, int idsLen, long sinceId, long maxId, int count, int page)", "full_signature": "public static PageWrapper<long[]> paginationAndReverse(long[] ids, int idsLen, long sinceId, long maxId, int count, int page)", "class_method_signature": "PageWrapperUtil.paginationAndReverse(long[] ids, int idsLen, long sinceId, long maxId, int count, int page)", "testcase": false, "constructor": false}, {"identifier": "calculatePaginationByReverse", "parameters": "(long[] ids, int idsLen, long sinceId, long maxId, int count, int page)", "modifiers": "public static", "return": "int[]", "signature": "int[] calculatePaginationByReverse(long[] ids, int idsLen, long sinceId, long maxId, int count, int page)", "full_signature": "public static int[] calculatePaginationByReverse(long[] ids, int idsLen, long sinceId, long maxId, int count, int page)", "class_method_signature": "PageWrapperUtil.calculatePaginationByReverse(long[] ids, int idsLen, long sinceId, long maxId, int count, int page)", "testcase": false, "constructor": false}, {"identifier": "calculateCursorByReverse", "parameters": "(PageWrapper<T> wrapper, long[] ids, int offset, int limit, int count)", "modifiers": "public static", "return": "void", "signature": "void calculateCursorByReverse(PageWrapper<T> wrapper, long[] ids, int offset, int limit, int count)", "full_signature": "public static void calculateCursorByReverse(PageWrapper<T> wrapper, long[] ids, int offset, int limit, int count)", "class_method_signature": "PageWrapperUtil.calculateCursorByReverse(PageWrapper<T> wrapper, long[] ids, int offset, int limit, int count)", "testcase": false, "constructor": false}, {"identifier": "calculateCursorByReverse", "parameters": "(PageWrapper<T> wrapper, long[] ids, int offset, int limit, int count, int adject)", "modifiers": "private static", "return": "void", "signature": "void calculateCursorByReverse(PageWrapper<T> wrapper, long[] ids, int offset, int limit, int count, int adject)", "full_signature": "private static void calculateCursorByReverse(PageWrapper<T> wrapper, long[] ids, int offset, int limit, int count, int adject)", "class_method_signature": "PageWrapperUtil.calculateCursorByReverse(PageWrapper<T> wrapper, long[] ids, int offset, int limit, int count, int adject)", "testcase": false, "constructor": false}], "file": "tooyoung-common/src/main/java/cc/tooyoung/common/page/PageWrapperUtil.java"}, "focal_method": {"identifier": "toJson", "parameters": "(PageWrapper<T> pageWrapper, String name, long[] values)", "modifiers": "public static", "return": "String", "body": "public static <T> String toJson(PageWrapper<T> pageWrapper, String name, long[] values) {\n        JsonBuilder json = new JsonBuilder();\n        if (values == null) {\n            json.append(name, \"[]\");\n        } else {\n            json.appendStrArr(name, values);\n        }\n        appendJson(json, pageWrapper);\n        \n        json.flip();\n        return json.toString();\n    }", "signature": "String toJson(PageWrapper<T> pageWrapper, String name, long[] values)", "full_signature": "public static String toJson(PageWrapper<T> pageWrapper, String name, long[] values)", "class_method_signature": "PageWrapperUtil.toJson(PageWrapper<T> pageWrapper, String name, long[] values)", "testcase": false, "constructor": false, "invocations": ["append", "appendStrArr", "appendJson", "flip", "toString"]}, "repository": {"repo_id": 10692925, "url": "https://github.com/yangwm/tooyoung", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 8, "size": 659, "license": "licensed"}}