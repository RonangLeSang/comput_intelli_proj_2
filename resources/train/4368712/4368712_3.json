{"test_class": {"identifier": "JerseyProxyResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Field[] FIELDS = StubForFields.class.getDeclaredFields();", "modifier": "private static", "type": "Field[]", "declarator": "FIELDS = StubForFields.class.getDeclaredFields()", "var_name": "FIELDS"}], "file": "inject/cdi2-se/src/test/java/org/glassfish/jersey/inject/cdi/se/injector/JerseyProxyResolverTest.java"}, "test_case": {"identifier": "testRequestScopeIsNotProxiable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRequestScopeIsNotProxiable() {\n        InjecteeImpl injectee = new InjecteeImpl();\n        injectee.setInjecteeClass(TestRequestScope.class);\n        injectee.setParentClassScope(RequestScoped.class);\n\n        JerseyProxyResolver resolver = new JerseyProxyResolver();\n        assertFalse(resolver.isPrixiable(injectee));\n    }", "signature": "void testRequestScopeIsNotProxiable()", "full_signature": "@Test public void testRequestScopeIsNotProxiable()", "class_method_signature": "JerseyProxyResolverTest.testRequestScopeIsNotProxiable()", "testcase": true, "constructor": false, "invocations": ["setInjecteeClass", "setParentClassScope", "assertFalse", "isPrixiable"]}, "focal_class": {"identifier": "JerseyProxyResolver", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ConcurrentHashMap<AnnotatedElement, Object> cachedProxies = new ConcurrentHashMap<>();", "modifier": "private final", "type": "ConcurrentHashMap<AnnotatedElement, Object>", "declarator": "cachedProxies = new ConcurrentHashMap<>()", "var_name": "cachedProxies"}, {"original_string": "private static final List<Class<?>> IGNORED_CLASSES = Collections.singletonList(Application.class);", "modifier": "private static final", "type": "List<Class<?>>", "declarator": "IGNORED_CLASSES = Collections.singletonList(Application.class)", "var_name": "IGNORED_CLASSES"}], "methods": [{"identifier": "isPrixiable", "parameters": "(Injectee injectee)", "modifiers": "public", "return": "boolean", "signature": "boolean isPrixiable(Injectee injectee)", "full_signature": "public boolean isPrixiable(Injectee injectee)", "class_method_signature": "JerseyProxyResolver.isPrixiable(Injectee injectee)", "testcase": false, "constructor": false}, {"identifier": "isPrixiable", "parameters": "(Class<? extends Annotation> scopeAnnotation)", "modifiers": "public", "return": "boolean", "signature": "boolean isPrixiable(Class<? extends Annotation> scopeAnnotation)", "full_signature": "public boolean isPrixiable(Class<? extends Annotation> scopeAnnotation)", "class_method_signature": "JerseyProxyResolver.isPrixiable(Class<? extends Annotation> scopeAnnotation)", "testcase": false, "constructor": false}, {"identifier": "proxy", "parameters": "(Injectee injectee, InjectionResolver resolver)", "modifiers": "public", "return": "Object", "signature": "Object proxy(Injectee injectee, InjectionResolver resolver)", "full_signature": "public Object proxy(Injectee injectee, InjectionResolver resolver)", "class_method_signature": "JerseyProxyResolver.proxy(Injectee injectee, InjectionResolver resolver)", "testcase": false, "constructor": false}, {"identifier": "noCachedProxy", "parameters": "(Injectee injectee, Supplier<Object> supplier)", "modifiers": "public", "return": "Object", "signature": "Object noCachedProxy(Injectee injectee, Supplier<Object> supplier)", "full_signature": "public Object noCachedProxy(Injectee injectee, Supplier<Object> supplier)", "class_method_signature": "JerseyProxyResolver.noCachedProxy(Injectee injectee, Supplier<Object> supplier)", "testcase": false, "constructor": false}, {"identifier": "createProxy", "parameters": "(Injectee injectee, InjectionResolver resolver)", "modifiers": "private", "return": "Object", "signature": "Object createProxy(Injectee injectee, InjectionResolver resolver)", "full_signature": "private Object createProxy(Injectee injectee, InjectionResolver resolver)", "class_method_signature": "JerseyProxyResolver.createProxy(Injectee injectee, InjectionResolver resolver)", "testcase": false, "constructor": false}, {"identifier": "createProxy", "parameters": "(Class<?> requiredClass, Supplier<Object> supplier)", "modifiers": "private", "return": "Object", "signature": "Object createProxy(Class<?> requiredClass, Supplier<Object> supplier)", "full_signature": "private Object createProxy(Class<?> requiredClass, Supplier<Object> supplier)", "class_method_signature": "JerseyProxyResolver.createProxy(Class<?> requiredClass, Supplier<Object> supplier)", "testcase": false, "constructor": false}, {"identifier": "getClass", "parameters": "(Type type)", "modifiers": "private", "return": "Class<?>", "signature": "Class<?> getClass(Type type)", "full_signature": "private Class<?> getClass(Type type)", "class_method_signature": "JerseyProxyResolver.getClass(Type type)", "testcase": false, "constructor": false}, {"identifier": "ignoreProxy", "parameters": "()", "modifiers": "private", "return": "Collection<Class<? extends Annotation>>", "signature": "Collection<Class<? extends Annotation>> ignoreProxy()", "full_signature": "private Collection<Class<? extends Annotation>> ignoreProxy()", "class_method_signature": "JerseyProxyResolver.ignoreProxy()", "testcase": false, "constructor": false}, {"identifier": "ignoredClass", "parameters": "(Type type)", "modifiers": "private", "return": "boolean", "signature": "boolean ignoredClass(Type type)", "full_signature": "private boolean ignoredClass(Type type)", "class_method_signature": "JerseyProxyResolver.ignoredClass(Type type)", "testcase": false, "constructor": false}], "file": "inject/cdi2-se/src/main/java/org/glassfish/jersey/inject/cdi/se/injector/JerseyProxyResolver.java"}, "focal_method": {"identifier": "isPrixiable", "parameters": "(Injectee injectee)", "modifiers": "public", "return": "boolean", "body": "public boolean isPrixiable(Injectee injectee) {\n        return !ignoredClass(injectee.getRequiredType()) && isPrixiable(injectee.getParentClassScope());\n    }", "signature": "boolean isPrixiable(Injectee injectee)", "full_signature": "public boolean isPrixiable(Injectee injectee)", "class_method_signature": "JerseyProxyResolver.isPrixiable(Injectee injectee)", "testcase": false, "constructor": false, "invocations": ["ignoredClass", "getRequiredType", "isPrixiable", "getParentClassScope"]}, "repository": {"repo_id": 4368712, "url": "https://github.com/jersey/jersey", "language": "Java", "is_fork": false, "fork_count": 2540, "stargazer_count": 2919, "size": 38964, "license": "licensed"}}