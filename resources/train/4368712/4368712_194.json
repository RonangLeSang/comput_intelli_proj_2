{"test_class": {"identifier": "PackageNamesScannerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String[] packages = {\"javax.ws.rs\"};", "modifier": "private static final", "type": "String[]", "declarator": "packages = {\"javax.ws.rs\"}", "var_name": "packages"}, {"original_string": "private String jaxRsApiPath;", "modifier": "private", "type": "String", "declarator": "jaxRsApiPath", "var_name": "jaxRsApiPath"}], "file": "core-server/src/test/java/org/glassfish/jersey/server/internal/scanning/PackageNamesScannerTest.java"}, "test_case": {"identifier": "testWsJarScheme", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWsJarScheme() {\n        assertTrue(\"Expected at least one class to be found.\",\n                new PackageNamesScanner(createTestClassLoader(\"wsjar\", createTestURLStreamHandler(\"wsjar\"), jaxRsApiPath),\n                        packages, false).hasNext());\n    }", "signature": "void testWsJarScheme()", "full_signature": "@Test public void testWsJarScheme()", "class_method_signature": "PackageNamesScannerTest.testWsJarScheme()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "hasNext", "createTestClassLoader", "createTestURLStreamHandler"]}, "focal_class": {"identifier": "PackageNamesScanner", "superclass": "extends AbstractResourceFinderAdapter", "interfaces": "", "fields": [{"original_string": "private final boolean recursive;", "modifier": "private final", "type": "boolean", "declarator": "recursive", "var_name": "recursive"}, {"original_string": "private final String[] packages;", "modifier": "private final", "type": "String[]", "declarator": "packages", "var_name": "packages"}, {"original_string": "private final ClassLoader classloader;", "modifier": "private final", "type": "ClassLoader", "declarator": "classloader", "var_name": "classloader"}, {"original_string": "private final Map<String, UriSchemeResourceFinderFactory> finderFactories;", "modifier": "private final", "type": "Map<String, UriSchemeResourceFinderFactory>", "declarator": "finderFactories", "var_name": "finderFactories"}, {"original_string": "private CompositeResourceFinder compositeResourceFinder;", "modifier": "private", "type": "CompositeResourceFinder", "declarator": "compositeResourceFinder", "var_name": "compositeResourceFinder"}], "methods": [{"identifier": "PackageNamesScanner", "parameters": "(final String[] packages, final boolean recursive)", "modifiers": "public", "return": "", "signature": " PackageNamesScanner(final String[] packages, final boolean recursive)", "full_signature": "public  PackageNamesScanner(final String[] packages, final boolean recursive)", "class_method_signature": "PackageNamesScanner.PackageNamesScanner(final String[] packages, final boolean recursive)", "testcase": false, "constructor": true}, {"identifier": "PackageNamesScanner", "parameters": "(final ClassLoader classLoader, final String[] packages, final boolean recursive)", "modifiers": "public", "return": "", "signature": " PackageNamesScanner(final ClassLoader classLoader, final String[] packages, final boolean recursive)", "full_signature": "public  PackageNamesScanner(final ClassLoader classLoader, final String[] packages, final boolean recursive)", "class_method_signature": "PackageNamesScanner.PackageNamesScanner(final ClassLoader classLoader, final String[] packages, final boolean recursive)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(final UriSchemeResourceFinderFactory uriSchemeResourceFinderFactory)", "modifiers": "private", "return": "void", "signature": "void add(final UriSchemeResourceFinderFactory uriSchemeResourceFinderFactory)", "full_signature": "private void add(final UriSchemeResourceFinderFactory uriSchemeResourceFinderFactory)", "class_method_signature": "PackageNamesScanner.add(final UriSchemeResourceFinderFactory uriSchemeResourceFinderFactory)", "testcase": false, "constructor": false}, {"identifier": "hasNext", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasNext()", "full_signature": "@Override public boolean hasNext()", "class_method_signature": "PackageNamesScanner.hasNext()", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String next()", "full_signature": "@Override public String next()", "class_method_signature": "PackageNamesScanner.next()", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "()", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream open()", "full_signature": "@Override public InputStream open()", "class_method_signature": "PackageNamesScanner.open()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "PackageNamesScanner.close()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "PackageNamesScanner.reset()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void init()", "full_signature": "private void init()", "class_method_signature": "PackageNamesScanner.init()", "testcase": false, "constructor": false}, {"identifier": "setResourcesProvider", "parameters": "(final ResourcesProvider provider)", "modifiers": "public static", "return": "void", "signature": "void setResourcesProvider(final ResourcesProvider provider)", "full_signature": "public static void setResourcesProvider(final ResourcesProvider provider)", "class_method_signature": "PackageNamesScanner.setResourcesProvider(final ResourcesProvider provider)", "testcase": false, "constructor": false}, {"identifier": "addResourceFinder", "parameters": "(final URI u)", "modifiers": "private", "return": "void", "signature": "void addResourceFinder(final URI u)", "full_signature": "private void addResourceFinder(final URI u)", "class_method_signature": "PackageNamesScanner.addResourceFinder(final URI u)", "testcase": false, "constructor": false}, {"identifier": "toURI", "parameters": "(final URL url)", "modifiers": "private", "return": "URI", "signature": "URI toURI(final URL url)", "full_signature": "private URI toURI(final URL url)", "class_method_signature": "PackageNamesScanner.toURI(final URL url)", "testcase": false, "constructor": false}, {"identifier": "toExternalForm", "parameters": "(final URL u)", "modifiers": "private", "return": "String", "signature": "String toExternalForm(final URL u)", "full_signature": "private String toExternalForm(final URL u)", "class_method_signature": "PackageNamesScanner.toExternalForm(final URL u)", "testcase": false, "constructor": false}], "file": "core-server/src/main/java/org/glassfish/jersey/server/internal/scanning/PackageNamesScanner.java"}, "focal_method": {"identifier": "hasNext", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean hasNext() {\n        return compositeResourceFinder.hasNext();\n    }", "signature": "boolean hasNext()", "full_signature": "@Override public boolean hasNext()", "class_method_signature": "PackageNamesScanner.hasNext()", "testcase": false, "constructor": false, "invocations": ["hasNext"]}, "repository": {"repo_id": 4368712, "url": "https://github.com/jersey/jersey", "language": "Java", "is_fork": false, "fork_count": 2540, "stargazer_count": 2919, "size": 38964, "license": "licensed"}}