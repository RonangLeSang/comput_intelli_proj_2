{"test_class": {"identifier": "ImmutableSettingsTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/quality-immutable-object/src/test/java/net/sf/qualitycheck/immutableobject/domain/ImmutableSettingsTest.java"}, "test_case": {"identifier": "copyOf_argIsNull", "parameters": "()", "modifiers": "@Test(expected = IllegalNullArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalNullArgumentException.class)\n\tpublic void copyOf_argIsNull() {\n\t\tImmutableSettings.copyOf(null);\n\t}", "signature": "void copyOf_argIsNull()", "full_signature": "@Test(expected = IllegalNullArgumentException.class) public void copyOf_argIsNull()", "class_method_signature": "ImmutableSettingsTest.copyOf_argIsNull()", "testcase": true, "constructor": false, "invocations": ["copyOf"]}, "focal_class": {"identifier": "ImmutableSettings", "superclass": "", "interfaces": "implements Settings", "fields": [{"original_string": "private final boolean builderCopyConstructor;", "modifier": "private final", "type": "boolean", "declarator": "builderCopyConstructor", "var_name": "builderCopyConstructor"}, {"original_string": "private final boolean builderFlatMutators;", "modifier": "private final", "type": "boolean", "declarator": "builderFlatMutators", "var_name": "builderFlatMutators"}, {"original_string": "private final boolean builderFluentMutators;", "modifier": "private final", "type": "boolean", "declarator": "builderFluentMutators", "var_name": "builderFluentMutators"}, {"original_string": "private final boolean builderImplementsInterface;", "modifier": "private final", "type": "boolean", "declarator": "builderImplementsInterface", "var_name": "builderImplementsInterface"}, {"original_string": "@Nonnull\n\tprivate final String builderName;", "modifier": "@Nonnull\n\tprivate final", "type": "String", "declarator": "builderName", "var_name": "builderName"}, {"original_string": "private final boolean copyMethods;", "modifier": "private final", "type": "boolean", "declarator": "copyMethods", "var_name": "copyMethods"}, {"original_string": "@Nonnull\n\tprivate final String fieldPrefix;", "modifier": "@Nonnull\n\tprivate final", "type": "String", "declarator": "fieldPrefix", "var_name": "fieldPrefix"}, {"original_string": "@Nonnull\n\tprivate final List<Field> fields;", "modifier": "@Nonnull\n\tprivate final", "type": "List<Field>", "declarator": "fields", "var_name": "fields"}, {"original_string": "private final boolean guava;", "modifier": "private final", "type": "boolean", "declarator": "guava", "var_name": "guava"}, {"original_string": "private final boolean hashCodeAndEquals;", "modifier": "private final", "type": "boolean", "declarator": "hashCodeAndEquals", "var_name": "hashCodeAndEquals"}, {"original_string": "private final boolean hashCodePrecomputation;", "modifier": "private final", "type": "boolean", "declarator": "hashCodePrecomputation", "var_name": "hashCodePrecomputation"}, {"original_string": "@Nonnull\n\tprivate final String immutableName;", "modifier": "@Nonnull\n\tprivate final", "type": "String", "declarator": "immutableName", "var_name": "immutableName"}, {"original_string": "@Nonnull\n\tprivate final List<Import> imports;", "modifier": "@Nonnull\n\tprivate final", "type": "List<Import>", "declarator": "imports", "var_name": "imports"}, {"original_string": "@Nonnull\n\tprivate final List<Interface> interfaces;", "modifier": "@Nonnull\n\tprivate final", "type": "List<Interface>", "declarator": "interfaces", "var_name": "interfaces"}, {"original_string": "private final boolean jsr305Annotations;", "modifier": "private final", "type": "boolean", "declarator": "jsr305Annotations", "var_name": "jsr305Annotations"}, {"original_string": "@Nonnull\n\tprivate final Interface mainInterface;", "modifier": "@Nonnull\n\tprivate final", "type": "Interface", "declarator": "mainInterface", "var_name": "mainInterface"}, {"original_string": "@Nonnull\n\tprivate final Package packageDeclaration;", "modifier": "@Nonnull\n\tprivate final", "type": "Package", "declarator": "packageDeclaration", "var_name": "packageDeclaration"}, {"original_string": "private final boolean qualityCheck;", "modifier": "private final", "type": "boolean", "declarator": "qualityCheck", "var_name": "qualityCheck"}, {"original_string": "private final boolean replacement;", "modifier": "private final", "type": "boolean", "declarator": "replacement", "var_name": "replacement"}, {"original_string": "private final boolean serializable;", "modifier": "private final", "type": "boolean", "declarator": "serializable", "var_name": "serializable"}, {"original_string": "private final boolean toString;", "modifier": "private final", "type": "boolean", "declarator": "toString", "var_name": "toString"}], "methods": [{"identifier": "copyOf", "parameters": "(@Nonnull final Settings settings)", "modifiers": "@Nonnull public static", "return": "ImmutableSettings", "signature": "ImmutableSettings copyOf(@Nonnull final Settings settings)", "full_signature": "@Nonnull public static ImmutableSettings copyOf(@Nonnull final Settings settings)", "class_method_signature": "ImmutableSettings.copyOf(@Nonnull final Settings settings)", "testcase": false, "constructor": false}, {"identifier": "copyOnlyIfNecessary", "parameters": "(@Nonnull final Settings settings)", "modifiers": "@Nonnull public static", "return": "ImmutableSettings", "signature": "ImmutableSettings copyOnlyIfNecessary(@Nonnull final Settings settings)", "full_signature": "@Nonnull public static ImmutableSettings copyOnlyIfNecessary(@Nonnull final Settings settings)", "class_method_signature": "ImmutableSettings.copyOnlyIfNecessary(@Nonnull final Settings settings)", "testcase": false, "constructor": false}, {"identifier": "ImmutableSettings", "parameters": "(@Nonnull final String builderName, @Nonnull final String fieldPrefix, @Nonnull final List<Field> fields,\n\t\t\t@Nonnull final String immutableName, @Nonnull final List<Import> imports, @Nonnull final List<Interface> interfaces,\n\t\t\t@Nonnull final Interface mainInterface, @Nonnull final Package packageDeclaration, final boolean builderCopyConstructor,\n\t\t\tfinal boolean builderFlatMutators, final boolean builderFluentMutators, final boolean builderImplementsInterface,\n\t\t\tfinal boolean copyMethods, final boolean guava, final boolean hashCodeAndEquals, final boolean hashCodePrecomputation,\n\t\t\tfinal boolean jsr305Annotations, final boolean qualityCheck, final boolean toString, final boolean replacement,\n\t\t\tfinal boolean serializable)", "modifiers": "public", "return": "", "signature": " ImmutableSettings(@Nonnull final String builderName, @Nonnull final String fieldPrefix, @Nonnull final List<Field> fields,\n\t\t\t@Nonnull final String immutableName, @Nonnull final List<Import> imports, @Nonnull final List<Interface> interfaces,\n\t\t\t@Nonnull final Interface mainInterface, @Nonnull final Package packageDeclaration, final boolean builderCopyConstructor,\n\t\t\tfinal boolean builderFlatMutators, final boolean builderFluentMutators, final boolean builderImplementsInterface,\n\t\t\tfinal boolean copyMethods, final boolean guava, final boolean hashCodeAndEquals, final boolean hashCodePrecomputation,\n\t\t\tfinal boolean jsr305Annotations, final boolean qualityCheck, final boolean toString, final boolean replacement,\n\t\t\tfinal boolean serializable)", "full_signature": "public  ImmutableSettings(@Nonnull final String builderName, @Nonnull final String fieldPrefix, @Nonnull final List<Field> fields,\n\t\t\t@Nonnull final String immutableName, @Nonnull final List<Import> imports, @Nonnull final List<Interface> interfaces,\n\t\t\t@Nonnull final Interface mainInterface, @Nonnull final Package packageDeclaration, final boolean builderCopyConstructor,\n\t\t\tfinal boolean builderFlatMutators, final boolean builderFluentMutators, final boolean builderImplementsInterface,\n\t\t\tfinal boolean copyMethods, final boolean guava, final boolean hashCodeAndEquals, final boolean hashCodePrecomputation,\n\t\t\tfinal boolean jsr305Annotations, final boolean qualityCheck, final boolean toString, final boolean replacement,\n\t\t\tfinal boolean serializable)", "class_method_signature": "ImmutableSettings.ImmutableSettings(@Nonnull final String builderName, @Nonnull final String fieldPrefix, @Nonnull final List<Field> fields,\n\t\t\t@Nonnull final String immutableName, @Nonnull final List<Import> imports, @Nonnull final List<Interface> interfaces,\n\t\t\t@Nonnull final Interface mainInterface, @Nonnull final Package packageDeclaration, final boolean builderCopyConstructor,\n\t\t\tfinal boolean builderFlatMutators, final boolean builderFluentMutators, final boolean builderImplementsInterface,\n\t\t\tfinal boolean copyMethods, final boolean guava, final boolean hashCodeAndEquals, final boolean hashCodePrecomputation,\n\t\t\tfinal boolean jsr305Annotations, final boolean qualityCheck, final boolean toString, final boolean replacement,\n\t\t\tfinal boolean serializable)", "testcase": false, "constructor": true}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "ImmutableSettings.equals(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "getBuilderName", "parameters": "()", "modifiers": "@Override @Nonnull public", "return": "String", "signature": "String getBuilderName()", "full_signature": "@Override @Nonnull public String getBuilderName()", "class_method_signature": "ImmutableSettings.getBuilderName()", "testcase": false, "constructor": false}, {"identifier": "getFieldPrefix", "parameters": "()", "modifiers": "@Override @Nonnull public", "return": "String", "signature": "String getFieldPrefix()", "full_signature": "@Override @Nonnull public String getFieldPrefix()", "class_method_signature": "ImmutableSettings.getFieldPrefix()", "testcase": false, "constructor": false}, {"identifier": "getFields", "parameters": "()", "modifiers": "@Override @Nonnull public", "return": "List<Field>", "signature": "List<Field> getFields()", "full_signature": "@Override @Nonnull public List<Field> getFields()", "class_method_signature": "ImmutableSettings.getFields()", "testcase": false, "constructor": false}, {"identifier": "getImmutableName", "parameters": "()", "modifiers": "@Override @Nonnull public", "return": "String", "signature": "String getImmutableName()", "full_signature": "@Override @Nonnull public String getImmutableName()", "class_method_signature": "ImmutableSettings.getImmutableName()", "testcase": false, "constructor": false}, {"identifier": "getImports", "parameters": "()", "modifiers": "@Override @Nonnull public", "return": "List<Import>", "signature": "List<Import> getImports()", "full_signature": "@Override @Nonnull public List<Import> getImports()", "class_method_signature": "ImmutableSettings.getImports()", "testcase": false, "constructor": false}, {"identifier": "getInterfaces", "parameters": "()", "modifiers": "@Override @Nonnull public", "return": "List<Interface>", "signature": "List<Interface> getInterfaces()", "full_signature": "@Override @Nonnull public List<Interface> getInterfaces()", "class_method_signature": "ImmutableSettings.getInterfaces()", "testcase": false, "constructor": false}, {"identifier": "getMainInterface", "parameters": "()", "modifiers": "@Override @Nonnull public", "return": "Interface", "signature": "Interface getMainInterface()", "full_signature": "@Override @Nonnull public Interface getMainInterface()", "class_method_signature": "ImmutableSettings.getMainInterface()", "testcase": false, "constructor": false}, {"identifier": "getPackageDeclaration", "parameters": "()", "modifiers": "@Override @Nonnull public", "return": "Package", "signature": "Package getPackageDeclaration()", "full_signature": "@Override @Nonnull public Package getPackageDeclaration()", "class_method_signature": "ImmutableSettings.getPackageDeclaration()", "testcase": false, "constructor": false}, {"identifier": "hasBuilderCopyConstructor", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasBuilderCopyConstructor()", "full_signature": "@Override public boolean hasBuilderCopyConstructor()", "class_method_signature": "ImmutableSettings.hasBuilderCopyConstructor()", "testcase": false, "constructor": false}, {"identifier": "hasBuilderFlatMutators", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasBuilderFlatMutators()", "full_signature": "@Override public boolean hasBuilderFlatMutators()", "class_method_signature": "ImmutableSettings.hasBuilderFlatMutators()", "testcase": false, "constructor": false}, {"identifier": "hasBuilderFluentMutators", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasBuilderFluentMutators()", "full_signature": "@Override public boolean hasBuilderFluentMutators()", "class_method_signature": "ImmutableSettings.hasBuilderFluentMutators()", "testcase": false, "constructor": false}, {"identifier": "hasBuilderImplementsInterface", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasBuilderImplementsInterface()", "full_signature": "@Override public boolean hasBuilderImplementsInterface()", "class_method_signature": "ImmutableSettings.hasBuilderImplementsInterface()", "testcase": false, "constructor": false}, {"identifier": "hasCopyMethods", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasCopyMethods()", "full_signature": "@Override public boolean hasCopyMethods()", "class_method_signature": "ImmutableSettings.hasCopyMethods()", "testcase": false, "constructor": false}, {"identifier": "hasGuava", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasGuava()", "full_signature": "@Override public boolean hasGuava()", "class_method_signature": "ImmutableSettings.hasGuava()", "testcase": false, "constructor": false}, {"identifier": "hasHashCodeAndEquals", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasHashCodeAndEquals()", "full_signature": "@Override public boolean hasHashCodeAndEquals()", "class_method_signature": "ImmutableSettings.hasHashCodeAndEquals()", "testcase": false, "constructor": false}, {"identifier": "hasHashCodePrecomputation", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasHashCodePrecomputation()", "full_signature": "@Override public boolean hasHashCodePrecomputation()", "class_method_signature": "ImmutableSettings.hasHashCodePrecomputation()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableSettings.hashCode()", "testcase": false, "constructor": false}, {"identifier": "hasJsr305Annotations", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasJsr305Annotations()", "full_signature": "@Override public boolean hasJsr305Annotations()", "class_method_signature": "ImmutableSettings.hasJsr305Annotations()", "testcase": false, "constructor": false}, {"identifier": "hasQualityCheck", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasQualityCheck()", "full_signature": "@Override public boolean hasQualityCheck()", "class_method_signature": "ImmutableSettings.hasQualityCheck()", "testcase": false, "constructor": false}, {"identifier": "hasToString", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasToString()", "full_signature": "@Override public boolean hasToString()", "class_method_signature": "ImmutableSettings.hasToString()", "testcase": false, "constructor": false}, {"identifier": "isReplacement", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isReplacement()", "full_signature": "@Override public boolean isReplacement()", "class_method_signature": "ImmutableSettings.isReplacement()", "testcase": false, "constructor": false}, {"identifier": "isSerializable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSerializable()", "full_signature": "@Override public boolean isSerializable()", "class_method_signature": "ImmutableSettings.isSerializable()", "testcase": false, "constructor": false}], "file": "modules/quality-immutable-object/src/main/java/net/sf/qualitycheck/immutableobject/domain/ImmutableSettings.java"}, "focal_method": {"identifier": "copyOf", "parameters": "(@Nonnull final Settings settings)", "modifiers": "@Nonnull public static", "return": "ImmutableSettings", "body": "@Nonnull\n\tpublic static ImmutableSettings copyOf(@Nonnull final Settings settings) {\n\t\tCheck.notNull(settings, \"settings\");\n\t\treturn new ImmutableSettings(settings.getBuilderName(), settings.getFieldPrefix(), settings.getFields(),\n\t\t\t\tsettings.getImmutableName(), settings.getImports(), settings.getInterfaces(), settings.getMainInterface(),\n\t\t\t\tsettings.getPackageDeclaration(), settings.hasBuilderCopyConstructor(), settings.hasBuilderFlatMutators(),\n\t\t\t\tsettings.hasBuilderFluentMutators(), settings.hasBuilderImplementsInterface(), settings.hasCopyMethods(),\n\t\t\t\tsettings.hasGuava(), settings.hasHashCodeAndEquals(), settings.hasHashCodePrecomputation(),\n\t\t\t\tsettings.hasJsr305Annotations(), settings.hasQualityCheck(), settings.hasToString(), settings.isReplacement(),\n\t\t\t\tsettings.isSerializable());\n\t}", "signature": "ImmutableSettings copyOf(@Nonnull final Settings settings)", "full_signature": "@Nonnull public static ImmutableSettings copyOf(@Nonnull final Settings settings)", "class_method_signature": "ImmutableSettings.copyOf(@Nonnull final Settings settings)", "testcase": false, "constructor": false, "invocations": ["notNull", "getBuilderName", "getFieldPrefix", "getFields", "getImmutableName", "getImports", "getInterfaces", "getMainInterface", "getPackageDeclaration", "hasBuilderCopyConstructor", "hasBuilderFlatMutators", "hasBuilderFluentMutators", "hasBuilderImplementsInterface", "hasCopyMethods", "hasGuava", "hasHashCodeAndEquals", "hasHashCodePrecomputation", "hasJsr305Annotations", "hasQualityCheck", "hasToString", "isReplacement", "isSerializable"]}, "repository": {"repo_id": 5590873, "url": "https://github.com/arouel/quality-check", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 7, "size": 1671, "license": "licensed"}}