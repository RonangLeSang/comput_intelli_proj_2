{"test_class": {"identifier": "IOUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(getClass());", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(getClass())", "var_name": "logger"}, {"original_string": "String fileName = \"test.txt\";", "modifier": "", "type": "String", "declarator": "fileName = \"test.txt\"", "var_name": "fileName"}], "file": "cm4j-core/src/test/java/com/cm4j/core/utils/IOUtilsTest.java"}, "test_case": {"identifier": "testReadLines", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testReadLines() throws IOException {\n\t\t// \u65b0\u5efa\u6587\u4ef6\n\t\tIOUtils.createFile(fileName);\n\n\t\t// \u8ffd\u52a0\u5185\u5bb9\n\t\t// IOUtils.append(fileName, \"snailgame-xp-001.txt:135\\n\");\n\t\t// IOUtils.append(fileName, \"snailgame-xp-002.txt:248\\n\");\n\t\t// IOUtils.append(fileName, \"snailgame-xp-003.txt:326\\n\");\n\n\t\tObject[] readLines = IOUtils.readLines(new File(fileName), 0);\n\t\tlong pos = (Long) readLines[0];\n\t\tlogger.debug(\"pos:{}\", pos);\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tList<String> lines = (List<String>) readLines[1];\n\t\tfor (String line : lines) {\n\t\t\tlogger.debug(\"line:{}\", line);\n\t\t}\n\n\t}", "signature": "void testReadLines()", "full_signature": "@Test public void testReadLines()", "class_method_signature": "IOUtilsTest.testReadLines()", "testcase": true, "constructor": false, "invocations": ["createFile", "readLines", "debug", "debug"]}, "focal_class": {"identifier": "IOUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "toString", "parameters": "(InputStream is)", "modifiers": "public static", "return": "String", "signature": "String toString(InputStream is)", "full_signature": "public static String toString(InputStream is)", "class_method_signature": "IOUtils.toString(InputStream is)", "testcase": false, "constructor": false}, {"identifier": "readlines", "parameters": "(FileReader fr)", "modifiers": "public static", "return": "Iterable<String>", "signature": "Iterable<String> readlines(FileReader fr)", "full_signature": "public static Iterable<String> readlines(FileReader fr)", "class_method_signature": "IOUtils.readlines(FileReader fr)", "testcase": false, "constructor": false}, {"identifier": "readlines", "parameters": "(final BufferedReader br)", "modifiers": "public static", "return": "Iterable<String>", "signature": "Iterable<String> readlines(final BufferedReader br)", "full_signature": "public static Iterable<String> readlines(final BufferedReader br)", "class_method_signature": "IOUtils.readlines(final BufferedReader br)", "testcase": false, "constructor": false}, {"identifier": "readLines", "parameters": "(File file, long pos)", "modifiers": "public static", "return": "Object[]", "signature": "Object[] readLines(File file, long pos)", "full_signature": "public static Object[] readLines(File file, long pos)", "class_method_signature": "IOUtils.readLines(File file, long pos)", "testcase": false, "constructor": false}, {"identifier": "closeRandomAccessFile", "parameters": "(RandomAccessFile file)", "modifiers": "private static", "return": "void", "signature": "void closeRandomAccessFile(RandomAccessFile file)", "full_signature": "private static void closeRandomAccessFile(RandomAccessFile file)", "class_method_signature": "IOUtils.closeRandomAccessFile(RandomAccessFile file)", "testcase": false, "constructor": false}, {"identifier": "readlinesWithIndex", "parameters": "(final BufferedReader br)", "modifiers": "public static", "return": "List<Object[]>", "signature": "List<Object[]> readlinesWithIndex(final BufferedReader br)", "full_signature": "public static List<Object[]> readlinesWithIndex(final BufferedReader br)", "class_method_signature": "IOUtils.readlinesWithIndex(final BufferedReader br)", "testcase": false, "constructor": false}, {"identifier": "createFile", "parameters": "(String filePath)", "modifiers": "public static", "return": "boolean", "signature": "boolean createFile(String filePath)", "full_signature": "public static boolean createFile(String filePath)", "class_method_signature": "IOUtils.createFile(String filePath)", "testcase": false, "constructor": false}, {"identifier": "replaceLine", "parameters": "(String filePath, String regex, String dist, String addedLine)", "modifiers": "public static", "return": "int", "signature": "int replaceLine(String filePath, String regex, String dist, String addedLine)", "full_signature": "public static int replaceLine(String filePath, String regex, String dist, String addedLine)", "class_method_signature": "IOUtils.replaceLine(String filePath, String regex, String dist, String addedLine)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(String filePath, String appended)", "modifiers": "public static", "return": "void", "signature": "void append(String filePath, String appended)", "full_signature": "public static void append(String filePath, String appended)", "class_method_signature": "IOUtils.append(String filePath, String appended)", "testcase": false, "constructor": false}, {"identifier": "renameFile", "parameters": "(String oldFilePath, String newNamePath)", "modifiers": "public static", "return": "boolean", "signature": "boolean renameFile(String oldFilePath, String newNamePath)", "full_signature": "public static boolean renameFile(String oldFilePath, String newNamePath)", "class_method_signature": "IOUtils.renameFile(String oldFilePath, String newNamePath)", "testcase": false, "constructor": false}], "file": "cm4j-core/src/main/java/com/cm4j/core/utils/IOUtils.java"}, "focal_method": {"identifier": "readlines", "parameters": "(FileReader fr)", "modifiers": "public static", "return": "Iterable<String>", "body": "public static Iterable<String> readlines(FileReader fr) throws IOException {\n\t\tfinal BufferedReader br = new BufferedReader(fr);\n\t\treturn readlines(br);\n\t}", "signature": "Iterable<String> readlines(FileReader fr)", "full_signature": "public static Iterable<String> readlines(FileReader fr)", "class_method_signature": "IOUtils.readlines(FileReader fr)", "testcase": false, "constructor": false, "invocations": ["readlines"]}, "repository": {"repo_id": 1502367, "url": "https://github.com/cm4j/cm4j-all", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 6, "size": 2654, "license": "licensed"}}