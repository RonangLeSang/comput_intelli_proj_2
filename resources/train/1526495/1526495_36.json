{"test_class": {"identifier": "InvokerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final int pauseBetweenTrials = 0;", "modifier": "private final", "type": "int", "declarator": "pauseBetweenTrials = 0", "var_name": "pauseBetweenTrials"}], "file": "Commons/src/test/java/org/ow2/choreos/invoker/InvokerTest.java"}, "test_case": {"identifier": "shouldInvokeAndNotTimeout", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldInvokeAndNotTimeout() throws InvokerException {\n\n        Callable<String> task = new TakesHundredMilliSecToWork();\n        int trials = 1;\n        int timeout = 500;\n\n        Invoker<String> invoker = new Invoker<String>(\"TakesHundredMilliSecToWork\", task, trials, timeout,\n                pauseBetweenTrials, TimeUnit.MILLISECONDS);\n        String result = invoker.invoke();\n\n        assertEquals(\"0\", result);\n    }", "signature": "void shouldInvokeAndNotTimeout()", "full_signature": "@Test public void shouldInvokeAndNotTimeout()", "class_method_signature": "InvokerTest.shouldInvokeAndNotTimeout()", "testcase": true, "constructor": false, "invocations": ["invoke", "assertEquals"]}, "focal_class": {"identifier": "Invoker", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static boolean SAVE_HISTORY = false;", "modifier": "public static", "type": "boolean", "declarator": "SAVE_HISTORY = false", "var_name": "SAVE_HISTORY"}, {"original_string": "private static Logger logger = Logger.getLogger(Invoker.class);", "modifier": "private static", "type": "Logger", "declarator": "logger = Logger.getLogger(Invoker.class)", "var_name": "logger"}, {"original_string": "private final String taskName;", "modifier": "private final", "type": "String", "declarator": "taskName", "var_name": "taskName"}, {"original_string": "private final Callable<T> task;", "modifier": "private final", "type": "Callable<T>", "declarator": "task", "var_name": "task"}, {"original_string": "private final int trials;", "modifier": "private final", "type": "int", "declarator": "trials", "var_name": "trials"}, {"original_string": "private final int trialTimeout;", "modifier": "private final", "type": "int", "declarator": "trialTimeout", "var_name": "trialTimeout"}, {"original_string": "private final int pauseBetweenTrials;", "modifier": "private final", "type": "int", "declarator": "pauseBetweenTrials", "var_name": "pauseBetweenTrials"}, {"original_string": "private final TimeUnit timeUnit;", "modifier": "private final", "type": "TimeUnit", "declarator": "timeUnit", "var_name": "timeUnit"}, {"original_string": "private final InvokerHistory history = InvokerHistory.getInstance();", "modifier": "private final", "type": "InvokerHistory", "declarator": "history = InvokerHistory.getInstance()", "var_name": "history"}], "methods": [{"identifier": "Invoker", "parameters": "(String taskName, Callable<T> task, int trials, int trialTimeout, int pauseBetweenTrials, TimeUnit timeUnit)", "modifiers": "", "return": "", "signature": " Invoker(String taskName, Callable<T> task, int trials, int trialTimeout, int pauseBetweenTrials, TimeUnit timeUnit)", "full_signature": "  Invoker(String taskName, Callable<T> task, int trials, int trialTimeout, int pauseBetweenTrials, TimeUnit timeUnit)", "class_method_signature": "Invoker.Invoker(String taskName, Callable<T> task, int trials, int trialTimeout, int pauseBetweenTrials, TimeUnit timeUnit)", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "()", "modifiers": "public", "return": "T", "signature": "T invoke()", "full_signature": "public T invoke()", "class_method_signature": "Invoker.invoke()", "testcase": false, "constructor": false}, {"identifier": "tryToInvoke", "parameters": "()", "modifiers": "private", "return": "T", "signature": "T tryToInvoke()", "full_signature": "private T tryToInvoke()", "class_method_signature": "Invoker.tryToInvoke()", "testcase": false, "constructor": false}, {"identifier": "logHistory", "parameters": "(long t0, long tf)", "modifiers": "private", "return": "void", "signature": "void logHistory(long t0, long tf)", "full_signature": "private void logHistory(long t0, long tf)", "class_method_signature": "Invoker.logHistory(long t0, long tf)", "testcase": false, "constructor": false}, {"identifier": "pause", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void pause()", "full_signature": "private void pause()", "class_method_signature": "Invoker.pause()", "testcase": false, "constructor": false}], "file": "Commons/src/main/java/org/ow2/choreos/invoker/Invoker.java"}, "focal_method": {"identifier": "invoke", "parameters": "()", "modifiers": "public", "return": "T", "body": "public T invoke() throws InvokerException {\n        Throwable cause = null;\n        for (int tried = 0; tried < trials; tried++) {\n            try {\n                T result = tryToInvoke();\n                return result;\n            } catch (Exception e) {\n                cause = e;\n                pause();\n            }\n        }\n        throw new InvokerException(cause);\n    }", "signature": "T invoke()", "full_signature": "public T invoke()", "class_method_signature": "Invoker.invoke()", "testcase": false, "constructor": false, "invocations": ["tryToInvoke", "pause"]}, "repository": {"repo_id": 1526495, "url": "https://github.com/choreos/choreos_middleware", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 9, "size": 18008, "license": "licensed"}}