{"test_class": {"identifier": "TestServerContextImpl", "superclass": "", "interfaces": "", "fields": [], "file": "llama/src/test/java/com/cloudera/llama/util/TestServerContextImpl.java"}, "test_case": {"identifier": "testStopNoStart", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n  public void testStopNoStart() throws Exception {\n    ServerContextImpl impl =\n        new ServerContextImpl(\"llama\", \"Server Context\", 2,2,2);\n    impl.stop();\n  }", "signature": "void testStopNoStart()", "full_signature": "@Test(expected = IllegalStateException.class) public void testStopNoStart()", "class_method_signature": "TestServerContextImpl.testStopNoStart()", "testcase": true, "constructor": false, "invocations": ["stop"]}, "focal_class": {"identifier": "ServerContextImpl", "superclass": "", "interfaces": "implements ServerContext", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(\n      ServerContextImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(\n      ServerContextImpl.class)", "var_name": "LOG"}, {"original_string": "private String prefix;", "modifier": "private", "type": "String", "declarator": "prefix", "var_name": "prefix"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private int asyncMaxQueued;", "modifier": "private", "type": "int", "declarator": "asyncMaxQueued", "var_name": "asyncMaxQueued"}, {"original_string": "private int asyncThreads;", "modifier": "private", "type": "int", "declarator": "asyncThreads", "var_name": "asyncThreads"}, {"original_string": "private int schedulerThreads;", "modifier": "private", "type": "int", "declarator": "schedulerThreads", "var_name": "schedulerThreads"}, {"original_string": "private MetricRegistry metricRegistry;", "modifier": "private", "type": "MetricRegistry", "declarator": "metricRegistry", "var_name": "metricRegistry"}, {"original_string": "private DelayQueue<DelayedRunnable> asyncQueue;", "modifier": "private", "type": "DelayQueue<DelayedRunnable>", "declarator": "asyncQueue", "var_name": "asyncQueue"}, {"original_string": "private ThreadPoolExecutor asyncExecutor;", "modifier": "private", "type": "ThreadPoolExecutor", "declarator": "asyncExecutor", "var_name": "asyncExecutor"}, {"original_string": "private ScheduledExecutorService scheduledExecutor;", "modifier": "private", "type": "ScheduledExecutorService", "declarator": "scheduledExecutor", "var_name": "scheduledExecutor"}, {"original_string": "private Timer schedulerExecutorDelayTimer;", "modifier": "private", "type": "Timer", "declarator": "schedulerExecutorDelayTimer", "var_name": "schedulerExecutorDelayTimer"}, {"original_string": "private Timer asyncExecutorDelayTimer;", "modifier": "private", "type": "Timer", "declarator": "asyncExecutorDelayTimer", "var_name": "asyncExecutorDelayTimer"}, {"original_string": "private volatile ServerState state;", "modifier": "private volatile", "type": "ServerState", "declarator": "state", "var_name": "state"}], "methods": [{"identifier": "ServerContextImpl", "parameters": "(String name, String prefix, int asyncThreads,\n      int asyncMaxQueued, int schedulerThreads)", "modifiers": "public", "return": "", "signature": " ServerContextImpl(String name, String prefix, int asyncThreads,\n      int asyncMaxQueued, int schedulerThreads)", "full_signature": "public  ServerContextImpl(String name, String prefix, int asyncThreads,\n      int asyncMaxQueued, int schedulerThreads)", "class_method_signature": "ServerContextImpl.ServerContextImpl(String name, String prefix, int asyncThreads,\n      int asyncMaxQueued, int schedulerThreads)", "testcase": false, "constructor": true}, {"identifier": "start", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public synchronized", "return": "void", "signature": "void start()", "full_signature": "@SuppressWarnings(\"unchecked\") public synchronized void start()", "class_method_signature": "ServerContextImpl.start()", "testcase": false, "constructor": false}, {"identifier": "stopExecutorService", "parameters": "(ExecutorService executorService)", "modifiers": "private", "return": "void", "signature": "void stopExecutorService(ExecutorService executorService)", "full_signature": "private void stopExecutorService(ExecutorService executorService)", "class_method_signature": "ServerContextImpl.stopExecutorService(ExecutorService executorService)", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void stop()", "full_signature": "public synchronized void stop()", "class_method_signature": "ServerContextImpl.stop()", "testcase": false, "constructor": false}, {"identifier": "checkIsRunning", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkIsRunning()", "full_signature": "private void checkIsRunning()", "class_method_signature": "ServerContextImpl.checkIsRunning()", "testcase": false, "constructor": false}, {"identifier": "getMetricRegistry", "parameters": "()", "modifiers": "public synchronized", "return": "MetricRegistry", "signature": "MetricRegistry getMetricRegistry()", "full_signature": "public synchronized MetricRegistry getMetricRegistry()", "class_method_signature": "ServerContextImpl.getMetricRegistry()", "testcase": false, "constructor": false}, {"identifier": "scheduleExecution", "parameters": "(Callable<Void> callable,\n      long firstExecutionDelay, long executionInterval, TimeUnit timeUnit)", "modifiers": "@Override public", "return": "Scheduled", "signature": "Scheduled scheduleExecution(Callable<Void> callable,\n      long firstExecutionDelay, long executionInterval, TimeUnit timeUnit)", "full_signature": "@Override public Scheduled scheduleExecution(Callable<Void> callable,\n      long firstExecutionDelay, long executionInterval, TimeUnit timeUnit)", "class_method_signature": "ServerContextImpl.scheduleExecution(Callable<Void> callable,\n      long firstExecutionDelay, long executionInterval, TimeUnit timeUnit)", "testcase": false, "constructor": false}, {"identifier": "asyncExecution", "parameters": "(Callable<Void> callable)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean asyncExecution(Callable<Void> callable)", "full_signature": "@Override public boolean asyncExecution(Callable<Void> callable)", "class_method_signature": "ServerContextImpl.asyncExecution(Callable<Void> callable)", "testcase": false, "constructor": false}, {"identifier": "asyncExecution", "parameters": "(Callable<Void> callable, long executionDelay,\n      TimeUnit timeUnit)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean asyncExecution(Callable<Void> callable, long executionDelay,\n      TimeUnit timeUnit)", "full_signature": "@Override public boolean asyncExecution(Callable<Void> callable, long executionDelay,\n      TimeUnit timeUnit)", "class_method_signature": "ServerContextImpl.asyncExecution(Callable<Void> callable, long executionDelay,\n      TimeUnit timeUnit)", "testcase": false, "constructor": false}, {"identifier": "findMetric", "parameters": "(MetricType type, String key)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "T", "signature": "T findMetric(MetricType type, String key)", "full_signature": "@SuppressWarnings(\"unchecked\") private T findMetric(MetricType type, String key)", "class_method_signature": "ServerContextImpl.findMetric(MetricType type, String key)", "testcase": false, "constructor": false}, {"identifier": "createMetricKey", "parameters": "(String component, String key)", "modifiers": "@Override public", "return": "String", "signature": "String createMetricKey(String component, String key)", "full_signature": "@Override public String createMetricKey(String component, String key)", "class_method_signature": "ServerContextImpl.createMetricKey(String component, String key)", "testcase": false, "constructor": false}, {"identifier": "getFullMetricKey", "parameters": "(String key, MetricType type)", "modifiers": "private", "return": "String", "signature": "String getFullMetricKey(String key, MetricType type)", "full_signature": "private String getFullMetricKey(String key, MetricType type)", "class_method_signature": "ServerContextImpl.getFullMetricKey(String key, MetricType type)", "testcase": false, "constructor": false}, {"identifier": "registerGauge", "parameters": "(String key, Gauge gauge)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void registerGauge(String key, Gauge gauge)", "full_signature": "@Override public synchronized void registerGauge(String key, Gauge gauge)", "class_method_signature": "ServerContextImpl.registerGauge(String key, Gauge gauge)", "testcase": false, "constructor": false}, {"identifier": "createTimer", "parameters": "()", "modifiers": "private", "return": "Timer", "signature": "Timer createTimer()", "full_signature": "private Timer createTimer()", "class_method_signature": "ServerContextImpl.createTimer()", "testcase": false, "constructor": false}, {"identifier": "registerTimer", "parameters": "(String key)", "modifiers": "@Override public synchronized", "return": "Timer", "signature": "Timer registerTimer(String key)", "full_signature": "@Override public synchronized Timer registerTimer(String key)", "class_method_signature": "ServerContextImpl.registerTimer(String key)", "testcase": false, "constructor": false}, {"identifier": "registerMeter", "parameters": "(String key)", "modifiers": "@Override public synchronized", "return": "Meter", "signature": "Meter registerMeter(String key)", "full_signature": "@Override public synchronized Meter registerMeter(String key)", "class_method_signature": "ServerContextImpl.registerMeter(String key)", "testcase": false, "constructor": false}], "file": "llama/src/main/java/com/cloudera/llama/util/ServerContextImpl.java"}, "focal_method": {"identifier": "stop", "parameters": "()", "modifiers": "public synchronized", "return": "void", "body": "public synchronized void stop() {\n    checkIsRunning();\n    state = ServerState.STOPPED;\n    LOG.debug(\"'{}' - Stopping\", name);\n    metricRegistry = null;\n    stopExecutorService(asyncExecutor);\n    stopExecutorService(scheduledExecutor);\n  }", "signature": "void stop()", "full_signature": "public synchronized void stop()", "class_method_signature": "ServerContextImpl.stop()", "testcase": false, "constructor": false, "invocations": ["checkIsRunning", "debug", "stopExecutorService", "stopExecutorService"]}, "repository": {"repo_id": 13068300, "url": "https://github.com/cloudera/llama", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 32, "size": 7630, "license": "licensed"}}