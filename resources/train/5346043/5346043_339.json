{"test_class": {"identifier": "TestAngular", "superclass": "", "interfaces": "", "fields": [], "file": "java/libsim/src/test/java/com/simmachines/libsim/enc/vector/TestAngular.java"}, "test_case": {"identifier": "test3", "parameters": "()", "modifiers": "@Test // jdsalazar public", "return": "void", "body": "@Test\n\t// jdsalazar\n\tpublic void test3() {\n\t\tdouble[] v1 = new double[] { 248.124, -321.574, 788.14, 0.001, -459.298 };\n\t\tdouble[] v2 = new double[] { 97.145, -78.658, 417.0004, -4.02,\n\t\t\t\t-7865.3594 };\n\t\tAsserts.assertEqualLength(v1, v2);\n\t\tdouble res = Angular.distance(v1, v2);\n\t\tAsserts.assertEquals(res, 1.0387190997679);\n\t}", "signature": "void test3()", "full_signature": "@Test // jdsalazar public void test3()", "class_method_signature": "TestAngular.test3()", "testcase": true, "constructor": false, "invocations": ["assertEqualLength", "distance", "assertEquals"]}, "focal_class": {"identifier": "Angular", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "distance", "parameters": "(double[] v1,double[] v2)", "modifiers": "public static", "return": "double", "signature": "double distance(double[] v1,double[] v2)", "full_signature": "public static double distance(double[] v1,double[] v2)", "class_method_signature": "Angular.distance(double[] v1,double[] v2)", "testcase": false, "constructor": false}], "file": "java/libsim/src/main/java/com/simmachines/libsim/enc/vector/Angular.java"}, "focal_method": {"identifier": "distance", "parameters": "(double[] v1,double[] v2)", "modifiers": "public static", "return": "double", "body": "public static double distance(double[] v1,double[] v2){\n\t\tAsserts.assertEqualLength(v1, v2);\n\t\tAsserts.assertHasAllZeros(v1);\n\t\tAsserts.assertHasAllZeros(v2);\n\t\tif(v1==v2){\n\t\t\treturn 0;\n\t\t}\n\t\tdouble res;\n\t\tres=CommonStats.dotProduct(v1, v2)/(CommonStats.norm(v1)*CommonStats.norm(v2));\n\t\tAsserts.assertBetween1andMinus1(res);\n\t\treturn Math.acos(res);\n\t}", "signature": "double distance(double[] v1,double[] v2)", "full_signature": "public static double distance(double[] v1,double[] v2)", "class_method_signature": "Angular.distance(double[] v1,double[] v2)", "testcase": false, "constructor": false, "invocations": ["assertEqualLength", "assertHasAllZeros", "assertHasAllZeros", "dotProduct", "norm", "norm", "assertBetween1andMinus1", "acos"]}, "repository": {"repo_id": 5346043, "url": "https://github.com/amuller/libsim", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 15, "size": 1173, "license": "licensed"}}