{"test_class": {"identifier": "TestPenroseSize", "superclass": "", "interfaces": "", "fields": [], "file": "java/libsim/src/test/java/com/simmachines/libsim/enc/vector/TestPenroseSize.java"}, "test_case": {"identifier": "test3", "parameters": "()", "modifiers": "@Test //jdsalazar public", "return": "void", "body": "@Test\n\t//jdsalazar\n\tpublic void test3(){\n\t\tdouble[] v1 = new double[]{248.124,-321.574,788.14,0.001,-459.298};\n\t\tdouble[] v2 = new double[]{97.145,-78.658,417.0004,-4.02,-7865.3594};\n\t\tAsserts.assertEqualLength(v1, v2);\n\t\tdouble res = PenroseSize.distance(v1, v2);\n\t\tAsserts.assertEquals(res, 18280.11733601414824);\n\t}", "signature": "void test3()", "full_signature": "@Test //jdsalazar public void test3()", "class_method_signature": "TestPenroseSize.test3()", "testcase": true, "constructor": false, "invocations": ["assertEqualLength", "distance", "assertEquals"]}, "focal_class": {"identifier": "PenroseSize", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "distance", "parameters": "(double[] v1, double[] v2)", "modifiers": "public static", "return": "double", "signature": "double distance(double[] v1, double[] v2)", "full_signature": "public static double distance(double[] v1, double[] v2)", "class_method_signature": "PenroseSize.distance(double[] v1, double[] v2)", "testcase": false, "constructor": false}], "file": "java/libsim/src/main/java/com/simmachines/libsim/enc/vector/PenroseSize.java"}, "focal_method": {"identifier": "distance", "parameters": "(double[] v1, double[] v2)", "modifiers": "public static", "return": "double", "body": "public static double distance(double[] v1, double[] v2){\n\t\tAsserts.assertEqualLength(v1, v2);\n\t\tint n = v1.length;\n\t\tdouble sum = 0;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tsum += Math.abs(v1[i]-v2[i]);\n\t\t}\n\t\treturn sum*Math.sqrt(n);\n\t}", "signature": "double distance(double[] v1, double[] v2)", "full_signature": "public static double distance(double[] v1, double[] v2)", "class_method_signature": "PenroseSize.distance(double[] v1, double[] v2)", "testcase": false, "constructor": false, "invocations": ["assertEqualLength", "abs", "sqrt"]}, "repository": {"repo_id": 5346043, "url": "https://github.com/amuller/libsim", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 15, "size": 1173, "license": "licensed"}}