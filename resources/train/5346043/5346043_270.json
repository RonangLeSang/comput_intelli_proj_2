{"test_class": {"identifier": "TestPharmacological", "superclass": "", "interfaces": "", "fields": [], "file": "java/libsim/src/test/java/com/simmachines/libsim/enc/vector/TestPharmacological.java"}, "test_case": {"identifier": "test1", "parameters": "()", "modifiers": "@Test //jdsalazar public", "return": "void", "body": "@Test\n\t//jdsalazar\n\tpublic void test1(){\n\t\tdouble[] v1 = new double[]{8,3,7};\n\t\tdouble[] v2 = new double[]{9,8,4};\n\t\tAsserts.assertEqualLength(v1, v2);\n\t\tdouble res = Pharmacological.distance(v1, v2);\n\t\tAsserts.assertEquals(res, 5.91607978309962);\n\t}", "signature": "void test1()", "full_signature": "@Test //jdsalazar public void test1()", "class_method_signature": "TestPharmacological.test1()", "testcase": true, "constructor": false, "invocations": ["assertEqualLength", "distance", "assertEquals"]}, "focal_class": {"identifier": "Pharmacological", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "distance", "parameters": "(double v1[],double v2[])", "modifiers": "public static", "return": "double", "signature": "double distance(double v1[],double v2[])", "full_signature": "public static double distance(double v1[],double v2[])", "class_method_signature": "Pharmacological.distance(double v1[],double v2[])", "testcase": false, "constructor": false}], "file": "java/libsim/src/main/java/com/simmachines/libsim/enc/vector/Pharmacological.java"}, "focal_method": {"identifier": "distance", "parameters": "(double v1[],double v2[])", "modifiers": "public static", "return": "double", "body": "public static double distance(double v1[],double v2[]){\n\t\tAsserts.assertEqualLength(v1, v2);\n\t\tdouble res = 0;\n\t\tfor(int i=0;i<v1.length;i++){\n\t\t\tres += Math.pow(v1[i] - v2[i], 2);\n\t\t}\n\t\treturn Math.sqrt(res);\n\t}", "signature": "double distance(double v1[],double v2[])", "full_signature": "public static double distance(double v1[],double v2[])", "class_method_signature": "Pharmacological.distance(double v1[],double v2[])", "testcase": false, "constructor": false, "invocations": ["assertEqualLength", "pow", "sqrt"]}, "repository": {"repo_id": 5346043, "url": "https://github.com/amuller/libsim", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 15, "size": 1173, "license": "licensed"}}