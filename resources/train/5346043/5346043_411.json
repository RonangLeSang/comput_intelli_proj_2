{"test_class": {"identifier": "TestTanimoto", "superclass": "", "interfaces": "", "fields": [], "file": "java/libsim/src/test/java/com/simmachines/libsim/enc/set/TestTanimoto.java"}, "test_case": {"identifier": "test2", "parameters": "()", "modifiers": "@Test //jdsalazar public", "return": "void", "body": "@Test\n\t//jdsalazar\n\tpublic void test2(){\n\t\tHashSet<Integer> h1 = new HashSet<Integer>();\n\t\tHashSet<Integer> h2 = new HashSet<Integer>();\n\t\th1.add(new Integer(-93));\n\t\th1.add(new Integer(-872));\n\t\th1.add(new Integer(3));\n\t\th2.add(new Integer(-872));\n\t\th2.add(new Integer(-93));\n\t\th2.add(new Integer(4748));\n\t\th2.add(new Integer(523));\n\t\tSHashSetInt s1 = new SHashSetInt(h1);\n\t\tSHashSetInt s2 = new SHashSetInt(h2);\n\t\tdouble res = Tanimoto.distance(s1, s2);\n\t\tAsserts.assertEquals(res, 0.6);\n\t}", "signature": "void test2()", "full_signature": "@Test //jdsalazar public void test2()", "class_method_signature": "TestTanimoto.test2()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "add", "add", "add", "distance", "assertEquals"]}, "focal_class": {"identifier": "Tanimoto", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "distance", "parameters": "(Set s1,Set s2)", "modifiers": "public static", "return": "double", "signature": "double distance(Set s1,Set s2)", "full_signature": "public static double distance(Set s1,Set s2)", "class_method_signature": "Tanimoto.distance(Set s1,Set s2)", "testcase": false, "constructor": false}], "file": "java/libsim/src/main/java/com/simmachines/libsim/enc/set/Tanimoto.java"}, "focal_method": {"identifier": "distance", "parameters": "(Set s1,Set s2)", "modifiers": "public static", "return": "double", "body": "public static double distance(Set s1,Set s2){\n\t\treturn 1-(double)s1.intersect(s2).size()/(double)s1.union(s2).size();\n\t}", "signature": "double distance(Set s1,Set s2)", "full_signature": "public static double distance(Set s1,Set s2)", "class_method_signature": "Tanimoto.distance(Set s1,Set s2)", "testcase": false, "constructor": false, "invocations": ["size", "intersect", "size", "union"]}, "repository": {"repo_id": 5346043, "url": "https://github.com/amuller/libsim", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 15, "size": 1173, "license": "licensed"}}