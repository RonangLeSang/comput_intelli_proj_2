{"test_class": {"identifier": "TestLP", "superclass": "", "interfaces": "", "fields": [], "file": "java/libsim/src/test/java/com/simmachines/libsim/enc/vector/TestLP.java"}, "test_case": {"identifier": "auto_test18", "parameters": "()", "modifiers": "@Test //jfquesada public", "return": "void", "body": "@Test\n\t//jfquesada\n\tpublic void auto_test18(){\n\t\tdouble[] v1 = new double[]{-422568, 920064, 845829, 51805, -77206, 811138, -33117, 878024, -97223, 969038};\n\t\tdouble[] v2 = new double[]{-532039, 100186, 423053, 348399, 274765, 280983, -368147, 441160, 435290, 427712};\n\t\tdouble p = 10;\n\t\tdouble res = LP.distance(p, v1, v2);\n\t\tdouble ref = 823529.3548048987;\n\t\tAsserts.assertDistance(ref);\n\t\tAsserts.assertEquals(res, ref);\n\t}", "signature": "void auto_test18()", "full_signature": "@Test //jfquesada public void auto_test18()", "class_method_signature": "TestLP.auto_test18()", "testcase": true, "constructor": false, "invocations": ["distance", "assertDistance", "assertEquals"]}, "focal_class": {"identifier": "LP", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "distance", "parameters": "(double p, double v1[], double v2[])", "modifiers": "public static", "return": "double", "signature": "double distance(double p, double v1[], double v2[])", "full_signature": "public static double distance(double p, double v1[], double v2[])", "class_method_signature": "LP.distance(double p, double v1[], double v2[])", "testcase": false, "constructor": false}], "file": "java/libsim/src/main/java/com/simmachines/libsim/enc/vector/LP.java"}, "focal_method": {"identifier": "distance", "parameters": "(double p, double v1[], double v2[])", "modifiers": "public static", "return": "double", "body": "public static double distance(double p, double v1[], double v2[]){\n\t\tdouble sum = 0;\n\t\tfor(int i=0; i < v1.length; i++){\n\t\t\tsum+=Math.pow(CommonStats.abs(v1[i]-v2[i]),p);\n\t\t}\n\t\tdouble res = Math.pow(sum, 1/p);\n\t\tAsserts.assertDistance(res);\n\t\treturn res;\n\t}", "signature": "double distance(double p, double v1[], double v2[])", "full_signature": "public static double distance(double p, double v1[], double v2[])", "class_method_signature": "LP.distance(double p, double v1[], double v2[])", "testcase": false, "constructor": false, "invocations": ["pow", "abs", "pow", "assertDistance"]}, "repository": {"repo_id": 5346043, "url": "https://github.com/amuller/libsim", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 15, "size": 1173, "license": "licensed"}}