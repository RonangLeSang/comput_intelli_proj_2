{"test_class": {"identifier": "ReflectiveModuleInstantiationModuleTest", "superclass": "", "interfaces": "", "fields": [], "file": "reflection-module/src/test/java/com/palominolabs/benchpress/guice/ReflectiveModuleInstantiationModuleTest.java"}, "test_case": {"identifier": "testStaticStringHelperMethodTwoModules", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testStaticStringHelperMethodTwoModules() {\n        Injector injector = Guice.createInjector(Stage.PRODUCTION, new AbstractModule() {\n            @Override\n            protected void configure() {\n                binder().requireExplicitBindings();\n                install(getModuleForModuleNamesString(PublicCtor.class.getName() + \",\" + PublicCtor2.class.getName()));\n            }\n        });\n\n        injector.getInstance(BindTarget.class);\n        injector.getInstance(Key.get(BindTarget.class, Names.named(\"foo\")));\n    }", "signature": "void testStaticStringHelperMethodTwoModules()", "full_signature": "@Test public void testStaticStringHelperMethodTwoModules()", "class_method_signature": "ReflectiveModuleInstantiationModuleTest.testStaticStringHelperMethodTwoModules()", "testcase": true, "constructor": false, "invocations": ["createInjector", "requireExplicitBindings", "binder", "install", "getModuleForModuleNamesString", "getName", "getName", "getInstance", "getInstance", "get", "named"]}, "focal_class": {"identifier": "ReflectiveModuleInstantiationModule", "superclass": "extends AbstractModule", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ReflectiveModuleInstantiationModule.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ReflectiveModuleInstantiationModule.class)", "var_name": "logger"}, {"original_string": "private final List<String> moduleClasses;", "modifier": "private final", "type": "List<String>", "declarator": "moduleClasses", "var_name": "moduleClasses"}], "methods": [{"identifier": "ReflectiveModuleInstantiationModule", "parameters": "(List<String> moduleClasses)", "modifiers": "public", "return": "", "signature": " ReflectiveModuleInstantiationModule(List<String> moduleClasses)", "full_signature": "public  ReflectiveModuleInstantiationModule(List<String> moduleClasses)", "class_method_signature": "ReflectiveModuleInstantiationModule.ReflectiveModuleInstantiationModule(List<String> moduleClasses)", "testcase": false, "constructor": true}, {"identifier": "getModuleForModuleNamesString", "parameters": "(@Nullable String moduleNames)", "modifiers": "@Nonnull public static", "return": "Module", "signature": "Module getModuleForModuleNamesString(@Nullable String moduleNames)", "full_signature": "@Nonnull public static Module getModuleForModuleNamesString(@Nullable String moduleNames)", "class_method_signature": "ReflectiveModuleInstantiationModule.getModuleForModuleNamesString(@Nullable String moduleNames)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void configure()", "full_signature": "@Override protected void configure()", "class_method_signature": "ReflectiveModuleInstantiationModule.configure()", "testcase": false, "constructor": false}], "file": "reflection-module/src/main/java/com/palominolabs/benchpress/guice/ReflectiveModuleInstantiationModule.java"}, "focal_method": {"identifier": "getModuleForModuleNamesString", "parameters": "(@Nullable String moduleNames)", "modifiers": "@Nonnull public static", "return": "Module", "body": "@Nonnull\n    public static Module getModuleForModuleNamesString(@Nullable String moduleNames) {\n        if (moduleNames != null) {\n            return new ReflectiveModuleInstantiationModule(\n                Lists.newArrayList(moduleNames.split(\",\")));\n        }\n\n        // otherwise, no op module\n        return new AbstractModule() {\n            @Override\n            protected void configure() {\n            }\n        };\n    }", "signature": "Module getModuleForModuleNamesString(@Nullable String moduleNames)", "full_signature": "@Nonnull public static Module getModuleForModuleNamesString(@Nullable String moduleNames)", "class_method_signature": "ReflectiveModuleInstantiationModule.getModuleForModuleNamesString(@Nullable String moduleNames)", "testcase": false, "constructor": false, "invocations": ["newArrayList", "split"]}, "repository": {"repo_id": 4668183, "url": "https://github.com/palominolabs/benchpress", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 27, "size": 584, "license": "licensed"}}