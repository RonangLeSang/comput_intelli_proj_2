{"test_class": {"identifier": "ContactEJB3DAOTest", "superclass": "extends DBUnitEJB3DAOTest", "interfaces": "", "fields": [{"original_string": "private ContactEJB3DAO dao;", "modifier": "private", "type": "ContactEJB3DAO", "declarator": "dao", "var_name": "dao"}], "file": "model/src/test/java/uk/ac/ebi/bioinvindex/dao/ejb3/ContactEJB3DAOTest.java"}, "test_case": {"identifier": "testFindByBasicAttributes", "parameters": "()", "modifiers": "@Test @Ignore /** Create and search data */ public", "return": "void", "body": "@Test\n\t@Ignore\n\t/** Create and search data */\n\tpublic void testFindByBasicAttributes() throws Exception {\n\t\tContact contact = new Contact(\"Jon\", \"\", \"Smith\", \"jjs@somewhere.net\");\n\t\tcontact.setPhone(\"123\");\n\t\tcontact.setAffiliation(\"The SuperCorp Inc.\");\n\n\t\tEntityTransaction tnx = entityManager.getTransaction();\n\t\ttnx.begin();\n\t\tdao.save((Contact) contact);\n\t\ttnx.commit();\n\n\t\tList<Contact> objs = dao.findByBasicAttributes(\"Jon\", null, \"ith\", null);\n\t\tassertNotNull(\"Ops! null result! :-( Check you've a proper test data set\", objs);\n\t\tassertTrue(\"Ops! Empty Result! :-( Check you've a proper test data set\", objs.size() > 0);\n\n\t\tout.println(\"OK, showing firts item: \");\n\t\tContact obj = objs.get(0);\n\t\tout.println(obj);\n\t}", "signature": "void testFindByBasicAttributes()", "full_signature": "@Test @Ignore /** Create and search data */ public void testFindByBasicAttributes()", "class_method_signature": "ContactEJB3DAOTest.testFindByBasicAttributes()", "testcase": true, "constructor": false, "invocations": ["setPhone", "setAffiliation", "getTransaction", "begin", "save", "commit", "findByBasicAttributes", "assertNotNull", "assertTrue", "size", "println", "get", "println"]}, "focal_class": {"identifier": "ContactEJB3DAO", "superclass": "extends IdentifiableEJB3DAO<Contact>", "interfaces": "implements ContactDao", "fields": [], "methods": [{"identifier": "ContactEJB3DAO", "parameters": "()", "modifiers": "public", "return": "", "signature": " ContactEJB3DAO()", "full_signature": "public  ContactEJB3DAO()", "class_method_signature": "ContactEJB3DAO.ContactEJB3DAO()", "testcase": false, "constructor": true}, {"identifier": "ContactEJB3DAO", "parameters": "(EntityManager entityManager)", "modifiers": "public", "return": "", "signature": " ContactEJB3DAO(EntityManager entityManager)", "full_signature": "public  ContactEJB3DAO(EntityManager entityManager)", "class_method_signature": "ContactEJB3DAO.ContactEJB3DAO(EntityManager entityManager)", "testcase": false, "constructor": true}, {"identifier": "findByBasicAttributes", "parameters": "(\n\t\tString firstName, String midInitials, String lastName, String email )", "modifiers": "public", "return": "List<Contact>", "signature": "List<Contact> findByBasicAttributes(\n\t\tString firstName, String midInitials, String lastName, String email )", "full_signature": "public List<Contact> findByBasicAttributes(\n\t\tString firstName, String midInitials, String lastName, String email )", "class_method_signature": "ContactEJB3DAO.findByBasicAttributes(\n\t\tString firstName, String midInitials, String lastName, String email )", "testcase": false, "constructor": false}], "file": "model/src/main/java/uk/ac/ebi/bioinvindex/dao/ejb3/ContactEJB3DAO.java"}, "focal_method": {"identifier": "findByBasicAttributes", "parameters": "(\n\t\tString firstName, String midInitials, String lastName, String email )", "modifiers": "public", "return": "List<Contact>", "body": "public List<Contact> findByBasicAttributes (\n\t\tString firstName, String midInitials, String lastName, String email )\n\t{\n\t\tContact templateObj = new Contact ( firstName, midInitials, lastName, email );\n\t\tExample tplCriterion = Example.create ( templateObj );\n\t\ttplCriterion.enableLike ( MatchMode.ANYWHERE );\n\t\ttplCriterion.ignoreCase ();\n\n\t\tSession session = getSession ();\n    Criteria criteria = session.createCriteria ( Contact.class );\n\t\tcriteria.add ( tplCriterion );\n\n\t\treturn criteria.list ();\n\t}", "signature": "List<Contact> findByBasicAttributes(\n\t\tString firstName, String midInitials, String lastName, String email )", "full_signature": "public List<Contact> findByBasicAttributes(\n\t\tString firstName, String midInitials, String lastName, String email )", "class_method_signature": "ContactEJB3DAO.findByBasicAttributes(\n\t\tString firstName, String midInitials, String lastName, String email )", "testcase": false, "constructor": false, "invocations": ["create", "enableLike", "ignoreCase", "getSession", "createCriteria", "add", "list"]}, "repository": {"repo_id": 1155961, "url": "https://github.com/ISA-tools/BioInvIndex", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 15, "size": 2715, "license": "licensed"}}