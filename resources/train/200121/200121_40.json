{"test_class": {"identifier": "GenericCollectionTypeResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String KEY = \"key\";", "modifier": "public static final", "type": "String", "declarator": "KEY = \"key\"", "var_name": "KEY"}, {"original_string": "public static final Integer VALUE = new Integer(1);", "modifier": "public static final", "type": "Integer", "declarator": "VALUE = new Integer(1)", "var_name": "VALUE"}, {"original_string": "private Map<String, Integer> mapToTest = new HashMap<String, Integer>();", "modifier": "private", "type": "Map<String, Integer>", "declarator": "mapToTest = new HashMap<String, Integer>()", "var_name": "mapToTest"}, {"original_string": "private final List<String> collectionToTest = Arrays.asList(KEY);", "modifier": "private final", "type": "List<String>", "declarator": "collectionToTest = Arrays.asList(KEY)", "var_name": "collectionToTest"}], "file": "constretto-core/src/test/java/org/constretto/internal/GenericCollectionTypeResolverTest.java"}, "test_case": {"identifier": "testCollectionMethodParameterType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCollectionMethodParameterType() throws Exception\n    {\n        final MethodParameter methodParameter = new MethodParameter(TestClass.class.getDeclaredMethod(\"configureList\",\n                                                                                                    List.class), 0);\n        final Class<?> collectionParameterType = GenericCollectionTypeResolver.getCollectionParameterType(\n                methodParameter);\n        assertEquals(String.class, collectionParameterType);\n    }", "signature": "void testCollectionMethodParameterType()", "full_signature": "@Test public void testCollectionMethodParameterType()", "class_method_signature": "GenericCollectionTypeResolverTest.testCollectionMethodParameterType()", "testcase": true, "constructor": false, "invocations": ["getDeclaredMethod", "getCollectionParameterType", "assertEquals"]}, "focal_class": {"identifier": "GenericCollectionTypeResolver", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getCollectionFieldType", "parameters": "(Field collectionField)", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> getCollectionFieldType(Field collectionField)", "full_signature": "public static Class<?> getCollectionFieldType(Field collectionField)", "class_method_signature": "GenericCollectionTypeResolver.getCollectionFieldType(Field collectionField)", "testcase": false, "constructor": false}, {"identifier": "getMapKeyFieldType", "parameters": "(Field mapField)", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> getMapKeyFieldType(Field mapField)", "full_signature": "public static Class<?> getMapKeyFieldType(Field mapField)", "class_method_signature": "GenericCollectionTypeResolver.getMapKeyFieldType(Field mapField)", "testcase": false, "constructor": false}, {"identifier": "getMapValueFieldType", "parameters": "(Field mapField)", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> getMapValueFieldType(Field mapField)", "full_signature": "public static Class<?> getMapValueFieldType(Field mapField)", "class_method_signature": "GenericCollectionTypeResolver.getMapValueFieldType(Field mapField)", "testcase": false, "constructor": false}, {"identifier": "getCollectionParameterType", "parameters": "(MethodParameter methodParam)", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> getCollectionParameterType(MethodParameter methodParam)", "full_signature": "public static Class<?> getCollectionParameterType(MethodParameter methodParam)", "class_method_signature": "GenericCollectionTypeResolver.getCollectionParameterType(MethodParameter methodParam)", "testcase": false, "constructor": false}, {"identifier": "getMapKeyParameterType", "parameters": "(MethodParameter methodParam)", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> getMapKeyParameterType(MethodParameter methodParam)", "full_signature": "public static Class<?> getMapKeyParameterType(MethodParameter methodParam)", "class_method_signature": "GenericCollectionTypeResolver.getMapKeyParameterType(MethodParameter methodParam)", "testcase": false, "constructor": false}, {"identifier": "getMapValueParameterType", "parameters": "(MethodParameter methodParam)", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> getMapValueParameterType(MethodParameter methodParam)", "full_signature": "public static Class<?> getMapValueParameterType(MethodParameter methodParam)", "class_method_signature": "GenericCollectionTypeResolver.getMapValueParameterType(MethodParameter methodParam)", "testcase": false, "constructor": false}, {"identifier": "getGenericParameterType", "parameters": "(MethodParameter methodParam, Class<?> source, int typeIndex)", "modifiers": "private static", "return": "Class<?>", "signature": "Class<?> getGenericParameterType(MethodParameter methodParam, Class<?> source, int typeIndex)", "full_signature": "private static Class<?> getGenericParameterType(MethodParameter methodParam, Class<?> source, int typeIndex)", "class_method_signature": "GenericCollectionTypeResolver.getGenericParameterType(MethodParameter methodParam, Class<?> source, int typeIndex)", "testcase": false, "constructor": false}, {"identifier": "getGenericFieldType", "parameters": "(Field field, Class<?> source, int typeIndex, int nestingLevel)", "modifiers": "private static", "return": "Class<?>", "signature": "Class<?> getGenericFieldType(Field field, Class<?> source, int typeIndex, int nestingLevel)", "full_signature": "private static Class<?> getGenericFieldType(Field field, Class<?> source, int typeIndex, int nestingLevel)", "class_method_signature": "GenericCollectionTypeResolver.getGenericFieldType(Field field, Class<?> source, int typeIndex, int nestingLevel)", "testcase": false, "constructor": false}, {"identifier": "getNestingLevel", "parameters": "(final Type type, final int nestingLevel)", "modifiers": "static", "return": "int", "signature": "int getNestingLevel(final Type type, final int nestingLevel)", "full_signature": "static int getNestingLevel(final Type type, final int nestingLevel)", "class_method_signature": "GenericCollectionTypeResolver.getNestingLevel(final Type type, final int nestingLevel)", "testcase": false, "constructor": false}, {"identifier": "extractType", "parameters": "(\n            MethodParameter methodParam, Type type, Class<?> source, int typeIndex, int nestingLevel, int currentLevel)", "modifiers": "private static", "return": "Class<?>", "signature": "Class<?> extractType(\n            MethodParameter methodParam, Type type, Class<?> source, int typeIndex, int nestingLevel, int currentLevel)", "full_signature": "private static Class<?> extractType(\n            MethodParameter methodParam, Type type, Class<?> source, int typeIndex, int nestingLevel, int currentLevel)", "class_method_signature": "GenericCollectionTypeResolver.extractType(\n            MethodParameter methodParam, Type type, Class<?> source, int typeIndex, int nestingLevel, int currentLevel)", "testcase": false, "constructor": false}, {"identifier": "extractTypeFromParameterizedType", "parameters": "(MethodParameter methodParam,\n                                                             ParameterizedType ptype, Class<?> source, int typeIndex, int nestingLevel, int currentLevel)", "modifiers": "private static", "return": "Class<?>", "signature": "Class<?> extractTypeFromParameterizedType(MethodParameter methodParam,\n                                                             ParameterizedType ptype, Class<?> source, int typeIndex, int nestingLevel, int currentLevel)", "full_signature": "private static Class<?> extractTypeFromParameterizedType(MethodParameter methodParam,\n                                                             ParameterizedType ptype, Class<?> source, int typeIndex, int nestingLevel, int currentLevel)", "class_method_signature": "GenericCollectionTypeResolver.extractTypeFromParameterizedType(MethodParameter methodParam,\n                                                             ParameterizedType ptype, Class<?> source, int typeIndex, int nestingLevel, int currentLevel)", "testcase": false, "constructor": false}, {"identifier": "extractTypeFromClass", "parameters": "(\n            MethodParameter methodParam, Class<?> clazz, Class<?> source, int typeIndex, int nestingLevel, int currentLevel)", "modifiers": "private static", "return": "Class<?>", "signature": "Class<?> extractTypeFromClass(\n            MethodParameter methodParam, Class<?> clazz, Class<?> source, int typeIndex, int nestingLevel, int currentLevel)", "full_signature": "private static Class<?> extractTypeFromClass(\n            MethodParameter methodParam, Class<?> clazz, Class<?> source, int typeIndex, int nestingLevel, int currentLevel)", "class_method_signature": "GenericCollectionTypeResolver.extractTypeFromClass(\n            MethodParameter methodParam, Class<?> clazz, Class<?> source, int typeIndex, int nestingLevel, int currentLevel)", "testcase": false, "constructor": false}, {"identifier": "isIntrospectionCandidate", "parameters": "(Class clazz)", "modifiers": "private static", "return": "boolean", "signature": "boolean isIntrospectionCandidate(Class clazz)", "full_signature": "private static boolean isIntrospectionCandidate(Class clazz)", "class_method_signature": "GenericCollectionTypeResolver.isIntrospectionCandidate(Class clazz)", "testcase": false, "constructor": false}], "file": "constretto-core/src/main/java/org/constretto/internal/GenericCollectionTypeResolver.java"}, "focal_method": {"identifier": "getCollectionParameterType", "parameters": "(MethodParameter methodParam)", "modifiers": "public static", "return": "Class<?>", "body": "public static Class<?> getCollectionParameterType(MethodParameter methodParam) {\n        return getGenericParameterType(methodParam, Collection.class, 0);\n    }", "signature": "Class<?> getCollectionParameterType(MethodParameter methodParam)", "full_signature": "public static Class<?> getCollectionParameterType(MethodParameter methodParam)", "class_method_signature": "GenericCollectionTypeResolver.getCollectionParameterType(MethodParameter methodParam)", "testcase": false, "constructor": false, "invocations": ["getGenericParameterType"]}, "repository": {"repo_id": 200121, "url": "https://github.com/constretto/constretto-core", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 64, "size": 1428, "license": "licensed"}}