{"test_class": {"identifier": "CObjectTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CObject cObject;", "modifier": "private", "type": "CObject", "declarator": "cObject", "var_name": "cObject"}, {"original_string": "private Map<String,CValue> values;", "modifier": "private", "type": "Map<String,CValue>", "declarator": "values", "var_name": "values"}], "file": "constretto-api/src/test/java/org/constretto/model/CObjectTest.java"}, "test_case": {"identifier": "testHashCode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHashCode() throws Exception {\n        assertEquals(cObject.hashCode(), new CObject(values).hashCode());\n\n    }", "signature": "void testHashCode()", "full_signature": "@Test public void testHashCode()", "class_method_signature": "CObjectTest.testHashCode()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "hashCode", "hashCode"]}, "focal_class": {"identifier": "CObject", "superclass": "extends CValue", "interfaces": "", "fields": [{"original_string": "private final Map<String, CValue> data;", "modifier": "private final", "type": "Map<String, CValue>", "declarator": "data", "var_name": "data"}], "methods": [{"identifier": "CObject", "parameters": "(Map<String, CValue> data)", "modifiers": "public", "return": "", "signature": " CObject(Map<String, CValue> data)", "full_signature": "public  CObject(Map<String, CValue> data)", "class_method_signature": "CObject.CObject(Map<String, CValue> data)", "testcase": false, "constructor": true}, {"identifier": "data", "parameters": "()", "modifiers": "public", "return": "Map<String, CValue>", "signature": "Map<String, CValue> data()", "full_signature": "public Map<String, CValue> data()", "class_method_signature": "CObject.data()", "testcase": false, "constructor": false}, {"identifier": "referencedKeys", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> referencedKeys()", "full_signature": "@Override public Set<String> referencedKeys()", "class_method_signature": "CObject.referencedKeys()", "testcase": false, "constructor": false}, {"identifier": "replace", "parameters": "(String key, String resolvedValue)", "modifiers": "@Override public", "return": "void", "signature": "void replace(String key, String resolvedValue)", "full_signature": "@Override public void replace(String key, String resolvedValue)", "class_method_signature": "CObject.replace(String key, String resolvedValue)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "CObject.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "CObject.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "CObject.hashCode()", "testcase": false, "constructor": false}], "file": "constretto-api/src/main/java/org/constretto/model/CObject.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int hashCode() {\n        return data != null ? data.hashCode() : 0;\n    }", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "CObject.hashCode()", "testcase": false, "constructor": false, "invocations": ["hashCode"]}, "repository": {"repo_id": 200121, "url": "https://github.com/constretto/constretto-core", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 64, "size": 1428, "license": "licensed"}}