{"test_class": {"identifier": "OrnidroidIOServiceImplTest", "superclass": "extends AbstractTest", "interfaces": "", "fields": [{"original_string": "private BirdFactoryImpl birdFactory;", "modifier": "private", "type": "BirdFactoryImpl", "declarator": "birdFactory", "var_name": "birdFactory"}, {"original_string": "private IOrnidroidIOService ornidroidIOService;", "modifier": "private", "type": "IOrnidroidIOService", "declarator": "ornidroidIOService", "var_name": "ornidroidIOService"}], "file": "ornidroid/src/test/java/fr/ornidroid/service/OrnidroidIOServiceImplTest.java"}, "test_case": {"identifier": "testCheckOrnidroidHomeExistingAndEmptyDirectory", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCheckOrnidroidHomeExistingAndEmptyDirectory()\n\t\t\tthrows OrnidroidException {\n\t\tfinal File ornidroidHome = new File(TEST_DIRECTORY);\n\t\tAssert.assertTrue(ornidroidHome.exists());\n\t\tfinal File ornidroidHomeImages = new File(TEST_DIRECTORY\n\t\t\t\t+ File.separator + BasicConstants.IMAGES_DIRECTORY);\n\t\tAssert.assertFalse(ornidroidHomeImages.exists());\n\t\tfinal File ornidroidHomeAudio = new File(TEST_DIRECTORY\n\t\t\t\t+ File.separator + BasicConstants.AUDIO_DIRECTORY);\n\t\tAssert.assertFalse(ornidroidHomeAudio.exists());\n\n\t\tthis.ornidroidIOService.checkOrnidroidHome(TEST_DIRECTORY);\n\n\t\tAssert.assertTrue(ornidroidHomeImages.exists());\n\t\tAssert.assertTrue(ornidroidHomeAudio.exists());\n\n\t}", "signature": "void testCheckOrnidroidHomeExistingAndEmptyDirectory()", "full_signature": "@Test public void testCheckOrnidroidHomeExistingAndEmptyDirectory()", "class_method_signature": "OrnidroidIOServiceImplTest.testCheckOrnidroidHomeExistingAndEmptyDirectory()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "exists", "assertFalse", "exists", "assertFalse", "exists", "checkOrnidroidHome", "assertTrue", "exists", "assertTrue", "exists"]}, "focal_class": {"identifier": "OrnidroidIOServiceImpl", "superclass": "", "interfaces": "implements IOrnidroidIOService", "fields": [{"original_string": "private static final int MIN_SPACE_TO_DOWNLOAD_IMAGE_PACKAGE = 200;", "modifier": "private static final", "type": "int", "declarator": "MIN_SPACE_TO_DOWNLOAD_IMAGE_PACKAGE = 200", "var_name": "MIN_SPACE_TO_DOWNLOAD_IMAGE_PACKAGE"}, {"original_string": "private static final int MIN_SPACE_TO_DOWNLOAD_AUDIO_PACKAGE = 700;", "modifier": "private static final", "type": "int", "declarator": "MIN_SPACE_TO_DOWNLOAD_AUDIO_PACKAGE = 700", "var_name": "MIN_SPACE_TO_DOWNLOAD_AUDIO_PACKAGE"}, {"original_string": "private static final int MIN_SPACE_TO_DOWNLOAD_WIKIPEDIA_PACKAGE = 40;", "modifier": "private static final", "type": "int", "declarator": "MIN_SPACE_TO_DOWNLOAD_WIKIPEDIA_PACKAGE = 40", "var_name": "MIN_SPACE_TO_DOWNLOAD_WIKIPEDIA_PACKAGE"}, {"original_string": "private static final int WIKIPEDIA_PACKAGE_SIZE = 15;", "modifier": "private static final", "type": "int", "declarator": "WIKIPEDIA_PACKAGE_SIZE = 15", "var_name": "WIKIPEDIA_PACKAGE_SIZE"}, {"original_string": "private static final int WIKIPEDIA_PACKAGE_NUMBER_OF_FILES = 1;", "modifier": "private static final", "type": "int", "declarator": "WIKIPEDIA_PACKAGE_NUMBER_OF_FILES = 1", "var_name": "WIKIPEDIA_PACKAGE_NUMBER_OF_FILES"}, {"original_string": "private static final int IMAGES_PACKAGE_NUMBER_OF_FILES = 6;", "modifier": "private static final", "type": "int", "declarator": "IMAGES_PACKAGE_NUMBER_OF_FILES = 6", "var_name": "IMAGES_PACKAGE_NUMBER_OF_FILES"}, {"original_string": "private static final int IMAGE_PACKAGE_SIZE = 100;", "modifier": "private static final", "type": "int", "declarator": "IMAGE_PACKAGE_SIZE = 100", "var_name": "IMAGE_PACKAGE_SIZE"}, {"original_string": "private static final int AUDIO_PACKAGE_NUMBER_OF_FILES = 33;", "modifier": "private static final", "type": "int", "declarator": "AUDIO_PACKAGE_NUMBER_OF_FILES = 33", "var_name": "AUDIO_PACKAGE_NUMBER_OF_FILES"}, {"original_string": "private static final int AUDIO_PACKAGE_SIZE = 330;", "modifier": "private static final", "type": "int", "declarator": "AUDIO_PACKAGE_SIZE = 330", "var_name": "AUDIO_PACKAGE_SIZE"}, {"original_string": "private final DownloadHelperInterface downloadHelper;", "modifier": "private final", "type": "DownloadHelperInterface", "declarator": "downloadHelper", "var_name": "downloadHelper"}], "methods": [{"identifier": "OrnidroidIOServiceImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " OrnidroidIOServiceImpl()", "full_signature": "public  OrnidroidIOServiceImpl()", "class_method_signature": "OrnidroidIOServiceImpl.OrnidroidIOServiceImpl()", "testcase": false, "constructor": true}, {"identifier": "addCustomMediaFile", "parameters": "(final String birdDirectory,\n\t\t\tfinal OrnidroidFileType fileType, final String selectedFileName,\n\t\t\tfinal File selectedFile, final String comment)", "modifiers": "public", "return": "void", "signature": "void addCustomMediaFile(final String birdDirectory,\n\t\t\tfinal OrnidroidFileType fileType, final String selectedFileName,\n\t\t\tfinal File selectedFile, final String comment)", "full_signature": "public void addCustomMediaFile(final String birdDirectory,\n\t\t\tfinal OrnidroidFileType fileType, final String selectedFileName,\n\t\t\tfinal File selectedFile, final String comment)", "class_method_signature": "OrnidroidIOServiceImpl.addCustomMediaFile(final String birdDirectory,\n\t\t\tfinal OrnidroidFileType fileType, final String selectedFileName,\n\t\t\tfinal File selectedFile, final String comment)", "testcase": false, "constructor": false}, {"identifier": "checkAndCreateDirectory", "parameters": "(final File fileDirectory)", "modifiers": "public", "return": "void", "signature": "void checkAndCreateDirectory(final File fileDirectory)", "full_signature": "public void checkAndCreateDirectory(final File fileDirectory)", "class_method_signature": "OrnidroidIOServiceImpl.checkAndCreateDirectory(final File fileDirectory)", "testcase": false, "constructor": false}, {"identifier": "checkOrnidroidHome", "parameters": "(final String ornidroidHome)", "modifiers": "public", "return": "void", "signature": "void checkOrnidroidHome(final String ornidroidHome)", "full_signature": "public void checkOrnidroidHome(final String ornidroidHome)", "class_method_signature": "OrnidroidIOServiceImpl.checkOrnidroidHome(final String ornidroidHome)", "testcase": false, "constructor": false}, {"identifier": "downloadMediaFiles", "parameters": "(final String mediaHomeDirectory,\n\t\t\tfinal Bird bird, final OrnidroidFileType fileType)", "modifiers": "public", "return": "void", "signature": "void downloadMediaFiles(final String mediaHomeDirectory,\n\t\t\tfinal Bird bird, final OrnidroidFileType fileType)", "full_signature": "public void downloadMediaFiles(final String mediaHomeDirectory,\n\t\t\tfinal Bird bird, final OrnidroidFileType fileType)", "class_method_signature": "OrnidroidIOServiceImpl.downloadMediaFiles(final String mediaHomeDirectory,\n\t\t\tfinal Bird bird, final OrnidroidFileType fileType)", "testcase": false, "constructor": false}, {"identifier": "downloadWikipediaPage", "parameters": "(Bird bird)", "modifiers": "private", "return": "OrnidroidFile", "signature": "OrnidroidFile downloadWikipediaPage(Bird bird)", "full_signature": "private OrnidroidFile downloadWikipediaPage(Bird bird)", "class_method_signature": "OrnidroidIOServiceImpl.downloadWikipediaPage(Bird bird)", "testcase": false, "constructor": false}, {"identifier": "getLocalWikipediaPage", "parameters": "(Bird bird)", "modifiers": "private", "return": "OrnidroidFile", "signature": "OrnidroidFile getLocalWikipediaPage(Bird bird)", "full_signature": "private OrnidroidFile getLocalWikipediaPage(Bird bird)", "class_method_signature": "OrnidroidIOServiceImpl.getLocalWikipediaPage(Bird bird)", "testcase": false, "constructor": false}, {"identifier": "filesToUpdate", "parameters": "(final String mediaHomeDirectory,\n\t\t\tfinal Bird bird, final OrnidroidFileType fileType)", "modifiers": "public", "return": "List<String>", "signature": "List<String> filesToUpdate(final String mediaHomeDirectory,\n\t\t\tfinal Bird bird, final OrnidroidFileType fileType)", "full_signature": "public List<String> filesToUpdate(final String mediaHomeDirectory,\n\t\t\tfinal Bird bird, final OrnidroidFileType fileType)", "class_method_signature": "OrnidroidIOServiceImpl.filesToUpdate(final String mediaHomeDirectory,\n\t\t\tfinal Bird bird, final OrnidroidFileType fileType)", "testcase": false, "constructor": false}, {"identifier": "loadMediaFiles", "parameters": "(final String fileDirectory, final Bird bird,\n\t\t\tfinal OrnidroidFileType fileType)", "modifiers": "public", "return": "void", "signature": "void loadMediaFiles(final String fileDirectory, final Bird bird,\n\t\t\tfinal OrnidroidFileType fileType)", "full_signature": "public void loadMediaFiles(final String fileDirectory, final Bird bird,\n\t\t\tfinal OrnidroidFileType fileType)", "class_method_signature": "OrnidroidIOServiceImpl.loadMediaFiles(final String fileDirectory, final Bird bird,\n\t\t\tfinal OrnidroidFileType fileType)", "testcase": false, "constructor": false}, {"identifier": "removeCustomMediaFile", "parameters": "(final OrnidroidFile ornidroidFile)", "modifiers": "public", "return": "void", "signature": "void removeCustomMediaFile(final OrnidroidFile ornidroidFile)", "full_signature": "public void removeCustomMediaFile(final OrnidroidFile ornidroidFile)", "class_method_signature": "OrnidroidIOServiceImpl.removeCustomMediaFile(final OrnidroidFile ornidroidFile)", "testcase": false, "constructor": false}, {"identifier": "doAddCustomMediaFiles", "parameters": "(final OrnidroidFileType fileType,\n\t\t\tfinal File selectedFile, final File destFile,\n\t\t\tfinal File propertiesFile, final String comment)", "modifiers": "protected", "return": "void", "signature": "void doAddCustomMediaFiles(final OrnidroidFileType fileType,\n\t\t\tfinal File selectedFile, final File destFile,\n\t\t\tfinal File propertiesFile, final String comment)", "full_signature": "protected void doAddCustomMediaFiles(final OrnidroidFileType fileType,\n\t\t\tfinal File selectedFile, final File destFile,\n\t\t\tfinal File propertiesFile, final String comment)", "class_method_signature": "OrnidroidIOServiceImpl.doAddCustomMediaFiles(final OrnidroidFileType fileType,\n\t\t\tfinal File selectedFile, final File destFile,\n\t\t\tfinal File propertiesFile, final String comment)", "testcase": false, "constructor": false}, {"identifier": "getCustomPropertiesString", "parameters": "(final OrnidroidFileType fileType,\n\t\t\tfinal String comment)", "modifiers": "private", "return": "String", "signature": "String getCustomPropertiesString(final OrnidroidFileType fileType,\n\t\t\tfinal String comment)", "full_signature": "private String getCustomPropertiesString(final OrnidroidFileType fileType,\n\t\t\tfinal String comment)", "class_method_signature": "OrnidroidIOServiceImpl.getCustomPropertiesString(final OrnidroidFileType fileType,\n\t\t\tfinal String comment)", "testcase": false, "constructor": false}, {"identifier": "loadContentFile", "parameters": "(final boolean localContent,\n\t\t\tfinal String mediaHomeDirectory, final Bird bird,\n\t\t\tfinal OrnidroidFileType fileType)", "modifiers": "private", "return": "List<String>", "signature": "List<String> loadContentFile(final boolean localContent,\n\t\t\tfinal String mediaHomeDirectory, final Bird bird,\n\t\t\tfinal OrnidroidFileType fileType)", "full_signature": "private List<String> loadContentFile(final boolean localContent,\n\t\t\tfinal String mediaHomeDirectory, final Bird bird,\n\t\t\tfinal OrnidroidFileType fileType)", "class_method_signature": "OrnidroidIOServiceImpl.loadContentFile(final boolean localContent,\n\t\t\tfinal String mediaHomeDirectory, final Bird bird,\n\t\t\tfinal OrnidroidFileType fileType)", "testcase": false, "constructor": false}, {"identifier": "lookForOrnidroidFiles", "parameters": "(\n\t\t\tfinal String ornidroidMediaHome, final String directoryName,\n\t\t\tfinal OrnidroidFileType fileType, final boolean downloadFromInternet)", "modifiers": "private", "return": "List<OrnidroidFile>", "signature": "List<OrnidroidFile> lookForOrnidroidFiles(\n\t\t\tfinal String ornidroidMediaHome, final String directoryName,\n\t\t\tfinal OrnidroidFileType fileType, final boolean downloadFromInternet)", "full_signature": "private List<OrnidroidFile> lookForOrnidroidFiles(\n\t\t\tfinal String ornidroidMediaHome, final String directoryName,\n\t\t\tfinal OrnidroidFileType fileType, final boolean downloadFromInternet)", "class_method_signature": "OrnidroidIOServiceImpl.lookForOrnidroidFiles(\n\t\t\tfinal String ornidroidMediaHome, final String directoryName,\n\t\t\tfinal OrnidroidFileType fileType, final boolean downloadFromInternet)", "testcase": false, "constructor": false}, {"identifier": "resetExistingDirectory", "parameters": "(File directoryToReset)", "modifiers": "@Override public", "return": "void", "signature": "void resetExistingDirectory(File directoryToReset)", "full_signature": "@Override public void resetExistingDirectory(File directoryToReset)", "class_method_signature": "OrnidroidIOServiceImpl.resetExistingDirectory(File directoryToReset)", "testcase": false, "constructor": false}, {"identifier": "getWikipediaPage", "parameters": "(Bird currentBird)", "modifiers": "private", "return": "String", "signature": "String getWikipediaPage(Bird currentBird)", "full_signature": "private String getWikipediaPage(Bird currentBird)", "class_method_signature": "OrnidroidIOServiceImpl.getWikipediaPage(Bird currentBird)", "testcase": false, "constructor": false}, {"identifier": "downloadZipPackage", "parameters": "(String zipname, String mediaHomeDirectory)", "modifiers": "public", "return": "void", "signature": "void downloadZipPackage(String zipname, String mediaHomeDirectory)", "full_signature": "public void downloadZipPackage(String zipname, String mediaHomeDirectory)", "class_method_signature": "OrnidroidIOServiceImpl.downloadZipPackage(String zipname, String mediaHomeDirectory)", "testcase": false, "constructor": false}, {"identifier": "deleteTempFiles", "parameters": "(String mediaHomeDirectory, String zipname)", "modifiers": "private", "return": "void", "signature": "void deleteTempFiles(String mediaHomeDirectory, String zipname)", "full_signature": "private void deleteTempFiles(String mediaHomeDirectory, String zipname)", "class_method_signature": "OrnidroidIOServiceImpl.deleteTempFiles(String mediaHomeDirectory, String zipname)", "testcase": false, "constructor": false}, {"identifier": "isEnoughFreeSpace", "parameters": "(OrnidroidFileType fileType)", "modifiers": "public", "return": "boolean", "signature": "boolean isEnoughFreeSpace(OrnidroidFileType fileType)", "full_signature": "public boolean isEnoughFreeSpace(OrnidroidFileType fileType)", "class_method_signature": "OrnidroidIOServiceImpl.isEnoughFreeSpace(OrnidroidFileType fileType)", "testcase": false, "constructor": false}, {"identifier": "getRequiredSpaceToDownloadZip", "parameters": "(OrnidroidFileType fileType)", "modifiers": "private", "return": "int", "signature": "int getRequiredSpaceToDownloadZip(OrnidroidFileType fileType)", "full_signature": "private int getRequiredSpaceToDownloadZip(OrnidroidFileType fileType)", "class_method_signature": "OrnidroidIOServiceImpl.getRequiredSpaceToDownloadZip(OrnidroidFileType fileType)", "testcase": false, "constructor": false}, {"identifier": "getPackageSize", "parameters": "(OrnidroidFileType fileType)", "modifiers": "private", "return": "int", "signature": "int getPackageSize(OrnidroidFileType fileType)", "full_signature": "private int getPackageSize(OrnidroidFileType fileType)", "class_method_signature": "OrnidroidIOServiceImpl.getPackageSize(OrnidroidFileType fileType)", "testcase": false, "constructor": false}, {"identifier": "getZipname", "parameters": "(OrnidroidFileType fileType)", "modifiers": "public", "return": "ZipPackage", "signature": "ZipPackage getZipname(OrnidroidFileType fileType)", "full_signature": "public ZipPackage getZipname(OrnidroidFileType fileType)", "class_method_signature": "OrnidroidIOServiceImpl.getZipname(OrnidroidFileType fileType)", "testcase": false, "constructor": false}, {"identifier": "getZipDownloadProgressPercent", "parameters": "(OrnidroidFileType fileType,\n\t\t\tint folderSizeBeforeDownload)", "modifiers": "public", "return": "int", "signature": "int getZipDownloadProgressPercent(OrnidroidFileType fileType,\n\t\t\tint folderSizeBeforeDownload)", "full_signature": "public int getZipDownloadProgressPercent(OrnidroidFileType fileType,\n\t\t\tint folderSizeBeforeDownload)", "class_method_signature": "OrnidroidIOServiceImpl.getZipDownloadProgressPercent(OrnidroidFileType fileType,\n\t\t\tint folderSizeBeforeDownload)", "testcase": false, "constructor": false}, {"identifier": "getInstallProgressPercent", "parameters": "(OrnidroidFileType fileType)", "modifiers": "public", "return": "int", "signature": "int getInstallProgressPercent(OrnidroidFileType fileType)", "full_signature": "public int getInstallProgressPercent(OrnidroidFileType fileType)", "class_method_signature": "OrnidroidIOServiceImpl.getInstallProgressPercent(OrnidroidFileType fileType)", "testcase": false, "constructor": false}], "file": "ornidroid/src/main/java/fr/ornidroid/service/OrnidroidIOServiceImpl.java"}, "focal_method": {"identifier": "checkOrnidroidHome", "parameters": "(final String ornidroidHome)", "modifiers": "public", "return": "void", "body": "public void checkOrnidroidHome(final String ornidroidHome)\n\t\t\tthrows OrnidroidException {\n\t\tfinal File fileOrnidroidHome = new File(ornidroidHome);\n\t\tif (!fileOrnidroidHome.exists()) {\n\t\t\tcheckAndCreateDirectory(fileOrnidroidHome);\n\t\t}\n\t\tcheckAndCreateDirectory(new File(ornidroidHome + File.separator\n\t\t\t\t+ BasicConstants.IMAGES_DIRECTORY));\n\t\tcheckAndCreateDirectory(new File(ornidroidHome + File.separator\n\t\t\t\t+ BasicConstants.AUDIO_DIRECTORY));\n\t}", "signature": "void checkOrnidroidHome(final String ornidroidHome)", "full_signature": "public void checkOrnidroidHome(final String ornidroidHome)", "class_method_signature": "OrnidroidIOServiceImpl.checkOrnidroidHome(final String ornidroidHome)", "testcase": false, "constructor": false, "invocations": ["exists", "checkAndCreateDirectory", "checkAndCreateDirectory", "checkAndCreateDirectory"]}, "repository": {"repo_id": 4195698, "url": "https://github.com/giletvin/ornidroid", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 8, "size": 1837495, "license": "licensed"}}