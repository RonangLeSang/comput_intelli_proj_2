{"test_class": {"identifier": "TestTemporaryClassLoader", "superclass": "", "interfaces": "", "fields": [], "file": "openjpa-lib/src/test/java/org/apache/openjpa/lib/util/TestTemporaryClassLoader.java"}, "test_case": {"identifier": "testTemporaryClassLoader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTemporaryClassLoader() throws Exception {\n        Set s = new HashSet();\n        for (int i = 0; i < 2; i++) {\n            ClassLoader loader = new TemporaryClassLoader\n                (getClass().getClassLoader());\n            Class cls = Class.forName(\"org.apache.openjpa.lib.util.TempClass\",\n                true, loader);\n            s.add(cls);\n            assertEquals(loader, cls.getClassLoader());\n            assertEquals(i + 1, s.size());\n        }\n    }", "signature": "void testTemporaryClassLoader()", "full_signature": "@Test public void testTemporaryClassLoader()", "class_method_signature": "TestTemporaryClassLoader.testTemporaryClassLoader()", "testcase": true, "constructor": false, "invocations": ["getClassLoader", "getClass", "forName", "add", "assertEquals", "getClassLoader", "assertEquals", "size"]}, "focal_class": {"identifier": "TemporaryClassLoader", "superclass": "extends ClassLoader", "interfaces": "", "fields": [], "methods": [{"identifier": "TemporaryClassLoader", "parameters": "(ClassLoader parent)", "modifiers": "public", "return": "", "signature": " TemporaryClassLoader(ClassLoader parent)", "full_signature": "public  TemporaryClassLoader(ClassLoader parent)", "class_method_signature": "TemporaryClassLoader.TemporaryClassLoader(ClassLoader parent)", "testcase": false, "constructor": true}, {"identifier": "loadClass", "parameters": "(String name)", "modifiers": "@Override public", "return": "Class", "signature": "Class loadClass(String name)", "full_signature": "@Override public Class loadClass(String name)", "class_method_signature": "TemporaryClassLoader.loadClass(String name)", "testcase": false, "constructor": false}, {"identifier": "loadClass", "parameters": "(String name, boolean resolve)", "modifiers": "@Override protected", "return": "Class", "signature": "Class loadClass(String name, boolean resolve)", "full_signature": "@Override protected Class loadClass(String name, boolean resolve)", "class_method_signature": "TemporaryClassLoader.loadClass(String name, boolean resolve)", "testcase": false, "constructor": false}, {"identifier": "isAnnotation", "parameters": "(byte[] b)", "modifiers": "private static", "return": "boolean", "signature": "boolean isAnnotation(byte[] b)", "full_signature": "private static boolean isAnnotation(byte[] b)", "class_method_signature": "TemporaryClassLoader.isAnnotation(byte[] b)", "testcase": false, "constructor": false}, {"identifier": "isEnum", "parameters": "(byte[] b)", "modifiers": "private static", "return": "boolean", "signature": "boolean isEnum(byte[] b)", "full_signature": "private static boolean isEnum(byte[] b)", "class_method_signature": "TemporaryClassLoader.isEnum(byte[] b)", "testcase": false, "constructor": false}], "file": "openjpa-lib/src/main/java/org/apache/openjpa/lib/util/TemporaryClassLoader.java"}, "focal_method": {"identifier": "TemporaryClassLoader", "parameters": "(ClassLoader parent)", "modifiers": "public", "return": "", "body": "public TemporaryClassLoader(ClassLoader parent) {\n        super(parent);\n    }", "signature": " TemporaryClassLoader(ClassLoader parent)", "full_signature": "public  TemporaryClassLoader(ClassLoader parent)", "class_method_signature": "TemporaryClassLoader.TemporaryClassLoader(ClassLoader parent)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 206364, "url": "https://github.com/apache/openjpa", "stars": 74, "created": "5/21/2009 1:13:25 AM +00:00", "updates": "2020-01-16T13:01:01+00:00", "fork": "False", "license": "licensed"}}