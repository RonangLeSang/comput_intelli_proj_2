{"test_class": {"identifier": "FeatureResourceLoaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static String FILE_JS = \"gadgets.test.pattern = function(){};\";", "modifier": "private final static", "type": "String", "declarator": "FILE_JS = \"gadgets.test.pattern = function(){};\"", "var_name": "FILE_JS"}, {"original_string": "private final static String UPDATED_FILE_JS = \"different.impl.completely = function(){};\";", "modifier": "private final static", "type": "String", "declarator": "UPDATED_FILE_JS = \"different.impl.completely = function(){};\"", "var_name": "UPDATED_FILE_JS"}, {"original_string": "private final static String UNCOMPRESSED_FILE_JS\n      = \"/** Some comments* /\\n\" +\n        \"gadgets.test.pattern = function() {\" +\n        \"};\";", "modifier": "private final static", "type": "String", "declarator": "UNCOMPRESSED_FILE_JS\n      = \"/** Some comments* /\\n\" +\n        \"gadgets.test.pattern = function() {\" +\n        \"};\"", "var_name": "UNCOMPRESSED_FILE_JS"}, {"original_string": "private final static String UPDATED_UNCOMPRESSED_FILE_JS\n  = \"/** Different comments* /\\n\" +\n    \"different.impl.completely = function() {\" +\n    \"};\";", "modifier": "private final static", "type": "String", "declarator": "UPDATED_UNCOMPRESSED_FILE_JS\n  = \"/** Different comments* /\\n\" +\n    \"different.impl.completely = function() {\" +\n    \"};\"", "var_name": "UPDATED_UNCOMPRESSED_FILE_JS"}, {"original_string": "private final static String URL_JS = \"while(true){alert('hello');}\";", "modifier": "private final static", "type": "String", "declarator": "URL_JS = \"while(true){alert('hello');}\"", "var_name": "URL_JS"}, {"original_string": "private TestFeatureResourceLoader loader;", "modifier": "private", "type": "TestFeatureResourceLoader", "declarator": "loader", "var_name": "loader"}, {"original_string": "private FakeTimeSource timeSource;", "modifier": "private", "type": "FakeTimeSource", "declarator": "timeSource", "var_name": "timeSource"}, {"original_string": "private HttpFetcher fetcher;", "modifier": "private", "type": "HttpFetcher", "declarator": "fetcher", "var_name": "fetcher"}], "file": "java/gadgets/src/test/java/org/apache/shindig/gadgets/features/FeatureResourceLoaderTest.java"}, "test_case": {"identifier": "loadUriInline", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void loadUriInline() throws Exception {\n    Uri uri = Uri.parse(\"http://apache.org/resource.js\");\n    Map<String, String> attribs = Maps.newHashMap();\n    attribs.put(\"inline\", \"true\");\n    mockFetcher(uri, URL_JS);\n    FeatureResource resource = loader.load(uri, attribs);\n    assertEquals(URL_JS, resource.getContent());\n    assertEquals(URL_JS, resource.getDebugContent());\n    assertTrue(resource.isProxyCacheable());\n    assertFalse(resource.isExternal());\n  }", "signature": "void loadUriInline()", "full_signature": "@Test public void loadUriInline()", "class_method_signature": "FeatureResourceLoaderTest.loadUriInline()", "testcase": true, "constructor": false, "invocations": ["parse", "newHashMap", "put", "mockFetcher", "load", "assertEquals", "getContent", "assertEquals", "getDebugContent", "assertTrue", "isProxyCacheable", "assertFalse", "isExternal"]}, "focal_class": {"identifier": "FeatureResourceLoader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String classname = FeatureResourceLoader.class.getName();", "modifier": "private static final", "type": "String", "declarator": "classname = FeatureResourceLoader.class.getName()", "var_name": "classname"}, {"original_string": "private static final Logger LOG = Logger.getLogger(classname, MessageKeys.MESSAGES);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(classname, MessageKeys.MESSAGES)", "var_name": "LOG"}, {"original_string": "private final HttpFetcher fetcher;", "modifier": "private final", "type": "HttpFetcher", "declarator": "fetcher", "var_name": "fetcher"}, {"original_string": "private final TimeSource timeSource;", "modifier": "private final", "type": "TimeSource", "declarator": "timeSource", "var_name": "timeSource"}, {"original_string": "private final FeatureFileSystem fileSystem;", "modifier": "private final", "type": "FeatureFileSystem", "declarator": "fileSystem", "var_name": "fileSystem"}, {"original_string": "private int updateCheckFrequency = 0;", "modifier": "private", "type": "int", "declarator": "updateCheckFrequency = 0", "var_name": "updateCheckFrequency"}], "methods": [{"identifier": "FeatureResourceLoader", "parameters": "(\n      HttpFetcher fetcher, TimeSource timeSource, FeatureFileSystem fileSystem)", "modifiers": "@Inject public", "return": "", "signature": " FeatureResourceLoader(\n      HttpFetcher fetcher, TimeSource timeSource, FeatureFileSystem fileSystem)", "full_signature": "@Inject public  FeatureResourceLoader(\n      HttpFetcher fetcher, TimeSource timeSource, FeatureFileSystem fileSystem)", "class_method_signature": "FeatureResourceLoader.FeatureResourceLoader(\n      HttpFetcher fetcher, TimeSource timeSource, FeatureFileSystem fileSystem)", "testcase": false, "constructor": true}, {"identifier": "setSupportFileUpdates", "parameters": "(\n      @Named(\"shindig.features.loader.file-update-check-frequency-ms\") int updateCheckFrequency)", "modifiers": "@Inject(optional = true) public", "return": "void", "signature": "void setSupportFileUpdates(\n      @Named(\"shindig.features.loader.file-update-check-frequency-ms\") int updateCheckFrequency)", "full_signature": "@Inject(optional = true) public void setSupportFileUpdates(\n      @Named(\"shindig.features.loader.file-update-check-frequency-ms\") int updateCheckFrequency)", "class_method_signature": "FeatureResourceLoader.setSupportFileUpdates(\n      @Named(\"shindig.features.loader.file-update-check-frequency-ms\") int updateCheckFrequency)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(Uri uri, Map<String, String> attribs)", "modifiers": "public", "return": "FeatureResource", "signature": "FeatureResource load(Uri uri, Map<String, String> attribs)", "full_signature": "public FeatureResource load(Uri uri, Map<String, String> attribs)", "class_method_signature": "FeatureResourceLoader.load(Uri uri, Map<String, String> attribs)", "testcase": false, "constructor": false}, {"identifier": "loadFile", "parameters": "(String path, Map<String, String> attribs)", "modifiers": "@SuppressWarnings(\"unused\") protected", "return": "FeatureResource", "signature": "FeatureResource loadFile(String path, Map<String, String> attribs)", "full_signature": "@SuppressWarnings(\"unused\") protected FeatureResource loadFile(String path, Map<String, String> attribs)", "class_method_signature": "FeatureResourceLoader.loadFile(String path, Map<String, String> attribs)", "testcase": false, "constructor": false}, {"identifier": "getFileContent", "parameters": "(FeatureFile file)", "modifiers": "protected", "return": "String", "signature": "String getFileContent(FeatureFile file)", "full_signature": "protected String getFileContent(FeatureFile file)", "class_method_signature": "FeatureResourceLoader.getFileContent(FeatureFile file)", "testcase": false, "constructor": false}, {"identifier": "loadResource", "parameters": "(\n      String path, Map<String, String> attribs)", "modifiers": "@SuppressWarnings(\"unused\") protected", "return": "FeatureResource", "signature": "FeatureResource loadResource(\n      String path, Map<String, String> attribs)", "full_signature": "@SuppressWarnings(\"unused\") protected FeatureResource loadResource(\n      String path, Map<String, String> attribs)", "class_method_signature": "FeatureResourceLoader.loadResource(\n      String path, Map<String, String> attribs)", "testcase": false, "constructor": false}, {"identifier": "getResourceContent", "parameters": "(String resource)", "modifiers": "public", "return": "String", "signature": "String getResourceContent(String resource)", "full_signature": "public String getResourceContent(String resource)", "class_method_signature": "FeatureResourceLoader.getResourceContent(String resource)", "testcase": false, "constructor": false}, {"identifier": "loadUri", "parameters": "(Uri uri, Map<String, String> attribs)", "modifiers": "protected", "return": "FeatureResource", "signature": "FeatureResource loadUri(Uri uri, Map<String, String> attribs)", "full_signature": "protected FeatureResource loadUri(Uri uri, Map<String, String> attribs)", "class_method_signature": "FeatureResourceLoader.loadUri(Uri uri, Map<String, String> attribs)", "testcase": false, "constructor": false}, {"identifier": "getOptPath", "parameters": "(String orig)", "modifiers": "protected", "return": "String", "signature": "String getOptPath(String orig)", "full_signature": "protected String getOptPath(String orig)", "class_method_signature": "FeatureResourceLoader.getOptPath(String orig)", "testcase": false, "constructor": false}, {"identifier": "fileHasChanged", "parameters": "(FeatureFile file, long lastModified)", "modifiers": "protected", "return": "boolean", "signature": "boolean fileHasChanged(FeatureFile file, long lastModified)", "full_signature": "protected boolean fileHasChanged(FeatureFile file, long lastModified)", "class_method_signature": "FeatureResourceLoader.fileHasChanged(FeatureFile file, long lastModified)", "testcase": false, "constructor": false}], "file": "java/gadgets/src/main/java/org/apache/shindig/gadgets/features/FeatureResourceLoader.java"}, "focal_method": {"identifier": "load", "parameters": "(Uri uri, Map<String, String> attribs)", "modifiers": "public", "return": "FeatureResource", "body": "public FeatureResource load(Uri uri, Map<String, String> attribs) throws GadgetException {\n    try {\n      if (\"file\".equals(uri.getScheme())) {\n        return loadFile(uri.getPath(), attribs);\n      } else if (\"res\".equals(uri.getScheme())) {\n        return loadResource(uri.getPath(), attribs);\n      }\n      return loadUri(uri, attribs);\n    } catch (IOException e) {\n      throw new GadgetException(GadgetException.Code.FAILED_TO_RETRIEVE_CONTENT, e);\n    }\n  }", "signature": "FeatureResource load(Uri uri, Map<String, String> attribs)", "full_signature": "public FeatureResource load(Uri uri, Map<String, String> attribs)", "class_method_signature": "FeatureResourceLoader.load(Uri uri, Map<String, String> attribs)", "testcase": false, "constructor": false, "invocations": ["equals", "getScheme", "loadFile", "getPath", "equals", "getScheme", "loadResource", "getPath", "loadUri"]}, "repository": {"repo_id": 206633, "url": "https://github.com/apache/shindig", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 65, "size": 18767, "license": "licensed"}}