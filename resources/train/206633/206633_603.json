{"test_class": {"identifier": "GadgetsHandlerServiceTest", "superclass": "extends EasyMockTestCase", "interfaces": "", "fields": [{"original_string": "private static final String TOKEN = \"<token data>\";", "modifier": "private static final", "type": "String", "declarator": "TOKEN = \"<token data>\"", "var_name": "TOKEN"}, {"original_string": "private static final String OWNER = \"<owner>\";", "modifier": "private static final", "type": "String", "declarator": "OWNER = \"<owner>\"", "var_name": "OWNER"}, {"original_string": "private static final String VIEWER = \"<viewer>\";", "modifier": "private static final", "type": "String", "declarator": "VIEWER = \"<viewer>\"", "var_name": "VIEWER"}, {"original_string": "private static final String CONTAINER = \"container\";", "modifier": "private static final", "type": "String", "declarator": "CONTAINER = \"container\"", "var_name": "CONTAINER"}, {"original_string": "private static final Long CURRENT_TIME_MS = 123L;", "modifier": "private static final", "type": "Long", "declarator": "CURRENT_TIME_MS = 123L", "var_name": "CURRENT_TIME_MS"}, {"original_string": "private static final Long SPEC_REFRESH_INTERVAL_MS = 456L;", "modifier": "private static final", "type": "Long", "declarator": "SPEC_REFRESH_INTERVAL_MS = 456L", "var_name": "SPEC_REFRESH_INTERVAL_MS"}, {"original_string": "private static final Long METADATA_EXPIRY_TIME_MS = CURRENT_TIME_MS + SPEC_REFRESH_INTERVAL_MS;", "modifier": "private static final", "type": "Long", "declarator": "METADATA_EXPIRY_TIME_MS = CURRENT_TIME_MS + SPEC_REFRESH_INTERVAL_MS", "var_name": "METADATA_EXPIRY_TIME_MS"}, {"original_string": "private static final Long TOKEN_EXPIRY_TIME_MS = CURRENT_TIME_MS + 789L;", "modifier": "private static final", "type": "Long", "declarator": "TOKEN_EXPIRY_TIME_MS = CURRENT_TIME_MS + 789L", "var_name": "TOKEN_EXPIRY_TIME_MS"}, {"original_string": "private static final Uri RESOURCE = Uri.parse(\"http://example.com/data\");", "modifier": "private static final", "type": "Uri", "declarator": "RESOURCE = Uri.parse(\"http://example.com/data\")", "var_name": "RESOURCE"}, {"original_string": "private static final String FALLBACK = \"http://example.com/data2\";", "modifier": "private static final", "type": "String", "declarator": "FALLBACK = \"http://example.com/data2\"", "var_name": "FALLBACK"}, {"original_string": "private static final String RPC_SERVICE_1 = \"rcp_service_1\";", "modifier": "private static final", "type": "String", "declarator": "RPC_SERVICE_1 = \"rcp_service_1\"", "var_name": "RPC_SERVICE_1"}, {"original_string": "private static final String RPC_SERVICE_2 = \"rpc_service_2\";", "modifier": "private static final", "type": "String", "declarator": "RPC_SERVICE_2 = \"rpc_service_2\"", "var_name": "RPC_SERVICE_2"}, {"original_string": "private static final String RPC_SERVICE_3 = \"rpc_service_3\";", "modifier": "private static final", "type": "String", "declarator": "RPC_SERVICE_3 = \"rpc_service_3\"", "var_name": "RPC_SERVICE_3"}, {"original_string": "private final BeanDelegator delegator = new BeanDelegator(GadgetsHandlerService.API_CLASSES,\n          GadgetsHandlerService.ENUM_CONVERSION_MAP);", "modifier": "private final", "type": "BeanDelegator", "declarator": "delegator = new BeanDelegator(GadgetsHandlerService.API_CLASSES,\n          GadgetsHandlerService.ENUM_CONVERSION_MAP)", "var_name": "delegator"}, {"original_string": "private final FakeTimeSource timeSource = new FakeTimeSource(CURRENT_TIME_MS);", "modifier": "private final", "type": "FakeTimeSource", "declarator": "timeSource = new FakeTimeSource(CURRENT_TIME_MS)", "var_name": "timeSource"}, {"original_string": "private final FeatureRegistry mockRegistry = mock(FeatureRegistry.class);", "modifier": "private final", "type": "FeatureRegistry", "declarator": "mockRegistry = mock(FeatureRegistry.class)", "var_name": "mockRegistry"}, {"original_string": "private final FakeProcessor processor = new FakeProcessor(mockRegistry);", "modifier": "private final", "type": "FakeProcessor", "declarator": "processor = new FakeProcessor(mockRegistry)", "var_name": "processor"}, {"original_string": "private final FakeIframeUriManager urlGenerator = new FakeIframeUriManager();", "modifier": "private final", "type": "FakeIframeUriManager", "declarator": "urlGenerator = new FakeIframeUriManager()", "var_name": "urlGenerator"}, {"original_string": "private final ProxyUriManager proxyUriManager = mock(ProxyUriManager.class);", "modifier": "private final", "type": "ProxyUriManager", "declarator": "proxyUriManager = mock(ProxyUriManager.class)", "var_name": "proxyUriManager"}, {"original_string": "private final JsUriManager jsUriManager = mock(JsUriManager.class);", "modifier": "private final", "type": "JsUriManager", "declarator": "jsUriManager = mock(JsUriManager.class)", "var_name": "jsUriManager"}, {"original_string": "private final ProxyHandler proxyHandler = mock(ProxyHandler.class);", "modifier": "private final", "type": "ProxyHandler", "declarator": "proxyHandler = mock(ProxyHandler.class)", "var_name": "proxyHandler"}, {"original_string": "private final CajaContentRewriter cajaContentRewriter = mock(CajaContentRewriter.class);", "modifier": "private final", "type": "CajaContentRewriter", "declarator": "cajaContentRewriter = mock(CajaContentRewriter.class)", "var_name": "cajaContentRewriter"}, {"original_string": "private final JsServingPipeline jsPipeline = mock(JsServingPipeline.class);", "modifier": "private final", "type": "JsServingPipeline", "declarator": "jsPipeline = mock(JsServingPipeline.class)", "var_name": "jsPipeline"}, {"original_string": "private final JsRequestBuilder jsRequestBuilder = new JsRequestBuilder(jsUriManager, null);", "modifier": "private final", "type": "JsRequestBuilder", "declarator": "jsRequestBuilder = new JsRequestBuilder(jsUriManager, null)", "var_name": "jsRequestBuilder"}, {"original_string": "private final GadgetAdminStore gadgetAdminStore = mock(GadgetAdminStore.class);", "modifier": "private final", "type": "GadgetAdminStore", "declarator": "gadgetAdminStore = mock(GadgetAdminStore.class)", "var_name": "gadgetAdminStore"}, {"original_string": "private ContainerConfig config;", "modifier": "private", "type": "ContainerConfig", "declarator": "config", "var_name": "config"}, {"original_string": "private FakeSecurityTokenCodec tokenCodec;", "modifier": "private", "type": "FakeSecurityTokenCodec", "declarator": "tokenCodec", "var_name": "tokenCodec"}, {"original_string": "private GadgetsHandlerService gadgetHandler;", "modifier": "private", "type": "GadgetsHandlerService", "declarator": "gadgetHandler", "var_name": "gadgetHandler"}, {"original_string": "private GadgetsHandlerService gadgetHandlerWithAdmin;", "modifier": "private", "type": "GadgetsHandlerService", "declarator": "gadgetHandlerWithAdmin", "var_name": "gadgetHandlerWithAdmin"}, {"original_string": "private FeatureRegistryProvider featureRegistryProvider;", "modifier": "private", "type": "FeatureRegistryProvider", "declarator": "featureRegistryProvider", "var_name": "featureRegistryProvider"}], "file": "java/gadgets/src/test/java/org/apache/shindig/gadgets/servlet/GadgetsHandlerServiceTest.java"}, "test_case": {"identifier": "testGetProxyEmptyData", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetProxyEmptyData() throws Exception {\n    List<String> fields = ImmutableList.of(\"proxycontent.*\");\n    Uri resUri = Uri.parse(\"server.com/gadgets/proxy?url=\" + RESOURCE);\n    GadgetsHandlerApi.ProxyRequest request = createProxyRequest(RESOURCE, CONTAINER, fields);\n    Capture<List<ProxyUri>> uriCapture = new Capture<List<ProxyUri>>();\n    expect(proxyUriManager.make(capture(uriCapture), EasyMock.anyInt())).andReturn(\n            ImmutableList.of(resUri));\n    HttpResponse httpResponse = new HttpResponseBuilder().setHttpStatusCode(504).create();\n    expect(proxyHandler.fetch(EasyMock.isA(ProxyUri.class))).andReturn(httpResponse);\n    replay();\n    GadgetsHandlerApi.ProxyResponse response = gadgetHandler.getProxy(request);\n    assertEquals(1, uriCapture.getValue().size());\n    ProxyUri pUri = uriCapture.getValue().get(0);\n    assertEquals(CONTAINER, pUri.getContainer());\n    assertNull(response.getProxyUrl());\n    assertEquals(\"\", response.getProxyContent().getContentBase64());\n    assertEquals(504, response.getProxyContent().getCode());\n    verify();\n  }", "signature": "void testGetProxyEmptyData()", "full_signature": "@Test public void testGetProxyEmptyData()", "class_method_signature": "GadgetsHandlerServiceTest.testGetProxyEmptyData()", "testcase": true, "constructor": false, "invocations": ["of", "parse", "createProxyRequest", "andReturn", "expect", "make", "capture", "anyInt", "of", "create", "setHttpStatusCode", "andReturn", "expect", "fetch", "isA", "replay", "getProxy", "assertEquals", "size", "getValue", "get", "getValue", "assertEquals", "getContainer", "assertNull", "getProxyUrl", "assertEquals", "getContentBase64", "getProxyContent", "assertEquals", "getCode", "getProxyContent", "verify"]}, "focal_class": {"identifier": "GadgetsHandlerService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Locale DEFAULT_LOCALE = new Locale(\"all\", \"all\");", "modifier": "private static final", "type": "Locale", "declarator": "DEFAULT_LOCALE = new Locale(\"all\", \"all\")", "var_name": "DEFAULT_LOCALE"}, {"original_string": "private static final Logger LOG = Logger.getLogger(GadgetsHandler.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(GadgetsHandler.class.getName())", "var_name": "LOG"}, {"original_string": "@VisibleForTesting\n  static final Map<Class<?>, Class<?>> API_CLASSES =\n      new ImmutableMap.Builder<Class<?>, Class<?>>()\n          .put(View.class, GadgetsHandlerApi.View.class)\n          .put(UserPref.class, GadgetsHandlerApi.UserPref.class)\n          .put(EnumValuePair.class, GadgetsHandlerApi.EnumValuePair.class)\n          .put(ModulePrefs.class, GadgetsHandlerApi.ModulePrefs.class)\n          .put(Feature.class, GadgetsHandlerApi.Feature.class)\n          .put(LinkSpec.class, GadgetsHandlerApi.LinkSpec.class)\n          .put(OAuthSpec.class, GadgetsHandlerApi.OAuthSpec.class)\n          .put(OAuthService.class, GadgetsHandlerApi.OAuthService.class)\n          .put(OAuthService.EndPoint.class, GadgetsHandlerApi.EndPoint.class)\n          .put(OAuth2Spec.class, GadgetsHandlerApi.OAuth2Spec.class)\n          .put(OAuth2Service.class, GadgetsHandlerApi.OAuth2Service.class)\n          // Enums\n          .put(View.ContentType.class, GadgetsHandlerApi.ViewContentType.class)\n          .put(UserPref.DataType.class, GadgetsHandlerApi.UserPrefDataType.class)\n          .put(GadgetsHandlerApi.RenderingContext.class, RenderingContext.class)\n          .put(OAuthService.Method.class, GadgetsHandlerApi.Method.class)\n          .put(OAuthService.Location.class, GadgetsHandlerApi.Location.class)\n          .build();", "modifier": "@VisibleForTesting\n  static final", "type": "Map<Class<?>, Class<?>>", "declarator": "API_CLASSES =\n      new ImmutableMap.Builder<Class<?>, Class<?>>()\n          .put(View.class, GadgetsHandlerApi.View.class)\n          .put(UserPref.class, GadgetsHandlerApi.UserPref.class)\n          .put(EnumValuePair.class, GadgetsHandlerApi.EnumValuePair.class)\n          .put(ModulePrefs.class, GadgetsHandlerApi.ModulePrefs.class)\n          .put(Feature.class, GadgetsHandlerApi.Feature.class)\n          .put(LinkSpec.class, GadgetsHandlerApi.LinkSpec.class)\n          .put(OAuthSpec.class, GadgetsHandlerApi.OAuthSpec.class)\n          .put(OAuthService.class, GadgetsHandlerApi.OAuthService.class)\n          .put(OAuthService.EndPoint.class, GadgetsHandlerApi.EndPoint.class)\n          .put(OAuth2Spec.class, GadgetsHandlerApi.OAuth2Spec.class)\n          .put(OAuth2Service.class, GadgetsHandlerApi.OAuth2Service.class)\n          // Enums\n          .put(View.ContentType.class, GadgetsHandlerApi.ViewContentType.class)\n          .put(UserPref.DataType.class, GadgetsHandlerApi.UserPrefDataType.class)\n          .put(GadgetsHandlerApi.RenderingContext.class, RenderingContext.class)\n          .put(OAuthService.Method.class, GadgetsHandlerApi.Method.class)\n          .put(OAuthService.Location.class, GadgetsHandlerApi.Location.class)\n          .build()", "var_name": "API_CLASSES"}, {"original_string": "@VisibleForTesting\n  static final Map<Enum<?>, Enum<?>> ENUM_CONVERSION_MAP =\n      new ImmutableMap.Builder<Enum<?>, Enum<?>>()\n          // View.ContentType mapping\n          .putAll(BeanDelegator.createDefaultEnumMap(View.ContentType.class,\n              GadgetsHandlerApi.ViewContentType.class))\n          // UserPref.DataType mapping\n          .putAll(BeanDelegator.createDefaultEnumMap(UserPref.DataType.class,\n              GadgetsHandlerApi.UserPrefDataType.class))\n          .putAll(BeanDelegator.createDefaultEnumMap(OAuthService.Method.class,\n              GadgetsHandlerApi.Method.class))\n          .putAll(BeanDelegator.createDefaultEnumMap(OAuthService.Location.class,\n              GadgetsHandlerApi.Location.class))\n          .putAll(BeanDelegator.createDefaultEnumMap(GadgetsHandlerApi.RenderingContext.class,\n              RenderingContext.class))\n          .build();", "modifier": "@VisibleForTesting\n  static final", "type": "Map<Enum<?>, Enum<?>>", "declarator": "ENUM_CONVERSION_MAP =\n      new ImmutableMap.Builder<Enum<?>, Enum<?>>()\n          // View.ContentType mapping\n          .putAll(BeanDelegator.createDefaultEnumMap(View.ContentType.class,\n              GadgetsHandlerApi.ViewContentType.class))\n          // UserPref.DataType mapping\n          .putAll(BeanDelegator.createDefaultEnumMap(UserPref.DataType.class,\n              GadgetsHandlerApi.UserPrefDataType.class))\n          .putAll(BeanDelegator.createDefaultEnumMap(OAuthService.Method.class,\n              GadgetsHandlerApi.Method.class))\n          .putAll(BeanDelegator.createDefaultEnumMap(OAuthService.Location.class,\n              GadgetsHandlerApi.Location.class))\n          .putAll(BeanDelegator.createDefaultEnumMap(GadgetsHandlerApi.RenderingContext.class,\n              RenderingContext.class))\n          .build()", "var_name": "ENUM_CONVERSION_MAP"}, {"original_string": "protected final TimeSource timeSource;", "modifier": "protected final", "type": "TimeSource", "declarator": "timeSource", "var_name": "timeSource"}, {"original_string": "protected final Processor processor;", "modifier": "protected final", "type": "Processor", "declarator": "processor", "var_name": "processor"}, {"original_string": "protected final IframeUriManager iframeUriManager;", "modifier": "protected final", "type": "IframeUriManager", "declarator": "iframeUriManager", "var_name": "iframeUriManager"}, {"original_string": "protected final SecurityTokenCodec securityTokenCodec;", "modifier": "protected final", "type": "SecurityTokenCodec", "declarator": "securityTokenCodec", "var_name": "securityTokenCodec"}, {"original_string": "protected final ProxyUriManager proxyUriManager;", "modifier": "protected final", "type": "ProxyUriManager", "declarator": "proxyUriManager", "var_name": "proxyUriManager"}, {"original_string": "protected final JsUriManager jsUriManager;", "modifier": "protected final", "type": "JsUriManager", "declarator": "jsUriManager", "var_name": "jsUriManager"}, {"original_string": "protected final JsServingPipeline jsPipeline;", "modifier": "protected final", "type": "JsServingPipeline", "declarator": "jsPipeline", "var_name": "jsPipeline"}, {"original_string": "protected final JsRequestBuilder jsRequestBuilder;", "modifier": "protected final", "type": "JsRequestBuilder", "declarator": "jsRequestBuilder", "var_name": "jsRequestBuilder"}, {"original_string": "protected final ProxyHandler proxyHandler;", "modifier": "protected final", "type": "ProxyHandler", "declarator": "proxyHandler", "var_name": "proxyHandler"}, {"original_string": "protected final BeanDelegator beanDelegator;", "modifier": "protected final", "type": "BeanDelegator", "declarator": "beanDelegator", "var_name": "beanDelegator"}, {"original_string": "protected final long specRefreshInterval;", "modifier": "protected final", "type": "long", "declarator": "specRefreshInterval", "var_name": "specRefreshInterval"}, {"original_string": "protected final BeanFilter beanFilter;", "modifier": "protected final", "type": "BeanFilter", "declarator": "beanFilter", "var_name": "beanFilter"}, {"original_string": "protected final CajaContentRewriter cajaContentRewriter;", "modifier": "protected final", "type": "CajaContentRewriter", "declarator": "cajaContentRewriter", "var_name": "cajaContentRewriter"}, {"original_string": "protected final GadgetAdminStore gadgetAdminStore;", "modifier": "protected final", "type": "GadgetAdminStore", "declarator": "gadgetAdminStore", "var_name": "gadgetAdminStore"}, {"original_string": "protected final FeatureRegistryProvider featureRegistryProvider;", "modifier": "protected final", "type": "FeatureRegistryProvider", "declarator": "featureRegistryProvider", "var_name": "featureRegistryProvider"}, {"original_string": "protected final ModuleIdManager moduleIdManager;", "modifier": "protected final", "type": "ModuleIdManager", "declarator": "moduleIdManager", "var_name": "moduleIdManager"}, {"original_string": "private ContainerConfig config;", "modifier": "private", "type": "ContainerConfig", "declarator": "config", "var_name": "config"}], "methods": [{"identifier": "GadgetsHandlerService", "parameters": "(TimeSource timeSource, Processor processor,\n      IframeUriManager iframeUriManager, SecurityTokenCodec securityTokenCodec,\n      ProxyUriManager proxyUriManager, JsUriManager jsUriManager, ProxyHandler proxyHandler,\n      JsServingPipeline jsPipeline, JsRequestBuilder jsRequestBuilder,\n      @Named(\"shindig.cache.xml.refreshInterval\") long specRefreshInterval,\n      BeanFilter beanFilter, CajaContentRewriter cajaContentRewriter,\n      GadgetAdminStore gadgetAdminStore,\n      FeatureRegistryProvider featureRegistryProvider,\n      ModuleIdManager moduleIdManager,\n      ContainerConfig config)", "modifiers": "@Inject public", "return": "", "signature": " GadgetsHandlerService(TimeSource timeSource, Processor processor,\n      IframeUriManager iframeUriManager, SecurityTokenCodec securityTokenCodec,\n      ProxyUriManager proxyUriManager, JsUriManager jsUriManager, ProxyHandler proxyHandler,\n      JsServingPipeline jsPipeline, JsRequestBuilder jsRequestBuilder,\n      @Named(\"shindig.cache.xml.refreshInterval\") long specRefreshInterval,\n      BeanFilter beanFilter, CajaContentRewriter cajaContentRewriter,\n      GadgetAdminStore gadgetAdminStore,\n      FeatureRegistryProvider featureRegistryProvider,\n      ModuleIdManager moduleIdManager,\n      ContainerConfig config)", "full_signature": "@Inject public  GadgetsHandlerService(TimeSource timeSource, Processor processor,\n      IframeUriManager iframeUriManager, SecurityTokenCodec securityTokenCodec,\n      ProxyUriManager proxyUriManager, JsUriManager jsUriManager, ProxyHandler proxyHandler,\n      JsServingPipeline jsPipeline, JsRequestBuilder jsRequestBuilder,\n      @Named(\"shindig.cache.xml.refreshInterval\") long specRefreshInterval,\n      BeanFilter beanFilter, CajaContentRewriter cajaContentRewriter,\n      GadgetAdminStore gadgetAdminStore,\n      FeatureRegistryProvider featureRegistryProvider,\n      ModuleIdManager moduleIdManager,\n      ContainerConfig config)", "class_method_signature": "GadgetsHandlerService.GadgetsHandlerService(TimeSource timeSource, Processor processor,\n      IframeUriManager iframeUriManager, SecurityTokenCodec securityTokenCodec,\n      ProxyUriManager proxyUriManager, JsUriManager jsUriManager, ProxyHandler proxyHandler,\n      JsServingPipeline jsPipeline, JsRequestBuilder jsRequestBuilder,\n      @Named(\"shindig.cache.xml.refreshInterval\") long specRefreshInterval,\n      BeanFilter beanFilter, CajaContentRewriter cajaContentRewriter,\n      GadgetAdminStore gadgetAdminStore,\n      FeatureRegistryProvider featureRegistryProvider,\n      ModuleIdManager moduleIdManager,\n      ContainerConfig config)", "testcase": false, "constructor": true}, {"identifier": "getMetadata", "parameters": "(GadgetsHandlerApi.MetadataRequest request)", "modifiers": "public", "return": "GadgetsHandlerApi.MetadataResponse", "signature": "GadgetsHandlerApi.MetadataResponse getMetadata(GadgetsHandlerApi.MetadataRequest request)", "full_signature": "public GadgetsHandlerApi.MetadataResponse getMetadata(GadgetsHandlerApi.MetadataRequest request)", "class_method_signature": "GadgetsHandlerService.getMetadata(GadgetsHandlerApi.MetadataRequest request)", "testcase": false, "constructor": false}, {"identifier": "translateUris", "parameters": "(Map<String, Uri> iframeUris)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> translateUris(Map<String, Uri> iframeUris)", "full_signature": "private Map<String, String> translateUris(Map<String, Uri> iframeUris)", "class_method_signature": "GadgetsHandlerService.translateUris(Map<String, Uri> iframeUris)", "testcase": false, "constructor": false}, {"identifier": "getRpcServiceIds", "parameters": "(Gadget gadget)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> getRpcServiceIds(Gadget gadget)", "full_signature": "private Set<String> getRpcServiceIds(Gadget gadget)", "class_method_signature": "GadgetsHandlerService.getRpcServiceIds(Gadget gadget)", "testcase": false, "constructor": false}, {"identifier": "isFieldIncluded", "parameters": "(Set<String> fields, String name)", "modifiers": "private", "return": "boolean", "signature": "boolean isFieldIncluded(Set<String> fields, String name)", "full_signature": "private boolean isFieldIncluded(Set<String> fields, String name)", "class_method_signature": "GadgetsHandlerService.isFieldIncluded(Set<String> fields, String name)", "testcase": false, "constructor": false}, {"identifier": "getToken", "parameters": "(GadgetsHandlerApi.TokenRequest request)", "modifiers": "public", "return": "GadgetsHandlerApi.TokenResponse", "signature": "GadgetsHandlerApi.TokenResponse getToken(GadgetsHandlerApi.TokenRequest request)", "full_signature": "public GadgetsHandlerApi.TokenResponse getToken(GadgetsHandlerApi.TokenRequest request)", "class_method_signature": "GadgetsHandlerService.getToken(GadgetsHandlerApi.TokenRequest request)", "testcase": false, "constructor": false}, {"identifier": "getJs", "parameters": "(GadgetsHandlerApi.JsRequest request)", "modifiers": "public", "return": "GadgetsHandlerApi.JsResponse", "signature": "GadgetsHandlerApi.JsResponse getJs(GadgetsHandlerApi.JsRequest request)", "full_signature": "public GadgetsHandlerApi.JsResponse getJs(GadgetsHandlerApi.JsRequest request)", "class_method_signature": "GadgetsHandlerService.getJs(GadgetsHandlerApi.JsRequest request)", "testcase": false, "constructor": false}, {"identifier": "getProxy", "parameters": "(GadgetsHandlerApi.ProxyRequest request)", "modifiers": "public", "return": "GadgetsHandlerApi.ProxyResponse", "signature": "GadgetsHandlerApi.ProxyResponse getProxy(GadgetsHandlerApi.ProxyRequest request)", "full_signature": "public GadgetsHandlerApi.ProxyResponse getProxy(GadgetsHandlerApi.ProxyRequest request)", "class_method_signature": "GadgetsHandlerService.getProxy(GadgetsHandlerApi.ProxyRequest request)", "testcase": false, "constructor": false}, {"identifier": "convertMessageLevel", "parameters": "(String name)", "modifiers": "public static", "return": "GadgetsHandlerApi.MessageLevel", "signature": "GadgetsHandlerApi.MessageLevel convertMessageLevel(String name)", "full_signature": "public static GadgetsHandlerApi.MessageLevel convertMessageLevel(String name)", "class_method_signature": "GadgetsHandlerService.convertMessageLevel(String name)", "testcase": false, "constructor": false}, {"identifier": "convertMessages", "parameters": "(\n      List<com.google.caja.reporting.Message> msgs, final MessageContext mc)", "modifiers": "private", "return": "List<GadgetsHandlerApi.Message>", "signature": "List<GadgetsHandlerApi.Message> convertMessages(\n      List<com.google.caja.reporting.Message> msgs, final MessageContext mc)", "full_signature": "private List<GadgetsHandlerApi.Message> convertMessages(\n      List<com.google.caja.reporting.Message> msgs, final MessageContext mc)", "class_method_signature": "GadgetsHandlerService.convertMessages(\n      List<com.google.caja.reporting.Message> msgs, final MessageContext mc)", "testcase": false, "constructor": false}, {"identifier": "getCaja", "parameters": "(GadgetsHandlerApi.CajaRequest request)", "modifiers": "public", "return": "GadgetsHandlerApi.CajaResponse", "signature": "GadgetsHandlerApi.CajaResponse getCaja(GadgetsHandlerApi.CajaRequest request)", "full_signature": "public GadgetsHandlerApi.CajaResponse getCaja(GadgetsHandlerApi.CajaRequest request)", "class_method_signature": "GadgetsHandlerService.getCaja(GadgetsHandlerApi.CajaRequest request)", "testcase": false, "constructor": false}, {"identifier": "verifyBaseParams", "parameters": "(GadgetsHandlerApi.BaseRequest request, boolean checkUrl)", "modifiers": "protected", "return": "void", "signature": "void verifyBaseParams(GadgetsHandlerApi.BaseRequest request, boolean checkUrl)", "full_signature": "protected void verifyBaseParams(GadgetsHandlerApi.BaseRequest request, boolean checkUrl)", "class_method_signature": "GadgetsHandlerService.verifyBaseParams(GadgetsHandlerApi.BaseRequest request, boolean checkUrl)", "testcase": false, "constructor": false}, {"identifier": "getProxyExpireMs", "parameters": "(ProxyUri proxyUri, @Nullable HttpResponse httpResponse)", "modifiers": "protected", "return": "Long", "signature": "Long getProxyExpireMs(ProxyUri proxyUri, @Nullable HttpResponse httpResponse)", "full_signature": "protected Long getProxyExpireMs(ProxyUri proxyUri, @Nullable HttpResponse httpResponse)", "class_method_signature": "GadgetsHandlerService.getProxyExpireMs(ProxyUri proxyUri, @Nullable HttpResponse httpResponse)", "testcase": false, "constructor": false}, {"identifier": "getDefaultExpiration", "parameters": "()", "modifiers": "protected", "return": "long", "signature": "long getDefaultExpiration()", "full_signature": "protected long getDefaultExpiration()", "class_method_signature": "GadgetsHandlerService.getDefaultExpiration()", "testcase": false, "constructor": false}, {"identifier": "convertAuthContext", "parameters": "(GadgetsHandlerApi.AuthContext authContext,\n      String container, String url)", "modifiers": "private", "return": "SecurityToken", "signature": "SecurityToken convertAuthContext(GadgetsHandlerApi.AuthContext authContext,\n      String container, String url)", "full_signature": "private SecurityToken convertAuthContext(GadgetsHandlerApi.AuthContext authContext,\n      String container, String url)", "class_method_signature": "GadgetsHandlerService.convertAuthContext(GadgetsHandlerApi.AuthContext authContext,\n      String container, String url)", "testcase": false, "constructor": false}, {"identifier": "convertAuthContext", "parameters": "(GadgetsHandlerApi.AuthContext authContext,\n      String container, String url, long moduleId, String activeUrl)", "modifiers": "private", "return": "SecurityToken", "signature": "SecurityToken convertAuthContext(GadgetsHandlerApi.AuthContext authContext,\n      String container, String url, long moduleId, String activeUrl)", "full_signature": "private SecurityToken convertAuthContext(GadgetsHandlerApi.AuthContext authContext,\n      String container, String url, long moduleId, String activeUrl)", "class_method_signature": "GadgetsHandlerService.convertAuthContext(GadgetsHandlerApi.AuthContext authContext,\n      String container, String url, long moduleId, String activeUrl)", "testcase": false, "constructor": false}, {"identifier": "createErrorResponse", "parameters": "(Uri uri, Exception e,\n      String defaultMsg)", "modifiers": "public", "return": "GadgetsHandlerApi.BaseResponse", "signature": "GadgetsHandlerApi.BaseResponse createErrorResponse(Uri uri, Exception e,\n      String defaultMsg)", "full_signature": "public GadgetsHandlerApi.BaseResponse createErrorResponse(Uri uri, Exception e,\n      String defaultMsg)", "class_method_signature": "GadgetsHandlerService.createErrorResponse(Uri uri, Exception e,\n      String defaultMsg)", "testcase": false, "constructor": false}, {"identifier": "createErrorResponse", "parameters": "(Uri url, int code, String error)", "modifiers": "public", "return": "GadgetsHandlerApi.BaseResponse", "signature": "GadgetsHandlerApi.BaseResponse createErrorResponse(Uri url, int code, String error)", "full_signature": "public GadgetsHandlerApi.BaseResponse createErrorResponse(Uri url, int code, String error)", "class_method_signature": "GadgetsHandlerService.createErrorResponse(Uri url, int code, String error)", "testcase": false, "constructor": false}, {"identifier": "createMetadataResponse", "parameters": "(Uri url, GadgetSpec spec, Map<String,\n        String> iframeUris, Boolean needsTokenRefresh, Set<String> fields, Long expireTime,\n        Integer tokenTTL, Set<String> rpcServiceIds)", "modifiers": "@VisibleForTesting", "return": "GadgetsHandlerApi.MetadataResponse", "signature": "GadgetsHandlerApi.MetadataResponse createMetadataResponse(Uri url, GadgetSpec spec, Map<String,\n        String> iframeUris, Boolean needsTokenRefresh, Set<String> fields, Long expireTime,\n        Integer tokenTTL, Set<String> rpcServiceIds)", "full_signature": "@VisibleForTesting GadgetsHandlerApi.MetadataResponse createMetadataResponse(Uri url, GadgetSpec spec, Map<String,\n        String> iframeUris, Boolean needsTokenRefresh, Set<String> fields, Long expireTime,\n        Integer tokenTTL, Set<String> rpcServiceIds)", "class_method_signature": "GadgetsHandlerService.createMetadataResponse(Uri url, GadgetSpec spec, Map<String,\n        String> iframeUris, Boolean needsTokenRefresh, Set<String> fields, Long expireTime,\n        Integer tokenTTL, Set<String> rpcServiceIds)", "testcase": false, "constructor": false}, {"identifier": "createTokenResponse", "parameters": "(Uri url, String token, Set<String> fields,\n      Long tokenExpire, Integer tokenTTL, Long moduleId)", "modifiers": "@VisibleForTesting", "return": "GadgetsHandlerApi.TokenResponse", "signature": "GadgetsHandlerApi.TokenResponse createTokenResponse(Uri url, String token, Set<String> fields,\n      Long tokenExpire, Integer tokenTTL, Long moduleId)", "full_signature": "@VisibleForTesting GadgetsHandlerApi.TokenResponse createTokenResponse(Uri url, String token, Set<String> fields,\n      Long tokenExpire, Integer tokenTTL, Long moduleId)", "class_method_signature": "GadgetsHandlerService.createTokenResponse(Uri url, String token, Set<String> fields,\n      Long tokenExpire, Integer tokenTTL, Long moduleId)", "testcase": false, "constructor": false}, {"identifier": "createJsUri", "parameters": "(GadgetsHandlerApi.JsRequest request)", "modifiers": "protected", "return": "JsUri", "signature": "JsUri createJsUri(GadgetsHandlerApi.JsRequest request)", "full_signature": "protected JsUri createJsUri(GadgetsHandlerApi.JsRequest request)", "class_method_signature": "GadgetsHandlerService.createJsUri(GadgetsHandlerApi.JsRequest request)", "testcase": false, "constructor": false}, {"identifier": "createJsResponse", "parameters": "(Uri url, Uri jsUri, String content,\n      Set<String> fields, Long expireMs)", "modifiers": "@VisibleForTesting", "return": "GadgetsHandlerApi.JsResponse", "signature": "GadgetsHandlerApi.JsResponse createJsResponse(Uri url, Uri jsUri, String content,\n      Set<String> fields, Long expireMs)", "full_signature": "@VisibleForTesting GadgetsHandlerApi.JsResponse createJsResponse(Uri url, Uri jsUri, String content,\n      Set<String> fields, Long expireMs)", "class_method_signature": "GadgetsHandlerService.createJsResponse(Uri url, Uri jsUri, String content,\n      Set<String> fields, Long expireMs)", "testcase": false, "constructor": false}, {"identifier": "createProxyUri", "parameters": "(GadgetsHandlerApi.ProxyRequest request)", "modifiers": "protected", "return": "ProxyUri", "signature": "ProxyUri createProxyUri(GadgetsHandlerApi.ProxyRequest request)", "full_signature": "protected ProxyUri createProxyUri(GadgetsHandlerApi.ProxyRequest request)", "class_method_signature": "GadgetsHandlerService.createProxyUri(GadgetsHandlerApi.ProxyRequest request)", "testcase": false, "constructor": false}, {"identifier": "createProxyResponse", "parameters": "(Uri uri, HttpResponse httpResponse,\n      Set<String> fields, Long expireMs)", "modifiers": "@VisibleForTesting", "return": "GadgetsHandlerApi.ProxyResponse", "signature": "GadgetsHandlerApi.ProxyResponse createProxyResponse(Uri uri, HttpResponse httpResponse,\n      Set<String> fields, Long expireMs)", "full_signature": "@VisibleForTesting GadgetsHandlerApi.ProxyResponse createProxyResponse(Uri uri, HttpResponse httpResponse,\n      Set<String> fields, Long expireMs)", "class_method_signature": "GadgetsHandlerService.createProxyResponse(Uri uri, HttpResponse httpResponse,\n      Set<String> fields, Long expireMs)", "testcase": false, "constructor": false}, {"identifier": "createCajaResponse", "parameters": "(Uri uri, String html, String js,\n      List<GadgetsHandlerApi.Message> messages, Set<String> fields, Long expireMs)", "modifiers": "@VisibleForTesting", "return": "GadgetsHandlerApi.CajaResponse", "signature": "GadgetsHandlerApi.CajaResponse createCajaResponse(Uri uri, String html, String js,\n      List<GadgetsHandlerApi.Message> messages, Set<String> fields, Long expireMs)", "full_signature": "@VisibleForTesting GadgetsHandlerApi.CajaResponse createCajaResponse(Uri uri, String html, String js,\n      List<GadgetsHandlerApi.Message> messages, Set<String> fields, Long expireMs)", "class_method_signature": "GadgetsHandlerService.createCajaResponse(Uri uri, String html, String js,\n      List<GadgetsHandlerApi.Message> messages, Set<String> fields, Long expireMs)", "testcase": false, "constructor": false}], "file": "java/gadgets/src/main/java/org/apache/shindig/gadgets/servlet/GadgetsHandlerService.java"}, "focal_method": {"identifier": "getProxy", "parameters": "(GadgetsHandlerApi.ProxyRequest request)", "modifiers": "public", "return": "GadgetsHandlerApi.ProxyResponse", "body": "public GadgetsHandlerApi.ProxyResponse getProxy(GadgetsHandlerApi.ProxyRequest request)\n      throws ProcessingException {\n    verifyBaseParams(request, true);\n    Set<String> fields = beanFilter.processBeanFields(request.getFields());\n\n    ProxyUri proxyUri = createProxyUri(request);\n    List<Uri> uris = proxyUriManager.make(ImmutableList.of(proxyUri), null);\n\n    HttpResponse httpResponse = null;\n    try {\n      if (isFieldIncluded(fields, \"proxyContent\")) {\n        httpResponse = proxyHandler.fetch(proxyUri);\n      }\n    } catch (IOException e) {\n      LOG.log(Level.INFO, \"Failed to fetch resource \" + proxyUri.getResource().toString(), e);\n      throw new ProcessingException(\"Error getting response content\", HttpResponse.SC_BAD_GATEWAY);\n    } catch (GadgetException e) {\n      // TODO: Clean this log if it is too spammy\n      LOG.log(Level.INFO, \"Failed to fetch resource \" + proxyUri.getResource().toString(), e);\n      throw new ProcessingException(\"Error getting response content\", HttpResponse.SC_BAD_GATEWAY);\n    }\n\n    try {\n      return createProxyResponse(uris.get(0), httpResponse, fields,\n          getProxyExpireMs(proxyUri, httpResponse));\n    } catch (IOException e) {\n      // Should never happen!\n      LOG.log(Level.WARNING, \"Error creating proxy response\", e);\n      throw new ProcessingException(\"Error getting response content\",\n          HttpResponse.SC_INTERNAL_SERVER_ERROR);\n    }\n  }", "signature": "GadgetsHandlerApi.ProxyResponse getProxy(GadgetsHandlerApi.ProxyRequest request)", "full_signature": "public GadgetsHandlerApi.ProxyResponse getProxy(GadgetsHandlerApi.ProxyRequest request)", "class_method_signature": "GadgetsHandlerService.getProxy(GadgetsHandlerApi.ProxyRequest request)", "testcase": false, "constructor": false, "invocations": ["verifyBaseParams", "processBeanFields", "getFields", "createProxyUri", "make", "of", "isFieldIncluded", "fetch", "log", "toString", "getResource", "log", "toString", "getResource", "createProxyResponse", "get", "getProxyExpireMs", "log"]}, "repository": {"repo_id": 206633, "url": "https://github.com/apache/shindig", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 65, "size": 18767, "license": "licensed"}}