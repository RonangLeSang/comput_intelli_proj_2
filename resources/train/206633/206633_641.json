{"test_class": {"identifier": "GadgetsHandlerTest", "superclass": "extends EasyMockTestCase", "interfaces": "", "fields": [{"original_string": "private static final String GADGET1_URL = FakeProcessor.SPEC_URL.toString();", "modifier": "private static final", "type": "String", "declarator": "GADGET1_URL = FakeProcessor.SPEC_URL.toString()", "var_name": "GADGET1_URL"}, {"original_string": "private static final String GADGET2_URL = FakeProcessor.SPEC_URL2.toString();", "modifier": "private static final", "type": "String", "declarator": "GADGET2_URL = FakeProcessor.SPEC_URL2.toString()", "var_name": "GADGET2_URL"}, {"original_string": "private static final Uri HTML_URL = Uri.parse(\"http://www.example.com/a.html\");", "modifier": "private static final", "type": "Uri", "declarator": "HTML_URL = Uri.parse(\"http://www.example.com/a.html\")", "var_name": "HTML_URL"}, {"original_string": "private static final Uri JS_URL = Uri.parse(\"http://www.example.com/a.js\");", "modifier": "private static final", "type": "Uri", "declarator": "JS_URL = Uri.parse(\"http://www.example.com/a.js\")", "var_name": "JS_URL"}, {"original_string": "private static final String CONTAINER = \"container\";", "modifier": "private static final", "type": "String", "declarator": "CONTAINER = \"container\"", "var_name": "CONTAINER"}, {"original_string": "private static final String TOKEN = \"_nekot_\";", "modifier": "private static final", "type": "String", "declarator": "TOKEN = \"_nekot_\"", "var_name": "TOKEN"}, {"original_string": "private static final Long SPEC_REFRESH_INTERVAL = 123L;", "modifier": "private static final", "type": "Long", "declarator": "SPEC_REFRESH_INTERVAL = 123L", "var_name": "SPEC_REFRESH_INTERVAL"}, {"original_string": "private static final String RPC_SERVICE_1 = \"rcp_service_1\";", "modifier": "private static final", "type": "String", "declarator": "RPC_SERVICE_1 = \"rcp_service_1\"", "var_name": "RPC_SERVICE_1"}, {"original_string": "private static final String RPC_SERVICE_2 = \"rpc_service_2\";", "modifier": "private static final", "type": "String", "declarator": "RPC_SERVICE_2 = \"rpc_service_2\"", "var_name": "RPC_SERVICE_2"}, {"original_string": "private static final String RPC_SERVICE_3 = \"rpc_service_3\";", "modifier": "private static final", "type": "String", "declarator": "RPC_SERVICE_3 = \"rpc_service_3\"", "var_name": "RPC_SERVICE_3"}, {"original_string": "private final FakeTimeSource timeSource = new FakeTimeSource();", "modifier": "private final", "type": "FakeTimeSource", "declarator": "timeSource = new FakeTimeSource()", "var_name": "timeSource"}, {"original_string": "private final FeatureRegistry mockRegistry = mock(FeatureRegistry.class);", "modifier": "private final", "type": "FeatureRegistry", "declarator": "mockRegistry = mock(FeatureRegistry.class)", "var_name": "mockRegistry"}, {"original_string": "private final FakeProcessor processor = new FakeProcessor(mockRegistry);", "modifier": "private final", "type": "FakeProcessor", "declarator": "processor = new FakeProcessor(mockRegistry)", "var_name": "processor"}, {"original_string": "private final FakeIframeUriManager urlGenerator = new FakeIframeUriManager();", "modifier": "private final", "type": "FakeIframeUriManager", "declarator": "urlGenerator = new FakeIframeUriManager()", "var_name": "urlGenerator"}, {"original_string": "private final Map<String, FormDataItem> emptyFormItems = Collections.emptyMap();", "modifier": "private final", "type": "Map<String, FormDataItem>", "declarator": "emptyFormItems = Collections.emptyMap()", "var_name": "emptyFormItems"}, {"original_string": "private final ProxyUriManager proxyUriManager = mock(ProxyUriManager.class);", "modifier": "private final", "type": "ProxyUriManager", "declarator": "proxyUriManager = mock(ProxyUriManager.class)", "var_name": "proxyUriManager"}, {"original_string": "private final JsUriManager jsUriManager = mock(JsUriManager.class);", "modifier": "private final", "type": "JsUriManager", "declarator": "jsUriManager = mock(JsUriManager.class)", "var_name": "jsUriManager"}, {"original_string": "private final ProxyHandler proxyHandler = mock(ProxyHandler.class);", "modifier": "private final", "type": "ProxyHandler", "declarator": "proxyHandler = mock(ProxyHandler.class)", "var_name": "proxyHandler"}, {"original_string": "private final CajaContentRewriter cajaContentRewriter = mock(CajaContentRewriter.class);", "modifier": "private final", "type": "CajaContentRewriter", "declarator": "cajaContentRewriter = mock(CajaContentRewriter.class)", "var_name": "cajaContentRewriter"}, {"original_string": "private final JsServingPipeline jsPipeline = mock(JsServingPipeline.class);", "modifier": "private final", "type": "JsServingPipeline", "declarator": "jsPipeline = mock(JsServingPipeline.class)", "var_name": "jsPipeline"}, {"original_string": "private final JsRequestBuilder jsRequestBuilder = new JsRequestBuilder(jsUriManager, null);", "modifier": "private final", "type": "JsRequestBuilder", "declarator": "jsRequestBuilder = new JsRequestBuilder(jsUriManager, null)", "var_name": "jsRequestBuilder"}, {"original_string": "private final GadgetAdminStore gadgetAdminStore = mock(GadgetAdminStore.class);", "modifier": "private final", "type": "GadgetAdminStore", "declarator": "gadgetAdminStore = mock(GadgetAdminStore.class)", "var_name": "gadgetAdminStore"}, {"original_string": "private final ContainerConfig config = mock(ContainerConfig.class);", "modifier": "private final", "type": "ContainerConfig", "declarator": "config = mock(ContainerConfig.class)", "var_name": "config"}, {"original_string": "private Injector injector;", "modifier": "private", "type": "Injector", "declarator": "injector", "var_name": "injector"}, {"original_string": "private BeanJsonConverter converter;", "modifier": "private", "type": "BeanJsonConverter", "declarator": "converter", "var_name": "converter"}, {"original_string": "private HandlerRegistry registry;", "modifier": "private", "type": "HandlerRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "private FakeGadgetToken authContext;", "modifier": "private", "type": "FakeGadgetToken", "declarator": "authContext", "var_name": "authContext"}, {"original_string": "private FeatureRegistryProvider featureRegistryProvider;", "modifier": "private", "type": "FeatureRegistryProvider", "declarator": "featureRegistryProvider", "var_name": "featureRegistryProvider"}], "file": "java/gadgets/src/test/java/org/apache/shindig/gadgets/servlet/GadgetsHandlerTest.java"}, "test_case": {"identifier": "testCajaJsRequest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCajaJsRequest() throws Exception {\n    registerGadgetsHandler(null);\n    Capture<Uri> uriCapture = new Capture<Uri>();\n    Capture<String> containerCapture = new Capture<String>();\n    Capture<String> mimeCapture = new Capture<String>();\n\n    String goldenMime = \"text/javascript\";\n\n    CajoledResult golden = cajole(JS_URL, goldenMime, \"alert('hi');\");\n\n    EasyMock.expect(\n            cajaContentRewriter.rewrite(EasyMock.capture(uriCapture),\n                    EasyMock.capture(containerCapture), EasyMock.capture(mimeCapture),\n                    EasyMock.eq(true), EasyMock.anyBoolean())).andReturn(golden).anyTimes();\n    replay();\n\n    JSONObject request = makeCajaRequest(goldenMime, JS_URL.toString());\n    RpcHandler operation = registry.getRpcHandler(request);\n    Object result = operation.execute(emptyFormItems, authContext, converter).get();\n\n    assertEquals(CONTAINER, containerCapture.getValue());\n    assertEquals(JS_URL, uriCapture.getValue());\n    assertTrue(mimeCapture.getValue().contains(\"javascript\"));\n\n    JSONObject response = new JSONObject(converter.convertToString(result));\n    assertTrue(response.has(JS_URL.toString()));\n    JSONObject cajaResponse = response.getJSONObject(JS_URL.toString());\n\n    // Pure js url - no html produced\n    assertFalse(cajaResponse.has(\"html\"));\n    assertTrue(cajaResponse.has(\"js\"));\n    assertTrue(cajaResponse.has(\"messages\"));\n    assertTrue(cajaResponse.getString(\"js\").contains(\"alert\"));\n    assertTrue(cajaResponse.getJSONArray(\"messages\").length() > 0);\n  }", "signature": "void testCajaJsRequest()", "full_signature": "@Test public void testCajaJsRequest()", "class_method_signature": "GadgetsHandlerTest.testCajaJsRequest()", "testcase": true, "constructor": false, "invocations": ["registerGadgetsHandler", "cajole", "anyTimes", "andReturn", "expect", "rewrite", "capture", "capture", "capture", "eq", "anyBoolean", "replay", "makeCajaRequest", "toString", "getRpcHandler", "get", "execute", "assertEquals", "getValue", "assertEquals", "getValue", "assertTrue", "contains", "getValue", "convertToString", "assertTrue", "has", "toString", "getJSONObject", "toString", "assertFalse", "has", "assertTrue", "has", "assertTrue", "has", "assertTrue", "contains", "getString", "assertTrue", "length", "getJSONArray"]}, "focal_class": {"identifier": "GadgetsHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "@VisibleForTesting\n  static final String FAILURE_METADATA = \"Failed to get gadget metadata.\";", "modifier": "@VisibleForTesting\n  static final", "type": "String", "declarator": "FAILURE_METADATA = \"Failed to get gadget metadata.\"", "var_name": "FAILURE_METADATA"}, {"original_string": "@VisibleForTesting\n  static final String FAILURE_TOKEN = \"Failed to get gadget token.\";", "modifier": "@VisibleForTesting\n  static final", "type": "String", "declarator": "FAILURE_TOKEN = \"Failed to get gadget token.\"", "var_name": "FAILURE_TOKEN"}, {"original_string": "@VisibleForTesting\n  static final String FAILURE_PROXY = \"Failed to get proxy data.\";", "modifier": "@VisibleForTesting\n  static final", "type": "String", "declarator": "FAILURE_PROXY = \"Failed to get proxy data.\"", "var_name": "FAILURE_PROXY"}, {"original_string": "@VisibleForTesting\n  static final String FAILURE_CAJA = \"Failed to cajole data.\";", "modifier": "@VisibleForTesting\n  static final", "type": "String", "declarator": "FAILURE_CAJA = \"Failed to cajole data.\"", "var_name": "FAILURE_CAJA"}, {"original_string": "@VisibleForTesting\n  static final String FAILURE_JS = \"Failed to get js data.\";", "modifier": "@VisibleForTesting\n  static final", "type": "String", "declarator": "FAILURE_JS = \"Failed to get js data.\"", "var_name": "FAILURE_JS"}, {"original_string": "private static final List<String> DEFAULT_METADATA_FIELDS =\n      ImmutableList.of(\"iframeUrls\", \"userPrefs.*\", \"modulePrefs.*\", \"views.*\");", "modifier": "private static final", "type": "List<String>", "declarator": "DEFAULT_METADATA_FIELDS =\n      ImmutableList.of(\"iframeUrls\", \"userPrefs.*\", \"modulePrefs.*\", \"views.*\")", "var_name": "DEFAULT_METADATA_FIELDS"}, {"original_string": "private static final List<String> DEFAULT_TOKEN_FIELDS = ImmutableList.of(\"token\");", "modifier": "private static final", "type": "List<String>", "declarator": "DEFAULT_TOKEN_FIELDS = ImmutableList.of(\"token\")", "var_name": "DEFAULT_TOKEN_FIELDS"}, {"original_string": "private static final List<String> DEFAULT_PROXY_FIELDS = ImmutableList.of(\"proxyUrl\");", "modifier": "private static final", "type": "List<String>", "declarator": "DEFAULT_PROXY_FIELDS = ImmutableList.of(\"proxyUrl\")", "var_name": "DEFAULT_PROXY_FIELDS"}, {"original_string": "private static final List<String> DEFAULT_CAJA_FIELDS = ImmutableList.of(\"*\");", "modifier": "private static final", "type": "List<String>", "declarator": "DEFAULT_CAJA_FIELDS = ImmutableList.of(\"*\")", "var_name": "DEFAULT_CAJA_FIELDS"}, {"original_string": "private static final List<String> DEFAULT_JS_FIELDS = ImmutableList.of(\"jsUrl\");", "modifier": "private static final", "type": "List<String>", "declarator": "DEFAULT_JS_FIELDS = ImmutableList.of(\"jsUrl\")", "var_name": "DEFAULT_JS_FIELDS"}, {"original_string": "private static final Logger LOG = Logger.getLogger(GadgetsHandler.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(GadgetsHandler.class.getName())", "var_name": "LOG"}, {"original_string": "protected final ExecutorService executor;", "modifier": "protected final", "type": "ExecutorService", "declarator": "executor", "var_name": "executor"}, {"original_string": "protected final GadgetsHandlerService handlerService;", "modifier": "protected final", "type": "GadgetsHandlerService", "declarator": "handlerService", "var_name": "handlerService"}, {"original_string": "protected final BeanFilter beanFilter;", "modifier": "protected final", "type": "BeanFilter", "declarator": "beanFilter", "var_name": "beanFilter"}, {"original_string": "protected final BeanDelegator beanDelegator;", "modifier": "protected final", "type": "BeanDelegator", "declarator": "beanDelegator", "var_name": "beanDelegator"}], "methods": [{"identifier": "GadgetsHandler", "parameters": "(ExecutorService executor,\n                        GadgetsHandlerService handlerService,\n                        BeanFilter beanFilter)", "modifiers": "@Inject public", "return": "", "signature": " GadgetsHandler(ExecutorService executor,\n                        GadgetsHandlerService handlerService,\n                        BeanFilter beanFilter)", "full_signature": "@Inject public  GadgetsHandler(ExecutorService executor,\n                        GadgetsHandlerService handlerService,\n                        BeanFilter beanFilter)", "class_method_signature": "GadgetsHandler.GadgetsHandler(ExecutorService executor,\n                        GadgetsHandlerService handlerService,\n                        BeanFilter beanFilter)", "testcase": false, "constructor": true}, {"identifier": "metadata", "parameters": "(BaseRequestItem request)", "modifiers": "@Operation(httpMethods = {\"POST\", \"GET\"}, path = \"metadata\") public", "return": "Map<String, GadgetsHandlerApi.BaseResponse>", "signature": "Map<String, GadgetsHandlerApi.BaseResponse> metadata(BaseRequestItem request)", "full_signature": "@Operation(httpMethods = {\"POST\", \"GET\"}, path = \"metadata\") public Map<String, GadgetsHandlerApi.BaseResponse> metadata(BaseRequestItem request)", "class_method_signature": "GadgetsHandler.metadata(BaseRequestItem request)", "testcase": false, "constructor": false}, {"identifier": "token", "parameters": "(BaseRequestItem request)", "modifiers": "@Operation(httpMethods = {\"POST\", \"GET\"}, path = \"token\") public", "return": "Map<String, GadgetsHandlerApi.BaseResponse>", "signature": "Map<String, GadgetsHandlerApi.BaseResponse> token(BaseRequestItem request)", "full_signature": "@Operation(httpMethods = {\"POST\", \"GET\"}, path = \"token\") public Map<String, GadgetsHandlerApi.BaseResponse> token(BaseRequestItem request)", "class_method_signature": "GadgetsHandler.token(BaseRequestItem request)", "testcase": false, "constructor": false}, {"identifier": "js", "parameters": "(BaseRequestItem request)", "modifiers": "@Operation(httpMethods = {\"POST\", \"GET\"}, path = \"js\") public", "return": "GadgetsHandlerApi.BaseResponse", "signature": "GadgetsHandlerApi.BaseResponse js(BaseRequestItem request)", "full_signature": "@Operation(httpMethods = {\"POST\", \"GET\"}, path = \"js\") public GadgetsHandlerApi.BaseResponse js(BaseRequestItem request)", "class_method_signature": "GadgetsHandler.js(BaseRequestItem request)", "testcase": false, "constructor": false}, {"identifier": "proxy", "parameters": "(BaseRequestItem request)", "modifiers": "@Operation(httpMethods = {\"POST\", \"GET\"}, path = \"proxy\") public", "return": "Map<String, GadgetsHandlerApi.BaseResponse>", "signature": "Map<String, GadgetsHandlerApi.BaseResponse> proxy(BaseRequestItem request)", "full_signature": "@Operation(httpMethods = {\"POST\", \"GET\"}, path = \"proxy\") public Map<String, GadgetsHandlerApi.BaseResponse> proxy(BaseRequestItem request)", "class_method_signature": "GadgetsHandler.proxy(BaseRequestItem request)", "testcase": false, "constructor": false}, {"identifier": "cajole", "parameters": "(BaseRequestItem request)", "modifiers": "@Operation(httpMethods = {\"POST\", \"GET\"}, path = \"cajole\") public", "return": "Map<String, GadgetsHandlerApi.BaseResponse>", "signature": "Map<String, GadgetsHandlerApi.BaseResponse> cajole(BaseRequestItem request)", "full_signature": "@Operation(httpMethods = {\"POST\", \"GET\"}, path = \"cajole\") public Map<String, GadgetsHandlerApi.BaseResponse> cajole(BaseRequestItem request)", "class_method_signature": "GadgetsHandler.cajole(BaseRequestItem request)", "testcase": false, "constructor": false}, {"identifier": "supportedFields", "parameters": "(RequestItem request)", "modifiers": "@Operation(httpMethods = \"GET\", path = \"/@metadata.supportedFields\") public", "return": "Set<String>", "signature": "Set<String> supportedFields(RequestItem request)", "full_signature": "@Operation(httpMethods = \"GET\", path = \"/@metadata.supportedFields\") public Set<String> supportedFields(RequestItem request)", "class_method_signature": "GadgetsHandler.supportedFields(RequestItem request)", "testcase": false, "constructor": false}, {"identifier": "tokenSupportedFields", "parameters": "(RequestItem request)", "modifiers": "@Operation(httpMethods = \"GET\", path = \"/@token.supportedFields\") public", "return": "Set<String>", "signature": "Set<String> tokenSupportedFields(RequestItem request)", "full_signature": "@Operation(httpMethods = \"GET\", path = \"/@token.supportedFields\") public Set<String> tokenSupportedFields(RequestItem request)", "class_method_signature": "GadgetsHandler.tokenSupportedFields(RequestItem request)", "testcase": false, "constructor": false}, {"identifier": "jsSupportedFields", "parameters": "(RequestItem request)", "modifiers": "@Operation(httpMethods = \"GET\", path = \"/@js.supportedFields\") public", "return": "Set<String>", "signature": "Set<String> jsSupportedFields(RequestItem request)", "full_signature": "@Operation(httpMethods = \"GET\", path = \"/@js.supportedFields\") public Set<String> jsSupportedFields(RequestItem request)", "class_method_signature": "GadgetsHandler.jsSupportedFields(RequestItem request)", "testcase": false, "constructor": false}, {"identifier": "proxySupportedFields", "parameters": "(RequestItem request)", "modifiers": "@Operation(httpMethods = \"GET\", path = \"/@proxy.supportedFields\") public", "return": "Set<String>", "signature": "Set<String> proxySupportedFields(RequestItem request)", "full_signature": "@Operation(httpMethods = \"GET\", path = \"/@proxy.supportedFields\") public Set<String> proxySupportedFields(RequestItem request)", "class_method_signature": "GadgetsHandler.proxySupportedFields(RequestItem request)", "testcase": false, "constructor": false}, {"identifier": "cajaSupportedFields", "parameters": "(RequestItem request)", "modifiers": "@Operation(httpMethods = \"GET\", path = \"/@cajole.supportedFields\") public", "return": "Set<String>", "signature": "Set<String> cajaSupportedFields(RequestItem request)", "full_signature": "@Operation(httpMethods = \"GET\", path = \"/@cajole.supportedFields\") public Set<String> cajaSupportedFields(RequestItem request)", "class_method_signature": "GadgetsHandler.cajaSupportedFields(RequestItem request)", "testcase": false, "constructor": false}, {"identifier": "createMetadataJob", "parameters": "(final String url,\n      BaseRequestItem request)", "modifiers": "protected", "return": "Callable<CallableData>", "signature": "Callable<CallableData> createMetadataJob(final String url,\n      BaseRequestItem request)", "full_signature": "protected Callable<CallableData> createMetadataJob(final String url,\n      BaseRequestItem request)", "class_method_signature": "GadgetsHandler.createMetadataJob(final String url,\n      BaseRequestItem request)", "testcase": false, "constructor": false}, {"identifier": "createTokenJob", "parameters": "(final String url,\n      BaseRequestItem request)", "modifiers": "protected", "return": "Callable<CallableData>", "signature": "Callable<CallableData> createTokenJob(final String url,\n      BaseRequestItem request)", "full_signature": "protected Callable<CallableData> createTokenJob(final String url,\n      BaseRequestItem request)", "class_method_signature": "GadgetsHandler.createTokenJob(final String url,\n      BaseRequestItem request)", "testcase": false, "constructor": false}, {"identifier": "createProxyJob", "parameters": "(final String url,\n      BaseRequestItem request)", "modifiers": "protected", "return": "Callable<CallableData>", "signature": "Callable<CallableData> createProxyJob(final String url,\n      BaseRequestItem request)", "full_signature": "protected Callable<CallableData> createProxyJob(final String url,\n      BaseRequestItem request)", "class_method_signature": "GadgetsHandler.createProxyJob(final String url,\n      BaseRequestItem request)", "testcase": false, "constructor": false}, {"identifier": "createCajaJob", "parameters": "(final String url,\n      BaseRequestItem request)", "modifiers": "protected", "return": "Callable<CallableData>", "signature": "Callable<CallableData> createCajaJob(final String url,\n      BaseRequestItem request)", "full_signature": "protected Callable<CallableData> createCajaJob(final String url,\n      BaseRequestItem request)", "class_method_signature": "GadgetsHandler.createCajaJob(final String url,\n      BaseRequestItem request)", "testcase": false, "constructor": false}, {"identifier": "getRenderingContext", "parameters": "(String param)", "modifiers": "private", "return": "RenderingContext", "signature": "RenderingContext getRenderingContext(String param)", "full_signature": "private RenderingContext getRenderingContext(String param)", "class_method_signature": "GadgetsHandler.getRenderingContext(String param)", "testcase": false, "constructor": false}, {"identifier": "getRenderingType", "parameters": "(String value)", "modifiers": "@VisibleForTesting static", "return": "GadgetsHandlerApi.RenderingType", "signature": "GadgetsHandlerApi.RenderingType getRenderingType(String value)", "full_signature": "@VisibleForTesting static GadgetsHandlerApi.RenderingType getRenderingType(String value)", "class_method_signature": "GadgetsHandler.getRenderingType(String value)", "testcase": false, "constructor": false}], "file": "java/gadgets/src/main/java/org/apache/shindig/gadgets/servlet/GadgetsHandler.java"}, "focal_method": {"identifier": "cajole", "parameters": "(BaseRequestItem request)", "modifiers": "@Operation(httpMethods = {\"POST\", \"GET\"}, path = \"cajole\") public", "return": "Map<String, GadgetsHandlerApi.BaseResponse>", "body": "@Operation(httpMethods = {\"POST\", \"GET\"}, path = \"cajole\")\n  public Map<String, GadgetsHandlerApi.BaseResponse> cajole(BaseRequestItem request)\n      throws ProtocolException {\n    return new AbstractExecutor() {\n      @Override\n      protected Callable<CallableData> createJob(String url, BaseRequestItem request)\n          throws ProcessingException {\n        return createCajaJob(url, request);\n      }\n    }.execute(request);\n  }", "signature": "Map<String, GadgetsHandlerApi.BaseResponse> cajole(BaseRequestItem request)", "full_signature": "@Operation(httpMethods = {\"POST\", \"GET\"}, path = \"cajole\") public Map<String, GadgetsHandlerApi.BaseResponse> cajole(BaseRequestItem request)", "class_method_signature": "GadgetsHandler.cajole(BaseRequestItem request)", "testcase": false, "constructor": false, "invocations": ["execute", "createCajaJob"]}, "repository": {"repo_id": 206633, "url": "https://github.com/apache/shindig", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 65, "size": 18767, "license": "licensed"}}