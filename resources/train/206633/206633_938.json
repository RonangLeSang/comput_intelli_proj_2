{"test_class": {"identifier": "RpcAdminDataTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Set<String> populatedIds;", "modifier": "private", "type": "Set<String>", "declarator": "populatedIds", "var_name": "populatedIds"}, {"original_string": "private RpcAdminData empty;", "modifier": "private", "type": "RpcAdminData", "declarator": "empty", "var_name": "empty"}, {"original_string": "private RpcAdminData populated;", "modifier": "private", "type": "RpcAdminData", "declarator": "populated", "var_name": "populated"}, {"original_string": "private RpcAdminData nullData;", "modifier": "private", "type": "RpcAdminData", "declarator": "nullData", "var_name": "nullData"}], "file": "java/gadgets/src/test/java/org/apache/shindig/gadgets/admin/RpcAdminDataTest.java"}, "test_case": {"identifier": "testSetAdditionalRpcServiceIds", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSetAdditionalRpcServiceIds() {\n    assertEquals(populatedIds, populated.getAdditionalRpcServiceIds());\n    Set<String> emptySet = Sets.newHashSet();\n    populated.setAdditionalRpcServiceIds(emptySet);\n    assertEquals(Sets.newHashSet(), populated.getAdditionalRpcServiceIds());\n\n    assertEquals(Sets.newHashSet(), empty.getAdditionalRpcServiceIds());\n    empty.setAdditionalRpcServiceIds(populatedIds);\n    assertEquals(populatedIds, empty.getAdditionalRpcServiceIds());\n\n    assertEquals(Sets.newHashSet(), nullData.getAdditionalRpcServiceIds());\n    nullData.setAdditionalRpcServiceIds(populatedIds);\n    assertEquals(populatedIds, nullData.getAdditionalRpcServiceIds());\n  }", "signature": "void testSetAdditionalRpcServiceIds()", "full_signature": "@Test public void testSetAdditionalRpcServiceIds()", "class_method_signature": "RpcAdminDataTest.testSetAdditionalRpcServiceIds()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getAdditionalRpcServiceIds", "newHashSet", "setAdditionalRpcServiceIds", "assertEquals", "newHashSet", "getAdditionalRpcServiceIds", "assertEquals", "newHashSet", "getAdditionalRpcServiceIds", "setAdditionalRpcServiceIds", "assertEquals", "getAdditionalRpcServiceIds", "assertEquals", "newHashSet", "getAdditionalRpcServiceIds", "setAdditionalRpcServiceIds", "assertEquals", "getAdditionalRpcServiceIds"]}, "focal_class": {"identifier": "RpcAdminData", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Set<String> additionalRpcServiceIds;", "modifier": "private", "type": "Set<String>", "declarator": "additionalRpcServiceIds", "var_name": "additionalRpcServiceIds"}], "methods": [{"identifier": "RpcAdminData", "parameters": "()", "modifiers": "public", "return": "", "signature": " RpcAdminData()", "full_signature": "public  RpcAdminData()", "class_method_signature": "RpcAdminData.RpcAdminData()", "testcase": false, "constructor": true}, {"identifier": "RpcAdminData", "parameters": "(Set<String> additionalRpcServiceIds)", "modifiers": "public", "return": "", "signature": " RpcAdminData(Set<String> additionalRpcServiceIds)", "full_signature": "public  RpcAdminData(Set<String> additionalRpcServiceIds)", "class_method_signature": "RpcAdminData.RpcAdminData(Set<String> additionalRpcServiceIds)", "testcase": false, "constructor": true}, {"identifier": "getAdditionalRpcServiceIds", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getAdditionalRpcServiceIds()", "full_signature": "public Set<String> getAdditionalRpcServiceIds()", "class_method_signature": "RpcAdminData.getAdditionalRpcServiceIds()", "testcase": false, "constructor": false}, {"identifier": "setAdditionalRpcServiceIds", "parameters": "(Set<String> ids)", "modifiers": "public", "return": "void", "signature": "void setAdditionalRpcServiceIds(Set<String> ids)", "full_signature": "public void setAdditionalRpcServiceIds(Set<String> ids)", "class_method_signature": "RpcAdminData.setAdditionalRpcServiceIds(Set<String> ids)", "testcase": false, "constructor": false}, {"identifier": "addAdditionalRpcServiceId", "parameters": "(String id)", "modifiers": "public", "return": "void", "signature": "void addAdditionalRpcServiceId(String id)", "full_signature": "public void addAdditionalRpcServiceId(String id)", "class_method_signature": "RpcAdminData.addAdditionalRpcServiceId(String id)", "testcase": false, "constructor": false}, {"identifier": "removeAdditionalRpcServiceId", "parameters": "(String id)", "modifiers": "public", "return": "void", "signature": "void removeAdditionalRpcServiceId(String id)", "full_signature": "public void removeAdditionalRpcServiceId(String id)", "class_method_signature": "RpcAdminData.removeAdditionalRpcServiceId(String id)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "RpcAdminData.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "RpcAdminData.hashCode()", "testcase": false, "constructor": false}], "file": "java/gadgets/src/main/java/org/apache/shindig/gadgets/admin/RpcAdminData.java"}, "focal_method": {"identifier": "setAdditionalRpcServiceIds", "parameters": "(Set<String> ids)", "modifiers": "public", "return": "void", "body": "public void setAdditionalRpcServiceIds(Set<String> ids) {\n    if(ids == null) {\n      ids = Sets.newHashSet();\n    }\n    this.additionalRpcServiceIds = ids;\n  }", "signature": "void setAdditionalRpcServiceIds(Set<String> ids)", "full_signature": "public void setAdditionalRpcServiceIds(Set<String> ids)", "class_method_signature": "RpcAdminData.setAdditionalRpcServiceIds(Set<String> ids)", "testcase": false, "constructor": false, "invocations": ["newHashSet"]}, "repository": {"repo_id": 206633, "url": "https://github.com/apache/shindig", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 65, "size": 18767, "license": "licensed"}}