{"test_class": {"identifier": "RpcServletTest", "superclass": "extends Assert", "interfaces": "", "fields": [{"original_string": "private RpcServlet servlet;", "modifier": "private", "type": "RpcServlet", "declarator": "servlet", "var_name": "servlet"}, {"original_string": "private JsonRpcHandler handler;", "modifier": "private", "type": "JsonRpcHandler", "declarator": "handler", "var_name": "handler"}], "file": "java/gadgets/src/test/java/org/apache/shindig/gadgets/servlet/RpcServletTest.java"}, "test_case": {"identifier": "testDoGetWithMissingReqParam", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testDoGetWithMissingReqParam() throws Exception {\n    HttpServletRequest request = createGetRequest(null, \"function\");\n    HttpServletResponse response = createHttpResponse(null, HttpServletResponse.SC_BAD_REQUEST);\n    servlet.doGet(request, response);\n    verify(response);\n  }", "signature": "void testDoGetWithMissingReqParam()", "full_signature": "@Test public void testDoGetWithMissingReqParam()", "class_method_signature": "RpcServletTest.testDoGetWithMissingReqParam()", "testcase": true, "constructor": false, "invocations": ["createGetRequest", "createHttpResponse", "doGet", "verify"]}, "focal_class": {"identifier": "RpcServlet", "superclass": "extends InjectedServlet", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 1382573217773582182L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1382573217773582182L", "var_name": "serialVersionUID"}, {"original_string": "static final String GET_REQUEST_REQ_PARAM = \"req\";", "modifier": "static final", "type": "String", "declarator": "GET_REQUEST_REQ_PARAM = \"req\"", "var_name": "GET_REQUEST_REQ_PARAM"}, {"original_string": "static final String GET_REQUEST_CALLBACK_PARAM = \"callback\";", "modifier": "static final", "type": "String", "declarator": "GET_REQUEST_CALLBACK_PARAM = \"callback\"", "var_name": "GET_REQUEST_CALLBACK_PARAM"}, {"original_string": "private static final Logger LOG = Logger.getLogger(\"org.apache.shindig.gadgets.servlet.RpcServlet\");", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(\"org.apache.shindig.gadgets.servlet.RpcServlet\")", "var_name": "LOG"}, {"original_string": "private transient JsonRpcHandler jsonHandler;", "modifier": "private transient", "type": "JsonRpcHandler", "declarator": "jsonHandler", "var_name": "jsonHandler"}, {"original_string": "private Boolean isJSONPAllowed;", "modifier": "private", "type": "Boolean", "declarator": "isJSONPAllowed", "var_name": "isJSONPAllowed"}], "methods": [{"identifier": "setJsonRpcHandler", "parameters": "(JsonRpcHandler jsonHandler)", "modifiers": "@Inject public", "return": "void", "signature": "void setJsonRpcHandler(JsonRpcHandler jsonHandler)", "full_signature": "@Inject public void setJsonRpcHandler(JsonRpcHandler jsonHandler)", "class_method_signature": "RpcServlet.setJsonRpcHandler(JsonRpcHandler jsonHandler)", "testcase": false, "constructor": false}, {"identifier": "setJSONPAllowed", "parameters": "(\n      @Named(\"shindig.allowJSONP\") Boolean isJSONPAllowed)", "modifiers": "@Inject public", "return": "void", "signature": "void setJSONPAllowed(\n      @Named(\"shindig.allowJSONP\") Boolean isJSONPAllowed)", "full_signature": "@Inject public void setJSONPAllowed(\n      @Named(\"shindig.allowJSONP\") Boolean isJSONPAllowed)", "class_method_signature": "RpcServlet.setJSONPAllowed(\n      @Named(\"shindig.allowJSONP\") Boolean isJSONPAllowed)", "testcase": false, "constructor": false}, {"identifier": "doGet", "parameters": "(HttpServletRequest request, HttpServletResponse response)", "modifiers": "@Override protected", "return": "void", "signature": "void doGet(HttpServletRequest request, HttpServletResponse response)", "full_signature": "@Override protected void doGet(HttpServletRequest request, HttpServletResponse response)", "class_method_signature": "RpcServlet.doGet(HttpServletRequest request, HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "doPost", "parameters": "(HttpServletRequest request, HttpServletResponse response)", "modifiers": "@Override protected", "return": "void", "signature": "void doPost(HttpServletRequest request, HttpServletResponse response)", "full_signature": "@Override protected void doPost(HttpServletRequest request, HttpServletResponse response)", "class_method_signature": "RpcServlet.doPost(HttpServletRequest request, HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "validateParameterValue", "parameters": "(HttpServletRequest request, String parameter)", "modifiers": "private", "return": "String", "signature": "String validateParameterValue(HttpServletRequest request, String parameter)", "full_signature": "private String validateParameterValue(HttpServletRequest request, String parameter)", "class_method_signature": "RpcServlet.validateParameterValue(HttpServletRequest request, String parameter)", "testcase": false, "constructor": false}, {"identifier": "validateParameterValueNull", "parameters": "(HttpServletRequest request, String parameter)", "modifiers": "private", "return": "String", "signature": "String validateParameterValueNull(HttpServletRequest request, String parameter)", "full_signature": "private String validateParameterValueNull(HttpServletRequest request, String parameter)", "class_method_signature": "RpcServlet.validateParameterValueNull(HttpServletRequest request, String parameter)", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(HttpServletRequest request, HttpServletResponse response, String body)", "modifiers": "private", "return": "Result", "signature": "Result process(HttpServletRequest request, HttpServletResponse response, String body)", "full_signature": "private Result process(HttpServletRequest request, HttpServletResponse response, String body)", "class_method_signature": "RpcServlet.process(HttpServletRequest request, HttpServletResponse response, String body)", "testcase": false, "constructor": false}, {"identifier": "getRequestCharacterEncoding", "parameters": "(HttpServletRequest request)", "modifiers": "private", "return": "String", "signature": "String getRequestCharacterEncoding(HttpServletRequest request)", "full_signature": "private String getRequestCharacterEncoding(HttpServletRequest request)", "class_method_signature": "RpcServlet.getRequestCharacterEncoding(HttpServletRequest request)", "testcase": false, "constructor": false}], "file": "java/gadgets/src/main/java/org/apache/shindig/gadgets/servlet/RpcServlet.java"}, "focal_method": {"identifier": "doGet", "parameters": "(HttpServletRequest request, HttpServletResponse response)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n  protected void doGet(HttpServletRequest request, HttpServletResponse response)\n      throws IOException {\n    String reqValue;\n    String callbackValue;\n\n    try {\n      if (this.isJSONPAllowed) {\n        HttpUtil.isJSONP(request);\n        callbackValue = validateParameterValue(request, GET_REQUEST_CALLBACK_PARAM);\n      } else {\n        callbackValue = validateParameterValueNull(request, GET_REQUEST_CALLBACK_PARAM);\n      }\n      reqValue = validateParameterValue(request, GET_REQUEST_REQ_PARAM);\n    } catch (IllegalArgumentException e) {\n      response.setStatus(HttpServletResponse.SC_BAD_REQUEST);\n      LOG.log(Level.INFO, e.getMessage(), e);\n      return;\n    }\n\n    Result result = process(request, response, reqValue);\n    if (result.isSuccess()) {\n      if (callbackValue != null) {\n        response.getWriter().write(callbackValue + '(' + result.getOutput() + ')');\n      } else {\n        response.getWriter().write(result.getOutput());\n      }\n    } else {\n      response.getWriter().write(result.getOutput());\n    }\n  }", "signature": "void doGet(HttpServletRequest request, HttpServletResponse response)", "full_signature": "@Override protected void doGet(HttpServletRequest request, HttpServletResponse response)", "class_method_signature": "RpcServlet.doGet(HttpServletRequest request, HttpServletResponse response)", "testcase": false, "constructor": false, "invocations": ["isJSONP", "validateParameterValue", "validateParameterValueNull", "validateParameterValue", "setStatus", "log", "getMessage", "process", "isSuccess", "write", "getWriter", "getOutput", "write", "getWriter", "getOutput", "write", "getWriter", "getOutput"]}, "repository": {"repo_id": 206633, "url": "https://github.com/apache/shindig", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 65, "size": 18767, "license": "licensed"}}