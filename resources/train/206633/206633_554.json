{"test_class": {"identifier": "ProxyHandlerTest", "superclass": "extends EasyMockTestCase", "interfaces": "", "fields": [{"original_string": "private final static String GADGET = \"http://some/gadget.xml\";", "modifier": "private final static", "type": "String", "declarator": "GADGET = \"http://some/gadget.xml\"", "var_name": "GADGET"}, {"original_string": "private final static String URL_ONE = \"http://www.example.org/test.html\";", "modifier": "private final static", "type": "String", "declarator": "URL_ONE = \"http://www.example.org/test.html\"", "var_name": "URL_ONE"}, {"original_string": "private final static String DATA_ONE = \"hello world\";", "modifier": "private final static", "type": "String", "declarator": "DATA_ONE = \"hello world\"", "var_name": "DATA_ONE"}, {"original_string": "private final static Integer LONG_LIVED_REFRESH = (365 * 24 * 60 * 60);", "modifier": "private final static", "type": "Integer", "declarator": "LONG_LIVED_REFRESH = (365 * 24 * 60 * 60)", "var_name": "LONG_LIVED_REFRESH"}, {"original_string": "public final RequestPipeline pipeline = mock(RequestPipeline.class);", "modifier": "public final", "type": "RequestPipeline", "declarator": "pipeline = mock(RequestPipeline.class)", "var_name": "pipeline"}, {"original_string": "private GadgetAdminStore gadgetAdminStore = mock(GadgetAdminStore.class);", "modifier": "private", "type": "GadgetAdminStore", "declarator": "gadgetAdminStore = mock(GadgetAdminStore.class)", "var_name": "gadgetAdminStore"}, {"original_string": "public CaptureRewriter rewriter = new CaptureRewriter();", "modifier": "public", "type": "CaptureRewriter", "declarator": "rewriter = new CaptureRewriter()", "var_name": "rewriter"}, {"original_string": "public ResponseRewriterRegistry rewriterRegistry\n      = new DefaultResponseRewriterRegistry(Arrays.<ResponseRewriter>asList(rewriter), null);", "modifier": "public", "type": "ResponseRewriterRegistry", "declarator": "rewriterRegistry\n      = new DefaultResponseRewriterRegistry(Arrays.<ResponseRewriter>asList(rewriter), null)", "var_name": "rewriterRegistry"}, {"original_string": "private ProxyUriManager.ProxyUri request;", "modifier": "private", "type": "ProxyUriManager.ProxyUri", "declarator": "request", "var_name": "request"}, {"original_string": "private final ProxyHandler proxyHandler\n      = new ProxyHandler(pipeline, rewriterRegistry, true, gadgetAdminStore, LONG_LIVED_REFRESH);", "modifier": "private final", "type": "ProxyHandler", "declarator": "proxyHandler\n      = new ProxyHandler(pipeline, rewriterRegistry, true, gadgetAdminStore, LONG_LIVED_REFRESH)", "var_name": "proxyHandler"}], "file": "java/gadgets/src/test/java/org/apache/shindig/gadgets/servlet/ProxyHandlerTest.java"}, "test_case": {"identifier": "testNonWhitelistedGadget", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testNonWhitelistedGadget() throws Exception {\n    String url = \"http://example.org/mypage.html\";\n    String domain = \"example.org\";\n    setupProxyRequestMock(domain, url, true, -1, null, null);\n    setupGadgetAdminMock(false);\n    replay();\n    boolean exceptionCaught = false;\n    try {\n      proxyHandler.fetch(request);\n    } catch (GadgetException e) {\n      exceptionCaught = true;\n      assertEquals(GadgetException.Code.NON_WHITELISTED_GADGET, e.getCode());\n      assertEquals(HttpResponse.SC_FORBIDDEN, e.getHttpStatusCode());\n    }\n    assertTrue(exceptionCaught);\n    verify();\n  }", "signature": "void testNonWhitelistedGadget()", "full_signature": "@Test public void testNonWhitelistedGadget()", "class_method_signature": "ProxyHandlerTest.testNonWhitelistedGadget()", "testcase": true, "constructor": false, "invocations": ["setupProxyRequestMock", "setupGadgetAdminMock", "replay", "fetch", "assertEquals", "getCode", "assertEquals", "getHttpStatusCode", "assertTrue", "verify"]}, "focal_class": {"identifier": "ProxyHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final RequestPipeline requestPipeline;", "modifier": "private final", "type": "RequestPipeline", "declarator": "requestPipeline", "var_name": "requestPipeline"}, {"original_string": "private final ResponseRewriterRegistry contentRewriterRegistry;", "modifier": "private final", "type": "ResponseRewriterRegistry", "declarator": "contentRewriterRegistry", "var_name": "contentRewriterRegistry"}, {"original_string": "protected final boolean remapInternalServerError;", "modifier": "protected final", "type": "boolean", "declarator": "remapInternalServerError", "var_name": "remapInternalServerError"}, {"original_string": "private final GadgetAdminStore gadgetAdminStore;", "modifier": "private final", "type": "GadgetAdminStore", "declarator": "gadgetAdminStore", "var_name": "gadgetAdminStore"}, {"original_string": "private final Integer longLivedRefreshSec;", "modifier": "private final", "type": "Integer", "declarator": "longLivedRefreshSec", "var_name": "longLivedRefreshSec"}, {"original_string": "private static final String POST = \"POST\";", "modifier": "private static final", "type": "String", "declarator": "POST = \"POST\"", "var_name": "POST"}, {"original_string": "private static final String FLASH_CONTENT_TYPE = \"application/x-shockwave-flash\";", "modifier": "private static final", "type": "String", "declarator": "FLASH_CONTENT_TYPE = \"application/x-shockwave-flash\"", "var_name": "FLASH_CONTENT_TYPE"}], "methods": [{"identifier": "ProxyHandler", "parameters": "(RequestPipeline requestPipeline,\n      @RewriterRegistry(rewriteFlow = RewriteFlow.DEFAULT) ResponseRewriterRegistry contentRewriterRegistry,\n      @Named(\"shindig.proxy.remapInternalServerError\") Boolean remapInternalServerError,\n      GadgetAdminStore gadgetAdminStore,\n      @Named(\"org.apache.shindig.gadgets.servlet.longLivedRefreshSec\") int longLivedRefreshSec)", "modifiers": "@Inject public", "return": "", "signature": " ProxyHandler(RequestPipeline requestPipeline,\n      @RewriterRegistry(rewriteFlow = RewriteFlow.DEFAULT) ResponseRewriterRegistry contentRewriterRegistry,\n      @Named(\"shindig.proxy.remapInternalServerError\") Boolean remapInternalServerError,\n      GadgetAdminStore gadgetAdminStore,\n      @Named(\"org.apache.shindig.gadgets.servlet.longLivedRefreshSec\") int longLivedRefreshSec)", "full_signature": "@Inject public  ProxyHandler(RequestPipeline requestPipeline,\n      @RewriterRegistry(rewriteFlow = RewriteFlow.DEFAULT) ResponseRewriterRegistry contentRewriterRegistry,\n      @Named(\"shindig.proxy.remapInternalServerError\") Boolean remapInternalServerError,\n      GadgetAdminStore gadgetAdminStore,\n      @Named(\"org.apache.shindig.gadgets.servlet.longLivedRefreshSec\") int longLivedRefreshSec)", "class_method_signature": "ProxyHandler.ProxyHandler(RequestPipeline requestPipeline,\n      @RewriterRegistry(rewriteFlow = RewriteFlow.DEFAULT) ResponseRewriterRegistry contentRewriterRegistry,\n      @Named(\"shindig.proxy.remapInternalServerError\") Boolean remapInternalServerError,\n      GadgetAdminStore gadgetAdminStore,\n      @Named(\"org.apache.shindig.gadgets.servlet.longLivedRefreshSec\") int longLivedRefreshSec)", "testcase": false, "constructor": true}, {"identifier": "buildHttpRequest", "parameters": "(ProxyUriManager.ProxyUri uriCtx, Uri tgt, @Nullable String postBody)", "modifiers": "private", "return": "HttpRequest", "signature": "HttpRequest buildHttpRequest(ProxyUriManager.ProxyUri uriCtx, Uri tgt, @Nullable String postBody)", "full_signature": "private HttpRequest buildHttpRequest(ProxyUriManager.ProxyUri uriCtx, Uri tgt, @Nullable String postBody)", "class_method_signature": "ProxyHandler.buildHttpRequest(ProxyUriManager.ProxyUri uriCtx, Uri tgt, @Nullable String postBody)", "testcase": false, "constructor": false}, {"identifier": "fetch", "parameters": "(ProxyUriManager.ProxyUri proxyUri)", "modifiers": "public", "return": "HttpResponse", "signature": "HttpResponse fetch(ProxyUriManager.ProxyUri proxyUri)", "full_signature": "public HttpResponse fetch(ProxyUriManager.ProxyUri proxyUri)", "class_method_signature": "ProxyHandler.fetch(ProxyUriManager.ProxyUri proxyUri)", "testcase": false, "constructor": false}, {"identifier": "fetch", "parameters": "(ProxyUriManager.ProxyUri proxyUri, @Nullable String postBody)", "modifiers": "public", "return": "HttpResponse", "signature": "HttpResponse fetch(ProxyUriManager.ProxyUri proxyUri, @Nullable String postBody)", "full_signature": "public HttpResponse fetch(ProxyUriManager.ProxyUri proxyUri, @Nullable String postBody)", "class_method_signature": "ProxyHandler.fetch(ProxyUriManager.ProxyUri proxyUri, @Nullable String postBody)", "testcase": false, "constructor": false}, {"identifier": "setResponseContentHeaders", "parameters": "(HttpResponseBuilder response, HttpResponse results)", "modifiers": "protected", "return": "void", "signature": "void setResponseContentHeaders(HttpResponseBuilder response, HttpResponse results)", "full_signature": "protected void setResponseContentHeaders(HttpResponseBuilder response, HttpResponse results)", "class_method_signature": "ProxyHandler.setResponseContentHeaders(HttpResponseBuilder response, HttpResponse results)", "testcase": false, "constructor": false}, {"identifier": "isFlash", "parameters": "(String responseContentType, String resultsContentType)", "modifiers": "private", "return": "boolean", "signature": "boolean isFlash(String responseContentType, String resultsContentType)", "full_signature": "private boolean isFlash(String responseContentType, String resultsContentType)", "class_method_signature": "ProxyHandler.isFlash(String responseContentType, String resultsContentType)", "testcase": false, "constructor": false}, {"identifier": "isRecoverable", "parameters": "(HttpResponse results)", "modifiers": "public", "return": "boolean", "signature": "boolean isRecoverable(HttpResponse results)", "full_signature": "public boolean isRecoverable(HttpResponse results)", "class_method_signature": "ProxyHandler.isRecoverable(HttpResponse results)", "testcase": false, "constructor": false}], "file": "java/gadgets/src/main/java/org/apache/shindig/gadgets/servlet/ProxyHandler.java"}, "focal_method": {"identifier": "fetch", "parameters": "(ProxyUriManager.ProxyUri proxyUri)", "modifiers": "public", "return": "HttpResponse", "body": "public HttpResponse fetch(ProxyUriManager.ProxyUri proxyUri) throws IOException, GadgetException {\n    return fetch(proxyUri, null);\n  }", "signature": "HttpResponse fetch(ProxyUriManager.ProxyUri proxyUri)", "full_signature": "public HttpResponse fetch(ProxyUriManager.ProxyUri proxyUri)", "class_method_signature": "ProxyHandler.fetch(ProxyUriManager.ProxyUri proxyUri)", "testcase": false, "constructor": false, "invocations": ["fetch"]}, "repository": {"repo_id": 206633, "url": "https://github.com/apache/shindig", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 65, "size": 18767, "license": "licensed"}}