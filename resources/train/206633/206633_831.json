{"test_class": {"identifier": "CajaCssParserTest", "superclass": "extends Assert", "interfaces": "", "fields": [{"original_string": "private CajaCssParser cajaCssParser;", "modifier": "private", "type": "CajaCssParser", "declarator": "cajaCssParser", "var_name": "cajaCssParser"}], "file": "java/gadgets/src/test/java/org/apache/shindig/gadgets/parse/caja/CajaCssParserTest.java"}, "test_case": {"identifier": "testCajaParseColonInRValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCajaParseColonInRValue() throws Exception {\n    String original = \" A {\\n\"\n        + \" -moz-opacity: 0.80;\\n\"\n        + \" filter: alpha(opacity=40);\\n\"\n        + \" filter: progid:DXImageTransform.Microsoft.Alpha(opacity=80);\\n\"\n        + '}';\n    CssTree.StyleSheet styleSheet = cajaCssParser.parseDom(original);\n    List<CssTree.SimpleSelector> selectorList = CajaCssUtils.descendants(\n        styleSheet, CssTree.SimpleSelector.class);\n    assertEquals(1, selectorList.size());\n    assertSame(CssTree.SimpleSelector.class, selectorList.get(0).getClass());\n  }", "signature": "void testCajaParseColonInRValue()", "full_signature": "@Test public void testCajaParseColonInRValue()", "class_method_signature": "CajaCssParserTest.testCajaParseColonInRValue()", "testcase": true, "constructor": false, "invocations": ["parseDom", "descendants", "assertEquals", "size", "assertSame", "getClass", "get"]}, "focal_class": {"identifier": "CajaCssParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Uri FAKE_SOURCE = Uri.parse(\"http://a.dummy.url\");", "modifier": "private static final", "type": "Uri", "declarator": "FAKE_SOURCE = Uri.parse(\"http://a.dummy.url\")", "var_name": "FAKE_SOURCE"}, {"original_string": "private static final String PARSED_CSS = \"parsedCss\";", "modifier": "private static final", "type": "String", "declarator": "PARSED_CSS = \"parsedCss\"", "var_name": "PARSED_CSS"}, {"original_string": "private Cache<String, CssTree.StyleSheet> parsedCssCache;", "modifier": "private", "type": "Cache<String, CssTree.StyleSheet>", "declarator": "parsedCssCache", "var_name": "parsedCssCache"}], "methods": [{"identifier": "setCacheProvider", "parameters": "(CacheProvider cacheProvider)", "modifiers": "@Inject public", "return": "void", "signature": "void setCacheProvider(CacheProvider cacheProvider)", "full_signature": "@Inject public void setCacheProvider(CacheProvider cacheProvider)", "class_method_signature": "CajaCssParser.setCacheProvider(CacheProvider cacheProvider)", "testcase": false, "constructor": false}, {"identifier": "parseDom", "parameters": "(String content)", "modifiers": "public", "return": "CssTree.StyleSheet", "signature": "CssTree.StyleSheet parseDom(String content)", "full_signature": "public CssTree.StyleSheet parseDom(String content)", "class_method_signature": "CajaCssParser.parseDom(String content)", "testcase": false, "constructor": false}, {"identifier": "parseDom", "parameters": "(String content, Uri source)", "modifiers": "public", "return": "CssTree.StyleSheet", "signature": "CssTree.StyleSheet parseDom(String content, Uri source)", "full_signature": "public CssTree.StyleSheet parseDom(String content, Uri source)", "class_method_signature": "CajaCssParser.parseDom(String content, Uri source)", "testcase": false, "constructor": false}, {"identifier": "parseImpl", "parameters": "(String css, Uri source)", "modifiers": "private", "return": "CssTree.StyleSheet", "signature": "CssTree.StyleSheet parseImpl(String css, Uri source)", "full_signature": "private CssTree.StyleSheet parseImpl(String css, Uri source)", "class_method_signature": "CajaCssParser.parseImpl(String css, Uri source)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(CssTree.StyleSheet styleSheet)", "modifiers": "public", "return": "String", "signature": "String serialize(CssTree.StyleSheet styleSheet)", "full_signature": "public String serialize(CssTree.StyleSheet styleSheet)", "class_method_signature": "CajaCssParser.serialize(CssTree.StyleSheet styleSheet)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(CssTree.StyleSheet styleSheet, Writer writer)", "modifiers": "public", "return": "void", "signature": "void serialize(CssTree.StyleSheet styleSheet, Writer writer)", "full_signature": "public void serialize(CssTree.StyleSheet styleSheet, Writer writer)", "class_method_signature": "CajaCssParser.serialize(CssTree.StyleSheet styleSheet, Writer writer)", "testcase": false, "constructor": false}, {"identifier": "shouldCache", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean shouldCache()", "full_signature": "private boolean shouldCache()", "class_method_signature": "CajaCssParser.shouldCache()", "testcase": false, "constructor": false}], "file": "java/gadgets/src/main/java/org/apache/shindig/gadgets/parse/caja/CajaCssParser.java"}, "focal_method": {"identifier": "parseDom", "parameters": "(String content)", "modifiers": "public", "return": "CssTree.StyleSheet", "body": "public CssTree.StyleSheet parseDom(String content) throws GadgetException {\n    // Use a fake source if the real source is unknown\n    return parseDom(content, FAKE_SOURCE);\n  }", "signature": "CssTree.StyleSheet parseDom(String content)", "full_signature": "public CssTree.StyleSheet parseDom(String content)", "class_method_signature": "CajaCssParser.parseDom(String content)", "testcase": false, "constructor": false, "invocations": ["parseDom"]}, "repository": {"repo_id": 206633, "url": "https://github.com/apache/shindig", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 65, "size": 18767, "license": "licensed"}}