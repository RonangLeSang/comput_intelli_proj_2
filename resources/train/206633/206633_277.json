{"test_class": {"identifier": "OAuth2GadgetBindingTest", "superclass": "extends MockUtils", "interfaces": "", "fields": [{"original_string": "private static final OAuth2GadgetBinding FIXTURE = new OAuth2GadgetBinding(MockUtils.GADGET_URI1,\n      MockUtils.SERVICE_NAME, \"xxx\", true);", "modifier": "private static final", "type": "OAuth2GadgetBinding", "declarator": "FIXTURE = new OAuth2GadgetBinding(MockUtils.GADGET_URI1,\n      MockUtils.SERVICE_NAME, \"xxx\", true)", "var_name": "FIXTURE"}], "file": "java/gadgets/src/test/java/org/apache/shindig/gadgets/oauth2/persistence/sample/OAuth2GadgetBindingTest.java"}, "test_case": {"identifier": "testEquals_1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testEquals_1() throws Exception {\n    final Object obj = new OAuth2GadgetBinding(MockUtils.GADGET_URI1, MockUtils.SERVICE_NAME,\n        \"xxx\", true);\n\n    final boolean result = OAuth2GadgetBindingTest.FIXTURE.equals(obj);\n\n    Assert.assertEquals(true, result);\n  }", "signature": "void testEquals_1()", "full_signature": "@Test public void testEquals_1()", "class_method_signature": "OAuth2GadgetBindingTest.testEquals_1()", "testcase": true, "constructor": false, "invocations": ["equals", "assertEquals"]}, "focal_class": {"identifier": "OAuth2GadgetBinding", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final boolean allowOverride;", "modifier": "private final", "type": "boolean", "declarator": "allowOverride", "var_name": "allowOverride"}, {"original_string": "private final String clientName;", "modifier": "private final", "type": "String", "declarator": "clientName", "var_name": "clientName"}, {"original_string": "private final String gadgetServiceName;", "modifier": "private final", "type": "String", "declarator": "gadgetServiceName", "var_name": "gadgetServiceName"}, {"original_string": "private final String gadgetUri;", "modifier": "private final", "type": "String", "declarator": "gadgetUri", "var_name": "gadgetUri"}], "methods": [{"identifier": "OAuth2GadgetBinding", "parameters": "(final String gadgetUri, final String gadgetServiceName,\n      final String clientName, final boolean allowOverride)", "modifiers": "public", "return": "", "signature": " OAuth2GadgetBinding(final String gadgetUri, final String gadgetServiceName,\n      final String clientName, final boolean allowOverride)", "full_signature": "public  OAuth2GadgetBinding(final String gadgetUri, final String gadgetServiceName,\n      final String clientName, final boolean allowOverride)", "class_method_signature": "OAuth2GadgetBinding.OAuth2GadgetBinding(final String gadgetUri, final String gadgetServiceName,\n      final String clientName, final boolean allowOverride)", "testcase": false, "constructor": true}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "OAuth2GadgetBinding.equals(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "getClientName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getClientName()", "full_signature": "public String getClientName()", "class_method_signature": "OAuth2GadgetBinding.getClientName()", "testcase": false, "constructor": false}, {"identifier": "getGadgetServiceName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getGadgetServiceName()", "full_signature": "public String getGadgetServiceName()", "class_method_signature": "OAuth2GadgetBinding.getGadgetServiceName()", "testcase": false, "constructor": false}, {"identifier": "getGadgetUri", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getGadgetUri()", "full_signature": "public String getGadgetUri()", "class_method_signature": "OAuth2GadgetBinding.getGadgetUri()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "OAuth2GadgetBinding.hashCode()", "testcase": false, "constructor": false}, {"identifier": "isAllowOverride", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAllowOverride()", "full_signature": "public boolean isAllowOverride()", "class_method_signature": "OAuth2GadgetBinding.isAllowOverride()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "OAuth2GadgetBinding.toString()", "testcase": false, "constructor": false}], "file": "java/gadgets/src/main/java/org/apache/shindig/gadgets/oauth2/persistence/sample/OAuth2GadgetBinding.java"}, "focal_method": {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean equals(final Object obj) {\n    if (obj == this) {\n      return true;\n    }\n    if (!(obj instanceof OAuth2GadgetBinding)) {\n      return false;\n    }\n    final OAuth2GadgetBinding other = (OAuth2GadgetBinding) obj;\n    if (this.gadgetUri == null) {\n      if (other.gadgetUri != null) {\n        return false;\n      }\n    } else if (!this.gadgetUri.equals(other.gadgetUri)) {\n      return false;\n    }\n    if (this.gadgetServiceName == null) {\n      if (other.gadgetServiceName != null) {\n        return false;\n      }\n    } else if (!this.gadgetServiceName.equals(other.gadgetServiceName)) {\n      return false;\n    }\n    return true;\n  }", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "OAuth2GadgetBinding.equals(final Object obj)", "testcase": false, "constructor": false, "invocations": ["equals", "equals"]}, "repository": {"repo_id": 206633, "url": "https://github.com/apache/shindig", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 65, "size": 18767, "license": "licensed"}}