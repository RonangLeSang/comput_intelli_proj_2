{"test_class": {"identifier": "DefaultIframeUriManagerTest", "superclass": "extends UriManagerTestBase", "interfaces": "", "fields": [{"original_string": "private static final String LD_PREFIX = \"locked\";", "modifier": "private static final", "type": "String", "declarator": "LD_PREFIX = \"locked\"", "var_name": "LD_PREFIX"}, {"original_string": "private static final String IFRAME_PATH = \"/gadgets/ifr\";", "modifier": "private static final", "type": "String", "declarator": "IFRAME_PATH = \"/gadgets/ifr\"", "var_name": "IFRAME_PATH"}, {"original_string": "private static final String JS_HOST = \"//server.com\";", "modifier": "private static final", "type": "String", "declarator": "JS_HOST = \"//server.com\"", "var_name": "JS_HOST"}, {"original_string": "private static final String JS_PATH = \"/gadgets/js\";", "modifier": "private static final", "type": "String", "declarator": "JS_PATH = \"/gadgets/js\"", "var_name": "JS_PATH"}, {"original_string": "private static final String LD_SUFFIX = \".lockeddomain.com\";", "modifier": "private static final", "type": "String", "declarator": "LD_SUFFIX = \".lockeddomain.com\"", "var_name": "LD_SUFFIX"}, {"original_string": "private static final String LD_SUFFIX_ALT = \".altld.com\";", "modifier": "private static final", "type": "String", "declarator": "LD_SUFFIX_ALT = \".altld.com\"", "var_name": "LD_SUFFIX_ALT"}, {"original_string": "private static final String UNLOCKED_DOMAIN = \"unlockeddomain.com\";", "modifier": "private static final", "type": "String", "declarator": "UNLOCKED_DOMAIN = \"unlockeddomain.com\"", "var_name": "UNLOCKED_DOMAIN"}, {"original_string": "private static final String UNLOCKED_DOMAIN_CONFIG_VALUE = UNLOCKED_DOMAIN;", "modifier": "private static final", "type": "String", "declarator": "UNLOCKED_DOMAIN_CONFIG_VALUE = UNLOCKED_DOMAIN", "var_name": "UNLOCKED_DOMAIN_CONFIG_VALUE"}, {"original_string": "private static final int TYPE_URL_NUM_BASE_PARAMS = 8;", "modifier": "private static final", "type": "int", "declarator": "TYPE_URL_NUM_BASE_PARAMS = 8", "var_name": "TYPE_URL_NUM_BASE_PARAMS"}, {"original_string": "private static final int TYPE_HTML_NUM_BASE_PARAMS = 8;", "modifier": "private static final", "type": "int", "declarator": "TYPE_HTML_NUM_BASE_PARAMS = 8", "var_name": "TYPE_HTML_NUM_BASE_PARAMS"}, {"original_string": "private static final LockedDomainPrefixGenerator prefixGen = new LockedDomainPrefixGenerator() {\n    public String getLockedDomainPrefix(Uri gadgetUri) {\n      return LD_PREFIX;\n    }\n\n    public String getLockedDomainPrefix(String token) {\n      // TODO Auto-generated method stub\n      return LD_PREFIX;\n    }\n  };", "modifier": "private static final", "type": "LockedDomainPrefixGenerator", "declarator": "prefixGen = new LockedDomainPrefixGenerator() {\n    public String getLockedDomainPrefix(Uri gadgetUri) {\n      return LD_PREFIX;\n    }\n\n    public String getLockedDomainPrefix(String token) {\n      // TODO Auto-generated method stub\n      return LD_PREFIX;\n    }\n  }", "var_name": "prefixGen"}, {"original_string": "private static final SecurityTokenCodec tokenCodec = new BasicSecurityTokenCodec();", "modifier": "private static final", "type": "SecurityTokenCodec", "declarator": "tokenCodec = new BasicSecurityTokenCodec()", "var_name": "tokenCodec"}], "file": "java/gadgets/src/test/java/org/apache/shindig/gadgets/uri/DefaultIframeUriManagerTest.java"}, "test_case": {"identifier": "containerConfigurationChanges", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void containerConfigurationChanges() throws Exception {\n    ContainerConfig config = new BasicContainerConfig();\n    config\n        .newTransaction()\n        .addContainer(ImmutableMap\n            .<String, Object>builder()\n            .put(ContainerConfig.CONTAINER_KEY, ContainerConfig.DEFAULT_CONTAINER)\n            .put(LOCKED_DOMAIN_SUFFIX_KEY, LD_SUFFIX)\n            .put(IFRAME_BASE_PATH_KEY, IFRAME_PATH)\n            .put(LOCKED_DOMAIN_REQUIRED_KEY, true)\n            .build())\n        .commit();\n    LockedDomainService ldService = new HashLockedDomainService(config, true, prefixGen);\n    TestDefaultIframeUriManager manager = new TestDefaultIframeUriManager(config, ldService);\n\n    Uri testUri = Uri.parse(\"http://foobar\" + LD_SUFFIX + \"/?url=http://example.com\");\n\n    config.newTransaction().addContainer(ImmutableMap\n        .<String, Object>builder()\n        .put(ContainerConfig.CONTAINER_KEY, ContainerConfig.DEFAULT_CONTAINER)\n        .put(LOCKED_DOMAIN_SUFFIX_KEY, LD_SUFFIX_ALT)\n        .build()).commit();\n    assertEquals(UriStatus.VALID_UNVERSIONED, manager.validateRenderingUri(testUri));\n  }", "signature": "void containerConfigurationChanges()", "full_signature": "@Test public void containerConfigurationChanges()", "class_method_signature": "DefaultIframeUriManagerTest.containerConfigurationChanges()", "testcase": true, "constructor": false, "invocations": ["commit", "addContainer", "newTransaction", "build", "put", "put", "put", "put", "builder", "parse", "commit", "addContainer", "newTransaction", "build", "put", "put", "builder", "assertEquals", "validateRenderingUri"]}, "focal_class": {"identifier": "DefaultIframeUriManager", "superclass": "", "interfaces": "implements IframeUriManager", "fields": [{"original_string": "private static final boolean DEFAULT_USE_TEMPLATES = false;", "modifier": "private static final", "type": "boolean", "declarator": "DEFAULT_USE_TEMPLATES = false", "var_name": "DEFAULT_USE_TEMPLATES"}, {"original_string": "static final String IFRAME_BASE_PATH_KEY = \"gadgets.uri.iframe.basePath\";", "modifier": "static final", "type": "String", "declarator": "IFRAME_BASE_PATH_KEY = \"gadgets.uri.iframe.basePath\"", "var_name": "IFRAME_BASE_PATH_KEY"}, {"original_string": "static final String LOCKED_DOMAIN_REQUIRED_KEY = \"gadgets.uri.iframe.lockedDomainRequired\";", "modifier": "static final", "type": "String", "declarator": "LOCKED_DOMAIN_REQUIRED_KEY = \"gadgets.uri.iframe.lockedDomainRequired\"", "var_name": "LOCKED_DOMAIN_REQUIRED_KEY"}, {"original_string": "public static final String LOCKED_DOMAIN_SUFFIX_KEY = \"gadgets.uri.iframe.lockedDomainSuffix\";", "modifier": "public static final", "type": "String", "declarator": "LOCKED_DOMAIN_SUFFIX_KEY = \"gadgets.uri.iframe.lockedDomainSuffix\"", "var_name": "LOCKED_DOMAIN_SUFFIX_KEY"}, {"original_string": "public static final String UNLOCKED_DOMAIN_KEY = \"gadgets.uri.iframe.unlockedDomain\";", "modifier": "public static final", "type": "String", "declarator": "UNLOCKED_DOMAIN_KEY = \"gadgets.uri.iframe.unlockedDomain\"", "var_name": "UNLOCKED_DOMAIN_KEY"}, {"original_string": "public static final String SECURITY_TOKEN_ALWAYS_KEY = \"gadgets.uri.iframe.alwaysAppendSecurityToken\";", "modifier": "public static final", "type": "String", "declarator": "SECURITY_TOKEN_ALWAYS_KEY = \"gadgets.uri.iframe.alwaysAppendSecurityToken\"", "var_name": "SECURITY_TOKEN_ALWAYS_KEY"}, {"original_string": "public static final String LOCKED_DOMAIN_FEATURE_NAME = \"locked-domain\";", "modifier": "public static final", "type": "String", "declarator": "LOCKED_DOMAIN_FEATURE_NAME = \"locked-domain\"", "var_name": "LOCKED_DOMAIN_FEATURE_NAME"}, {"original_string": "public static final String SECURITY_TOKEN_FEATURE_NAME = \"security-token\";", "modifier": "public static final", "type": "String", "declarator": "SECURITY_TOKEN_FEATURE_NAME = \"security-token\"", "var_name": "SECURITY_TOKEN_FEATURE_NAME"}, {"original_string": "private TemplatingSignal tplSignal = null;", "modifier": "private", "type": "TemplatingSignal", "declarator": "tplSignal = null", "var_name": "tplSignal"}, {"original_string": "private Versioner versioner = null;", "modifier": "private", "type": "Versioner", "declarator": "versioner = null", "var_name": "versioner"}, {"original_string": "private Authority authority;", "modifier": "private", "type": "Authority", "declarator": "authority", "var_name": "authority"}, {"original_string": "private final ContainerConfig config;", "modifier": "private final", "type": "ContainerConfig", "declarator": "config", "var_name": "config"}, {"original_string": "private final LockedDomainService ldService;", "modifier": "private final", "type": "LockedDomainService", "declarator": "ldService", "var_name": "ldService"}, {"original_string": "private final SecurityTokenCodec securityTokenCodec;", "modifier": "private final", "type": "SecurityTokenCodec", "declarator": "securityTokenCodec", "var_name": "securityTokenCodec"}], "methods": [{"identifier": "DefaultIframeUriManager", "parameters": "(ContainerConfig config,\n                                 LockedDomainService ldService,\n                                 SecurityTokenCodec securityTokenCodec)", "modifiers": "@Inject public", "return": "", "signature": " DefaultIframeUriManager(ContainerConfig config,\n                                 LockedDomainService ldService,\n                                 SecurityTokenCodec securityTokenCodec)", "full_signature": "@Inject public  DefaultIframeUriManager(ContainerConfig config,\n                                 LockedDomainService ldService,\n                                 SecurityTokenCodec securityTokenCodec)", "class_method_signature": "DefaultIframeUriManager.DefaultIframeUriManager(ContainerConfig config,\n                                 LockedDomainService ldService,\n                                 SecurityTokenCodec securityTokenCodec)", "testcase": false, "constructor": true}, {"identifier": "setVersioner", "parameters": "(Versioner versioner)", "modifiers": "@Inject(optional = true) public", "return": "void", "signature": "void setVersioner(Versioner versioner)", "full_signature": "@Inject(optional = true) public void setVersioner(Versioner versioner)", "class_method_signature": "DefaultIframeUriManager.setVersioner(Versioner versioner)", "testcase": false, "constructor": false}, {"identifier": "setTemplatingSignal", "parameters": "(TemplatingSignal tplSignal)", "modifiers": "@Inject(optional = true) public", "return": "void", "signature": "void setTemplatingSignal(TemplatingSignal tplSignal)", "full_signature": "@Inject(optional = true) public void setTemplatingSignal(TemplatingSignal tplSignal)", "class_method_signature": "DefaultIframeUriManager.setTemplatingSignal(TemplatingSignal tplSignal)", "testcase": false, "constructor": false}, {"identifier": "setAuthority", "parameters": "(Authority authority)", "modifiers": "@Inject(optional = true) public", "return": "void", "signature": "void setAuthority(Authority authority)", "full_signature": "@Inject(optional = true) public void setAuthority(Authority authority)", "class_method_signature": "DefaultIframeUriManager.setAuthority(Authority authority)", "testcase": false, "constructor": false}, {"identifier": "makeRenderingUri", "parameters": "(Gadget gadget)", "modifiers": "public", "return": "Uri", "signature": "Uri makeRenderingUri(Gadget gadget)", "full_signature": "public Uri makeRenderingUri(Gadget gadget)", "class_method_signature": "DefaultIframeUriManager.makeRenderingUri(Gadget gadget)", "testcase": false, "constructor": false}, {"identifier": "buildUri", "parameters": "(View view, Gadget gadget)", "modifiers": "protected", "return": "Uri", "signature": "Uri buildUri(View view, Gadget gadget)", "full_signature": "protected Uri buildUri(View view, Gadget gadget)", "class_method_signature": "DefaultIframeUriManager.buildUri(View view, Gadget gadget)", "testcase": false, "constructor": false}, {"identifier": "processUriForUrlTypeView", "parameters": "(View view, Gadget gadget)", "modifiers": "protected", "return": "UriBuilder", "signature": "UriBuilder processUriForUrlTypeView(View view, Gadget gadget)", "full_signature": "protected UriBuilder processUriForUrlTypeView(View view, Gadget gadget)", "class_method_signature": "DefaultIframeUriManager.processUriForUrlTypeView(View view, Gadget gadget)", "testcase": false, "constructor": false}, {"identifier": "processUriForHtmlTypeView", "parameters": "(View view, Gadget gadget)", "modifiers": "protected", "return": "UriBuilder", "signature": "UriBuilder processUriForHtmlTypeView(View view, Gadget gadget)", "full_signature": "protected UriBuilder processUriForHtmlTypeView(View view, Gadget gadget)", "class_method_signature": "DefaultIframeUriManager.processUriForHtmlTypeView(View view, Gadget gadget)", "testcase": false, "constructor": false}, {"identifier": "addDefaultUriParameters", "parameters": "(UriBuilder uri, Gadget gadget, View view,\n      boolean useTpl)", "modifiers": "protected", "return": "void", "signature": "void addDefaultUriParameters(UriBuilder uri, Gadget gadget, View view,\n      boolean useTpl)", "full_signature": "protected void addDefaultUriParameters(UriBuilder uri, Gadget gadget, View view,\n      boolean useTpl)", "class_method_signature": "DefaultIframeUriManager.addDefaultUriParameters(UriBuilder uri, Gadget gadget, View view,\n      boolean useTpl)", "testcase": false, "constructor": false}, {"identifier": "addAllUserPrefs", "parameters": "(UriBuilder uri, Gadget gadget, View view, boolean useTpl)", "modifiers": "protected", "return": "void", "signature": "void addAllUserPrefs(UriBuilder uri, Gadget gadget, View view, boolean useTpl)", "full_signature": "protected void addAllUserPrefs(UriBuilder uri, Gadget gadget, View view, boolean useTpl)", "class_method_signature": "DefaultIframeUriManager.addAllUserPrefs(UriBuilder uri, Gadget gadget, View view, boolean useTpl)", "testcase": false, "constructor": false}, {"identifier": "generateSecurityToken", "parameters": "(Gadget gadget)", "modifiers": "protected", "return": "String", "signature": "String generateSecurityToken(Gadget gadget)", "full_signature": "protected String generateSecurityToken(Gadget gadget)", "class_method_signature": "DefaultIframeUriManager.generateSecurityToken(Gadget gadget)", "testcase": false, "constructor": false}, {"identifier": "wantsSecurityToken", "parameters": "(Gadget gadget)", "modifiers": "protected", "return": "boolean", "signature": "boolean wantsSecurityToken(Gadget gadget)", "full_signature": "protected boolean wantsSecurityToken(Gadget gadget)", "class_method_signature": "DefaultIframeUriManager.wantsSecurityToken(Gadget gadget)", "testcase": false, "constructor": false}, {"identifier": "isTokenNeededForRendering", "parameters": "(Gadget gadget)", "modifiers": "protected", "return": "boolean", "signature": "boolean isTokenNeededForRendering(Gadget gadget)", "full_signature": "protected boolean isTokenNeededForRendering(Gadget gadget)", "class_method_signature": "DefaultIframeUriManager.isTokenNeededForRendering(Gadget gadget)", "testcase": false, "constructor": false}, {"identifier": "validateRenderingUri", "parameters": "(Uri inUri)", "modifiers": "public", "return": "UriStatus", "signature": "UriStatus validateRenderingUri(Uri inUri)", "full_signature": "public UriStatus validateRenderingUri(Uri inUri)", "class_method_signature": "DefaultIframeUriManager.validateRenderingUri(Uri inUri)", "testcase": false, "constructor": false}, {"identifier": "tplKey", "parameters": "(String key)", "modifiers": "public static", "return": "String", "signature": "String tplKey(String key)", "full_signature": "public static String tplKey(String key)", "class_method_signature": "DefaultIframeUriManager.tplKey(String key)", "testcase": false, "constructor": false}, {"identifier": "getScheme", "parameters": "(Gadget gadget, String container)", "modifiers": "protected", "return": "String", "signature": "String getScheme(Gadget gadget, String container)", "full_signature": "protected String getScheme(Gadget gadget, String container)", "class_method_signature": "DefaultIframeUriManager.getScheme(Gadget gadget, String container)", "testcase": false, "constructor": false}, {"identifier": "addExtrasForTypeUrl", "parameters": "(UriBuilder uri, Gadget gadget, String container)", "modifiers": "protected", "return": "void", "signature": "void addExtrasForTypeUrl(UriBuilder uri, Gadget gadget, String container)", "full_signature": "protected void addExtrasForTypeUrl(UriBuilder uri, Gadget gadget, String container)", "class_method_signature": "DefaultIframeUriManager.addExtrasForTypeUrl(UriBuilder uri, Gadget gadget, String container)", "testcase": false, "constructor": false}, {"identifier": "addExtras", "parameters": "(UriBuilder uri, Gadget gadget)", "modifiers": "protected", "return": "void", "signature": "void addExtras(UriBuilder uri, Gadget gadget)", "full_signature": "protected void addExtras(UriBuilder uri, Gadget gadget)", "class_method_signature": "DefaultIframeUriManager.addExtras(UriBuilder uri, Gadget gadget)", "testcase": false, "constructor": false}, {"identifier": "addParam", "parameters": "(UriBuilder uri, String key, String data, boolean templated,\n      boolean fragment)", "modifiers": "private", "return": "void", "signature": "void addParam(UriBuilder uri, String key, String data, boolean templated,\n      boolean fragment)", "full_signature": "private void addParam(UriBuilder uri, String key, String data, boolean templated,\n      boolean fragment)", "class_method_signature": "DefaultIframeUriManager.addParam(UriBuilder uri, String key, String data, boolean templated,\n      boolean fragment)", "testcase": false, "constructor": false}, {"identifier": "getReqVal", "parameters": "(String container, String key)", "modifiers": "private", "return": "String", "signature": "String getReqVal(String container, String key)", "full_signature": "private String getReqVal(String container, String key)", "class_method_signature": "DefaultIframeUriManager.getReqVal(String container, String key)", "testcase": false, "constructor": false}, {"identifier": "makeAllRenderingUris", "parameters": "(Gadget gadget)", "modifiers": "public", "return": "Map<String, Uri>", "signature": "Map<String, Uri> makeAllRenderingUris(Gadget gadget)", "full_signature": "public Map<String, Uri> makeAllRenderingUris(Gadget gadget)", "class_method_signature": "DefaultIframeUriManager.makeAllRenderingUris(Gadget gadget)", "testcase": false, "constructor": false}], "file": "java/gadgets/src/main/java/org/apache/shindig/gadgets/uri/DefaultIframeUriManager.java"}, "focal_method": {"identifier": "validateRenderingUri", "parameters": "(Uri inUri)", "modifiers": "public", "return": "UriStatus", "body": "public UriStatus validateRenderingUri(Uri inUri) {\n    UriBuilder uri = new UriBuilder(inUri);\n\n    String gadgetStr = uri.getQueryParameter(Param.URL.getKey());\n    Uri gadgetUri;\n    try {\n      gadgetUri = Uri.parse(gadgetStr);\n    } catch (Exception e) {\n      // RuntimeException eg. InvalidArgumentException\n      return UriStatus.BAD_URI;\n    }\n\n    String container = uri.getQueryParameter(Param.CONTAINER.getKey());\n    if (container == null) {\n      container = ContainerConfig.DEFAULT_CONTAINER;\n    }\n\n    String version = uri.getQueryParameter(Param.VERSION.getKey());\n    if (versioner == null || version == null) {\n      return UriStatus.VALID_UNVERSIONED;\n    }\n\n    return versioner.validate(gadgetUri, container, version);\n  }", "signature": "UriStatus validateRenderingUri(Uri inUri)", "full_signature": "public UriStatus validateRenderingUri(Uri inUri)", "class_method_signature": "DefaultIframeUriManager.validateRenderingUri(Uri inUri)", "testcase": false, "constructor": false, "invocations": ["getQueryParameter", "getKey", "parse", "getQueryParameter", "getKey", "getQueryParameter", "getKey", "validate"]}, "repository": {"repo_id": 206633, "url": "https://github.com/apache/shindig", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 65, "size": 18767, "license": "licensed"}}