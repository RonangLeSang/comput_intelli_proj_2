{"test_class": {"identifier": "ClientCredentialsGrantTypeHandlerTest", "superclass": "extends MockUtils", "interfaces": "", "fields": [{"original_string": "private static ClientCredentialsGrantTypeHandler ccgth;", "modifier": "private static", "type": "ClientCredentialsGrantTypeHandler", "declarator": "ccgth", "var_name": "ccgth"}], "file": "java/gadgets/src/test/java/org/apache/shindig/gadgets/oauth2/handler/ClientCredentialsGrantTypeHandlerTest.java"}, "test_case": {"identifier": "testGetAuthorizationRequest_4", "parameters": "()", "modifiers": "@Test(expected = OAuth2RequestException.class) public", "return": "void", "body": "@Test(expected = OAuth2RequestException.class)\n  public void testGetAuthorizationRequest_4() throws Exception {\n    final ClientCredentialsGrantTypeHandler fixture = ClientCredentialsGrantTypeHandlerTest.ccgth;\n    final OAuth2Accessor accessor = MockUtils.getOAuth2Accessor_Code();\n    final String completeAuthorizationUrl = \"xxx\";\n\n    fixture.getAuthorizationRequest(accessor, completeAuthorizationUrl);\n  }", "signature": "void testGetAuthorizationRequest_4()", "full_signature": "@Test(expected = OAuth2RequestException.class) public void testGetAuthorizationRequest_4()", "class_method_signature": "ClientCredentialsGrantTypeHandlerTest.testGetAuthorizationRequest_4()", "testcase": true, "constructor": false, "invocations": ["getOAuth2Accessor_Code", "getAuthorizationRequest"]}, "focal_class": {"identifier": "ClientCredentialsGrantTypeHandler", "superclass": "", "interfaces": "implements GrantRequestHandler", "fields": [{"original_string": "private static final OAuth2Error ERROR = OAuth2Error.CLIENT_CREDENTIALS_PROBLEM;", "modifier": "private static final", "type": "OAuth2Error", "declarator": "ERROR = OAuth2Error.CLIENT_CREDENTIALS_PROBLEM", "var_name": "ERROR"}, {"original_string": "private final List<ClientAuthenticationHandler> clientAuthenticationHandlers;", "modifier": "private final", "type": "List<ClientAuthenticationHandler>", "declarator": "clientAuthenticationHandlers", "var_name": "clientAuthenticationHandlers"}], "methods": [{"identifier": "ClientCredentialsGrantTypeHandler", "parameters": "(\n          final List<ClientAuthenticationHandler> clientAuthenticationHandlers)", "modifiers": "@Inject public", "return": "", "signature": " ClientCredentialsGrantTypeHandler(\n          final List<ClientAuthenticationHandler> clientAuthenticationHandlers)", "full_signature": "@Inject public  ClientCredentialsGrantTypeHandler(\n          final List<ClientAuthenticationHandler> clientAuthenticationHandlers)", "class_method_signature": "ClientCredentialsGrantTypeHandler.ClientCredentialsGrantTypeHandler(\n          final List<ClientAuthenticationHandler> clientAuthenticationHandlers)", "testcase": false, "constructor": true}, {"identifier": "getAuthorizationBody", "parameters": "(final OAuth2Accessor accessor)", "modifiers": "private", "return": "String", "signature": "String getAuthorizationBody(final OAuth2Accessor accessor)", "full_signature": "private String getAuthorizationBody(final OAuth2Accessor accessor)", "class_method_signature": "ClientCredentialsGrantTypeHandler.getAuthorizationBody(final OAuth2Accessor accessor)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizationRequest", "parameters": "(final OAuth2Accessor accessor,\n          final String completeAuthorizationUrl)", "modifiers": "public", "return": "HttpRequest", "signature": "HttpRequest getAuthorizationRequest(final OAuth2Accessor accessor,\n          final String completeAuthorizationUrl)", "full_signature": "public HttpRequest getAuthorizationRequest(final OAuth2Accessor accessor,\n          final String completeAuthorizationUrl)", "class_method_signature": "ClientCredentialsGrantTypeHandler.getAuthorizationRequest(final OAuth2Accessor accessor,\n          final String completeAuthorizationUrl)", "testcase": false, "constructor": false}, {"identifier": "getCompleteUrl", "parameters": "(final OAuth2Accessor accessor)", "modifiers": "public", "return": "String", "signature": "String getCompleteUrl(final OAuth2Accessor accessor)", "full_signature": "public String getCompleteUrl(final OAuth2Accessor accessor)", "class_method_signature": "ClientCredentialsGrantTypeHandler.getCompleteUrl(final OAuth2Accessor accessor)", "testcase": false, "constructor": false}, {"identifier": "getGrantType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getGrantType()", "full_signature": "public String getGrantType()", "class_method_signature": "ClientCredentialsGrantTypeHandler.getGrantType()", "testcase": false, "constructor": false}, {"identifier": "isAuthorizationEndpointResponse", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAuthorizationEndpointResponse()", "full_signature": "public boolean isAuthorizationEndpointResponse()", "class_method_signature": "ClientCredentialsGrantTypeHandler.isAuthorizationEndpointResponse()", "testcase": false, "constructor": false}, {"identifier": "isRedirectRequired", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRedirectRequired()", "full_signature": "public boolean isRedirectRequired()", "class_method_signature": "ClientCredentialsGrantTypeHandler.isRedirectRequired()", "testcase": false, "constructor": false}, {"identifier": "isTokenEndpointResponse", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTokenEndpointResponse()", "full_signature": "public boolean isTokenEndpointResponse()", "class_method_signature": "ClientCredentialsGrantTypeHandler.isTokenEndpointResponse()", "testcase": false, "constructor": false}], "file": "java/gadgets/src/main/java/org/apache/shindig/gadgets/oauth2/handler/ClientCredentialsGrantTypeHandler.java"}, "focal_method": {"identifier": "getAuthorizationRequest", "parameters": "(final OAuth2Accessor accessor,\n          final String completeAuthorizationUrl)", "modifiers": "public", "return": "HttpRequest", "body": "public HttpRequest getAuthorizationRequest(final OAuth2Accessor accessor,\n          final String completeAuthorizationUrl) throws OAuth2RequestException {\n\n    if (completeAuthorizationUrl == null || completeAuthorizationUrl.length() == 0) {\n      throw new OAuth2RequestException(ClientCredentialsGrantTypeHandler.ERROR,\n              \"completeAuthorizationUrl is null\", null);\n    }\n\n    if (accessor == null) {\n      throw new OAuth2RequestException(ClientCredentialsGrantTypeHandler.ERROR, \"accessor is null\",\n              null);\n    }\n\n    if (!accessor.isValid() || accessor.isErrorResponse() || accessor.isRedirecting()) {\n      throw new OAuth2RequestException(ClientCredentialsGrantTypeHandler.ERROR,\n              \"accessor is invalid\", null);\n    }\n\n    if (!accessor.getGrantType().equalsIgnoreCase(OAuth2Message.CLIENT_CREDENTIALS)) {\n      throw new OAuth2RequestException(ClientCredentialsGrantTypeHandler.ERROR,\n              \"grant type is not client_credentials\", null);\n    }\n\n    final HttpRequest request = new HttpRequest(Uri.parse(completeAuthorizationUrl));\n    request.setMethod(\"POST\");\n    request.setHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n    request.setSecurityToken(new AnonymousSecurityToken(\"\", 0L, accessor.getGadgetUri()));\n\n    for (final ClientAuthenticationHandler clientAuthenticationHandler : this.clientAuthenticationHandlers) {\n      if (clientAuthenticationHandler.geClientAuthenticationType().equalsIgnoreCase(\n              accessor.getClientAuthenticationType())) {\n        final OAuth2HandlerError error = clientAuthenticationHandler.addOAuth2Authentication(\n                request, accessor);\n        if (error != null) {\n          throw new OAuth2RequestException(error.getError(), error.getContextMessage(),\n                  error.getCause(), error.getUri(), error.getDescription());\n        }\n      }\n    }\n\n    try {\n      request.setPostBody(this.getAuthorizationBody(accessor).getBytes(\"UTF-8\"));\n    } catch (final UnsupportedEncodingException e) {\n      throw new OAuth2RequestException(OAuth2Error.CLIENT_CREDENTIALS_PROBLEM,\n              \"ClientCredentialsGrantTypeHandler - exception setting post body\", e);\n    }\n\n    return request;\n  }", "signature": "HttpRequest getAuthorizationRequest(final OAuth2Accessor accessor,\n          final String completeAuthorizationUrl)", "full_signature": "public HttpRequest getAuthorizationRequest(final OAuth2Accessor accessor,\n          final String completeAuthorizationUrl)", "class_method_signature": "ClientCredentialsGrantTypeHandler.getAuthorizationRequest(final OAuth2Accessor accessor,\n          final String completeAuthorizationUrl)", "testcase": false, "constructor": false, "invocations": ["length", "isValid", "isErrorResponse", "isRedirecting", "equalsIgnoreCase", "getGrantType", "parse", "setMethod", "setHeader", "setSecurityToken", "getGadgetUri", "equalsIgnoreCase", "geClientAuthenticationType", "getClientAuthenticationType", "addOAuth2Authentication", "getError", "getContextMessage", "getCause", "getUri", "getDescription", "setPostBody", "getBytes", "getAuthorizationBody"]}, "repository": {"repo_id": 206633, "url": "https://github.com/apache/shindig", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 65, "size": 18767, "license": "licensed"}}