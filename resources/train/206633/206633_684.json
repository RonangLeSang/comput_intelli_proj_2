{"test_class": {"identifier": "FeatureRegistryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String NODEP_TPL =\n      getFeatureTpl(\"nodep\", new String[] {});", "modifier": "private static final", "type": "String", "declarator": "NODEP_TPL =\n      getFeatureTpl(\"nodep\", new String[] {})", "var_name": "NODEP_TPL"}, {"original_string": "private static final String TOP_TPL =\n      getFeatureTpl(\"top\", new String[] { \"mid_a\", \"mid_b\" });", "modifier": "private static final", "type": "String", "declarator": "TOP_TPL =\n      getFeatureTpl(\"top\", new String[] { \"mid_a\", \"mid_b\" })", "var_name": "TOP_TPL"}, {"original_string": "private static final String MID_A_TPL =\n      getFeatureTpl(\"mid_a\", new String[] { \"bottom\" });", "modifier": "private static final", "type": "String", "declarator": "MID_A_TPL =\n      getFeatureTpl(\"mid_a\", new String[] { \"bottom\" })", "var_name": "MID_A_TPL"}, {"original_string": "private static final String MID_B_TPL =\n      getFeatureTpl(\"mid_b\", new String[] { \"bottom\" });", "modifier": "private static final", "type": "String", "declarator": "MID_B_TPL =\n      getFeatureTpl(\"mid_b\", new String[] { \"bottom\" })", "var_name": "MID_B_TPL"}, {"original_string": "private static final String BOTTOM_TPL =\n      getFeatureTpl(\"bottom\", new String[] {});", "modifier": "private static final", "type": "String", "declarator": "BOTTOM_TPL =\n      getFeatureTpl(\"bottom\", new String[] {})", "var_name": "BOTTOM_TPL"}, {"original_string": "private static final String LOOP_A_TPL =\n      getFeatureTpl(\"loop_a\", new String[] { \"loop_b\" });", "modifier": "private static final", "type": "String", "declarator": "LOOP_A_TPL =\n      getFeatureTpl(\"loop_a\", new String[] { \"loop_b\" })", "var_name": "LOOP_A_TPL"}, {"original_string": "private static final String LOOP_B_TPL =\n      getFeatureTpl(\"loop_b\", new String[] { \"loop_c\" });", "modifier": "private static final", "type": "String", "declarator": "LOOP_B_TPL =\n      getFeatureTpl(\"loop_b\", new String[] { \"loop_c\" })", "var_name": "LOOP_B_TPL"}, {"original_string": "private static final String LOOP_C_TPL =\n      getFeatureTpl(\"loop_c\", new String[] { \"loop_a\" });", "modifier": "private static final", "type": "String", "declarator": "LOOP_C_TPL =\n      getFeatureTpl(\"loop_c\", new String[] { \"loop_a\" })", "var_name": "LOOP_C_TPL"}, {"original_string": "private static final String BAD_DEP_TPL =\n      getFeatureTpl(\"bad_dep\", new String[] { \"no-exists\" });", "modifier": "private static final", "type": "String", "declarator": "BAD_DEP_TPL =\n      getFeatureTpl(\"bad_dep\", new String[] { \"no-exists\" })", "var_name": "BAD_DEP_TPL"}, {"original_string": "private static String RESOURCE_BASE_PATH = \"/resource/base/path\";", "modifier": "private static", "type": "String", "declarator": "RESOURCE_BASE_PATH = \"/resource/base/path\"", "var_name": "RESOURCE_BASE_PATH"}, {"original_string": "private static int resourceIdx = 0;", "modifier": "private static", "type": "int", "declarator": "resourceIdx = 0", "var_name": "resourceIdx"}, {"original_string": "private TestFeatureRegistry registry;", "modifier": "private", "type": "TestFeatureRegistry", "declarator": "registry", "var_name": "registry"}], "file": "java/gadgets/src/test/java/org/apache/shindig/gadgets/features/FeatureRegistryTest.java"}, "test_case": {"identifier": "getFeaturesStringsNoTransitive", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getFeaturesStringsNoTransitive() throws Exception {\n    setupFullRegistry(\"gadget\", null);\n    List<String> needed = Lists.newArrayList(\"nodep\", \"bottom\");\n    List<String> featureNames = registry.getFeatures(needed);\n    assertEquals(2, featureNames.size());\n    assertEquals(\"nodep\", featureNames.get(0));\n    assertEquals(\"bottom\", featureNames.get(1));\n  }", "signature": "void getFeaturesStringsNoTransitive()", "full_signature": "@Test public void getFeaturesStringsNoTransitive()", "class_method_signature": "FeatureRegistryTest.getFeaturesStringsNoTransitive()", "testcase": true, "constructor": false, "invocations": ["setupFullRegistry", "newArrayList", "getFeatures", "assertEquals", "size", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "FeatureRegistry", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String CACHE_NAME = \"FeatureJsCache\";", "modifier": "public static final", "type": "String", "declarator": "CACHE_NAME = \"FeatureJsCache\"", "var_name": "CACHE_NAME"}, {"original_string": "public static final String RESOURCE_SCHEME = \"res\";", "modifier": "public static final", "type": "String", "declarator": "RESOURCE_SCHEME = \"res\"", "var_name": "RESOURCE_SCHEME"}, {"original_string": "public static final String FILE_SCHEME = \"file\";", "modifier": "public static final", "type": "String", "declarator": "FILE_SCHEME = \"file\"", "var_name": "FILE_SCHEME"}, {"original_string": "public static final Splitter CRLF_SPLITTER = Splitter.onPattern(\"[\\r\\n]+\").trimResults().omitEmptyStrings();", "modifier": "public static final", "type": "Splitter", "declarator": "CRLF_SPLITTER = Splitter.onPattern(\"[\\r\\n]+\").trimResults().omitEmptyStrings()", "var_name": "CRLF_SPLITTER"}, {"original_string": "private static final String classname = FeatureRegistry.class.getName();", "modifier": "private static final", "type": "String", "declarator": "classname = FeatureRegistry.class.getName()", "var_name": "classname"}, {"original_string": "private static final Logger LOG = Logger.getLogger(classname, MessageKeys.MESSAGES);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(classname, MessageKeys.MESSAGES)", "var_name": "LOG"}, {"original_string": "private final Cache<String, LookupResult> cache;", "modifier": "private final", "type": "Cache<String, LookupResult>", "declarator": "cache", "var_name": "cache"}, {"original_string": "private final FeatureParser parser;", "modifier": "private final", "type": "FeatureParser", "declarator": "parser", "var_name": "parser"}, {"original_string": "private final FeatureResourceLoader resourceLoader;", "modifier": "private final", "type": "FeatureResourceLoader", "declarator": "resourceLoader", "var_name": "resourceLoader"}, {"original_string": "private final ImmutableMap<String, FeatureNode> featureMap;", "modifier": "private final", "type": "ImmutableMap<String, FeatureNode>", "declarator": "featureMap", "var_name": "featureMap"}, {"original_string": "private final FeatureFileSystem fileSystem;", "modifier": "private final", "type": "FeatureFileSystem", "declarator": "fileSystem", "var_name": "fileSystem"}, {"original_string": "private final String repository;", "modifier": "private final", "type": "String", "declarator": "repository", "var_name": "repository"}], "methods": [{"identifier": "FeatureRegistry", "parameters": "(FeatureResourceLoader resourceLoader,\n                         CacheProvider cacheProvider,\n                         @Named(\"org.apache.shindig.features\") List<String> features,\n                         FeatureFileSystem fileSystem)", "modifiers": "@Inject public", "return": "", "signature": " FeatureRegistry(FeatureResourceLoader resourceLoader,\n                         CacheProvider cacheProvider,\n                         @Named(\"org.apache.shindig.features\") List<String> features,\n                         FeatureFileSystem fileSystem)", "full_signature": "@Inject public  FeatureRegistry(FeatureResourceLoader resourceLoader,\n                         CacheProvider cacheProvider,\n                         @Named(\"org.apache.shindig.features\") List<String> features,\n                         FeatureFileSystem fileSystem)", "class_method_signature": "FeatureRegistry.FeatureRegistry(FeatureResourceLoader resourceLoader,\n                         CacheProvider cacheProvider,\n                         @Named(\"org.apache.shindig.features\") List<String> features,\n                         FeatureFileSystem fileSystem)", "testcase": false, "constructor": true}, {"identifier": "FeatureRegistry", "parameters": "(FeatureResourceLoader resourceLoader,\n      CacheProvider cacheProvider,\n      @Named(\"org.apache.shindig.features\") List<String> features,\n      FeatureFileSystem fileSystem, String repository)", "modifiers": "public", "return": "", "signature": " FeatureRegistry(FeatureResourceLoader resourceLoader,\n      CacheProvider cacheProvider,\n      @Named(\"org.apache.shindig.features\") List<String> features,\n      FeatureFileSystem fileSystem, String repository)", "full_signature": "public  FeatureRegistry(FeatureResourceLoader resourceLoader,\n      CacheProvider cacheProvider,\n      @Named(\"org.apache.shindig.features\") List<String> features,\n      FeatureFileSystem fileSystem, String repository)", "class_method_signature": "FeatureRegistry.FeatureRegistry(FeatureResourceLoader resourceLoader,\n      CacheProvider cacheProvider,\n      @Named(\"org.apache.shindig.features\") List<String> features,\n      FeatureFileSystem fileSystem, String repository)", "testcase": false, "constructor": true}, {"identifier": "getRepository", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRepository()", "full_signature": "public String getRepository()", "class_method_signature": "FeatureRegistry.getRepository()", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(List<String> resourceList)", "modifiers": "protected", "return": "ImmutableMap<String, FeatureNode>", "signature": "ImmutableMap<String, FeatureNode> register(List<String> resourceList)", "full_signature": "protected ImmutableMap<String, FeatureNode> register(List<String> resourceList)", "class_method_signature": "FeatureRegistry.register(List<String> resourceList)", "testcase": false, "constructor": false}, {"identifier": "getFeatureResources", "parameters": "(\n      GadgetContext ctx, Collection<String> needed, List<String> unsupported, boolean transitive)", "modifiers": "public", "return": "LookupResult", "signature": "LookupResult getFeatureResources(\n      GadgetContext ctx, Collection<String> needed, List<String> unsupported, boolean transitive)", "full_signature": "public LookupResult getFeatureResources(\n      GadgetContext ctx, Collection<String> needed, List<String> unsupported, boolean transitive)", "class_method_signature": "FeatureRegistry.getFeatureResources(\n      GadgetContext ctx, Collection<String> needed, List<String> unsupported, boolean transitive)", "testcase": false, "constructor": false}, {"identifier": "getFeatureResources", "parameters": "(GadgetContext ctx, Collection<String> needed,\n      List<String> unsupported)", "modifiers": "public", "return": "LookupResult", "signature": "LookupResult getFeatureResources(GadgetContext ctx, Collection<String> needed,\n      List<String> unsupported)", "full_signature": "public LookupResult getFeatureResources(GadgetContext ctx, Collection<String> needed,\n      List<String> unsupported)", "class_method_signature": "FeatureRegistry.getFeatureResources(GadgetContext ctx, Collection<String> needed,\n      List<String> unsupported)", "testcase": false, "constructor": false}, {"identifier": "getAllFeatures", "parameters": "()", "modifiers": "public", "return": "LookupResult", "signature": "LookupResult getAllFeatures()", "full_signature": "public LookupResult getAllFeatures()", "class_method_signature": "FeatureRegistry.getAllFeatures()", "testcase": false, "constructor": false}, {"identifier": "getFeatures", "parameters": "(Collection<String> needed)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getFeatures(Collection<String> needed)", "full_signature": "public List<String> getFeatures(Collection<String> needed)", "class_method_signature": "FeatureRegistry.getFeatures(Collection<String> needed)", "testcase": false, "constructor": false}, {"identifier": "getAllFeatureNames", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getAllFeatureNames()", "full_signature": "public Set<String> getAllFeatureNames()", "class_method_signature": "FeatureRegistry.getAllFeatureNames()", "testcase": false, "constructor": false}, {"identifier": "getComponentUri", "parameters": "(String str)", "modifiers": "static", "return": "Uri", "signature": "Uri getComponentUri(String str)", "full_signature": "static Uri getComponentUri(String str)", "class_method_signature": "FeatureRegistry.getComponentUri(String str)", "testcase": false, "constructor": false}, {"identifier": "getTransitiveDeps", "parameters": "(\n      Collection<String> needed, List<String> unsupported)", "modifiers": "private", "return": "List<FeatureNode>", "signature": "List<FeatureNode> getTransitiveDeps(\n      Collection<String> needed, List<String> unsupported)", "full_signature": "private List<FeatureNode> getTransitiveDeps(\n      Collection<String> needed, List<String> unsupported)", "class_method_signature": "FeatureRegistry.getTransitiveDeps(\n      Collection<String> needed, List<String> unsupported)", "testcase": false, "constructor": false}, {"identifier": "getRequestedNodes", "parameters": "(\n      Collection<String> needed, List<String> unsupported)", "modifiers": "private", "return": "List<FeatureNode>", "signature": "List<FeatureNode> getRequestedNodes(\n      Collection<String> needed, List<String> unsupported)", "full_signature": "private List<FeatureNode> getRequestedNodes(\n      Collection<String> needed, List<String> unsupported)", "class_method_signature": "FeatureRegistry.getRequestedNodes(\n      Collection<String> needed, List<String> unsupported)", "testcase": false, "constructor": false}, {"identifier": "containerMatch", "parameters": "(String containerAttrib, String container)", "modifiers": "private", "return": "boolean", "signature": "boolean containerMatch(String containerAttrib, String container)", "full_signature": "private boolean containerMatch(String containerAttrib, String container)", "class_method_signature": "FeatureRegistry.containerMatch(String containerAttrib, String container)", "testcase": false, "constructor": false}, {"identifier": "connectDependencyGraph", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void connectDependencyGraph()", "full_signature": "private void connectDependencyGraph()", "class_method_signature": "FeatureRegistry.connectDependencyGraph()", "testcase": false, "constructor": false}, {"identifier": "loadResources", "parameters": "(List<String> resources, Map<String,FeatureNode> featureMapBuilder)", "modifiers": "private", "return": "void", "signature": "void loadResources(List<String> resources, Map<String,FeatureNode> featureMapBuilder)", "full_signature": "private void loadResources(List<String> resources, Map<String,FeatureNode> featureMapBuilder)", "class_method_signature": "FeatureRegistry.loadResources(List<String> resources, Map<String,FeatureNode> featureMapBuilder)", "testcase": false, "constructor": false}, {"identifier": "loadFile", "parameters": "(FeatureFile file, Map<String,FeatureNode> featureMapBuilder)", "modifiers": "private", "return": "void", "signature": "void loadFile(FeatureFile file, Map<String,FeatureNode> featureMapBuilder)", "full_signature": "private void loadFile(FeatureFile file, Map<String,FeatureNode> featureMapBuilder)", "class_method_signature": "FeatureRegistry.loadFile(FeatureFile file, Map<String,FeatureNode> featureMapBuilder)", "testcase": false, "constructor": false}, {"identifier": "loadFeature", "parameters": "(Uri parent, String xml, Map<String,FeatureNode> featureMapBuilder)", "modifiers": "protected", "return": "void", "signature": "void loadFeature(Uri parent, String xml, Map<String,FeatureNode> featureMapBuilder)", "full_signature": "protected void loadFeature(Uri parent, String xml, Map<String,FeatureNode> featureMapBuilder)", "class_method_signature": "FeatureRegistry.loadFeature(Uri parent, String xml, Map<String,FeatureNode> featureMapBuilder)", "testcase": false, "constructor": false}, {"identifier": "makeCacheKey", "parameters": "(Collection<String> needed, GadgetContext ctx, List<String> unsupported)", "modifiers": "protected", "return": "String", "signature": "String makeCacheKey(Collection<String> needed, GadgetContext ctx, List<String> unsupported)", "full_signature": "protected String makeCacheKey(Collection<String> needed, GadgetContext ctx, List<String> unsupported)", "class_method_signature": "FeatureRegistry.makeCacheKey(Collection<String> needed, GadgetContext ctx, List<String> unsupported)", "testcase": false, "constructor": false}, {"identifier": "getResourceAttribs", "parameters": "(Map<String, String> bundleAttribs,\n      Map<String, String> resourceAttribs)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> getResourceAttribs(Map<String, String> bundleAttribs,\n      Map<String, String> resourceAttribs)", "full_signature": "private Map<String, String> getResourceAttribs(Map<String, String> bundleAttribs,\n      Map<String, String> resourceAttribs)", "class_method_signature": "FeatureRegistry.getResourceAttribs(Map<String, String> bundleAttribs,\n      Map<String, String> resourceAttribs)", "testcase": false, "constructor": false}], "file": "java/gadgets/src/main/java/org/apache/shindig/gadgets/features/FeatureRegistry.java"}, "focal_method": {"identifier": "getFeatures", "parameters": "(Collection<String> needed)", "modifiers": "public", "return": "List<String>", "body": "public List<String> getFeatures(Collection<String> needed) {\n    List<FeatureNode> fullTree = getTransitiveDeps(needed, Lists.<String>newLinkedList());\n    List<String> allFeatures = Lists.newLinkedList();\n    for (FeatureNode node : fullTree) {\n      allFeatures.add(node.name);\n    }\n    return allFeatures;\n  }", "signature": "List<String> getFeatures(Collection<String> needed)", "full_signature": "public List<String> getFeatures(Collection<String> needed)", "class_method_signature": "FeatureRegistry.getFeatures(Collection<String> needed)", "testcase": false, "constructor": false, "invocations": ["getTransitiveDeps", "newLinkedList", "newLinkedList", "add"]}, "repository": {"repo_id": 206633, "url": "https://github.com/apache/shindig", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 65, "size": 18767, "license": "licensed"}}