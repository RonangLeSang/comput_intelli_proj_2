{"test_class": {"identifier": "OAuth2TokenPersistenceTest", "superclass": "extends MockUtils", "interfaces": "", "fields": [{"original_string": "private static OAuth2TokenPersistence accessToken;", "modifier": "private static", "type": "OAuth2TokenPersistence", "declarator": "accessToken", "var_name": "accessToken"}, {"original_string": "private static OAuth2TokenPersistence refreshToken;", "modifier": "private static", "type": "OAuth2TokenPersistence", "declarator": "refreshToken", "var_name": "refreshToken"}], "file": "java/gadgets/src/test/java/org/apache/shindig/gadgets/oauth2/persistence/OAuth2TokenPersistenceTest.java"}, "test_case": {"identifier": "testGetGadgetUri_1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetGadgetUri_1() throws Exception {\n    final String result = OAuth2TokenPersistenceTest.accessToken.getGadgetUri();\n\n    Assert.assertNotNull(result);\n\n    Assert.assertEquals(MockUtils.GADGET_URI1, result);\n  }", "signature": "void testGetGadgetUri_1()", "full_signature": "@Test public void testGetGadgetUri_1()", "class_method_signature": "OAuth2TokenPersistenceTest.testGetGadgetUri_1()", "testcase": true, "constructor": false, "invocations": ["getGadgetUri", "assertNotNull", "assertEquals"]}, "focal_class": {"identifier": "OAuth2TokenPersistence", "superclass": "", "interfaces": "implements OAuth2Token", "fields": [{"original_string": "private static final long serialVersionUID = -169781729667228661L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -169781729667228661L", "var_name": "serialVersionUID"}, {"original_string": "private byte[] encryptedMacSecret;", "modifier": "private", "type": "byte[]", "declarator": "encryptedMacSecret", "var_name": "encryptedMacSecret"}, {"original_string": "private byte[] encryptedSecret;", "modifier": "private", "type": "byte[]", "declarator": "encryptedSecret", "var_name": "encryptedSecret"}, {"original_string": "private transient final OAuth2Encrypter encrypter;", "modifier": "private transient final", "type": "OAuth2Encrypter", "declarator": "encrypter", "var_name": "encrypter"}, {"original_string": "private long expiresAt;", "modifier": "private", "type": "long", "declarator": "expiresAt", "var_name": "expiresAt"}, {"original_string": "private String gadgetUri;", "modifier": "private", "type": "String", "declarator": "gadgetUri", "var_name": "gadgetUri"}, {"original_string": "private long issuedAt;", "modifier": "private", "type": "long", "declarator": "issuedAt", "var_name": "issuedAt"}, {"original_string": "private String macAlgorithm;", "modifier": "private", "type": "String", "declarator": "macAlgorithm", "var_name": "macAlgorithm"}, {"original_string": "private String macExt;", "modifier": "private", "type": "String", "declarator": "macExt", "var_name": "macExt"}, {"original_string": "private byte[] macSecret;", "modifier": "private", "type": "byte[]", "declarator": "macSecret", "var_name": "macSecret"}, {"original_string": "private final Map<String, String> properties;", "modifier": "private final", "type": "Map<String, String>", "declarator": "properties", "var_name": "properties"}, {"original_string": "private String scope;", "modifier": "private", "type": "String", "declarator": "scope", "var_name": "scope"}, {"original_string": "private byte[] secret;", "modifier": "private", "type": "byte[]", "declarator": "secret", "var_name": "secret"}, {"original_string": "private String serviceName;", "modifier": "private", "type": "String", "declarator": "serviceName", "var_name": "serviceName"}, {"original_string": "private String tokenType;", "modifier": "private", "type": "String", "declarator": "tokenType", "var_name": "tokenType"}, {"original_string": "private Type type;", "modifier": "private", "type": "Type", "declarator": "type", "var_name": "type"}, {"original_string": "private String user;", "modifier": "private", "type": "String", "declarator": "user", "var_name": "user"}], "methods": [{"identifier": "OAuth2TokenPersistence", "parameters": "()", "modifiers": "public", "return": "", "signature": " OAuth2TokenPersistence()", "full_signature": "public  OAuth2TokenPersistence()", "class_method_signature": "OAuth2TokenPersistence.OAuth2TokenPersistence()", "testcase": false, "constructor": true}, {"identifier": "OAuth2TokenPersistence", "parameters": "(final OAuth2Encrypter encrypter)", "modifiers": "@Inject public", "return": "", "signature": " OAuth2TokenPersistence(final OAuth2Encrypter encrypter)", "full_signature": "@Inject public  OAuth2TokenPersistence(final OAuth2Encrypter encrypter)", "class_method_signature": "OAuth2TokenPersistence.OAuth2TokenPersistence(final OAuth2Encrypter encrypter)", "testcase": false, "constructor": true}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "OAuth2TokenPersistence.equals(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "getEncryptedMacSecret", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getEncryptedMacSecret()", "full_signature": "public byte[] getEncryptedMacSecret()", "class_method_signature": "OAuth2TokenPersistence.getEncryptedMacSecret()", "testcase": false, "constructor": false}, {"identifier": "getEncryptedSecret", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getEncryptedSecret()", "full_signature": "public byte[] getEncryptedSecret()", "class_method_signature": "OAuth2TokenPersistence.getEncryptedSecret()", "testcase": false, "constructor": false}, {"identifier": "getExpiresAt", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getExpiresAt()", "full_signature": "public long getExpiresAt()", "class_method_signature": "OAuth2TokenPersistence.getExpiresAt()", "testcase": false, "constructor": false}, {"identifier": "getGadgetUri", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getGadgetUri()", "full_signature": "public String getGadgetUri()", "class_method_signature": "OAuth2TokenPersistence.getGadgetUri()", "testcase": false, "constructor": false}, {"identifier": "getIssuedAt", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getIssuedAt()", "full_signature": "public long getIssuedAt()", "class_method_signature": "OAuth2TokenPersistence.getIssuedAt()", "testcase": false, "constructor": false}, {"identifier": "getMacAlgorithm", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMacAlgorithm()", "full_signature": "public String getMacAlgorithm()", "class_method_signature": "OAuth2TokenPersistence.getMacAlgorithm()", "testcase": false, "constructor": false}, {"identifier": "getMacExt", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMacExt()", "full_signature": "public String getMacExt()", "class_method_signature": "OAuth2TokenPersistence.getMacExt()", "testcase": false, "constructor": false}, {"identifier": "getMacSecret", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getMacSecret()", "full_signature": "public byte[] getMacSecret()", "class_method_signature": "OAuth2TokenPersistence.getMacSecret()", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getProperties()", "full_signature": "public Map<String, String> getProperties()", "class_method_signature": "OAuth2TokenPersistence.getProperties()", "testcase": false, "constructor": false}, {"identifier": "getScope", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getScope()", "full_signature": "public String getScope()", "class_method_signature": "OAuth2TokenPersistence.getScope()", "testcase": false, "constructor": false}, {"identifier": "getSecret", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getSecret()", "full_signature": "public byte[] getSecret()", "class_method_signature": "OAuth2TokenPersistence.getSecret()", "testcase": false, "constructor": false}, {"identifier": "getServiceName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getServiceName()", "full_signature": "public String getServiceName()", "class_method_signature": "OAuth2TokenPersistence.getServiceName()", "testcase": false, "constructor": false}, {"identifier": "getTokenType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTokenType()", "full_signature": "public String getTokenType()", "class_method_signature": "OAuth2TokenPersistence.getTokenType()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "Type", "signature": "Type getType()", "full_signature": "public Type getType()", "class_method_signature": "OAuth2TokenPersistence.getType()", "testcase": false, "constructor": false}, {"identifier": "getUser", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUser()", "full_signature": "public String getUser()", "class_method_signature": "OAuth2TokenPersistence.getUser()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "OAuth2TokenPersistence.hashCode()", "testcase": false, "constructor": false}, {"identifier": "setEncryptedMacSecret", "parameters": "(final byte[] encryptedSecret)", "modifiers": "public", "return": "void", "signature": "void setEncryptedMacSecret(final byte[] encryptedSecret)", "full_signature": "public void setEncryptedMacSecret(final byte[] encryptedSecret)", "class_method_signature": "OAuth2TokenPersistence.setEncryptedMacSecret(final byte[] encryptedSecret)", "testcase": false, "constructor": false}, {"identifier": "setEncryptedSecret", "parameters": "(final byte[] encryptedSecret)", "modifiers": "public", "return": "void", "signature": "void setEncryptedSecret(final byte[] encryptedSecret)", "full_signature": "public void setEncryptedSecret(final byte[] encryptedSecret)", "class_method_signature": "OAuth2TokenPersistence.setEncryptedSecret(final byte[] encryptedSecret)", "testcase": false, "constructor": false}, {"identifier": "setExpiresAt", "parameters": "(final long expiresAt)", "modifiers": "public", "return": "void", "signature": "void setExpiresAt(final long expiresAt)", "full_signature": "public void setExpiresAt(final long expiresAt)", "class_method_signature": "OAuth2TokenPersistence.setExpiresAt(final long expiresAt)", "testcase": false, "constructor": false}, {"identifier": "setGadgetUri", "parameters": "(final String gadgetUri)", "modifiers": "public", "return": "void", "signature": "void setGadgetUri(final String gadgetUri)", "full_signature": "public void setGadgetUri(final String gadgetUri)", "class_method_signature": "OAuth2TokenPersistence.setGadgetUri(final String gadgetUri)", "testcase": false, "constructor": false}, {"identifier": "setIssuedAt", "parameters": "(final long issuedAt)", "modifiers": "public", "return": "void", "signature": "void setIssuedAt(final long issuedAt)", "full_signature": "public void setIssuedAt(final long issuedAt)", "class_method_signature": "OAuth2TokenPersistence.setIssuedAt(final long issuedAt)", "testcase": false, "constructor": false}, {"identifier": "setMacAlgorithm", "parameters": "(final String algorithm)", "modifiers": "public", "return": "void", "signature": "void setMacAlgorithm(final String algorithm)", "full_signature": "public void setMacAlgorithm(final String algorithm)", "class_method_signature": "OAuth2TokenPersistence.setMacAlgorithm(final String algorithm)", "testcase": false, "constructor": false}, {"identifier": "setMacExt", "parameters": "(final String macExt)", "modifiers": "public", "return": "void", "signature": "void setMacExt(final String macExt)", "full_signature": "public void setMacExt(final String macExt)", "class_method_signature": "OAuth2TokenPersistence.setMacExt(final String macExt)", "testcase": false, "constructor": false}, {"identifier": "setMacSecret", "parameters": "(final byte[] secret)", "modifiers": "public", "return": "void", "signature": "void setMacSecret(final byte[] secret)", "full_signature": "public void setMacSecret(final byte[] secret)", "class_method_signature": "OAuth2TokenPersistence.setMacSecret(final byte[] secret)", "testcase": false, "constructor": false}, {"identifier": "setProperties", "parameters": "(final Map<String, String> properties)", "modifiers": "public", "return": "void", "signature": "void setProperties(final Map<String, String> properties)", "full_signature": "public void setProperties(final Map<String, String> properties)", "class_method_signature": "OAuth2TokenPersistence.setProperties(final Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "setScope", "parameters": "(final String scope)", "modifiers": "public", "return": "void", "signature": "void setScope(final String scope)", "full_signature": "public void setScope(final String scope)", "class_method_signature": "OAuth2TokenPersistence.setScope(final String scope)", "testcase": false, "constructor": false}, {"identifier": "setSecret", "parameters": "(final byte[] secret)", "modifiers": "public", "return": "void", "signature": "void setSecret(final byte[] secret)", "full_signature": "public void setSecret(final byte[] secret)", "class_method_signature": "OAuth2TokenPersistence.setSecret(final byte[] secret)", "testcase": false, "constructor": false}, {"identifier": "setServiceName", "parameters": "(final String serviceName)", "modifiers": "public", "return": "void", "signature": "void setServiceName(final String serviceName)", "full_signature": "public void setServiceName(final String serviceName)", "class_method_signature": "OAuth2TokenPersistence.setServiceName(final String serviceName)", "testcase": false, "constructor": false}, {"identifier": "setTokenType", "parameters": "(final String tokenType)", "modifiers": "public", "return": "void", "signature": "void setTokenType(final String tokenType)", "full_signature": "public void setTokenType(final String tokenType)", "class_method_signature": "OAuth2TokenPersistence.setTokenType(final String tokenType)", "testcase": false, "constructor": false}, {"identifier": "setType", "parameters": "(final Type type)", "modifiers": "public", "return": "void", "signature": "void setType(final Type type)", "full_signature": "public void setType(final Type type)", "class_method_signature": "OAuth2TokenPersistence.setType(final Type type)", "testcase": false, "constructor": false}, {"identifier": "setUser", "parameters": "(final String user)", "modifiers": "public", "return": "void", "signature": "void setUser(final String user)", "full_signature": "public void setUser(final String user)", "class_method_signature": "OAuth2TokenPersistence.setUser(final String user)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "OAuth2TokenPersistence.toString()", "testcase": false, "constructor": false}], "file": "java/gadgets/src/main/java/org/apache/shindig/gadgets/oauth2/persistence/OAuth2TokenPersistence.java"}, "focal_method": {"identifier": "getGadgetUri", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getGadgetUri() {\n    return this.gadgetUri;\n  }", "signature": "String getGadgetUri()", "full_signature": "public String getGadgetUri()", "class_method_signature": "OAuth2TokenPersistence.getGadgetUri()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 206633, "url": "https://github.com/apache/shindig", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 65, "size": 18767, "license": "licensed"}}