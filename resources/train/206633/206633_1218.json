{"test_class": {"identifier": "AppDataHandlerTest", "superclass": "extends EasyMockTestCase", "interfaces": "", "fields": [{"original_string": "private BeanJsonConverter converter;", "modifier": "private", "type": "BeanJsonConverter", "declarator": "converter", "var_name": "converter"}, {"original_string": "private AppDataService appDataService;", "modifier": "private", "type": "AppDataService", "declarator": "appDataService", "var_name": "appDataService"}, {"original_string": "private FakeGadgetToken token;", "modifier": "private", "type": "FakeGadgetToken", "declarator": "token", "var_name": "token"}, {"original_string": "protected HandlerRegistry registry;", "modifier": "protected", "type": "HandlerRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "private static final Set<UserId> JOHN_DOE = Collections.unmodifiableSet(\n      ImmutableSet.of(new UserId(UserId.Type.userId, \"john.doe\")));", "modifier": "private static final", "type": "Set<UserId>", "declarator": "JOHN_DOE = Collections.unmodifiableSet(\n      ImmutableSet.of(new UserId(UserId.Type.userId, \"john.doe\")))", "var_name": "JOHN_DOE"}], "file": "java/social-api/src/test/java/org/apache/shindig/social/opensocial/service/AppDataHandlerTest.java"}, "test_case": {"identifier": "testHandleGetWithoutFields", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testHandleGetWithoutFields() throws Exception {\n    String path = \"/appdata/john.doe/@friends/appId\";\n    RestHandler operation = registry.getRestHandler(path, \"GET\");\n\n    Map<String, String[]> params = Maps.newHashMap();\n    params.put(\"fields\", new String[]{\"pandas\"});\n\n    DataCollection data = new DataCollection(null);\n    org.easymock.EasyMock.expect(appDataService.getPersonData(eq(JOHN_DOE),\n        eq(new GroupId(GroupId.Type.friends, null)),\n        eq(\"appId\"), eq(ImmutableSet.of(\"pandas\")), eq(token)))\n        .andReturn(Futures.immediateFuture(data));\n\n    replay();\n    assertEquals(data, operation.execute(params, null, token, converter).get());\n    verify();\n  }", "signature": "void testHandleGetWithoutFields()", "full_signature": "@Test public void testHandleGetWithoutFields()", "class_method_signature": "AppDataHandlerTest.testHandleGetWithoutFields()", "testcase": true, "constructor": false, "invocations": ["getRestHandler", "newHashMap", "put", "andReturn", "expect", "getPersonData", "eq", "eq", "eq", "eq", "of", "eq", "immediateFuture", "replay", "assertEquals", "get", "execute", "verify"]}, "focal_class": {"identifier": "AppDataHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final AppDataService service;", "modifier": "private final", "type": "AppDataService", "declarator": "service", "var_name": "service"}], "methods": [{"identifier": "AppDataHandler", "parameters": "(AppDataService service)", "modifiers": "@Inject public", "return": "", "signature": " AppDataHandler(AppDataService service)", "full_signature": "@Inject public  AppDataHandler(AppDataService service)", "class_method_signature": "AppDataHandler.AppDataHandler(AppDataService service)", "testcase": false, "constructor": true}, {"identifier": "delete", "parameters": "(SocialRequestItem request)", "modifiers": "@Operation(httpMethods = \"DELETE\") public", "return": "Future<?>", "signature": "Future<?> delete(SocialRequestItem request)", "full_signature": "@Operation(httpMethods = \"DELETE\") public Future<?> delete(SocialRequestItem request)", "class_method_signature": "AppDataHandler.delete(SocialRequestItem request)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(SocialRequestItem request)", "modifiers": "@Operation(httpMethods = \"PUT\", bodyParam = \"data\") public", "return": "Future<?>", "signature": "Future<?> update(SocialRequestItem request)", "full_signature": "@Operation(httpMethods = \"PUT\", bodyParam = \"data\") public Future<?> update(SocialRequestItem request)", "class_method_signature": "AppDataHandler.update(SocialRequestItem request)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(SocialRequestItem request)", "modifiers": "@Operation(httpMethods = \"POST\", bodyParam = \"data\") public", "return": "Future<?>", "signature": "Future<?> create(SocialRequestItem request)", "full_signature": "@Operation(httpMethods = \"POST\", bodyParam = \"data\") public Future<?> create(SocialRequestItem request)", "class_method_signature": "AppDataHandler.create(SocialRequestItem request)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(SocialRequestItem request)", "modifiers": "@Operation(httpMethods = \"GET\") public", "return": "Future<?>", "signature": "Future<?> get(SocialRequestItem request)", "full_signature": "@Operation(httpMethods = \"GET\") public Future<?> get(SocialRequestItem request)", "class_method_signature": "AppDataHandler.get(SocialRequestItem request)", "testcase": false, "constructor": false}, {"identifier": "isValidKey", "parameters": "(String key)", "modifiers": "public static", "return": "boolean", "signature": "boolean isValidKey(String key)", "full_signature": "public static boolean isValidKey(String key)", "class_method_signature": "AppDataHandler.isValidKey(String key)", "testcase": false, "constructor": false}], "file": "java/social-api/src/main/java/org/apache/shindig/social/opensocial/service/AppDataHandler.java"}, "focal_method": {"identifier": "get", "parameters": "(SocialRequestItem request)", "modifiers": "@Operation(httpMethods = \"GET\") public", "return": "Future<?>", "body": "@Operation(httpMethods = \"GET\")\n  public Future<?> get(SocialRequestItem request) throws ProtocolException {\n    Set<UserId> userIds = request.getUsers();\n\n    // Preconditions\n    HandlerPreconditions.requireNotEmpty(userIds, \"No userId specified\");\n\n    return service.getPersonData(userIds, request.getGroup(),\n        request.getAppId(), request.getFields(), request.getToken());\n  }", "signature": "Future<?> get(SocialRequestItem request)", "full_signature": "@Operation(httpMethods = \"GET\") public Future<?> get(SocialRequestItem request)", "class_method_signature": "AppDataHandler.get(SocialRequestItem request)", "testcase": false, "constructor": false, "invocations": ["getUsers", "requireNotEmpty", "getPersonData", "getGroup", "getAppId", "getFields", "getToken"]}, "repository": {"repo_id": 206633, "url": "https://github.com/apache/shindig", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 65, "size": 18767, "license": "licensed"}}