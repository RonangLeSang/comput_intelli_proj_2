{"test_class": {"identifier": "CajaCssSanitizerTest", "superclass": "extends EasyMockTestCase", "interfaces": "", "fields": [{"original_string": "private CajaCssParser parser;", "modifier": "private", "type": "CajaCssParser", "declarator": "parser", "var_name": "parser"}, {"original_string": "private CajaCssSanitizer sanitizer;", "modifier": "private", "type": "CajaCssSanitizer", "declarator": "sanitizer", "var_name": "sanitizer"}, {"original_string": "private final Uri DUMMY = Uri.parse(\"http://www.example.org/base\");", "modifier": "private final", "type": "Uri", "declarator": "DUMMY = Uri.parse(\"http://www.example.org/base\")", "var_name": "DUMMY"}, {"original_string": "private SanitizingProxyUriManager importRewriter;", "modifier": "private", "type": "SanitizingProxyUriManager", "declarator": "importRewriter", "var_name": "importRewriter"}, {"original_string": "private SanitizingProxyUriManager imageRewriter;", "modifier": "private", "type": "SanitizingProxyUriManager", "declarator": "imageRewriter", "var_name": "imageRewriter"}, {"original_string": "private GadgetContext gadgetContext;", "modifier": "private", "type": "GadgetContext", "declarator": "gadgetContext", "var_name": "gadgetContext"}, {"original_string": "public static final String MOCK_CONTAINER = \"mockContainer\";", "modifier": "public static final", "type": "String", "declarator": "MOCK_CONTAINER = \"mockContainer\"", "var_name": "MOCK_CONTAINER"}, {"original_string": "private static final ImmutableMap<String, Object> DEFAULT_CONTAINER_CONFIG = ImmutableMap\n      .<String, Object>builder()\n      .put(ContainerConfig.CONTAINER_KEY, ImmutableList.of(\"default\"))\n      .put(DefaultProxyUriManager.PROXY_HOST_PARAM, \"www.test.com\")\n      .put(DefaultProxyUriManager.PROXY_PATH_PARAM, \"/dir/proxy\")\n      .build();", "modifier": "private static final", "type": "ImmutableMap<String, Object>", "declarator": "DEFAULT_CONTAINER_CONFIG = ImmutableMap\n      .<String, Object>builder()\n      .put(ContainerConfig.CONTAINER_KEY, ImmutableList.of(\"default\"))\n      .put(DefaultProxyUriManager.PROXY_HOST_PARAM, \"www.test.com\")\n      .put(DefaultProxyUriManager.PROXY_PATH_PARAM, \"/dir/proxy\")\n      .build()", "var_name": "DEFAULT_CONTAINER_CONFIG"}, {"original_string": "private static final ImmutableMap<String, Object> MOCK_CONTAINER_CONFIG = ImmutableMap\n      .<String, Object>builder()\n      .put(ContainerConfig.CONTAINER_KEY, ImmutableList.of(MOCK_CONTAINER))\n      .put(DefaultProxyUriManager.PROXY_HOST_PARAM, \"www.mock.com\")\n      .build();", "modifier": "private static final", "type": "ImmutableMap<String, Object>", "declarator": "MOCK_CONTAINER_CONFIG = ImmutableMap\n      .<String, Object>builder()\n      .put(ContainerConfig.CONTAINER_KEY, ImmutableList.of(MOCK_CONTAINER))\n      .put(DefaultProxyUriManager.PROXY_HOST_PARAM, \"www.mock.com\")\n      .build()", "var_name": "MOCK_CONTAINER_CONFIG"}], "file": "java/gadgets/src/test/java/org/apache/shindig/gadgets/parse/caja/CajaCssSanitizerTest.java"}, "test_case": {"identifier": "testSanitizeUnsafeProperties", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testSanitizeUnsafeProperties() throws Exception {\n    String css = \".xyz { behavior: url('xyz.htc'); -moz-binding:url(\\\"http://ha.ckers.org/xssmoz.xml#xss\\\") }\";\n    CssTree.StyleSheet styleSheet = parser.parseDom(css);\n    sanitizer.sanitize(styleSheet, DUMMY, gadgetContext, importRewriter, imageRewriter);\n    assertStyleEquals(\".xyz {}\", styleSheet);\n  }", "signature": "void testSanitizeUnsafeProperties()", "full_signature": "@Test public void testSanitizeUnsafeProperties()", "class_method_signature": "CajaCssSanitizerTest.testSanitizeUnsafeProperties()", "testcase": true, "constructor": false, "invocations": ["parseDom", "sanitize", "assertStyleEquals"]}, "focal_class": {"identifier": "CajaCssSanitizer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String classname = CajaCssSanitizer.class.getName();", "modifier": "private static final", "type": "String", "declarator": "classname = CajaCssSanitizer.class.getName()", "var_name": "classname"}, {"original_string": "private static final Logger LOG = Logger.getLogger(classname,MessageKeys.MESSAGES);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(classname,MessageKeys.MESSAGES)", "var_name": "LOG"}, {"original_string": "private static final Set<String> ALLOWED_URI_SCHEMES = ImmutableSet.of(\"http\", \"https\");", "modifier": "private static final", "type": "Set<String>", "declarator": "ALLOWED_URI_SCHEMES = ImmutableSet.of(\"http\", \"https\")", "var_name": "ALLOWED_URI_SCHEMES"}, {"original_string": "private final CajaCssParser parser;", "modifier": "private final", "type": "CajaCssParser", "declarator": "parser", "var_name": "parser"}, {"original_string": "private final CssSchema schema;", "modifier": "private final", "type": "CssSchema", "declarator": "schema", "var_name": "schema"}], "methods": [{"identifier": "CajaCssSanitizer", "parameters": "(CajaCssParser parser)", "modifiers": "@Inject public", "return": "", "signature": " CajaCssSanitizer(CajaCssParser parser)", "full_signature": "@Inject public  CajaCssSanitizer(CajaCssParser parser)", "class_method_signature": "CajaCssSanitizer.CajaCssSanitizer(CajaCssParser parser)", "testcase": false, "constructor": true}, {"identifier": "sanitize", "parameters": "(String content, Uri linkContext, GadgetContext gadgetContext,\n                         ProxyUriManager importRewriter, ProxyUriManager imageRewriter)", "modifiers": "public", "return": "String", "signature": "String sanitize(String content, Uri linkContext, GadgetContext gadgetContext,\n                         ProxyUriManager importRewriter, ProxyUriManager imageRewriter)", "full_signature": "public String sanitize(String content, Uri linkContext, GadgetContext gadgetContext,\n                         ProxyUriManager importRewriter, ProxyUriManager imageRewriter)", "class_method_signature": "CajaCssSanitizer.sanitize(String content, Uri linkContext, GadgetContext gadgetContext,\n                         ProxyUriManager importRewriter, ProxyUriManager imageRewriter)", "testcase": false, "constructor": false}, {"identifier": "sanitize", "parameters": "(Element styleElem, Uri linkContext, GadgetContext gadgetContext,\n                       ProxyUriManager importRewriter, ProxyUriManager imageRewriter)", "modifiers": "public", "return": "void", "signature": "void sanitize(Element styleElem, Uri linkContext, GadgetContext gadgetContext,\n                       ProxyUriManager importRewriter, ProxyUriManager imageRewriter)", "full_signature": "public void sanitize(Element styleElem, Uri linkContext, GadgetContext gadgetContext,\n                       ProxyUriManager importRewriter, ProxyUriManager imageRewriter)", "class_method_signature": "CajaCssSanitizer.sanitize(Element styleElem, Uri linkContext, GadgetContext gadgetContext,\n                       ProxyUriManager importRewriter, ProxyUriManager imageRewriter)", "testcase": false, "constructor": false}, {"identifier": "sanitize", "parameters": "(CssTree css, final Uri linkContext, final GadgetContext gadgetContext,\n                       final ProxyUriManager importRewriter, final ProxyUriManager imageRewriter)", "modifiers": "public", "return": "void", "signature": "void sanitize(CssTree css, final Uri linkContext, final GadgetContext gadgetContext,\n                       final ProxyUriManager importRewriter, final ProxyUriManager imageRewriter)", "full_signature": "public void sanitize(CssTree css, final Uri linkContext, final GadgetContext gadgetContext,\n                       final ProxyUriManager importRewriter, final ProxyUriManager imageRewriter)", "class_method_signature": "CajaCssSanitizer.sanitize(CssTree css, final Uri linkContext, final GadgetContext gadgetContext,\n                       final ProxyUriManager importRewriter, final ProxyUriManager imageRewriter)", "testcase": false, "constructor": false}, {"identifier": "rewriteUri", "parameters": "(ProxyUriManager proxyUriManager, String input,\n                                   final Uri context, GadgetContext gadgetContext)", "modifiers": "private static", "return": "String", "signature": "String rewriteUri(ProxyUriManager proxyUriManager, String input,\n                                   final Uri context, GadgetContext gadgetContext)", "full_signature": "private static String rewriteUri(ProxyUriManager proxyUriManager, String input,\n                                   final Uri context, GadgetContext gadgetContext)", "class_method_signature": "CajaCssSanitizer.rewriteUri(ProxyUriManager proxyUriManager, String input,\n                                   final Uri context, GadgetContext gadgetContext)", "testcase": false, "constructor": false}, {"identifier": "isValidUri", "parameters": "(String uri)", "modifiers": "private", "return": "boolean", "signature": "boolean isValidUri(String uri)", "full_signature": "private boolean isValidUri(String uri)", "class_method_signature": "CajaCssSanitizer.isValidUri(String uri)", "testcase": false, "constructor": false}, {"identifier": "clean", "parameters": "(AncestorChain<?> chain)", "modifiers": "private static", "return": "void", "signature": "void clean(AncestorChain<?> chain)", "full_signature": "private static void clean(AncestorChain<?> chain)", "class_method_signature": "CajaCssSanitizer.clean(AncestorChain<?> chain)", "testcase": false, "constructor": false}], "file": "java/gadgets/src/main/java/org/apache/shindig/gadgets/parse/caja/CajaCssSanitizer.java"}, "focal_method": {"identifier": "sanitize", "parameters": "(String content, Uri linkContext, GadgetContext gadgetContext,\n                         ProxyUriManager importRewriter, ProxyUriManager imageRewriter)", "modifiers": "public", "return": "String", "body": "public String sanitize(String content, Uri linkContext, GadgetContext gadgetContext,\n                         ProxyUriManager importRewriter, ProxyUriManager imageRewriter) {\n    try {\n      CssTree.StyleSheet stylesheet = parser.parseDom(content, linkContext);\n      sanitize(stylesheet, linkContext, gadgetContext, importRewriter, imageRewriter);\n      // Write the rewritten CSS back into the element\n      return parser.serialize(stylesheet);\n    } catch (GadgetException ge) {\n      // Failed to parse stylesheet so log and continue\n      if (LOG.isLoggable(Level.INFO)) {\n        LOG.logp(Level.INFO, classname, \"sanitize\", MessageKeys.FAILED_TO_PARSE);\n        LOG.log(Level.INFO, ge.getMessage(), ge);\n      }\n      return \"\";\n    }\n  }", "signature": "String sanitize(String content, Uri linkContext, GadgetContext gadgetContext,\n                         ProxyUriManager importRewriter, ProxyUriManager imageRewriter)", "full_signature": "public String sanitize(String content, Uri linkContext, GadgetContext gadgetContext,\n                         ProxyUriManager importRewriter, ProxyUriManager imageRewriter)", "class_method_signature": "CajaCssSanitizer.sanitize(String content, Uri linkContext, GadgetContext gadgetContext,\n                         ProxyUriManager importRewriter, ProxyUriManager imageRewriter)", "testcase": false, "constructor": false, "invocations": ["parseDom", "sanitize", "serialize", "isLoggable", "logp", "log", "getMessage"]}, "repository": {"repo_id": 206633, "url": "https://github.com/apache/shindig", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 65, "size": 18767, "license": "licensed"}}