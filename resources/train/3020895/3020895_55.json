{"test_class": {"identifier": "LabelsTest", "superclass": "", "interfaces": "", "fields": [], "file": "marytts-signalproc/src/test/java/marytts/signalproc/analysis/LabelsTest.java"}, "test_case": {"identifier": "lineArrayConstructor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void lineArrayConstructor() throws Exception {\n\t\tString[] lines = IOUtils.toString(getClass().getResourceAsStream(\"pop001.lab\"), \"ASCII\").split(\"\\n\");\n\t\tLabels l = new Labels(lines);\n\t\tassertEquals(10, l.items.length);\n\t}", "signature": "void lineArrayConstructor()", "full_signature": "@Test public void lineArrayConstructor()", "class_method_signature": "LabelsTest.lineArrayConstructor()", "testcase": true, "constructor": false, "invocations": ["split", "toString", "getResourceAsStream", "getClass", "assertEquals"]}, "focal_class": {"identifier": "Labels", "superclass": "extends AlignmentData", "interfaces": "", "fields": [{"original_string": "public Label[] items;", "modifier": "public", "type": "Label[]", "declarator": "items", "var_name": "items"}], "methods": [{"identifier": "Labels", "parameters": "(Label[] items)", "modifiers": "public", "return": "", "signature": " Labels(Label[] items)", "full_signature": "public  Labels(Label[] items)", "class_method_signature": "Labels.Labels(Label[] items)", "testcase": false, "constructor": true}, {"identifier": "Labels", "parameters": "(String[] lines)", "modifiers": "public", "return": "", "signature": " Labels(String[] lines)", "full_signature": "public  Labels(String[] lines)", "class_method_signature": "Labels.Labels(String[] lines)", "testcase": false, "constructor": true}, {"identifier": "Labels", "parameters": "(String[] lines, int minItemsPerLine)", "modifiers": "public", "return": "", "signature": " Labels(String[] lines, int minItemsPerLine)", "full_signature": "public  Labels(String[] lines, int minItemsPerLine)", "class_method_signature": "Labels.Labels(String[] lines, int minItemsPerLine)", "testcase": false, "constructor": true}, {"identifier": "Labels", "parameters": "(Labels e)", "modifiers": "public", "return": "", "signature": " Labels(Labels e)", "full_signature": "public  Labels(Labels e)", "class_method_signature": "Labels.Labels(Labels e)", "testcase": false, "constructor": true}, {"identifier": "Labels", "parameters": "(InputStream in)", "modifiers": "public", "return": "", "signature": " Labels(InputStream in)", "full_signature": "public  Labels(InputStream in)", "class_method_signature": "Labels.Labels(InputStream in)", "testcase": false, "constructor": true}, {"identifier": "Labels", "parameters": "(String labelFile)", "modifiers": "public", "return": "", "signature": " Labels(String labelFile)", "full_signature": "public  Labels(String labelFile)", "class_method_signature": "Labels.Labels(String labelFile)", "testcase": false, "constructor": true}, {"identifier": "Labels", "parameters": "(Document acoustparams)", "modifiers": "public", "return": "", "signature": " Labels(Document acoustparams)", "full_signature": "public  Labels(Document acoustparams)", "class_method_signature": "Labels.Labels(Document acoustparams)", "testcase": false, "constructor": true}, {"identifier": "getLabelSymbols", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getLabelSymbols()", "full_signature": "public String[] getLabelSymbols()", "class_method_signature": "Labels.getLabelSymbols()", "testcase": false, "constructor": false}, {"identifier": "initFromStream", "parameters": "(InputStream in)", "modifiers": "private", "return": "void", "signature": "void initFromStream(InputStream in)", "full_signature": "private void initFromStream(InputStream in)", "class_method_signature": "Labels.initFromStream(InputStream in)", "testcase": false, "constructor": false}, {"identifier": "initFromLines", "parameters": "(String[] lines, int minimumItemsInOneLine)", "modifiers": "private", "return": "void", "signature": "void initFromLines(String[] lines, int minimumItemsInOneLine)", "full_signature": "private void initFromLines(String[] lines, int minimumItemsInOneLine)", "class_method_signature": "Labels.initFromLines(String[] lines, int minimumItemsInOneLine)", "testcase": false, "constructor": false}, {"identifier": "initFromAcoustparams", "parameters": "(Document acoustparams)", "modifiers": "private", "return": "void", "signature": "void initFromAcoustparams(Document acoustparams)", "full_signature": "private void initFromAcoustparams(Document acoustparams)", "class_method_signature": "Labels.initFromAcoustparams(Document acoustparams)", "testcase": false, "constructor": false}, {"identifier": "print", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void print()", "full_signature": "public void print()", "class_method_signature": "Labels.print()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Labels.toString()", "testcase": false, "constructor": false}, {"identifier": "getLabelIndexAtTime", "parameters": "(double time)", "modifiers": "public", "return": "int", "signature": "int getLabelIndexAtTime(double time)", "full_signature": "public int getLabelIndexAtTime(double time)", "class_method_signature": "Labels.getLabelIndexAtTime(double time)", "testcase": false, "constructor": false}, {"identifier": "deepCopy", "parameters": "(Label[] in)", "modifiers": "private", "return": "Label[]", "signature": "Label[] deepCopy(Label[] in)", "full_signature": "private Label[] deepCopy(Label[] in)", "class_method_signature": "Labels.deepCopy(Label[] in)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "Labels.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Labels.hashCode()", "testcase": false, "constructor": false}], "file": "marytts-signalproc/src/main/java/marytts/signalproc/analysis/Labels.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n\tpublic String toString() {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tsb.append(\"[\");\n\t\tfor (int i = 0; i < items.length; i++) {\n\t\t\tsb.append(\"(\").append(items[i]).append(\") \");\n\t\t}\n\t\tsb.append(\"]\");\n\t\treturn sb.toString();\n\t}", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Labels.toString()", "testcase": false, "constructor": false, "invocations": ["append", "append", "append", "append", "append", "toString"]}, "repository": {"repo_id": 3020895, "url": "https://github.com/marytts/marytts", "language": "Java", "is_fork": false, "fork_count": 603, "stargazer_count": 1478, "size": 149475, "license": "licensed"}}