{"test_class": {"identifier": "DeviceProfileTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DeviceProfile profile;", "modifier": "private", "type": "DeviceProfile", "declarator": "profile", "var_name": "profile"}], "file": "device.logicsniffer/src/test/java/org/sump/device/logicsniffer/profile/DeviceProfileTest.java"}, "test_case": {"identifier": "testGetSampleRatesFail", "parameters": "()", "modifiers": "@Test( expected = IllegalArgumentException.class ) public", "return": "void", "body": "@Test( expected = IllegalArgumentException.class )\n  public void testGetSampleRatesFail()\n  {\n    mutateProperty( DeviceProfile.DEVICE_SAMPLERATES, \"test\" );\n    this.profile.getSampleRates();\n  }", "signature": "void testGetSampleRatesFail()", "full_signature": "@Test( expected = IllegalArgumentException.class ) public void testGetSampleRatesFail()", "class_method_signature": "DeviceProfileTest.testGetSampleRatesFail()", "testcase": true, "constructor": false, "invocations": ["mutateProperty", "getSampleRates"]}, "focal_class": {"identifier": "DeviceProfile", "superclass": "", "interfaces": "implements Cloneable, Comparable<DeviceProfile>", "fields": [{"original_string": "public static final String DEVICE_TYPE = \"device.type\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_TYPE = \"device.type\"", "var_name": "DEVICE_TYPE"}, {"original_string": "public static final String DEVICE_DESCRIPTION = \"device.description\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_DESCRIPTION = \"device.description\"", "var_name": "DEVICE_DESCRIPTION"}, {"original_string": "public static final String DEVICE_INTERFACE = \"device.interface\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_INTERFACE = \"device.interface\"", "var_name": "DEVICE_INTERFACE"}, {"original_string": "public static final String DEVICE_CLOCKSPEED = \"device.clockspeed\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_CLOCKSPEED = \"device.clockspeed\"", "var_name": "DEVICE_CLOCKSPEED"}, {"original_string": "public static final String DEVICE_DIVIDER_CLOCKSPEED = \"device.dividerClockspeed\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_DIVIDER_CLOCKSPEED = \"device.dividerClockspeed\"", "var_name": "DEVICE_DIVIDER_CLOCKSPEED"}, {"original_string": "public static final String DEVICE_SUPPORTS_DDR = \"device.supports_ddr\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_SUPPORTS_DDR = \"device.supports_ddr\"", "var_name": "DEVICE_SUPPORTS_DDR"}, {"original_string": "public static final String DEVICE_SAMPLERATES = \"device.samplerates\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_SAMPLERATES = \"device.samplerates\"", "var_name": "DEVICE_SAMPLERATES"}, {"original_string": "public static final String DEVICE_CAPTURECLOCK = \"device.captureclock\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_CAPTURECLOCK = \"device.captureclock\"", "var_name": "DEVICE_CAPTURECLOCK"}, {"original_string": "public static final String DEVICE_CAPTURESIZES = \"device.capturesizes\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_CAPTURESIZES = \"device.capturesizes\"", "var_name": "DEVICE_CAPTURESIZES"}, {"original_string": "public static final String DEVICE_FEATURE_NOISEFILTER = \"device.feature.noisefilter\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_FEATURE_NOISEFILTER = \"device.feature.noisefilter\"", "var_name": "DEVICE_FEATURE_NOISEFILTER"}, {"original_string": "public static final String DEVICE_FEATURE_RLE = \"device.feature.rle\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_FEATURE_RLE = \"device.feature.rle\"", "var_name": "DEVICE_FEATURE_RLE"}, {"original_string": "public static final String DEVICE_FEATURE_TEST_MODE = \"device.feature.testmode\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_FEATURE_TEST_MODE = \"device.feature.testmode\"", "var_name": "DEVICE_FEATURE_TEST_MODE"}, {"original_string": "public static final String DEVICE_FEATURE_TRIGGERS = \"device.feature.triggers\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_FEATURE_TRIGGERS = \"device.feature.triggers\"", "var_name": "DEVICE_FEATURE_TRIGGERS"}, {"original_string": "public static final String DEVICE_TRIGGER_STAGES = \"device.trigger.stages\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_TRIGGER_STAGES = \"device.trigger.stages\"", "var_name": "DEVICE_TRIGGER_STAGES"}, {"original_string": "public static final String DEVICE_TRIGGER_COMPLEX = \"device.trigger.complex\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_TRIGGER_COMPLEX = \"device.trigger.complex\"", "var_name": "DEVICE_TRIGGER_COMPLEX"}, {"original_string": "public static final String DEVICE_CHANNEL_COUNT = \"device.channel.count\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_CHANNEL_COUNT = \"device.channel.count\"", "var_name": "DEVICE_CHANNEL_COUNT"}, {"original_string": "public static final String DEVICE_CHANNEL_GROUPS = \"device.channel.groups\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_CHANNEL_GROUPS = \"device.channel.groups\"", "var_name": "DEVICE_CHANNEL_GROUPS"}, {"original_string": "public static final String DEVICE_CAPTURESIZE_BOUND = \"device.capturesize.bound\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_CAPTURESIZE_BOUND = \"device.capturesize.bound\"", "var_name": "DEVICE_CAPTURESIZE_BOUND"}, {"original_string": "public static final String DEVICE_CHANNEL_NUMBERING_SCHEMES = \"device.channel.numberingschemes\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_CHANNEL_NUMBERING_SCHEMES = \"device.channel.numberingschemes\"", "var_name": "DEVICE_CHANNEL_NUMBERING_SCHEMES"}, {"original_string": "public static final String DEVICE_OPEN_PORT_DELAY = \"device.open.portdelay\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_OPEN_PORT_DELAY = \"device.open.portdelay\"", "var_name": "DEVICE_OPEN_PORT_DELAY"}, {"original_string": "public static final String DEVICE_RECEIVE_TIMEOUT = \"device.receive.timeout\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_RECEIVE_TIMEOUT = \"device.receive.timeout\"", "var_name": "DEVICE_RECEIVE_TIMEOUT"}, {"original_string": "public static final String DEVICE_METADATA_KEYS = \"device.metadata.keys\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_METADATA_KEYS = \"device.metadata.keys\"", "var_name": "DEVICE_METADATA_KEYS"}, {"original_string": "public static final String DEVICE_SAMPLE_REVERSE_ORDER = \"device.samples.reverseOrder\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_SAMPLE_REVERSE_ORDER = \"device.samples.reverseOrder\"", "var_name": "DEVICE_SAMPLE_REVERSE_ORDER"}, {"original_string": "public static final String DEVICE_OPEN_PORT_DTR = \"device.open.portdtr\";", "modifier": "public static final", "type": "String", "declarator": "DEVICE_OPEN_PORT_DTR = \"device.open.portdtr\"", "var_name": "DEVICE_OPEN_PORT_DTR"}, {"original_string": "private static final String FELIX_SERVICE_PID = \"service.pid\";", "modifier": "private static final", "type": "String", "declarator": "FELIX_SERVICE_PID = \"service.pid\"", "var_name": "FELIX_SERVICE_PID"}, {"original_string": "private static final String FELIX_SERVICE_FACTORY_PID = \"service.factoryPid\";", "modifier": "private static final", "type": "String", "declarator": "FELIX_SERVICE_FACTORY_PID = \"service.factoryPid\"", "var_name": "FELIX_SERVICE_FACTORY_PID"}, {"original_string": "private static final List<String> KNOWN_KEYS = Arrays.asList( new String[] { DEVICE_TYPE, DEVICE_DESCRIPTION,\n      DEVICE_INTERFACE, DEVICE_CLOCKSPEED, DEVICE_SUPPORTS_DDR, DEVICE_SAMPLERATES, DEVICE_CAPTURECLOCK,\n      DEVICE_CAPTURESIZES, DEVICE_FEATURE_NOISEFILTER, DEVICE_FEATURE_RLE, DEVICE_FEATURE_TEST_MODE,\n      DEVICE_FEATURE_TRIGGERS, DEVICE_TRIGGER_STAGES, DEVICE_TRIGGER_COMPLEX, DEVICE_CHANNEL_COUNT,\n      DEVICE_CHANNEL_GROUPS, DEVICE_CAPTURESIZE_BOUND, DEVICE_CHANNEL_NUMBERING_SCHEMES, DEVICE_OPEN_PORT_DELAY,\n      DEVICE_METADATA_KEYS, DEVICE_SAMPLE_REVERSE_ORDER, DEVICE_OPEN_PORT_DTR, DEVICE_RECEIVE_TIMEOUT,\n      DEVICE_DIVIDER_CLOCKSPEED } );", "modifier": "private static final", "type": "List<String>", "declarator": "KNOWN_KEYS = Arrays.asList( new String[] { DEVICE_TYPE, DEVICE_DESCRIPTION,\n      DEVICE_INTERFACE, DEVICE_CLOCKSPEED, DEVICE_SUPPORTS_DDR, DEVICE_SAMPLERATES, DEVICE_CAPTURECLOCK,\n      DEVICE_CAPTURESIZES, DEVICE_FEATURE_NOISEFILTER, DEVICE_FEATURE_RLE, DEVICE_FEATURE_TEST_MODE,\n      DEVICE_FEATURE_TRIGGERS, DEVICE_TRIGGER_STAGES, DEVICE_TRIGGER_COMPLEX, DEVICE_CHANNEL_COUNT,\n      DEVICE_CHANNEL_GROUPS, DEVICE_CAPTURESIZE_BOUND, DEVICE_CHANNEL_NUMBERING_SCHEMES, DEVICE_OPEN_PORT_DELAY,\n      DEVICE_METADATA_KEYS, DEVICE_SAMPLE_REVERSE_ORDER, DEVICE_OPEN_PORT_DTR, DEVICE_RECEIVE_TIMEOUT,\n      DEVICE_DIVIDER_CLOCKSPEED } )", "var_name": "KNOWN_KEYS"}, {"original_string": "private static final List<String> IGNORED_KEYS = Arrays.asList( new String[] { FELIX_SERVICE_PID,\n      FELIX_SERVICE_FACTORY_PID } );", "modifier": "private static final", "type": "List<String>", "declarator": "IGNORED_KEYS = Arrays.asList( new String[] { FELIX_SERVICE_PID,\n      FELIX_SERVICE_FACTORY_PID } )", "var_name": "IGNORED_KEYS"}, {"original_string": "private static final Logger LOG = Logger.getLogger( DeviceProfile.class.getName() );", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger( DeviceProfile.class.getName() )", "var_name": "LOG"}, {"original_string": "private final ConcurrentMap<String, String> properties;", "modifier": "private final", "type": "ConcurrentMap<String, String>", "declarator": "properties", "var_name": "properties"}], "methods": [{"identifier": "DeviceProfile", "parameters": "()", "modifiers": "public", "return": "", "signature": " DeviceProfile()", "full_signature": "public  DeviceProfile()", "class_method_signature": "DeviceProfile.DeviceProfile()", "testcase": false, "constructor": true}, {"identifier": "createFile", "parameters": "( final String aFilename )", "modifiers": "static final", "return": "File", "signature": "File createFile( final String aFilename )", "full_signature": "static final File createFile( final String aFilename )", "class_method_signature": "DeviceProfile.createFile( final String aFilename )", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "DeviceProfile", "signature": "DeviceProfile clone()", "full_signature": "@Override public DeviceProfile clone()", "class_method_signature": "DeviceProfile.clone()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "( DeviceProfile aProfile )", "modifiers": "@Override public", "return": "int", "signature": "int compareTo( DeviceProfile aProfile )", "full_signature": "@Override public int compareTo( DeviceProfile aProfile )", "class_method_signature": "DeviceProfile.compareTo( DeviceProfile aProfile )", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "( final Object aObject )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals( final Object aObject )", "full_signature": "@Override public boolean equals( final Object aObject )", "class_method_signature": "DeviceProfile.equals( final Object aObject )", "testcase": false, "constructor": false}, {"identifier": "getCaptureClock", "parameters": "()", "modifiers": "public", "return": "CaptureClockSource[]", "signature": "CaptureClockSource[] getCaptureClock()", "full_signature": "public CaptureClockSource[] getCaptureClock()", "class_method_signature": "DeviceProfile.getCaptureClock()", "testcase": false, "constructor": false}, {"identifier": "getCaptureSizes", "parameters": "()", "modifiers": "public", "return": "Integer[]", "signature": "Integer[] getCaptureSizes()", "full_signature": "public Integer[] getCaptureSizes()", "class_method_signature": "DeviceProfile.getCaptureSizes()", "testcase": false, "constructor": false}, {"identifier": "getChannelCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getChannelCount()", "full_signature": "public int getChannelCount()", "class_method_signature": "DeviceProfile.getChannelCount()", "testcase": false, "constructor": false}, {"identifier": "getChannelGroupCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getChannelGroupCount()", "full_signature": "public int getChannelGroupCount()", "class_method_signature": "DeviceProfile.getChannelGroupCount()", "testcase": false, "constructor": false}, {"identifier": "getChannelNumberingSchemes", "parameters": "()", "modifiers": "public", "return": "NumberingScheme[]", "signature": "NumberingScheme[] getChannelNumberingSchemes()", "full_signature": "public NumberingScheme[] getChannelNumberingSchemes()", "class_method_signature": "DeviceProfile.getChannelNumberingSchemes()", "testcase": false, "constructor": false}, {"identifier": "getClockspeed", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getClockspeed()", "full_signature": "public int getClockspeed()", "class_method_signature": "DeviceProfile.getClockspeed()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDescription()", "full_signature": "public String getDescription()", "class_method_signature": "DeviceProfile.getDescription()", "testcase": false, "constructor": false}, {"identifier": "getDeviceMetadataKeys", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getDeviceMetadataKeys()", "full_signature": "public String[] getDeviceMetadataKeys()", "class_method_signature": "DeviceProfile.getDeviceMetadataKeys()", "testcase": false, "constructor": false}, {"identifier": "getDividerClockspeed", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDividerClockspeed()", "full_signature": "public int getDividerClockspeed()", "class_method_signature": "DeviceProfile.getDividerClockspeed()", "testcase": false, "constructor": false}, {"identifier": "getInterface", "parameters": "()", "modifiers": "public", "return": "DeviceInterface", "signature": "DeviceInterface getInterface()", "full_signature": "public DeviceInterface getInterface()", "class_method_signature": "DeviceProfile.getInterface()", "testcase": false, "constructor": false}, {"identifier": "getMaximumCaptureSizeFor", "parameters": "( final int aChannelGroups )", "modifiers": "public", "return": "int", "signature": "int getMaximumCaptureSizeFor( final int aChannelGroups )", "full_signature": "public int getMaximumCaptureSizeFor( final int aChannelGroups )", "class_method_signature": "DeviceProfile.getMaximumCaptureSizeFor( final int aChannelGroups )", "testcase": false, "constructor": false}, {"identifier": "getOpenPortDelay", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getOpenPortDelay()", "full_signature": "public int getOpenPortDelay()", "class_method_signature": "DeviceProfile.getOpenPortDelay()", "testcase": false, "constructor": false}, {"identifier": "getReceiveTimeout", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getReceiveTimeout()", "full_signature": "public Integer getReceiveTimeout()", "class_method_signature": "DeviceProfile.getReceiveTimeout()", "testcase": false, "constructor": false}, {"identifier": "getSampleRates", "parameters": "()", "modifiers": "public", "return": "Integer[]", "signature": "Integer[] getSampleRates()", "full_signature": "public Integer[] getSampleRates()", "class_method_signature": "DeviceProfile.getSampleRates()", "testcase": false, "constructor": false}, {"identifier": "getTriggerStages", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTriggerStages()", "full_signature": "public int getTriggerStages()", "class_method_signature": "DeviceProfile.getTriggerStages()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getType()", "full_signature": "public String getType()", "class_method_signature": "DeviceProfile.getType()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DeviceProfile.hashCode()", "testcase": false, "constructor": false}, {"identifier": "isCaptureSizeBoundToEnabledChannels", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCaptureSizeBoundToEnabledChannels()", "full_signature": "public boolean isCaptureSizeBoundToEnabledChannels()", "class_method_signature": "DeviceProfile.isCaptureSizeBoundToEnabledChannels()", "testcase": false, "constructor": false}, {"identifier": "isComplexTriggersSupported", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isComplexTriggersSupported()", "full_signature": "public boolean isComplexTriggersSupported()", "class_method_signature": "DeviceProfile.isComplexTriggersSupported()", "testcase": false, "constructor": false}, {"identifier": "isDoubleDataRateSupported", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDoubleDataRateSupported()", "full_signature": "public boolean isDoubleDataRateSupported()", "class_method_signature": "DeviceProfile.isDoubleDataRateSupported()", "testcase": false, "constructor": false}, {"identifier": "isNoiseFilterSupported", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isNoiseFilterSupported()", "full_signature": "public boolean isNoiseFilterSupported()", "class_method_signature": "DeviceProfile.isNoiseFilterSupported()", "testcase": false, "constructor": false}, {"identifier": "isOpenPortDtr", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isOpenPortDtr()", "full_signature": "public boolean isOpenPortDtr()", "class_method_signature": "DeviceProfile.isOpenPortDtr()", "testcase": false, "constructor": false}, {"identifier": "isRleSupported", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRleSupported()", "full_signature": "public boolean isRleSupported()", "class_method_signature": "DeviceProfile.isRleSupported()", "testcase": false, "constructor": false}, {"identifier": "isSamplesInReverseOrder", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSamplesInReverseOrder()", "full_signature": "public boolean isSamplesInReverseOrder()", "class_method_signature": "DeviceProfile.isSamplesInReverseOrder()", "testcase": false, "constructor": false}, {"identifier": "isTestModeSupported", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTestModeSupported()", "full_signature": "public boolean isTestModeSupported()", "class_method_signature": "DeviceProfile.isTestModeSupported()", "testcase": false, "constructor": false}, {"identifier": "isTriggerSupported", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTriggerSupported()", "full_signature": "public boolean isTriggerSupported()", "class_method_signature": "DeviceProfile.isTriggerSupported()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DeviceProfile.toString()", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "final", "return": "Dictionary<String, String>", "signature": "Dictionary<String, String> getProperties()", "full_signature": "final Dictionary<String, String> getProperties()", "class_method_signature": "DeviceProfile.getProperties()", "testcase": false, "constructor": false}, {"identifier": "setProperties", "parameters": "( final Dictionary aProperties )", "modifiers": "@SuppressWarnings( \"rawtypes\" ) final", "return": "void", "signature": "void setProperties( final Dictionary aProperties )", "full_signature": "@SuppressWarnings( \"rawtypes\" ) final void setProperties( final Dictionary aProperties )", "class_method_signature": "DeviceProfile.setProperties( final Dictionary aProperties )", "testcase": false, "constructor": false}], "file": "device.logicsniffer/src/main/java/org/sump/device/logicsniffer/profile/DeviceProfile.java"}, "focal_method": {"identifier": "getSampleRates", "parameters": "()", "modifiers": "public", "return": "Integer[]", "body": "public Integer[] getSampleRates()\n  {\n    final String rawValue = this.properties.get( DEVICE_SAMPLERATES );\n    final String[] values = rawValue.split( \",\\\\s*\" );\n    final SortedSet<Integer> result = new TreeSet<Integer>(\n        NumberUtils.<Integer> createNumberComparator( false /* aSortAscending */) );\n    for ( String value : values )\n    {\n      result.add( Integer.valueOf( value.trim() ) );\n    }\n\n    return result.toArray( new Integer[result.size()] );\n  }", "signature": "Integer[] getSampleRates()", "full_signature": "public Integer[] getSampleRates()", "class_method_signature": "DeviceProfile.getSampleRates()", "testcase": false, "constructor": false, "invocations": ["get", "split", "createNumberComparator", "add", "valueOf", "trim", "toArray", "size"]}, "repository": {"repo_id": 782257, "url": "https://github.com/jawi/ols", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 286, "size": 40548, "license": "licensed"}}