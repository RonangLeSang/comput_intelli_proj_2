{"test_class": {"identifier": "StringUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "util/src/test/java/nl/lxtreme/ols/util/StringUtilsTest.java"}, "test_case": {"identifier": "testTokenize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testTokenize()\n  {\n    String[] tokens;\n\n    tokens = StringUtils.tokenize( \"hello world\", \" \" );\n    assertArrayEquals( new String[] { \"hello\", \"world\" }, tokens );\n  }", "signature": "void testTokenize()", "full_signature": "@Test public void testTokenize()", "class_method_signature": "StringUtilsTest.testTokenize()", "testcase": true, "constructor": false, "invocations": ["tokenize", "assertArrayEquals"]}, "focal_class": {"identifier": "StringUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "StringUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " StringUtils()", "full_signature": "private  StringUtils()", "class_method_signature": "StringUtils.StringUtils()", "testcase": false, "constructor": true}, {"identifier": "integerToBinString", "parameters": "( final int aValue, final int aFieldWidth )", "modifiers": "public static", "return": "String", "signature": "String integerToBinString( final int aValue, final int aFieldWidth )", "full_signature": "public static String integerToBinString( final int aValue, final int aFieldWidth )", "class_method_signature": "StringUtils.integerToBinString( final int aValue, final int aFieldWidth )", "testcase": false, "constructor": false}, {"identifier": "integerToHexString", "parameters": "( final int aValue, final int aFieldWidth )", "modifiers": "public static", "return": "String", "signature": "String integerToHexString( final int aValue, final int aFieldWidth )", "full_signature": "public static String integerToHexString( final int aValue, final int aFieldWidth )", "class_method_signature": "StringUtils.integerToHexString( final int aValue, final int aFieldWidth )", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "( final String aValue )", "modifiers": "public static", "return": "boolean", "signature": "boolean isEmpty( final String aValue )", "full_signature": "public static boolean isEmpty( final String aValue )", "class_method_signature": "StringUtils.isEmpty( final String aValue )", "testcase": false, "constructor": false}, {"identifier": "tokenize", "parameters": "( final String aInput, final String aDelimiters )", "modifiers": "public static", "return": "String[]", "signature": "String[] tokenize( final String aInput, final String aDelimiters )", "full_signature": "public static String[] tokenize( final String aInput, final String aDelimiters )", "class_method_signature": "StringUtils.tokenize( final String aInput, final String aDelimiters )", "testcase": false, "constructor": false}, {"identifier": "tokenizeQuotedStrings", "parameters": "( final String aInput, final String aDelimiters )", "modifiers": "public static", "return": "String[]", "signature": "String[] tokenizeQuotedStrings( final String aInput, final String aDelimiters )", "full_signature": "public static String[] tokenizeQuotedStrings( final String aInput, final String aDelimiters )", "class_method_signature": "StringUtils.tokenizeQuotedStrings( final String aInput, final String aDelimiters )", "testcase": false, "constructor": false}, {"identifier": "unquote", "parameters": "( final String aInput )", "modifiers": "public static", "return": "String", "signature": "String unquote( final String aInput )", "full_signature": "public static String unquote( final String aInput )", "class_method_signature": "StringUtils.unquote( final String aInput )", "testcase": false, "constructor": false}, {"identifier": "unquote", "parameters": "( final String aInput, final char aQuoteChar )", "modifiers": "public static", "return": "String", "signature": "String unquote( final String aInput, final char aQuoteChar )", "full_signature": "public static String unquote( final String aInput, final char aQuoteChar )", "class_method_signature": "StringUtils.unquote( final String aInput, final char aQuoteChar )", "testcase": false, "constructor": false}, {"identifier": "isDelimiter", "parameters": "( final String aInput, final String aDelimiters )", "modifiers": "private static", "return": "boolean", "signature": "boolean isDelimiter( final String aInput, final String aDelimiters )", "full_signature": "private static boolean isDelimiter( final String aInput, final String aDelimiters )", "class_method_signature": "StringUtils.isDelimiter( final String aInput, final String aDelimiters )", "testcase": false, "constructor": false}], "file": "util/src/main/java/nl/lxtreme/ols/util/StringUtils.java"}, "focal_method": {"identifier": "tokenize", "parameters": "( final String aInput, final String aDelimiters )", "modifiers": "public static", "return": "String[]", "body": "public static String[] tokenize( final String aInput, final String aDelimiters )\n  {\n    if ( aInput == null )\n    {\n      return null;\n    }\n\n    final List<String> result = new ArrayList<String>();\n\n    final StringTokenizer tokenizer = new StringTokenizer( aInput, aDelimiters, false /* returnDelims */);\n    while ( tokenizer.hasMoreTokens() )\n    {\n      String token = tokenizer.nextToken();\n      result.add( token.trim() );\n    }\n\n    return result.toArray( new String[result.size()] );\n  }", "signature": "String[] tokenize( final String aInput, final String aDelimiters )", "full_signature": "public static String[] tokenize( final String aInput, final String aDelimiters )", "class_method_signature": "StringUtils.tokenize( final String aInput, final String aDelimiters )", "testcase": false, "constructor": false, "invocations": ["hasMoreTokens", "nextToken", "add", "trim", "toArray", "size"]}, "repository": {"repo_id": 782257, "url": "https://github.com/jawi/ols", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 286, "size": 40548, "license": "licensed"}}