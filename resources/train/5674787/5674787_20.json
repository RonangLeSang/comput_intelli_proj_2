{"test_class": {"identifier": "SurefireSensorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private JavaResourceLocator javaResourceLocator;", "modifier": "private", "type": "JavaResourceLocator", "declarator": "javaResourceLocator", "var_name": "javaResourceLocator"}, {"original_string": "private SurefireSensor surefireSensor;", "modifier": "private", "type": "SurefireSensor", "declarator": "surefireSensor", "var_name": "surefireSensor"}, {"original_string": "private DefaultFileSystem fs;", "modifier": "private", "type": "DefaultFileSystem", "declarator": "fs", "var_name": "fs"}, {"original_string": "private PathResolver pathResolver = new PathResolver();", "modifier": "private", "type": "PathResolver", "declarator": "pathResolver = new PathResolver()", "var_name": "pathResolver"}], "file": "java-surefire/src/test/java/org/sonar/plugins/surefire/SurefireSensorTest.java"}, "test_case": {"identifier": "shouldSaveErrorsAndFailuresInXML", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void shouldSaveErrorsAndFailuresInXML() throws URISyntaxException {\n    SensorContextTester context = SensorContextTester.create(new File(\"\"));\n    context.fileSystem()\n      .add(resource(\"org.sonar.core.ExtensionsFinderTest\"))\n      .add(resource(\"org.sonar.core.ExtensionsFinderTest2\"))\n      .add(resource(\"org.sonar.core.ExtensionsFinderTest3\"));\n\n    collect(context, \"/org/sonar/plugins/surefire/SurefireSensorTest/shouldSaveErrorsAndFailuresInXML/\");\n\n    // 1 classes, 5 measures by class\n    assertThat(context.measures(\":org.sonar.core.ExtensionsFinderTest\")).hasSize(5);\n    assertThat(context.measure(\":org.sonar.core.ExtensionsFinderTest\", CoreMetrics.SKIPPED_TESTS).value()).isEqualTo(1);\n    assertThat(context.measure(\":org.sonar.core.ExtensionsFinderTest\", CoreMetrics.TESTS).value()).isEqualTo(7);\n  }", "signature": "void shouldSaveErrorsAndFailuresInXML()", "full_signature": "@Test void shouldSaveErrorsAndFailuresInXML()", "class_method_signature": "SurefireSensorTest.shouldSaveErrorsAndFailuresInXML()", "testcase": true, "constructor": false, "invocations": ["create", "add", "add", "add", "fileSystem", "resource", "resource", "resource", "collect", "hasSize", "assertThat", "measures", "isEqualTo", "assertThat", "value", "measure", "isEqualTo", "assertThat", "value", "measure"]}, "focal_class": {"identifier": "SurefireSensor", "superclass": "", "interfaces": "implements Sensor", "fields": [{"original_string": "private static final Logger LOGGER = Loggers.get(SurefireSensor.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Loggers.get(SurefireSensor.class)", "var_name": "LOGGER"}, {"original_string": "private final SurefireJavaParser surefireJavaParser;", "modifier": "private final", "type": "SurefireJavaParser", "declarator": "surefireJavaParser", "var_name": "surefireJavaParser"}, {"original_string": "private final Configuration settings;", "modifier": "private final", "type": "Configuration", "declarator": "settings", "var_name": "settings"}, {"original_string": "private final FileSystem fs;", "modifier": "private final", "type": "FileSystem", "declarator": "fs", "var_name": "fs"}, {"original_string": "private final PathResolver pathResolver;", "modifier": "private final", "type": "PathResolver", "declarator": "pathResolver", "var_name": "pathResolver"}], "methods": [{"identifier": "SurefireSensor", "parameters": "(SurefireJavaParser surefireJavaParser, Configuration settings, FileSystem fs, PathResolver pathResolver)", "modifiers": "public", "return": "", "signature": " SurefireSensor(SurefireJavaParser surefireJavaParser, Configuration settings, FileSystem fs, PathResolver pathResolver)", "full_signature": "public  SurefireSensor(SurefireJavaParser surefireJavaParser, Configuration settings, FileSystem fs, PathResolver pathResolver)", "class_method_signature": "SurefireSensor.SurefireSensor(SurefireJavaParser surefireJavaParser, Configuration settings, FileSystem fs, PathResolver pathResolver)", "testcase": false, "constructor": true}, {"identifier": "describe", "parameters": "(SensorDescriptor descriptor)", "modifiers": "@Override public", "return": "void", "signature": "void describe(SensorDescriptor descriptor)", "full_signature": "@Override public void describe(SensorDescriptor descriptor)", "class_method_signature": "SurefireSensor.describe(SensorDescriptor descriptor)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(SensorContext context)", "modifiers": "@Override public", "return": "void", "signature": "void execute(SensorContext context)", "full_signature": "@Override public void execute(SensorContext context)", "class_method_signature": "SurefireSensor.execute(SensorContext context)", "testcase": false, "constructor": false}, {"identifier": "collect", "parameters": "(SensorContext context, List<File> reportsDirs)", "modifiers": "protected", "return": "void", "signature": "void collect(SensorContext context, List<File> reportsDirs)", "full_signature": "protected void collect(SensorContext context, List<File> reportsDirs)", "class_method_signature": "SurefireSensor.collect(SensorContext context, List<File> reportsDirs)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SurefireSensor.toString()", "testcase": false, "constructor": false}], "file": "java-surefire/src/main/java/org/sonar/plugins/surefire/SurefireSensor.java"}, "focal_method": {"identifier": "collect", "parameters": "(SensorContext context, List<File> reportsDirs)", "modifiers": "protected", "return": "void", "body": "protected void collect(SensorContext context, List<File> reportsDirs) {\n    LOGGER.info(\"parsing {}\", reportsDirs);\n    surefireJavaParser.collect(context, reportsDirs, settings.hasKey(SurefireUtils.SUREFIRE_REPORT_PATHS_PROPERTY));\n  }", "signature": "void collect(SensorContext context, List<File> reportsDirs)", "full_signature": "protected void collect(SensorContext context, List<File> reportsDirs)", "class_method_signature": "SurefireSensor.collect(SensorContext context, List<File> reportsDirs)", "testcase": false, "constructor": false, "invocations": ["info", "collect", "hasKey"]}, "repository": {"repo_id": 5674787, "url": "https://github.com/SonarSource/sonar-java", "stars": 597, "created": "9/4/2012 3:53:13 PM +00:00", "updates": "2020-01-27T13:20:27+00:00", "fork": "False", "license": "licensed"}}