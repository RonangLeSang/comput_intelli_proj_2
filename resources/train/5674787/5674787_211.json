{"test_class": {"identifier": "AccessorsUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "java-frontend/src/test/java/org/sonar/java/ast/visitors/AccessorsUtilsTest.java"}, "test_case": {"identifier": "method_named_properly_is_setter", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void method_named_properly_is_setter() {\n    assertThat(isAccessor(\"class T { private int a; public void setA(int a) { this.a = a; } }\")).isTrue();\n  }", "signature": "void method_named_properly_is_setter()", "full_signature": "@Test void method_named_properly_is_setter()", "class_method_signature": "AccessorsUtilsTest.method_named_properly_is_setter()", "testcase": true, "constructor": false, "invocations": ["isTrue", "assertThat", "isAccessor"]}, "focal_class": {"identifier": "AccessorsUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "AccessorsUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " AccessorsUtils()", "full_signature": "private  AccessorsUtils()", "class_method_signature": "AccessorsUtils.AccessorsUtils()", "testcase": false, "constructor": true}, {"identifier": "isAccessor", "parameters": "(ClassTree classTree, MethodTree methodTree)", "modifiers": "public static", "return": "boolean", "signature": "boolean isAccessor(ClassTree classTree, MethodTree methodTree)", "full_signature": "public static boolean isAccessor(ClassTree classTree, MethodTree methodTree)", "class_method_signature": "AccessorsUtils.isAccessor(ClassTree classTree, MethodTree methodTree)", "testcase": false, "constructor": false}, {"identifier": "isPublicMethod", "parameters": "(MethodTree methodTree)", "modifiers": "private static", "return": "boolean", "signature": "boolean isPublicMethod(MethodTree methodTree)", "full_signature": "private static boolean isPublicMethod(MethodTree methodTree)", "class_method_signature": "AccessorsUtils.isPublicMethod(MethodTree methodTree)", "testcase": false, "constructor": false}, {"identifier": "isSetter", "parameters": "(ClassTree classTree, MethodTree methodTree)", "modifiers": "private static", "return": "boolean", "signature": "boolean isSetter(ClassTree classTree, MethodTree methodTree)", "full_signature": "private static boolean isSetter(ClassTree classTree, MethodTree methodTree)", "class_method_signature": "AccessorsUtils.isSetter(ClassTree classTree, MethodTree methodTree)", "testcase": false, "constructor": false}, {"identifier": "hasOneAssignementStatement", "parameters": "(MethodTree methodTree, ClassTree classTree)", "modifiers": "private static", "return": "boolean", "signature": "boolean hasOneAssignementStatement(MethodTree methodTree, ClassTree classTree)", "full_signature": "private static boolean hasOneAssignementStatement(MethodTree methodTree, ClassTree classTree)", "class_method_signature": "AccessorsUtils.hasOneAssignementStatement(MethodTree methodTree, ClassTree classTree)", "testcase": false, "constructor": false}, {"identifier": "referencePrivateProperty", "parameters": "(AssignmentExpressionTree assignmentExpressionTree, ClassTree classTree)", "modifiers": "private static", "return": "boolean", "signature": "boolean referencePrivateProperty(AssignmentExpressionTree assignmentExpressionTree, ClassTree classTree)", "full_signature": "private static boolean referencePrivateProperty(AssignmentExpressionTree assignmentExpressionTree, ClassTree classTree)", "class_method_signature": "AccessorsUtils.referencePrivateProperty(AssignmentExpressionTree assignmentExpressionTree, ClassTree classTree)", "testcase": false, "constructor": false}, {"identifier": "isGetter", "parameters": "(ClassTree classTree, MethodTree methodTree)", "modifiers": "private static", "return": "boolean", "signature": "boolean isGetter(ClassTree classTree, MethodTree methodTree)", "full_signature": "private static boolean isGetter(ClassTree classTree, MethodTree methodTree)", "class_method_signature": "AccessorsUtils.isGetter(ClassTree classTree, MethodTree methodTree)", "testcase": false, "constructor": false}, {"identifier": "isBooleanGetter", "parameters": "(MethodTree methodTree)", "modifiers": "private static", "return": "boolean", "signature": "boolean isBooleanGetter(MethodTree methodTree)", "full_signature": "private static boolean isBooleanGetter(MethodTree methodTree)", "class_method_signature": "AccessorsUtils.isBooleanGetter(MethodTree methodTree)", "testcase": false, "constructor": false}, {"identifier": "isValidGetter", "parameters": "(MethodTree methodTree)", "modifiers": "private static", "return": "boolean", "signature": "boolean isValidGetter(MethodTree methodTree)", "full_signature": "private static boolean isValidGetter(MethodTree methodTree)", "class_method_signature": "AccessorsUtils.isValidGetter(MethodTree methodTree)", "testcase": false, "constructor": false}, {"identifier": "hasOneReturnStatement", "parameters": "(MethodTree methodTree, ClassTree classTree)", "modifiers": "private static", "return": "boolean", "signature": "boolean hasOneReturnStatement(MethodTree methodTree, ClassTree classTree)", "full_signature": "private static boolean hasOneReturnStatement(MethodTree methodTree, ClassTree classTree)", "class_method_signature": "AccessorsUtils.hasOneReturnStatement(MethodTree methodTree, ClassTree classTree)", "testcase": false, "constructor": false}, {"identifier": "referencePrivateProperty", "parameters": "(ReturnStatementTree returnStatementTree, ClassTree classTree)", "modifiers": "private static", "return": "boolean", "signature": "boolean referencePrivateProperty(ReturnStatementTree returnStatementTree, ClassTree classTree)", "full_signature": "private static boolean referencePrivateProperty(ReturnStatementTree returnStatementTree, ClassTree classTree)", "class_method_signature": "AccessorsUtils.referencePrivateProperty(ReturnStatementTree returnStatementTree, ClassTree classTree)", "testcase": false, "constructor": false}, {"identifier": "referencePrivateProperty", "parameters": "(ExpressionTree expression, ClassTree classTree)", "modifiers": "private static", "return": "boolean", "signature": "boolean referencePrivateProperty(ExpressionTree expression, ClassTree classTree)", "full_signature": "private static boolean referencePrivateProperty(ExpressionTree expression, ClassTree classTree)", "class_method_signature": "AccessorsUtils.referencePrivateProperty(ExpressionTree expression, ClassTree classTree)", "testcase": false, "constructor": false}, {"identifier": "referencePrivateProperty", "parameters": "(String variableName, ClassTree classTree)", "modifiers": "private static", "return": "boolean", "signature": "boolean referencePrivateProperty(String variableName, ClassTree classTree)", "full_signature": "private static boolean referencePrivateProperty(String variableName, ClassTree classTree)", "class_method_signature": "AccessorsUtils.referencePrivateProperty(String variableName, ClassTree classTree)", "testcase": false, "constructor": false}, {"identifier": "returnTypeIs", "parameters": "(MethodTree methodTree, String expectedReturnType)", "modifiers": "private static", "return": "boolean", "signature": "boolean returnTypeIs(MethodTree methodTree, String expectedReturnType)", "full_signature": "private static boolean returnTypeIs(MethodTree methodTree, String expectedReturnType)", "class_method_signature": "AccessorsUtils.returnTypeIs(MethodTree methodTree, String expectedReturnType)", "testcase": false, "constructor": false}, {"identifier": "returnTypeIsJavaLangBoolean", "parameters": "(MethodTree methodTree)", "modifiers": "private static", "return": "boolean", "signature": "boolean returnTypeIsJavaLangBoolean(MethodTree methodTree)", "full_signature": "private static boolean returnTypeIsJavaLangBoolean(MethodTree methodTree)", "class_method_signature": "AccessorsUtils.returnTypeIsJavaLangBoolean(MethodTree methodTree)", "testcase": false, "constructor": false}, {"identifier": "isIdentifierWithValue", "parameters": "(Tree tree, String value)", "modifiers": "private static", "return": "boolean", "signature": "boolean isIdentifierWithValue(Tree tree, String value)", "full_signature": "private static boolean isIdentifierWithValue(Tree tree, String value)", "class_method_signature": "AccessorsUtils.isIdentifierWithValue(Tree tree, String value)", "testcase": false, "constructor": false}], "file": "java-frontend/src/main/java/org/sonar/java/ast/visitors/AccessorsUtils.java"}, "focal_method": {"identifier": "isAccessor", "parameters": "(ClassTree classTree, MethodTree methodTree)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isAccessor(ClassTree classTree, MethodTree methodTree) {\n    return isPublicMethod(methodTree) && methodTree.block() != null && (isGetter(classTree, methodTree) || isSetter(classTree, methodTree));\n  }", "signature": "boolean isAccessor(ClassTree classTree, MethodTree methodTree)", "full_signature": "public static boolean isAccessor(ClassTree classTree, MethodTree methodTree)", "class_method_signature": "AccessorsUtils.isAccessor(ClassTree classTree, MethodTree methodTree)", "testcase": false, "constructor": false, "invocations": ["isPublicMethod", "block", "isGetter", "isSetter"]}, "repository": {"repo_id": 5674787, "url": "https://github.com/SonarSource/sonar-java", "stars": 597, "created": "9/4/2012 3:53:13 PM +00:00", "updates": "2020-01-27T13:20:27+00:00", "fork": "False", "license": "licensed"}}