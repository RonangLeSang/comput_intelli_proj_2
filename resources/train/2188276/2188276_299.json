{"test_class": {"identifier": "TableInfoDataSetTest", "superclass": "extends BaseSQuirreLJUnit4TestCase", "interfaces": "", "fields": [{"original_string": "TableInfoDataSet classUnderTest = null;", "modifier": "", "type": "TableInfoDataSet", "declarator": "classUnderTest = null", "var_name": "classUnderTest"}, {"original_string": "ITableInfo mockTableInfo = mockHelper.createMock(ITableInfo.class);", "modifier": "", "type": "ITableInfo", "declarator": "mockTableInfo = mockHelper.createMock(ITableInfo.class)", "var_name": "mockTableInfo"}], "file": "sql12/fw/src/test/java/net/sourceforge/squirrel_sql/fw/sql/TableInfoDataSetTest.java"}, "test_case": {"identifier": "testGetColumnCount", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n\tpublic final void testGetColumnCount()\n\t{\n\t\tassertEquals(2, classUnderTest.getColumnCount());\n\t}", "signature": "void testGetColumnCount()", "full_signature": "@Test public final void testGetColumnCount()", "class_method_signature": "TableInfoDataSetTest.testGetColumnCount()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getColumnCount"]}, "focal_class": {"identifier": "TableInfoDataSet", "superclass": "", "interfaces": "implements IDataSet", "fields": [{"original_string": "private static final StringManager s_stringMgr =\n\t\tStringManagerFactory.getStringManager(TableInfoDataSet.class);", "modifier": "private static final", "type": "StringManager", "declarator": "s_stringMgr =\n\t\tStringManagerFactory.getStringManager(TableInfoDataSet.class)", "var_name": "s_stringMgr"}, {"original_string": "private final static String[] s_hdgs =\n\t\tnew String[]\n\t\t{\n\t\t\ts_stringMgr.getString(\"TableInfoDataSet.property\"),\n\t\t\ts_stringMgr.getString(\"TableInfoDataSet.value\"),\n\t\t};", "modifier": "private final static", "type": "String[]", "declarator": "s_hdgs =\n\t\tnew String[]\n\t\t{\n\t\t\ts_stringMgr.getString(\"TableInfoDataSet.property\"),\n\t\t\ts_stringMgr.getString(\"TableInfoDataSet.value\"),\n\t\t}", "var_name": "s_hdgs"}, {"original_string": "private DataSetDefinition _dsDef;", "modifier": "private", "type": "DataSetDefinition", "declarator": "_dsDef", "var_name": "_dsDef"}, {"original_string": "private int _curRow = -1;", "modifier": "private", "type": "int", "declarator": "_curRow = -1", "var_name": "_curRow"}, {"original_string": "private String[][] _data = new String[][]\n\t{\n\t\t{\n\t\t\ts_stringMgr.getString(\"TableInfoDataSet.rowheading.name\"), null\n\t\t},\n\t\t{\n\t\t\ts_stringMgr.getString(\"TableInfoDataSet.rowheading.qualname\"), null\n\t\t},\n\t\t{\n\t\t\ts_stringMgr.getString(\"TableInfoDataSet.rowheading.catalog\"), null\n\t\t},\n\t\t{\n\t\t\ts_stringMgr.getString(\"TableInfoDataSet.rowheading.schema\"), null\n\t\t},\n\t\t{\n\t\t\ts_stringMgr.getString(\"TableInfoDataSet.rowheading.type\"), null\n\t\t},\n\t\t{\n\t\t\ts_stringMgr.getString(\"TableInfoDataSet.rowheading.remarks\"), null\n\t\t},\n\t};", "modifier": "private", "type": "String[][]", "declarator": "_data = new String[][]\n\t{\n\t\t{\n\t\t\ts_stringMgr.getString(\"TableInfoDataSet.rowheading.name\"), null\n\t\t},\n\t\t{\n\t\t\ts_stringMgr.getString(\"TableInfoDataSet.rowheading.qualname\"), null\n\t\t},\n\t\t{\n\t\t\ts_stringMgr.getString(\"TableInfoDataSet.rowheading.catalog\"), null\n\t\t},\n\t\t{\n\t\t\ts_stringMgr.getString(\"TableInfoDataSet.rowheading.schema\"), null\n\t\t},\n\t\t{\n\t\t\ts_stringMgr.getString(\"TableInfoDataSet.rowheading.type\"), null\n\t\t},\n\t\t{\n\t\t\ts_stringMgr.getString(\"TableInfoDataSet.rowheading.remarks\"), null\n\t\t},\n\t}", "var_name": "_data"}], "methods": [{"identifier": "TableInfoDataSet", "parameters": "()", "modifiers": "public", "return": "", "signature": " TableInfoDataSet()", "full_signature": "public  TableInfoDataSet()", "class_method_signature": "TableInfoDataSet.TableInfoDataSet()", "testcase": false, "constructor": true}, {"identifier": "TableInfoDataSet", "parameters": "(ITableInfo ti)", "modifiers": "public", "return": "", "signature": " TableInfoDataSet(ITableInfo ti)", "full_signature": "public  TableInfoDataSet(ITableInfo ti)", "class_method_signature": "TableInfoDataSet.TableInfoDataSet(ITableInfo ti)", "testcase": false, "constructor": true}, {"identifier": "getColumnCount", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int getColumnCount()", "full_signature": "public final int getColumnCount()", "class_method_signature": "TableInfoDataSet.getColumnCount()", "testcase": false, "constructor": false}, {"identifier": "getDataSetDefinition", "parameters": "()", "modifiers": "public", "return": "DataSetDefinition", "signature": "DataSetDefinition getDataSetDefinition()", "full_signature": "public DataSetDefinition getDataSetDefinition()", "class_method_signature": "TableInfoDataSet.getDataSetDefinition()", "testcase": false, "constructor": false}, {"identifier": "setTableInfo", "parameters": "(ITableInfo ti)", "modifiers": "public synchronized", "return": "void", "signature": "void setTableInfo(ITableInfo ti)", "full_signature": "public synchronized void setTableInfo(ITableInfo ti)", "class_method_signature": "TableInfoDataSet.setTableInfo(ITableInfo ti)", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "(IMessageHandler msgHandler)", "modifiers": "public synchronized", "return": "boolean", "signature": "boolean next(IMessageHandler msgHandler)", "full_signature": "public synchronized boolean next(IMessageHandler msgHandler)", "class_method_signature": "TableInfoDataSet.next(IMessageHandler msgHandler)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int columnIndex)", "modifiers": "public synchronized", "return": "Object", "signature": "Object get(int columnIndex)", "full_signature": "public synchronized Object get(int columnIndex)", "class_method_signature": "TableInfoDataSet.get(int columnIndex)", "testcase": false, "constructor": false}, {"identifier": "createColumnDefinitions", "parameters": "()", "modifiers": "private", "return": "ColumnDisplayDefinition[]", "signature": "ColumnDisplayDefinition[] createColumnDefinitions()", "full_signature": "private ColumnDisplayDefinition[] createColumnDefinitions()", "class_method_signature": "TableInfoDataSet.createColumnDefinitions()", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(ITableInfo ti)", "modifiers": "private", "return": "void", "signature": "void load(ITableInfo ti)", "full_signature": "private void load(ITableInfo ti)", "class_method_signature": "TableInfoDataSet.load(ITableInfo ti)", "testcase": false, "constructor": false}], "file": "sql12/fw/src/main/java/net/sourceforge/squirrel_sql/fw/sql/TableInfoDataSet.java"}, "focal_method": {"identifier": "getColumnCount", "parameters": "()", "modifiers": "public final", "return": "int", "body": "public final int getColumnCount()\n\t{\n\t\treturn s_hdgs.length;\n\t}", "signature": "int getColumnCount()", "full_signature": "public final int getColumnCount()", "class_method_signature": "TableInfoDataSet.getColumnCount()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2188276, "url": "https://github.com/igorhvr/squirrel-sql", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 5, "size": 86577, "license": "licensed"}}