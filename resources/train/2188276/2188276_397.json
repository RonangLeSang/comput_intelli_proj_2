{"test_class": {"identifier": "DatabaseFileInfoTest", "superclass": "extends BaseSQuirreLJUnit4TestCase", "interfaces": "", "fields": [{"original_string": "DatabaseFileInfo classUnderTest = new DatabaseFileInfo();", "modifier": "", "type": "DatabaseFileInfo", "declarator": "classUnderTest = new DatabaseFileInfo()", "var_name": "classUnderTest"}], "file": "sql12/plugins/mssql/src/test/java/net/sourceforge/squirrel_sql/plugins/mssql/sql/dbfile/DatabaseFileInfoTest.java"}, "test_case": {"identifier": "testGetDataFiles", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetDataFiles() throws Exception\n\t{\n\t\tassertNotNull(classUnderTest.getDataFiles());\n\t\tassertEquals(0, classUnderTest.getDataFiles().length);\n\n\t}", "signature": "void testGetDataFiles()", "full_signature": "@Test public void testGetDataFiles()", "class_method_signature": "DatabaseFileInfoTest.testGetDataFiles()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "getDataFiles", "assertEquals", "getDataFiles"]}, "focal_class": {"identifier": "DatabaseFileInfo", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String _databaseName;", "modifier": "private", "type": "String", "declarator": "_databaseName", "var_name": "_databaseName"}, {"original_string": "private String _databaseSize;", "modifier": "private", "type": "String", "declarator": "_databaseSize", "var_name": "_databaseSize"}, {"original_string": "private String _owner;", "modifier": "private", "type": "String", "declarator": "_owner", "var_name": "_owner"}, {"original_string": "private short _compatibilityLevel;", "modifier": "private", "type": "short", "declarator": "_compatibilityLevel", "var_name": "_compatibilityLevel"}, {"original_string": "private String _createdDate;", "modifier": "private", "type": "String", "declarator": "_createdDate", "var_name": "_createdDate"}, {"original_string": "private HashMap<String, String> _options;", "modifier": "private", "type": "HashMap<String, String>", "declarator": "_options", "var_name": "_options"}, {"original_string": "private ArrayList<DatabaseFile> _dataFiles;", "modifier": "private", "type": "ArrayList<DatabaseFile>", "declarator": "_dataFiles", "var_name": "_dataFiles"}, {"original_string": "private ArrayList<Object> _logFiles;", "modifier": "private", "type": "ArrayList<Object>", "declarator": "_logFiles", "var_name": "_logFiles"}], "methods": [{"identifier": "DatabaseFileInfo", "parameters": "()", "modifiers": "public", "return": "", "signature": " DatabaseFileInfo()", "full_signature": "public  DatabaseFileInfo()", "class_method_signature": "DatabaseFileInfo.DatabaseFileInfo()", "testcase": false, "constructor": true}, {"identifier": "getDatabaseSize", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDatabaseSize()", "full_signature": "public String getDatabaseSize()", "class_method_signature": "DatabaseFileInfo.getDatabaseSize()", "testcase": false, "constructor": false}, {"identifier": "setDatabaseSize", "parameters": "(String databaseSize)", "modifiers": "public", "return": "void", "signature": "void setDatabaseSize(String databaseSize)", "full_signature": "public void setDatabaseSize(String databaseSize)", "class_method_signature": "DatabaseFileInfo.setDatabaseSize(String databaseSize)", "testcase": false, "constructor": false}, {"identifier": "getOwner", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getOwner()", "full_signature": "public String getOwner()", "class_method_signature": "DatabaseFileInfo.getOwner()", "testcase": false, "constructor": false}, {"identifier": "setOwner", "parameters": "(String owner)", "modifiers": "public", "return": "void", "signature": "void setOwner(String owner)", "full_signature": "public void setOwner(String owner)", "class_method_signature": "DatabaseFileInfo.setOwner(String owner)", "testcase": false, "constructor": false}, {"identifier": "getCompatibilityLevel", "parameters": "()", "modifiers": "public", "return": "short", "signature": "short getCompatibilityLevel()", "full_signature": "public short getCompatibilityLevel()", "class_method_signature": "DatabaseFileInfo.getCompatibilityLevel()", "testcase": false, "constructor": false}, {"identifier": "setCompatibilityLevel", "parameters": "(short compatibilityLevel)", "modifiers": "public", "return": "void", "signature": "void setCompatibilityLevel(short compatibilityLevel)", "full_signature": "public void setCompatibilityLevel(short compatibilityLevel)", "class_method_signature": "DatabaseFileInfo.setCompatibilityLevel(short compatibilityLevel)", "testcase": false, "constructor": false}, {"identifier": "getCreatedDate", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCreatedDate()", "full_signature": "public String getCreatedDate()", "class_method_signature": "DatabaseFileInfo.getCreatedDate()", "testcase": false, "constructor": false}, {"identifier": "setCreatedDate", "parameters": "(String createdDate)", "modifiers": "public", "return": "void", "signature": "void setCreatedDate(String createdDate)", "full_signature": "public void setCreatedDate(String createdDate)", "class_method_signature": "DatabaseFileInfo.setCreatedDate(String createdDate)", "testcase": false, "constructor": false}, {"identifier": "setOption", "parameters": "(String option, String value)", "modifiers": "public", "return": "void", "signature": "void setOption(String option, String value)", "full_signature": "public void setOption(String option, String value)", "class_method_signature": "DatabaseFileInfo.setOption(String option, String value)", "testcase": false, "constructor": false}, {"identifier": "getOption", "parameters": "(String option)", "modifiers": "public", "return": "String", "signature": "String getOption(String option)", "full_signature": "public String getOption(String option)", "class_method_signature": "DatabaseFileInfo.getOption(String option)", "testcase": false, "constructor": false}, {"identifier": "getDatabaseName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDatabaseName()", "full_signature": "public String getDatabaseName()", "class_method_signature": "DatabaseFileInfo.getDatabaseName()", "testcase": false, "constructor": false}, {"identifier": "setDatabaseName", "parameters": "(String databaseName)", "modifiers": "public", "return": "void", "signature": "void setDatabaseName(String databaseName)", "full_signature": "public void setDatabaseName(String databaseName)", "class_method_signature": "DatabaseFileInfo.setDatabaseName(String databaseName)", "testcase": false, "constructor": false}, {"identifier": "getLogFiles", "parameters": "()", "modifiers": "public", "return": "Object[]", "signature": "Object[] getLogFiles()", "full_signature": "public Object[] getLogFiles()", "class_method_signature": "DatabaseFileInfo.getLogFiles()", "testcase": false, "constructor": false}, {"identifier": "getDataFiles", "parameters": "()", "modifiers": "public", "return": "Object[]", "signature": "Object[] getDataFiles()", "full_signature": "public Object[] getDataFiles()", "class_method_signature": "DatabaseFileInfo.getDataFiles()", "testcase": false, "constructor": false}, {"identifier": "addLogFile", "parameters": "(DatabaseFile file)", "modifiers": "public", "return": "void", "signature": "void addLogFile(DatabaseFile file)", "full_signature": "public void addLogFile(DatabaseFile file)", "class_method_signature": "DatabaseFileInfo.addLogFile(DatabaseFile file)", "testcase": false, "constructor": false}, {"identifier": "addDataFile", "parameters": "(DatabaseFile file)", "modifiers": "public", "return": "void", "signature": "void addDataFile(DatabaseFile file)", "full_signature": "public void addDataFile(DatabaseFile file)", "class_method_signature": "DatabaseFileInfo.addDataFile(DatabaseFile file)", "testcase": false, "constructor": false}], "file": "sql12/plugins/mssql/src/main/java/net/sourceforge/squirrel_sql/plugins/mssql/sql/dbfile/DatabaseFileInfo.java"}, "focal_method": {"identifier": "getDataFiles", "parameters": "()", "modifiers": "public", "return": "Object[]", "body": "public Object[] getDataFiles() {\n        return this._dataFiles.toArray();\n    }", "signature": "Object[] getDataFiles()", "full_signature": "public Object[] getDataFiles()", "class_method_signature": "DatabaseFileInfo.getDataFiles()", "testcase": false, "constructor": false, "invocations": ["toArray"]}, "repository": {"repo_id": 2188276, "url": "https://github.com/igorhvr/squirrel-sql", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 5, "size": 86577, "license": "licensed"}}