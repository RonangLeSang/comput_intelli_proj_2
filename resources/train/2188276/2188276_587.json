{"test_class": {"identifier": "LAFPreferencesTest", "superclass": "extends BaseSQuirreLJUnit4TestCase", "interfaces": "", "fields": [{"original_string": "LAFPreferences classUnderTest = new LAFPreferences();", "modifier": "", "type": "LAFPreferences", "declarator": "classUnderTest = new LAFPreferences()", "var_name": "classUnderTest"}, {"original_string": "EasyMockHelper mockHelper = new EasyMockHelper();", "modifier": "", "type": "EasyMockHelper", "declarator": "mockHelper = new EasyMockHelper()", "var_name": "mockHelper"}], "file": "sql12/plugins/laf/src/test/java/net/sourceforge/squirrel_sql/plugins/laf/LAFPreferencesTest.java"}, "test_case": {"identifier": "testIsOtherFontEnabled", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testIsOtherFontEnabled() throws Exception\n\t{\n\t\tclassUnderTest.setOtherFontEnabled(true);\n\t\tassertEquals(true, classUnderTest.isOtherFontEnabled());\n\t}", "signature": "void testIsOtherFontEnabled()", "full_signature": "@Test public void testIsOtherFontEnabled()", "class_method_signature": "LAFPreferencesTest.testIsOtherFontEnabled()", "testcase": true, "constructor": false, "invocations": ["setOtherFontEnabled", "assertEquals", "isOtherFontEnabled"]}, "focal_class": {"identifier": "LAFPreferences", "superclass": "", "interfaces": "implements Cloneable, Serializable, IHasIdentifier", "fields": [{"original_string": "static final long serialVersionUID = 5458252097202539743L;", "modifier": "static final", "type": "long", "declarator": "serialVersionUID = 5458252097202539743L", "var_name": "serialVersionUID"}, {"original_string": "private IIdentifier _id;", "modifier": "private", "type": "IIdentifier", "declarator": "_id", "var_name": "_id"}, {"original_string": "private String _lafClassName;", "modifier": "private", "type": "String", "declarator": "_lafClassName", "var_name": "_lafClassName"}, {"original_string": "private FontInfo _fiMenu;", "modifier": "private", "type": "FontInfo", "declarator": "_fiMenu", "var_name": "_fiMenu"}, {"original_string": "private FontInfo _fiStatic;", "modifier": "private", "type": "FontInfo", "declarator": "_fiStatic", "var_name": "_fiStatic"}, {"original_string": "private FontInfo _fiStatusBar;", "modifier": "private", "type": "FontInfo", "declarator": "_fiStatusBar", "var_name": "_fiStatusBar"}, {"original_string": "private FontInfo _fiOther;", "modifier": "private", "type": "FontInfo", "declarator": "_fiOther", "var_name": "_fiOther"}, {"original_string": "private boolean _fiMenuEnabled;", "modifier": "private", "type": "boolean", "declarator": "_fiMenuEnabled", "var_name": "_fiMenuEnabled"}, {"original_string": "private boolean _fiStaticEnabled;", "modifier": "private", "type": "boolean", "declarator": "_fiStaticEnabled", "var_name": "_fiStaticEnabled"}, {"original_string": "private boolean _fiStatusBarEnabled;", "modifier": "private", "type": "boolean", "declarator": "_fiStatusBarEnabled", "var_name": "_fiStatusBarEnabled"}, {"original_string": "private boolean _fiOtherEnabled;", "modifier": "private", "type": "boolean", "declarator": "_fiOtherEnabled", "var_name": "_fiOtherEnabled"}, {"original_string": "private boolean _canLAFSetBorders = false;", "modifier": "private", "type": "boolean", "declarator": "_canLAFSetBorders = false", "var_name": "_canLAFSetBorders"}], "methods": [{"identifier": "LAFPreferences", "parameters": "()", "modifiers": "public", "return": "", "signature": " LAFPreferences()", "full_signature": "public  LAFPreferences()", "class_method_signature": "LAFPreferences.LAFPreferences()", "testcase": false, "constructor": true}, {"identifier": "LAFPreferences", "parameters": "(IIdentifier id)", "modifiers": "public", "return": "", "signature": " LAFPreferences(IIdentifier id)", "full_signature": "public  LAFPreferences(IIdentifier id)", "class_method_signature": "LAFPreferences.LAFPreferences(IIdentifier id)", "testcase": false, "constructor": true}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "LAFPreferences.clone()", "testcase": false, "constructor": false}, {"identifier": "getLookAndFeelClassName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLookAndFeelClassName()", "full_signature": "public String getLookAndFeelClassName()", "class_method_signature": "LAFPreferences.getLookAndFeelClassName()", "testcase": false, "constructor": false}, {"identifier": "setLookAndFeelClassName", "parameters": "(String data)", "modifiers": "public", "return": "void", "signature": "void setLookAndFeelClassName(String data)", "full_signature": "public void setLookAndFeelClassName(String data)", "class_method_signature": "LAFPreferences.setLookAndFeelClassName(String data)", "testcase": false, "constructor": false}, {"identifier": "getMenuFontInfo", "parameters": "()", "modifiers": "public", "return": "FontInfo", "signature": "FontInfo getMenuFontInfo()", "full_signature": "public FontInfo getMenuFontInfo()", "class_method_signature": "LAFPreferences.getMenuFontInfo()", "testcase": false, "constructor": false}, {"identifier": "setMenuFontInfo", "parameters": "(FontInfo data)", "modifiers": "public", "return": "void", "signature": "void setMenuFontInfo(FontInfo data)", "full_signature": "public void setMenuFontInfo(FontInfo data)", "class_method_signature": "LAFPreferences.setMenuFontInfo(FontInfo data)", "testcase": false, "constructor": false}, {"identifier": "getStaticFontInfo", "parameters": "()", "modifiers": "public", "return": "FontInfo", "signature": "FontInfo getStaticFontInfo()", "full_signature": "public FontInfo getStaticFontInfo()", "class_method_signature": "LAFPreferences.getStaticFontInfo()", "testcase": false, "constructor": false}, {"identifier": "setStaticFontInfo", "parameters": "(FontInfo data)", "modifiers": "public", "return": "void", "signature": "void setStaticFontInfo(FontInfo data)", "full_signature": "public void setStaticFontInfo(FontInfo data)", "class_method_signature": "LAFPreferences.setStaticFontInfo(FontInfo data)", "testcase": false, "constructor": false}, {"identifier": "getStatusBarFontInfo", "parameters": "()", "modifiers": "public", "return": "FontInfo", "signature": "FontInfo getStatusBarFontInfo()", "full_signature": "public FontInfo getStatusBarFontInfo()", "class_method_signature": "LAFPreferences.getStatusBarFontInfo()", "testcase": false, "constructor": false}, {"identifier": "setStatusBarFontInfo", "parameters": "(FontInfo data)", "modifiers": "public", "return": "void", "signature": "void setStatusBarFontInfo(FontInfo data)", "full_signature": "public void setStatusBarFontInfo(FontInfo data)", "class_method_signature": "LAFPreferences.setStatusBarFontInfo(FontInfo data)", "testcase": false, "constructor": false}, {"identifier": "getOtherFontInfo", "parameters": "()", "modifiers": "public", "return": "FontInfo", "signature": "FontInfo getOtherFontInfo()", "full_signature": "public FontInfo getOtherFontInfo()", "class_method_signature": "LAFPreferences.getOtherFontInfo()", "testcase": false, "constructor": false}, {"identifier": "setOtherFontInfo", "parameters": "(FontInfo data)", "modifiers": "public", "return": "void", "signature": "void setOtherFontInfo(FontInfo data)", "full_signature": "public void setOtherFontInfo(FontInfo data)", "class_method_signature": "LAFPreferences.setOtherFontInfo(FontInfo data)", "testcase": false, "constructor": false}, {"identifier": "isMenuFontEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isMenuFontEnabled()", "full_signature": "public boolean isMenuFontEnabled()", "class_method_signature": "LAFPreferences.isMenuFontEnabled()", "testcase": false, "constructor": false}, {"identifier": "setMenuFontEnabled", "parameters": "(boolean data)", "modifiers": "public", "return": "void", "signature": "void setMenuFontEnabled(boolean data)", "full_signature": "public void setMenuFontEnabled(boolean data)", "class_method_signature": "LAFPreferences.setMenuFontEnabled(boolean data)", "testcase": false, "constructor": false}, {"identifier": "isStaticFontEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isStaticFontEnabled()", "full_signature": "public boolean isStaticFontEnabled()", "class_method_signature": "LAFPreferences.isStaticFontEnabled()", "testcase": false, "constructor": false}, {"identifier": "setStaticFontEnabled", "parameters": "(boolean data)", "modifiers": "public", "return": "void", "signature": "void setStaticFontEnabled(boolean data)", "full_signature": "public void setStaticFontEnabled(boolean data)", "class_method_signature": "LAFPreferences.setStaticFontEnabled(boolean data)", "testcase": false, "constructor": false}, {"identifier": "isStatusBarFontEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isStatusBarFontEnabled()", "full_signature": "public boolean isStatusBarFontEnabled()", "class_method_signature": "LAFPreferences.isStatusBarFontEnabled()", "testcase": false, "constructor": false}, {"identifier": "setStatusBarFontEnabled", "parameters": "(boolean data)", "modifiers": "public", "return": "void", "signature": "void setStatusBarFontEnabled(boolean data)", "full_signature": "public void setStatusBarFontEnabled(boolean data)", "class_method_signature": "LAFPreferences.setStatusBarFontEnabled(boolean data)", "testcase": false, "constructor": false}, {"identifier": "isOtherFontEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isOtherFontEnabled()", "full_signature": "public boolean isOtherFontEnabled()", "class_method_signature": "LAFPreferences.isOtherFontEnabled()", "testcase": false, "constructor": false}, {"identifier": "setOtherFontEnabled", "parameters": "(boolean data)", "modifiers": "public", "return": "void", "signature": "void setOtherFontEnabled(boolean data)", "full_signature": "public void setOtherFontEnabled(boolean data)", "class_method_signature": "LAFPreferences.setOtherFontEnabled(boolean data)", "testcase": false, "constructor": false}, {"identifier": "getIdentifier", "parameters": "()", "modifiers": "public", "return": "IIdentifier", "signature": "IIdentifier getIdentifier()", "full_signature": "public IIdentifier getIdentifier()", "class_method_signature": "LAFPreferences.getIdentifier()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "IIdentifier", "signature": "IIdentifier getId()", "full_signature": "public IIdentifier getId()", "class_method_signature": "LAFPreferences.getId()", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(IIdentifier _id)", "modifiers": "public", "return": "void", "signature": "void setId(IIdentifier _id)", "full_signature": "public void setId(IIdentifier _id)", "class_method_signature": "LAFPreferences.setId(IIdentifier _id)", "testcase": false, "constructor": false}, {"identifier": "getCanLAFSetBorder", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getCanLAFSetBorder()", "full_signature": "public boolean getCanLAFSetBorder()", "class_method_signature": "LAFPreferences.getCanLAFSetBorder()", "testcase": false, "constructor": false}, {"identifier": "setCanLAFSetBorder", "parameters": "(boolean value)", "modifiers": "public", "return": "void", "signature": "void setCanLAFSetBorder(boolean value)", "full_signature": "public void setCanLAFSetBorder(boolean value)", "class_method_signature": "LAFPreferences.setCanLAFSetBorder(boolean value)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "LAFPreferences.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "LAFPreferences.equals(Object obj)", "testcase": false, "constructor": false}], "file": "sql12/plugins/laf/src/main/java/net/sourceforge/squirrel_sql/plugins/laf/LAFPreferences.java"}, "focal_method": {"identifier": "isOtherFontEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isOtherFontEnabled()\n\t{\n\t\treturn _fiOtherEnabled;\n\t}", "signature": "boolean isOtherFontEnabled()", "full_signature": "public boolean isOtherFontEnabled()", "class_method_signature": "LAFPreferences.isOtherFontEnabled()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2188276, "url": "https://github.com/igorhvr/squirrel-sql", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 5, "size": 86577, "license": "licensed"}}