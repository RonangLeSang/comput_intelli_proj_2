{"test_class": {"identifier": "AliasScriptTest", "superclass": "extends BaseSQuirreLJUnit4TestCase", "interfaces": "", "fields": [{"original_string": "AliasScript classUnderTest = new AliasScript();", "modifier": "", "type": "AliasScript", "declarator": "classUnderTest = new AliasScript()", "var_name": "classUnderTest"}, {"original_string": "EasyMockHelper mockHelper = new EasyMockHelper();", "modifier": "", "type": "EasyMockHelper", "declarator": "mockHelper = new EasyMockHelper()", "var_name": "mockHelper"}], "file": "sql12/plugins/sessionscript/src/test/java/net/sourceforge/squirrel_sql/plugins/sessionscript/AliasScriptTest.java"}, "test_case": {"identifier": "testGetSQL", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetSQL() throws Exception\n\t{\n\t\tclassUnderTest.setSQL(\"aTestString\");\n\t\tassertEquals(\"aTestString\", classUnderTest.getSQL());\n\t}", "signature": "void testGetSQL()", "full_signature": "@Test public void testGetSQL()", "class_method_signature": "AliasScriptTest.testGetSQL()", "testcase": true, "constructor": false, "invocations": ["setSQL", "assertEquals", "getSQL"]}, "focal_class": {"identifier": "AliasScript", "superclass": "", "interfaces": "implements Serializable, IHasIdentifier", "fields": [{"original_string": "private IIdentifier _id;", "modifier": "private", "type": "IIdentifier", "declarator": "_id", "var_name": "_id"}, {"original_string": "private String _sql;", "modifier": "private", "type": "String", "declarator": "_sql", "var_name": "_sql"}], "methods": [{"identifier": "AliasScript", "parameters": "()", "modifiers": "public", "return": "", "signature": " AliasScript()", "full_signature": "public  AliasScript()", "class_method_signature": "AliasScript.AliasScript()", "testcase": false, "constructor": true}, {"identifier": "AliasScript", "parameters": "(ISQLAlias alias)", "modifiers": "public", "return": "", "signature": " AliasScript(ISQLAlias alias)", "full_signature": "public  AliasScript(ISQLAlias alias)", "class_method_signature": "AliasScript.AliasScript(ISQLAlias alias)", "testcase": false, "constructor": true}, {"identifier": "equals", "parameters": "(Object rhs)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object rhs)", "full_signature": "public boolean equals(Object rhs)", "class_method_signature": "AliasScript.equals(Object rhs)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "AliasScript.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "AliasScript.toString()", "testcase": false, "constructor": false}, {"identifier": "getIdentifier", "parameters": "()", "modifiers": "public", "return": "IIdentifier", "signature": "IIdentifier getIdentifier()", "full_signature": "public IIdentifier getIdentifier()", "class_method_signature": "AliasScript.getIdentifier()", "testcase": false, "constructor": false}, {"identifier": "getSQL", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSQL()", "full_signature": "public String getSQL()", "class_method_signature": "AliasScript.getSQL()", "testcase": false, "constructor": false}, {"identifier": "setIdentifier", "parameters": "(IIdentifier id)", "modifiers": "public", "return": "void", "signature": "void setIdentifier(IIdentifier id)", "full_signature": "public void setIdentifier(IIdentifier id)", "class_method_signature": "AliasScript.setIdentifier(IIdentifier id)", "testcase": false, "constructor": false}, {"identifier": "setSQL", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setSQL(String value)", "full_signature": "public void setSQL(String value)", "class_method_signature": "AliasScript.setSQL(String value)", "testcase": false, "constructor": false}], "file": "sql12/plugins/sessionscript/src/main/java/net/sourceforge/squirrel_sql/plugins/sessionscript/AliasScript.java"}, "focal_method": {"identifier": "getSQL", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getSQL()\n\t{\n\t\treturn _sql;\n\t}", "signature": "String getSQL()", "full_signature": "public String getSQL()", "class_method_signature": "AliasScript.getSQL()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2188276, "url": "https://github.com/igorhvr/squirrel-sql", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 5, "size": 86577, "license": "licensed"}}