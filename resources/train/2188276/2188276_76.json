{"test_class": {"identifier": "ActionKeysTest", "superclass": "extends BaseSQuirreLJUnit4TestCase", "interfaces": "", "fields": [{"original_string": "private static final int TEST_MNEMONIC = 10;", "modifier": "private static final", "type": "int", "declarator": "TEST_MNEMONIC = 10", "var_name": "TEST_MNEMONIC"}, {"original_string": "private static final String TEST_ACCELERATOR = \"testAccelerator\";", "modifier": "private static final", "type": "String", "declarator": "TEST_ACCELERATOR = \"testAccelerator\"", "var_name": "TEST_ACCELERATOR"}, {"original_string": "private static final String TEST_ACTION_CLASS_NAME = \"testActionClassName\";", "modifier": "private static final", "type": "String", "declarator": "TEST_ACTION_CLASS_NAME = \"testActionClassName\"", "var_name": "TEST_ACTION_CLASS_NAME"}, {"original_string": "ActionKeys classUnderTest = new ActionKeys();", "modifier": "", "type": "ActionKeys", "declarator": "classUnderTest = new ActionKeys()", "var_name": "classUnderTest"}, {"original_string": "ActionKeys classUnderTest2 = new ActionKeys(TEST_ACTION_CLASS_NAME, TEST_ACCELERATOR, TEST_MNEMONIC);", "modifier": "", "type": "ActionKeys", "declarator": "classUnderTest2 = new ActionKeys(TEST_ACTION_CLASS_NAME, TEST_ACCELERATOR, TEST_MNEMONIC)", "var_name": "classUnderTest2"}], "file": "sql12/app/src/test/java/net/sourceforge/squirrel_sql/client/action/ActionKeysTest.java"}, "test_case": {"identifier": "testGetActionClassName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetActionClassName() throws Exception\n\t{\n\t\tclassUnderTest.setActionClassName(\"aTestString\");\n\t\tassertEquals(\"aTestString\", classUnderTest.getActionClassName());\n\t\tassertEquals(TEST_ACTION_CLASS_NAME, classUnderTest2.getActionClassName());\n\t}", "signature": "void testGetActionClassName()", "full_signature": "@Test public void testGetActionClassName()", "class_method_signature": "ActionKeysTest.testGetActionClassName()", "testcase": true, "constructor": false, "invocations": ["setActionClassName", "assertEquals", "getActionClassName", "assertEquals", "getActionClassName"]}, "focal_class": {"identifier": "ActionKeys", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String _actionClassName;", "modifier": "private", "type": "String", "declarator": "_actionClassName", "var_name": "_actionClassName"}, {"original_string": "private String _accelerator;", "modifier": "private", "type": "String", "declarator": "_accelerator", "var_name": "_accelerator"}, {"original_string": "private int _mnemonic;", "modifier": "private", "type": "int", "declarator": "_mnemonic", "var_name": "_mnemonic"}], "methods": [{"identifier": "ActionKeys", "parameters": "()", "modifiers": "public", "return": "", "signature": " ActionKeys()", "full_signature": "public  ActionKeys()", "class_method_signature": "ActionKeys.ActionKeys()", "testcase": false, "constructor": true}, {"identifier": "ActionKeys", "parameters": "(String actionClassName, String accelerator, int mnemonic)", "modifiers": "public", "return": "", "signature": " ActionKeys(String actionClassName, String accelerator, int mnemonic)", "full_signature": "public  ActionKeys(String actionClassName, String accelerator, int mnemonic)", "class_method_signature": "ActionKeys.ActionKeys(String actionClassName, String accelerator, int mnemonic)", "testcase": false, "constructor": true}, {"identifier": "getActionClassName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getActionClassName()", "full_signature": "public String getActionClassName()", "class_method_signature": "ActionKeys.getActionClassName()", "testcase": false, "constructor": false}, {"identifier": "getMnemonic", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMnemonic()", "full_signature": "public int getMnemonic()", "class_method_signature": "ActionKeys.getMnemonic()", "testcase": false, "constructor": false}, {"identifier": "getAccelerator", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAccelerator()", "full_signature": "public String getAccelerator()", "class_method_signature": "ActionKeys.getAccelerator()", "testcase": false, "constructor": false}, {"identifier": "setActionClassName", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setActionClassName(String value)", "full_signature": "public void setActionClassName(String value)", "class_method_signature": "ActionKeys.setActionClassName(String value)", "testcase": false, "constructor": false}, {"identifier": "setAccelerator", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setAccelerator(String value)", "full_signature": "public void setAccelerator(String value)", "class_method_signature": "ActionKeys.setAccelerator(String value)", "testcase": false, "constructor": false}, {"identifier": "setMnemonic", "parameters": "(int value)", "modifiers": "public", "return": "void", "signature": "void setMnemonic(int value)", "full_signature": "public void setMnemonic(int value)", "class_method_signature": "ActionKeys.setMnemonic(int value)", "testcase": false, "constructor": false}], "file": "sql12/app/src/main/java/net/sourceforge/squirrel_sql/client/action/ActionKeys.java"}, "focal_method": {"identifier": "getActionClassName", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getActionClassName()\n\t{\n\t\treturn _actionClassName;\n\t}", "signature": "String getActionClassName()", "full_signature": "public String getActionClassName()", "class_method_signature": "ActionKeys.getActionClassName()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2188276, "url": "https://github.com/igorhvr/squirrel-sql", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 5, "size": 86577, "license": "licensed"}}