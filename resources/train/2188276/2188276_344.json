{"test_class": {"identifier": "DialectFactoryTest", "superclass": "extends BaseSQuirreLJUnit4TestCase", "interfaces": "", "fields": [{"original_string": "private EasyMockHelper mockHelper = new EasyMockHelper();", "modifier": "private", "type": "EasyMockHelper", "declarator": "mockHelper = new EasyMockHelper()", "var_name": "mockHelper"}, {"original_string": "private IDialogUtils mockDialogUtils = mockHelper.createMock(IDialogUtils.class);", "modifier": "private", "type": "IDialogUtils", "declarator": "mockDialogUtils = mockHelper.createMock(IDialogUtils.class)", "var_name": "mockDialogUtils"}, {"original_string": "private ISQLDatabaseMetaData mockSqlDatabaseMetaData = mockHelper.createMock(ISQLDatabaseMetaData.class);", "modifier": "private", "type": "ISQLDatabaseMetaData", "declarator": "mockSqlDatabaseMetaData = mockHelper.createMock(ISQLDatabaseMetaData.class)", "var_name": "mockSqlDatabaseMetaData"}, {"original_string": "private IDialectFactory classUnderTest = null;", "modifier": "private", "type": "IDialectFactory", "declarator": "classUnderTest = null", "var_name": "classUnderTest"}, {"original_string": "private static final String AXION_PRODUCT_NAME = \"AxionDB\";", "modifier": "private static final", "type": "String", "declarator": "AXION_PRODUCT_NAME = \"AxionDB\"", "var_name": "AXION_PRODUCT_NAME"}, {"original_string": "private static final String AXION_PRODUCT_VERSION = \"1.0M3-dev\";", "modifier": "private static final", "type": "String", "declarator": "AXION_PRODUCT_VERSION = \"1.0M3-dev\"", "var_name": "AXION_PRODUCT_VERSION"}, {"original_string": "private static final String DB2_PRODUCT_NAME = \"DB2/LINUX\";", "modifier": "private static final", "type": "String", "declarator": "DB2_PRODUCT_NAME = \"DB2/LINUX\"", "var_name": "DB2_PRODUCT_NAME"}, {"original_string": "private static final String DB2_PRODUCT_VERSION = \"SQL09050\";", "modifier": "private static final", "type": "String", "declarator": "DB2_PRODUCT_VERSION = \"SQL09050\"", "var_name": "DB2_PRODUCT_VERSION"}, {"original_string": "private static final String DERBY_PRODUCT_NAME = \"Apache Derby\";", "modifier": "private static final", "type": "String", "declarator": "DERBY_PRODUCT_NAME = \"Apache Derby\"", "var_name": "DERBY_PRODUCT_NAME"}, {"original_string": "private static final String DERBY_PRODUCT_VERSION = \"10.6.2.1 - (999685)\";", "modifier": "private static final", "type": "String", "declarator": "DERBY_PRODUCT_VERSION = \"10.6.2.1 - (999685)\"", "var_name": "DERBY_PRODUCT_VERSION"}, {"original_string": "private static final String FIREBIRD_PRODUCT_NAME = \"Firebird 2.11LI-V2.1.3.18185 Firebird 2.1/tcp (dell-devpc)/P10\";", "modifier": "private static final", "type": "String", "declarator": "FIREBIRD_PRODUCT_NAME = \"Firebird 2.11LI-V2.1.3.18185 Firebird 2.1/tcp (dell-devpc)/P10\"", "var_name": "FIREBIRD_PRODUCT_NAME"}, {"original_string": "private static final String FIREBIRD_PRODUCT_VERSION = \"4.2.9\";", "modifier": "private static final", "type": "String", "declarator": "FIREBIRD_PRODUCT_VERSION = \"4.2.9\"", "var_name": "FIREBIRD_PRODUCT_VERSION"}, {"original_string": "private static final String FRONTBASE_PRODUCT_NAME = \"FrontBase\";", "modifier": "private static final", "type": "String", "declarator": "FRONTBASE_PRODUCT_NAME = \"FrontBase\"", "var_name": "FRONTBASE_PRODUCT_NAME"}, {"original_string": "private static final String FRONTBASE_PRODUCT_VERSION = \"4.2.9\";", "modifier": "private static final", "type": "String", "declarator": "FRONTBASE_PRODUCT_VERSION = \"4.2.9\"", "var_name": "FRONTBASE_PRODUCT_VERSION"}, {"original_string": "private static final String HSQL_PRODUCT_NAME = \"HSQL Database Engine\";", "modifier": "private static final", "type": "String", "declarator": "HSQL_PRODUCT_NAME = \"HSQL Database Engine\"", "var_name": "HSQL_PRODUCT_NAME"}, {"original_string": "private static final String HSQL_PRODUCT_VERSION = \"1.8.0\";", "modifier": "private static final", "type": "String", "declarator": "HSQL_PRODUCT_VERSION = \"1.8.0\"", "var_name": "HSQL_PRODUCT_VERSION"}, {"original_string": "private static final String H2_PRODUCT_NAME = \"H2\";", "modifier": "private static final", "type": "String", "declarator": "H2_PRODUCT_NAME = \"H2\"", "var_name": "H2_PRODUCT_NAME"}, {"original_string": "private static final String H2_PRODUCT_VERSION = \"1.0.65 (2008-01-18)\";", "modifier": "private static final", "type": "String", "declarator": "H2_PRODUCT_VERSION = \"1.0.65 (2008-01-18)\"", "var_name": "H2_PRODUCT_VERSION"}, {"original_string": "private static final String INFORMIX_PRODUCT_NAME = \"Informix Dynamic Server\";", "modifier": "private static final", "type": "String", "declarator": "INFORMIX_PRODUCT_NAME = \"Informix Dynamic Server\"", "var_name": "INFORMIX_PRODUCT_NAME"}, {"original_string": "private static final String INFORMIX_PRODUCT_VERSION = \"10.00.UC6E\";", "modifier": "private static final", "type": "String", "declarator": "INFORMIX_PRODUCT_VERSION = \"10.00.UC6E\"", "var_name": "INFORMIX_PRODUCT_VERSION"}, {"original_string": "private static final String INGRES_PRODUCT_NAME = \"INGRES\";", "modifier": "private static final", "type": "String", "declarator": "INGRES_PRODUCT_NAME = \"INGRES\"", "var_name": "INGRES_PRODUCT_NAME"}, {"original_string": "private static final String INGRES_PRODUCT_VERSION = \"II 9.1.1 (int.rpl/103)\";", "modifier": "private static final", "type": "String", "declarator": "INGRES_PRODUCT_VERSION = \"II 9.1.1 (int.rpl/103)\"", "var_name": "INGRES_PRODUCT_VERSION"}, {"original_string": "private static final String MSSQL_PRODUCT_NAME = \"Microsoft SQL Server\";", "modifier": "private static final", "type": "String", "declarator": "MSSQL_PRODUCT_NAME = \"Microsoft SQL Server\"", "var_name": "MSSQL_PRODUCT_NAME"}, {"original_string": "private static final String MSSQL_PRODUCT_VERSION = \"9.00.3077\";", "modifier": "private static final", "type": "String", "declarator": "MSSQL_PRODUCT_VERSION = \"9.00.3077\"", "var_name": "MSSQL_PRODUCT_VERSION"}, {"original_string": "private static final String MYSQL_PRODUCT_NAME = \"MySQL\";", "modifier": "private static final", "type": "String", "declarator": "MYSQL_PRODUCT_NAME = \"MySQL\"", "var_name": "MYSQL_PRODUCT_NAME"}, {"original_string": "private static final String MYSQL_PRODUCT_VERSION = \"4.1.22-standard\";", "modifier": "private static final", "type": "String", "declarator": "MYSQL_PRODUCT_VERSION = \"4.1.22-standard\"", "var_name": "MYSQL_PRODUCT_VERSION"}, {"original_string": "private static final String MYSQL5_PRODUCT_NAME = \"MySQL\";", "modifier": "private static final", "type": "String", "declarator": "MYSQL5_PRODUCT_NAME = \"MySQL\"", "var_name": "MYSQL5_PRODUCT_NAME"}, {"original_string": "private static final String MYSQL5_PRODUCT_VERSION = \"5.1.41-3ubuntu12.10\";", "modifier": "private static final", "type": "String", "declarator": "MYSQL5_PRODUCT_VERSION = \"5.1.41-3ubuntu12.10\"", "var_name": "MYSQL5_PRODUCT_VERSION"}, {"original_string": "private static final String ORACLE_PRODUCT_NAME = \"Oracle\";", "modifier": "private static final", "type": "String", "declarator": "ORACLE_PRODUCT_NAME = \"Oracle\"", "var_name": "ORACLE_PRODUCT_NAME"}, {"original_string": "private static final String ORACLE_PRODUCT_VERSION = \n\t\t\"Oracle Database 11g Enterprise Edition Release 11.1.0.7.0 - \" +\n\t\t\"Productio With the Partitioning, OLAP, Data Mining and Real Application Testing options\";", "modifier": "private static final", "type": "String", "declarator": "ORACLE_PRODUCT_VERSION = \n\t\t\"Oracle Database 11g Enterprise Edition Release 11.1.0.7.0 - \" +\n\t\t\"Productio With the Partitioning, OLAP, Data Mining and Real Application Testing options\"", "var_name": "ORACLE_PRODUCT_VERSION"}, {"original_string": "private static final String POINTBASE_PRODUCT_NAME = \"PointBase\";", "modifier": "private static final", "type": "String", "declarator": "POINTBASE_PRODUCT_NAME = \"PointBase\"", "var_name": "POINTBASE_PRODUCT_NAME"}, {"original_string": "private static final String POINTBASE_PRODUCT_VERSION = \"5.1 ECF build 300\";", "modifier": "private static final", "type": "String", "declarator": "POINTBASE_PRODUCT_VERSION = \"5.1 ECF build 300\"", "var_name": "POINTBASE_PRODUCT_VERSION"}, {"original_string": "private static final String POSTGRESQL_PRODUCT_NAME = \"PostgreSQL\";", "modifier": "private static final", "type": "String", "declarator": "POSTGRESQL_PRODUCT_NAME = \"PostgreSQL\"", "var_name": "POSTGRESQL_PRODUCT_NAME"}, {"original_string": "private static final String POSTGRESQL_PRODUCT_VERSION = \"8.3.1\";", "modifier": "private static final", "type": "String", "declarator": "POSTGRESQL_PRODUCT_VERSION = \"8.3.1\"", "var_name": "POSTGRESQL_PRODUCT_VERSION"}, {"original_string": "private static final String PROGRESS_PRODUCT_NAME = \"OpenEdge RDBMS\";", "modifier": "private static final", "type": "String", "declarator": "PROGRESS_PRODUCT_NAME = \"OpenEdge RDBMS\"", "var_name": "PROGRESS_PRODUCT_NAME"}, {"original_string": "private static final String PROGRESS_PRODUCT_VERSION = \"10.1C\";", "modifier": "private static final", "type": "String", "declarator": "PROGRESS_PRODUCT_VERSION = \"10.1C\"", "var_name": "PROGRESS_PRODUCT_VERSION"}, {"original_string": "private static final String SYBASE_PRODUCT_NAME = \"Adaptive Server Enterprise\";", "modifier": "private static final", "type": "String", "declarator": "SYBASE_PRODUCT_NAME = \"Adaptive Server Enterprise\"", "var_name": "SYBASE_PRODUCT_NAME"}, {"original_string": "private static final String SYBASE_PRODUCT_VERSION = \n\t\t\"Adaptive Server Enterprise/15.0.2/EBF 15654 \" +\n\t\t\"ESD#4/P/Linux Intel/Linux 2.4.21-47.ELsmp i686/ase1502/2528/32-bit/FBO/Sat Apr  5 05:18:42 2008\";", "modifier": "private static final", "type": "String", "declarator": "SYBASE_PRODUCT_VERSION = \n\t\t\"Adaptive Server Enterprise/15.0.2/EBF 15654 \" +\n\t\t\"ESD#4/P/Linux Intel/Linux 2.4.21-47.ELsmp i686/ase1502/2528/32-bit/FBO/Sat Apr  5 05:18:42 2008\"", "var_name": "SYBASE_PRODUCT_VERSION"}], "file": "sql12/fw/src/test/java/net/sourceforge/squirrel_sql/fw/dialects/DialectFactoryTest.java"}, "test_case": {"identifier": "testIsProgress", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testIsProgress()\n\t{\n\t\tmockHelper.replayAll();\n\t\tassertFalse(DialectFactory.isProgress(mockSqlDatabaseMetaData));\n\t\tmockHelper.verifyAll();\n\n\t}", "signature": "void testIsProgress()", "full_signature": "@Test public void testIsProgress()", "class_method_signature": "DialectFactoryTest.testIsProgress()", "testcase": true, "constructor": false, "invocations": ["replayAll", "assertFalse", "isProgress", "verifyAll"]}, "focal_class": {"identifier": "DialectFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int SOURCE_TYPE = 0;", "modifier": "public static final", "type": "int", "declarator": "SOURCE_TYPE = 0", "var_name": "SOURCE_TYPE"}, {"original_string": "public static final int DEST_TYPE = 1;", "modifier": "public static final", "type": "int", "declarator": "DEST_TYPE = 1", "var_name": "DEST_TYPE"}, {"original_string": "private final static ILogger s_log = LoggerController.createLogger(DialectFactory.class);", "modifier": "private final static", "type": "ILogger", "declarator": "s_log = LoggerController.createLogger(DialectFactory.class)", "var_name": "s_log"}, {"original_string": "private static final AxionDialectExt axionDialect = new AxionDialectExt();", "modifier": "private static final", "type": "AxionDialectExt", "declarator": "axionDialect = new AxionDialectExt()", "var_name": "axionDialect"}, {"original_string": "private static final DB2DialectExt db2Dialect = new DB2DialectExt();", "modifier": "private static final", "type": "DB2DialectExt", "declarator": "db2Dialect = new DB2DialectExt()", "var_name": "db2Dialect"}, {"original_string": "private static final DaffodilDialectExt daffodilDialect = new DaffodilDialectExt();", "modifier": "private static final", "type": "DaffodilDialectExt", "declarator": "daffodilDialect = new DaffodilDialectExt()", "var_name": "daffodilDialect"}, {"original_string": "private static final DerbyDialectExt derbyDialect = new DerbyDialectExt();", "modifier": "private static final", "type": "DerbyDialectExt", "declarator": "derbyDialect = new DerbyDialectExt()", "var_name": "derbyDialect"}, {"original_string": "private static final FirebirdDialectExt firebirdDialect = new FirebirdDialectExt();", "modifier": "private static final", "type": "FirebirdDialectExt", "declarator": "firebirdDialect = new FirebirdDialectExt()", "var_name": "firebirdDialect"}, {"original_string": "private static final FrontBaseDialectExt frontbaseDialect = new FrontBaseDialectExt();", "modifier": "private static final", "type": "FrontBaseDialectExt", "declarator": "frontbaseDialect = new FrontBaseDialectExt()", "var_name": "frontbaseDialect"}, {"original_string": "private static final GenericDialectExt genericDialect = new GenericDialectExt();", "modifier": "private static final", "type": "GenericDialectExt", "declarator": "genericDialect = new GenericDialectExt()", "var_name": "genericDialect"}, {"original_string": "private static final HADBDialectExt hadbDialect = new HADBDialectExt();", "modifier": "private static final", "type": "HADBDialectExt", "declarator": "hadbDialect = new HADBDialectExt()", "var_name": "hadbDialect"}, {"original_string": "private static final H2DialectExt h2Dialect = new H2DialectExt();", "modifier": "private static final", "type": "H2DialectExt", "declarator": "h2Dialect = new H2DialectExt()", "var_name": "h2Dialect"}, {"original_string": "private static final HSQLDialectExt hsqlDialect = new HSQLDialectExt();", "modifier": "private static final", "type": "HSQLDialectExt", "declarator": "hsqlDialect = new HSQLDialectExt()", "var_name": "hsqlDialect"}, {"original_string": "private static final InformixDialectExt informixDialect = new InformixDialectExt();", "modifier": "private static final", "type": "InformixDialectExt", "declarator": "informixDialect = new InformixDialectExt()", "var_name": "informixDialect"}, {"original_string": "private static final InterbaseDialectExt interbaseDialect = new InterbaseDialectExt();", "modifier": "private static final", "type": "InterbaseDialectExt", "declarator": "interbaseDialect = new InterbaseDialectExt()", "var_name": "interbaseDialect"}, {"original_string": "private static final IngresDialectExt ingresDialect = new IngresDialectExt();", "modifier": "private static final", "type": "IngresDialectExt", "declarator": "ingresDialect = new IngresDialectExt()", "var_name": "ingresDialect"}, {"original_string": "private static final MAXDBDialectExt maxDbDialect = new MAXDBDialectExt();", "modifier": "private static final", "type": "MAXDBDialectExt", "declarator": "maxDbDialect = new MAXDBDialectExt()", "var_name": "maxDbDialect"}, {"original_string": "private static final McKoiDialectExt mckoiDialect = new McKoiDialectExt();", "modifier": "private static final", "type": "McKoiDialectExt", "declarator": "mckoiDialect = new McKoiDialectExt()", "var_name": "mckoiDialect"}, {"original_string": "private static final MySQLDialectExt mysqlDialect = new MySQLDialectExt();", "modifier": "private static final", "type": "MySQLDialectExt", "declarator": "mysqlDialect = new MySQLDialectExt()", "var_name": "mysqlDialect"}, {"original_string": "private static final MySQL5DialectExt mysql5Dialect = new MySQL5DialectExt();", "modifier": "private static final", "type": "MySQL5DialectExt", "declarator": "mysql5Dialect = new MySQL5DialectExt()", "var_name": "mysql5Dialect"}, {"original_string": "private static final NetezzaDialextExt netezzaDialect = new NetezzaDialextExt();", "modifier": "private static final", "type": "NetezzaDialextExt", "declarator": "netezzaDialect = new NetezzaDialextExt()", "var_name": "netezzaDialect"}, {"original_string": "private static final GreenplumDialectExt greenplumDialect = new GreenplumDialectExt();", "modifier": "private static final", "type": "GreenplumDialectExt", "declarator": "greenplumDialect = new GreenplumDialectExt()", "var_name": "greenplumDialect"}, {"original_string": "private static final OracleDialectExt oracle9iDialect = new OracleDialectExt();", "modifier": "private static final", "type": "OracleDialectExt", "declarator": "oracle9iDialect = new OracleDialectExt()", "var_name": "oracle9iDialect"}, {"original_string": "private static final PointbaseDialectExt pointbaseDialect = new PointbaseDialectExt();", "modifier": "private static final", "type": "PointbaseDialectExt", "declarator": "pointbaseDialect = new PointbaseDialectExt()", "var_name": "pointbaseDialect"}, {"original_string": "private static final PostgreSQLDialectExt postgreSQLDialect = new PostgreSQLDialectExt();", "modifier": "private static final", "type": "PostgreSQLDialectExt", "declarator": "postgreSQLDialect = new PostgreSQLDialectExt()", "var_name": "postgreSQLDialect"}, {"original_string": "private static final ProgressDialectExt progressDialect = new ProgressDialectExt();", "modifier": "private static final", "type": "ProgressDialectExt", "declarator": "progressDialect = new ProgressDialectExt()", "var_name": "progressDialect"}, {"original_string": "private static final SybaseDialectExt sybaseDialect = new SybaseDialectExt();", "modifier": "private static final", "type": "SybaseDialectExt", "declarator": "sybaseDialect = new SybaseDialectExt()", "var_name": "sybaseDialect"}, {"original_string": "private static final SQLServerDialectExt sqlserverDialect = new SQLServerDialectExt();", "modifier": "private static final", "type": "SQLServerDialectExt", "declarator": "sqlserverDialect = new SQLServerDialectExt()", "var_name": "sqlserverDialect"}, {"original_string": "private static final TimesTenDialectExt timestenDialect = new TimesTenDialectExt();", "modifier": "private static final", "type": "TimesTenDialectExt", "declarator": "timestenDialect = new TimesTenDialectExt()", "var_name": "timestenDialect"}, {"original_string": "private static final IntersystemsCacheDialectExt intersystemsCacheDialectExt =\n\t\tnew IntersystemsCacheDialectExt();", "modifier": "private static final", "type": "IntersystemsCacheDialectExt", "declarator": "intersystemsCacheDialectExt =\n\t\tnew IntersystemsCacheDialectExt()", "var_name": "intersystemsCacheDialectExt"}, {"original_string": "private static HashMap<String, HibernateDialect> dbNameDialectMap =\n\t\tnew HashMap<String, HibernateDialect>();", "modifier": "private static", "type": "HashMap<String, HibernateDialect>", "declarator": "dbNameDialectMap =\n\t\tnew HashMap<String, HibernateDialect>()", "var_name": "dbNameDialectMap"}, {"original_string": "public static boolean isPromptForDialect = false;", "modifier": "public static", "type": "boolean", "declarator": "isPromptForDialect = false", "var_name": "isPromptForDialect"}, {"original_string": "private static final StringManager s_stringMgr =\n\t\tStringManagerFactory.getStringManager(DialectFactory.class);", "modifier": "private static final", "type": "StringManager", "declarator": "s_stringMgr =\n\t\tStringManagerFactory.getStringManager(DialectFactory.class)", "var_name": "s_stringMgr"}, {"original_string": "private static IDialogUtils dialogUtils = new DialogUtils();", "modifier": "private static", "type": "IDialogUtils", "declarator": "dialogUtils = new DialogUtils()", "var_name": "dialogUtils"}], "methods": [{"identifier": "setDialogUtils", "parameters": "(IDialogUtils dialogUtils)", "modifiers": "public static", "return": "void", "signature": "void setDialogUtils(IDialogUtils dialogUtils)", "full_signature": "public static void setDialogUtils(IDialogUtils dialogUtils)", "class_method_signature": "DialectFactory.setDialogUtils(IDialogUtils dialogUtils)", "testcase": false, "constructor": false}, {"identifier": "isAxion", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isAxion(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isAxion(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isAxion(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isDaffodil", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isDaffodil(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isDaffodil(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isDaffodil(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isDB2", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isDB2(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isDB2(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isDB2(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isDerby", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isDerby(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isDerby(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isDerby(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isFirebird", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isFirebird(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isFirebird(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isFirebird(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isFrontBase", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isFrontBase(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isFrontBase(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isFrontBase(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isHADB", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isHADB(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isHADB(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isHADB(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isH2", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isH2(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isH2(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isH2(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isHSQL", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isHSQL(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isHSQL(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isHSQL(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isInformix", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInformix(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isInformix(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isInformix(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isIngres", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isIngres(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isIngres(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isIngres(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isInterbase", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInterbase(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isInterbase(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isInterbase(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isMaxDB", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isMaxDB(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isMaxDB(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isMaxDB(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isMcKoi", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isMcKoi(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isMcKoi(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isMcKoi(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isMSSQLServer", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isMSSQLServer(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isMSSQLServer(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isMSSQLServer(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isMySQL", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isMySQL(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isMySQL(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isMySQL(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isMySQL5", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isMySQL5(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isMySQL5(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isMySQL5(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isNetezza", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isNetezza(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isNetezza(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isNetezza(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isGreenplum", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isGreenplum(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isGreenplum(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isGreenplum(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isOracle", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isOracle(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isOracle(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isOracle(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isPointbase", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isPointbase(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isPointbase(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isPointbase(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isPostgreSQL", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isPostgreSQL(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isPostgreSQL(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isPostgreSQL(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isProgress", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isProgress(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isProgress(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isProgress(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isSyBase", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSyBase(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isSyBase(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isSyBase(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isTimesTen", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isTimesTen(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isTimesTen(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isTimesTen(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "isIntersystemsCacheDialectExt", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "signature": "boolean isIntersystemsCacheDialectExt(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isIntersystemsCacheDialectExt(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isIntersystemsCacheDialectExt(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "getDialectType", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "DialectType", "signature": "DialectType getDialectType(ISQLDatabaseMetaData md)", "full_signature": "public static DialectType getDialectType(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.getDialectType(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "dialectSupportsProduct", "parameters": "(ISQLDatabaseMetaData data, HibernateDialect dialect)", "modifiers": "private static", "return": "boolean", "signature": "boolean dialectSupportsProduct(ISQLDatabaseMetaData data, HibernateDialect dialect)", "full_signature": "private static boolean dialectSupportsProduct(ISQLDatabaseMetaData data, HibernateDialect dialect)", "class_method_signature": "DialectFactory.dialectSupportsProduct(ISQLDatabaseMetaData data, HibernateDialect dialect)", "testcase": false, "constructor": false}, {"identifier": "getDialect", "parameters": "(String dbName)", "modifiers": "public static", "return": "HibernateDialect", "signature": "HibernateDialect getDialect(String dbName)", "full_signature": "public static HibernateDialect getDialect(String dbName)", "class_method_signature": "DialectFactory.getDialect(String dbName)", "testcase": false, "constructor": false}, {"identifier": "getDialectIgnoreCase", "parameters": "(String dbName)", "modifiers": "public static", "return": "HibernateDialect", "signature": "HibernateDialect getDialectIgnoreCase(String dbName)", "full_signature": "public static HibernateDialect getDialectIgnoreCase(String dbName)", "class_method_signature": "DialectFactory.getDialectIgnoreCase(String dbName)", "testcase": false, "constructor": false}, {"identifier": "getDialect", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "HibernateDialect", "signature": "HibernateDialect getDialect(ISQLDatabaseMetaData md)", "full_signature": "public static HibernateDialect getDialect(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.getDialect(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "getDialect", "parameters": "(int sessionType, JFrame parent, ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "HibernateDialect", "signature": "HibernateDialect getDialect(int sessionType, JFrame parent, ISQLDatabaseMetaData md)", "full_signature": "public static HibernateDialect getDialect(int sessionType, JFrame parent, ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.getDialect(int sessionType, JFrame parent, ISQLDatabaseMetaData md)", "testcase": false, "constructor": false}, {"identifier": "showDialectDialog", "parameters": "(JFrame parent, int sessionType)", "modifiers": "private static", "return": "HibernateDialect", "signature": "HibernateDialect showDialectDialog(JFrame parent, int sessionType)", "full_signature": "private static HibernateDialect showDialectDialog(JFrame parent, int sessionType)", "class_method_signature": "DialectFactory.showDialectDialog(JFrame parent, int sessionType)", "testcase": false, "constructor": false}, {"identifier": "getDbNames", "parameters": "()", "modifiers": "public static", "return": "Object[]", "signature": "Object[] getDbNames()", "full_signature": "public static Object[] getDbNames()", "class_method_signature": "DialectFactory.getDbNames()", "testcase": false, "constructor": false}, {"identifier": "getSupportedDialects", "parameters": "()", "modifiers": "public static", "return": "Object[]", "signature": "Object[] getSupportedDialects()", "full_signature": "public static Object[] getSupportedDialects()", "class_method_signature": "DialectFactory.getSupportedDialects()", "testcase": false, "constructor": false}], "file": "sql12/fw/src/main/java/net/sourceforge/squirrel_sql/fw/dialects/DialectFactory.java"}, "focal_method": {"identifier": "isProgress", "parameters": "(ISQLDatabaseMetaData md)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isProgress(ISQLDatabaseMetaData md)\n\t{\n\t\treturn dialectSupportsProduct(md, progressDialect);\n\t}", "signature": "boolean isProgress(ISQLDatabaseMetaData md)", "full_signature": "public static boolean isProgress(ISQLDatabaseMetaData md)", "class_method_signature": "DialectFactory.isProgress(ISQLDatabaseMetaData md)", "testcase": false, "constructor": false, "invocations": ["dialectSupportsProduct"]}, "repository": {"repo_id": 2188276, "url": "https://github.com/igorhvr/squirrel-sql", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 5, "size": 86577, "license": "licensed"}}