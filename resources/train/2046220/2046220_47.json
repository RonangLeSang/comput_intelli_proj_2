{"test_class": {"identifier": "DateUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "empire-db/src/test/java/org/apache/empire/commons/DateUtilsTest.java"}, "test_case": {"identifier": "testFormatYear", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testFormatYear()\n\t{\n\t\tCalendar cal = simpleCalendar();\n\t\tString formatted = DateUtils.formatYear(cal.getTime(), Locale.GERMANY);\n\t\tassertEquals(\"0001\", formatted);\n\t}", "signature": "void testFormatYear()", "full_signature": "@Test public void testFormatYear()", "class_method_signature": "DateUtilsTest.testFormatYear()", "testcase": true, "constructor": false, "invocations": ["simpleCalendar", "formatYear", "getTime", "assertEquals"]}, "focal_class": {"identifier": "DateUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(DateUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(DateUtils.class)", "var_name": "log"}], "methods": [{"identifier": "DateUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " DateUtils()", "full_signature": "private  DateUtils()", "class_method_signature": "DateUtils.DateUtils()", "testcase": false, "constructor": true}, {"identifier": "getDateNow", "parameters": "()", "modifiers": "public static", "return": "Date", "signature": "Date getDateNow()", "full_signature": "public static Date getDateNow()", "class_method_signature": "DateUtils.getDateNow()", "testcase": false, "constructor": false}, {"identifier": "getTimeNow", "parameters": "()", "modifiers": "public static", "return": "Date", "signature": "Date getTimeNow()", "full_signature": "public static Date getTimeNow()", "class_method_signature": "DateUtils.getTimeNow()", "testcase": false, "constructor": false}, {"identifier": "addDate", "parameters": "(Date date, int years, int months, int days)", "modifiers": "public static", "return": "Date", "signature": "Date addDate(Date date, int years, int months, int days)", "full_signature": "public static Date addDate(Date date, int years, int months, int days)", "class_method_signature": "DateUtils.addDate(Date date, int years, int months, int days)", "testcase": false, "constructor": false}, {"identifier": "setDate", "parameters": "(Date date, int year, int month, int day)", "modifiers": "public static", "return": "Date", "signature": "Date setDate(Date date, int year, int month, int day)", "full_signature": "public static Date setDate(Date date, int year, int month, int day)", "class_method_signature": "DateUtils.setDate(Date date, int year, int month, int day)", "testcase": false, "constructor": false}, {"identifier": "getDate", "parameters": "(int year, int month, int day)", "modifiers": "public static", "return": "Date", "signature": "Date getDate(int year, int month, int day)", "full_signature": "public static Date getDate(int year, int month, int day)", "class_method_signature": "DateUtils.getDate(int year, int month, int day)", "testcase": false, "constructor": false}, {"identifier": "setTime", "parameters": "(Date date, int hours, int minutes, int seconds, int millis)", "modifiers": "public static", "return": "Date", "signature": "Date setTime(Date date, int hours, int minutes, int seconds, int millis)", "full_signature": "public static Date setTime(Date date, int hours, int minutes, int seconds, int millis)", "class_method_signature": "DateUtils.setTime(Date date, int hours, int minutes, int seconds, int millis)", "testcase": false, "constructor": false}, {"identifier": "getDateOnly", "parameters": "(Date date)", "modifiers": "public static", "return": "Date", "signature": "Date getDateOnly(Date date)", "full_signature": "public static Date getDateOnly(Date date)", "class_method_signature": "DateUtils.getDateOnly(Date date)", "testcase": false, "constructor": false}, {"identifier": "parseDate", "parameters": "(String sDate, Locale locale)", "modifiers": "public static", "return": "Date", "signature": "Date parseDate(String sDate, Locale locale)", "full_signature": "public static Date parseDate(String sDate, Locale locale)", "class_method_signature": "DateUtils.parseDate(String sDate, Locale locale)", "testcase": false, "constructor": false}, {"identifier": "getSafeLocale", "parameters": "(Locale locale)", "modifiers": "private static", "return": "Locale", "signature": "Locale getSafeLocale(Locale locale)", "full_signature": "private static Locale getSafeLocale(Locale locale)", "class_method_signature": "DateUtils.getSafeLocale(Locale locale)", "testcase": false, "constructor": false}, {"identifier": "formatDate", "parameters": "(Date d, Locale locale)", "modifiers": "public static", "return": "String", "signature": "String formatDate(Date d, Locale locale)", "full_signature": "public static String formatDate(Date d, Locale locale)", "class_method_signature": "DateUtils.formatDate(Date d, Locale locale)", "testcase": false, "constructor": false}, {"identifier": "formatTime", "parameters": "(Date d, Locale locale, boolean withSeconds)", "modifiers": "public static", "return": "String", "signature": "String formatTime(Date d, Locale locale, boolean withSeconds)", "full_signature": "public static String formatTime(Date d, Locale locale, boolean withSeconds)", "class_method_signature": "DateUtils.formatTime(Date d, Locale locale, boolean withSeconds)", "testcase": false, "constructor": false}, {"identifier": "formatDayOfWeek", "parameters": "(Date d, Locale locale, boolean longFormat)", "modifiers": "public static", "return": "String", "signature": "String formatDayOfWeek(Date d, Locale locale, boolean longFormat)", "full_signature": "public static String formatDayOfWeek(Date d, Locale locale, boolean longFormat)", "class_method_signature": "DateUtils.formatDayOfWeek(Date d, Locale locale, boolean longFormat)", "testcase": false, "constructor": false}, {"identifier": "formatMonth", "parameters": "(Date d, Locale locale, boolean longFormat)", "modifiers": "public static", "return": "String", "signature": "String formatMonth(Date d, Locale locale, boolean longFormat)", "full_signature": "public static String formatMonth(Date d, Locale locale, boolean longFormat)", "class_method_signature": "DateUtils.formatMonth(Date d, Locale locale, boolean longFormat)", "testcase": false, "constructor": false}, {"identifier": "getWeekOfYear", "parameters": "(Date d, Locale locale)", "modifiers": "public static", "return": "int", "signature": "int getWeekOfYear(Date d, Locale locale)", "full_signature": "public static int getWeekOfYear(Date d, Locale locale)", "class_method_signature": "DateUtils.getWeekOfYear(Date d, Locale locale)", "testcase": false, "constructor": false}, {"identifier": "formatMonth", "parameters": "(int month, Locale locale, boolean longFormat)", "modifiers": "public static", "return": "String", "signature": "String formatMonth(int month, Locale locale, boolean longFormat)", "full_signature": "public static String formatMonth(int month, Locale locale, boolean longFormat)", "class_method_signature": "DateUtils.formatMonth(int month, Locale locale, boolean longFormat)", "testcase": false, "constructor": false}, {"identifier": "formatYear", "parameters": "(Date d, Locale locale)", "modifiers": "public static", "return": "String", "signature": "String formatYear(Date d, Locale locale)", "full_signature": "public static String formatYear(Date d, Locale locale)", "class_method_signature": "DateUtils.formatYear(Date d, Locale locale)", "testcase": false, "constructor": false}], "file": "empire-db/src/main/java/org/apache/empire/commons/DateUtils.java"}, "focal_method": {"identifier": "formatYear", "parameters": "(Date d, Locale locale)", "modifiers": "public static", "return": "String", "body": "public static String formatYear(Date d, Locale locale)\n    {\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy\", getSafeLocale(locale));\n        Calendar c = Calendar.getInstance(getSafeLocale(locale));\n        c.setTime(d);\n        return sdf.format(d);\n    }", "signature": "String formatYear(Date d, Locale locale)", "full_signature": "public static String formatYear(Date d, Locale locale)", "class_method_signature": "DateUtils.formatYear(Date d, Locale locale)", "testcase": false, "constructor": false, "invocations": ["getSafeLocale", "getInstance", "getSafeLocale", "setTime", "format"]}, "repository": {"repo_id": 2046220, "url": "https://github.com/apache/empire-db", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 24, "size": 13286, "license": "licensed"}}