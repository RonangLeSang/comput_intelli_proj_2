{"test_class": {"identifier": "EndOfSentenceValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EndOfSentenceValidator validator = new EndOfSentenceValidator();", "modifier": "private", "type": "EndOfSentenceValidator", "declarator": "validator = new EndOfSentenceValidator()", "var_name": "validator"}], "file": "redpen-core/src/test/java/cc/redpen/validator/sentence/EndOfSentenceValidatorTest.java"}, "test_case": {"identifier": "testInValidEndOfSentenceWithQuestionMark", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testInValidEndOfSentenceWithQuestionMark() {\n        List<ValidationError> errors = new ArrayList<>();\n        validator.setErrorList(errors);\n        validator.validate(new Sentence(\"He said \\\"Is it right\\\"?\", 0));\n        assertEquals(1, errors.size());\n    }", "signature": "void testInValidEndOfSentenceWithQuestionMark()", "full_signature": "@Test void testInValidEndOfSentenceWithQuestionMark()", "class_method_signature": "EndOfSentenceValidatorTest.testInValidEndOfSentenceWithQuestionMark()", "testcase": true, "constructor": false, "invocations": ["setErrorList", "validate", "assertEquals", "size"]}, "focal_class": {"identifier": "EndOfSentenceValidator", "superclass": "extends Validator", "interfaces": "", "fields": [{"original_string": "private char rightSingleQuotation;", "modifier": "private", "type": "char", "declarator": "rightSingleQuotation", "var_name": "rightSingleQuotation"}, {"original_string": "private char rightDoubleQuotation;", "modifier": "private", "type": "char", "declarator": "rightDoubleQuotation", "var_name": "rightDoubleQuotation"}, {"original_string": "private char period;", "modifier": "private", "type": "char", "declarator": "period", "var_name": "period"}, {"original_string": "private char questionMark;", "modifier": "private", "type": "char", "declarator": "questionMark", "var_name": "questionMark"}, {"original_string": "private char exclamationMark;", "modifier": "private", "type": "char", "declarator": "exclamationMark", "var_name": "exclamationMark"}], "methods": [{"identifier": "getSupportedLanguages", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getSupportedLanguages()", "full_signature": "@Override public List<String> getSupportedLanguages()", "class_method_signature": "EndOfSentenceValidator.getSupportedLanguages()", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(Sentence sentence)", "modifiers": "@Override public", "return": "void", "signature": "void validate(Sentence sentence)", "full_signature": "@Override public void validate(Sentence sentence)", "class_method_signature": "EndOfSentenceValidator.validate(Sentence sentence)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void init()", "full_signature": "@Override protected void init()", "class_method_signature": "EndOfSentenceValidator.init()", "testcase": false, "constructor": false}], "file": "redpen-core/src/main/java/cc/redpen/validator/sentence/EndOfSentenceValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(Sentence sentence)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validate(Sentence sentence) {\n        String content = sentence.getContent();\n        if (content.length() < 2) {\n            return;\n        }\n        char lastCharacter = content.charAt(content.length() - 1);\n        char secondCharacter = content.charAt(content.length() - 2);\n        if (lastCharacter == period\n                || lastCharacter == questionMark\n                || lastCharacter == exclamationMark) {\n            if (secondCharacter == rightSingleQuotation\n                    || secondCharacter == rightDoubleQuotation) {\n                addLocalizedErrorWithPosition(sentence,\n                        content.length() - 2,\n                        content.length() - 1, String.valueOf(secondCharacter) + lastCharacter);\n            }\n        }\n    }", "signature": "void validate(Sentence sentence)", "full_signature": "@Override public void validate(Sentence sentence)", "class_method_signature": "EndOfSentenceValidator.validate(Sentence sentence)", "testcase": false, "constructor": false, "invocations": ["getContent", "length", "charAt", "length", "charAt", "length", "addLocalizedErrorWithPosition", "length", "length", "valueOf"]}, "repository": {"repo_id": 13490595, "url": "https://github.com/redpen-cc/redpen", "language": "Java", "is_fork": false, "fork_count": 68, "stargazer_count": 438, "size": 9306, "license": "licensed"}}