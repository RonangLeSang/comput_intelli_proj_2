{"test_class": {"identifier": "LanguageDetectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LanguageDetector detector = new LanguageDetector();", "modifier": "private", "type": "LanguageDetector", "declarator": "detector = new LanguageDetector()", "var_name": "detector"}], "file": "redpen-core/src/test/java/cc/redpen/util/LanguageDetectorTest.java"}, "test_case": {"identifier": "KoreanUsesHangul", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void KoreanUsesHangul() throws Exception {\n    assertEquals(\"ko\", detector.detectLanguage(\"\uc548\ub155\ud558\uc138\uc694!\"));\n  }", "signature": "void KoreanUsesHangul()", "full_signature": "@Test void KoreanUsesHangul()", "class_method_signature": "LanguageDetectorTest.KoreanUsesHangul()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "detectLanguage"]}, "focal_class": {"identifier": "LanguageDetector", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "detectLanguage", "parameters": "(String text)", "modifiers": "public", "return": "String", "signature": "String detectLanguage(String text)", "full_signature": "public String detectLanguage(String text)", "class_method_signature": "LanguageDetector.detectLanguage(String text)", "testcase": false, "constructor": false}, {"identifier": "has", "parameters": "(String text, Predicate<Character> func)", "modifiers": "private", "return": "boolean", "signature": "boolean has(String text, Predicate<Character> func)", "full_signature": "private boolean has(String text, Predicate<Character> func)", "class_method_signature": "LanguageDetector.has(String text, Predicate<Character> func)", "testcase": false, "constructor": false}], "file": "redpen-core/src/main/java/cc/redpen/util/LanguageDetector.java"}, "focal_method": {"identifier": "detectLanguage", "parameters": "(String text)", "modifiers": "public", "return": "String", "body": "public String detectLanguage(String text) {\n    if (has(text, StringUtils::isProbablyJapanese)) {\n      boolean zenkaku = text.indexOf('\u3002') >= 0 || text.indexOf('\u3001') >= 0 || text.indexOf('\uff01') >= 0 || text.indexOf('\uff1f') >= 0;\n      boolean zenkaku2 = text.indexOf('\uff0e') >= 0 || text.indexOf('\uff0c') >= 0;\n      boolean hankaku = text.indexOf('.') >= 0 || text.indexOf(',') >= 0 || text.indexOf('!') >= 0 || text.indexOf('?') >= 0;\n\n      return zenkaku ? \"ja\" :\n        zenkaku2 ? \"ja.zenkaku2\" :\n        hankaku ? \"ja.hankaku\":\n        \"ja\";\n    }\n    else if (has(text, StringUtils::isCyrillic)) {\n      return \"ru\";\n    } else if (has(text, StringUtils::isKorean)) {\n      return \"ko\";\n    }\n\n    return \"en\";\n  }", "signature": "String detectLanguage(String text)", "full_signature": "public String detectLanguage(String text)", "class_method_signature": "LanguageDetector.detectLanguage(String text)", "testcase": false, "constructor": false, "invocations": ["has", "indexOf", "dexOf('", "xOf('\uff01'", "f('\uff1f') ", "indexOf", "dexOf('", "indexOf", "indexOf", "indexOf", "indexOf", "has", "has"]}, "repository": {"repo_id": 13490595, "url": "https://github.com/redpen-cc/redpen", "language": "Java", "is_fork": false, "fork_count": 68, "stargazer_count": 438, "size": 9306, "license": "licensed"}}