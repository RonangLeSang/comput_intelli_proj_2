{"test_class": {"identifier": "DoubledConjunctiveParticleGaValidatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "redpen-core/src/test/java/cc/redpen/validator/sentence/DoubledConjunctiveParticleGaValidatorTest.java"}, "test_case": {"identifier": "testInvalid", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testInvalid() throws Exception {\n        List<Document> documents = new ArrayList<>();\n        documents.add(Document.builder(new NeologdJapaneseTokenizer())\n                .addSection(1)\n                .addParagraph()\n                .addSentence(new Sentence(\"\u4eca\u65e5\u306f\u65e9\u671d\u304b\u3089\u51fa\u767a\u3057\u305f\u304c\u3001\u5b9a\u523b\u901a\u308a\u3067\u306f\u306a\u304b\u3063\u305f\u304c\u3001\u7121\u4e8b\u4f1a\u5834\u306b\u5230\u7740\u3057\u305f\u3002\", 1))\n                .build());\n\n        Configuration config = Configuration.builder(\"ja\")\n                .addValidatorConfig(new ValidatorConfiguration(\"DoubledConjunctiveParticleGa\"))\n                .build();\n\n        RedPen redPen = new RedPen(config);\n        Map<Document, List<ValidationError>> errors = redPen.validate(documents);\n        assertEquals(1, errors.get(documents.get(0)).size());\n    }", "signature": "void testInvalid()", "full_signature": "@Test void testInvalid()", "class_method_signature": "DoubledConjunctiveParticleGaValidatorTest.testInvalid()", "testcase": true, "constructor": false, "invocations": ["add", "build", "addSentence", "addParagraph", "addSection", "builder", "build", "addValidatorConfig", "builder", "validate", "assertEquals", "size", "get", "get"]}, "focal_class": {"identifier": "DoubledConjunctiveParticleGaValidator", "superclass": "extends Validator", "interfaces": "", "fields": [], "methods": [{"identifier": "validate", "parameters": "(Sentence sentence)", "modifiers": "@Override public", "return": "void", "signature": "void validate(Sentence sentence)", "full_signature": "@Override public void validate(Sentence sentence)", "class_method_signature": "DoubledConjunctiveParticleGaValidator.validate(Sentence sentence)", "testcase": false, "constructor": false}, {"identifier": "getSupportedLanguages", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getSupportedLanguages()", "full_signature": "@Override public List<String> getSupportedLanguages()", "class_method_signature": "DoubledConjunctiveParticleGaValidator.getSupportedLanguages()", "testcase": false, "constructor": false}], "file": "redpen-core/src/main/java/cc/redpen/validator/sentence/DoubledConjunctiveParticleGaValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(Sentence sentence)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validate(Sentence sentence) {\n        List<TokenElement> vec = new ArrayList<>();\n\n        for (TokenElement el : sentence.getTokens()) {\n            final List<String> t = el.getTags();\n            final String s = el.getSurface();\n            if (t.get(0).equals(\"\u52a9\u8a5e\") && t.get(1).equals(\"\u63a5\u7d9a\u52a9\u8a5e\") && s.equals(\"\u304c\")) {\n                vec.add(el);\n            }\n        }\n\n        if (vec.size() > 1) {\n            addLocalizedError(sentence, vec.get(0).getSurface());\n        }\n    }", "signature": "void validate(Sentence sentence)", "full_signature": "@Override public void validate(Sentence sentence)", "class_method_signature": "DoubledConjunctiveParticleGaValidator.validate(Sentence sentence)", "testcase": false, "constructor": false, "invocations": ["getTokens", "getTags", "getSurface", "equals", "get", "ls(\"\u63a5\u7d9a", "1).", " {", "add", "size", "addLocalizedError", "getSurface", "get"]}, "repository": {"repo_id": 13490595, "url": "https://github.com/redpen-cc/redpen", "language": "Java", "is_fork": false, "fork_count": 68, "stargazer_count": 438, "size": 9306, "license": "licensed"}}