{"test_class": {"identifier": "HeaderLengthValidatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "redpen-core/src/test/java/cc/redpen/validator/section/HeaderLengthValidatorTest.java"}, "test_case": {"identifier": "testSpecifyTheMaxLength", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testSpecifyTheMaxLength() throws RedPenException {\n        Configuration config = Configuration.builder()\n                .addValidatorConfig(new ValidatorConfiguration(\"HeaderLength\").addProperty(\"max_len\", \"10\")).build();\n        HeaderLengthValidator validator = (HeaderLengthValidator) ValidatorFactory.getInstance(config.getValidatorConfigs().get(0), config);\n        List<ValidationError> errors = new ArrayList<>();\n        validator.setErrorList(errors);\n        validator.validate(new Section(1, \"This is not a header\"));\n        assertEquals(1, errors.size());\n    }", "signature": "void testSpecifyTheMaxLength()", "full_signature": "@Test void testSpecifyTheMaxLength()", "class_method_signature": "HeaderLengthValidatorTest.testSpecifyTheMaxLength()", "testcase": true, "constructor": false, "invocations": ["build", "addValidatorConfig", "builder", "addProperty", "getInstance", "get", "getValidatorConfigs", "setErrorList", "validate", "assertEquals", "size"]}, "focal_class": {"identifier": "HeaderLengthValidator", "superclass": "extends Validator", "interfaces": "", "fields": [], "methods": [{"identifier": "HeaderLengthValidator", "parameters": "()", "modifiers": "public", "return": "", "signature": " HeaderLengthValidator()", "full_signature": "public  HeaderLengthValidator()", "class_method_signature": "HeaderLengthValidator.HeaderLengthValidator()", "testcase": false, "constructor": true}, {"identifier": "validate", "parameters": "(Section section)", "modifiers": "@Override public", "return": "void", "signature": "void validate(Section section)", "full_signature": "@Override public void validate(Section section)", "class_method_signature": "HeaderLengthValidator.validate(Section section)", "testcase": false, "constructor": false}], "file": "redpen-core/src/main/java/cc/redpen/validator/section/HeaderLengthValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(Section section)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validate(Section section) {\n        if (section.getLevel() >= getInt(\"min_level\")) {\n            return;\n        }\n\n        List<Sentence> headerContents = section.getHeaderContents();\n        int headerLength = headerContents.stream().map(s -> s.getContent().length()).reduce(0, (s, r) -> s + r);\n        if (headerLength > getInt(\"max_len\")) {\n            addLocalizedError(section.getJoinedHeaderContents(), getInt(\"max_len\"));\n        }\n    }", "signature": "void validate(Section section)", "full_signature": "@Override public void validate(Section section)", "class_method_signature": "HeaderLengthValidator.validate(Section section)", "testcase": false, "constructor": false, "invocations": ["getLevel", "getInt", "getHeaderContents", "reduce", "map", "stream", "length", "getContent", "getInt", "addLocalizedError", "getJoinedHeaderContents", "getInt"]}, "repository": {"repo_id": 13490595, "url": "https://github.com/redpen-cc/redpen", "language": "Java", "is_fork": false, "fork_count": 68, "stargazer_count": 438, "size": 9306, "license": "licensed"}}