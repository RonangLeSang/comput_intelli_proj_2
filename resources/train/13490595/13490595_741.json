{"test_class": {"identifier": "KatakanaEndHyphenValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private KatakanaEndHyphenValidator validator = new KatakanaEndHyphenValidator();", "modifier": "private", "type": "KatakanaEndHyphenValidator", "declarator": "validator = new KatakanaEndHyphenValidator()", "var_name": "validator"}], "file": "redpen-core/src/test/java/cc/redpen/validator/sentence/KatakanaEndHyphenValidatorTest.java"}, "test_case": {"identifier": "testKatakanaOfLength2", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testKatakanaOfLength2() {\n        Sentence str = new Sentence(\"\u30c9\u30a2\", 0);\n        List<ValidationError> errors = new ArrayList<>();\n        validator.setErrorList(errors);\n        validator.validate(str);\n        assertEquals(0, errors.size(), str.toString());\n    }", "signature": "void testKatakanaOfLength2()", "full_signature": "@Test void testKatakanaOfLength2()", "class_method_signature": "KatakanaEndHyphenValidatorTest.testKatakanaOfLength2()", "testcase": true, "constructor": false, "invocations": ["setErrorList", "validate", "assertEquals", "size", "toString"]}, "focal_class": {"identifier": "KatakanaEndHyphenValidator", "superclass": "extends DictionaryValidator", "interfaces": "", "fields": [{"original_string": "private static final int DEFAULT_KATAKANA_LIMIT_LENGTH = 3;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_KATAKANA_LIMIT_LENGTH = 3", "var_name": "DEFAULT_KATAKANA_LIMIT_LENGTH"}, {"original_string": "private static final char HYPHEN = '\u30fc';", "modifier": "private static final", "type": "char", "declarator": "HYPHEN = '\u30fc';", "var_name": "HYPHEN"}, {"original_string": "private static final char KATAKANA_MIDDLE_DOT = '\u30fb';", "modifier": "private static final", "type": "char", "declarator": "KATAKANA_MIDDLE_DOT = '\u30fb';", "var_name": "KATAKANA_MIDDLE_DOT"}], "methods": [{"identifier": "getSupportedLanguages", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getSupportedLanguages()", "full_signature": "@Override public List<String> getSupportedLanguages()", "class_method_signature": "KatakanaEndHyphenValidator.getSupportedLanguages()", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(Sentence sentence)", "modifiers": "@Override public", "return": "void", "signature": "void validate(Sentence sentence)", "full_signature": "@Override public void validate(Sentence sentence)", "class_method_signature": "KatakanaEndHyphenValidator.validate(Sentence sentence)", "testcase": false, "constructor": false}, {"identifier": "isKatakanaEndHyphen", "parameters": "(String katakana)", "modifiers": "public static", "return": "boolean", "signature": "boolean isKatakanaEndHyphen(String katakana)", "full_signature": "public static boolean isKatakanaEndHyphen(String katakana)", "class_method_signature": "KatakanaEndHyphenValidator.isKatakanaEndHyphen(String katakana)", "testcase": false, "constructor": false}, {"identifier": "checkCharacterBeforeHyphen", "parameters": "(char c)", "modifiers": "private static", "return": "boolean", "signature": "boolean checkCharacterBeforeHyphen(char c)", "full_signature": "private static boolean checkCharacterBeforeHyphen(char c)", "class_method_signature": "KatakanaEndHyphenValidator.checkCharacterBeforeHyphen(char c)", "testcase": false, "constructor": false}, {"identifier": "checkKatakanaEndHyphen", "parameters": "(Sentence sentence, String katakana, int position)", "modifiers": "private", "return": "void", "signature": "void checkKatakanaEndHyphen(Sentence sentence, String katakana, int position)", "full_signature": "private void checkKatakanaEndHyphen(Sentence sentence, String katakana, int position)", "class_method_signature": "KatakanaEndHyphenValidator.checkKatakanaEndHyphen(Sentence sentence, String katakana, int position)", "testcase": false, "constructor": false}], "file": "redpen-core/src/main/java/cc/redpen/validator/sentence/KatakanaEndHyphenValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(Sentence sentence)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validate(Sentence sentence) {\n        StringBuilder katakana = new StringBuilder();\n        for (int i = 0; i < sentence.getContent().length(); i++) {\n            char c = sentence.getContent().charAt(i);\n            if (StringUtils.isKatakana(c) && c != KATAKANA_MIDDLE_DOT) {\n                katakana.append(c);\n            } else {\n                this.checkKatakanaEndHyphen(sentence, katakana.toString(), i-1);\n                katakana.delete(0, katakana.length());\n            }\n        }\n        this.checkKatakanaEndHyphen(sentence, katakana.toString(), sentence.getContent().length() - 1);\n    }", "signature": "void validate(Sentence sentence)", "full_signature": "@Override public void validate(Sentence sentence)", "class_method_signature": "KatakanaEndHyphenValidator.validate(Sentence sentence)", "testcase": false, "constructor": false, "invocations": ["length", "getContent", "charAt", "getContent", "isKatakana", "append", "checkKatakanaEndHyphen", "toString", "delete", "length", "checkKatakanaEndHyphen", "toString", "length", "getContent"]}, "repository": {"repo_id": 13490595, "url": "https://github.com/redpen-cc/redpen", "language": "Java", "is_fork": false, "fork_count": 68, "stargazer_count": 438, "size": 9306, "license": "licensed"}}