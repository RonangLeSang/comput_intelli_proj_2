{"test_class": {"identifier": "ConfigurationExporterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ConfigurationExporter exporter = new ConfigurationExporter();", "modifier": "private", "type": "ConfigurationExporter", "declarator": "exporter = new ConfigurationExporter()", "var_name": "exporter"}, {"original_string": "private ByteArrayOutputStream out = new ByteArrayOutputStream();", "modifier": "private", "type": "ByteArrayOutputStream", "declarator": "out = new ByteArrayOutputStream()", "var_name": "out"}], "file": "redpen-core/src/test/java/cc/redpen/config/ConfigurationExporterTest.java"}, "test_case": {"identifier": "generatedConfigIsLoadable", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void generatedConfigIsLoadable() throws Exception {\n    String config = \"<redpen-conf lang=\\\"en\\\">\\n\" +\n      \"\t<validators>\\n\" +\n      \"\t\t<validator name=\\\"SentenceLength\\\">\\n\" +\n      \"\t\t\t<property name=\\\"max_len\\\" value=\\\"100\\\"/>\\n\" +\n      \"\t\t</validator>\\n\" +\n      \"\t\t<validator name=\\\"InvalidSymbol\\\"/>\\n\" +\n      \"\t</validators>\\n\" +\n      \"\t<symbols>\\n\" +\n      \"\t\t<symbol name=\\\"EXCLAMATION_MARK\\\" value=\\\"\uff01\\\" invalid-chars=\\\"!\\\" after-space=\\\"true\\\"/>\\n\" +\n      \"\t</symbols>\\n\" +\n      \"</redpen-conf>\";\n    Configuration configuration = new ConfigurationLoader().loadFromString(config);\n\n    exporter.export(configuration, out);\n\n    assertEquals(config, out.toString());\n  }", "signature": "void generatedConfigIsLoadable()", "full_signature": "@Test void generatedConfigIsLoadable()", "class_method_signature": "ConfigurationExporterTest.generatedConfigIsLoadable()", "testcase": true, "constructor": false, "invocations": ["loadFromString", "export", "assertEquals", "toString"]}, "focal_class": {"identifier": "ConfigurationExporter", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "export", "parameters": "(Configuration config, OutputStream out)", "modifiers": "public", "return": "void", "signature": "void export(Configuration config, OutputStream out)", "full_signature": "public void export(Configuration config, OutputStream out)", "class_method_signature": "ConfigurationExporter.export(Configuration config, OutputStream out)", "testcase": false, "constructor": false}, {"identifier": "addRoot", "parameters": "(Configuration config, XMLStreamWriter sax)", "modifiers": "private", "return": "void", "signature": "void addRoot(Configuration config, XMLStreamWriter sax)", "full_signature": "private void addRoot(Configuration config, XMLStreamWriter sax)", "class_method_signature": "ConfigurationExporter.addRoot(Configuration config, XMLStreamWriter sax)", "testcase": false, "constructor": false}, {"identifier": "addValidators", "parameters": "(List<ValidatorConfiguration> validators, XMLStreamWriter sax)", "modifiers": "private", "return": "void", "signature": "void addValidators(List<ValidatorConfiguration> validators, XMLStreamWriter sax)", "full_signature": "private void addValidators(List<ValidatorConfiguration> validators, XMLStreamWriter sax)", "class_method_signature": "ConfigurationExporter.addValidators(List<ValidatorConfiguration> validators, XMLStreamWriter sax)", "testcase": false, "constructor": false}, {"identifier": "addNonDefaultSymbols", "parameters": "(SymbolTable symbolTable, XMLStreamWriter sax)", "modifiers": "private", "return": "void", "signature": "void addNonDefaultSymbols(SymbolTable symbolTable, XMLStreamWriter sax)", "full_signature": "private void addNonDefaultSymbols(SymbolTable symbolTable, XMLStreamWriter sax)", "class_method_signature": "ConfigurationExporter.addNonDefaultSymbols(SymbolTable symbolTable, XMLStreamWriter sax)", "testcase": false, "constructor": false}], "file": "redpen-core/src/main/java/cc/redpen/config/ConfigurationExporter.java"}, "focal_method": {"identifier": "export", "parameters": "(Configuration config, OutputStream out)", "modifiers": "public", "return": "void", "body": "public void export(Configuration config, OutputStream out) {\n    try {\n      XMLOutputFactory sf = XMLOutputFactory.newInstance();\n      XMLStreamWriter sax = new IndentingXMLStreamWriter(sf.createXMLStreamWriter(new OutputStreamWriter(out, UTF_8)));\n\n      addRoot(config, sax);\n      addValidators(config.getValidatorConfigs(), sax);\n      addNonDefaultSymbols(config.getSymbolTable(), sax);\n\n      sax.writeEndElement();\n      sax.flush();\n    }\n    catch (XMLStreamException e) {\n      throw new RuntimeException(e);\n    }\n  }", "signature": "void export(Configuration config, OutputStream out)", "full_signature": "public void export(Configuration config, OutputStream out)", "class_method_signature": "ConfigurationExporter.export(Configuration config, OutputStream out)", "testcase": false, "constructor": false, "invocations": ["newInstance", "createXMLStreamWriter", "addRoot", "addValidators", "getValidatorConfigs", "addNonDefaultSymbols", "getSymbolTable", "writeEndElement", "flush"]}, "repository": {"repo_id": 13490595, "url": "https://github.com/redpen-cc/redpen", "language": "Java", "is_fork": false, "fork_count": 68, "stargazer_count": 438, "size": 9306, "license": "licensed"}}