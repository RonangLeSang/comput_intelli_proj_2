{"test_class": {"identifier": "FilterResolverTest", "superclass": "", "interfaces": "", "fields": [], "file": "spi/src/test/java/org/n52/io/request/FilterResolverTest.java"}, "test_case": {"identifier": "when_setAllDatasets_then_insituFilterActive", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void when_setAllDatasets_then_insituFilterActive() {\n        IoParameters parameters = createDefaults();\n        FilterResolver resolver = createResolver(parameters);\n        Assertions.assertFalse(resolver.hasInsituFilter());\n    }", "signature": "void when_setAllDatasets_then_insituFilterActive()", "full_signature": "@Test public void when_setAllDatasets_then_insituFilterActive()", "class_method_signature": "FilterResolverTest.when_setAllDatasets_then_insituFilterActive()", "testcase": true, "constructor": false, "invocations": ["createDefaults", "createResolver", "assertFalse", "hasInsituFilter"]}, "focal_class": {"identifier": "FilterResolver", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ALL = \"all\";", "modifier": "private static final", "type": "String", "declarator": "ALL = \"all\"", "var_name": "ALL"}, {"original_string": "private final IoParameters parameters;", "modifier": "private final", "type": "IoParameters", "declarator": "parameters", "var_name": "parameters"}], "methods": [{"identifier": "FilterResolver", "parameters": "(IoParameters parameters)", "modifiers": "public", "return": "", "signature": " FilterResolver(IoParameters parameters)", "full_signature": "public  FilterResolver(IoParameters parameters)", "class_method_signature": "FilterResolver.FilterResolver(IoParameters parameters)", "testcase": false, "constructor": true}, {"identifier": "shallBehaveBackwardsCompatible", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean shallBehaveBackwardsCompatible()", "full_signature": " boolean shallBehaveBackwardsCompatible()", "class_method_signature": "FilterResolver.shallBehaveBackwardsCompatible()", "testcase": false, "constructor": false}, {"identifier": "hasMobileFilter", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasMobileFilter()", "full_signature": "public boolean hasMobileFilter()", "class_method_signature": "FilterResolver.hasMobileFilter()", "testcase": false, "constructor": false}, {"identifier": "hasInsituFilter", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasInsituFilter()", "full_signature": "public boolean hasInsituFilter()", "class_method_signature": "FilterResolver.hasInsituFilter()", "testcase": false, "constructor": false}, {"identifier": "isMobileFilter", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isMobileFilter()", "full_signature": "public boolean isMobileFilter()", "class_method_signature": "FilterResolver.isMobileFilter()", "testcase": false, "constructor": false}, {"identifier": "isInsituFilter", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isInsituFilter()", "full_signature": "public boolean isInsituFilter()", "class_method_signature": "FilterResolver.isInsituFilter()", "testcase": false, "constructor": false}, {"identifier": "shallIncludeAllDatasets", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean shallIncludeAllDatasets()", "full_signature": "public boolean shallIncludeAllDatasets()", "class_method_signature": "FilterResolver.shallIncludeAllDatasets()", "testcase": false, "constructor": false}, {"identifier": "isSetPlatformTypeFilter", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSetPlatformTypeFilter()", "full_signature": "public boolean isSetPlatformTypeFilter()", "class_method_signature": "FilterResolver.isSetPlatformTypeFilter()", "testcase": false, "constructor": false}, {"identifier": "getDatasets", "parameters": "()", "modifiers": "@Deprecated private", "return": "Set<String>", "signature": "Set<String> getDatasets()", "full_signature": "@Deprecated private Set<String> getDatasets()", "class_method_signature": "FilterResolver.getDatasets()", "testcase": false, "constructor": false}, {"identifier": "getObservedGeometryTypes", "parameters": "()", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> getObservedGeometryTypes()", "full_signature": "private Set<String> getObservedGeometryTypes()", "class_method_signature": "FilterResolver.getObservedGeometryTypes()", "testcase": false, "constructor": false}, {"identifier": "getPlatformGeometryTypes", "parameters": "()", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> getPlatformGeometryTypes()", "full_signature": "private Set<String> getPlatformGeometryTypes()", "class_method_signature": "FilterResolver.getPlatformGeometryTypes()", "testcase": false, "constructor": false}, {"identifier": "shallIncludeAllDatasetTypes", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean shallIncludeAllDatasetTypes()", "full_signature": "public boolean shallIncludeAllDatasetTypes()", "class_method_signature": "FilterResolver.shallIncludeAllDatasetTypes()", "testcase": false, "constructor": false}, {"identifier": "shallIncludeDatasetType", "parameters": "(String datasetType)", "modifiers": "public", "return": "boolean", "signature": "boolean shallIncludeDatasetType(String datasetType)", "full_signature": "public boolean shallIncludeDatasetType(String datasetType)", "class_method_signature": "FilterResolver.shallIncludeDatasetType(String datasetType)", "testcase": false, "constructor": false}, {"identifier": "shallIncludeAllObservationTypes", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean shallIncludeAllObservationTypes()", "full_signature": "public boolean shallIncludeAllObservationTypes()", "class_method_signature": "FilterResolver.shallIncludeAllObservationTypes()", "testcase": false, "constructor": false}, {"identifier": "shallIncludeObservationType", "parameters": "(String observationType)", "modifiers": "public", "return": "boolean", "signature": "boolean shallIncludeObservationType(String observationType)", "full_signature": "public boolean shallIncludeObservationType(String observationType)", "class_method_signature": "FilterResolver.shallIncludeObservationType(String observationType)", "testcase": false, "constructor": false}, {"identifier": "shallIncludeAllValueTypes", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean shallIncludeAllValueTypes()", "full_signature": "public boolean shallIncludeAllValueTypes()", "class_method_signature": "FilterResolver.shallIncludeAllValueTypes()", "testcase": false, "constructor": false}, {"identifier": "shallIncludeValueType", "parameters": "(String valueType)", "modifiers": "public", "return": "boolean", "signature": "boolean shallIncludeValueType(String valueType)", "full_signature": "public boolean shallIncludeValueType(String valueType)", "class_method_signature": "FilterResolver.shallIncludeValueType(String valueType)", "testcase": false, "constructor": false}, {"identifier": "isSetDatasetTypeFilter", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isSetDatasetTypeFilter()", "full_signature": "private boolean isSetDatasetTypeFilter()", "class_method_signature": "FilterResolver.isSetDatasetTypeFilter()", "testcase": false, "constructor": false}, {"identifier": "isSetObservationTypeFilter", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isSetObservationTypeFilter()", "full_signature": "private boolean isSetObservationTypeFilter()", "class_method_signature": "FilterResolver.isSetObservationTypeFilter()", "testcase": false, "constructor": false}, {"identifier": "isSetValueTypeFilter", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isSetValueTypeFilter()", "full_signature": "private boolean isSetValueTypeFilter()", "class_method_signature": "FilterResolver.isSetValueTypeFilter()", "testcase": false, "constructor": false}], "file": "spi/src/main/java/org/n52/io/request/FilterResolver.java"}, "focal_method": {"identifier": "hasInsituFilter", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean hasInsituFilter() {\n        return parameters.getInsitu() != null;\n    }", "signature": "boolean hasInsituFilter()", "full_signature": "public boolean hasInsituFilter()", "class_method_signature": "FilterResolver.hasInsituFilter()", "testcase": false, "constructor": false, "invocations": ["getInsitu"]}, "repository": {"repo_id": 12555873, "url": "https://github.com/52North/series-rest-api", "stars": 18, "created": "9/3/2013 5:36:08 AM +00:00", "updates": "2020-01-21T07:38:26+00:00", "fork": "False", "license": "licensed"}}