{"test_class": {"identifier": "FsSettingsParserTest", "superclass": "extends AbstractFSCrawlerTestCase", "interfaces": "", "fields": [{"original_string": "private static final Ocr OCR_FULL = Ocr.builder().setLanguage(\"eng\").setOutputType(\"txt\").build();", "modifier": "private static final", "type": "Ocr", "declarator": "OCR_FULL = Ocr.builder().setLanguage(\"eng\").setOutputType(\"txt\").build()", "var_name": "OCR_FULL"}, {"original_string": "private static final Fs FS_EMPTY = Fs.builder().build();", "modifier": "private static final", "type": "Fs", "declarator": "FS_EMPTY = Fs.builder().build()", "var_name": "FS_EMPTY"}, {"original_string": "private static final Fs FS_FULL = Fs.builder()\n            .setUrl(\"/path/to/docs\")\n            .setStoreSource(true)\n            .setAddFilesize(true)\n            .addExclude(\"resume.doc\")\n            .addInclude(\"*.doc\")\n            .addInclude(\"*.xls\")\n            .addFilter(\"foo\")\n            .setFilenameAsId(true)\n            .setIndexedChars(new Percentage(10000))\n            .setRemoveDeleted(true)\n            .setUpdateRate(TimeValue.timeValueMinutes(5))\n            .setIndexContent(true)\n            .setOcr(OCR_FULL)\n            .build();", "modifier": "private static final", "type": "Fs", "declarator": "FS_FULL = Fs.builder()\n            .setUrl(\"/path/to/docs\")\n            .setStoreSource(true)\n            .setAddFilesize(true)\n            .addExclude(\"resume.doc\")\n            .addInclude(\"*.doc\")\n            .addInclude(\"*.xls\")\n            .addFilter(\"foo\")\n            .setFilenameAsId(true)\n            .setIndexedChars(new Percentage(10000))\n            .setRemoveDeleted(true)\n            .setUpdateRate(TimeValue.timeValueMinutes(5))\n            .setIndexContent(true)\n            .setOcr(OCR_FULL)\n            .build()", "var_name": "FS_FULL"}, {"original_string": "private static final Elasticsearch ELASTICSEARCH_EMPTY = Elasticsearch.builder().build();", "modifier": "private static final", "type": "Elasticsearch", "declarator": "ELASTICSEARCH_EMPTY = Elasticsearch.builder().build()", "var_name": "ELASTICSEARCH_EMPTY"}, {"original_string": "private static final Elasticsearch ELASTICSEARCH_FULL = Elasticsearch.builder()\n            .addNode(new ServerUrl(\"http://127.0.0.1\"))\n            .setUsername(\"elastic\")\n            .setPassword(\"changeme\")\n            .setBulkSize(1000)\n            .setFlushInterval(TimeValue.timeValueSeconds(5))\n            .setIndex(\"docs\")\n            .setPipeline(\"pipeline-id-if-any\")\n            .build();", "modifier": "private static final", "type": "Elasticsearch", "declarator": "ELASTICSEARCH_FULL = Elasticsearch.builder()\n            .addNode(new ServerUrl(\"http://127.0.0.1\"))\n            .setUsername(\"elastic\")\n            .setPassword(\"changeme\")\n            .setBulkSize(1000)\n            .setFlushInterval(TimeValue.timeValueSeconds(5))\n            .setIndex(\"docs\")\n            .setPipeline(\"pipeline-id-if-any\")\n            .build()", "var_name": "ELASTICSEARCH_FULL"}, {"original_string": "private static final Server SERVER_EMPTY = Server.builder().build();", "modifier": "private static final", "type": "Server", "declarator": "SERVER_EMPTY = Server.builder().build()", "var_name": "SERVER_EMPTY"}, {"original_string": "private static final Server SERVER_FULL = Server.builder()\n            .setHostname(\"127.0.0.1\")\n            .setUsername(\"dadoonet\")\n            .setPassword(\"WhATDidYOUexPECt?\")\n            .setPort(22)\n            .setProtocol(\"SSH\")\n            .setPemPath(\"/path/to/pemfile\")\n            .build();", "modifier": "private static final", "type": "Server", "declarator": "SERVER_FULL = Server.builder()\n            .setHostname(\"127.0.0.1\")\n            .setUsername(\"dadoonet\")\n            .setPassword(\"WhATDidYOUexPECt?\")\n            .setPort(22)\n            .setProtocol(\"SSH\")\n            .setPemPath(\"/path/to/pemfile\")\n            .build()", "var_name": "SERVER_FULL"}, {"original_string": "private static final Rest REST_FULL = Rest.builder()\n            .setEnableCors(false)\n            .setUrl(Rest.URL_DEFAULT)\n            .build();", "modifier": "private static final", "type": "Rest", "declarator": "REST_FULL = Rest.builder()\n            .setEnableCors(false)\n            .setUrl(Rest.URL_DEFAULT)\n            .build()", "var_name": "REST_FULL"}], "file": "settings/src/test/java/fr/pilato/elasticsearch/crawler/fs/settings/FsSettingsParserTest.java"}, "test_case": {"identifier": "testPasswordIsReadableFromYamlSettings", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPasswordIsReadableFromYamlSettings() throws IOException {\n        String yaml =\n                \"name: \\\"test_password_is_readable\\\"\\n\" +\n                \"fs:\\n\" +\n                \"  url: \\\"/path/to/docs\\\"\\n\" +\n                \"server:\\n\" +\n                \"  username: \\\"dadoonet\\\"\\n\" +\n                \"  password: \\\"\" + SERVER_FULL.getPassword() + \"\\\"\\n\" +\n                \"elasticsearch:\\n\" +\n                \"  username: \\\"username\\\"\\n\" +\n                \"  password: \\\"\" + ELASTICSEARCH_FULL.getPassword() + \"\\\"\\n\";\n\n        logger.info(\"-> testing settings: [{}]\", yaml);\n        checkPasswordSettings(FsSettingsParser.fromYaml(yaml));\n    }", "signature": "void testPasswordIsReadableFromYamlSettings()", "full_signature": "@Test public void testPasswordIsReadableFromYamlSettings()", "class_method_signature": "FsSettingsParserTest.testPasswordIsReadableFromYamlSettings()", "testcase": true, "constructor": false, "invocations": ["getPassword", "getPassword", "info", "checkPasswordSettings", "fromYaml"]}, "focal_class": {"identifier": "FsSettingsParser", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "toYaml", "parameters": "(FsSettings settings)", "modifiers": "public static", "return": "String", "signature": "String toYaml(FsSettings settings)", "full_signature": "public static String toYaml(FsSettings settings)", "class_method_signature": "FsSettingsParser.toYaml(FsSettings settings)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(String json)", "modifiers": "public static", "return": "FsSettings", "signature": "FsSettings fromJson(String json)", "full_signature": "public static FsSettings fromJson(String json)", "class_method_signature": "FsSettingsParser.fromJson(String json)", "testcase": false, "constructor": false}, {"identifier": "fromYaml", "parameters": "(String yaml)", "modifiers": "public static", "return": "FsSettings", "signature": "FsSettings fromYaml(String yaml)", "full_signature": "public static FsSettings fromYaml(String yaml)", "class_method_signature": "FsSettingsParser.fromYaml(String yaml)", "testcase": false, "constructor": false}], "file": "settings/src/main/java/fr/pilato/elasticsearch/crawler/fs/settings/FsSettingsParser.java"}, "focal_method": {"identifier": "fromYaml", "parameters": "(String yaml)", "modifiers": "public static", "return": "FsSettings", "body": "public static FsSettings fromYaml(String yaml) throws IOException {\n        return ymlMapper.readValue(yaml, FsSettings.class);\n    }", "signature": "FsSettings fromYaml(String yaml)", "full_signature": "public static FsSettings fromYaml(String yaml)", "class_method_signature": "FsSettingsParser.fromYaml(String yaml)", "testcase": false, "constructor": false, "invocations": ["readValue"]}, "repository": {"repo_id": 4600110, "url": "https://github.com/dadoonet/fscrawler", "stars": 716, "created": "6/8/2012 5:23:03 PM +00:00", "updates": "2020-01-25T22:05:52+00:00", "fork": "False", "license": "licensed"}}