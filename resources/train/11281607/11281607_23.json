{"test_class": {"identifier": "TyrusSessionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TyrusEndpointWrapper endpointWrapper;", "modifier": "private", "type": "TyrusEndpointWrapper", "declarator": "endpointWrapper", "var_name": "endpointWrapper"}], "file": "core/src/test/java/org/glassfish/tyrus/core/TyrusSessionTest.java"}, "test_case": {"identifier": "multiplePongHandlers", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n    public void multiplePongHandlers() {\n        Session session = createSession(endpointWrapper);\n\n        session.addMessageHandler(new MessageHandler.Whole<PongMessage>() {\n            @Override\n            public void onMessage(PongMessage message) {\n            }\n        });\n\n        session.addMessageHandler(new MessageHandler.Whole<PongMessage>() {\n            @Override\n            public void onMessage(PongMessage message) {\n            }\n        });\n    }", "signature": "void multiplePongHandlers()", "full_signature": "@Test(expected = IllegalStateException.class) public void multiplePongHandlers()", "class_method_signature": "TyrusSessionTest.multiplePongHandlers()", "testcase": true, "constructor": false, "invocations": ["createSession", "addMessageHandler", "addMessageHandler"]}, "focal_class": {"identifier": "TyrusSession", "superclass": "", "interfaces": "implements Session, DistributedSession", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(TyrusSession.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(TyrusSession.class.getName())", "var_name": "LOGGER"}, {"original_string": "private final WebSocketContainer container;", "modifier": "private final", "type": "WebSocketContainer", "declarator": "container", "var_name": "container"}, {"original_string": "private final TyrusEndpointWrapper endpointWrapper;", "modifier": "private final", "type": "TyrusEndpointWrapper", "declarator": "endpointWrapper", "var_name": "endpointWrapper"}, {"original_string": "private final TyrusRemoteEndpoint.Basic basicRemote;", "modifier": "private final", "type": "TyrusRemoteEndpoint.Basic", "declarator": "basicRemote", "var_name": "basicRemote"}, {"original_string": "private final TyrusRemoteEndpoint.Async asyncRemote;", "modifier": "private final", "type": "TyrusRemoteEndpoint.Async", "declarator": "asyncRemote", "var_name": "asyncRemote"}, {"original_string": "private final boolean isSecure;", "modifier": "private final", "type": "boolean", "declarator": "isSecure", "var_name": "isSecure"}, {"original_string": "private final URI requestURI;", "modifier": "private final", "type": "URI", "declarator": "requestURI", "var_name": "requestURI"}, {"original_string": "private final String queryString;", "modifier": "private final", "type": "String", "declarator": "queryString", "var_name": "queryString"}, {"original_string": "private final Map<String, String> pathParameters;", "modifier": "private final", "type": "Map<String, String>", "declarator": "pathParameters", "var_name": "pathParameters"}, {"original_string": "private final Principal userPrincipal;", "modifier": "private final", "type": "Principal", "declarator": "userPrincipal", "var_name": "userPrincipal"}, {"original_string": "private final Map<String, List<String>> requestParameterMap;", "modifier": "private final", "type": "Map<String, List<String>>", "declarator": "requestParameterMap", "var_name": "requestParameterMap"}, {"original_string": "private final Object idleTimeoutLock = new Object();", "modifier": "private final", "type": "Object", "declarator": "idleTimeoutLock = new Object()", "var_name": "idleTimeoutLock"}, {"original_string": "private final String id;", "modifier": "private final", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "private final String connectionId;", "modifier": "private final", "type": "String", "declarator": "connectionId", "var_name": "connectionId"}, {"original_string": "private final Map<String, Object> userProperties;", "modifier": "private final", "type": "Map<String, Object>", "declarator": "userProperties", "var_name": "userProperties"}, {"original_string": "private final MessageHandlerManager handlerManager;", "modifier": "private final", "type": "MessageHandlerManager", "declarator": "handlerManager", "var_name": "handlerManager"}, {"original_string": "private final AtomicReference<State> state = new AtomicReference<State>(State.RUNNING);", "modifier": "private final", "type": "AtomicReference<State>", "declarator": "state = new AtomicReference<State>(State.RUNNING)", "var_name": "state"}, {"original_string": "private final TextBuffer textBuffer = new TextBuffer();", "modifier": "private final", "type": "TextBuffer", "declarator": "textBuffer = new TextBuffer()", "var_name": "textBuffer"}, {"original_string": "private final BinaryBuffer binaryBuffer = new BinaryBuffer();", "modifier": "private final", "type": "BinaryBuffer", "declarator": "binaryBuffer = new BinaryBuffer()", "var_name": "binaryBuffer"}, {"original_string": "private final List<Extension> negotiatedExtensions;", "modifier": "private final", "type": "List<Extension>", "declarator": "negotiatedExtensions", "var_name": "negotiatedExtensions"}, {"original_string": "private final String negotiatedSubprotocol;", "modifier": "private final", "type": "String", "declarator": "negotiatedSubprotocol", "var_name": "negotiatedSubprotocol"}, {"original_string": "private final String remoteAddr;", "modifier": "private final", "type": "String", "declarator": "remoteAddr", "var_name": "remoteAddr"}, {"original_string": "private final DebugContext debugContext;", "modifier": "private final", "type": "DebugContext", "declarator": "debugContext", "var_name": "debugContext"}, {"original_string": "private final Map<RemoteSession.DistributedMapKey, Object> distributedPropertyMap;", "modifier": "private final", "type": "Map<RemoteSession.DistributedMapKey, Object>", "declarator": "distributedPropertyMap", "var_name": "distributedPropertyMap"}, {"original_string": "private final Map<String, Object> distributedUserProperties;", "modifier": "private final", "type": "Map<String, Object>", "declarator": "distributedUserProperties", "var_name": "distributedUserProperties"}, {"original_string": "private volatile long maxIdleTimeout = 0;", "modifier": "private volatile", "type": "long", "declarator": "maxIdleTimeout = 0", "var_name": "maxIdleTimeout"}, {"original_string": "private volatile ScheduledFuture<?> idleTimeoutFuture = null;", "modifier": "private volatile", "type": "ScheduledFuture<?>", "declarator": "idleTimeoutFuture = null", "var_name": "idleTimeoutFuture"}, {"original_string": "private int maxBinaryMessageBufferSize = Integer.MAX_VALUE;", "modifier": "private", "type": "int", "declarator": "maxBinaryMessageBufferSize = Integer.MAX_VALUE", "var_name": "maxBinaryMessageBufferSize"}, {"original_string": "private int maxTextMessageBufferSize = Integer.MAX_VALUE;", "modifier": "private", "type": "int", "declarator": "maxTextMessageBufferSize = Integer.MAX_VALUE", "var_name": "maxTextMessageBufferSize"}, {"original_string": "private ScheduledExecutorService service;", "modifier": "private", "type": "ScheduledExecutorService", "declarator": "service", "var_name": "service"}, {"original_string": "private ReaderBuffer readerBuffer;", "modifier": "private", "type": "ReaderBuffer", "declarator": "readerBuffer", "var_name": "readerBuffer"}, {"original_string": "private InputStreamBuffer inputStreamBuffer;", "modifier": "private", "type": "InputStreamBuffer", "declarator": "inputStreamBuffer", "var_name": "inputStreamBuffer"}, {"original_string": "private volatile long heartbeatInterval;", "modifier": "private volatile", "type": "long", "declarator": "heartbeatInterval", "var_name": "heartbeatInterval"}, {"original_string": "private volatile ScheduledFuture<?> heartbeatTask;", "modifier": "private volatile", "type": "ScheduledFuture<?>", "declarator": "heartbeatTask", "var_name": "heartbeatTask"}], "methods": [{"identifier": "TyrusSession", "parameters": "(WebSocketContainer container, TyrusWebSocket socket, TyrusEndpointWrapper endpointWrapper,\n                 String subprotocol, List<Extension> extensions, boolean isSecure,\n                 URI requestURI, String queryString, Map<String, String> pathParameters, Principal principal,\n                 Map<String, List<String>> requestParameterMap, final ClusterContext clusterContext,\n                 String connectionId, final String remoteAddr, DebugContext debugContext)", "modifiers": "", "return": "", "signature": " TyrusSession(WebSocketContainer container, TyrusWebSocket socket, TyrusEndpointWrapper endpointWrapper,\n                 String subprotocol, List<Extension> extensions, boolean isSecure,\n                 URI requestURI, String queryString, Map<String, String> pathParameters, Principal principal,\n                 Map<String, List<String>> requestParameterMap, final ClusterContext clusterContext,\n                 String connectionId, final String remoteAddr, DebugContext debugContext)", "full_signature": "  TyrusSession(WebSocketContainer container, TyrusWebSocket socket, TyrusEndpointWrapper endpointWrapper,\n                 String subprotocol, List<Extension> extensions, boolean isSecure,\n                 URI requestURI, String queryString, Map<String, String> pathParameters, Principal principal,\n                 Map<String, List<String>> requestParameterMap, final ClusterContext clusterContext,\n                 String connectionId, final String remoteAddr, DebugContext debugContext)", "class_method_signature": "TyrusSession.TyrusSession(WebSocketContainer container, TyrusWebSocket socket, TyrusEndpointWrapper endpointWrapper,\n                 String subprotocol, List<Extension> extensions, boolean isSecure,\n                 URI requestURI, String queryString, Map<String, String> pathParameters, Principal principal,\n                 Map<String, List<String>> requestParameterMap, final ClusterContext clusterContext,\n                 String connectionId, final String remoteAddr, DebugContext debugContext)", "testcase": false, "constructor": true}, {"identifier": "getProtocolVersion", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getProtocolVersion()", "full_signature": "@Override public String getProtocolVersion()", "class_method_signature": "TyrusSession.getProtocolVersion()", "testcase": false, "constructor": false}, {"identifier": "getNegotiatedSubprotocol", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getNegotiatedSubprotocol()", "full_signature": "@Override public String getNegotiatedSubprotocol()", "class_method_signature": "TyrusSession.getNegotiatedSubprotocol()", "testcase": false, "constructor": false}, {"identifier": "getAsyncRemote", "parameters": "()", "modifiers": "@Override public", "return": "javax.websocket.RemoteEndpoint.Async", "signature": "javax.websocket.RemoteEndpoint.Async getAsyncRemote()", "full_signature": "@Override public javax.websocket.RemoteEndpoint.Async getAsyncRemote()", "class_method_signature": "TyrusSession.getAsyncRemote()", "testcase": false, "constructor": false}, {"identifier": "getBasicRemote", "parameters": "()", "modifiers": "@Override public", "return": "javax.websocket.RemoteEndpoint.Basic", "signature": "javax.websocket.RemoteEndpoint.Basic getBasicRemote()", "full_signature": "@Override public javax.websocket.RemoteEndpoint.Basic getBasicRemote()", "class_method_signature": "TyrusSession.getBasicRemote()", "testcase": false, "constructor": false}, {"identifier": "isOpen", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isOpen()", "full_signature": "@Override public boolean isOpen()", "class_method_signature": "TyrusSession.isOpen()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "TyrusSession.close()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "(CloseReason closeReason)", "modifiers": "@Override public", "return": "void", "signature": "void close(CloseReason closeReason)", "full_signature": "@Override public void close(CloseReason closeReason)", "class_method_signature": "TyrusSession.close(CloseReason closeReason)", "testcase": false, "constructor": false}, {"identifier": "getMaxBinaryMessageBufferSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxBinaryMessageBufferSize()", "full_signature": "@Override public int getMaxBinaryMessageBufferSize()", "class_method_signature": "TyrusSession.getMaxBinaryMessageBufferSize()", "testcase": false, "constructor": false}, {"identifier": "setMaxBinaryMessageBufferSize", "parameters": "(int maxBinaryMessageBufferSize)", "modifiers": "@Override public", "return": "void", "signature": "void setMaxBinaryMessageBufferSize(int maxBinaryMessageBufferSize)", "full_signature": "@Override public void setMaxBinaryMessageBufferSize(int maxBinaryMessageBufferSize)", "class_method_signature": "TyrusSession.setMaxBinaryMessageBufferSize(int maxBinaryMessageBufferSize)", "testcase": false, "constructor": false}, {"identifier": "getMaxTextMessageBufferSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxTextMessageBufferSize()", "full_signature": "@Override public int getMaxTextMessageBufferSize()", "class_method_signature": "TyrusSession.getMaxTextMessageBufferSize()", "testcase": false, "constructor": false}, {"identifier": "setMaxTextMessageBufferSize", "parameters": "(int maxTextMessageBufferSize)", "modifiers": "@Override public", "return": "void", "signature": "void setMaxTextMessageBufferSize(int maxTextMessageBufferSize)", "full_signature": "@Override public void setMaxTextMessageBufferSize(int maxTextMessageBufferSize)", "class_method_signature": "TyrusSession.setMaxTextMessageBufferSize(int maxTextMessageBufferSize)", "testcase": false, "constructor": false}, {"identifier": "getOpenSessions", "parameters": "()", "modifiers": "@Override public", "return": "Set<Session>", "signature": "Set<Session> getOpenSessions()", "full_signature": "@Override public Set<Session> getOpenSessions()", "class_method_signature": "TyrusSession.getOpenSessions()", "testcase": false, "constructor": false}, {"identifier": "getRemoteSessions", "parameters": "()", "modifiers": "public", "return": "Set<RemoteSession>", "signature": "Set<RemoteSession> getRemoteSessions()", "full_signature": "public Set<RemoteSession> getRemoteSessions()", "class_method_signature": "TyrusSession.getRemoteSessions()", "testcase": false, "constructor": false}, {"identifier": "getAllSessions", "parameters": "()", "modifiers": "public", "return": "Set<DistributedSession>", "signature": "Set<DistributedSession> getAllSessions()", "full_signature": "public Set<DistributedSession> getAllSessions()", "class_method_signature": "TyrusSession.getAllSessions()", "testcase": false, "constructor": false}, {"identifier": "getNegotiatedExtensions", "parameters": "()", "modifiers": "@Override public", "return": "List<Extension>", "signature": "List<Extension> getNegotiatedExtensions()", "full_signature": "@Override public List<Extension> getNegotiatedExtensions()", "class_method_signature": "TyrusSession.getNegotiatedExtensions()", "testcase": false, "constructor": false}, {"identifier": "getMaxIdleTimeout", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getMaxIdleTimeout()", "full_signature": "@Override public long getMaxIdleTimeout()", "class_method_signature": "TyrusSession.getMaxIdleTimeout()", "testcase": false, "constructor": false}, {"identifier": "setMaxIdleTimeout", "parameters": "(long maxIdleTimeout)", "modifiers": "@Override public", "return": "void", "signature": "void setMaxIdleTimeout(long maxIdleTimeout)", "full_signature": "@Override public void setMaxIdleTimeout(long maxIdleTimeout)", "class_method_signature": "TyrusSession.setMaxIdleTimeout(long maxIdleTimeout)", "testcase": false, "constructor": false}, {"identifier": "isSecure", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSecure()", "full_signature": "@Override public boolean isSecure()", "class_method_signature": "TyrusSession.isSecure()", "testcase": false, "constructor": false}, {"identifier": "getContainer", "parameters": "()", "modifiers": "@Override public", "return": "WebSocketContainer", "signature": "WebSocketContainer getContainer()", "full_signature": "@Override public WebSocketContainer getContainer()", "class_method_signature": "TyrusSession.getContainer()", "testcase": false, "constructor": false}, {"identifier": "addMessageHandler", "parameters": "(MessageHandler handler)", "modifiers": "@Override public", "return": "void", "signature": "void addMessageHandler(MessageHandler handler)", "full_signature": "@Override public void addMessageHandler(MessageHandler handler)", "class_method_signature": "TyrusSession.addMessageHandler(MessageHandler handler)", "testcase": false, "constructor": false}, {"identifier": "addMessageHandler", "parameters": "(Class<T> clazz, MessageHandler.Whole<T> handler)", "modifiers": "@Override public", "return": "void", "signature": "void addMessageHandler(Class<T> clazz, MessageHandler.Whole<T> handler)", "full_signature": "@Override public void addMessageHandler(Class<T> clazz, MessageHandler.Whole<T> handler)", "class_method_signature": "TyrusSession.addMessageHandler(Class<T> clazz, MessageHandler.Whole<T> handler)", "testcase": false, "constructor": false}, {"identifier": "addMessageHandler", "parameters": "(Class<T> clazz, MessageHandler.Partial<T> handler)", "modifiers": "@Override public", "return": "void", "signature": "void addMessageHandler(Class<T> clazz, MessageHandler.Partial<T> handler)", "full_signature": "@Override public void addMessageHandler(Class<T> clazz, MessageHandler.Partial<T> handler)", "class_method_signature": "TyrusSession.addMessageHandler(Class<T> clazz, MessageHandler.Partial<T> handler)", "testcase": false, "constructor": false}, {"identifier": "getMessageHandlers", "parameters": "()", "modifiers": "@Override public", "return": "Set<MessageHandler>", "signature": "Set<MessageHandler> getMessageHandlers()", "full_signature": "@Override public Set<MessageHandler> getMessageHandlers()", "class_method_signature": "TyrusSession.getMessageHandlers()", "testcase": false, "constructor": false}, {"identifier": "removeMessageHandler", "parameters": "(MessageHandler handler)", "modifiers": "@Override public", "return": "void", "signature": "void removeMessageHandler(MessageHandler handler)", "full_signature": "@Override public void removeMessageHandler(MessageHandler handler)", "class_method_signature": "TyrusSession.removeMessageHandler(MessageHandler handler)", "testcase": false, "constructor": false}, {"identifier": "getRequestURI", "parameters": "()", "modifiers": "@Override public", "return": "URI", "signature": "URI getRequestURI()", "full_signature": "@Override public URI getRequestURI()", "class_method_signature": "TyrusSession.getRequestURI()", "testcase": false, "constructor": false}, {"identifier": "getRequestParameterMap", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, List<String>>", "signature": "Map<String, List<String>> getRequestParameterMap()", "full_signature": "@Override public Map<String, List<String>> getRequestParameterMap()", "class_method_signature": "TyrusSession.getRequestParameterMap()", "testcase": false, "constructor": false}, {"identifier": "getPathParameters", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getPathParameters()", "full_signature": "@Override public Map<String, String> getPathParameters()", "class_method_signature": "TyrusSession.getPathParameters()", "testcase": false, "constructor": false}, {"identifier": "getUserProperties", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> getUserProperties()", "full_signature": "@Override public Map<String, Object> getUserProperties()", "class_method_signature": "TyrusSession.getUserProperties()", "testcase": false, "constructor": false}, {"identifier": "getDistributedProperties", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> getDistributedProperties()", "full_signature": "@Override public Map<String, Object> getDistributedProperties()", "class_method_signature": "TyrusSession.getDistributedProperties()", "testcase": false, "constructor": false}, {"identifier": "getQueryString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getQueryString()", "full_signature": "@Override public String getQueryString()", "class_method_signature": "TyrusSession.getQueryString()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "TyrusSession.getId()", "testcase": false, "constructor": false}, {"identifier": "getUserPrincipal", "parameters": "()", "modifiers": "@Override public", "return": "Principal", "signature": "Principal getUserPrincipal()", "full_signature": "@Override public Principal getUserPrincipal()", "class_method_signature": "TyrusSession.getUserPrincipal()", "testcase": false, "constructor": false}, {"identifier": "broadcast", "parameters": "(String message)", "modifiers": "public", "return": "Map<Session, Future<?>>", "signature": "Map<Session, Future<?>> broadcast(String message)", "full_signature": "public Map<Session, Future<?>> broadcast(String message)", "class_method_signature": "TyrusSession.broadcast(String message)", "testcase": false, "constructor": false}, {"identifier": "broadcast", "parameters": "(ByteBuffer message)", "modifiers": "public", "return": "Map<Session, Future<?>>", "signature": "Map<Session, Future<?>> broadcast(ByteBuffer message)", "full_signature": "public Map<Session, Future<?>> broadcast(ByteBuffer message)", "class_method_signature": "TyrusSession.broadcast(ByteBuffer message)", "testcase": false, "constructor": false}, {"identifier": "getHeartbeatInterval", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getHeartbeatInterval()", "full_signature": "public long getHeartbeatInterval()", "class_method_signature": "TyrusSession.getHeartbeatInterval()", "testcase": false, "constructor": false}, {"identifier": "setHeartbeatInterval", "parameters": "(long heartbeatInterval)", "modifiers": "public", "return": "void", "signature": "void setHeartbeatInterval(long heartbeatInterval)", "full_signature": "public void setHeartbeatInterval(long heartbeatInterval)", "class_method_signature": "TyrusSession.setHeartbeatInterval(long heartbeatInterval)", "testcase": false, "constructor": false}, {"identifier": "restartIdleTimeoutExecutor", "parameters": "()", "modifiers": "", "return": "void", "signature": "void restartIdleTimeoutExecutor()", "full_signature": " void restartIdleTimeoutExecutor()", "class_method_signature": "TyrusSession.restartIdleTimeoutExecutor()", "testcase": false, "constructor": false}, {"identifier": "checkConnectionState", "parameters": "(State... states)", "modifiers": "private", "return": "void", "signature": "void checkConnectionState(State... states)", "full_signature": "private void checkConnectionState(State... states)", "class_method_signature": "TyrusSession.checkConnectionState(State... states)", "testcase": false, "constructor": false}, {"identifier": "checkMessageSize", "parameters": "(Object message, long maxMessageSize)", "modifiers": "private", "return": "void", "signature": "void checkMessageSize(Object message, long maxMessageSize)", "full_signature": "private void checkMessageSize(Object message, long maxMessageSize)", "class_method_signature": "TyrusSession.checkMessageSize(Object message, long maxMessageSize)", "testcase": false, "constructor": false}, {"identifier": "notifyMessageHandlers", "parameters": "(Object message, List<CoderWrapper<Decoder>> availableDecoders)", "modifiers": "", "return": "void", "signature": "void notifyMessageHandlers(Object message, List<CoderWrapper<Decoder>> availableDecoders)", "full_signature": " void notifyMessageHandlers(Object message, List<CoderWrapper<Decoder>> availableDecoders)", "class_method_signature": "TyrusSession.notifyMessageHandlers(Object message, List<CoderWrapper<Decoder>> availableDecoders)", "testcase": false, "constructor": false}, {"identifier": "getMessageHandler", "parameters": "(Class<T> c)", "modifiers": "", "return": "MessageHandler.Whole<T>", "signature": "MessageHandler.Whole<T> getMessageHandler(Class<T> c)", "full_signature": " MessageHandler.Whole<T> getMessageHandler(Class<T> c)", "class_method_signature": "TyrusSession.getMessageHandler(Class<T> c)", "testcase": false, "constructor": false}, {"identifier": "notifyMessageHandlers", "parameters": "(Object message, boolean last)", "modifiers": "", "return": "void", "signature": "void notifyMessageHandlers(Object message, boolean last)", "full_signature": " void notifyMessageHandlers(Object message, boolean last)", "class_method_signature": "TyrusSession.notifyMessageHandlers(Object message, boolean last)", "testcase": false, "constructor": false}, {"identifier": "notifyPongHandler", "parameters": "(PongMessage pongMessage)", "modifiers": "", "return": "void", "signature": "void notifyPongHandler(PongMessage pongMessage)", "full_signature": " void notifyPongHandler(PongMessage pongMessage)", "class_method_signature": "TyrusSession.notifyPongHandler(PongMessage pongMessage)", "testcase": false, "constructor": false}, {"identifier": "isWholeTextHandlerPresent", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isWholeTextHandlerPresent()", "full_signature": " boolean isWholeTextHandlerPresent()", "class_method_signature": "TyrusSession.isWholeTextHandlerPresent()", "testcase": false, "constructor": false}, {"identifier": "isWholeBinaryHandlerPresent", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isWholeBinaryHandlerPresent()", "full_signature": " boolean isWholeBinaryHandlerPresent()", "class_method_signature": "TyrusSession.isWholeBinaryHandlerPresent()", "testcase": false, "constructor": false}, {"identifier": "isPartialTextHandlerPresent", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isPartialTextHandlerPresent()", "full_signature": " boolean isPartialTextHandlerPresent()", "class_method_signature": "TyrusSession.isPartialTextHandlerPresent()", "testcase": false, "constructor": false}, {"identifier": "isPartialBinaryHandlerPresent", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isPartialBinaryHandlerPresent()", "full_signature": " boolean isPartialBinaryHandlerPresent()", "class_method_signature": "TyrusSession.isPartialBinaryHandlerPresent()", "testcase": false, "constructor": false}, {"identifier": "isReaderHandlerPresent", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isReaderHandlerPresent()", "full_signature": " boolean isReaderHandlerPresent()", "class_method_signature": "TyrusSession.isReaderHandlerPresent()", "testcase": false, "constructor": false}, {"identifier": "isInputStreamHandlerPresent", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isInputStreamHandlerPresent()", "full_signature": " boolean isInputStreamHandlerPresent()", "class_method_signature": "TyrusSession.isInputStreamHandlerPresent()", "testcase": false, "constructor": false}, {"identifier": "isPongHandlerPresent", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isPongHandlerPresent()", "full_signature": " boolean isPongHandlerPresent()", "class_method_signature": "TyrusSession.isPongHandlerPresent()", "testcase": false, "constructor": false}, {"identifier": "getState", "parameters": "()", "modifiers": "", "return": "State", "signature": "State getState()", "full_signature": " State getState()", "class_method_signature": "TyrusSession.getState()", "testcase": false, "constructor": false}, {"identifier": "getConnectionId", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getConnectionId()", "full_signature": " String getConnectionId()", "class_method_signature": "TyrusSession.getConnectionId()", "testcase": false, "constructor": false}, {"identifier": "getDebugContext", "parameters": "()", "modifiers": "", "return": "DebugContext", "signature": "DebugContext getDebugContext()", "full_signature": " DebugContext getDebugContext()", "class_method_signature": "TyrusSession.getDebugContext()", "testcase": false, "constructor": false}, {"identifier": "setState", "parameters": "(State state)", "modifiers": "", "return": "void", "signature": "void setState(State state)", "full_signature": " void setState(State state)", "class_method_signature": "TyrusSession.setState(State state)", "testcase": false, "constructor": false}, {"identifier": "getTextBuffer", "parameters": "()", "modifiers": "", "return": "TextBuffer", "signature": "TextBuffer getTextBuffer()", "full_signature": " TextBuffer getTextBuffer()", "class_method_signature": "TyrusSession.getTextBuffer()", "testcase": false, "constructor": false}, {"identifier": "getBinaryBuffer", "parameters": "()", "modifiers": "", "return": "BinaryBuffer", "signature": "BinaryBuffer getBinaryBuffer()", "full_signature": " BinaryBuffer getBinaryBuffer()", "class_method_signature": "TyrusSession.getBinaryBuffer()", "testcase": false, "constructor": false}, {"identifier": "getReaderBuffer", "parameters": "()", "modifiers": "", "return": "ReaderBuffer", "signature": "ReaderBuffer getReaderBuffer()", "full_signature": " ReaderBuffer getReaderBuffer()", "class_method_signature": "TyrusSession.getReaderBuffer()", "testcase": false, "constructor": false}, {"identifier": "setReaderBuffer", "parameters": "(ReaderBuffer readerBuffer)", "modifiers": "", "return": "void", "signature": "void setReaderBuffer(ReaderBuffer readerBuffer)", "full_signature": " void setReaderBuffer(ReaderBuffer readerBuffer)", "class_method_signature": "TyrusSession.setReaderBuffer(ReaderBuffer readerBuffer)", "testcase": false, "constructor": false}, {"identifier": "getInputStreamBuffer", "parameters": "()", "modifiers": "", "return": "InputStreamBuffer", "signature": "InputStreamBuffer getInputStreamBuffer()", "full_signature": " InputStreamBuffer getInputStreamBuffer()", "class_method_signature": "TyrusSession.getInputStreamBuffer()", "testcase": false, "constructor": false}, {"identifier": "setInputStreamBuffer", "parameters": "(InputStreamBuffer inputStreamBuffer)", "modifiers": "", "return": "void", "signature": "void setInputStreamBuffer(InputStreamBuffer inputStreamBuffer)", "full_signature": " void setInputStreamBuffer(InputStreamBuffer inputStreamBuffer)", "class_method_signature": "TyrusSession.setInputStreamBuffer(InputStreamBuffer inputStreamBuffer)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TyrusSession.toString()", "testcase": false, "constructor": false}, {"identifier": "changeStateToClosed", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void changeStateToClosed()", "full_signature": "private void changeStateToClosed()", "class_method_signature": "TyrusSession.changeStateToClosed()", "testcase": false, "constructor": false}, {"identifier": "cancelHeartBeatTask", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void cancelHeartBeatTask()", "full_signature": "private void cancelHeartBeatTask()", "class_method_signature": "TyrusSession.cancelHeartBeatTask()", "testcase": false, "constructor": false}, {"identifier": "cleanAfterClose", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void cleanAfterClose()", "full_signature": "private void cleanAfterClose()", "class_method_signature": "TyrusSession.cleanAfterClose()", "testcase": false, "constructor": false}, {"identifier": "getRemoteAddr", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRemoteAddr()", "full_signature": "public String getRemoteAddr()", "class_method_signature": "TyrusSession.getRemoteAddr()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/glassfish/tyrus/core/TyrusSession.java"}, "focal_method": {"identifier": "addMessageHandler", "parameters": "(MessageHandler handler)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void addMessageHandler(MessageHandler handler) {\n        checkConnectionState(State.CLOSED);\n        synchronized (handlerManager) {\n            handlerManager.addMessageHandler(handler);\n        }\n    }", "signature": "void addMessageHandler(MessageHandler handler)", "full_signature": "@Override public void addMessageHandler(MessageHandler handler)", "class_method_signature": "TyrusSession.addMessageHandler(MessageHandler handler)", "testcase": false, "constructor": false, "invocations": ["checkConnectionState", "addMessageHandler"]}, "repository": {"repo_id": 11281607, "url": "https://github.com/tyrus-project/tyrus", "language": "Java", "is_fork": false, "fork_count": 75, "stargazer_count": 168, "size": 11260, "license": "licensed"}}