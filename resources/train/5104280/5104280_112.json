{"test_class": {"identifier": "ActionServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private DrishtiService drishtiService;", "modifier": "@Mock\n    private", "type": "DrishtiService", "declarator": "drishtiService", "var_name": "drishtiService"}, {"original_string": "@Mock\n    private AllSettings allSettings;", "modifier": "@Mock\n    private", "type": "AllSettings", "declarator": "allSettings", "var_name": "allSettings"}, {"original_string": "@Mock\n    private AllSharedPreferences allSharedPreferences;", "modifier": "@Mock\n    private", "type": "AllSharedPreferences", "declarator": "allSharedPreferences", "var_name": "allSharedPreferences"}, {"original_string": "@Mock\n    private AllEligibleCouples allEligibleCouples;", "modifier": "@Mock\n    private", "type": "AllEligibleCouples", "declarator": "allEligibleCouples", "var_name": "allEligibleCouples"}, {"original_string": "@Mock\n    private AllReports allReports;", "modifier": "@Mock\n    private", "type": "AllReports", "declarator": "allReports", "var_name": "allReports"}, {"original_string": "@Mock\n    private ActionRouter actionRouter;", "modifier": "@Mock\n    private", "type": "ActionRouter", "declarator": "actionRouter", "var_name": "actionRouter"}, {"original_string": "private ActionService service;", "modifier": "private", "type": "ActionService", "declarator": "service", "var_name": "service"}], "file": "dristhi-app/src/test/java/org/ei/drishti/service/ActionServiceTest.java"}, "test_case": {"identifier": "shouldUpdatePreviousIndexWithIndexOfEachActionThatIsHandled", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldUpdatePreviousIndexWithIndexOfEachActionThatIsHandled() throws Exception {\n\n        Action firstAction = actionForCreateAlert(\"Case X\", \"normal\", \"mother\", \"Ante Natal Care - Normal\", \"ANC 1\", \"2012-01-01\", \"2012-01-22\", \"11111\");\n        Action secondAction = actionForCreateAlert(\"Case Y\", \"normal\", \"mother\", \"Ante Natal Care - Normal\", \"ANC 2\", \"2012-01-01\", \"2012-01-11\", \"12345\");\n\n        setupActions(success, asList(firstAction, secondAction));\n\n        service.fetchNewActions();\n\n        InOrder inOrder = inOrder(actionRouter, allSettings);\n        inOrder.verify(actionRouter).directAlertAction(firstAction);\n        inOrder.verify(allSettings).savePreviousFetchIndex(\"11111\");\n        inOrder.verify(actionRouter).directAlertAction(secondAction);\n        inOrder.verify(allSettings).savePreviousFetchIndex(\"12345\");\n    }", "signature": "void shouldUpdatePreviousIndexWithIndexOfEachActionThatIsHandled()", "full_signature": "@Test public void shouldUpdatePreviousIndexWithIndexOfEachActionThatIsHandled()", "class_method_signature": "ActionServiceTest.shouldUpdatePreviousIndexWithIndexOfEachActionThatIsHandled()", "testcase": true, "constructor": false, "invocations": ["actionForCreateAlert", "actionForCreateAlert", "setupActions", "asList", "fetchNewActions", "inOrder", "directAlertAction", "verify", "savePreviousFetchIndex", "verify", "directAlertAction", "verify", "savePreviousFetchIndex", "verify"]}, "focal_class": {"identifier": "ActionService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ActionRouter actionRouter;", "modifier": "private final", "type": "ActionRouter", "declarator": "actionRouter", "var_name": "actionRouter"}, {"original_string": "private DrishtiService drishtiService;", "modifier": "private", "type": "DrishtiService", "declarator": "drishtiService", "var_name": "drishtiService"}, {"original_string": "private AllSettings allSettings;", "modifier": "private", "type": "AllSettings", "declarator": "allSettings", "var_name": "allSettings"}, {"original_string": "private AllSharedPreferences allSharedPreference;", "modifier": "private", "type": "AllSharedPreferences", "declarator": "allSharedPreference", "var_name": "allSharedPreference"}, {"original_string": "private AllReports allReports;", "modifier": "private", "type": "AllReports", "declarator": "allReports", "var_name": "allReports"}], "methods": [{"identifier": "ActionService", "parameters": "(DrishtiService drishtiService, AllSettings allSettings, AllSharedPreferences allSharedPreferences, AllReports allReports)", "modifiers": "public", "return": "", "signature": " ActionService(DrishtiService drishtiService, AllSettings allSettings, AllSharedPreferences allSharedPreferences, AllReports allReports)", "full_signature": "public  ActionService(DrishtiService drishtiService, AllSettings allSettings, AllSharedPreferences allSharedPreferences, AllReports allReports)", "class_method_signature": "ActionService.ActionService(DrishtiService drishtiService, AllSettings allSettings, AllSharedPreferences allSharedPreferences, AllReports allReports)", "testcase": false, "constructor": true}, {"identifier": "ActionService", "parameters": "(DrishtiService drishtiService, AllSettings allSettings, AllSharedPreferences allSharedPreferences, AllReports allReports, ActionRouter actionRouter)", "modifiers": "public", "return": "", "signature": " ActionService(DrishtiService drishtiService, AllSettings allSettings, AllSharedPreferences allSharedPreferences, AllReports allReports, ActionRouter actionRouter)", "full_signature": "public  ActionService(DrishtiService drishtiService, AllSettings allSettings, AllSharedPreferences allSharedPreferences, AllReports allReports, ActionRouter actionRouter)", "class_method_signature": "ActionService.ActionService(DrishtiService drishtiService, AllSettings allSettings, AllSharedPreferences allSharedPreferences, AllReports allReports, ActionRouter actionRouter)", "testcase": false, "constructor": true}, {"identifier": "fetchNewActions", "parameters": "()", "modifiers": "public", "return": "FetchStatus", "signature": "FetchStatus fetchNewActions()", "full_signature": "public FetchStatus fetchNewActions()", "class_method_signature": "ActionService.fetchNewActions()", "testcase": false, "constructor": false}, {"identifier": "handleActions", "parameters": "(Response<List<Action>> response)", "modifiers": "private", "return": "void", "signature": "void handleActions(Response<List<Action>> response)", "full_signature": "private void handleActions(Response<List<Action>> response)", "class_method_signature": "ActionService.handleActions(Response<List<Action>> response)", "testcase": false, "constructor": false}, {"identifier": "handleAction", "parameters": "(Action actionToUse)", "modifiers": "private", "return": "void", "signature": "void handleAction(Action actionToUse)", "full_signature": "private void handleAction(Action actionToUse)", "class_method_signature": "ActionService.handleAction(Action actionToUse)", "testcase": false, "constructor": false}, {"identifier": "runAction", "parameters": "(Action action, ActionHandler actionHandler)", "modifiers": "private", "return": "void", "signature": "void runAction(Action action, ActionHandler actionHandler)", "full_signature": "private void runAction(Action action, ActionHandler actionHandler)", "class_method_signature": "ActionService.runAction(Action action, ActionHandler actionHandler)", "testcase": false, "constructor": false}], "file": "dristhi-app/src/main/java/org/ei/drishti/service/ActionService.java"}, "focal_method": {"identifier": "fetchNewActions", "parameters": "()", "modifiers": "public", "return": "FetchStatus", "body": "public FetchStatus fetchNewActions() {\n        String previousFetchIndex = allSettings.fetchPreviousFetchIndex();\n        Response<List<Action>> response = drishtiService.fetchNewActions(allSharedPreference.fetchRegisteredANM(), previousFetchIndex);\n\n        if (response.isFailure()) {\n            return fetchedFailed;\n        }\n\n        if (response.payload().isEmpty()) {\n            return nothingFetched;\n        }\n\n        handleActions(response);\n        return FetchStatus.fetched;\n    }", "signature": "FetchStatus fetchNewActions()", "full_signature": "public FetchStatus fetchNewActions()", "class_method_signature": "ActionService.fetchNewActions()", "testcase": false, "constructor": false, "invocations": ["fetchPreviousFetchIndex", "fetchNewActions", "fetchRegisteredANM", "isFailure", "isEmpty", "payload", "handleActions"]}, "repository": {"repo_id": 5104280, "url": "https://github.com/SEL-Columbia/dristhi-app", "language": "Java", "is_fork": false, "fork_count": 49, "stargazer_count": 11, "size": 79156, "license": "licensed"}}