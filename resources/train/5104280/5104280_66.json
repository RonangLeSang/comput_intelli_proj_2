{"test_class": {"identifier": "DrishtiServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private HTTPAgent httpAgent;", "modifier": "@Mock\n    private", "type": "HTTPAgent", "declarator": "httpAgent", "var_name": "httpAgent"}, {"original_string": "private DrishtiService drishtiService;", "modifier": "private", "type": "DrishtiService", "declarator": "drishtiService", "var_name": "drishtiService"}, {"original_string": "public static final String EXPECTED_URL = \"http://base.drishti.url/actions?anmIdentifier=anm1&timeStamp=0\";", "modifier": "public static final", "type": "String", "declarator": "EXPECTED_URL = \"http://base.drishti.url/actions?anmIdentifier=anm1&timeStamp=0\"", "var_name": "EXPECTED_URL"}], "file": "dristhi-app/src/test/java/org/ei/drishti/service/DrishtiServiceTest.java"}, "test_case": {"identifier": "shouldURLEncodeTheANMIdentifierPartWhenItHasASpace", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldURLEncodeTheANMIdentifierPartWhenItHasASpace() {\n        String expectedURLWithSpaces = \"http://base.drishti.url/actions?anmIdentifier=ANM+WITH+SPACE&timeStamp=0\";\n        when(httpAgent.fetch(expectedURLWithSpaces)).thenReturn(new Response<String>(ResponseStatus.success, \"[]\"));\n\n        drishtiService.fetchNewActions(\"ANM WITH SPACE\", \"0\");\n\n        verify(httpAgent).fetch(expectedURLWithSpaces);\n    }", "signature": "void shouldURLEncodeTheANMIdentifierPartWhenItHasASpace()", "full_signature": "@Test public void shouldURLEncodeTheANMIdentifierPartWhenItHasASpace()", "class_method_signature": "DrishtiServiceTest.shouldURLEncodeTheANMIdentifierPartWhenItHasASpace()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "fetch", "fetchNewActions", "fetch", "verify"]}, "focal_class": {"identifier": "DrishtiService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HTTPAgent agent = null;", "modifier": "private", "type": "HTTPAgent", "declarator": "agent = null", "var_name": "agent"}, {"original_string": "private String drishtiBaseURL;", "modifier": "private", "type": "String", "declarator": "drishtiBaseURL", "var_name": "drishtiBaseURL"}], "methods": [{"identifier": "DrishtiService", "parameters": "(HTTPAgent agent, String drishtiBaseURL)", "modifiers": "public", "return": "", "signature": " DrishtiService(HTTPAgent agent, String drishtiBaseURL)", "full_signature": "public  DrishtiService(HTTPAgent agent, String drishtiBaseURL)", "class_method_signature": "DrishtiService.DrishtiService(HTTPAgent agent, String drishtiBaseURL)", "testcase": false, "constructor": true}, {"identifier": "fetchNewActions", "parameters": "(String anmIdentifier, String previouslyFetchedIndex)", "modifiers": "public", "return": "Response<List<Action>>", "signature": "Response<List<Action>> fetchNewActions(String anmIdentifier, String previouslyFetchedIndex)", "full_signature": "public Response<List<Action>> fetchNewActions(String anmIdentifier, String previouslyFetchedIndex)", "class_method_signature": "DrishtiService.fetchNewActions(String anmIdentifier, String previouslyFetchedIndex)", "testcase": false, "constructor": false}], "file": "dristhi-app/src/main/java/org/ei/drishti/service/DrishtiService.java"}, "focal_method": {"identifier": "fetchNewActions", "parameters": "(String anmIdentifier, String previouslyFetchedIndex)", "modifiers": "public", "return": "Response<List<Action>>", "body": "public Response<List<Action>> fetchNewActions(String anmIdentifier, String previouslyFetchedIndex) {\n        String anmID = URLEncoder.encode(anmIdentifier);\n        Response<String> response = agent.fetch(drishtiBaseURL + \"/actions?anmIdentifier=\" + anmID + \"&timeStamp=\" + previouslyFetchedIndex);\n        Type collectionType = new TypeToken<List<Action>>() {\n        }.getType();\n        List<Action> actions;\n        try {\n            actions = new Gson().fromJson(response.payload(), collectionType);\n        } catch (JsonSyntaxException e) {\n            return new Response<List<Action>>(failure, new ArrayList<Action>());\n        }\n\n        return new Response<List<Action>>(response.status(), actions == null ? new ArrayList<Action>() : actions);\n    }", "signature": "Response<List<Action>> fetchNewActions(String anmIdentifier, String previouslyFetchedIndex)", "full_signature": "public Response<List<Action>> fetchNewActions(String anmIdentifier, String previouslyFetchedIndex)", "class_method_signature": "DrishtiService.fetchNewActions(String anmIdentifier, String previouslyFetchedIndex)", "testcase": false, "constructor": false, "invocations": ["encode", "fetch", "getType", "fromJson", "payload", "status"]}, "repository": {"repo_id": 5104280, "url": "https://github.com/SEL-Columbia/dristhi-app", "language": "Java", "is_fork": false, "fork_count": 49, "stargazer_count": 11, "size": 79156, "license": "licensed"}}