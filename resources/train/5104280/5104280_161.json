{"test_class": {"identifier": "ANCSmartRegisterControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String[] ANC_ALERTS = new String[]{\n            \"ANC 1\",\n            \"ANC 2\",\n            \"ANC 3\",\n            \"ANC 4\",\n            \"IFA 1\",\n            \"IFA 2\",\n            \"IFA 3\",\n            \"REMINDER\",\n            \"TT 1\",\n            \"TT 2\",\n            \"Hb Test 1\",\n            \"Hb Followup Test\",\n            \"Hb Test 2\",\n            \"Delivery Plan\"\n    };", "modifier": "public static final", "type": "String[]", "declarator": "ANC_ALERTS = new String[]{\n            \"ANC 1\",\n            \"ANC 2\",\n            \"ANC 3\",\n            \"ANC 4\",\n            \"IFA 1\",\n            \"IFA 2\",\n            \"IFA 3\",\n            \"REMINDER\",\n            \"TT 1\",\n            \"TT 2\",\n            \"Hb Test 1\",\n            \"Hb Followup Test\",\n            \"Hb Test 2\",\n            \"Delivery Plan\"\n    }", "var_name": "ANC_ALERTS"}, {"original_string": "public static final String[] ANC_SERVICES = new String[]{\n            \"IFA\",\n            \"TT 1\",\n            \"TT 2\",\n            \"TT Booster\",\n            \"Hb Test\",\n            \"ANC 1\",\n            \"ANC 2\",\n            \"ANC 3\",\n            \"ANC 4\",\n            \"Delivery Plan\"\n    };", "modifier": "public static final", "type": "String[]", "declarator": "ANC_SERVICES = new String[]{\n            \"IFA\",\n            \"TT 1\",\n            \"TT 2\",\n            \"TT Booster\",\n            \"Hb Test\",\n            \"ANC 1\",\n            \"ANC 2\",\n            \"ANC 3\",\n            \"ANC 4\",\n            \"Delivery Plan\"\n    }", "var_name": "ANC_SERVICES"}, {"original_string": "@Mock\n    private AllEligibleCouples allEligibleCouples;", "modifier": "@Mock\n    private", "type": "AllEligibleCouples", "declarator": "allEligibleCouples", "var_name": "allEligibleCouples"}, {"original_string": "@Mock\n    private AllBeneficiaries allBeneficiaries;", "modifier": "@Mock\n    private", "type": "AllBeneficiaries", "declarator": "allBeneficiaries", "var_name": "allBeneficiaries"}, {"original_string": "@Mock\n    private AlertService alertService;", "modifier": "@Mock\n    private", "type": "AlertService", "declarator": "alertService", "var_name": "alertService"}, {"original_string": "@Mock\n    private ServiceProvidedService sericeProvidedService;", "modifier": "@Mock\n    private", "type": "ServiceProvidedService", "declarator": "sericeProvidedService", "var_name": "sericeProvidedService"}, {"original_string": "private ANCSmartRegisterController controller;", "modifier": "private", "type": "ANCSmartRegisterController", "declarator": "controller", "var_name": "controller"}, {"original_string": "private Map<String, String> emptyMap;", "modifier": "private", "type": "Map<String, String>", "declarator": "emptyMap", "var_name": "emptyMap"}], "file": "dristhi-app/src/test/java/org/ei/drishti/view/controller/ANCSmartRegisterControllerTest.java"}, "test_case": {"identifier": "shouldSortANCsByWifeName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldSortANCsByWifeName() throws Exception {\n        Map<String, String> details = mapOf(\"edd\", \"Tue, 25 Feb 2014 00:00:00 GMT\");\n        EligibleCouple ec2 = new EligibleCouple(\"EC Case 2\", \"Woman B\", \"Husband B\", \"EC Number 2\", \"kavalu_hosur\", \"Bherya SC\", emptyMap);\n        EligibleCouple ec3 = new EligibleCouple(\"EC Case 3\", \"Woman C\", \"Husband C\", \"EC Number 3\", \"Bherya\", \"Bherya SC\", emptyMap);\n        EligibleCouple ec1 = new EligibleCouple(\"EC Case 1\", \"Woman A\", \"Husband A\", \"EC Number 1\", \"Bherya\", null, emptyMap);\n        Mother m1 = new Mother(\"Entity X\", \"EC Case 2\", \"thayi 1\", \"2013-05-25\").withDetails(details);\n        Mother m2 = new Mother(\"Entity Y\", \"EC Case 3\", \"thayi 2\", \"2013-05-25\").withDetails(details);\n        Mother m3 = new Mother(\"Entity Z\", \"EC Case 1\", \"thayi 3\", \"2013-05-25\").withDetails(details);\n        Map<String, Visits> serviceToVisitsMap = EasyMap.create(\"tt\", new Visits()).put(\"pnc\", new Visits()).put(\"ifa\", new Visits()).put(\"delivery_plan\", new Visits()).put(\"anc\", new Visits()).put(\"hb\", new Visits()).map();\n        ANCClient expectedClient1 = createANCClient(\"Entity Z\", \"Woman A\", \"Bherya\", \"thayi 3\", \"Tue, 25 Feb 2014 00:00:00 GMT\", \"2013-05-25\").withECNumber(\"EC Number 1\").withHusbandName(\"Husband A\").withEntityIdToSavePhoto(\"EC Case 1\").withServiceToVisitMap(serviceToVisitsMap).withHighRiskReason(\"\");\n        ANCClient expectedClient2 = createANCClient(\"Entity X\", \"Woman B\", \"kavalu_hosur\", \"thayi 1\", \"Tue, 25 Feb 2014 00:00:00 GMT\", \"2013-05-25\").withECNumber(\"EC Number 2\").withHusbandName(\"Husband B\").withEntityIdToSavePhoto(\"EC Case 2\").withServiceToVisitMap(serviceToVisitsMap).withHighRiskReason(\"\");\n        ANCClient expectedClient3 = createANCClient(\"Entity Y\", \"Woman C\", \"Bherya\", \"thayi 2\", \"Tue, 25 Feb 2014 00:00:00 GMT\", \"2013-05-25\").withECNumber(\"EC Number 3\").withHusbandName(\"Husband C\").withEntityIdToSavePhoto(\"EC Case 3\").withServiceToVisitMap(serviceToVisitsMap).withHighRiskReason(\"\");\n        when(allBeneficiaries.allANCsWithEC()).thenReturn(asList(Pair.of(m1, ec2), Pair.of(m2, ec3), Pair.of(m3, ec1)));\n\n        ANCClients actualClients = controller.getClients();\n\n        assertEquals(asList(expectedClient1, expectedClient2, expectedClient3), actualClients);\n    }", "signature": "void shouldSortANCsByWifeName()", "full_signature": "@Test public void shouldSortANCsByWifeName()", "class_method_signature": "ANCSmartRegisterControllerTest.shouldSortANCsByWifeName()", "testcase": true, "constructor": false, "invocations": ["mapOf", "withDetails", "withDetails", "withDetails", "map", "put", "put", "put", "put", "put", "create", "withHighRiskReason", "withServiceToVisitMap", "withEntityIdToSavePhoto", "withHusbandName", "withECNumber", "createANCClient", "withHighRiskReason", "withServiceToVisitMap", "withEntityIdToSavePhoto", "withHusbandName", "withECNumber", "createANCClient", "withHighRiskReason", "withServiceToVisitMap", "withEntityIdToSavePhoto", "withHusbandName", "withECNumber", "createANCClient", "thenReturn", "when", "allANCsWithEC", "asList", "of", "of", "of", "getClients", "assertEquals", "asList"]}, "focal_class": {"identifier": "ANCSmartRegisterController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ANC_1_ALERT_NAME = \"ANC 1\";", "modifier": "private static final", "type": "String", "declarator": "ANC_1_ALERT_NAME = \"ANC 1\"", "var_name": "ANC_1_ALERT_NAME"}, {"original_string": "private static final String ANC_2_ALERT_NAME = \"ANC 2\";", "modifier": "private static final", "type": "String", "declarator": "ANC_2_ALERT_NAME = \"ANC 2\"", "var_name": "ANC_2_ALERT_NAME"}, {"original_string": "private static final String ANC_3_ALERT_NAME = \"ANC 3\";", "modifier": "private static final", "type": "String", "declarator": "ANC_3_ALERT_NAME = \"ANC 3\"", "var_name": "ANC_3_ALERT_NAME"}, {"original_string": "private static final String ANC_4_ALERT_NAME = \"ANC 4\";", "modifier": "private static final", "type": "String", "declarator": "ANC_4_ALERT_NAME = \"ANC 4\"", "var_name": "ANC_4_ALERT_NAME"}, {"original_string": "private static final String IFA_1_ALERT_NAME = \"IFA 1\";", "modifier": "private static final", "type": "String", "declarator": "IFA_1_ALERT_NAME = \"IFA 1\"", "var_name": "IFA_1_ALERT_NAME"}, {"original_string": "private static final String IFA_2_ALERT_NAME = \"IFA 2\";", "modifier": "private static final", "type": "String", "declarator": "IFA_2_ALERT_NAME = \"IFA 2\"", "var_name": "IFA_2_ALERT_NAME"}, {"original_string": "private static final String IFA_3_ALERT_NAME = \"IFA 3\";", "modifier": "private static final", "type": "String", "declarator": "IFA_3_ALERT_NAME = \"IFA 3\"", "var_name": "IFA_3_ALERT_NAME"}, {"original_string": "private static final String LAB_REMINDER_ALERT_NAME = \"REMINDER\";", "modifier": "private static final", "type": "String", "declarator": "LAB_REMINDER_ALERT_NAME = \"REMINDER\"", "var_name": "LAB_REMINDER_ALERT_NAME"}, {"original_string": "private static final String TT_1_ALERT_NAME = \"TT 1\";", "modifier": "private static final", "type": "String", "declarator": "TT_1_ALERT_NAME = \"TT 1\"", "var_name": "TT_1_ALERT_NAME"}, {"original_string": "private static final String TT_2_ALERT_NAME = \"TT 2\";", "modifier": "private static final", "type": "String", "declarator": "TT_2_ALERT_NAME = \"TT 2\"", "var_name": "TT_2_ALERT_NAME"}, {"original_string": "private static final String HB_TEST_1_ALERT_NAME = \"Hb Test 1\";", "modifier": "private static final", "type": "String", "declarator": "HB_TEST_1_ALERT_NAME = \"Hb Test 1\"", "var_name": "HB_TEST_1_ALERT_NAME"}, {"original_string": "private static final String HB_TEST_2_ALERT_NAME = \"Hb Test 2\";", "modifier": "private static final", "type": "String", "declarator": "HB_TEST_2_ALERT_NAME = \"Hb Test 2\"", "var_name": "HB_TEST_2_ALERT_NAME"}, {"original_string": "private static final String HB_FOLLOWUP_TEST_ALERT_NAME = \"Hb Followup Test\";", "modifier": "private static final", "type": "String", "declarator": "HB_FOLLOWUP_TEST_ALERT_NAME = \"Hb Followup Test\"", "var_name": "HB_FOLLOWUP_TEST_ALERT_NAME"}, {"original_string": "private static final String DELIVERY_PLAN_ALERT_NAME = \"Delivery Plan\";", "modifier": "private static final", "type": "String", "declarator": "DELIVERY_PLAN_ALERT_NAME = \"Delivery Plan\"", "var_name": "DELIVERY_PLAN_ALERT_NAME"}, {"original_string": "private static final String ANC_CLIENTS_LIST = \"ANCClientList\";", "modifier": "private static final", "type": "String", "declarator": "ANC_CLIENTS_LIST = \"ANCClientList\"", "var_name": "ANC_CLIENTS_LIST"}, {"original_string": "private AllBeneficiaries allBeneficiaries;", "modifier": "private", "type": "AllBeneficiaries", "declarator": "allBeneficiaries", "var_name": "allBeneficiaries"}, {"original_string": "private AlertService alertService;", "modifier": "private", "type": "AlertService", "declarator": "alertService", "var_name": "alertService"}, {"original_string": "private Cache<String> cache;", "modifier": "private", "type": "Cache<String>", "declarator": "cache", "var_name": "cache"}, {"original_string": "private Cache<ANCClients> ancClientsCache;", "modifier": "private", "type": "Cache<ANCClients>", "declarator": "ancClientsCache", "var_name": "ancClientsCache"}, {"original_string": "private final ServiceProvidedService serviceProvidedService;", "modifier": "private final", "type": "ServiceProvidedService", "declarator": "serviceProvidedService", "var_name": "serviceProvidedService"}], "methods": [{"identifier": "ANCSmartRegisterController", "parameters": "(ServiceProvidedService serviceProvidedService, AlertService alertService,\n                                      AllBeneficiaries allBeneficiaries,\n                                      Cache<String> cache, Cache<ANCClients> ancClientsCache)", "modifiers": "public", "return": "", "signature": " ANCSmartRegisterController(ServiceProvidedService serviceProvidedService, AlertService alertService,\n                                      AllBeneficiaries allBeneficiaries,\n                                      Cache<String> cache, Cache<ANCClients> ancClientsCache)", "full_signature": "public  ANCSmartRegisterController(ServiceProvidedService serviceProvidedService, AlertService alertService,\n                                      AllBeneficiaries allBeneficiaries,\n                                      Cache<String> cache, Cache<ANCClients> ancClientsCache)", "class_method_signature": "ANCSmartRegisterController.ANCSmartRegisterController(ServiceProvidedService serviceProvidedService, AlertService alertService,\n                                      AllBeneficiaries allBeneficiaries,\n                                      Cache<String> cache, Cache<ANCClients> ancClientsCache)", "testcase": false, "constructor": true}, {"identifier": "getServicesProvided", "parameters": "(String entityId)", "modifiers": "private", "return": "List<ServiceProvidedDTO>", "signature": "List<ServiceProvidedDTO> getServicesProvided(String entityId)", "full_signature": "private List<ServiceProvidedDTO> getServicesProvided(String entityId)", "class_method_signature": "ANCSmartRegisterController.getServicesProvided(String entityId)", "testcase": false, "constructor": false}, {"identifier": "getAlerts", "parameters": "(String entityId)", "modifiers": "private", "return": "List<AlertDTO>", "signature": "List<AlertDTO> getAlerts(String entityId)", "full_signature": "private List<AlertDTO> getAlerts(String entityId)", "class_method_signature": "ANCSmartRegisterController.getAlerts(String entityId)", "testcase": false, "constructor": false}, {"identifier": "getClients", "parameters": "()", "modifiers": "public", "return": "ANCClients", "signature": "ANCClients getClients()", "full_signature": "public ANCClients getClients()", "class_method_signature": "ANCSmartRegisterController.getClients()", "testcase": false, "constructor": false}, {"identifier": "sortByName", "parameters": "(ANCClients ancClients)", "modifiers": "private", "return": "void", "signature": "void sortByName(ANCClients ancClients)", "full_signature": "private void sortByName(ANCClients ancClients)", "class_method_signature": "ANCSmartRegisterController.sortByName(ANCClients ancClients)", "testcase": false, "constructor": false}], "file": "dristhi-app/src/main/java/org/ei/drishti/view/controller/ANCSmartRegisterController.java"}, "focal_method": {"identifier": "getClients", "parameters": "()", "modifiers": "public", "return": "ANCClients", "body": "public ANCClients getClients() {\n        return ancClientsCache.get(ANC_CLIENTS_LIST, new CacheableData<ANCClients>() {\n            @Override\n            public ANCClients fetch() {\n                ANCClients ancClients = new ANCClients();\n                List<Pair<Mother, EligibleCouple>> ancsWithEcs = allBeneficiaries.allANCsWithEC();\n\n                for (Pair<Mother, EligibleCouple> ancWithEc : ancsWithEcs) {\n                    Mother anc = ancWithEc.getLeft();\n                    EligibleCouple ec = ancWithEc.getRight();\n                    String photoPath = isBlank(ec.photoPath()) ? DEFAULT_WOMAN_IMAGE_PLACEHOLDER_PATH : ec.photoPath();\n\n                    List<ServiceProvidedDTO> servicesProvided = getServicesProvided(anc.caseId());\n                    List<AlertDTO> alerts = getAlerts(anc.caseId());\n                    ANCClient ancClient = new ANCClient(anc.caseId(), ec.village(), ec.wifeName(), anc.thayiCardNumber(), anc.getDetail(AllConstants.ANCRegistrationFields.EDD), anc.referenceDate())\n                            .withHusbandName(ec.husbandName())\n                            .withAge(ec.age())\n                            .withECNumber(ec.ecNumber())\n                            .withANCNumber(anc.getDetail(AllConstants.ANCRegistrationFields.ANC_NUMBER))\n                            .withIsHighPriority(ec.isHighPriority())\n                            .withIsHighRisk(anc.isHighRisk())\n                            .withIsOutOfArea(ec.isOutOfArea())\n                            .withHighRiskReason(anc.highRiskReason())\n                            .withCaste(ec.getDetail(AllConstants.ECRegistrationFields.CASTE))\n                            .withEconomicStatus(ec.getDetail(AllConstants.ECRegistrationFields.ECONOMIC_STATUS))\n                            .withPhotoPath(photoPath)\n                            .withEntityIdToSavePhoto(ec.caseId())\n                            .withAlerts(alerts)\n                            .withAshaPhoneNumber(anc.getDetail(AllConstants.ANCRegistrationFields.ASHA_PHONE_NUMBER))\n                            .withServicesProvided(servicesProvided)\n                            .withPreProcess();\n                    ancClients.add(ancClient);\n                }\n                sortByName(ancClients);\n                return ancClients;\n            }\n        });\n    }", "signature": "ANCClients getClients()", "full_signature": "public ANCClients getClients()", "class_method_signature": "ANCSmartRegisterController.getClients()", "testcase": false, "constructor": false, "invocations": ["get", "allANCsWithEC", "getLeft", "getRight", "isBlank", "photoPath", "photoPath", "getServicesProvided", "caseId", "getAlerts", "caseId", "withPreProcess", "withServicesProvided", "withAshaPhoneNumber", "withAlerts", "withEntityIdToSavePhoto", "withPhotoPath", "withEconomicStatus", "withCaste", "withHighRiskReason", "withIsOutOfArea", "withIsHighRisk", "withIsHighPriority", "withANCNumber", "withECNumber", "withAge", "withHusbandName", "caseId", "village", "wifeName", "thayiCardNumber", "getDetail", "referenceDate", "husbandName", "age", "ecNumber", "getDetail", "isHighPriority", "isHighRisk", "isOutOfArea", "highRiskReason", "getDetail", "getDetail", "caseId", "getDetail", "add", "sortByName"]}, "repository": {"repo_id": 5104280, "url": "https://github.com/SEL-Columbia/dristhi-app", "language": "Java", "is_fork": false, "fork_count": 49, "stargazer_count": 11, "size": 79156, "license": "licensed"}}