{"test_class": {"identifier": "UserServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private Repository repository;", "modifier": "@Mock\n    private", "type": "Repository", "declarator": "repository", "var_name": "repository"}, {"original_string": "@Mock\n    private AllSettings allSettings;", "modifier": "@Mock\n    private", "type": "AllSettings", "declarator": "allSettings", "var_name": "allSettings"}, {"original_string": "@Mock\n    private AllSharedPreferences allSharedPreferences;", "modifier": "@Mock\n    private", "type": "AllSharedPreferences", "declarator": "allSharedPreferences", "var_name": "allSharedPreferences"}, {"original_string": "@Mock\n    private AllAlerts allAlerts;", "modifier": "@Mock\n    private", "type": "AllAlerts", "declarator": "allAlerts", "var_name": "allAlerts"}, {"original_string": "@Mock\n    private AllEligibleCouples allEligibleCouples;", "modifier": "@Mock\n    private", "type": "AllEligibleCouples", "declarator": "allEligibleCouples", "var_name": "allEligibleCouples"}, {"original_string": "@Mock\n    private Session session;", "modifier": "@Mock\n    private", "type": "Session", "declarator": "session", "var_name": "session"}, {"original_string": "@Mock\n    private HTTPAgent httpAgent;", "modifier": "@Mock\n    private", "type": "HTTPAgent", "declarator": "httpAgent", "var_name": "httpAgent"}, {"original_string": "@Mock\n    private DristhiConfiguration configuration;", "modifier": "@Mock\n    private", "type": "DristhiConfiguration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "@Mock\n    private SaveANMLocationTask saveANMLocationTask;", "modifier": "@Mock\n    private", "type": "SaveANMLocationTask", "declarator": "saveANMLocationTask", "var_name": "saveANMLocationTask"}, {"original_string": "private UserService userService;", "modifier": "private", "type": "UserService", "declarator": "userService", "var_name": "userService"}], "file": "dristhi-app/src/test/java/org/ei/drishti/service/UserServiceTest.java"}, "test_case": {"identifier": "shouldUseHttpAgentToDoRemoteLoginCheck", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldUseHttpAgentToDoRemoteLoginCheck() {\n        when(configuration.dristhiBaseURL()).thenReturn(\"http://dristhi_base_url\");\n\n        userService.isValidRemoteLogin(\"userX\", \"password Y\");\n\n        verify(httpAgent).urlCanBeAccessWithGivenCredentials(\"http://dristhi_base_url/anm-villages?anm-id=userX\", \"userX\", \"password Y\");\n    }", "signature": "void shouldUseHttpAgentToDoRemoteLoginCheck()", "full_signature": "@Test public void shouldUseHttpAgentToDoRemoteLoginCheck()", "class_method_signature": "UserServiceTest.shouldUseHttpAgentToDoRemoteLoginCheck()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "dristhiBaseURL", "isValidRemoteLogin", "urlCanBeAccessWithGivenCredentials", "verify"]}, "focal_class": {"identifier": "UserService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Repository repository;", "modifier": "private final", "type": "Repository", "declarator": "repository", "var_name": "repository"}, {"original_string": "private final AllSettings allSettings;", "modifier": "private final", "type": "AllSettings", "declarator": "allSettings", "var_name": "allSettings"}, {"original_string": "private final AllSharedPreferences allSharedPreferences;", "modifier": "private final", "type": "AllSharedPreferences", "declarator": "allSharedPreferences", "var_name": "allSharedPreferences"}, {"original_string": "private HTTPAgent httpAgent;", "modifier": "private", "type": "HTTPAgent", "declarator": "httpAgent", "var_name": "httpAgent"}, {"original_string": "private Session session;", "modifier": "private", "type": "Session", "declarator": "session", "var_name": "session"}, {"original_string": "private DristhiConfiguration configuration;", "modifier": "private", "type": "DristhiConfiguration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private SaveANMLocationTask saveANMLocationTask;", "modifier": "private", "type": "SaveANMLocationTask", "declarator": "saveANMLocationTask", "var_name": "saveANMLocationTask"}], "methods": [{"identifier": "UserService", "parameters": "(Repository repository, AllSettings allSettings, AllSharedPreferences allSharedPreferences, HTTPAgent httpAgent, Session session,\n                       DristhiConfiguration configuration, SaveANMLocationTask saveANMLocationTask)", "modifiers": "public", "return": "", "signature": " UserService(Repository repository, AllSettings allSettings, AllSharedPreferences allSharedPreferences, HTTPAgent httpAgent, Session session,\n                       DristhiConfiguration configuration, SaveANMLocationTask saveANMLocationTask)", "full_signature": "public  UserService(Repository repository, AllSettings allSettings, AllSharedPreferences allSharedPreferences, HTTPAgent httpAgent, Session session,\n                       DristhiConfiguration configuration, SaveANMLocationTask saveANMLocationTask)", "class_method_signature": "UserService.UserService(Repository repository, AllSettings allSettings, AllSharedPreferences allSharedPreferences, HTTPAgent httpAgent, Session session,\n                       DristhiConfiguration configuration, SaveANMLocationTask saveANMLocationTask)", "testcase": false, "constructor": true}, {"identifier": "isValidLocalLogin", "parameters": "(String userName, String password)", "modifiers": "public", "return": "boolean", "signature": "boolean isValidLocalLogin(String userName, String password)", "full_signature": "public boolean isValidLocalLogin(String userName, String password)", "class_method_signature": "UserService.isValidLocalLogin(String userName, String password)", "testcase": false, "constructor": false}, {"identifier": "isValidRemoteLogin", "parameters": "(String userName, String password)", "modifiers": "public", "return": "LoginResponse", "signature": "LoginResponse isValidRemoteLogin(String userName, String password)", "full_signature": "public LoginResponse isValidRemoteLogin(String userName, String password)", "class_method_signature": "UserService.isValidRemoteLogin(String userName, String password)", "testcase": false, "constructor": false}, {"identifier": "loginWith", "parameters": "(String userName, String password)", "modifiers": "private", "return": "void", "signature": "void loginWith(String userName, String password)", "full_signature": "private void loginWith(String userName, String password)", "class_method_signature": "UserService.loginWith(String userName, String password)", "testcase": false, "constructor": false}, {"identifier": "localLogin", "parameters": "(String userName, String password)", "modifiers": "public", "return": "void", "signature": "void localLogin(String userName, String password)", "full_signature": "public void localLogin(String userName, String password)", "class_method_signature": "UserService.localLogin(String userName, String password)", "testcase": false, "constructor": false}, {"identifier": "remoteLogin", "parameters": "(String userName, String password, String anmLocation)", "modifiers": "public", "return": "void", "signature": "void remoteLogin(String userName, String password, String anmLocation)", "full_signature": "public void remoteLogin(String userName, String password, String anmLocation)", "class_method_signature": "UserService.remoteLogin(String userName, String password, String anmLocation)", "testcase": false, "constructor": false}, {"identifier": "hasARegisteredUser", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasARegisteredUser()", "full_signature": "public boolean hasARegisteredUser()", "class_method_signature": "UserService.hasARegisteredUser()", "testcase": false, "constructor": false}, {"identifier": "logout", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void logout()", "full_signature": "public void logout()", "class_method_signature": "UserService.logout()", "testcase": false, "constructor": false}, {"identifier": "logoutSession", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void logoutSession()", "full_signature": "public void logoutSession()", "class_method_signature": "UserService.logoutSession()", "testcase": false, "constructor": false}, {"identifier": "hasSessionExpired", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasSessionExpired()", "full_signature": "public boolean hasSessionExpired()", "class_method_signature": "UserService.hasSessionExpired()", "testcase": false, "constructor": false}, {"identifier": "setupContextForLogin", "parameters": "(String userName, String password)", "modifiers": "protected", "return": "void", "signature": "void setupContextForLogin(String userName, String password)", "full_signature": "protected void setupContextForLogin(String userName, String password)", "class_method_signature": "UserService.setupContextForLogin(String userName, String password)", "testcase": false, "constructor": false}, {"identifier": "session", "parameters": "()", "modifiers": "protected", "return": "Session", "signature": "Session session()", "full_signature": "protected Session session()", "class_method_signature": "UserService.session()", "testcase": false, "constructor": false}, {"identifier": "switchLanguagePreference", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String switchLanguagePreference()", "full_signature": "public String switchLanguagePreference()", "class_method_signature": "UserService.switchLanguagePreference()", "testcase": false, "constructor": false}], "file": "dristhi-app/src/main/java/org/ei/drishti/service/UserService.java"}, "focal_method": {"identifier": "isValidRemoteLogin", "parameters": "(String userName, String password)", "modifiers": "public", "return": "LoginResponse", "body": "public LoginResponse isValidRemoteLogin(String userName, String password) {\n        String requestURL = configuration.dristhiBaseURL() + AUTHENTICATE_USER_URL_PATH + userName;\n        return httpAgent.urlCanBeAccessWithGivenCredentials(requestURL, userName, password);\n    }", "signature": "LoginResponse isValidRemoteLogin(String userName, String password)", "full_signature": "public LoginResponse isValidRemoteLogin(String userName, String password)", "class_method_signature": "UserService.isValidRemoteLogin(String userName, String password)", "testcase": false, "constructor": false, "invocations": ["dristhiBaseURL", "urlCanBeAccessWithGivenCredentials"]}, "repository": {"repo_id": 5104280, "url": "https://github.com/SEL-Columbia/dristhi-app", "language": "Java", "is_fork": false, "fork_count": 49, "stargazer_count": 11, "size": 79156, "license": "licensed"}}