{"test_class": {"identifier": "MultiRescorerProviderTest", "superclass": "extends OryxTest", "interfaces": "", "fields": [], "file": "als-serving/src/test/java/com/cloudera/oryx/als/serving/MultiRescorerProviderTest.java"}, "test_case": {"identifier": "testMultiRecommendToAnonymousRescorer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testMultiRecommendToAnonymousRescorer() {\n    RescorerProvider multi = \n        new MultiRescorerProvider(new SimpleModRescorerProvider(2), new SimpleModRescorerProvider(3));\n    \n    Rescorer provider = multi.getRecommendToAnonymousRescorer(new String[]{\"ABCDE\"}, null);\n    assertNull(provider);\n    \n    provider = multi.getRecommendToAnonymousRescorer(new String[]{\"AB\"}, null);\n    assertNotNull(provider);\n    assertFalse(provider instanceof MultiRescorer);\n    assertTrue(provider.isFiltered(\"ABC\"));\n    assertFalse(provider.isFiltered(\"AB\"));\n\n    provider = multi.getRecommendToAnonymousRescorer(new String[]{\"ABCDEF\"}, null);\n    assertNotNull(provider);\n    assertTrue(provider instanceof MultiRescorer);\n    assertTrue(provider.isFiltered(\"ABC\"));\n    assertTrue(provider.isFiltered(\"AB\"));\n    assertFalse(provider.isFiltered(\"ABCDEF\"));\n  }", "signature": "void testMultiRecommendToAnonymousRescorer()", "full_signature": "@Test public void testMultiRecommendToAnonymousRescorer()", "class_method_signature": "MultiRescorerProviderTest.testMultiRecommendToAnonymousRescorer()", "testcase": true, "constructor": false, "invocations": ["getRecommendToAnonymousRescorer", "assertNull", "getRecommendToAnonymousRescorer", "assertNotNull", "assertFalse", "assertTrue", "isFiltered", "assertFalse", "isFiltered", "getRecommendToAnonymousRescorer", "assertNotNull", "assertTrue", "assertTrue", "isFiltered", "assertTrue", "isFiltered", "assertFalse", "isFiltered"]}, "focal_class": {"identifier": "MultiRescorerProvider", "superclass": "extends AbstractRescorerProvider", "interfaces": "", "fields": [{"original_string": "private final RescorerProvider[] providers;", "modifier": "private final", "type": "RescorerProvider[]", "declarator": "providers", "var_name": "providers"}], "methods": [{"identifier": "MultiRescorerProvider", "parameters": "(RescorerProvider... providers)", "modifiers": "public", "return": "", "signature": " MultiRescorerProvider(RescorerProvider... providers)", "full_signature": "public  MultiRescorerProvider(RescorerProvider... providers)", "class_method_signature": "MultiRescorerProvider.MultiRescorerProvider(RescorerProvider... providers)", "testcase": false, "constructor": true}, {"identifier": "MultiRescorerProvider", "parameters": "(List<RescorerProvider> providers)", "modifiers": "public", "return": "", "signature": " MultiRescorerProvider(List<RescorerProvider> providers)", "full_signature": "public  MultiRescorerProvider(List<RescorerProvider> providers)", "class_method_signature": "MultiRescorerProvider.MultiRescorerProvider(List<RescorerProvider> providers)", "testcase": false, "constructor": true}, {"identifier": "getRecommendRescorer", "parameters": "(String[] userIDs, OryxRecommender recommender, String... args)", "modifiers": "@Override public", "return": "Rescorer", "signature": "Rescorer getRecommendRescorer(String[] userIDs, OryxRecommender recommender, String... args)", "full_signature": "@Override public Rescorer getRecommendRescorer(String[] userIDs, OryxRecommender recommender, String... args)", "class_method_signature": "MultiRescorerProvider.getRecommendRescorer(String[] userIDs, OryxRecommender recommender, String... args)", "testcase": false, "constructor": false}, {"identifier": "getRecommendToAnonymousRescorer", "parameters": "(String[] itemIDs, OryxRecommender recommender, String... args)", "modifiers": "@Override public", "return": "Rescorer", "signature": "Rescorer getRecommendToAnonymousRescorer(String[] itemIDs, OryxRecommender recommender, String... args)", "full_signature": "@Override public Rescorer getRecommendToAnonymousRescorer(String[] itemIDs, OryxRecommender recommender, String... args)", "class_method_signature": "MultiRescorerProvider.getRecommendToAnonymousRescorer(String[] itemIDs, OryxRecommender recommender, String... args)", "testcase": false, "constructor": false}, {"identifier": "getMostPopularItemsRescorer", "parameters": "(OryxRecommender recommender, String... args)", "modifiers": "@Override public", "return": "Rescorer", "signature": "Rescorer getMostPopularItemsRescorer(OryxRecommender recommender, String... args)", "full_signature": "@Override public Rescorer getMostPopularItemsRescorer(OryxRecommender recommender, String... args)", "class_method_signature": "MultiRescorerProvider.getMostPopularItemsRescorer(OryxRecommender recommender, String... args)", "testcase": false, "constructor": false}, {"identifier": "buildRescorer", "parameters": "(List<Rescorer> rescorers)", "modifiers": "private static", "return": "Rescorer", "signature": "Rescorer buildRescorer(List<Rescorer> rescorers)", "full_signature": "private static Rescorer buildRescorer(List<Rescorer> rescorers)", "class_method_signature": "MultiRescorerProvider.buildRescorer(List<Rescorer> rescorers)", "testcase": false, "constructor": false}, {"identifier": "getMostSimilarItemsRescorer", "parameters": "(OryxRecommender recommender, String... args)", "modifiers": "@Override public", "return": "PairRescorer", "signature": "PairRescorer getMostSimilarItemsRescorer(OryxRecommender recommender, String... args)", "full_signature": "@Override public PairRescorer getMostSimilarItemsRescorer(OryxRecommender recommender, String... args)", "class_method_signature": "MultiRescorerProvider.getMostSimilarItemsRescorer(OryxRecommender recommender, String... args)", "testcase": false, "constructor": false}], "file": "als-serving/src/main/java/com/cloudera/oryx/als/serving/MultiRescorerProvider.java"}, "focal_method": {"identifier": "getRecommendToAnonymousRescorer", "parameters": "(String[] itemIDs, OryxRecommender recommender, String... args)", "modifiers": "@Override public", "return": "Rescorer", "body": "@Override\n  public Rescorer getRecommendToAnonymousRescorer(String[] itemIDs, OryxRecommender recommender, String... args) {\n    List<Rescorer> rescorers = Lists.newArrayListWithCapacity(providers.length);\n    for (RescorerProvider provider : providers) {\n      Rescorer rescorer = provider.getRecommendToAnonymousRescorer(itemIDs, recommender, args);\n      if (rescorer != null) {\n        rescorers.add(rescorer);\n      }\n    }\n    return buildRescorer(rescorers);  \n  }", "signature": "Rescorer getRecommendToAnonymousRescorer(String[] itemIDs, OryxRecommender recommender, String... args)", "full_signature": "@Override public Rescorer getRecommendToAnonymousRescorer(String[] itemIDs, OryxRecommender recommender, String... args)", "class_method_signature": "MultiRescorerProvider.getRecommendToAnonymousRescorer(String[] itemIDs, OryxRecommender recommender, String... args)", "testcase": false, "constructor": false, "invocations": ["newArrayListWithCapacity", "getRecommendToAnonymousRescorer", "add", "buildRescorer"]}, "repository": {"repo_id": 14333932, "url": "https://github.com/apsaltis/oryx", "language": "Java", "is_fork": false, "fork_count": 382, "stargazer_count": 7, "size": 64, "license": "licensed"}}