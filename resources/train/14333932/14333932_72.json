{"test_class": {"identifier": "LangUtilsTest", "superclass": "extends OryxTest", "interfaces": "", "fields": [], "file": "common/src/test/java/com/cloudera/oryx/common/LangUtilsTest.java"}, "test_case": {"identifier": "testFloat", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testFloat() {\n    assertEquals(3.1f, LangUtils.parseFloat(\"3.1\"));\n  }", "signature": "void testFloat()", "full_signature": "@Test public void testFloat()", "class_method_signature": "LangUtilsTest.testFloat()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "parseFloat"]}, "focal_class": {"identifier": "LangUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "LangUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " LangUtils()", "full_signature": "private  LangUtils()", "class_method_signature": "LangUtils.LangUtils()", "testcase": false, "constructor": true}, {"identifier": "parseFloat", "parameters": "(String s)", "modifiers": "public static", "return": "float", "signature": "float parseFloat(String s)", "full_signature": "public static float parseFloat(String s)", "class_method_signature": "LangUtils.parseFloat(String s)", "testcase": false, "constructor": false}, {"identifier": "parseDouble", "parameters": "(String s)", "modifiers": "public static", "return": "double", "signature": "double parseDouble(String s)", "full_signature": "public static double parseDouble(String s)", "class_method_signature": "LangUtils.parseDouble(String s)", "testcase": false, "constructor": false}, {"identifier": "hashDouble", "parameters": "(double d)", "modifiers": "public static", "return": "int", "signature": "int hashDouble(double d)", "full_signature": "public static int hashDouble(double d)", "class_method_signature": "LangUtils.hashDouble(double d)", "testcase": false, "constructor": false}], "file": "common/src/main/java/com/cloudera/oryx/common/LangUtils.java"}, "focal_method": {"identifier": "parseFloat", "parameters": "(String s)", "modifiers": "public static", "return": "float", "body": "public static float parseFloat(String s) {\n    float value = Float.parseFloat(s);\n    Preconditions.checkArgument(Floats.isFinite(value), \"Bad value: %s\", value);\n    return value;\n  }", "signature": "float parseFloat(String s)", "full_signature": "public static float parseFloat(String s)", "class_method_signature": "LangUtils.parseFloat(String s)", "testcase": false, "constructor": false, "invocations": ["parseFloat", "checkArgument", "isFinite"]}, "repository": {"repo_id": 14333932, "url": "https://github.com/apsaltis/oryx", "language": "Java", "is_fork": false, "fork_count": 382, "stargazer_count": 7, "size": 64, "license": "licensed"}}