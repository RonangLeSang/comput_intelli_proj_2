{"test_class": {"identifier": "BitIntegrityReportRestTest", "superclass": "extends EasyMockSupport", "interfaces": "", "fields": [{"original_string": "private String storeId = \"store-id\";", "modifier": "private", "type": "String", "declarator": "storeId = \"store-id\"", "var_name": "storeId"}, {"original_string": "private String spaceId = \"space-id\";", "modifier": "private", "type": "String", "declarator": "spaceId = \"space-id\"", "var_name": "spaceId"}, {"original_string": "private String reportSpaceId = \"report-space-id\";", "modifier": "private", "type": "String", "declarator": "reportSpaceId = \"report-space-id\"", "var_name": "reportSpaceId"}, {"original_string": "private String reportContentId = \"report-content-id\";", "modifier": "private", "type": "String", "declarator": "reportContentId = \"report-content-id\"", "var_name": "reportContentId"}, {"original_string": "@Mock\n    private JpaBitIntegrityReportRepo repo;", "modifier": "@Mock\n    private", "type": "JpaBitIntegrityReportRepo", "declarator": "repo", "var_name": "repo"}, {"original_string": "@Mock\n    private StorageProviderFactory storageProviderFactory;", "modifier": "@Mock\n    private", "type": "StorageProviderFactory", "declarator": "storageProviderFactory", "var_name": "storageProviderFactory"}, {"original_string": "@Mock\n    private StorageProvider store;", "modifier": "@Mock\n    private", "type": "StorageProvider", "declarator": "store", "var_name": "store"}, {"original_string": "@Mock\n    private HttpServletRequest request;", "modifier": "@Mock\n    private", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private Page page;", "modifier": "@Mock\n    private", "type": "Page", "declarator": "page", "var_name": "page"}, {"original_string": "@Mock\n    private Map<String, String> contentProperties;", "modifier": "@Mock\n    private", "type": "Map<String, String>", "declarator": "contentProperties", "var_name": "contentProperties"}, {"original_string": "private BitIntegrityReportRest rest;", "modifier": "private", "type": "BitIntegrityReportRest", "declarator": "rest", "var_name": "rest"}], "file": "durastore/src/test/java/org/duracloud/durastore/rest/BitIntegrityReportRestTest.java"}, "test_case": {"identifier": "testGetReport", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetReport() {\n        setupHeader();\n        setupBitIntegrityReportRepo();\n        setupStorageProviderFactory();\n        setupContentProperties();\n        setupGetContent();\n        replayAll();\n        createRest();\n        Response response = rest.getReport(spaceId, storeId);\n        verifyHeaders(response);\n        assertTrue(response.getEntity() instanceof InputStream);\n    }", "signature": "void testGetReport()", "full_signature": "@Test public void testGetReport()", "class_method_signature": "BitIntegrityReportRestTest.testGetReport()", "testcase": true, "constructor": false, "invocations": ["setupHeader", "setupBitIntegrityReportRepo", "setupStorageProviderFactory", "setupContentProperties", "setupGetContent", "replayAll", "createRest", "getReport", "verifyHeaders", "assertTrue", "getEntity"]}, "focal_class": {"identifier": "BitIntegrityReportRest", "superclass": "extends BaseRest", "interfaces": "", "fields": [{"original_string": "private final Logger log = LoggerFactory.getLogger(BitIntegrityReportRest.class);", "modifier": "private final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(BitIntegrityReportRest.class)", "var_name": "log"}, {"original_string": "private JpaBitIntegrityReportRepo repo;", "modifier": "private", "type": "JpaBitIntegrityReportRepo", "declarator": "repo", "var_name": "repo"}, {"original_string": "private StorageProviderFactory storageProviderFactory;", "modifier": "private", "type": "StorageProviderFactory", "declarator": "storageProviderFactory", "var_name": "storageProviderFactory"}], "methods": [{"identifier": "BitIntegrityReportRest", "parameters": "(JpaBitIntegrityReportRepo repo,\n                                  StorageProviderFactory storageProviderFactory)", "modifiers": "@Autowired public", "return": "", "signature": " BitIntegrityReportRest(JpaBitIntegrityReportRepo repo,\n                                  StorageProviderFactory storageProviderFactory)", "full_signature": "@Autowired public  BitIntegrityReportRest(JpaBitIntegrityReportRepo repo,\n                                  StorageProviderFactory storageProviderFactory)", "class_method_signature": "BitIntegrityReportRest.BitIntegrityReportRest(JpaBitIntegrityReportRepo repo,\n                                  StorageProviderFactory storageProviderFactory)", "testcase": false, "constructor": true}, {"identifier": "getReport", "parameters": "(@PathParam(\"spaceId\") String spaceId,\n                              @QueryParam(\"storeID\") String storeId)", "modifiers": "@Path(\"/{spaceId}\") @GET public", "return": "Response", "signature": "Response getReport(@PathParam(\"spaceId\") String spaceId,\n                              @QueryParam(\"storeID\") String storeId)", "full_signature": "@Path(\"/{spaceId}\") @GET public Response getReport(@PathParam(\"spaceId\") String spaceId,\n                              @QueryParam(\"storeID\") String storeId)", "class_method_signature": "BitIntegrityReportRest.getReport(@PathParam(\"spaceId\") String spaceId,\n                              @QueryParam(\"storeID\") String storeId)", "testcase": false, "constructor": false}, {"identifier": "getReportHead", "parameters": "(@PathParam(\"spaceId\") String spaceId,\n                                  @QueryParam(\"storeID\") String storeId)", "modifiers": "@Path(\"/{spaceId}\") @HEAD public", "return": "Response", "signature": "Response getReportHead(@PathParam(\"spaceId\") String spaceId,\n                                  @QueryParam(\"storeID\") String storeId)", "full_signature": "@Path(\"/{spaceId}\") @HEAD public Response getReportHead(@PathParam(\"spaceId\") String spaceId,\n                                  @QueryParam(\"storeID\") String storeId)", "class_method_signature": "BitIntegrityReportRest.getReportHead(@PathParam(\"spaceId\") String spaceId,\n                                  @QueryParam(\"storeID\") String storeId)", "testcase": false, "constructor": false}, {"identifier": "getReport", "parameters": "(String spaceId,\n                               String storeId,\n                               boolean headOnly)", "modifiers": "private", "return": "Response", "signature": "Response getReport(String spaceId,\n                               String storeId,\n                               boolean headOnly)", "full_signature": "private Response getReport(String spaceId,\n                               String storeId,\n                               boolean headOnly)", "class_method_signature": "BitIntegrityReportRest.getReport(String spaceId,\n                               String storeId,\n                               boolean headOnly)", "testcase": false, "constructor": false}], "file": "durastore/src/main/java/org/duracloud/durastore/rest/BitIntegrityReportRest.java"}, "focal_method": {"identifier": "getReport", "parameters": "(@PathParam(\"spaceId\") String spaceId,\n                              @QueryParam(\"storeID\") String storeId)", "modifiers": "@Path(\"/{spaceId}\") @GET public", "return": "Response", "body": "@Path(\"/{spaceId}\")\n    @GET\n    public Response getReport(@PathParam(\"spaceId\") String spaceId,\n                              @QueryParam(\"storeID\") String storeId) {\n        log.debug(\"getting report for {} , {} \", spaceId, storeId);\n\n        return getReport(spaceId, storeId, false);\n    }", "signature": "Response getReport(@PathParam(\"spaceId\") String spaceId,\n                              @QueryParam(\"storeID\") String storeId)", "full_signature": "@Path(\"/{spaceId}\") @GET public Response getReport(@PathParam(\"spaceId\") String spaceId,\n                              @QueryParam(\"storeID\") String storeId)", "class_method_signature": "BitIntegrityReportRest.getReport(@PathParam(\"spaceId\") String spaceId,\n                              @QueryParam(\"storeID\") String storeId)", "testcase": false, "constructor": false, "invocations": ["debug", "getReport"]}, "repository": {"repo_id": 3337772, "url": "https://github.com/duracloud/duracloud", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 7, "size": 76851, "license": "licensed"}}