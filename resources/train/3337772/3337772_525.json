{"test_class": {"identifier": "SQSTaskQueueTest", "superclass": "extends EasyMockSupport", "interfaces": "", "fields": [{"original_string": "private SQSTaskQueue queue;", "modifier": "private", "type": "SQSTaskQueue", "declarator": "queue", "var_name": "queue"}, {"original_string": "private String queueName = \"test-queue\";", "modifier": "private", "type": "String", "declarator": "queueName = \"test-queue\"", "var_name": "queueName"}, {"original_string": "@Mock\n    private AmazonSQSClient sqsClient;", "modifier": "@Mock\n    private", "type": "AmazonSQSClient", "declarator": "sqsClient", "var_name": "sqsClient"}], "file": "common-queue/src/test/java/org/duracloud/common/queue/aws/SQSTaskQueueTest.java"}, "test_case": {"identifier": "testPutMuliple", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPutMuliple() {\n        setupSQSClient();\n        SendMessageBatchResult result = createMock(SendMessageBatchResult.class);\n        expect(this.sqsClient.sendMessageBatch(isA(SendMessageBatchRequest.class)))\n            .andThrow(new AmazonServiceException(\"failure\"));\n        expect(this.sqsClient.sendMessageBatch(isA(SendMessageBatchRequest.class))).andReturn(result).times(2);\n        replayAll();\n        createSubject();\n        Set<Task> tasks = new HashSet<>();\n        long time = System.currentTimeMillis();\n        for (int i = 0; i < 11; i++) {\n            tasks.add(createSampleAuditTask(time + i));\n        }\n        this.queue.put(tasks);\n    }", "signature": "void testPutMuliple()", "full_signature": "@Test public void testPutMuliple()", "class_method_signature": "SQSTaskQueueTest.testPutMuliple()", "testcase": true, "constructor": false, "invocations": ["setupSQSClient", "createMock", "andThrow", "expect", "sendMessageBatch", "isA", "times", "andReturn", "expect", "sendMessageBatch", "isA", "replayAll", "createSubject", "currentTimeMillis", "add", "createSampleAuditTask", "put"]}, "focal_class": {"identifier": "SQSTaskQueue", "superclass": "", "interfaces": "implements TaskQueue", "fields": [{"original_string": "private static Logger log = LoggerFactory.getLogger(SQSTaskQueue.class);", "modifier": "private static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(SQSTaskQueue.class)", "var_name": "log"}, {"original_string": "private AmazonSQS sqsClient;", "modifier": "private", "type": "AmazonSQS", "declarator": "sqsClient", "var_name": "sqsClient"}, {"original_string": "private String queueName;", "modifier": "private", "type": "String", "declarator": "queueName", "var_name": "queueName"}, {"original_string": "private String queueUrl;", "modifier": "private", "type": "String", "declarator": "queueUrl", "var_name": "queueUrl"}, {"original_string": "private Integer visibilityTimeout;", "modifier": "private", "type": "Integer", "declarator": "visibilityTimeout", "var_name": "visibilityTimeout"}], "methods": [{"identifier": "SQSTaskQueue", "parameters": "(String queueName)", "modifiers": "public", "return": "", "signature": " SQSTaskQueue(String queueName)", "full_signature": "public  SQSTaskQueue(String queueName)", "class_method_signature": "SQSTaskQueue.SQSTaskQueue(String queueName)", "testcase": false, "constructor": true}, {"identifier": "SQSTaskQueue", "parameters": "(AmazonSQS sqsClient, String queueName)", "modifiers": "public", "return": "", "signature": " SQSTaskQueue(AmazonSQS sqsClient, String queueName)", "full_signature": "public  SQSTaskQueue(AmazonSQS sqsClient, String queueName)", "class_method_signature": "SQSTaskQueue.SQSTaskQueue(AmazonSQS sqsClient, String queueName)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "SQSTaskQueue.getName()", "testcase": false, "constructor": false}, {"identifier": "marshallTask", "parameters": "(Message msg)", "modifiers": "protected", "return": "Task", "signature": "Task marshallTask(Message msg)", "full_signature": "protected Task marshallTask(Message msg)", "class_method_signature": "SQSTaskQueue.marshallTask(Message msg)", "testcase": false, "constructor": false}, {"identifier": "unmarshallTask", "parameters": "(Task task)", "modifiers": "protected", "return": "String", "signature": "String unmarshallTask(Task task)", "full_signature": "protected String unmarshallTask(Task task)", "class_method_signature": "SQSTaskQueue.unmarshallTask(Task task)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(final Task task)", "modifiers": "@Override public", "return": "void", "signature": "void put(final Task task)", "full_signature": "@Override public void put(final Task task)", "class_method_signature": "SQSTaskQueue.put(final Task task)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(Task... tasks)", "modifiers": "@Override public", "return": "void", "signature": "void put(Task... tasks)", "full_signature": "@Override public void put(Task... tasks)", "class_method_signature": "SQSTaskQueue.put(Task... tasks)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(Set<Task> tasks)", "modifiers": "@Override public", "return": "void", "signature": "void put(Set<Task> tasks)", "full_signature": "@Override public void put(Set<Task> tasks)", "class_method_signature": "SQSTaskQueue.put(Set<Task> tasks)", "testcase": false, "constructor": false}, {"identifier": "sendBatchMessages", "parameters": "(Set<SendMessageBatchRequestEntry> msgEntries)", "modifiers": "private", "return": "void", "signature": "void sendBatchMessages(Set<SendMessageBatchRequestEntry> msgEntries)", "full_signature": "private void sendBatchMessages(Set<SendMessageBatchRequestEntry> msgEntries)", "class_method_signature": "SQSTaskQueue.sendBatchMessages(Set<SendMessageBatchRequestEntry> msgEntries)", "testcase": false, "constructor": false}, {"identifier": "take", "parameters": "(int maxTasks)", "modifiers": "@Override public", "return": "Set<Task>", "signature": "Set<Task> take(int maxTasks)", "full_signature": "@Override public Set<Task> take(int maxTasks)", "class_method_signature": "SQSTaskQueue.take(int maxTasks)", "testcase": false, "constructor": false}, {"identifier": "take", "parameters": "()", "modifiers": "@Override public", "return": "Task", "signature": "Task take()", "full_signature": "@Override public Task take()", "class_method_signature": "SQSTaskQueue.take()", "testcase": false, "constructor": false}, {"identifier": "extendVisibilityTimeout", "parameters": "(Task task)", "modifiers": "@Override public", "return": "void", "signature": "void extendVisibilityTimeout(Task task)", "full_signature": "@Override public void extendVisibilityTimeout(Task task)", "class_method_signature": "SQSTaskQueue.extendVisibilityTimeout(Task task)", "testcase": false, "constructor": false}, {"identifier": "deleteTask", "parameters": "(Task task)", "modifiers": "@Override public", "return": "void", "signature": "void deleteTask(Task task)", "full_signature": "@Override public void deleteTask(Task task)", "class_method_signature": "SQSTaskQueue.deleteTask(Task task)", "testcase": false, "constructor": false}, {"identifier": "deleteTasks", "parameters": "(Set<Task> tasks)", "modifiers": "@Override public", "return": "void", "signature": "void deleteTasks(Set<Task> tasks)", "full_signature": "@Override public void deleteTasks(Set<Task> tasks)", "class_method_signature": "SQSTaskQueue.deleteTasks(Set<Task> tasks)", "testcase": false, "constructor": false}, {"identifier": "requeue", "parameters": "(Task task)", "modifiers": "@Override public", "return": "void", "signature": "void requeue(Task task)", "full_signature": "@Override public void requeue(Task task)", "class_method_signature": "SQSTaskQueue.requeue(Task task)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer size()", "full_signature": "@Override public Integer size()", "class_method_signature": "SQSTaskQueue.size()", "testcase": false, "constructor": false}, {"identifier": "sizeIncludingInvisibleAndDelayed", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer sizeIncludingInvisibleAndDelayed()", "full_signature": "@Override public Integer sizeIncludingInvisibleAndDelayed()", "class_method_signature": "SQSTaskQueue.sizeIncludingInvisibleAndDelayed()", "testcase": false, "constructor": false}, {"identifier": "getVisibilityTimeout", "parameters": "()", "modifiers": "private", "return": "Integer", "signature": "Integer getVisibilityTimeout()", "full_signature": "private Integer getVisibilityTimeout()", "class_method_signature": "SQSTaskQueue.getVisibilityTimeout()", "testcase": false, "constructor": false}, {"identifier": "getQueueUrl", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getQueueUrl()", "full_signature": "private String getQueueUrl()", "class_method_signature": "SQSTaskQueue.getQueueUrl()", "testcase": false, "constructor": false}, {"identifier": "queryQueueAttributes", "parameters": "(QueueAttributeName... attrNames)", "modifiers": "private", "return": "GetQueueAttributesResult", "signature": "GetQueueAttributesResult queryQueueAttributes(QueueAttributeName... attrNames)", "full_signature": "private GetQueueAttributesResult queryQueueAttributes(QueueAttributeName... attrNames)", "class_method_signature": "SQSTaskQueue.queryQueueAttributes(QueueAttributeName... attrNames)", "testcase": false, "constructor": false}], "file": "common-queue/src/main/java/org/duracloud/common/queue/aws/SQSTaskQueue.java"}, "focal_method": {"identifier": "put", "parameters": "(final Task task)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void put(final Task task) {\n        try {\n            final String msgBody = unmarshallTask(task);\n\n            new Retrier(4, 10000, 2).execute(new Retriable() {\n                @Override\n                public Object retry() throws Exception {\n                    sqsClient.sendMessage(new SendMessageRequest(queueUrl, msgBody));\n                    return null;\n                }\n            });\n\n            log.info(\"SQS message successfully placed {} on queue - queue: {}\",\n                     task, queueName);\n\n        } catch (Exception ex) {\n            log.error(\"failed to place {} on {} due to {}\", task, queueName, ex.getMessage());\n            throw new DuraCloudRuntimeException(ex);\n        }\n\n    }", "signature": "void put(final Task task)", "full_signature": "@Override public void put(final Task task)", "class_method_signature": "SQSTaskQueue.put(final Task task)", "testcase": false, "constructor": false, "invocations": ["unmarshallTask", "execute", "sendMessage", "info", "error", "getMessage"]}, "repository": {"repo_id": 3337772, "url": "https://github.com/duracloud/duracloud", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 7, "size": 76851, "license": "licensed"}}