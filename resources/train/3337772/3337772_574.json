{"test_class": {"identifier": "CompleteCancelSnapshotTaskRunnerTest", "superclass": "extends EasyMockSupport", "interfaces": "", "fields": [{"original_string": "@Mock\n    private StorageProvider snapshotProvider;", "modifier": "@Mock\n    private", "type": "StorageProvider", "declarator": "snapshotProvider", "var_name": "snapshotProvider"}, {"original_string": "@Mock\n    private SnapshotStorageProvider unwrappedSnapshotProvider;", "modifier": "@Mock\n    private", "type": "SnapshotStorageProvider", "declarator": "unwrappedSnapshotProvider", "var_name": "unwrappedSnapshotProvider"}, {"original_string": "private CompleteCancelSnapshotTaskRunner taskRunner;", "modifier": "private", "type": "CompleteCancelSnapshotTaskRunner", "declarator": "taskRunner", "var_name": "taskRunner"}, {"original_string": "private String dcSnapshotUser = \"snapshot-user\";", "modifier": "private", "type": "String", "declarator": "dcSnapshotUser = \"snapshot-user\"", "var_name": "dcSnapshotUser"}, {"original_string": "private String bridgeHost = \"bridge-host\";", "modifier": "private", "type": "String", "declarator": "bridgeHost = \"bridge-host\"", "var_name": "bridgeHost"}, {"original_string": "private String bridgePort = \"bridge-port\";", "modifier": "private", "type": "String", "declarator": "bridgePort = \"bridge-port\"", "var_name": "bridgePort"}, {"original_string": "private String bridgeUser = \"bridge-user\";", "modifier": "private", "type": "String", "declarator": "bridgeUser = \"bridge-user\"", "var_name": "bridgeUser"}, {"original_string": "private String bridgePass = \"bridge-pass\";", "modifier": "private", "type": "String", "declarator": "bridgePass = \"bridge-pass\"", "var_name": "bridgePass"}], "file": "snapshotstorageprovider/src/test/java/org/duracloud/snapshottask/snapshot/CompleteCancelSnapshotTaskRunnerTest.java"}, "test_case": {"identifier": "testPerform", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPerform() {\n        String spaceId = \"space-id\";\n        String snapshotId = \"snapshot-id\";\n\n        //setup delete space properties\n        snapshotProvider.deleteContent(eq(spaceId),\n                                       eq(Constants.SNAPSHOT_PROPS_FILENAME));\n        expectLastCall().once();\n\n        //setup remove snapshot space property\n        Map<String, String> spaceProps = new HashMap<>();\n        spaceProps.put(Constants.SNAPSHOT_ID_PROP, snapshotId);\n        EasyMock.expect(snapshotProvider.getSpaceProperties(spaceId))\n                .andReturn(spaceProps);\n\n        Capture<Map<String, String>> propsCapture = new Capture<>();\n        unwrappedSnapshotProvider.setNewSpaceProperties(EasyMock.eq(spaceId),\n                                                        EasyMock.capture(propsCapture));\n        expectLastCall().once();\n\n        //setup remove read only acl\n        String aclUserName = \"acl-\" + dcSnapshotUser;\n        AclType aclValue = AclType.READ;\n\n        Map<String, AclType> spaceACLs = new HashMap<>();\n        spaceACLs.put(aclUserName, aclValue);\n        EasyMock.expect(snapshotProvider.getSpaceACLs(spaceId))\n                .andReturn(spaceACLs);\n\n        Capture<Map<String, AclType>> spaceACLsCapture = new Capture<>();\n        snapshotProvider.setSpaceACLs(EasyMock.eq(spaceId),\n                                      EasyMock.capture(spaceACLsCapture));\n\n        replayAll();\n        setupSubject();\n        taskRunner.performTask(\"{\\\"spaceId\\\":\\\"\" + spaceId + \"\\\"}\");\n\n        spaceProps = propsCapture.getValue();\n\n        assertFalse(spaceProps.containsKey(Constants.SNAPSHOT_ID_PROP));\n\n        spaceACLs = spaceACLsCapture.getValue();\n\n        assertFalse(spaceProps.containsKey(aclUserName));\n\n    }", "signature": "void testPerform()", "full_signature": "@Test public void testPerform()", "class_method_signature": "CompleteCancelSnapshotTaskRunnerTest.testPerform()", "testcase": true, "constructor": false, "invocations": ["deleteContent", "eq", "eq", "once", "expectLastCall", "put", "andReturn", "expect", "getSpaceProperties", "setNewSpaceProperties", "eq", "capture", "once", "expectLastCall", "put", "andReturn", "expect", "getSpaceACLs", "setSpaceACLs", "eq", "capture", "replayAll", "setupSubject", "performTask", "getValue", "assertFalse", "containsKey", "getValue", "assertFalse", "containsKey"]}, "focal_class": {"identifier": "CompleteCancelSnapshotTaskRunner", "superclass": "extends SpaceModifyingSnapshotTaskRunner", "interfaces": "", "fields": [{"original_string": "private Logger log =\n        LoggerFactory.getLogger(CompleteCancelSnapshotTaskRunner.class);", "modifier": "private", "type": "Logger", "declarator": "log =\n        LoggerFactory.getLogger(CompleteCancelSnapshotTaskRunner.class)", "var_name": "log"}], "methods": [{"identifier": "CompleteCancelSnapshotTaskRunner", "parameters": "(StorageProvider snapshotProvider,\n                                            SnapshotStorageProvider unwrappedSnapshotProvider,\n                                            String dcSnapshotUser,\n                                            String bridgeAppHost,\n                                            String bridgeAppPort,\n                                            String bridgeAppUser,\n                                            String bridgeAppPass)", "modifiers": "public", "return": "", "signature": " CompleteCancelSnapshotTaskRunner(StorageProvider snapshotProvider,\n                                            SnapshotStorageProvider unwrappedSnapshotProvider,\n                                            String dcSnapshotUser,\n                                            String bridgeAppHost,\n                                            String bridgeAppPort,\n                                            String bridgeAppUser,\n                                            String bridgeAppPass)", "full_signature": "public  CompleteCancelSnapshotTaskRunner(StorageProvider snapshotProvider,\n                                            SnapshotStorageProvider unwrappedSnapshotProvider,\n                                            String dcSnapshotUser,\n                                            String bridgeAppHost,\n                                            String bridgeAppPort,\n                                            String bridgeAppUser,\n                                            String bridgeAppPass)", "class_method_signature": "CompleteCancelSnapshotTaskRunner.CompleteCancelSnapshotTaskRunner(StorageProvider snapshotProvider,\n                                            SnapshotStorageProvider unwrappedSnapshotProvider,\n                                            String dcSnapshotUser,\n                                            String bridgeAppHost,\n                                            String bridgeAppPort,\n                                            String bridgeAppUser,\n                                            String bridgeAppPass)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "CompleteCancelSnapshotTaskRunner.getName()", "testcase": false, "constructor": false}, {"identifier": "performTask", "parameters": "(String taskParameters)", "modifiers": "@Override public", "return": "String", "signature": "String performTask(String taskParameters)", "full_signature": "@Override public String performTask(String taskParameters)", "class_method_signature": "CompleteCancelSnapshotTaskRunner.performTask(String taskParameters)", "testcase": false, "constructor": false}], "file": "snapshotstorageprovider/src/main/java/org/duracloud/snapshottask/snapshot/CompleteCancelSnapshotTaskRunner.java"}, "focal_method": {"identifier": "performTask", "parameters": "(String taskParameters)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String performTask(String taskParameters) {\n        log.info(\"performing task:  params={}\", taskParameters);\n        CompleteCancelSnapshotTaskParameters taskParams =\n            CompleteCancelSnapshotTaskParameters.deserialize(taskParameters);\n        String spaceId = taskParams.getSpaceId();\n\n        removeSnapshotIdFromSpaceProps(spaceId);\n        removeSnapshotProps(spaceId);\n        removeSnapshotUserPermissions(spaceId);\n        return new CompleteCancelSnapshotTaskResult(\"completed cancellation for \" + spaceId).serialize();\n    }", "signature": "String performTask(String taskParameters)", "full_signature": "@Override public String performTask(String taskParameters)", "class_method_signature": "CompleteCancelSnapshotTaskRunner.performTask(String taskParameters)", "testcase": false, "constructor": false, "invocations": ["info", "deserialize", "getSpaceId", "removeSnapshotIdFromSpaceProps", "removeSnapshotProps", "removeSnapshotUserPermissions", "serialize"]}, "repository": {"repo_id": 3337772, "url": "https://github.com/duracloud/duracloud", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 7, "size": 76851, "license": "licensed"}}