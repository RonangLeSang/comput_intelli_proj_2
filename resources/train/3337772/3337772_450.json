{"test_class": {"identifier": "EmailNotifierTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String subject = \"subject\";", "modifier": "private", "type": "String", "declarator": "subject = \"subject\"", "var_name": "subject"}, {"original_string": "private String message = \"message\";", "modifier": "private", "type": "String", "declarator": "message = \"message\"", "var_name": "message"}, {"original_string": "private String[] emailAddresses = {\"email1\", \"email2\"};", "modifier": "private", "type": "String[]", "declarator": "emailAddresses = {\"email1\", \"email2\"}", "var_name": "emailAddresses"}], "file": "common-notification/src/test/java/org/duracloud/common/notification/EmailNotifierTest.java"}, "test_case": {"identifier": "testNotifyAdmins", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNotifyAdmins() {\n        String admin1 = \"admin1\";\n        String admin2 = \"admin2\";\n        List<String> adminEmails = new ArrayList<String>();\n        adminEmails.add(admin1);\n        adminEmails.add(admin2);\n        String[] adminEmailArray = {admin1, admin2};\n\n        // Set up mock emailer\n        Emailer emailer = EasyMock.createMock(Emailer.class);\n\n        emailer.send(subject, message, adminEmailArray);\n        EasyMock.expectLastCall().times(1);\n\n        EasyMock.replay(emailer);\n\n        // Set up notifier\n        EmailNotifier notifier = new EmailNotifier();\n        notifier.setEmailer(emailer);\n        notifier.setAdminEmails(adminEmails);\n\n        // Send notification\n        notifier.notifyAdmins(subject, message);\n\n        // Verify mock\n        EasyMock.verify(emailer);\n    }", "signature": "void testNotifyAdmins()", "full_signature": "@Test public void testNotifyAdmins()", "class_method_signature": "EmailNotifierTest.testNotifyAdmins()", "testcase": true, "constructor": false, "invocations": ["add", "add", "createMock", "send", "times", "expectLastCall", "replay", "setEmailer", "setAdminEmails", "notifyAdmins", "verify"]}, "focal_class": {"identifier": "EmailNotifier", "superclass": "", "interfaces": "implements Notifier", "fields": [{"original_string": "private final Logger log = LoggerFactory.getLogger(EmailNotifier.class);", "modifier": "private final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(EmailNotifier.class)", "var_name": "log"}, {"original_string": "private Emailer emailer;", "modifier": "private", "type": "Emailer", "declarator": "emailer", "var_name": "emailer"}, {"original_string": "private List<String> adminEmails;", "modifier": "private", "type": "List<String>", "declarator": "adminEmails", "var_name": "adminEmails"}], "methods": [{"identifier": "initialize", "parameters": "(NotificationConfig notificationConfig)", "modifiers": "@Override public", "return": "void", "signature": "void initialize(NotificationConfig notificationConfig)", "full_signature": "@Override public void initialize(NotificationConfig notificationConfig)", "class_method_signature": "EmailNotifier.initialize(NotificationConfig notificationConfig)", "testcase": false, "constructor": false}, {"identifier": "setEmailer", "parameters": "(Emailer emailer)", "modifiers": "protected", "return": "void", "signature": "void setEmailer(Emailer emailer)", "full_signature": "protected void setEmailer(Emailer emailer)", "class_method_signature": "EmailNotifier.setEmailer(Emailer emailer)", "testcase": false, "constructor": false}, {"identifier": "setAdminEmails", "parameters": "(List<String> adminEmails)", "modifiers": "protected", "return": "void", "signature": "void setAdminEmails(List<String> adminEmails)", "full_signature": "protected void setAdminEmails(List<String> adminEmails)", "class_method_signature": "EmailNotifier.setAdminEmails(List<String> adminEmails)", "testcase": false, "constructor": false}, {"identifier": "getNotificationType", "parameters": "()", "modifiers": "@Override public", "return": "NotificationType", "signature": "NotificationType getNotificationType()", "full_signature": "@Override public NotificationType getNotificationType()", "class_method_signature": "EmailNotifier.getNotificationType()", "testcase": false, "constructor": false}, {"identifier": "notify", "parameters": "(String subject, String message, String... emailAddrs)", "modifiers": "@Override public", "return": "void", "signature": "void notify(String subject, String message, String... emailAddrs)", "full_signature": "@Override public void notify(String subject, String message, String... emailAddrs)", "class_method_signature": "EmailNotifier.notify(String subject, String message, String... emailAddrs)", "testcase": false, "constructor": false}, {"identifier": "notifyAdmins", "parameters": "(String subject, String message)", "modifiers": "@Override public", "return": "void", "signature": "void notifyAdmins(String subject, String message)", "full_signature": "@Override public void notifyAdmins(String subject, String message)", "class_method_signature": "EmailNotifier.notifyAdmins(String subject, String message)", "testcase": false, "constructor": false}, {"identifier": "checkInitialized", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkInitialized()", "full_signature": "private void checkInitialized()", "class_method_signature": "EmailNotifier.checkInitialized()", "testcase": false, "constructor": false}], "file": "common-notification/src/main/java/org/duracloud/common/notification/EmailNotifier.java"}, "focal_method": {"identifier": "notifyAdmins", "parameters": "(String subject, String message)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void notifyAdmins(String subject, String message) {\n        checkInitialized();\n\n        log.debug(\"Sending email to \" + adminEmails.size() +\n                  \" administrators with subject: [\" + subject +\n                  \"] and message: [\" + message + \"]\");\n\n        emailer.send(subject,\n                     message,\n                     adminEmails.toArray(new String[adminEmails.size()]));\n    }", "signature": "void notifyAdmins(String subject, String message)", "full_signature": "@Override public void notifyAdmins(String subject, String message)", "class_method_signature": "EmailNotifier.notifyAdmins(String subject, String message)", "testcase": false, "constructor": false, "invocations": ["checkInitialized", "debug", "size", "send", "toArray", "size"]}, "repository": {"repo_id": 3337772, "url": "https://github.com/duracloud/duracloud", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 7, "size": 76851, "license": "licensed"}}