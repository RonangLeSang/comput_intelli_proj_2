{"test_class": {"identifier": "StorageProviderBaseTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private StorageProviderBaseImpl providerBase;", "modifier": "private", "type": "StorageProviderBaseImpl", "declarator": "providerBase", "var_name": "providerBase"}, {"original_string": "private StorageProviderBase providerMock;", "modifier": "private", "type": "StorageProviderBase", "declarator": "providerMock", "var_name": "providerMock"}, {"original_string": "private final static String spaceId = \"space-id\";", "modifier": "private final static", "type": "String", "declarator": "spaceId = \"space-id\"", "var_name": "spaceId"}, {"original_string": "private static Map<String, String> spaceProps;", "modifier": "private static", "type": "Map<String, String>", "declarator": "spaceProps", "var_name": "spaceProps"}, {"original_string": "private static Map<String, String> spaceACLs;", "modifier": "private static", "type": "Map<String, String>", "declarator": "spaceACLs", "var_name": "spaceACLs"}, {"original_string": "private static Map<String, String> systemProps;", "modifier": "private static", "type": "Map<String, String>", "declarator": "systemProps", "var_name": "systemProps"}, {"original_string": "private final static String userRead0 = \"user-read-0\";", "modifier": "private final static", "type": "String", "declarator": "userRead0 = \"user-read-0\"", "var_name": "userRead0"}, {"original_string": "private final static String userRead1 = \"user-read-1\";", "modifier": "private final static", "type": "String", "declarator": "userRead1 = \"user-read-1\"", "var_name": "userRead1"}, {"original_string": "private final static String userWrite0 = \"user-write-0\";", "modifier": "private final static", "type": "String", "declarator": "userWrite0 = \"user-write-0\"", "var_name": "userWrite0"}, {"original_string": "private final static String groupRead0 = \"group-read-0\";", "modifier": "private final static", "type": "String", "declarator": "groupRead0 = \"group-read-0\"", "var_name": "groupRead0"}, {"original_string": "private final static String groupWrite0 = \"group-write-0\";", "modifier": "private final static", "type": "String", "declarator": "groupWrite0 = \"group-write-0\"", "var_name": "groupWrite0"}, {"original_string": "private final static String groupWrite1 = \"group-write-1\";", "modifier": "private final static", "type": "String", "declarator": "groupWrite1 = \"group-write-1\"", "var_name": "groupWrite1"}, {"original_string": "private final static String sysPropName = \"space-created\";", "modifier": "private final static", "type": "String", "declarator": "sysPropName = \"space-created\"", "var_name": "sysPropName"}, {"original_string": "private final static String sysPropVal = new Date().toString();", "modifier": "private final static", "type": "String", "declarator": "sysPropVal = new Date().toString()", "var_name": "sysPropVal"}, {"original_string": "private final static String mimePrefix =\n        StorageProvider.PROPERTIES_CONTENT_MIMETYPE;", "modifier": "private final static", "type": "String", "declarator": "mimePrefix =\n        StorageProvider.PROPERTIES_CONTENT_MIMETYPE", "var_name": "mimePrefix"}, {"original_string": "private final static String aclPrefix =\n        StorageProvider.PROPERTIES_SPACE_ACL;", "modifier": "private final static", "type": "String", "declarator": "aclPrefix =\n        StorageProvider.PROPERTIES_SPACE_ACL", "var_name": "aclPrefix"}, {"original_string": "private final static String aclGroupPrefix =\n        StorageProvider.PROPERTIES_SPACE_ACL_GROUP;", "modifier": "private final static", "type": "String", "declarator": "aclGroupPrefix =\n        StorageProvider.PROPERTIES_SPACE_ACL_GROUP", "var_name": "aclGroupPrefix"}], "file": "storageprovider/src/test/java/org/duracloud/storage/provider/StorageProviderBaseTest.java"}, "test_case": {"identifier": "testGetSpaceACLs", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetSpaceACLs() {\n        createGetSpaceACLsMocks();\n\n        Map<String, AclType> acls = providerBase.getSpaceACLs(spaceId);\n        Assert.assertNotNull(acls);\n\n        Assert.assertEquals(6, acls.size()); // users + groups = 6\n        Assert.assertEquals(AclType.READ, acls.get(aclPrefix + userRead0));\n        Assert.assertEquals(AclType.READ, acls.get(aclPrefix + userRead1));\n        Assert.assertEquals(AclType.WRITE, acls.get(aclPrefix + userWrite0));\n        Assert.assertEquals(AclType.READ,\n                            acls.get(aclGroupPrefix + groupRead0));\n        Assert.assertEquals(AclType.WRITE,\n                            acls.get(aclGroupPrefix + groupWrite0));\n        Assert.assertEquals(AclType.WRITE,\n                            acls.get(aclGroupPrefix + groupWrite0));\n    }", "signature": "void testGetSpaceACLs()", "full_signature": "@Test public void testGetSpaceACLs()", "class_method_signature": "StorageProviderBaseTest.testGetSpaceACLs()", "testcase": true, "constructor": false, "invocations": ["createGetSpaceACLsMocks", "getSpaceACLs", "assertNotNull", "assertEquals", "size", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "StorageProviderBase", "superclass": "", "interfaces": "implements StorageProvider", "fields": [{"original_string": "protected static final String ACL_USER_READ = \"acl-user-read\";", "modifier": "protected static final", "type": "String", "declarator": "ACL_USER_READ = \"acl-user-read\"", "var_name": "ACL_USER_READ"}, {"original_string": "protected static final String ACL_USER_WRITE = \"acl-user-write\";", "modifier": "protected static final", "type": "String", "declarator": "ACL_USER_WRITE = \"acl-user-write\"", "var_name": "ACL_USER_WRITE"}, {"original_string": "protected static final String ACL_GROUP_READ = \"acl-group-read\";", "modifier": "protected static final", "type": "String", "declarator": "ACL_GROUP_READ = \"acl-group-read\"", "var_name": "ACL_GROUP_READ"}, {"original_string": "protected static final String ACL_GROUP_WRITE = \"acl-group-write\";", "modifier": "protected static final", "type": "String", "declarator": "ACL_GROUP_WRITE = \"acl-group-write\"", "var_name": "ACL_GROUP_WRITE"}, {"original_string": "protected static final String ACL_DELIM = \":\";", "modifier": "protected static final", "type": "String", "declarator": "ACL_DELIM = \":\"", "var_name": "ACL_DELIM"}, {"original_string": "protected final Logger log = LoggerFactory.getLogger(StorageProviderBase.class);", "modifier": "protected final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(StorageProviderBase.class)", "var_name": "log"}, {"original_string": "private StorageProvider wrappedStorageProvider;", "modifier": "private", "type": "StorageProvider", "declarator": "wrappedStorageProvider", "var_name": "wrappedStorageProvider"}], "methods": [{"identifier": "spaceExists", "parameters": "(String spaceId)", "modifiers": "protected abstract", "return": "boolean", "signature": "boolean spaceExists(String spaceId)", "full_signature": "protected abstract boolean spaceExists(String spaceId)", "class_method_signature": "StorageProviderBase.spaceExists(String spaceId)", "testcase": false, "constructor": false}, {"identifier": "removeSpace", "parameters": "(String spaceId)", "modifiers": "protected abstract", "return": "void", "signature": "void removeSpace(String spaceId)", "full_signature": "protected abstract void removeSpace(String spaceId)", "class_method_signature": "StorageProviderBase.removeSpace(String spaceId)", "testcase": false, "constructor": false}, {"identifier": "getAllSpaceProperties", "parameters": "(String spaceId)", "modifiers": "protected abstract", "return": "Map<String, String>", "signature": "Map<String, String> getAllSpaceProperties(String spaceId)", "full_signature": "protected abstract Map<String, String> getAllSpaceProperties(String spaceId)", "class_method_signature": "StorageProviderBase.getAllSpaceProperties(String spaceId)", "testcase": false, "constructor": false}, {"identifier": "doSetSpaceProperties", "parameters": "(String spaceId,\n                                                 Map<String, String> spaceProps)", "modifiers": "protected abstract", "return": "void", "signature": "void doSetSpaceProperties(String spaceId,\n                                                 Map<String, String> spaceProps)", "full_signature": "protected abstract void doSetSpaceProperties(String spaceId,\n                                                 Map<String, String> spaceProps)", "class_method_signature": "StorageProviderBase.doSetSpaceProperties(String spaceId,\n                                                 Map<String, String> spaceProps)", "testcase": false, "constructor": false}, {"identifier": "getSpaceProperties", "parameters": "(String spaceId)", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getSpaceProperties(String spaceId)", "full_signature": "public Map<String, String> getSpaceProperties(String spaceId)", "class_method_signature": "StorageProviderBase.getSpaceProperties(String spaceId)", "testcase": false, "constructor": false}, {"identifier": "setNewSpaceProperties", "parameters": "(String spaceId,\n                                      Map<String, String> spaceProperties)", "modifiers": "public", "return": "void", "signature": "void setNewSpaceProperties(String spaceId,\n                                      Map<String, String> spaceProperties)", "full_signature": "public void setNewSpaceProperties(String spaceId,\n                                      Map<String, String> spaceProperties)", "class_method_signature": "StorageProviderBase.setNewSpaceProperties(String spaceId,\n                                      Map<String, String> spaceProperties)", "testcase": false, "constructor": false}, {"identifier": "setNewSpaceProperties", "parameters": "(String spaceId,\n                                      Map<String, String> spaceProperties,\n                                      Map<String, AclType> spaceACLs)", "modifiers": "public", "return": "void", "signature": "void setNewSpaceProperties(String spaceId,\n                                      Map<String, String> spaceProperties,\n                                      Map<String, AclType> spaceACLs)", "full_signature": "public void setNewSpaceProperties(String spaceId,\n                                      Map<String, String> spaceProperties,\n                                      Map<String, AclType> spaceACLs)", "class_method_signature": "StorageProviderBase.setNewSpaceProperties(String spaceId,\n                                      Map<String, String> spaceProperties,\n                                      Map<String, AclType> spaceACLs)", "testcase": false, "constructor": false}, {"identifier": "getSpaceACLs", "parameters": "(String spaceId)", "modifiers": "public", "return": "Map<String, AclType>", "signature": "Map<String, AclType> getSpaceACLs(String spaceId)", "full_signature": "public Map<String, AclType> getSpaceACLs(String spaceId)", "class_method_signature": "StorageProviderBase.getSpaceACLs(String spaceId)", "testcase": false, "constructor": false}, {"identifier": "unpackACLs", "parameters": "(Map<String, String> spaceProps)", "modifiers": "protected", "return": "Map<String, AclType>", "signature": "Map<String, AclType> unpackACLs(Map<String, String> spaceProps)", "full_signature": "protected Map<String, AclType> unpackACLs(Map<String, String> spaceProps)", "class_method_signature": "StorageProviderBase.unpackACLs(Map<String, String> spaceProps)", "testcase": false, "constructor": false}, {"identifier": "setSpaceACLs", "parameters": "(String spaceId, Map<String, AclType> spaceACLs)", "modifiers": "public", "return": "void", "signature": "void setSpaceACLs(String spaceId, Map<String, AclType> spaceACLs)", "full_signature": "public void setSpaceACLs(String spaceId, Map<String, AclType> spaceACLs)", "class_method_signature": "StorageProviderBase.setSpaceACLs(String spaceId, Map<String, AclType> spaceACLs)", "testcase": false, "constructor": false}, {"identifier": "packACLs", "parameters": "(Map<String, AclType> spaceACLs)", "modifiers": "protected", "return": "Map<String, String>", "signature": "Map<String, String> packACLs(Map<String, AclType> spaceACLs)", "full_signature": "protected Map<String, String> packACLs(Map<String, AclType> spaceACLs)", "class_method_signature": "StorageProviderBase.packACLs(Map<String, AclType> spaceACLs)", "testcase": false, "constructor": false}, {"identifier": "includeACL", "parameters": "(Map<String, String> packedAcls,\n                            String acl,\n                            Set<String> listEntries)", "modifiers": "private", "return": "void", "signature": "void includeACL(Map<String, String> packedAcls,\n                            String acl,\n                            Set<String> listEntries)", "full_signature": "private void includeACL(Map<String, String> packedAcls,\n                            String acl,\n                            Set<String> listEntries)", "class_method_signature": "StorageProviderBase.includeACL(Map<String, String> packedAcls,\n                            String acl,\n                            Set<String> listEntries)", "testcase": false, "constructor": false}, {"identifier": "throwIfSpaceNotExist", "parameters": "(String spaceId)", "modifiers": "protected", "return": "void", "signature": "void throwIfSpaceNotExist(String spaceId)", "full_signature": "protected void throwIfSpaceNotExist(String spaceId)", "class_method_signature": "StorageProviderBase.throwIfSpaceNotExist(String spaceId)", "testcase": false, "constructor": false}, {"identifier": "throwIfSpaceNotExist", "parameters": "(String spaceId, boolean wait)", "modifiers": "protected", "return": "void", "signature": "void throwIfSpaceNotExist(String spaceId, boolean wait)", "full_signature": "protected void throwIfSpaceNotExist(String spaceId, boolean wait)", "class_method_signature": "StorageProviderBase.throwIfSpaceNotExist(String spaceId, boolean wait)", "testcase": false, "constructor": false}, {"identifier": "waitForSpaceAvailable", "parameters": "(String spaceId)", "modifiers": "private", "return": "void", "signature": "void waitForSpaceAvailable(String spaceId)", "full_signature": "private void waitForSpaceAvailable(String spaceId)", "class_method_signature": "StorageProviderBase.waitForSpaceAvailable(String spaceId)", "testcase": false, "constructor": false}, {"identifier": "deleteSpace", "parameters": "(String spaceId)", "modifiers": "public", "return": "void", "signature": "void deleteSpace(String spaceId)", "full_signature": "public void deleteSpace(String spaceId)", "class_method_signature": "StorageProviderBase.deleteSpace(String spaceId)", "testcase": false, "constructor": false}, {"identifier": "deleteSpaceSync", "parameters": "(String spaceId)", "modifiers": "public", "return": "void", "signature": "void deleteSpaceSync(String spaceId)", "full_signature": "public void deleteSpaceSync(String spaceId)", "class_method_signature": "StorageProviderBase.deleteSpaceSync(String spaceId)", "testcase": false, "constructor": false}, {"identifier": "getSpaceDeleteWorker", "parameters": "(String spaceId)", "modifiers": "public", "return": "SpaceDeleteWorker", "signature": "SpaceDeleteWorker getSpaceDeleteWorker(String spaceId)", "full_signature": "public SpaceDeleteWorker getSpaceDeleteWorker(String spaceId)", "class_method_signature": "StorageProviderBase.getSpaceDeleteWorker(String spaceId)", "testcase": false, "constructor": false}, {"identifier": "removeCalculatedProperties", "parameters": "(Map<String, String> properties)", "modifiers": "protected", "return": "Map<String, String>", "signature": "Map<String, String> removeCalculatedProperties(Map<String, String> properties)", "full_signature": "protected Map<String, String> removeCalculatedProperties(Map<String, String> properties)", "class_method_signature": "StorageProviderBase.removeCalculatedProperties(Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "setWrappedStorageProvider", "parameters": "(StorageProvider wrappedStorageProvider)", "modifiers": "public", "return": "void", "signature": "void setWrappedStorageProvider(StorageProvider wrappedStorageProvider)", "full_signature": "public void setWrappedStorageProvider(StorageProvider wrappedStorageProvider)", "class_method_signature": "StorageProviderBase.setWrappedStorageProvider(StorageProvider wrappedStorageProvider)", "testcase": false, "constructor": false}], "file": "storageprovider/src/main/java/org/duracloud/storage/provider/StorageProviderBase.java"}, "focal_method": {"identifier": "getSpaceACLs", "parameters": "(String spaceId)", "modifiers": "public", "return": "Map<String, AclType>", "body": "public Map<String, AclType> getSpaceACLs(String spaceId) {\n        Map<String, String> allProps = getAllSpaceProperties(spaceId);\n        return unpackACLs(allProps);\n    }", "signature": "Map<String, AclType> getSpaceACLs(String spaceId)", "full_signature": "public Map<String, AclType> getSpaceACLs(String spaceId)", "class_method_signature": "StorageProviderBase.getSpaceACLs(String spaceId)", "testcase": false, "constructor": false, "invocations": ["getAllSpaceProperties", "unpackACLs"]}, "repository": {"repo_id": 3337772, "url": "https://github.com/duracloud/duracloud", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 7, "size": 76851, "license": "licensed"}}