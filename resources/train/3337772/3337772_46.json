{"test_class": {"identifier": "AuditStorageProviderTest", "superclass": "extends EasyMockSupport", "interfaces": "", "fields": [{"original_string": "@Mock\n    private StorageProvider targetProvider;", "modifier": "@Mock\n    private", "type": "StorageProvider", "declarator": "targetProvider", "var_name": "targetProvider"}, {"original_string": "@Mock\n    private UserUtil userUtil;", "modifier": "@Mock\n    private", "type": "UserUtil", "declarator": "userUtil", "var_name": "userUtil"}, {"original_string": "@Mock\n    private TaskQueue taskQueue;", "modifier": "@Mock\n    private", "type": "TaskQueue", "declarator": "taskQueue", "var_name": "taskQueue"}, {"original_string": "@Mock\n    private ReadLogger readLogger;", "modifier": "@Mock\n    private", "type": "ReadLogger", "declarator": "readLogger", "var_name": "readLogger"}, {"original_string": "@Mock\n    private WriteLogger writeLogger;", "modifier": "@Mock\n    private", "type": "WriteLogger", "declarator": "writeLogger", "var_name": "writeLogger"}, {"original_string": "private String storeId = \"store-id\";", "modifier": "private", "type": "String", "declarator": "storeId = \"store-id\"", "var_name": "storeId"}, {"original_string": "private String storeType = \"store-type\";", "modifier": "private", "type": "String", "declarator": "storeType = \"store-type\"", "var_name": "storeType"}, {"original_string": "private String account = \"account\";", "modifier": "private", "type": "String", "declarator": "account = \"account\"", "var_name": "account"}, {"original_string": "private String spaceId = \"space-id\";", "modifier": "private", "type": "String", "declarator": "spaceId = \"space-id\"", "var_name": "spaceId"}, {"original_string": "private String prefix = \"prefix\";", "modifier": "private", "type": "String", "declarator": "prefix = \"prefix\"", "var_name": "prefix"}, {"original_string": "private long maxResults = 1;", "modifier": "private", "type": "long", "declarator": "maxResults = 1", "var_name": "maxResults"}, {"original_string": "private String marker = \"marker\";", "modifier": "private", "type": "String", "declarator": "marker = \"marker\"", "var_name": "marker"}, {"original_string": "private String contentId = \"content-id\";", "modifier": "private", "type": "String", "declarator": "contentId = \"content-id\"", "var_name": "contentId"}, {"original_string": "private String range = \"bytes=0-10\";", "modifier": "private", "type": "String", "declarator": "range = \"bytes=0-10\"", "var_name": "range"}, {"original_string": "private String user = \"user\";", "modifier": "private", "type": "String", "declarator": "user = \"user\"", "var_name": "user"}, {"original_string": "private String contentMimeType = \"content-mime\";", "modifier": "private", "type": "String", "declarator": "contentMimeType = \"content-mime\"", "var_name": "contentMimeType"}, {"original_string": "private long contentSize = 0;", "modifier": "private", "type": "long", "declarator": "contentSize = 0", "var_name": "contentSize"}, {"original_string": "private String contentChecksum = \"content-checksum\";", "modifier": "private", "type": "String", "declarator": "contentChecksum = \"content-checksum\"", "var_name": "contentChecksum"}, {"original_string": "private String sourceSpaceId = \"source-space-id\";", "modifier": "private", "type": "String", "declarator": "sourceSpaceId = \"source-space-id\"", "var_name": "sourceSpaceId"}, {"original_string": "private String sourceContentId = \"source-content-id\";", "modifier": "private", "type": "String", "declarator": "sourceContentId = \"source-content-id\"", "var_name": "sourceContentId"}, {"original_string": "@TestSubject\n    private AuditStorageProvider provider =\n        new AuditStorageProvider(targetProvider, account, storeId,\n                                 storeType, userUtil, taskQueue);", "modifier": "@TestSubject\n    private", "type": "AuditStorageProvider", "declarator": "provider =\n        new AuditStorageProvider(targetProvider, account, storeId,\n                                 storeType, userUtil, taskQueue)", "var_name": "provider"}], "file": "auditor/src/test/java/org/duracloud/audit/provider/AuditStorageProviderTest.java"}, "test_case": {"identifier": "testGetSpaceProperties", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetSpaceProperties() throws Exception {\n        Capture<Task> logCapture = mockReadLogCall();\n\n        EasyMock.expect(targetProvider.getSpaceProperties(spaceId))\n                .andReturn(new HashMap<String, String>());\n        replayAll();\n        provider.getSpaceProperties(spaceId);\n\n        verifyTask(logCapture.getValue(),\n                   AuditTask.ActionType.GET_SPACE_PROPERTIES.name());\n    }", "signature": "void testGetSpaceProperties()", "full_signature": "@Test public void testGetSpaceProperties()", "class_method_signature": "AuditStorageProviderTest.testGetSpaceProperties()", "testcase": true, "constructor": false, "invocations": ["mockReadLogCall", "andReturn", "expect", "getSpaceProperties", "replayAll", "getSpaceProperties", "verifyTask", "getValue", "name"]}, "focal_class": {"identifier": "AuditStorageProvider", "superclass": "", "interfaces": "implements StorageProvider", "fields": [{"original_string": "private StorageProvider target;", "modifier": "private", "type": "StorageProvider", "declarator": "target", "var_name": "target"}, {"original_string": "private String account;", "modifier": "private", "type": "String", "declarator": "account", "var_name": "account"}, {"original_string": "private String storeId;", "modifier": "private", "type": "String", "declarator": "storeId", "var_name": "storeId"}, {"original_string": "private String storeType;", "modifier": "private", "type": "String", "declarator": "storeType", "var_name": "storeType"}, {"original_string": "private UserUtil userUtil;", "modifier": "private", "type": "UserUtil", "declarator": "userUtil", "var_name": "userUtil"}, {"original_string": "private TaskQueue taskQueue;", "modifier": "private", "type": "TaskQueue", "declarator": "taskQueue", "var_name": "taskQueue"}, {"original_string": "private ReadLogger readLogger;", "modifier": "private", "type": "ReadLogger", "declarator": "readLogger", "var_name": "readLogger"}, {"original_string": "private WriteLogger writeLogger;", "modifier": "private", "type": "WriteLogger", "declarator": "writeLogger", "var_name": "writeLogger"}], "methods": [{"identifier": "AuditStorageProvider", "parameters": "(StorageProvider target,\n                                String account,\n                                String storeId,\n                                String storeType,\n                                UserUtil userUtil,\n                                TaskQueue taskQueue)", "modifiers": "public", "return": "", "signature": " AuditStorageProvider(StorageProvider target,\n                                String account,\n                                String storeId,\n                                String storeType,\n                                UserUtil userUtil,\n                                TaskQueue taskQueue)", "full_signature": "public  AuditStorageProvider(StorageProvider target,\n                                String account,\n                                String storeId,\n                                String storeType,\n                                UserUtil userUtil,\n                                TaskQueue taskQueue)", "class_method_signature": "AuditStorageProvider.AuditStorageProvider(StorageProvider target,\n                                String account,\n                                String storeId,\n                                String storeType,\n                                UserUtil userUtil,\n                                TaskQueue taskQueue)", "testcase": false, "constructor": true}, {"identifier": "setLoggers", "parameters": "(ReadLogger readLogger, WriteLogger writeLogger)", "modifiers": "protected", "return": "void", "signature": "void setLoggers(ReadLogger readLogger, WriteLogger writeLogger)", "full_signature": "protected void setLoggers(ReadLogger readLogger, WriteLogger writeLogger)", "class_method_signature": "AuditStorageProvider.setLoggers(ReadLogger readLogger, WriteLogger writeLogger)", "testcase": false, "constructor": false}, {"identifier": "submitWriteTask", "parameters": "(String action,\n                                 String spaceId,\n                                 String contentId,\n                                 String contentChecksum,\n                                 String contentMimetype,\n                                 String contentSize,\n                                 Map<String, String> contentProperties,\n                                 String spaceACLs,\n                                 String sourceSpaceId,\n                                 String sourceContentId)", "modifiers": "private", "return": "void", "signature": "void submitWriteTask(String action,\n                                 String spaceId,\n                                 String contentId,\n                                 String contentChecksum,\n                                 String contentMimetype,\n                                 String contentSize,\n                                 Map<String, String> contentProperties,\n                                 String spaceACLs,\n                                 String sourceSpaceId,\n                                 String sourceContentId)", "full_signature": "private void submitWriteTask(String action,\n                                 String spaceId,\n                                 String contentId,\n                                 String contentChecksum,\n                                 String contentMimetype,\n                                 String contentSize,\n                                 Map<String, String> contentProperties,\n                                 String spaceACLs,\n                                 String sourceSpaceId,\n                                 String sourceContentId)", "class_method_signature": "AuditStorageProvider.submitWriteTask(String action,\n                                 String spaceId,\n                                 String contentId,\n                                 String contentChecksum,\n                                 String contentMimetype,\n                                 String contentSize,\n                                 Map<String, String> contentProperties,\n                                 String spaceACLs,\n                                 String sourceSpaceId,\n                                 String sourceContentId)", "testcase": false, "constructor": false}, {"identifier": "submitReadTask", "parameters": "(String action,\n                                String spaceId,\n                                String contentId,\n                                String range)", "modifiers": "private", "return": "void", "signature": "void submitReadTask(String action,\n                                String spaceId,\n                                String contentId,\n                                String range)", "full_signature": "private void submitReadTask(String action,\n                                String spaceId,\n                                String contentId,\n                                String range)", "class_method_signature": "AuditStorageProvider.submitReadTask(String action,\n                                String spaceId,\n                                String contentId,\n                                String range)", "testcase": false, "constructor": false}, {"identifier": "getUserId", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getUserId()", "full_signature": "private String getUserId()", "class_method_signature": "AuditStorageProvider.getUserId()", "testcase": false, "constructor": false}, {"identifier": "getStorageProviderType", "parameters": "()", "modifiers": "@Override public", "return": "StorageProviderType", "signature": "StorageProviderType getStorageProviderType()", "full_signature": "@Override public StorageProviderType getStorageProviderType()", "class_method_signature": "AuditStorageProvider.getStorageProviderType()", "testcase": false, "constructor": false}, {"identifier": "getSpaces", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<String>", "signature": "Iterator<String> getSpaces()", "full_signature": "@Override public Iterator<String> getSpaces()", "class_method_signature": "AuditStorageProvider.getSpaces()", "testcase": false, "constructor": false}, {"identifier": "getSpaceContents", "parameters": "(String spaceId, String prefix)", "modifiers": "@Override public", "return": "Iterator<String>", "signature": "Iterator<String> getSpaceContents(String spaceId, String prefix)", "full_signature": "@Override public Iterator<String> getSpaceContents(String spaceId, String prefix)", "class_method_signature": "AuditStorageProvider.getSpaceContents(String spaceId, String prefix)", "testcase": false, "constructor": false}, {"identifier": "getSpaceContentsChunked", "parameters": "(String spaceId, String prefix,\n                                                long maxResults, String marker)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getSpaceContentsChunked(String spaceId, String prefix,\n                                                long maxResults, String marker)", "full_signature": "@Override public List<String> getSpaceContentsChunked(String spaceId, String prefix,\n                                                long maxResults, String marker)", "class_method_signature": "AuditStorageProvider.getSpaceContentsChunked(String spaceId, String prefix,\n                                                long maxResults, String marker)", "testcase": false, "constructor": false}, {"identifier": "getSpaceProperties", "parameters": "(String spaceId)", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getSpaceProperties(String spaceId)", "full_signature": "@Override public Map<String, String> getSpaceProperties(String spaceId)", "class_method_signature": "AuditStorageProvider.getSpaceProperties(String spaceId)", "testcase": false, "constructor": false}, {"identifier": "getSpaceACLs", "parameters": "(String spaceId)", "modifiers": "@Override public", "return": "Map<String, AclType>", "signature": "Map<String, AclType> getSpaceACLs(String spaceId)", "full_signature": "@Override public Map<String, AclType> getSpaceACLs(String spaceId)", "class_method_signature": "AuditStorageProvider.getSpaceACLs(String spaceId)", "testcase": false, "constructor": false}, {"identifier": "getContent", "parameters": "(String spaceId, String contentId)", "modifiers": "@Override public", "return": "RetrievedContent", "signature": "RetrievedContent getContent(String spaceId, String contentId)", "full_signature": "@Override public RetrievedContent getContent(String spaceId, String contentId)", "class_method_signature": "AuditStorageProvider.getContent(String spaceId, String contentId)", "testcase": false, "constructor": false}, {"identifier": "getContent", "parameters": "(String spaceId, String contentId, String range)", "modifiers": "@Override public", "return": "RetrievedContent", "signature": "RetrievedContent getContent(String spaceId, String contentId, String range)", "full_signature": "@Override public RetrievedContent getContent(String spaceId, String contentId, String range)", "class_method_signature": "AuditStorageProvider.getContent(String spaceId, String contentId, String range)", "testcase": false, "constructor": false}, {"identifier": "getContentProperties", "parameters": "(String spaceId,\n                                                    String contentId)", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getContentProperties(String spaceId,\n                                                    String contentId)", "full_signature": "@Override public Map<String, String> getContentProperties(String spaceId,\n                                                    String contentId)", "class_method_signature": "AuditStorageProvider.getContentProperties(String spaceId,\n                                                    String contentId)", "testcase": false, "constructor": false}, {"identifier": "createSpace", "parameters": "(String spaceId)", "modifiers": "@Override public", "return": "void", "signature": "void createSpace(String spaceId)", "full_signature": "@Override public void createSpace(String spaceId)", "class_method_signature": "AuditStorageProvider.createSpace(String spaceId)", "testcase": false, "constructor": false}, {"identifier": "deleteSpace", "parameters": "(String spaceId)", "modifiers": "@Override public", "return": "void", "signature": "void deleteSpace(String spaceId)", "full_signature": "@Override public void deleteSpace(String spaceId)", "class_method_signature": "AuditStorageProvider.deleteSpace(String spaceId)", "testcase": false, "constructor": false}, {"identifier": "setSpaceACLs", "parameters": "(String spaceId, Map<String, AclType> spaceACLs)", "modifiers": "@Override public", "return": "void", "signature": "void setSpaceACLs(String spaceId, Map<String, AclType> spaceACLs)", "full_signature": "@Override public void setSpaceACLs(String spaceId, Map<String, AclType> spaceACLs)", "class_method_signature": "AuditStorageProvider.setSpaceACLs(String spaceId, Map<String, AclType> spaceACLs)", "testcase": false, "constructor": false}, {"identifier": "addContent", "parameters": "(String spaceId,\n                             String contentId,\n                             String contentMimeType,\n                             Map<String, String> userProperties,\n                             long contentSize,\n                             String contentChecksum,\n                             InputStream content)", "modifiers": "@Override public", "return": "String", "signature": "String addContent(String spaceId,\n                             String contentId,\n                             String contentMimeType,\n                             Map<String, String> userProperties,\n                             long contentSize,\n                             String contentChecksum,\n                             InputStream content)", "full_signature": "@Override public String addContent(String spaceId,\n                             String contentId,\n                             String contentMimeType,\n                             Map<String, String> userProperties,\n                             long contentSize,\n                             String contentChecksum,\n                             InputStream content)", "class_method_signature": "AuditStorageProvider.addContent(String spaceId,\n                             String contentId,\n                             String contentMimeType,\n                             Map<String, String> userProperties,\n                             long contentSize,\n                             String contentChecksum,\n                             InputStream content)", "testcase": false, "constructor": false}, {"identifier": "copyContent", "parameters": "(String sourceSpaceId, String sourceContentId,\n                              String destSpaceId, String destContentId)", "modifiers": "@Override public", "return": "String", "signature": "String copyContent(String sourceSpaceId, String sourceContentId,\n                              String destSpaceId, String destContentId)", "full_signature": "@Override public String copyContent(String sourceSpaceId, String sourceContentId,\n                              String destSpaceId, String destContentId)", "class_method_signature": "AuditStorageProvider.copyContent(String sourceSpaceId, String sourceContentId,\n                              String destSpaceId, String destContentId)", "testcase": false, "constructor": false}, {"identifier": "deleteContent", "parameters": "(String spaceId, String contentId)", "modifiers": "@Override public", "return": "void", "signature": "void deleteContent(String spaceId, String contentId)", "full_signature": "@Override public void deleteContent(String spaceId, String contentId)", "class_method_signature": "AuditStorageProvider.deleteContent(String spaceId, String contentId)", "testcase": false, "constructor": false}, {"identifier": "setContentProperties", "parameters": "(String spaceId, String contentId,\n                                     Map<String, String> contentProperties)", "modifiers": "@Override public", "return": "void", "signature": "void setContentProperties(String spaceId, String contentId,\n                                     Map<String, String> contentProperties)", "full_signature": "@Override public void setContentProperties(String spaceId, String contentId,\n                                     Map<String, String> contentProperties)", "class_method_signature": "AuditStorageProvider.setContentProperties(String spaceId, String contentId,\n                                     Map<String, String> contentProperties)", "testcase": false, "constructor": false}], "file": "auditor/src/main/java/org/duracloud/audit/provider/AuditStorageProvider.java"}, "focal_method": {"identifier": "getSpaceProperties", "parameters": "(String spaceId)", "modifiers": "@Override public", "return": "Map<String, String>", "body": "@Override\n    public Map<String, String> getSpaceProperties(String spaceId) {\n        Map<String, String> spaceProps = target.getSpaceProperties(spaceId);\n\n        String action = AuditTask.ActionType.GET_SPACE_PROPERTIES.name();\n        submitReadTask(action, spaceId, AuditTask.NA, AuditTask.NA);\n        return spaceProps;\n    }", "signature": "Map<String, String> getSpaceProperties(String spaceId)", "full_signature": "@Override public Map<String, String> getSpaceProperties(String spaceId)", "class_method_signature": "AuditStorageProvider.getSpaceProperties(String spaceId)", "testcase": false, "constructor": false, "invocations": ["getSpaceProperties", "name", "submitReadTask"]}, "repository": {"repo_id": 3337772, "url": "https://github.com/duracloud/duracloud", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 7, "size": 76851, "license": "licensed"}}