{"test_class": {"identifier": "MacroNameValidatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "de.blizzy.documentr/src/test/java/de/blizzy/documentr/validation/MacroNameValidatorTest.java"}, "test_case": {"identifier": "isValid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void isValid() {\n\t\tMacroNameValidator validator = new MacroNameValidator();\n\t\tassertTrue(validator.isValid(null, null));\n\t\tassertTrue(validator.isValid(StringUtils.EMPTY, null));\n\t\tassertTrue(validator.isValid(\"macro\", null)); //$NON-NLS-1$\n\t\tassertTrue(validator.isValid(\"myMacro_123\", null)); //$NON-NLS-1$\n\t\tassertFalse(validator.isValid(\"macro.xyz\", null)); //$NON-NLS-1$\n\t\tassertFalse(validator.isValid(\"macro/xyz\", null)); //$NON-NLS-1$\n\t}", "signature": "void isValid()", "full_signature": "@Test public void isValid()", "class_method_signature": "MacroNameValidatorTest.isValid()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isValid", "assertTrue", "isValid", "assertTrue", "isValid", "assertTrue", "isValid", "assertFalse", "isValid", "assertFalse", "isValid"]}, "focal_class": {"identifier": "MacroNameValidator", "superclass": "", "interfaces": "implements ConstraintValidator<ValidMacroName, String>", "fields": [], "methods": [{"identifier": "initialize", "parameters": "(ValidMacroName annotation)", "modifiers": "@Override public", "return": "void", "signature": "void initialize(ValidMacroName annotation)", "full_signature": "@Override public void initialize(ValidMacroName annotation)", "class_method_signature": "MacroNameValidator.initialize(ValidMacroName annotation)", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "(String value, ConstraintValidatorContext context)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isValid(String value, ConstraintValidatorContext context)", "full_signature": "@Override public boolean isValid(String value, ConstraintValidatorContext context)", "class_method_signature": "MacroNameValidator.isValid(String value, ConstraintValidatorContext context)", "testcase": false, "constructor": false}], "file": "de.blizzy.documentr/src/main/java/de/blizzy/documentr/validation/MacroNameValidator.java"}, "focal_method": {"identifier": "isValid", "parameters": "(String value, ConstraintValidatorContext context)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean isValid(String value, ConstraintValidatorContext context) {\n\t\tif (StringUtils.isBlank(value)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn Pattern.matches(\"^\" + DocumentrConstants.MACRO_NAME_PATTERN + \"$\", value); //$NON-NLS-1$ //$NON-NLS-2$\n\t}", "signature": "boolean isValid(String value, ConstraintValidatorContext context)", "full_signature": "@Override public boolean isValid(String value, ConstraintValidatorContext context)", "class_method_signature": "MacroNameValidator.isValid(String value, ConstraintValidatorContext context)", "testcase": false, "constructor": false, "invocations": ["isBlank", "matches"]}, "repository": {"repo_id": 4238016, "url": "https://github.com/blizzy78/documentr", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 14, "size": 20324, "license": "licensed"}}