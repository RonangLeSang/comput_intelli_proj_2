{"test_class": {"identifier": "CsvWriterTest", "superclass": "", "interfaces": "", "fields": [], "file": "csv/src/test/java/org/apache/metamodel/csv/CsvWriterTest.java"}, "test_case": {"identifier": "testBuildLineWithSeparatorInValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuildLineWithSeparatorInValue() throws Exception {\n        CsvConfiguration configuration = new CsvConfiguration(1, \"UTF-8\", ',', '\"', '\\\\');\n        CsvWriter writer = new CsvWriter(configuration);\n        String line = writer.buildLine(new String[] {\"0\", \"1,2\", \"3'4\", \"5\\\\6\"});\n        assertEquals(\"\\\"0\\\",\\\"1,2\\\",\\\"3'4\\\",\\\"5\\\\\\\\6\\\"\\n\", line);\n    }", "signature": "void testBuildLineWithSeparatorInValue()", "full_signature": "@Test public void testBuildLineWithSeparatorInValue()", "class_method_signature": "CsvWriterTest.testBuildLineWithSeparatorInValue()", "testcase": true, "constructor": false, "invocations": ["buildLine", "assertEquals"]}, "focal_class": {"identifier": "CsvWriter", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int INITIAL_STRING_SIZE = 128;", "modifier": "public static final", "type": "int", "declarator": "INITIAL_STRING_SIZE = 128", "var_name": "INITIAL_STRING_SIZE"}, {"original_string": "private final CsvConfiguration _configuration;", "modifier": "private final", "type": "CsvConfiguration", "declarator": "_configuration", "var_name": "_configuration"}], "methods": [{"identifier": "CsvWriter", "parameters": "(CsvConfiguration configuration)", "modifiers": "public", "return": "", "signature": " CsvWriter(CsvConfiguration configuration)", "full_signature": "public  CsvWriter(CsvConfiguration configuration)", "class_method_signature": "CsvWriter.CsvWriter(CsvConfiguration configuration)", "testcase": false, "constructor": true}, {"identifier": "buildLine", "parameters": "(String[] nextLine)", "modifiers": "public", "return": "String", "signature": "String buildLine(String[] nextLine)", "full_signature": "public String buildLine(String[] nextLine)", "class_method_signature": "CsvWriter.buildLine(String[] nextLine)", "testcase": false, "constructor": false}, {"identifier": "valueNeedsEscaping", "parameters": "(String line)", "modifiers": "private", "return": "boolean", "signature": "boolean valueNeedsEscaping(String line)", "full_signature": "private boolean valueNeedsEscaping(String line)", "class_method_signature": "CsvWriter.valueNeedsEscaping(String line)", "testcase": false, "constructor": false}, {"identifier": "processValue", "parameters": "(String value)", "modifiers": "private", "return": "String", "signature": "String processValue(String value)", "full_signature": "private String processValue(String value)", "class_method_signature": "CsvWriter.processValue(String value)", "testcase": false, "constructor": false}], "file": "csv/src/main/java/org/apache/metamodel/csv/CsvWriter.java"}, "focal_method": {"identifier": "buildLine", "parameters": "(String[] nextLine)", "modifiers": "public", "return": "String", "body": "public String buildLine(String[] nextLine) {\n        final StringBuilder sb = new StringBuilder(INITIAL_STRING_SIZE);\n        for (int i = 0; i < nextLine.length; i++) {\n\n            if (i != 0) {\n                sb.append(_configuration.getSeparatorChar());\n            }\n\n            final String nextElement = nextLine[i];\n            if (nextElement == null) {\n                continue;\n            }\n            final char quoteChar = _configuration.getQuoteChar();\n            if (quoteChar != CsvConfiguration.NOT_A_CHAR) {\n                sb.append(quoteChar);\n            }\n\n            sb.append(valueNeedsEscaping(nextElement) ? processValue(nextElement) : nextElement);\n\n            if (quoteChar != CsvConfiguration.NOT_A_CHAR) {\n                sb.append(quoteChar);\n            }\n        }\n\n        sb.append('\\n');\n        return sb.toString();\n\n    }", "signature": "String buildLine(String[] nextLine)", "full_signature": "public String buildLine(String[] nextLine)", "class_method_signature": "CsvWriter.buildLine(String[] nextLine)", "testcase": false, "constructor": false, "invocations": ["append", "getSeparatorChar", "getQuoteChar", "append", "append", "valueNeedsEscaping", "processValue", "append", "append", "toString"]}, "repository": {"repo_id": 11943595, "url": "https://github.com/apache/metamodel", "language": "Java", "is_fork": false, "fork_count": 127, "stargazer_count": 129, "size": 7017, "license": "licensed"}}