{"test_class": {"identifier": "ElasticSearchDataContextTest", "superclass": "extends ESSingleNodeTestCase", "interfaces": "", "fields": [{"original_string": "private static final String indexName = \"twitter\";", "modifier": "private static final", "type": "String", "declarator": "indexName = \"twitter\"", "var_name": "indexName"}, {"original_string": "private static final String indexType1 = \"tweet1\";", "modifier": "private static final", "type": "String", "declarator": "indexType1 = \"tweet1\"", "var_name": "indexType1"}, {"original_string": "private static final String indexType2 = \"tweet2\";", "modifier": "private static final", "type": "String", "declarator": "indexType2 = \"tweet2\"", "var_name": "indexType2"}, {"original_string": "private static final String indexName2 = \"twitter2\";", "modifier": "private static final", "type": "String", "declarator": "indexName2 = \"twitter2\"", "var_name": "indexName2"}, {"original_string": "private static final String indexType3 = \"tweet3\";", "modifier": "private static final", "type": "String", "declarator": "indexType3 = \"tweet3\"", "var_name": "indexType3"}, {"original_string": "private static final String bulkIndexType = \"bulktype\";", "modifier": "private static final", "type": "String", "declarator": "bulkIndexType = \"bulktype\"", "var_name": "bulkIndexType"}, {"original_string": "private static final String peopleIndexType = \"peopletype\";", "modifier": "private static final", "type": "String", "declarator": "peopleIndexType = \"peopletype\"", "var_name": "peopleIndexType"}, {"original_string": "private static final String mapping =\n            \"{\\\"date_detection\\\":\\\"false\\\",\\\"properties\\\":{\\\"message\\\":{\\\"type\\\":\\\"keyword\\\",\\\"doc_values\\\":\\\"true\\\"}}}\";", "modifier": "private static final", "type": "String", "declarator": "mapping =\n            \"{\\\"date_detection\\\":\\\"false\\\",\\\"properties\\\":{\\\"message\\\":{\\\"type\\\":\\\"keyword\\\",\\\"doc_values\\\":\\\"true\\\"}}}\"", "var_name": "mapping"}, {"original_string": "private Client client;", "modifier": "private", "type": "Client", "declarator": "client", "var_name": "client"}, {"original_string": "private UpdateableDataContext dataContext;", "modifier": "private", "type": "UpdateableDataContext", "declarator": "dataContext", "var_name": "dataContext"}], "file": "elasticsearch/native/src/test/java/org/apache/metamodel/elasticsearch/nativeclient/ElasticSearchDataContextTest.java"}, "test_case": {"identifier": "testCreateTableAndInsertQuery", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateTableAndInsertQuery() throws Exception {\n        final Table table = createTable();\n        assertEquals(\"[\" + ElasticSearchUtils.FIELD_ID + \", foo, bar]\",\n                Arrays.toString(table.getColumnNames().toArray()));\n\n        final Column fooColumn = table.getColumnByName(\"foo\");\n        final Column idColumn = table.getPrimaryKeys().get(0);\n        assertEquals(\"Column[name=_id,columnNumber=0,type=STRING,nullable=null,nativeType=null,columnSize=null]\",\n                idColumn.toString());\n\n        dataContext.executeUpdate(new UpdateScript() {\n            @Override\n            public void run(UpdateCallback callback) {\n                callback.insertInto(table).value(\"foo\", \"hello\").value(\"bar\", 42).execute();\n                callback.insertInto(table).value(\"foo\", \"world\").value(\"bar\", 43).execute();\n            }\n        });\n\n        dataContext.refreshSchemas();\n\n        try (DataSet ds = dataContext.query().from(table).selectAll().orderBy(\"bar\").execute()) {\n            assertTrue(ds.next());\n            assertEquals(\"hello\", ds.getRow().getValue(fooColumn).toString());\n            assertNotNull(ds.getRow().getValue(idColumn));\n            assertTrue(ds.next());\n            assertEquals(\"world\", ds.getRow().getValue(fooColumn).toString());\n            assertNotNull(ds.getRow().getValue(idColumn));\n            assertFalse(ds.next());\n        }\n    }", "signature": "void testCreateTableAndInsertQuery()", "full_signature": "@Test public void testCreateTableAndInsertQuery()", "class_method_signature": "ElasticSearchDataContextTest.testCreateTableAndInsertQuery()", "testcase": true, "constructor": false, "invocations": ["createTable", "assertEquals", "toString", "toArray", "getColumnNames", "getColumnByName", "get", "getPrimaryKeys", "assertEquals", "toString", "executeUpdate", "execute", "value", "value", "insertInto", "execute", "value", "value", "insertInto", "refreshSchemas", "execute", "orderBy", "selectAll", "from", "query", "assertTrue", "next", "assertEquals", "toString", "getValue", "getRow", "assertNotNull", "getValue", "getRow", "assertTrue", "next", "assertEquals", "toString", "getValue", "getRow", "assertNotNull", "getValue", "getRow", "assertFalse", "next"]}, "focal_class": {"identifier": "ElasticSearchDataContext", "superclass": "extends AbstractElasticSearchDataContext", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ElasticSearchDataContext.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ElasticSearchDataContext.class)", "var_name": "logger"}, {"original_string": "private final Client elasticSearchClient;", "modifier": "private final", "type": "Client", "declarator": "elasticSearchClient", "var_name": "elasticSearchClient"}], "methods": [{"identifier": "ElasticSearchDataContext", "parameters": "(Client client, String indexName, SimpleTableDef... tableDefinitions)", "modifiers": "public", "return": "", "signature": " ElasticSearchDataContext(Client client, String indexName, SimpleTableDef... tableDefinitions)", "full_signature": "public  ElasticSearchDataContext(Client client, String indexName, SimpleTableDef... tableDefinitions)", "class_method_signature": "ElasticSearchDataContext.ElasticSearchDataContext(Client client, String indexName, SimpleTableDef... tableDefinitions)", "testcase": false, "constructor": true}, {"identifier": "ElasticSearchDataContext", "parameters": "(Client client, String indexName)", "modifiers": "public", "return": "", "signature": " ElasticSearchDataContext(Client client, String indexName)", "full_signature": "public  ElasticSearchDataContext(Client client, String indexName)", "class_method_signature": "ElasticSearchDataContext.ElasticSearchDataContext(Client client, String indexName)", "testcase": false, "constructor": true}, {"identifier": "detectSchema", "parameters": "()", "modifiers": "@Override protected", "return": "SimpleTableDef[]", "signature": "SimpleTableDef[] detectSchema()", "full_signature": "@Override protected SimpleTableDef[] detectSchema()", "class_method_signature": "ElasticSearchDataContext.detectSchema()", "testcase": false, "constructor": false}, {"identifier": "detectTable", "parameters": "(ClusterState cs, String indexName, String documentType)", "modifiers": "public static", "return": "SimpleTableDef", "signature": "SimpleTableDef detectTable(ClusterState cs, String indexName, String documentType)", "full_signature": "public static SimpleTableDef detectTable(ClusterState cs, String indexName, String documentType)", "class_method_signature": "ElasticSearchDataContext.detectTable(ClusterState cs, String indexName, String documentType)", "testcase": false, "constructor": false}, {"identifier": "materializeMainSchemaTable", "parameters": "(Table table, List<SelectItem> selectItems,\n            List<FilterItem> whereItems, int firstRow, int maxRows)", "modifiers": "@Override protected", "return": "DataSet", "signature": "DataSet materializeMainSchemaTable(Table table, List<SelectItem> selectItems,\n            List<FilterItem> whereItems, int firstRow, int maxRows)", "full_signature": "@Override protected DataSet materializeMainSchemaTable(Table table, List<SelectItem> selectItems,\n            List<FilterItem> whereItems, int firstRow, int maxRows)", "class_method_signature": "ElasticSearchDataContext.materializeMainSchemaTable(Table table, List<SelectItem> selectItems,\n            List<FilterItem> whereItems, int firstRow, int maxRows)", "testcase": false, "constructor": false}, {"identifier": "materializeMainSchemaTable", "parameters": "(Table table, List<Column> columns, int maxRows)", "modifiers": "@Override protected", "return": "DataSet", "signature": "DataSet materializeMainSchemaTable(Table table, List<Column> columns, int maxRows)", "full_signature": "@Override protected DataSet materializeMainSchemaTable(Table table, List<Column> columns, int maxRows)", "class_method_signature": "ElasticSearchDataContext.materializeMainSchemaTable(Table table, List<Column> columns, int maxRows)", "testcase": false, "constructor": false}, {"identifier": "createSearchRequest", "parameters": "(Table table, int firstRow, int maxRows, QueryBuilder queryBuilder)", "modifiers": "private", "return": "SearchRequestBuilder", "signature": "SearchRequestBuilder createSearchRequest(Table table, int firstRow, int maxRows, QueryBuilder queryBuilder)", "full_signature": "private SearchRequestBuilder createSearchRequest(Table table, int firstRow, int maxRows, QueryBuilder queryBuilder)", "class_method_signature": "ElasticSearchDataContext.createSearchRequest(Table table, int firstRow, int maxRows, QueryBuilder queryBuilder)", "testcase": false, "constructor": false}, {"identifier": "executePrimaryKeyLookupQuery", "parameters": "(Table table, List<SelectItem> selectItems, Column primaryKeyColumn,\n            Object keyValue)", "modifiers": "@Override protected", "return": "Row", "signature": "Row executePrimaryKeyLookupQuery(Table table, List<SelectItem> selectItems, Column primaryKeyColumn,\n            Object keyValue)", "full_signature": "@Override protected Row executePrimaryKeyLookupQuery(Table table, List<SelectItem> selectItems, Column primaryKeyColumn,\n            Object keyValue)", "class_method_signature": "ElasticSearchDataContext.executePrimaryKeyLookupQuery(Table table, List<SelectItem> selectItems, Column primaryKeyColumn,\n            Object keyValue)", "testcase": false, "constructor": false}, {"identifier": "executeCountQuery", "parameters": "(Table table, List<FilterItem> whereItems, boolean functionApproximationAllowed)", "modifiers": "@Override protected", "return": "Number", "signature": "Number executeCountQuery(Table table, List<FilterItem> whereItems, boolean functionApproximationAllowed)", "full_signature": "@Override protected Number executeCountQuery(Table table, List<FilterItem> whereItems, boolean functionApproximationAllowed)", "class_method_signature": "ElasticSearchDataContext.executeCountQuery(Table table, List<FilterItem> whereItems, boolean functionApproximationAllowed)", "testcase": false, "constructor": false}, {"identifier": "executeUpdate", "parameters": "(UpdateScript update)", "modifiers": "@Override public", "return": "UpdateSummary", "signature": "UpdateSummary executeUpdate(UpdateScript update)", "full_signature": "@Override public UpdateSummary executeUpdate(UpdateScript update)", "class_method_signature": "ElasticSearchDataContext.executeUpdate(UpdateScript update)", "testcase": false, "constructor": false}, {"identifier": "onSchemaCacheRefreshed", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void onSchemaCacheRefreshed()", "full_signature": "@Override protected void onSchemaCacheRefreshed()", "class_method_signature": "ElasticSearchDataContext.onSchemaCacheRefreshed()", "testcase": false, "constructor": false}, {"identifier": "getElasticSearchClient", "parameters": "()", "modifiers": "public", "return": "Client", "signature": "Client getElasticSearchClient()", "full_signature": "public Client getElasticSearchClient()", "class_method_signature": "ElasticSearchDataContext.getElasticSearchClient()", "testcase": false, "constructor": false}], "file": "elasticsearch/native/src/main/java/org/apache/metamodel/elasticsearch/nativeclient/ElasticSearchDataContext.java"}, "focal_method": {"identifier": "executeUpdate", "parameters": "(UpdateScript update)", "modifiers": "@Override public", "return": "UpdateSummary", "body": "@Override\n    public UpdateSummary executeUpdate(UpdateScript update) {\n        final ElasticSearchUpdateCallback callback = new ElasticSearchUpdateCallback(this);\n        update.run(callback);\n        callback.onExecuteUpdateFinished();\n        return callback.getUpdateSummary();\n    }", "signature": "UpdateSummary executeUpdate(UpdateScript update)", "full_signature": "@Override public UpdateSummary executeUpdate(UpdateScript update)", "class_method_signature": "ElasticSearchDataContext.executeUpdate(UpdateScript update)", "testcase": false, "constructor": false, "invocations": ["run", "onExecuteUpdateFinished", "getUpdateSummary"]}, "repository": {"repo_id": 11943595, "url": "https://github.com/apache/metamodel", "language": "Java", "is_fork": false, "fork_count": 127, "stargazer_count": 129, "size": 7017, "license": "licensed"}}