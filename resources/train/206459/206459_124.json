{"test_class": {"identifier": "TestDataFileRepairTool", "superclass": "", "interfaces": "", "fields": [{"original_string": "@ClassRule\n  public static TemporaryFolder DIR = new TemporaryFolder();", "modifier": "@ClassRule\n  public static", "type": "TemporaryFolder", "declarator": "DIR = new TemporaryFolder()", "var_name": "DIR"}, {"original_string": "private static final Schema SCHEMA = Schema.create(Schema.Type.STRING);", "modifier": "private static final", "type": "Schema", "declarator": "SCHEMA = Schema.create(Schema.Type.STRING)", "var_name": "SCHEMA"}, {"original_string": "private static File corruptBlockFile;", "modifier": "private static", "type": "File", "declarator": "corruptBlockFile", "var_name": "corruptBlockFile"}, {"original_string": "private static File corruptRecordFile;", "modifier": "private static", "type": "File", "declarator": "corruptRecordFile", "var_name": "corruptRecordFile"}, {"original_string": "private File repairedFile;", "modifier": "private", "type": "File", "declarator": "repairedFile", "var_name": "repairedFile"}], "file": "lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java"}, "test_case": {"identifier": "testRepairPriorCorruptRecord", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRepairPriorCorruptRecord() throws Exception {\n    String output = run(new DataFileRepairTool(), \"-o\", \"prior\", corruptRecordFile.getPath(), repairedFile.getPath());\n    assertTrue(output, output.contains(\"Number of blocks: 3 Number of corrupt blocks: 1\"));\n    assertTrue(output, output.contains(\"Number of records: 8 Number of corrupt records: 2\"));\n    checkFileContains(repairedFile, \"apple\", \"banana\", \"celery\", \"date\");\n  }", "signature": "void testRepairPriorCorruptRecord()", "full_signature": "@Test public void testRepairPriorCorruptRecord()", "class_method_signature": "TestDataFileRepairTool.testRepairPriorCorruptRecord()", "testcase": true, "constructor": false, "invocations": ["run", "getPath", "getPath", "assertTrue", "contains", "assertTrue", "contains", "checkFileContains"]}, "focal_class": {"identifier": "DataFileRepairTool", "superclass": "", "interfaces": "implements Tool", "fields": [{"original_string": "private static final Set<String> OPTIONS = new HashSet<>();", "modifier": "private static final", "type": "Set<String>", "declarator": "OPTIONS = new HashSet<>()", "var_name": "OPTIONS"}, {"original_string": "private static final String ALL = \"all\";", "modifier": "private static final", "type": "String", "declarator": "ALL = \"all\"", "var_name": "ALL"}, {"original_string": "private static final String PRIOR = \"prior\";", "modifier": "private static final", "type": "String", "declarator": "PRIOR = \"prior\"", "var_name": "PRIOR"}, {"original_string": "private static final String AFTER = \"after\";", "modifier": "private static final", "type": "String", "declarator": "AFTER = \"after\"", "var_name": "AFTER"}, {"original_string": "private static final String REPORT = \"report\";", "modifier": "private static final", "type": "String", "declarator": "REPORT = \"report\"", "var_name": "REPORT"}], "methods": [{"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "DataFileRepairTool.getName()", "testcase": false, "constructor": false}, {"identifier": "getShortDescription", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getShortDescription()", "full_signature": "@Override public String getShortDescription()", "class_method_signature": "DataFileRepairTool.getShortDescription()", "testcase": false, "constructor": false}, {"identifier": "printInfo", "parameters": "(PrintStream output)", "modifiers": "private", "return": "void", "signature": "void printInfo(PrintStream output)", "full_signature": "private void printInfo(PrintStream output)", "class_method_signature": "DataFileRepairTool.printInfo(PrintStream output)", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "(InputStream stdin, PrintStream out, PrintStream err, List<String> args)", "modifiers": "@Override public", "return": "int", "signature": "int run(InputStream stdin, PrintStream out, PrintStream err, List<String> args)", "full_signature": "@Override public int run(InputStream stdin, PrintStream out, PrintStream err, List<String> args)", "class_method_signature": "DataFileRepairTool.run(InputStream stdin, PrintStream out, PrintStream err, List<String> args)", "testcase": false, "constructor": false}, {"identifier": "recover", "parameters": "(String input, String output, PrintStream out, PrintStream err, boolean recoverPrior,\n      boolean recoverAfter)", "modifiers": "private", "return": "int", "signature": "int recover(String input, String output, PrintStream out, PrintStream err, boolean recoverPrior,\n      boolean recoverAfter)", "full_signature": "private int recover(String input, String output, PrintStream out, PrintStream err, boolean recoverPrior,\n      boolean recoverAfter)", "class_method_signature": "DataFileRepairTool.recover(String input, String output, PrintStream out, PrintStream err, boolean recoverPrior,\n      boolean recoverAfter)", "testcase": false, "constructor": false}, {"identifier": "innerRecover", "parameters": "(DataFileReader<Object> fileReader, DataFileWriter<Object> fileWriter, PrintStream out,\n      PrintStream err, boolean recoverPrior, boolean recoverAfter, Schema schema, File outfile)", "modifiers": "private", "return": "int", "signature": "int innerRecover(DataFileReader<Object> fileReader, DataFileWriter<Object> fileWriter, PrintStream out,\n      PrintStream err, boolean recoverPrior, boolean recoverAfter, Schema schema, File outfile)", "full_signature": "private int innerRecover(DataFileReader<Object> fileReader, DataFileWriter<Object> fileWriter, PrintStream out,\n      PrintStream err, boolean recoverPrior, boolean recoverAfter, Schema schema, File outfile)", "class_method_signature": "DataFileRepairTool.innerRecover(DataFileReader<Object> fileReader, DataFileWriter<Object> fileWriter, PrintStream out,\n      PrintStream err, boolean recoverPrior, boolean recoverAfter, Schema schema, File outfile)", "testcase": false, "constructor": false}, {"identifier": "reportOnly", "parameters": "(String input, PrintStream out, PrintStream err)", "modifiers": "private", "return": "int", "signature": "int reportOnly(String input, PrintStream out, PrintStream err)", "full_signature": "private int reportOnly(String input, PrintStream out, PrintStream err)", "class_method_signature": "DataFileRepairTool.reportOnly(String input, PrintStream out, PrintStream err)", "testcase": false, "constructor": false}, {"identifier": "recoverAfter", "parameters": "(String input, String output, PrintStream out, PrintStream err)", "modifiers": "private", "return": "int", "signature": "int recoverAfter(String input, String output, PrintStream out, PrintStream err)", "full_signature": "private int recoverAfter(String input, String output, PrintStream out, PrintStream err)", "class_method_signature": "DataFileRepairTool.recoverAfter(String input, String output, PrintStream out, PrintStream err)", "testcase": false, "constructor": false}, {"identifier": "recoverPrior", "parameters": "(String input, String output, PrintStream out, PrintStream err)", "modifiers": "private", "return": "int", "signature": "int recoverPrior(String input, String output, PrintStream out, PrintStream err)", "full_signature": "private int recoverPrior(String input, String output, PrintStream out, PrintStream err)", "class_method_signature": "DataFileRepairTool.recoverPrior(String input, String output, PrintStream out, PrintStream err)", "testcase": false, "constructor": false}, {"identifier": "recoverAll", "parameters": "(String input, String output, PrintStream out, PrintStream err)", "modifiers": "private", "return": "int", "signature": "int recoverAll(String input, String output, PrintStream out, PrintStream err)", "full_signature": "private int recoverAll(String input, String output, PrintStream out, PrintStream err)", "class_method_signature": "DataFileRepairTool.recoverAll(String input, String output, PrintStream out, PrintStream err)", "testcase": false, "constructor": false}], "file": "lang/java/tools/src/main/java/org/apache/avro/tool/DataFileRepairTool.java"}, "focal_method": {"identifier": "run", "parameters": "(InputStream stdin, PrintStream out, PrintStream err, List<String> args)", "modifiers": "@Override public", "return": "int", "body": "@Override\n  public int run(InputStream stdin, PrintStream out, PrintStream err, List<String> args) throws Exception {\n    if (args.size() < 2) {\n      printInfo(err);\n      return 1;\n    }\n    int index = 0;\n    String input = args.get(index);\n    String option = \"all\";\n    if (\"-o\".equals(input)) {\n      option = args.get(1);\n      index += 2;\n    }\n    if (!OPTIONS.contains(option) || (args.size() - index < 1)) {\n      printInfo(err);\n      return 1;\n    }\n    input = args.get(index++);\n    if (!REPORT.equals(option)) {\n      if (args.size() - index < 1) {\n        printInfo(err);\n        return 1;\n      }\n    }\n    if (ALL.equals(option)) {\n      return recoverAll(input, args.get(index), out, err);\n    } else if (PRIOR.equals(option)) {\n      return recoverPrior(input, args.get(index), out, err);\n    } else if (AFTER.equals(option)) {\n      return recoverAfter(input, args.get(index), out, err);\n    } else if (REPORT.equals(option)) {\n      return reportOnly(input, out, err);\n    } else {\n      return 1;\n    }\n  }", "signature": "int run(InputStream stdin, PrintStream out, PrintStream err, List<String> args)", "full_signature": "@Override public int run(InputStream stdin, PrintStream out, PrintStream err, List<String> args)", "class_method_signature": "DataFileRepairTool.run(InputStream stdin, PrintStream out, PrintStream err, List<String> args)", "testcase": false, "constructor": false, "invocations": ["size", "printInfo", "get", "equals", "get", "contains", "size", "printInfo", "get", "equals", "size", "printInfo", "equals", "recoverAll", "get", "equals", "recoverPrior", "get", "equals", "recoverAfter", "get", "equals", "reportOnly"]}, "repository": {"repo_id": 206459, "url": "https://github.com/apache/avro", "stars": 1473, "created": "5/21/2009 2:48:37 AM +00:00", "updates": "2020-01-23T18:50:51+00:00", "fork": "False", "license": "licensed"}}