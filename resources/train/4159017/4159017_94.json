{"test_class": {"identifier": "GrammarTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@org.junit.Rule\n  public ExpectedException thrown = ExpectedException.none();", "modifier": "@org.junit.Rule\n  public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}], "file": "sslr-core/src/test/java/com/sonar/sslr/api/GrammarTest.java"}, "test_case": {"identifier": "testGetAllRuleFields", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetAllRuleFields() {\n    List<Field> ruleFields = Grammar.getAllRuleFields(MyGrammar.class);\n    assertThat(ruleFields.size()).isEqualTo(5);\n  }", "signature": "void testGetAllRuleFields()", "full_signature": "@Test public void testGetAllRuleFields()", "class_method_signature": "GrammarTest.testGetAllRuleFields()", "testcase": true, "constructor": false, "invocations": ["getAllRuleFields", "isEqualTo", "assertThat", "size"]}, "focal_class": {"identifier": "Grammar", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Grammar", "parameters": "()", "modifiers": "public", "return": "", "signature": " Grammar()", "full_signature": "public  Grammar()", "class_method_signature": "Grammar.Grammar()", "testcase": false, "constructor": true}, {"identifier": "getRuleFields", "parameters": "(Class grammarClass)", "modifiers": "public static", "return": "List<Field>", "signature": "List<Field> getRuleFields(Class grammarClass)", "full_signature": "public static List<Field> getRuleFields(Class grammarClass)", "class_method_signature": "Grammar.getRuleFields(Class grammarClass)", "testcase": false, "constructor": false}, {"identifier": "getAllRuleFields", "parameters": "(Class grammarClass)", "modifiers": "public static", "return": "List<Field>", "signature": "List<Field> getAllRuleFields(Class grammarClass)", "full_signature": "public static List<Field> getAllRuleFields(Class grammarClass)", "class_method_signature": "Grammar.getAllRuleFields(Class grammarClass)", "testcase": false, "constructor": false}, {"identifier": "instanciateRuleFields", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void instanciateRuleFields()", "full_signature": "private void instanciateRuleFields()", "class_method_signature": "Grammar.instanciateRuleFields()", "testcase": false, "constructor": false}, {"identifier": "rule", "parameters": "(GrammarRuleKey ruleKey)", "modifiers": "public", "return": "Rule", "signature": "Rule rule(GrammarRuleKey ruleKey)", "full_signature": "public Rule rule(GrammarRuleKey ruleKey)", "class_method_signature": "Grammar.rule(GrammarRuleKey ruleKey)", "testcase": false, "constructor": false}, {"identifier": "getRootRule", "parameters": "()", "modifiers": "public abstract", "return": "Rule", "signature": "Rule getRootRule()", "full_signature": "public abstract Rule getRootRule()", "class_method_signature": "Grammar.getRootRule()", "testcase": false, "constructor": false}], "file": "sslr-core/src/main/java/com/sonar/sslr/api/Grammar.java"}, "focal_method": {"identifier": "getAllRuleFields", "parameters": "(Class grammarClass)", "modifiers": "public static", "return": "List<Field>", "body": "public static List<Field> getAllRuleFields(Class grammarClass) {\n    List<Field> ruleFields = getRuleFields(grammarClass);\n\n    Class superClass = grammarClass.getSuperclass();\n    while (superClass != null) {\n      ruleFields.addAll(getRuleFields(superClass));\n      superClass = superClass.getSuperclass();\n    }\n\n    return ruleFields;\n  }", "signature": "List<Field> getAllRuleFields(Class grammarClass)", "full_signature": "public static List<Field> getAllRuleFields(Class grammarClass)", "class_method_signature": "Grammar.getAllRuleFields(Class grammarClass)", "testcase": false, "constructor": false, "invocations": ["getRuleFields", "getSuperclass", "addAll", "getRuleFields", "getSuperclass"]}, "repository": {"repo_id": 4159017, "url": "https://github.com/SonarSource/sslr", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 51, "size": 5875, "license": "licensed"}}