{"test_class": {"identifier": "GrammarOperatorsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}], "file": "sslr-core/src/test/java/org/sonar/sslr/parser/GrammarOperatorsTest.java"}, "test_case": {"identifier": "illegal_argument", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void illegal_argument() {\n    thrown.expect(IllegalArgumentException.class);\n    thrown.expectMessage(\"java.lang.Object\");\n    GrammarOperators.sequence(new Object());\n  }", "signature": "void illegal_argument()", "full_signature": "@Test public void illegal_argument()", "class_method_signature": "GrammarOperatorsTest.illegal_argument()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "sequence"]}, "focal_class": {"identifier": "GrammarOperators", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "GrammarOperators", "parameters": "()", "modifiers": "private", "return": "", "signature": " GrammarOperators()", "full_signature": "private  GrammarOperators()", "class_method_signature": "GrammarOperators.GrammarOperators()", "testcase": false, "constructor": true}, {"identifier": "sequence", "parameters": "(Object... e)", "modifiers": "@Deprecated public static", "return": "Object", "signature": "Object sequence(Object... e)", "full_signature": "@Deprecated public static Object sequence(Object... e)", "class_method_signature": "GrammarOperators.sequence(Object... e)", "testcase": false, "constructor": false}, {"identifier": "firstOf", "parameters": "(Object... e)", "modifiers": "@Deprecated public static", "return": "Object", "signature": "Object firstOf(Object... e)", "full_signature": "@Deprecated public static Object firstOf(Object... e)", "class_method_signature": "GrammarOperators.firstOf(Object... e)", "testcase": false, "constructor": false}, {"identifier": "optional", "parameters": "(Object... e)", "modifiers": "@Deprecated public static", "return": "Object", "signature": "Object optional(Object... e)", "full_signature": "@Deprecated public static Object optional(Object... e)", "class_method_signature": "GrammarOperators.optional(Object... e)", "testcase": false, "constructor": false}, {"identifier": "oneOrMore", "parameters": "(Object... e)", "modifiers": "@Deprecated public static", "return": "Object", "signature": "Object oneOrMore(Object... e)", "full_signature": "@Deprecated public static Object oneOrMore(Object... e)", "class_method_signature": "GrammarOperators.oneOrMore(Object... e)", "testcase": false, "constructor": false}, {"identifier": "zeroOrMore", "parameters": "(Object... e)", "modifiers": "@Deprecated public static", "return": "Object", "signature": "Object zeroOrMore(Object... e)", "full_signature": "@Deprecated public static Object zeroOrMore(Object... e)", "class_method_signature": "GrammarOperators.zeroOrMore(Object... e)", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "(Object... e)", "modifiers": "@Deprecated public static", "return": "Object", "signature": "Object next(Object... e)", "full_signature": "@Deprecated public static Object next(Object... e)", "class_method_signature": "GrammarOperators.next(Object... e)", "testcase": false, "constructor": false}, {"identifier": "nextNot", "parameters": "(Object... e)", "modifiers": "@Deprecated public static", "return": "Object", "signature": "Object nextNot(Object... e)", "full_signature": "@Deprecated public static Object nextNot(Object... e)", "class_method_signature": "GrammarOperators.nextNot(Object... e)", "testcase": false, "constructor": false}, {"identifier": "regexp", "parameters": "(String regexp)", "modifiers": "@Deprecated public static", "return": "Object", "signature": "Object regexp(String regexp)", "full_signature": "@Deprecated public static Object regexp(String regexp)", "class_method_signature": "GrammarOperators.regexp(String regexp)", "testcase": false, "constructor": false}, {"identifier": "endOfInput", "parameters": "()", "modifiers": "@Deprecated public static", "return": "Object", "signature": "Object endOfInput()", "full_signature": "@Deprecated public static Object endOfInput()", "class_method_signature": "GrammarOperators.endOfInput()", "testcase": false, "constructor": false}, {"identifier": "nothing", "parameters": "()", "modifiers": "@Deprecated public static", "return": "Object", "signature": "Object nothing()", "full_signature": "@Deprecated public static Object nothing()", "class_method_signature": "GrammarOperators.nothing()", "testcase": false, "constructor": false}, {"identifier": "token", "parameters": "(TokenType tokenType, Object e)", "modifiers": "@Deprecated public static", "return": "Object", "signature": "Object token(TokenType tokenType, Object e)", "full_signature": "@Deprecated public static Object token(TokenType tokenType, Object e)", "class_method_signature": "GrammarOperators.token(TokenType tokenType, Object e)", "testcase": false, "constructor": false}, {"identifier": "commentTrivia", "parameters": "(Object e)", "modifiers": "@Deprecated public static", "return": "Object", "signature": "Object commentTrivia(Object e)", "full_signature": "@Deprecated public static Object commentTrivia(Object e)", "class_method_signature": "GrammarOperators.commentTrivia(Object e)", "testcase": false, "constructor": false}, {"identifier": "skippedTrivia", "parameters": "(Object e)", "modifiers": "@Deprecated public static", "return": "Object", "signature": "Object skippedTrivia(Object e)", "full_signature": "@Deprecated public static Object skippedTrivia(Object e)", "class_method_signature": "GrammarOperators.skippedTrivia(Object e)", "testcase": false, "constructor": false}, {"identifier": "convertToSingleExpression", "parameters": "(Object... elements)", "modifiers": "private static", "return": "ParsingExpression", "signature": "ParsingExpression convertToSingleExpression(Object... elements)", "full_signature": "private static ParsingExpression convertToSingleExpression(Object... elements)", "class_method_signature": "GrammarOperators.convertToSingleExpression(Object... elements)", "testcase": false, "constructor": false}, {"identifier": "convertToExpressions", "parameters": "(Object... elements)", "modifiers": "private static", "return": "ParsingExpression[]", "signature": "ParsingExpression[] convertToExpressions(Object... elements)", "full_signature": "private static ParsingExpression[] convertToExpressions(Object... elements)", "class_method_signature": "GrammarOperators.convertToExpressions(Object... elements)", "testcase": false, "constructor": false}, {"identifier": "convertToExpression", "parameters": "(Object e)", "modifiers": "private static", "return": "ParsingExpression", "signature": "ParsingExpression convertToExpression(Object e)", "full_signature": "private static ParsingExpression convertToExpression(Object e)", "class_method_signature": "GrammarOperators.convertToExpression(Object e)", "testcase": false, "constructor": false}], "file": "sslr-core/src/main/java/org/sonar/sslr/parser/GrammarOperators.java"}, "focal_method": {"identifier": "sequence", "parameters": "(Object... e)", "modifiers": "@Deprecated public static", "return": "Object", "body": "@Deprecated\n  public static Object sequence(Object... e) {\n    return convertToSingleExpression(e);\n  }", "signature": "Object sequence(Object... e)", "full_signature": "@Deprecated public static Object sequence(Object... e)", "class_method_signature": "GrammarOperators.sequence(Object... e)", "testcase": false, "constructor": false, "invocations": ["convertToSingleExpression"]}, "repository": {"repo_id": 4159017, "url": "https://github.com/SonarSource/sslr", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 51, "size": 5875, "license": "licensed"}}