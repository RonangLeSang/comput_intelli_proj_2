{"test_class": {"identifier": "SqliteUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "nusic-data-android/src/test/java/info/schnatterer/nusic/data/util/SqliteUtilTest.java"}, "test_case": {"identifier": "testToIntegerNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToIntegerNull() {\n        assertNull(SqliteUtil.toInteger(null));\n    }", "signature": "void testToIntegerNull()", "full_signature": "@Test public void testToIntegerNull()", "class_method_signature": "SqliteUtilTest.testToIntegerNull()", "testcase": true, "constructor": false, "invocations": ["assertNull", "toInteger"]}, "focal_class": {"identifier": "SqliteUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory\n            .getLogger(NusicDatabaseSqlite.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory\n            .getLogger(NusicDatabaseSqlite.class)", "var_name": "LOG"}, {"original_string": "public static final Integer FALSE = Integer.valueOf(0);", "modifier": "public static final", "type": "Integer", "declarator": "FALSE = Integer.valueOf(0)", "var_name": "FALSE"}, {"original_string": "public static final Integer TRUE = Integer.valueOf(1);", "modifier": "public static final", "type": "Integer", "declarator": "TRUE = Integer.valueOf(1)", "var_name": "TRUE"}], "methods": [{"identifier": "SqliteUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " SqliteUtil()", "full_signature": "private  SqliteUtil()", "class_method_signature": "SqliteUtil.SqliteUtil()", "testcase": false, "constructor": true}, {"identifier": "putIfNotNull", "parameters": "(ContentValues values, String column,\n            Object value)", "modifiers": "public static", "return": "void", "signature": "void putIfNotNull(ContentValues values, String column,\n            Object value)", "full_signature": "public static void putIfNotNull(ContentValues values, String column,\n            Object value)", "class_method_signature": "SqliteUtil.putIfNotNull(ContentValues values, String column,\n            Object value)", "testcase": false, "constructor": false}, {"identifier": "loadDate", "parameters": "(Cursor cursor, int index)", "modifiers": "public static", "return": "Date", "signature": "Date loadDate(Cursor cursor, int index)", "full_signature": "public static Date loadDate(Cursor cursor, int index)", "class_method_signature": "SqliteUtil.loadDate(Cursor cursor, int index)", "testcase": false, "constructor": false}, {"identifier": "loadBoolean", "parameters": "(Cursor cursor, int index)", "modifiers": "public static", "return": "Boolean", "signature": "Boolean loadBoolean(Cursor cursor, int index)", "full_signature": "public static Boolean loadBoolean(Cursor cursor, int index)", "class_method_signature": "SqliteUtil.loadBoolean(Cursor cursor, int index)", "testcase": false, "constructor": false}, {"identifier": "toBoolean", "parameters": "(Integer intValue)", "modifiers": "public static", "return": "Boolean", "signature": "Boolean toBoolean(Integer intValue)", "full_signature": "public static Boolean toBoolean(Integer intValue)", "class_method_signature": "SqliteUtil.toBoolean(Integer intValue)", "testcase": false, "constructor": false}, {"identifier": "toContentValues", "parameters": "(Map<String, Object> input)", "modifiers": "public static", "return": "ContentValues", "signature": "ContentValues toContentValues(Map<String, Object> input)", "full_signature": "public static ContentValues toContentValues(Map<String, Object> input)", "class_method_signature": "SqliteUtil.toContentValues(Map<String, Object> input)", "testcase": false, "constructor": false}, {"identifier": "toInteger", "parameters": "(Boolean boolValue)", "modifiers": "public static", "return": "Integer", "signature": "Integer toInteger(Boolean boolValue)", "full_signature": "public static Integer toInteger(Boolean boolValue)", "class_method_signature": "SqliteUtil.toInteger(Boolean boolValue)", "testcase": false, "constructor": false}, {"identifier": "loadInteger", "parameters": "(Cursor cursor, int index)", "modifiers": "public static", "return": "Integer", "signature": "Integer loadInteger(Cursor cursor, int index)", "full_signature": "public static Integer loadInteger(Cursor cursor, int index)", "class_method_signature": "SqliteUtil.loadInteger(Cursor cursor, int index)", "testcase": false, "constructor": false}, {"identifier": "loadLong", "parameters": "(Cursor cursor, int index)", "modifiers": "public static", "return": "Long", "signature": "Long loadLong(Cursor cursor, int index)", "full_signature": "public static Long loadLong(Cursor cursor, int index)", "class_method_signature": "SqliteUtil.loadLong(Cursor cursor, int index)", "testcase": false, "constructor": false}], "file": "nusic-data-android/src/main/java/info/schnatterer/nusic/data/util/SqliteUtil.java"}, "focal_method": {"identifier": "toInteger", "parameters": "(Boolean boolValue)", "modifiers": "public static", "return": "Integer", "body": "public static Integer toInteger(Boolean boolValue) {\n        if (boolValue == null) {\n            return null;\n        }\n        if (Boolean.FALSE.equals(boolValue)) {\n            return FALSE;\n        }\n        return TRUE;\n    }", "signature": "Integer toInteger(Boolean boolValue)", "full_signature": "public static Integer toInteger(Boolean boolValue)", "class_method_signature": "SqliteUtil.toInteger(Boolean boolValue)", "testcase": false, "constructor": false, "invocations": ["equals"]}, "repository": {"repo_id": 12520014, "url": "https://github.com/schnatterer/nusic", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 20, "size": 9123, "license": "licensed"}}