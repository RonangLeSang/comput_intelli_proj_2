{"test_class": {"identifier": "BPMN2ModelUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "bundles/org.savara.bpmn2.model/src/test/java/org/savara/bpmn2/model/util/BPMN2ModelUtilTest.java"}, "test_case": {"identifier": "testGetDefinitions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetDefinitions() {\n\t\tjava.io.InputStream is=\n\t\t\tClassLoader.getSystemResourceAsStream(\"testmodels/bpmn2/choreo/PurchaseGoods.bpmn\");\n\n\t\ttry {\n\t\t\torg.savara.bpmn2.model.TDefinitions defns=BPMN2ModelUtil.deserialize(is);\n\t\t\n\t\t\tif (defns == null) {\n\t\t\t\tfail(\"No definitions returned\");\n\t\t\t}\n\t\t\t\n\t\t\t// Validate by retrieving choreography\n\t\t\tboolean f_choreoFound=false;\n\t\t\t\n\t\t\tfor (JAXBElement<? extends TRootElement> elem : defns.getRootElement()) {\n\t\t\t\tif (elem.getDeclaredType() == TChoreography.class) {\n\t\t\t\t\tif (f_choreoFound) {\n\t\t\t\t\t\tfail(\"Should only be one choreography\");\n\t\t\t\t\t}\n\t\t\t\t\tf_choreoFound = true;\n\t\t\t\t} else if (elem.getDeclaredType() == TItemDefinition.class) {\n\t\t\t\t\tTItemDefinition itemdefn=(TItemDefinition)elem.getValue();\n\t\t\t\t\t\n\t\t\t\t\tif (itemdefn.getStructureRef() == null) {\n\t\t\t\t\t\tfail(\"Item definition structure ref is null\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (f_choreoFound == false) {\n\t\t\t\tfail(\"Choreography not found\");\n\t\t\t}\n\t\t\t\n\t\t} catch(Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tfail(\"Failed to load BPMN2 definition: \"+e);\n\t\t}\n\t}", "signature": "void testGetDefinitions()", "full_signature": "@Test public void testGetDefinitions()", "class_method_signature": "BPMN2ModelUtilTest.testGetDefinitions()", "testcase": true, "constructor": false, "invocations": ["getSystemResourceAsStream", "deserialize", "fail", "getRootElement", "getDeclaredType", "fail", "getDeclaredType", "getValue", "getStructureRef", "fail", "fail", "printStackTrace", "fail"]}, "focal_class": {"identifier": "BPMN2ModelUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG=Logger.getLogger(BPMN2ModelUtil.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG=Logger.getLogger(BPMN2ModelUtil.class.getName())", "var_name": "LOG"}], "methods": [{"identifier": "deserialize", "parameters": "(java.io.InputStream is)", "modifiers": "public static", "return": "TDefinitions", "signature": "TDefinitions deserialize(java.io.InputStream is)", "full_signature": "public static TDefinitions deserialize(java.io.InputStream is)", "class_method_signature": "BPMN2ModelUtil.deserialize(java.io.InputStream is)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(TDefinitions defns, java.io.OutputStream os)", "modifiers": "public static", "return": "void", "signature": "void serialize(TDefinitions defns, java.io.OutputStream os)", "full_signature": "public static void serialize(TDefinitions defns, java.io.OutputStream os)", "class_method_signature": "BPMN2ModelUtil.serialize(TDefinitions defns, java.io.OutputStream os)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(TDefinitions defns, java.io.OutputStream os,\n\t\t\t\t\tjava.lang.ClassLoader classLoader)", "modifiers": "public static", "return": "void", "signature": "void serialize(TDefinitions defns, java.io.OutputStream os,\n\t\t\t\t\tjava.lang.ClassLoader classLoader)", "full_signature": "public static void serialize(TDefinitions defns, java.io.OutputStream os,\n\t\t\t\t\tjava.lang.ClassLoader classLoader)", "class_method_signature": "BPMN2ModelUtil.serialize(TDefinitions defns, java.io.OutputStream os,\n\t\t\t\t\tjava.lang.ClassLoader classLoader)", "testcase": false, "constructor": false}], "file": "bundles/org.savara.bpmn2.model/src/main/java/org/savara/bpmn2/model/util/BPMN2ModelUtil.java"}, "focal_method": {"identifier": "deserialize", "parameters": "(java.io.InputStream is)", "modifiers": "public static", "return": "TDefinitions", "body": "public static TDefinitions deserialize(java.io.InputStream is) throws IOException {\n\t\tTDefinitions ret=null;\n\t\t\n\t\ttry {\n\t\t\tJAXBContext context = JAXBContext.newInstance(\"org.savara.bpmn2.model\",\n\t\t\t\t\tBPMN2ModelUtil.class.getClassLoader());\n\t\t\tUnmarshaller unmarshaller = context.createUnmarshaller();\n\t\t\t\n\t\t\t//note: setting schema to null will turn validator off\n\t\t\t//unmarshaller.setSchema(null);\n\t\t\tObject xmlObject = unmarshaller.unmarshal(is);\n\t\t\t\n\t\t\tif (xmlObject instanceof JAXBElement) {\n\t\t\t\tret = (TDefinitions)((JAXBElement<?>)xmlObject).getValue();\n\t\t\t}\n\t\t} catch(Exception e) {\n\t\t\tthrow new IOException(\"Failed to deserialize BPMN2 definitions\", e);\n\t\t}\n\t\t\n\t\treturn(ret);\n\t}", "signature": "TDefinitions deserialize(java.io.InputStream is)", "full_signature": "public static TDefinitions deserialize(java.io.InputStream is)", "class_method_signature": "BPMN2ModelUtil.deserialize(java.io.InputStream is)", "testcase": false, "constructor": false, "invocations": ["newInstance", "getClassLoader", "createUnmarshaller", "unmarshal", "getValue"]}, "repository": {"repo_id": 1387581, "url": "https://github.com/savara/savara-core", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 7354, "license": "licensed"}}