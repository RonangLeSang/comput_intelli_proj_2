{"test_class": {"identifier": "AnnotationProcessorTest", "superclass": "", "interfaces": "", "fields": [], "file": "bundles/org.savara.protocol/src/test/java/org/savara/protocol/parser/AnnotationProcessorTest.java"}, "test_case": {"identifier": "testProcessAnnotationWithParametersMissingComma", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testProcessAnnotationWithParametersMissingComma() {\n\t\tAnnotationProcessor processor=new AnnotationProcessor();\n\t\t\n\t\tString name=\"Interface\";\n\t\tString p1value=\"{http://www.example.org}Intf\";\n\t\tString p2value=\"MyOtherValue\";\n\t\t\n\t\tInteraction mobj=new Interaction();\n\t\t\n\t\tString annotationText=name+\"(p1=\"+p1value+\" p2=\"+p2value+\")\";\n\t\t\n\t\tCachedJournal journal=new CachedJournal();\n\t\t\n\t\tprocessor.getAnnotation(annotationText, mobj.getProperties(), journal);\n\t\t\n\t\tif (journal.hasErrors() == false) {\n\t\t\tfail(\"Error expected\");\n\t\t}\n\t}", "signature": "void testProcessAnnotationWithParametersMissingComma()", "full_signature": "@Test public void testProcessAnnotationWithParametersMissingComma()", "class_method_signature": "AnnotationProcessorTest.testProcessAnnotationWithParametersMissingComma()", "testcase": true, "constructor": false, "invocations": ["getAnnotation", "getProperties", "hasErrors", "fail"]}, "focal_class": {"identifier": "AnnotationProcessor", "superclass": "", "interfaces": "implements org.scribble.protocol.parser.AnnotationProcessor", "fields": [], "methods": [{"identifier": "getAnnotation", "parameters": "(String annotation, java.util.Map<String, Object> properties,\n\t\t\t\t\t\t\t\tJournal journal)", "modifiers": "public", "return": "Annotation", "signature": "Annotation getAnnotation(String annotation, java.util.Map<String, Object> properties,\n\t\t\t\t\t\t\t\tJournal journal)", "full_signature": "public Annotation getAnnotation(String annotation, java.util.Map<String, Object> properties,\n\t\t\t\t\t\t\t\tJournal journal)", "class_method_signature": "AnnotationProcessor.getAnnotation(String annotation, java.util.Map<String, Object> properties,\n\t\t\t\t\t\t\t\tJournal journal)", "testcase": false, "constructor": false}], "file": "bundles/org.savara.protocol/src/main/java/org/savara/protocol/parser/AnnotationProcessor.java"}, "focal_method": {"identifier": "getAnnotation", "parameters": "(String annotation, java.util.Map<String, Object> properties,\n\t\t\t\t\t\t\t\tJournal journal)", "modifiers": "public", "return": "Annotation", "body": "public Annotation getAnnotation(String annotation, java.util.Map<String, Object> properties,\n\t\t\t\t\t\t\t\tJournal journal) {\n\t\tjava.util.StringTokenizer st=new java.util.StringTokenizer(annotation); //, \"(),=\");\n\t\t\n\t\tString name=st.nextToken(\" (\");\n\t\t\n\t\tAnnotation an=new Annotation(name);\n\t\t\n\t\tif (st.hasMoreTokens()) {\n\t\t\tString token=st.nextToken(\"()\");\n\t\t\t\n\t\t\tif (token != null) {\n\t\t\t\tString[] props=token.split(\",\");\n\t\t\t\t\n\t\t\t\tfor (int i=0; i < props.length; i++) {\n\t\t\t\t\tString[] vals=props[i].split(\"=\");\n\t\t\t\t\t\n\t\t\t\t\tif (vals.length != 2) {\n\t\t\t\t\t\tjournal.error(\"Name/Value of annotation could not be derived\", properties);\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tan.getProperties().put(vals[0], vals[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Find position following annotation parameters\n\t\t\t\tint index=annotation.indexOf(token);\n\t\t\t\t\n\t\t\t\tif (index != -1) {\n\t\t\t\t\tindex = annotation.indexOf(')', index+token.length());\n\t\t\t\t\t\n\t\t\t\t\tif (index == -1) {\n\t\t\t\t\t\tjournal.error(\"')' not found in annotation\", properties);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjournal.error(\"'(' not found in annotation\", properties);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn(an);\n\t}", "signature": "Annotation getAnnotation(String annotation, java.util.Map<String, Object> properties,\n\t\t\t\t\t\t\t\tJournal journal)", "full_signature": "public Annotation getAnnotation(String annotation, java.util.Map<String, Object> properties,\n\t\t\t\t\t\t\t\tJournal journal)", "class_method_signature": "AnnotationProcessor.getAnnotation(String annotation, java.util.Map<String, Object> properties,\n\t\t\t\t\t\t\t\tJournal journal)", "testcase": false, "constructor": false, "invocations": ["nextToken", "hasMoreTokens", "nextToken", "split", "split", "error", "put", "getProperties", "indexOf", "indexOf", "length", "error", "error"]}, "repository": {"repo_id": 1387581, "url": "https://github.com/savara/savara-core", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 7354, "license": "licensed"}}